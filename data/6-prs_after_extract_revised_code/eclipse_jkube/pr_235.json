{"pr_number": 235, "pr_title": "unit tests for jkube-kit/common dir", "pr_createdAt": "2020-06-08T09:30:06Z", "pr_url": "https://github.com/eclipse/jkube/pull/235", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0Mjc1MQ==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437142751", "bodyText": "I think this can be simplified to assertFalse(isWindows())", "author": "rohanKanojia", "createdAt": "2020-06-09T05:17:46Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -62,4 +197,12 @@ public void testLoadTimestampShouldLoadFromFile() throws Exception {\n         // Then\n         assertThat(timestamp, equalTo(new Date(1445385600000L)));\n     }\n+\n+    @Test\n+    public  void testIsWindows(){\n+        //When\n+        boolean result = isWindows();\n+        //Then\n+        assertEquals(false,result);", "originalCommit": "258212278ef3333f42daffb005214fa9a9458971", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2NTA4Nw==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437165087", "bodyText": "Understood!", "author": "anandrkskd", "createdAt": "2020-06-09T06:26:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0Mjc1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex 9d51e6d9..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -198,11 +362,24 @@ public class EnvUtilTest {\n         assertThat(timestamp, equalTo(new Date(1445385600000L)));\n     }\n \n+    @Test\n+    public  void testIsWindowsFalse(){\n+        //Given\n+        System.setProperty(\"os.name\",\"random\");\n+        //When\n+        boolean result= EnvUtil.isWindows();\n+        //Then\n+        assertFalse(result);\n+    }\n+\n     @Test\n     public  void testIsWindows(){\n+        //Given\n+        System.setProperty(\"os.name\", \"windows\");\n         //When\n-        boolean result = isWindows();\n+        boolean result= EnvUtil.isWindows();\n         //Then\n-        assertEquals(false,result);\n+        assertTrue(result);\n     }\n+\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0MjkxMQ==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437142911", "bodyText": "remove this line", "author": "rohanKanojia", "createdAt": "2020-06-09T05:18:20Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,150 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n import java.util.Date;\n+import java.util.List;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result2 = EnvUtil.extractLargerVersion(versionA,null);\n+        String result3 = EnvUtil.extractLargerVersion(null,versionB);\n+        String result4 = EnvUtil.extractLargerVersion(versionA,versionB);\n+        String result5 = EnvUtil.extractLargerVersion(versionB,versionA);\n+        String result6 = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+        assertEquals(result2,versionA);\n+        assertEquals(result3,versionB);\n+        assertEquals(result4,versionA);\n+        assertEquals(result5,versionA);\n+        assertEquals(\"4.0.0.1\",result6);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result1 = EnvUtil.greaterOrEqualsVersion(versionA,versionB);\n+        boolean result2 = EnvUtil.greaterOrEqualsVersion(\"4.0.2\",versionA);\n+        boolean result3 = EnvUtil.greaterOrEqualsVersion(versionB,versionA);\n+        //Then\n+        assertTrue(result1);\n+        assertTrue(result2);\n+        assertFalse(result3);\n+    }\n+\n+    @Test\n+    public void testSplitOnLastColon() throws Exception{\n+        //Given\n+        List<String> list1 = new ArrayList<>();\n+        //List<String> list2 = new ArrayList<>();\n+        list1.add(\"element1:element2\");\n+        //list2.add(null);\n+        //When\n+        List<String[]> result1 = EnvUtil.splitOnLastColon(list1);\n+        //List<String[]> result2 = EnvUtil.splitOnLastColon(list2);\n+        //Then\n+        assertEquals(2,result1.get(0).length);\n+        //System.out.println(result2.get(0).length);\n+        //assertEquals(\"\",result2.get(0));\n+    }\n+\n+    /*\n+    @Test\n+    public void testSplitAtCommasAndTrim(){\n+        //Given\n+        Iterable<String>  strings = \"hello,world\";\n+        //When\n+        String[] resutl = EnvUtil.splitAtCommasAndTrim(strings);\n+\n+    }\n+\n+     */\n+\n+\n+    @Test\n+    public void testStringJoin(){\n+        //Given\n+        List<String> list = new ArrayList<>();\n+        String separator = \",\";\n+        list.add(\"element1\");\n+        list.add(\"element2\");\n+        //When\n+        String result = EnvUtil.stringJoin(list,separator);\n+        //Then\n+        assertEquals(\"element1,element2\",result);\n+    }\n+\n+    @Test\n+    public void testSplitOnSpaceWithEscape(){\n+        //Given\n+        String strings = \"hello world\";\n+        //when\n+        String[] result = EnvUtil.splitOnSpaceWithEscape(strings);\n+        //then\n+        //System.out.println(\"result:\"+ Arrays.toString(result));", "originalCommit": "258212278ef3333f42daffb005214fa9a9458971", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex 9d51e6d9..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0Mjk4NA==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437142984", "bodyText": "Please remove dead code", "author": "rohanKanojia", "createdAt": "2020-06-09T05:18:38Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,150 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n import java.util.Date;\n+import java.util.List;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result2 = EnvUtil.extractLargerVersion(versionA,null);\n+        String result3 = EnvUtil.extractLargerVersion(null,versionB);\n+        String result4 = EnvUtil.extractLargerVersion(versionA,versionB);\n+        String result5 = EnvUtil.extractLargerVersion(versionB,versionA);\n+        String result6 = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+        assertEquals(result2,versionA);\n+        assertEquals(result3,versionB);\n+        assertEquals(result4,versionA);\n+        assertEquals(result5,versionA);\n+        assertEquals(\"4.0.0.1\",result6);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result1 = EnvUtil.greaterOrEqualsVersion(versionA,versionB);\n+        boolean result2 = EnvUtil.greaterOrEqualsVersion(\"4.0.2\",versionA);\n+        boolean result3 = EnvUtil.greaterOrEqualsVersion(versionB,versionA);\n+        //Then\n+        assertTrue(result1);\n+        assertTrue(result2);\n+        assertFalse(result3);\n+    }\n+\n+    @Test\n+    public void testSplitOnLastColon() throws Exception{\n+        //Given\n+        List<String> list1 = new ArrayList<>();\n+        //List<String> list2 = new ArrayList<>();\n+        list1.add(\"element1:element2\");\n+        //list2.add(null);\n+        //When\n+        List<String[]> result1 = EnvUtil.splitOnLastColon(list1);\n+        //List<String[]> result2 = EnvUtil.splitOnLastColon(list2);\n+        //Then\n+        assertEquals(2,result1.get(0).length);\n+        //System.out.println(result2.get(0).length);\n+        //assertEquals(\"\",result2.get(0));\n+    }\n+\n+    /*\n+    @Test\n+    public void testSplitAtCommasAndTrim(){", "originalCommit": "258212278ef3333f42daffb005214fa9a9458971", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2NTUyOA==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437165528", "bodyText": "I was not sure how to test that portion of code so I commented it.", "author": "anandrkskd", "createdAt": "2020-06-09T06:27:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0Mjk4NA=="}], "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex 9d51e6d9..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0MzA0Ng==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437143046", "bodyText": "Please remove dead code", "author": "rohanKanojia", "createdAt": "2020-06-09T05:18:50Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,150 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n import java.util.Date;\n+import java.util.List;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result2 = EnvUtil.extractLargerVersion(versionA,null);\n+        String result3 = EnvUtil.extractLargerVersion(null,versionB);\n+        String result4 = EnvUtil.extractLargerVersion(versionA,versionB);\n+        String result5 = EnvUtil.extractLargerVersion(versionB,versionA);\n+        String result6 = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+        assertEquals(result2,versionA);\n+        assertEquals(result3,versionB);\n+        assertEquals(result4,versionA);\n+        assertEquals(result5,versionA);\n+        assertEquals(\"4.0.0.1\",result6);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result1 = EnvUtil.greaterOrEqualsVersion(versionA,versionB);\n+        boolean result2 = EnvUtil.greaterOrEqualsVersion(\"4.0.2\",versionA);\n+        boolean result3 = EnvUtil.greaterOrEqualsVersion(versionB,versionA);\n+        //Then\n+        assertTrue(result1);\n+        assertTrue(result2);\n+        assertFalse(result3);\n+    }\n+\n+    @Test\n+    public void testSplitOnLastColon() throws Exception{\n+        //Given\n+        List<String> list1 = new ArrayList<>();\n+        //List<String> list2 = new ArrayList<>();\n+        list1.add(\"element1:element2\");\n+        //list2.add(null);\n+        //When\n+        List<String[]> result1 = EnvUtil.splitOnLastColon(list1);\n+        //List<String[]> result2 = EnvUtil.splitOnLastColon(list2);\n+        //Then\n+        assertEquals(2,result1.get(0).length);\n+        //System.out.println(result2.get(0).length);", "originalCommit": "258212278ef3333f42daffb005214fa9a9458971", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex 9d51e6d9..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0MzIwMw==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437143203", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testGreaterOrEqualsVersion(){\n          \n          \n            \n                public void testGreaterOrEqualsVersion() {", "author": "rohanKanojia", "createdAt": "2020-06-09T05:19:26Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,150 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n import java.util.Date;\n+import java.util.List;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result2 = EnvUtil.extractLargerVersion(versionA,null);\n+        String result3 = EnvUtil.extractLargerVersion(null,versionB);\n+        String result4 = EnvUtil.extractLargerVersion(versionA,versionB);\n+        String result5 = EnvUtil.extractLargerVersion(versionB,versionA);\n+        String result6 = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+        assertEquals(result2,versionA);\n+        assertEquals(result3,versionB);\n+        assertEquals(result4,versionA);\n+        assertEquals(result5,versionA);\n+        assertEquals(\"4.0.0.1\",result6);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersion(){", "originalCommit": "258212278ef3333f42daffb005214fa9a9458971", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex 9d51e6d9..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NDAyNQ==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437144025", "bodyText": "I think assertEquals() expects expected item as the first argument and actual arguments as the second. You need to swap these", "author": "rohanKanojia", "createdAt": "2020-06-09T05:22:31Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,150 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n import java.util.Date;\n+import java.util.List;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result2 = EnvUtil.extractLargerVersion(versionA,null);\n+        String result3 = EnvUtil.extractLargerVersion(null,versionB);\n+        String result4 = EnvUtil.extractLargerVersion(versionA,versionB);\n+        String result5 = EnvUtil.extractLargerVersion(versionB,versionA);\n+        String result6 = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+        assertEquals(result2,versionA);\n+        assertEquals(result3,versionB);\n+        assertEquals(result4,versionA);\n+        assertEquals(result5,versionA);", "originalCommit": "258212278ef3333f42daffb005214fa9a9458971", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2NjQ2OA==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r437166468", "bodyText": "Understood", "author": "anandrkskd", "createdAt": "2020-06-09T06:30:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NDAyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex 9d51e6d9..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MDc2Ng==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439960766", "bodyText": "Please, remove the comments:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Given\n          \n          \n            \n                    // Both version are null\n          \n          \n            \n                    //When\n          \n          \n            \n                    //Then\n          \n          \n            \n                    assertNull(EnvUtil.extractLargerVersion(null,null));\n          \n          \n            \n                    assertNull(EnvUtil.extractLargerVersion(null,null));\n          \n      \n    \n    \n  \n\nOr replace by  declarative code:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Given\n          \n          \n            \n                    // Both version are null\n          \n          \n            \n                    //When\n          \n          \n            \n                    //Then\n          \n          \n            \n                    assertNull(EnvUtil.extractLargerVersion(null,null));\n          \n          \n            \n                    //Given\n          \n          \n            \n                    var v1 = null;\n          \n          \n            \n                    var v2 = null;\n          \n          \n            \n                    //When\n          \n          \n            \n                    var result = EnvUtil.extractLargerVersion(v1, v2);\n          \n          \n            \n                    //Then\n          \n          \n            \n                    assertNull(result);", "author": "manusa", "createdAt": "2020-06-15T06:45:29Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));", "originalCommit": "f44537d5c7bb854b8ed096342c8685925dfa0138", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex fa12d138..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MDk3Nw==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439960977", "bodyText": "nit, maybe you don't need to write // Given... when... Then when test statements are one-liners.", "author": "rohanKanojia", "createdAt": "2020-06-15T06:45:57Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then", "originalCommit": "f44537d5c7bb854b8ed096342c8685925dfa0138", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex fa12d138..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTE0NA==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439961144", "bodyText": "I don't think you need to add this comment since test name indicates the same", "author": "rohanKanojia", "createdAt": "2020-06-15T06:46:20Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null", "originalCommit": "f44537d5c7bb854b8ed096342c8685925dfa0138", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex fa12d138..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTM2OQ==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439961369", "bodyText": "Seems like a copy-paste leftover\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String versionB = \"3.1.1.0\";\n          \n          \n            \n                    //When\n          \n          \n            \n                    String result = EnvUtil.extractLargerVersion(versionA,null);\n          \n          \n            \n                    String versionB = null;\n          \n          \n            \n                    //When\n          \n          \n            \n                    String result = EnvUtil.extractLargerVersion(versionA, versionB);", "author": "manusa", "createdAt": "2020-06-15T06:46:56Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenBIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,null);", "originalCommit": "f44537d5c7bb854b8ed096342c8685925dfa0138", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex fa12d138..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTYxNg==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439961616", "bodyText": "Seems like a copy-paste leftover\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Given\n          \n          \n            \n                    String versionA = \"4.0.2\";\n          \n          \n            \n                    String versionB = \"3.1.1.0\";\n          \n          \n            \n                    //When\n          \n          \n            \n                    String result = EnvUtil.extractLargerVersion(null,versionB);\n          \n          \n            \n                    //Given\n          \n          \n            \n                    String versionA = null;\n          \n          \n            \n                    String versionB = \"3.1.1.0\";\n          \n          \n            \n                    //When\n          \n          \n            \n                    String result = EnvUtil.extractLargerVersion(versionA, versionB);", "author": "manusa", "createdAt": "2020-06-15T06:47:36Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenBIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,null);\n+        //Then\n+        assertEquals( versionA, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(null,versionB);", "originalCommit": "f44537d5c7bb854b8ed096342c8685925dfa0138", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex fa12d138..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTk1OA==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439961958", "bodyText": "This test is redundant/duplicate of testExtractLargerVersion()", "author": "manusa", "createdAt": "2020-06-15T06:48:29Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenBIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,null);\n+        //Then\n+        assertEquals( versionA, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(null,versionB);\n+        //Then\n+        assertEquals( versionB, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAisGreater(){", "originalCommit": "f44537d5c7bb854b8ed096342c8685925dfa0138", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex fa12d138..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MjkxMA==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439962910", "bodyText": "This is very bad, try not to use this in tests ever. I don't even see the purpose of this sleep/wait in the test.", "author": "manusa", "createdAt": "2020-06-15T06:50:45Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -23,15 +23,320 @@\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n+import static org.eclipse.jkube.kit.common.util.EnvUtil.isWindows;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n+import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n-import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        //Given\n+        // Both version are null\n+        //When\n+        //Then\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenBIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,null);\n+        //Then\n+        assertEquals( versionA, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAIsNull(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(null,versionB);\n+        //Then\n+        assertEquals( versionB, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAisGreater(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,versionB);\n+        //Then\n+        assertEquals( versionA, result);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion(){\n+        //Given\n+        //When\n+        String result = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertEquals(\"4.0.0.1\",result);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenTrue(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result1 = EnvUtil.greaterOrEqualsVersion(versionA,versionB);\n+        //Then\n+        assertTrue(result1);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenEqual() {\n+        //Given\n+        String versionA = \"4.0.2\";\n+        //When\n+        boolean result2 = EnvUtil.greaterOrEqualsVersion(\"4.0.2\", versionA);\n+        //Then\n+        assertTrue(result2);\n+    }\n+\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenFalse(){\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result3 = EnvUtil.greaterOrEqualsVersion(versionB,versionA);\n+        //Then\n+        assertFalse(result3);\n+    }\n+\n+    @Test\n+    public void testSplitOnLastColonWhenNotNull() {\n+        // Given\n+        List<String> list1 = Collections.singletonList(\"element1:element2\");\n+        // When\n+        List<String[]> result1 = EnvUtil.splitOnLastColon(list1);\n+        // Then\n+        assertEquals(1, result1.size());\n+        assertEquals(2,result1.get(0).length);\n+        assertArrayEquals(new String[]{\"element1\", \"element2\"}, result1.get(0));\n+    }\n+\n+    @Test\n+    public void testSplitOnLastColonWhenNull() {\n+        // Given\n+        List<String> list2 = null;\n+        // When\n+        List<String[]> result2 = EnvUtil.splitOnLastColon(list2);\n+        // Then\n+        assertTrue(result2.isEmpty());\n+    }\n+\n+    @Test\n+    public void testRemoveEmptyEntrieWhenNotNull(){\n+        //Given\n+        List<String>  string1 = new ArrayList<>();\n+        string1.add(\" set \");\n+        string1.add(\" set2  \");\n+        string1.add(\"\");\n+        //When\n+        List<String>  result1 = EnvUtil.removeEmptyEntries(string1);\n+        //Then\n+        assertArrayEquals( new String[]{\"set\", \"set2\"} ,result1.toArray());\n+    }\n+\n+    @Test\n+    public void testRemoveEmptyEntriesWhenNull(){\n+        //Given\n+        List<String>  string2 = new ArrayList<>();\n+        string2.add(null);\n+        //When\n+        List<String>  result2 = EnvUtil.removeEmptyEntries(string2);\n+        //Then\n+        assertTrue(result2.isEmpty());\n+    }\n+\n+\n+    @Test\n+    public void testSplitAtCommasAndTrimWhenNotNull(){\n+        //Given\n+        Iterable<String>  strings1 = Collections.singleton(\"hello,world\");\n+        //When\n+        List<String> result1 = EnvUtil.splitAtCommasAndTrim(strings1);\n+        //Then\n+        assertEquals(2,result1.size());\n+        assertEquals(\"world\", result1.get(1));\n+        }\n+\n+    @Test\n+    public void testSplitAtCommasAndTrimWhenNull(){\n+        //Given\n+        Iterable<String>  strings2 = Collections.singleton(null);\n+        //When\n+        List<String> result2 = EnvUtil.splitAtCommasAndTrim(strings2);\n+        //Then\n+        assertTrue(result2.isEmpty());\n+    }\n+\n+    @Test\n+    public void testExtractFromPropertiesAsList() {\n+        //Given\n+        String string = \"key\";\n+        Properties properties = new Properties();\n+        properties.put(\"key.name\",\"value\");\n+        properties.put(\"key.value\",\"valu\");\n+        properties.put(\"art\",\"id\");\n+        properties.put(\"note\",\"bool\");\n+        properties.put(\"key._combine\",\"bool\");\n+        //When\n+        List<String> result = EnvUtil.extractFromPropertiesAsList(string,properties);\n+        //Then\n+        assertEquals(2,result.size());\n+        assertArrayEquals(new String[]{\"valu\", \"value\"}, result.toArray());\n+    }\n+\n+    @Test\n+    public void testExtractFromPropertiesAsMap(){\n+        //Given\n+        String prefix = \"key\";\n+        Properties properties = new Properties();\n+        properties.put(\"key.name\",\"value\");\n+        properties.put(\"key.value\",\"valu\");\n+        properties.put(\"art\",\"id\");\n+        properties.put(\"note\",\"bool\");\n+        properties.put(\"key._combine\",\"bool\");\n+        //when\n+        Map<String, String> result = EnvUtil.extractFromPropertiesAsMap(prefix,properties);\n+        //Then\n+        assertEquals(2 ,result.size());\n+        assertEquals(\"value\",result.get(\"name\"));\n+    }\n+\n+    @Test\n+    public void testFormatDurationTill() throws InterruptedException {\n+        long startTime = System.currentTimeMillis();\n+        // Wait for 200 milliseconds\n+        Thread.sleep(200L);", "originalCommit": "f44537d5c7bb854b8ed096342c8685925dfa0138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MzYwMw==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439963603", "bodyText": "I suggested him to use Thread.sleep() since the test is measuring time duration since a specified value", "author": "rohanKanojia", "createdAt": "2020-06-15T06:52:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MjkxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2NTQ1OA==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439965458", "bodyText": "Never use Thread.sleep in tests!\nFor this test, I don't even understand why we are using system.currentTimeMillis();, but if this is really necessary, then you can simply replace by:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Thread.sleep(200L);\n          \n          \n            \n            long startTime = System.currentTimeMillis() - 200L;\n          \n      \n    \n    \n  \n\nSome quick Googled sources with reasons why you shouldn't (although there are maaaany bad reasons to do so)\n\nhttp://www.kyleblaney.com/junit-best-practices#:~:text=Do%20not%20use%20Thread.&text=When%20a%20unit%20test%20uses,the%20production%20code%20is%20broken.\nhttps://laurentkempe.com/2012/11/20/Using-ThreadSleep-in-unit-test-A-good-idea/", "author": "manusa", "createdAt": "2020-06-15T06:57:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MjkxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2NjYzNg==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439966636", "bodyText": "ohk \ud83d\ude10 .", "author": "rohanKanojia", "createdAt": "2020-06-15T07:00:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MjkxMA=="}], "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex fa12d138..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -16,6 +16,7 @@ package org.eclipse.jkube.kit.common.util;\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MzM2Mg==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r439963362", "bodyText": "Platform dependent test. Try to make it platform independent and provide two tests, one that verifies it is windows and one that verifies it's not.", "author": "manusa", "createdAt": "2020-06-15T06:51:48Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -62,4 +367,10 @@ public void testLoadTimestampShouldLoadFromFile() throws Exception {\n         // Then\n         assertThat(timestamp, equalTo(new Date(1445385600000L)));\n     }\n+\n+    @Test\n+    public  void testIsWindows(){\n+        //Then\n+        assertEquals(false,isWindows());", "originalCommit": "f44537d5c7bb854b8ed096342c8685925dfa0138", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e6d224850e9478c04ca64179faa3e982e24a123", "chunk": "diff --git a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\nindex fa12d138..926c4211 100644\n--- a/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n+++ b/jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java\n\n@@ -368,9 +362,24 @@ public class EnvUtilTest {\n         assertThat(timestamp, equalTo(new Date(1445385600000L)));\n     }\n \n+    @Test\n+    public  void testIsWindowsFalse(){\n+        //Given\n+        System.setProperty(\"os.name\",\"random\");\n+        //When\n+        boolean result= EnvUtil.isWindows();\n+        //Then\n+        assertFalse(result);\n+    }\n+\n     @Test\n     public  void testIsWindows(){\n+        //Given\n+        System.setProperty(\"os.name\", \"windows\");\n+        //When\n+        boolean result= EnvUtil.isWindows();\n         //Then\n-        assertEquals(false,isWindows());\n+        assertTrue(result);\n     }\n+\n }\n"}}, {"oid": "2e6d224850e9478c04ca64179faa3e982e24a123", "url": "https://github.com/eclipse/jkube/commit/2e6d224850e9478c04ca64179faa3e982e24a123", "message": "Unit Test added for EnvUtils\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>", "committedDate": "2020-06-18T18:20:31Z", "type": "forcePushed"}, {"oid": "805f4c9740117a0f97430829cbb7f1777adf5447", "url": "https://github.com/eclipse/jkube/commit/805f4c9740117a0f97430829cbb7f1777adf5447", "message": "Unit test added\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>", "committedDate": "2020-06-19T06:35:59Z", "type": "commit"}, {"oid": "805f4c9740117a0f97430829cbb7f1777adf5447", "url": "https://github.com/eclipse/jkube/commit/805f4c9740117a0f97430829cbb7f1777adf5447", "message": "Unit test added\n\nSigned-off-by: anandrkskd <anandrkskd@gmail.com>", "committedDate": "2020-06-19T06:35:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2OTY5NQ==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r442669695", "bodyText": "Why are we ignoring this test?", "author": "rohanKanojia", "createdAt": "2020-06-19T07:09:27Z", "path": "jkube-kit/common/src/test/java/org/eclipse/jkube/kit/common/util/EnvUtilTest.java", "diffHunk": "@@ -16,33 +16,332 @@\n import mockit.Expectations;\n import mockit.Mocked;\n import mockit.Verifications;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n+import static org.eclipse.jkube.kit.common.util.EnvUtil.firstRegistryOf;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.loadTimestamp;\n import static org.eclipse.jkube.kit.common.util.EnvUtil.storeTimestamp;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.core.IsEqual.equalTo;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n \n public class EnvUtilTest {\n \n+    @Test\n+    public void testConvertTcpToHttpsUrl() {\n+        // Given\n+        String urlWithHttpsPort = \"tcp://0.0.0.0:2376\";\n+        // When\n+        String result1 = EnvUtil.convertTcpToHttpUrl(urlWithHttpsPort);\n+        // Then\n+        assertEquals(\"https://0.0.0.0:2376\", result1);\n+    }\n+\n+    @Test\n+    public void testConvertTcpToHttpUrl() {\n+        // Given\n+        String urlWithHttpPort=\"tcp://0.0.0.0:2375\";\n+        // When\n+        String result2 = EnvUtil.convertTcpToHttpUrl(urlWithHttpPort);\n+        // Then\n+        assertEquals(\"http://0.0.0.0:2375\", result2);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersionWhenBothNull(){\n+        assertNull(EnvUtil.extractLargerVersion(null,null));\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenBIsNull() {\n+        //Given\n+        String versionA = \"4.0.2\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(versionA,null);\n+        //Then\n+        assertEquals( versionA, result);\n+    }\n+    @Test\n+    public void testExtractLargerVersionWhenAIsNull() {\n+        //Given\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        String result = EnvUtil.extractLargerVersion(null,versionB);\n+        //Then\n+        assertEquals( versionB, result);\n+    }\n+\n+    @Test\n+    public void testExtractLargerVersion() {\n+        //Given\n+        //When\n+        String result = EnvUtil.extractLargerVersion(\"4.0.0.1\",\"4.0.0\");\n+        //Then\n+        assertEquals(\"4.0.0.1\",result);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenTrue() {\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result1 = EnvUtil.greaterOrEqualsVersion(versionA,versionB);\n+        //Then\n+        assertTrue(result1);\n+    }\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenEqual() {\n+        //Given\n+        String versionA = \"4.0.2\";\n+        //When\n+        boolean result2 = EnvUtil.greaterOrEqualsVersion(\"4.0.2\", versionA);\n+        //Then\n+        assertTrue(result2);\n+    }\n+\n+\n+    @Test\n+    public void testGreaterOrEqualsVersionWhenFalse() {\n+        //Given\n+        String versionA = \"4.0.2\";\n+        String versionB = \"3.1.1.0\";\n+        //When\n+        boolean result3 = EnvUtil.greaterOrEqualsVersion(versionB,versionA);\n+        //Then\n+        assertFalse(result3);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    @Ignore\n+// TODO: Remove when implementation is fixed\n+    public void testGreaterOrEqualsVersionCornerCase() {", "originalCommit": "805f4c9740117a0f97430829cbb7f1777adf5447", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3MDE5NQ==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r442670195", "bodyText": "", "author": "manusa", "createdAt": "2020-06-19T07:10:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2OTY5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3MzE0NQ==", "url": "https://github.com/eclipse/jkube/pull/235#discussion_r442673145", "bodyText": "ah, okay.", "author": "rohanKanojia", "createdAt": "2020-06-19T07:17:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2OTY5NQ=="}], "type": "inlineReview", "revised_code": null}]}