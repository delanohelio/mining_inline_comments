{"pr_number": 520, "pr_title": "Fix #511: Namespace as resource fragment results in NullPointerException", "pr_createdAt": "2020-12-10T13:15:33Z", "pr_url": "https://github.com/eclipse/jkube/pull/520", "timeline": [{"oid": "b232901d40ef70744d0c1b2c48902280eaa2bcf9", "url": "https://github.com/eclipse/jkube/commit/b232901d40ef70744d0c1b2c48902280eaa2bcf9", "message": "Fix #511: Namespace as resource fragment results in NullPointerException\n\n+ DefaultNamespaceEnricher should handle case when status is not\n  provided in resource spec.\n+ .metadata.namespace should be omitted from Project/Namespace resources\n  since they are Cluster scoped\n+ UndeployService should consider Project/Namespace resource while\n  deletion phase", "committedDate": "2020-12-23T18:06:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEwNTQ0OQ==", "url": "https://github.com/eclipse/jkube/pull/520#discussion_r550105449", "bodyText": "This test is used to verify that all applicable entities are deleted.\nPreviously this meant pod and service, but not namespace.\nPlease, add a new \"not-applicable\" entity to verify that it's not deleted.", "author": "manusa", "createdAt": "2020-12-30T10:05:46Z", "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/kubernetes/KubernetesUndeployServiceTest.java", "diffHunk": "@@ -98,13 +98,16 @@ public void undeployWithManifestShouldDeleteApplicableEntities(@Mocked File file\n     // Then\n     // @formatter:off\n     new Verifications() {{\n-      kubernetesHelper.getKind((HasMetadata)any); times = 2;\n+      kubernetesHelper.getKind((HasMetadata)any); times = 3;", "originalCommit": "b232901d40ef70744d0c1b2c48902280eaa2bcf9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE4MTUyNg==", "url": "https://github.com/eclipse/jkube/pull/520#discussion_r551181526", "bodyText": "Hello, I am not able to understand\tyour comment. Could you please elaborate on it? Are you talking about a jkubeServiceHub.getClient().resource(..) verification entry for namespace? I think it's already there.\nWe were earlier filtering Namespace and Project in undeployResources. Now we're processing them after un-deploying standard resources. I'm not sure which entities can be considered as non-applicable since we're covering both now.", "author": "rohanKanojia", "createdAt": "2021-01-04T08:47:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEwNTQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzMxMzI4Nw==", "url": "https://github.com/eclipse/jkube/pull/520#discussion_r553313287", "bodyText": "No, I mean this test verifies that only \"deletable\"/\"undeployable\" instances are deleted.\nInitially this test used Namespace, not because of its specific resource type, but because it was not deletable. Namespace resource verification is not what this test is for, it's to verify undeploy behavior.\nThis meant that the kubernetesHelper.getKind((HasMetadata)any);  method was called 2 times despite there was a request to delete 3 resources . This is because before this PR, Namespace was not an \"undeployable\" resource (now it is).\nYou need to find some other resource which is not \"undeployable\" and use that instead of Namespace.", "author": "manusa", "createdAt": "2021-01-07T13:01:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEwNTQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYyODQ3OQ==", "url": "https://github.com/eclipse/jkube/pull/520#discussion_r556628479", "bodyText": "Umm, I'm sorry. I'm still a bit confused. Earlier we were ignoring Namespace/ Project which we're not doing anymore. Now we don't have any resource which is undeployable. Even if I include some resource that is not supported by resource API like this(TokenReview doesn't have any handler since it hasn't got any list type):\n  @Test\n  public void undeployWithManifestShouldDeleteApplicableEntities(@Mocked File file) throws Exception {\n    // Given\n    final Namespace namespace = new NamespaceBuilder().withNewMetadata().withName(\"default\").endMetadata().build();\n    final TokenReview tokenReview = new TokenReviewBuilder().build(); // -> A Resource which can't be deployed via client.resource() API\n    final Pod pod = new PodBuilder().withNewMetadata().withName(\"MrPoddington\").endMetadata().build();\n    final Service service = new Service();\n    // @formatter:off\n    new Expectations() {{\n      file.exists(); result = true;\n      file.isFile(); result = true;\n      kubernetesHelper.loadResources(file);\n      result = new HashSet<>(Arrays.asList(namespace, pod, service, tokenReview));\n    }};\n    // @formatter:on\n    // When\n    kubernetesUndeployService.undeploy(null, null, file);\n    // Then\n    // @formatter:off\n    new Verifications() {{\n      kubernetesHelper.getKind((HasMetadata)any); times = 4; // <- Extra invocation for TokenReview\n      jKubeServiceHub.getClient().resource(pod).inNamespace(\"default\")\n              .withPropagationPolicy(DeletionPropagation.BACKGROUND).delete();\n      times = 1;\n      jKubeServiceHub.getClient().resource(service).inNamespace(\"default\")\n              .withPropagationPolicy(DeletionPropagation.BACKGROUND).delete();\n      times = 1;\n      jKubeServiceHub.getClient().resource(namespace)\n              .withPropagationPolicy(DeletionPropagation.BACKGROUND).delete();\n      times = 1;\n    }};\n    // @formatter:on\n  }\nKubernetesHelper.getKind() still gets invoked.", "author": "rohanKanojia", "createdAt": "2021-01-13T15:52:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEwNTQ0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "1f46c2de9de62d07c6e83337351380364822e8d4", "chunk": "diff --git a/jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/kubernetes/KubernetesUndeployServiceTest.java b/jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/kubernetes/KubernetesUndeployServiceTest.java\nindex 9b26afed..aafdc431 100644\n--- a/jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/kubernetes/KubernetesUndeployServiceTest.java\n+++ b/jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/kubernetes/KubernetesUndeployServiceTest.java\n\n@@ -113,7 +113,7 @@ public class KubernetesUndeployServiceTest {\n   }\n \n   @Test\n-  public void undeployWithManifestAndCustomResourcesShouldDeleteApplicableEntities(\n+  public void undeployWithManifestAndCustomResourcesShouldDeleteAllEntities(\n       @Mocked ResourceConfig resourceConfig) throws Exception {\n     // Given\n     final File manifest = temporaryFolder.newFile(\"temp.yml\");\n"}}, {"oid": "3be63deea1867bf6313c2b14e4cf6391397ae63a", "url": "https://github.com/eclipse/jkube/commit/3be63deea1867bf6313c2b14e4cf6391397ae63a", "message": "Fix #511: Namespace as resource fragment results in NullPointerException\n\n+ DefaultNamespaceEnricher should handle case when status is not\n  provided in resource spec.\n+ .metadata.namespace should be omitted from Project/Namespace resources\n  since they are Cluster scoped\n+ UndeployService should consider Project/Namespace resource while\n  deletion phase", "committedDate": "2021-01-13T13:13:32Z", "type": "forcePushed"}, {"oid": "387ac8f08464ff491d9a71719454b63bc00e5ccf", "url": "https://github.com/eclipse/jkube/commit/387ac8f08464ff491d9a71719454b63bc00e5ccf", "message": "Fix #511: Namespace as resource fragment results in NullPointerException\n\n+ DefaultNamespaceEnricher should handle case when status is not\n  provided in resource spec.\n+ .metadata.namespace should be omitted from Project/Namespace resources\n  since they are Cluster scoped\n+ UndeployService should consider Project/Namespace resource while\n  deletion phase", "committedDate": "2021-01-15T17:26:33Z", "type": "commit"}, {"oid": "a7f1428d0ed9e57feaa310430d07bd751a370d3b", "url": "https://github.com/eclipse/jkube/commit/a7f1428d0ed9e57feaa310430d07bd751a370d3b", "message": "Don't Filter out Namespace while applying/deleting resources\n\nNo need to filter out Namespace/Project while apply/undeploy phase.\nWe can sort the Kubernetes resource list to have Namespace in the\nfront so that it gets created first during apply phase and deleted\nlast in undeploy phase", "committedDate": "2021-01-15T20:51:00Z", "type": "forcePushed"}, {"oid": "1f46c2de9de62d07c6e83337351380364822e8d4", "url": "https://github.com/eclipse/jkube/commit/1f46c2de9de62d07c6e83337351380364822e8d4", "message": "Don't Filter out Namespace while applying/deleting resources\n\nNo need to filter out Namespace/Project while apply/undeploy phase.\nWe can sort the Kubernetes resource list to have Namespace in the\nfront so that it gets created first during apply phase and deleted\nlast in undeploy phase", "committedDate": "2021-01-18T07:03:32Z", "type": "commit"}, {"oid": "1f46c2de9de62d07c6e83337351380364822e8d4", "url": "https://github.com/eclipse/jkube/commit/1f46c2de9de62d07c6e83337351380364822e8d4", "message": "Don't Filter out Namespace while applying/deleting resources\n\nNo need to filter out Namespace/Project while apply/undeploy phase.\nWe can sort the Kubernetes resource list to have Namespace in the\nfront so that it gets created first during apply phase and deleted\nlast in undeploy phase", "committedDate": "2021-01-18T07:03:32Z", "type": "forcePushed"}]}