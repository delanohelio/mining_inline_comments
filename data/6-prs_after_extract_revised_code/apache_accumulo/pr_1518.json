{"pr_number": 1518, "pr_title": "Fix #1430 Enforce table name limit for new tables", "pr_createdAt": "2020-02-18T14:12:01Z", "pr_url": "https://github.com/apache/accumulo/pull/1518", "timeline": [{"oid": "410dab549743d4e55d2e786826573eb12fc3e500", "url": "https://github.com/apache/accumulo/commit/410dab549743d4e55d2e786826573eb12fc3e500", "message": "Master - Changed text in Monitor template to test that build was working", "committedDate": "2020-02-11T18:15:47Z", "type": "commit"}, {"oid": "0d2ba479b58ee0a6894ccf3fd870eecda35036f9", "url": "https://github.com/apache/accumulo/commit/0d2ba479b58ee0a6894ccf3fd870eecda35036f9", "message": "Revert \"Master - Changed text in Monitor template to test that build was working\"\n\nThis reverts commit 410dab549743d4e55d2e786826573eb12fc3e500.", "committedDate": "2020-02-11T18:26:55Z", "type": "commit"}, {"oid": "3c481e3a2f210e29b2aba44b2f7f94f572beef6f", "url": "https://github.com/apache/accumulo/commit/3c481e3a2f210e29b2aba44b2f7f94f572beef6f", "message": "Master - Changed Monitor template slightly to test build", "committedDate": "2020-02-11T18:49:07Z", "type": "commit"}, {"oid": "94b7adf17f3a85ee4de6c15be816474313325808", "url": "https://github.com/apache/accumulo/commit/94b7adf17f3a85ee4de6c15be816474313325808", "message": "Revert \"Master - Changed Monitor template slightly to test build\"\n\nThis reverts commit 3c481e3a2f210e29b2aba44b2f7f94f572beef6f.", "committedDate": "2020-02-11T19:00:00Z", "type": "commit"}, {"oid": "46be7b4a1999d91179c18bf6b3f253be62c1159b", "url": "https://github.com/apache/accumulo/commit/46be7b4a1999d91179c18bf6b3f253be62c1159b", "message": "Fixes #1430 - Added log for InitalTableState under TABLE_CREATE", "committedDate": "2020-02-11T20:13:33Z", "type": "commit"}, {"oid": "e527d5cbd7a668577c5420dae160cecbe07da6df", "url": "https://github.com/apache/accumulo/commit/e527d5cbd7a668577c5420dae160cecbe07da6df", "message": "Fixes #1430 - Updated validateTableNameArgument method in FateServiceHandler class. New method throws exception for table names > 1024 chars.", "committedDate": "2020-02-13T15:34:32Z", "type": "commit"}, {"oid": "73768f5b7111da364d1ab76e5d88421b28c32c11", "url": "https://github.com/apache/accumulo/commit/73768f5b7111da364d1ab76e5d88421b28c32c11", "message": "Fixes #1430 - Added log warning to validateTableNameArgument about 1024 char limit. validateTableNameArgument is called for TABLE_RENAME and TABLE_CLONE. validateNewTableNameArgument is called for TABLE_CREATE", "committedDate": "2020-02-13T16:13:03Z", "type": "commit"}, {"oid": "cb6fb8541f2218acfd0a52f5c5e9d23662d865d3", "url": "https://github.com/apache/accumulo/commit/cb6fb8541f2218acfd0a52f5c5e9d23662d865d3", "message": "Fixes #1430 - In TableOperationsImpl, create(tableName, NewTableCOnfig), added checkArgument for length > 1024.", "committedDate": "2020-02-13T16:45:54Z", "type": "commit"}, {"oid": "3967ccb0fb9b1a2121d147703a3cef522efd27ca", "url": "https://github.com/apache/accumulo/commit/3967ccb0fb9b1a2121d147703a3cef522efd27ca", "message": "Fixes #1430 - Added new checkArgument under TableOperationsImpl->create(table name, tableconfig). This is to implement fast-failure on the client  side for table names > 1024 chars.", "committedDate": "2020-02-13T18:06:17Z", "type": "commit"}, {"oid": "1035b0deb0f69f839c6dc56378d85106742e8662", "url": "https://github.com/apache/accumulo/commit/1035b0deb0f69f839c6dc56378d85106742e8662", "message": "Fixes #1430 - Created test for new table name limit 'createTableWithTableNameLengthLimit' in TableOperationsIT", "committedDate": "2020-02-18T12:33:04Z", "type": "commit"}, {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19", "url": "https://github.com/apache/accumulo/commit/22216e92ec54655f6e33ba298a9afe12a75c9b19", "message": "Fixes #1430 - Fixed possible null pointer in validateTableName methods in FateServiceHandler", "committedDate": "2020-02-18T13:12:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyMzc4MA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380723780", "bodyText": "Would be nice to place the table length in a constant and use that constant everywhere.  Could put he constant in ./core/src/main/java/org/apache/accumulo/core/Constants.java.  Maybe name it MAX_TABLE_NAME_LEN.", "author": "keith-turner", "createdAt": "2020-02-18T14:56:53Z", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -216,6 +216,7 @@ public void create(String tableName, NewTableConfiguration ntc)\n       throws AccumuloException, AccumuloSecurityException, TableExistsException {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(ntc != null, \"ntc is null\");\n+    checkArgument(tableName.length() < 1025, \"tableName is longer than 1024 characters\");", "originalCommit": "22216e92ec54655f6e33ba298a9afe12a75c9b19", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a91b0842a8eaf2c0e724083a471b3b43831eebea", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\nindex ca5665d071..99fc3cbc98 100644\n--- a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n+++ b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n\n@@ -216,7 +217,7 @@ public class TableOperationsImpl extends TableOperationsHelper {\n       throws AccumuloException, AccumuloSecurityException, TableExistsException {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(ntc != null, \"ntc is null\");\n-    checkArgument(tableName.length() < 1025, \"tableName is longer than 1024 characters\");\n+    checkArgument(tableName.length() < MAX_TABLE_NAME_LEN + 1, \"tableName is longer than 1024 characters\");\n \n     List<ByteBuffer> args = new ArrayList<>();\n     args.add(ByteBuffer.wrap(tableName.getBytes(UTF_8)));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTM3NQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380725375", "bodyText": "If there were constant, then 1026 could be replaced with the constant + 2.", "author": "keith-turner", "createdAt": "2020-02-18T14:59:15Z", "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {", "originalCommit": "22216e92ec54655f6e33ba298a9afe12a75c9b19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDczNDYyMg==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380734622", "bodyText": "@keith-turner I wasn't sure if we wanted a constant that was that long. I could just add it in as a 1025 char constant, since 1024 is the limit we are going for.", "author": "cradal", "createdAt": "2020-02-18T15:13:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTM3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0NDgxMQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380744811", "bodyText": "@keith-turner Ignore my last comment. I was thinking about the actual test string.", "author": "cradal", "createdAt": "2020-02-18T15:27:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTM3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0NDkxNg==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380744916", "bodyText": "One nice thing about using a single constant in the code is that it makes it easier for someone to later search for all code that references that const.", "author": "keith-turner", "createdAt": "2020-02-18T15:28:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTM3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a91b0842a8eaf2c0e724083a471b3b43831eebea", "chunk": "diff --git a/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java b/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\nindex b80c6e57f7..4562641050 100644\n--- a/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n+++ b/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n\n@@ -193,7 +194,7 @@ public class TableOperationsIT extends AccumuloClusterHarness {\n   public void createTableWithTableNameLengthLimit()\n       throws AccumuloException, AccumuloSecurityException, TableExistsException {\n     StringBuilder tableNameBuilder = new StringBuilder();\n-    for (int i = 0; i < 1026; i++) {\n+    for (int i = 0; i < MAX_TABLE_NAME_LEN + 1; i++) {\n       tableNameBuilder.append('a');\n     }\n     String tableName = tableNameBuilder.toString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380725823", "bodyText": "Does this throw an exception?", "author": "keith-turner", "createdAt": "2020-02-18T14:59:55Z", "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);", "originalCommit": "22216e92ec54655f6e33ba298a9afe12a75c9b19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDczMTUzNA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380731534", "bodyText": "@keith-turner That method throws the following: TableExistsException, AccumuloException,\nAccumuloSecurityException, TableNotFoundException", "author": "cradal", "createdAt": "2020-02-18T15:08:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0Mzk2OQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380743969", "bodyText": "When this test is run, will it throw an exception because the table name is too long?", "author": "keith-turner", "createdAt": "2020-02-18T15:26:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgxNDEzMQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380814131", "bodyText": "@keith-turner Yes, it throws an IllegalArgumentExc when I run the TableOperationsIT. I'll rework it so it can test without throwing the exc.", "author": "cradal", "createdAt": "2020-02-18T17:12:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg1NjQ4NQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380856485", "bodyText": "You can make the test expect the exception and only pass when it is thrown.  JUnit offers two ways to do this.", "author": "keith-turner", "createdAt": "2020-02-18T18:31:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3OTU3NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380879574", "bodyText": "@keith-turner I incorporated the expected = exception.class feature. TableOperationsIT passed.", "author": "cradal", "createdAt": "2020-02-18T19:15:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw=="}], "type": "inlineReview", "revised_code": {"commit": "a91b0842a8eaf2c0e724083a471b3b43831eebea", "chunk": "diff --git a/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java b/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\nindex b80c6e57f7..4562641050 100644\n--- a/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n+++ b/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n\n@@ -193,7 +194,7 @@ public class TableOperationsIT extends AccumuloClusterHarness {\n   public void createTableWithTableNameLengthLimit()\n       throws AccumuloException, AccumuloSecurityException, TableExistsException {\n     StringBuilder tableNameBuilder = new StringBuilder();\n-    for (int i = 0; i < 1026; i++) {\n+    for (int i = 0; i < MAX_TABLE_NAME_LEN + 1; i++) {\n       tableNameBuilder.append('a');\n     }\n     String tableName = tableNameBuilder.toString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNjc3MA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380726770", "bodyText": "Was this added for debugging?", "author": "keith-turner", "createdAt": "2020-02-18T15:01:16Z", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -162,10 +162,11 @@ public void executeFateOperation(TInfo tinfo, TCredentials c, long opid, FateOpe\n               TableOperationExceptionType.OTHER,\n               \"Expected at least \" + SPLIT_OFFSET + \" arguments, saw :\" + arguments.size());\n         }\n-        String tableName = validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n+        String tableName = validateNewTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n         TimeType timeType = TimeType.valueOf(ByteBufferUtil.toString(arguments.get(1)));\n         InitialTableState initialTableState =\n             InitialTableState.valueOf(ByteBufferUtil.toString(arguments.get(2)));\n+        log.info(\"Init Table State: \" + ByteBufferUtil.toString(arguments.get(2)));", "originalCommit": "22216e92ec54655f6e33ba298a9afe12a75c9b19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDczMjE0NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380732144", "bodyText": "@keith-turner Yes, it was. I need to take that out.", "author": "cradal", "createdAt": "2020-02-18T15:09:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNjc3MA=="}], "type": "inlineReview", "revised_code": {"commit": "1397436eab508117572c384fecf0f2f3bb520bc8", "chunk": "diff --git a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\nindex a1033a25cf..da18f30dda 100644\n--- a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n+++ b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\n@@ -166,7 +166,6 @@ class FateServiceHandler implements FateService.Iface {\n         TimeType timeType = TimeType.valueOf(ByteBufferUtil.toString(arguments.get(1)));\n         InitialTableState initialTableState =\n             InitialTableState.valueOf(ByteBufferUtil.toString(arguments.get(2)));\n-        log.info(\"Init Table State: \" + ByteBufferUtil.toString(arguments.get(2)));\n         int splitCount = Integer.parseInt(ByteBufferUtil.toString(arguments.get(3)));\n         validateArgumentCount(arguments, tableOp, SPLIT_OFFSET + splitCount);\n         String splitFile = null;\n"}}, {"oid": "1397436eab508117572c384fecf0f2f3bb520bc8", "url": "https://github.com/apache/accumulo/commit/1397436eab508117572c384fecf0f2f3bb520bc8", "message": "Fixes #1430 - Removed log of IntialTableState, no longer needed.", "committedDate": "2020-02-18T15:23:13Z", "type": "commit"}, {"oid": "a91b0842a8eaf2c0e724083a471b3b43831eebea", "url": "https://github.com/apache/accumulo/commit/a91b0842a8eaf2c0e724083a471b3b43831eebea", "message": "Fixes #1430 - Created CONSTANT fro max table length", "committedDate": "2020-02-18T15:44:27Z", "type": "commit"}, {"oid": "8c3245a1cc038ba2dcb3fdae9e26a086169e4e6e", "url": "https://github.com/apache/accumulo/commit/8c3245a1cc038ba2dcb3fdae9e26a086169e4e6e", "message": "Fixes #1430 - Corrected createTableWithTableNameLengthLimit test to expect IllegalArgumentException", "committedDate": "2020-02-18T19:14:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTUxNw==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380935517", "bodyText": "Could use constant in this message", "author": "keith-turner", "createdAt": "2020-02-18T21:08:29Z", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -701,6 +702,24 @@ private TableId validateTableIdArgument(ByteBuffer tableIdArg, TableOperation op\n   private String validateTableNameArgument(ByteBuffer tableNameArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String tableName = tableNameArg == null ? null : ByteBufferUtil.toString(tableNameArg);\n+    if ((tableName != null) && (tableName.length() > MAX_TABLE_NAME_LEN)) {\n+      log.warn(\n+          \"Table names greater than 1024 characters should be renamed to conform to a 1024 character limit. \"", "originalCommit": "8c3245a1cc038ba2dcb3fdae9e26a086169e4e6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec52800fa77f750e2d96ec1709cbffd52a01860e", "chunk": "diff --git a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\nindex e71c27839f..445f30c0ba 100644\n--- a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n+++ b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\n@@ -698,13 +698,13 @@ class FateServiceHandler implements FateService.Iface {\n     }\n   }\n \n-  // Verify table name arguments are valid, and match any additional restrictions\n+  // Verify older table name arguments are valid, and match any additional restrictions\n   private String validateTableNameArgument(ByteBuffer tableNameArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String tableName = tableNameArg == null ? null : ByteBufferUtil.toString(tableNameArg);\n     if ((tableName != null) && (tableName.length() > MAX_TABLE_NAME_LEN)) {\n       log.warn(\n-          \"Table names greater than 1024 characters should be renamed to conform to a 1024 character limit. \"\n+          \"Table names greater than \" + MAX_TABLE_NAME_LEN + \" characters should be renamed to conform to a 1024 character limit. \"\n               + \"Longer table names are no longer supported and may result in unexpected behavior.\");\n     }\n     return _validateArgument(tableName, op, VALID_NAME.and(userValidator));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTczNA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380935734", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                checkArgument(tableName.length() < MAX_TABLE_NAME_LEN + 1, \"tableName is longer than 1024 characters\");\n          \n          \n            \n                checkArgument(tableName.length() <= MAX_TABLE_NAME_LEN, \"tableName is longer than %s characters\", MAX_TABLE_NAME_LEN);", "author": "keith-turner", "createdAt": "2020-02-18T21:08:52Z", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -216,6 +217,7 @@ public void create(String tableName, NewTableConfiguration ntc)\n       throws AccumuloException, AccumuloSecurityException, TableExistsException {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(ntc != null, \"ntc is null\");\n+    checkArgument(tableName.length() < MAX_TABLE_NAME_LEN + 1, \"tableName is longer than 1024 characters\");", "originalCommit": "8c3245a1cc038ba2dcb3fdae9e26a086169e4e6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9971610f4b68e32b8489aa397292b5cb7ff0a22f", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\nindex 99fc3cbc98..236eb498f4 100644\n--- a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n+++ b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n\n@@ -217,7 +217,7 @@ public class TableOperationsImpl extends TableOperationsHelper {\n       throws AccumuloException, AccumuloSecurityException, TableExistsException {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(ntc != null, \"ntc is null\");\n-    checkArgument(tableName.length() < MAX_TABLE_NAME_LEN + 1, \"tableName is longer than 1024 characters\");\n+    checkArgument(tableName.length() <= MAX_TABLE_NAME_LEN, \"Table name is longer than 1024 characters\");\n \n     List<ByteBuffer> args = new ArrayList<>();\n     args.add(ByteBuffer.wrap(tableName.getBytes(UTF_8)));\n"}}, {"oid": "ec52800fa77f750e2d96ec1709cbffd52a01860e", "url": "https://github.com/apache/accumulo/commit/ec52800fa77f750e2d96ec1709cbffd52a01860e", "message": "Fixes #1430 - Added new validator to TABLE_CLONE, TABLE_IMPORT, TABLE_BULK_IMPORT, and TABLE_RENAME. FOr RENAME, previous names are validated with original validator", "committedDate": "2020-02-19T12:57:49Z", "type": "commit"}, {"oid": "9971610f4b68e32b8489aa397292b5cb7ff0a22f", "url": "https://github.com/apache/accumulo/commit/9971610f4b68e32b8489aa397292b5cb7ff0a22f", "message": "Fixes #1430 - Implemented client fast-falure for CLONE, RENAME, and IMPORT", "committedDate": "2020-02-19T13:55:41Z", "type": "commit"}, {"oid": "ea98ca41d8ae35d89b92269afb5d0d6938dcd60c", "url": "https://github.com/apache/accumulo/commit/ea98ca41d8ae35d89b92269afb5d0d6938dcd60c", "message": "Fixes #1430 - Implemented 1024 char limit for namespace CREATE and RENAME. Implemented client fast-failure for same.", "committedDate": "2020-02-19T14:24:11Z", "type": "commit"}, {"oid": "aab64029eed4eb8965c93971f05bce1c1391c0bc", "url": "https://github.com/apache/accumulo/commit/aab64029eed4eb8965c93971f05bce1c1391c0bc", "message": "Fixes #1430 - Created test under NamespacesIT->createNamespaceWithNamespaceLengthLimit", "committedDate": "2020-02-19T15:31:05Z", "type": "commit"}, {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6", "url": "https://github.com/apache/accumulo/commit/58535cf287106e14209fbf2597fcf92e89c9fca6", "message": "Fixes #1430 - Attempt recommit of clone, import, and rename validator for tables and namespaces, fast-fail for the same, and updated NamespaceIT", "committedDate": "2020-02-20T13:35:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4NzMzMg==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384487332", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Namespace is longer than 1024 characters\");\n          \n          \n            \n                    \"Namespace is longer than \"+MAX_NAMESPACE_LEN+\" characters\");", "author": "keith-turner", "createdAt": "2020-02-26T13:22:20Z", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java", "diffHunk": "@@ -119,7 +121,8 @@ public boolean exists(String namespace) {\n   public void create(String namespace)\n       throws AccumuloException, AccumuloSecurityException, NamespaceExistsException {\n     checkArgument(namespace != null, \"namespace is null\");\n-\n+    checkArgument(namespace.length() <= MAX_NAMESPACE_LEN,\n+        \"Namespace is longer than 1024 characters\");", "originalCommit": "58535cf287106e14209fbf2597fcf92e89c9fca6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4ed306cce38372a0fd885423cdae32e3e8a335c", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java b/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java\nindex 771a31846b..e766c1e71b 100644\n--- a/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java\n+++ b/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java\n\n@@ -122,7 +122,7 @@ public class NamespaceOperationsImpl extends NamespaceOperationsHelper {\n       throws AccumuloException, AccumuloSecurityException, NamespaceExistsException {\n     checkArgument(namespace != null, \"namespace is null\");\n     checkArgument(namespace.length() <= MAX_NAMESPACE_LEN,\n-        \"Namespace is longer than 1024 characters\");\n+        \"Namespace is longer than \" + MAX_NAMESPACE_LEN + \" characters\");\n     try {\n       doNamespaceFateOperation(FateOperation.NAMESPACE_CREATE,\n           Arrays.asList(ByteBuffer.wrap(namespace.getBytes(UTF_8))), Collections.emptyMap(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4NzU4Mg==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384487582", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Namespace is longer than 1024 characters\");\n          \n          \n            \n                    \"Namespace is longer than \"+MAX_NAMESPACE_LEN+\" characters\");", "author": "keith-turner", "createdAt": "2020-02-26T13:22:49Z", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java", "diffHunk": "@@ -163,7 +166,11 @@ public void delete(String namespace) throws AccumuloException, AccumuloSecurityE\n   public void rename(String oldNamespaceName, String newNamespaceName)\n       throws AccumuloSecurityException, NamespaceNotFoundException, AccumuloException,\n       NamespaceExistsException {\n-\n+    checkArgument(oldNamespaceName.length() <= MAX_NAMESPACE_LEN,\n+        \"Namespaces longer than 1024 characters\"\n+            + \"are no longer supported and may result in unexpected behavior\");\n+    checkArgument(newNamespaceName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Namespace is longer than 1024 characters\");", "originalCommit": "58535cf287106e14209fbf2597fcf92e89c9fca6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29af44bc3442ea7a0b0f56f38f6928033d458967", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java b/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java\nindex 771a31846b..4895eba207 100644\n--- a/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java\n+++ b/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java\n\n@@ -166,9 +166,6 @@ public class NamespaceOperationsImpl extends NamespaceOperationsHelper {\n   public void rename(String oldNamespaceName, String newNamespaceName)\n       throws AccumuloSecurityException, NamespaceNotFoundException, AccumuloException,\n       NamespaceExistsException {\n-    checkArgument(oldNamespaceName.length() <= MAX_NAMESPACE_LEN,\n-        \"Namespaces longer than 1024 characters\"\n-            + \"are no longer supported and may result in unexpected behavior\");\n     checkArgument(newNamespaceName.length() <= MAX_TABLE_NAME_LEN,\n         \"Namespace is longer than 1024 characters\");\n     List<ByteBuffer> args = Arrays.asList(ByteBuffer.wrap(oldNamespaceName.getBytes(UTF_8)),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4NzcxNA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384487714", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Table name is longer than 1024 characters\");\n          \n          \n            \n                    \"Table name is longer than \"+ MAX_TABLE_NAME_LEN +\" characters\");", "author": "keith-turner", "createdAt": "2020-02-26T13:23:07Z", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -217,7 +217,8 @@ public void create(String tableName, NewTableConfiguration ntc)\n       throws AccumuloException, AccumuloSecurityException, TableExistsException {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(ntc != null, \"ntc is null\");\n-    checkArgument(tableName.length() < MAX_TABLE_NAME_LEN + 1, \"tableName is longer than 1024 characters\");\n+    checkArgument(tableName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Table name is longer than 1024 characters\");", "originalCommit": "58535cf287106e14209fbf2597fcf92e89c9fca6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4ed306cce38372a0fd885423cdae32e3e8a335c", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\nindex 12dc3175c4..1ecc05b7b8 100644\n--- a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n+++ b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n\n@@ -218,7 +218,7 @@ public class TableOperationsImpl extends TableOperationsHelper {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(ntc != null, \"ntc is null\");\n     checkArgument(tableName.length() <= MAX_TABLE_NAME_LEN,\n-        \"Table name is longer than 1024 characters\");\n+        \"Table name is longer than \" + MAX_TABLE_NAME_LEN + \" characters\");\n \n     List<ByteBuffer> args = new ArrayList<>();\n     args.add(ByteBuffer.wrap(tableName.getBytes(UTF_8)));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4Nzg5NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384487894", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Table name is longer than 1024 characters\");\n          \n          \n            \n                    \"Table name is longer than \"+ MAX_TABLE_NAME_LEN +\" characters\");", "author": "keith-turner", "createdAt": "2020-02-26T13:23:26Z", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -753,6 +754,8 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n \n     checkArgument(srcTableName != null, \"srcTableName is null\");\n     checkArgument(newTableName != null, \"newTableName is null\");\n+    checkArgument(newTableName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Table name is longer than 1024 characters\");", "originalCommit": "58535cf287106e14209fbf2597fcf92e89c9fca6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4ed306cce38372a0fd885423cdae32e3e8a335c", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\nindex 12dc3175c4..1ecc05b7b8 100644\n--- a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n+++ b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n\n@@ -755,7 +755,7 @@ public class TableOperationsImpl extends TableOperationsHelper {\n     checkArgument(srcTableName != null, \"srcTableName is null\");\n     checkArgument(newTableName != null, \"newTableName is null\");\n     checkArgument(newTableName.length() <= MAX_TABLE_NAME_LEN,\n-        \"Table name is longer than 1024 characters\");\n+        \"Table name is longer than \" + MAX_TABLE_NAME_LEN + \" characters\");\n \n     TableId srcTableId = Tables.getTableId(context, srcTableName);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4ODA0NQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384488045", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Table name is longer than 1024 characters\");\n          \n          \n            \n                    \"Table name is longer than \"+ MAX_TABLE_NAME_LEN +\" characters\");", "author": "keith-turner", "createdAt": "2020-02-26T13:23:42Z", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Table names longer than 1024 characters\"\n+            + \"are no longer supported and may result in unexpected behavior\");\n+    checkArgument(newTableName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Table name is longer than 1024 characters\");", "originalCommit": "58535cf287106e14209fbf2597fcf92e89c9fca6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29af44bc3442ea7a0b0f56f38f6928033d458967", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\nindex 12dc3175c4..5ac1392157 100644\n--- a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n+++ b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n\n@@ -791,9 +791,6 @@ public class TableOperationsImpl extends TableOperationsHelper {\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,\n-        \"Table names longer than 1024 characters\"\n-            + \"are no longer supported and may result in unexpected behavior\");\n     checkArgument(newTableName.length() <= MAX_TABLE_NAME_LEN,\n         \"Table name is longer than 1024 characters\");\n     List<ByteBuffer> args = Arrays.asList(ByteBuffer.wrap(oldTableName.getBytes(UTF_8)),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4ODEzOA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384488138", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Table name is longer than 1024 characters\");\n          \n          \n            \n                    \"Table name is longer than \"+ MAX_TABLE_NAME_LEN +\" characters\");", "author": "keith-turner", "createdAt": "2020-02-26T13:23:51Z", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -1499,6 +1506,8 @@ public void importTable(String tableName, String importDir)\n       throws TableExistsException, AccumuloException, AccumuloSecurityException {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(importDir != null, \"importDir is null\");\n+    checkArgument(tableName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Table name is longer than 1024 characters\");", "originalCommit": "58535cf287106e14209fbf2597fcf92e89c9fca6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "94855f111b450bfe3664b5a6cf4e060921eb03ac", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\nindex 12dc3175c4..59e459a56b 100644\n--- a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n+++ b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n\n@@ -1507,7 +1504,7 @@ public class TableOperationsImpl extends TableOperationsHelper {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(importDir != null, \"importDir is null\");\n     checkArgument(tableName.length() <= MAX_TABLE_NAME_LEN,\n-        \"Table name is longer than 1024 characters\");\n+        \"Table name is longer than \"+ MAX_TABLE_NAME_LEN +\" characters\");\n \n     try {\n       importDir = checkPath(importDir, \"Table\", \"\").toString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTQ2MQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384489461", "bodyText": "Why does the old namespace need to be less than the len?  If the old namespace was created in an older version of Accumulo then it could be over the limit.", "author": "keith-turner", "createdAt": "2020-02-26T13:26:24Z", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java", "diffHunk": "@@ -163,7 +166,11 @@ public void delete(String namespace) throws AccumuloException, AccumuloSecurityE\n   public void rename(String oldNamespaceName, String newNamespaceName)\n       throws AccumuloSecurityException, NamespaceNotFoundException, AccumuloException,\n       NamespaceExistsException {\n-\n+    checkArgument(oldNamespaceName.length() <= MAX_NAMESPACE_LEN,", "originalCommit": "58535cf287106e14209fbf2597fcf92e89c9fca6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyMjA1Mg==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384522052", "bodyText": "@keith-turner Thanks for looking things over. I might be misunderstanding ctubbsii's feedback on this one. I thought the intention in the new version was to essentially force user's to rename namespaces to something that conforms to the 1024 char limit.", "author": "cradal", "createdAt": "2020-02-26T14:22:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTQ2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU5MzQ4Mg==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384593482", "bodyText": "@cradal No. Sorry for the confusion. The intention was:\n\nprevent the creation of new objects over the limit, and\nlog a warning when we discover any object over the limit (with the understanding that this would only be possible for objects created before the limit was imposed)", "author": "ctubbsii", "createdAt": "2020-02-26T16:04:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTQ2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "29af44bc3442ea7a0b0f56f38f6928033d458967", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java b/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java\nindex 771a31846b..4895eba207 100644\n--- a/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java\n+++ b/core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java\n\n@@ -166,9 +166,6 @@ public class NamespaceOperationsImpl extends NamespaceOperationsHelper {\n   public void rename(String oldNamespaceName, String newNamespaceName)\n       throws AccumuloSecurityException, NamespaceNotFoundException, AccumuloException,\n       NamespaceExistsException {\n-    checkArgument(oldNamespaceName.length() <= MAX_NAMESPACE_LEN,\n-        \"Namespaces longer than 1024 characters\"\n-            + \"are no longer supported and may result in unexpected behavior\");\n     checkArgument(newNamespaceName.length() <= MAX_TABLE_NAME_LEN,\n         \"Namespace is longer than 1024 characters\");\n     List<ByteBuffer> args = Arrays.asList(ByteBuffer.wrap(oldNamespaceName.getBytes(UTF_8)),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384489963", "bodyText": "Why does the old table need to be below limit?", "author": "keith-turner", "createdAt": "2020-02-26T13:27:21Z", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "originalCommit": "58535cf287106e14209fbf2597fcf92e89c9fca6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyMjE0NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384522144", "bodyText": "@keith-turner Again, I might be misunderstanding ctubbsii's feedback on this one. I thought the intention in the new version was to essentially force user's to rename tables to something that conforms to the 1024 char limit.", "author": "cradal", "createdAt": "2020-02-26T14:22:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3MjEwMg==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384572102", "bodyText": "It seems like if the user had created a table name of len 1234 in ver 2.0.0 that with this check they would never be able to rename that table in version 2.1.0.", "author": "keith-turner", "createdAt": "2020-02-26T15:35:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4ODE1Ng==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384588156", "bodyText": "@keith-turner Ok. I feel foolish now. You are correct. My goal was to generate a warning message to the user. In doing so, I am preventing the operation from even occuring! I will remove the old name check for renaming namespaces and tables. Also, I will generate the warning message without using checkArgument.", "author": "cradal", "createdAt": "2020-02-26T15:57:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYwMzM1MQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384603351", "bodyText": "I will generate the warning message without using checkArgument\n\nAre you thinking of a warning for the case where the old name is too long?  Personally I would skip that.", "author": "keith-turner", "createdAt": "2020-02-26T16:18:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYwNTU3NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384605574", "bodyText": "Are you thinking of a warning for the case where the old name is too long? Personally I would skip that.\n\nFor rename, I agree. There's no point in warning when the user is currently performing an action that makes the problem go away.", "author": "ctubbsii", "createdAt": "2020-02-26T16:21:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYyMDMwMg==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384620302", "bodyText": "@keith-turner @ctubbsii Thanks for being patient with me, guys. I think I have addressed the current issues with my latest commits.", "author": "cradal", "createdAt": "2020-02-26T16:43:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5ODI5NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384798294", "bodyText": "No problem! I'll try to take a look soon.", "author": "ctubbsii", "createdAt": "2020-02-26T22:10:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyNjc4NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r385926784", "bodyText": "@cradal did you see the suggestions I made to replace 1024 with constants in some error message strings?", "author": "keith-turner", "createdAt": "2020-02-28T21:18:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM5OTg3NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r386399874", "bodyText": "@keith-turner Yessir. I rolled them into my commits.", "author": "cradal", "createdAt": "2020-03-02T13:44:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ5NDU4NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r386494584", "bodyText": "@cradal  when I look at the diffs on github I still see some error messages with 1024 in them.", "author": "keith-turner", "createdAt": "2020-03-02T16:17:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NTc3Nw==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r386575777", "bodyText": "@keith-turner Apologies. I thought we caught them all with the peer review and commits last week. I went through the relevant classes and did a string search for 1024. I think we finally got them all with my latest commit.", "author": "cradal", "createdAt": "2020-03-02T18:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "29af44bc3442ea7a0b0f56f38f6928033d458967", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\nindex 12dc3175c4..5ac1392157 100644\n--- a/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n+++ b/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n\n@@ -791,9 +791,6 @@ public class TableOperationsImpl extends TableOperationsHelper {\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,\n-        \"Table names longer than 1024 characters\"\n-            + \"are no longer supported and may result in unexpected behavior\");\n     checkArgument(newTableName.length() <= MAX_TABLE_NAME_LEN,\n         \"Table name is longer than 1024 characters\");\n     List<ByteBuffer> args = Arrays.asList(ByteBuffer.wrap(oldTableName.getBytes(UTF_8)),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MDY5MQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384490691", "bodyText": "This operation is not creating a new table, so it should not do this check.", "author": "keith-turner", "createdAt": "2020-02-26T13:28:33Z", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -434,7 +435,7 @@ public String invalidMessage(String argument) {\n       case TABLE_BULK_IMPORT: {\n         TableOperation tableOp = TableOperation.BULK_IMPORT;\n         validateArgumentCount(arguments, tableOp, 4);\n-        String tableName = validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n+        String tableName = validateNewTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);", "originalCommit": "58535cf287106e14209fbf2597fcf92e89c9fca6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyODI4Mw==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384528283", "bodyText": "@keith-turner Is the same case for TABLE_IMPORT? Again, in this case, I thought that ctubbsii wanted the limit check applied during imports, as well.", "author": "cradal", "createdAt": "2020-02-26T14:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MDY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3MTA5NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384571094", "bodyText": "table import is creating a new table in the system.", "author": "keith-turner", "createdAt": "2020-02-26T15:33:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MDY5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU5NTMxMw==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384595313", "bodyText": "@cradal Although similarly named \"bulk import\" (aka \"import directory\") is when a new RFile is added to an existing table, whereas \"import table\" creates a new table from a previously exported table.\nSorry for the misunderstanding.", "author": "ctubbsii", "createdAt": "2020-02-26T16:07:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MDY5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "29af44bc3442ea7a0b0f56f38f6928033d458967", "chunk": "diff --git a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\nindex fd9b1cc8f4..11c256e652 100644\n--- a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n+++ b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\n@@ -435,7 +435,7 @@ class FateServiceHandler implements FateService.Iface {\n       case TABLE_BULK_IMPORT: {\n         TableOperation tableOp = TableOperation.BULK_IMPORT;\n         validateArgumentCount(arguments, tableOp, 4);\n-        String tableName = validateNewTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n+        String tableName = validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n         String dir = ByteBufferUtil.toString(arguments.get(1));\n         String failDir = ByteBufferUtil.toString(arguments.get(2));\n         boolean setTime = Boolean.parseBoolean(ByteBufferUtil.toString(arguments.get(3)));\n"}}, {"oid": "29af44bc3442ea7a0b0f56f38f6928033d458967", "url": "https://github.com/apache/accumulo/commit/29af44bc3442ea7a0b0f56f38f6928033d458967", "message": "Fixes #1430 - Removed checkArgument for old table names and namespaces from client impl. Removed new validator from BULK_IMPORT.", "committedDate": "2020-02-26T16:10:04Z", "type": "commit"}, {"oid": "3fd3fa2bc5b1e75642ace244e6956ef6b65071ab", "url": "https://github.com/apache/accumulo/commit/3fd3fa2bc5b1e75642ace244e6956ef6b65071ab", "message": "Fixes #1430 - Added warning log about old namespace and table name length to client impl", "committedDate": "2020-02-26T16:23:41Z", "type": "commit"}, {"oid": "76ad03a083b5802946490c6826581c96ee3a55f5", "url": "https://github.com/apache/accumulo/commit/76ad03a083b5802946490c6826581c96ee3a55f5", "message": "Revert \"Fixes #1430 - Added warning log about old namespace and table name length to client impl\"\n\nThis reverts commit 3fd3fa2bc5b1e75642ace244e6956ef6b65071ab.", "committedDate": "2020-02-26T16:39:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyNzg1Mw==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r385327853", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      + \" characters should be renamed to conform to a 1024 character limit. \"\n          \n          \n            \n                      + \" characters should be renamed to conform to a \"+MAX_TABLE_NAME_LEN+\" character limit. \"", "author": "lbschanno", "createdAt": "2020-02-27T19:36:06Z", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -697,10 +699,28 @@ private TableId validateTableIdArgument(ByteBuffer tableIdArg, TableOperation op\n     }\n   }\n \n-  // Verify table name arguments are valid, and match any additional restrictions\n+  // Verify older table name arguments are valid, and match any additional restrictions\n   private String validateTableNameArgument(ByteBuffer tableNameArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String tableName = tableNameArg == null ? null : ByteBufferUtil.toString(tableNameArg);\n+    if ((tableName != null) && (tableName.length() > MAX_TABLE_NAME_LEN)) {\n+      log.warn(\"Table names greater than \" + MAX_TABLE_NAME_LEN\n+          + \" characters should be renamed to conform to a 1024 character limit. \"", "originalCommit": "76ad03a083b5802946490c6826581c96ee3a55f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d50e8af31e74a3a9c571f5eedb88f81a42830f8f", "chunk": "diff --git a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\nindex 11c256e652..6548e47b30 100644\n--- a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n+++ b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\n@@ -705,7 +705,7 @@ class FateServiceHandler implements FateService.Iface {\n     String tableName = tableNameArg == null ? null : ByteBufferUtil.toString(tableNameArg);\n     if ((tableName != null) && (tableName.length() > MAX_TABLE_NAME_LEN)) {\n       log.warn(\"Table names greater than \" + MAX_TABLE_NAME_LEN\n-          + \" characters should be renamed to conform to a 1024 character limit. \"\n+          + \" characters should be renamed to conform to a \"+MAX_TABLE_NAME_LEN+\" character limit. \"\n           + \"Longer table names are no longer supported and may result in unexpected behavior.\");\n     }\n     return _validateArgument(tableName, op, VALID_NAME.and(userValidator));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyODMwMA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r385328300", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      + \" characters should be renamed to conform to a 1024 character limit. \"\n          \n          \n            \n                      + \" characters should be renamed to conform to a \"+MAX_NAMESPACE_LEN+\" character limit. \"", "author": "lbschanno", "createdAt": "2020-02-27T19:36:53Z", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -716,6 +736,24 @@ private void validateArgumentCount(List<ByteBuffer> arguments, TableOperation op\n   private String validateNamespaceArgument(ByteBuffer namespaceArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String namespace = namespaceArg == null ? null : ByteBufferUtil.toString(namespaceArg);\n+    if ((namespace != null) && (namespace.length() > MAX_NAMESPACE_LEN)) {\n+      log.warn(\"Namespaces greater than \" + MAX_NAMESPACE_LEN\n+          + \" characters should be renamed to conform to a 1024 character limit. \"", "originalCommit": "76ad03a083b5802946490c6826581c96ee3a55f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd6118ab0d1a8649c2c44faea13eb880a6c39b2b", "chunk": "diff --git a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\nindex 11c256e652..05e96707df 100644\n--- a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n+++ b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\n@@ -738,7 +738,7 @@ class FateServiceHandler implements FateService.Iface {\n     String namespace = namespaceArg == null ? null : ByteBufferUtil.toString(namespaceArg);\n     if ((namespace != null) && (namespace.length() > MAX_NAMESPACE_LEN)) {\n       log.warn(\"Namespaces greater than \" + MAX_NAMESPACE_LEN\n-          + \" characters should be renamed to conform to a 1024 character limit. \"\n+          + \" characters should be renamed to conform to a \"+MAX_NAMESPACE_LEN+\" character limit. \"\n           + \"Longer namespaces are no longer supported and may result in unexpected behavior.\");\n     }\n     return _validateArgument(namespace, op, Namespaces.VALID_NAME.and(userValidator));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyOTUzMA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r385329530", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertTrue(!c.namespaceOperations().exists(namespace));\n          \n          \n            \n                assertFalse(c.namespaceOperations().exists(namespace));", "author": "lbschanno", "createdAt": "2020-02-27T19:39:19Z", "path": "test/src/main/java/org/apache/accumulo/test/NamespacesIT.java", "diffHunk": "@@ -191,6 +192,18 @@ public void createTableInMissingNamespace() throws Exception {\n     }\n   }\n \n+  @Test(expected = IllegalArgumentException.class)\n+  public void createNamespaceWithNamespaceLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, NamespaceExistsException {\n+    StringBuilder namespaceBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_NAMESPACE_LEN; i++) {\n+      namespaceBuilder.append('a');\n+    }\n+    String namespace = namespaceBuilder.toString();\n+    c.namespaceOperations().create(namespace);\n+    assertTrue(!c.namespaceOperations().exists(namespace));", "originalCommit": "76ad03a083b5802946490c6826581c96ee3a55f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c7aa00765c97985c28133c452a957ea850afbefd", "chunk": "diff --git a/test/src/main/java/org/apache/accumulo/test/NamespacesIT.java b/test/src/main/java/org/apache/accumulo/test/NamespacesIT.java\nindex 4a7cb63323..9c2137906c 100644\n--- a/test/src/main/java/org/apache/accumulo/test/NamespacesIT.java\n+++ b/test/src/main/java/org/apache/accumulo/test/NamespacesIT.java\n\n@@ -201,7 +201,7 @@ public class NamespacesIT extends SharedMiniClusterBase {\n     }\n     String namespace = namespaceBuilder.toString();\n     c.namespaceOperations().create(namespace);\n-    assertTrue(!c.namespaceOperations().exists(namespace));\n+    assertFalse(c.namespaceOperations().exists(namespace));\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyOTY4Nw==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r385329687", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertTrue(!accumuloClient.tableOperations().exists(tableName));\n          \n          \n            \n                assertFalse(accumuloClient.tableOperations().exists(tableName));", "author": "lbschanno", "createdAt": "2020-02-27T19:39:37Z", "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +190,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test(expected = IllegalArgumentException.class)\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_TABLE_NAME_LEN; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);\n+    assertTrue(!accumuloClient.tableOperations().exists(tableName));", "originalCommit": "76ad03a083b5802946490c6826581c96ee3a55f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77460d6abffc675cd901c9836e5ae7479fb2427d", "chunk": "diff --git a/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java b/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\nindex e9ab3bef55..cb824dbf0b 100644\n--- a/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n+++ b/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n\n@@ -199,7 +199,7 @@ public class TableOperationsIT extends AccumuloClusterHarness {\n     }\n     String tableName = tableNameBuilder.toString();\n     accumuloClient.tableOperations().create(tableName);\n-    assertTrue(!accumuloClient.tableOperations().exists(tableName));\n+    assertFalse(accumuloClient.tableOperations().exists(tableName));\n   }\n \n   @Test\n"}}, {"oid": "d50e8af31e74a3a9c571f5eedb88f81a42830f8f", "url": "https://github.com/apache/accumulo/commit/d50e8af31e74a3a9c571f5eedb88f81a42830f8f", "message": "Update server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\nCo-Authored-By: Laura Schanno <lbschanno@gmail.com>", "committedDate": "2020-02-28T15:05:41Z", "type": "commit"}, {"oid": "cd6118ab0d1a8649c2c44faea13eb880a6c39b2b", "url": "https://github.com/apache/accumulo/commit/cd6118ab0d1a8649c2c44faea13eb880a6c39b2b", "message": "Update server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\nCo-Authored-By: Laura Schanno <lbschanno@gmail.com>", "committedDate": "2020-02-28T15:05:55Z", "type": "commit"}, {"oid": "c7aa00765c97985c28133c452a957ea850afbefd", "url": "https://github.com/apache/accumulo/commit/c7aa00765c97985c28133c452a957ea850afbefd", "message": "Update test/src/main/java/org/apache/accumulo/test/NamespacesIT.java\n\nCo-Authored-By: Laura Schanno <lbschanno@gmail.com>", "committedDate": "2020-02-28T15:06:33Z", "type": "commit"}, {"oid": "77460d6abffc675cd901c9836e5ae7479fb2427d", "url": "https://github.com/apache/accumulo/commit/77460d6abffc675cd901c9836e5ae7479fb2427d", "message": "Update test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n\nCo-Authored-By: Laura Schanno <lbschanno@gmail.com>", "committedDate": "2020-02-28T15:06:47Z", "type": "commit"}, {"oid": "db8cc0263aefeada0e15b1c5c870315ff0b3255f", "url": "https://github.com/apache/accumulo/commit/db8cc0263aefeada0e15b1c5c870315ff0b3255f", "message": "Update FateServiceHandler.java", "committedDate": "2020-02-28T16:59:37Z", "type": "commit"}, {"oid": "28ee6fbd1ed85891a601e2b442b37da946592840", "url": "https://github.com/apache/accumulo/commit/28ee6fbd1ed85891a601e2b442b37da946592840", "message": "Update NamespacesIT.java", "committedDate": "2020-02-28T18:40:53Z", "type": "commit"}, {"oid": "ced80042945c143fb97dc1b55ada282bbb920f3c", "url": "https://github.com/apache/accumulo/commit/ced80042945c143fb97dc1b55ada282bbb920f3c", "message": "Update TableOperationsIT.java", "committedDate": "2020-02-28T18:42:15Z", "type": "commit"}, {"oid": "94855f111b450bfe3664b5a6cf4e060921eb03ac", "url": "https://github.com/apache/accumulo/commit/94855f111b450bfe3664b5a6cf4e060921eb03ac", "message": "Update core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java\n\nCo-Authored-By: Keith Turner <kturner@apache.org>", "committedDate": "2020-03-02T17:01:19Z", "type": "commit"}, {"oid": "c4ed306cce38372a0fd885423cdae32e3e8a335c", "url": "https://github.com/apache/accumulo/commit/c4ed306cce38372a0fd885423cdae32e3e8a335c", "message": "Fixes #1430 - Replaced text '1024' with table name and namespace name constants.", "committedDate": "2020-03-02T17:34:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5MjE4MQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r387792181", "bodyText": "This code will never execute when the previous line throws an exception.", "author": "keith-turner", "createdAt": "2020-03-04T16:41:55Z", "path": "test/src/main/java/org/apache/accumulo/test/NamespacesIT.java", "diffHunk": "@@ -191,6 +192,18 @@ public void createTableInMissingNamespace() throws Exception {\n     }\n   }\n \n+  @Test(expected = IllegalArgumentException.class)\n+  public void createNamespaceWithNamespaceLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, NamespaceExistsException {\n+    StringBuilder namespaceBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_NAMESPACE_LEN; i++) {\n+      namespaceBuilder.append('a');\n+    }\n+    String namespace = namespaceBuilder.toString();\n+    c.namespaceOperations().create(namespace);\n+    assertTrue(!c.namespaceOperations().exists(namespace));", "originalCommit": "c4ed306cce38372a0fd885423cdae32e3e8a335c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3MTY3NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r388271674", "bodyText": "The assertion line is not needed if we depend on the throw/not thrown status of the expected exception for testing. However, that does not really test for the existence of a table with an invalid name. So...I removed the expected notation and put the assertion in a try-catch block in the newest commit.", "author": "cradal", "createdAt": "2020-03-05T12:48:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5MjE4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e5ce1b8e6697bdd4a82b9bd87e2c6b083a997f7a", "chunk": "diff --git a/test/src/main/java/org/apache/accumulo/test/NamespacesIT.java b/test/src/main/java/org/apache/accumulo/test/NamespacesIT.java\nindex 4a7cb63323..6fb58a662d 100644\n--- a/test/src/main/java/org/apache/accumulo/test/NamespacesIT.java\n+++ b/test/src/main/java/org/apache/accumulo/test/NamespacesIT.java\n\n@@ -192,7 +192,7 @@ public class NamespacesIT extends SharedMiniClusterBase {\n     }\n   }\n \n-  @Test(expected = IllegalArgumentException.class)\n+  @Test\n   public void createNamespaceWithNamespaceLengthLimit()\n       throws AccumuloException, AccumuloSecurityException, NamespaceExistsException {\n     StringBuilder namespaceBuilder = new StringBuilder();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5Mjc0NQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r387792745", "bodyText": "When the previous line throws an exception, this line will not execute.", "author": "keith-turner", "createdAt": "2020-03-04T16:42:50Z", "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +190,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test(expected = IllegalArgumentException.class)\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_TABLE_NAME_LEN; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);\n+    assertTrue(!accumuloClient.tableOperations().exists(tableName));", "originalCommit": "c4ed306cce38372a0fd885423cdae32e3e8a335c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3MTcxNg==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r388271716", "bodyText": "Please see NamespacesIT comment.", "author": "cradal", "createdAt": "2020-03-05T12:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5Mjc0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "e5ce1b8e6697bdd4a82b9bd87e2c6b083a997f7a", "chunk": "diff --git a/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java b/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\nindex e9ab3bef55..629061bd34 100644\n--- a/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n+++ b/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n\n@@ -189,8 +189,8 @@ public class TableOperationsIT extends AccumuloClusterHarness {\n         props.get(Property.TABLE_CONSTRAINT_PREFIX + \"1\"));\n     accumuloClient.tableOperations().delete(tableName);\n   }\n-\n-  @Test(expected = IllegalArgumentException.class)\n+  \n+  @Test\n   public void createTableWithTableNameLengthLimit()\n       throws AccumuloException, AccumuloSecurityException, TableExistsException {\n     StringBuilder tableNameBuilder = new StringBuilder();\n"}}, {"oid": "e5ce1b8e6697bdd4a82b9bd87e2c6b083a997f7a", "url": "https://github.com/apache/accumulo/commit/e5ce1b8e6697bdd4a82b9bd87e2c6b083a997f7a", "message": "Fixes #1430 - Removed @Test(expected...) notation. Added try-catch block to handle IllegalArgExc", "committedDate": "2020-03-04T20:00:32Z", "type": "commit"}, {"oid": "3e93c7990cf5bd7ca1eecffa1c0062356dd3e35e", "url": "https://github.com/apache/accumulo/commit/3e93c7990cf5bd7ca1eecffa1c0062356dd3e35e", "message": "Fixes #1430 - Added fail() for create operation in TableOps and NamespaceOps ITs.\n\nls\ngit commit -m Fixes", "committedDate": "2020-03-05T18:20:16Z", "type": "commit"}, {"oid": "01c6b4458d3fbac0eadf98cb3777b61b02224a14", "url": "https://github.com/apache/accumulo/commit/01c6b4458d3fbac0eadf98cb3777b61b02224a14", "message": "Merge branch 'master' into accumulo-1430", "committedDate": "2020-03-06T12:58:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwNzkzNQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r392507935", "bodyText": "These can be simplified like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                try {\n          \n          \n            \n                  accumuloClient.tableOperations().create(tableName);\n          \n          \n            \n                  fail(\"IllegalArgumentException was not thrown\");\n          \n          \n            \n                } catch (IllegalArgumentException exc) {\n          \n          \n            \n                  assertTrue(!accumuloClient.tableOperations().exists(tableName));\n          \n          \n            \n                }\n          \n          \n            \n                assertThrows(IllegalArgumentException.class, () -> accumuloClient.tableOperations().create(tableName));\n          \n          \n            \n                assertFalse(accumuloClient.tableOperations().exists(tableName));\n          \n      \n    \n    \n  \n\nThe Assert.assertThrows also returns the exception, so you can do additional checks to check the exception's getMessage() and, if you wish, the getCause().\nYou can also create the name using commons-lang3's String tableName = StringUtils.repeat('a', MAX_TABLE_NAME_LEN);\nYou can also verify the length of the string in an assert statement. Additional checks would include max length plus and minus one.\nThese comments also apply to the namespace checks.", "author": "ctubbsii", "createdAt": "2020-03-13T22:08:13Z", "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +190,22 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_TABLE_NAME_LEN; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    try {\n+      accumuloClient.tableOperations().create(tableName);\n+      fail(\"IllegalArgumentException was not thrown\");\n+    } catch (IllegalArgumentException exc) {\n+      assertTrue(!accumuloClient.tableOperations().exists(tableName));\n+    }", "originalCommit": "01c6b4458d3fbac0eadf98cb3777b61b02224a14", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ad5582b8cdabfed188f4be0ec49d5868c2f53fe", "chunk": "diff --git a/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java b/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\nindex f788158fe7..3cfff49c76 100644\n--- a/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n+++ b/test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n\n@@ -198,12 +198,8 @@ public class TableOperationsIT extends AccumuloClusterHarness {\n       tableNameBuilder.append('a');\n     }\n     String tableName = tableNameBuilder.toString();\n-    try {\n-      accumuloClient.tableOperations().create(tableName);\n-      fail(\"IllegalArgumentException was not thrown\");\n-    } catch (IllegalArgumentException exc) {\n-      assertTrue(!accumuloClient.tableOperations().exists(tableName));\n-    }\n+    assertThrows(IllegalArgumentException.class, () -> accumuloClient.tableOperations().create(tableName));\n+    assertFalse(accumuloClient.tableOperations().exists(tableName));\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwOTg2MA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r392509860", "bodyText": "There is an INVALID_NAME type you can use instead of OTHER. (Same for the NAMESPACE validation method).", "author": "ctubbsii", "createdAt": "2020-03-13T22:15:29Z", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -716,6 +738,25 @@ private void validateArgumentCount(List<ByteBuffer> arguments, TableOperation op\n   private String validateNamespaceArgument(ByteBuffer namespaceArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String namespace = namespaceArg == null ? null : ByteBufferUtil.toString(namespaceArg);\n+    if ((namespace != null) && (namespace.length() > MAX_NAMESPACE_LEN)) {\n+      log.warn(\"Namespaces greater than \" + MAX_NAMESPACE_LEN\n+          + \" characters should be renamed to conform to a \" + MAX_NAMESPACE_LEN\n+          + \" character limit. \"\n+          + \"Longer namespaces are no longer supported and may result in unexpected behavior.\");\n+    }\n+    return _validateArgument(namespace, op, Namespaces.VALID_NAME.and(userValidator));\n+  }\n+\n+  // Verify namespace arguments are valid, and match any additional restrictions\n+  private String validateNewNamespaceArgument(ByteBuffer namespaceArg, TableOperation op,\n+      Validator<String> userValidator) throws ThriftTableOperationException {\n+    String namespace = namespaceArg == null ? null : ByteBufferUtil.toString(namespaceArg);\n+    if ((namespace != null) && (namespace.length() > MAX_NAMESPACE_LEN)) {\n+      throw new ThriftTableOperationException(null, namespace, op,\n+          TableOperationExceptionType.OTHER,", "originalCommit": "01c6b4458d3fbac0eadf98cb3777b61b02224a14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0NDIyMg==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r393444222", "bodyText": "I added a commit to take care of this.", "author": "ctubbsii", "createdAt": "2020-03-17T04:53:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwOTg2MA=="}], "type": "inlineReview", "revised_code": {"commit": "1c85d62d1c480e191f852f164a056ddb1fb17ae0", "chunk": "diff --git a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\nindex d6e46300b2..8ffed957a3 100644\n--- a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n+++ b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\n@@ -753,7 +753,7 @@ class FateServiceHandler implements FateService.Iface {\n     String namespace = namespaceArg == null ? null : ByteBufferUtil.toString(namespaceArg);\n     if ((namespace != null) && (namespace.length() > MAX_NAMESPACE_LEN)) {\n       throw new ThriftTableOperationException(null, namespace, op,\n-          TableOperationExceptionType.OTHER,\n+          TableOperationExceptionType.INVALID_NAME,\n           \"Namespaces must be less than or equal to \" + MAX_NAMESPACE_LEN + \" characters. \" + \"'\"\n               + namespace + \"' is \" + namespace.length() + \" characters long.\");\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxMDYwOQ==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r392510609", "bodyText": "As follow-on, it might be useful to create a cache of recent warnings, so tables which aren't immediately renamed, but are relatively active, don't spam the logs too much.", "author": "ctubbsii", "createdAt": "2020-03-13T22:18:08Z", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -697,10 +700,29 @@ private TableId validateTableIdArgument(ByteBuffer tableIdArg, TableOperation op\n     }\n   }\n \n-  // Verify table name arguments are valid, and match any additional restrictions\n+  // Verify older table name arguments are valid, and match any additional restrictions\n   private String validateTableNameArgument(ByteBuffer tableNameArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String tableName = tableNameArg == null ? null : ByteBufferUtil.toString(tableNameArg);\n+    if ((tableName != null) && (tableName.length() > MAX_TABLE_NAME_LEN)) {\n+      log.warn(\"Table names greater than \" + MAX_TABLE_NAME_LEN\n+          + \" characters should be renamed to conform to a \" + MAX_TABLE_NAME_LEN\n+          + \" character limit. Longer table names are no longer supported and may result in \"\n+          + \" unexpected behavior.\");\n+    }", "originalCommit": "01c6b4458d3fbac0eadf98cb3777b61b02224a14", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e3c979d28be45a1fee8a803a3d1fcdb915a00d4d", "chunk": "diff --git a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\nindex d6e46300b2..10779d64ad 100644\n--- a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n+++ b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\n@@ -700,7 +700,7 @@ class FateServiceHandler implements FateService.Iface {\n     }\n   }\n \n-  // Verify older table name arguments are valid, and match any additional restrictions\n+  // Verify existing table's name argument is valid, and match any additional restrictions\n   private String validateTableNameArgument(ByteBuffer tableNameArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String tableName = tableNameArg == null ? null : ByteBufferUtil.toString(tableNameArg);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxMDk0NA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r392510944", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        validateNewTableNameArgument(arguments.get(1), tableOp, new Validator<String>() {\n          \n          \n            \n                        validateNewTableNameArgument(arguments.get(1), tableOp, new Validator<>() {", "author": "ctubbsii", "createdAt": "2020-03-13T22:19:21Z", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -206,7 +208,8 @@ public void executeFateOperation(TInfo tinfo, TCredentials c, long opid, FateOpe\n         final String oldTableName =\n             validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n         String newTableName =\n-            validateTableNameArgument(arguments.get(1), tableOp, new Validator<>() {\n+\n+            validateNewTableNameArgument(arguments.get(1), tableOp, new Validator<String>() {", "originalCommit": "01c6b4458d3fbac0eadf98cb3777b61b02224a14", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49db591a8b218fa3055c9f7beb410af0f0be42db", "chunk": "diff --git a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\nindex d6e46300b2..cc06027d14 100644\n--- a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n+++ b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\n@@ -209,7 +209,7 @@ class FateServiceHandler implements FateService.Iface {\n             validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n         String newTableName =\n \n-            validateNewTableNameArgument(arguments.get(1), tableOp, new Validator<String>() {\n+            validateNewTableNameArgument(arguments.get(1), tableOp, new Validator<>() {\n \n               @Override\n               public boolean test(String argument) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxMTk4MA==", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r392511980", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // Verify older table name arguments are valid, and match any additional restrictions\n          \n          \n            \n              // Verify existing table's name argument is valid, and match any additional restrictions", "author": "ctubbsii", "createdAt": "2020-03-13T22:23:05Z", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -697,10 +700,29 @@ private TableId validateTableIdArgument(ByteBuffer tableIdArg, TableOperation op\n     }\n   }\n \n-  // Verify table name arguments are valid, and match any additional restrictions\n+  // Verify older table name arguments are valid, and match any additional restrictions", "originalCommit": "01c6b4458d3fbac0eadf98cb3777b61b02224a14", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e3c979d28be45a1fee8a803a3d1fcdb915a00d4d", "chunk": "diff --git a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\nindex d6e46300b2..10779d64ad 100644\n--- a/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n+++ b/server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\n@@ -700,7 +700,7 @@ class FateServiceHandler implements FateService.Iface {\n     }\n   }\n \n-  // Verify older table name arguments are valid, and match any additional restrictions\n+  // Verify existing table's name argument is valid, and match any additional restrictions\n   private String validateTableNameArgument(ByteBuffer tableNameArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String tableName = tableNameArg == null ? null : ByteBufferUtil.toString(tableNameArg);\n"}}, {"oid": "e3c979d28be45a1fee8a803a3d1fcdb915a00d4d", "url": "https://github.com/apache/accumulo/commit/e3c979d28be45a1fee8a803a3d1fcdb915a00d4d", "message": "Update server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\nCo-Authored-By: Christopher Tubbs <ctubbsii@apache.org>", "committedDate": "2020-03-16T14:43:26Z", "type": "commit"}, {"oid": "49db591a8b218fa3055c9f7beb410af0f0be42db", "url": "https://github.com/apache/accumulo/commit/49db591a8b218fa3055c9f7beb410af0f0be42db", "message": "Update server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java\n\nCo-Authored-By: Christopher Tubbs <ctubbsii@apache.org>", "committedDate": "2020-03-16T14:43:39Z", "type": "commit"}, {"oid": "0ad5582b8cdabfed188f4be0ec49d5868c2f53fe", "url": "https://github.com/apache/accumulo/commit/0ad5582b8cdabfed188f4be0ec49d5868c2f53fe", "message": "Update test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java\n\nCo-Authored-By: Christopher Tubbs <ctubbsii@apache.org>", "committedDate": "2020-03-16T17:02:19Z", "type": "commit"}, {"oid": "885dec1f2e235f97d353c72ad725908c016d565f", "url": "https://github.com/apache/accumulo/commit/885dec1f2e235f97d353c72ad725908c016d565f", "message": "Merge branch 'master' into accumulo-1430", "committedDate": "2020-03-17T04:14:45Z", "type": "commit"}, {"oid": "1c85d62d1c480e191f852f164a056ddb1fb17ae0", "url": "https://github.com/apache/accumulo/commit/1c85d62d1c480e191f852f164a056ddb1fb17ae0", "message": "Use INVALID_NAME type and assertThrows in IT", "committedDate": "2020-03-17T04:46:26Z", "type": "commit"}]}