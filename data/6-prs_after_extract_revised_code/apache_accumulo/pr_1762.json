{"pr_number": 1762, "pr_title": "Moves gc candidate code insertion to Ample", "pr_createdAt": "2020-10-30T23:15:00Z", "pr_url": "https://github.com/apache/accumulo/pull/1762", "timeline": [{"oid": "02a6edb3446324c5e1a9f57bdc2f612e7da9392c", "url": "https://github.com/apache/accumulo/commit/02a6edb3446324c5e1a9f57bdc2f612e7da9392c", "message": "Moves gc candidate code insertion to Ample", "committedDate": "2020-10-30T23:12:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyMTQ4Mw==", "url": "https://github.com/apache/accumulo/pull/1762#discussion_r515421483", "bodyText": "Can you use Java built in Stream to map to StoredTableFile, instead of adding the Guava usage?\nSomething like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      rgcc -> rgcc.add(Collections2.transform(candidates, StoredTabletFile::new)));\n          \n          \n            \n                      rgcc -> rgcc.add(Collections2.transform(candidates, StoredTabletFile::new)));\n          \n          \n            \n                      rgcc -> rgcc.add(candidates.stream().map(StoredTabletFile::new).collect(toList())));\n          \n      \n    \n    \n  \n\nI know it's slightly longer, but I think it's generally safer to use built-ins than to rely on Guava.", "author": "ctubbsii", "createdAt": "2020-10-30T23:22:51Z", "path": "server/base/src/main/java/org/apache/accumulo/server/metadata/ServerAmpleImpl.java", "diffHunk": "@@ -126,6 +127,25 @@ public void putGcCandidates(TableId tableId, Collection<StoredTabletFile> candid\n     }\n   }\n \n+  @Override\n+  public void putGcFdCandidates(TableId tableId, Collection<String> candidates) {\n+\n+    if (RootTable.ID.equals(tableId)) {\n+      // Directories are unexpected for the root tablet, so convert to stored tablet file\n+      mutateRootGcCandidates(\n+          rgcc -> rgcc.add(Collections2.transform(candidates, StoredTabletFile::new)));", "originalCommit": "02a6edb3446324c5e1a9f57bdc2f612e7da9392c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM2MjE5OA==", "url": "https://github.com/apache/accumulo/pull/1762#discussion_r516362198", "bodyText": "I changed this in d259836 to use streams.  Made the method take an iterator instead of a collection. This allowed streams to be used w/o copying to a new collection like the Guava code and its still short.", "author": "keith-turner", "createdAt": "2020-11-03T00:33:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyMTQ4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM2ODMxMA==", "url": "https://github.com/apache/accumulo/pull/1762#discussion_r516368310", "bodyText": "That works. \ud83d\ude3a", "author": "ctubbsii", "createdAt": "2020-11-03T00:46:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyMTQ4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "d2598369f079029025751a7d994c91d1a1f78abb", "chunk": "diff --git a/server/base/src/main/java/org/apache/accumulo/server/metadata/ServerAmpleImpl.java b/server/base/src/main/java/org/apache/accumulo/server/metadata/ServerAmpleImpl.java\nindex 18c9dd8b4c..3f841f7732 100644\n--- a/server/base/src/main/java/org/apache/accumulo/server/metadata/ServerAmpleImpl.java\n+++ b/server/base/src/main/java/org/apache/accumulo/server/metadata/ServerAmpleImpl.java\n\n@@ -128,12 +127,13 @@ public class ServerAmpleImpl extends AmpleImpl implements Ample {\n   }\n \n   @Override\n-  public void putGcFdCandidates(TableId tableId, Collection<String> candidates) {\n+  public void putGcFileAndDirCandidates(TableId tableId, Collection<String> candidates) {\n \n     if (RootTable.ID.equals(tableId)) {\n+\n       // Directories are unexpected for the root tablet, so convert to stored tablet file\n       mutateRootGcCandidates(\n-          rgcc -> rgcc.add(Collections2.transform(candidates, StoredTabletFile::new)));\n+          rgcc -> rgcc.add(candidates.stream().map(StoredTabletFile::new).iterator()));\n       return;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2ODY4NQ==", "url": "https://github.com/apache/accumulo/pull/1762#discussion_r516068685", "bodyText": "What is \"Fd\" short for? Should comment what the \"Fd\" in the method name means.", "author": "milleruntime", "createdAt": "2020-11-02T15:52:27Z", "path": "core/src/main/java/org/apache/accumulo/core/metadata/schema/Ample.java", "diffHunk": "@@ -144,6 +144,13 @@ default void putGcCandidates(TableId tableId, Collection<StoredTabletFile> candi\n     throw new UnsupportedOperationException();\n   }\n \n+  /**\n+   * Unlike {@link #putGcCandidates(TableId, Collection)} this takes file and dir GC candidates.\n+   */\n+  default void putGcFdCandidates(TableId tableId, Collection<String> candidates) {\n+    throw new UnsupportedOperationException();\n+  }\n+", "originalCommit": "02a6edb3446324c5e1a9f57bdc2f612e7da9392c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA3NDA2NQ==", "url": "https://github.com/apache/accumulo/pull/1762#discussion_r516074065", "bodyText": "If \"Fd\" means \"file and Directories\"  you could just put that explicitly in the name like putGcFileCandidates or putGcFileDirectories", "author": "milleruntime", "createdAt": "2020-11-02T15:59:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2ODY4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM1NDk5OA==", "url": "https://github.com/apache/accumulo/pull/1762#discussion_r516354998", "bodyText": "Yeah Fd meant file and dirs.  I can change it to FileOrDirs.  The existing method is more strongly typed, so it probably does not need File in the name.", "author": "keith-turner", "createdAt": "2020-11-03T00:18:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2ODY4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM2MjMxMw==", "url": "https://github.com/apache/accumulo/pull/1762#discussion_r516362313", "bodyText": "I changed the name in d259836", "author": "keith-turner", "createdAt": "2020-11-03T00:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2ODY4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d2598369f079029025751a7d994c91d1a1f78abb", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/metadata/schema/Ample.java b/core/src/main/java/org/apache/accumulo/core/metadata/schema/Ample.java\nindex 7a499b2851..70044ae04d 100644\n--- a/core/src/main/java/org/apache/accumulo/core/metadata/schema/Ample.java\n+++ b/core/src/main/java/org/apache/accumulo/core/metadata/schema/Ample.java\n\n@@ -147,7 +147,7 @@ public interface Ample {\n   /**\n    * Unlike {@link #putGcCandidates(TableId, Collection)} this takes file and dir GC candidates.\n    */\n-  default void putGcFdCandidates(TableId tableId, Collection<String> candidates) {\n+  default void putGcFileAndDirCandidates(TableId tableId, Collection<String> candidates) {\n     throw new UnsupportedOperationException();\n   }\n \n"}}, {"oid": "d2598369f079029025751a7d994c91d1a1f78abb", "url": "https://github.com/apache/accumulo/commit/d2598369f079029025751a7d994c91d1a1f78abb", "message": "Code review updates", "committedDate": "2020-11-03T00:31:26Z", "type": "commit"}]}