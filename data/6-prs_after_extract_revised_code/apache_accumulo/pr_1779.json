{"pr_number": 1779, "pr_title": "Stabilize NamespaceIdTest and TableIdTest", "pr_createdAt": "2020-11-13T23:01:26Z", "pr_url": "https://github.com/apache/accumulo/pull/1779", "timeline": [{"oid": "58a80d76e4ac59523f1f20fa1e46d35c556ba54d", "url": "https://github.com/apache/accumulo/commit/58a80d76e4ac59523f1f20fa1e46d35c556ba54d", "message": "Stabilize NamespaceIdTest and TableIdTest\n\nTableId and NamespaceId have tests to ensure their caches work\ncorrectly. Previously, the tests would only *attempt* to increase the\ncache before checking that it decreased again. However, a garbage\ncollection could have reduced the size of the cache before we checked\nits size. This change *guarantees* the cache will reach a specific size\nbefore proceeding.", "committedDate": "2020-11-13T22:54:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzNDYzNA==", "url": "https://github.com/apache/accumulo/pull/1779#discussion_r524434634", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                while ((preGCSize = NamespaceId.cache.asMap().entrySet().stream().count()) < 100) {\n          \n          \n            \n                while ((preGCSize = NamespaceId.cache.asMap().entrySet().size()) < 100) {", "author": "milleruntime", "createdAt": "2020-11-16T17:12:26Z", "path": "core/src/test/java/org/apache/accumulo/core/data/NamespaceIdTest.java", "diffHunk": "@@ -79,12 +79,13 @@ public void testCacheIncreasesAndDecreasesAfterGC() {\n     assertEquals(namespaceString, nsId.canonical());\n \n     // create a bunch more and throw them away\n-    for (int i = 0; i < 999; i++) {\n-      NamespaceId.of(new String(\"namespace\" + i));\n+    long preGCSize = 0;\n+    int i = 0;\n+    while ((preGCSize = NamespaceId.cache.asMap().entrySet().stream().count()) < 100) {", "originalCommit": "58a80d76e4ac59523f1f20fa1e46d35c556ba54d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ0MDIzNw==", "url": "https://github.com/apache/accumulo/pull/1779#discussion_r524440237", "bodyText": "We can't use size() (either on the Map or its entrySet()), because that is only an approximation when working with Guava Cache objects. We need the actual count, which we can get by iterating over the entry set. See https://guava.dev/releases/21.0/api/docs/com/google/common/cache/Cache.html#size--", "author": "ctubbsii", "createdAt": "2020-11-16T17:21:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzNDYzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1MzUwOA==", "url": "https://github.com/apache/accumulo/pull/1779#discussion_r524453508", "bodyText": "Ah thank you.  I was racking my brain trying to figure out the difference between the two.", "author": "milleruntime", "createdAt": "2020-11-16T17:40:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzNDYzNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzNTQzOA==", "url": "https://github.com/apache/accumulo/pull/1779#discussion_r524435438", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                while ((preGCSize = TableId.cache.asMap().entrySet().stream().count()) < 100) {\n          \n          \n            \n                while ((preGCSize = TableId.cache.asMap().entrySet().size()) < 100) {\n          \n      \n    \n    \n  \n\nThere are also many other occurances in the test you could replace.", "author": "milleruntime", "createdAt": "2020-11-16T17:13:39Z", "path": "core/src/test/java/org/apache/accumulo/core/data/TableIdTest.java", "diffHunk": "@@ -88,12 +88,13 @@ public void testCacheIncreasesAndDecreasesAfterGC() {\n     assertEquals(tableString, table1.canonical());\n \n     // create a bunch more and throw them away\n-    for (int i = 0; i < 999; i++) {\n-      TableId.of(new String(\"table\" + i));\n+    long preGCSize = 0;\n+    int i = 0;\n+    while ((preGCSize = TableId.cache.asMap().entrySet().stream().count()) < 100) {", "originalCommit": "58a80d76e4ac59523f1f20fa1e46d35c556ba54d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzNzc4Mw==", "url": "https://github.com/apache/accumulo/pull/1779#discussion_r524437783", "bodyText": "This was a suggestion from my IDE but I don't think they are exactly the same...", "author": "milleruntime", "createdAt": "2020-11-16T17:17:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzNTQzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ0MDc1NA==", "url": "https://github.com/apache/accumulo/pull/1779#discussion_r524440754", "bodyText": "Yeah, the IDE is wrong in this case. See my other comment.", "author": "ctubbsii", "createdAt": "2020-11-16T17:21:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzNTQzOA=="}], "type": "inlineReview", "revised_code": null}]}