{"pr_number": 1653, "pr_title": "Use Ample for tablet location updates", "pr_createdAt": "2020-07-09T11:54:41Z", "pr_url": "https://github.com/apache/accumulo/pull/1653", "timeline": [{"oid": "6b447c466c467507fd210c0571039f71ba30931b", "url": "https://github.com/apache/accumulo/commit/6b447c466c467507fd210c0571039f71ba30931b", "message": "Fixes to ammend refactor errors from reversion", "committedDate": "2020-07-07T12:20:27Z", "type": "commit"}, {"oid": "456b7e088e708c286ae4fdd967c22ee9f4230dab", "url": "https://github.com/apache/accumulo/commit/456b7e088e708c286ae4fdd967c22ee9f4230dab", "message": "Removed random letter that was added", "committedDate": "2020-07-07T13:04:20Z", "type": "commit"}, {"oid": "bd1fdb484447d4eb6c537d9695f4b30f58f8d471", "url": "https://github.com/apache/accumulo/commit/bd1fdb484447d4eb6c537d9695f4b30f58f8d471", "message": "Merge branch 'master' of https://github.com/apache/accumulo into fix_update_revert", "committedDate": "2020-07-08T11:12:46Z", "type": "commit"}, {"oid": "655743a8a02bc895420658f5b7065300a0c0650d", "url": "https://github.com/apache/accumulo/commit/655743a8a02bc895420658f5b7065300a0c0650d", "message": "small fixes", "committedDate": "2020-07-08T11:27:21Z", "type": "commit"}, {"oid": "b747180151d0c734a31bad657d831d9dc1f00165", "url": "https://github.com/apache/accumulo/commit/b747180151d0c734a31bad657d831d9dc1f00165", "message": "fix merge conflict", "committedDate": "2020-09-08T15:51:19Z", "type": "commit"}, {"oid": "b9cf2c9c228745b4ba55c86cf112de4663e57a2a", "url": "https://github.com/apache/accumulo/commit/b9cf2c9c228745b4ba55c86cf112de4663e57a2a", "message": "fix imports", "committedDate": "2020-09-08T16:01:33Z", "type": "commit"}, {"oid": "bf262bf01afc8980e6d3d546a0dd1d656ddbcfac", "url": "https://github.com/apache/accumulo/commit/bf262bf01afc8980e6d3d546a0dd1d656ddbcfac", "message": "small change", "committedDate": "2020-09-09T11:30:39Z", "type": "commit"}, {"oid": "d543ae65eb4bce624bafddd9c7ebb0a7f3f0971f", "url": "https://github.com/apache/accumulo/commit/d543ae65eb4bce624bafddd9c7ebb0a7f3f0971f", "message": "whitespace removal", "committedDate": "2020-09-09T15:40:48Z", "type": "commit"}, {"oid": "7c025e5cf13ef0af5e35f8897ae5b86ee54b4d04", "url": "https://github.com/apache/accumulo/commit/7c025e5cf13ef0af5e35f8897ae5b86ee54b4d04", "message": "fix merge conflicts", "committedDate": "2020-09-09T15:52:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU1ODk5Ng==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486558996", "bodyText": "This could use a small comment above it to explain what situation it is checking for.", "author": "ctubbsii", "createdAt": "2020-09-10T18:41:21Z", "path": "core/src/main/java/org/apache/accumulo/core/util/HostAndPort.java", "diffHunk": "@@ -171,6 +171,10 @@ public static HostAndPort fromString(String hostPortString) {\n       // JDK7 accepts leading plus signs. We don't want to.\n       checkArgument(!portString.startsWith(\"+\"), \"Unparseable port number: %s\", hostPortString);\n       try {\n+        if (portString.contains(\"[\")) {\n+          int endIndex = portString.indexOf(\"[\");\n+          portString = portString.substring(0, endIndex);\n+        }", "originalCommit": "7c025e5cf13ef0af5e35f8897ae5b86ee54b4d04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk3NjMyOA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486976328", "bodyText": "I will add that. This is to ensure it actually grabs the port number, due to some change I made, MasterRepairsDualAssignmentITfails because the portString contains more than just the port number. Example below:\n38277[10005df00740005]\n\nI'll take a look at the cause but this if statement does solve it temporarily.", "author": "Manno15", "createdAt": "2020-09-11T11:12:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU1ODk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1NDMyOA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r487154328", "bodyText": "That's fine. It just needs a comment in the code.", "author": "ctubbsii", "createdAt": "2020-09-11T16:25:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU1ODk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE4MzA3NQ==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r487183075", "bodyText": "I will add it this Monday.", "author": "Manno15", "createdAt": "2020-09-11T17:19:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU1ODk5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "7cfc9ffe2f62cb956c55f25538b55869b37ed421", "chunk": "diff --git a/core/src/main/java/org/apache/accumulo/core/util/HostAndPort.java b/core/src/main/java/org/apache/accumulo/core/util/HostAndPort.java\nindex 3af132b099..8353ef3763 100644\n--- a/core/src/main/java/org/apache/accumulo/core/util/HostAndPort.java\n+++ b/core/src/main/java/org/apache/accumulo/core/util/HostAndPort.java\n\n@@ -171,6 +171,9 @@ public final class HostAndPort implements Serializable {\n       // JDK7 accepts leading plus signs. We don't want to.\n       checkArgument(!portString.startsWith(\"+\"), \"Unparseable port number: %s\", hostPortString);\n       try {\n+        // Switching the tabletStateStores to Ample causes the portString to contain more than just\n+        // the port number.\n+        // This is to ensure that we only grab the port number.\n         if (portString.contains(\"[\")) {\n           int endIndex = portString.indexOf(\"[\");\n           portString = portString.substring(0, endIndex);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwOTUwNQ==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486609505", "bodyText": "Why is it the case that these location entries no longer need to be updated here? Where is the replacement code?", "author": "ctubbsii", "createdAt": "2020-09-10T20:19:24Z", "path": "server/base/src/main/java/org/apache/accumulo/server/util/MasterMetadataUtil.java", "diffHunk": "@@ -227,14 +204,6 @@ public static StoredTabletFile updateTabletDataFile(ServerContext context, KeyEx\n       tablet.putFile(path, dfv);\n       tablet.putTime(time);\n       newFile = path.insert();\n-\n-      TServerInstance self = getTServerInstance(address, zooLock);\n-      tablet.putLocation(self, LocationType.LAST);\n-\n-      // remove the old location\n-      if (lastLocation != null && !lastLocation.equals(self)) {\n-        tablet.deleteLocation(lastLocation, LocationType.LAST);\n-      }", "originalCommit": "7c025e5cf13ef0af5e35f8897ae5b86ee54b4d04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk3NDU5NQ==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486974595", "bodyText": "The replacement code is my changes in #1616. That is what spawned most of these things. Though maybe this is still considered necessary but if lastLocation is properly set through those other changes then it doesn't have to be set here. I believe after #1616 this function wasn't used anymore but it has been awhile, I can go back and confirm that aspect.", "author": "Manno15", "createdAt": "2020-09-11T11:08:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwOTUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE2MDA3Nw==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r487160077", "bodyText": "Okay, that makes sense. I tried to trace the callers to this method, to see if they instead ended up reaching the new code path in #1616, but got tired last night. I'll look at it again today. I just want to make sure that if we're not updating it here, that it's because we definitely don't need to.", "author": "ctubbsii", "createdAt": "2020-09-11T16:35:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwOTUwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7cfc9ffe2f62cb956c55f25538b55869b37ed421", "chunk": "diff --git a/server/base/src/main/java/org/apache/accumulo/server/util/MasterMetadataUtil.java b/server/base/src/main/java/org/apache/accumulo/server/util/MasterMetadataUtil.java\nindex 40ea4a8c32..55f8a1f515 100644\n--- a/server/base/src/main/java/org/apache/accumulo/server/util/MasterMetadataUtil.java\n+++ b/server/base/src/main/java/org/apache/accumulo/server/util/MasterMetadataUtil.java\n\n@@ -204,6 +227,14 @@ public class MasterMetadataUtil {\n       tablet.putFile(path, dfv);\n       tablet.putTime(time);\n       newFile = path.insert();\n+\n+      TServerInstance self = getTServerInstance(address, zooLock);\n+      tablet.putLocation(self, LocationType.LAST);\n+\n+      // remove the old location\n+      if (lastLocation != null && !lastLocation.equals(self)) {\n+        tablet.deleteLocation(lastLocation, LocationType.LAST);\n+      }\n     }\n     tablet.putFlushId(flushId);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwOTU3Nw==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486609577", "bodyText": "Why is it the case that these location entries no longer need to be updated here? Where is the replacement code?", "author": "ctubbsii", "createdAt": "2020-09-10T20:19:34Z", "path": "server/base/src/main/java/org/apache/accumulo/server/util/MasterMetadataUtil.java", "diffHunk": "@@ -197,13 +181,6 @@ public static void replaceDatafiles(ServerContext context, KeyExtent extent,\n     if (compactionId != null)\n       tablet.putCompactionId(compactionId);\n \n-    TServerInstance self = getTServerInstance(address, zooLock);\n-    tablet.putLocation(self, LocationType.LAST);\n-\n-    // remove the old location\n-    if (lastLocation != null && !lastLocation.equals(self))\n-      tablet.deleteLocation(lastLocation, LocationType.LAST);\n-", "originalCommit": "7c025e5cf13ef0af5e35f8897ae5b86ee54b4d04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk3NDY5MQ==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486974691", "bodyText": "Same, as above.", "author": "Manno15", "createdAt": "2020-09-11T11:08:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYwOTU3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7cfc9ffe2f62cb956c55f25538b55869b37ed421", "chunk": "diff --git a/server/base/src/main/java/org/apache/accumulo/server/util/MasterMetadataUtil.java b/server/base/src/main/java/org/apache/accumulo/server/util/MasterMetadataUtil.java\nindex 40ea4a8c32..55f8a1f515 100644\n--- a/server/base/src/main/java/org/apache/accumulo/server/util/MasterMetadataUtil.java\n+++ b/server/base/src/main/java/org/apache/accumulo/server/util/MasterMetadataUtil.java\n\n@@ -181,6 +197,13 @@ public class MasterMetadataUtil {\n     if (compactionId != null)\n       tablet.putCompactionId(compactionId);\n \n+    TServerInstance self = getTServerInstance(address, zooLock);\n+    tablet.putLocation(self, LocationType.LAST);\n+\n+    // remove the old location\n+    if (lastLocation != null && !lastLocation.equals(self))\n+      tablet.deleteLocation(lastLocation, LocationType.LAST);\n+\n     tablet.putZooLock(zooLock);\n \n     tablet.mutate();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMjA4OQ==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486612089", "bodyText": "I'm not sure these catch clauses should be removed, and that DistributedStoreException should be deleted. While the conversion to Ample does eliminate the checked exception of MutationsRejectedException, by wrapping it (and all other exceptions) with a RuntimeException, the RuntimeException was previously being handled here, and now it falls through.", "author": "ctubbsii", "createdAt": "2020-09-10T20:24:17Z", "path": "server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java", "diffHunk": "@@ -58,137 +54,86 @@ protected MetaDataStateStore(ClientContext context, CurrentState state, String t\n     return new MetaDataTableScanner(context, TabletsSection.getRange(), state, targetTableName);\n   }\n \n-  @Override\n-  public void setLocations(Collection<Assignment> assignments) throws DistributedStoreException {\n-    BatchWriter writer = createBatchWriter();\n-    try {\n-      for (Assignment assignment : assignments) {\n-        Mutation m = new Mutation(assignment.tablet.toMetaRow());\n-        assignment.server.putLocation(m);\n-        assignment.server.putLastLocation(m);\n-        assignment.server.clearFutureLocation(m);\n-        SuspendingTServer.clearSuspension(m);\n-        writer.addMutation(m);\n-      }\n-    } catch (Exception ex) {\n-      throw new DistributedStoreException(ex);\n-    } finally {\n-      try {\n-        writer.close();\n-      } catch (MutationsRejectedException e) {\n-        throw new DistributedStoreException(e);\n-      }", "originalCommit": "7c025e5cf13ef0af5e35f8897ae5b86ee54b4d04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk3NzAwMg==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486977002", "bodyText": "I will add this back. Intellij listed DistributedStoreException as not being used after my changes which is why I removed it in the first place.", "author": "Manno15", "createdAt": "2020-09-11T11:14:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMjA4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAxODU4OQ==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r487018589", "bodyText": "I added the try/catch back to these functions in MetaDataStateStore, do you think I should do the same to the other state stores even though they didn't have them before?", "author": "Manno15", "createdAt": "2020-09-11T12:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMjA4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1Nzg0Mw==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r487157843", "bodyText": "I'm not sure if it should be added to other locations. Probably not. I just know it is a behavior change to not handle the RuntimeExceptions that are thrown. I'm okay with that behavior change if it's justified (like, because we know for sure that we actually don't want to catch them here). I'm just not sure whether it's justified.", "author": "ctubbsii", "createdAt": "2020-09-11T16:31:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxMjA4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "2833ac4c775a4b7668430cec1dec162b5700ad14", "chunk": "diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\nindex cefea30f70..1a02f029f8 100644\n--- a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\n+++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\n\n@@ -54,45 +54,54 @@ class MetaDataStateStore implements TabletStateStore {\n     return new MetaDataTableScanner(context, TabletsSection.getRange(), state, targetTableName);\n   }\n \n-  public void setLocation(Assignment assignment, TServerInstance prevLastLoc) {\n-\n-    TabletMutator tabletMutator = ample.mutateTablet(assignment.tablet);\n-    tabletMutator.putLocation(assignment.server, LocationType.CURRENT);\n-    tabletMutator.putLocation(assignment.server, LocationType.LAST);\n-    tabletMutator.deleteLocation(assignment.server, LocationType.FUTURE);\n+  public void setLocation(Assignment assignment, TServerInstance prevLastLoc)\n+      throws DistributedStoreException {\n+    try {\n+      TabletMutator tabletMutator = ample.mutateTablet(assignment.tablet);\n+      tabletMutator.putLocation(assignment.server, LocationType.CURRENT);\n+      tabletMutator.putLocation(assignment.server, LocationType.LAST);\n+      tabletMutator.deleteLocation(assignment.server, LocationType.FUTURE);\n+\n+      // remove the old location\n+      if (prevLastLoc != null && !prevLastLoc.equals(assignment.server)) {\n+        tabletMutator.deleteLocation(prevLastLoc, LocationType.LAST);\n+      }\n \n-    // remove the old location\n-    if (prevLastLoc != null && !prevLastLoc.equals(assignment.server)) {\n-      tabletMutator.deleteLocation(prevLastLoc, LocationType.LAST);\n+      tabletMutator.mutate();\n+    } catch (Exception ex) {\n+      throw new DistributedStoreException(ex);\n     }\n-\n-    tabletMutator.mutate();\n-\n   }\n \n   @Override\n-  public void setFutureLocation(Assignment assignment) {\n-\n-    TabletMutator tabletMutator = ample.mutateTablet(assignment.tablet);\n-    tabletMutator.deleteSuspension();\n-    tabletMutator.putLocation(assignment.server, LocationType.FUTURE);\n-    tabletMutator.mutate();\n+  public void setFutureLocation(Assignment assignment) throws DistributedStoreException {\n+    try {\n+      TabletMutator tabletMutator = ample.mutateTablet(assignment.tablet);\n+      tabletMutator.deleteSuspension();\n+      tabletMutator.putLocation(assignment.server, LocationType.FUTURE);\n+      tabletMutator.mutate();\n+\n+    } catch (Exception ex) {\n+      throw new DistributedStoreException(ex);\n+    }\n   }\n \n   @Override\n   public void unassign(Collection<TabletLocationState> tablets,\n-      Map<TServerInstance,List<Path>> logsForDeadServers) {\n+      Map<TServerInstance,List<Path>> logsForDeadServers) throws DistributedStoreException {\n     unassign(tablets, logsForDeadServers, -1);\n   }\n \n   @Override\n   public void suspend(Collection<TabletLocationState> tablets,\n-      Map<TServerInstance,List<Path>> logsForDeadServers, long suspensionTimestamp) {\n+      Map<TServerInstance,List<Path>> logsForDeadServers, long suspensionTimestamp)\n+      throws DistributedStoreException {\n     unassign(tablets, logsForDeadServers, suspensionTimestamp);\n   }\n \n   private void unassign(Collection<TabletLocationState> tablets,\n-      Map<TServerInstance,List<Path>> logsForDeadServers, long suspensionTimestamp) {\n+      Map<TServerInstance,List<Path>> logsForDeadServers, long suspensionTimestamp)\n+      throws DistributedStoreException {\n     try (var tabletsMutator = ample.mutateTablets()) {\n       for (TabletLocationState tls : tablets) {\n         TabletMutator tabletMutator = tabletsMutator.mutateTablet(tls.extent);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNTk3OA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486615978", "bodyText": "It seems like this code would be less efficient, because it creates a new batch writer for each assignment, and that the method that handles the updates in Ample should deal with updating all of the assignments in one pass. What do you know about the performance implications of this change?", "author": "ctubbsii", "createdAt": "2020-09-10T20:31:43Z", "path": "server/manager/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java", "diffHunk": "@@ -871,7 +870,9 @@ private void flushChanges(SortedMap<TServerInstance,TabletServerStatus> currentT\n \n     if (!assignments.isEmpty()) {\n       Master.log.info(String.format(\"Assigning %d tablets\", assignments.size()));\n-      store.setFutureLocations(assignments);\n+\n+      for (Assignment assignment : assignments)\n+        store.setFutureLocation(assignment);", "originalCommit": "7c025e5cf13ef0af5e35f8897ae5b86ee54b4d04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk4NzI4MA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486987280", "bodyText": "I am not too sure about the performance implications. I remember this part being one of the ones I struggled with trying to figure out how to apply my other changes too. Part of the original goal of making these changes to the state stores was to pass in a single assignment instead of a collection, along with applying ample to it. Some of the state stores already did this before these changes like in ZooTabletStateStore.setFutureLocation. Its possible the easiest and best solution is to add the collection back and use:\n if (assignments.size() != 1)\n      throw new IllegalArgumentException(\"There is only one root tablet\");\n    Assignment assignment = assignments.iterator().next();\n    if (assignment.tablet.compareTo(RootTable.EXTENT) != 0)\n      throw new IllegalArgumentException(\"You can only store the root tablet `location\");\nat the beginning of the various state store functions.", "author": "Manno15", "createdAt": "2020-09-11T11:37:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNTk3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1ODk4Mw==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r487158983", "bodyText": "Well, the reason the ZooTabletStateStore only accepted one was because it can only ever have one... because the root table that uses the ZooTabletStateStore can never have more than one tablet, and therefore, there can never be more than one assignment being updated. That's not true for the other stores, because the metadata table can split into multiple tablets, and so can user tables.", "author": "ctubbsii", "createdAt": "2020-09-11T16:33:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNTk3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE4MjU2OA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r487182568", "bodyText": "That makes sense. I was told that was the case(only one assignment at a time) for all the stores even though we implemented it to be able to handle multiple assignments. Just to be clear, I should revert back to using collection for these functions?", "author": "Manno15", "createdAt": "2020-09-11T17:18:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNTk3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIwMDc2NA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r487200764", "bodyText": "Based on the code you changed, it does not appear that's the case. Specifically, where you made this update in a loop, it wasn't one at a time. I think you could probably have both the single-case version, and the collection version, so we don't have to do \"Collections.singletonList\" everywhere when we only have one. The Collection one could be optimized to reuse the same batchwriter somehow (not sure exactly what would need to change in the tablet mutator / Ample code to do that; the old code that didn't use Ample was obviously reusing a batch writer, but I'm not sure how to do it in an Ample way). I'm also not sure how you'd pass the previous location to clear if you're passing a collection... you might have a different previous location for each assignment, right? I'm not sure without analyzing the code in a lot more detail.", "author": "ctubbsii", "createdAt": "2020-09-11T17:55:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNTk3OA=="}], "type": "inlineReview", "revised_code": {"commit": "7cfc9ffe2f62cb956c55f25538b55869b37ed421", "chunk": "diff --git a/server/manager/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java b/server/manager/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java\nindex fe66a932f0..9ddd3db1e2 100644\n--- a/server/manager/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java\n+++ b/server/manager/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java\n\n@@ -870,9 +871,7 @@ abstract class TabletGroupWatcher extends Daemon {\n \n     if (!assignments.isEmpty()) {\n       Master.log.info(String.format(\"Assigning %d tablets\", assignments.size()));\n-\n-      for (Assignment assignment : assignments)\n-        store.setFutureLocation(assignment);\n+      store.setFutureLocations(assignments);\n     }\n     assignments.addAll(assigned);\n     for (Assignment a : assignments) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxOTE1NA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486619154", "bodyText": "Is assignment.server really the previously assigned location to clear? This doesn't seem right because MetaDataStateStore.setLocation just compares this prevLastLoc (passed in here as assignment.server against assignment.server. It seems like it would never be different, and the last location entries would remain (and possibly keep accruing?)", "author": "ctubbsii", "createdAt": "2020-09-10T20:37:53Z", "path": "server/tserver/src/main/java/org/apache/accumulo/tserver/AssignmentHandler.java", "diffHunk": "@@ -177,7 +177,7 @@ public void run() {\n         throw new RuntimeException(\"Minor compaction after recovery fails for \" + extent);\n       }\n       Assignment assignment = new Assignment(extent, server.getTabletSession());\n-      TabletStateStore.setLocation(server.getContext(), assignment);\n+      TabletStateStore.setLocation(server.getContext(), assignment, assignment.server);", "originalCommit": "7c025e5cf13ef0af5e35f8897ae5b86ee54b4d04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MTk3Nw==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486991977", "bodyText": "Yeah, that appears to have been a oversight on my part. I will use the tabletMetadate to get the last location.", "author": "Manno15", "createdAt": "2020-09-11T11:47:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxOTE1NA=="}], "type": "inlineReview", "revised_code": {"commit": "804326608eeb133de83f7ac0a00f354cd35aa8d2", "chunk": "diff --git a/server/tserver/src/main/java/org/apache/accumulo/tserver/AssignmentHandler.java b/server/tserver/src/main/java/org/apache/accumulo/tserver/AssignmentHandler.java\nindex 536a18fb4b..de6ebf4a17 100644\n--- a/server/tserver/src/main/java/org/apache/accumulo/tserver/AssignmentHandler.java\n+++ b/server/tserver/src/main/java/org/apache/accumulo/tserver/AssignmentHandler.java\n\n@@ -177,7 +178,8 @@ class AssignmentHandler implements Runnable {\n         throw new RuntimeException(\"Minor compaction after recovery fails for \" + extent);\n       }\n       Assignment assignment = new Assignment(extent, server.getTabletSession());\n-      TabletStateStore.setLocation(server.getContext(), assignment, assignment.server);\n+      TServerInstance preLastLoc = new TServerInstance(tabletMetadata.getLocation());\n+      TabletStateStore.setLocation(server.getContext(), assignment, preLastLoc);\n \n       synchronized (server.openingTablets) {\n         synchronized (server.onlineTablets) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxOTY4MA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486619680", "bodyText": "After your changes, this catch clause has no effect (since it was removed), and the RuntimeExceptions now thrown will continue falling through this, completely unhandled.", "author": "ctubbsii", "createdAt": "2020-09-10T20:38:53Z", "path": "server/tserver/src/main/java/org/apache/accumulo/tserver/UnloadTabletHandler.java", "diffHunk": "@@ -123,8 +122,6 @@ public void run() {\n         TabletStateStore.suspend(server.getContext(), tls, null,\n             requestTimeSkew + MILLISECONDS.convert(System.nanoTime(), NANOSECONDS));\n       }\n-    } catch (DistributedStoreException ex) {\n-      log.warn(\"Unable to update storage\", ex);", "originalCommit": "7c025e5cf13ef0af5e35f8897ae5b86ee54b4d04", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2833ac4c775a4b7668430cec1dec162b5700ad14", "chunk": "diff --git a/server/tserver/src/main/java/org/apache/accumulo/tserver/UnloadTabletHandler.java b/server/tserver/src/main/java/org/apache/accumulo/tserver/UnloadTabletHandler.java\nindex d64a1a4189..3f9bbec7ca 100644\n--- a/server/tserver/src/main/java/org/apache/accumulo/tserver/UnloadTabletHandler.java\n+++ b/server/tserver/src/main/java/org/apache/accumulo/tserver/UnloadTabletHandler.java\n\n@@ -122,6 +123,8 @@ class UnloadTabletHandler implements Runnable {\n         TabletStateStore.suspend(server.getContext(), tls, null,\n             requestTimeSkew + MILLISECONDS.convert(System.nanoTime(), NANOSECONDS));\n       }\n+    } catch (DistributedStoreException ex) {\n+      log.warn(\"Unable to update storage\", ex);\n     } catch (KeeperException e) {\n       log.warn(\"Unable determine our zookeeper session information\", e);\n     } catch (InterruptedException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMDE4NA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r486620184", "bodyText": "This seems likely where the actual lastLocation information is lost.", "author": "ctubbsii", "createdAt": "2020-09-10T20:39:54Z", "path": "server/tserver/src/main/java/org/apache/accumulo/tserver/tablet/DatafileManager.java", "diffHunk": "@@ -444,7 +442,7 @@ StoredTabletFile bringMajorCompactionOnline(Set<StoredTabletFile> oldDatafiles,\n \n       tablet.computeNumEntries();\n \n-      lastLocation = tablet.resetLastLocation();\n+      tablet.resetLastLocation();", "originalCommit": "7c025e5cf13ef0af5e35f8897ae5b86ee54b4d04", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7cfc9ffe2f62cb956c55f25538b55869b37ed421", "chunk": "diff --git a/server/tserver/src/main/java/org/apache/accumulo/tserver/tablet/DatafileManager.java b/server/tserver/src/main/java/org/apache/accumulo/tserver/tablet/DatafileManager.java\nindex b62daeb7f5..793cfe7433 100644\n--- a/server/tserver/src/main/java/org/apache/accumulo/tserver/tablet/DatafileManager.java\n+++ b/server/tserver/src/main/java/org/apache/accumulo/tserver/tablet/DatafileManager.java\n\n@@ -442,7 +444,7 @@ class DatafileManager {\n \n       tablet.computeNumEntries();\n \n-      tablet.resetLastLocation();\n+      lastLocation = tablet.resetLastLocation();\n \n       tablet.setLastCompactionID(compactionId);\n       t2 = System.currentTimeMillis();\n"}}, {"oid": "804326608eeb133de83f7ac0a00f354cd35aa8d2", "url": "https://github.com/apache/accumulo/commit/804326608eeb133de83f7ac0a00f354cd35aa8d2", "message": "pass in the proper prevLastLoc", "committedDate": "2020-09-11T12:04:46Z", "type": "commit"}, {"oid": "2833ac4c775a4b7668430cec1dec162b5700ad14", "url": "https://github.com/apache/accumulo/commit/2833ac4c775a4b7668430cec1dec162b5700ad14", "message": "add DistrubutedStoreException back", "committedDate": "2020-09-11T12:54:32Z", "type": "commit"}, {"oid": "7a3981279dd0ab1a755d4b1442080bb236f7b120", "url": "https://github.com/apache/accumulo/commit/7a3981279dd0ab1a755d4b1442080bb236f7b120", "message": "Revert \"Update Last Location. Fix #1169  (#1616)\"\n\nThis reverts commit 1c0f8df4ebf7ecb75cde889b32fcdbcfeaf4689d.\n\nThis changed the behavior of updating the LAST location field to update\non assignment, rather than on writing data to DFS. The LAST location\nfield should be updated when writing data to DFS, because it identifies\nthe location where the tablet last wrote data, so that a balancing\nstrategy can re-assign it to a location where at least some data is\nlocal.", "committedDate": "2020-09-15T12:09:09Z", "type": "commit"}, {"oid": "7cfc9ffe2f62cb956c55f25538b55869b37ed421", "url": "https://github.com/apache/accumulo/commit/7cfc9ffe2f62cb956c55f25538b55869b37ed421", "message": "revert to just doing ample changes", "committedDate": "2020-09-15T12:09:09Z", "type": "commit"}, {"oid": "7cfc9ffe2f62cb956c55f25538b55869b37ed421", "url": "https://github.com/apache/accumulo/commit/7cfc9ffe2f62cb956c55f25538b55869b37ed421", "message": "revert to just doing ample changes", "committedDate": "2020-09-15T12:09:09Z", "type": "forcePushed"}, {"oid": "de98dd7388d3f4e147b05b2acf78d18aa5583da0", "url": "https://github.com/apache/accumulo/commit/de98dd7388d3f4e147b05b2acf78d18aa5583da0", "message": "remove various whitespaces", "committedDate": "2020-09-15T12:14:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY3NTY5OQ==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r488675699", "bodyText": "This replaces SuspendingTServer.toValue(), which does not appear to be used any longer. The old method stored a HostAndPort.toString(), but this stores Ample.TServer.toString(). Are these identical?\nThe serialization for toValue should probably remain in the SuspendingTServer class, since that's where the corresponding fromValue method is. So, I recommend changing SuspendingTServer.toValue that is called from here, so if the serialization changes, it can be changed in both toValue and fromValue at the same time.", "author": "ctubbsii", "createdAt": "2020-09-15T13:40:04Z", "path": "server/base/src/main/java/org/apache/accumulo/server/metadata/TabletMutatorBase.java", "diffHunk": "@@ -202,6 +203,23 @@ private String getLocationFamily(LocationType type) {\n     return this;\n   }\n \n+  @Override\n+  public Ample.TabletMutator putSuspension(Ample.TServer tServer, long suspensionTime) {\n+    Preconditions.checkState(updatesEnabled, \"Cannot make updates after calling mutate.\");\n+    mutation.put(SuspendLocationColumn.SUSPEND_COLUMN.getColumnFamily(),\n+        SuspendLocationColumn.SUSPEND_COLUMN.getColumnQualifier(),\n+        new Value(tServer + \"|\" + suspensionTime));", "originalCommit": "59d1155d151bc6c784e8b89ebad708a194a60f63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1MzIwOA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r488753208", "bodyText": "Thanks for pointing that out, that was something I didn't notice. I replaced with  new Value(tServer.getLocation() + \"|\" + suspensionTime)) which more accurately matches HostAndPort.toString(). This also solves the issue I was facing with MasterRepairsDualAssignmentIT so I no longer need the if statement I added in the HostAndPort file.\nI don't fully understand your second paragraph. Are you suggesting I use the SuspendingTServer.fromValue() function in this mutation instead of doing the new Value(tServer.getLocation() + \"|\" + suspensionTime))?", "author": "Manno15", "createdAt": "2020-09-15T15:19:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY3NTY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc3MDUyOA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r488770528", "bodyText": "I don't fully understand your second paragraph. Are you suggesting I use the SuspendingTServer.fromValue() function in this mutation instead of doing the new Value(tServer.getLocation() + \"|\" + suspensionTime))?\n\nPrior to your changes, the SuspendingTServer.toValue() was responsible for creating this new Value. I'm suggesting that we leave that class responsible for creating the new Value,  so it can live alongside that class' existing fromValue method. In order to do that, you would need to turn it into a static method, so you can use it in your code.\nIn other words, this code should change to something like:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    new Value(tServer + \"|\" + suspensionTime));\n          \n          \n            \n                    SuspendingTServer.toValue(tServer, suspensionTime);\n          \n      \n    \n    \n  \n\nAnd then that method should look something like:\n    public static Value toValue(HostAndPort tServer, long suspensionTime) {\n      return new Value(tServer + \"|\" + suspensionTime);\n    }\nI probably don't have the types correct in this code, but something like that is what I'm suggesting.", "author": "ctubbsii", "createdAt": "2020-09-15T15:43:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY3NTY5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "bce08e46c12e74cce3bc0132fe73c74a936f68eb", "chunk": "diff --git a/server/base/src/main/java/org/apache/accumulo/server/metadata/TabletMutatorBase.java b/server/base/src/main/java/org/apache/accumulo/server/metadata/TabletMutatorBase.java\nindex f0ee3a8443..e518cec962 100644\n--- a/server/base/src/main/java/org/apache/accumulo/server/metadata/TabletMutatorBase.java\n+++ b/server/base/src/main/java/org/apache/accumulo/server/metadata/TabletMutatorBase.java\n\n@@ -208,7 +209,7 @@ public abstract class TabletMutatorBase implements Ample.TabletMutator {\n     Preconditions.checkState(updatesEnabled, \"Cannot make updates after calling mutate.\");\n     mutation.put(SuspendLocationColumn.SUSPEND_COLUMN.getColumnFamily(),\n         SuspendLocationColumn.SUSPEND_COLUMN.getColumnQualifier(),\n-        new Value(tServer + \"|\" + suspensionTime));\n+        SuspendingTServer.toValue(tServer.getLocation(), suspensionTime));\n     return this;\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4MDM2MA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r488680360", "bodyText": "I think this loop could benefit from the same batch writer reuse that you did in the unassign method below this, where you called try (var tabletsMutator = ample.mutateTablets()) { outside the loop. (Same comment applies to the setLocations method above.)", "author": "ctubbsii", "createdAt": "2020-09-15T13:46:02Z", "path": "server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java", "diffHunk": "@@ -58,57 +54,31 @@ protected MetaDataStateStore(ClientContext context, CurrentState state, String t\n     return new MetaDataTableScanner(context, TabletsSection.getRange(), state, targetTableName);\n   }\n \n-  @Override\n   public void setLocations(Collection<Assignment> assignments) throws DistributedStoreException {\n-    BatchWriter writer = createBatchWriter();\n     try {\n       for (Assignment assignment : assignments) {\n-        Mutation m = new Mutation(assignment.tablet.toMetaRow());\n-        assignment.server.putLocation(m);\n-        assignment.server.clearFutureLocation(m);\n-        SuspendingTServer.clearSuspension(m);\n-        writer.addMutation(m);\n+        TabletMutator tabletMutator = ample.mutateTablet(assignment.tablet);\n+        tabletMutator.putLocation(assignment.server, LocationType.CURRENT);\n+        tabletMutator.deleteLocation(assignment.server, LocationType.FUTURE);\n+        tabletMutator.mutate();\n       }\n     } catch (Exception ex) {\n       throw new DistributedStoreException(ex);\n-    } finally {\n-      try {\n-        writer.close();\n-      } catch (MutationsRejectedException e) {\n-        throw new DistributedStoreException(e);\n-      }\n-    }\n-  }\n-\n-  BatchWriter createBatchWriter() {\n-    try {\n-      return context.createBatchWriter(targetTableName,\n-          new BatchWriterConfig().setMaxMemory(MAX_MEMORY)\n-              .setMaxLatency(LATENCY, TimeUnit.MILLISECONDS).setMaxWriteThreads(THREADS));\n-    } catch (Exception e) {\n-      throw new RuntimeException(e);\n     }\n   }\n \n   @Override\n   public void setFutureLocations(Collection<Assignment> assignments)\n       throws DistributedStoreException {\n-    BatchWriter writer = createBatchWriter();\n     try {\n       for (Assignment assignment : assignments) {\n-        Mutation m = new Mutation(assignment.tablet.toMetaRow());\n-        SuspendingTServer.clearSuspension(m);\n-        assignment.server.putFutureLocation(m);\n-        writer.addMutation(m);\n+        TabletMutator tabletMutator = ample.mutateTablet(assignment.tablet);\n+        tabletMutator.deleteSuspension();\n+        tabletMutator.putLocation(assignment.server, LocationType.FUTURE);\n+        tabletMutator.mutate();", "originalCommit": "59d1155d151bc6c784e8b89ebad708a194a60f63", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bce08e46c12e74cce3bc0132fe73c74a936f68eb", "chunk": "diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\nindex eb20f078de..fa1f35d780 100644\n--- a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\n+++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\n\n@@ -55,9 +55,9 @@ class MetaDataStateStore implements TabletStateStore {\n   }\n \n   public void setLocations(Collection<Assignment> assignments) throws DistributedStoreException {\n-    try {\n+    try (var tabletsMutator = ample.mutateTablets()) {\n       for (Assignment assignment : assignments) {\n-        TabletMutator tabletMutator = ample.mutateTablet(assignment.tablet);\n+        TabletMutator tabletMutator = tabletsMutator.mutateTablet(assignment.tablet);\n         tabletMutator.putLocation(assignment.server, LocationType.CURRENT);\n         tabletMutator.deleteLocation(assignment.server, LocationType.FUTURE);\n         tabletMutator.mutate();\n"}}, {"oid": "bce08e46c12e74cce3bc0132fe73c74a936f68eb", "url": "https://github.com/apache/accumulo/commit/bce08e46c12e74cce3bc0132fe73c74a936f68eb", "message": "made requested changes", "committedDate": "2020-09-15T16:48:39Z", "type": "commit"}, {"oid": "bce08e46c12e74cce3bc0132fe73c74a936f68eb", "url": "https://github.com/apache/accumulo/commit/bce08e46c12e74cce3bc0132fe73c74a936f68eb", "message": "made requested changes", "committedDate": "2020-09-15T16:48:39Z", "type": "forcePushed"}, {"oid": "8c3fa108ad6dbb53cbb05e4b15f5079ff0de8bfa", "url": "https://github.com/apache/accumulo/commit/8c3fa108ad6dbb53cbb05e4b15f5079ff0de8bfa", "message": "Merge branch 'main' into fix_update_revert", "committedDate": "2020-09-15T16:49:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk5NDYzOA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r488994638", "bodyText": "Did you forget to include the deleteSuspension() here?\nAlso, the code might look cleaner if you chained the methods, something like (not formatted):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    TabletMutator tabletMutator = tabletsMutator.mutateTablet(assignment.tablet);\n          \n          \n            \n                    tabletMutator.putLocation(assignment.server, LocationType.CURRENT);\n          \n          \n            \n                    tabletMutator.deleteLocation(assignment.server, LocationType.FUTURE);\n          \n          \n            \n                    tabletMutator.mutate();\n          \n          \n            \n                    tabletsMutator.mutateTablet(assignment.tablet)\n          \n          \n            \n                      .putLocation(assignment.server, LocationType.CURRENT)\n          \n          \n            \n                      .deleteLocation(assignment.server, LocationType.FUTURE)\n          \n          \n            \n                      .deleteSuspension()\n          \n          \n            \n                      .mutate();\n          \n      \n    \n    \n  \n\nIf the formatter makes it look too ugly, you could prevent the formatter from messing with it by wrapping it with a comment line before and after, // @formatter:off and // @formatter:on.\nThis kind of simplification can be done in other places in this PR also (I made a review comment elsewhere where it can be a one-liner.", "author": "ctubbsii", "createdAt": "2020-09-15T21:44:25Z", "path": "server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java", "diffHunk": "@@ -58,57 +54,31 @@ protected MetaDataStateStore(ClientContext context, CurrentState state, String t\n     return new MetaDataTableScanner(context, TabletsSection.getRange(), state, targetTableName);\n   }\n \n-  @Override\n   public void setLocations(Collection<Assignment> assignments) throws DistributedStoreException {\n-    BatchWriter writer = createBatchWriter();\n-    try {\n+    try (var tabletsMutator = ample.mutateTablets()) {\n       for (Assignment assignment : assignments) {\n-        Mutation m = new Mutation(assignment.tablet.toMetaRow());\n-        assignment.server.putLocation(m);\n-        assignment.server.clearFutureLocation(m);\n-        SuspendingTServer.clearSuspension(m);\n-        writer.addMutation(m);\n+        TabletMutator tabletMutator = tabletsMutator.mutateTablet(assignment.tablet);\n+        tabletMutator.putLocation(assignment.server, LocationType.CURRENT);\n+        tabletMutator.deleteLocation(assignment.server, LocationType.FUTURE);\n+        tabletMutator.mutate();", "originalCommit": "8c3fa108ad6dbb53cbb05e4b15f5079ff0de8bfa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1MjIwNA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r489352204", "bodyText": "Yes, that was an oversight on my part. Added it back to it and I will test how the one-liner gets formatted.", "author": "Manno15", "createdAt": "2020-09-16T11:04:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk5NDYzOA=="}], "type": "inlineReview", "revised_code": {"commit": "4f02526af39d9cc05d237b6ea258c7ad3a629e29", "chunk": "diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\nindex fa1f35d780..99f8a6125e 100644\n--- a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\n+++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\n\n@@ -57,12 +57,11 @@ class MetaDataStateStore implements TabletStateStore {\n   public void setLocations(Collection<Assignment> assignments) throws DistributedStoreException {\n     try (var tabletsMutator = ample.mutateTablets()) {\n       for (Assignment assignment : assignments) {\n-        TabletMutator tabletMutator = tabletsMutator.mutateTablet(assignment.tablet);\n-        tabletMutator.putLocation(assignment.server, LocationType.CURRENT);\n-        tabletMutator.deleteLocation(assignment.server, LocationType.FUTURE);\n-        tabletMutator.mutate();\n+        tabletsMutator.mutateTablet(assignment.tablet)\n+            .putLocation(assignment.server, LocationType.CURRENT)\n+            .deleteLocation(assignment.server, LocationType.FUTURE).deleteSuspension().mutate();\n       }\n-    } catch (Exception ex) {\n+    } catch (RuntimeException ex) {\n       throw new DistributedStoreException(ex);\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk5OTc5Ng==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r488999796", "bodyText": "If all of these code blocks that were updated to use the Ample mutator utility don't throw any checked exceptions, these catch blocks can be updated to only catch the more specific, RuntimeException, as in:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                } catch (Exception ex) {\n          \n          \n            \n                } catch (RuntimeException ex) {", "author": "ctubbsii", "createdAt": "2020-09-15T21:50:31Z", "path": "server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java", "diffHunk": "@@ -128,73 +98,56 @@ public void suspend(Collection<TabletLocationState> tablets,\n   private void unassign(Collection<TabletLocationState> tablets,\n       Map<TServerInstance,List<Path>> logsForDeadServers, long suspensionTimestamp)\n       throws DistributedStoreException {\n-    BatchWriter writer = createBatchWriter();\n-    try {\n+    try (var tabletsMutator = ample.mutateTablets()) {\n       for (TabletLocationState tls : tablets) {\n-        Mutation m = new Mutation(tls.extent.toMetaRow());\n+        TabletMutator tabletMutator = tabletsMutator.mutateTablet(tls.extent);\n         if (tls.current != null) {\n-          tls.current.clearLocation(m);\n+          tabletMutator.deleteLocation(tls.current, LocationType.CURRENT);\n           if (logsForDeadServers != null) {\n             List<Path> logs = logsForDeadServers.get(tls.current);\n             if (logs != null) {\n               for (Path log : logs) {\n                 LogEntry entry =\n                     new LogEntry(tls.extent, 0, tls.current.hostPort(), log.toString());\n-                m.put(entry.getColumnFamily(), entry.getColumnQualifier(), entry.getValue());\n+                tabletMutator.putWal(entry);\n               }\n             }\n           }\n           if (suspensionTimestamp >= 0) {\n-            SuspendingTServer suspender =\n-                new SuspendingTServer(tls.current.getLocation(), suspensionTimestamp);\n-            suspender.setSuspension(m);\n+            tabletMutator.putSuspension(tls.current, suspensionTimestamp);\n           }\n         }\n         if (tls.suspend != null && suspensionTimestamp < 0) {\n-          SuspendingTServer.clearSuspension(m);\n+          tabletMutator.deleteSuspension();\n         }\n         if (tls.future != null) {\n-          tls.future.clearFutureLocation(m);\n+          tabletMutator.deleteLocation(tls.future, LocationType.FUTURE);\n         }\n-        writer.addMutation(m);\n+        tabletMutator.mutate();\n       }\n     } catch (Exception ex) {", "originalCommit": "8c3fa108ad6dbb53cbb05e4b15f5079ff0de8bfa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4f02526af39d9cc05d237b6ea258c7ad3a629e29", "chunk": "diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\nindex fa1f35d780..99f8a6125e 100644\n--- a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\n+++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\n\n@@ -125,7 +122,7 @@ class MetaDataStateStore implements TabletStateStore {\n         }\n         tabletMutator.mutate();\n       }\n-    } catch (Exception ex) {\n+    } catch (RuntimeException ex) {\n       throw new DistributedStoreException(ex);\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAwMDc1OA==", "url": "https://github.com/apache/accumulo/pull/1653#discussion_r489000758", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    TabletMutator tabletMutator = tabletsMutator.mutateTablet(tls.extent);\n          \n          \n            \n                    tabletMutator.deleteSuspension();\n          \n          \n            \n                    tabletMutator.mutate();\n          \n          \n            \n                    tabletsMutator.mutateTablet(tls.extent).deleteSuspension().mutate();", "author": "ctubbsii", "createdAt": "2020-09-15T21:51:37Z", "path": "server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java", "diffHunk": "@@ -128,73 +98,56 @@ public void suspend(Collection<TabletLocationState> tablets,\n   private void unassign(Collection<TabletLocationState> tablets,\n       Map<TServerInstance,List<Path>> logsForDeadServers, long suspensionTimestamp)\n       throws DistributedStoreException {\n-    BatchWriter writer = createBatchWriter();\n-    try {\n+    try (var tabletsMutator = ample.mutateTablets()) {\n       for (TabletLocationState tls : tablets) {\n-        Mutation m = new Mutation(tls.extent.toMetaRow());\n+        TabletMutator tabletMutator = tabletsMutator.mutateTablet(tls.extent);\n         if (tls.current != null) {\n-          tls.current.clearLocation(m);\n+          tabletMutator.deleteLocation(tls.current, LocationType.CURRENT);\n           if (logsForDeadServers != null) {\n             List<Path> logs = logsForDeadServers.get(tls.current);\n             if (logs != null) {\n               for (Path log : logs) {\n                 LogEntry entry =\n                     new LogEntry(tls.extent, 0, tls.current.hostPort(), log.toString());\n-                m.put(entry.getColumnFamily(), entry.getColumnQualifier(), entry.getValue());\n+                tabletMutator.putWal(entry);\n               }\n             }\n           }\n           if (suspensionTimestamp >= 0) {\n-            SuspendingTServer suspender =\n-                new SuspendingTServer(tls.current.getLocation(), suspensionTimestamp);\n-            suspender.setSuspension(m);\n+            tabletMutator.putSuspension(tls.current, suspensionTimestamp);\n           }\n         }\n         if (tls.suspend != null && suspensionTimestamp < 0) {\n-          SuspendingTServer.clearSuspension(m);\n+          tabletMutator.deleteSuspension();\n         }\n         if (tls.future != null) {\n-          tls.future.clearFutureLocation(m);\n+          tabletMutator.deleteLocation(tls.future, LocationType.FUTURE);\n         }\n-        writer.addMutation(m);\n+        tabletMutator.mutate();\n       }\n     } catch (Exception ex) {\n       throw new DistributedStoreException(ex);\n-    } finally {\n-      try {\n-        writer.close();\n-      } catch (MutationsRejectedException e) {\n-        throw new DistributedStoreException(e);\n-      }\n     }\n   }\n \n   @Override\n   public void unsuspend(Collection<TabletLocationState> tablets) throws DistributedStoreException {\n-    BatchWriter writer = createBatchWriter();\n-    try {\n+    try (var tabletsMutator = ample.mutateTablets()) {\n       for (TabletLocationState tls : tablets) {\n         if (tls.suspend != null) {\n           continue;\n         }\n-        Mutation m = new Mutation(tls.extent.toMetaRow());\n-        SuspendingTServer.clearSuspension(m);\n-        writer.addMutation(m);\n+        TabletMutator tabletMutator = tabletsMutator.mutateTablet(tls.extent);\n+        tabletMutator.deleteSuspension();\n+        tabletMutator.mutate();", "originalCommit": "8c3fa108ad6dbb53cbb05e4b15f5079ff0de8bfa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4f02526af39d9cc05d237b6ea258c7ad3a629e29", "chunk": "diff --git a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\nindex fa1f35d780..99f8a6125e 100644\n--- a/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\n+++ b/server/base/src/main/java/org/apache/accumulo/server/master/state/MetaDataStateStore.java\n\n@@ -125,7 +122,7 @@ class MetaDataStateStore implements TabletStateStore {\n         }\n         tabletMutator.mutate();\n       }\n-    } catch (Exception ex) {\n+    } catch (RuntimeException ex) {\n       throw new DistributedStoreException(ex);\n     }\n   }\n"}}, {"oid": "4f02526af39d9cc05d237b6ea258c7ad3a629e29", "url": "https://github.com/apache/accumulo/commit/4f02526af39d9cc05d237b6ea258c7ad3a629e29", "message": "made more requested changes", "committedDate": "2020-09-16T12:06:30Z", "type": "commit"}]}