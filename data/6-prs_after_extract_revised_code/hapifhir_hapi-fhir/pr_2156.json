{"pr_number": 2156, "pr_title": "Fixed score calculation to use selected bits in the vector. Addresses\u2026", "pr_createdAt": "2020-11-02T14:28:31Z", "pr_url": "https://github.com/hapifhir/hapi-fhir/pull/2156", "timeline": [{"oid": "296b193bb5eec44d208ffb06ce2180819f2f3380", "url": "https://github.com/hapifhir/hapi-fhir/commit/296b193bb5eec44d208ffb06ce2180819f2f3380", "message": "Fixed score calculation to use selected bits in the vector. Addresses #2155", "committedDate": "2020-11-02T14:22:00Z", "type": "commit"}, {"oid": "52e8761701c1c02e9a7b52ba731c212afb2d4c3b", "url": "https://github.com/hapifhir/hapi-fhir/commit/52e8761701c1c02e9a7b52ba731c212afb2d4c3b", "message": "Added rule count for proper scoring implementation", "committedDate": "2020-11-02T22:15:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwNzE5MA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2156#discussion_r516707190", "bodyText": "Add a getter for myEmpiRuleCount", "author": "tadgh", "createdAt": "2020-11-03T14:29:10Z", "path": "hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java", "diffHunk": "@@ -99,6 +105,19 @@ public boolean isEidMatch() {\n \t\treturn myEidMatch;\n \t}\n \n+\t/**\n+\t * Sets the number of EMPI rules checked for this match outcome\n+\t *\n+\t * @param theEmpiRuleCount\n+\t * \tNumber of EMPI rules that were checked for this match outcome\n+\t * @return\n+\t * \tReturns this instance\n+\t */\n+\tpublic EmpiMatchOutcome setEmpiRuleCount(int theEmpiRuleCount) {\n+\t\tmyEmpiRuleCount = theEmpiRuleCount;\n+\t\treturn this;\n+\t}\n+", "originalCommit": "52e8761701c1c02e9a7b52ba731c212afb2d4c3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1NjYyNg==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2156#discussion_r516856626", "bodyText": "Thank you, done.", "author": "nvg-smile", "createdAt": "2020-11-03T17:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwNzE5MA=="}], "type": "inlineReview", "revised_code": {"commit": "4c01025934ff1675c02df848763ace45f9340628", "chunk": "diff --git a/hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java b/hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java\nindex 0f286cb36e..4290773c7a 100644\n--- a/hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java\n+++ b/hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java\n\n@@ -118,6 +118,16 @@ public final class EmpiMatchOutcome {\n \t\treturn this;\n \t}\n \n+\t/**\n+\t * Gets the number of EMPI rules checked for this match outcome\n+\t *\n+\t * @return\n+\t * \tReturns the number of rules\n+\t */\n+\tpublic int getEmpiRuleCount() {\n+\t\treturn myEmpiRuleCount;\n+\t}\n+\n \t/** @param theEidMatch the link was established via a shared EID */\n \tpublic EmpiMatchOutcome setEidMatch(boolean theEidMatch) {\n \t\tmyEidMatch = theEidMatch;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwODQzMQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2156#discussion_r516708431", "bodyText": "This should be impossible now, no? e.g. 5 rules, all match, 5/5 == 1.0. I appreciate the gate, but I'm worried it may be masking potential insidious bugs. A score of >1 should be an error yeah?", "author": "tadgh", "createdAt": "2020-11-03T14:30:42Z", "path": "hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java", "diffHunk": "@@ -112,15 +131,15 @@ public EmpiMatchOutcome setEidMatch(boolean theEidMatch) {\n \t * \tReturns the normalized score\n \t */\n \tpublic Double getNormalizedScore() {\n-\t\tif (vector == 0) {\n+\t\tif (myEmpiRuleCount == 0) {\n \t\t\treturn 0.0;\n-\t\t} else if (score > vector) {\n-\t\t\treturn 1.0;\n \t\t}\n \n-\t\tdouble retVal = score / vector;\n+\t\tdouble retVal = score / myEmpiRuleCount;\n \t\tif (retVal < 0) {\n \t\t\tretVal = 0.0;\n+\t\t} else if (retVal > 1.0) {", "originalCommit": "52e8761701c1c02e9a7b52ba731c212afb2d4c3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcxMTc3NQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2156#discussion_r516711775", "bodyText": "Or at least normalized down with a big warning log if we don't want to call it an error", "author": "tadgh", "createdAt": "2020-11-03T14:34:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwODQzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1OTI4Nw==", "url": "https://github.com/hapifhir/hapi-fhir/pull/2156#discussion_r516859287", "bodyText": "Makes perfect sense. Current code adds unnecessary complexity. Updated", "author": "nvg-smile", "createdAt": "2020-11-03T18:04:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwODQzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "4c01025934ff1675c02df848763ace45f9340628", "chunk": "diff --git a/hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java b/hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java\nindex 0f286cb36e..4290773c7a 100644\n--- a/hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java\n+++ b/hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java\n\n@@ -134,14 +144,7 @@ public final class EmpiMatchOutcome {\n \t\tif (myEmpiRuleCount == 0) {\n \t\t\treturn 0.0;\n \t\t}\n-\n-\t\tdouble retVal = score / myEmpiRuleCount;\n-\t\tif (retVal < 0) {\n-\t\t\tretVal = 0.0;\n-\t\t} else if (retVal > 1.0) {\n-\t\t\treturn 1.0;\n-\t\t}\n-\t\treturn retVal;\n+\t\treturn score / myEmpiRuleCount;\n \t}\n \n \t@Override\n"}}, {"oid": "4c01025934ff1675c02df848763ace45f9340628", "url": "https://github.com/hapifhir/hapi-fhir/commit/4c01025934ff1675c02df848763ace45f9340628", "message": "Updated based on code review feedback", "committedDate": "2020-11-03T18:10:16Z", "type": "commit"}]}