{"pr_number": 1900, "pr_title": "Empi 54 not duplicate", "pr_createdAt": "2020-06-04T23:00:53Z", "pr_url": "https://github.com/hapifhir/hapi-fhir/pull/1900", "timeline": [{"oid": "b1e4a935c4eacf0860907b18c77c9877518695d9", "url": "https://github.com/hapifhir/hapi-fhir/commit/b1e4a935c4eacf0860907b18c77c9877518695d9", "message": "done", "committedDate": "2020-06-04T17:58:41Z", "type": "commit"}, {"oid": "a77f495285345e8ac0e263bd2243c23c108ce327", "url": "https://github.com/hapifhir/hapi-fhir/commit/a77f495285345e8ac0e263bd2243c23c108ce327", "message": "pre-review cleanup", "committedDate": "2020-06-04T18:01:58Z", "type": "commit"}, {"oid": "ad974fe9a5a11be4ad6fef45ee584c9577cc5a45", "url": "https://github.com/hapifhir/hapi-fhir/commit/ad974fe9a5a11be4ad6fef45ee584c9577cc5a45", "message": "begin with failing tests", "committedDate": "2020-06-04T18:52:49Z", "type": "commit"}, {"oid": "60f0f4353351b918a3aedd256e25def8ef2f1e2d", "url": "https://github.com/hapifhir/hapi-fhir/commit/60f0f4353351b918a3aedd256e25def8ef2f1e2d", "message": "review feedback", "committedDate": "2020-06-04T18:58:53Z", "type": "commit"}, {"oid": "1e2ff81316d717d9937e6d2daa17d662ddf8e0cb", "url": "https://github.com/hapifhir/hapi-fhir/commit/1e2ff81316d717d9937e6d2daa17d662ddf8e0cb", "message": "review feedback", "committedDate": "2020-06-04T19:03:38Z", "type": "commit"}, {"oid": "f0c00b9a70f506ef83e696574d7f1e38e8da1ed8", "url": "https://github.com/hapifhir/hapi-fhir/commit/f0c00b9a70f506ef83e696574d7f1e38e8da1ed8", "message": "started building provider", "committedDate": "2020-06-04T20:06:33Z", "type": "commit"}, {"oid": "d9f0b716ea85ed8e17fdf320d3c3f7d2b9ee290d", "url": "https://github.com/hapifhir/hapi-fhir/commit/d9f0b716ea85ed8e17fdf320d3c3f7d2b9ee290d", "message": "Merge branch 'empi-58-no-match-create-person' into empi-54-not_duplicate\n\n# Conflicts:\n#\thapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImpl.java", "committedDate": "2020-06-04T20:07:01Z", "type": "commit"}, {"oid": "125c8eefd73757beaebf59189297ac1096baed12", "url": "https://github.com/hapifhir/hapi-fhir/commit/125c8eefd73757beaebf59189297ac1096baed12", "message": "Merge remote-tracking branch 'remotes/origin/master' into empi-54-not_duplicate\n\n# Conflicts:\n#\thapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImpl.java", "committedDate": "2020-06-04T20:08:34Z", "type": "commit"}, {"oid": "95542aeb30a9d61ed4a7a23a9efd077bd2566ad9", "url": "https://github.com/hapifhir/hapi-fhir/commit/95542aeb30a9d61ed4a7a23a9efd077bd2566ad9", "message": "all but one FIXME", "committedDate": "2020-06-04T20:45:21Z", "type": "commit"}, {"oid": "1aa08d29128704f28975206fe277eb81bfe714af", "url": "https://github.com/hapifhir/hapi-fhir/commit/1aa08d29128704f28975206fe277eb81bfe714af", "message": "all but one FIXME", "committedDate": "2020-06-04T20:45:26Z", "type": "commit"}, {"oid": "899ea7f7b4cd2f25691d3a3722072bfdbf267fb1", "url": "https://github.com/hapifhir/hapi-fhir/commit/899ea7f7b4cd2f25691d3a3722072bfdbf267fb1", "message": "code done.  now adding docs", "committedDate": "2020-06-04T22:22:04Z", "type": "commit"}, {"oid": "4a23583be27de6d36e9ed6539d62eedf27c602bb", "url": "https://github.com/hapifhir/hapi-fhir/commit/4a23583be27de6d36e9ed6539d62eedf27c602bb", "message": "documentation", "committedDate": "2020-06-04T22:45:19Z", "type": "commit"}, {"oid": "fbea0972a949b9ee0c19d024301001e7fd61615a", "url": "https://github.com/hapifhir/hapi-fhir/commit/fbea0972a949b9ee0c19d024301001e7fd61615a", "message": "pre-review cleanup", "committedDate": "2020-06-04T22:56:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyNTU4MA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1900#discussion_r436025580", "bodyText": "Is this not handled via an interceptor already? Or are we worried about internal calls?", "author": "tadgh", "createdAt": "2020-06-05T16:17:19Z", "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImpl.java", "diffHunk": "@@ -111,4 +115,46 @@ private void validateUpdateLinkRequest(IAnyResource thePerson, IAnyResource theT\n \t\t\tthrow new InvalidRequestException(\"The target is marked with the \" + EmpiConstants.CODE_NO_EMPI_MANAGED + \" tag which means it may not be EMPI linked.\");\n \t\t}\n \t}\n+\n+\t@Transactional\n+\t@Override\n+\tpublic IBaseParameters notDuplicatePerson(IAnyResource thePerson, IAnyResource theTarget, EmpiTransactionContext theEmpiContext) {\n+\t\tvalidateNotDuplicatePersonRequest(thePerson, theTarget);\n+\n+\t\tLong personId = myIdHelperService.getPidOrThrowException(thePerson);\n+\t\tLong targetId = myIdHelperService.getPidOrThrowException(theTarget);\n+\n+\t\tOptional<EmpiLink> oEmpiLink = myEmpiLinkDaoSvc.getLinkByPersonPidAndTargetPid(personId, targetId);\n+\t\tif (!oEmpiLink.isPresent()) {\n+\t\t\tthrow new InvalidRequestException(\"No link exists between \" + thePerson.getIdElement().toVersionless() + \" and \" + theTarget.getIdElement().toVersionless());\n+\t\t}\n+\n+\t\tEmpiLink empiLink = oEmpiLink.get();\n+\t\tif (!empiLink.isPossibleDuplicate()) {\n+\t\t\tthrow new InvalidRequestException(thePerson.getIdElement().toVersionless() + \" and \" + theTarget.getIdElement().toVersionless() + \" are not linked as POSSIBLE_DUPLICATE.\");\n+\t\t}\n+\t\tempiLink.setMatchResult(EmpiMatchResultEnum.NO_MATCH);\n+\t\tempiLink.setLinkSource(EmpiLinkSourceEnum.MANUAL);\n+\t\tmyEmpiLinkDaoSvc.save(empiLink);\n+\n+\t\tParameters retval = (Parameters) ParametersUtil.newInstance(myFhirContext);\n+\t\tretval.addParameter(\"success\", true);\n+\t\treturn retval;\n+\t}\n+\n+\tprivate void validateNotDuplicatePersonRequest(IAnyResource thePerson, IAnyResource theTarget) {\n+\t\tString personType = myFhirContext.getResourceType(thePerson);\n+\t\tString targetType = myFhirContext.getResourceType(theTarget);\n+\t\tif (!\"Person\".equals(personType)) {\n+\t\t\tthrow new InvalidRequestException(\"First argument to \" + ProviderConstants.EMPI_UPDATE_LINK + \" must be a Person.  Was \" + personType);\n+\t\t}\n+\t\tif (!\"Person\".equals(targetType)) {\n+\t\t\tthrow new InvalidRequestException(\"Second argument to \" + ProviderConstants.EMPI_UPDATE_LINK + \" must be a Person .  Was \" + targetType);\n+\t\t}\n+\n+\t\tif (!EmpiUtil.isEmpiManaged(thePerson) || !EmpiUtil.isEmpiManaged(theTarget)) {\n+\t\t\tthrow new InvalidRequestException(\"Only EMPI Managed Person resources may be updated via this operation.  The Person resource provided is not tagged as managed by hapi-empi\");\n+\t\t}", "originalCommit": "fbea0972a949b9ee0c19d024301001e7fd61615a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyNzIyMQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1900#discussion_r436027221", "bodyText": "It's not expensive.  No harm checking on two layers.", "author": "fil512", "createdAt": "2020-06-05T16:20:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyNTU4MA=="}], "type": "inlineReview", "revised_code": null}]}