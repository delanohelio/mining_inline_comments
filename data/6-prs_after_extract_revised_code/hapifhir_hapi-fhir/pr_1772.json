{"pr_number": 1772, "pr_title": "Add chain on _type parameter", "pr_createdAt": "2020-03-23T22:04:06Z", "pr_url": "https://github.com/hapifhir/hapi-fhir/pull/1772", "timeline": [{"oid": "0ac434ea5da3c65a8f45be29ced2281e1d91001c", "url": "https://github.com/hapifhir/hapi-fhir/commit/0ac434ea5da3c65a8f45be29ced2281e1d91001c", "message": "Add chain on _type parameter", "committedDate": "2020-03-23T21:53:30Z", "type": "commit"}, {"oid": "7706600a8c4958134a3c94c206757d2f1714728d", "url": "https://github.com/hapifhir/hapi-fhir/commit/7706600a8c4958134a3c94c206757d2f1714728d", "message": "Add changelog", "committedDate": "2020-03-23T22:05:48Z", "type": "commit"}, {"oid": "a067a2001d3f45afd9db87a199a428a5804eacde", "url": "https://github.com/hapifhir/hapi-fhir/commit/a067a2001d3f45afd9db87a199a428a5804eacde", "message": "Test fix", "committedDate": "2020-03-23T22:53:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAwOTI3NQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1772#discussion_r397009275", "bodyText": "Maybe you can refactor this into a method like you did for newInvalidResourceTypeException so it's a bit easier to read", "author": "LishaZ", "createdAt": "2020-03-24T09:26:21Z", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/predicate/PredicateBuilderReference.java", "diffHunk": "@@ -273,20 +304,43 @@ private Predicate addPredicateReferenceWithChain(String theResourceName, String\n \t\t\t}\n \n \t\t} else {\n+\n \t\t\ttry {\n \t\t\t\tRuntimeResourceDefinition resDef = myContext.getResourceDefinition(theReferenceParam.getResourceType());\n \t\t\t\tresourceTypes = new ArrayList<>(1);\n \t\t\t\tresourceTypes.add(resDef.getImplementingClass());\n \t\t\t} catch (DataFormatException e) {\n-\t\t\t\tthrow new InvalidRequestException(\"Invalid resource type: \" + theReferenceParam.getResourceType());\n+\t\t\t\tthrow newInvalidResourceTypeException(theReferenceParam.getResourceType());\n+\t\t\t}\n+\n+\t\t}\n+\n+\t\t// Handle chain on _type\n+\t\tString chain = theReferenceParam.getChain();\n+\t\tif (Constants.PARAM_TYPE.equals(chain)) {\n+\t\t\tString typeValue = theReferenceParam.getValue();\n+\n+\t\t\tClass<? extends IBaseResource> wantedType;\n+\t\t\ttry {\n+\t\t\t\twantedType = myContext.getResourceDefinition(typeValue).getImplementingClass();\n+\t\t\t} catch (DataFormatException e) {\n+\t\t\t\tthrow newInvalidResourceTypeException(typeValue);\n+\t\t\t}\n+\t\t\tif (!resourceTypes.contains(wantedType)) {\n+\t\t\t\tString searchParamName = theResourceName + \":\" + theParamName;\n+\t\t\t\tString msg = myContext.getLocalizer().getMessage(PredicateBuilderReference.class, \"invalidTargetTypeForChain\", typeValue, searchParamName);\n+\t\t\t\tthrow new InvalidRequestException(msg);", "originalCommit": "a067a2001d3f45afd9db87a199a428a5804eacde", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAzMjA3Ng==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1772#discussion_r397032076", "bodyText": "Makes sense, done", "author": "jamesagnew", "createdAt": "2020-03-24T10:02:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAwOTI3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "13f0e5384b0a3a91d9c4ab7a53a8010b7cb228b8", "chunk": "diff --git a/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/predicate/PredicateBuilderReference.java b/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/predicate/PredicateBuilderReference.java\nindex 12f377485c..b891b12879 100644\n--- a/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/predicate/PredicateBuilderReference.java\n+++ b/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/predicate/PredicateBuilderReference.java\n\n@@ -327,9 +326,8 @@ class PredicateBuilderReference extends BasePredicateBuilder {\n \t\t\t\tthrow newInvalidResourceTypeException(typeValue);\n \t\t\t}\n \t\t\tif (!resourceTypes.contains(wantedType)) {\n-\t\t\t\tString searchParamName = theResourceName + \":\" + theParamName;\n-\t\t\t\tString msg = myContext.getLocalizer().getMessage(PredicateBuilderReference.class, \"invalidTargetTypeForChain\", typeValue, searchParamName);\n-\t\t\t\tthrow new InvalidRequestException(msg);\n+\t\t\t\tInvalidRequestException invalidRequestException = newInvalidTargetTypeForChainException(theResourceName, theParamName, typeValue);\n+\t\t\t\tthrow invalidRequestException;\n \t\t\t}\n \n \t\t\tPredicate targetTypeParameter = myCriteriaBuilder.equal(theJoin.get(\"myTargetResourceType\"), typeValue);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAxMjUyMA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1772#discussion_r397012520", "bodyText": "I assume this means subject._type=Group", "author": "LishaZ", "createdAt": "2020-03-24T09:31:19Z", "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/dao/r4/FhirResourceDaoR4SearchNoFtTest.java", "diffHunk": "@@ -316,6 +316,67 @@ public void testChainWithMultipleTypePossibilities() {\n \t\tassertThat(ids, empty());\n \t}\n \n+\t@Test\n+\tpublic void testChainOnType() {\n+\n+\t\tPatient sub1 = new Patient();\n+\t\tsub1.setActive(true);\n+\t\tsub1.addIdentifier().setSystem(\"foo\").setValue(\"bar\");\n+\t\tString sub1Id = myPatientDao.create(sub1).getId().toUnqualifiedVersionless().getValue();\n+\n+\t\tGroup sub2 = new Group();\n+\t\tsub2.setActive(true);\n+\t\tsub2.addIdentifier().setSystem(\"foo\").setValue(\"bar\");\n+\t\tString sub2Id = myGroupDao.create(sub2).getId().toUnqualifiedVersionless().getValue();\n+\n+\t\tEncounter enc1 = new Encounter();\n+\t\tenc1.getSubject().setReference(sub1Id);\n+\t\tString enc1Id = myEncounterDao.create(enc1).getId().toUnqualifiedVersionless().getValue();\n+\n+\t\tEncounter enc2 = new Encounter();\n+\t\tenc2.getSubject().setReference(sub2Id);\n+\t\tString enc2Id = myEncounterDao.create(enc2).getId().toUnqualifiedVersionless().getValue();\n+\n+\t\tList<String> ids;\n+\t\tSearchParameterMap map;\n+\t\tIBundleProvider results;\n+\n+\t\tmap = new SearchParameterMap();\n+\t\tmap.setLoadSynchronous(true);\n+\t\tmap.add(Encounter.SP_SUBJECT, new ReferenceParam(\"subject\", \"Patient\").setChain(\"_type\"));\n+\t\tresults = myEncounterDao.search(map);\n+\t\tids = toUnqualifiedVersionlessIdValues(results);\n+\t\tassertThat(ids, hasItems(enc1Id));\n+\n+\t\tmap = new SearchParameterMap();\n+\t\tmap.setLoadSynchronous(true);\n+\t\tmap.add(Encounter.SP_SUBJECT, new ReferenceParam(\"subject\", \"Group\").setChain(\"_type\"));", "originalCommit": "a067a2001d3f45afd9db87a199a428a5804eacde", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAzMjE4NQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1772#discussion_r397032185", "bodyText": "Yup!", "author": "jamesagnew", "createdAt": "2020-03-24T10:02:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzAxMjUyMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "13f0e5384b0a3a91d9c4ab7a53a8010b7cb228b8", "url": "https://github.com/hapifhir/hapi-fhir/commit/13f0e5384b0a3a91d9c4ab7a53a8010b7cb228b8", "message": "Address review comments", "committedDate": "2020-03-24T10:02:55Z", "type": "commit"}, {"oid": "31893be836648b56fd34756d611d2e2148c17276", "url": "https://github.com/hapifhir/hapi-fhir/commit/31893be836648b56fd34756d611d2e2148c17276", "message": "Fix azure yaml", "committedDate": "2020-03-24T10:04:21Z", "type": "commit"}, {"oid": "22e0c7a596dd65dd2ddceff6bd8a7032950c0b31", "url": "https://github.com/hapifhir/hapi-fhir/commit/22e0c7a596dd65dd2ddceff6bd8a7032950c0b31", "message": "Correct HTTPs in pom", "committedDate": "2020-03-24T10:09:03Z", "type": "commit"}, {"oid": "bb4cbb6af5145eea449c7b05523c29148935fd69", "url": "https://github.com/hapifhir/hapi-fhir/commit/bb4cbb6af5145eea449c7b05523c29148935fd69", "message": "One more pom tweak", "committedDate": "2020-03-24T10:10:29Z", "type": "commit"}, {"oid": "718c248c694cff446ce37f2ee5280ad151a1f81f", "url": "https://github.com/hapifhir/hapi-fhir/commit/718c248c694cff446ce37f2ee5280ad151a1f81f", "message": "Test fix", "committedDate": "2020-03-24T11:55:25Z", "type": "commit"}, {"oid": "274a6cb7a10a8c4dde65ad47b29ba0b799c46024", "url": "https://github.com/hapifhir/hapi-fhir/commit/274a6cb7a10a8c4dde65ad47b29ba0b799c46024", "message": "Try azure again", "committedDate": "2020-03-24T12:52:32Z", "type": "commit"}, {"oid": "1271d5cf4df63476a2e537e56ae55705b5a6b2a5", "url": "https://github.com/hapifhir/hapi-fhir/commit/1271d5cf4df63476a2e537e56ae55705b5a6b2a5", "message": "One more azure tweak", "committedDate": "2020-03-24T13:44:33Z", "type": "commit"}]}