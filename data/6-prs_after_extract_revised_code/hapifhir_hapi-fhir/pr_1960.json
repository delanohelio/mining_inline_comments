{"pr_number": 1960, "pr_title": "Accidentally merged pull request before pushing changes from code review", "pr_createdAt": "2020-07-03T17:11:15Z", "pr_url": "https://github.com/hapifhir/hapi-fhir/pull/1960", "timeline": [{"oid": "4e5ca2ee15d384cfffab62abba773aac898e6abc", "url": "https://github.com/hapifhir/hapi-fhir/commit/4e5ca2ee15d384cfffab62abba773aac898e6abc", "message": "Changes from code review", "committedDate": "2020-07-03T17:08:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2NDAwNg==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1960#discussion_r449664006", "bodyText": "change to ourLog.error\nAlso, the exception is getting lost.\nI suggest log the exception in a separate ourLog.error(\"exception: \", theE)", "author": "fil512", "createdAt": "2020-07-03T17:16:21Z", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/TermDeferredStorageSvcImpl.java", "diffHunk": "@@ -145,10 +146,10 @@ private void processDeferredConcepts() {\n \t\tourLog.info(\"Saving {} deferred concepts...\", count);\n \t\twhile (codeCount < count && myDeferredConcepts.size() > 0) {\n \t\t\tTermConcept next = myDeferredConcepts.remove(0);\n-\t\t\tif(myCodeSystemVersionDao.findById(next.getCodeSystemVersion().getPid()).isPresent()) {\n+\t\t\ttry {\n          \tcodeCount += myCodeSystemStorageSvc.saveConcept(next);\n-\t\t\t} else {\n-\t\t\t\tourLog.warn(\"Unable to save deferred TermConcept {} because Code System {} version PID {} is no longer valid. Code system may have since been replaced.\",\n+\t\t\t} catch (Exception theE) {\n+\t\t\t\tourLog.warn(\"Unable to save deferred TermConcept {}, possibly because Code System {} version PID {} may have since been replaced.\",", "originalCommit": "4e5ca2ee15d384cfffab62abba773aac898e6abc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY3NDM0Nw==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1960#discussion_r449674347", "bodyText": "Makes sense. I will also restore the previous check of the code system version ID prior to saving the TermConcept so as to minimize the possibility of this being logged as an exception.", "author": "IanMMarshall", "createdAt": "2020-07-03T18:09:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2NDAwNg=="}], "type": "inlineReview", "revised_code": {"commit": "b1ff6cbe378f9de084b02035ea80b433a144357d", "chunk": "diff --git a/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/TermDeferredStorageSvcImpl.java b/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/TermDeferredStorageSvcImpl.java\nindex afb60c1b58..589652cdb3 100644\n--- a/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/TermDeferredStorageSvcImpl.java\n+++ b/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/TermDeferredStorageSvcImpl.java\n\n@@ -146,10 +145,15 @@ public class TermDeferredStorageSvcImpl implements ITermDeferredStorageSvc {\n \t\tourLog.info(\"Saving {} deferred concepts...\", count);\n \t\twhile (codeCount < count && myDeferredConcepts.size() > 0) {\n \t\t\tTermConcept next = myDeferredConcepts.remove(0);\n-\t\t\ttry {\n-         \tcodeCount += myCodeSystemStorageSvc.saveConcept(next);\n-\t\t\t} catch (Exception theE) {\n-\t\t\t\tourLog.warn(\"Unable to save deferred TermConcept {}, possibly because Code System {} version PID {} may have since been replaced.\",\n+\t\t\tif(myCodeSystemVersionDao.findById(next.getCodeSystemVersion().getPid()).isPresent()) {\n+\t\t\t\ttry {\n+\t\t\t\t\tcodeCount += myCodeSystemStorageSvc.saveConcept(next);\n+\t\t\t\t} catch (Exception theE) {\n+\t\t\t\t\tourLog.error(\"Exception thrown when attempting to save TermConcept {} in Code System {}\",\n+\t\t\t\t\t\tnext.getCode(), next.getCodeSystemVersion().getCodeSystemDisplayName(), theE);\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tourLog.warn(\"Unable to save deferred TermConcept {} because Code System {} version PID {} is no longer valid. Code system may have since been replaced.\",\n \t\t\t\t\tnext.getCode(), next.getCodeSystemVersion().getCodeSystemDisplayName(), next.getCodeSystemVersion().getPid());\n \t\t\t}\n \t\t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY2NDExNw==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1960#discussion_r449664117", "bodyText": "Nice!!  Super helpful!", "author": "fil512", "createdAt": "2020-07-03T17:16:52Z", "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/term/TermCodeSystemStorageSvcTest.java", "diffHunk": "@@ -12,33 +12,40 @@\n \n \tpublic static final String URL_MY_CODE_SYSTEM = \"http://example.com/my_code_system\";\n \n-\tprivate CodeSystem createCodeSystemWithMoreThan100Concepts() {\n-\t\tCodeSystem codeSystem = new CodeSystem();\n-\t\tcodeSystem.setUrl(URL_MY_CODE_SYSTEM);\n-\t\tcodeSystem.setContent(CodeSystem.CodeSystemContentMode.NOTPRESENT);\n-\n-\t\tfor (int i = 0; i < 125; i++) {\n-\t\t\tcodeSystem.addConcept(new CodeSystem.ConceptDefinitionComponent(new CodeType(\"codeA \" + i)));\n-\t\t}\n-\n-\t\treturn codeSystem;\n-\n-\t}\n-\n \t@Test\n \tpublic void testStoreNewCodeSystemVersionForExistingCodeSystem() {\n \t\tCodeSystem upload = createCodeSystemWithMoreThan100Concepts();\n \n+\t\t// Create CodeSystem resource\n \t\tResourceTable codeSystemResourceEntity = (ResourceTable)myCodeSystemDao.create(upload, mySrd).getEntity();\n \n+\t\t// Update the CodeSystem resource\n \t\trunInTransaction(() -> myTermCodeSystemStorageSvc.storeNewCodeSystemVersionIfNeeded(upload, codeSystemResourceEntity));\n \n+\t\t/*\n+\t\t\tBecause there are more than 100 concepts in the code system, the first 100 will be persisted immediately and\n+\t\t\tthe remaining 25 concepts will be queued up for \"deferred save\".\n+\n+\t\t\tAs the CodeSystem was persisted twice, the extra 25 term concepts will be queued twice, each with a different", "originalCommit": "4e5ca2ee15d384cfffab62abba773aac898e6abc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "b1ff6cbe378f9de084b02035ea80b433a144357d", "url": "https://github.com/hapifhir/hapi-fhir/commit/b1ff6cbe378f9de084b02035ea80b433a144357d", "message": "Changes from code review", "committedDate": "2020-07-03T18:25:24Z", "type": "commit"}]}