{"pr_number": 1832, "pr_title": "Transaction write performance fix", "pr_createdAt": "2020-05-06T13:40:16Z", "pr_url": "https://github.com/hapifhir/hapi-fhir/pull/1832", "timeline": [{"oid": "9b721ac5b680e28b9c201f64f9886f2092f36728", "url": "https://github.com/hapifhir/hapi-fhir/commit/9b721ac5b680e28b9c201f64f9886f2092f36728", "message": "Performance fix for transactions", "committedDate": "2020-05-06T13:10:49Z", "type": "commit"}, {"oid": "9fecd41917f8a9f8d7e62733b5589da3cc9f30af", "url": "https://github.com/hapifhir/hapi-fhir/commit/9fecd41917f8a9f8d7e62733b5589da3cc9f30af", "message": "Test fix", "committedDate": "2020-05-06T13:39:38Z", "type": "commit"}, {"oid": "d0b750efaf3b6aeff411eba761a9d65b65bf48db", "url": "https://github.com/hapifhir/hapi-fhir/commit/d0b750efaf3b6aeff411eba761a9d65b65bf48db", "message": "Fixes", "committedDate": "2020-05-06T17:40:32Z", "type": "commit"}, {"oid": "93225a79dbc81ed31683b9abf646fbe2f9f63a96", "url": "https://github.com/hapifhir/hapi-fhir/commit/93225a79dbc81ed31683b9abf646fbe2f9f63a96", "message": "Add docs", "committedDate": "2020-05-06T18:21:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyMDk3NA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1832#discussion_r421020974", "bodyText": "Was the optimization mostly just adding caching here?", "author": "tadgh", "createdAt": "2020-05-06T18:57:57Z", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/index/IdHelperService.java", "diffHunk": "@@ -364,20 +364,42 @@ private Long resolveResourceIdentity(@Nonnull RequestPartitionId theRequestParti\n \t}\n \n \tprivate void resolvePids(@Nonnull RequestPartitionId theRequestPartitionId, List<Long> thePidsToResolve, List<IResourceLookup> theTarget) {\n-\t\tCollection<Object[]> lookup;\n-\t\tif (theRequestPartitionId.isAllPartitions()) {\n-\t\t\tlookup = myResourceTableDao.findLookupFieldsByResourcePid(thePidsToResolve);\n-\t\t} else {\n-\t\t\tif (theRequestPartitionId.getPartitionId() != null) {\n-\t\t\t\tlookup = myResourceTableDao.findLookupFieldsByResourcePidInPartition(thePidsToResolve, theRequestPartitionId.getPartitionId());\n+\n+\t\tif (!myDaoConfig.isDeleteEnabled()) {\n+\t\t\tfor (Iterator<Long> forcedIdIterator = thePidsToResolve.iterator(); forcedIdIterator.hasNext(); ) {\n+\t\t\t\tLong nextPid = forcedIdIterator.next();\n+\t\t\t\tString nextKey = Long.toString(nextPid);\n+\t\t\t\tIResourceLookup cachedLookup = myResourceLookupCache.getIfPresent(nextKey);\n+\t\t\t\tif (cachedLookup != null) {\n+\t\t\t\t\tforcedIdIterator.remove();\n+\t\t\t\t\ttheTarget.add(cachedLookup);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (thePidsToResolve.size() > 0) {\n+\t\t\tCollection<Object[]> lookup;\n+\t\t\tif (theRequestPartitionId.isAllPartitions()) {\n+\t\t\t\tlookup = myResourceTableDao.findLookupFieldsByResourcePid(thePidsToResolve);\n \t\t\t} else {\n-\t\t\t\tlookup = myResourceTableDao.findLookupFieldsByResourcePidInPartitionNull(thePidsToResolve);\n+\t\t\t\tif (theRequestPartitionId.getPartitionId() != null) {\n+\t\t\t\t\tlookup = myResourceTableDao.findLookupFieldsByResourcePidInPartition(thePidsToResolve, theRequestPartitionId.getPartitionId());\n+\t\t\t\t} else {\n+\t\t\t\t\tlookup = myResourceTableDao.findLookupFieldsByResourcePidInPartitionNull(thePidsToResolve);\n+\t\t\t\t}\n \t\t\t}\n+\t\t\tlookup\n+\t\t\t\t.stream()\n+\t\t\t\t.map(t -> new ResourceLookup((String) t[0], (Long) t[1], (Date) t[2]))\n+\t\t\t\t.forEach(t->{\n+\t\t\t\t\ttheTarget.add(t);\n+\t\t\t\t\tif (!myDaoConfig.isDeleteEnabled()) {\n+\t\t\t\t\t\tString nextKey = Long.toString(t.getResourceId());\n+\t\t\t\t\t\tmyResourceLookupCache.put(nextKey, t);\n+\t\t\t\t\t}\n+\t\t\t\t});\n+", "originalCommit": "93225a79dbc81ed31683b9abf646fbe2f9f63a96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEyMDgzNg==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1832#discussion_r421120836", "bodyText": "Yup exactly.", "author": "jamesagnew", "createdAt": "2020-05-06T22:08:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyMDk3NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyMzk2MA==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1832#discussion_r421023960", "bodyText": "withing -> within", "author": "tadgh", "createdAt": "2020-05-06T19:03:07Z", "path": "hapi-fhir-jpaserver-model/src/main/java/ca/uhn/fhir/jpa/model/util/TransactionDetails.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package ca.uhn.fhir.jpa.model.util;\n+\n+/*-\n+ * #%L\n+ * HAPI FHIR Model\n+ * %%\n+ * Copyright (C) 2014 - 2020 University Health Network\n+ * %%\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * #L%\n+ */\n+\n+import ca.uhn.fhir.jpa.model.cross.ResourcePersistentId;\n+import org.hl7.fhir.instance.model.api.IIdType;\n+\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * This object contains runtime information that is gathered and relevant to a single <i>database transaction</i>.\n+ * This doesn't mean a FHIR transaction necessarily, but rather any operation that happens withing a single DB transaction", "originalCommit": "93225a79dbc81ed31683b9abf646fbe2f9f63a96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU3MTE3NQ==", "url": "https://github.com/hapifhir/hapi-fhir/pull/1832#discussion_r421571175", "bodyText": "Fixed", "author": "jamesagnew", "createdAt": "2020-05-07T14:56:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyMzk2MA=="}], "type": "inlineReview", "revised_code": {"commit": "dd7856707c800f69f0a7df5150a5940e3a8e54c1", "chunk": "diff --git a/hapi-fhir-jpaserver-model/src/main/java/ca/uhn/fhir/jpa/model/util/TransactionDetails.java b/hapi-fhir-jpaserver-model/src/main/java/ca/uhn/fhir/jpa/model/util/TransactionDetails.java\nindex 609cbd01cb..91f63840d8 100644\n--- a/hapi-fhir-jpaserver-model/src/main/java/ca/uhn/fhir/jpa/model/util/TransactionDetails.java\n+++ b/hapi-fhir-jpaserver-model/src/main/java/ca/uhn/fhir/jpa/model/util/TransactionDetails.java\n\n@@ -30,7 +30,7 @@ import java.util.Map;\n \n /**\n  * This object contains runtime information that is gathered and relevant to a single <i>database transaction</i>.\n- * This doesn't mean a FHIR transaction necessarily, but rather any operation that happens withing a single DB transaction\n+ * This doesn't mean a FHIR transaction necessarily, but rather any operation that happens within a single DB transaction\n  * (i.e. a FHIR create, read, transaction, etc.).\n  * <p>\n  * The intent with this class is to hold things we want to pass from operation to operation within a transaction in\n"}}, {"oid": "dd7856707c800f69f0a7df5150a5940e3a8e54c1", "url": "https://github.com/hapifhir/hapi-fhir/commit/dd7856707c800f69f0a7df5150a5940e3a8e54c1", "message": "Test fixes", "committedDate": "2020-05-06T23:33:12Z", "type": "commit"}]}