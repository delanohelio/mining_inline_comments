{"pr_number": 1338, "pr_title": "Feature | Added support for Data Classification v2", "pr_createdAt": "2020-05-20T05:40:10Z", "pr_url": "https://github.com/microsoft/mssql-jdbc/pull/1338", "timeline": [{"oid": "c97b863c95385bdcd1afc897ef39cbebaf495578", "url": "https://github.com/microsoft/mssql-jdbc/commit/c97b863c95385bdcd1afc897ef39cbebaf495578", "message": "Fix AEv2 tests exclude for reqExternalSetup and cleanup (#1247)", "committedDate": "2020-02-05T19:03:48Z", "type": "commit"}, {"oid": "54b5a194e5d46552419c86e0d1f8c800f42d3de8", "url": "https://github.com/microsoft/mssql-jdbc/commit/54b5a194e5d46552419c86e0d1f8c800f42d3de8", "message": "Fix | Add null check for getObject() with LocalTime and LocalDate (#1250)", "committedDate": "2020-02-08T00:19:05Z", "type": "commit"}, {"oid": "672b7d67caae75250c53f82a760e8d3880e62a37", "url": "https://github.com/microsoft/mssql-jdbc/commit/672b7d67caae75250c53f82a760e8d3880e62a37", "message": "added all AKV tests to use reqExternalSetup tag so they will be skipped by default (#1254)\n\n* skip AKV test properly\r\n\r\n* removed enclave properties string to failed errors as enclave tests could be skipped", "committedDate": "2020-02-10T19:04:22Z", "type": "commit"}, {"oid": "3c3331b7b0ff1b27b1e80271bf9ffdc6aae7be79", "url": "https://github.com/microsoft/mssql-jdbc/commit/3c3331b7b0ff1b27b1e80271bf9ffdc6aae7be79", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-25T06:21:47Z", "type": "commit"}, {"oid": "e2c5640370daa89c0d8c1559b5791e99656f78c8", "url": "https://github.com/microsoft/mssql-jdbc/commit/e2c5640370daa89c0d8c1559b5791e99656f78c8", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-26T06:10:08Z", "type": "commit"}, {"oid": "aad696640378b75f3cb8cb24cc2fa299358db9ac", "url": "https://github.com/microsoft/mssql-jdbc/commit/aad696640378b75f3cb8cb24cc2fa299358db9ac", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-28T03:18:02Z", "type": "commit"}, {"oid": "92bf04c2787c3b2a704f641f50cb4a83193f1d6d", "url": "https://github.com/microsoft/mssql-jdbc/commit/92bf04c2787c3b2a704f641f50cb4a83193f1d6d", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-03-31T01:58:20Z", "type": "commit"}, {"oid": "3ba5ab72008501e23f43dbcbcc333775320ddafa", "url": "https://github.com/microsoft/mssql-jdbc/commit/3ba5ab72008501e23f43dbcbcc333775320ddafa", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-04T05:47:37Z", "type": "commit"}, {"oid": "d20823deffea162b2b17b079cc291f91269558aa", "url": "https://github.com/microsoft/mssql-jdbc/commit/d20823deffea162b2b17b079cc291f91269558aa", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-07T00:45:05Z", "type": "commit"}, {"oid": "4cc959f7e76eedbf49e30e5b92de43c86d7eb803", "url": "https://github.com/microsoft/mssql-jdbc/commit/4cc959f7e76eedbf49e30e5b92de43c86d7eb803", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-29T02:59:23Z", "type": "commit"}, {"oid": "7b301f8184b26da4d99b2feab8b2aea886c01cea", "url": "https://github.com/microsoft/mssql-jdbc/commit/7b301f8184b26da4d99b2feab8b2aea886c01cea", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-04-30T06:36:21Z", "type": "commit"}, {"oid": "56bcf139fe6acd87c41b3829b4f157c59bd9f873", "url": "https://github.com/microsoft/mssql-jdbc/commit/56bcf139fe6acd87c41b3829b4f157c59bd9f873", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-05-07T22:26:03Z", "type": "commit"}, {"oid": "744e0ca78e57bc6c0db98910a9066d5b583c6ba8", "url": "https://github.com/microsoft/mssql-jdbc/commit/744e0ca78e57bc6c0db98910a9066d5b583c6ba8", "message": "Merge remote-tracking branch 'upstream/dev' into dev", "committedDate": "2020-05-12T22:47:18Z", "type": "commit"}, {"oid": "8479062ad4a3c0277255479095da7541def34ec5", "url": "https://github.com/microsoft/mssql-jdbc/commit/8479062ad4a3c0277255479095da7541def34ec5", "message": "dataclassification v2", "committedDate": "2020-05-16T04:50:00Z", "type": "commit"}, {"oid": "8dbcca62db19332d875aafe1d5ed93f6d879ce4a", "url": "https://github.com/microsoft/mssql-jdbc/commit/8dbcca62db19332d875aafe1d5ed93f6d879ce4a", "message": "fix", "committedDate": "2020-05-18T21:08:06Z", "type": "commit"}, {"oid": "c64011d1a46345b88fdc1dd9e21f2e7da2cbfe71", "url": "https://github.com/microsoft/mssql-jdbc/commit/c64011d1a46345b88fdc1dd9e21f2e7da2cbfe71", "message": "Merge remote-tracking branch 'upstream/dev' into dataclass", "committedDate": "2020-05-19T00:57:57Z", "type": "commit"}, {"oid": "234512b6f5e89a9d3aed1cfd56a12416e1408261", "url": "https://github.com/microsoft/mssql-jdbc/commit/234512b6f5e89a9d3aed1cfd56a12416e1408261", "message": "fixed typo", "committedDate": "2020-05-19T02:31:35Z", "type": "commit"}, {"oid": "621bc2e5c56e38b74828fedce4cf5589b82b6943", "url": "https://github.com/microsoft/mssql-jdbc/commit/621bc2e5c56e38b74828fedce4cf5589b82b6943", "message": "comment", "committedDate": "2020-05-20T19:51:07Z", "type": "commit"}, {"oid": "7712b19ecbeeba633f82e63bba846e42fb45857d", "url": "https://github.com/microsoft/mssql-jdbc/commit/7712b19ecbeeba633f82e63bba846e42fb45857d", "message": "resolved conflicts", "committedDate": "2020-06-10T21:22:25Z", "type": "commit"}, {"oid": "05993532bab653f3d508adf38ecc0ad7f38bee23", "url": "https://github.com/microsoft/mssql-jdbc/commit/05993532bab653f3d508adf38ecc0ad7f38bee23", "message": "Merge branch 'dataclass' of https://github.com/lilgreenbird/mssql-jdbc into dataclass", "committedDate": "2020-06-10T21:24:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY2Nzg2Nw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r439667867", "bodyText": "I think Azure now has DataClassification support. Could you remov Azure tags from tests and check if they pass?", "author": "ulvii", "createdAt": "2020-06-12T22:34:37Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/resultset/DataClassificationTest.java", "diffHunk": "@@ -10,13 +10,19 @@\n import java.sql.Statement;", "originalCommit": "05993532bab653f3d508adf38ecc0ad7f38bee23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ2OTQ4OQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r442469489", "bodyText": "? yes it's supported and had been removed and tested. The only place that has these tags is in the negative test", "author": "lilgreenbird", "createdAt": "2020-06-18T19:57:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY2Nzg2Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4MzgwNQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r439683805", "bodyText": "Make values() static array for better performance. See #1065 for reference.", "author": "ulvii", "createdAt": "2020-06-12T23:58:11Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDriver.java", "diffHunk": "@@ -455,6 +455,35 @@ public String toString() {\n }\n \n \n+enum SensitivityRank {\n+    NOT_DEFINED(-1),\n+    NONE(0),\n+    LOW(10),\n+    MEDIUM(20),\n+    HIGH(30),\n+    CRITICAL(40);\n+\n+    private int rank;\n+\n+    private SensitivityRank(int rank) {\n+        this.rank = rank;\n+    }\n+\n+    public int getValue() {\n+        return rank;\n+    }\n+\n+    static boolean isValid(int rank) throws SQLServerException {\n+        for (SensitivityRank r : SensitivityRank.values()) {", "originalCommit": "05993532bab653f3d508adf38ecc0ad7f38bee23", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6461154f8c4134ab3d821fa427cb4068847e94b2", "chunk": "diff --git a/src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDriver.java b/src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDriver.java\nindex 9946002c..c780b2c3 100644\n--- a/src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDriver.java\n+++ b/src/main/java/com/microsoft/sqlserver/jdbc/SQLServerDriver.java\n\n@@ -463,6 +463,7 @@ enum SensitivityRank {\n     HIGH(30),\n     CRITICAL(40);\n \n+    private static final SensitivityRank[] VALUES = values();\n     private int rank;\n \n     private SensitivityRank(int rank) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4NTkwNg==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r439685906", "bodyText": "If getServerSupportedDataClassificationVersion is 1, the driver will still read the rank. Don't we want to read rank only if the version is at least 2?", "author": "ulvii", "createdAt": "2020-06-13T00:12:10Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/StreamColumns.java", "diffHunk": "@@ -259,55 +259,73 @@ private SensitivityClassification processDataClassification(TDSReader tdsReader)\n         SensitivityClassification sensitivityClassification = null;\n \n         // get the label count\n-        int numLabels = tdsReader.readUnsignedShort();\n-        List<Label> labels = new ArrayList<Label>(numLabels);\n+        int sensitivityLabelCount = tdsReader.readUnsignedShort();\n+        List<Label> sensitivityLabels = new ArrayList<Label>(sensitivityLabelCount);\n \n-        for (int i = 0; i < numLabels; i++) {\n-            labels.add(readSensitivityLabel(tdsReader));\n+        for (int i = 0; i < sensitivityLabelCount; i++) {\n+            sensitivityLabels.add(readSensitivityLabel(tdsReader));\n         }\n \n         // get the information type count\n-        int numInformationTypes = tdsReader.readUnsignedShort();\n+        int informationTypeCount = tdsReader.readUnsignedShort();\n \n-        List<InformationType> informationTypes = new ArrayList<InformationType>(numInformationTypes);\n-        for (int i = 0; i < numInformationTypes; i++) {\n+        List<InformationType> informationTypes = new ArrayList<InformationType>(informationTypeCount);\n+        for (int i = 0; i < informationTypeCount; i++) {\n             informationTypes.add(readSensitivityInformationType(tdsReader));\n         }\n \n+        int sensitivityRank = SensitivityRank.NOT_DEFINED.getValue();\n+        if (TDS.MAX_SUPPORTED_DATA_CLASSIFICATION_VERSION <= tdsReader.getServerSupportedDataClassificationVersion()) {", "originalCommit": "05993532bab653f3d508adf38ecc0ad7f38bee23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwOTQ3Nw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r441909477", "bodyText": "No, it looks like if getServerSupportedDataClassificationVersion is 1, then we won't read the rank because 2 <= 1 is false?", "author": "peterbae", "createdAt": "2020-06-18T00:52:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4NTkwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ1NDIzMw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r442454233", "bodyText": "yes, what @peterbae said", "author": "lilgreenbird", "createdAt": "2020-06-18T19:30:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4NTkwNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY4NjY1OA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1338#discussion_r439686658", "bodyText": "This is a breaking change! I suggest to create another constructor instead.", "author": "ulvii", "createdAt": "2020-06-13T00:17:40Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/dataclassification/SensitivityProperty.java", "diffHunk": "@@ -19,10 +20,13 @@\n      *        Label as received from SQL Server for this SensitivityProperty\n      * @param informationType\n      *        InformationType as received from SQL Server for this SensitivityProperty\n+     * @param sensitivityRank\n+     *        sensitivity rank as received from SQL Server for this SensitivityProperty\n      */\n-    public SensitivityProperty(Label label, InformationType informationType) {\n+    public SensitivityProperty(Label label, InformationType informationType, int sensitivityRank) {", "originalCommit": "05993532bab653f3d508adf38ecc0ad7f38bee23", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6461154f8c4134ab3d821fa427cb4068847e94b2", "chunk": "diff --git a/src/main/java/com/microsoft/sqlserver/jdbc/dataclassification/SensitivityProperty.java b/src/main/java/com/microsoft/sqlserver/jdbc/dataclassification/SensitivityProperty.java\nindex 6208a9b4..bccf5929 100644\n--- a/src/main/java/com/microsoft/sqlserver/jdbc/dataclassification/SensitivityProperty.java\n+++ b/src/main/java/com/microsoft/sqlserver/jdbc/dataclassification/SensitivityProperty.java\n\n@@ -13,6 +13,19 @@ public class SensitivityProperty {\n     private InformationType informationType;\n     private int sensitivityRank;\n \n+    /**\n+     * Constructs a SensitivityProperty\n+     * \n+     * @param label\n+     *        Label as received from SQL Server for this SensitivityProperty\n+     * @param informationType\n+     *        InformationType as received from SQL Server for this SensitivityProperty\n+     */\n+    public SensitivityProperty(Label label, InformationType informationType) {\n+        this.label = label;\n+        this.informationType = informationType;\n+    }\n+\n     /**\n      * Constructs a SensitivityProperty\n      * \n"}}, {"oid": "23da8c2cee27f728e343a138b227dd812f673998", "url": "https://github.com/microsoft/mssql-jdbc/commit/23da8c2cee27f728e343a138b227dd812f673998", "message": "Merge remote-tracking branch 'upstream/dev' into dataclass", "committedDate": "2020-06-18T19:19:35Z", "type": "commit"}, {"oid": "6461154f8c4134ab3d821fa427cb4068847e94b2", "url": "https://github.com/microsoft/mssql-jdbc/commit/6461154f8c4134ab3d821fa427cb4068847e94b2", "message": "review updates", "committedDate": "2020-06-18T20:01:54Z", "type": "commit"}]}