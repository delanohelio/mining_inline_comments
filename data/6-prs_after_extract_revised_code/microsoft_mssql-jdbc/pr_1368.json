{"pr_number": 1368, "pr_title": "Fix issue when tests throw a different error message when AE is on", "pr_createdAt": "2020-06-24T16:37:30Z", "pr_url": "https://github.com/microsoft/mssql-jdbc/pull/1368", "timeline": [{"oid": "51b85f5e27c0c691d8be53f38e6c11e728fa7700", "url": "https://github.com/microsoft/mssql-jdbc/commit/51b85f5e27c0c691d8be53f38e6c11e728fa7700", "message": "Fix issue when tests throw a different error message when AE is on", "committedDate": "2020-06-24T16:36:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjA5Mw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r445856093", "bodyText": "should we check if AE is enabled to see which error it should be?", "author": "lilgreenbird", "createdAt": "2020-06-25T21:44:59Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -201,7 +202,8 @@ else if (lobClass == Blob.class)\n                         if (!verified) {\n                             // Odd CharacterStream length will throw this exception\n                             if (!e.getMessage().contains(TestResource.getResource(\"R_badStreamLength\"))) {\n-                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\")));\n+                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\"))\n+                                        || e.getMessage().contains(TestResource.getResource(\"R_aeStreamReadError\")));", "originalCommit": "51b85f5e27c0c691d8be53f38e6c11e728fa7700", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwODY5NQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r447808695", "bodyText": "The only really good way is to check the connection string, and that's honestly pretty hacky and I don't want to add the extra logic when the test doesn't really care if AE is on or off.", "author": "rene-ye", "createdAt": "2020-06-30T16:16:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjA5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk5Mjk3Ng==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r447992976", "bodyText": "yeah I did that in PR 1371, we should agree to do the same thing, if we're not going to check then I'll remove that from that PR too", "author": "lilgreenbird", "createdAt": "2020-06-30T21:35:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjA5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyOTI3OA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r449229278", "bodyText": "I'm ok with not checking, it doesn't have to be consistent persay.", "author": "rene-ye", "createdAt": "2020-07-02T19:37:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjA5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyMDY1Nw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r449320657", "bodyText": "use ds.getColumnEncryptionSetting() as per discussion", "author": "lilgreenbird", "createdAt": "2020-07-03T00:24:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjA5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "07fd23c088c4b8c060733c0cac41bafe1a2d0d74", "chunk": "diff --git a/src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java b/src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java\nindex db27f7e6..4dc297de 100644\n--- a/src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java\n+++ b/src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java\n\n@@ -202,8 +201,9 @@ public class LobsTest extends AbstractTest {\n                         if (!verified) {\n                             // Odd CharacterStream length will throw this exception\n                             if (!e.getMessage().contains(TestResource.getResource(\"R_badStreamLength\"))) {\n-                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\"))\n-                                        || e.getMessage().contains(TestResource.getResource(\"R_aeStreamReadError\")));\n+                                assertTrue(e.getMessage().contains(TestResource.getResource(\"R_streamReadError\")) || (ds\n+                                        .getColumnEncryptionSetting().equalsIgnoreCase(Constants.ENABLED)\n+                                        && e.getMessage().contains(TestResource.getResource(\"R_aeStreamReadError\"))));\n                             }\n \n                         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1NjM5Nw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1368#discussion_r445856397", "bodyText": "why?", "author": "lilgreenbird", "createdAt": "2020-06-25T21:45:35Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java", "diffHunk": "@@ -41,6 +41,7 @@\n import org.junit.runner.RunWith;\n \n import com.microsoft.sqlserver.jdbc.RandomUtil;\n+import com.microsoft.sqlserver.jdbc.SQLServerConnection;", "originalCommit": "51b85f5e27c0c691d8be53f38e6c11e728fa7700", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b6367d375bd3775d285e10be78548ea5a9ef7615", "chunk": "diff --git a/src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java b/src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java\nindex db27f7e6..fb40bf85 100644\n--- a/src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java\n+++ b/src/test/java/com/microsoft/sqlserver/jdbc/unit/lobs/LobsTest.java\n\n@@ -41,7 +41,6 @@ import org.junit.platform.runner.JUnitPlatform;\n import org.junit.runner.RunWith;\n \n import com.microsoft.sqlserver.jdbc.RandomUtil;\n-import com.microsoft.sqlserver.jdbc.SQLServerConnection;\n import com.microsoft.sqlserver.jdbc.SQLServerDataSource;\n import com.microsoft.sqlserver.jdbc.TestResource;\n import com.microsoft.sqlserver.jdbc.TestUtils;\n"}}, {"oid": "b6367d375bd3775d285e10be78548ea5a9ef7615", "url": "https://github.com/microsoft/mssql-jdbc/commit/b6367d375bd3775d285e10be78548ea5a9ef7615", "message": "remove import", "committedDate": "2020-06-30T16:18:12Z", "type": "commit"}, {"oid": "7f54aa0e803698fc6b72376df0a2ed56e48f8d42", "url": "https://github.com/microsoft/mssql-jdbc/commit/7f54aa0e803698fc6b72376df0a2ed56e48f8d42", "message": "Merge branch 'dev' into lobsAE", "committedDate": "2020-07-02T17:43:06Z", "type": "commit"}, {"oid": "07fd23c088c4b8c060733c0cac41bafe1a2d0d74", "url": "https://github.com/microsoft/mssql-jdbc/commit/07fd23c088c4b8c060733c0cac41bafe1a2d0d74", "message": "check for AE", "committedDate": "2020-07-03T16:20:06Z", "type": "commit"}, {"oid": "1176d8736be4ef79dbd9f8eedb33186a85a09787", "url": "https://github.com/microsoft/mssql-jdbc/commit/1176d8736be4ef79dbd9f8eedb33186a85a09787", "message": "Merge branch 'lobsAE' of https://github.com/rene-ye/mssql-jdbc into lobsAE", "committedDate": "2020-07-03T16:20:54Z", "type": "commit"}]}