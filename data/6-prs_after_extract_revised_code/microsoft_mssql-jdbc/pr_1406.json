{"pr_number": 1406, "pr_title": "Fix | Sort column ordinal mapping during bulk copy", "pr_createdAt": "2020-08-11T22:17:34Z", "pr_url": "https://github.com/microsoft/mssql-jdbc/pull/1406", "timeline": [{"oid": "d38ecc82ef1e44df9c89a2e36c899ac107f60be3", "url": "https://github.com/microsoft/mssql-jdbc/commit/d38ecc82ef1e44df9c89a2e36c899ac107f60be3", "message": "sort", "committedDate": "2020-08-11T22:15:46Z", "type": "commit"}, {"oid": "3ef5318b286454424e5dba00071e602fc2bae83b", "url": "https://github.com/microsoft/mssql-jdbc/commit/3ef5318b286454424e5dba00071e602fc2bae83b", "message": "test", "committedDate": "2020-08-26T00:23:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI2Mzg4Mw==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1406#discussion_r480263883", "bodyText": "If the columnMetadata Map objects implemented in the SQLServerBulkRecord classes were TreeMap objects instead of HashMap, you wouldn't need to sort the keyset you retrieve here. However I'm not sure if the cost of lookups/inserts going from O(1) to O(logN) would be worth that trade off.", "author": "rene-ye", "createdAt": "2020-08-31T17:01:14Z", "path": "src/main/java/com/microsoft/sqlserver/jdbc/SQLServerBulkCopy.java", "diffHunk": "@@ -1839,7 +1840,9 @@ private void validateColumnMappings() throws SQLServerException {\n                 // if no mapping is provided for csv file and metadata is missing for some columns throw error\n                 if (null != serverBulkData) {\n                     Set<Integer> columnOrdinals = serverBulkData.getColumnOrdinals();\n-                    Iterator<Integer> columnsIterator = columnOrdinals.iterator();\n+                    List<Integer> sortedList = new ArrayList<>(columnOrdinals);\n+                    Collections.sort(sortedList);\n+                    Iterator<Integer> columnsIterator = sortedList.iterator();", "originalCommit": "3ef5318b286454424e5dba00071e602fc2bae83b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d08f8de4449ca31dd506e84047e16795828d772f", "chunk": "diff --git a/src/main/java/com/microsoft/sqlserver/jdbc/SQLServerBulkCopy.java b/src/main/java/com/microsoft/sqlserver/jdbc/SQLServerBulkCopy.java\nindex 910e3d2f..ec2d0dbb 100644\n--- a/src/main/java/com/microsoft/sqlserver/jdbc/SQLServerBulkCopy.java\n+++ b/src/main/java/com/microsoft/sqlserver/jdbc/SQLServerBulkCopy.java\n\n@@ -1840,17 +1840,33 @@ public class SQLServerBulkCopy implements java.lang.AutoCloseable, java.io.Seria\n                 // if no mapping is provided for csv file and metadata is missing for some columns throw error\n                 if (null != serverBulkData) {\n                     Set<Integer> columnOrdinals = serverBulkData.getColumnOrdinals();\n-                    List<Integer> sortedList = new ArrayList<>(columnOrdinals);\n-                    Collections.sort(sortedList);\n-                    Iterator<Integer> columnsIterator = sortedList.iterator();\n+                    Iterator<Integer> columnsIterator = columnOrdinals.iterator();\n                     int j = 1;\n+                    outerWhileLoop:\n                     while (columnsIterator.hasNext()) {\n                         int currentOrdinal = columnsIterator.next();\n                         if (j != currentOrdinal) {\n-                            MessageFormat form = new MessageFormat(SQLServerException.getErrString(\"R_invalidColumn\"));\n-                            Object[] msgArgs = {currentOrdinal};\n-                            throw new SQLServerException(form.format(msgArgs), SQLState.COL_NOT_FOUND,\n-                                    DriverError.NOT_SET, null);\n+                            /*\n+                             * GitHub issue #1391: attempt to sort the set before throwing an exception, in case the set\n+                             * was not sorted.\n+                             */\n+                            List<Integer> sortedList = new ArrayList<>(columnOrdinals);\n+                            Collections.sort(sortedList);\n+                            columnsIterator = sortedList.iterator();\n+                            j = 1;\n+                            while (columnsIterator.hasNext()) {\n+                                currentOrdinal = columnsIterator.next();\n+                                if (j != currentOrdinal) {\n+                                    MessageFormat form = new MessageFormat(\n+                                            SQLServerException.getErrString(\"R_invalidColumn\"));\n+                                    Object[] msgArgs = {currentOrdinal};\n+                                    throw new SQLServerException(form.format(msgArgs), SQLState.COL_NOT_FOUND,\n+                                            DriverError.NOT_SET, null);\n+                                }\n+                                j++;\n+                            }\n+                            // if the sorted set doesn't throw an error, break out of the outer while loop\n+                            break outerWhileLoop;\n                         }\n                         j++;\n                     }\n"}}, {"oid": "d08f8de4449ca31dd506e84047e16795828d772f", "url": "https://github.com/microsoft/mssql-jdbc/commit/d08f8de4449ca31dd506e84047e16795828d772f", "message": "changes", "committedDate": "2020-09-02T22:02:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwMjcyMA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1406#discussion_r483802720", "bodyText": "Why is this in a different file? Please move this to the same file as the test.", "author": "ulvii", "createdAt": "2020-09-04T19:10:46Z", "path": "src/test/java/com/microsoft/sqlserver/jdbc/bulkCopy/ISQLServerBulkRecordIssuesTest.java", "diffHunk": "@@ -253,6 +256,26 @@ public void afterEachTests() throws SQLException {\n     }\n }\n \n+", "originalCommit": "d08f8de4449ca31dd506e84047e16795828d772f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA4OTMyMA==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1406#discussion_r485089320", "bodyText": "This interface already has another (very similar) bulk data class used for test, so I think it makes sense to keep this code here.", "author": "peterbae", "createdAt": "2020-09-08T17:39:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwMjcyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNTc4Ng==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1406#discussion_r485125786", "bodyText": "That class is only used inside the same test file. I would keep  the required classes for a test inside its own file.", "author": "ulvii", "createdAt": "2020-09-08T18:47:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwMjcyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0NjU0MQ==", "url": "https://github.com/microsoft/mssql-jdbc/pull/1406#discussion_r485146541", "bodyText": "Ok, I've updated the test.", "author": "peterbae", "createdAt": "2020-09-08T19:26:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwMjcyMA=="}], "type": "inlineReview", "revised_code": {"commit": "dc9e0ba8df2e6c6390cb1637927af10509592524", "chunk": "diff --git a/src/test/java/com/microsoft/sqlserver/jdbc/bulkCopy/ISQLServerBulkRecordIssuesTest.java b/src/test/java/com/microsoft/sqlserver/jdbc/bulkCopy/ISQLServerBulkRecordIssuesTest.java\nindex 6283acf5..cf2febbc 100644\n--- a/src/test/java/com/microsoft/sqlserver/jdbc/bulkCopy/ISQLServerBulkRecordIssuesTest.java\n+++ b/src/test/java/com/microsoft/sqlserver/jdbc/bulkCopy/ISQLServerBulkRecordIssuesTest.java\n\n@@ -256,26 +253,6 @@ public class ISQLServerBulkRecordIssuesTest extends AbstractTest {\n     }\n }\n \n-\n-// Used for testing issue reported in https://github.com/microsoft/mssql-jdbc/issues/1391\n-class BulkData1391 extends SQLServerBulkCSVFileRecord {\n-\n-    public BulkData1391(String fileToParse, String encoding, String delimiter,\n-            boolean firstLineIsColumnNames) throws SQLServerException {\n-        super(fileToParse, encoding, delimiter, firstLineIsColumnNames);\n-    }\n-\n-    @Override\n-    public Set<Integer> getColumnOrdinals() {\n-        List<Integer> list = new ArrayList<>(columnMetadata.keySet());\n-        Integer temp = list.get(0);\n-        list.set(0, list.get(1));\n-        list.set(1, temp);\n-        return new LinkedHashSet<>(list);\n-    }\n-}\n-\n-\n class BulkData implements ISQLServerBulkData {\n     private static final long serialVersionUID = 1L;\n     boolean isStringData = false;\n"}}, {"oid": "dc9e0ba8df2e6c6390cb1637927af10509592524", "url": "https://github.com/microsoft/mssql-jdbc/commit/dc9e0ba8df2e6c6390cb1637927af10509592524", "message": "update test", "committedDate": "2020-09-08T19:26:28Z", "type": "commit"}]}