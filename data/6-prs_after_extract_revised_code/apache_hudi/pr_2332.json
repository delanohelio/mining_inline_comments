{"pr_number": 2332, "pr_title": "[HUDI-1319] Make async operations work with metadata table", "pr_createdAt": "2020-12-13T23:22:35Z", "pr_url": "https://github.com/apache/hudi/pull/2332", "timeline": [{"oid": "862d501d3e1d247dd8086ce5f25d1ada93cbd486", "url": "https://github.com/apache/hudi/commit/862d501d3e1d247dd8086ce5f25d1ada93cbd486", "message": "[HUDI-1319] Make async operations work with metadata table\n\n - Changes the syncing model to only move over completed instants on data timeline\n - Syncing happens postCommit and on writeClient initialization\n - Latest delta commit on the metadata table is sufficient as the watermark for data timeline archival\n - Cleaning/Compaction use a suffix to the last instant written to metadata table, such that we keep the 1-1\n - .. mapping between data and metadata timelines.\n - Got rid of a lot of the complexity around checking for valid commits during open of base/log files\n - Tests now use local FS, to simulate more failure scenarios\n - Some failure scenarios exposed HUDI-1434, which is needed for MOR to work correctly", "committedDate": "2020-12-13T23:15:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA1NDUxNQ==", "url": "https://github.com/apache/hudi/pull/2332#discussion_r544054515", "bodyText": "Clarification: Since we are not updating the metadata table here, for compactions the metadata table will be updated the next time the HoodieWriteClient is created.\nBut for commit operations the metadata table (may) be updated right after the commit completes in \"postCommit\" function. Right?", "author": "prashantwason", "createdAt": "2020-12-16T07:06:17Z", "path": "hudi-client/src/main/java/org/apache/hudi/client/HoodieWriteClient.java", "diffHunk": "@@ -701,8 +704,6 @@ protected void completeCompaction(HoodieCommitMetadata metadata, JavaRDD<WriteSt\n     finalizeWrite(table, compactionCommitTime, writeStats);\n     LOG.info(\"Committing Compaction \" + compactionCommitTime + \". Finished with result \" + metadata);\n \n-    table.metadataWriter(jsc).update(metadata, compactionCommitTime);\n-", "originalCommit": "862d501d3e1d247dd8086ce5f25d1ada93cbd486", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ2NzM2Nw==", "url": "https://github.com/apache/hudi/pull/2332#discussion_r545467367", "bodyText": "yes correct. even for compaction, once the compaction commits, it will trigger a sync. I think we should ensure the sync only happens for commit operations (i.e only one allowed at the moment). I ll double check this.", "author": "vinothchandar", "createdAt": "2020-12-17T23:16:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA1NDUxNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA3MjQ2OA==", "url": "https://github.com/apache/hudi/pull/2332#discussion_r544072468", "bodyText": "This is a good idea. I hope it does not break some function which may depend on yyyyMMddHHmmss format of the instantTime.", "author": "prashantwason", "createdAt": "2020-12-16T07:31:12Z", "path": "hudi-client/src/main/java/org/apache/hudi/metadata/HoodieBackedTableMetadataWriter.java", "diffHunk": "@@ -725,6 +698,13 @@ private synchronized void commit(JavaSparkContext jsc, JavaRDD<HoodieRecord> rec\n           throw new HoodieMetadataException(\"Failed to commit metadata table records at instant \" + instantTime);\n         }\n       });\n+      // trigger cleaning, compaction, with suffixes based on the same instant time. This ensures that any future\n+      // delta commits synced over will not have an instant time lesser than the last completed instant on the\n+      // metadata table.\n+      writeClient.clean(instantTime + \"001\");", "originalCommit": "862d501d3e1d247dd8086ce5f25d1ada93cbd486", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ2NjY5MQ==", "url": "https://github.com/apache/hudi/pull/2332#discussion_r545466691", "bodyText": "@prashantwason our tests use 001,002 etc. So code should be fine. but may be some metrics reporting code might have some issue. let me double check. good call", "author": "vinothchandar", "createdAt": "2020-12-17T23:14:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA3MjQ2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU4NTM4Ng==", "url": "https://github.com/apache/hudi/pull/2332#discussion_r547585386", "bodyText": "Seems like the parser can handle this", "author": "vinothchandar", "createdAt": "2020-12-23T01:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA3MjQ2OA=="}], "type": "inlineReview", "revised_code": null}]}