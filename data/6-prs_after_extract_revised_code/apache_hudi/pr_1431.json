{"pr_number": 1431, "pr_title": "[HUDI-65] commitTime rename to instantTime", "pr_createdAt": "2020-03-21T01:55:57Z", "pr_url": "https://github.com/apache/hudi/pull/1431", "timeline": [{"oid": "c8d31419c4d3dc408d9ec1256257c311540600c4", "url": "https://github.com/apache/hudi/commit/c8d31419c4d3dc408d9ec1256257c311540600c4", "message": "[HUDI-65]commitTime rename to instantTime", "committedDate": "2020-03-21T01:54:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk2MjA2OQ==", "url": "https://github.com/apache/hudi/pull/1431#discussion_r395962069", "bodyText": "this is specifically doing a savepoint for a commit.. so commitTime is actually apt", "author": "vinothchandar", "createdAt": "2020-03-21T05:00:03Z", "path": "hudi-cli/src/main/java/org/apache/hudi/cli/commands/SavepointsCommand.java", "diffHunk": "@@ -63,36 +63,36 @@ public String showSavepoints() throws IOException {\n   }\n \n   @CliCommand(value = \"savepoint create\", help = \"Savepoint a commit\")\n-  public String savepoint(@CliOption(key = {\"commit\"}, help = \"Commit to savepoint\") final String commitTime,\n+  public String savepoint(@CliOption(key = {\"commit\"}, help = \"Commit to savepoint\") final String instantTime,", "originalCommit": "c8d31419c4d3dc408d9ec1256257c311540600c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk2NDI1OA==", "url": "https://github.com/apache/hudi/pull/1431#discussion_r395964258", "bodyText": "Thanks, I will fix it", "author": "zhaomin1423", "createdAt": "2020-03-21T05:38:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk2MjA2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "69cf894401bc97813072b166b6ab400e44726d9f", "chunk": "diff --git a/hudi-cli/src/main/java/org/apache/hudi/cli/commands/SavepointsCommand.java b/hudi-cli/src/main/java/org/apache/hudi/cli/commands/SavepointsCommand.java\nindex ab79a382d..82c3edf20 100644\n--- a/hudi-cli/src/main/java/org/apache/hudi/cli/commands/SavepointsCommand.java\n+++ b/hudi-cli/src/main/java/org/apache/hudi/cli/commands/SavepointsCommand.java\n\n@@ -63,28 +63,28 @@ public class SavepointsCommand implements CommandMarker {\n   }\n \n   @CliCommand(value = \"savepoint create\", help = \"Savepoint a commit\")\n-  public String savepoint(@CliOption(key = {\"commit\"}, help = \"Commit to savepoint\") final String instantTime,\n+  public String savepoint(@CliOption(key = {\"commit\"}, help = \"Commit to savepoint\") final String commitTime,\n       @CliOption(key = {\"user\"}, unspecifiedDefaultValue = \"default\", help = \"User who is creating the savepoint\") final String user,\n       @CliOption(key = {\"comments\"}, unspecifiedDefaultValue = \"default\", help = \"Comments for creating the savepoint\") final String comments)\n       throws Exception {\n     HoodieTableMetaClient metaClient = HoodieCLI.getTableMetaClient();\n     HoodieActiveTimeline activeTimeline = metaClient.getActiveTimeline();\n     HoodieTimeline timeline = activeTimeline.getCommitTimeline().filterCompletedInstants();\n-    HoodieInstant commitInstant = new HoodieInstant(false, HoodieTimeline.COMMIT_ACTION, instantTime);\n+    HoodieInstant commitInstant = new HoodieInstant(false, HoodieTimeline.COMMIT_ACTION, commitTime);\n \n     if (!timeline.containsInstant(commitInstant)) {\n-      return \"Commit \" + instantTime + \" not found in Commits \" + timeline;\n+      return \"Commit \" + commitTime + \" not found in Commits \" + timeline;\n     }\n \n     String result;\n     try (JavaSparkContext jsc = SparkUtil.initJavaSparkConf(\"Create Savepoint\")) {\n       HoodieWriteClient client = createHoodieClient(jsc, metaClient.getBasePath());\n-      if (client.savepoint(instantTime, user, comments)) {\n+      if (client.savepoint(commitTime, user, comments)) {\n         // Refresh the current\n         refreshMetaClient();\n-        result = String.format(\"The commit \\\"%s\\\" has been savepointed.\", instantTime);\n+        result = String.format(\"The commit \\\"%s\\\" has been savepointed.\", commitTime);\n       } else {\n-        result = String.format(\"Failed: Could not savepoint commit \\\"%s\\\".\", instantTime);\n+        result = String.format(\"Failed: Could not savepoint commit \\\"%s\\\".\", commitTime);\n       }\n     }\n     return result;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk2MjU4NQ==", "url": "https://github.com/apache/hudi/pull/1431#discussion_r395962585", "bodyText": "instant time to use?", "author": "vinothchandar", "createdAt": "2020-03-21T05:07:40Z", "path": "hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java", "diffHunk": "@@ -129,46 +129,46 @@ public static void writePartitionMetadata(FileSystem fs, String[] partitionPaths\n    * retaining the key if optionally provided.\n    *\n    * @param key  Hoodie key.\n-   * @param commitTime  Commit time to use.\n+   * @param instantTime  Commit time to use.", "originalCommit": "c8d31419c4d3dc408d9ec1256257c311540600c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69cf894401bc97813072b166b6ab400e44726d9f", "chunk": "diff --git a/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java b/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java\nindex cc85ed91a..35a80900c 100644\n--- a/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java\n+++ b/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java\n\n@@ -129,7 +129,7 @@ public class HoodieTestDataGenerator {\n    * retaining the key if optionally provided.\n    *\n    * @param key  Hoodie key.\n-   * @param instantTime  Commit time to use.\n+   * @param instantTime  Instant time to use.\n    * @return  Raw paylaod of a test record.\n    * @throws IOException\n    */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk2MjY4Mg==", "url": "https://github.com/apache/hudi/pull/1431#discussion_r395962682", "bodyText": "fix param doc?", "author": "vinothchandar", "createdAt": "2020-03-21T05:08:45Z", "path": "hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java", "diffHunk": "@@ -409,15 +409,15 @@ public HoodieRecord generateUpdateRecord(HoodieKey key, String commitTime) throw\n    * Generates new updates, randomly distributed across the keys above. There can be duplicates within the returned\n    * list\n    *\n-   * @param commitTime Commit Timestamp\n+   * @param instantTime Commit Timestamp", "originalCommit": "c8d31419c4d3dc408d9ec1256257c311540600c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69cf894401bc97813072b166b6ab400e44726d9f", "chunk": "diff --git a/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java b/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java\nindex cc85ed91a..35a80900c 100644\n--- a/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java\n+++ b/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java\n\n@@ -409,7 +409,7 @@ public class HoodieTestDataGenerator {\n    * Generates new updates, randomly distributed across the keys above. There can be duplicates within the returned\n    * list\n    *\n-   * @param instantTime Commit Timestamp\n+   * @param instantTime Instant Timestamp\n    * @param n          Number of updates (including dups)\n    * @return list of hoodie record updates\n    */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk2MjY5OQ==", "url": "https://github.com/apache/hudi/pull/1431#discussion_r395962699", "bodyText": "here too.. can you make a second pass everywhere", "author": "vinothchandar", "createdAt": "2020-03-21T05:09:10Z", "path": "hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java", "diffHunk": "@@ -426,12 +426,12 @@ public HoodieRecord generateUpdateRecord(HoodieKey key, String commitTime) throw\n   /**\n    * Generates deduped updates of keys previously inserted, randomly distributed across the keys above.\n    *\n-   * @param commitTime Commit Timestamp\n+   * @param instantTime Commit Timestamp", "originalCommit": "c8d31419c4d3dc408d9ec1256257c311540600c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69cf894401bc97813072b166b6ab400e44726d9f", "chunk": "diff --git a/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java b/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java\nindex cc85ed91a..35a80900c 100644\n--- a/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java\n+++ b/hudi-client/src/test/java/org/apache/hudi/common/HoodieTestDataGenerator.java\n\n@@ -426,7 +426,7 @@ public class HoodieTestDataGenerator {\n   /**\n    * Generates deduped updates of keys previously inserted, randomly distributed across the keys above.\n    *\n-   * @param instantTime Commit Timestamp\n+   * @param instantTime Instant Timestamp\n    * @param n          Number of unique records\n    * @return list of hoodie record updates\n    */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk2Mjc1Nw==", "url": "https://github.com/apache/hudi/pull/1431#discussion_r395962757", "bodyText": "an instant time", "author": "vinothchandar", "createdAt": "2020-03-21T05:10:23Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/model/HoodieFileGroup.java", "diffHunk": "@@ -160,15 +160,15 @@ private boolean isFileSliceCommitted(FileSlice slice) {\n   }\n \n   /**\n-   * Obtain the latest file slice, upto a commitTime i.e <= maxCommitTime.\n+   * Obtain the latest file slice, upto a instantTime i.e <= maxInstantTime.", "originalCommit": "c8d31419c4d3dc408d9ec1256257c311540600c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69cf894401bc97813072b166b6ab400e44726d9f", "chunk": "diff --git a/hudi-common/src/main/java/org/apache/hudi/common/model/HoodieFileGroup.java b/hudi-common/src/main/java/org/apache/hudi/common/model/HoodieFileGroup.java\nindex e354d538a..ef33e8abe 100644\n--- a/hudi-common/src/main/java/org/apache/hudi/common/model/HoodieFileGroup.java\n+++ b/hudi-common/src/main/java/org/apache/hudi/common/model/HoodieFileGroup.java\n\n@@ -168,7 +168,7 @@ public class HoodieFileGroup implements Serializable {\n   }\n \n   /**\n-   * Obtain the latest file slice, upto a instantTime i.e < maxInstantTime.\n+   * Obtain the latest file slice, upto an instantTime i.e < maxInstantTime.\n    * \n    * @param maxInstantTime Max Instant Time\n    * @return\n"}}, {"oid": "69cf894401bc97813072b166b6ab400e44726d9f", "url": "https://github.com/apache/hudi/commit/69cf894401bc97813072b166b6ab400e44726d9f", "message": "[HUDI-65]commitTime rename to instantTime", "committedDate": "2020-03-21T05:43:47Z", "type": "commit"}]}