{"pr_number": 2272, "pr_title": "[MINOR] Refactor code in HoodieMergeHandle", "pr_createdAt": "2020-11-22T14:21:22Z", "pr_url": "https://github.com/apache/hudi/pull/2272", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU0NzQyNA==", "url": "https://github.com/apache/hudi/pull/2272#discussion_r531547424", "bodyText": "Using String#format would be better?", "author": "yanghua", "createdAt": "2020-11-27T11:32:34Z", "path": "hudi-client/hudi-client-common/src/main/java/org/apache/hudi/io/HoodieMergeHandle.java", "diffHunk": "@@ -241,14 +241,11 @@ public void write(GenericRecord oldRecord) {\n \n     if (copyOldRecord) {\n       // this should work as it is, since this is an existing record\n-      String errMsg = \"Failed to merge old record into new file for key \" + key + \" from old file \" + getOldFilePath()\n-          + \" to new file \" + newFilePath + \" with writerSchema \" + writerSchemaWithMetafields.toString(true);\n       try {\n         fileWriter.writeAvro(key, oldRecord);\n-      } catch (ClassCastException e) {\n-        LOG.debug(\"Old record is \" + oldRecord);\n-        throw new HoodieUpsertException(errMsg, e);\n       } catch (IOException | RuntimeException e) {\n+        String errMsg = \"Failed to merge old record into new file for key \" + key + \" from old file \" + getOldFilePath()", "originalCommit": "6dd9337de129f45e7858389234eca55df854ccc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY0ODQwMQ==", "url": "https://github.com/apache/hudi/pull/2272#discussion_r531648401", "bodyText": "Using String#format would be better?\n\ndone", "author": "leesf", "createdAt": "2020-11-27T14:59:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU0NzQyNA=="}], "type": "inlineReview", "revised_code": {"commit": "2e6ebef820c6b01d4363b090e1676af31f5fa580", "chunk": "diff --git a/hudi-client/hudi-client-common/src/main/java/org/apache/hudi/io/HoodieMergeHandle.java b/hudi-client/hudi-client-common/src/main/java/org/apache/hudi/io/HoodieMergeHandle.java\nindex d744ce92b..8df6a212c 100644\n--- a/hudi-client/hudi-client-common/src/main/java/org/apache/hudi/io/HoodieMergeHandle.java\n+++ b/hudi-client/hudi-client-common/src/main/java/org/apache/hudi/io/HoodieMergeHandle.java\n\n@@ -244,8 +244,8 @@ public class HoodieMergeHandle<T extends HoodieRecordPayload, I, K, O> extends H\n       try {\n         fileWriter.writeAvro(key, oldRecord);\n       } catch (IOException | RuntimeException e) {\n-        String errMsg = \"Failed to merge old record into new file for key \" + key + \" from old file \" + getOldFilePath()\n-            + \" to new file \" + newFilePath + \" with writerSchema \" + writerSchemaWithMetafields.toString(true);\n+        String errMsg = String.format(\"Failed to merge old record into new file for key %s from old file %s to new file %s with writerSchema %s\",\n+                key, getOldFilePath(), newFilePath, writerSchemaWithMetafields.toString(true));\n         LOG.debug(\"Old record is \" + oldRecord);\n         throw new HoodieUpsertException(errMsg, e);\n       }\n"}}, {"oid": "2e6ebef820c6b01d4363b090e1676af31f5fa580", "url": "https://github.com/apache/hudi/commit/2e6ebef820c6b01d4363b090e1676af31f5fa580", "message": "[MINOR] refactor code in HoodieMergeHandle", "committedDate": "2020-11-27T14:56:58Z", "type": "commit"}, {"oid": "2e6ebef820c6b01d4363b090e1676af31f5fa580", "url": "https://github.com/apache/hudi/commit/2e6ebef820c6b01d4363b090e1676af31f5fa580", "message": "[MINOR] refactor code in HoodieMergeHandle", "committedDate": "2020-11-27T14:56:58Z", "type": "forcePushed"}]}