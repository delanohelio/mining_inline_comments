{"pr_number": 1372, "pr_title": "[HUDI-652] Decouple HoodieReadClient and AbstractHoodieClient to break the inheritance chain", "pr_createdAt": "2020-03-04T13:23:54Z", "pr_url": "https://github.com/apache/hudi/pull/1372", "timeline": [{"oid": "ae09a17dc8c68e4fb3c1dfcacfae388cab0d6467", "url": "https://github.com/apache/hudi/commit/ae09a17dc8c68e4fb3c1dfcacfae388cab0d6467", "message": "[HUDI-652] Decouple HoodieReadClient and AbstractHoodieClient to break the inheritance chain", "committedDate": "2020-03-04T13:21:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcyNTczNw==", "url": "https://github.com/apache/hudi/pull/1372#discussion_r387725737", "bodyText": "if we have to copy this code, then breaking the abstraction does not feel right?\nI actually think its okay for ReadClient to not use the TimelineServer..", "author": "vinothchandar", "createdAt": "2020-03-04T15:06:09Z", "path": "hudi-client/src/main/java/org/apache/hudi/client/HoodieReadClient.java", "diffHunk": "@@ -144,6 +163,43 @@ private void assertSqlContext() {\n     }\n   }\n \n+  private synchronized void startEmbeddedServerView() {", "originalCommit": "ae09a17dc8c68e4fb3c1dfcacfae388cab0d6467", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcyOTc3OQ==", "url": "https://github.com/apache/hudi/pull/1372#discussion_r387729779", "bodyText": "My original thought, the first step is to decouple the inheritance chain. I did not change any logic so that I would not touch anything about the key things. Then I will try to remove some unnecessary logic.", "author": "yanghua", "createdAt": "2020-03-04T15:12:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcyNTczNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjcwOA==", "url": "https://github.com/apache/hudi/pull/1372#discussion_r388046708", "bodyText": "I found keep timeline server specific logic, we need to change the code in another module to catch the exception. So, all right, I have removed the timeline server in read client.", "author": "yanghua", "createdAt": "2020-03-05T02:26:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcyNTczNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI5NTMwNw==", "url": "https://github.com/apache/hudi/pull/1372#discussion_r388295307", "bodyText": "The Travis is green, please review again.", "author": "yanghua", "createdAt": "2020-03-05T13:35:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcyNTczNw=="}], "type": "inlineReview", "revised_code": {"commit": "17ee15c29b902af75fe2e793ecb2f772c8456499", "chunk": "diff --git a/hudi-client/src/main/java/org/apache/hudi/client/HoodieReadClient.java b/hudi-client/src/main/java/org/apache/hudi/client/HoodieReadClient.java\nindex e9dd0130d9..a502e9d80a 100644\n--- a/hudi-client/src/main/java/org/apache/hudi/client/HoodieReadClient.java\n+++ b/hudi-client/src/main/java/org/apache/hudi/client/HoodieReadClient.java\n\n@@ -163,43 +141,6 @@ public class HoodieReadClient<T extends HoodieRecordPayload> implements Serializ\n     }\n   }\n \n-  private synchronized void startEmbeddedServerView() {\n-    if (config.isEmbeddedTimelineServerEnabled()) {\n-      if (!timelineServer.isPresent()) {\n-        // Run Embedded Timeline Server\n-        LOG.info(\"Starting Timeline service !!\");\n-        timelineServer = Option.of(new EmbeddedTimelineService(jsc.hadoopConfiguration(), jsc.getConf(),\n-            config.getClientSpecifiedViewStorageConfig()));\n-        try {\n-          timelineServer.get().startServer();\n-          // Allow executor to find this newly instantiated timeline service\n-          config.setViewStorageConfig(timelineServer.get().getRemoteFileSystemViewConfig());\n-        } catch (IOException e) {\n-          LOG.warn(\"Unable to start timeline service. Proceeding as if embedded server is disabled\", e);\n-          stopEmbeddedServerView(false);\n-        }\n-      } else {\n-        LOG.info(\"Timeline Server already running. Not restarting the service\");\n-      }\n-    } else {\n-      LOG.info(\"Embedded Timeline Server is disabled. Not starting timeline service\");\n-    }\n-  }\n-\n-  private synchronized void stopEmbeddedServerView(boolean resetViewStorageConfig) {\n-    if (timelineServer.isPresent() && shouldStopTimelineServer) {\n-      // Stop only if owner\n-      LOG.info(\"Stopping Timeline service !!\");\n-      timelineServer.get().stop();\n-    }\n-\n-    timelineServer = Option.empty();\n-    // Reset Storage Config to Client specified config\n-    if (resetViewStorageConfig) {\n-      config.resetViewStorageConfig();\n-    }\n-  }\n-\n   /**\n    * Given a bunch of hoodie keys, fetches all the individual records out as a data frame.\n    *\n"}}, {"oid": "17ee15c29b902af75fe2e793ecb2f772c8456499", "url": "https://github.com/apache/hudi/commit/17ee15c29b902af75fe2e793ecb2f772c8456499", "message": "Removed timeline server support", "committedDate": "2020-03-05T01:58:00Z", "type": "commit"}, {"oid": "17ee15c29b902af75fe2e793ecb2f772c8456499", "url": "https://github.com/apache/hudi/commit/17ee15c29b902af75fe2e793ecb2f772c8456499", "message": "Removed timeline server support", "committedDate": "2020-03-05T01:58:00Z", "type": "forcePushed"}, {"oid": "778f4dc8afa8fc489235ac0d799357944704737c", "url": "https://github.com/apache/hudi/commit/778f4dc8afa8fc489235ac0d799357944704737c", "message": "Removed try-with-resource", "committedDate": "2020-03-05T07:17:23Z", "type": "commit"}]}