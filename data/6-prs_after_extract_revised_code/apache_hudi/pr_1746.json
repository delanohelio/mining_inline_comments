{"pr_number": 1746, "pr_title": "[HUDI-996] Add functional test suite for hudi-utilities", "pr_createdAt": "2020-06-18T02:19:01Z", "pr_url": "https://github.com/apache/hudi/pull/1746", "timeline": [{"oid": "ff89f74c65de8d5bcf0e22e7f0755591c8cf34e7", "url": "https://github.com/apache/hudi/commit/ff89f74c65de8d5bcf0e22e7f0755591c8cf34e7", "message": "[HUDI-996] Add functional test suite in hudi-utilities\n\n- Share resources for functional tests\n- Add suite for functional test classes from hudi-utilities", "committedDate": "2020-06-28T18:25:50Z", "type": "commit"}, {"oid": "ff89f74c65de8d5bcf0e22e7f0755591c8cf34e7", "url": "https://github.com/apache/hudi/commit/ff89f74c65de8d5bcf0e22e7f0755591c8cf34e7", "message": "[HUDI-996] Add functional test suite in hudi-utilities\n\n- Share resources for functional tests\n- Add suite for functional test classes from hudi-utilities", "committedDate": "2020-06-28T18:25:50Z", "type": "forcePushed"}, {"oid": "87eb111b4f40dc0129790c3043683e2e1b593ca0", "url": "https://github.com/apache/hudi/commit/87eb111b4f40dc0129790c3043683e2e1b593ca0", "message": "Trigger", "committedDate": "2020-06-28T18:57:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxOTU3OA==", "url": "https://github.com/apache/hudi/pull/1746#discussion_r449719578", "bodyText": "Food for thought: if tests are run parallely, in the same jvm. (parallelism option in surefire)... this boolean may not be sufficient for synchronization.. i.e two tests can attempt to create these test resources in parallel.", "author": "vinothchandar", "createdAt": "2020-07-03T23:35:25Z", "path": "hudi-client/src/test/java/org/apache/hudi/testutils/FunctionalTestHarness.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.hudi.testutils;\n+\n+import org.apache.hudi.client.HoodieWriteClient;\n+import org.apache.hudi.common.testutils.minicluster.HdfsTestService;\n+\n+import org.apache.hadoop.fs.FileStatus;\n+import org.apache.hadoop.fs.FileSystem;\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.hdfs.DistributedFileSystem;\n+import org.apache.hadoop.hdfs.MiniDFSCluster;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.sql.SQLContext;\n+import org.apache.spark.sql.SparkSession;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+import java.io.IOException;\n+\n+public class FunctionalTestHarness implements SparkProvider, DFSProvider {\n+\n+  private static transient SparkSession spark;\n+  private static transient SQLContext sqlContext;\n+  private static transient JavaSparkContext jsc;\n+\n+  private static transient HdfsTestService hdfsTestService;\n+  private static transient MiniDFSCluster dfsCluster;\n+  private static transient DistributedFileSystem dfs;\n+\n+  /**\n+   * An indicator of the initialization status.\n+   */\n+  protected boolean initialized = false;", "originalCommit": "87eb111b4f40dc0129790c3043683e2e1b593ca0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxOTY2OA==", "url": "https://github.com/apache/hudi/pull/1746#discussion_r449719668", "bodyText": "also how come this boolean is not static? otherwise in every before each it will try to create resourceS?", "author": "vinothchandar", "createdAt": "2020-07-03T23:36:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxOTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNDgyNA==", "url": "https://github.com/apache/hudi/pull/1746#discussion_r449814824", "bodyText": "Food for thought: if tests are run parallely, in the same jvm. (parallelism option in surefire)... this boolean may not be sufficient for synchronization.. i.e two tests can attempt to create these test resources in parallel.\n\nYes, and this is taken care of in the functional-tests profile\n\n  \n    \n      hudi/pom.xml\n    \n    \n        Lines 1024 to 1025\n      in\n      574dcf9\n    \n    \n    \n    \n\n        \n          \n           <forkCount>1</forkCount> \n        \n\n        \n          \n           <reuseForks>true</reuseForks> \n        \n    \n  \n\n\nThese 2 settings make sure creating only one new JVM process to execute all tests in one Maven module. So here we make sure all functional tests in utilities are run sequentially.\n\nalso how come this boolean is not static? otherwise in every before each it will try to create resourceS?\n\nThe initialized is not used as lock, rather only an indicator. It is reset by checking spark and hdfsTestService\nhttps://github.com/apache/hudi/pull/1746/files/87eb111b4f40dc0129790c3043683e2e1b593ca0#diff-543bacddbb566cb15499906d64c783a5R87-R89\nThis can be used for debugging purpose where subclass of this class prints this info...I can see that this may be confusing, maybe removing it later if not commonly used.", "author": "xushiyan", "createdAt": "2020-07-04T23:51:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxOTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNTg4NQ==", "url": "https://github.com/apache/hudi/pull/1746#discussion_r449815885", "bodyText": "To run functional tests for multiple modules, probably will need to ensure different process for each module and the sequential execution within a module...", "author": "xushiyan", "createdAt": "2020-07-05T00:11:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxOTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzMTk1Ng==", "url": "https://github.com/apache/hudi/pull/1746#discussion_r449931956", "bodyText": "okay initialized = spark != null && hdfsTestService != null; is what makes the spark and hdfsTestService singleton across a run..", "author": "vinothchandar", "createdAt": "2020-07-05T23:43:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxOTU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzMTk4OA==", "url": "https://github.com/apache/hudi/pull/1746#discussion_r449931988", "bodyText": "Its a little confusing.. but okay to be fixed later.", "author": "vinothchandar", "createdAt": "2020-07-05T23:43:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxOTU3OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxOTgyMw==", "url": "https://github.com/apache/hudi/pull/1746#discussion_r449719823", "bodyText": "should this be abstract?", "author": "vinothchandar", "createdAt": "2020-07-03T23:38:23Z", "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/functional/UtilitiesFunctionalTestSuite.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.hudi.utilities.functional;\n+\n+import org.junit.platform.runner.JUnitPlatform;\n+import org.junit.platform.suite.api.IncludeTags;\n+import org.junit.platform.suite.api.SelectPackages;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(JUnitPlatform.class)\n+@SelectPackages(\"org.apache.hudi.utilities.functional\")\n+@IncludeTags(\"functional\")\n+public class UtilitiesFunctionalTestSuite {", "originalCommit": "87eb111b4f40dc0129790c3043683e2e1b593ca0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxOTkxMA==", "url": "https://github.com/apache/hudi/pull/1746#discussion_r449719910", "bodyText": "btw where is this used actually.. may be missing something..", "author": "vinothchandar", "createdAt": "2020-07-03T23:39:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxOTgyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxNTE3Ng==", "url": "https://github.com/apache/hudi/pull/1746#discussion_r449815176", "bodyText": "This class is to like an entry point to all functional test classes annotated with @Tag(\"functional\") in this module..so I would instead optionally make it final. It'll be run by surefire which looks for this pattern in each module.\n\n  \n    \n      hudi/pom.xml\n    \n    \n        Lines 1026 to 1028\n      in\n      574dcf9\n    \n    \n    \n    \n\n        \n          \n           <includes> \n        \n\n        \n          \n             <include>**/*FunctionalTestSuite.java</include> \n        \n\n        \n          \n           </includes> \n        \n    \n  \n\n\nThe relevant maven profile settings were merged by the codecov improvement PR..sorry it is hard to correlate here.", "author": "xushiyan", "createdAt": "2020-07-04T23:57:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxOTgyMw=="}], "type": "inlineReview", "revised_code": null}]}