{"pr_number": 1779, "pr_title": "[HUDI-1062]Remove unnecessary maxEvent check and add some log in KafkaOffsetGen", "pr_createdAt": "2020-07-01T07:13:34Z", "pr_url": "https://github.com/apache/hudi/pull/1779", "timeline": [{"oid": "f2516f1992c9aef51cdff46001c6c31d09ef247f", "url": "https://github.com/apache/hudi/commit/f2516f1992c9aef51cdff46001c6c31d09ef247f", "message": "[HUDI-1062]Remove unnecessary maxEvent check and add some log in\nKafkaOffsetGen", "committedDate": "2020-07-01T07:17:36Z", "type": "commit"}, {"oid": "f2516f1992c9aef51cdff46001c6c31d09ef247f", "url": "https://github.com/apache/hudi/commit/f2516f1992c9aef51cdff46001c6c31d09ef247f", "message": "[HUDI-1062]Remove unnecessary maxEvent check and add some log in\nKafkaOffsetGen", "committedDate": "2020-07-01T07:17:36Z", "type": "forcePushed"}, {"oid": "e7f9c28b7b02cc6cbb64ccf6ec47f8cfe8bbe63a", "url": "https://github.com/apache/hudi/commit/e7f9c28b7b02cc6cbb64ccf6ec47f8cfe8bbe63a", "message": "Fix  checkstyle issue2", "committedDate": "2020-07-03T01:23:43Z", "type": "commit"}, {"oid": "e7f9c28b7b02cc6cbb64ccf6ec47f8cfe8bbe63a", "url": "https://github.com/apache/hudi/commit/e7f9c28b7b02cc6cbb64ccf6ec47f8cfe8bbe63a", "message": "Fix  checkstyle issue2", "committedDate": "2020-07-03T01:23:43Z", "type": "forcePushed"}, {"oid": "d0f342c18760cd11a782b5aa035179ed2e1181bb", "url": "https://github.com/apache/hudi/commit/d0f342c18760cd11a782b5aa035179ed2e1181bb", "message": "Test case changes", "committedDate": "2020-07-03T10:25:00Z", "type": "commit"}, {"oid": "d0f342c18760cd11a782b5aa035179ed2e1181bb", "url": "https://github.com/apache/hudi/commit/d0f342c18760cd11a782b5aa035179ed2e1181bb", "message": "Test case changes", "committedDate": "2020-07-03T10:25:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxODk5MA==", "url": "https://github.com/apache/hudi/pull/1779#discussion_r449718990", "bodyText": "why exactly does this test have to change? could you please clarify", "author": "vinothchandar", "createdAt": "2020-07-03T23:27:18Z", "path": "hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/TestKafkaSource.java", "diffHunk": "@@ -191,13 +191,13 @@ public void testJsonKafkaSourceWithDefaultUpperCap() {\n      */\n     testUtils.sendMessages(TEST_TOPIC_NAME, Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\", 1000)));\n     InputBatch<JavaRDD<GenericRecord>> fetch1 = kafkaSource.fetchNewDataInAvroFormat(Option.empty(), Long.MAX_VALUE);\n-    assertEquals(500, fetch1.getBatch().get().count());\n+    assertEquals(1000, fetch1.getBatch().get().count());", "originalCommit": "d0f342c18760cd11a782b5aa035179ed2e1181bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTczMTEzNQ==", "url": "https://github.com/apache/hudi/pull/1779#discussion_r449731135", "bodyText": "why exactly does this test have to change? could you please clarify\nhi @vinothchandar,  the value of maxEventsToReadFromKafka has changed in this commit, so the value of fetch1.getBatch().get().count() also changes in the test case.\n\n\nthere is an empty git file in this commit.. can you please remove this?\n@vinothchandar I have removed this file.", "author": "Trevor-zhang", "createdAt": "2020-07-04T02:34:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxODk5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc0NDE3Nw==", "url": "https://github.com/apache/hudi/pull/1779#discussion_r449744177", "bodyText": "Hi @Trevor-zhang Would please add a new test case to verify the sourceLimit less than the generated insert record's num?", "author": "yanghua", "createdAt": "2020-07-04T06:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxODk5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc0NDM0Nw==", "url": "https://github.com/apache/hudi/pull/1779#discussion_r449744347", "bodyText": "Hi @Trevor-zhang Would please add a new test case to verify the sourceLimit less than the generated insert record's num?\n\n@yanghua  ok,i'd like to.", "author": "Trevor-zhang", "createdAt": "2020-07-04T06:14:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcxODk5MA=="}], "type": "inlineReview", "revised_code": {"commit": "ad3d464fb308eed8008cdbc759d384eafa5e550d", "chunk": "diff --git a/hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/TestKafkaSource.java b/hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/TestKafkaSource.java\nindex 3512322e3..76a494c81 100644\n--- a/hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/TestKafkaSource.java\n+++ b/hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/TestKafkaSource.java\n\n@@ -203,6 +203,38 @@ public class TestKafkaSource extends UtilitiesTestBase {\n     Config.maxEventsFromKafkaSource = Config.DEFAULT_MAX_EVENTS_FROM_KAFKA_SOURCE;\n   }\n \n+  @Test\n+  public void testJsonKafkaSourceInsertRecordsLessSourceLimit() {\n+    // topic setup.\n+    testUtils.createTopic(TEST_TOPIC_NAME, 2);\n+    HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n+    TypedProperties props = createPropsForJsonSource(Long.MAX_VALUE, \"earliest\");\n+\n+    Source jsonSource = new JsonKafkaSource(props, jsc, sparkSession, schemaProvider);\n+    SourceFormatAdapter kafkaSource = new SourceFormatAdapter(jsonSource);\n+    Config.maxEventsFromKafkaSource = 500;\n+\n+    /*\n+     1. maxEventsFromKafkaSourceProp set to more than generated insert records\n+     and sourceLimit less than the generated insert records num.\n+     */\n+    testUtils.sendMessages(TEST_TOPIC_NAME, Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\", 400)));\n+    InputBatch<JavaRDD<GenericRecord>> fetch1 = kafkaSource.fetchNewDataInAvroFormat(Option.empty(), 300);\n+    assertEquals(300, fetch1.getBatch().get().count());\n+\n+    /*\n+     2. Produce new data, extract new data based on sourceLimit\n+     and sourceLimit less than the generated insert records num.\n+     */\n+    testUtils.sendMessages(TEST_TOPIC_NAME, Helpers.jsonifyRecords(dataGenerator.generateInserts(\"001\", 600)));\n+    InputBatch<Dataset<Row>> fetch2 =\n+            kafkaSource.fetchNewDataInRowFormat(Option.of(fetch1.getCheckpointForNextBatch()), 300);\n+    assertEquals(300, fetch2.getBatch().get().count());\n+\n+    //reset the value back since it is a static variable\n+    Config.maxEventsFromKafkaSource = Config.DEFAULT_MAX_EVENTS_FROM_KAFKA_SOURCE;\n+  }\n+\n   @Test\n   public void testJsonKafkaSourceWithConfigurableUpperCap() {\n     // topic setup.\n"}}, {"oid": "ce08acdf72bc203beea2ba23324e9ac49b3e5778", "url": "https://github.com/apache/hudi/commit/ce08acdf72bc203beea2ba23324e9ac49b3e5778", "message": "Delete git", "committedDate": "2020-07-04T01:50:23Z", "type": "commit"}, {"oid": "ce08acdf72bc203beea2ba23324e9ac49b3e5778", "url": "https://github.com/apache/hudi/commit/ce08acdf72bc203beea2ba23324e9ac49b3e5778", "message": "Delete git", "committedDate": "2020-07-04T01:50:23Z", "type": "forcePushed"}, {"oid": "ad3d464fb308eed8008cdbc759d384eafa5e550d", "url": "https://github.com/apache/hudi/commit/ad3d464fb308eed8008cdbc759d384eafa5e550d", "message": "[HUDI-1062]Add test case to verify the sourceLimit less than the generated insert record's num", "committedDate": "2020-07-06T17:30:09Z", "type": "commit"}, {"oid": "ad3d464fb308eed8008cdbc759d384eafa5e550d", "url": "https://github.com/apache/hudi/commit/ad3d464fb308eed8008cdbc759d384eafa5e550d", "message": "[HUDI-1062]Add test case to verify the sourceLimit less than the generated insert record's num", "committedDate": "2020-07-06T17:30:09Z", "type": "forcePushed"}]}