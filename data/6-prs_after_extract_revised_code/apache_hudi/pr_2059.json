{"pr_number": 2059, "pr_title": "[HUDI-1254] TypedProperties can not get values by initializing an existing properties", "pr_createdAt": "2020-09-01T13:48:03Z", "pr_url": "https://github.com/apache/hudi/pull/2059", "timeline": [{"oid": "9990f95e981519e201f974c0baf0c3be12a77556", "url": "https://github.com/apache/hudi/commit/9990f95e981519e201f974c0baf0c3be12a77556", "message": "[HUDI-1064]Delete extra rows from the code", "committedDate": "2020-07-07T06:43:01Z", "type": "commit"}, {"oid": "48e79da09e5e83a8aca22a03433cca908eb7509d", "url": "https://github.com/apache/hudi/commit/48e79da09e5e83a8aca22a03433cca908eb7509d", "message": "[HUDI-1064]remove .get", "committedDate": "2020-07-07T07:07:00Z", "type": "commit"}, {"oid": "8fd3b6c94779c3a296cf966562001e3583e6990c", "url": "https://github.com/apache/hudi/commit/8fd3b6c94779c3a296cf966562001e3583e6990c", "message": "[HUDI-1064]Trim hoodie table name", "committedDate": "2020-07-07T08:41:49Z", "type": "commit"}, {"oid": "b2ef0fdba4d1a31adda3b7d614781ef94e223d3d", "url": "https://github.com/apache/hudi/commit/b2ef0fdba4d1a31adda3b7d614781ef94e223d3d", "message": "Merge remote-tracking branch 'origin/HUDI-1064' into HUDI-1064\n\n# Conflicts:\n#\thudi-spark/src/main/scala/org/apache/hudi/HoodieSparkSqlWriter.scala", "committedDate": "2020-07-07T08:42:56Z", "type": "commit"}, {"oid": "c0302a1ccc84bd172d8b53e695e08a9d2d12d6b1", "url": "https://github.com/apache/hudi/commit/c0302a1ccc84bd172d8b53e695e08a9d2d12d6b1", "message": "[HUDI-1064]remove .get()", "committedDate": "2020-07-07T08:46:13Z", "type": "commit"}, {"oid": "ed585fc47add68f8487c006ae9950f74ff877d43", "url": "https://github.com/apache/hudi/commit/ed585fc47add68f8487c006ae9950f74ff877d43", "message": "[HUDI-1064]To solve the java.util.NoSuchElementException: None.get exception", "committedDate": "2020-07-07T08:52:50Z", "type": "commit"}, {"oid": "8b3e6b5514952d606e2b8e0d6202eae19138a9fd", "url": "https://github.com/apache/hudi/commit/8b3e6b5514952d606e2b8e0d6202eae19138a9fd", "message": "[HUDI-1064]compiler suceess", "committedDate": "2020-07-07T08:55:45Z", "type": "commit"}, {"oid": "7b0601d82440fe0000855f165da09f5cbe61b0db", "url": "https://github.com/apache/hudi/commit/7b0601d82440fe0000855f165da09f5cbe61b0db", "message": "Sync from upstream", "committedDate": "2020-07-14T09:13:11Z", "type": "commit"}, {"oid": "d0bbff7bd8fe0bbbb301ba853028887d548c8aa9", "url": "https://github.com/apache/hudi/commit/d0bbff7bd8fe0bbbb301ba853028887d548c8aa9", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-07-15T07:33:49Z", "type": "commit"}, {"oid": "a10f9fd78baf426f65be58b1f3977941aba5ecd5", "url": "https://github.com/apache/hudi/commit/a10f9fd78baf426f65be58b1f3977941aba5ecd5", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-07-22T01:55:59Z", "type": "commit"}, {"oid": "9a82e962d1bdffc7b46b3420f9a31cbaa9e029c6", "url": "https://github.com/apache/hudi/commit/9a82e962d1bdffc7b46b3420f9a31cbaa9e029c6", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-07-28T06:35:45Z", "type": "commit"}, {"oid": "a19ca75cb64fc8491d4e3bb1acedcaa4a53019b8", "url": "https://github.com/apache/hudi/commit/a19ca75cb64fc8491d4e3bb1acedcaa4a53019b8", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-07-29T08:03:41Z", "type": "commit"}, {"oid": "d86ddabf53e029f12b5b41c98073bddddafa8fca", "url": "https://github.com/apache/hudi/commit/d86ddabf53e029f12b5b41c98073bddddafa8fca", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-08-06T02:21:19Z", "type": "commit"}, {"oid": "d06d94b4a32d10133259e92107ccbf3703908dcb", "url": "https://github.com/apache/hudi/commit/d06d94b4a32d10133259e92107ccbf3703908dcb", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-08-07T02:02:43Z", "type": "commit"}, {"oid": "d0b9ba2d118660e5647d1f89ee898ba6327ed36b", "url": "https://github.com/apache/hudi/commit/d0b9ba2d118660e5647d1f89ee898ba6327ed36b", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-08-10T03:12:36Z", "type": "commit"}, {"oid": "2999cb8b199fb6aa4d7e22e0a4577c86e9c2fc69", "url": "https://github.com/apache/hudi/commit/2999cb8b199fb6aa4d7e22e0a4577c86e9c2fc69", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-08-18T11:33:06Z", "type": "commit"}, {"oid": "e6fc3fa43c5f9d3c180257fa89dd6e4b290d64ea", "url": "https://github.com/apache/hudi/commit/e6fc3fa43c5f9d3c180257fa89dd6e4b290d64ea", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-09-01T03:34:25Z", "type": "commit"}, {"oid": "9f347bf54433203f1988a443c80e2c6ea24b70f4", "url": "https://github.com/apache/hudi/commit/9f347bf54433203f1988a443c80e2c6ea24b70f4", "message": "[HUDI-1254] Fix the bug\uff08TypedProperties can not get values \uff09", "committedDate": "2020-09-01T13:26:57Z", "type": "commit"}, {"oid": "f15812776c797b13a5762c2e2fc9b12df288b08a", "url": "https://github.com/apache/hudi/commit/f15812776c797b13a5762c2e2fc9b12df288b08a", "message": "[HUDI-1254] add test", "committedDate": "2020-09-01T13:45:07Z", "type": "commit"}, {"oid": "125ea605c0e12569381862ce6a09c22a70fea4bd", "url": "https://github.com/apache/hudi/commit/125ea605c0e12569381862ce6a09c22a70fea4bd", "message": "[HUDI-1254] add license", "committedDate": "2020-09-02T04:35:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTMzNg==", "url": "https://github.com/apache/hudi/pull/2059#discussion_r481995336", "bodyText": "checkKey would be rename to containsKey", "author": "leesf", "createdAt": "2020-09-02T11:24:44Z", "path": "hudi-common/src/main/java/org/apache/hudi/common/config/TypedProperties.java", "diffHunk": "@@ -37,10 +38,12 @@ public TypedProperties(Properties defaults) {\n     super(defaults);\n   }\n \n-  private void checkKey(String property) {\n-    if (!containsKey(property)) {\n+  private boolean checkKey(String property) {", "originalCommit": "125ea605c0e12569381862ce6a09c22a70fea4bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA0MDc5NQ==", "url": "https://github.com/apache/hudi/pull/2059#discussion_r482040795", "bodyText": "I think the checkkey is better\u3002That was its original name\u3002containsKey in  parent class\uff0c", "author": "linshan-ma", "createdAt": "2020-09-02T12:47:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTMzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA0NDI2OQ==", "url": "https://github.com/apache/hudi/pull/2059#discussion_r482044269", "bodyText": "I think the checkkey is better\u3002That was its original name\u3002containsKey in parent class\uff0c\n\ncheckKey should not return boolean and should throw exception from semantically.  containsKey or keyExists should return boolean.", "author": "leesf", "createdAt": "2020-09-02T12:52:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTMzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgwOTM4Nw==", "url": "https://github.com/apache/hudi/pull/2059#discussion_r482809387", "bodyText": "ok,i see,i get it", "author": "linshan-ma", "createdAt": "2020-09-03T08:42:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5NTMzNg=="}], "type": "inlineReview", "revised_code": {"commit": "cab428ea1e3534b708e184103c277736c534a2d1", "chunk": "diff --git a/hudi-common/src/main/java/org/apache/hudi/common/config/TypedProperties.java b/hudi-common/src/main/java/org/apache/hudi/common/config/TypedProperties.java\nindex 6a1538666..9ee47292d 100644\n--- a/hudi-common/src/main/java/org/apache/hudi/common/config/TypedProperties.java\n+++ b/hudi-common/src/main/java/org/apache/hudi/common/config/TypedProperties.java\n\n@@ -38,11 +38,15 @@ public class TypedProperties extends Properties implements Serializable {\n     super(defaults);\n   }\n \n-  private boolean checkKey(String property) {\n+  private void checkKey(String property) {\n     Set<String> keys = super.stringPropertyNames();\n     if (!keys.contains(property)) {\n       throw new IllegalArgumentException(\"Property \" + property + \" not found\");\n     }\n+  }\n+\n+  private boolean keyExists(String property) {\n+    checkKey(property);\n     return true;\n   }\n \n"}}, {"oid": "cab428ea1e3534b708e184103c277736c534a2d1", "url": "https://github.com/apache/hudi/commit/cab428ea1e3534b708e184103c277736c534a2d1", "message": "[HUDI-1254] Add function keyExists", "committedDate": "2020-09-03T09:19:05Z", "type": "commit"}, {"oid": "de214cd9b2a9bc14e3fccffa0c1d897fbdbbc96b", "url": "https://github.com/apache/hudi/commit/de214cd9b2a9bc14e3fccffa0c1d897fbdbbc96b", "message": "trigger rebuild", "committedDate": "2020-09-03T10:15:48Z", "type": "commit"}, {"oid": "ce2755d5e9b283426d3ecd5af305a835311f82c3", "url": "https://github.com/apache/hudi/commit/ce2755d5e9b283426d3ecd5af305a835311f82c3", "message": "trigger rebuild", "committedDate": "2020-09-03T10:22:02Z", "type": "commit"}, {"oid": "c41d9fcdb3a2d7b21d1b5d837a7a6cb3e1e34360", "url": "https://github.com/apache/hudi/commit/c41d9fcdb3a2d7b21d1b5d837a7a6cb3e1e34360", "message": "[HUDI-1254] Resolve compile error", "committedDate": "2020-09-04T04:57:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU2NzMyOA==", "url": "https://github.com/apache/hudi/pull/2059#discussion_r483567328", "bodyText": "would be rename to testGetString() and also would add getLong, getBoolean Uts", "author": "leesf", "createdAt": "2020-09-04T11:50:53Z", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testNewTypedProperties() {", "originalCommit": "c41d9fcdb3a2d7b21d1b5d837a7a6cb3e1e34360", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d79ec80e0a223c93f1b0216538bce57d6045951c", "chunk": "diff --git a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\nindex 88b947a8b..358a8db50 100644\n--- a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n+++ b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n\n@@ -27,11 +27,56 @@ import static org.junit.jupiter.api.Assertions.assertEquals;\n \n public class TestTypedProperties {\n   @Test\n-  public void testNewTypedProperties() {\n+  public void testGetString() {\n     Properties properties = new Properties();\n     properties.put(\"key1\", \"value1\");\n \n     TypedProperties typedProperties = new TypedProperties(properties);\n     assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));\n+    assertEquals(0.001D, typedProperties.getDouble(\"key2\",0.001D));\n+  }\n+  @Test\n+  public void testGetLong() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"1354354354\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\"));\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\",8578494434L));\n+    assertEquals(8578494434L, typedProperties.getLong(\"key2\",8578494434L));\n+  }\n+\n+  @Test\n+  public void testBoolean() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"true\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(true, typedProperties.getBoolean(\"key1\"));\n+    assertEquals(true, typedProperties.getBoolean(\"key1\",false));\n+    assertEquals(false, typedProperties.getBoolean(\"key2\",false));\n   }\n }\n"}}, {"oid": "d79ec80e0a223c93f1b0216538bce57d6045951c", "url": "https://github.com/apache/hudi/commit/d79ec80e0a223c93f1b0216538bce57d6045951c", "message": "[HUDI-1254] add method test", "committedDate": "2020-09-07T12:29:23Z", "type": "commit"}, {"oid": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9", "url": "https://github.com/apache/hudi/commit/eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9", "message": "[HUDI-1254] Standard code", "committedDate": "2020-09-07T12:36:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjA1Nw==", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512057", "bodyText": "\"key1\",456 -> \"key1\", 456", "author": "leesf", "createdAt": "2020-09-07T16:20:02Z", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));", "originalCommit": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57cf4f29b9707db352fbf4827265db8ea93f0c2d", "chunk": "diff --git a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\nindex 3edd52cf6..d265d7b5e 100644\n--- a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n+++ b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n\n@@ -29,7 +29,7 @@ public class TestTypedProperties {\n   @Test\n   public void testGetString() {\n     Properties properties = new Properties();\n-    properties.put(\"key1\", \"value1\");\n+    properties.put(\"key1\",\"value1\");\n \n     TypedProperties typedProperties = new TypedProperties(properties);\n     assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjExMw==", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512113", "bodyText": "ditto", "author": "leesf", "createdAt": "2020-09-07T16:20:12Z", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));", "originalCommit": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57cf4f29b9707db352fbf4827265db8ea93f0c2d", "chunk": "diff --git a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\nindex 3edd52cf6..d265d7b5e 100644\n--- a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n+++ b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n\n@@ -29,7 +29,7 @@ public class TestTypedProperties {\n   @Test\n   public void testGetString() {\n     Properties properties = new Properties();\n-    properties.put(\"key1\", \"value1\");\n+    properties.put(\"key1\",\"value1\");\n \n     TypedProperties typedProperties = new TypedProperties(properties);\n     assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjI5MA==", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512290", "bodyText": "ditto", "author": "leesf", "createdAt": "2020-09-07T16:20:45Z", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));", "originalCommit": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57cf4f29b9707db352fbf4827265db8ea93f0c2d", "chunk": "diff --git a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\nindex 3edd52cf6..d265d7b5e 100644\n--- a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n+++ b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n\n@@ -29,7 +29,7 @@ public class TestTypedProperties {\n   @Test\n   public void testGetString() {\n     Properties properties = new Properties();\n-    properties.put(\"key1\", \"value1\");\n+    properties.put(\"key1\",\"value1\");\n \n     TypedProperties typedProperties = new TypedProperties(properties);\n     assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjQwNg==", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512406", "bodyText": "ditto", "author": "leesf", "createdAt": "2020-09-07T16:21:08Z", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));\n+    assertEquals(0.001D, typedProperties.getDouble(\"key2\",0.001D));\n+  }\n+\n+  @Test\n+  public void testGetLong() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"1354354354\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\"));\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\",8578494434L));", "originalCommit": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57cf4f29b9707db352fbf4827265db8ea93f0c2d", "chunk": "diff --git a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\nindex 3edd52cf6..d265d7b5e 100644\n--- a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n+++ b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n\n@@ -29,7 +29,7 @@ public class TestTypedProperties {\n   @Test\n   public void testGetString() {\n     Properties properties = new Properties();\n-    properties.put(\"key1\", \"value1\");\n+    properties.put(\"key1\",\"value1\");\n \n     TypedProperties typedProperties = new TypedProperties(properties);\n     assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjQ1Mg==", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512452", "bodyText": "testGetBoolean", "author": "leesf", "createdAt": "2020-09-07T16:21:16Z", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));\n+    assertEquals(0.001D, typedProperties.getDouble(\"key2\",0.001D));\n+  }\n+\n+  @Test\n+  public void testGetLong() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"1354354354\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\"));\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\",8578494434L));\n+    assertEquals(8578494434L, typedProperties.getLong(\"key2\",8578494434L));\n+  }\n+\n+  @Test\n+  public void testBoolean() {", "originalCommit": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57cf4f29b9707db352fbf4827265db8ea93f0c2d", "chunk": "diff --git a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\nindex 3edd52cf6..d265d7b5e 100644\n--- a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n+++ b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n\n@@ -29,7 +29,7 @@ public class TestTypedProperties {\n   @Test\n   public void testGetString() {\n     Properties properties = new Properties();\n-    properties.put(\"key1\", \"value1\");\n+    properties.put(\"key1\",\"value1\");\n \n     TypedProperties typedProperties = new TypedProperties(properties);\n     assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMjQ5Nw==", "url": "https://github.com/apache/hudi/pull/2059#discussion_r484512497", "bodyText": "ditto", "author": "leesf", "createdAt": "2020-09-07T16:21:26Z", "path": "hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.common.properties;\n+\n+import org.apache.hudi.common.config.TypedProperties;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.Properties;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TestTypedProperties {\n+  @Test\n+  public void testGetString() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"value1\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n+    assertEquals(\"value1\", typedProperties.getString(\"key1\", \"default\"));\n+    assertEquals(\"default\", typedProperties.getString(\"key2\", \"default\"));\n+  }\n+\n+  @Test\n+  public void testGetInteger() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123, typedProperties.getInteger(\"key1\"));\n+    assertEquals(123, typedProperties.getInteger(\"key1\",456));\n+    assertEquals(456, typedProperties.getInteger(\"key2\",456));\n+\n+  }\n+\n+  @Test\n+  public void testGetDouble() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"123.4\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\"));\n+    assertEquals(123.4, typedProperties.getDouble(\"key1\",0.001D));\n+    assertEquals(0.001D, typedProperties.getDouble(\"key2\",0.001D));\n+  }\n+\n+  @Test\n+  public void testGetLong() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"1354354354\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\"));\n+    assertEquals(1354354354, typedProperties.getLong(\"key1\",8578494434L));\n+    assertEquals(8578494434L, typedProperties.getLong(\"key2\",8578494434L));\n+  }\n+\n+  @Test\n+  public void testBoolean() {\n+    Properties properties = new Properties();\n+    properties.put(\"key1\", \"true\");\n+\n+    TypedProperties typedProperties = new TypedProperties(properties);\n+    assertEquals(true, typedProperties.getBoolean(\"key1\"));\n+    assertEquals(true, typedProperties.getBoolean(\"key1\",false));", "originalCommit": "eaa0a627cd4c2f35e1921b3fd7f44dc191aa3cf9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "57cf4f29b9707db352fbf4827265db8ea93f0c2d", "chunk": "diff --git a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\nindex 3edd52cf6..d265d7b5e 100644\n--- a/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n+++ b/hudi-common/src/test/java/org/apache/hudi/common/properties/TestTypedProperties.java\n\n@@ -29,7 +29,7 @@ public class TestTypedProperties {\n   @Test\n   public void testGetString() {\n     Properties properties = new Properties();\n-    properties.put(\"key1\", \"value1\");\n+    properties.put(\"key1\",\"value1\");\n \n     TypedProperties typedProperties = new TypedProperties(properties);\n     assertEquals(\"value1\", typedProperties.getString(\"key1\"));\n"}}, {"oid": "57cf4f29b9707db352fbf4827265db8ea93f0c2d", "url": "https://github.com/apache/hudi/commit/57cf4f29b9707db352fbf4827265db8ea93f0c2d", "message": "[HUDI-1254] delete space", "committedDate": "2020-09-08T01:50:39Z", "type": "commit"}, {"oid": "8f50e6d81a33dc00667db9354d61fb2b097d7587", "url": "https://github.com/apache/hudi/commit/8f50e6d81a33dc00667db9354d61fb2b097d7587", "message": "[HUDI-1254] Specification code, add Spaces", "committedDate": "2020-09-09T11:50:14Z", "type": "commit"}, {"oid": "40013a11f4f0ae90cd7ea18043c9ecab252edd79", "url": "https://github.com/apache/hudi/commit/40013a11f4f0ae90cd7ea18043c9ecab252edd79", "message": "[HUDI-1254] Specification code, add Spaces", "committedDate": "2020-09-09T11:54:23Z", "type": "commit"}, {"oid": "5aabd9b2ddb6525e88f355056360ea0579751e12", "url": "https://github.com/apache/hudi/commit/5aabd9b2ddb6525e88f355056360ea0579751e12", "message": "[HUDI-1254] Specification of the codecode,", "committedDate": "2020-09-09T11:58:33Z", "type": "commit"}]}