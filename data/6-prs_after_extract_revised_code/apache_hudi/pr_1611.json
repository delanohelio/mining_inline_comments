{"pr_number": 1611, "pr_title": "[HUDI-705]Add unit test for RollbacksCommand", "pr_createdAt": "2020-05-10T02:27:18Z", "pr_url": "https://github.com/apache/hudi/pull/1611", "timeline": [{"oid": "760726df8208cb278a9137e8f839fe1ec3fa937b", "url": "https://github.com/apache/hudi/commit/760726df8208cb278a9137e8f839fe1ec3fa937b", "message": "Add test for RollbacksCommand", "committedDate": "2020-05-10T02:22:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU4NDEwOA==", "url": "https://github.com/apache/hudi/pull/1611#discussion_r425584108", "bodyText": "Can we introduce a for loop to simple this code snippet?", "author": "yanghua", "createdAt": "2020-05-15T06:04:03Z", "path": "hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestRollbacksCommand.java", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.cli.commands;\n+\n+import org.apache.hudi.avro.model.HoodieRollbackMetadata;\n+import org.apache.hudi.cli.AbstractShellIntegrationTest;\n+import org.apache.hudi.cli.HoodieCLI;\n+import org.apache.hudi.cli.HoodiePrintHelper;\n+import org.apache.hudi.cli.HoodieTableHeaderFields;\n+import org.apache.hudi.cli.TableHeader;\n+import org.apache.hudi.client.HoodieWriteClient;\n+import org.apache.hudi.common.HoodieTestDataGenerator;\n+import org.apache.hudi.common.model.HoodieTableType;\n+import org.apache.hudi.common.model.HoodieTestUtils;\n+import org.apache.hudi.common.table.timeline.HoodieActiveTimeline;\n+import org.apache.hudi.common.table.timeline.HoodieInstant;\n+import org.apache.hudi.common.table.timeline.TimelineMetadataUtils;\n+import org.apache.hudi.common.table.timeline.versioning.TimelineLayoutVersion;\n+import org.apache.hudi.common.util.collection.Pair;\n+import org.apache.hudi.config.HoodieIndexConfig;\n+import org.apache.hudi.config.HoodieWriteConfig;\n+import org.apache.hudi.index.HoodieIndex;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.shell.core.CommandResult;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Test class for {@link org.apache.hudi.cli.commands.RollbacksCommand}.\n+ */\n+public class TestRollbacksCommand extends AbstractShellIntegrationTest {\n+\n+  @BeforeEach\n+  public void init() throws IOException {\n+    String tableName = \"test_table\";\n+    String tablePath = basePath + File.separator + tableName;\n+    new TableCommand().createTable(\n+        tablePath, tableName, HoodieTableType.MERGE_ON_READ.name(),\n+        \"\", TimelineLayoutVersion.VERSION_1, \"org.apache.hudi.common.model.HoodieAvroPayload\");\n+\n+    //Create some commits files and parquet files\n+    String commitTime1 = \"100\";\n+    String commitTime2 = \"101\";\n+    String commitTime3 = \"102\";\n+    HoodieTestDataGenerator.writePartitionMetadata(fs, HoodieTestDataGenerator.DEFAULT_PARTITION_PATHS, tablePath);\n+\n+    // two commit files\n+    HoodieTestUtils.createCommitFiles(tablePath, commitTime1, commitTime2);\n+    // one .inflight commit file\n+    HoodieTestUtils.createInflightCommitFiles(tablePath, commitTime3);\n+\n+    // generate commit1 files\n+    HoodieTestUtils.createDataFile(tablePath, HoodieTestDataGenerator.DEFAULT_FIRST_PARTITION_PATH, commitTime1, \"file-1-1\");\n+    HoodieTestUtils.createDataFile(tablePath, HoodieTestDataGenerator.DEFAULT_SECOND_PARTITION_PATH, commitTime1, \"file-1-2\");\n+    HoodieTestUtils.createDataFile(tablePath, HoodieTestDataGenerator.DEFAULT_THIRD_PARTITION_PATH, commitTime1, \"file-1-3\");\n+\n+    // generate commit2 files\n+    HoodieTestUtils.createDataFile(tablePath, HoodieTestDataGenerator.DEFAULT_FIRST_PARTITION_PATH, commitTime2, \"file-2-1\");\n+    HoodieTestUtils.createDataFile(tablePath, HoodieTestDataGenerator.DEFAULT_SECOND_PARTITION_PATH, commitTime2, \"file-2-2\");\n+    HoodieTestUtils.createDataFile(tablePath, HoodieTestDataGenerator.DEFAULT_THIRD_PARTITION_PATH, commitTime2, \"file-2-3\");\n+\n+    // generate commit3 files\n+    HoodieTestUtils.createDataFile(tablePath, HoodieTestDataGenerator.DEFAULT_FIRST_PARTITION_PATH, commitTime3, \"file-3-1\");\n+    HoodieTestUtils.createDataFile(tablePath, HoodieTestDataGenerator.DEFAULT_SECOND_PARTITION_PATH, commitTime3, \"file-3-2\");\n+    HoodieTestUtils.createDataFile(tablePath, HoodieTestDataGenerator.DEFAULT_THIRD_PARTITION_PATH, commitTime3, \"file-3-3\");", "originalCommit": "760726df8208cb278a9137e8f839fe1ec3fa937b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e951427154b820e5fdd43f1c869e78d74f7f1fa", "chunk": "diff --git a/hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestRollbacksCommand.java b/hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestRollbacksCommand.java\nindex d9163f597..5a82d778f 100644\n--- a/hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestRollbacksCommand.java\n+++ b/hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestRollbacksCommand.java\n\n@@ -44,6 +44,7 @@ import org.springframework.shell.core.CommandResult;\n import java.io.File;\n import java.io.IOException;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.HashMap;\n import java.util.List;\n import java.util.stream.Stream;\n"}}, {"oid": "0e951427154b820e5fdd43f1c869e78d74f7f1fa", "url": "https://github.com/apache/hudi/commit/0e951427154b820e5fdd43f1c869e78d74f7f1fa", "message": "fix", "committedDate": "2020-05-15T09:40:14Z", "type": "commit"}]}