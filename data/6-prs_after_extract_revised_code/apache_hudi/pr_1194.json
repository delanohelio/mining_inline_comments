{"pr_number": 1194, "pr_title": "[HUDI-326] Add support to delete records with only record_key", "pr_createdAt": "2020-01-06T22:07:28Z", "pr_url": "https://github.com/apache/hudi/pull/1194", "timeline": [{"oid": "f200c23f454191865f59c9840f988f1430490e2c", "url": "https://github.com/apache/hudi/commit/f200c23f454191865f59c9840f988f1430490e2c", "message": "Add GlobalDeleteKeyGenerator\n\nAdds new GlobalDeleteKeyGenerator for record_key deletes with global indices. Also refactors key generators into their own package.", "committedDate": "2020-01-11T02:06:02Z", "type": "commit"}, {"oid": "f200c23f454191865f59c9840f988f1430490e2c", "url": "https://github.com/apache/hudi/commit/f200c23f454191865f59c9840f988f1430490e2c", "message": "Add GlobalDeleteKeyGenerator\n\nAdds new GlobalDeleteKeyGenerator for record_key deletes with global indices. Also refactors key generators into their own package.", "committedDate": "2020-01-11T02:06:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4ODk1Mw==", "url": "https://github.com/apache/hudi/pull/1194#discussion_r366088953", "bodyText": "This is a backwards incompatible change. Users would have custom key generators using configuration : DataSourceWriteOptions.KEYGENERATOR_CLASS_OPT_KEY()\nIt makes sense to move to separate package but we need to call out the change in release notes . Please open a tracking ticket to update release notes for this.", "author": "bvaradar", "createdAt": "2020-01-13T23:47:18Z", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/ComplexKeyGenerator.java", "diffHunk": "@@ -16,8 +16,10 @@\n  * limitations under the License.\n  */\n \n-package org.apache.hudi;\n+package org.apache.hudi.keygen;", "originalCommit": "f200c23f454191865f59c9840f988f1430490e2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUwNTM1OQ==", "url": "https://github.com/apache/hudi/pull/1194#discussion_r366505359", "bodyText": "+1 @bschell", "author": "n3nash", "createdAt": "2020-01-14T18:37:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4ODk1Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MTM5Mg==", "url": "https://github.com/apache/hudi/pull/1194#discussion_r366091392", "bodyText": "@bschell : The only difference between GlobalDeleteKeyGenerator and ComplexKeyGenerator is that the former always creates an empty-partition path. right ? In that case, can we simply refactor the getKey() method in ComplexKeyGenerator and have GlobalDeleteKeyGenerator extend ComplexKeyGenerator with necessary changes to make it to work for empty partition-path. The advantage is we use all the logic related  to nested fields handling in one place ? Let me know your thoughts.", "author": "bvaradar", "createdAt": "2020-01-13T23:56:23Z", "path": "hudi-spark/src/main/java/org/apache/hudi/keygen/GlobalDeleteKeyGenerator.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hudi.keygen;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import org.apache.avro.generic.GenericRecord;\n+import org.apache.hudi.DataSourceUtils;\n+import org.apache.hudi.DataSourceWriteOptions;\n+import org.apache.hudi.common.model.HoodieKey;\n+import org.apache.hudi.common.util.TypedProperties;\n+import org.apache.hudi.exception.HoodieKeyException;\n+\n+/**\n+ * Key generator for deletes using global indices. Global index deletes do not require partition value\n+ * so this key generator avoids using partition value for generating HoodieKey.\n+ */\n+public class GlobalDeleteKeyGenerator extends KeyGenerator {\n+\n+  private static final String EMPTY_PARTITION = \"\";\n+  private static final String NULL_RECORDKEY_PLACEHOLDER = \"__null__\";\n+  private static final String EMPTY_RECORDKEY_PLACEHOLDER = \"__empty__\";\n+\n+  protected final List<String> recordKeyFields;\n+\n+  public GlobalDeleteKeyGenerator(TypedProperties config) {\n+    super(config);\n+    this.recordKeyFields = Arrays.asList(config.getString(DataSourceWriteOptions.RECORDKEY_FIELD_OPT_KEY()).split(\",\"));\n+  }\n+\n+  @Override\n+  public HoodieKey getKey(GenericRecord record) {", "originalCommit": "f200c23f454191865f59c9840f988f1430490e2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUwNjA1Mw==", "url": "https://github.com/apache/hudi/pull/1194#discussion_r366506053", "bodyText": "I think the point was to make the GlobalDeleteKeyGenerator work for any case, complex or simple.\n@bvaradar", "author": "n3nash", "createdAt": "2020-01-14T18:39:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5MTM5Mg=="}], "type": "inlineReview", "revised_code": null}]}