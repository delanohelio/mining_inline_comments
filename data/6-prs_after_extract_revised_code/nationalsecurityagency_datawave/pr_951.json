{"pr_number": 951, "pr_title": "Addresses #950 ingest job percent error threshold", "pr_createdAt": "2020-10-19T19:06:58Z", "pr_url": "https://github.com/NationalSecurityAgency/datawave/pull/951", "timeline": [{"oid": "1dc1e1860686e0c46b8aae52d2f71399302d9984", "url": "https://github.com/NationalSecurityAgency/datawave/commit/1dc1e1860686e0c46b8aae52d2f71399302d9984", "message": "Addresses #950 ingest job percent error threshold", "committedDate": "2020-10-19T19:04:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAwMDM3MA==", "url": "https://github.com/NationalSecurityAgency/datawave/pull/951#discussion_r508000370", "bodyText": "We still need to close this jobClient which is what the try block was doing for us previously.", "author": "ivakegg", "createdAt": "2020-10-19T19:13:07Z", "path": "warehouse/ingest-core/src/main/java/datawave/ingest/mapreduce/job/IngestJob.java", "diffHunk": "@@ -423,20 +424,25 @@ public int run(String[] args) throws Exception {\n         // output the counters to the log\n         Counters counters = job.getCounters();\n         log.info(counters);\n+        JobClient jobClient = new JobClient((org.apache.hadoop.mapred.JobConf) job.getConfiguration());", "originalCommit": "1dc1e1860686e0c46b8aae52d2f71399302d9984", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAwMTczMQ==", "url": "https://github.com/NationalSecurityAgency/datawave/pull/951#discussion_r508001731", "bodyText": "true!", "author": "hlgp", "createdAt": "2020-10-19T19:15:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAwMDM3MA=="}], "type": "inlineReview", "revised_code": {"commit": "efa5b571c0e81fa92c605825949b59677efa8ee6", "chunk": "diff --git a/warehouse/ingest-core/src/main/java/datawave/ingest/mapreduce/job/IngestJob.java b/warehouse/ingest-core/src/main/java/datawave/ingest/mapreduce/job/IngestJob.java\nindex 1f5b6fd98..372098b81 100644\n--- a/warehouse/ingest-core/src/main/java/datawave/ingest/mapreduce/job/IngestJob.java\n+++ b/warehouse/ingest-core/src/main/java/datawave/ingest/mapreduce/job/IngestJob.java\n\n@@ -424,25 +424,26 @@ public class IngestJob implements Tool {\n         // output the counters to the log\n         Counters counters = job.getCounters();\n         log.info(counters);\n-        JobClient jobClient = new JobClient((org.apache.hadoop.mapred.JobConf) job.getConfiguration());\n-        RunningJob runningJob = jobClient.getJob(new org.apache.hadoop.mapred.JobID(jobID.getJtIdentifier(), jobID.getId()));\n-        \n-        // If the job failed, then don't bring the map files online.\n-        if (!job.isSuccessful()) {\n-            return jobFailed(job, runningJob, outputFs, workDirPath);\n-        }\n-        \n-        // determine if we had processing errors\n-        if (counters.findCounter(IngestProcess.RUNTIME_EXCEPTION).getValue() > 0) {\n-            eventProcessingError = true;\n-            log.error(\"Found Runtime Exceptions in the counters\");\n-            long numExceptions = counters.findCounter(IngestProcess.RUNTIME_EXCEPTION).getValue();\n-            long numRecords = counters.findCounter(IngestOutput.EVENTS_PROCESSED).getValue();\n-            long percentError = (numExceptions / (numRecords + numExceptions)) * 100;\n-            log.info(\"Percent Error: \" + percentError);\n-            if (conf.getInt(\"job.percent.error.threshold\", 101) <= percentError) {\n+        try (JobClient jobClient = new JobClient((org.apache.hadoop.mapred.JobConf) job.getConfiguration())) {\n+            RunningJob runningJob = jobClient.getJob(new org.apache.hadoop.mapred.JobID(jobID.getJtIdentifier(), jobID.getId()));\n+            \n+            // If the job failed, then don't bring the map files online.\n+            if (!job.isSuccessful()) {\n                 return jobFailed(job, runningJob, outputFs, workDirPath);\n             }\n+            \n+            // determine if we had processing errors\n+            if (counters.findCounter(IngestProcess.RUNTIME_EXCEPTION).getValue() > 0) {\n+                eventProcessingError = true;\n+                log.error(\"Found Runtime Exceptions in the counters\");\n+                long numExceptions = counters.findCounter(IngestProcess.RUNTIME_EXCEPTION).getValue();\n+                long numRecords = counters.findCounter(IngestOutput.EVENTS_PROCESSED).getValue();\n+                long percentError = (numExceptions / (numRecords + numExceptions)) * 100;\n+                log.info(\"Percent Error: \" + percentError);\n+                if (conf.getInt(\"job.percent.error.threshold\", 101) <= percentError) {\n+                    return jobFailed(job, runningJob, outputFs, workDirPath);\n+                }\n+            }\n         }\n         if (counters.findCounter(IngestInput.EVENT_FATAL_ERROR).getValue() > 0) {\n             eventProcessingError = true;\n"}}, {"oid": "efa5b571c0e81fa92c605825949b59677efa8ee6", "url": "https://github.com/NationalSecurityAgency/datawave/commit/efa5b571c0e81fa92c605825949b59677efa8ee6", "message": "Keep try-with-resources", "committedDate": "2020-10-19T19:21:59Z", "type": "commit"}]}