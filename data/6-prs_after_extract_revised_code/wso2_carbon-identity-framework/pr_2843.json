{"pr_number": 2843, "pr_title": "Add Config Store related queries for different DB types", "pr_createdAt": "2020-03-31T08:01:02Z", "pr_url": "https://github.com/wso2/carbon-identity-framework/pull/2843", "timeline": [{"oid": "447915c8e5ed9d4db25cf29dd53cd1495990cd0f", "url": "https://github.com/wso2/carbon-identity-framework/commit/447915c8e5ed9d4db25cf29dd53cd1495990cd0f", "message": "Add Config Store related queries for different DB types", "committedDate": "2020-03-31T07:54:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc1NzE0Mg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r400757142", "bodyText": "let's avoid adding the \\n.. new line character is not required in java files.", "author": "emswbandara", "createdAt": "2020-03-31T09:08:48Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -165,6 +238,66 @@\n             \"  R.NAME = ?\\n\" +\n             \"  AND R.TENANT_ID = ?\\n\" +\n             \"  AND R.TYPE_ID = ?\";\n+    public static final String GET_RESOURCE_BY_NAME_MSSQL = \"SELECT\\n\" +\n+            \"  R.ID,\\n\" +", "originalCommit": "447915c8e5ed9d4db25cf29dd53cd1495990cd0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg0NDE3MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r400844170", "bodyText": "addressed in ff47c03", "author": "AnuradhaSK", "createdAt": "2020-03-31T11:39:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc1NzE0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3", "chunk": "diff --git a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\nindex 7458b9ebf26..5aa80276d31 100644\n--- a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n+++ b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n\n@@ -238,66 +238,66 @@ public class SQLConstants {\n             \"  R.NAME = ?\\n\" +\n             \"  AND R.TENANT_ID = ?\\n\" +\n             \"  AND R.TYPE_ID = ?\";\n-    public static final String GET_RESOURCE_BY_NAME_MSSQL = \"SELECT\\n\" +\n-            \"  R.ID,\\n\" +\n-            \"  R.TENANT_ID,\\n\" +\n-            \"  R.NAME,\\n\" +\n-            \"  R.CREATED_TIME,\\n\" +\n-            \"  R.LAST_MODIFIED,\\n\" +\n-            \"  R.HAS_FILE,\\n\" +\n-            \"  R.HAS_ATTRIBUTE,\\n\" +\n-            \"  T.NAME AS RESOURCE_TYPE,\\n\" +\n-            \"  T.DESCRIPTION AS DESCRIPTION,\\n\" +\n-            \"  F.ID AS FILE_ID,\\n\" +\n-            \"  F.NAME AS FILE_NAME,\\n\" +\n-            \"  A.ID AS ATTR_ID,\\n\" +\n-            \"  A.ATTR_KEY AS ATTR_KEY,\\n\" +\n-            \"  A.ATTR_VALUE AS ATTR_VALUE\\n\" +\n-            \"FROM\\n\" +\n-            \"  IDN_CONFIG_RESOURCE AS R\\n\" +\n-            \"  INNER JOIN IDN_CONFIG_TYPE AS T ON R.TYPE_ID = T.ID\\n\" +\n-            \"  LEFT JOIN IDN_CONFIG_ATTRIBUTE AS A ON (\\n\" +\n-            \"    R.HAS_ATTRIBUTE = 1\\n\" +\n-            \"    AND A.RESOURCE_ID = R.ID\\n\" +\n-            \"  )\\n\" +\n-            \"  LEFT JOIN IDN_CONFIG_FILE AS F ON (\\n\" +\n-            \"    R.HAS_FILE = 1\\n\" +\n-            \"    AND F.RESOURCE_ID = R.ID\\n\" +\n-            \"  )\\n\" +\n-            \"WHERE\\n\" +\n-            \"  R.NAME = ?\\n\" +\n-            \"  AND R.TENANT_ID = ?\\n\" +\n+    public static final String GET_RESOURCE_BY_NAME_MSSQL = \"SELECT \" +\n+            \"  R.ID,\" +\n+            \"  R.TENANT_ID,\" +\n+            \"  R.NAME,\" +\n+            \"  R.CREATED_TIME,\" +\n+            \"  R.LAST_MODIFIED,\" +\n+            \"  R.HAS_FILE,\" +\n+            \"  R.HAS_ATTRIBUTE,\" +\n+            \"  T.NAME AS RESOURCE_TYPE,\" +\n+            \"  T.DESCRIPTION AS DESCRIPTION,\" +\n+            \"  F.ID AS FILE_ID,\" +\n+            \"  F.NAME AS FILE_NAME,\" +\n+            \"  A.ID AS ATTR_ID,\" +\n+            \"  A.ATTR_KEY AS ATTR_KEY,\" +\n+            \"  A.ATTR_VALUE AS ATTR_VALUE\" +\n+            \"FROM\" +\n+            \"  IDN_CONFIG_RESOURCE AS R\" +\n+            \"  INNER JOIN IDN_CONFIG_TYPE AS T ON R.TYPE_ID = T.ID\" +\n+            \"  LEFT JOIN IDN_CONFIG_ATTRIBUTE AS A ON (\" +\n+            \"    R.HAS_ATTRIBUTE = 1\" +\n+            \"    AND A.RESOURCE_ID = R.ID\" +\n+            \"  )\" +\n+            \"  LEFT JOIN IDN_CONFIG_FILE AS F ON (\" +\n+            \"    R.HAS_FILE = 1\" +\n+            \"    AND F.RESOURCE_ID = R.ID\" +\n+            \"  )\" +\n+            \"WHERE\" +\n+            \"  R.NAME = ?\" +\n+            \"  AND R.TENANT_ID = ?\" +\n             \"  AND R.TYPE_ID = ?\";\n     public static final String GET_RESOURCE_BY_NAME_ORACLE = \"SELECT \" +\n-            \"  R.ID,\\n\" +\n-            \"  R.TENANT_ID,\\n\" +\n-            \"  R.NAME,\\n\" +\n-            \"  R.CREATED_TIME,\\n\" +\n-            \"  R.LAST_MODIFIED,\\n\" +\n-            \"  R.HAS_FILE,\\n\" +\n-            \"  R.HAS_ATTRIBUTE,\\n\" +\n-            \"  T.NAME RESOURCE_TYPE,\\n\" +\n-            \"  T.DESCRIPTION DESCRIPTION,\\n\" +\n-            \"  F.ID FILE_ID,\\n\" +\n-            \"  F.NAME FILE_NAME,\\n\" +\n-            \"  A.ID ATTR_ID,\\n\" +\n-            \"  A.ATTR_KEY ATTR_KEY,\\n\" +\n-            \"  A.ATTR_VALUE ATTR_VALUE\\n\" +\n-            \"FROM\\n\" +\n-            \"  IDN_CONFIG_RESOURCE R\\n\" +\n-            \"  INNER JOIN IDN_CONFIG_TYPE T ON R.TYPE_ID = T.ID\\n\" +\n-            \"  LEFT JOIN IDN_CONFIG_ATTRIBUTE A ON (\\n\" +\n-            \"    R.HAS_ATTRIBUTE = 1\\n\" +\n-            \"    AND A.RESOURCE_ID = R.ID\\n\" +\n-            \"  )\\n\" +\n-            \"  LEFT JOIN IDN_CONFIG_FILE F ON (\\n\" +\n-            \"    R.HAS_FILE = 1\\n\" +\n-            \"    AND F.RESOURCE_ID = R.ID\\n\" +\n-            \"  )\\n\" +\n-            \"WHERE\\n\" +\n-            \"  R.NAME = ?\\n\" +\n-            \"  AND R.TENANT_ID = ?\\n\" +\n-            \"  AND R.TYPE_ID = ?\\n\";\n+            \"  R.ID,\" +\n+            \"  R.TENANT_ID,\" +\n+            \"  R.NAME,\" +\n+            \"  R.CREATED_TIME,\" +\n+            \"  R.LAST_MODIFIED,\" +\n+            \"  R.HAS_FILE,\" +\n+            \"  R.HAS_ATTRIBUTE,\" +\n+            \"  T.NAME RESOURCE_TYPE,\" +\n+            \"  T.DESCRIPTION DESCRIPTION,\" +\n+            \"  F.ID FILE_ID,\" +\n+            \"  F.NAME FILE_NAME,\" +\n+            \"  A.ID ATTR_ID,\" +\n+            \"  A.ATTR_KEY ATTR_KEY,\" +\n+            \"  A.ATTR_VALUE ATTR_VALUE\" +\n+            \"FROM\" +\n+            \"  IDN_CONFIG_RESOURCE R\" +\n+            \"  INNER JOIN IDN_CONFIG_TYPE T ON R.TYPE_ID = T.ID\" +\n+            \"  LEFT JOIN IDN_CONFIG_ATTRIBUTE A ON (\" +\n+            \"    R.HAS_ATTRIBUTE = 1\" +\n+            \"    AND A.RESOURCE_ID = R.ID\" +\n+            \"  )\" +\n+            \"  LEFT JOIN IDN_CONFIG_FILE F ON (\" +\n+            \"    R.HAS_FILE = 1\" +\n+            \"    AND F.RESOURCE_ID = R.ID\" +\n+            \"  )\" +\n+            \"WHERE\" +\n+            \"  R.NAME = ?\" +\n+            \"  AND R.TENANT_ID = ?\" +\n+            \"  AND R.TYPE_ID = ?\";\n     public static final String GET_RESOURCE_BY_NAME_MYSQL_WITHOUT_CREATED_TIME = \"SELECT\\n\" +\n             \"  R.ID,\\n\" +\n             \"  R.TENANT_ID,\\n\" +\n"}}, {"oid": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3", "url": "https://github.com/wso2/carbon-identity-framework/commit/ff47c030b9c14da99a0a8781ef12c24ffd127ff3", "message": "Format the SQL Constants", "committedDate": "2020-03-31T11:37:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyOTc4Ng==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401429786", "bodyText": "SYSIBM: Is this a general constant in DB2?", "author": "tharindu-bandara", "createdAt": "2020-04-01T08:08:11Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -72,6 +90,28 @@\n             \"(NAME), \" +\n             \"LAST_MODIFIED = VALUES(LAST_MODIFIED), HAS_FILE = VALUES(HAS_FILE), HAS_ATTRIBUTE = VALUES\" +\n             \"(HAS_ATTRIBUTE), TYPE_ID = VALUES(TYPE_ID)\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_POSTGRESQL = \"INSERT INTO IDN_CONFIG_RESOURCE\" +\n+            \"(ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) \" +\n+            \"VALUES(?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (ID) DO UPDATE \" +\n+            \"SET TENANT_ID = EXCLUDED.TENANT_ID, NAME = EXCLUDED.NAME, LAST_MODIFIED = EXCLUDED.LAST_MODIFIED, \" +\n+            \"HAS_FILE =EXCLUDED.HAS_FILE, HAS_ATTRIBUTE = EXCLUDED.HAS_ATTRIBUTE, TYPE_ID = EXCLUDED.TYPE_ID\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_DB2 = \"MERGE INTO IDN_CONFIG_RESOURCE USING \" +\n+            \"\\\"SYSIBM\\\".DUAL ON (ID= ? ) WHEN MATCHED THEN UPDATE SET TENANT_ID = ?, NAME = ?, LAST_MODIFIED = ?, \" +", "originalCommit": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNDc5MQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401434791", "bodyText": "Otherwise, say this represents the default admin user. Then it may not work in all the deployments.", "author": "tharindu-bandara", "createdAt": "2020-04-01T08:16:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyOTc4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3MDY4Mg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401870682", "bodyText": "The query used in mssql is valid for db2 also. \"SYSIBM\" is not using anymore. Changed in 5a0504e", "author": "AnuradhaSK", "createdAt": "2020-04-01T19:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyOTc4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "chunk": "diff --git a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\nindex 5aa80276d31..aca1ce8435c 100644\n--- a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n+++ b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n\n@@ -91,27 +88,22 @@ public class SQLConstants {\n             \"LAST_MODIFIED = VALUES(LAST_MODIFIED), HAS_FILE = VALUES(HAS_FILE), HAS_ATTRIBUTE = VALUES\" +\n             \"(HAS_ATTRIBUTE), TYPE_ID = VALUES(TYPE_ID)\";\n     public static final String INSERT_OR_UPDATE_RESOURCE_POSTGRESQL = \"INSERT INTO IDN_CONFIG_RESOURCE\" +\n-            \"(ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) \" +\n+            \"(ID, TENANT_ID, NAME, CREATED_TIME, LAST_MODIFIED, HAS_FILE, HAS_ATTRIBUTE, TYPE_ID) \" +\n             \"VALUES(?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (ID) DO UPDATE \" +\n             \"SET TENANT_ID = EXCLUDED.TENANT_ID, NAME = EXCLUDED.NAME, LAST_MODIFIED = EXCLUDED.LAST_MODIFIED, \" +\n-            \"HAS_FILE =EXCLUDED.HAS_FILE, HAS_ATTRIBUTE = EXCLUDED.HAS_ATTRIBUTE, TYPE_ID = EXCLUDED.TYPE_ID\";\n-    public static final String INSERT_OR_UPDATE_RESOURCE_DB2 = \"MERGE INTO IDN_CONFIG_RESOURCE USING \" +\n-            \"\\\"SYSIBM\\\".DUAL ON (ID= ? ) WHEN MATCHED THEN UPDATE SET TENANT_ID = ?, NAME = ?, LAST_MODIFIED = ?, \" +\n-            \"HAS_FILE = ?, HAS_ATTRIBUTE = ?, TYPE_ID = ? WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, \" +\n-            \"CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) \" +\n-            \"VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";\n-    public static final String INSERT_OR_UPDATE_RESOURCE_MSSQL = \"MERGE IDN_CONFIG_RESOURCE T USING \" +\n-            \"(VALUES  (?, ?, ?, ?, ?, ?, ?, ?)) S \" +\n-            \"(ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) ON T.ID = S.ID \" +\n+            \"HAS_FILE = EXCLUDED.HAS_FILE, HAS_ATTRIBUTE = EXCLUDED.HAS_ATTRIBUTE, TYPE_ID = EXCLUDED.TYPE_ID\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_MSSQL_OR_DB2 = \"MERGE INTO IDN_CONFIG_RESOURCE T USING \" +\n+            \"(VALUES (?, ?, ?, ?, ?, ?, ?, ?)) S \" +\n+            \"(ID, TENANT_ID, NAME, CREATED_TIME, LAST_MODIFIED, HAS_FILE, HAS_ATTRIBUTE, TYPE_ID) ON T.ID = S.ID \" +\n             \"WHEN MATCHED THEN UPDATE SET TENANT_ID = S.TENANT_ID, NAME = S.NAME, LAST_MODIFIED = S.LAST_MODIFIED, \" +\n             \"HAS_FILE = S.HAS_FILE, HAS_ATTRIBUTE = S.HAS_ATTRIBUTE, TYPE_ID = S.TYPE_ID \" +\n-            \"WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,\" +\n+            \"WHEN NOT MATCHED THEN INSERT (ID, TENANT_ID, NAME, CREATED_TIME, LAST_MODIFIED, HAS_FILE, HAS_ATTRIBUTE,\" +\n             \"TYPE_ID) VALUES (S.ID, S.TENANT_ID, S.NAME, S.CREATED_TIME, S.LAST_MODIFIED, S.HAS_FILE, S\" +\n             \".HAS_ATTRIBUTE, S.TYPE_ID);\";\n     public static final String INSERT_OR_UPDATE_RESOURCE_ORACLE = \"MERGE INTO IDN_CONFIG_RESOURCE USING dual ON \" +\n-            \"(ID=?) WHEN MATCHED THEN UPDATE SET TENANT_ID=?, NAME=? , LAST_MODIFIED=?, HAS_FILE=?, HAS_ATTRIBUTE=?, \" +\n-            \"TYPE_ID=? WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, CREATED_TIME, LAST_MODIFIED, HAS_FILE, \" +\n-            \"HAS_ATTRIBUTE, TYPE_ID) VALUES (?,?, ?,?,?, ?, ?, ? )\";\n+            \"(ID = ?) WHEN MATCHED THEN UPDATE SET TENANT_ID = ?, NAME = ? , LAST_MODIFIED = ?, HAS_FILE = ?, \" +\n+            \"HAS_ATTRIBUTE = ?, TYPE_ID = ? WHEN NOT MATCHED THEN INSERT (ID, TENANT_ID, NAME, CREATED_TIME, \" +\n+            \"LAST_MODIFIED, HAS_FILE, HAS_ATTRIBUTE, TYPE_ID) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";\n     public static final String INSERT_OR_UPDATE_RESOURCE_MYSQL_WITHOUT_CREATED_TIME = \"INSERT INTO\\n\" +\n             \"  IDN_CONFIG_RESOURCE(\\n\" +\n             \"    ID,\\n\" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMDc4OA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401430788", "bodyText": "Dropping the keyword AS should also work with MySQL AFAIR. If so, we might be able to reuse the oracle query.", "author": "tharindu-bandara", "createdAt": "2020-04-01T08:09:58Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -165,6 +238,66 @@\n             \"  R.NAME = ?\\n\" +\n             \"  AND R.TENANT_ID = ?\\n\" +\n             \"  AND R.TYPE_ID = ?\";\n+    public static final String GET_RESOURCE_BY_NAME_MSSQL = \"SELECT \" +\n+            \"  R.ID,\" +\n+            \"  R.TENANT_ID,\" +\n+            \"  R.NAME,\" +\n+            \"  R.CREATED_TIME,\" +\n+            \"  R.LAST_MODIFIED,\" +\n+            \"  R.HAS_FILE,\" +\n+            \"  R.HAS_ATTRIBUTE,\" +\n+            \"  T.NAME AS RESOURCE_TYPE,\" +\n+            \"  T.DESCRIPTION AS DESCRIPTION,\" +\n+            \"  F.ID AS FILE_ID,\" +\n+            \"  F.NAME AS FILE_NAME,\" +\n+            \"  A.ID AS ATTR_ID,\" +\n+            \"  A.ATTR_KEY AS ATTR_KEY,\" +\n+            \"  A.ATTR_VALUE AS ATTR_VALUE\" +\n+            \"FROM\" +\n+            \"  IDN_CONFIG_RESOURCE AS R\" +\n+            \"  INNER JOIN IDN_CONFIG_TYPE AS T ON R.TYPE_ID = T.ID\" +", "originalCommit": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNDk4OQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401434989", "bodyText": "Please check similar usages.", "author": "tharindu-bandara", "createdAt": "2020-04-01T08:17:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMDc4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3MzI3Nw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401873277", "bodyText": "Used the same query for ORACLE and MSSQL. Changed in 5a0504e\nDue to the following difference there is a separate query for mysql\nR.HAS_ATTRIBUTE = 1 , R.HAS_FILE = 1 -> in mssql and oracle\nR.HAS_ATTRIBUTE = TRUE, R.HAS_FILE = TRUE -> mysql", "author": "AnuradhaSK", "createdAt": "2020-04-01T19:58:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMDc4OA=="}], "type": "inlineReview", "revised_code": {"commit": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "chunk": "diff --git a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\nindex 5aa80276d31..aca1ce8435c 100644\n--- a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n+++ b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n\n@@ -238,37 +225,7 @@ public class SQLConstants {\n             \"  R.NAME = ?\\n\" +\n             \"  AND R.TENANT_ID = ?\\n\" +\n             \"  AND R.TYPE_ID = ?\";\n-    public static final String GET_RESOURCE_BY_NAME_MSSQL = \"SELECT \" +\n-            \"  R.ID,\" +\n-            \"  R.TENANT_ID,\" +\n-            \"  R.NAME,\" +\n-            \"  R.CREATED_TIME,\" +\n-            \"  R.LAST_MODIFIED,\" +\n-            \"  R.HAS_FILE,\" +\n-            \"  R.HAS_ATTRIBUTE,\" +\n-            \"  T.NAME AS RESOURCE_TYPE,\" +\n-            \"  T.DESCRIPTION AS DESCRIPTION,\" +\n-            \"  F.ID AS FILE_ID,\" +\n-            \"  F.NAME AS FILE_NAME,\" +\n-            \"  A.ID AS ATTR_ID,\" +\n-            \"  A.ATTR_KEY AS ATTR_KEY,\" +\n-            \"  A.ATTR_VALUE AS ATTR_VALUE\" +\n-            \"FROM\" +\n-            \"  IDN_CONFIG_RESOURCE AS R\" +\n-            \"  INNER JOIN IDN_CONFIG_TYPE AS T ON R.TYPE_ID = T.ID\" +\n-            \"  LEFT JOIN IDN_CONFIG_ATTRIBUTE AS A ON (\" +\n-            \"    R.HAS_ATTRIBUTE = 1\" +\n-            \"    AND A.RESOURCE_ID = R.ID\" +\n-            \"  )\" +\n-            \"  LEFT JOIN IDN_CONFIG_FILE AS F ON (\" +\n-            \"    R.HAS_FILE = 1\" +\n-            \"    AND F.RESOURCE_ID = R.ID\" +\n-            \"  )\" +\n-            \"WHERE\" +\n-            \"  R.NAME = ?\" +\n-            \"  AND R.TENANT_ID = ?\" +\n-            \"  AND R.TYPE_ID = ?\";\n-    public static final String GET_RESOURCE_BY_NAME_ORACLE = \"SELECT \" +\n+    public static final String GET_RESOURCE_BY_NAME_MSSQL_OR_ORACLE = \"SELECT \" +\n             \"  R.ID,\" +\n             \"  R.TENANT_ID,\" +\n             \"  R.NAME,\" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMzE2MQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401433161", "bodyText": "Other than MySQL, we will not need without_created_time queries, as it was introduced to handle backward compatibility when the created time field is not available. Since we support other DBs from this PR onwards, we can decide as the created time field is already available.", "author": "tharindu-bandara", "createdAt": "2020-04-01T08:14:02Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -246,6 +489,58 @@\n             \"  )\\n\" +\n             \"WHERE\\n\" +\n             \"  R.ID = ?\\n\";\n+    public static final String GET_RESOURCE_BY_ID_MSSQL_WITHOUT_CREATED_TIME = \"SELECT\" +", "originalCommit": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNTEwNQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401435105", "bodyText": "Please check other places.", "author": "tharindu-bandara", "createdAt": "2020-04-01T08:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMzE2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg2OTI5NA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401869294", "bodyText": "Removed  without_created_time queries written for other database types in  5a0504e", "author": "AnuradhaSK", "createdAt": "2020-04-01T19:51:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMzE2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "chunk": "diff --git a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\nindex 5aa80276d31..aca1ce8435c 100644\n--- a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n+++ b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n\n@@ -489,58 +363,6 @@ public class SQLConstants {\n             \"  )\\n\" +\n             \"WHERE\\n\" +\n             \"  R.ID = ?\\n\";\n-    public static final String GET_RESOURCE_BY_ID_MSSQL_WITHOUT_CREATED_TIME = \"SELECT\" +\n-            \"   R.ID,\" +\n-            \"   R.TENANT_ID,\" +\n-            \"   R.NAME,\" +\n-            \"   R.LAST_MODIFIED,\" +\n-            \"   R.HAS_FILE,\" +\n-            \"   R.HAS_ATTRIBUTE,\" +\n-            \"   T.NAME AS RESOURCE_TYPE,\" +\n-            \"   T.DESCRIPTION AS DESCRIPTION,\" +\n-            \"   F.ID AS FILE_ID,\" +\n-            \"   A.ID AS ATTR_ID,\" +\n-            \"   A.ATTR_KEY AS ATTR_KEY,\" +\n-            \"   A.ATTR_VALUE AS ATTR_VALUE\" +\n-            \"FROM\" +\n-            \"   IDN_CONFIG_RESOURCE AS R\" +\n-            \"   INNER JOIN IDN_CONFIG_TYPE AS T ON R.TYPE_ID = T.ID\" +\n-            \"   LEFT JOIN IDN_CONFIG_ATTRIBUTE AS A ON (\" +\n-            \"       R.HAS_ATTRIBUTE = 1\" +\n-            \"       AND A.RESOURCE_ID = R.ID\" +\n-            \"   )\" +\n-            \"   LEFT JOIN IDN_CONFIG_FILE AS F ON (\" +\n-            \"       R.HAS_FILE = 1\" +\n-            \"       AND F.RESOURCE_ID = R.ID\" +\n-            \"   )\" +\n-            \"WHERE\" +\n-            \"   R.ID = ?\";\n-    public static final String GET_RESOURCE_BY_ID_ORACLE_WITHOUT_CREATED_TIME = \"SELECT\" +\n-            \"   R.ID,\" +\n-            \"   R.TENANT_ID,\" +\n-            \"   R.NAME,\" +\n-            \"   R.LAST_MODIFIED,\" +\n-            \"   R.HAS_FILE,\" +\n-            \"   R.HAS_ATTRIBUTE,\" +\n-            \"   T.NAME  RESOURCE_TYPE,\" +\n-            \"   T.DESCRIPTION  DESCRIPTION,\" +\n-            \"   F.ID  FILE_ID,\" +\n-            \"   A.ID  ATTR_ID,\" +\n-            \"   A.ATTR_KEY  ATTR_KEY,\" +\n-            \"   A.ATTR_VALUE  ATTR_VALUE\" +\n-            \"FROM\" +\n-            \"   IDN_CONFIG_RESOURCE  R\" +\n-            \"   INNER JOIN IDN_CONFIG_TYPE  T ON R.TYPE_ID = T.ID\" +\n-            \"   LEFT JOIN IDN_CONFIG_ATTRIBUTE  A ON (\" +\n-            \"       R.HAS_ATTRIBUTE = 1\" +\n-            \"       AND A.RESOURCE_ID = R.ID\" +\n-            \"   )\" +\n-            \"   LEFT JOIN IDN_CONFIG_FILE  F ON (\" +\n-            \"       R.HAS_FILE = 1\" +\n-            \"       AND F.RESOURCE_ID = R.ID\" +\n-            \"   )\" +\n-            \"WHERE\" +\n-            \"   R.ID = ?\";\n     public static final String GET_TENANT_RESOURCES_SELECT_COLUMNS_MYSQL = \"SELECT\\n\" +\n             \"  R.ID,\\n\" +\n             \"  R.TENANT_ID,\\n\" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTM0NA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401571344", "bodyText": "formatting issue add space after ,", "author": "emswbandara", "createdAt": "2020-04-01T12:20:01Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -72,6 +90,28 @@\n             \"(NAME), \" +\n             \"LAST_MODIFIED = VALUES(LAST_MODIFIED), HAS_FILE = VALUES(HAS_FILE), HAS_ATTRIBUTE = VALUES\" +\n             \"(HAS_ATTRIBUTE), TYPE_ID = VALUES(TYPE_ID)\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_POSTGRESQL = \"INSERT INTO IDN_CONFIG_RESOURCE\" +\n+            \"(ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) \" +\n+            \"VALUES(?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (ID) DO UPDATE \" +\n+            \"SET TENANT_ID = EXCLUDED.TENANT_ID, NAME = EXCLUDED.NAME, LAST_MODIFIED = EXCLUDED.LAST_MODIFIED, \" +\n+            \"HAS_FILE =EXCLUDED.HAS_FILE, HAS_ATTRIBUTE = EXCLUDED.HAS_ATTRIBUTE, TYPE_ID = EXCLUDED.TYPE_ID\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_DB2 = \"MERGE INTO IDN_CONFIG_RESOURCE USING \" +\n+            \"\\\"SYSIBM\\\".DUAL ON (ID= ? ) WHEN MATCHED THEN UPDATE SET TENANT_ID = ?, NAME = ?, LAST_MODIFIED = ?, \" +\n+            \"HAS_FILE = ?, HAS_ATTRIBUTE = ?, TYPE_ID = ? WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, \" +\n+            \"CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) \" +\n+            \"VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_MSSQL = \"MERGE IDN_CONFIG_RESOURCE T USING \" +\n+            \"(VALUES  (?, ?, ?, ?, ?, ?, ?, ?)) S \" +\n+            \"(ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) ON T.ID = S.ID \" +\n+            \"WHEN MATCHED THEN UPDATE SET TENANT_ID = S.TENANT_ID, NAME = S.NAME, LAST_MODIFIED = S.LAST_MODIFIED, \" +\n+            \"HAS_FILE = S.HAS_FILE, HAS_ATTRIBUTE = S.HAS_ATTRIBUTE, TYPE_ID = S.TYPE_ID \" +\n+            \"WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,\" +\n+            \"TYPE_ID) VALUES (S.ID, S.TENANT_ID, S.NAME, S.CREATED_TIME, S.LAST_MODIFIED, S.HAS_FILE, S\" +\n+            \".HAS_ATTRIBUTE, S.TYPE_ID);\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_ORACLE = \"MERGE INTO IDN_CONFIG_RESOURCE USING dual ON \" +\n+            \"(ID=?) WHEN MATCHED THEN UPDATE SET TENANT_ID=?, NAME=? , LAST_MODIFIED=?, HAS_FILE=?, HAS_ATTRIBUTE=?, \" +\n+            \"TYPE_ID=? WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, CREATED_TIME, LAST_MODIFIED, HAS_FILE, \" +\n+            \"HAS_ATTRIBUTE, TYPE_ID) VALUES (?,?, ?,?,?, ?, ?, ? )\";", "originalCommit": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg2ODYzNA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401868634", "bodyText": "addressed in 5a0504e", "author": "AnuradhaSK", "createdAt": "2020-04-01T19:49:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTM0NA=="}], "type": "inlineReview", "revised_code": {"commit": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "chunk": "diff --git a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\nindex 5aa80276d31..aca1ce8435c 100644\n--- a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n+++ b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n\n@@ -91,27 +88,22 @@ public class SQLConstants {\n             \"LAST_MODIFIED = VALUES(LAST_MODIFIED), HAS_FILE = VALUES(HAS_FILE), HAS_ATTRIBUTE = VALUES\" +\n             \"(HAS_ATTRIBUTE), TYPE_ID = VALUES(TYPE_ID)\";\n     public static final String INSERT_OR_UPDATE_RESOURCE_POSTGRESQL = \"INSERT INTO IDN_CONFIG_RESOURCE\" +\n-            \"(ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) \" +\n+            \"(ID, TENANT_ID, NAME, CREATED_TIME, LAST_MODIFIED, HAS_FILE, HAS_ATTRIBUTE, TYPE_ID) \" +\n             \"VALUES(?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (ID) DO UPDATE \" +\n             \"SET TENANT_ID = EXCLUDED.TENANT_ID, NAME = EXCLUDED.NAME, LAST_MODIFIED = EXCLUDED.LAST_MODIFIED, \" +\n-            \"HAS_FILE =EXCLUDED.HAS_FILE, HAS_ATTRIBUTE = EXCLUDED.HAS_ATTRIBUTE, TYPE_ID = EXCLUDED.TYPE_ID\";\n-    public static final String INSERT_OR_UPDATE_RESOURCE_DB2 = \"MERGE INTO IDN_CONFIG_RESOURCE USING \" +\n-            \"\\\"SYSIBM\\\".DUAL ON (ID= ? ) WHEN MATCHED THEN UPDATE SET TENANT_ID = ?, NAME = ?, LAST_MODIFIED = ?, \" +\n-            \"HAS_FILE = ?, HAS_ATTRIBUTE = ?, TYPE_ID = ? WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, \" +\n-            \"CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) \" +\n-            \"VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";\n-    public static final String INSERT_OR_UPDATE_RESOURCE_MSSQL = \"MERGE IDN_CONFIG_RESOURCE T USING \" +\n-            \"(VALUES  (?, ?, ?, ?, ?, ?, ?, ?)) S \" +\n-            \"(ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,TYPE_ID) ON T.ID = S.ID \" +\n+            \"HAS_FILE = EXCLUDED.HAS_FILE, HAS_ATTRIBUTE = EXCLUDED.HAS_ATTRIBUTE, TYPE_ID = EXCLUDED.TYPE_ID\";\n+    public static final String INSERT_OR_UPDATE_RESOURCE_MSSQL_OR_DB2 = \"MERGE INTO IDN_CONFIG_RESOURCE T USING \" +\n+            \"(VALUES (?, ?, ?, ?, ?, ?, ?, ?)) S \" +\n+            \"(ID, TENANT_ID, NAME, CREATED_TIME, LAST_MODIFIED, HAS_FILE, HAS_ATTRIBUTE, TYPE_ID) ON T.ID = S.ID \" +\n             \"WHEN MATCHED THEN UPDATE SET TENANT_ID = S.TENANT_ID, NAME = S.NAME, LAST_MODIFIED = S.LAST_MODIFIED, \" +\n             \"HAS_FILE = S.HAS_FILE, HAS_ATTRIBUTE = S.HAS_ATTRIBUTE, TYPE_ID = S.TYPE_ID \" +\n-            \"WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, CREATED_TIME,LAST_MODIFIED,HAS_FILE, HAS_ATTRIBUTE,\" +\n+            \"WHEN NOT MATCHED THEN INSERT (ID, TENANT_ID, NAME, CREATED_TIME, LAST_MODIFIED, HAS_FILE, HAS_ATTRIBUTE,\" +\n             \"TYPE_ID) VALUES (S.ID, S.TENANT_ID, S.NAME, S.CREATED_TIME, S.LAST_MODIFIED, S.HAS_FILE, S\" +\n             \".HAS_ATTRIBUTE, S.TYPE_ID);\";\n     public static final String INSERT_OR_UPDATE_RESOURCE_ORACLE = \"MERGE INTO IDN_CONFIG_RESOURCE USING dual ON \" +\n-            \"(ID=?) WHEN MATCHED THEN UPDATE SET TENANT_ID=?, NAME=? , LAST_MODIFIED=?, HAS_FILE=?, HAS_ATTRIBUTE=?, \" +\n-            \"TYPE_ID=? WHEN NOT MATCHED THEN INSERT (ID,TENANT_ID,NAME, CREATED_TIME, LAST_MODIFIED, HAS_FILE, \" +\n-            \"HAS_ATTRIBUTE, TYPE_ID) VALUES (?,?, ?,?,?, ?, ?, ? )\";\n+            \"(ID = ?) WHEN MATCHED THEN UPDATE SET TENANT_ID = ?, NAME = ? , LAST_MODIFIED = ?, HAS_FILE = ?, \" +\n+            \"HAS_ATTRIBUTE = ?, TYPE_ID = ? WHEN NOT MATCHED THEN INSERT (ID, TENANT_ID, NAME, CREATED_TIME, \" +\n+            \"LAST_MODIFIED, HAS_FILE, HAS_ATTRIBUTE, TYPE_ID) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";\n     public static final String INSERT_OR_UPDATE_RESOURCE_MYSQL_WITHOUT_CREATED_TIME = \"INSERT INTO\\n\" +\n             \"  IDN_CONFIG_RESOURCE(\\n\" +\n             \"    ID,\\n\" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTY0Mw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401571643", "bodyText": "remove /n", "author": "emswbandara", "createdAt": "2020-04-01T12:20:34Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -99,11 +139,29 @@\n             \"    ATTR_VALUE\\n\" +\n             \"  )\\n\" +\n             \"VALUES(?, ?, ?, ?)\";\n+    public static final String INSERT_ATTRIBUTES_MSSQL_OR_DB2 = \"MERGE INTO IDN_CONFIG_ATTRIBUTE T USING \" +\n+            \"(VALUES (?, ?, ?, ?)\";\n+    public static final String INSERT_ATTRIBUTES_ORACLE = \"MERGE INTO IDN_CONFIG_ATTRIBUTE T \" +\n+            \"USING (SELECT  ? ID, ? RESOURCE_ID, ? ATTR_KEY, ? ATTR_VALUE from dual \";\n     public static final String UPDATE_ATTRIBUTES_H2 = \"MERGE INTO\\n\" +\n             \"  IDN_CONFIG_ATTRIBUTE KEY(ID) VALUES(?, ?, ?, ?)\";\n     public static final String INSERT_OR_UPDATE_ATTRIBUTES_MYSQL = \"ON DUPLICATE KEY UPDATE \" +\n             \"RESOURCE_ID = VALUES(RESOURCE_ID), ATTR_KEY = VALUES(ATTR_KEY), ATTR_VALUE = VALUES(ATTR_VALUE)\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTES_POSTGRESQL = \"ON CONFLICT(ID) DO UPDATE SET RESOURCE_ID = \" +\n+            \"EXCLUDED.RESOURCE_ID, ATTR_KEY = EXCLUDED.ATTR_KEY, \" +\n+            \"ATTR_VALUE = EXCLUDED.ATTR_VALUE\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTES_MSSQL_OR_DB2 = \") S (ID, RESOURCE_ID, ATTR_KEY, \" +\n+            \"ATTR_VALUE) ON T.ID = S.ID WHEN MATCHED THEN UPDATE SET RESOURCE_ID = S.RESOURCE_ID, \" +\n+            \"ATTR_KEY = S.ATTR_KEY, ATTR_VALUE = S.ATTR_VALUE WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, \" +\n+            \"ATTR_KEY, ATTR_VALUE) VALUES (S.ID, S.RESOURCE_ID, S.ATTR_KEY, S.ATTR_VALUE);\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTES_ORACLE = \") S ON (T.ID = S.ID) \" +\n+            \"WHEN MATCHED THEN UPDATE SET T.RESOURCE_ID = S.RESOURCE_ID, T.ATTR_KEY = S.ATTR_KEY, \" +\n+            \"T.ATTR_VALUE = S.ATTR_VALUE\\n\" +", "originalCommit": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg2ODUzMg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401868532", "bodyText": "addressed in 5a0504e", "author": "AnuradhaSK", "createdAt": "2020-04-01T19:49:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTY0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "chunk": "diff --git a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\nindex 5aa80276d31..aca1ce8435c 100644\n--- a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n+++ b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n\n@@ -142,22 +134,20 @@ public class SQLConstants {\n     public static final String INSERT_ATTRIBUTES_MSSQL_OR_DB2 = \"MERGE INTO IDN_CONFIG_ATTRIBUTE T USING \" +\n             \"(VALUES (?, ?, ?, ?)\";\n     public static final String INSERT_ATTRIBUTES_ORACLE = \"MERGE INTO IDN_CONFIG_ATTRIBUTE T \" +\n-            \"USING (SELECT  ? ID, ? RESOURCE_ID, ? ATTR_KEY, ? ATTR_VALUE from dual \";\n+            \"USING (SELECT ? ID, ? RESOURCE_ID, ? ATTR_KEY, ? ATTR_VALUE from dual \";\n     public static final String UPDATE_ATTRIBUTES_H2 = \"MERGE INTO\\n\" +\n             \"  IDN_CONFIG_ATTRIBUTE KEY(ID) VALUES(?, ?, ?, ?)\";\n     public static final String INSERT_OR_UPDATE_ATTRIBUTES_MYSQL = \"ON DUPLICATE KEY UPDATE \" +\n             \"RESOURCE_ID = VALUES(RESOURCE_ID), ATTR_KEY = VALUES(ATTR_KEY), ATTR_VALUE = VALUES(ATTR_VALUE)\";\n     public static final String INSERT_OR_UPDATE_ATTRIBUTES_POSTGRESQL = \"ON CONFLICT(ID) DO UPDATE SET RESOURCE_ID = \" +\n-            \"EXCLUDED.RESOURCE_ID, ATTR_KEY = EXCLUDED.ATTR_KEY, \" +\n-            \"ATTR_VALUE = EXCLUDED.ATTR_VALUE\";\n+            \"EXCLUDED.RESOURCE_ID, ATTR_KEY = EXCLUDED.ATTR_KEY, ATTR_VALUE = EXCLUDED.ATTR_VALUE\";\n     public static final String INSERT_OR_UPDATE_ATTRIBUTES_MSSQL_OR_DB2 = \") S (ID, RESOURCE_ID, ATTR_KEY, \" +\n             \"ATTR_VALUE) ON T.ID = S.ID WHEN MATCHED THEN UPDATE SET RESOURCE_ID = S.RESOURCE_ID, \" +\n             \"ATTR_KEY = S.ATTR_KEY, ATTR_VALUE = S.ATTR_VALUE WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, \" +\n             \"ATTR_KEY, ATTR_VALUE) VALUES (S.ID, S.RESOURCE_ID, S.ATTR_KEY, S.ATTR_VALUE);\";\n     public static final String INSERT_OR_UPDATE_ATTRIBUTES_ORACLE = \") S ON (T.ID = S.ID) \" +\n             \"WHEN MATCHED THEN UPDATE SET T.RESOURCE_ID = S.RESOURCE_ID, T.ATTR_KEY = S.ATTR_KEY, \" +\n-            \"T.ATTR_VALUE = S.ATTR_VALUE\\n\" +\n-            \"WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) \" +\n+            \"T.ATTR_VALUE = S.ATTR_VALUE WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) \" +\n             \"VALUES (S.ID, S.RESOURCE_ID, S.ATTR_KEY, S.ATTR_VALUE)\";\n     public static final String INSERT_ATTRIBUTE_KEY_VALUE_SQL = \", (?, ?, ?, ?)\";\n     public static final String INSERT_ATTRIBUTE_KEY_VALUE_ORACLE = \"UNION ALL \" +\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MjAwMg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401572002", "bodyText": "add space after ,", "author": "emswbandara", "createdAt": "2020-04-01T12:21:13Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java", "diffHunk": "@@ -114,6 +172,21 @@\n             \"ATTR_KEY = VALUES(ATTR_KEY), ATTR_VALUE = VALUES(ATTR_VALUE)\";\n     public static final String INSERT_OR_UPDATE_ATTRIBUTE_H2 = \"MERGE INTO IDN_CONFIG_ATTRIBUTE KEY(ID) VALUES(?, ?, \"\n             + \"?, ?)\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTE_POSTGRESQL = \"INSERT INTO IDN_CONFIG_ATTRIBUTE\" +\n+            \"(ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) VALUES(?, ?, ?, ?) ON CONFLICT(ID) \" +\n+            \"DO UPDATE SET RESOURCE_ID = EXCLUDED.RESOURCE_ID, ATTR_KEY = EXCLUDED.ATTR_KEY, \" +\n+            \"ATTR_VALUE = EXCLUDED.ATTR_VALUE\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTE_DB2 = \"MERGE INTO IDN_CONFIG_ATTRIBUTE USING \" +\n+            \"\\\"SYSIBM\\\".DUAL ON (ID= ?) WHEN MATCHED THEN UPDATE SET RESOURCE_ID = ?, ATTR_KEY = ?, ATTR_VALUE = ? \" +\n+            \"WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) VALUES(?, ?, ?, ?)\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTE_MSSQL = \"MERGE IDN_CONFIG_ATTRIBUTE T USING \" +\n+            \"(VALUES  (?, ?, ?, ?)) S (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) ON T.ID = S.ID \" +\n+            \"WHEN MATCHED THEN UPDATE SET RESOURCE_ID = S.RESOURCE_ID, ATTR_KEY = S.ATTR_KEY,\" +\n+            \"ATTR_VALUE = S.ATTR_VALUE WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) \" +\n+            \"VALUES (S.ID, S.RESOURCE_ID, S.ATTR_KEY, S.ATTR_VALUE);\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTE_ORACLE = \"MERGE INTO IDN_CONFIG_ATTRIBUTE USING dual \" +\n+            \"ON (ID = ?) WHEN MATCHED THEN UPDATE SET RESOURCE_ID=?, ATTR_KEY=? , ATTR_VALUE=? \" +\n+            \"WHEN NOT MATCHED THEN INSERT (ID,RESOURCE_ID,ATTR_KEY,  ATTR_VALUE) VALUES (?,?, ?, ?)\";", "originalCommit": "ff47c030b9c14da99a0a8781ef12c24ffd127ff3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg2ODQzMw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r401868433", "bodyText": "addressed in 5a0504e", "author": "AnuradhaSK", "createdAt": "2020-04-01T19:49:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MjAwMg=="}], "type": "inlineReview", "revised_code": {"commit": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "chunk": "diff --git a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\nindex 5aa80276d31..aca1ce8435c 100644\n--- a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n+++ b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/constant/SQLConstants.java\n\n@@ -174,19 +164,16 @@ public class SQLConstants {\n             + \"?, ?)\";\n     public static final String INSERT_OR_UPDATE_ATTRIBUTE_POSTGRESQL = \"INSERT INTO IDN_CONFIG_ATTRIBUTE\" +\n             \"(ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) VALUES(?, ?, ?, ?) ON CONFLICT(ID) \" +\n-            \"DO UPDATE SET RESOURCE_ID = EXCLUDED.RESOURCE_ID, ATTR_KEY = EXCLUDED.ATTR_KEY, \" +\n-            \"ATTR_VALUE = EXCLUDED.ATTR_VALUE\";\n-    public static final String INSERT_OR_UPDATE_ATTRIBUTE_DB2 = \"MERGE INTO IDN_CONFIG_ATTRIBUTE USING \" +\n-            \"\\\"SYSIBM\\\".DUAL ON (ID= ?) WHEN MATCHED THEN UPDATE SET RESOURCE_ID = ?, ATTR_KEY = ?, ATTR_VALUE = ? \" +\n-            \"WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) VALUES(?, ?, ?, ?)\";\n-    public static final String INSERT_OR_UPDATE_ATTRIBUTE_MSSQL = \"MERGE IDN_CONFIG_ATTRIBUTE T USING \" +\n+            \"DO UPDATE SET RESOURCE_ID = EXCLUDED.RESOURCE_ID, ATTR_KEY = EXCLUDED.ATTR_KEY, ATTR_VALUE = EXCLUDED\" +\n+            \".ATTR_VALUE\";\n+    public static final String INSERT_OR_UPDATE_ATTRIBUTE_MSSQL_OR_DB2 = \"MERGE INTO IDN_CONFIG_ATTRIBUTE T USING \" +\n             \"(VALUES  (?, ?, ?, ?)) S (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) ON T.ID = S.ID \" +\n             \"WHEN MATCHED THEN UPDATE SET RESOURCE_ID = S.RESOURCE_ID, ATTR_KEY = S.ATTR_KEY,\" +\n             \"ATTR_VALUE = S.ATTR_VALUE WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) \" +\n             \"VALUES (S.ID, S.RESOURCE_ID, S.ATTR_KEY, S.ATTR_VALUE);\";\n     public static final String INSERT_OR_UPDATE_ATTRIBUTE_ORACLE = \"MERGE INTO IDN_CONFIG_ATTRIBUTE USING dual \" +\n-            \"ON (ID = ?) WHEN MATCHED THEN UPDATE SET RESOURCE_ID=?, ATTR_KEY=? , ATTR_VALUE=? \" +\n-            \"WHEN NOT MATCHED THEN INSERT (ID,RESOURCE_ID,ATTR_KEY,  ATTR_VALUE) VALUES (?,?, ?, ?)\";\n+            \"ON (ID = ?) WHEN MATCHED THEN UPDATE SET RESOURCE_ID = ?, ATTR_KEY = ? , ATTR_VALUE = ? \" +\n+            \"WHEN NOT MATCHED THEN INSERT (ID, RESOURCE_ID, ATTR_KEY, ATTR_VALUE) VALUES (?, ?, ?, ?)\";\n     public static final String GET_ATTRIBUTE_SQL = \"SELECT\\n\" +\n             \"  ID,\\n\" +\n             \"  RESOURCE_ID,\\n\" +\n"}}, {"oid": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "url": "https://github.com/wso2/carbon-identity-framework/commit/5a0504e41b864eb30d7aa555f60249f9b40e79e9", "message": "Handel boolean value difference in oracle and mssql, modify and format SQL constants", "committedDate": "2020-04-01T19:47:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4MzcyNw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402083727", "bodyText": "@emswbandara please check", "author": "AnuradhaSK", "createdAt": "2020-04-02T06:41:40Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -621,8 +664,17 @@ public void addResource(Resource resource) throws ConfigurationManagementExcepti\n                             not create files. It is allowed to create a resource without files or attributes in order\n                             to allow file upload after resource creation.\n                             */\n-                            preparedStatement.setBoolean(++initialParameterIndex, false);\n-                            preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                            try {\n+                                if (isOracleDB() || isMSSqlDB()) {\n+                                    preparedStatement.setInt(++initialParameterIndex, 0);\n+                                    preparedStatement.setInt(++initialParameterIndex, isAttributeExists ? 1 : 0);\n+                                } else {\n+                                    preparedStatement.setBoolean(++initialParameterIndex, false);\n+                                    preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                                }\n+                            } catch (DataAccessException e) {\n+                                throw new RuntimeException(e);\n+                            }", "originalCommit": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4NTUzMg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402085532", "bodyText": "why we throw runtime exception here? can't we throw a server exception using handleServerException ?", "author": "emswbandara", "createdAt": "2020-04-02T06:46:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4MzcyNw=="}], "type": "inlineReview", "revised_code": {"commit": "b9d69a1ace1fb2380564347a0b2eaa96eb14a912", "chunk": "diff --git a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\nindex 33d431c7c24..59572f50704 100644\n--- a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\n+++ b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\n\n@@ -673,7 +673,7 @@ public class ConfigurationDAOImpl implements ConfigurationDAO {\n                                     preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n                                 }\n                             } catch (DataAccessException e) {\n-                                throw new RuntimeException(e);\n+                                throw new RuntimeException(\"Error occurred while checking the DB metadata.\", e);\n                             }\n                             preparedStatement.setString(++initialParameterIndex, resourceTypeId);\n                         }, resource, false);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMjc2MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402222760", "bodyText": "as per https://github.com/wso2/carbon-identity-framework/pull/2847/files#diff-5b637a3090fa921e05d00ba7a47c9860R1494 even in DB2 we need to use 1 or 0 right? please check", "author": "emswbandara", "createdAt": "2020-04-02T10:50:38Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -621,8 +664,17 @@ public void addResource(Resource resource) throws ConfigurationManagementExcepti\n                             not create files. It is allowed to create a resource without files or attributes in order\n                             to allow file upload after resource creation.\n                             */\n-                            preparedStatement.setBoolean(++initialParameterIndex, false);\n-                            preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                            try {\n+                                if (isOracleDB() || isMSSqlDB()) {\n+                                    preparedStatement.setInt(++initialParameterIndex, 0);\n+                                    preparedStatement.setInt(++initialParameterIndex, isAttributeExists ? 1 : 0);", "originalCommit": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1MTQ0OQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402251449", "bodyText": "If \"True\" is given SMALLINT DEFAULT 0 datatype convert it to 1 and store. Similarly, 0 will be saved for \"False\". Thus, I didn't change insertion and update queries related to DB2.  Only  for the select queries, it should be handled. #2843 (comment)", "author": "AnuradhaSK", "createdAt": "2020-04-02T11:48:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMjc2MA=="}], "type": "inlineReview", "revised_code": {"commit": "b9d69a1ace1fb2380564347a0b2eaa96eb14a912", "chunk": "diff --git a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\nindex 33d431c7c24..59572f50704 100644\n--- a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\n+++ b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\n\n@@ -673,7 +673,7 @@ public class ConfigurationDAOImpl implements ConfigurationDAO {\n                                     preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n                                 }\n                             } catch (DataAccessException e) {\n-                                throw new RuntimeException(e);\n+                                throw new RuntimeException(\"Error occurred while checking the DB metadata.\", e);\n                             }\n                             preparedStatement.setString(++initialParameterIndex, resourceTypeId);\n                         }, resource, false);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMzQ3NQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402223475", "bodyText": "check whether we need to add db2", "author": "emswbandara", "createdAt": "2020-04-02T10:52:08Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -886,8 +964,17 @@ private void updateMetadataForMYSQL(Resource resource, String resourceTypeId, bo\n                             not create files. It is allowed to create a resource without files or attributes in order\n                             to allow  file upload after resource creation.\n                             */\n-                            preparedStatement.setBoolean(++initialParameterIndex, false);\n-                            preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                            try {\n+                                if (isOracleDB() || isMSSqlDB()) {", "originalCommit": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NDEyMg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402254122", "bodyText": "#2843 (comment)", "author": "AnuradhaSK", "createdAt": "2020-04-02T11:53:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMzQ3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b9d69a1ace1fb2380564347a0b2eaa96eb14a912", "chunk": "diff --git a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\nindex 33d431c7c24..59572f50704 100644\n--- a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\n+++ b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\n\n@@ -973,7 +973,7 @@ public class ConfigurationDAOImpl implements ConfigurationDAO {\n                                     preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n                                 }\n                             } catch (DataAccessException e) {\n-                                throw new RuntimeException(e);\n+                                throw new RuntimeException(\"Error occurred while checking the DB metadata.\", e);\n                             }\n                             preparedStatement.setString(++initialParameterIndex, resourceTypeId);\n                         }, resource, false)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMzcyMg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402223722", "bodyText": "add a descripive error message to the exception", "author": "emswbandara", "createdAt": "2020-04-02T10:52:35Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -886,8 +964,17 @@ private void updateMetadataForMYSQL(Resource resource, String resourceTypeId, bo\n                             not create files. It is allowed to create a resource without files or attributes in order\n                             to allow  file upload after resource creation.\n                             */\n-                            preparedStatement.setBoolean(++initialParameterIndex, false);\n-                            preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                            try {\n+                                if (isOracleDB() || isMSSqlDB()) {\n+                                    preparedStatement.setInt(++initialParameterIndex, 0);\n+                                    preparedStatement.setInt(++initialParameterIndex, isAttributeExists ? 1 : 0);\n+                                } else {\n+                                    preparedStatement.setBoolean(++initialParameterIndex, false);\n+                                    preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n+                                }\n+                            } catch (DataAccessException e) {\n+                                throw new RuntimeException(e);", "originalCommit": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1OTY1NA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402259654", "bodyText": "addressed in b9d69a1", "author": "AnuradhaSK", "createdAt": "2020-04-02T12:03:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMzcyMg=="}], "type": "inlineReview", "revised_code": {"commit": "b9d69a1ace1fb2380564347a0b2eaa96eb14a912", "chunk": "diff --git a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\nindex 33d431c7c24..59572f50704 100644\n--- a/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\n+++ b/components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java\n\n@@ -973,7 +973,7 @@ public class ConfigurationDAOImpl implements ConfigurationDAO {\n                                     preparedStatement.setBoolean(++initialParameterIndex, isAttributeExists);\n                                 }\n                             } catch (DataAccessException e) {\n-                                throw new RuntimeException(e);\n+                                throw new RuntimeException(\"Error occurred while checking the DB metadata.\", e);\n                             }\n                             preparedStatement.setString(++initialParameterIndex, resourceTypeId);\n                         }, resource, false)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1MDg4NA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2843#discussion_r402250884", "bodyText": "DB2 check is required only here (in the select query) because it saves 1/0 even we insert/update true/false", "author": "AnuradhaSK", "createdAt": "2020-04-02T11:47:14Z", "path": "components/configuration-mgt/org.wso2.carbon.identity.configuration.mgt.core/src/main/java/org/wso2/carbon/identity/configuration/mgt/core/dao/impl/ConfigurationDAOImpl.java", "diffHunk": "@@ -1493,6 +1519,9 @@ public void deleteFiles(String resourceId) throws ConfigurationManagementExcepti\n                         String resourceLastModified = resultSet.getString(DB_SCHEMA_COLUMN_NAME_LAST_MODIFIED);\n                         String resourceCreatedTime = resultSet.getString(DB_SCHEMA_COLUMN_NAME_CREATED_TIME);\n                         String resourceHasFile = resultSet.getString(DB_SCHEMA_COLUMN_NAME_HAS_FILE);\n+                        if (StringUtils.equals(resourceHasFile, \"1\") && (isOracleDB() || isMSSqlDB() || isDB2DB())) {\n+                            resourceHasFile = \"true\";\n+                        }", "originalCommit": "5a0504e41b864eb30d7aa555f60249f9b40e79e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "b9d69a1ace1fb2380564347a0b2eaa96eb14a912", "url": "https://github.com/wso2/carbon-identity-framework/commit/b9d69a1ace1fb2380564347a0b2eaa96eb14a912", "message": "Add descriptive error message to RuntimeException", "committedDate": "2020-04-02T12:02:06Z", "type": "commit"}, {"oid": "72d2c84dd7ef0daeac2c0020e83c2887dfa2dad2", "url": "https://github.com/wso2/carbon-identity-framework/commit/72d2c84dd7ef0daeac2c0020e83c2887dfa2dad2", "message": "Remove RuntimeException by introducing boolean value prior to lambda expressions", "committedDate": "2020-04-02T14:06:39Z", "type": "commit"}]}