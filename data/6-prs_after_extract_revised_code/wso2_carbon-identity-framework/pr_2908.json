{"pr_number": 2908, "pr_title": "Fix SAML metadata URLs in tenant qualified URL mode", "pr_createdAt": "2020-04-29T07:50:26Z", "pr_url": "https://github.com/wso2/carbon-identity-framework/pull/2908", "timeline": [{"oid": "730ffa869c7e4c09817fcbd28c0f5cc973c3925a", "url": "https://github.com/wso2/carbon-identity-framework/commit/730ffa869c7e4c09817fcbd28c0f5cc973c3925a", "message": "Fix SAML metadata URLs in tenant qualified URL mode", "committedDate": "2020-04-29T07:34:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzMTQ1MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2908#discussion_r417131450", "bodyText": "Can't we use the ServiceURLBuilder here to get the URL?", "author": "ashensw", "createdAt": "2020-04-29T07:56:07Z", "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "diffHunk": "@@ -702,6 +578,173 @@ public IdentityProvider getResidentIdP(String tenantDomain)\n         return identityProvider;\n     }\n \n+    private String buildSAMLUrl(String urlFromConfigFile, String defaultContext, boolean appendTenantDomainInLegacyMode)\n+            throws IdentityProviderManagementServerException {\n+\n+        String url = urlFromConfigFile;\n+        if (StringUtils.isBlank(url)) {\n+            url = IdentityUtil.getServerURL(defaultContext, true, true);", "originalCommit": "730ffa869c7e4c09817fcbd28c0f5cc973c3925a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzNDIxMg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2908#discussion_r417134212", "bodyText": "Some of the SAML URLs don't need the tenant domain appended as a query param. For example the artifact resolve URL.\nIf we use the ServiceURLBuilder all of them will be appended with the tenant domain.\nBut i think we can improve and use two methods for the two cases.", "author": "mefarazath", "createdAt": "2020-04-29T08:01:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzMTQ1MA=="}], "type": "inlineReview", "revised_code": {"commit": "eb6c889f02ec69c459e4279cda6676536b291e50", "chunk": "diff --git a/components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java b/components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java\nindex 0554f66df30..1ee8752a1f9 100644\n--- a/components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java\n+++ b/components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java\n\n@@ -578,34 +579,49 @@ public class IdentityProviderManager implements IdpManager {\n         return identityProvider;\n     }\n \n-    private String buildSAMLUrl(String urlFromConfigFile, String defaultContext, boolean appendTenantDomainInLegacyMode)\n-            throws IdentityProviderManagementServerException {\n+    private String buildSAMLUrl(String urlFromConfigFile, String tenantDomain, String defaultContext,\n+                                boolean appendTenantDomainInLegacyMode) throws IdentityProviderManagementException {\n \n         String url = urlFromConfigFile;\n         if (StringUtils.isBlank(url)) {\n-            url = IdentityUtil.getServerURL(defaultContext, true, true);\n+            // Now we need to build the URL based on the default context.\n+            try {\n+                url = ServiceURLBuilder.create().addPath(defaultContext).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException ex) {\n+                throw new IdentityProviderManagementException(\"Error while building URL for context: \"\n+                        + defaultContext + \" for tenantDomain: \" + tenantDomain, ex);\n+            }\n         }\n \n-        if (StringUtils.isNotBlank(url) && appendTenantDomainInLegacyMode) {\n-            url += IdPManagementUtil.getTenantParameter();\n+        if (appendTenantDomainInLegacyMode) {\n+            Map<String, String[]> queryParams = new HashMap<>();\n+            queryParams.put(MultitenantConstants.TENANT_DOMAIN, new String[] {tenantDomain});\n+\n+            try {\n+                url = IdentityUtil.buildQueryUrl(url, queryParams);\n+            } catch (UnsupportedEncodingException e) {\n+                throw new IdentityProviderManagementException(\"Error while building URL for context: \"\n+                        + defaultContext + \" for tenantDomain: \" + tenantDomain, e);\n+            }\n         }\n+\n         return resolveAbsoluteURL(defaultContext, url);\n     }\n \n-    private FederatedAuthenticatorConfig buildSAMLProperties(IdentityProvider identityProvider)\n-            throws IdentityProviderManagementServerException {\n+    private FederatedAuthenticatorConfig buildSAMLProperties(IdentityProvider identityProvider, String tenantDomain)\n+            throws IdentityProviderManagementException {\n \n         String samlSSOUrl = buildSAMLUrl(IdentityUtil.getProperty(IdentityConstants.ServerConfig.SSO_IDP_URL),\n-                IdPManagementConstants.SAMLSSO, true);\n+                tenantDomain, IdPManagementConstants.SAMLSSO, true);\n \n         String samlLogoutUrl = buildSAMLUrl(IdentityUtil.getProperty(IdentityConstants.ServerConfig.SSO_IDP_URL),\n-                IdPManagementConstants.SAMLSSO, true);\n+                tenantDomain, IdPManagementConstants.SAMLSSO, true);\n \n         String samlECPUrl = buildSAMLUrl(IdentityUtil.getProperty(IdentityConstants.ServerConfig.SAML_ECP_URL),\n-                IdPManagementConstants.SAML_ECP_URL, true);\n+                tenantDomain, IdPManagementConstants.SAML_ECP_URL, true);\n \n         String samlArtifactUrl = buildSAMLUrl(IdentityUtil.getProperty(IdentityConstants.ServerConfig.SSO_ARTIFACT_URL),\n-                IdPManagementConstants.SSO_ARTIFACT_URL, false);\n+                tenantDomain, IdPManagementConstants.SSO_ARTIFACT_URL, false);\n \n         FederatedAuthenticatorConfig samlFederatedAuthConfig = IdentityApplicationManagementUtil\n                 .getFederatedAuthenticator(identityProvider.getFederatedAuthenticatorConfigs(),\n"}}, {"oid": "eb6c889f02ec69c459e4279cda6676536b291e50", "url": "https://github.com/wso2/carbon-identity-framework/commit/eb6c889f02ec69c459e4279cda6676536b291e50", "message": "Improve saml URL building logic", "committedDate": "2020-04-29T10:05:01Z", "type": "commit"}]}