{"pr_number": 2949, "pr_title": "Resolving the internal service URL for internal API calls", "pr_createdAt": "2020-05-20T08:33:05Z", "pr_url": "https://github.com/wso2/carbon-identity-framework/pull/2949", "timeline": [{"oid": "f13961463c8d55f9dc34f1d7267ea9df0c720bb3", "url": "https://github.com/wso2/carbon-identity-framework/commit/f13961463c8d55f9dc34f1d7267ea9df0c720bb3", "message": "Add internal host name for Identity Server internal calls", "committedDate": "2020-05-20T06:19:52Z", "type": "commit"}, {"oid": "ff1134cb99178dc4975174f4a118c383d77a98cc", "url": "https://github.com/wso2/carbon-identity-framework/commit/ff1134cb99178dc4975174f4a118c383d77a98cc", "message": "Change server host name config", "committedDate": "2020-05-20T06:19:52Z", "type": "commit"}, {"oid": "1bbefbaec98cbd9d3a0e3f8ced9652ad9972cac2", "url": "https://github.com/wso2/carbon-identity-framework/commit/1bbefbaec98cbd9d3a0e3f8ced9652ad9972cac2", "message": "Add server host name configuration", "committedDate": "2020-05-20T06:41:34Z", "type": "commit"}, {"oid": "1bbefbaec98cbd9d3a0e3f8ced9652ad9972cac2", "url": "https://github.com/wso2/carbon-identity-framework/commit/1bbefbaec98cbd9d3a0e3f8ced9652ad9972cac2", "message": "Add server host name configuration", "committedDate": "2020-05-20T06:41:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNDUyNQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r427904525", "bodyText": "Shall we change the below variable name also to absolutePublicUrl?", "author": "ashensw", "createdAt": "2020-05-20T10:27:30Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,7 +442,7 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {", "originalCommit": "1bbefbaec98cbd9d3a0e3f8ced9652ad9972cac2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMxNzgzNA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r434317834", "bodyText": "Fixed 718c689", "author": "GANGANI", "createdAt": "2020-06-03T05:34:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNDUyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "718c68995f4548bc59738aff6b21337e7d8164ea", "chunk": "diff --git a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\nindex d9ae28054e5..d9b6976a665 100644\n--- a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n+++ b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n\n@@ -444,15 +444,15 @@ public class DefaultServiceURLBuilder implements ServiceURLBuilder {\n \n         private String fetchAbsolutePublicUrl() throws URLBuilderException {\n \n-            StringBuilder absoluteUrl = new StringBuilder();\n-            absoluteUrl.append(protocol).append(\"://\");\n-            absoluteUrl.append(hostName.toLowerCase());\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            absolutePublicUrl.append(protocol).append(\"://\");\n+            absolutePublicUrl.append(hostName.toLowerCase());\n             // If it's well known HTTPS port, skip adding port.\n             if (port != IdentityCoreConstants.DEFAULT_HTTPS_PORT) {\n-                absoluteUrl.append(\":\").append(port);\n+                absolutePublicUrl.append(\":\").append(port);\n             }\n-            absoluteUrl.append(fetchRelativePublicUrl());\n-            return absoluteUrl.toString();\n+            absolutePublicUrl.append(fetchRelativePublicUrl());\n+            return absolutePublicUrl.toString();\n         }\n \n         private String fetchAbsoluteInternalUrl() throws URLBuilderException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNTc0OQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r427905749", "bodyText": "Shall we add a separate test case to cover getAbsoluteInternalURL as well?", "author": "ashensw", "createdAt": "2020-05-20T10:29:34Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "diffHunk": "@@ -311,20 +311,20 @@ public void testGetAbsoluteURL(String protocol, String hostName, int port, Strin\n                                 \"fragment\").addFragmentParameter(\"key2\", \"fragment\").addFragmentParameter(\"key3\",\n                                 \"fragment\").addFragmentParameter(\"key4\", \"fragment\").addParameter(\"key1\", \"v\")\n                                 .addParameter(\"key2\", \"v\").addParameter(\"key3\", \"v\").addParameter(\"key4\", \"v\").build()\n-                                .getAbsoluteInternalURL();\n+                                .getAbsolutePublicURL();", "originalCommit": "1bbefbaec98cbd9d3a0e3f8ced9652ad9972cac2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMxNzk1Nw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r434317957", "bodyText": "Fixed 2b1d267", "author": "GANGANI", "createdAt": "2020-06-03T05:35:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNTc0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0c97e69333943613c0cac9c3e6dd5c2f1eab66fd", "chunk": "diff --git a/components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java b/components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java\nindex 182c6be2b0e..08e6e047b24 100644\n--- a/components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java\n+++ b/components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java\n\n@@ -327,6 +370,52 @@ public class DefaultServiceURLBuilderTest {\n                         ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).build().getAbsolutePublicURL();\n             }\n \n+        } catch (URLBuilderException e) {\n+            // Mock behaviour, hence ignored.\n+        }\n+\n+        assertEquals(absoluteUrl, expected);\n+    }\n+\n+    @Test(dataProvider = \"getAbsoluteInternalURLData\")\n+    public void testGetAbsoluteInternalURL(String protocol, String serverHostName, int port,\n+                                         String tenantNameFromContext, boolean enableTenantURLSupport,\n+                                         Map<String, String> parameters, String fragment, Map<String, String> fragmentParams,\n+                                         String expected, String urlPath) {\n+\n+        mockStatic(IdentityUtil.class);\n+        when(IdentityUtil.getProperty(IdentityCoreConstants.SERVER_HOST_NAME)).thenReturn(serverHostName);\n+        when(CarbonUtils.getManagementTransport()).thenReturn(protocol);\n+        when(CarbonUtils.getTransportProxyPort(mockAxisConfiguration, protocol)).thenReturn(port);\n+        when(IdentityTenantUtil.isTenantQualifiedUrlsEnabled()).thenReturn(enableTenantURLSupport);\n+        when(IdentityTenantUtil.getTenantDomainFromContext()).thenReturn(tenantNameFromContext);\n+        when(PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantDomain()).thenReturn(\"carbon.super\");\n+\n+        String absoluteUrl = null;\n+\n+        try {\n+            if (MapUtils.isNotEmpty(parameters) && MapUtils.isNotEmpty(fragmentParams)) {\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addFragmentParameter(\"key1\",\n+                                \"fragment\").addFragmentParameter(\"key2\", \"fragment\").addFragmentParameter(\"key3\",\n+                                \"fragment\").addFragmentParameter(\"key4\", \"fragment\").addParameter(\"key1\", \"v\")\n+                                .addParameter(\"key2\", \"v\").addParameter(\"key3\", \"v\").addParameter(\"key4\", \"v\").build()\n+                                .getAbsoluteInternalURL();\n+            } else if (MapUtils.isNotEmpty(fragmentParams)){\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addFragmentParameter(\"key1\",\n+                                \"fragment\").addFragmentParameter(\"key2\", \"fragment\").addFragmentParameter(\"key3\",\n+                                \"fragment\").addFragmentParameter(\"key4\", \"fragment\").build().getAbsoluteInternalURL();\n+            } else if (MapUtils.isNotEmpty(parameters)){\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addParameter(\"key1\", \"v\")\n+                                .addParameter(\"key2\", \"v\").addParameter(\"key3\", \"v\").addParameter(\"key4\", \"v\").build()\n+                                .getAbsoluteInternalURL();\n+            } else {\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).build().getAbsoluteInternalURL();\n+            }\n+\n         } catch (URLBuilderException e) {\n             //Mock behaviour, hence ignored\n         }\n"}}, {"oid": "718c68995f4548bc59738aff6b21337e7d8164ea", "url": "https://github.com/wso2/carbon-identity-framework/commit/718c68995f4548bc59738aff6b21337e7d8164ea", "message": "Refactor variable", "committedDate": "2020-05-20T11:22:30Z", "type": "commit"}, {"oid": "2b1d2672a9098a2553b55ed732619275bc23ae27", "url": "https://github.com/wso2/carbon-identity-framework/commit/2b1d2672a9098a2553b55ed732619275bc23ae27", "message": "Add unit tests", "committedDate": "2020-06-03T05:32:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyNzI3MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436527270", "bodyText": "here code from line 244 to 256 seems to be duplicated from code in line 226 to 238.. shall we move it to a common method?", "author": "emswbandara", "createdAt": "2020-06-08T08:17:26Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -236,6 +238,24 @@ private String fetchHostName() throws URLBuilderException {\n         return hostName;\n     }\n \n+    private String fetchInternalHostName() throws URLBuilderException {\n+\n+        String internalHostName = IdentityUtil.getProperty(IdentityCoreConstants.SERVER_HOST_NAME);\n+        try {", "originalCommit": "2b1d2672a9098a2553b55ed732619275bc23ae27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxNTQyMQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436615421", "bodyText": "Fixed 0c97e69", "author": "GANGANI", "createdAt": "2020-06-08T11:01:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyNzI3MA=="}], "type": "inlineReview", "revised_code": {"commit": "0c97e69333943613c0cac9c3e6dd5c2f1eab66fd", "chunk": "diff --git a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\nindex d9b6976a665..61133c4811b 100644\n--- a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n+++ b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n\n@@ -238,24 +249,6 @@ public class DefaultServiceURLBuilder implements ServiceURLBuilder {\n         return hostName;\n     }\n \n-    private String fetchInternalHostName() throws URLBuilderException {\n-\n-        String internalHostName = IdentityUtil.getProperty(IdentityCoreConstants.SERVER_HOST_NAME);\n-        try {\n-            if (StringUtils.isBlank(internalHostName)) {\n-                internalHostName = NetworkUtils.getLocalHostname();\n-            }\n-        } catch (SocketException e) {\n-            throw new URLBuilderException(String.format(\"Error while trying to resolve the internal \" +\n-                    \"hostname %s from the system\", internalHostName), e);\n-        }\n-\n-        if (StringUtils.isNotBlank(internalHostName) && internalHostName.endsWith(\"/\")) {\n-            internalHostName = internalHostName.substring(0, internalHostName.length() - 1);\n-        }\n-        return internalHostName;\n-    }\n-\n     private Integer fetchPort() {\n \n         String mgtTransport = CarbonUtils.getManagementTransport();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyNzk5Mw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436527993", "bodyText": "can protocol be null here? if so handle null check.", "author": "emswbandara", "createdAt": "2020-06-08T08:18:54Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +442,30 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            absolutePublicUrl.append(protocol).append(\"://\");", "originalCommit": "2b1d2672a9098a2553b55ed732619275bc23ae27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxNTM2MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436615360", "bodyText": "Fixed 0c97e69", "author": "GANGANI", "createdAt": "2020-06-08T11:01:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyNzk5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0c97e69333943613c0cac9c3e6dd5c2f1eab66fd", "chunk": "diff --git a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\nindex d9b6976a665..61133c4811b 100644\n--- a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n+++ b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n\n@@ -445,6 +438,12 @@ public class DefaultServiceURLBuilder implements ServiceURLBuilder {\n         private String fetchAbsolutePublicUrl() throws URLBuilderException {\n \n             StringBuilder absolutePublicUrl = new StringBuilder();\n+            if (StringUtils.isBlank(protocol)) {\n+                throw new URLBuilderException(\"Protocol of service URL is not available\");\n+            }\n+            if (StringUtils.isBlank(hostName)) {\n+                throw new URLBuilderException(\"Hostname of service URL is not available\");\n+            }\n             absolutePublicUrl.append(protocol).append(\"://\");\n             absolutePublicUrl.append(hostName.toLowerCase());\n             // If it's well known HTTPS port, skip adding port.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyODA2Mw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436528063", "bodyText": "can hostName be null here? if so handle null check.", "author": "emswbandara", "createdAt": "2020-06-08T08:19:05Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +442,30 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            absolutePublicUrl.append(protocol).append(\"://\");\n+            absolutePublicUrl.append(hostName.toLowerCase());", "originalCommit": "2b1d2672a9098a2553b55ed732619275bc23ae27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxNTMwMQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436615301", "bodyText": "Fixed 0c97e69", "author": "GANGANI", "createdAt": "2020-06-08T11:01:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUyODA2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0c97e69333943613c0cac9c3e6dd5c2f1eab66fd", "chunk": "diff --git a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\nindex d9b6976a665..61133c4811b 100644\n--- a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n+++ b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n\n@@ -445,6 +438,12 @@ public class DefaultServiceURLBuilder implements ServiceURLBuilder {\n         private String fetchAbsolutePublicUrl() throws URLBuilderException {\n \n             StringBuilder absolutePublicUrl = new StringBuilder();\n+            if (StringUtils.isBlank(protocol)) {\n+                throw new URLBuilderException(\"Protocol of service URL is not available\");\n+            }\n+            if (StringUtils.isBlank(hostName)) {\n+                throw new URLBuilderException(\"Hostname of service URL is not available\");\n+            }\n             absolutePublicUrl.append(protocol).append(\"://\");\n             absolutePublicUrl.append(hostName.toLowerCase());\n             // If it's well known HTTPS port, skip adding port.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMDk5MQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436530991", "bodyText": "use standard comment format add space after // and add fullstop at end.", "author": "emswbandara", "createdAt": "2020-06-08T08:24:33Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "diffHunk": "@@ -304,6 +347,52 @@ public void testGetAbsoluteURL(String protocol, String hostName, int port, Strin\n \n         String absoluteUrl = null;\n \n+        try {\n+            if (MapUtils.isNotEmpty(parameters) && MapUtils.isNotEmpty(fragmentParams)) {\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addFragmentParameter(\"key1\",\n+                                \"fragment\").addFragmentParameter(\"key2\", \"fragment\").addFragmentParameter(\"key3\",\n+                                \"fragment\").addFragmentParameter(\"key4\", \"fragment\").addParameter(\"key1\", \"v\")\n+                                .addParameter(\"key2\", \"v\").addParameter(\"key3\", \"v\").addParameter(\"key4\", \"v\").build()\n+                                .getAbsolutePublicURL();\n+            } else if (MapUtils.isNotEmpty(fragmentParams)){\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addFragmentParameter(\"key1\",\n+                                \"fragment\").addFragmentParameter(\"key2\", \"fragment\").addFragmentParameter(\"key3\",\n+                                \"fragment\").addFragmentParameter(\"key4\", \"fragment\").build().getAbsolutePublicURL();\n+            } else if (MapUtils.isNotEmpty(parameters)){\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).addParameter(\"key1\", \"v\")\n+                                .addParameter(\"key2\", \"v\").addParameter(\"key3\", \"v\").addParameter(\"key4\", \"v\").build()\n+                                .getAbsolutePublicURL();\n+            } else {\n+                absoluteUrl =\n+                        ServiceURLBuilder.create().addPath(urlPath).setFragment(fragment).build().getAbsolutePublicURL();\n+            }\n+\n+        } catch (URLBuilderException e) {\n+            //Mock behaviour, hence ignored", "originalCommit": "2b1d2672a9098a2553b55ed732619275bc23ae27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxNTE4Mw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436615183", "bodyText": "Fixed 0c97e69", "author": "GANGANI", "createdAt": "2020-06-08T11:01:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzMDk5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "0c97e69333943613c0cac9c3e6dd5c2f1eab66fd", "chunk": "diff --git a/components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java b/components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java\nindex 0854fd292a7..08e6e047b24 100644\n--- a/components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java\n+++ b/components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java\n\n@@ -371,7 +371,7 @@ public class DefaultServiceURLBuilderTest {\n             }\n \n         } catch (URLBuilderException e) {\n-            //Mock behaviour, hence ignored\n+            // Mock behaviour, hence ignored.\n         }\n \n         assertEquals(absoluteUrl, expected);\n"}}, {"oid": "0c97e69333943613c0cac9c3e6dd5c2f1eab66fd", "url": "https://github.com/wso2/carbon-identity-framework/commit/0c97e69333943613c0cac9c3e6dd5c2f1eab66fd", "message": "Address comments", "committedDate": "2020-06-08T11:00:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzMjE1OQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436632159", "bodyText": "let's add the null check for internalHostName as well.", "author": "emswbandara", "createdAt": "2020-06-08T11:39:26Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +435,42 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            if (StringUtils.isBlank(protocol)) {\n+                throw new URLBuilderException(\"Protocol of service URL is not available\");\n+            }\n+            if (StringUtils.isBlank(hostName)) {\n+                throw new URLBuilderException(\"Hostname of service URL is not available\");\n+            }\n+            absolutePublicUrl.append(protocol).append(\"://\");\n+            absolutePublicUrl.append(hostName.toLowerCase());\n+            // If it's well known HTTPS port, skip adding port.\n+            if (port != IdentityCoreConstants.DEFAULT_HTTPS_PORT) {\n+                absolutePublicUrl.append(\":\").append(port);\n+            }\n+            absolutePublicUrl.append(fetchRelativePublicUrl());\n+            return absolutePublicUrl.toString();\n+        }\n+\n+        private String fetchAbsoluteInternalUrl() throws URLBuilderException {\n \n-            StringBuilder absoluteUrl = new StringBuilder();\n-            absoluteUrl.append(protocol).append(\"://\");\n-            absoluteUrl.append(hostName.toLowerCase());\n+            StringBuilder absoluteInternalUrl = new StringBuilder();\n+            if (StringUtils.isBlank(protocol)) {\n+                throw new URLBuilderException(\"Protocol of service URL is not available\");\n+            }\n+            if (StringUtils.isBlank(hostName)) {", "originalCommit": "0c97e69333943613c0cac9c3e6dd5c2f1eab66fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzMzY2MQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436633661", "bodyText": "Fixed 7a8092b", "author": "GANGANI", "createdAt": "2020-06-08T11:42:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzMjE1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "7a8092b90d4e91354b326e60bdef0c9b34ef10cb", "chunk": "diff --git a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\nindex 61133c4811b..d3276996309 100644\n--- a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n+++ b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n\n@@ -460,8 +460,8 @@ public class DefaultServiceURLBuilder implements ServiceURLBuilder {\n             if (StringUtils.isBlank(protocol)) {\n                 throw new URLBuilderException(\"Protocol of service URL is not available\");\n             }\n-            if (StringUtils.isBlank(hostName)) {\n-                throw new URLBuilderException(\"Hostname of service URL is not available\");\n+            if (StringUtils.isBlank(internalHostName)) {\n+                throw new URLBuilderException(\"Internal hostname of service URL is not available\");\n             }\n             absoluteInternalUrl.append(protocol).append(\"://\");\n             absoluteInternalUrl.append(internalHostName.toLowerCase());\n"}}, {"oid": "7a8092b90d4e91354b326e60bdef0c9b34ef10cb", "url": "https://github.com/wso2/carbon-identity-framework/commit/7a8092b90d4e91354b326e60bdef0c9b34ef10cb", "message": "Null check for internal host name", "committedDate": "2020-06-08T11:41:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4MzcwNg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436683706", "bodyText": "Shall we rename this for proxyHostName", "author": "malithie", "createdAt": "2020-06-08T13:09:53Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -252,29 +265,33 @@ private Integer fetchPort() {\n \n         private String protocol;\n         private String hostName;", "originalCommit": "7a8092b90d4e91354b326e60bdef0c9b34ef10cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcyNTk2OQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436725969", "bodyText": "Fixed 505c8f4", "author": "GANGANI", "createdAt": "2020-06-08T13:57:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4MzcwNg=="}], "type": "inlineReview", "revised_code": {"commit": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc", "chunk": "diff --git a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\nindex d3276996309..a09ca53b4e6 100644\n--- a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n+++ b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n\n@@ -264,7 +264,7 @@ public class DefaultServiceURLBuilder implements ServiceURLBuilder {\n     private class ServiceURLImpl implements ServiceURL {\n \n         private String protocol;\n-        private String hostName;\n+        private String proxyHostName;\n         private String internalHostName;\n         private int port;\n         private String tenantDomain;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4NDM1NQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436684355", "bodyText": "Also this one as fetchProxyHostName", "author": "malithie", "createdAt": "2020-06-08T13:10:33Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -80,14 +81,15 @@ public ServiceURL build() throws URLBuilderException {\n \n         String protocol = fetchProtocol();\n         String hostName = fetchHostName();", "originalCommit": "7a8092b90d4e91354b326e60bdef0c9b34ef10cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcyNTgwMw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r436725803", "bodyText": "Fixed 505c8f4", "author": "GANGANI", "createdAt": "2020-06-08T13:57:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4NDM1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc", "chunk": "diff --git a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\nindex d3276996309..a09ca53b4e6 100644\n--- a/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n+++ b/components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java\n\n@@ -80,7 +80,7 @@ public class DefaultServiceURLBuilder implements ServiceURLBuilder {\n     public ServiceURL build() throws URLBuilderException {\n \n         String protocol = fetchProtocol();\n-        String hostName = fetchHostName();\n+        String proxyHostName = fetchProxyHostName();\n         String internalHostName = fetchInternalHostName();\n         int port = fetchPort();\n         String tenantDomain = resolveTenantDomain();\n"}}, {"oid": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc", "url": "https://github.com/wso2/carbon-identity-framework/commit/505c8f4e1f9f23a167ac4bac3b67bac5bab186cc", "message": "Refactor proxy host name", "committedDate": "2020-06-08T13:55:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5Mzk1OA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r487893958", "bodyText": "This component did not go in a released product version yet right? We have changed the interface method name here.", "author": "janakamarasena", "createdAt": "2020-09-14T13:02:15Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/ServiceURL.java", "diffHunk": "@@ -37,7 +37,7 @@\n      *\n      * @return String of the host name.\n      */\n-    String getHostName();\n+    String getProxyHostName();", "originalCommit": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4ODgyOQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r488388829", "bodyText": "The framework version with this interface is not yet available in the released product.", "author": "GANGANI", "createdAt": "2020-09-15T05:08:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5Mzk1OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTEwOA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r487895108", "bodyText": "Add a fullstop at the end. Check other places as well.", "author": "janakamarasena", "createdAt": "2020-09-14T13:04:09Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -418,17 +435,42 @@ public String getRelativeInternalURL() {\n             return relativeInternalUrl;\n         }\n \n-        private String fetchAbsoluteUrl() throws URLBuilderException {\n+        private String fetchAbsolutePublicUrl() throws URLBuilderException {\n+\n+            StringBuilder absolutePublicUrl = new StringBuilder();\n+            if (StringUtils.isBlank(protocol)) {\n+                throw new URLBuilderException(\"Protocol of service URL is not available\");", "originalCommit": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4NzkyMQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r488387921", "bodyText": "Fixed beb53f7", "author": "GANGANI", "createdAt": "2020-09-15T05:05:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTEwOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTU0MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r487895540", "bodyText": "get \"https\" to a constant and reuse in other places as well.", "author": "janakamarasena", "createdAt": "2020-09-14T13:04:51Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/test/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilderTest.java", "diffHunk": "@@ -199,7 +203,7 @@ public void testAddFragmentParameter() {\n     public void testAddFragmentParameters() {\n \n         String fragment = null;\n-\n+        when(CarbonUtils.getManagementTransport()).thenReturn(\"https\");", "originalCommit": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4Nzk3Mg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r488387972", "bodyText": "Fixed beb53f7", "author": "GANGANI", "createdAt": "2020-09-15T05:05:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg5NTU0MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2NDA2MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r489364060", "bodyText": "Exceeds 120 characters", "author": "Abilashini", "createdAt": "2020-09-16T11:28:37Z", "path": "components/identity-core/org.wso2.carbon.identity.core/src/main/java/org/wso2/carbon/identity/core/internal/DefaultServiceURLBuilder.java", "diffHunk": "@@ -79,15 +80,16 @@ public ServiceURLBuilder addPath(String... paths) {\n     public ServiceURL build() throws URLBuilderException {\n \n         String protocol = fetchProtocol();\n-        String hostName = fetchHostName();\n+        String proxyHostName = fetchProxyHostName();\n+        String internalHostName = fetchInternalHostName();\n         int port = fetchPort();\n         String tenantDomain = resolveTenantDomain();\n         String proxyContextPath = ServerConfiguration.getInstance().getFirstProperty(PROXY_CONTEXT_PATH);\n         String resolvedFragment = buildFragment(fragment, fragmentParams);\n         String urlPath = getResolvedUrlPath(tenantDomain);\n \n-        return new ServiceURLImpl(protocol, hostName, port, tenantDomain, proxyContextPath, urlPath, parameters,\n-                resolvedFragment);\n+        return new ServiceURLImpl(protocol, proxyHostName, internalHostName, port, tenantDomain, proxyContextPath, urlPath,", "originalCommit": "505c8f4e1f9f23a167ac4bac3b67bac5bab186cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMjAwNA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2949#discussion_r489602004", "bodyText": "This has already fixed", "author": "GANGANI", "createdAt": "2020-09-16T17:25:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2NDA2MA=="}], "type": "inlineReview", "revised_code": null}]}