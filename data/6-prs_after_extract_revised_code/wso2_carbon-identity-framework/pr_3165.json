{"pr_number": 3165, "pr_title": "[Fix] Non-existing roles as provisioning roles", "pr_createdAt": "2020-10-13T17:54:01Z", "pr_url": "https://github.com/wso2/carbon-identity-framework/pull/3165", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3OTAxMw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/3165#discussion_r504179013", "bodyText": "I assume you want to show the list of non existing roles in the error response. In that case, this logic seems not to work when 2+ non-existing roles are given. In the 2nd iteration this will replace \"1st_role,\" with \"2nd_role\" instead of appending", "author": "pulasthi7", "createdAt": "2020-10-13T18:43:25Z", "path": "components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java", "diffHunk": "@@ -2880,4 +2883,43 @@ private String getIDPNameByMetadataProperty(Connection dbConnection, String prop\n \n         return idPName;\n     }\n+\n+    /**\n+     * Validate whether the outbound provisioning roles does exist.\n+     *\n+     * @param identityProvider IdentityProvider.\n+     * @param tenantDomain     Tenant Domain.\n+     * @throws IdentityProviderManagementException If an error occurred while checking for role existence.\n+     */\n+    private void validateOutboundProvisioningRoles(IdentityProvider identityProvider, String tenantDomain)\n+            throws IdentityProviderManagementException {\n+\n+        String provisioningRole = identityProvider.getProvisioningRole();\n+        if (StringUtils.isBlank(provisioningRole)) {\n+            return;\n+        }\n+        String[] outboundProvisioningRoles = StringUtils.split(provisioningRole, \",\");\n+\n+        try {\n+            String notExistingRoles = null;\n+            RoleManagementService roleManagementService =\n+                    IdpMgtServiceComponentHolder.getInstance().getRoleManagementService();\n+            for (String roleName : outboundProvisioningRoles) {\n+                if (StringUtils.isNotBlank(notExistingRoles)) {\n+                    notExistingRoles = notExistingRoles + \",\";\n+                }\n+                if (!roleManagementService.isExistingRoleName(roleName, tenantDomain)) {\n+                    notExistingRoles = roleName;", "originalCommit": "b90664d65c4a684c2b1b21561752b984f278edc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwOTM0Nw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/3165#discussion_r504409347", "bodyText": "Fixed: 3b8457c", "author": "somindatommy", "createdAt": "2020-10-14T05:25:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3OTAxMw=="}], "type": "inlineReview", "revised_code": {"commit": "967eea8b87cf20a5310005e358379d47a53ad282", "chunk": "diff --git a/components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java b/components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java\nindex fa4fd0d850c..694f753bee4 100644\n--- a/components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java\n+++ b/components/idp-mgt/org.wso2.carbon.idp.mgt/src/main/java/org/wso2/carbon/idp/mgt/IdentityProviderManager.java\n\n@@ -2883,43 +2916,4 @@ public class IdentityProviderManager implements IdpManager {\n \n         return idPName;\n     }\n-\n-    /**\n-     * Validate whether the outbound provisioning roles does exist.\n-     *\n-     * @param identityProvider IdentityProvider.\n-     * @param tenantDomain     Tenant Domain.\n-     * @throws IdentityProviderManagementException If an error occurred while checking for role existence.\n-     */\n-    private void validateOutboundProvisioningRoles(IdentityProvider identityProvider, String tenantDomain)\n-            throws IdentityProviderManagementException {\n-\n-        String provisioningRole = identityProvider.getProvisioningRole();\n-        if (StringUtils.isBlank(provisioningRole)) {\n-            return;\n-        }\n-        String[] outboundProvisioningRoles = StringUtils.split(provisioningRole, \",\");\n-\n-        try {\n-            String notExistingRoles = null;\n-            RoleManagementService roleManagementService =\n-                    IdpMgtServiceComponentHolder.getInstance().getRoleManagementService();\n-            for (String roleName : outboundProvisioningRoles) {\n-                if (StringUtils.isNotBlank(notExistingRoles)) {\n-                    notExistingRoles = notExistingRoles + \",\";\n-                }\n-                if (!roleManagementService.isExistingRoleName(roleName, tenantDomain)) {\n-                    notExistingRoles = roleName;\n-                }\n-            }\n-            if (StringUtils.isNotBlank(notExistingRoles)) {\n-                throw IdPManagementUtil.handleClientException(\n-                        IdPManagementConstants.ErrorMessage.ERROR_CODE_NOT_EXISTING_OUTBOUND_PROVISIONING_ROLE,\n-                        notExistingRoles);\n-            }\n-        } catch (IdentityRoleManagementException e) {\n-            throw IdPManagementUtil.handleServerException(\n-                    IdPManagementConstants.ErrorMessage.ERROR_CODE_VALIDATING_OUTBOUND_PROVISIONING_ROLES, null, e);\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3OTY3MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/3165#discussion_r504179670", "bodyText": "are we handling this exception properly? In case of this exception, we need to have the old behavior, which is to continue without validation", "author": "pulasthi7", "createdAt": "2020-10-13T18:44:38Z", "path": "components/role-mgt/org.wso2.carbon.identity.role.mgt.core/src/main/java/org/wso2/carbon/identity/role/mgt/core/RoleManagementService.java", "diffHunk": "@@ -175,4 +175,17 @@ RoleBasicInfo setPermissionsForRole(String roleID, List<String> permissions, Str\n      * @throws IdentityRoleManagementException IdentityRoleManagementException.\n      */\n     boolean isExistingRole(String roleID, String tenantDomain) throws IdentityRoleManagementException;\n+\n+    /**\n+     * Check whether the given role name exist.\n+     *\n+     * @param roleName     Role name.\n+     * @param tenantDomain Tenant domain.\n+     * @return {@code true} if the the given role ID exist.\n+     * @throws IdentityRoleManagementException IdentityRoleManagementException.\n+     */\n+    default boolean isExistingRoleName(String roleName, String tenantDomain) throws IdentityRoleManagementException {\n+\n+        throw new IdentityRoleManagementException(\"isExistingRoleName method is not implemented\");", "originalCommit": "b90664d65c4a684c2b1b21561752b984f278edc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwOTQzNg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/3165#discussion_r504409436", "bodyText": "Fixed: 3b8457c", "author": "somindatommy", "createdAt": "2020-10-14T05:26:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3OTY3MA=="}], "type": "inlineReview", "revised_code": {"commit": "967eea8b87cf20a5310005e358379d47a53ad282", "chunk": "diff --git a/components/role-mgt/org.wso2.carbon.identity.role.mgt.core/src/main/java/org/wso2/carbon/identity/role/mgt/core/RoleManagementService.java b/components/role-mgt/org.wso2.carbon.identity.role.mgt.core/src/main/java/org/wso2/carbon/identity/role/mgt/core/RoleManagementService.java\nindex 9111409214a..ff73a0e8902 100644\n--- a/components/role-mgt/org.wso2.carbon.identity.role.mgt.core/src/main/java/org/wso2/carbon/identity/role/mgt/core/RoleManagementService.java\n+++ b/components/role-mgt/org.wso2.carbon.identity.role.mgt.core/src/main/java/org/wso2/carbon/identity/role/mgt/core/RoleManagementService.java\n\n@@ -175,17 +175,4 @@ public interface RoleManagementService {\n      * @throws IdentityRoleManagementException IdentityRoleManagementException.\n      */\n     boolean isExistingRole(String roleID, String tenantDomain) throws IdentityRoleManagementException;\n-\n-    /**\n-     * Check whether the given role name exist.\n-     *\n-     * @param roleName     Role name.\n-     * @param tenantDomain Tenant domain.\n-     * @return {@code true} if the the given role ID exist.\n-     * @throws IdentityRoleManagementException IdentityRoleManagementException.\n-     */\n-    default boolean isExistingRoleName(String roleName, String tenantDomain) throws IdentityRoleManagementException {\n-\n-        throw new IdentityRoleManagementException(\"isExistingRoleName method is not implemented\");\n-    }\n }\n"}}, {"oid": "967eea8b87cf20a5310005e358379d47a53ad282", "url": "https://github.com/wso2/carbon-identity-framework/commit/967eea8b87cf20a5310005e358379d47a53ad282", "message": "Refactoring error messages", "committedDate": "2020-10-14T10:14:13Z", "type": "commit"}, {"oid": "2724f22f051c970456628d0c2103b1fab9f94c63", "url": "https://github.com/wso2/carbon-identity-framework/commit/2724f22f051c970456628d0c2103b1fab9f94c63", "message": "[Fix] Non-existing roles as provisioning roles", "committedDate": "2020-10-14T10:14:39Z", "type": "commit"}, {"oid": "536a74c51345b05e84630e4cdda5378fc92c7ba5", "url": "https://github.com/wso2/carbon-identity-framework/commit/536a74c51345b05e84630e4cdda5378fc92c7ba5", "message": "handling NotImplementedException", "committedDate": "2020-10-14T10:14:40Z", "type": "commit"}, {"oid": "10179be9cd5a1e194a0c555ca341cc439a8d1e06", "url": "https://github.com/wso2/carbon-identity-framework/commit/10179be9cd5a1e194a0c555ca341cc439a8d1e06", "message": "Refactoring role validation error message", "committedDate": "2020-10-14T10:14:40Z", "type": "commit"}, {"oid": "10179be9cd5a1e194a0c555ca341cc439a8d1e06", "url": "https://github.com/wso2/carbon-identity-framework/commit/10179be9cd5a1e194a0c555ca341cc439a8d1e06", "message": "Refactoring role validation error message", "committedDate": "2020-10-14T10:14:40Z", "type": "forcePushed"}]}