{"pr_number": 2994, "pr_title": "Avoid repeated DB queries when external claims are retrieving from DB.", "pr_createdAt": "2020-07-01T08:55:19Z", "pr_url": "https://github.com/wso2/carbon-identity-framework/pull/2994", "timeline": [{"oid": "745a2309a7dc1851b66217cb81e423ae8ce512e1", "url": "https://github.com/wso2/carbon-identity-framework/commit/745a2309a7dc1851b66217cb81e423ae8ce512e1", "message": "Fixing unnecessary repeated DB calls when external claims are retrieved.", "committedDate": "2020-06-30T07:27:04Z", "type": "commit"}, {"oid": "c68125edc35c06cdbe9a2208821c46ea4cc4cfea", "url": "https://github.com/wso2/carbon-identity-framework/commit/c68125edc35c06cdbe9a2208821c46ea4cc4cfea", "message": "Fixing the formatting issues and requested changes.", "committedDate": "2020-06-30T07:27:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyMzQ0MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2994#discussion_r448223440", "bodyText": "Suggested change", "author": "tharindu-bandara", "createdAt": "2020-07-01T09:04:14Z", "path": "components/claim-mgt/org.wso2.carbon.identity.claim.metadata.mgt/src/main/java/org/wso2/carbon/identity/claim/metadata/mgt/dao/ExternalClaimDAO.java", "diffHunk": "@@ -259,10 +243,61 @@ private String getClaimMapping(Connection connection, int externalClaimId, int t\n         if (StringUtils.isBlank(mappedLocalClaimURI)) {\n             throw new ClaimMetadataException(\"Invalid external claim URI. Claim mapping cannot be empty.\");\n         }\n-\n         return mappedLocalClaimURI;\n     }\n \n+    /**\n+     * This method retrieve the external claim, mapped URI,claim properties of the given claimDialectURI\n+     *\n+     * @param connection connection to the DB\n+     * @param claimDialectURI claimDialectURI to retrieve external claims\n+     * @param tenantId  tenantID of the claims to be retrieved\n+     * @return  List of External claims\n+     * @throws ClaimMetadataException\n+     */\n+    private List<ExternalClaim> getExternalClaimsFromDB(Connection connection, String claimDialectURI, int tenantId)\n+            throws ClaimMetadataException {\n+\n+        Map<Integer, ExternalClaim> claimMap = new HashMap<>();\n+        Map<String, String> propmap;\n+\n+        PreparedStatement prepStmt = null;\n+        ResultSet rs = null;\n+\n+        String query = SQLConstants.GET_CLAIMS;\n+\n+        try {\n+            prepStmt = connection.prepareStatement(query);\n+            prepStmt.setString(1, claimDialectURI);\n+            prepStmt.setInt(2, tenantId);\n+            prepStmt.setInt(3, tenantId);\n+            rs = prepStmt.executeQuery();\n+\n+            while (rs.next()) {\n+                String claimPropertyName = rs.getString(SQLConstants.PROPERTY_NAME_COLUMN);\n+                String claimPropertyValue = rs.getString(SQLConstants.PROPERTY_VALUE_COLUMN);\n+                int localId = rs.getInt(SQLConstants.ID_COLUMN);\n+                if (claimMap.get(localId) == null) {\n+                    String mappedURI = rs.getString(SQLConstants.MAPPED_URI_COLUMN);\n+                    String claimURI = rs.getString(SQLConstants.CLAIM_URI_COLUMN);\n+                    propmap = new HashMap<>();\n+                    propmap.put(claimPropertyName, claimPropertyValue);\n+                    ExternalClaim temp = new ExternalClaim(claimDialectURI, claimURI, mappedURI, propmap);\n+                    claimMap.put(localId, temp);\n+                } else {\n+                    claimMap.get(localId).getClaimProperties().put(claimPropertyName, claimPropertyValue);\n+                }\n+            }\n+        } catch (SQLException e) {\n+            throw new ClaimMetadataException(\"Error while listing claims for dialect \" + claimDialectURI, e);\n+        } finally {\n+            IdentityDatabaseUtil.closeResultSet(rs);\n+            IdentityDatabaseUtil.closeStatement(prepStmt);\n+        }\n+        return new ArrayList<ExternalClaim>(claimMap.values());\n+    }\n+\n+", "originalCommit": "c68125edc35c06cdbe9a2208821c46ea4cc4cfea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fda1cf27a7f96a5b621168868c407da124f593fb", "chunk": "diff --git a/components/claim-mgt/org.wso2.carbon.identity.claim.metadata.mgt/src/main/java/org/wso2/carbon/identity/claim/metadata/mgt/dao/ExternalClaimDAO.java b/components/claim-mgt/org.wso2.carbon.identity.claim.metadata.mgt/src/main/java/org/wso2/carbon/identity/claim/metadata/mgt/dao/ExternalClaimDAO.java\nindex 2c9fd9d3300..7233f366392 100644\n--- a/components/claim-mgt/org.wso2.carbon.identity.claim.metadata.mgt/src/main/java/org/wso2/carbon/identity/claim/metadata/mgt/dao/ExternalClaimDAO.java\n+++ b/components/claim-mgt/org.wso2.carbon.identity.claim.metadata.mgt/src/main/java/org/wso2/carbon/identity/claim/metadata/mgt/dao/ExternalClaimDAO.java\n\n@@ -296,8 +296,6 @@ public class ExternalClaimDAO extends ClaimDAO {\n         }\n         return new ArrayList<ExternalClaim>(claimMap.values());\n     }\n-\n-\n     /**\n      * Revoke the transaction when catch then sql transaction errors.\n      *\n"}}, {"oid": "fda1cf27a7f96a5b621168868c407da124f593fb", "url": "https://github.com/wso2/carbon-identity-framework/commit/fda1cf27a7f96a5b621168868c407da124f593fb", "message": "Update suggesions.\n\nCo-authored-by: Tharindu Bandara <tharindu.bandara.edu@gmail.com>", "committedDate": "2020-07-01T09:08:10Z", "type": "commit"}]}