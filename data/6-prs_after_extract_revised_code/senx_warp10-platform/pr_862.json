{"pr_number": 862, "pr_title": "Metadata ordering", "pr_createdAt": "2020-10-20T15:38:32Z", "pr_url": "https://github.com/senx/warp10-platform/pull/862", "timeline": [{"oid": "00bb8f5f9c047db622f2541ca82ea32ae5df39ca", "url": "https://github.com/senx/warp10-platform/commit/00bb8f5f9c047db622f2541ca82ea32ae5df39ca", "message": "Ordered metadata by classid/labelid", "committedDate": "2020-10-18T09:35:49Z", "type": "commit"}, {"oid": "dd2c416b805207e0a95c01294a051a24fbaaa173", "url": "https://github.com/senx/warp10-platform/commit/dd2c416b805207e0a95c01294a051a24fbaaa173", "message": "Made per owner class list ordered by lexicographic classid. Made use of ID_COMPARATOR.", "committedDate": "2020-10-19T09:05:18Z", "type": "commit"}, {"oid": "68d900dca0810a7dd53b694b74bf01ef55618574", "url": "https://github.com/senx/warp10-platform/commit/68d900dca0810a7dd53b694b74bf01ef55618574", "message": "Added flag to control parallel scanners in order to preserve GTS order.", "committedDate": "2020-10-19T14:58:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4Mzg2OQ==", "url": "https://github.com/senx/warp10-platform/pull/862#discussion_r516683869", "bodyText": "Is there a reason this constructor is not given ID_COMPARATOR?", "author": "ftence", "createdAt": "2020-11-03T13:57:28Z", "path": "warp10/src/main/java/io/warp10/continuum/store/Directory.java", "diffHunk": "@@ -1885,15 +1885,15 @@ public void run() {\n \n               String owner = metadata.getLabels().get(Constants.OWNER_LABEL);\n               \n-              synchronized(directory.classesPerOwner) {\n-                Set<String> classes = directory.classesPerOwner.get(owner);\n+              synchronized(directory.classesPerOwner) {                \n+                Map<Long, String> classes = directory.classesPerOwner.get(owner);\n                 \n-                if (null == classes) {\n-                  classes = new HashSet<String>();\n+                if (null == classes) {                  \n+                  classes = new ConcurrentSkipListMap<Long, String>();", "originalCommit": "68d900dca0810a7dd53b694b74bf01ef55618574", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebda9fd560c0ff48a6ec9f670ba446733095ff5e", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/store/Directory.java b/warp10/src/main/java/io/warp10/continuum/store/Directory.java\nindex b057bc6e..a2eaa89b 100644\n--- a/warp10/src/main/java/io/warp10/continuum/store/Directory.java\n+++ b/warp10/src/main/java/io/warp10/continuum/store/Directory.java\n\n@@ -1872,45 +1873,45 @@ public class Directory extends AbstractHandler implements DirectoryService.Iface\n                   directory.metadatas.put(metadata.getName(), new ConcurrentSkipListMap<Long,Metadata>(ID_COMPARATOR));\n                   directory.classNames.put(classId, metadata.getName());\n                   Sensision.update(SensisionConstants.SENSISION_CLASS_CONTINUUM_DIRECTORY_CLASSES, Sensision.EMPTY_LABELS, 1);\n-                }                \n+                }\n               } finally {\n                 if (directory.metadatasLock.isHeldByCurrentThread()) {\n                   directory.metadatasLock.unlock();\n                 }\n               }\n-              \n+\n               //\n               // Store per owner class\n               //\n \n               String owner = metadata.getLabels().get(Constants.OWNER_LABEL);\n-              \n-              synchronized(directory.classesPerOwner) {                \n+\n+              synchronized(directory.classesPerOwner) {\n                 Map<Long, String> classes = directory.classesPerOwner.get(owner);\n-                \n-                if (null == classes) {                  \n-                  classes = new ConcurrentSkipListMap<Long, String>();\n+\n+                if (null == classes) {\n+                  classes = new ConcurrentSkipListMap<Long, String>(ID_COMPARATOR);\n                   directory.classesPerOwner.put(owner, classes);\n                 }\n-                \n+\n                 classes.put(metadata.getClassId(), metadata.getName());\n               }\n-              \n+\n               Sensision.set(SensisionConstants.SENSISION_CLASS_CONTINUUM_DIRECTORY_OWNERS, Sensision.EMPTY_LABELS, directory.classesPerOwner.size());\n-              \n+\n               //\n               // Force classId/labelsId in Metadata, we will need them!\n               //\n-              \n+\n               metadata.setClassId(classId);\n               metadata.setLabelsId(labelsId);\n-              \n+\n               // 128bits\n               if (null == directory.metadatas.get(metadata.getName()).put(labelsId, metadata)) {\n                 Sensision.update(SensisionConstants.SENSISION_CLASS_CONTINUUM_DIRECTORY_GTS, Sensision.EMPTY_LABELS, 1);\n                 Sensision.update(SensisionConstants.SENSISION_CLASS_CONTINUUM_DIRECTORY_GTS_PERAPP, sensisionLabels, 1);\n               }\n-           \n+\n             } finally {\n               if (actionsLock.isHeldByCurrentThread()) {\n                 actionsLock.unlock();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4NzkxNA==", "url": "https://github.com/senx/warp10-platform/pull/862#discussion_r516687914", "bodyText": "Update copyright notice.", "author": "ftence", "createdAt": "2020-11-03T14:03:13Z", "path": "warp10/src/main/java/io/warp10/continuum/DirectoryUtil.java", "diffHunk": "@@ -126,7 +126,7 @@ private static long computeHash(long k0, long k1, long timestamp, List<String> c\n   public static DirectoryStatsResponse stats(DirectoryStatsRequest request,\n                                              StandaloneDirectoryClient.ShardFilter filter,\n                                              Map<String, Map<Long, Metadata>> metadatas,\n-                                             Map<String, Set<String>> classesPerOwner,\n+                                             Map<String, Map<Long, String>> classesPerOwner,", "originalCommit": "68d900dca0810a7dd53b694b74bf01ef55618574", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4ODI3NA==", "url": "https://github.com/senx/warp10-platform/pull/862#discussion_r516688274", "bodyText": "Unused.", "author": "ftence", "createdAt": "2020-11-03T14:03:47Z", "path": "warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java", "diffHunk": "@@ -43,6 +45,8 @@\n import java.util.regex.Pattern;\n \n import io.warp10.continuum.DirectoryUtil;\n+import io.warp10.continuum.MetadataUtils;\n+", "originalCommit": "68d900dca0810a7dd53b694b74bf01ef55618574", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebda9fd560c0ff48a6ec9f670ba446733095ff5e", "chunk": "diff --git a/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java b/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java\nindex 3d1be38a..c895ed72 100644\n--- a/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java\n+++ b/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java\n\n@@ -44,9 +44,6 @@ import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicLong;\n import java.util.regex.Pattern;\n \n-import io.warp10.continuum.DirectoryUtil;\n-import io.warp10.continuum.MetadataUtils;\n-\n import org.apache.hadoop.hbase.util.Bytes;\n import org.apache.thrift.TDeserializer;\n import org.apache.thrift.TException;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4ODM2Ng==", "url": "https://github.com/senx/warp10-platform/pull/862#discussion_r516688366", "bodyText": "Unused.", "author": "ftence", "createdAt": "2020-11-03T14:03:56Z", "path": "warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java", "diffHunk": "@@ -67,6 +71,7 @@\n import io.warp10.continuum.Configuration;\n import io.warp10.continuum.egress.ThriftDirectoryClient;\n import io.warp10.continuum.gts.GTSHelper;\n+import io.warp10.continuum.gts.MetadataIdComparator;", "originalCommit": "68d900dca0810a7dd53b694b74bf01ef55618574", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebda9fd560c0ff48a6ec9f670ba446733095ff5e", "chunk": "diff --git a/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java b/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java\nindex 3d1be38a..c895ed72 100644\n--- a/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java\n+++ b/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java\n\n@@ -69,9 +66,9 @@ import com.google.common.collect.MapMaker;\n import io.warp10.SmartPattern;\n import io.warp10.WarpConfig;\n import io.warp10.continuum.Configuration;\n+import io.warp10.continuum.DirectoryUtil;\n import io.warp10.continuum.egress.ThriftDirectoryClient;\n import io.warp10.continuum.gts.GTSHelper;\n-import io.warp10.continuum.gts.MetadataIdComparator;\n import io.warp10.continuum.sensision.SensisionConstants;\n import io.warp10.continuum.store.Constants;\n import io.warp10.continuum.store.Directory;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4OTYyNA==", "url": "https://github.com/senx/warp10-platform/pull/862#discussion_r516689624", "bodyText": "Unused.", "author": "ftence", "createdAt": "2020-11-03T14:05:42Z", "path": "warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java", "diffHunk": "@@ -110,11 +115,27 @@\n   private long LIMIT_CLASS_CARDINALITY = 100;\n   private long LIMIT_LABELS_CARDINALITY = 100;\n   \n+  private static final int CACHE_SIZE = 1000000;\n+  ", "originalCommit": "68d900dca0810a7dd53b694b74bf01ef55618574", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ebda9fd560c0ff48a6ec9f670ba446733095ff5e", "chunk": "diff --git a/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java b/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java\nindex 3d1be38a..c895ed72 100644\n--- a/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java\n+++ b/warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java\n\n@@ -87,63 +84,61 @@ import io.warp10.crypto.SipHashInline;\n import io.warp10.sensision.Sensision;\n \n public class StandaloneDirectoryClient implements DirectoryClient {\n-  \n+\n   private static final Logger LOG = LoggerFactory.getLogger(StandaloneDirectoryClient.class);\n-  \n+\n   private static final String DIRECTORY_INIT_NTHREADS_DEFAULT = \"4\";\n-  \n+\n   private static final byte[] METADATA_PREFIX = \"M\".getBytes(StandardCharsets.US_ASCII);\n-  \n+\n   private static final int MAX_BATCH_SIZE = 500000;\n-  \n+\n   private final DB db;\n   private final KeyStore keystore;\n-  \n+\n   private final byte[] classKey;\n   private final byte[] labelsKey;\n-  \n+\n   private final long[] classLongs;\n   private final long[] labelsLongs;\n-  \n+\n   private final byte[] aesKey;\n-  \n+\n   private final int initNThreads;\n \n   private final boolean syncwrites;\n   private final double syncrate;\n-  \n+\n   private long LIMIT_CLASS_CARDINALITY = 100;\n   private long LIMIT_LABELS_CARDINALITY = 100;\n-  \n-  private static final int CACHE_SIZE = 1000000;\n-  \n+\n   private static final Map<String,Long> classids = new HashMap<String,Long>();\n \n-  \n+\n   private static final Comparator<String> CLASS_COMPARATOR = new Comparator<String>() {\n     @Override\n     public int compare(String o1, String o2) {\n       long id1 = classids.get(o1);\n       long id2 = classids.get(o2);\n-      \n+\n       return Directory.ID_COMPARATOR.compare(id1, id2);\n     }\n   };\n-  \n+\n   /**\n    * Maps of class name to labelsId to metadata\n    */\n   // 128BITS\n   private static final Map<String,Map<Long,Metadata>> metadatas = new ConcurrentSkipListMap<String,Map<Long,Metadata>>(CLASS_COMPARATOR);\n-  \n+\n   private static final Map<BigInteger,Metadata> metadatasById = new MapMaker().concurrencyLevel(64).makeMap();\n \n   private long activityWindow = 0L;\n-  \n+\n   public static interface ShardFilter {\n     public boolean exclude(long classId, long labelsId);\n   }\n-  \n+\n   public StandaloneDirectoryClient(DB db, final KeyStore keystore) {\n \n     String classMaxCardinalityProp = WarpConfig.getProperty(Configuration.DIRECTORY_STATS_CLASS_MAXCARDINALITY);\n"}}, {"oid": "ebda9fd560c0ff48a6ec9f670ba446733095ff5e", "url": "https://github.com/senx/warp10-platform/commit/ebda9fd560c0ff48a6ec9f670ba446733095ff5e", "message": "Addressed PR comments", "committedDate": "2020-11-04T12:35:18Z", "type": "commit"}, {"oid": "cda4b6aba6ddaaf6310d5ecb68451073974e33d5", "url": "https://github.com/senx/warp10-platform/commit/cda4b6aba6ddaaf6310d5ecb68451073974e33d5", "message": "Resolved conflicts", "committedDate": "2020-11-04T12:36:49Z", "type": "commit"}]}