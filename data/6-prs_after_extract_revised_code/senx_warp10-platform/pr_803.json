{"pr_number": 803, "pr_title": "Modified code so list of Metadatas is not deep copied when cloning Fe\u2026", "pr_createdAt": "2020-07-29T20:48:49Z", "pr_url": "https://github.com/senx/warp10-platform/pull/803", "timeline": [{"oid": "e6738cc7a0795d42b7ec3de8769a8878ccc9aa64", "url": "https://github.com/senx/warp10-platform/commit/e6738cc7a0795d42b7ec3de8769a8878ccc9aa64", "message": "Modified code so list of Metadatas is not deep copied when cloning FetchRequest", "committedDate": "2020-07-29T20:48:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUyMDM1MQ==", "url": "https://github.com/senx/warp10-platform/pull/803#discussion_r463520351", "bodyText": "I think it should not have been copied in the first place because this.request is already a copy. Or maybe keep the copy here and this.request should not be a copy.", "author": "ftence", "createdAt": "2020-07-31T09:59:23Z", "path": "warp10/src/main/java/io/warp10/continuum/store/OptimizedSlicedRowFilterGTSDecoderIterator.java", "diffHunk": "@@ -193,7 +197,11 @@ public boolean hasNext() {\n       if (null != iterator) {\n         try { iterator.close(); } catch (Exception e) {}\n       }\n+      // Remove Metadatas from FetchRequest otherwise new FetchRequest(req) will do a deep copy", "originalCommit": "e6738cc7a0795d42b7ec3de8769a8878ccc9aa64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE1MjUxOQ==", "url": "https://github.com/senx/warp10-platform/pull/803#discussion_r465152519", "bodyText": "Indeed, Metadatas is unset", "author": "hbs", "createdAt": "2020-08-04T15:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUyMDM1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "b2b4c9c1e351d77f01a92ff54820ed2c2706b217", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/store/OptimizedSlicedRowFilterGTSDecoderIterator.java b/warp10/src/main/java/io/warp10/continuum/store/OptimizedSlicedRowFilterGTSDecoderIterator.java\nindex cc1a8a16..499a612b 100644\n--- a/warp10/src/main/java/io/warp10/continuum/store/OptimizedSlicedRowFilterGTSDecoderIterator.java\n+++ b/warp10/src/main/java/io/warp10/continuum/store/OptimizedSlicedRowFilterGTSDecoderIterator.java\n\n@@ -197,11 +197,7 @@ public class OptimizedSlicedRowFilterGTSDecoderIterator extends GTSDecoderIterat\n       if (null != iterator) {\n         try { iterator.close(); } catch (Exception e) {}\n       }\n-      // Remove Metadatas from FetchRequest otherwise new FetchRequest(req) will do a deep copy\n-      List<Metadata> lm = this.request.getMetadatas();          \n-      this.request.unsetMetadatas();\n       FetchRequest req = new FetchRequest(this.request);\n-      this.request.setMetadatas(lm);\n       req.setMetadatas(groups.get(groupidx));\n       iterator = new SlicedRowFilterGTSDecoderIterator(req, conn, tableName, colfam, keystore, useBlockCache);\n       groupidx++;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUyMDgyNQ==", "url": "https://github.com/senx/warp10-platform/pull/803#discussion_r463520825", "bodyText": "Factorize code outside conditional.", "author": "ftence", "createdAt": "2020-07-31T10:00:22Z", "path": "warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java", "diffHunk": "@@ -301,11 +301,21 @@ public ParallelGTSDecoderIteratorWrapper(FetchRequest req, boolean optimized, Ke\n         GTSDecoderIterator iterator = null;\n         \n         if (optimized) {\n+          // Remove Metadatas from FetchRequest otherwise new FetchRequest(req) will do a deep copy", "originalCommit": "e6738cc7a0795d42b7ec3de8769a8878ccc9aa64", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2b4c9c1e351d77f01a92ff54820ed2c2706b217", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java b/warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java\nindex 595cc68b..8e274cc0 100644\n--- a/warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java\n+++ b/warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java\n\n@@ -300,23 +301,17 @@ public class ParallelGTSDecoderIteratorWrapper extends GTSDecoderIterator {\n       if (gtsPerScanner == metas.size()) {\n         GTSDecoderIterator iterator = null;\n         \n+        // Remove Metadatas from FetchRequest otherwise new FetchRequest(req) will do a deep copy\n+        List<Metadata> lm = req.getMetadatas();          \n+        req.unsetMetadatas();\n+        FetchRequest freq = new FetchRequest(req);\n+        // Restore Metadatas\n+        req.setMetadatas(lm);\n+        freq.setMetadatas(metas);\n+        \n         if (optimized) {\n-          // Remove Metadatas from FetchRequest otherwise new FetchRequest(req) will do a deep copy\n-          List<Metadata> lm = req.getMetadatas();          \n-          req.unsetMetadatas();\n-          FetchRequest freq = new FetchRequest(req);\n-          // Restore Metadatas\n-          req.setMetadatas(lm);\n-          freq.setMetadatas(metas);\n           iterator = new OptimizedSlicedRowFilterGTSDecoderIterator(freq, conn, tableName, colfam, keystore, useBlockCache);\n         } else {\n-          // Remove Metadatas from FetchRequest otherwise new FetchRequest(req) will do a deep copy\n-          List<Metadata> lm = req.getMetadatas();          \n-          req.unsetMetadatas();\n-          FetchRequest freq = new FetchRequest(req);\n-          // Restore Metadatas\n-          req.setMetadatas(lm);\n-          freq.setMetadatas(metas);\n           iterator = new MultiScanGTSDecoderIterator(freq, conn, tableName, colfam, keystore, useBlockCache);      \n         }      \n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUyMTI2OQ==", "url": "https://github.com/senx/warp10-platform/pull/803#discussion_r463521269", "bodyText": "Also factorize here.", "author": "ftence", "createdAt": "2020-07-31T10:01:17Z", "path": "warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java", "diffHunk": "@@ -320,11 +330,21 @@ public ParallelGTSDecoderIteratorWrapper(FetchRequest req, boolean optimized, Ke\n       GTSDecoderIterator iterator = null;\n       \n       if (optimized) {\n+        // Remove Metadatas from FetchRequest otherwise new FetchRequest(req) will do a deep copy", "originalCommit": "e6738cc7a0795d42b7ec3de8769a8878ccc9aa64", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2b4c9c1e351d77f01a92ff54820ed2c2706b217", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java b/warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java\nindex 595cc68b..8e274cc0 100644\n--- a/warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java\n+++ b/warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java\n\n@@ -329,23 +324,17 @@ public class ParallelGTSDecoderIteratorWrapper extends GTSDecoderIterator {\n     if (null != metas) {\n       GTSDecoderIterator iterator = null;\n       \n+      // Remove Metadatas from FetchRequest otherwise new FetchRequest(req) will do a deep copy\n+      List<Metadata> lm = req.getMetadatas();          \n+      req.unsetMetadatas();\n+      FetchRequest freq = new FetchRequest(req);\n+      // Restore Metadatas\n+      req.setMetadatas(lm);        \n+      freq.setMetadatas(metas);\n+\n       if (optimized) {\n-        // Remove Metadatas from FetchRequest otherwise new FetchRequest(req) will do a deep copy\n-        List<Metadata> lm = req.getMetadatas();          \n-        req.unsetMetadatas();\n-        FetchRequest freq = new FetchRequest(req);\n-        // Restore Metadatas\n-        req.setMetadatas(lm);        \n-        freq.setMetadatas(metas);\n         iterator = new OptimizedSlicedRowFilterGTSDecoderIterator(freq, conn, tableName, colfam, keystore, useBlockCache);\n       } else {\n-        // Remove Metadatas from FetchRequest otherwise new FetchRequest(req) will do a deep copy\n-        List<Metadata> lm = req.getMetadatas();          \n-        req.unsetMetadatas();\n-        FetchRequest freq = new FetchRequest(req);\n-        // Restore Metadatas\n-        req.setMetadatas(lm);\n-        freq.setMetadatas(metas);\n         iterator = new MultiScanGTSDecoderIterator(freq, conn, tableName, colfam, keystore, useBlockCache);      \n       }      \n \n"}}, {"oid": "b56f6790ba2bc6226fa0253637fdcd614ae1d514", "url": "https://github.com/senx/warp10-platform/commit/b56f6790ba2bc6226fa0253637fdcd614ae1d514", "message": "Merge branch 'master' into fetchrequest-deepcopy", "committedDate": "2020-08-04T15:47:38Z", "type": "commit"}, {"oid": "b2b4c9c1e351d77f01a92ff54820ed2c2706b217", "url": "https://github.com/senx/warp10-platform/commit/b2b4c9c1e351d77f01a92ff54820ed2c2706b217", "message": "Addressed PR comments", "committedDate": "2020-08-04T15:52:51Z", "type": "commit"}]}