{"pr_number": 802, "pr_title": "Modify custom JSON serialization", "pr_createdAt": "2020-07-29T15:05:05Z", "pr_url": "https://github.com/senx/warp10-platform/pull/802", "timeline": [{"oid": "e9d71aecbb13e7b31824d1c9cea15c622d7b4ee6", "url": "https://github.com/senx/warp10-platform/commit/e9d71aecbb13e7b31824d1c9cea15c622d7b4ee6", "message": "Modify custom serialization and code clean up", "committedDate": "2020-07-29T14:56:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMwMTk1NQ==", "url": "https://github.com/senx/warp10-platform/pull/802#discussion_r464301955", "bodyText": "Shouldn't we leave the possibility to return JSON content too? Because the transformer may use an existing implementation of a serializer which will produce JSON. The validity of the returned JSON would be the responsability of the called entity as it was in the previous implementation.", "author": "hbs", "createdAt": "2020-08-03T09:33:35Z", "path": "warp10/src/main/java/io/warp10/json/JsonUtils.java", "diffHunk": "@@ -57,33 +52,35 @@ public void serialize(Object value, JsonGenerator gen, SerializerProvider serial\n   }\n \n   /**\n-   * Used to swap UnknownSerializer and BeanSerializer for CustomEncodersSerializer.\n+   * Used to swap UnknownSerializer and BeanSerializer for CustomSerializer.\n    */\n   public static class NotSerializedToCustomSerializedModifier extends BeanSerializerModifier {\n     @Override\n     public JsonSerializer<?> modifySerializer(SerializationConfig config, BeanDescription beanDesc, JsonSerializer<?> serializer) {\n       if (serializer instanceof UnknownSerializer || serializer instanceof BeanSerializer) {\n-        return customEncodersSerializer;\n+        return CUSTOM_SERIALIZER;\n       } else {\n         return serializer;\n       }\n     }\n   }\n \n-  public static class CustomEncodersSerializer extends JsonSerializer<Object> {\n+  /**\n+   * Handles custom serialization based on transformers.\n+   */\n+  public static class CustomSerializer extends JsonSerializer<Object> {\n     @Override\n     public void serialize(Object value, JsonGenerator gen, SerializerProvider serializers) throws IOException {\n-      if (null != encoders && !encoders.isEmpty()) {\n-        StringBuilder sb = new StringBuilder();\n-        boolean encoded = false;\n-        for (JsonEncoder encoder: encoders) {\n-          encoded = encoder.addElement(sb, value);\n-          if (encoded) {\n+      if (null != transformers && !transformers.isEmpty()) {\n+        JsonTransformer.TransformationResult transfRes = null;\n+        for (JsonTransformer transformer: transformers) {\n+          transfRes = transformer.transform(value);\n+          if (null != transfRes && transfRes.transformed) {\n             break;\n           }\n         }\n-        if (encoded) {\n-          gen.writeRaw(sb.toString());\n+        if (null != transfRes && transfRes.transformed) {", "originalCommit": "e9d71aecbb13e7b31824d1c9cea15c622d7b4ee6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6835df3dc2909fb96adc75236ecaee559e56638d", "chunk": "diff --git a/warp10/src/main/java/io/warp10/json/JsonUtils.java b/warp10/src/main/java/io/warp10/json/JsonUtils.java\nindex ad88aec4..f8b2a372 100644\n--- a/warp10/src/main/java/io/warp10/json/JsonUtils.java\n+++ b/warp10/src/main/java/io/warp10/json/JsonUtils.java\n\n@@ -80,7 +80,11 @@ public class JsonUtils {\n           }\n         }\n         if (null != transfRes && transfRes.transformed) {\n-          gen.writeObject(transfRes.result);\n+          if (transfRes.raw && transfRes.result instanceof String) {\n+            gen.writeRawValue((String) transfRes.result);\n+          } else {\n+            gen.writeObject(transfRes.result);\n+          }\n         } else {\n           // No custom encoders able to encode this object, write null.\n           gen.writeNull();\n"}}, {"oid": "6835df3dc2909fb96adc75236ecaee559e56638d", "url": "https://github.com/senx/warp10-platform/commit/6835df3dc2909fb96adc75236ecaee559e56638d", "message": "Add possibility for transformers to output raw JSON", "committedDate": "2020-08-03T15:01:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE0Nzk3Nw==", "url": "https://github.com/senx/warp10-platform/pull/802#discussion_r465147977", "bodyText": "Add comments describing the meaning of those fields", "author": "hbs", "createdAt": "2020-08-04T15:44:18Z", "path": "warp10/src/main/java/io/warp10/json/JsonUtils.java", "diffHunk": "@@ -95,20 +96,41 @@ public void serialize(Object value, JsonGenerator gen, SerializerProvider serial\n     }\n   }\n \n-  public static final NullKeySerializer nullKeySerializer = new NullKeySerializer();\n-  public static final CustomEncodersSerializer customEncodersSerializer = new CustomEncodersSerializer();\n+  private static final NullKeySerializer NULL_KEY_SERIALIZER = new NullKeySerializer();\n+  private static final CustomSerializer CUSTOM_SERIALIZER = new CustomSerializer();\n \n   //\n   // ObjectMapper instances are thread-safe, so we can safely use a single static instance.\n   //\n-  private static final ObjectMapper strictMapper;\n-  private static final ObjectMapper looseMapper;\n+  private static final ObjectMapper STRICT_MAPPER;\n+  private static final ObjectMapper LOOSE_MAPPER;\n+\n+  public interface JsonTransformer {\n+    class TransformationResult {\n+      public final boolean transformed;", "originalCommit": "6835df3dc2909fb96adc75236ecaee559e56638d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUzOTgyNw==", "url": "https://github.com/senx/warp10-platform/pull/802#discussion_r465539827", "bodyText": "Also add getter method so the fields can be set private", "author": "hbs", "createdAt": "2020-08-05T07:50:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE0Nzk3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "d7f8c648fec765ee18bd4d7d4e9de73e07ecc539", "chunk": "diff --git a/warp10/src/main/java/io/warp10/json/JsonUtils.java b/warp10/src/main/java/io/warp10/json/JsonUtils.java\nindex f8b2a372..e933483e 100644\n--- a/warp10/src/main/java/io/warp10/json/JsonUtils.java\n+++ b/warp10/src/main/java/io/warp10/json/JsonUtils.java\n\n@@ -107,9 +107,27 @@ public class JsonUtils {\n \n   public interface JsonTransformer {\n     class TransformationResult {\n-      public final boolean transformed;\n-      public final Object result;\n-      public final boolean raw;\n+\n+      /**\n+       * Whether the transformer managed to transform the given object or not.\n+       * If false, result and raw fields are ignored.\n+       */\n+      private final boolean transformed;\n+\n+      /**\n+       * The result of the transformation.\n+       * If raw, the result must be a String and will be added as is in the resulting JSON.\n+       * If not raw, the result should be an Object which can be JSONified. Typically Maps, Lists, String, Numbers, Booleans\n+       * or even other Objects which are known to have serializer (GTS, Bytes, ...) or handled by other transformers.\n+       */\n+      private final Object result;\n+\n+      /**\n+       * Whether the result is to be added as is in the resulting JSON.\n+       * If true, result must be a String.\n+       * If false, result can be any Object which will be JSONified.\n+       */\n+      private final boolean raw;\n \n       public TransformationResult(boolean transformed, Object result, boolean raw) {\n         this.transformed = transformed;\n"}}, {"oid": "d7f8c648fec765ee18bd4d7d4e9de73e07ecc539", "url": "https://github.com/senx/warp10-platform/commit/d7f8c648fec765ee18bd4d7d4e9de73e07ecc539", "message": "Make fields private and add Javadoc", "committedDate": "2020-08-05T12:10:24Z", "type": "commit"}]}