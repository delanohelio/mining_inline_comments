{"pr_number": 867, "pr_title": "Modified safe delta mode to allow for fast merges in more cases", "pr_createdAt": "2020-11-09T09:54:42Z", "pr_url": "https://github.com/senx/warp10-platform/pull/867", "timeline": [{"oid": "d68e538a6d77225826f32b2268ca8dfb4a835c91", "url": "https://github.com/senx/warp10-platform/commit/d68e538a6d77225826f32b2268ca8dfb4a835c91", "message": "Modified safe delta mode to allow for fast merges in more cases", "committedDate": "2020-11-09T09:53:55Z", "type": "commit"}, {"oid": "ef1d5bdb7e2fc3244930000477b34da2749f6c06", "url": "https://github.com/senx/warp10-platform/commit/ef1d5bdb7e2fc3244930000477b34da2749f6c06", "message": "Refactored to check validity of last value on a per type basis", "committedDate": "2020-11-13T12:48:11Z", "type": "commit"}, {"oid": "b7d2bef74d0b1f91f02527bc02577565d3ff9372", "url": "https://github.com/senx/warp10-platform/commit/b7d2bef74d0b1f91f02527bc02577565d3ff9372", "message": "Fixed encoding of NaNs which never lead to IDENTICAL encoding.", "committedDate": "2020-11-16T14:59:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjcwMjE1OQ==", "url": "https://github.com/senx/warp10-platform/pull/867#discussion_r526702159", "bodyText": "I think validLastDoubleValue and validLastBDValue could also be used to tell if the last floating-point value is encoded as BigDecimal or doubleinstead of setting lastBDValue to null:\n\nvalidLastDoubleValue && !validLastBDValue -> last value encoded as double\n!validLastDoubleValue && validLastBDValue -> last value encoded as BigDecimal\n!validLastDoubleValue && !validLastBDValue -> unknown last value floating-point value\nvalidLastDoubleValue && validLastBDValue -> cannot happen\n\nThus validLastDoubleValue && null == lastBDValue could be replaced by validLastDoubleValue.", "author": "ftence", "createdAt": "2020-11-19T09:12:06Z", "path": "warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java", "diffHunk": "@@ -378,22 +386,26 @@ public synchronized int addValue(long timestamp, long location, long elevation,\n       } else {\n         tsTypeFlag |= FLAGS_BOOLEAN_VALUE_FALSE;\n       }\n-      \n+\n     } else if (value instanceof String) {\n       tsTypeFlag |= FLAGS_TYPE_STRING;\n-      if (((String) value).equals(lastStringValue)) {\n+      if (validLastStringValue && ((String) value).equals(lastStringValue)) {\n         tsTypeFlag |= FLAGS_VALUE_IDENTICAL;\n       }\n     } else if (value instanceof byte[]) {\n       tsTypeFlag |= FLAGS_TYPE_STRING | FLAGS_STRING_BINARY;\n       binaryString = new String((byte[]) value, StandardCharsets.ISO_8859_1);\n-      if (binaryString.equals(lastStringValue)) {\n+      if (validLastStringValue && binaryString.equals(lastStringValue)) {\n         tsTypeFlag |= FLAGS_VALUE_IDENTICAL;\n       }\n     } else if (value instanceof Double || value instanceof Float) {\n       tsTypeFlag |= FLAGS_TYPE_DOUBLE;\n       // Only compare to the previous double value if the last floating point value was NOT encoded as a BigDecimal\n-      if (null == lastBDValue && lastDoubleValue == ((Number) value).doubleValue()) {\n+      if (validLastDoubleValue\n+          && null == lastBDValue", "originalCommit": "b7d2bef74d0b1f91f02527bc02577565d3ff9372", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2288f22fdd6f35be6cfa5f8eccfed93d9238e82f", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\nindex eea82bd3..aa16dafb 100644\n--- a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n+++ b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n\n@@ -401,9 +401,7 @@ public class GTSEncoder implements Cloneable {\n     } else if (value instanceof Double || value instanceof Float) {\n       tsTypeFlag |= FLAGS_TYPE_DOUBLE;\n       // Only compare to the previous double value if the last floating point value was NOT encoded as a BigDecimal\n-      if (validLastDoubleValue\n-          && null == lastBDValue\n-          && (lastDoubleValue == ((Number) value).doubleValue()\n+      if (validLastDoubleValue && (lastDoubleValue == ((Number) value).doubleValue()\n               // We need to check for NaNs in a specific way\n               || (Double.isNaN(lastDoubleValue) && Double.isNaN(((Number) value).doubleValue())))) {\n         tsTypeFlag |= FLAGS_VALUE_IDENTICAL;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjcwMzEyOQ==", "url": "https://github.com/senx/warp10-platform/pull/867#discussion_r526703129", "bodyText": "Ditto, only testing validLastBDValue should be enough to be sure lastBDValue is non-null. It can be argued that the nullity check prevents a NPE though.", "author": "ftence", "createdAt": "2020-11-19T09:13:44Z", "path": "warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java", "diffHunk": "@@ -405,7 +417,7 @@ public synchronized int addValue(long timestamp, long location, long elevation,\n       // Strip trailing zero so we optimize the representation\n       doubleValue = doubleValue.stripTrailingZeros();\n \n-      if (null != lastBDValue && 0 == lastBDValue.compareTo(doubleValue)) {\n+      if (validLastBDValue && null != lastBDValue && 0 == lastBDValue.compareTo(doubleValue)) {", "originalCommit": "b7d2bef74d0b1f91f02527bc02577565d3ff9372", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2288f22fdd6f35be6cfa5f8eccfed93d9238e82f", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\nindex eea82bd3..aa16dafb 100644\n--- a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n+++ b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n\n@@ -417,7 +415,7 @@ public class GTSEncoder implements Cloneable {\n       // Strip trailing zero so we optimize the representation\n       doubleValue = doubleValue.stripTrailingZeros();\n \n-      if (validLastBDValue && null != lastBDValue && 0 == lastBDValue.compareTo(doubleValue)) {\n+      if (validLastBDValue && 0 == lastBDValue.compareTo(doubleValue)) {\n         tsTypeFlag |= FLAGS_VALUE_IDENTICAL;\n       } else {\n         int scale = doubleValue.scale();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjcwMzc3MQ==", "url": "https://github.com/senx/warp10-platform/pull/867#discussion_r526703771", "bodyText": "lastGeoXPPoint = GeoTimeSerie.NO_LOCATION; is unnecessary since validLastGeoXPPoint is set to false.", "author": "ftence", "createdAt": "2020-11-19T09:14:45Z", "path": "warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java", "diffHunk": "@@ -460,10 +472,10 @@ public synchronized int addValue(long timestamp, long location, long elevation,\n         }\n       } else {\n         // Do nothing, implicitly we will encode location as raw GeoXPPoint\n-        noDeltaMetaLocation = false;\n       }\n     } else {\n       lastGeoXPPoint = GeoTimeSerie.NO_LOCATION;\n+      validLastGeoXPPoint = false;", "originalCommit": "b7d2bef74d0b1f91f02527bc02577565d3ff9372", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2288f22fdd6f35be6cfa5f8eccfed93d9238e82f", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\nindex eea82bd3..aa16dafb 100644\n--- a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n+++ b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n\n@@ -474,7 +472,6 @@ public class GTSEncoder implements Cloneable {\n         // Do nothing, implicitly we will encode location as raw GeoXPPoint\n       }\n     } else {\n-      lastGeoXPPoint = GeoTimeSerie.NO_LOCATION;\n       validLastGeoXPPoint = false;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjcwNDE2Mw==", "url": "https://github.com/senx/warp10-platform/pull/867#discussion_r526704163", "bodyText": "lastElevation = GeoTimeSerie.NO_ELEVATION; is unnecessary since validLastElevation is set to false.", "author": "ftence", "createdAt": "2020-11-19T09:15:22Z", "path": "warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java", "diffHunk": "@@ -496,10 +508,10 @@ public synchronized int addValue(long timestamp, long location, long elevation,\n         if (Math.abs(elevation) < (1L << 48)) {\n           locElevFlag |= FLAGS_ELEVATION_ZIGZAG;\n         }\n-        noDeltaMetaElevation = false;\n       }\n     } else {\n       lastElevation = GeoTimeSerie.NO_ELEVATION;\n+      validLastElevation = false;", "originalCommit": "b7d2bef74d0b1f91f02527bc02577565d3ff9372", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2288f22fdd6f35be6cfa5f8eccfed93d9238e82f", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\nindex eea82bd3..aa16dafb 100644\n--- a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n+++ b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n\n@@ -510,7 +507,6 @@ public class GTSEncoder implements Cloneable {\n         }\n       }\n     } else {\n-      lastElevation = GeoTimeSerie.NO_ELEVATION;\n       validLastElevation = false;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjcwNzAzNA==", "url": "https://github.com/senx/warp10-platform/pull/867#discussion_r526707034", "bodyText": "I think setting validLastBDValue to false is clearer than setting lastBDValue to null. This change goes with the first comment.", "author": "ftence", "createdAt": "2020-11-19T09:19:54Z", "path": "warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java", "diffHunk": "@@ -702,6 +717,7 @@ public synchronized int addValue(long timestamp, long location, long elevation,\n             this.stream.write(buf, 0, 8);\n             // Clear the last BDValue otherwise we might incorrectly encode the next value specified as a BigDecimal\n             lastBDValue = null;\n+            validLastDoubleValue = true;", "originalCommit": "b7d2bef74d0b1f91f02527bc02577565d3ff9372", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2288f22fdd6f35be6cfa5f8eccfed93d9238e82f", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\nindex eea82bd3..aa16dafb 100644\n--- a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n+++ b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n\n@@ -718,6 +714,7 @@ public class GTSEncoder implements Cloneable {\n             // Clear the last BDValue otherwise we might incorrectly encode the next value specified as a BigDecimal\n             lastBDValue = null;\n             validLastDoubleValue = true;\n+            validLastBDValue = false;\n           } else {\n             BigDecimal dvalue = (BigDecimal) value;\n             dvalue = dvalue.stripTrailingZeros();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjcxODUwMA==", "url": "https://github.com/senx/warp10-platform/pull/867#discussion_r526718500", "bodyText": "Also sets validLastDoubleValue to false. Also goes with first comment.", "author": "ftence", "createdAt": "2020-11-19T09:37:06Z", "path": "warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java", "diffHunk": "@@ -715,6 +731,7 @@ public synchronized int addValue(long timestamp, long location, long elevation,\n             this.stream.write(buf10, 0, l);\n             // Keep track of last value\n             lastBDValue = dvalue;\n+            validLastBDValue = true;", "originalCommit": "b7d2bef74d0b1f91f02527bc02577565d3ff9372", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2288f22fdd6f35be6cfa5f8eccfed93d9238e82f", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\nindex eea82bd3..aa16dafb 100644\n--- a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n+++ b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n\n@@ -732,6 +729,7 @@ public class GTSEncoder implements Cloneable {\n             // Keep track of last value\n             lastBDValue = dvalue;\n             validLastBDValue = true;\n+            validLastDoubleValue = false;\n           }\n         }\n         break;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjczMTE3Mw==", "url": "https://github.com/senx/warp10-platform/pull/867#discussion_r526731173", "bodyText": "Instead copy last loc/elev/values according to valid* booleans.", "author": "ftence", "createdAt": "2020-11-19T09:55:30Z", "path": "warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java", "diffHunk": "@@ -1129,10 +1144,14 @@ public synchronized void merge(GTSEncoder encoder) throws IOException {\n       this.lastBDValue = encoder.lastBDValue;\n       this.lastDoubleValue = encoder.lastDoubleValue;\n       this.lastStringValue = encoder.lastStringValue;\n+\n+      // Disable delta encoding, this allows us to have a wider use of the fast path\n+      safeDelta();", "originalCommit": "b7d2bef74d0b1f91f02527bc02577565d3ff9372", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1NzExOQ==", "url": "https://github.com/senx/warp10-platform/pull/867#discussion_r526857119", "bodyText": "Added the copying of the valid* flags, but left the noDeltaMetaTimestamp forced to true by leaving the call to safeDelta as a first step", "author": "hbs", "createdAt": "2020-11-19T12:53:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjczMTE3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "2288f22fdd6f35be6cfa5f8eccfed93d9238e82f", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\nindex eea82bd3..aa16dafb 100644\n--- a/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n+++ b/warp10/src/main/java/io/warp10/continuum/gts/GTSEncoder.java\n\n@@ -1148,6 +1154,15 @@ public class GTSEncoder implements Cloneable {\n       // Disable delta encoding, this allows us to have a wider use of the fast path\n       safeDelta();\n \n+      // Copy the validity states of the merged Encoder to loosen the delta encoding restrictions\n+      this.validLastElevation = encoder.validLastElevation;\n+      this.validLastGeoXPPoint = encoder.validLastGeoXPPoint;\n+\n+      this.validLastBDValue = encoder.validLastBDValue;\n+      this.validLastDoubleValue = encoder.validLastDoubleValue;\n+      this.validLastLongValue = encoder.validLastLongValue;\n+      this.validLastStringValue = encoder.validLastStringValue;\n+\n       this.count += encoder.getCount();\n     }\n   }\n"}}, {"oid": "2288f22fdd6f35be6cfa5f8eccfed93d9238e82f", "url": "https://github.com/senx/warp10-platform/commit/2288f22fdd6f35be6cfa5f8eccfed93d9238e82f", "message": "Addressed PR comments", "committedDate": "2020-11-19T12:53:26Z", "type": "commit"}]}