{"pr_number": 649, "pr_title": "Expose producer owner", "pr_createdAt": "2020-01-29T14:12:17Z", "pr_url": "https://github.com/senx/warp10-platform/pull/649", "timeline": [{"oid": "7ffc36004a2ca01235b9109fcdcb79d79c3a38af", "url": "https://github.com/senx/warp10-platform/commit/7ffc36004a2ca01235b9109fcdcb79d79c3a38af", "message": "Added configuration to expose owner and producer labels", "committedDate": "2020-01-29T14:10:47Z", "type": "commit"}, {"oid": "609cc6ea61dd36758847f76d49600b51bc85ffe8", "url": "https://github.com/senx/warp10-platform/commit/609cc6ea61dd36758847f76d49600b51bc85ffe8", "message": "Fixed copyright notice", "committedDate": "2020-01-30T07:31:46Z", "type": "commit"}, {"oid": "baacddf26400f01f519ef4478f478270b5392e6e", "url": "https://github.com/senx/warp10-platform/commit/baacddf26400f01f519ef4478f478270b5392e6e", "message": "Added support for .expose token attribute.", "committedDate": "2020-01-30T14:55:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI3Mjk1NQ==", "url": "https://github.com/senx/warp10-platform/pull/649#discussion_r375272955", "bodyText": "expose could be replace with true as this is on attributes, not labels.", "author": "ftence", "createdAt": "2020-02-05T14:04:55Z", "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java", "diffHunk": "@@ -1153,7 +1155,7 @@ private static void textDump(PrintWriter pw, GTSDecoderIterator iter, long now,\n               meta.setAttributes(new TreeMap<String,String>(meta.getAttributes()));\n             }\n             \n-            GTSHelper.labelsToString(sb, meta.getAttributes());\n+            GTSHelper.labelsToString(sb, meta.getAttributes(), expose);", "originalCommit": "baacddf26400f01f519ef4478f478270b5392e6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4b02834e443393fb62de8b58d40170c6899b76b", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java b/warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java\nindex 41d3f4aa..91ee726e 100644\n--- a/warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java\n+++ b/warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java\n\n@@ -1155,7 +1155,7 @@ public class EgressFetchHandler extends AbstractHandler {\n               meta.setAttributes(new TreeMap<String,String>(meta.getAttributes()));\n             }\n             \n-            GTSHelper.labelsToString(sb, meta.getAttributes(), expose);\n+            GTSHelper.labelsToString(sb, meta.getAttributes(), true);\n           } else {\n             sb.append(\"{}\");\n           }          \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI3NzA1Ng==", "url": "https://github.com/senx/warp10-platform/pull/649#discussion_r375277056", "bodyText": "Do or do not, there is no try.", "author": "ftence", "createdAt": "2020-02-05T14:12:27Z", "path": "warp10/src/main/java/io/warp10/continuum/ThrottlingManager.java", "diffHunk": "@@ -259,7 +259,8 @@ public static void checkMADS(Metadata metadata, String producer, String owner, S\n         labels.put(SensisionConstants.SENSISION_LABEL_PRODUCER, producer);\n         StringBuilder sb = new StringBuilder();\n         sb.append(\"Geo Time Series \");\n-        GTSHelper.metadataToString(sb, metadata.getName(), metadata.getLabels());\n+        // Do not ", "originalCommit": "baacddf26400f01f519ef4478f478270b5392e6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4b02834e443393fb62de8b58d40170c6899b76b", "chunk": "diff --git a/warp10/src/main/java/io/warp10/continuum/ThrottlingManager.java b/warp10/src/main/java/io/warp10/continuum/ThrottlingManager.java\nindex b3b1f6ea..38ec3771 100644\n--- a/warp10/src/main/java/io/warp10/continuum/ThrottlingManager.java\n+++ b/warp10/src/main/java/io/warp10/continuum/ThrottlingManager.java\n\n@@ -259,7 +259,8 @@ public class ThrottlingManager {\n         labels.put(SensisionConstants.SENSISION_LABEL_PRODUCER, producer);\n         StringBuilder sb = new StringBuilder();\n         sb.append(\"Geo Time Series \");\n-        // Do not \n+        // Do not expose producer and owner as the update did not contain them so\n+        // identifying the line responsible for the error is easier\n         GTSHelper.metadataToString(sb, metadata.getName(), metadata.getLabels(), false);\n         sb.append(\" would exceed your Monthly Active Data Streams limit (\");\n         sb.append(oProducerLimit);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI3OTcwMA==", "url": "https://github.com/senx/warp10-platform/pull/649#discussion_r375279700", "bodyText": "Is that related to this PR?", "author": "ftence", "createdAt": "2020-02-05T14:17:17Z", "path": "warp10/src/main/java/io/warp10/script/functions/INFO.java", "diffHunk": "@@ -44,7 +44,11 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n     \n     if (Boolean.TRUE.equals(stack.getAttribute(WarpScriptStack.ATTRIBUTE_INFOMODE))) {\n       // Push the documentation back on the stack\n-      stack.push(top);\n+      // Perform a SNAPSHOT and an EVAL so we clone the info map\n+      StringBuilder sb = new StringBuilder();\n+      SNAPSHOT.addElement(sb, top);\n+      stack.execMulti(sb.toString());\n+", "originalCommit": "baacddf26400f01f519ef4478f478270b5392e6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5ODYxMQ==", "url": "https://github.com/senx/warp10-platform/pull/649#discussion_r375898611", "bodyText": "absolutely not!", "author": "hbs", "createdAt": "2020-02-06T15:22:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI3OTcwMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMwODEwMg==", "url": "https://github.com/senx/warp10-platform/pull/649#discussion_r375308102", "bodyText": "Better to avoid searching for the key twice.", "author": "ftence", "createdAt": "2020-02-05T15:01:57Z", "path": "warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java", "diffHunk": "@@ -509,12 +542,20 @@ private synchronized void listSubscriptions(Session session) throws IOException\n       for (BigInteger id: this.subscriptions.get(session)) {\n         sb.setLength(0);\n         sb.append(\"SUB \");\n-        GTSHelper.metadataToString(sb, metadatas.get(id).getName(), metadatas.get(id).getLabels());\n+        GTSHelper.metadataToString(sb, metadatas.get(id).getName(), metadatas.get(id).getLabels(), getExposeOwnerProducer(session));\n         session.getRemote().sendString(sb.toString());\n       }\n     }\n   }\n   \n+  private synchronized int getSubscriptionCount(Session session) {\n+    if (this.subscriptions.containsKey(session)) {\n+      return this.subscriptions.get(session).size();", "originalCommit": "baacddf26400f01f519ef4478f478270b5392e6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4b02834e443393fb62de8b58d40170c6899b76b", "chunk": "diff --git a/warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java b/warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java\nindex 83c071b3..227b0105 100644\n--- a/warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java\n+++ b/warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java\n\n@@ -549,8 +549,9 @@ public class StandalonePlasmaHandler extends WebSocketHandler.Simple implements\n   }\n   \n   private synchronized int getSubscriptionCount(Session session) {\n-    if (this.subscriptions.containsKey(session)) {\n-      return this.subscriptions.get(session).size();\n+    Set<BigInteger> subs = this.subscriptions.get(session); \n+    if (null != subs) {\n+      return subs.size();\n     } else {\n       return 0;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMxMDc5Ng==", "url": "https://github.com/senx/warp10-platform/pull/649#discussion_r375310796", "bodyText": "Replace true by expose?", "author": "ftence", "createdAt": "2020-02-05T15:06:08Z", "path": "warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java", "diffHunk": "@@ -800,6 +849,18 @@ protected void dispatch(GTSEncoder encoder) throws IOException {\n     return ids;\n   }\n   \n+  private boolean getExposeOwnerProducer(Session session) {\n+    return this.exposeOwnerProducer.getOrDefault(session, false);  \n+  }\n+  \n+  private synchronized void setExposeOwnerProducer(Session session, boolean expose) {\n+    if (true) {", "originalCommit": "baacddf26400f01f519ef4478f478270b5392e6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4b02834e443393fb62de8b58d40170c6899b76b", "chunk": "diff --git a/warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java b/warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java\nindex 83c071b3..227b0105 100644\n--- a/warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java\n+++ b/warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java\n\n@@ -854,7 +855,7 @@ public class StandalonePlasmaHandler extends WebSocketHandler.Simple implements\n   }\n   \n   private synchronized void setExposeOwnerProducer(Session session, boolean expose) {\n-    if (true) {\n+    if (expose) {\n       this.exposeOwnerProducer.put(session, expose);\n     } else {\n       this.exposeOwnerProducer.remove(session);\n"}}, {"oid": "c4b02834e443393fb62de8b58d40170c6899b76b", "url": "https://github.com/senx/warp10-platform/commit/c4b02834e443393fb62de8b58d40170c6899b76b", "message": "Addressed PR comments by @ftence", "committedDate": "2020-02-06T15:25:36Z", "type": "commit"}, {"oid": "1147ccbf14a70a601cb4d4ff56829a3c3b0623a9", "url": "https://github.com/senx/warp10-platform/commit/1147ccbf14a70a601cb4d4ff56829a3c3b0623a9", "message": "Merge branch 'master' of github.com:senx/warp10-platform into expose-producer-owner", "committedDate": "2020-02-06T15:26:02Z", "type": "commit"}]}