{"pr_number": 2969, "pr_title": "[DROOLS-5462] Generating default model name for models missing it.", "pr_createdAt": "2020-07-01T08:55:02Z", "pr_url": "https://github.com/kiegroup/drools/pull/2969", "timeline": [{"oid": "c670378a6acae15ac999094216a75e40c4c745ee", "url": "https://github.com/kiegroup/drools/commit/c670378a6acae15ac999094216a75e40c4c745ee", "message": "[DROOLS-5462] Generating default model name for models missing it.", "committedDate": "2020-07-01T08:49:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTY1OQ==", "url": "https://github.com/kiegroup/drools/pull/2969#discussion_r448225659", "bodyText": "what about empty string instead of ANONYMOUS?", "author": "danielezonca", "createdAt": "2020-07-01T09:08:13Z", "path": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java", "diffHunk": "@@ -40,7 +43,7 @@ private KiePMMLUtil() {\n      * @throws JAXBException\n      */\n     public static PMML load(String source) throws SAXException, JAXBException {\n-        return load(new ByteArrayInputStream(source.getBytes()));\n+        return load(new ByteArrayInputStream(source.getBytes()), \"ANONYMOUS\");", "originalCommit": "c670378a6acae15ac999094216a75e40c4c745ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI4MzY4NQ==", "url": "https://github.com/kiegroup/drools/pull/2969#discussion_r448283685", "bodyText": "@danielezonca\nDone", "author": "gitgabrio", "createdAt": "2020-07-01T10:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTY1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "053ad3f2f8eea0febf42d6ca35e3b1365e6510e3", "chunk": "diff --git a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java\nindex 78fec653ea..f3d149bba6 100644\n--- a/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java\n+++ b/kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/KiePMMLUtil.java\n\n@@ -43,7 +43,7 @@ public class KiePMMLUtil {\n      * @throws JAXBException\n      */\n     public static PMML load(String source) throws SAXException, JAXBException {\n-        return load(new ByteArrayInputStream(source.getBytes()), \"ANONYMOUS\");\n+        return load(new ByteArrayInputStream(source.getBytes()), \"\");\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2NjMzMw==", "url": "https://github.com/kiegroup/drools/pull/2969#discussion_r448266333", "bodyText": "Do not use File.separator and use /: Kie virtual file system doesn't support OS specific separator so you always receive /. Or at least try both", "author": "danielezonca", "createdAt": "2020-07-01T10:21:46Z", "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/service/PMMLCompilerService.java", "diffHunk": "@@ -102,4 +107,12 @@ static PMMLCompiler getCompiler(KnowledgeBuilderImpl kbuilderImpl) {\n         // to retrieve model implementations\n         return new PMMLCompilerImpl();\n     }\n+\n+    static String getFileName(final String fullPath) {\n+        String toReturn = fullPath;\n+        if (fullPath.contains(File.separator)) {\n+            toReturn = fullPath.substring(fullPath.lastIndexOf(File.separator) + 1);", "originalCommit": "c670378a6acae15ac999094216a75e40c4c745ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI4NDY1Nw==", "url": "https://github.com/kiegroup/drools/pull/2969#discussion_r448284657", "bodyText": "@danielezonca\nDone", "author": "gitgabrio", "createdAt": "2020-07-01T10:59:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2NjMzMw=="}], "type": "inlineReview", "revised_code": {"commit": "d4b11be87b976d8bd04f2aa9b45446a10f43fbb5", "chunk": "diff --git a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/service/PMMLCompilerService.java b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/service/PMMLCompilerService.java\nindex 3ef2955f24..8550864a5d 100644\n--- a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/service/PMMLCompilerService.java\n+++ b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/service/PMMLCompilerService.java\n\n@@ -112,6 +112,8 @@ public class PMMLCompilerService {\n         String toReturn = fullPath;\n         if (fullPath.contains(File.separator)) {\n             toReturn = fullPath.substring(fullPath.lastIndexOf(File.separator) + 1);\n+        } else   if (fullPath.contains(\"/\")) {\n+            toReturn = fullPath.substring(fullPath.lastIndexOf('/') + 1);\n         }\n         return toReturn;\n     }\n"}}, {"oid": "053ad3f2f8eea0febf42d6ca35e3b1365e6510e3", "url": "https://github.com/kiegroup/drools/commit/053ad3f2f8eea0febf42d6ca35e3b1365e6510e3", "message": "[DROOLS-5462] Fixed as per PR suggestion", "committedDate": "2020-07-01T10:55:52Z", "type": "commit"}, {"oid": "3a9ddacc79a8eedd3d5e6a9bf05cb89a64467b74", "url": "https://github.com/kiegroup/drools/commit/3a9ddacc79a8eedd3d5e6a9bf05cb89a64467b74", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5462", "committedDate": "2020-07-01T10:56:09Z", "type": "commit"}, {"oid": "d4b11be87b976d8bd04f2aa9b45446a10f43fbb5", "url": "https://github.com/kiegroup/drools/commit/d4b11be87b976d8bd04f2aa9b45446a10f43fbb5", "message": "[DROOLS-5462] Fixed as per PR suggestion", "committedDate": "2020-07-01T10:58:36Z", "type": "commit"}]}