{"pr_number": 3084, "pr_title": "[DROOLS-5617] Refactor MiningModel source generation", "pr_createdAt": "2020-09-08T12:39:03Z", "pr_url": "https://github.com/kiegroup/drools/pull/3084", "timeline": [{"oid": "b3fbcc823dc6ef77b0a755ec65441ce2a8827775", "url": "https://github.com/kiegroup/drools/commit/b3fbcc823dc6ef77b0a755ec65441ce2a8827775", "message": "[DROOLS-5617] Adding sources map as nested models inside MiningModel", "committedDate": "2020-09-08T08:26:05Z", "type": "commit"}, {"oid": "a7d45b5387610bded330018bd9888075e060b106", "url": "https://github.com/kiegroup/drools/commit/a7d45b5387610bded330018bd9888075e060b106", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5617", "committedDate": "2020-09-08T08:26:27Z", "type": "commit"}, {"oid": "60da5f9fd76fc59c009996bbe6ac5237d87682f5", "url": "https://github.com/kiegroup/drools/commit/60da5f9fd76fc59c009996bbe6ac5237d87682f5", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5617", "committedDate": "2020-09-08T12:27:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MjA5OA==", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r485392098", "bodyText": "Fix formatting", "author": "danielezonca", "createdAt": "2020-09-09T07:21:01Z", "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/main/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactory.java", "diffHunk": "@@ -85,14 +86,16 @@ public static KiePMMLSegmentation getSegmentation(final DataDictionary dataDicti\n                                                                 final TransformationDictionary transformationDictionary,\n                                                                 final Segmentation segmentation,\n                                                                 final String segmentationName,\n-                                                                final KnowledgeBuilder kBuilder) {\n+                                                                final KnowledgeBuilder kBuilder,\n+                                                                final List<KiePMMLModel> nestedModels) {\n         logger.debug(\"getSegmentationSourcesMap {}\", segmentation);\n         final String packageName = getSanitizedPackageName(parentPackageName + \".\" + segmentationName);\n         final Map<String, String> toReturn = getSegmentsSourcesMap(packageName,\n                                                                   dataDictionary,\n                                                                   transformationDictionary,\n                                                                   segmentation.getSegments(),\n-                                                                  kBuilder);\n+                                                                  kBuilder,\n+                                                                   nestedModels);", "originalCommit": "60da5f9fd76fc59c009996bbe6ac5237d87682f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMDQ1MA==", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r486200450", "bodyText": "@danielezonca\nDone", "author": "gitgabrio", "createdAt": "2020-09-10T09:33:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MjA5OA=="}], "type": "inlineReview", "revised_code": {"commit": "8213a6d408354f4b5d6eec4220706564d7719710", "chunk": "diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/main/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactory.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/main/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactory.java\nindex bf183d6cd1..911f165a07 100644\n--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/main/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactory.java\n+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/main/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactory.java\n\n@@ -91,18 +91,21 @@ public class KiePMMLSegmentationFactory {\n         logger.debug(\"getSegmentationSourcesMap {}\", segmentation);\n         final String packageName = getSanitizedPackageName(parentPackageName + \".\" + segmentationName);\n         final Map<String, String> toReturn = getSegmentsSourcesMap(packageName,\n-                                                                  dataDictionary,\n-                                                                  transformationDictionary,\n-                                                                  segmentation.getSegments(),\n-                                                                  kBuilder,\n+                                                                   dataDictionary,\n+                                                                   transformationDictionary,\n+                                                                   segmentation.getSegments(),\n+                                                                   kBuilder,\n                                                                    nestedModels);\n         String className = getSanitizedClassName(segmentationName);\n-        CompilationUnit cloneCU = JavaParserUtils.getKiePMMLModelCompilationUnit(className, packageName, KIE_PMML_SEGMENTATION_TEMPLATE_JAVA, KIE_PMML_SEGMENTATION_TEMPLATE);\n+        CompilationUnit cloneCU = JavaParserUtils.getKiePMMLModelCompilationUnit(className, packageName,\n+                                                                                 KIE_PMML_SEGMENTATION_TEMPLATE_JAVA,\n+                                                                                 KIE_PMML_SEGMENTATION_TEMPLATE);\n         ClassOrInterfaceDeclaration segmentationTemplate = cloneCU.getClassByName(className)\n                 .orElseThrow(() -> new KiePMMLException(MAIN_CLASS_NOT_FOUND + \": \" + className));\n-        final ConstructorDeclaration constructorDeclaration = segmentationTemplate.getDefaultConstructor().orElseThrow(() -> new KiePMMLInternalException(String.format(MISSING_DEFAULT_CONSTRUCTOR, segmentationName)));\n+        final ConstructorDeclaration constructorDeclaration =\n+                segmentationTemplate.getDefaultConstructor().orElseThrow(() -> new KiePMMLInternalException(String.format(MISSING_DEFAULT_CONSTRUCTOR, segmentationName)));\n         Set<String> segmentsClasses = segmentation.getSegments().stream()\n-                .map(segment ->  getSanitizedPackageName(packageName + \".\" + segment.getId()) + \".\" + getSanitizedClassName(segment.getId()))\n+                .map(segment -> getSanitizedPackageName(packageName + \".\" + segment.getId()) + \".\" + getSanitizedClassName(segment.getId()))\n                 .collect(Collectors.toSet());\n         if (!toReturn.keySet().containsAll(segmentsClasses)) {\n             String missingClasses = String.join(\", \", segmentsClasses);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MjY5OQ==", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r485392699", "bodyText": "Can you please add an assertion related to number of expected nested models?", "author": "danielezonca", "createdAt": "2020-09-09T07:22:12Z", "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java", "diffHunk": "@@ -77,13 +81,16 @@ public void getKiePMMLMiningModel() {\n     @Test\n     public void getKiePMMLMiningModelSourcesMap() {\n         final String packageName = \"packagename\";\n+        final List<KiePMMLModel> nestedModels = new ArrayList<>();\n         final Map<String, String> retrieved = KiePMMLMiningModelFactory.getKiePMMLMiningModelSourcesMap(\n                                                                                                        DATA_DICTIONARY,\n                                                                                                        TRANSFORMATION_DICTIONARY,\n                                                                                                        MINING_MODEL,\n                                                                                                        packageName,\n-                                                                                                       KNOWLEDGE_BUILDER);\n+                                                                                                       KNOWLEDGE_BUILDER,\n+                                                                                                       nestedModels);\n         assertNotNull(retrieved);\n+        assertFalse(nestedModels.isEmpty());", "originalCommit": "60da5f9fd76fc59c009996bbe6ac5237d87682f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMDQyMA==", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r486200420", "bodyText": "@danielezonca\nDone", "author": "gitgabrio", "createdAt": "2020-09-10T09:33:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MjY5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "8213a6d408354f4b5d6eec4220706564d7719710", "chunk": "diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java\nindex ed51c55a93..8a12b07dbe 100644\n--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java\n+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLMiningModelFactoryTest.java\n\n@@ -82,15 +82,15 @@ public class KiePMMLMiningModelFactoryTest extends AbstractKiePMMLFactoryTest {\n     public void getKiePMMLMiningModelSourcesMap() {\n         final String packageName = \"packagename\";\n         final List<KiePMMLModel> nestedModels = new ArrayList<>();\n-        final Map<String, String> retrieved = KiePMMLMiningModelFactory.getKiePMMLMiningModelSourcesMap(\n-                                                                                                       DATA_DICTIONARY,\n-                                                                                                       TRANSFORMATION_DICTIONARY,\n-                                                                                                       MINING_MODEL,\n-                                                                                                       packageName,\n-                                                                                                       KNOWLEDGE_BUILDER,\n-                                                                                                       nestedModels);\n+        final Map<String, String> retrieved = KiePMMLMiningModelFactory.getKiePMMLMiningModelSourcesMap(DATA_DICTIONARY,\n+                                                                                                        TRANSFORMATION_DICTIONARY,\n+                                                                                                        MINING_MODEL,\n+                                                                                                        packageName,\n+                                                                                                        KNOWLEDGE_BUILDER,\n+                                                                                                        nestedModels);\n         assertNotNull(retrieved);\n-        assertFalse(nestedModels.isEmpty());\n+        int expectedNestedModels = MINING_MODEL.getSegmentation().getSegments().size();\n+        assertEquals(expectedNestedModels, nestedModels.size());\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MzMwMg==", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r485393302", "bodyText": "Can you please add an assertion related to number of expected nested models?", "author": "danielezonca", "createdAt": "2020-09-09T07:23:17Z", "path": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java", "diffHunk": "@@ -52,12 +56,15 @@ public void getSegmentation() {\n     public void getSegmentationSourcesMap() {\n         final String segmentationName = \"SEGMENTATION_NAME\";\n         final String packageName = \"packagename\";\n+        final List<KiePMMLModel> nestedModels = new ArrayList<>();\n         final Map<String, String> retrieved = KiePMMLSegmentationFactory.getSegmentationSourcesMap(packageName,\n                                                                                                    DATA_DICTIONARY,\n                                                                                                    TRANSFORMATION_DICTIONARY,\n                                                                                                    MINING_MODEL.getSegmentation(),\n                                                                                                    segmentationName,\n-                                                                                                   KNOWLEDGE_BUILDER);\n+                                                                                                   KNOWLEDGE_BUILDER,\n+                                                                                                   nestedModels);\n         assertNotNull(retrieved);\n+        assertFalse(nestedModels.isEmpty());", "originalCommit": "60da5f9fd76fc59c009996bbe6ac5237d87682f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMDM3MA==", "url": "https://github.com/kiegroup/drools/pull/3084#discussion_r486200370", "bodyText": "@danielezonca\nDone", "author": "gitgabrio", "createdAt": "2020-09-10T09:33:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MzMwMg=="}], "type": "inlineReview", "revised_code": {"commit": "8213a6d408354f4b5d6eec4220706564d7719710", "chunk": "diff --git a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java\nindex b1448d07c4..d544322c68 100644\n--- a/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java\n+++ b/kie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/factories/KiePMMLSegmentationFactoryTest.java\n\n@@ -65,6 +65,7 @@ public class KiePMMLSegmentationFactoryTest extends AbstractKiePMMLFactoryTest {\n                                                                                                    KNOWLEDGE_BUILDER,\n                                                                                                    nestedModels);\n         assertNotNull(retrieved);\n-        assertFalse(nestedModels.isEmpty());\n+        int expectedNestedModels = MINING_MODEL.getSegmentation().getSegments().size();\n+        assertEquals(expectedNestedModels, nestedModels.size());\n     }\n }\n\\ No newline at end of file\n"}}, {"oid": "8213a6d408354f4b5d6eec4220706564d7719710", "url": "https://github.com/kiegroup/drools/commit/8213a6d408354f4b5d6eec4220706564d7719710", "message": "[DROOLS-5617] Fixed as per PR suggestion", "committedDate": "2020-09-10T09:00:19Z", "type": "commit"}, {"oid": "21dc4ff5a220b9cc5c856e3dd2ba7a8d70a13e76", "url": "https://github.com/kiegroup/drools/commit/21dc4ff5a220b9cc5c856e3dd2ba7a8d70a13e76", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5617", "committedDate": "2020-09-10T09:00:52Z", "type": "commit"}]}