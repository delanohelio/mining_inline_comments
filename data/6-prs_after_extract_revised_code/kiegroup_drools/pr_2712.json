{"pr_number": 2712, "pr_title": "DROOLS-4911 Enable binding functions with 3 and 4 arguments", "pr_createdAt": "2020-01-08T18:23:18Z", "pr_url": "https://github.com/kiegroup/drools/pull/2712", "timeline": [{"oid": "f14257b0ca9e4dbe7938474903596561813e2ff8", "url": "https://github.com/kiegroup/drools/commit/f14257b0ca9e4dbe7938474903596561813e2ff8", "message": "DROOLS-4911 Enable binding functions with 3 and 4 arguments", "committedDate": "2020-01-08T18:26:57Z", "type": "commit"}, {"oid": "f14257b0ca9e4dbe7938474903596561813e2ff8", "url": "https://github.com/kiegroup/drools/commit/f14257b0ca9e4dbe7938474903596561813e2ff8", "message": "DROOLS-4911 Enable binding functions with 3 and 4 arguments", "committedDate": "2020-01-08T18:26:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY1NDg2OQ==", "url": "https://github.com/kiegroup/drools/pull/2712#discussion_r364654869", "bodyText": "This is something I do not understand. This is code from Drools, it does not use my changes. Yet, it fails.\nException executing consequence for rule \"biBinding\" in defaultpkg: java.lang.NullPointerException\n\n    at org.drools.core.runtime.rule.impl.DefaultConsequenceExceptionHandler.handleException(DefaultConsequenceExceptionHandler.java:39)\n    at org.drools.core.common.DefaultAgenda.handleException(DefaultAgenda.java:1291)\n    at org.drools.core.phreak.RuleExecutor.innerFireActivation(RuleExecutor.java:438)\n    at org.drools.core.phreak.RuleExecutor.fireActivation(RuleExecutor.java:380)\n    at org.drools.core.phreak.RuleExecutor.fire(RuleExecutor.java:136)\n    at org.drools.core.phreak.RuleExecutor.evaluateNetworkAndFire(RuleExecutor.java:89)\n    at org.drools.core.concurrent.AbstractRuleEvaluator.internalEvaluateAndFire(AbstractRuleEvaluator.java:33)\n    at org.drools.core.concurrent.SequentialRuleEvaluator.evaluateAndFire(SequentialRuleEvaluator.java:43)\n    at org.drools.core.common.DefaultAgenda.fireLoop(DefaultAgenda.java:1101)\n    at org.drools.core.common.DefaultAgenda.internalFireAllRules(DefaultAgenda.java:1048)\n    at org.drools.core.common.DefaultAgenda.fireAllRules(DefaultAgenda.java:1040)\n    at org.drools.core.impl.StatefulKnowledgeSessionImpl.internalFireAllRules(StatefulKnowledgeSessionImpl.java:1337)\n    at org.drools.core.impl.StatefulKnowledgeSessionImpl.fireAllRules(StatefulKnowledgeSessionImpl.java:1328)\n    at org.drools.core.impl.StatefulKnowledgeSessionImpl.fireAllRules(StatefulKnowledgeSessionImpl.java:1312)\n    at org.drools.modelcompiler.PatternDSLTest.testBiBinding(PatternDSLTest.java:260)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.base/java.lang.reflect.Method.invoke(Method.java:567)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\n    at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\n    at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)\n    at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)\nCaused by: java.lang.NullPointerException\n    at org.drools.modelcompiler.constraints.LambdaReadAccessor.getValue(LambdaReadAccessor.java:42)\n    at org.drools.core.rule.Declaration.getValue(Declaration.java:222)\n    at org.drools.modelcompiler.consequence.LambdaConsequence.declarationsToFacts(LambdaConsequence.java:75)\n    at org.drools.modelcompiler.consequence.LambdaConsequence.evaluate(LambdaConsequence.java:47)\n    at org.drools.core.phreak.RuleExecutor.innerFireActivation(RuleExecutor.java:431)\n    ... 34 more", "author": "triceo", "createdAt": "2020-01-09T10:10:32Z", "path": "drools-model/drools-model-compiler/src/test/java/org/drools/modelcompiler/PatternDSLTest.java", "diffHunk": "@@ -225,6 +224,48 @@ public void testOr() {\n         assertEquals(\"Mario\", result.getValue());\n     }\n \n+    @Test\n+    public void testBiBinding() {\n+        Result result = new Result();\n+        Variable<Person> person1 = declarationOf( Person.class );\n+        Variable<Person> person2 = declarationOf( Person.class );\n+        Variable<Person> person3 = declarationOf( Person.class );\n+        Variable<Integer> ageSum = declarationOf( Integer.class );\n+\n+        Rule rule = rule( \"biBinding\" )\n+                .build(\n+                        pattern(person1)\n+                                .expr(\"exprA\", p -> p.getName().equals( \"Mark\" )),\n+                        pattern(person2)\n+                                .expr(\"exprB\", p -> p.getName().equals( \"Edson\" )),\n+                        pattern(person3)\n+                                .expr(\"exprC\", p -> p.getName().equals( \"Mario\" ))\n+                                .bind(ageSum, person1, (p, p2) -> p.getAge() + p2.getAge()),\n+                        on(ageSum).execute(result::setValue)", "originalCommit": "a66b30d4fefea5ce1453f9844c8f6733fb0e42b6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10e288270add1a3e089317a6f12c8c0c0dadd42e", "chunk": "diff --git a/drools-model/drools-model-compiler/src/test/java/org/drools/modelcompiler/PatternDSLTest.java b/drools-model/drools-model-compiler/src/test/java/org/drools/modelcompiler/PatternDSLTest.java\nindex 443da7fef4..d9c3ea9fe2 100644\n--- a/drools-model/drools-model-compiler/src/test/java/org/drools/modelcompiler/PatternDSLTest.java\n+++ b/drools-model/drools-model-compiler/src/test/java/org/drools/modelcompiler/PatternDSLTest.java\n\n@@ -224,48 +225,6 @@ public class PatternDSLTest {\n         assertEquals(\"Mario\", result.getValue());\n     }\n \n-    @Test\n-    public void testBiBinding() {\n-        Result result = new Result();\n-        Variable<Person> person1 = declarationOf( Person.class );\n-        Variable<Person> person2 = declarationOf( Person.class );\n-        Variable<Person> person3 = declarationOf( Person.class );\n-        Variable<Integer> ageSum = declarationOf( Integer.class );\n-\n-        Rule rule = rule( \"biBinding\" )\n-                .build(\n-                        pattern(person1)\n-                                .expr(\"exprA\", p -> p.getName().equals( \"Mark\" )),\n-                        pattern(person2)\n-                                .expr(\"exprB\", p -> p.getName().equals( \"Edson\" )),\n-                        pattern(person3)\n-                                .expr(\"exprC\", p -> p.getName().equals( \"Mario\" ))\n-                                .bind(ageSum, person1, (p, p2) -> p.getAge() + p2.getAge()),\n-                        on(ageSum).execute(result::setValue)\n-                );\n-\n-        Model model = new ModelImpl().addRule( rule );\n-        KieBase kieBase = KieBaseBuilder.createKieBaseFromModel( model );\n-\n-        KieSession ksession = kieBase.newKieSession();\n-\n-        Person mark = new Person(\"Mark\", 37);\n-        Person edson = new Person(\"Edson\", 35);\n-        Person mario = new Person(\"Mario\", 40);\n-\n-        FactHandle markFH = ksession.insert(mark);\n-        FactHandle edsonFH = ksession.insert(edson);\n-        FactHandle marioFH = ksession.insert(mario);\n-\n-        ksession.fireAllRules();\n-        assertEquals(112, result.getValue());\n-\n-        result.setValue( null );\n-        ksession.delete( marioFH );\n-        ksession.fireAllRules();\n-        assertNull(result.getValue());\n-    }\n-\n     @Test\n     public void testNot() {\n         Result result = new Result();\n"}}, {"oid": "10e288270add1a3e089317a6f12c8c0c0dadd42e", "url": "https://github.com/kiegroup/drools/commit/10e288270add1a3e089317a6f12c8c0c0dadd42e", "message": "Add the proper test", "committedDate": "2020-01-09T16:16:44Z", "type": "commit"}, {"oid": "5e5744de68ae810dd92fdeddd41abc794e8b9d98", "url": "https://github.com/kiegroup/drools/commit/5e5744de68ae810dd92fdeddd41abc794e8b9d98", "message": "Address an initial flow DSL problem", "committedDate": "2020-01-09T16:17:47Z", "type": "commit"}, {"oid": "c5e338df604474e5362d7bbc8ba0b5513f52a775", "url": "https://github.com/kiegroup/drools/commit/c5e338df604474e5362d7bbc8ba0b5513f52a775", "message": "Add a 4-bind test", "committedDate": "2020-01-09T16:35:19Z", "type": "commit"}, {"oid": "c5e338df604474e5362d7bbc8ba0b5513f52a775", "url": "https://github.com/kiegroup/drools/commit/c5e338df604474e5362d7bbc8ba0b5513f52a775", "message": "Add a 4-bind test", "committedDate": "2020-01-09T16:35:19Z", "type": "forcePushed"}, {"oid": "a324fe6a3ed9fce63b391e850132969dc4e3ebf8", "url": "https://github.com/kiegroup/drools/commit/a324fe6a3ed9fce63b391e850132969dc4e3ebf8", "message": "First fix", "committedDate": "2020-01-10T10:06:03Z", "type": "commit"}, {"oid": "0fd4116ad22f4ec14a9824db1cbaeef01f08b461", "url": "https://github.com/kiegroup/drools/commit/0fd4116ad22f4ec14a9824db1cbaeef01f08b461", "message": "Second fix", "committedDate": "2020-01-10T10:19:59Z", "type": "commit"}, {"oid": "c1ee5178c2c2afcb5c2b80a5822ad00df4f8fd9e", "url": "https://github.com/kiegroup/drools/commit/c1ee5178c2c2afcb5c2b80a5822ad00df4f8fd9e", "message": "Cleanup", "committedDate": "2020-01-10T10:42:34Z", "type": "commit"}, {"oid": "c424586f15003af40bab8cdd15b18e1e8a1606f0", "url": "https://github.com/kiegroup/drools/commit/c424586f15003af40bab8cdd15b18e1e8a1606f0", "message": "More cleanup", "committedDate": "2020-01-10T10:51:22Z", "type": "commit"}, {"oid": "904d71bae7ba95c17a4fba659a4dee7396c43bf0", "url": "https://github.com/kiegroup/drools/commit/904d71bae7ba95c17a4fba659a4dee7396c43bf0", "message": "Code style", "committedDate": "2020-01-10T10:54:13Z", "type": "commit"}]}