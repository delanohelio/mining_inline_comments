{"pr_number": 2898, "pr_title": "DROOLS-5330 DMN coercion of decision service parameter interaction with typecheck", "pr_createdAt": "2020-05-14T10:58:16Z", "pr_url": "https://github.com/kiegroup/drools/pull/2898", "timeline": [{"oid": "dd8a94d76c6dab4795d190b54853c3cd9eb1049c", "url": "https://github.com/kiegroup/drools/commit/dd8a94d76c6dab4795d190b54853c3cd9eb1049c", "message": "reproducer", "committedDate": "2020-05-14T10:25:30Z", "type": "commit"}, {"oid": "322342a98f5e886e46b8e02ca4863f8ded2cd43a", "url": "https://github.com/kiegroup/drools/commit/322342a98f5e886e46b8e02ca4863f8ded2cd43a", "message": "fix", "committedDate": "2020-05-14T10:57:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MjY0Mw==", "url": "https://github.com/kiegroup/drools/pull/2898#discussion_r425162643", "bodyText": "A small suggestion but I'm not sure if it is applicable: maybe it could have an overloading approach to coerceUsingType method for the scenario which doesn't demand such a parameter. If the (!typeCheck) condition inside coerceUsingType can't be changed to another place, then this suggestion makes no sense.", "author": "hellowdan", "createdAt": "2020-05-14T14:04:21Z", "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/ast/DMNFunctionWithReturnType.java", "diffHunk": "@@ -59,6 +59,7 @@ public Object invokeReflectively(EvaluationContext ctx, Object[] params) {\n         Object result = wrapped.invokeReflectively(ctx, params);\n         result = DMNRuntimeImpl.coerceUsingType(result,\n                                                 returnType,\n+                                                true, // this FN is created when typeCheck==true, hence here always true.", "originalCommit": "322342a98f5e886e46b8e02ca4863f8ded2cd43a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5MjIwOA==", "url": "https://github.com/kiegroup/drools/pull/2898#discussion_r425192208", "bodyText": "As discussed, in 3 out of 4 cases, it is not a literal but an instance parameter. Consensus is not need of refactor.", "author": "tarilabs", "createdAt": "2020-05-14T14:43:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE2MjY0Mw=="}], "type": "inlineReview", "revised_code": null}]}