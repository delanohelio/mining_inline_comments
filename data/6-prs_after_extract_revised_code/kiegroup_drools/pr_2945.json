{"pr_number": 2945, "pr_title": "[JBPM-9184] Subprocess excepcion handling tx rollback causes main process to fail", "pr_createdAt": "2020-06-11T06:40:43Z", "pr_url": "https://github.com/kiegroup/drools/pull/2945", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MjM0NQ==", "url": "https://github.com/kiegroup/drools/pull/2945#discussion_r440652345", "bodyText": "is not already handled in the following code?\nhttps://github.com/kiegroup/drools/blob/master/drools-persistence/drools-persistence-api/src/main/java/org/drools/persistence/jta/JtaTransactionManager.java#L264-L275\nIf not, would it make more sense to add this condition to the rollbackTransaction method?\nhttps://github.com/kiegroup/drools/blob/master/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java#L406", "author": "afalhambra", "createdAt": "2020-06-16T07:47:49Z", "path": "drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java", "diffHunk": "@@ -600,14 +600,15 @@ public RequestContext execute( Executable executable, RequestContext context ) {\n                 txm.commit( transactionOwner );\n \n             } catch ( RuntimeException re ) {\n-                rollbackTransaction( re,\n-                        transactionOwner );\n+                if (transactionOwner) {", "originalCommit": "13578b09b47f8ee9db0bbcdea7f4199c717ae1b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxNTQ2Nw==", "url": "https://github.com/kiegroup/drools/pull/2945#discussion_r441315467", "bodyText": "Actually that code block is that cause of the problem. I removed from the exeuction flow.\nWhen you are executing a workflow you don't want the subprocess to control the transaction (mark it as rollback).\nThe only doubt about this one is checking about tx control in a EJB container managed. As I am not allowing the tx rolling back it will happen during ejb tx interceptor as it will catch the tx problem.\nI am kind unsure about that\n@gmunozfe @afalhambra  wdyt ?", "author": "elguardian", "createdAt": "2020-06-17T06:44:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MjM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQxNTI5OQ==", "url": "https://github.com/kiegroup/drools/pull/2945#discussion_r441415299", "bodyText": "As discussed already, it works fine in transaction managed container based like springboot, though as you said I'm not sure about EJBs behavior. Maybe it is worth to give it a try in some other app server?", "author": "afalhambra", "createdAt": "2020-06-17T09:35:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MjM0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "dab62b1cf0f85f0b7034262529115a6683d526ff", "chunk": "diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java\nindex 8c4dd9b229..6c2e0c4ff4 100644\n--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java\n+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java\n\n@@ -600,12 +607,12 @@ public class PersistableRunner implements SingleSessionCommandService {\n                 txm.commit( transactionOwner );\n \n             } catch ( RuntimeException re ) {\n-                if (transactionOwner) {\n+                if (isParentRunner) {\n                     rollbackTransaction(re, transactionOwner);\n                 }\n                 throw re;\n             } catch ( Exception t1 ) {\n-                if (transactionOwner) {\n+                if (isParentRunner) {\n                     rollbackTransaction(t1, transactionOwner);\n                 }\n                 throw new RuntimeException(\"Wrapped exception see cause\", t1);\n"}}, {"oid": "dab62b1cf0f85f0b7034262529115a6683d526ff", "url": "https://github.com/kiegroup/drools/commit/dab62b1cf0f85f0b7034262529115a6683d526ff", "message": "[JBPM-9184] Subprocess excepcion handling tx rollback causes main process to fail\n\nThe error happens when a subprocess is invoked sync and therefore is not the owner of the tx.\nIn this case we need to let the main process handle the rollback", "committedDate": "2020-06-25T07:12:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIxNDQzMQ==", "url": "https://github.com/kiegroup/drools/pull/2945#discussion_r446214431", "bodyText": "Just a silly suggestion. Maybe this is a little clearer\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                txm.putResource(DROOLS_PARENT_RUNNER, new Object());\n          \n          \n            \n                                txm.putResource(DROOLS_PARENT_RUNNER, Boolean.TRUE);", "author": "afalhambra", "createdAt": "2020-06-26T14:21:32Z", "path": "drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java", "diffHunk": "@@ -578,11 +578,18 @@ public RequestContext execute( Executable executable, RequestContext context ) {\n \n             // Open the entity manager before the transaction begins.\n             PersistenceContext persistenceContext = jpm.getApplicationScopedPersistenceContext();\n-\n+            // We flag the current persistence runner\n+            final String DROOLS_PARENT_RUNNER = \"DROOLS_PARENT_RUNNER\";\n+            boolean isParentRunner = txm.getResource(DROOLS_PARENT_RUNNER) == null;\n             boolean transactionOwner = false;\n+\n             try {\n+                if (isParentRunner) {\n+                    txm.putResource(DROOLS_PARENT_RUNNER, new Object());", "originalCommit": "dab62b1cf0f85f0b7034262529115a6683d526ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9a5beab2a41c8b538f1a872526166c7262a0f645", "chunk": "diff --git a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java\nindex 6c2e0c4ff4..71d660261c 100644\n--- a/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java\n+++ b/drools-persistence/drools-persistence-jpa/src/main/java/org/drools/persistence/PersistableRunner.java\n\n@@ -584,8 +587,8 @@ public class PersistableRunner implements SingleSessionCommandService {\n             boolean transactionOwner = false;\n \n             try {\n-                if (isParentRunner) {\n-                    txm.putResource(DROOLS_PARENT_RUNNER, new Object());\n+                if (isParentRunner && txm.getStatus() == STATUS_ACTIVE) {\n+                    txm.putResource(DROOLS_PARENT_RUNNER, TRUE);\n                 }\n                 transactionOwner = txm.begin();\n \n"}}, {"oid": "9a5beab2a41c8b538f1a872526166c7262a0f645", "url": "https://github.com/kiegroup/drools/commit/9a5beab2a41c8b538f1a872526166c7262a0f645", "message": "[JBPM-9184] Subprocess excepcion handling tx rollback causes main process to fail\n\nThe error happens when a subprocess is invoked sync and therefore is not the owner of the tx.\nIn this case we need to let the main process handle the rollback", "committedDate": "2020-07-01T09:45:02Z", "type": "commit"}, {"oid": "9a5beab2a41c8b538f1a872526166c7262a0f645", "url": "https://github.com/kiegroup/drools/commit/9a5beab2a41c8b538f1a872526166c7262a0f645", "message": "[JBPM-9184] Subprocess excepcion handling tx rollback causes main process to fail\n\nThe error happens when a subprocess is invoked sync and therefore is not the owner of the tx.\nIn this case we need to let the main process handle the rollback", "committedDate": "2020-07-01T09:45:02Z", "type": "forcePushed"}]}