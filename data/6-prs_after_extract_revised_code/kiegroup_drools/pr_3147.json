{"pr_number": 3147, "pr_title": "DROOLS-5706 Enable quad-groupBy", "pr_createdAt": "2020-10-08T09:03:37Z", "pr_url": "https://github.com/kiegroup/drools/pull/3147", "timeline": [{"oid": "02b280302f304efc5ee511df3f17fa9b2d6401e1", "url": "https://github.com/kiegroup/drools/commit/02b280302f304efc5ee511df3f17fa9b2d6401e1", "message": "DROOLS-5706 Enable quad-groupBy", "committedDate": "2020-10-08T09:02:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MjE0OA==", "url": "https://github.com/kiegroup/drools/pull/3147#discussion_r501562148", "bodyText": "This should have been 4.", "author": "triceo", "createdAt": "2020-10-08T09:04:52Z", "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/builder/GroupByBuilder.java", "diffHunk": "@@ -212,34 +212,35 @@ private PatternImpl findPatternForVariable( List<Condition> conditions, Variable\n \n     private Consequence buildGroupCreationConsequence( Variable<Object> var_$key ) {\n         org.drools.model.Pattern<Object>[] groupingPatterns = groupByPattern.getGroupingPatterns();\n-        if (groupingPatterns.length == 1) {\n-            return D.on( var_$key ).execute( ( org.drools.model.Drools drools, Object $key ) ->\n-                    drools.insert( new GroupKey( groupByPattern.getTopic(), $key ) )\n-            ).get();\n-        }\n-\n-        if (groupingPatterns.length == 2) {\n-            return D.on( groupingPatterns[0].getPatternVariable(), groupingPatterns[1].getPatternVariable() )\n-                    .execute( ( org.drools.model.Drools drools, Object obj1, Object obj2 ) ->\n-                            drools.insert( new GroupKey( groupByPattern.getTopic(), groupByPattern.getKey( obj1, obj2 ) ) )\n-                    ).get();\n-        }\n-\n-        if (groupingPatterns.length == 3) {\n-            return D.on( groupingPatterns[0].getPatternVariable(), groupingPatterns[1].getPatternVariable(), groupingPatterns[2].getPatternVariable() )\n-                    .execute( ( org.drools.model.Drools drools, Object obj1, Object obj2, Object obj3 ) ->\n-                            drools.insert( new GroupKey( groupByPattern.getTopic(), groupByPattern.getKey( obj1, obj2, obj3 ) ) )\n-                    ).get();\n-        }\n-\n-        if (groupingPatterns.length == 3) {", "originalCommit": "02b280302f304efc5ee511df3f17fa9b2d6401e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}