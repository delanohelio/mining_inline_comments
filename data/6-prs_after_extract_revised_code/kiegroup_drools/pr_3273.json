{"pr_number": 3273, "pr_title": "[Drools 5867] - Update ApplyPmmlModelCommand to manage both PMML implementations", "pr_createdAt": "2020-12-01T15:49:31Z", "pr_url": "https://github.com/kiegroup/drools/pull/3273", "timeline": [{"oid": "fd9fb49676916991a226ebba832e010596d262a0", "url": "https://github.com/kiegroup/drools/commit/fd9fb49676916991a226ebba832e010596d262a0", "message": "[DROOLS-5867] Implemented PMMLCommandExecutorImpl and PMMLCommandExecutorFactoryImpl. Updated kie.conf", "committedDate": "2020-12-01T11:41:58Z", "type": "commit"}, {"oid": "0b82658497c393983db1c14e1f9aaac486796683", "url": "https://github.com/kiegroup/drools/commit/0b82658497c393983db1c14e1f9aaac486796683", "message": "[DROOLS-5867] Using static method inside PMMLAssemblerServices. Fixed kie.conf", "committedDate": "2020-12-01T13:56:00Z", "type": "commit"}, {"oid": "7fdd09e1fd8fc9a464846d8ab81e5c15ad5a4e12", "url": "https://github.com/kiegroup/drools/commit/7fdd09e1fd8fc9a464846d8ab81e5c15ad5a4e12", "message": "[DROOLS-5867] Update for PMMLImplementationsUtil refactoring", "committedDate": "2020-12-01T15:21:44Z", "type": "commit"}, {"oid": "9c9fee325aa2a7f2ed7794efc6b067b1236471a5", "url": "https://github.com/kiegroup/drools/commit/9c9fee325aa2a7f2ed7794efc6b067b1236471a5", "message": "[DROOLS-5867] Implemented/updated ApplyPmmlModelCommand and related test. Cleanup.", "committedDate": "2020-12-01T15:42:46Z", "type": "commit"}, {"oid": "dea58dac5fe8cfac7930f4596967d977179147b9", "url": "https://github.com/kiegroup/drools/commit/dea58dac5fe8cfac7930f4596967d977179147b9", "message": "[DROOLS-5867] Retrieving Classloader from Context.", "committedDate": "2020-12-02T10:18:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NTYyNg==", "url": "https://github.com/kiegroup/drools/pull/3273#discussion_r534075626", "bodyText": "What about something similar to\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    KieSession kieSession = registryContext.lookup(KieSession.class);\n          \n          \n            \n                    InternalKnowledgeBase kieBase = (InternalKnowledgeBase) kieSession.getKieBase();\n          \n          \n            \n                    return kieBase.getRootClassLoader();\n          \n          \n            \n                    try {\n          \n          \n            \n                        KieSession kieSession = registryContext.lookup(KieSession.class);\n          \n          \n            \n                        InternalKnowledgeBase kieBase = (InternalKnowledgeBase) kieSession.getKieBase();\n          \n          \n            \n                        return kieBase.getRootClassLoader();\n          \n          \n            \n                    catch (Exception e) {\n          \n          \n            \n                        logger.warn(\"Impossible to retrieve RootClassLoader, using ContextClassLoader [\" + e.getMessage() + \"]\", e);\n          \n          \n            \n                        return Thread.currentThread().getContextClassLoader();\n          \n          \n            \n                    }", "author": "danielezonca", "createdAt": "2020-12-02T10:55:12Z", "path": "drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java", "diffHunk": "@@ -119,6 +127,36 @@ public void setOutIdentifier(String outIdentifier) {\n     \n     @Override\n     public PMML4Result execute(Context context) {\n+        if (requestData == null) {\n+            throw new IllegalStateException(\"ApplyPmmlModelCommand requires request data (PMMLRequestData) to execute\");\n+        }\n+        final PMMLConstants toInvoke = getToInvoke(context);\n+        switch (toInvoke) {\n+            case NEW:\n+                return executePMMLTrusty();\n+            case LEGACY:\n+                return executePMMLLegacy(context);\n+            default:\n+                throw new RuntimeException(\"Unmanaged PMMLConstants \" + toInvoke);\n+        }\n+    }\n+\n+    protected PMMLConstants getToInvoke(Context context) {\n+        ClassLoader classLoader = getClassLoader((RegistryContext)context);\n+        return toEnable(classLoader);\n+    }\n+\n+    private ClassLoader getClassLoader(RegistryContext registryContext) {\n+        KieSession kieSession = registryContext.lookup(KieSession.class);\n+        InternalKnowledgeBase kieBase = (InternalKnowledgeBase) kieSession.getKieBase();\n+        return kieBase.getRootClassLoader();", "originalCommit": "dea58dac5fe8cfac7930f4596967d977179147b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzMDEzNA==", "url": "https://github.com/kiegroup/drools/pull/3273#discussion_r534230134", "bodyText": "@danielezonca\nDone", "author": "gitgabrio", "createdAt": "2020-12-02T14:55:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NTYyNg=="}], "type": "inlineReview", "revised_code": {"commit": "daddc2d66c0789eea87838e1af0d4d53004abe67", "chunk": "diff --git a/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java b/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java\nindex 83468caa0c..011cf8bdb9 100644\n--- a/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java\n+++ b/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java\n\n@@ -124,7 +131,7 @@ public class ApplyPmmlModelCommand implements ExecutableCommand<PMML4Result>, Id\n     public void setOutIdentifier(String outIdentifier) {\n         this.outIdentifier = outIdentifier;\n     }\n-    \n+\n     @Override\n     public PMML4Result execute(Context context) {\n         if (requestData == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NjYxMw==", "url": "https://github.com/kiegroup/drools/pull/3273#discussion_r534076613", "bodyText": "Please don't use Test suffix otherwise Maven will consider this class as a test class and try to load. What about Mock instead?", "author": "danielezonca", "createdAt": "2020-12-02T10:56:46Z", "path": "drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorFactoryTest.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.drools.ruleunit.command.pmml.mock;\n+\n+import org.kie.internal.pmml.PMMLCommandExecutor;\n+import org.kie.internal.pmml.PMMLCommandExecutorFactory;\n+\n+public class PMMLCommandExecutorFactoryTest implements PMMLCommandExecutorFactory {", "originalCommit": "dea58dac5fe8cfac7930f4596967d977179147b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzMDI0MQ==", "url": "https://github.com/kiegroup/drools/pull/3273#discussion_r534230241", "bodyText": "@danielezonca\nDone", "author": "gitgabrio", "createdAt": "2020-12-02T14:55:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NjYxMw=="}], "type": "inlineReview", "revised_code": {"commit": "daddc2d66c0789eea87838e1af0d4d53004abe67", "chunk": "diff --git a/drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorFactoryTest.java b/drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorFactoryMock.java\nsimilarity index 88%\nrename from drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorFactoryTest.java\nrename to drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorFactoryMock.java\nindex 3e22f2fc6b..447f425732 100644\n--- a/drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorFactoryTest.java\n+++ b/drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorFactoryMock.java\n\n@@ -18,10 +18,10 @@ package org.drools.ruleunit.command.pmml.mock;\n import org.kie.internal.pmml.PMMLCommandExecutor;\n import org.kie.internal.pmml.PMMLCommandExecutorFactory;\n \n-public class PMMLCommandExecutorFactoryTest implements PMMLCommandExecutorFactory {\n+public class PMMLCommandExecutorFactoryMock implements PMMLCommandExecutorFactory {\n \n     @Override\n     public PMMLCommandExecutor newPMMLCommandExecutor() {\n-        return new PMMLCommandExecutorTest();\n+        return new PMMLCommandExecutorMock();\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NjcyOA==", "url": "https://github.com/kiegroup/drools/pull/3273#discussion_r534076728", "bodyText": "Same as above", "author": "danielezonca", "createdAt": "2020-12-02T10:56:56Z", "path": "drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorTest.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.drools.ruleunit.command.pmml.mock;\n+\n+import org.kie.api.pmml.PMML4Result;\n+import org.kie.api.pmml.PMMLRequestData;\n+import org.kie.internal.pmml.PMMLCommandExecutor;\n+\n+public class PMMLCommandExecutorTest implements PMMLCommandExecutor {", "originalCommit": "dea58dac5fe8cfac7930f4596967d977179147b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzMDQyMA==", "url": "https://github.com/kiegroup/drools/pull/3273#discussion_r534230420", "bodyText": "@danielezonca\nDone", "author": "gitgabrio", "createdAt": "2020-12-02T14:55:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NjcyOA=="}], "type": "inlineReview", "revised_code": {"commit": "daddc2d66c0789eea87838e1af0d4d53004abe67", "chunk": "diff --git a/drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorTest.java b/drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorMock.java\nsimilarity index 94%\nrename from drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorTest.java\nrename to drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorMock.java\nindex 5b05253f7b..2c7906a22c 100644\n--- a/drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorTest.java\n+++ b/drools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/mock/PMMLCommandExecutorMock.java\n\n@@ -19,7 +19,7 @@ import org.kie.api.pmml.PMML4Result;\n import org.kie.api.pmml.PMMLRequestData;\n import org.kie.internal.pmml.PMMLCommandExecutor;\n \n-public class PMMLCommandExecutorTest implements PMMLCommandExecutor {\n+public class PMMLCommandExecutorMock implements PMMLCommandExecutor {\n \n     @Override\n     public PMML4Result execute(PMMLRequestData pmmlRequestData) {\n"}}, {"oid": "daddc2d66c0789eea87838e1af0d4d53004abe67", "url": "https://github.com/kiegroup/drools/commit/daddc2d66c0789eea87838e1af0d4d53004abe67", "message": "[DROOLS-5867] Fixed as per PR requests", "committedDate": "2020-12-02T14:54:50Z", "type": "commit"}, {"oid": "977a71dc075d79d637add733de0a4614bac05c6b", "url": "https://github.com/kiegroup/drools/commit/977a71dc075d79d637add733de0a4614bac05c6b", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5867", "committedDate": "2020-12-03T09:12:22Z", "type": "commit"}, {"oid": "df204d7489d4cdf7c34ec10bc64e6de733424e54", "url": "https://github.com/kiegroup/drools/commit/df204d7489d4cdf7c34ec10bc64e6de733424e54", "message": "[DROOLS-5867] Fixing as per SONAR suggestion", "committedDate": "2020-12-03T11:58:00Z", "type": "commit"}, {"oid": "c11523eb39638721930ca6e221fd1336084bf572", "url": "https://github.com/kiegroup/drools/commit/c11523eb39638721930ca6e221fd1336084bf572", "message": "[DROOLS-5867] Fixing as per SONAR suggestion", "committedDate": "2020-12-03T11:58:13Z", "type": "commit"}, {"oid": "198dc27dd077608b70744c0bdc1735d75614baaa", "url": "https://github.com/kiegroup/drools/commit/198dc27dd077608b70744c0bdc1735d75614baaa", "message": "[DROOLS-5867] Rollback method implementation", "committedDate": "2020-12-03T11:58:21Z", "type": "commit"}, {"oid": "198dc27dd077608b70744c0bdc1735d75614baaa", "url": "https://github.com/kiegroup/drools/commit/198dc27dd077608b70744c0bdc1735d75614baaa", "message": "[DROOLS-5867] Rollback method implementation", "committedDate": "2020-12-03T11:58:21Z", "type": "forcePushed"}, {"oid": "a2a0a8fa850a5744e790f7d005afd35fbff56a23", "url": "https://github.com/kiegroup/drools/commit/a2a0a8fa850a5744e790f7d005afd35fbff56a23", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5867\n\n# Conflicts:\n#\tdrools-ruleunit/src/test/java/org/drools/ruleunit/command/pmml/ApplyPmmlModelCommandTest.java", "committedDate": "2020-12-03T15:25:51Z", "type": "commit"}, {"oid": "20cc58fc9594863cd39533c56e07e6dd460b891a", "url": "https://github.com/kiegroup/drools/commit/20cc58fc9594863cd39533c56e07e6dd460b891a", "message": "[DROOLS-5867] Switching to org.kie.internal.pmml.PMMLImplementationsUtil.isjPMMLAvailableToClassLoader method", "committedDate": "2020-12-03T16:21:22Z", "type": "commit"}]}