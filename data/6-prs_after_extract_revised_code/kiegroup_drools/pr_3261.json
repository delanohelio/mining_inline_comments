{"pr_number": 3261, "pr_title": "[DROOLS-5700] Implement range index in Alpha Network Compiler", "pr_createdAt": "2020-11-24T09:18:01Z", "pr_url": "https://github.com/kiegroup/drools/pull/3261", "timeline": [{"oid": "4692056e98749d373fcdb416bed9e5ebb04d6d23", "url": "https://github.com/kiegroup/drools/commit/4692056e98749d373fcdb416bed9e5ebb04d6d23", "message": "[DROOLS-5700] Implement range index in Alpha Network Compiler", "committedDate": "2020-11-24T08:50:41Z", "type": "commit"}, {"oid": "7293080963937bebc2f8dd58fcda9767f3a79f4b", "url": "https://github.com/kiegroup/drools/commit/7293080963937bebc2f8dd58fcda9767f3a79f4b", "message": "- Fixed code smells", "committedDate": "2020-11-25T03:39:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIxMTM2MA==", "url": "https://github.com/kiegroup/drools/pull/3261#discussion_r530211360", "bodyText": "I thought one of the optimisation of the ANC was to unwrap the alpha node and use the constraint directly, effectively inlining the call. Can you please double check?", "author": "lucamolteni", "createdAt": "2020-11-25T09:08:42Z", "path": "drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/DeclarationsHandler.java", "diffHunk": "@@ -140,4 +148,33 @@ public void startHashedAlphaNodes(IndexableConstraint indexableConstraint) {\n     public void startHashedAlphaNode(AlphaNode hashedAlpha, Object hashedValue) {\n         currentHashedAlpha.add(hashedValue, String.valueOf(hashedAlpha.getId()));\n     }\n+\n+    @Override\n+    public void startRangeIndex(AlphaRangeIndex alphaRangeIndex) {\n+        builder.append(createRangeIndexDeclaration(alphaRangeIndex)).append(NEWLINE);\n+    }\n+\n+    private String createRangeIndexDeclaration(AlphaRangeIndex alphaRangeIndex) {\n+        int minId = getMinIdFromRangeIndex(alphaRangeIndex);\n+        AlphaNode firstNode = alphaRangeIndex.getAllValues().stream().filter(alpha -> alpha.getId() == minId).findFirst().orElseThrow(NoSuchElementException::new);\n+        String comment = firstNode.toString();\n+        String variableName = getRangeIndexVariableName(alphaRangeIndex, minId);\n+        rangeIndexDeclarationMap.put(variableName, alphaRangeIndex);\n+        return PRIVATE_MODIFIER + \" \" + AlphaRangeIndex.class.getName() + \" \" + variableName + \"; // including \" + comment + \" etc.\";\n+    }\n+\n+    public Map<String, AlphaRangeIndex> getRangeIndexDeclarationMap() {\n+        return rangeIndexDeclarationMap;\n+    }\n+\n+    @Override\n+    public void startRangeIndexedAlphaNode(AlphaNode alphaNode) {\n+        builder.append(getAlphaNodeVariableDeclaration(alphaNode)).append(NEWLINE); // range index uses AlphaNode rather than MVELConstraint", "originalCommit": "7293080963937bebc2f8dd58fcda9767f3a79f4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3NDQ5Nw==", "url": "https://github.com/kiegroup/drools/pull/3261#discussion_r530874497", "bodyText": "Yeah, I noticed that I don't need these AlphaNode variables! Actually I don't even need the internal constraints because we can get matching alphaNode's id from the range index and go to the next sink. I removed useless codes so now it's much simplified. Thanks!", "author": "tkobayas", "createdAt": "2020-11-26T09:08:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIxMTM2MA=="}], "type": "inlineReview", "revised_code": {"commit": "3da3600589486fd2538ed3f2ab07785af2713254", "chunk": "diff --git a/drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/DeclarationsHandler.java b/drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/DeclarationsHandler.java\nindex 61f8713d0b..8deac316cb 100644\n--- a/drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/DeclarationsHandler.java\n+++ b/drools-alphanetwork-compiler/src/main/java/org/drools/ancompiler/DeclarationsHandler.java\n\n@@ -166,15 +166,4 @@ public class DeclarationsHandler extends AbstractCompilerHandler {\n     public Map<String, AlphaRangeIndex> getRangeIndexDeclarationMap() {\n         return rangeIndexDeclarationMap;\n     }\n-\n-    @Override\n-    public void startRangeIndexedAlphaNode(AlphaNode alphaNode) {\n-        builder.append(getAlphaNodeVariableDeclaration(alphaNode)).append(NEWLINE); // range index uses AlphaNode rather than MVELConstraint\n-    }\n-\n-    private String getAlphaNodeVariableDeclaration(AlphaNode alphaNode) {\n-        String variableName = getAlphaNodeVariableName(alphaNode);\n-        String comment = alphaNode.toString().replace(\"\\\\n\", \"\");\n-        return PRIVATE_MODIFIER + \" \" + AlphaNode.class.getName() + \" \" + variableName + \"; // \" + comment;\n-    }\n }\n"}}, {"oid": "3da3600589486fd2538ed3f2ab07785af2713254", "url": "https://github.com/kiegroup/drools/commit/3da3600589486fd2538ed3f2ab07785af2713254", "message": "- Removed unused variables", "committedDate": "2020-11-26T09:02:02Z", "type": "commit"}]}