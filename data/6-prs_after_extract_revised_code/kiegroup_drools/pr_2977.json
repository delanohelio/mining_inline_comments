{"pr_number": 2977, "pr_title": "[DROOLS-5411] Externalize lambda for CEP", "pr_createdAt": "2020-07-06T07:03:17Z", "pr_url": "https://github.com/kiegroup/drools/pull/2977", "timeline": [{"oid": "527b60d3f503cc69b8461e532d4abd16114d9789", "url": "https://github.com/kiegroup/drools/commit/527b60d3f503cc69b8461e532d4abd16114d9789", "message": "[DROOLS-5411] Externalize lambda for CEP", "committedDate": "2020-07-06T06:51:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA2NjExMg==", "url": "https://github.com/kiegroup/drools/pull/2977#discussion_r450066112", "bodyText": "In case of temporal constraints, the generated code is like this:\nexpr(\"40AE484C3A9BF23BE65C0B135D4B1E33\",\n     (org.drools.modelcompiler.domain.StockTick _this) -> _this.getTimeFieldAsLong(),\n     var_$a,\n     (org.drools.modelcompiler.domain.StockTick $a) -> $a.getTimeFieldAsLong(),\n     D.after(5L, java.util.concurrent.TimeUnit.MILLISECONDS, 8L, java.util.concurrent.TimeUnit.MILLISECONDS)\n)\n\nSo I externalize lambdas one-by-one calling replaceLambda() instead of calling extractLambdaFromMethodCall().", "author": "tkobayas", "createdAt": "2020-07-06T08:32:21Z", "path": "drools-model/drools-model-compiler/src/main/java/org/drools/modelcompiler/util/lambdareplace/ExecModelLambdaPostProcessor.java", "diffHunk": "@@ -137,6 +144,31 @@ public void convertLambdas() {\n              });\n     }\n \n+    private void convertTemporalExpr(MethodCallExpr methodCallExpr) {\n+        // TemporalExpr methodCallExpr may have 2 lambdas\n+        methodCallExpr.getArguments().forEach(a -> {\n+            if (a.isLambdaExpr()) {\n+                LambdaExpr lambdaExpr = a.asLambdaExpr();\n+                Optional<MaterializedLambdaExtractor> extractorOpt = createMaterializedLambdaExtractor(lambdaExpr);\n+                if (!extractorOpt.isPresent()) {\n+                    logger.debug(\"Unable to create MaterializedLambdaExtractor for {}\", lambdaExpr);\n+                } else {\n+                    MaterializedLambdaExtractor extractor = extractorOpt.get();\n+                    replaceLambda(lambdaExpr, () -> extractor);\n+                }\n+            }\n+        });\n+    }\n+", "originalCommit": "527b60d3f503cc69b8461e532d4abd16114d9789", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "b73cec173db855197fa45dddae8d44bdbeccba72", "url": "https://github.com/kiegroup/drools/commit/b73cec173db855197fa45dddae8d44bdbeccba72", "message": "- add test case", "committedDate": "2020-07-06T10:07:04Z", "type": "commit"}]}