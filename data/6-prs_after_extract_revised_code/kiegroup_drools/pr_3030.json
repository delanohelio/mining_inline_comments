{"pr_number": 3030, "pr_title": "[DROOLS-5538] DMN strongly typed class compile errors for collection \u2026", "pr_createdAt": "2020-08-05T03:09:37Z", "pr_url": "https://github.com/kiegroup/drools/pull/3030", "timeline": [{"oid": "df1f9dcd134d71baded69c61338778e7c554e186", "url": "https://github.com/kiegroup/drools/commit/df1f9dcd134d71baded69c61338778e7c554e186", "message": "[DROOLS-5538] DMN strongly typed class compile errors for collection types", "committedDate": "2020-08-05T02:18:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ0ODA5MA==", "url": "https://github.com/kiegroup/drools/pull/3030#discussion_r465448090", "bodyText": "Don't index a collection type of a declared type (e.g. tPersonList which is a collection of tPerson in testTopLevelTypeCollection) because it will be a Collection<TPerson> field in InputSet.\nOn the other hand, a collection of a composite structure (e.g. tPairList which is a collection of composite of string and number in testTopLevelCompositeCollection) will generate a Java class of the composite structure. The collection will be a Collection<TPairList> field in InputSet. (btw, in this case, we may want to name the type \"tPair\" rather than \"tPairList\". But I chose \"tPairList\" because it looks natural in the DMN itself)", "author": "tkobayas", "createdAt": "2020-08-05T03:20:16Z", "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/typesafe/DMNModelTypesIndex.java", "diffHunk": "@@ -61,7 +61,8 @@ public void createIndex() {\n     }\n \n     private boolean shouldIndex(DMNType dmnType) {\n-        return !dmnType.getNamespace().equals(model.getDefinitions().getURIFEEL()) && dmnType.isComposite();\n+        // Don't index a collection type of a declared type. e.g. tPersonList which is a collection of tPerson\n+        return !dmnType.getNamespace().equals(model.getDefinitions().getURIFEEL()) && dmnType.isComposite() && !(dmnType.isCollection() && dmnType.getBaseType() != null);", "originalCommit": "df1f9dcd134d71baded69c61338778e7c554e186", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4NzUyNQ==", "url": "https://github.com/kiegroup/drools/pull/3030#discussion_r465987525", "bodyText": "Makes sense, thank you for this fix @tkobayas !\nWe might need to further check indexing when dealing with collection of collection (of collection)* later\nBut it's comforting to know it now works in the most common use cases thanks to this fix!", "author": "tarilabs", "createdAt": "2020-08-05T20:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ0ODA5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwMzcwNg==", "url": "https://github.com/kiegroup/drools/pull/3030#discussion_r466103706", "bodyText": "We might need to further check indexing when dealing with collection of collection (of collection)* later\n\nSure, filed a JIRA https://issues.redhat.com/browse/DROOLS-5561", "author": "tkobayas", "createdAt": "2020-08-06T02:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ0ODA5MA=="}], "type": "inlineReview", "revised_code": null}]}