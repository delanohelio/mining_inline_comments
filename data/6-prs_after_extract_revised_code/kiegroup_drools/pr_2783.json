{"pr_number": 2783, "pr_title": "[DROOLS-5103] Implementing multi-module PMML model archetype", "pr_createdAt": "2020-02-24T15:32:45Z", "pr_url": "https://github.com/kiegroup/drools/pull/2783", "timeline": [{"oid": "7a0322438e4b8e00879571436652cf856a897b78", "url": "https://github.com/kiegroup/drools/commit/7a0322438e4b8e00879571436652cf856a897b78", "message": "[DROOLS-5103] Implementing multi-module PMML model archetype", "committedDate": "2020-02-24T15:30:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyNjg1Mw==", "url": "https://github.com/kiegroup/drools/pull/2783#discussion_r383726853", "bodyText": "Please remove unnecessary new lines.", "author": "jiripetrlik", "createdAt": "2020-02-25T08:37:40Z", "path": "kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProvider.java", "diffHunk": "@@ -0,0 +1,46 @@\n+#set($str=\"\")\n+#set($dt=$str.getClass().forName(\"java.util.Date\").newInstance())\n+#set($year=$dt.getYear()+1900)\n+/*\n+* Copyright ${year} Red Hat, Inc. and/or its affiliates.\n+*\n+* Licensed under the Apache License, Version 2.0 (the \"License\");\n+* you may not use this file except in compliance with the License.\n+* You may obtain a copy of the License at\n+*\n+*     http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+package ${package}.${packageModelName}.compiler.executor;\n+\n+import org.dmg.pmml.DataDictionary;\n+import org.dmg.pmml.${packageModelName}.${modelName}Model;\n+import org.kie.pmml.commons.model.enums.PMML_MODEL;\n+import org.kie.pmml.compiler.api.provider.ModelImplementationProvider;\n+import ${package}.${packageModelName}.compiler.factories.KiePMML${modelName}ModelFactory;\n+import ${package}.${packageModelName}.model.KiePMML${modelName}Model;\n+\n+import static ${package}.${packageModelName}.model.KiePMML${modelName}Model.PMML_MODEL_TYPE;\n+", "originalCommit": "7a0322438e4b8e00879571436652cf856a897b78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM1NTI1Nw==", "url": "https://github.com/kiegroup/drools/pull/2783#discussion_r384355257", "bodyText": "@jiripetrlik\nK. I leave the empty lines as the ones generated by auto-formatting with our code-style (next commit)", "author": "gitgabrio", "createdAt": "2020-02-26T09:04:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyNjg1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f58147013a77134b68bd81156354e7220e83b4ce", "chunk": "diff --git a/kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProvider.java b/kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProvider.java\nsimilarity index 99%\nrename from kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProvider.java\nrename to kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProvider.java\nindex 6b3ba10ee0..f676fdf164 100644\n--- a/kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProvider.java\n+++ b/kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProvider.java\n\n@@ -27,8 +27,6 @@ import ${package}.${packageModelName}.model.KiePMML${modelName}Model;\n \n import static ${package}.${packageModelName}.model.KiePMML${modelName}Model.PMML_MODEL_TYPE;\n \n-\n-\n /**\n  * Default <code>ModelImplementationProvider</code> for <b>${modelName}</b>\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNzExOA==", "url": "https://github.com/kiegroup/drools/pull/2783#discussion_r383827118", "bodyText": "I prefer empty implementation with throws new UnsupportedOperationException() instead a return null. Wdtr?", "author": "danielezonca", "createdAt": "2020-02-25T11:40:52Z", "path": "kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/factories/KiePMML__modelName__ModelFactory.java", "diffHunk": "@@ -0,0 +1,37 @@\n+#set($str=\"\")\n+#set($dt=$str.getClass().forName(\"java.util.Date\").newInstance())\n+#set($year=$dt.getYear()+1900)\n+/*\n+ * Copyright ${year} Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package  ${package}.${packageModelName}.compiler.factories;\n+\n+import org.dmg.pmml.DataDictionary;\n+import org.dmg.pmml.${packageModelName}.${modelName}Model;\n+import ${package}.${packageModelName}.model.KiePMML${modelName}Model;\n+\n+\n+public class KiePMML${modelName}ModelFactory {\n+\n+\n+    public static KiePMML${modelName}Model getKiePMML${modelName}Model(DataDictionary dataDictionary, ${modelName}Model model) {\n+        // TODO\n+        return null;", "originalCommit": "7a0322438e4b8e00879571436652cf856a897b78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM1NzI5NA==", "url": "https://github.com/kiegroup/drools/pull/2783#discussion_r384357294", "bodyText": "@danielezonca\nI tried, but it lead to following IT test failure, so I removed", "author": "gitgabrio", "createdAt": "2020-02-26T09:07:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNzExOA=="}], "type": "inlineReview", "revised_code": {"commit": "f58147013a77134b68bd81156354e7220e83b4ce", "chunk": "diff --git a/kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/factories/KiePMML__modelName__ModelFactory.java b/kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/factories/KiePMML__modelName__ModelFactory.java\nsimilarity index 96%\nrename from kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/factories/KiePMML__modelName__ModelFactory.java\nrename to kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/factories/KiePMML__modelName__ModelFactory.java\nindex 9ade65f814..be4007124e 100644\n--- a/kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/factories/KiePMML__modelName__ModelFactory.java\n+++ b/kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/main/java/__packageModelName__/compiler/factories/KiePMML__modelName__ModelFactory.java\n\n@@ -22,13 +22,12 @@ import org.dmg.pmml.DataDictionary;\n import org.dmg.pmml.${packageModelName}.${modelName}Model;\n import ${package}.${packageModelName}.model.KiePMML${modelName}Model;\n \n-\n public class KiePMML${modelName}ModelFactory {\n \n \n     public static KiePMML${modelName}Model getKiePMML${modelName}Model(DataDictionary dataDictionary, ${modelName}Model model) {\n         // TODO\n-        return null;\n+        throw new UnsupportedOperationException();\n     }\n \n     private KiePMML${modelName}ModelFactory(){\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNzU0NQ==", "url": "https://github.com/kiegroup/drools/pull/2783#discussion_r383827545", "bodyText": "Also here I would prefer a wrong assertion like fail(\"To be implemented\"). Wdyt?", "author": "danielezonca", "createdAt": "2020-02-25T11:41:54Z", "path": "kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/test/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProviderTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+#set($str=\"\")\n+#set($dt=$str.getClass().forName(\"java.util.Date\").newInstance())\n+#set($year=$dt.getYear()+1900)\n+/*\n+ * Copyright ${year} Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package ${package}.${packageModelName}.compiler.executor;\n+\n+import org.kie.pmml.commons.model.enums.PMML_MODEL;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ${modelName}ModelImplementationProviderTest {\n+\n+    private static final ${modelName}ModelImplementationProvider PROVIDER= new ${modelName}ModelImplementationProvider();\n+\n+    @Test\n+    public void getPMMLModelType(){\n+        assertEquals(PMML_MODEL.${modelNameUppercase}_MODEL,PROVIDER.getPMMLModelType());\n+    }\n+\n+    @Test\n+    public void getKiePMMLModel() throws Exception {\n+        // TODO", "originalCommit": "7a0322438e4b8e00879571436652cf856a897b78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM1ODA3Mg==", "url": "https://github.com/kiegroup/drools/pull/2783#discussion_r384358072", "bodyText": "@danielezonca\nSee previous answer", "author": "gitgabrio", "createdAt": "2020-02-26T09:09:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyNzU0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f58147013a77134b68bd81156354e7220e83b4ce", "chunk": "diff --git a/kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/test/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProviderTest.java b/kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/test/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProviderTest.java\nsimilarity index 97%\nrename from kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/test/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProviderTest.java\nrename to kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/test/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProviderTest.java\nindex 97010dd790..a0fe30d900 100644\n--- a/kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/test/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProviderTest.java\n+++ b/kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-compiler/src/test/java/__packageModelName__/compiler/executor/__modelName__ModelImplementationProviderTest.java\n\n@@ -22,6 +22,7 @@ import org.kie.pmml.commons.model.enums.PMML_MODEL;\n import org.junit.Test;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n \n public class ${modelName}ModelImplementationProviderTest {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyODM2MA==", "url": "https://github.com/kiegroup/drools/pull/2783#discussion_r383828360", "bodyText": "Same comment here", "author": "danielezonca", "createdAt": "2020-02-25T11:43:35Z", "path": "kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-evaluator/src/main/java/__packageModelName__/evaluator/PMML__modelName__ModelEvaluator.java", "diffHunk": "@@ -0,0 +1,50 @@\n+#set($str=\"\")\n+#set($dt=$str.getClass().forName(\"java.util.Date\").newInstance())\n+#set($year=$dt.getYear()+1900)\n+/*\n+ * Copyright ${year} Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package  ${package}.${packageModelName}.evaluator;\n+\n+\n+import org.kie.api.pmml.PMML4Result;\n+import org.kie.pmml.commons.model.KiePMMLModel;\n+import org.kie.pmml.commons.model.enums.PMML_MODEL;\n+import org.kie.pmml.evaluator.api.exceptions.KiePMMLModelException;\n+import org.kie.pmml.evaluator.api.executor.PMMLContext;\n+import org.kie.pmml.evaluator.core.executor.PMMLModelExecutor;\n+import ${package}.${packageModelName}.model.KiePMML${modelName}Model;\n+\n+\n+\n+/**\n+ * Default <code>PMMLModelExecutor</code> for <b>${modelName}</b>\n+ */\n+public class PMML${modelName}ModelEvaluator implements PMMLModelExecutor {\n+\n+    @Override\n+    public PMML_MODEL getPMMLModelType(){\n+        return PMML_MODEL.${modelNameUppercase}_MODEL;\n+    }\n+\n+    @Override\n+    public PMML4Result evaluate(KiePMMLModel model, PMMLContext context, String releaseId) {\n+        if(!(model instanceof KiePMML${modelName}Model)){\n+            throw new KiePMMLModelException(\"Expected a KiePMML${modelName}Model, received a \"+ model.getClass().getName());\n+        }\n+        // TODO\n+        return null;", "originalCommit": "7a0322438e4b8e00879571436652cf856a897b78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM1ODE2MQ==", "url": "https://github.com/kiegroup/drools/pull/2783#discussion_r384358161", "bodyText": "@danielezonca\nSame answer here", "author": "gitgabrio", "createdAt": "2020-02-26T09:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgyODM2MA=="}], "type": "inlineReview", "revised_code": {"commit": "f58147013a77134b68bd81156354e7220e83b4ce", "chunk": "diff --git a/kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-evaluator/src/main/java/__packageModelName__/evaluator/PMML__modelName__ModelEvaluator.java b/kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-evaluator/src/main/java/__packageModelName__/evaluator/PMML__modelName__ModelEvaluator.java\nsimilarity index 97%\nrename from kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-evaluator/src/main/java/__packageModelName__/evaluator/PMML__modelName__ModelEvaluator.java\nrename to kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-evaluator/src/main/java/__packageModelName__/evaluator/PMML__modelName__ModelEvaluator.java\nindex 6ba89609a2..af815c6a97 100644\n--- a/kie-pmml-new/kie-pmml-models/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-evaluator/src/main/java/__packageModelName__/evaluator/PMML__modelName__ModelEvaluator.java\n+++ b/kie-pmml-new/kie-pmml-models-archetype/src/main/resources/archetype-resources/__rootArtifactId__-evaluator/src/main/java/__packageModelName__/evaluator/PMML__modelName__ModelEvaluator.java\n\n@@ -18,7 +18,6 @@\n  */\n package  ${package}.${packageModelName}.evaluator;\n \n-\n import org.kie.api.pmml.PMML4Result;\n import org.kie.pmml.commons.model.KiePMMLModel;\n import org.kie.pmml.commons.model.enums.PMML_MODEL;\n"}}, {"oid": "27b45de09e33ac98d2d458b5ad7c0f9a4c50fc4e", "url": "https://github.com/kiegroup/drools/commit/27b45de09e33ac98d2d458b5ad7c0f9a4c50fc4e", "message": "[DROOLS-5103] Movedo archetype to main PMML root. Automatic generation of archetypeId", "committedDate": "2020-02-25T13:54:32Z", "type": "commit"}, {"oid": "f58147013a77134b68bd81156354e7220e83b4ce", "url": "https://github.com/kiegroup/drools/commit/f58147013a77134b68bd81156354e7220e83b4ce", "message": "[DROOLS-5103] Fixed as per PR suggestion. Add IT tests", "committedDate": "2020-02-26T09:58:00Z", "type": "commit"}]}