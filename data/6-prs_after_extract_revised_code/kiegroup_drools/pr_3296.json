{"pr_number": 3296, "pr_title": "[DROOLS-5861] Fixing KieBase/Classloader usage", "pr_createdAt": "2020-12-18T17:13:50Z", "pr_url": "https://github.com/kiegroup/drools/pull/3296", "timeline": [{"oid": "24a6cf508e967ff9177279024d35d8ba321f4583", "url": "https://github.com/kiegroup/drools/commit/24a6cf508e967ff9177279024d35d8ba321f4583", "message": "[DROOLS-5860] Implementing interfaces to propagate classloader", "committedDate": "2020-12-14T10:30:30Z", "type": "commit"}, {"oid": "b973b0bdde633f4e8bb53f9f5856961fe4ecdbb4", "url": "https://github.com/kiegroup/drools/commit/b973b0bdde633f4e8bb53f9f5856961fe4ecdbb4", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5860", "committedDate": "2020-12-14T10:32:08Z", "type": "commit"}, {"oid": "d00ba0b5b789e3dec6765fe661e61be5997b39f9", "url": "https://github.com/kiegroup/drools/commit/d00ba0b5b789e3dec6765fe661e61be5997b39f9", "message": "[DROOLS-5860] Update kie-pmml-dependencies definition", "committedDate": "2020-12-14T13:48:59Z", "type": "commit"}, {"oid": "e4b51a18bb0c90ce1f07427130b00f92c3ba98bc", "url": "https://github.com/kiegroup/drools/commit/e4b51a18bb0c90ce1f07427130b00f92c3ba98bc", "message": "[DROOLS-5860] Fixing AbstractPMMLInvocationEvaluator to use PMMLImplementationsUtil.toEnable", "committedDate": "2020-12-14T16:35:03Z", "type": "commit"}, {"oid": "3af6f6b0720af1239e32653eb70bce241afc6447", "url": "https://github.com/kiegroup/drools/commit/3af6f6b0720af1239e32653eb70bce241afc6447", "message": "[DROOLS-5860] Fixing as per PR request", "committedDate": "2020-12-15T13:39:34Z", "type": "commit"}, {"oid": "73c5ef3bebdf1ba01cc83c9f61c01ea98d262c1f", "url": "https://github.com/kiegroup/drools/commit/73c5ef3bebdf1ba01cc83c9f61c01ea98d262c1f", "message": "Merge branch 'DROOLS-5860' into DROOLS-5898", "committedDate": "2020-12-15T13:44:48Z", "type": "commit"}, {"oid": "0d8cc04cecd1f0bc96c5f97720bbd2d5494fae35", "url": "https://github.com/kiegroup/drools/commit/0d8cc04cecd1f0bc96c5f97720bbd2d5494fae35", "message": "[DROOLS-5898] Implementing Serializable on PMML models", "committedDate": "2020-12-15T15:30:12Z", "type": "commit"}, {"oid": "2e263e75edf845b57b8a7f04cfd90173ab3981d3", "url": "https://github.com/kiegroup/drools/commit/2e263e75edf845b57b8a7f04cfd90173ab3981d3", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5898\n\n# Conflicts:\n#\tkie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/src/test/java/org/kie/pmml/models/drools/scorecard/compiler/executor/ScorecardModelImplementationProviderTest.java\n#\tkie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-tree/kie-pmml-models-drools-tree-compiler/src/test/java/org/kie/pmml/models/drools/tree/compiler/executor/TreeModelImplementationProviderTest.java\n#\tkie-pmml-trusty/kie-pmml-models/kie-pmml-models-mining/kie-pmml-models-mining-compiler/src/test/java/org/kie/pmml/models/mining/compiler/executor/MiningModelImplementationProviderTest.java", "committedDate": "2020-12-16T16:16:55Z", "type": "commit"}, {"oid": "103d8bde2036ffbdc5ebab77de0a5ad23c9bea68", "url": "https://github.com/kiegroup/drools/commit/103d8bde2036ffbdc5ebab77de0a5ad23c9bea68", "message": "[DROOLS-5898] Merge master", "committedDate": "2020-12-16T16:21:42Z", "type": "commit"}, {"oid": "0c2538b1dd54bf99e3c3c94855dcbad5b8d60dc9", "url": "https://github.com/kiegroup/drools/commit/0c2538b1dd54bf99e3c3c94855dcbad5b8d60dc9", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5898", "committedDate": "2020-12-17T09:05:21Z", "type": "commit"}, {"oid": "4dcf840d0a5c11e8e536ad7d6d77d8af119ef283", "url": "https://github.com/kiegroup/drools/commit/4dcf840d0a5c11e8e536ad7d6d77d8af119ef283", "message": "[DROOLS-5898] Make KiePMMLExtension serializable", "committedDate": "2020-12-17T09:42:20Z", "type": "commit"}, {"oid": "44c94bbe4d187d17b6f15d752fb4627fbb54735b", "url": "https://github.com/kiegroup/drools/commit/44c94bbe4d187d17b6f15d752fb4627fbb54735b", "message": "[DROOLS-5861] Retrieveing kiebase from command Context. Populating classloader with compiled sources.", "committedDate": "2020-12-18T17:12:22Z", "type": "commit"}, {"oid": "95d274a7d86f06982f2bf268c07f92d9baa1e4f5", "url": "https://github.com/kiegroup/drools/commit/95d274a7d86f06982f2bf268c07f92d9baa1e4f5", "message": "Make KieMemoryCompiler more flexible", "committedDate": "2020-12-20T17:55:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNzIwOQ==", "url": "https://github.com/kiegroup/drools/pull/3296#discussion_r546407209", "bodyText": "Please add a comment like \"configure result to be equivalent of old kie-pmml impl\"", "author": "danielezonca", "createdAt": "2020-12-20T17:41:31Z", "path": "drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java", "diffHunk": "@@ -167,7 +170,14 @@ protected PMML4Result executePMMLLegacy(Context context) {\n                                                                                          packageName, isMining());\n     }\n \n-    protected PMML4Result executePMMLTrusty() {\n-        return PMMLCommandExecutorFactory.get().newPMMLCommandExecutor().execute(requestData);\n+    protected PMML4Result executePMMLTrusty(Context context) {\n+        RegistryContext registryContext = (RegistryContext) context;\n+        PMML4Result toReturn = PMMLCommandExecutorFactory.get().newPMMLCommandExecutor().execute(requestData, context);\n+        Optional<ExecutionResultImpl> execRes = Optional.ofNullable(registryContext.lookup(ExecutionResultImpl.class));\n+        registryContext.register(PMML4Result.class, toReturn);\n+        execRes.ifPresent(result -> {\n+            result.setResult(\"results\", toReturn);\n+        });", "originalCommit": "44c94bbe4d187d17b6f15d752fb4627fbb54735b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYxMTM2Mg==", "url": "https://github.com/kiegroup/drools/pull/3296#discussion_r546611362", "bodyText": "@danielezonca\ndone", "author": "gitgabrio", "createdAt": "2020-12-21T09:55:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNzIwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "1ea635ec5fbc446b3896f04585546cea187bdaa5", "chunk": "diff --git a/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java b/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java\nindex 7b0c7444de..8e13d119de 100644\n--- a/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java\n+++ b/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java\n\n@@ -173,11 +173,11 @@ public class ApplyPmmlModelCommand implements ExecutableCommand<PMML4Result>,\n     protected PMML4Result executePMMLTrusty(Context context) {\n         RegistryContext registryContext = (RegistryContext) context;\n         PMML4Result toReturn = PMMLCommandExecutorFactory.get().newPMMLCommandExecutor().execute(requestData, context);\n+        // Needed to update the ExecutionResultImpl and the Registry context,\n+        // has done inside legacy implementation\n         Optional<ExecutionResultImpl> execRes = Optional.ofNullable(registryContext.lookup(ExecutionResultImpl.class));\n         registryContext.register(PMML4Result.class, toReturn);\n-        execRes.ifPresent(result -> {\n-            result.setResult(\"results\", toReturn);\n-        });\n+        execRes.ifPresent(result -> result.setResult(\"results\", toReturn));\n         return toReturn;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNzQ4OA==", "url": "https://github.com/kiegroup/drools/pull/3296#discussion_r546407488", "bodyText": "Please add a Javadoc to refer JSONMarshallerPMMLParamInfo behavior", "author": "danielezonca", "createdAt": "2020-12-20T17:43:54Z", "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/command/PMMLCommandExecutorImpl.java", "diffHunk": "@@ -60,7 +67,22 @@ private PMML4Result evaluate(final PMMLRequestData pmmlRequestData, final PMMLRu\n         return pmmlRuntime.evaluate(modelName, pmmlContext);\n     }\n \n-    private PMMLRuntime getPMMLRuntime(String pmmlFileName) {\n-        return PMML_RUNTIME_FACTORY.getPMMLRuntimeFromClasspath(pmmlFileName);\n+    private PMMLRuntime getPMMLRuntime(String pmmlFileName, String pmmlModelName, KieBase kieBase) {\n+        return PMML_RUNTIME_FACTORY.getPMMLRuntimeFromFileNameModelNameAndKieBase(pmmlFileName, pmmlModelName, kieBase);\n+    }\n+\n+    @SuppressWarnings(\"rawtype\")\n+    private PMMLRequestData getCleanedRequestData(PMMLRequestData toClean) {", "originalCommit": "44c94bbe4d187d17b6f15d752fb4627fbb54735b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYxODEyMg==", "url": "https://github.com/kiegroup/drools/pull/3296#discussion_r546618122", "bodyText": "@danielezonca\ndone", "author": "gitgabrio", "createdAt": "2020-12-21T10:09:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNzQ4OA=="}], "type": "inlineReview", "revised_code": {"commit": "1ea635ec5fbc446b3896f04585546cea187bdaa5", "chunk": "diff --git a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/command/PMMLCommandExecutorImpl.java b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/command/PMMLCommandExecutorImpl.java\nindex 66a73b8e92..b601859cd8 100644\n--- a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/command/PMMLCommandExecutorImpl.java\n+++ b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/command/PMMLCommandExecutorImpl.java\n\n@@ -71,13 +71,22 @@ public class PMMLCommandExecutorImpl implements PMMLCommandExecutor {\n         return PMML_RUNTIME_FACTORY.getPMMLRuntimeFromFileNameModelNameAndKieBase(pmmlFileName, pmmlModelName, kieBase);\n     }\n \n+    /**\n+     * Return a <b>new</b> <code>PMMLRequestData</code> with the values of the original <code>PMMLRequestData</code> restored to their actual type.\n+     *\n+     * Needed because <code>JSONMarshallerPMMLParamInfo</code> convert all of them to <code>String</code>\n+     *\n+     * @see <a href=\"https://github.com/kiegroup/droolsjbpm-integration/blob/master/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/marshalling/json/JSONMarshallerPMMLParamInfo.java#L67\">JSONMarshallerPMMLParamInfo.PMMLParamSerializer.serialize(ParameterInfo, JsonGenerator, SerializerProvider)</a>\n+     * @param source\n+     * @return\n+     */\n     @SuppressWarnings(\"rawtype\")\n-    private PMMLRequestData getCleanedRequestData(PMMLRequestData toClean) {\n+    private PMMLRequestData getCleanedRequestData(PMMLRequestData source) {\n         final PMMLRequestData toReturn = new PMMLRequestData();\n-        toReturn.setSource(toClean.getSource());\n-        toReturn.setCorrelationId(toClean.getCorrelationId());\n-        toReturn.setModelName(toClean.getModelName());\n-        toClean.getRequestParams().forEach(parameterInfo -> {\n+        toReturn.setSource(source.getSource());\n+        toReturn.setCorrelationId(source.getCorrelationId());\n+        toReturn.setModelName(source.getModelName());\n+        source.getRequestParams().forEach(parameterInfo -> {\n             Object value = ConverterTypeUtil.convert(parameterInfo.getType(), parameterInfo.getValue());\n             ParameterInfo<?> toAdd = new ParameterInfo(parameterInfo.getCorrelationId(), parameterInfo.getName(),\n                                                        parameterInfo.getType(), value);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwOTAzNg==", "url": "https://github.com/kiegroup/drools/pull/3296#discussion_r546409036", "bodyText": "Please accept this PR to make compile method more flexible\ngitgabrio#1", "author": "danielezonca", "createdAt": "2020-12-20T17:58:09Z", "path": "kie-memory-compiler/src/main/java/org/kie/memorycompiler/KieMemoryCompiler.java", "diffHunk": "@@ -29,14 +29,39 @@\n     private KieMemoryCompiler() { }\n \n     /**\n-     * Compile the given sources and add compiled classes to the given <code>ClassLoader</code>\n+     * Compile the given sources <b>without</b> adding compiled classes to the given <code>ClassLoader</code>\n      * <b>classNameSourceMap</b>' key must be the <b>FQDN</b> of the class to compile\n      *\n      * @param classNameSourceMap\n      * @param classLoader\n      * @return\n      */\n     public static Map<String, Class<?>> compile(Map<String, String> classNameSourceMap, ClassLoader classLoader) {", "originalCommit": "44c94bbe4d187d17b6f15d752fb4627fbb54735b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bb75a2250c3ba5cbc952aa66c72b66394621e9a9", "chunk": "diff --git a/kie-memory-compiler/src/main/java/org/kie/memorycompiler/KieMemoryCompiler.java b/kie-memory-compiler/src/main/java/org/kie/memorycompiler/KieMemoryCompiler.java\nindex d591a3c18f..bf80f2b2f7 100644\n--- a/kie-memory-compiler/src/main/java/org/kie/memorycompiler/KieMemoryCompiler.java\n+++ b/kie-memory-compiler/src/main/java/org/kie/memorycompiler/KieMemoryCompiler.java\n\n@@ -37,7 +37,21 @@ public class KieMemoryCompiler {\n      * @return\n      */\n     public static Map<String, Class<?>> compile(Map<String, String> classNameSourceMap, ClassLoader classLoader) {\n-        Map<String, byte[]> byteCode = compileNoLoad(classNameSourceMap, classLoader);\n+        return compile(classNameSourceMap, classLoader, null);\n+    }\n+\n+    /**\n+     * Compile the given sources <b>without</b> adding compiled classes to the given <code>ClassLoader</code>\n+     * <b>classNameSourceMap</b>' key must be the <b>FQDN</b> of the class to compile.\n+     * Additional compiler settings can be provided using JavaCompilerSettings\n+     *\n+     * @param classNameSourceMap\n+     * @param classLoader\n+     * @param compilerSettings\n+     * @return\n+     */\n+    public static Map<String, Class<?>> compile(Map<String, String> classNameSourceMap, ClassLoader classLoader, JavaCompilerSettings compilerSettings) {\n+        Map<String, byte[]> byteCode = compileNoLoad(classNameSourceMap, classLoader, compilerSettings);\n \n         MemoryCompilerClassLoader kieMemoryCompilerClassLoader = new MemoryCompilerClassLoader(classLoader);\n \n"}}, {"oid": "348dba2b7d4636d21d4e1a446eb1fee9bb96b499", "url": "https://github.com/kiegroup/drools/commit/348dba2b7d4636d21d4e1a446eb1fee9bb96b499", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2020-12-21T08:06:07Z", "type": "commit"}, {"oid": "7b2d3a9d80e6833c0da5bc8167f59454bceb3b55", "url": "https://github.com/kiegroup/drools/commit/7b2d3a9d80e6833c0da5bc8167f59454bceb3b55", "message": "[DROOLS-5861] Avoid propagation of drools dependency.", "committedDate": "2020-12-21T09:34:40Z", "type": "commit"}, {"oid": "bb75a2250c3ba5cbc952aa66c72b66394621e9a9", "url": "https://github.com/kiegroup/drools/commit/bb75a2250c3ba5cbc952aa66c72b66394621e9a9", "message": "Merge pull request #1 from danielezonca/improve_kiememorycompiler\n\nMake KieMemoryCompiler more flexible", "committedDate": "2020-12-21T09:39:32Z", "type": "commit"}, {"oid": "c7f46c32a4d66c200a29b9df35c166f55c9a128d", "url": "https://github.com/kiegroup/drools/commit/c7f46c32a4d66c200a29b9df35c166f55c9a128d", "message": "Merge branch 'DROOLS-5861' of github.com:gitgabrio/drools into DROOLS-5861", "committedDate": "2020-12-21T09:41:20Z", "type": "commit"}, {"oid": "64a10334c63a86086158e35557c58e124c3d90c1", "url": "https://github.com/kiegroup/drools/commit/64a10334c63a86086158e35557c58e124c3d90c1", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2020-12-21T09:43:53Z", "type": "commit"}, {"oid": "1ea635ec5fbc446b3896f04585546cea187bdaa5", "url": "https://github.com/kiegroup/drools/commit/1ea635ec5fbc446b3896f04585546cea187bdaa5", "message": "[DROOLS-5861] Fixed as per PR suggestion", "committedDate": "2020-12-21T10:10:09Z", "type": "commit"}, {"oid": "b1b23a13ca312536b43318fcfab4c9e6d829eeca", "url": "https://github.com/kiegroup/drools/commit/b1b23a13ca312536b43318fcfab4c9e6d829eeca", "message": "[DROOLS-5861] Add tests", "committedDate": "2020-12-21T13:22:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3MTI2Mw==", "url": "https://github.com/kiegroup/drools/pull/3296#discussion_r546771263", "bodyText": "This use of Optional is very questionable. I don't see any valid reason to wrap the result of that lookup into an Optional only to test if it is empty or not and take some action accordingly.", "author": "mariofusco", "createdAt": "2020-12-21T15:32:12Z", "path": "drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java", "diffHunk": "@@ -167,7 +170,14 @@ protected PMML4Result executePMMLLegacy(Context context) {\n                                                                                          packageName, isMining());\n     }\n \n-    protected PMML4Result executePMMLTrusty() {\n-        return PMMLCommandExecutorFactory.get().newPMMLCommandExecutor().execute(requestData);\n+    protected PMML4Result executePMMLTrusty(Context context) {\n+        RegistryContext registryContext = (RegistryContext) context;\n+        PMML4Result toReturn = PMMLCommandExecutorFactory.get().newPMMLCommandExecutor().execute(requestData, context);\n+        // Needed to update the ExecutionResultImpl and the Registry context,\n+        // has done inside legacy implementation\n+        Optional<ExecutionResultImpl> execRes = Optional.ofNullable(registryContext.lookup(ExecutionResultImpl.class));", "originalCommit": "b1b23a13ca312536b43318fcfab4c9e6d829eeca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3NzE2MA==", "url": "https://github.com/kiegroup/drools/pull/3296#discussion_r546777160", "bodyText": "@mariofusco\nThis snippet is carbon-copied from ApplyPmmlModelCommandExecutorImpl.", "author": "gitgabrio", "createdAt": "2020-12-21T15:42:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3MTI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4ODk1OA==", "url": "https://github.com/kiegroup/drools/pull/3296#discussion_r546788958", "bodyText": "I discussed this with @danielezonca and @lucamolteni and they are both happy with this usage of Optional (that continues to seem quite odd to me). Feel free to ignore my former comment.", "author": "mariofusco", "createdAt": "2020-12-21T16:02:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3MTI2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0167e89f68c810942ea1ee0e5e8c8d171430ad90", "chunk": "diff --git a/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java b/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java\nindex 8e13d119de..9ec321d868 100644\n--- a/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java\n+++ b/drools-core/src/main/java/org/drools/core/command/runtime/pmml/ApplyPmmlModelCommand.java\n\n@@ -174,7 +174,7 @@ public class ApplyPmmlModelCommand implements ExecutableCommand<PMML4Result>,\n         RegistryContext registryContext = (RegistryContext) context;\n         PMML4Result toReturn = PMMLCommandExecutorFactory.get().newPMMLCommandExecutor().execute(requestData, context);\n         // Needed to update the ExecutionResultImpl and the Registry context,\n-        // has done inside legacy implementation\n+        // as done inside legacy implementation\n         Optional<ExecutionResultImpl> execRes = Optional.ofNullable(registryContext.lookup(ExecutionResultImpl.class));\n         registryContext.register(PMML4Result.class, toReturn);\n         execRes.ifPresent(result -> result.setResult(\"results\", toReturn));\n"}}, {"oid": "0167e89f68c810942ea1ee0e5e8c8d171430ad90", "url": "https://github.com/kiegroup/drools/commit/0167e89f68c810942ea1ee0e5e8c8d171430ad90", "message": "[DROOLS-5861] Fix type", "committedDate": "2020-12-21T17:16:15Z", "type": "commit"}, {"oid": "e6fbd0f08576105a77be81304426173369ba7eae", "url": "https://github.com/kiegroup/drools/commit/e6fbd0f08576105a77be81304426173369ba7eae", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2020-12-22T07:29:31Z", "type": "commit"}, {"oid": "f20134baca33d8013feeefb5c135e5fb3779a8fe", "url": "https://github.com/kiegroup/drools/commit/f20134baca33d8013feeefb5c135e5fb3779a8fe", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2021-01-07T10:20:53Z", "type": "commit"}, {"oid": "d798280834e18f64bcfef4d2fc1474ab2826d493", "url": "https://github.com/kiegroup/drools/commit/d798280834e18f64bcfef4d2fc1474ab2826d493", "message": "[DROOLS-5940] Fix Project Model code generation - created tests", "committedDate": "2021-01-11T11:37:10Z", "type": "commit"}, {"oid": "b1ec187ecc25a67c5d7620fdecf676342d48762d", "url": "https://github.com/kiegroup/drools/commit/b1ec187ecc25a67c5d7620fdecf676342d48762d", "message": "[DROOLS-5861] WIP (TODO: remove mvel dependency from kie-pmml-models-drools-common)", "committedDate": "2021-01-11T11:45:17Z", "type": "commit"}, {"oid": "0e3dbafe7acec8181dbc4555ea789193f3ffdcb5", "url": "https://github.com/kiegroup/drools/commit/0e3dbafe7acec8181dbc4555ea789193f3ffdcb5", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2021-01-11T11:45:39Z", "type": "commit"}, {"oid": "b363127be0cc38bb921cc3d4deaab5584be15d7d", "url": "https://github.com/kiegroup/drools/commit/b363127be0cc38bb921cc3d4deaab5584be15d7d", "message": "Merge remote-tracking branch 'gitgabrio/DROOLS-5940' into DROOLS-5861", "committedDate": "2021-01-11T11:46:24Z", "type": "commit"}, {"oid": "543ae6242a5ba474354c9470fdbd9c81a537d353", "url": "https://github.com/kiegroup/drools/commit/543ae6242a5ba474354c9470fdbd9c81a537d353", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2021-01-11T15:06:29Z", "type": "commit"}, {"oid": "a1e031caf18a81ce24d541dd2a2df179c607f5a1", "url": "https://github.com/kiegroup/drools/commit/a1e031caf18a81ce24d541dd2a2df179c607f5a1", "message": "[DROOLS-5861] Populating nested models (Mining): to verify", "committedDate": "2021-01-12T15:23:09Z", "type": "commit"}, {"oid": "a134b22576914941c49874b335c376b20833f5f3", "url": "https://github.com/kiegroup/drools/commit/a134b22576914941c49874b335c376b20833f5f3", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2021-01-13T09:46:06Z", "type": "commit"}, {"oid": "9630c090db4dd3767942e5b21fb73563f6c21507", "url": "https://github.com/kiegroup/drools/commit/9630c090db4dd3767942e5b21fb73563f6c21507", "message": "[DROOLS-5861] Populating kiebase with nested models.", "committedDate": "2021-01-13T11:59:48Z", "type": "commit"}, {"oid": "a6c6fd914a5f8e4af45b257b07ad9145d4e12e57", "url": "https://github.com/kiegroup/drools/commit/a6c6fd914a5f8e4af45b257b07ad9145d4e12e57", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2021-01-14T08:52:09Z", "type": "commit"}, {"oid": "c7905d81f60e85016bde3acd3cf136b79b913476", "url": "https://github.com/kiegroup/drools/commit/c7905d81f60e85016bde3acd3cf136b79b913476", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2021-01-15T08:23:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODE4OTM1Ng==", "url": "https://github.com/kiegroup/drools/pull/3296#discussion_r558189356", "bodyText": "Please remove commented code.", "author": "jiripetrlik", "createdAt": "2021-01-15T10:13:07Z", "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/factories/PMMLRuntimeFactoryInternal.java", "diffHunk": "@@ -47,8 +49,10 @@ private PMMLRuntimeFactoryInternal() {\n     }\n \n     public static PMMLRuntime getPMMLRuntime(final File pmmlFile) {\n-        KnowledgeBuilderImpl kbuilderImpl = (KnowledgeBuilderImpl) KnowledgeBuilderFactory.newKnowledgeBuilder();\n-        return getPMMLRuntime(pmmlFile, kbuilderImpl);\n+        KieBase kieBase = createKieBase(pmmlFile);\n+        return getPMMLRuntime(kieBase);\n+//        KnowledgeBuilderImpl kbuilderImpl = (KnowledgeBuilderImpl) KnowledgeBuilderFactory.newKnowledgeBuilder();", "originalCommit": "9630c090db4dd3767942e5b21fb73563f6c21507", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6354221f670c1ca021b68a6131908e8f0dba543d", "chunk": "diff --git a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/factories/PMMLRuntimeFactoryInternal.java b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/factories/PMMLRuntimeFactoryInternal.java\nindex ed115e2a1c..02390edc39 100644\n--- a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/factories/PMMLRuntimeFactoryInternal.java\n+++ b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/main/java/org/kie/pmml/evaluator/assembler/factories/PMMLRuntimeFactoryInternal.java\n\n@@ -51,8 +51,6 @@ public class PMMLRuntimeFactoryInternal {\n     public static PMMLRuntime getPMMLRuntime(final File pmmlFile) {\n         KieBase kieBase = createKieBase(pmmlFile);\n         return getPMMLRuntime(kieBase);\n-//        KnowledgeBuilderImpl kbuilderImpl = (KnowledgeBuilderImpl) KnowledgeBuilderFactory.newKnowledgeBuilder();\n-//        return getPMMLRuntime(pmmlFile, kbuilderImpl);\n     }\n \n     public static PMMLRuntime getPMMLRuntime(File pmmlFile, ReleaseId releaseId) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODE5Mjc5Mg==", "url": "https://github.com/kiegroup/drools/pull/3296#discussion_r558192792", "bodyText": "It seems a little bit suspicious that there is no assert in this test.", "author": "jiripetrlik", "createdAt": "2021-01-15T10:15:45Z", "path": "kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/test/java/org/kie/pmml/evaluator/assembler/implementations/HasKnowledgeBuilderImplTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.pmml.evaluator.assembler.implementations;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.IntConsumer;\n+import java.util.stream.IntStream;\n+\n+import org.drools.compiler.builder.impl.KnowledgeBuilderImpl;\n+import org.drools.reflective.classloader.ProjectClassLoader;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.pmml.api.exceptions.KiePMMLException;\n+\n+import static org.junit.Assert.*;\n+\n+public class HasKnowledgeBuilderImplTest {\n+\n+    private static final String CLASS_SOURCE_NAME = \"ClassSource\";\n+    private static final String CLASS_SOURCE = String.format(\"public class %s {}\" , CLASS_SOURCE_NAME);\n+    private KnowledgeBuilderImpl knowledgeBuilder;\n+    private HasKnowledgeBuilderImpl hasKnowledgeBuilder;\n+\n+    @Before\n+    public void setup() {\n+        knowledgeBuilder = new KnowledgeBuilderImpl();\n+        hasKnowledgeBuilder = new HasKnowledgeBuilderImpl(knowledgeBuilder);\n+    }\n+\n+    @Test\n+    public void getClassLoader() {\n+        ClassLoader retrieved = hasKnowledgeBuilder.getClassLoader();\n+        assertNotNull(retrieved);\n+        assertEquals(knowledgeBuilder.getRootClassLoader(),retrieved);\n+        assertTrue(retrieved instanceof ProjectClassLoader);\n+    }\n+\n+    @Test\n+    public void compileAndLoadClass() {\n+        Map<String, String> sourcesMap = new HashMap<>();\n+        sourcesMap.put(CLASS_SOURCE_NAME, CLASS_SOURCE);\n+        Class<?> retrieved = hasKnowledgeBuilder.compileAndLoadClass(sourcesMap, CLASS_SOURCE_NAME);\n+        assertNotNull(retrieved);\n+        assertEquals(CLASS_SOURCE_NAME, retrieved.getName());\n+    }\n+\n+    @Test\n+    public void compileAndLoadClassMultipleTimes() {\n+        Map<String, String> sourcesMap = new HashMap<>();\n+        sourcesMap.put(CLASS_SOURCE_NAME, CLASS_SOURCE);\n+        IntStream.range(0,3).forEach(value -> hasKnowledgeBuilder.compileAndLoadClass(sourcesMap, CLASS_SOURCE_NAME));", "originalCommit": "9630c090db4dd3767942e5b21fb73563f6c21507", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6354221f670c1ca021b68a6131908e8f0dba543d", "chunk": "diff --git a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/test/java/org/kie/pmml/evaluator/assembler/implementations/HasKnowledgeBuilderImplTest.java b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/test/java/org/kie/pmml/evaluator/assembler/implementations/HasKnowledgeBuilderImplTest.java\nindex b6b2f31ae4..2ed9021458 100644\n--- a/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/test/java/org/kie/pmml/evaluator/assembler/implementations/HasKnowledgeBuilderImplTest.java\n+++ b/kie-pmml-trusty/kie-pmml-evaluator/kie-pmml-evaluator-assembler/src/test/java/org/kie/pmml/evaluator/assembler/implementations/HasKnowledgeBuilderImplTest.java\n\n@@ -64,7 +64,13 @@ public class HasKnowledgeBuilderImplTest {\n     public void compileAndLoadClassMultipleTimes() {\n         Map<String, String> sourcesMap = new HashMap<>();\n         sourcesMap.put(CLASS_SOURCE_NAME, CLASS_SOURCE);\n-        IntStream.range(0,3).forEach(value -> hasKnowledgeBuilder.compileAndLoadClass(sourcesMap, CLASS_SOURCE_NAME));\n+        IntStream.range(0,3).forEach(value -> {\n+            try {\n+                hasKnowledgeBuilder.compileAndLoadClass(sourcesMap, CLASS_SOURCE_NAME);\n+            } catch (Throwable t) {\n+                fail(t.getMessage());\n+            }\n+        });\n     }\n \n }\n\\ No newline at end of file\n"}}, {"oid": "703d80a4d10e1c5c394cf9eace8374344d4ff936", "url": "https://github.com/kiegroup/drools/commit/703d80a4d10e1c5c394cf9eace8374344d4ff936", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2021-01-18T07:55:00Z", "type": "commit"}, {"oid": "b610b7abac4d19421dbeaccfcac0ed1801510319", "url": "https://github.com/kiegroup/drools/commit/b610b7abac4d19421dbeaccfcac0ed1801510319", "message": "[DROOLS-5861] Fixing DMNKiePMMLTrustyInvocationEvaluator to re-use already compiled kiebases, if present", "committedDate": "2021-01-19T09:39:08Z", "type": "commit"}, {"oid": "c9345e40bb9a34efdc739632393f25a6b0eb6674", "url": "https://github.com/kiegroup/drools/commit/c9345e40bb9a34efdc739632393f25a6b0eb6674", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2021-01-19T09:39:56Z", "type": "commit"}, {"oid": "3e76ad7e230c65ea50ea76b2a182bfdbb6e7b197", "url": "https://github.com/kiegroup/drools/commit/3e76ad7e230c65ea50ea76b2a182bfdbb6e7b197", "message": "[DROOLS-5861] Fixing declaration/usage of List<KiePMMLOutputField> kiePMMLOutputFields inside KiePMMLModel", "committedDate": "2021-01-19T12:27:07Z", "type": "commit"}, {"oid": "8d60d0501724d98677a800d8fcb0bb6af94963da", "url": "https://github.com/kiegroup/drools/commit/8d60d0501724d98677a800d8fcb0bb6af94963da", "message": "[DROOLS-5861] Propagating packagename for runtime compilation", "committedDate": "2021-01-20T08:53:33Z", "type": "commit"}, {"oid": "35c4ba0b19efd9365a0d949a9c4cb75a864e2169", "url": "https://github.com/kiegroup/drools/commit/35c4ba0b19efd9365a0d949a9c4cb75a864e2169", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2021-01-20T08:54:06Z", "type": "commit"}, {"oid": "2b105d9195446bb7dbe3462421cc7c49a8bd8039", "url": "https://github.com/kiegroup/drools/commit/2b105d9195446bb7dbe3462421cc7c49a8bd8039", "message": "[DROOLS-5861] Fix MVELConstraint equals", "committedDate": "2021-01-21T07:45:56Z", "type": "commit"}, {"oid": "87be832aea58f682c851ef3f06bdeecb96c46565", "url": "https://github.com/kiegroup/drools/commit/87be832aea58f682c851ef3f06bdeecb96c46565", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2021-01-21T07:46:29Z", "type": "commit"}, {"oid": "a0f5f78f146e700e47a6d031755599f8bcace77e", "url": "https://github.com/kiegroup/drools/commit/a0f5f78f146e700e47a6d031755599f8bcace77e", "message": "[DROOLS-5861] Replacing HashSet with LinkedHashSet to have ordered set", "committedDate": "2021-01-21T11:47:20Z", "type": "commit"}, {"oid": "889d2f27f89bcabbf42d78b8bae34e463a891230", "url": "https://github.com/kiegroup/drools/commit/889d2f27f89bcabbf42d78b8bae34e463a891230", "message": "[DROOLS-5861] Fixing bug indication by SONAR", "committedDate": "2021-01-22T08:38:22Z", "type": "commit"}, {"oid": "cd79d9ad5a6c19ca3074819eae59b7a3e68c61b8", "url": "https://github.com/kiegroup/drools/commit/cd79d9ad5a6c19ca3074819eae59b7a3e68c61b8", "message": "[DROOLS-5861] Removed import", "committedDate": "2021-01-22T08:45:30Z", "type": "commit"}, {"oid": "0e995456c8dd8dadf3b4a0aa77f221aea7999116", "url": "https://github.com/kiegroup/drools/commit/0e995456c8dd8dadf3b4a0aa77f221aea7999116", "message": "Merge remote-tracking branch 'origin/master' into DROOLS-5861", "committedDate": "2021-01-22T08:45:51Z", "type": "commit"}, {"oid": "4b6bd7a9978a1e2c11d0c58fc4c2731846623f5a", "url": "https://github.com/kiegroup/drools/commit/4b6bd7a9978a1e2c11d0c58fc4c2731846623f5a", "message": "[DROOLS-5861] Fixing logger complaint", "committedDate": "2021-01-22T08:50:05Z", "type": "commit"}, {"oid": "6354221f670c1ca021b68a6131908e8f0dba543d", "url": "https://github.com/kiegroup/drools/commit/6354221f670c1ca021b68a6131908e8f0dba543d", "message": "[DROOLS-5861] Fixing SONAR warnings", "committedDate": "2021-01-22T09:00:57Z", "type": "commit"}, {"oid": "4d320432415f165427f5a2ad06665ca6539ab993", "url": "https://github.com/kiegroup/drools/commit/4d320432415f165427f5a2ad06665ca6539ab993", "message": "[DROOLS-5861] Add tests", "committedDate": "2021-01-22T09:53:50Z", "type": "commit"}]}