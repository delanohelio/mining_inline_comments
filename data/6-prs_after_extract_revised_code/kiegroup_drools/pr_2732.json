{"pr_number": 2732, "pr_title": "DROOLS-4954 DMN v1.3 instanceof new syntax support", "pr_createdAt": "2020-01-23T09:58:31Z", "pr_url": "https://github.com/kiegroup/drools/pull/2732", "timeline": [{"oid": "ccfdf908c8c70106c35649e49abb8dc0831d2405", "url": "https://github.com/kiegroup/drools/commit/ccfdf908c8c70106c35649e49abb8dc0831d2405", "message": "Marshalling support", "committedDate": "2020-01-15T08:27:10Z", "type": "commit"}, {"oid": "c43d1cf7aba903487a4c448f0ab93ac5dc040c23", "url": "https://github.com/kiegroup/drools/commit/c43d1cf7aba903487a4c448f0ab93ac5dc040c23", "message": "basic grammar change", "committedDate": "2020-01-15T09:57:01Z", "type": "commit"}, {"oid": "14cd9e6ccc99a3640e223ae6b833b6653dcc0167", "url": "https://github.com/kiegroup/drools/commit/14cd9e6ccc99a3640e223ae6b833b6653dcc0167", "message": "labeling parser grammar rules", "committedDate": "2020-01-15T10:00:40Z", "type": "commit"}, {"oid": "1552fe780b8f5c1a166ce473b1f83dfbf354a0d6", "url": "https://github.com/kiegroup/drools/commit/1552fe780b8f5c1a166ce473b1f83dfbf354a0d6", "message": "implement list<type> case", "committedDate": "2020-01-23T09:49:51Z", "type": "commit"}, {"oid": "e683daa21c795a7c24bc81686aed443711e6c161", "url": "https://github.com/kiegroup/drools/commit/e683daa21c795a7c24bc81686aed443711e6c161", "message": "implement context<name:type> case", "committedDate": "2020-01-23T09:50:19Z", "type": "commit"}, {"oid": "d92b87efad9fd0a2aeb7bae2fd7b6912e67ea6e7", "url": "https://github.com/kiegroup/drools/commit/d92b87efad9fd0a2aeb7bae2fd7b6912e67ea6e7", "message": "function: prepare for refactoring, build passing.", "committedDate": "2020-01-23T09:50:19Z", "type": "commit"}, {"oid": "9dd566a87d324104a4e9e76acd391f873930d8f6", "url": "https://github.com/kiegroup/drools/commit/9dd566a87d324104a4e9e76acd391f873930d8f6", "message": "function: refactoring, build passing", "committedDate": "2020-01-23T09:50:20Z", "type": "commit"}, {"oid": "e166f096c51a07ee2fa52b44536ea287958f37c2", "url": "https://github.com/kiegroup/drools/commit/e166f096c51a07ee2fa52b44536ea287958f37c2", "message": "implement function<type, ...> -> type case", "committedDate": "2020-01-23T09:50:21Z", "type": "commit"}, {"oid": "e60e0c36f5cf31047cbce4a1c4490f64dae5b9e2", "url": "https://github.com/kiegroup/drools/commit/e60e0c36f5cf31047cbce4a1c4490f64dae5b9e2", "message": "remove superseded code", "committedDate": "2020-01-23T09:50:21Z", "type": "commit"}, {"oid": "110ca68439d6964865d69dcff0734041baf99da6", "url": "https://github.com/kiegroup/drools/commit/110ca68439d6964865d69dcff0734041baf99da6", "message": "use proper tokenization in grammar rule, following style", "committedDate": "2020-01-23T09:50:22Z", "type": "commit"}, {"oid": "857976e340840e3a195011f5f96a643965a9eac3", "url": "https://github.com/kiegroup/drools/commit/857976e340840e3a195011f5f96a643965a9eac3", "message": "minor changes", "committedDate": "2020-01-23T09:50:23Z", "type": "commit"}, {"oid": "9da36af813d4937407a3d5c4867cbcee517d83e2", "url": "https://github.com/kiegroup/drools/commit/9da36af813d4937407a3d5c4867cbcee517d83e2", "message": ".", "committedDate": "2020-01-23T09:51:55Z", "type": "commit"}, {"oid": "6c71a2857684e327d8e17f49aec342a3b08f2e1c", "url": "https://github.com/kiegroup/drools/commit/6c71a2857684e327d8e17f49aec342a3b08f2e1c", "message": ".", "committedDate": "2020-01-23T09:54:22Z", "type": "commit"}, {"oid": "e9562b5cd36e4453ebf4ec3def17c90865a52c50", "url": "https://github.com/kiegroup/drools/commit/e9562b5cd36e4453ebf4ec3def17c90865a52c50", "message": "small changes to improve sonarcloud analysis", "committedDate": "2020-01-23T14:00:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc2MDYyOA==", "url": "https://github.com/kiegroup/drools/pull/2732#discussion_r371760628", "bodyText": "Nitpicking - it might be better to call this in an else part of the next if statement. Currently .setFeelType can be called twice in some situations. What I mean is:\nif (type.isCollection()) {\n    type.setFeelType(new GenListType(type.getFeelType()));\n} else {\n    type.setFeelType(new MapBackedType(type.getName(), fieldsAsFEEL));\n}", "author": "baldimir", "createdAt": "2020-01-28T11:59:35Z", "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/compiler/DMNCompilerImpl.java", "diffHunk": "@@ -603,11 +608,17 @@ private DMNType buildTypeDef(DMNCompilerContext ctx, DMNModelImpl dmnModel, DMNN\n                                            itemDef.getName() );\n                 }\n             }\n+            Map<String, Type> fieldsAsFEEL = new HashMap<>();\n             for (ItemDefinition fieldDef : itemDef.getItemComponent()) {\n                 DMNCompilerHelper.checkVariableName(dmnModel, fieldDef, fieldDef.getName());\n                 DMNType fieldType = buildTypeDef(ctx, dmnModel, node, fieldDef, false);\n                 fieldType = fieldType != null ? fieldType : dmnModel.getTypeRegistry().unknown();\n                 compType.addField(fieldDef.getName(), fieldType);\n+                fieldsAsFEEL.put(fieldDef.getName(), ((BaseDMNTypeImpl) fieldType).getFeelType());\n+            }\n+            type.setFeelType(new MapBackedType(type.getName(), fieldsAsFEEL));", "originalCommit": "e9562b5cd36e4453ebf4ec3def17c90865a52c50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwMzE4NQ==", "url": "https://github.com/kiegroup/drools/pull/2732#discussion_r371803185", "bodyText": "I missed that it is getting wrapped. Ignore this comment.", "author": "baldimir", "createdAt": "2020-01-28T13:33:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc2MDYyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwMzY2OQ==", "url": "https://github.com/kiegroup/drools/pull/2732#discussion_r371803669", "bodyText": "\ud83d\udc4d", "author": "tarilabs", "createdAt": "2020-01-28T13:34:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc2MDYyOA=="}], "type": "inlineReview", "revised_code": null}]}