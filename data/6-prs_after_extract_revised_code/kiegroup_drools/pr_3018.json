{"pr_number": 3018, "pr_title": "DROOLS-5553 - fix getMetadata in DMNContextFPAImpl", "pr_createdAt": "2020-07-30T16:50:56Z", "pr_url": "https://github.com/kiegroup/drools/pull/3018", "timeline": [{"oid": "42f1c40e7b948b7fa7f29051a134eb388b2a2c4d", "url": "https://github.com/kiegroup/drools/commit/42f1c40e7b948b7fa7f29051a134eb388b2a2c4d", "message": "fix getMetadata", "committedDate": "2020-07-30T16:47:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzNTYxMA==", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463135610", "bodyText": "Side question: Is it correct that the clone method returns DMNContextImpl instead of DMNContextFPAImpl?", "author": "r00ta", "createdAt": "2020-07-30T16:51:30Z", "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/impl/DMNContextFPAImpl.java", "diffHunk": "@@ -86,16 +88,15 @@ public boolean isDefined(String name) {\n \n     @Override\n     public DMNMetadata getMetadata() {\n-        return new DMNMetadataImpl();\n+        return this.metadata;\n     }\n \n     @Override\n     public DMNContext clone() {\n-        DMNContextImpl newCtx = new DMNContextImpl(fpa.allFEELProperties());\n+        DMNContextImpl newCtx = new DMNContextImpl(fpa.allFEELProperties(), metadata.asMap());", "originalCommit": "42f1c40e7b948b7fa7f29051a134eb388b2a2c4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0NDExMA==", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463144110", "bodyText": "Good question \ud83e\udd14\n@lucamolteni can you help?", "author": "danielezonca", "createdAt": "2020-07-30T17:05:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzNTYxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2NDUwOA==", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463464508", "bodyText": "@r00ta @danielezonca\nOk short answer: because it doesn't work in another way :)\nSlightly longer answer: the current implementation of the DMN evaluation clones the context at least once, and always using the type safe context in the internals wasn't the original purpose of this implementation.\nIn other words: the idea so far was to expose a typesafe inputset as an API, not to change internals.\nI can't say it's not doable, but to me the advantages are not obvious.\n@tarilabs can you confirm this?\nThanks", "author": "lucamolteni", "createdAt": "2020-07-31T08:03:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzNTYxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ2ODM4OQ==", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463468389", "bodyText": "yes confirmed as currently DMNRuntime for evaluation uses input context .clone() result, as the context where to store the outputs, and DMNContextImpl can accept any additional variables, while DMNContextFPAImpl atm is only accepting the fields defined in the wrapped FEELPropertyAccessible", "author": "tarilabs", "createdAt": "2020-07-31T08:11:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEzNTYxMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "53be5525fe40c6d26eb023467c312d17ff48ccd3", "url": "https://github.com/kiegroup/drools/commit/53be5525fe40c6d26eb023467c312d17ff48ccd3", "message": "add test", "committedDate": "2020-07-30T16:57:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0MzUwMw==", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463143503", "bodyText": "Can you please also clone the DMNContext and verify that \"value\" is still there?", "author": "danielezonca", "createdAt": "2020-07-30T17:04:53Z", "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNTypeSafeTest.java", "diffHunk": "@@ -158,6 +159,16 @@ public void testDynamic() throws Exception {\n         assertThat(d.get(\"Hello\"), is(\"Hello Mr. x\"));\n     }\n \n+    @Test\n+    public void testMetadata(){", "originalCommit": "53be5525fe40c6d26eb023467c312d17ff48ccd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NzY1NQ==", "url": "https://github.com/kiegroup/drools/pull/3018#discussion_r463457655", "bodyText": "done \ud83d\udc4d", "author": "r00ta", "createdAt": "2020-07-31T07:47:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0MzUwMw=="}], "type": "inlineReview", "revised_code": {"commit": "486e575b9acd47c37a45cc5391df075f70a69063", "chunk": "diff --git a/kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNTypeSafeTest.java b/kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNTypeSafeTest.java\nindex e7111f2f9f..843d4d0dbf 100644\n--- a/kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNTypeSafeTest.java\n+++ b/kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNTypeSafeTest.java\n\n@@ -167,6 +167,7 @@ public class DMNTypeSafeTest extends BaseVariantTest {\n         context.getMetadata().set(key, value);\n \n         assertEquals(value, context.getMetadata().get(key));\n+        assertEquals(value, context.clone().getMetadata().get(key));\n     }\n \n     private static DMNResult evaluateTyped(FEELPropertyAccessible context, DMNRuntime runtime, DMNModel dmnModel) {\n"}}, {"oid": "486e575b9acd47c37a45cc5391df075f70a69063", "url": "https://github.com/kiegroup/drools/commit/486e575b9acd47c37a45cc5391df075f70a69063", "message": "test cloned metadata", "committedDate": "2020-07-30T20:18:01Z", "type": "commit"}, {"oid": "d7f14ed8a9f284a30fee91a3324bea2ad195ed01", "url": "https://github.com/kiegroup/drools/commit/d7f14ed8a9f284a30fee91a3324bea2ad195ed01", "message": "fix tests", "committedDate": "2020-07-31T07:18:38Z", "type": "commit"}]}