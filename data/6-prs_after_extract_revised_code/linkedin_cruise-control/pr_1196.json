{"pr_number": 1196, "pr_title": "Add AdminClient-based replica reassignment.", "pr_createdAt": "2020-05-20T05:25:04Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1196", "timeline": [{"oid": "3109f21fb9103e6451c956b417968a901030ea13", "url": "https://github.com/linkedin/cruise-control/commit/3109f21fb9103e6451c956b417968a901030ea13", "message": "Add AdminClient-based replica reassignment.", "committedDate": "2020-05-20T05:09:30Z", "type": "commit"}, {"oid": "dc5b844a126df2f46e3b13004fefed6dc6de8583", "url": "https://github.com/linkedin/cruise-control/commit/dc5b844a126df2f46e3b13004fefed6dc6de8583", "message": "Make CircleCI happy.", "committedDate": "2020-05-20T18:07:22Z", "type": "commit"}, {"oid": "dc5b844a126df2f46e3b13004fefed6dc6de8583", "url": "https://github.com/linkedin/cruise-control/commit/dc5b844a126df2f46e3b13004fefed6dc6de8583", "message": "Make CircleCI happy.", "committedDate": "2020-05-20T18:07:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxMTc2OQ==", "url": "https://github.com/linkedin/cruise-control/pull/1196#discussion_r428211769", "bodyText": "should we apply the same exception handling logic to isOngoingIntraBrokerReplicaMovement() ? currently in side that method we ignore these exception.", "author": "kidkun", "createdAt": "2020-05-20T18:13:03Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -573,8 +576,15 @@ private void startExecution(LoadMonitor loadMonitor,\n    * Sanity check whether there are ongoing (1) inter-broker or intra-broker replica movements or (2) leadership movements.\n    */\n   private void sanityCheckOngoingMovement() throws OngoingExecutionException {\n+    boolean hasOngoingPartitionReassignments;\n+    try {\n+      hasOngoingPartitionReassignments = hasOngoingPartitionReassignments();\n+    } catch (TimeoutException | InterruptedException | ExecutionException e) {", "originalCommit": "dc5b844a126df2f46e3b13004fefed6dc6de8583", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3503f2e3bb64e5705da55d172ed7285c45598c0f", "chunk": "diff --git a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java\nindex 9ac7d0ae..d30dc488 100644\n--- a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java\n+++ b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java\n\n@@ -581,20 +581,29 @@ public class Executor {\n       hasOngoingPartitionReassignments = hasOngoingPartitionReassignments();\n     } catch (TimeoutException | InterruptedException | ExecutionException e) {\n       // This may indicate transient (e.g. network) issues.\n-      throw new IllegalStateException(\"Failed to retrieve whether the Kafka cluster has an already ongoing partition reassignment.\", e);\n+      throw new IllegalStateException(\"Failed to retrieve if there are already ongoing partition reassignments.\", e);\n     }\n     // Note that in case there is an ongoing partition reassignment, we do not unpause metric sampling.\n     if (hasOngoingPartitionReassignments) {\n       processOngoingMovementSanityCheckFailure();\n       throw new OngoingExecutionException(\"There are ongoing inter-broker partition movements.\");\n-    } else if (isOngoingIntraBrokerReplicaMovement(_metadataClient.cluster().nodes().stream().mapToInt(Node::id).boxed()\n-                                                                  .collect(Collectors.toSet()),\n-                                                   _adminClient, _config)) {\n-      processOngoingMovementSanityCheckFailure();\n-      throw new OngoingExecutionException(\"There are ongoing intra-broker partition movements.\");\n-    } else if (hasOngoingLeaderElection()) {\n-      processOngoingMovementSanityCheckFailure();\n-      throw new OngoingExecutionException(\"There are ongoing leadership movements.\");\n+    } else {\n+      boolean hasOngoingIntraBrokerReplicaMovement;\n+      try {\n+        hasOngoingIntraBrokerReplicaMovement =\n+            hasOngoingIntraBrokerReplicaMovement(_metadataClient.cluster().nodes().stream().mapToInt(Node::id).boxed()\n+                                                                .collect(Collectors.toSet()), _adminClient, _config);\n+      } catch (TimeoutException | InterruptedException | ExecutionException e) {\n+        // This may indicate transient (e.g. network) issues.\n+        throw new IllegalStateException(\"Failed to retrieve if there are already ongoing intra-broker replica reassignments.\", e);\n+      }\n+      if (hasOngoingIntraBrokerReplicaMovement) {\n+        processOngoingMovementSanityCheckFailure();\n+        throw new OngoingExecutionException(\"There are ongoing intra-broker partition movements.\");\n+      } else if (hasOngoingLeaderElection()) {\n+        processOngoingMovementSanityCheckFailure();\n+        throw new OngoingExecutionException(\"There are ongoing leadership movements.\");\n+      }\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyODU2Nw==", "url": "https://github.com/linkedin/cruise-control/pull/1196#discussion_r428228567", "bodyText": "nit: update Javadoc of this method.\nalso the description seems inaccurate, we are checking the latest metadata instead of zookeeper for task finish status.", "author": "kidkun", "createdAt": "2020-05-20T18:38:10Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -1157,7 +1167,8 @@ private void deleteZNodesToStopExecution() {\n     /**\n      * This method periodically checks ZooKeeper to see if (1) partition or (2) leadership reassignment has finished or not.\n      */\n-    private List<ExecutionTask> waitForExecutionTaskToFinish() {\n+    private List<ExecutionTask> waitForExecutionTaskToFinish(AlterPartitionReassignmentsResult result)", "originalCommit": "dc5b844a126df2f46e3b13004fefed6dc6de8583", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3503f2e3bb64e5705da55d172ed7285c45598c0f", "chunk": "diff --git a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java\nindex 9ac7d0ae..d30dc488 100644\n--- a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java\n+++ b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java\n\n@@ -1165,7 +1174,10 @@ public class Executor {\n     }\n \n     /**\n-     * This method periodically checks ZooKeeper to see if (1) partition or (2) leadership reassignment has finished or not.\n+     * Periodically checks the metadata to see if (1) partition or (2) leadership reassignment has finished or not.\n+     * @param result the result of a request to alter partition reassignments, or {@code null} to skip checking if\n+     *               inter-broker replica action has already failed due to dead new replica. Ignored for other task types.\n+     * @return Finished tasks.\n      */\n     private List<ExecutionTask> waitForExecutionTaskToFinish(AlterPartitionReassignmentsResult result)\n         throws InterruptedException, ExecutionException, TimeoutException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI0MDQzOQ==", "url": "https://github.com/linkedin/cruise-control/pull/1196#discussion_r428240439", "bodyText": "Should we add a timeout here?", "author": "kidkun", "createdAt": "2020-05-20T18:57:53Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -1403,6 +1417,17 @@ private boolean maybeMarkTaskAsDeadOrAborting(Cluster cluster,\n       return false;\n     }\n \n+    private boolean verifyFutureError(Future<?> future, Class<? extends Throwable> exceptionClass) {\n+      try {\n+        future.get();", "originalCommit": "dc5b844a126df2f46e3b13004fefed6dc6de8583", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3503f2e3bb64e5705da55d172ed7285c45598c0f", "chunk": "diff --git a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java\nindex 9ac7d0ae..d30dc488 100644\n--- a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java\n+++ b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java\n\n@@ -1419,11 +1432,13 @@ public class Executor {\n \n     private boolean verifyFutureError(Future<?> future, Class<? extends Throwable> exceptionClass) {\n       try {\n-        future.get();\n+        // TODO: Make this configurable.\n+        future.get(5000L, TimeUnit.MILLISECONDS);\n       } catch (ExecutionException ee) {\n         return exceptionClass == ee.getCause().getClass();\n-      } catch (InterruptedException e) {\n-        // let it go\n+      } catch (TimeoutException | InterruptedException e) {\n+        // This may indicate transient (e.g. network) issues.\n+        LOG.warn(\"Failed to verify future error {}.\", exceptionClass, e);\n       }\n       return false;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI0NzQxOQ==", "url": "https://github.com/linkedin/cruise-control/pull/1196#discussion_r428247419", "bodyText": "This method seems not used?", "author": "kidkun", "createdAt": "2020-05-20T19:09:46Z", "path": "cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/utils/CCEmbeddedBroker.java", "diffHunk": "@@ -99,6 +99,10 @@ public void awaitShutdown() {\n     _kafkaServer.awaitShutdown();\n   }\n \n+  public KafkaServer kafkaServer() {", "originalCommit": "dc5b844a126df2f46e3b13004fefed6dc6de8583", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3503f2e3bb64e5705da55d172ed7285c45598c0f", "chunk": "diff --git a/cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/utils/CCEmbeddedBroker.java b/cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/utils/CCEmbeddedBroker.java\nindex 47b4a702..0842f8a5 100644\n--- a/cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/utils/CCEmbeddedBroker.java\n+++ b/cruise-control-metrics-reporter/src/test/java/com/linkedin/kafka/cruisecontrol/metricsreporter/utils/CCEmbeddedBroker.java\n\n@@ -99,10 +99,6 @@ public class CCEmbeddedBroker implements AutoCloseable {\n     _kafkaServer.awaitShutdown();\n   }\n \n-  public KafkaServer kafkaServer() {\n-    return _kafkaServer;\n-  }\n-\n   @Override\n   public void close() {\n     CCKafkaTestUtils.quietly(this::shutdown);\n"}}, {"oid": "3503f2e3bb64e5705da55d172ed7285c45598c0f", "url": "https://github.com/linkedin/cruise-control/commit/3503f2e3bb64e5705da55d172ed7285c45598c0f", "message": "Address the feedback.", "committedDate": "2020-05-20T21:48:41Z", "type": "commit"}]}