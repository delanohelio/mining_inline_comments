{"pr_number": 1400, "pr_title": "Add gap-based balance limits for TopicReplicaDistributionGoal", "pr_createdAt": "2020-11-24T01:08:46Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1400", "timeline": [{"oid": "9dadc13c84e6ac4ddb7c639afc547facf691f15a", "url": "https://github.com/linkedin/cruise-control/commit/9dadc13c84e6ac4ddb7c639afc547facf691f15a", "message": "Add gap-based balance limits for TopicReplicaDistributionGoal", "committedDate": "2020-11-24T01:08:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA2MDkwNA==", "url": "https://github.com/linkedin/cruise-control/pull/1400#discussion_r530060904", "bodyText": "Nit: shouldn't the type be int since getInt is used? I know that casting an int to long is safe. Just wondering is it intentional?", "author": "Lincong", "createdAt": "2020-11-25T02:06:24Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/config/KafkaCruiseControlConfig.java", "diffHunk": "@@ -287,6 +287,23 @@ void sanityCheckConcurrency() {\n     }\n   }\n \n+  /**\n+   * Sanity check to ensure that\n+   * <ul>\n+   *   <li>{@link AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG} <=\n+   *   {@link AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG}</li>\n+   * </ul>\n+   */\n+  private void sanityCheckBalancingConstraints() {\n+    long topicReplicaBalanceMinGap = getInt(AnalyzerConfig.TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG);", "originalCommit": "9dadc13c84e6ac4ddb7c639afc547facf691f15a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3733ee7d20e452b356fbe63b74769619e2ffa381", "chunk": "diff --git a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/config/KafkaCruiseControlConfig.java b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/config/KafkaCruiseControlConfig.java\nindex 000603e5..2c98a3ce 100644\n--- a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/config/KafkaCruiseControlConfig.java\n+++ b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/config/KafkaCruiseControlConfig.java\n\n@@ -295,8 +295,8 @@ public class KafkaCruiseControlConfig extends AbstractConfig {\n    * </ul>\n    */\n   private void sanityCheckBalancingConstraints() {\n-    long topicReplicaBalanceMinGap = getInt(AnalyzerConfig.TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG);\n-    long topicReplicaBalanceMaxGap = getInt(AnalyzerConfig.TOPIC_REPLICA_COUNT_BALANCE_MAX_GAP_CONFIG);\n+    int topicReplicaBalanceMinGap = getInt(AnalyzerConfig.TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG);\n+    int topicReplicaBalanceMaxGap = getInt(AnalyzerConfig.TOPIC_REPLICA_COUNT_BALANCE_MAX_GAP_CONFIG);\n     if (topicReplicaBalanceMinGap > topicReplicaBalanceMaxGap) {\n       throw new ConfigException(String.format(\"Maximum gap of topic replica count balance [%d] cannot be smaller than the \"\n                                               + \"minimum gap of topic replica count balance [%d].\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA2OTMyNw==", "url": "https://github.com/linkedin/cruise-control/pull/1400#discussion_r530069327", "bodyText": "Shouldn't it be (swapping maxLimit and minLimit):\nmaxLimit = Math.max(0, (int) (Math.floor(average) - _balancingConstraint.topicReplicaBalanceMinGap()));\nminLimit = Math.max(0, (int) (Math.floor(average) - _balancingConstraint.topicReplicaBalanceMaxGap()));\n\nIn the above way, maxLimit >= minLimit. Otherwise, it would be the other way (maxLimit <= minLimit), and the below return statement will always return minLimit\nreturn Math.max(minLimit, Math.min(computedLimit, maxLimit));", "author": "Lincong", "createdAt": "2020-11-25T02:34:12Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/goals/TopicReplicaDistributionGoal.java", "diffHunk": "@@ -103,15 +104,40 @@ private double balancePercentageWithMargin(OptimizationOptions optimizationOptio\n     return (balancePercentage - 1) * BALANCE_MARGIN;\n   }\n \n+  /**\n+   * Ensure that the given balance limit falls into min/max limits determined by min/max gaps for topic replica balance.\n+   * If the computed balance limit is out of these gap-based limits, use the relevant max/min gap-based balance limit.\n+   *\n+   * @see com.linkedin.kafka.cruisecontrol.config.constants.AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_DOC\n+   * @see com.linkedin.kafka.cruisecontrol.config.constants.AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MAX_GAP_DOC\n+   *\n+   * @param computedLimit Computed balance upper or lower limit\n+   * @param average Average topic replicas on broker.\n+   * @return A balance limit that falls into [minGap, maxGap] for topic replica balance.\n+   */\n+  private int gapBasedBalanceLimit(int computedLimit, double average, boolean isLowerLimit) {\n+    int minLimit;\n+    int maxLimit;\n+    if (isLowerLimit) {\n+      minLimit = Math.max(0, (int) (Math.floor(average) - _balancingConstraint.topicReplicaBalanceMinGap()));", "originalCommit": "9dadc13c84e6ac4ddb7c639afc547facf691f15a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA5Nzk5OA==", "url": "https://github.com/linkedin/cruise-control/pull/1400#discussion_r530097998", "bodyText": "Absolutely -- great catch!", "author": "efeg", "createdAt": "2020-11-25T04:17:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA2OTMyNw=="}], "type": "inlineReview", "revised_code": {"commit": "3733ee7d20e452b356fbe63b74769619e2ffa381", "chunk": "diff --git a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/goals/TopicReplicaDistributionGoal.java b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/goals/TopicReplicaDistributionGoal.java\nindex db130a18..c686bdc0 100644\n--- a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/goals/TopicReplicaDistributionGoal.java\n+++ b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/analyzer/goals/TopicReplicaDistributionGoal.java\n\n@@ -119,8 +119,8 @@ public class TopicReplicaDistributionGoal extends AbstractGoal {\n     int minLimit;\n     int maxLimit;\n     if (isLowerLimit) {\n-      minLimit = Math.max(0, (int) (Math.floor(average) - _balancingConstraint.topicReplicaBalanceMinGap()));\n-      maxLimit = Math.max(0, (int) (Math.floor(average) - _balancingConstraint.topicReplicaBalanceMaxGap()));\n+      maxLimit = Math.max(0, (int) (Math.floor(average) - _balancingConstraint.topicReplicaBalanceMinGap()));\n+      minLimit = Math.max(0, (int) (Math.floor(average) - _balancingConstraint.topicReplicaBalanceMaxGap()));\n     } else {\n       minLimit = (int) (Math.ceil(average) + _balancingConstraint.topicReplicaBalanceMinGap());\n       maxLimit = (int) (Math.ceil(average) + _balancingConstraint.topicReplicaBalanceMaxGap());\n"}}, {"oid": "3733ee7d20e452b356fbe63b74769619e2ffa381", "url": "https://github.com/linkedin/cruise-control/commit/3733ee7d20e452b356fbe63b74769619e2ffa381", "message": "Address the feedback.", "committedDate": "2020-11-25T03:59:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwMTExOA==", "url": "https://github.com/linkedin/cruise-control/pull/1400#discussion_r530101118", "bodyText": "Should we allow topicReplicaBalanceMinGap  == topicReplicaBalanceMaxGap? In this case, the computedLimit is essentially ignored in the gapBasedBalanceLimit method since the return value of this method does not depend on computedLimit", "author": "Lincong", "createdAt": "2020-11-25T04:29:48Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/config/KafkaCruiseControlConfig.java", "diffHunk": "@@ -287,6 +287,23 @@ void sanityCheckConcurrency() {\n     }\n   }\n \n+  /**\n+   * Sanity check to ensure that\n+   * <ul>\n+   *   <li>{@link AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG} <=\n+   *   {@link AnalyzerConfig#TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG}</li>\n+   * </ul>\n+   */\n+  private void sanityCheckBalancingConstraints() {\n+    int topicReplicaBalanceMinGap = getInt(AnalyzerConfig.TOPIC_REPLICA_COUNT_BALANCE_MIN_GAP_CONFIG);\n+    int topicReplicaBalanceMaxGap = getInt(AnalyzerConfig.TOPIC_REPLICA_COUNT_BALANCE_MAX_GAP_CONFIG);\n+    if (topicReplicaBalanceMinGap > topicReplicaBalanceMaxGap) {", "originalCommit": "3733ee7d20e452b356fbe63b74769619e2ffa381", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUzMjUyMw==", "url": "https://github.com/linkedin/cruise-control/pull/1400#discussion_r530532523", "bodyText": "We intentionally allow equality of min/max gaps.\nAs per their discretion, this enables users to configure their goal such that each topic has deterministic limits on each broker that is independent of the percentage-based computedLimit.", "author": "efeg", "createdAt": "2020-11-25T17:17:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwMTExOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUzNDM2MA==", "url": "https://github.com/linkedin/cruise-control/pull/1400#discussion_r530534360", "bodyText": "ok", "author": "Lincong", "createdAt": "2020-11-25T17:20:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwMTExOA=="}], "type": "inlineReview", "revised_code": null}]}