{"pr_number": 1123, "pr_title": "Add an additional abstraction layer for goal-based operation runnables.", "pr_createdAt": "2020-02-28T03:42:15Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1123", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2NTYxNA==", "url": "https://github.com/linkedin/cruise-control/pull/1123#discussion_r385965614", "bodyText": "Nit : extracting -> extract", "author": "kidkun", "createdAt": "2020-02-28T23:19:25Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * Copyright 2020 LinkedIn Corp. Licensed under the BSD 2-Clause License (the \"License\"). See License in the project root for license information.\n+ */\n+\n+package com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable;\n+\n+import com.linkedin.cruisecontrol.exception.NotEnoughValidWindowsException;\n+import com.linkedin.kafka.cruisecontrol.KafkaCruiseControl;\n+import com.linkedin.kafka.cruisecontrol.analyzer.OptimizerResult;\n+import com.linkedin.kafka.cruisecontrol.analyzer.goals.Goal;\n+import com.linkedin.kafka.cruisecontrol.async.progress.OperationProgress;\n+import com.linkedin.kafka.cruisecontrol.config.KafkaCruiseControlConfig;\n+import com.linkedin.kafka.cruisecontrol.exception.KafkaCruiseControlException;\n+import com.linkedin.kafka.cruisecontrol.monitor.ModelCompletenessRequirements;\n+import com.linkedin.kafka.cruisecontrol.servlet.parameters.GoalBasedOptimizationParameters;\n+import java.util.List;\n+import java.util.concurrent.TimeoutException;\n+import java.util.regex.Pattern;\n+\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.goalsByPriority;\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.sanityCheckGoals;\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.sanityCheckLoadMonitorReadiness;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_DRYRUN;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_STOP_ONGOING_EXECUTION;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_MODEL_COMPLETENESS_REQUIREMENTS;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_SKIP_HARD_GOAL_CHECK;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_EXCLUDED_TOPICS;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.maybeStopOngoingExecutionToModifyAndWait;\n+\n+\n+/**\n+ * An abstract class to extracting the common logic of goal based operation runnables.", "originalCommit": "3ceb9a204cae666a26c0c8037a025378c2766bc7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c6be52e8b6a6b4b4e5a83c3c29e3c9197eca507f", "chunk": "diff --git a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java\nindex 49800ea0..130bf588 100644\n--- a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java\n+++ b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java\n\n@@ -29,7 +29,7 @@ import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.Ru\n \n \n /**\n- * An abstract class to extracting the common logic of goal based operation runnables.\n+ * An abstract class to extract the common logic of goal based operation runnables.\n  */\n public abstract class GoalBasedOperationRunnable extends OperationRunnable {\n   protected final List<String> _goals;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2NzQwMQ==", "url": "https://github.com/linkedin/cruise-control/pull/1123#discussion_r385967401", "bodyText": "why DemoteBrokerRunnable does not extends from this new abstraction?", "author": "kidkun", "createdAt": "2020-02-28T23:26:36Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * Copyright 2020 LinkedIn Corp. Licensed under the BSD 2-Clause License (the \"License\"). See License in the project root for license information.\n+ */\n+\n+package com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable;\n+\n+import com.linkedin.cruisecontrol.exception.NotEnoughValidWindowsException;\n+import com.linkedin.kafka.cruisecontrol.KafkaCruiseControl;\n+import com.linkedin.kafka.cruisecontrol.analyzer.OptimizerResult;\n+import com.linkedin.kafka.cruisecontrol.analyzer.goals.Goal;\n+import com.linkedin.kafka.cruisecontrol.async.progress.OperationProgress;\n+import com.linkedin.kafka.cruisecontrol.config.KafkaCruiseControlConfig;\n+import com.linkedin.kafka.cruisecontrol.exception.KafkaCruiseControlException;\n+import com.linkedin.kafka.cruisecontrol.monitor.ModelCompletenessRequirements;\n+import com.linkedin.kafka.cruisecontrol.servlet.parameters.GoalBasedOptimizationParameters;\n+import java.util.List;\n+import java.util.concurrent.TimeoutException;\n+import java.util.regex.Pattern;\n+\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.goalsByPriority;\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.sanityCheckGoals;\n+import static com.linkedin.kafka.cruisecontrol.KafkaCruiseControlUtils.sanityCheckLoadMonitorReadiness;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_DRYRUN;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_STOP_ONGOING_EXECUTION;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_MODEL_COMPLETENESS_REQUIREMENTS;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_SKIP_HARD_GOAL_CHECK;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.SELF_HEALING_EXCLUDED_TOPICS;\n+import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.RunnableUtils.maybeStopOngoingExecutionToModifyAndWait;\n+\n+\n+/**\n+ * An abstract class to extracting the common logic of goal based operation runnables.\n+ */\n+public abstract class GoalBasedOperationRunnable extends OperationRunnable {\n+  protected final List<String> _goals;\n+  protected final ModelCompletenessRequirements _modelCompletenessRequirements;\n+  protected final boolean _dryRun;\n+  protected final boolean _stopOngoingExecution;\n+  protected final boolean _skipHardGoalCheck;\n+  protected final Pattern _excludedTopics;\n+  protected final boolean _allowCapacityEstimation;\n+  protected final boolean _excludeRecentlyDemotedBrokers;\n+  protected final boolean _excludeRecentlyRemovedBrokers;\n+  protected OperationProgress _operationProgress;\n+  // Combined completeness requirements to be used after initialization.\n+  protected ModelCompletenessRequirements _combinedCompletenessRequirements;\n+  protected List<Goal> _goalsByPriority;\n+\n+  public GoalBasedOperationRunnable(KafkaCruiseControl kafkaCruiseControl,", "originalCommit": "3ceb9a204cae666a26c0c8037a025378c2766bc7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5MjEzNQ==", "url": "https://github.com/linkedin/cruise-control/pull/1123#discussion_r385992135", "bodyText": "This is preserving the abstraction that DemoteBrokerParameters does not extend from GoalBasedOptimizationParameters. The key reason is that the demote operation relies on a single hard-coded goal rather than using a variable goals for execution.", "author": "efeg", "createdAt": "2020-02-29T02:14:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2NzQwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c6be52e8b6a6b4b4e5a83c3c29e3c9197eca507f", "chunk": "diff --git a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java\nindex 49800ea0..130bf588 100644\n--- a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java\n+++ b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/GoalBasedOperationRunnable.java\n\n@@ -29,7 +29,7 @@ import static com.linkedin.kafka.cruisecontrol.servlet.handler.async.runnable.Ru\n \n \n /**\n- * An abstract class to extracting the common logic of goal based operation runnables.\n+ * An abstract class to extract the common logic of goal based operation runnables.\n  */\n public abstract class GoalBasedOperationRunnable extends OperationRunnable {\n   protected final List<String> _goals;\n"}}, {"oid": "49dcf4c0f3d58c668cb09b06e377850fb560509f", "url": "https://github.com/linkedin/cruise-control/commit/49dcf4c0f3d58c668cb09b06e377850fb560509f", "message": "Add an additional abstraction layer for goal-based operation runnables.", "committedDate": "2020-02-29T02:07:53Z", "type": "commit"}, {"oid": "c6be52e8b6a6b4b4e5a83c3c29e3c9197eca507f", "url": "https://github.com/linkedin/cruise-control/commit/c6be52e8b6a6b4b4e5a83c3c29e3c9197eca507f", "message": "Address the feedback.", "committedDate": "2020-02-29T02:15:54Z", "type": "commit"}, {"oid": "c6be52e8b6a6b4b4e5a83c3c29e3c9197eca507f", "url": "https://github.com/linkedin/cruise-control/commit/c6be52e8b6a6b4b4e5a83c3c29e3c9197eca507f", "message": "Address the feedback.", "committedDate": "2020-02-29T02:15:54Z", "type": "forcePushed"}]}