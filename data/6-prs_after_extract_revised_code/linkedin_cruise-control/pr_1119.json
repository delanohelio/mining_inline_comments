{"pr_number": 1119, "pr_title": "Fix ConcurrentModificationException thrown by SlowBrokerFinder.", "pr_createdAt": "2020-02-26T18:43:35Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1119", "timeline": [{"oid": "c5254643d9fda141ee506f8a0a42f4a3b93229bc", "url": "https://github.com/linkedin/cruise-control/commit/c5254643d9fda141ee506f8a0a42f4a3b93229bc", "message": "Fix ConcurrentModificationException thrown by SlowBrokerFinder.", "committedDate": "2020-02-26T18:42:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcxMzUwNw==", "url": "https://github.com/linkedin/cruise-control/pull/1119#discussion_r384713507", "bodyText": "If this loop only uses the key of the _brokerSlownessScore map, why does it iterate over its entries rather than its keys?", "author": "efeg", "createdAt": "2020-02-26T19:29:03Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java", "diffHunk": "@@ -235,17 +235,21 @@ private void updateBrokerSlownessScore(Set<BrokerEntity> detectedMetricAnomalies\n     }\n     // For brokers which are previously detected as slow brokers, decrease their slowness score if their metrics has\n     // recovered back to normal range.\n+    Set<BrokerEntity> brokersRecovered = new HashSet<>();\n     for (Map.Entry<BrokerEntity, Integer> entry : _brokerSlownessScore.entrySet()) {\n       BrokerEntity broker = entry.getKey();\n       if (!detectedMetricAnomalies.contains(broker)) {\n         Integer score = _brokerSlownessScore.get(broker);\n-        // If the score reaches zero, remove its suspicion.\n         if (score != null && --score == 0) {\n-          _brokerSlownessScore.remove(broker);\n-          _detectedSlowBrokers.remove(broker);\n+          brokersRecovered.add(broker);", "originalCommit": "c5254643d9fda141ee506f8a0a42f4a3b93229bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f938b866fcf5576126d92dfb8dd73b6a5ee1aa7c", "chunk": "diff --git a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java\nindex 1baa2e47..8a78853a 100644\n--- a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java\n+++ b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/detector/SlowBrokerFinder.java\n\n@@ -236,8 +236,7 @@ public class SlowBrokerFinder implements MetricAnomalyFinder<BrokerEntity> {\n     // For brokers which are previously detected as slow brokers, decrease their slowness score if their metrics has\n     // recovered back to normal range.\n     Set<BrokerEntity> brokersRecovered = new HashSet<>();\n-    for (Map.Entry<BrokerEntity, Integer> entry : _brokerSlownessScore.entrySet()) {\n-      BrokerEntity broker = entry.getKey();\n+    for (BrokerEntity broker : _brokerSlownessScore.keySet()) {\n       if (!detectedMetricAnomalies.contains(broker)) {\n         Integer score = _brokerSlownessScore.get(broker);\n         if (score != null && --score == 0) {\n"}}, {"oid": "f938b866fcf5576126d92dfb8dd73b6a5ee1aa7c", "url": "https://github.com/linkedin/cruise-control/commit/f938b866fcf5576126d92dfb8dd73b6a5ee1aa7c", "message": "Address the feedback.", "committedDate": "2020-02-26T19:42:56Z", "type": "commit"}, {"oid": "1bb1a4d4baf022a5808bd3dd1fc42d4f1289996f", "url": "https://github.com/linkedin/cruise-control/commit/1bb1a4d4baf022a5808bd3dd1fc42d4f1289996f", "message": "Fix build failure and another bug.", "committedDate": "2020-02-26T19:57:16Z", "type": "commit"}]}