{"pr_number": 1130, "pr_title": "add_broker should drop brokers-to-be-added from recently-removed-brokers", "pr_createdAt": "2020-03-05T20:26:03Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1130", "timeline": [{"oid": "90308eec6f04ed70f1b66c6443ca1e3eade655cc", "url": "https://github.com/linkedin/cruise-control/commit/90308eec6f04ed70f1b66c6443ca1e3eade655cc", "message": "add_broker should drop brokers-to-be-added from recently-removed-brokers", "committedDate": "2020-03-05T20:17:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYzNDc0OA==", "url": "https://github.com/linkedin/cruise-control/pull/1130#discussion_r388634748", "bodyText": "should we also drop to_be_added_broker from recently_demoted_broker set?", "author": "kidkun", "createdAt": "2020-03-06T00:00:54Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/RunnableUtils.java", "diffHunk": "@@ -259,6 +260,72 @@ public static void maybeStopOngoingExecutionToModifyAndWait(KafkaCruiseControl k\n     step.done();\n   }\n \n+  /**\n+   * Compute optimization options, update recently removed brokers (if not dryRun) and return the computed result.\n+   *\n+   * @param clusterModel The state of the cluster.\n+   * @param isTriggeredByGoalViolation True if proposals is triggered by goal violation, false otherwise.\n+   * @param kafkaCruiseControl The Kafka Cruise Control instance.\n+   * @param brokersToDropFromRecentlyRemoved Brokers to drop from recently removed brokers. Modifies the actual values if not dryRun.\n+   * @param dryRun True if dryrun, false otherwise.\n+   * @param excludeRecentlyDemotedBrokers Exclude recently demoted brokers from proposal generation for leadership transfer.\n+   * @param excludeRecentlyRemovedBrokers Exclude recently removed brokers from proposal generation for replica transfer.\n+   * @param excludedTopicsPattern The topics that should be excluded from the optimization action.\n+   * @param requestedDestinationBrokerIds Explicitly requested destination broker Ids to limit the replica movement to\n+   *                                      these brokers (if empty, no explicit filter is enforced -- cannot be null).\n+   * @param onlyMoveImmigrantReplicas True to move only immigrant replicas, false otherwise.\n+   * @return Computed optimization options.\n+   */\n+  public static OptimizationOptions computeOptimizationOptions(ClusterModel clusterModel,\n+                                                               boolean isTriggeredByGoalViolation,\n+                                                               KafkaCruiseControl kafkaCruiseControl,\n+                                                               Set<Integer> brokersToDropFromRecentlyRemoved,\n+                                                               boolean dryRun,\n+                                                               boolean excludeRecentlyDemotedBrokers,\n+                                                               boolean excludeRecentlyRemovedBrokers,\n+                                                               Pattern excludedTopicsPattern,\n+                                                               Set<Integer> requestedDestinationBrokerIds,\n+                                                               boolean onlyMoveImmigrantReplicas) {\n+\n+    // Update recently removed brokers.\n+    Set<Integer> intendedRecentlyRemovedBrokers = maybeDropRecentlyRemovedBrokers(kafkaCruiseControl,\n+                                                                                  brokersToDropFromRecentlyRemoved,\n+                                                                                  dryRun);\n+\n+    Set<Integer> excludedBrokersForLeadership = excludeRecentlyDemotedBrokers ? kafkaCruiseControl.executorState().recentlyDemotedBrokers()\n+                                                                              : Collections.emptySet();\n+\n+    Set<Integer> excludedBrokersForReplicaMove = excludeRecentlyRemovedBrokers ? intendedRecentlyRemovedBrokers\n+                                                                               : Collections.emptySet();\n+\n+    Set<String> excludedTopics = kafkaCruiseControl.excludedTopics(clusterModel, excludedTopicsPattern);\n+    LOG.debug(\"Topics excluded from partition movement: {}\", excludedTopics);\n+    return new OptimizationOptions(excludedTopics, excludedBrokersForLeadership, excludedBrokersForReplicaMove,\n+                                   isTriggeredByGoalViolation, requestedDestinationBrokerIds, onlyMoveImmigrantReplicas);\n+  }\n+\n+\n+  /**\n+   * Update recently removed brokers with the given brokers to drop if the given dryrun is false.\n+   *\n+   * @param kafkaCruiseControl The Kafka Cruise Control instance.\n+   * @param brokersToDropFromRecentlyRemoved Brokers to drop from recently removed brokers (if exist).\n+   * @param dryRun True if dryrun, false otherwise.\n+   * @return Brokers intended to be in recently removed brokers.\n+   */\n+  private static Set<Integer> maybeDropRecentlyRemovedBrokers(KafkaCruiseControl kafkaCruiseControl,\n+                                                              Set<Integer> brokersToDropFromRecentlyRemoved,\n+                                                              boolean dryRun) {\n+    if (!dryRun) {\n+      kafkaCruiseControl.dropRecentBrokers(brokersToDropFromRecentlyRemoved, true);", "originalCommit": "90308eec6f04ed70f1b66c6443ca1e3eade655cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f4a3bceadabc4be68d7125ddc31c67da8b553578", "chunk": "diff --git a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/RunnableUtils.java b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/RunnableUtils.java\nindex 7c697fa3..1bf38159 100644\n--- a/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/RunnableUtils.java\n+++ b/cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/servlet/handler/async/runnable/RunnableUtils.java\n\n@@ -261,12 +262,12 @@ public class RunnableUtils {\n   }\n \n   /**\n-   * Compute optimization options, update recently removed brokers (if not dryRun) and return the computed result.\n+   * Compute optimization options, update recently removed and demoted brokers (if not dryRun) and return the computed result.\n    *\n    * @param clusterModel The state of the cluster.\n    * @param isTriggeredByGoalViolation True if proposals is triggered by goal violation, false otherwise.\n    * @param kafkaCruiseControl The Kafka Cruise Control instance.\n-   * @param brokersToDropFromRecentlyRemoved Brokers to drop from recently removed brokers. Modifies the actual values if not dryRun.\n+   * @param brokersToDrop Brokers to drop from recently removed and demoted brokers. Modifies the actual values if not dryRun.\n    * @param dryRun True if dryrun, false otherwise.\n    * @param excludeRecentlyDemotedBrokers Exclude recently demoted brokers from proposal generation for leadership transfer.\n    * @param excludeRecentlyRemovedBrokers Exclude recently removed brokers from proposal generation for replica transfer.\n"}}, {"oid": "f4a3bceadabc4be68d7125ddc31c67da8b553578", "url": "https://github.com/linkedin/cruise-control/commit/f4a3bceadabc4be68d7125ddc31c67da8b553578", "message": "Address the feedback.", "committedDate": "2020-03-06T01:23:51Z", "type": "commit"}]}