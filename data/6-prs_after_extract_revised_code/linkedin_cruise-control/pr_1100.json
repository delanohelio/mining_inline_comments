{"pr_number": 1100, "pr_title": "Add a sensor to indicate whether the goal violation detector has unfixable goals.", "pr_createdAt": "2020-02-14T20:22:48Z", "pr_url": "https://github.com/linkedin/cruise-control/pull/1100", "timeline": [{"oid": "74a1ba9a82d3c7c1d1405738d8ff76f0b715cd11", "url": "https://github.com/linkedin/cruise-control/commit/74a1ba9a82d3c7c1d1405738d8ff76f0b715cd11", "message": "Add a sensor to indicate whether the goal violation detector has unfixable goals.", "committedDate": "2020-02-14T20:20:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1MjIyMQ==", "url": "https://github.com/linkedin/cruise-control/pull/1100#discussion_r379652221", "bodyText": "Why we need to reset hasUnfixableGoals here? Shouldn't refreshing this value in anomaly detector's anomaly handling logic enough?", "author": "kidkun", "createdAt": "2020-02-14T21:27:48Z", "path": "cruise-control/src/main/java/com/linkedin/kafka/cruisecontrol/executor/Executor.java", "diffHunk": "@@ -555,6 +555,7 @@ private void startExecution(LoadMonitor loadMonitor,\n     sanityCheckOngoingMovement();\n     _hasOngoingExecution = true;\n     _anomalyDetector.maybeClearOngoingAnomalyDetectionTimeMs();\n+    _anomalyDetector.resetHasUnfixableGoals();", "originalCommit": "74a1ba9a82d3c7c1d1405738d8ff76f0b715cd11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1NTM4MQ==", "url": "https://github.com/linkedin/cruise-control/pull/1100#discussion_r379655381", "bodyText": "An ongoing execution would potentially take hours to days to complete. During an ongoing execution, goal violation detector skips detection; hence, would fail to refresh this state.\nResetting the state during an ongoing execution avoids keeping this signal for non-actionable case. If an execution was manually started, the cluster operator already knows if there are unfixable goals, because s/he either fixes them or skips them explicitly (on purpose).", "author": "efeg", "createdAt": "2020-02-14T21:36:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1MjIyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1NjAxMg==", "url": "https://github.com/linkedin/cruise-control/pull/1100#discussion_r379656012", "bodyText": "I see, thanks for the explanation.", "author": "kidkun", "createdAt": "2020-02-14T21:37:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1MjIyMQ=="}], "type": "inlineReview", "revised_code": null}]}