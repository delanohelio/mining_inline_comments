{"pr_number": 6408, "pr_title": "#6404: DataExporter: should not require ajax=\"false\"", "pr_createdAt": "2020-10-12T21:03:12Z", "pr_url": "https://github.com/primefaces/primefaces/pull/6408", "timeline": [{"oid": "57cdbbcc435245feea2f60f82b56b0e29f9352c2", "url": "https://github.com/primefaces/primefaces/commit/57cdbbcc435245feea2f60f82b56b0e29f9352c2", "message": "#6404: DataExporter: should not require ajax=\"false\"", "committedDate": "2020-10-12T20:59:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5MDQ0NQ==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r503890445", "bodyText": "Didn't know if there was a better way to include this?  I guess there is no renderer to attach to so I guess this is OK.", "author": "melloware", "createdAt": "2020-10-13T11:57:11Z", "path": "src/main/java/org/primefaces/component/export/DataExporter.java", "diffHunk": "@@ -64,11 +66,13 @@\n     private ValueExpression exporter;\n \n     public DataExporter() {\n+        ResourceUtils.addComponentResource(FacesContext.getCurrentInstance(), \"filedownload/filedownload.js\");", "originalCommit": "57cdbbcc435245feea2f60f82b56b0e29f9352c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5MzMwNA==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r504193304", "bodyText": "No renderer. Don\u00b4t know a better place. It\u00b4s the same FileDownloadActionListener does.", "author": "christophs78", "createdAt": "2020-10-13T19:09:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5MDQ0NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5MTM3NQ==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r503891375", "bodyText": "Could this be !LangUtils.isValueBlank(attributeName) ?", "author": "melloware", "createdAt": "2020-10-13T11:58:43Z", "path": "src/main/java/org/primefaces/util/DynamicContentSrcBuilder.java", "diffHunk": "@@ -65,8 +65,12 @@ else if (value instanceof String) {\n         }\n         else if (value instanceof StreamedContent) {\n             StreamedContent streamedContent = (StreamedContent) value;\n+            ValueExpression ve = null;\n+            if (attributeName != null && attributeName.length() > 0) {", "originalCommit": "57cdbbcc435245feea2f60f82b56b0e29f9352c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5Mjc3MQ==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r504192771", "bodyText": "Done. I always search for StringUtils and can\u00b4t remember LangUtils...", "author": "christophs78", "createdAt": "2020-10-13T19:08:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5MTM3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "4e01dcdd24d03420cad073653d4f6c9c82aa77ac", "chunk": "diff --git a/src/main/java/org/primefaces/util/DynamicContentSrcBuilder.java b/src/main/java/org/primefaces/util/DynamicContentSrcBuilder.java\nindex 44d286c4f..cf1032f0f 100644\n--- a/src/main/java/org/primefaces/util/DynamicContentSrcBuilder.java\n+++ b/src/main/java/org/primefaces/util/DynamicContentSrcBuilder.java\n\n@@ -66,7 +66,7 @@ public class DynamicContentSrcBuilder {\n         else if (value instanceof StreamedContent) {\n             StreamedContent streamedContent = (StreamedContent) value;\n             ValueExpression ve = null;\n-            if (attributeName != null && attributeName.length() > 0) {\n+            if (!LangUtils.isValueBlank(attributeName)) {\n                 ve = component.getValueExpression(attributeName);\n             }\n             ValueExpression expression = ValueExpressionAnalyzer.getExpression(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5MTkwMw==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r503891903", "bodyText": "I wonder if this could be moved to ResourceUtils as a static method and reused between FileDownload and this?", "author": "melloware", "createdAt": "2020-10-13T11:59:38Z", "path": "src/main/java/org/primefaces/component/datatable/export/DataTableExcelExporter.java", "diffHunk": "@@ -227,6 +243,35 @@ protected Sheet createSheet(Workbook wb, String sheetName, ExcelOptions options)\n         return wb.createSheet(sheetName);\n     }\n \n+\n+    protected String getMonitorKeyCookieName(FacesContext context, ELContext elContext) {\n+        String monitorKeyCookieName = Constants.DOWNLOAD_COOKIE + context.getViewRoot().getViewId().replace('/', '_');", "originalCommit": "57cdbbcc435245feea2f60f82b56b0e29f9352c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5Mjg2Nw==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r504192867", "bodyText": "done", "author": "christophs78", "createdAt": "2020-10-13T19:09:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5MTkwMw=="}], "type": "inlineReview", "revised_code": {"commit": "4e01dcdd24d03420cad073653d4f6c9c82aa77ac", "chunk": "diff --git a/src/main/java/org/primefaces/component/datatable/export/DataTableExcelExporter.java b/src/main/java/org/primefaces/component/datatable/export/DataTableExcelExporter.java\nindex 3e3426d64..271589baa 100644\n--- a/src/main/java/org/primefaces/component/datatable/export/DataTableExcelExporter.java\n+++ b/src/main/java/org/primefaces/component/datatable/export/DataTableExcelExporter.java\n\n@@ -243,20 +235,14 @@ public class DataTableExcelExporter extends DataTableExporter {\n         return wb.createSheet(sheetName);\n     }\n \n-\n-    protected String getMonitorKeyCookieName(FacesContext context, ELContext elContext) {\n-        String monitorKeyCookieName = Constants.DOWNLOAD_COOKIE + context.getViewRoot().getViewId().replace('/', '_');\n-        if (monitorKey != null) {\n-            String evaluated = (String) monitorKey.getValue(elContext);\n-            if (!LangUtils.isValueBlank(evaluated)) {\n-                monitorKeyCookieName += \"_\" + evaluated;\n-            }\n-        }\n-        return monitorKeyCookieName;\n-    }\n-\n     protected void ajaxDownload(FacesContext context, Workbook generatedExcel, String filename) throws IOException {\n-        String filenameWithExtension = filename + \".xls\";\n+        String filenameWithExtension = filename;\n+        if (\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\".equals(getContentType())) {\n+            filenameWithExtension += \".xlsx\";\n+        }\n+        else {\n+            filenameWithExtension += \".xls\";\n+        }\n         ByteArrayOutputStream out = new ByteArrayOutputStream();\n         generatedExcel.write(out);\n \n"}}, {"oid": "4e01dcdd24d03420cad073653d4f6c9c82aa77ac", "url": "https://github.com/primefaces/primefaces/commit/4e01dcdd24d03420cad073653d4f6c9c82aa77ac", "message": "#6404: DataExporter: should not require ajax=\"false\"", "committedDate": "2020-10-13T19:07:40Z", "type": "commit"}, {"oid": "838e47bc4869963597cc395c4f6ee65f220794ee", "url": "https://github.com/primefaces/primefaces/commit/838e47bc4869963597cc395c4f6ee65f220794ee", "message": "#6404: DataExporter: should not require ajax=\"false\"\n\nCSV and XML", "committedDate": "2020-10-13T19:22:21Z", "type": "commit"}, {"oid": "67da788d2066c261b935a51199bea8ba3fb6ba6e", "url": "https://github.com/primefaces/primefaces/commit/67da788d2066c261b935a51199bea8ba3fb6ba6e", "message": "#6404: DataExporter: Refactor XLS(X) and PDF", "committedDate": "2020-10-16T19:00:34Z", "type": "commit"}, {"oid": "1a3ddf8a9cc5d2fc3c53500c76e65cc1b3c2c150", "url": "https://github.com/primefaces/primefaces/commit/1a3ddf8a9cc5d2fc3c53500c76e65cc1b3c2c150", "message": "#6404: DataExporter: Refactor CSV and XML", "committedDate": "2020-10-16T20:43:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzODIzNQ==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r506938235", "bodyText": "I don't see your close the outputStreamWriter.  A better way may be try with resources.\n        try (OutputStreamWriter osw = new OutputStreamWriter(os, encodingType);\n                    PrintWriter writer = new PrintWriter(osw);) {\n            writer.write(content.toString());\n            writer.flush();\n        }", "author": "melloware", "createdAt": "2020-10-17T12:26:22Z", "path": "src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java", "diffHunk": "@@ -337,6 +338,66 @@ public void export(FacesContext context, List<DataTable> tables, ExportConfigura\n      */\n     protected abstract void doExport(FacesContext facesContext, DataTable table, ExportConfiguration config, int index) throws IOException;\n \n+    protected abstract String getContentType();\n+\n+    protected void sendExport2Client(String filenameWithExtension, ByteArrayOutputStream content, FacesContext context) throws IOException {\n+        if (PrimeFaces.current().isAjaxRequest()) {\n+            ajaxDownload(filenameWithExtension, content.toByteArray(), context);\n+        }\n+        else {\n+            ExternalContext externalContext = context.getExternalContext();\n+            externalContext.setResponseContentType(getContentType());\n+            setResponseHeader(externalContext, ComponentUtils.createContentDisposition(\"attachment\", filenameWithExtension));\n+            externalContext.setResponseContentLength(content.size());\n+            addResponseCookie(context);\n+\n+            content.writeTo(externalContext.getResponseOutputStream());\n+            externalContext.responseFlushBuffer();\n+        }\n+    }\n+\n+    protected void sendExport2Client(String filenameWithExtension, StringBuilder content, String encodingType, FacesContext context) throws IOException {\n+        if (PrimeFaces.current().isAjaxRequest()) {\n+            ajaxDownload(filenameWithExtension, content.toString().getBytes(encodingType), encodingType, context);\n+        }\n+        else {\n+            ExternalContext externalContext = context.getExternalContext();\n+            externalContext.setResponseContentType(getContentType() + \"; charset=\" + encodingType);\n+            setResponseHeader(externalContext, ComponentUtils.createContentDisposition(\"attachment\", filenameWithExtension));\n+\n+            addResponseCookie(context);\n+\n+            OutputStream os = externalContext.getResponseOutputStream();\n+            OutputStreamWriter osw = new OutputStreamWriter(os, encodingType);\n+            PrintWriter writer = new PrintWriter(osw);\n+            writer.write(content.toString());\n+            writer.flush();\n+            writer.close();", "originalCommit": "1a3ddf8a9cc5d2fc3c53500c76e65cc1b3c2c150", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0MDg4Mg==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r506940882", "bodyText": "Good point. Fixed. (Just migrated old and not so perfect code before.)", "author": "christophs78", "createdAt": "2020-10-17T12:58:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzODIzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "cdf1e196d51b58ab97d76b8d609f7d5eca75f955", "chunk": "diff --git a/src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java b/src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java\nindex d4146e564..f2e3e0347 100644\n--- a/src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java\n+++ b/src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java\n\n@@ -368,11 +368,11 @@ public abstract class DataTableExporter implements Exporter<DataTable> {\n             addResponseCookie(context);\n \n             OutputStream os = externalContext.getResponseOutputStream();\n-            OutputStreamWriter osw = new OutputStreamWriter(os, encodingType);\n-            PrintWriter writer = new PrintWriter(osw);\n-            writer.write(content.toString());\n-            writer.flush();\n-            writer.close();\n+            try (OutputStreamWriter osw = new OutputStreamWriter(os, encodingType);\n+                 PrintWriter writer = new PrintWriter(osw);) {\n+                writer.write(content.toString());\n+                writer.flush();\n+            }\n         }\n     }\n \n"}}, {"oid": "cdf1e196d51b58ab97d76b8d609f7d5eca75f955", "url": "https://github.com/primefaces/primefaces/commit/cdf1e196d51b58ab97d76b8d609f7d5eca75f955", "message": "#6404: DataExporter: Refactoring", "committedDate": "2020-10-17T12:57:43Z", "type": "commit"}, {"oid": "5db107230cf1d665c9896713aaea9eea495e2913", "url": "https://github.com/primefaces/primefaces/commit/5db107230cf1d665c9896713aaea9eea495e2913", "message": "#6404: DataExporter: remove DynamicContentSrcBuilder usage", "committedDate": "2020-10-20T17:42:07Z", "type": "commit"}, {"oid": "25ca6bdda2d4769b98f035754bf28e82f217bb2e", "url": "https://github.com/primefaces/primefaces/commit/25ca6bdda2d4769b98f035754bf28e82f217bb2e", "message": "Merge branch 'master' into 6404_DataExporter_Ajax", "committedDate": "2020-10-20T17:43:19Z", "type": "commit"}, {"oid": "313b5f0ef707f05aa8d8c79c272c0128d260d965", "url": "https://github.com/primefaces/primefaces/commit/313b5f0ef707f05aa8d8c79c272c0128d260d965", "message": "#6404: DataExporter: fix import after merge", "committedDate": "2020-10-20T17:45:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4MjY3MQ==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r508782671", "bodyText": "This is the only line that gives me pause as it required JAXB to be on the classpath to work. What about java.util.Base64 and doing\nString encoded = Base64.getEncoder().withoutPadding().encodeToString(someByteArray);", "author": "melloware", "createdAt": "2020-10-20T19:25:07Z", "path": "src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java", "diffHunk": "@@ -337,6 +337,62 @@ public void export(FacesContext context, List<DataTable> tables, ExportConfigura\n      */\n     protected abstract void doExport(FacesContext facesContext, DataTable table, ExportConfiguration config, int index) throws IOException;\n \n+    protected abstract String getContentType();\n+\n+    protected void sendExport2Client(String filenameWithExtension, ByteArrayOutputStream content, FacesContext context) throws IOException {\n+        if (PrimeFaces.current().isAjaxRequest()) {\n+            ajaxDownload(filenameWithExtension, content.toByteArray(), context);\n+        }\n+        else {\n+            ExternalContext externalContext = context.getExternalContext();\n+            externalContext.setResponseContentType(getContentType());\n+            setResponseHeader(externalContext, ComponentUtils.createContentDisposition(\"attachment\", filenameWithExtension));\n+            externalContext.setResponseContentLength(content.size());\n+            addResponseCookie(context);\n+\n+            content.writeTo(externalContext.getResponseOutputStream());\n+            externalContext.responseFlushBuffer();\n+        }\n+    }\n+\n+    protected void sendExport2Client(String filenameWithExtension, StringBuilder content, String encodingType, FacesContext context) throws IOException {\n+        if (PrimeFaces.current().isAjaxRequest()) {\n+            ajaxDownload(filenameWithExtension, content.toString().getBytes(encodingType), encodingType, context);\n+        }\n+        else {\n+            ExternalContext externalContext = context.getExternalContext();\n+            externalContext.setResponseContentType(getContentType() + \"; charset=\" + encodingType);\n+            setResponseHeader(externalContext, ComponentUtils.createContentDisposition(\"attachment\", filenameWithExtension));\n+\n+            addResponseCookie(context);\n+\n+            OutputStream os = externalContext.getResponseOutputStream();\n+            try (OutputStreamWriter osw = new OutputStreamWriter(os, encodingType);\n+                 PrintWriter writer = new PrintWriter(osw);) {\n+                writer.write(content.toString());\n+                writer.flush();\n+            }\n+        }\n+    }\n+\n+    private void ajaxDownload(String filenameWithExtension, byte[] content, FacesContext context) {\n+        ajaxDownload(filenameWithExtension, content, null, context);\n+    }\n+\n+    private void ajaxDownload(String filenameWithExtension, byte[] content, String encodingType, FacesContext context) {\n+        String contentType = getContentType();\n+        if (!LangUtils.isValueBlank(encodingType)) {\n+            contentType += \"; charset=\" + encodingType;\n+        }\n+\n+        String base64 = DatatypeConverter.printBase64Binary(content);", "originalCommit": "313b5f0ef707f05aa8d8c79c272c0128d260d965", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE2NzE4MQ==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r509167181", "bodyText": "Good Point. I also fixed this for DynamicContentSrcBuilder.", "author": "christophs78", "createdAt": "2020-10-21T10:28:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4MjY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIwNzA3Mw==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r509207073", "bodyText": "Awesome! I think that is better", "author": "melloware", "createdAt": "2020-10-21T11:40:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4MjY3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e609d2e12ab320b2a60e6df75956fba5bc315e90", "chunk": "diff --git a/src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java b/src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java\nindex 200900e58..899c7d104 100644\n--- a/src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java\n+++ b/src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java\n\n@@ -385,7 +381,7 @@ public abstract class DataTableExporter implements Exporter<DataTable> {\n             contentType += \"; charset=\" + encodingType;\n         }\n \n-        String base64 = DatatypeConverter.printBase64Binary(content);\n+        String base64 = Base64.getEncoder().withoutPadding().encodeToString(content);\n         String data = \"data:\" + contentType + \";base64,\" + base64;\n \n         String monitorKeyCookieName = ResourceUtils.getMonitorKeyCookieName(context, null);\n"}}, {"oid": "e609d2e12ab320b2a60e6df75956fba5bc315e90", "url": "https://github.com/primefaces/primefaces/commit/e609d2e12ab320b2a60e6df75956fba5bc315e90", "message": "#6404: DataExporter: use java.util.Base64", "committedDate": "2020-10-21T10:27:33Z", "type": "commit"}, {"oid": "7f06f3d4a1803f8659239f8fec9c975d554e598c", "url": "https://github.com/primefaces/primefaces/commit/7f06f3d4a1803f8659239f8fec9c975d554e598c", "message": "#6404: DataExporter: use java.util.Base64", "committedDate": "2020-10-21T10:29:50Z", "type": "commit"}, {"oid": "dbbdc63bb0499890a2c818a37a3552481a58feaf", "url": "https://github.com/primefaces/primefaces/commit/dbbdc63bb0499890a2c818a37a3552481a58feaf", "message": "#6404: DataExporter: prepare further refactorings", "committedDate": "2020-10-22T18:26:24Z", "type": "commit"}, {"oid": "a330d2b68d60d41339f6bfc937306f83a5dd72b1", "url": "https://github.com/primefaces/primefaces/commit/a330d2b68d60d41339f6bfc937306f83a5dd72b1", "message": "#6404: DataExporter: refactoring", "committedDate": "2020-10-23T20:03:55Z", "type": "commit"}, {"oid": "9c6e972595ca438d87bb9c3501fd209f234d14fb", "url": "https://github.com/primefaces/primefaces/commit/9c6e972595ca438d87bb9c3501fd209f234d14fb", "message": "#6404: DataExporter: refactoring", "committedDate": "2020-10-23T20:12:11Z", "type": "commit"}, {"oid": "6c43b8946b49ee6617e74690416a3341380da471", "url": "https://github.com/primefaces/primefaces/commit/6c43b8946b49ee6617e74690416a3341380da471", "message": "#6404: DataExporter: refactoring", "committedDate": "2020-10-25T17:49:38Z", "type": "commit"}, {"oid": "ebbe3def8b644c66a67ba8ced22999ad0a7b122c", "url": "https://github.com/primefaces/primefaces/commit/ebbe3def8b644c66a67ba8ced22999ad0a7b122c", "message": "#6404: DataExporter: refactoring", "committedDate": "2020-10-26T19:40:31Z", "type": "commit"}, {"oid": "1b62a6a4238f264b5fa9e27356191240087a9eb3", "url": "https://github.com/primefaces/primefaces/commit/1b62a6a4238f264b5fa9e27356191240087a9eb3", "message": "#6404: DataExporter: fix typo", "committedDate": "2020-10-26T19:44:03Z", "type": "commit"}, {"oid": "7a4ef056988a60a67c0ca28a069ed1bc5a3eb784", "url": "https://github.com/primefaces/primefaces/commit/7a4ef056988a60a67c0ca28a069ed1bc5a3eb784", "message": "#6404: DataExporter: refactoring", "committedDate": "2020-10-27T19:14:52Z", "type": "commit"}, {"oid": "6c4922cb7509e60ea007e0e0262a5616d318abfc", "url": "https://github.com/primefaces/primefaces/commit/6c4922cb7509e60ea007e0e0262a5616d318abfc", "message": "newline at end of file", "committedDate": "2020-10-27T19:34:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkxOTE4NQ==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r515919185", "bodyText": "I would keep ExportConfiguration  in export method, having a setter makes your API tricky to use since it must be called before export method (and there is nothing to guarantee that, also exporters should be as much stateless as possible)\ngetContentType: should only return content type without charset, do the concatenation in DataExporter#processAction\ngetFileExtension: I don't know if a file extension includes a dot or not...", "author": "Rapster", "createdAt": "2020-11-02T11:48:20Z", "path": "src/main/java/org/primefaces/component/export/Exporter.java", "diffHunk": "@@ -26,9 +26,17 @@\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n import java.io.IOException;\n+import java.io.OutputStream;\n import java.util.List;\n \n public interface Exporter<T extends UIComponent> {\n \n-    void export(FacesContext facesContext, List<T> component, ExportConfiguration config) throws IOException;\n-}\n\\ No newline at end of file\n+    void export(FacesContext facesContext, List<T> component, OutputStream outputStream) throws IOException;\n+\n+    String getContentType();\n+\n+    String getFileExtension();\n+\n+    void setExportConfiguration(ExportConfiguration exportConfiguration);", "originalCommit": "6c4922cb7509e60ea007e0e0262a5616d318abfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNDg3OA==", "url": "https://github.com/primefaces/primefaces/pull/6408#discussion_r516224878", "bodyText": "done\ndone\nadded JavaDoc", "author": "christophs78", "createdAt": "2020-11-02T20:06:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkxOTE4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "dab7967374eeded095f6d104438b20712b73e453", "chunk": "diff --git a/src/main/java/org/primefaces/component/export/Exporter.java b/src/main/java/org/primefaces/component/export/Exporter.java\nindex 5953ff912..43d1bd1ec 100644\n--- a/src/main/java/org/primefaces/component/export/Exporter.java\n+++ b/src/main/java/org/primefaces/component/export/Exporter.java\n\n@@ -31,12 +31,16 @@ import java.util.List;\n \n public interface Exporter<T extends UIComponent> {\n \n-    void export(FacesContext facesContext, List<T> component, OutputStream outputStream) throws IOException;\n+    void export(FacesContext facesContext, List<T> component, OutputStream outputStream, ExportConfiguration exportConfiguration) throws IOException;\n \n+    /**\n+     * Content-type (MIME-type) excluding charset. (eg 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')\n+     */\n     String getContentType();\n \n+    /**\n+     * File-extension of the exported file including a leading dot. (eg '.xlsx')\n+     */\n     String getFileExtension();\n \n-    void setExportConfiguration(ExportConfiguration exportConfiguration);\n-\n }\n"}}, {"oid": "dab7967374eeded095f6d104438b20712b73e453", "url": "https://github.com/primefaces/primefaces/commit/dab7967374eeded095f6d104438b20712b73e453", "message": "#6404: DataExporter: refactoring", "committedDate": "2020-11-02T20:04:42Z", "type": "commit"}]}