{"pr_number": 4487, "pr_title": "DHFPROD-5571:Allow DHS users to define and deploy Amps", "pr_createdAt": "2020-08-26T18:39:01Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4487", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxNzQ4Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r477517487", "bodyText": "ML 11 doesn't exist yet, but I think we should say \">= 10\" instead of \"== 10\".", "author": "rjrudin", "createdAt": "2020-08-26T18:55:40Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.appdeployer.command.security.DeployAmpsCommand;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.rest.util.ResourcesFragment;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+\n+public class DeployUserAmpsTest extends AbstractHubCoreTest {\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    @BeforeEach\n+    void checkIfTestsCanBeRun(){\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        Assertions.assertTrue(mlVersion.isNightly() || (mlVersion.getMajor() == 10 && mlVersion.getMinor() >= 440));", "originalCommit": "0d44924a2784da09cdbe640a9a52d90e2958d8dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0OTExNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r477549114", "bodyText": "I have fixed it", "author": "srinathgit", "createdAt": "2020-08-26T19:48:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxNzQ4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "fd36bd734c27b02702852d8c75b03077c1c610ba", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\nindex 594257807..2c84cc433 100644\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n+++ b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n\n@@ -3,7 +3,6 @@ package com.marklogic.hub.dhs;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n-import com.marklogic.appdeployer.command.security.DeployAmpsCommand;\n import com.marklogic.hub.AbstractHubCoreTest;\n import com.marklogic.hub.HubConfig;\n import com.marklogic.hub.impl.Versions;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyMTI0NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r477521244", "bodyText": "What error do you get for this?", "author": "rjrudin", "createdAt": "2020-08-26T19:01:56Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.appdeployer.command.security.DeployAmpsCommand;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.rest.util.ResourcesFragment;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+\n+public class DeployUserAmpsTest extends AbstractHubCoreTest {\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    @BeforeEach\n+    void checkIfTestsCanBeRun(){\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        Assertions.assertTrue(mlVersion.isNightly() || (mlVersion.getMajor() == 10 && mlVersion.getMinor() >= 440));\n+    }\n+\n+    @Test\n+    void createAmpWithInheritableRole() {\n+        //POST request\n+        writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME, \"data-hub-developer\");\n+        ResourcesFragment amps = new AmpManager(runAsDataHubSecurityAdmin().getManageClient()).getAsXml();\n+        Assertions.assertTrue(amps.resourceExists(\"testAmp\"));\n+\n+        //PUT request(doesn't work)\n+        writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME,\"data-hub-developer\", \"data-hub-operator\");", "originalCommit": "0d44924a2784da09cdbe640a9a52d90e2958d8dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyMzYzMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r477523633", "bodyText": "11:32:45.559 [main] ERROR c.m.r.util.MgmtResponseErrorHandler - Logging HTTP response body to assist with debugging: {\"errorResponse\":{\"statusCode\":\"403\", \"status\":\"Forbidden\", \"messageCode\":\"\", \"message\":\"You do not have credentials to access /manage/v2/amps/testAmp/properties?document-uri=/data-hub/5/impl/jobs.sjs&modules-database=data-hub-MODULES .\"}}\n11:32:45.560 [main] ERROR c.m.m.resource.security.AmpManager - Error occurred while sending PUT request to /manage/v2/amps/testAmp/properties?document-uri=/data-hub/5/impl/jobs.sjs&modules-database=data-hub-MODULES; logging request body to assist with debugging: {\n  \"local-name\" : \"testAmp\",\n  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n  \"modules-database\" : \"data-hub-MODULES\",\n  \"role\" : [ \"data-hub-developer\", \"data-hub-operator\" ]\n}", "author": "srinathgit", "createdAt": "2020-08-26T19:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyMTI0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyNzQ4MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r477527480", "bodyText": "This may be like query rolesets, where - despite what the docs say (https://docs.marklogic.com/REST/PUT/manage/v2/amps/[id-or-name]/properties) - updates are no longer allowed.\nIf that's the case, then we'll need to subclass DeployAmpsCommand and modify it to not do updates. Can you see what happens if it does a POST and the amp already exists?", "author": "rjrudin", "createdAt": "2020-08-26T19:07:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyMTI0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUzMDcwMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r477530701", "bodyText": "I get this if I a POST request is made and the amp already exists\ncurl -X POST  --anyauth -u test-data-hub-security-admin:password -H \"Content-Type:application/json\" \\\n-d @testAmp.json http://localhost:8002/manage/v2/amps\n{\"errorResponse\":{\"statusCode\":\"400\", \"status\":\"Bad Request\", \"messageCode\":\"MANAGE-CONFLICTINGCONFIG\", \"message\":\"MANAGE-CONFLICTINGCONFIG: (err:FOER0000) A conflict has been detected: roles differ.\"}}%", "author": "srinathgit", "createdAt": "2020-08-26T19:13:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyMTI0NA=="}], "type": "inlineReview", "revised_code": {"commit": "fd36bd734c27b02702852d8c75b03077c1c610ba", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\nindex 594257807..2c84cc433 100644\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n+++ b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n\n@@ -3,7 +3,6 @@ package com.marklogic.hub.dhs;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n-import com.marklogic.appdeployer.command.security.DeployAmpsCommand;\n import com.marklogic.hub.AbstractHubCoreTest;\n import com.marklogic.hub.HubConfig;\n import com.marklogic.hub.impl.Versions;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyMTY3MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r477521671", "bodyText": "Try doing a delete request with a ManageClient - I recall that the URL is a bit funky to build", "author": "rjrudin", "createdAt": "2020-08-26T19:02:17Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.appdeployer.command.security.DeployAmpsCommand;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.rest.util.ResourcesFragment;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+\n+public class DeployUserAmpsTest extends AbstractHubCoreTest {\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    @BeforeEach\n+    void checkIfTestsCanBeRun(){\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        Assertions.assertTrue(mlVersion.isNightly() || (mlVersion.getMajor() == 10 && mlVersion.getMinor() >= 440));\n+    }\n+\n+    @Test\n+    void createAmpWithInheritableRole() {\n+        //POST request\n+        writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME, \"data-hub-developer\");\n+        ResourcesFragment amps = new AmpManager(runAsDataHubSecurityAdmin().getManageClient()).getAsXml();\n+        Assertions.assertTrue(amps.resourceExists(\"testAmp\"));\n+\n+        //PUT request(doesn't work)\n+        writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME,\"data-hub-developer\", \"data-hub-operator\");\n+\n+        //DELETE request(doesn't work)\n+        new DeployAmpsCommand().undo(newCommandContext(runAsDataHubSecurityAdmin()));", "originalCommit": "0d44924a2784da09cdbe640a9a52d90e2958d8dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU0OTM0MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r477549341", "bodyText": "Deleting with ManageClient seems to work", "author": "srinathgit", "createdAt": "2020-08-26T19:49:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUyMTY3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "fd36bd734c27b02702852d8c75b03077c1c610ba", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\nindex 594257807..2c84cc433 100644\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n+++ b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n\n@@ -3,7 +3,6 @@ package com.marklogic.hub.dhs;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n-import com.marklogic.appdeployer.command.security.DeployAmpsCommand;\n import com.marklogic.hub.AbstractHubCoreTest;\n import com.marklogic.hub.HubConfig;\n import com.marklogic.hub.impl.Versions;\n"}}, {"oid": "fd36bd734c27b02702852d8c75b03077c1c610ba", "url": "https://github.com/marklogic/marklogic-data-hub/commit/fd36bd734c27b02702852d8c75b03077c1c610ba", "message": "DHFPROD-5571:Allow DHS users to define and deploy Amps", "committedDate": "2020-08-26T19:47:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU1MTM5Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r477551397", "bodyText": "This is fine - a user can only do an undeploy locally, and that will likely be as an admin user.", "author": "rjrudin", "createdAt": "2020-08-26T19:52:57Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.rest.util.ResourcesFragment;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+\n+public class DeployUserAmpsTest extends AbstractHubCoreTest {\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    @BeforeEach\n+    void checkIfTestsCanBeRun(){\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        Assertions.assertTrue(mlVersion.isNightly() || (mlVersion.getMajor() > 10) ||(mlVersion.getMajor() == 10 && mlVersion.getMinor() >= 440));\n+    }\n+\n+    @Test\n+    void createAmpWithInheritableRole() {\n+        //POST request\n+        writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME, \"data-hub-developer\");\n+        ResourcesFragment amps = new AmpManager(runAsDataHubSecurityAdmin().getManageClient()).getAsXml();\n+        Assertions.assertTrue(amps.resourceExists(\"testAmp\"));\n+\n+        //PUT request(doesn't work)\n+        writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME,\"data-hub-developer\", \"data-hub-operator\");\n+\n+        runAsDataHubSecurityAdmin().getManageClient().delete(\"/manage/v2/amps/testAmp?namespace=&document-uri=/data-hub/5/impl/jobs.sjs&modules-database=data-hub-MODULES\");", "originalCommit": "fd36bd734c27b02702852d8c75b03077c1c610ba", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fd9b975b1c1fc6ecdc37f4f6377e5e6a697756d2", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\nindex 2c84cc433..e7bb526ed 100644\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n+++ b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n\n@@ -5,8 +5,13 @@ import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n import com.marklogic.hub.AbstractHubCoreTest;\n import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.impl.HubConfigImpl;\n import com.marklogic.hub.impl.Versions;\n+import com.marklogic.mgmt.ManageClient;\n+import com.marklogic.mgmt.ManageConfig;\n import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.mgmt.resource.security.RoleManager;\n+import com.marklogic.mgmt.resource.security.UserManager;\n import com.marklogic.rest.util.ResourcesFragment;\n import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.BeforeEach;\n"}}, {"oid": "fd9b975b1c1fc6ecdc37f4f6377e5e6a697756d2", "url": "https://github.com/marklogic/marklogic-data-hub/commit/fd9b975b1c1fc6ecdc37f4f6377e5e6a697756d2", "message": "DHFPROD-5571:Allow DHS users to define and deploy Amps", "committedDate": "2020-08-28T04:18:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgyMjM3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r478822376", "bodyText": "This test is failing. I create a custom role based of \"data-hub-manage-amps\", assign it to a user and use that user to deploy amps. It fails with 403 Forbidden error. Not sure if I made a mistake somewhere", "author": "srinathgit", "createdAt": "2020-08-28T04:21:03Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java", "diffHunk": "@@ -0,0 +1,137 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.impl.HubConfigImpl;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.mgmt.ManageClient;\n+import com.marklogic.mgmt.ManageConfig;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.mgmt.resource.security.RoleManager;\n+import com.marklogic.mgmt.resource.security.UserManager;\n+import com.marklogic.rest.util.ResourcesFragment;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+\n+public class DeployUserAmpsTest extends AbstractHubCoreTest {\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    @BeforeEach\n+    void checkIfTestsCanBeRun(){\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        Assertions.assertTrue(mlVersion.isNightly() || (mlVersion.getMajor() > 10) ||(mlVersion.getMajor() == 10 && mlVersion.getMinor() >= 440));\n+    }\n+\n+    @Test\n+    void createAmpWithInheritableRole() {\n+        //POST request\n+        writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME, \"data-hub-developer\");\n+        ResourcesFragment amps = new AmpManager(runAsDataHubSecurityAdmin().getManageClient()).getAsXml();\n+        Assertions.assertTrue(amps.resourceExists(\"testAmp\"));\n+\n+        //PUT request\n+        writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME,\"data-hub-developer\", \"data-hub-operator\");\n+\n+        runAsDataHubSecurityAdmin().getManageClient().delete(\"/manage/v2/amps/testAmp?namespace=&document-uri=/data-hub/5/impl/jobs.sjs&modules-database=data-hub-MODULES\");\n+        amps = new AmpManager(runAsDataHubSecurityAdmin().getManageClient()).getAsXml();\n+        Assertions.assertFalse(amps.resourceExists(\"testAmp\"));\n+    }\n+\n+    @Test\n+    void createAmpWithDelegatedUser(){", "originalCommit": "fd9b975b1c1fc6ecdc37f4f6377e5e6a697756d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMzNTMwOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r479335308", "bodyText": "\"data-hub-manage-amps\" should be a new role in the project. That way, a dhsa can create a custom role that inherits it. Also, this role will need to inherit the \"manage\" role so that it has read access to the Manage API.", "author": "rjrudin", "createdAt": "2020-08-28T14:17:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgyMjM3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM2ODkyNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r479368925", "bodyText": "\"data-hub-manage-amps\" is the datahub role with create/remove/get-amp privilege and \"admin-database-amp-data-hub-MODULES\" granular privilege which is assigned to \"data-hub-security-admin\". It has been already deployed to the db as part of installation. I am creating a custom role (\"delegated-amp-manager\") that has \"data-hub-manage-amps\" (dh-security-admin deploys this role) and create a user with that role that tries to deploy amps. That has failed\nIf you mean \"delegated-amp-manager\" should have \"manage\" role in addition to \"data-hub-manage-amps\" role, \"data-hub-security-admin\" cannot deploy. It fails as well.", "author": "srinathgit", "createdAt": "2020-08-28T15:12:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgyMjM3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "507d44e6cfb62e9217e06a09675a0e3cf513c36d", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\nindex e7bb526ed..5ac8799b1 100644\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n+++ b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n\n@@ -3,9 +3,16 @@ package com.marklogic.hub.dhs;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.client.document.DocumentManager;\n+import com.marklogic.client.document.DocumentWriteSet;\n+import com.marklogic.client.eval.ServerEvaluationCall;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.Format;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.StringHandle;\n import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubClient;\n import com.marklogic.hub.HubConfig;\n-import com.marklogic.hub.impl.HubConfigImpl;\n import com.marklogic.hub.impl.Versions;\n import com.marklogic.mgmt.ManageClient;\n import com.marklogic.mgmt.ManageConfig;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMzNTkxOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r479335918", "bodyText": "You should just be able to check the status on \"ex\" to see if it's 403 - e.g. HttpStatus.FORBIDDEN.equals(ex.getStatusCode()) .", "author": "rjrudin", "createdAt": "2020-08-28T14:18:12Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/installer/deploy/DeployHubAmpsCommand.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.marklogic.hub.dhs.installer.deploy;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.appdeployer.command.CommandContext;\n+import com.marklogic.appdeployer.command.security.DeployAmpsCommand;\n+import com.marklogic.mgmt.ManageClient;\n+import com.marklogic.mgmt.SaveReceipt;\n+import com.marklogic.mgmt.resource.ResourceManager;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.mgmt.util.ObjectMapperFactory;\n+import org.springframework.web.client.HttpClientErrorException;\n+\n+/**\n+ * This command is used instead of DeployAmpsCommand when a data-hub-security-admin user is deploying\n+ * amps. It's because PUT request fail due to https://bugtrack.marklogic.com/55309.\n+ */\n+public class DeployHubAmpsCommand extends DeployAmpsCommand {\n+\n+    @Override\n+    public boolean cmaShouldBeUsed(CommandContext context) {\n+        return false;\n+    }\n+\n+    @Override\n+    protected SaveReceipt saveResource(ResourceManager mgr, CommandContext context, String payload) {\n+        SaveReceipt receipt = null;\n+        ManageClient manageClient = context.getManageClient();\n+        try {\n+            receipt = super.saveResource(mgr, context, payload);\n+        }\n+        catch (HttpClientErrorException ex) {\n+            try{", "originalCommit": "fd9b975b1c1fc6ecdc37f4f6377e5e6a697756d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "507d44e6cfb62e9217e06a09675a0e3cf513c36d", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/installer/deploy/DeployHubAmpsCommand.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/installer/deploy/DeployHubAmpsCommand.java\nindex 7059513ab..b64f76c08 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/installer/deploy/DeployHubAmpsCommand.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/installer/deploy/DeployHubAmpsCommand.java\n\n@@ -1,13 +1,12 @@\n package com.marklogic.hub.dhs.installer.deploy;\n \n-import com.fasterxml.jackson.databind.JsonNode;\n import com.marklogic.appdeployer.command.CommandContext;\n import com.marklogic.appdeployer.command.security.DeployAmpsCommand;\n import com.marklogic.mgmt.ManageClient;\n import com.marklogic.mgmt.SaveReceipt;\n import com.marklogic.mgmt.resource.ResourceManager;\n import com.marklogic.mgmt.resource.security.AmpManager;\n-import com.marklogic.mgmt.util.ObjectMapperFactory;\n+import org.springframework.http.HttpStatus;\n import org.springframework.web.client.HttpClientErrorException;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMzODcxMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r479338711", "bodyText": "There's a chance that a user will run this as an admin, so the message should be more informative here - e.g. \"An error occurred while trying to update an amp: \" + ex.getMessage() + \". Updates to amps as a user with the data-hub-security-admin role are not allowed in this version of MarkLogic, so this error is being logged and not thrown. If you need to modify the amp, you must delete it first via the Manage API.\"", "author": "rjrudin", "createdAt": "2020-08-28T14:22:48Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/installer/deploy/DeployHubAmpsCommand.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.marklogic.hub.dhs.installer.deploy;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.appdeployer.command.CommandContext;\n+import com.marklogic.appdeployer.command.security.DeployAmpsCommand;\n+import com.marklogic.mgmt.ManageClient;\n+import com.marklogic.mgmt.SaveReceipt;\n+import com.marklogic.mgmt.resource.ResourceManager;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.mgmt.util.ObjectMapperFactory;\n+import org.springframework.web.client.HttpClientErrorException;\n+\n+/**\n+ * This command is used instead of DeployAmpsCommand when a data-hub-security-admin user is deploying\n+ * amps. It's because PUT request fail due to https://bugtrack.marklogic.com/55309.\n+ */\n+public class DeployHubAmpsCommand extends DeployAmpsCommand {\n+\n+    @Override\n+    public boolean cmaShouldBeUsed(CommandContext context) {\n+        return false;\n+    }\n+\n+    @Override\n+    protected SaveReceipt saveResource(ResourceManager mgr, CommandContext context, String payload) {\n+        SaveReceipt receipt = null;\n+        ManageClient manageClient = context.getManageClient();\n+        try {\n+            receipt = super.saveResource(mgr, context, payload);\n+        }\n+        catch (HttpClientErrorException ex) {\n+            try{\n+                JsonNode error = ObjectMapperFactory.getObjectMapper().readTree(ex.getResponseBodyAsString());\n+                if (error.has(\"errorResponse\")) {\n+                    JsonNode errorResponse = error.get(\"errorResponse\");\n+                    if (errorResponse.has(\"messageCode\")) {\n+                        final String statusCode = errorResponse.get(\"statusCode\").asText();\n+                        final String status = errorResponse.get(\"status\").asText();\n+                        if (\"Forbidden\".equalsIgnoreCase(status) && \"403\".equals(statusCode)) {\n+                            boolean ampExists;\n+                            try{\n+                                ampExists  = new AmpManager(manageClient).ampExists(payload);\n+                            }\n+                            catch (Exception e){\n+                                throw ex;\n+                            }\n+                            if(ampExists){\n+                                logger.error(\"Updates to amps are not allowed in this version of MarkLogic server.\");", "originalCommit": "fd9b975b1c1fc6ecdc37f4f6377e5e6a697756d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "507d44e6cfb62e9217e06a09675a0e3cf513c36d", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/installer/deploy/DeployHubAmpsCommand.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/installer/deploy/DeployHubAmpsCommand.java\nindex 7059513ab..b64f76c08 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/installer/deploy/DeployHubAmpsCommand.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/installer/deploy/DeployHubAmpsCommand.java\n\n@@ -1,13 +1,12 @@\n package com.marklogic.hub.dhs.installer.deploy;\n \n-import com.fasterxml.jackson.databind.JsonNode;\n import com.marklogic.appdeployer.command.CommandContext;\n import com.marklogic.appdeployer.command.security.DeployAmpsCommand;\n import com.marklogic.mgmt.ManageClient;\n import com.marklogic.mgmt.SaveReceipt;\n import com.marklogic.mgmt.resource.ResourceManager;\n import com.marklogic.mgmt.resource.security.AmpManager;\n-import com.marklogic.mgmt.util.ObjectMapperFactory;\n+import org.springframework.http.HttpStatus;\n import org.springframework.web.client.HttpClientErrorException;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MDUxNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r479340516", "bodyText": "For this test, we want to make sure that the amp works too. To do that, create a new \"user-amps\" test project and put a single XQuery library in there (since those are easier to amp). Something like this:\ndeclare function get-doc($uri as xs:string) { fn:doc($uri) }\n\nThen insert a document that e.g. has pii-reader for read/update permissions. The amp will grant pii-reader.\nAs a data-hub-operator, first make sure that the user gets back null when calling that function on the test document. Then deploy the amp as a dhsa. Then as a dho, call the function again and verify that you get the test document back.", "author": "rjrudin", "createdAt": "2020-08-28T14:25:40Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java", "diffHunk": "@@ -0,0 +1,137 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.impl.HubConfigImpl;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.mgmt.ManageClient;\n+import com.marklogic.mgmt.ManageConfig;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.mgmt.resource.security.RoleManager;\n+import com.marklogic.mgmt.resource.security.UserManager;\n+import com.marklogic.rest.util.ResourcesFragment;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+\n+public class DeployUserAmpsTest extends AbstractHubCoreTest {\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    @BeforeEach\n+    void checkIfTestsCanBeRun(){\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        Assertions.assertTrue(mlVersion.isNightly() || (mlVersion.getMajor() > 10) ||(mlVersion.getMajor() == 10 && mlVersion.getMinor() >= 440));\n+    }\n+\n+    @Test\n+    void createAmpWithInheritableRole() {", "originalCommit": "fd9b975b1c1fc6ecdc37f4f6377e5e6a697756d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk1NDA2MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r479954060", "bodyText": "Created an amp for js library", "author": "srinathgit", "createdAt": "2020-08-31T07:43:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MDUxNg=="}], "type": "inlineReview", "revised_code": {"commit": "507d44e6cfb62e9217e06a09675a0e3cf513c36d", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\nindex e7bb526ed..5ac8799b1 100644\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n+++ b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n\n@@ -3,9 +3,16 @@ package com.marklogic.hub.dhs;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.client.document.DocumentManager;\n+import com.marklogic.client.document.DocumentWriteSet;\n+import com.marklogic.client.eval.ServerEvaluationCall;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.Format;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.StringHandle;\n import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubClient;\n import com.marklogic.hub.HubConfig;\n-import com.marklogic.hub.impl.HubConfigImpl;\n import com.marklogic.hub.impl.Versions;\n import com.marklogic.mgmt.ManageClient;\n import com.marklogic.mgmt.ManageConfig;\n"}}, {"oid": "507d44e6cfb62e9217e06a09675a0e3cf513c36d", "url": "https://github.com/marklogic/marklogic-data-hub/commit/507d44e6cfb62e9217e06a09675a0e3cf513c36d", "message": "DHFPROD-5571:Allow DHS users to define and deploy Amps", "committedDate": "2020-08-31T07:40:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE2NTg0Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r480165843", "bodyText": "I don't think this needs to be done - i.e. this privilege can go to the role-inheritor role. Only a dhsa can create custom roles. But a dh-amp-manager should be able to create an amp that inherits dh-amp-manager.", "author": "rjrudin", "createdAt": "2020-08-31T14:24:21Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/CreateGranularPrivilegesCommand.java", "diffHunk": "@@ -228,11 +234,17 @@ public void undo(CommandContext context) {\n         ROLES_THAT_CAN_BE_INHERITED.forEach(roleName -> {\n             // We expect each role to translate to a role; otherwise, an error should be thrown\n             String roleId = existingRoles.getIdForNameOrId(roleName);\n-            Privilege priv = newPrivilege(\"data-role-inherit-\" + roleId, \"data-hub-security-admin\");\n+            Privilege priv = newPrivilege(\"data-role-inherit-\" + roleId, \"data-hub-role-inheritor\");\n             priv.setAction(\"http://marklogic.com/xdmp/privileges/role/inherit/\" + roleId);\n             granularPrivilegeMap.put(priv.getAction(), priv);\n         });\n \n+        //This privilege should be assigned to \"dh-security-admin\" only so that it can create custom roles that have \"dh-amp-manager\"", "originalCommit": "507d44e6cfb62e9217e06a09675a0e3cf513c36d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2d3c6cee6b0ea8c6d3d37996c0da199284f3cd4", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/CreateGranularPrivilegesCommand.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/CreateGranularPrivilegesCommand.java\nindex 5e613f5c3..051821057 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/CreateGranularPrivilegesCommand.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/CreateGranularPrivilegesCommand.java\n\n@@ -239,12 +240,6 @@ public class CreateGranularPrivilegesCommand extends LoggingObject implements Co\n             granularPrivilegeMap.put(priv.getAction(), priv);\n         });\n \n-        //This privilege should be assigned to \"dh-security-admin\" only so that it can create custom roles that have \"dh-amp-manager\"\n-        String roleId = existingRoles.getIdForNameOrId(\"data-hub-amp-manager\");\n-        Privilege priv = newPrivilege(\"data-role-inherit-\" + roleId, \"data-hub-security-admin\");\n-        priv.setAction(\"http://marklogic.com/xdmp/privileges/role/inherit/\" + roleId);\n-        granularPrivilegeMap.put(priv.getAction(), priv);\n-\n         return granularPrivilegeMap;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE2Njg0Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r480166847", "bodyText": "Shouldn't this be Assumptions.assumeTrue? We don't want an error thrown if we can't test this.", "author": "rjrudin", "createdAt": "2020-08-31T14:25:52Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java", "diffHunk": "@@ -0,0 +1,185 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.client.document.DocumentManager;\n+import com.marklogic.client.document.DocumentWriteSet;\n+import com.marklogic.client.eval.ServerEvaluationCall;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.Format;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.StringHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubClient;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.mgmt.ManageClient;\n+import com.marklogic.mgmt.ManageConfig;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.mgmt.resource.security.RoleManager;\n+import com.marklogic.mgmt.resource.security.UserManager;\n+import com.marklogic.rest.util.ResourcesFragment;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.READ;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+\n+public class DeployUserAmpsTest extends AbstractHubCoreTest {\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    @BeforeEach\n+    void checkIfTestsCanBeRun(){\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        assertTrue(mlVersion.isNightly() || (mlVersion.getMajor() > 10) ||(mlVersion.getMajor() == 10 && mlVersion.getMinor() >= 440));", "originalCommit": "507d44e6cfb62e9217e06a09675a0e3cf513c36d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI3NjQ2Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r480276463", "bodyText": "my bad, I intended it to be assumeTrue, will change", "author": "srinathgit", "createdAt": "2020-08-31T17:25:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE2Njg0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b2d3c6cee6b0ea8c6d3d37996c0da199284f3cd4", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\nindex 5ac8799b1..9c30d657c 100644\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n+++ b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n\n@@ -5,7 +5,7 @@ import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n import com.marklogic.client.document.DocumentManager;\n import com.marklogic.client.document.DocumentWriteSet;\n-import com.marklogic.client.eval.ServerEvaluationCall;\n+import com.marklogic.client.eval.EvalResultIterator;\n import com.marklogic.client.io.DocumentMetadataHandle;\n import com.marklogic.client.io.Format;\n import com.marklogic.client.io.JacksonHandle;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE2Nzk1OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r480167958", "bodyText": "Pinging @fsnow @ryanjdew  @rahulvudutala  @akshaysonvane as an FYI - I really like this - I think this is the pattern we eventually want for our tests, which is that we obtain upfront the necessary HubClients and give them descriptive names (I think they can be shortened to operatorClient and adminClient too, but that's beside the point). This avoids wondering - what is the current state of adminHubConfig in this test? Essentially, we want to stop using adminHubConfig except to a) get instances of HubClient, and b) to access HubProject.", "author": "rjrudin", "createdAt": "2020-08-31T14:27:39Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java", "diffHunk": "@@ -0,0 +1,185 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.client.document.DocumentManager;\n+import com.marklogic.client.document.DocumentWriteSet;\n+import com.marklogic.client.eval.ServerEvaluationCall;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.Format;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.StringHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubClient;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.mgmt.ManageClient;\n+import com.marklogic.mgmt.ManageConfig;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.mgmt.resource.security.RoleManager;\n+import com.marklogic.mgmt.resource.security.UserManager;\n+import com.marklogic.rest.util.ResourcesFragment;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.READ;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+\n+public class DeployUserAmpsTest extends AbstractHubCoreTest {\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    @BeforeEach\n+    void checkIfTestsCanBeRun(){\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        assertTrue(mlVersion.isNightly() || (mlVersion.getMajor() > 10) ||(mlVersion.getMajor() == 10 && mlVersion.getMinor() >= 440));\n+    }\n+\n+    @Test\n+    void createAmpWithInheritableRole() {\n+        HubClient operatorHubClient = runAsDataHubOperator().newHubClient();\n+        HubClient adminHubClient = runAsAdmin().newHubClient();", "originalCommit": "507d44e6cfb62e9217e06a09675a0e3cf513c36d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2d3c6cee6b0ea8c6d3d37996c0da199284f3cd4", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\nindex 5ac8799b1..9c30d657c 100644\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n+++ b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n\n@@ -5,7 +5,7 @@ import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n import com.marklogic.client.document.DocumentManager;\n import com.marklogic.client.document.DocumentWriteSet;\n-import com.marklogic.client.eval.ServerEvaluationCall;\n+import com.marklogic.client.eval.EvalResultIterator;\n import com.marklogic.client.io.DocumentMetadataHandle;\n import com.marklogic.client.io.Format;\n import com.marklogic.client.io.JacksonHandle;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE2ODg3Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r480168876", "bodyText": "Can you start this role-name with \"test-\" - i.e. \"test-delegated-amp-manager\"? Just makes life easy in case it's left behind by a test - makes it obvious that it's a test role.", "author": "rjrudin", "createdAt": "2020-08-31T14:29:10Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java", "diffHunk": "@@ -0,0 +1,185 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.client.document.DocumentManager;\n+import com.marklogic.client.document.DocumentWriteSet;\n+import com.marklogic.client.eval.ServerEvaluationCall;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.Format;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.StringHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubClient;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.mgmt.ManageClient;\n+import com.marklogic.mgmt.ManageConfig;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.mgmt.resource.security.RoleManager;\n+import com.marklogic.mgmt.resource.security.UserManager;\n+import com.marklogic.rest.util.ResourcesFragment;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.READ;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+\n+public class DeployUserAmpsTest extends AbstractHubCoreTest {\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    @BeforeEach\n+    void checkIfTestsCanBeRun(){\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        assertTrue(mlVersion.isNightly() || (mlVersion.getMajor() > 10) ||(mlVersion.getMajor() == 10 && mlVersion.getMinor() >= 440));\n+    }\n+\n+    @Test\n+    void createAmpWithInheritableRole() {\n+        HubClient operatorHubClient = runAsDataHubOperator().newHubClient();\n+        HubClient adminHubClient = runAsAdmin().newHubClient();\n+\n+        DocumentManager moduleDocManager = adminHubClient.getModulesClient().newDocumentManager();\n+        DocumentWriteSet writeSet = moduleDocManager.newWriteSet();\n+        StringHandle handle =  new StringHandle(\"'use strict';\\n\" +\n+            \"module.exports.getPiiData = module.amp(\\n\" +\n+            \"  function getPiiData() {\\n\" +\n+            \"    return cts.doc('/pii/test.json');\\n\" +\n+            \"  }\\n\" +\n+            \");\");\n+        handle.setFormat(Format.TEXT);\n+        writeSet.add(\"/ampTest/testModule.sjs\", getPermissionsMetaDataHandle(), handle);\n+        moduleDocManager.write(writeSet);\n+\n+        handle = new StringHandle(\"{\\\"ssn\\\": \\\"123-456-7890\\\"}\");\n+        handle.setFormat(Format.JSON);\n+        DocumentMetadataHandle permissions = new DocumentMetadataHandle()\n+            .withPermission(\"pii-reader\", DocumentMetadataHandle.Capability.UPDATE,READ);\n+        DocumentManager adminDocManager = adminHubClient.getStagingClient().newDocumentManager();\n+        writeSet = adminDocManager.newWriteSet();\n+        writeSet.add(\"/pii/test.json\", permissions, handle);\n+        adminDocManager.write(writeSet);\n+\n+        ServerEvaluationCall piiData = operatorHubClient.getStagingClient().newServerEval().javascript(\"const ampMod = require('/ampTest/testModule.sjs');\\n\" +\n+            \"ampMod.getPiiData();\");\n+\n+        //query returns null in the absence of the amp\n+        assertFalse(piiData.eval().hasNext());\n+\n+        ResourcesFragment amps;\n+        try{\n+            //POST request\n+            writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME, \"pii-reader\");\n+            amps = new AmpManager(runAsDataHubSecurityAdmin().getManageClient()).getAsXml();\n+\n+            assertTrue(amps.resourceExists(\"getPiiData\"));\n+            JacksonHandle jacksonHandle = new JacksonHandle();\n+            piiData.eval().next().get(jacksonHandle);\n+            assertEquals(\"123-456-7890\", jacksonHandle.get().get(\"ssn\").asText(), \"data-hub-operator should be \" +\n+                \"able to read the document since the amp has been created\");\n+\n+            //PUT request - shouldn't fail\n+            writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME,\"data-hub-developer\", \"pii-reader\");\n+        }\n+        finally {\n+            runAsDataHubSecurityAdmin().getManageClient().delete(\"/manage/v2/amps/getPiiData?namespace=&document-uri=/ampTest/testModule.sjs&modules-database=data-hub-MODULES\");\n+            amps = new AmpManager(runAsDataHubSecurityAdmin().getManageClient()).getAsXml();\n+            assertFalse(amps.resourceExists(\"getPiiData\"));\n+        }\n+    }\n+\n+    @Test\n+    void createAmpWithDelegatedUser(){\n+        //create custom role having \"data-hub-amp-manager\" as \"data-hub-security-admin\"\n+        ObjectNode roleNode = mapper.createObjectNode();\n+        roleNode.put(\"role-name\", \"delegated-amp-manager\");", "originalCommit": "507d44e6cfb62e9217e06a09675a0e3cf513c36d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2d3c6cee6b0ea8c6d3d37996c0da199284f3cd4", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\nindex 5ac8799b1..9c30d657c 100644\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n+++ b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n\n@@ -5,7 +5,7 @@ import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n import com.marklogic.client.document.DocumentManager;\n import com.marklogic.client.document.DocumentWriteSet;\n-import com.marklogic.client.eval.ServerEvaluationCall;\n+import com.marklogic.client.eval.EvalResultIterator;\n import com.marklogic.client.io.DocumentMetadataHandle;\n import com.marklogic.client.io.Format;\n import com.marklogic.client.io.JacksonHandle;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE2OTQyMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r480169421", "bodyText": "We want to make sure that this amp works too, so refactor the code in the test above for verifying that the amp works into a separate private method, and then call that method in both of these tests.", "author": "rjrudin", "createdAt": "2020-08-31T14:29:56Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java", "diffHunk": "@@ -0,0 +1,185 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.client.document.DocumentManager;\n+import com.marklogic.client.document.DocumentWriteSet;\n+import com.marklogic.client.eval.ServerEvaluationCall;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.Format;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.StringHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubClient;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.mgmt.ManageClient;\n+import com.marklogic.mgmt.ManageConfig;\n+import com.marklogic.mgmt.resource.security.AmpManager;\n+import com.marklogic.mgmt.resource.security.RoleManager;\n+import com.marklogic.mgmt.resource.security.UserManager;\n+import com.marklogic.rest.util.ResourcesFragment;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.READ;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+\n+public class DeployUserAmpsTest extends AbstractHubCoreTest {\n+    ObjectMapper mapper = new ObjectMapper();\n+\n+    @BeforeEach\n+    void checkIfTestsCanBeRun(){\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        assertTrue(mlVersion.isNightly() || (mlVersion.getMajor() > 10) ||(mlVersion.getMajor() == 10 && mlVersion.getMinor() >= 440));\n+    }\n+\n+    @Test\n+    void createAmpWithInheritableRole() {\n+        HubClient operatorHubClient = runAsDataHubOperator().newHubClient();\n+        HubClient adminHubClient = runAsAdmin().newHubClient();\n+\n+        DocumentManager moduleDocManager = adminHubClient.getModulesClient().newDocumentManager();\n+        DocumentWriteSet writeSet = moduleDocManager.newWriteSet();\n+        StringHandle handle =  new StringHandle(\"'use strict';\\n\" +\n+            \"module.exports.getPiiData = module.amp(\\n\" +\n+            \"  function getPiiData() {\\n\" +\n+            \"    return cts.doc('/pii/test.json');\\n\" +\n+            \"  }\\n\" +\n+            \");\");\n+        handle.setFormat(Format.TEXT);\n+        writeSet.add(\"/ampTest/testModule.sjs\", getPermissionsMetaDataHandle(), handle);\n+        moduleDocManager.write(writeSet);\n+\n+        handle = new StringHandle(\"{\\\"ssn\\\": \\\"123-456-7890\\\"}\");\n+        handle.setFormat(Format.JSON);\n+        DocumentMetadataHandle permissions = new DocumentMetadataHandle()\n+            .withPermission(\"pii-reader\", DocumentMetadataHandle.Capability.UPDATE,READ);\n+        DocumentManager adminDocManager = adminHubClient.getStagingClient().newDocumentManager();\n+        writeSet = adminDocManager.newWriteSet();\n+        writeSet.add(\"/pii/test.json\", permissions, handle);\n+        adminDocManager.write(writeSet);\n+\n+        ServerEvaluationCall piiData = operatorHubClient.getStagingClient().newServerEval().javascript(\"const ampMod = require('/ampTest/testModule.sjs');\\n\" +\n+            \"ampMod.getPiiData();\");\n+\n+        //query returns null in the absence of the amp\n+        assertFalse(piiData.eval().hasNext());\n+\n+        ResourcesFragment amps;\n+        try{\n+            //POST request\n+            writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME, \"pii-reader\");\n+            amps = new AmpManager(runAsDataHubSecurityAdmin().getManageClient()).getAsXml();\n+\n+            assertTrue(amps.resourceExists(\"getPiiData\"));\n+            JacksonHandle jacksonHandle = new JacksonHandle();\n+            piiData.eval().next().get(jacksonHandle);\n+            assertEquals(\"123-456-7890\", jacksonHandle.get().get(\"ssn\").asText(), \"data-hub-operator should be \" +\n+                \"able to read the document since the amp has been created\");\n+\n+            //PUT request - shouldn't fail\n+            writeAmpFileToProjectAndDeploy(HubConfig.DEFAULT_MODULES_DB_NAME,\"data-hub-developer\", \"pii-reader\");\n+        }\n+        finally {\n+            runAsDataHubSecurityAdmin().getManageClient().delete(\"/manage/v2/amps/getPiiData?namespace=&document-uri=/ampTest/testModule.sjs&modules-database=data-hub-MODULES\");\n+            amps = new AmpManager(runAsDataHubSecurityAdmin().getManageClient()).getAsXml();\n+            assertFalse(amps.resourceExists(\"getPiiData\"));\n+        }\n+    }\n+\n+    @Test\n+    void createAmpWithDelegatedUser(){\n+        //create custom role having \"data-hub-amp-manager\" as \"data-hub-security-admin\"\n+        ObjectNode roleNode = mapper.createObjectNode();\n+        roleNode.put(\"role-name\", \"delegated-amp-manager\");\n+        roleNode.set(\"role\", mapper.createArrayNode().add(\"data-hub-amp-manager\"));\n+        writePayLoadToFileAndDeploy(getHubConfig().getUserSecurityDir().resolve(\"roles\"), \"delegatedRole.json\", roleNode);\n+\n+        //create user from that role\n+        ObjectNode userNode = mapper.createObjectNode();\n+        userNode.put(\"user-name\", \"test-delegated-amp-manager\");\n+        userNode.put(\"password\", \"password\");\n+        userNode.set(\"role\", mapper.createArrayNode().add(\"delegated-amp-manager\"));\n+        new UserManager(runAsAdmin().getManageClient()).save(userNode.toString());\n+\n+        //deploy amps using that user\n+        ManageClient delegatedManageClient = new ManageClient();\n+        delegatedManageClient.setManageConfig(new ManageConfig(host, 8002, \"test-delegated-amp-manager\", \"password\"));\n+        try{\n+            delegatedManageClient.postJson(\"/manage/v2/amps\", getAmpNode(\"data-hub-MODULES\", \"data-hub-operator\").toString());", "originalCommit": "507d44e6cfb62e9217e06a09675a0e3cf513c36d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b2d3c6cee6b0ea8c6d3d37996c0da199284f3cd4", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\nindex 5ac8799b1..9c30d657c 100644\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n+++ b/marklogic-data-hub/src/test/java/com/marklogic/hub/dhs/DeployUserAmpsTest.java\n\n@@ -5,7 +5,7 @@ import com.fasterxml.jackson.databind.node.ArrayNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n import com.marklogic.client.document.DocumentManager;\n import com.marklogic.client.document.DocumentWriteSet;\n-import com.marklogic.client.eval.ServerEvaluationCall;\n+import com.marklogic.client.eval.EvalResultIterator;\n import com.marklogic.client.io.DocumentMetadataHandle;\n import com.marklogic.client.io.Format;\n import com.marklogic.client.io.JacksonHandle;\n"}}, {"oid": "b2d3c6cee6b0ea8c6d3d37996c0da199284f3cd4", "url": "https://github.com/marklogic/marklogic-data-hub/commit/b2d3c6cee6b0ea8c6d3d37996c0da199284f3cd4", "message": "DHFPROD-5571:Allow DHS users to define and deploy Amps", "committedDate": "2020-08-31T18:37:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMyODE1MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4487#discussion_r480328151", "bodyText": "Nice, this should be a useful addition for a number of tests.", "author": "rjrudin", "createdAt": "2020-08-31T19:02:06Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/bootstrap/Installer.java", "diffHunk": "@@ -73,6 +73,11 @@ public void bootstrapHub() {\n         dataHubOperator.addRole(\"hub-central-operator\");\n         dataHubOperator.save();\n \n+        User dataHubSecurityAdmin = new User(api, \"test-data-hub-security-admin\");", "originalCommit": "b2d3c6cee6b0ea8c6d3d37996c0da199284f3cd4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "34a3aa2cb145820eb612c5cad84722d3658ff8ab", "url": "https://github.com/marklogic/marklogic-data-hub/commit/34a3aa2cb145820eb612c5cad84722d3658ff8ab", "message": "DHFPROD-5571:Allow DHS users to define and deploy Amps", "committedDate": "2020-09-01T19:25:06Z", "type": "forcePushed"}, {"oid": "8bc1685056ab4e172087b7bc47f1515eca6127a6", "url": "https://github.com/marklogic/marklogic-data-hub/commit/8bc1685056ab4e172087b7bc47f1515eca6127a6", "message": "DHFPROD-5571:Allow DHS users to define and deploy Amps", "committedDate": "2020-09-02T04:46:53Z", "type": "commit"}, {"oid": "8bc1685056ab4e172087b7bc47f1515eca6127a6", "url": "https://github.com/marklogic/marklogic-data-hub/commit/8bc1685056ab4e172087b7bc47f1515eca6127a6", "message": "DHFPROD-5571:Allow DHS users to define and deploy Amps", "committedDate": "2020-09-02T04:46:53Z", "type": "forcePushed"}]}