{"pr_number": 3473, "pr_title": "DHFPROD-3156: Increase performance of flow run", "pr_createdAt": "2020-01-16T20:15:51Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3473", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYzMzkzMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3473#discussion_r367633933", "bodyText": "Flowrunner in our implementation, always uses only single thread. I am not sure if increasing threadpool would help. We have to see if the dir that he has chosen for ingestion has a lot of files(or if it is a network storage)  which may cause FileCollector to take a longer time or if there are issues in reporting the state back to the UI.", "author": "srinathgit", "createdAt": "2020-01-16T20:30:17Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "diffHunk": "@@ -214,7 +214,8 @@ private void initializeFlow(String jobId) {\n             jobDocManager = new JobDocManager(hubConfig.newJobDbClient());\n         }\n         if(threadPool == null || threadPool.isTerminated()) {\n-            threadPool = new CustomPoolExecutor(1, 1, 0L, TimeUnit.MILLISECONDS\n+            int cores = Runtime.getRuntime().availableProcessors();\n+            threadPool = new CustomPoolExecutor(cores/2, cores, 0L, TimeUnit.MILLISECONDS", "originalCommit": "a7bcc6d1f802baf4e675633b0b0ca07c341dbdff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY2MDk5MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3473#discussion_r367660990", "bodyText": "@srinathgit Good point on the flow runner only using a single thread, but my profiling/testing still indicated that the threadpool was the point of contention. I was encountering the issue when running a single document through multiple steps. After you pointing out that the flow runner only uses one thread, I wonder if simply setting the thread pool size to 2 would be enough. I think what was happening was that afterExecute would add the next step to the threadPool, but the current step execution was occupying the space.", "author": "ryanjdew", "createdAt": "2020-01-16T21:32:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYzMzkzMw=="}], "type": "inlineReview", "revised_code": {"commit": "960b12d389b9e2c61686afce08c573b8720b6d9e", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\nindex e6d3f9225..2363a7af9 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\n\n@@ -214,8 +214,9 @@ public class FlowRunnerImpl implements FlowRunner{\n             jobDocManager = new JobDocManager(hubConfig.newJobDbClient());\n         }\n         if(threadPool == null || threadPool.isTerminated()) {\n-            int cores = Runtime.getRuntime().availableProcessors();\n-            threadPool = new CustomPoolExecutor(cores/2, cores, 0L, TimeUnit.MILLISECONDS\n+            // thread pool size needs to be at least 2, so the current step thread can kick-off the next step thread\n+            int maxPoolSize = Math.max(Runtime.getRuntime().availableProcessors()/2, 2);\n+            threadPool = new CustomPoolExecutor(2, maxPoolSize, 0L, TimeUnit.MILLISECONDS\n                 , new LinkedBlockingQueue<Runnable>());\n         }\n         threadPool.execute(new FlowRunnerTask(runningFlow, runningJobId));\n"}}, {"oid": "960b12d389b9e2c61686afce08c573b8720b6d9e", "url": "https://github.com/marklogic/marklogic-data-hub/commit/960b12d389b9e2c61686afce08c573b8720b6d9e", "message": "DHFPROD-3156: Increase performance of flow run", "committedDate": "2020-01-16T21:38:55Z", "type": "commit"}, {"oid": "960b12d389b9e2c61686afce08c573b8720b6d9e", "url": "https://github.com/marklogic/marklogic-data-hub/commit/960b12d389b9e2c61686afce08c573b8720b6d9e", "message": "DHFPROD-3156: Increase performance of flow run", "committedDate": "2020-01-16T21:38:55Z", "type": "forcePushed"}]}