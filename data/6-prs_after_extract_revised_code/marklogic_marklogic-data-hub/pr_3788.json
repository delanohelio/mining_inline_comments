{"pr_number": 3788, "pr_title": "DHFPROD-4532: impl for invoking the flow by taking params from req body", "pr_createdAt": "2020-04-04T01:36:36Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3788", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5ODQ5Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3788#discussion_r403698492", "bodyText": "This is good - is it the default that multiple params will be sent as a JSON object to a Function? I know that's how Lambda works in AWS.", "author": "rjrudin", "createdAt": "2020-04-05T12:57:42Z", "path": "azure/flow-runner-function/src/main/java/com/marklogic/dhf/azure/FunctionDataHubFlow.java", "diffHunk": "@@ -25,49 +28,108 @@\n     @FunctionName(\"HttpExampleDataHubFlow\")\n     public HttpResponseMessage run(\n             @HttpTrigger(name = \"req\", methods = {HttpMethod.GET, HttpMethod.POST}, authLevel = AuthorizationLevel.ANONYMOUS) HttpRequestMessage<Optional<String>> request,\n-            @QueueOutput(name = \"msg\", queueName = \"dhf-queue\", connection = \"AzureWebJobsStorage\") OutputBinding<String> msg,\n+            @QueueOutput(name = \"msg\", queueName = \"dhf-queue-az\", connection = \"AzureWebJobsStorage\") OutputBinding<String> msg,\n             final ExecutionContext context) {\n         context.getLogger().info(\"Java HTTP trigger processed a request.\");\n \n-        // Parse query parameter\n-        String query = request.getQueryParameters().get(\"name\");\n-        String name = request.getBody().orElse(query);\n+        context.getLogger().info(\"Preparing jsonObj.\");\n+        JSONObject jsonObj = new JSONObject(request.getBody().orElse(null));", "originalCommit": "da529424a4931453d88e6c544a104bf9a2696f2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ4MTA2Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3788#discussion_r404481063", "bodyText": "For a POST request, we can get a handle to the entire request body as a valid json string. I'm converting the string into JSON object here. FYI", "author": "vgouraba", "createdAt": "2020-04-07T01:18:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5ODQ5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b87e8e3279a6f9417e68e7b63ae0ee81bd906c3b", "chunk": "diff --git a/azure/flow-runner-function/src/main/java/com/marklogic/dhf/azure/FunctionDataHubFlow.java b/azure/flow-runner-function/src/main/java/com/marklogic/dhf/azure/FunctionDataHubFlow.java\nindex 3d275b186..9076a15c9 100644\n--- a/azure/flow-runner-function/src/main/java/com/marklogic/dhf/azure/FunctionDataHubFlow.java\n+++ b/azure/flow-runner-function/src/main/java/com/marklogic/dhf/azure/FunctionDataHubFlow.java\n\n@@ -31,35 +32,43 @@ public class FunctionDataHubFlow {\n             @QueueOutput(name = \"msg\", queueName = \"dhf-queue-az\", connection = \"AzureWebJobsStorage\") OutputBinding<String> msg,\n             final ExecutionContext context) {\n         context.getLogger().info(\"Java HTTP trigger processed a request.\");\n+        HttpStatus httpCode = HttpStatus.OK; // set default return code to OK\n+\n+        context.getLogger().info(\"Preparing jsonNode.\");\n+        ObjectMapper objmapper = new ObjectMapper();\n+        JsonNode jsonNode = null;\n+        try {\n+            jsonNode = objmapper.readTree(request.getBody().orElse(null));\n+        } catch (java.io.IOException ex) {\n+            httpCode = HttpStatus.BAD_REQUEST;\n+            return request.createResponseBuilder(httpCode).body(ex.getMessage()).build();\n+        }\n \n-        context.getLogger().info(\"Preparing jsonObj.\");\n-        JSONObject jsonObj = new JSONObject(request.getBody().orElse(null));\n-        context.getLogger().info(\"Done Preparing jsonObj <\" + jsonObj + \">\");\n-        context.getLogger().info(\"json < \" + jsonObj + \">\");  //don't do this to avoid logging password\n+        //we are able to process incoming request body\n+        context.getLogger().info(\"Done Preparing jsonNode <\" + jsonNode + \">\");\n+        context.getLogger().info(\"json < \" + jsonNode + \">\");  //don't do this to avoid logging password\n \n         // Parse request parameters\n-        String mlHost = getValueFromJson (jsonObj, \"ml-host\");\n-        String mlUser = getValueFromJson (jsonObj, \"ml-user\");\n-        String mlPassword = getValueFromJson (jsonObj, \"ml-password\");\n-        String flowName = getValueFromJson (jsonObj, \"flow-name\");\n-        String flowSteps = getValueFromJson (jsonObj, \"flow-steps\");\n-\n-        String inputData = \"mlHost <\" + mlHost + \"> mlUser <\" + mlUser + \"> flow-name <\" + flowName +\n-            \"> flow-steps <\" + flowSteps + \">\";\n+        String mlHost = getValueFromJson(jsonNode, \"host\");\n+        String mlUser = getValueFromJson(jsonNode, \"username\");\n+        String mlPassword = getValueFromJson(jsonNode, \"password\");\n+        String flowName = getValueFromJson(jsonNode, \"flowName\");\n+        String flowSteps = getValueFromJson(jsonNode, \"steps\");\n+\n+        String inputData = \"host <\" + mlHost + \"> username <\" + mlUser + \"> flowName <\" + flowName +\n+            \"> steps <\" + flowSteps + \">\";\n         context.getLogger().info(\"Input data: <\" + inputData + \">\");\n \n         // flow-steps is optional, so no need to check\n         if ((mlHost == null) || (mlUser == null) || (mlPassword == null) || (flowName == null)) {\n             return request.createResponseBuilder(HttpStatus.BAD_REQUEST).body(\n-                \"Please pass values for ml-host/ml-user/ml-password/flow-name in the request body\").build();\n+                \"Please pass values for host/username/password/flowName in the request body\").build();\n         } else {\n             // Write the input values to the message queue (not logging the password though)\n-            String inputMsg = \"mlHost <\" + mlHost + \"> mlUser <\" + mlUser + \"> flow-name <\" + flowName + \">\";\n+            String inputMsg = \"host <\" + mlHost + \"> username <\" + mlUser + \"> flowName <\" + flowName + \">\";\n             msg.setValue(inputMsg);\n \n             String runFlowMessage = \"\";\n-            HttpStatus httpCode = HttpStatus.OK;\n-\n             try {\n                 runFlowMessage = runFlow(mlHost, mlUser, mlPassword, flowName, flowSteps);\n             } catch (Exception ex) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5ODYyNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3788#discussion_r403698624", "bodyText": "For consistency elsewhere, can you use these names for the params - \"host\", \"username\", \"password\", \"flowName\", and \"steps.", "author": "rjrudin", "createdAt": "2020-04-05T12:58:39Z", "path": "azure/flow-runner-function/src/main/java/com/marklogic/dhf/azure/FunctionDataHubFlow.java", "diffHunk": "@@ -25,49 +28,108 @@\n     @FunctionName(\"HttpExampleDataHubFlow\")\n     public HttpResponseMessage run(\n             @HttpTrigger(name = \"req\", methods = {HttpMethod.GET, HttpMethod.POST}, authLevel = AuthorizationLevel.ANONYMOUS) HttpRequestMessage<Optional<String>> request,\n-            @QueueOutput(name = \"msg\", queueName = \"dhf-queue\", connection = \"AzureWebJobsStorage\") OutputBinding<String> msg,\n+            @QueueOutput(name = \"msg\", queueName = \"dhf-queue-az\", connection = \"AzureWebJobsStorage\") OutputBinding<String> msg,\n             final ExecutionContext context) {\n         context.getLogger().info(\"Java HTTP trigger processed a request.\");\n \n-        // Parse query parameter\n-        String query = request.getQueryParameters().get(\"name\");\n-        String name = request.getBody().orElse(query);\n+        context.getLogger().info(\"Preparing jsonObj.\");\n+        JSONObject jsonObj = new JSONObject(request.getBody().orElse(null));\n+        context.getLogger().info(\"Done Preparing jsonObj <\" + jsonObj + \">\");\n+        context.getLogger().info(\"json < \" + jsonObj + \">\");  //don't do this to avoid logging password\n+\n+        // Parse request parameters\n+        String mlHost = getValueFromJson (jsonObj, \"ml-host\");", "originalCommit": "da529424a4931453d88e6c544a104bf9a2696f2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU2MjAzNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3788#discussion_r404562037", "bodyText": "modified code to use the names: host/username/password/flowName/steps.", "author": "vgouraba", "createdAt": "2020-04-07T06:22:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5ODYyNA=="}], "type": "inlineReview", "revised_code": {"commit": "b87e8e3279a6f9417e68e7b63ae0ee81bd906c3b", "chunk": "diff --git a/azure/flow-runner-function/src/main/java/com/marklogic/dhf/azure/FunctionDataHubFlow.java b/azure/flow-runner-function/src/main/java/com/marklogic/dhf/azure/FunctionDataHubFlow.java\nindex 3d275b186..9076a15c9 100644\n--- a/azure/flow-runner-function/src/main/java/com/marklogic/dhf/azure/FunctionDataHubFlow.java\n+++ b/azure/flow-runner-function/src/main/java/com/marklogic/dhf/azure/FunctionDataHubFlow.java\n\n@@ -31,35 +32,43 @@ public class FunctionDataHubFlow {\n             @QueueOutput(name = \"msg\", queueName = \"dhf-queue-az\", connection = \"AzureWebJobsStorage\") OutputBinding<String> msg,\n             final ExecutionContext context) {\n         context.getLogger().info(\"Java HTTP trigger processed a request.\");\n+        HttpStatus httpCode = HttpStatus.OK; // set default return code to OK\n+\n+        context.getLogger().info(\"Preparing jsonNode.\");\n+        ObjectMapper objmapper = new ObjectMapper();\n+        JsonNode jsonNode = null;\n+        try {\n+            jsonNode = objmapper.readTree(request.getBody().orElse(null));\n+        } catch (java.io.IOException ex) {\n+            httpCode = HttpStatus.BAD_REQUEST;\n+            return request.createResponseBuilder(httpCode).body(ex.getMessage()).build();\n+        }\n \n-        context.getLogger().info(\"Preparing jsonObj.\");\n-        JSONObject jsonObj = new JSONObject(request.getBody().orElse(null));\n-        context.getLogger().info(\"Done Preparing jsonObj <\" + jsonObj + \">\");\n-        context.getLogger().info(\"json < \" + jsonObj + \">\");  //don't do this to avoid logging password\n+        //we are able to process incoming request body\n+        context.getLogger().info(\"Done Preparing jsonNode <\" + jsonNode + \">\");\n+        context.getLogger().info(\"json < \" + jsonNode + \">\");  //don't do this to avoid logging password\n \n         // Parse request parameters\n-        String mlHost = getValueFromJson (jsonObj, \"ml-host\");\n-        String mlUser = getValueFromJson (jsonObj, \"ml-user\");\n-        String mlPassword = getValueFromJson (jsonObj, \"ml-password\");\n-        String flowName = getValueFromJson (jsonObj, \"flow-name\");\n-        String flowSteps = getValueFromJson (jsonObj, \"flow-steps\");\n-\n-        String inputData = \"mlHost <\" + mlHost + \"> mlUser <\" + mlUser + \"> flow-name <\" + flowName +\n-            \"> flow-steps <\" + flowSteps + \">\";\n+        String mlHost = getValueFromJson(jsonNode, \"host\");\n+        String mlUser = getValueFromJson(jsonNode, \"username\");\n+        String mlPassword = getValueFromJson(jsonNode, \"password\");\n+        String flowName = getValueFromJson(jsonNode, \"flowName\");\n+        String flowSteps = getValueFromJson(jsonNode, \"steps\");\n+\n+        String inputData = \"host <\" + mlHost + \"> username <\" + mlUser + \"> flowName <\" + flowName +\n+            \"> steps <\" + flowSteps + \">\";\n         context.getLogger().info(\"Input data: <\" + inputData + \">\");\n \n         // flow-steps is optional, so no need to check\n         if ((mlHost == null) || (mlUser == null) || (mlPassword == null) || (flowName == null)) {\n             return request.createResponseBuilder(HttpStatus.BAD_REQUEST).body(\n-                \"Please pass values for ml-host/ml-user/ml-password/flow-name in the request body\").build();\n+                \"Please pass values for host/username/password/flowName in the request body\").build();\n         } else {\n             // Write the input values to the message queue (not logging the password though)\n-            String inputMsg = \"mlHost <\" + mlHost + \"> mlUser <\" + mlUser + \"> flow-name <\" + flowName + \">\";\n+            String inputMsg = \"host <\" + mlHost + \"> username <\" + mlUser + \"> flowName <\" + flowName + \">\";\n             msg.setValue(inputMsg);\n \n             String runFlowMessage = \"\";\n-            HttpStatus httpCode = HttpStatus.OK;\n-\n             try {\n                 runFlowMessage = runFlow(mlHost, mlUser, mlPassword, flowName, flowSteps);\n             } catch (Exception ex) {\n"}}, {"oid": "b87e8e3279a6f9417e68e7b63ae0ee81bd906c3b", "url": "https://github.com/marklogic/marklogic-data-hub/commit/b87e8e3279a6f9417e68e7b63ae0ee81bd906c3b", "message": "DHFPROD-4532: impl for invoking the flow by taking params from req body\n\nDHFPROD-4532: added asserts for test methods\n\nDHRPROD-4532: rename the method to buildFlowInputs\n\nDHFPROD-4532: use jackson for json; change attributes names for consistency", "committedDate": "2020-04-07T06:16:30Z", "type": "commit"}]}