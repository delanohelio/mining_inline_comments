{"pr_number": 3703, "pr_title": "DHFPROD-4604:Fix failing one-ui tests", "pr_createdAt": "2020-03-16T04:00:53Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3703", "timeline": [{"oid": "db2fd642d079c98c57db1316897529367b3f6431", "url": "https://github.com/marklogic/marklogic-data-hub/commit/db2fd642d079c98c57db1316897529367b3f6431", "message": "DHFPROD-4604:Fix failing one-ui tests", "committedDate": "2020-03-16T04:04:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4MDE0OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r392780149", "bodyText": "Could you change eclipse import setting and make sure that class count to use import with \"*\" is 30 or more.", "author": "hao1st", "createdAt": "2020-03-16T04:43:45Z", "path": "one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java", "diffHunk": "@@ -25,24 +25,9 @@\n import com.marklogic.hub.oneui.services.EnvironmentConfig;\n import com.marklogic.hub.oneui.services.EnvironmentService;\n import com.marklogic.hub.oneui.utils.TestLoggingAppender;\n-import java.io.ByteArrayInputStream;\n-import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Set;\n-import java.util.stream.Stream;\n-import java.util.zip.ZipEntry;\n-import java.util.zip.ZipInputStream;\n import org.apache.commons.lang3.StringUtils;\n-import org.junit.jupiter.api.AfterEach;\n-import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.*;", "originalCommit": "db2fd642d079c98c57db1316897529367b3f6431", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75ee9f1af96f1853e2e1db31287fa965c85e40eb", "chunk": "diff --git a/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java b/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java\nindex dbed63741..46b14a763 100644\n--- a/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java\n+++ b/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java\n\n@@ -26,8 +26,12 @@ import com.marklogic.hub.oneui.services.EnvironmentConfig;\n import com.marklogic.hub.oneui.services.EnvironmentService;\n import com.marklogic.hub.oneui.utils.TestLoggingAppender;\n import org.apache.commons.lang3.StringUtils;\n-import org.junit.jupiter.api.*;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;\n+import org.junit.jupiter.api.Order;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestMethodOrder;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4MDMzMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r392780333", "bodyText": "it is nice to know we can use @order annatation!", "author": "hao1st", "createdAt": "2020-03-16T04:44:38Z", "path": "one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java", "diffHunk": "@@ -95,6 +88,7 @@ void after() {\n     }\n \n     @Test\n+    @Order(1)", "originalCommit": "db2fd642d079c98c57db1316897529367b3f6431", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c05e09eca9f933b1883359fa0d26372a9475bbb2", "chunk": "diff --git a/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java b/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java\nindex dbed63741..a59d11822 100644\n--- a/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java\n+++ b/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java\n\n@@ -84,11 +92,11 @@ public class EnvironmentControllerTest {\n \n     @AfterEach\n     void after() {\n+        testHelper.assignRoleToUsers();\n         testHelper.setHubProjectDirectory();\n     }\n \n     @Test\n-    @Order(1)\n     void downloadProject() throws IOException {\n         //Creating a load data artifact so it can be verified for download test\n         testHelper.authenticateSession();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4Mjc4NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r392782784", "bodyText": "it is a good idea to add it after test cases finish.", "author": "hao1st", "createdAt": "2020-03-16T04:57:11Z", "path": "one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java", "diffHunk": "@@ -73,17 +74,26 @@ public TestHelper() throws IOException {\n     }\n \n     public void authenticateSession() {\n-        createUser(dataHubDeveloperUsername,dataHubDeveloperPassword,\"data-hub-developer\");\n         EnvironmentInfo environmentInfo = new EnvironmentInfo(mlHost, \"DIGEST\", 8000,\"DIGEST\", 8002,\"DIGEST\", 8010, \"DIGEST\", 8011);\n         hubConfig.setCredentials(environmentInfo, dataHubDeveloperUsername, dataHubDeveloperPassword);\n     }\n \n     public void authenticateSessionAsEnvironmentManager() {\n-        createUser(dataHubEnvironmentManagerUsername,dataHubEnvironmentManagerPassword,\"data-hub-environment-manager\");\n         EnvironmentInfo environmentInfo = new EnvironmentInfo(mlHost, \"DIGEST\", 8000,\"DIGEST\", 8002,\"DIGEST\", 8010, \"DIGEST\", 8011);\n         hubConfig.setCredentials(environmentInfo, dataHubEnvironmentManagerUsername, dataHubEnvironmentManagerPassword);\n     }\n \n+    public void authenticateSessionAsAdmin() {\n+        EnvironmentInfo environmentInfo = new EnvironmentInfo(mlHost, \"DIGEST\", 8000,\"DIGEST\", 8002,\"DIGEST\", 8010, \"DIGEST\", 8011);\n+        hubConfig.setCredentials(environmentInfo, adminUserName, adminPassword);\n+    }\n+\n+    @PostConstruct\n+    public void createTestUsers() {", "originalCommit": "db2fd642d079c98c57db1316897529367b3f6431", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjgxOTE4Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r392819183", "bodyText": "@hao1st , I have called createTestUsers() wherever it's needed.", "author": "srinathgit", "createdAt": "2020-03-16T07:05:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4Mjc4NA=="}], "type": "inlineReview", "revised_code": {"commit": "c05e09eca9f933b1883359fa0d26372a9475bbb2", "chunk": "diff --git a/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java b/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\nindex bb08fc376..c04c6de4e 100644\n--- a/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\n+++ b/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\n\n@@ -88,12 +91,6 @@ public class TestHelper {\n         hubConfig.setCredentials(environmentInfo, adminUserName, adminPassword);\n     }\n \n-    @PostConstruct\n-    public void createTestUsers() {\n-        createUser(dataHubDeveloperUsername,dataHubDeveloperPassword,\"data-hub-developer\");\n-        createUser(dataHubEnvironmentManagerUsername,dataHubEnvironmentManagerPassword,\"data-hub-environment-manager\");\n-    }\n-\n     public void setHubProjectDirectory() {\n         environmentService.setProjectDirectory(tempProjectDirectory.toAbsolutePath().toString());\n         if (!hubConfig.getHubProject().isInitialized()) {\n"}}, {"oid": "75ee9f1af96f1853e2e1db31287fa965c85e40eb", "url": "https://github.com/marklogic/marklogic-data-hub/commit/75ee9f1af96f1853e2e1db31287fa965c85e40eb", "message": "DHFPROD-4604:Fix failing one-ui tests", "committedDate": "2020-03-16T06:53:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwNDU0MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r393004541", "bodyText": "So what does this test class due to the DHF test application that was first installed by running \"gradle bootstrap\"? Can this test class guarantee that it's not changing the state of the application in such a way that tests that run after it would break?\nI think this needs to be addressed in the class comments. A problem with the DHF test suite that has resulted in a lot of wasted time is how tests leave \"residue\" behind - they make changes to the state of the test application that cause future tests to break. Those breaks are very difficult and frustrating to track down. Comments on this class should describe what the expected state of the test application is after each test.", "author": "rjrudin", "createdAt": "2020-03-16T12:58:36Z", "path": "one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java", "diffHunk": "@@ -163,36 +208,8 @@ public void doAppend(ILoggingEvent event) throws LogbackException {\n         assertTrue(containsExpectedDirectory[0], \"Should find reference to new directory in logs\");\n     }\n \n-    @Test\n-    void installAttemptWithBadDirectory() {\n-        final ObjectNode relativePayload = new ObjectMapper().createObjectNode().put(\"directory\", \"relative-path\");\n-        assertThrows(ProjectDirectoryException.class, () -> {\n-            environmentController.install(relativePayload);\n-            fail(\"Should have thrown exception for relative path!\");\n-        });\n-        // check that the environment service indicates that the install is in a dirty state\n-        assertTrue(environmentService.isInDirtyState(), \"Install should be in a dirty state\");\n-        // check that the AuthenticationFilter shows the Data Hub isn't installed after a failed install attempt\n-        TestAuthenticationFilter authenticationFilter = new TestAuthenticationFilter(environmentService, hubConfigSession);\n-        assertFalse(authenticationFilter.isDataHubInstalled(), \"AuthenticationFilter shouldn't indicate the Data Hub is installed\");\n-        final ObjectNode nonExistentPayload = new ObjectMapper().createObjectNode().put(\"directory\", \"/non-existent\");\n-        assertThrows(ProjectDirectoryException.class, () -> {\n-            environmentController.install(nonExistentPayload);\n-        });\n-    }\n-\n-    @Test\n-    public void testUploadProjectWithoutArchiveFolder() throws Exception {\n-        testUploadProject(\"dhfWithoutArchiveFolder.zip\");\n-    }\n-\n-    @Test\n-    public void testUploadProjectWithArchiveFolder() throws Exception {\n-        testUploadProject(\"dhfWithArchiveFolder.zip\");\n-    }\n-\n-    public void testUploadProject(String zipFileName) throws Exception {\n-        testHelper.authenticateSessionAsEnvironmentManager();\n+    private void testUploadProject(String zipFileName) throws Exception {", "originalCommit": "75ee9f1af96f1853e2e1db31287fa965c85e40eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIyMzUzNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r393223535", "bodyText": "I have added comments and state is not changed after tests are run", "author": "srinathgit", "createdAt": "2020-03-16T18:15:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwNDU0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c05e09eca9f933b1883359fa0d26372a9475bbb2", "chunk": "diff --git a/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java b/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java\nindex 46b14a763..a59d11822 100644\n--- a/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java\n+++ b/one-ui/src/test/java/com/marklogic/hub/curation/controllers/EnvironmentControllerTest.java\n\n@@ -158,56 +183,24 @@ public class EnvironmentControllerTest {\n                 environmentController.install(nonExistentPayload);\n             });\n         }\n-        finally {\n+        finally{\n             environmentService.setIsInDirtyState(false);\n         }\n     }\n \n-\n+    /*  The testUpload* tests uninstalls datahub and hence testHelper.assignRoleToUsers() is called to reassign roles to\n+        users after installation.\n+     */\n     @Test\n-    @Order(3)\n     public void testUploadProjectWithoutArchiveFolder() throws Exception {\n         testUploadProject(\"dhfWithoutArchiveFolder.zip\");\n     }\n \n     @Test\n-    @Order(4)\n     public void testUploadProjectWithArchiveFolder() throws Exception {\n         testUploadProject(\"dhfWithArchiveFolder.zip\");\n     }\n \n-    @Test\n-    @Order(5)\n-    void installProjectWithNewDirectory() throws Exception {\n-        testHelper.createTestUsers();\n-        testHelper.authenticateSessionAsEnvironmentManager();\n-        String unexpectedDirectory = testHelper.tempProjectDirectory.toAbsolutePath().toString();\n-        String expectedDirectory = Files.createTempDirectory(\"one-ui-hub-project-different-dir\").toAbsolutePath().toString();\n-        boolean[] containsUnexpectedDirectory = {false};\n-        boolean[] containsExpectedDirectory = {false};\n-        LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();\n-        // Special test appender to check for directories in output\n-        TestLoggingAppender<ILoggingEvent> testAppender = new TestLoggingAppender<>() {\n-            @Override\n-            public void doAppend(ILoggingEvent event) throws LogbackException {\n-                containsUnexpectedDirectory[0] = containsUnexpectedDirectory[0] || event.getMessage().contains(unexpectedDirectory);\n-                containsExpectedDirectory[0] = containsExpectedDirectory[0] || event.getMessage().contains(expectedDirectory);\n-            }\n-        };\n-        // Subset of classes that look read from project directory for install\n-        Class<?>[] classes = {HubConfigImpl.class, DeployDatabaseFieldCommand.class, DeployHubOtherServersCommand.class, DeployHubTriggersCommand.class, DeployPrivilegesCommand.class, DeployRolesCommand.class};\n-        Object[] loggers = Stream.of(classes).map(loggerContext::getLogger).toArray();\n-\n-        Stream.of(loggers).forEach((logger -> ((Logger) logger).addAppender(testAppender)));\n-        try {\n-            environmentController.install(new ObjectMapper().createObjectNode().put(\"directory\", expectedDirectory));\n-        } finally {\n-            Stream.of(loggers).forEach((logger -> ((Logger) logger).detachAppender(testAppender)));\n-        }\n-        assertFalse(containsUnexpectedDirectory[0], \"Shouldn't find reference to old directory in logs\");\n-        assertTrue(containsExpectedDirectory[0], \"Should find reference to new directory in logs\");\n-    }\n-\n     private void testUploadProject(String zipFileName) throws Exception {\n         testHelper.authenticateSessionAsAdmin();\n         TestAuthenticationFilter authenticationFilter = new TestAuthenticationFilter(environmentService, hubConfigSession);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwNTcwNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r393005704", "bodyText": "The Installer program is already creating a data-hub-developer user with the name of \"test-data-hub-developer\". Why is this also needed?", "author": "rjrudin", "createdAt": "2020-03-16T13:00:46Z", "path": "one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java", "diffHunk": "@@ -73,17 +74,26 @@ public TestHelper() throws IOException {\n     }\n \n     public void authenticateSession() {\n-        createUser(dataHubDeveloperUsername,dataHubDeveloperPassword,\"data-hub-developer\");\n         EnvironmentInfo environmentInfo = new EnvironmentInfo(mlHost, \"DIGEST\", 8000,\"DIGEST\", 8002,\"DIGEST\", 8010, \"DIGEST\", 8011);\n         hubConfig.setCredentials(environmentInfo, dataHubDeveloperUsername, dataHubDeveloperPassword);\n     }\n \n     public void authenticateSessionAsEnvironmentManager() {\n-        createUser(dataHubEnvironmentManagerUsername,dataHubEnvironmentManagerPassword,\"data-hub-environment-manager\");\n         EnvironmentInfo environmentInfo = new EnvironmentInfo(mlHost, \"DIGEST\", 8000,\"DIGEST\", 8002,\"DIGEST\", 8010, \"DIGEST\", 8011);\n         hubConfig.setCredentials(environmentInfo, dataHubEnvironmentManagerUsername, dataHubEnvironmentManagerPassword);\n     }\n \n+    public void authenticateSessionAsAdmin() {\n+        EnvironmentInfo environmentInfo = new EnvironmentInfo(mlHost, \"DIGEST\", 8000,\"DIGEST\", 8002,\"DIGEST\", 8010, \"DIGEST\", 8011);\n+        hubConfig.setCredentials(environmentInfo, adminUserName, adminPassword);\n+    }\n+\n+    @PostConstruct\n+    public void createTestUsers() {\n+        createUser(dataHubDeveloperUsername,dataHubDeveloperPassword,\"data-hub-developer\");", "originalCommit": "75ee9f1af96f1853e2e1db31287fa965c85e40eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c05e09eca9f933b1883359fa0d26372a9475bbb2", "chunk": "diff --git a/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java b/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\nindex bb08fc376..c04c6de4e 100644\n--- a/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\n+++ b/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\n\n@@ -88,12 +91,6 @@ public class TestHelper {\n         hubConfig.setCredentials(environmentInfo, adminUserName, adminPassword);\n     }\n \n-    @PostConstruct\n-    public void createTestUsers() {\n-        createUser(dataHubDeveloperUsername,dataHubDeveloperPassword,\"data-hub-developer\");\n-        createUser(dataHubEnvironmentManagerUsername,dataHubEnvironmentManagerPassword,\"data-hub-environment-manager\");\n-    }\n-\n     public void setHubProjectDirectory() {\n         environmentService.setProjectDirectory(tempProjectDirectory.toAbsolutePath().toString());\n         if (!hubConfig.getHubProject().isInitialized()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwNTkzNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r393005935", "bodyText": "I think that if we need another user, it should be created in the Installer program as well.", "author": "rjrudin", "createdAt": "2020-03-16T13:01:08Z", "path": "one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java", "diffHunk": "@@ -73,17 +74,26 @@ public TestHelper() throws IOException {\n     }\n \n     public void authenticateSession() {\n-        createUser(dataHubDeveloperUsername,dataHubDeveloperPassword,\"data-hub-developer\");\n         EnvironmentInfo environmentInfo = new EnvironmentInfo(mlHost, \"DIGEST\", 8000,\"DIGEST\", 8002,\"DIGEST\", 8010, \"DIGEST\", 8011);\n         hubConfig.setCredentials(environmentInfo, dataHubDeveloperUsername, dataHubDeveloperPassword);\n     }\n \n     public void authenticateSessionAsEnvironmentManager() {\n-        createUser(dataHubEnvironmentManagerUsername,dataHubEnvironmentManagerPassword,\"data-hub-environment-manager\");\n         EnvironmentInfo environmentInfo = new EnvironmentInfo(mlHost, \"DIGEST\", 8000,\"DIGEST\", 8002,\"DIGEST\", 8010, \"DIGEST\", 8011);\n         hubConfig.setCredentials(environmentInfo, dataHubEnvironmentManagerUsername, dataHubEnvironmentManagerPassword);\n     }\n \n+    public void authenticateSessionAsAdmin() {\n+        EnvironmentInfo environmentInfo = new EnvironmentInfo(mlHost, \"DIGEST\", 8000,\"DIGEST\", 8002,\"DIGEST\", 8010, \"DIGEST\", 8011);\n+        hubConfig.setCredentials(environmentInfo, adminUserName, adminPassword);\n+    }\n+\n+    @PostConstruct\n+    public void createTestUsers() {\n+        createUser(dataHubDeveloperUsername,dataHubDeveloperPassword,\"data-hub-developer\");\n+        createUser(dataHubEnvironmentManagerUsername,dataHubEnvironmentManagerPassword,\"data-hub-environment-manager\");", "originalCommit": "75ee9f1af96f1853e2e1db31287fa965c85e40eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c05e09eca9f933b1883359fa0d26372a9475bbb2", "chunk": "diff --git a/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java b/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\nindex bb08fc376..c04c6de4e 100644\n--- a/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\n+++ b/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\n\n@@ -88,12 +91,6 @@ public class TestHelper {\n         hubConfig.setCredentials(environmentInfo, adminUserName, adminPassword);\n     }\n \n-    @PostConstruct\n-    public void createTestUsers() {\n-        createUser(dataHubDeveloperUsername,dataHubDeveloperPassword,\"data-hub-developer\");\n-        createUser(dataHubEnvironmentManagerUsername,dataHubEnvironmentManagerPassword,\"data-hub-environment-manager\");\n-    }\n-\n     public void setHubProjectDirectory() {\n         environmentService.setProjectDirectory(tempProjectDirectory.toAbsolutePath().toString());\n         if (!hubConfig.getHubProject().isInitialized()) {\n"}}, {"oid": "c05e09eca9f933b1883359fa0d26372a9475bbb2", "url": "https://github.com/marklogic/marklogic-data-hub/commit/c05e09eca9f933b1883359fa0d26372a9475bbb2", "message": "DHFPROD-4604:Fix failing one-ui tests", "committedDate": "2020-03-16T18:13:47Z", "type": "forcePushed"}, {"oid": "6bab91df65485a760690069daf0353b015e81264", "url": "https://github.com/marklogic/marklogic-data-hub/commit/6bab91df65485a760690069daf0353b015e81264", "message": "DHFPROD-4604:Fix failing one-ui tests", "committedDate": "2020-03-16T18:18:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI2MDA1OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r393260058", "bodyText": "You'll also need to apply the database properties that Installer applies.\nI think the better approach is that after DHF is re-installed (and I assume it's being installed in the same fashion that \"gradle bootstrap\" installs it?), call a new static method on Installer that creates the additional users and applies the database properties. Call that method something like \"afterInstall\", and it'll have params of a DataHub and a HubConfig. That ensures that Installer does all of its additional post-install work.", "author": "rjrudin", "createdAt": "2020-03-16T19:22:45Z", "path": "one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java", "diffHunk": "@@ -120,24 +127,48 @@ public void addStagingDoc(String uri, DocumentMetadataHandle meta, String resour\n     public File getResourceFile(String resourceName) {\n         return new File(Objects.requireNonNull(TestHelper.class.getClassLoader().getResource(resourceName)).getFile());\n     }\n-    private void createUser(String username, String password, String role) {\n+\n+    public ArtifactManagerImpl getArtifactManager() {\n+        return new ArtifactManagerImpl(hubConfig);\n+    }\n+\n+    public String getLoginPayload(String role)\n+        throws JsonProcessingException {\n+        LoginInfo loginInfo = new LoginInfo();\n+        loginInfo.password = \"password\";\n+        loginInfo.mlHost = mlHost;\n+        switch (role) {\n+            case \"data-hub-developer\":\n+                loginInfo.username = dataHubDeveloperUsername;;\n+                break;\n+            case \"data-hub-environment-manager\":\n+                loginInfo.username = dataHubEnvironmentManagerUsername;;\n+                break;\n+            case \"admin\":\n+                loginInfo.username = adminUserName;;\n+                break;\n+            default:\n+                loginInfo.username = \"fake\";\n+                break;\n+        }\n+        return new ObjectMapper().writeValueAsString(loginInfo);\n+    }\n+\n+    /*  EnvironmentControllerTest.testUpload* uninstalls/installs datahub, hence the roles have to be reassigned to users\n+    after datahub is reinstalled. */\n+    public void assignRoleToUsers() {", "originalCommit": "6bab91df65485a760690069daf0353b015e81264", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyOTM3OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r393329378", "bodyText": "I will be calling Installer.afterInstall() from tests in one-ui proj.  If I import Installer to the tests in one-ui,\n\nHubtestBase.afterPropertiesSet() gets called which attempts to populate objects in HubTestBase. In order to do that, I will have to copy gradle.properties from marklogic-data-hub project to one-ui project (similar to what we have for web project). Is it ok to do that ?\nI should be able to access test resources of marklogic-data-hub project  in order to update the database properties. Do you know of a way test resource from marklogic-data-hub project be used in one-ui rather than making an explicit copy ?", "author": "srinathgit", "createdAt": "2020-03-16T21:50:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI2MDA1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk3Mjk0Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r393972947", "bodyText": "The installation tests have been moved to a different test suite", "author": "srinathgit", "createdAt": "2020-03-17T21:10:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI2MDA1OA=="}], "type": "inlineReview", "revised_code": {"commit": "1b952ff7927fa4b1c09fdecc68b8f5805e52f814", "chunk": "diff --git a/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java b/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\nindex c04c6de4e..d79d32671 100644\n--- a/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\n+++ b/one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java\n\n@@ -136,16 +108,16 @@ public class TestHelper {\n         throws JsonProcessingException {\n         LoginInfo loginInfo = new LoginInfo();\n         loginInfo.password = \"password\";\n-        loginInfo.mlHost = mlHost;\n+        loginInfo.mlHost = hubConfig.getHost();\n         switch (role) {\n             case \"data-hub-developer\":\n-                loginInfo.username = dataHubDeveloperUsername;;\n+                loginInfo.username = Installer.DATA_HUB_DEVELOPER_USER;;\n                 break;\n             case \"data-hub-environment-manager\":\n-                loginInfo.username = dataHubEnvironmentManagerUsername;;\n+                loginInfo.username = Installer.DATA_HUB_ENVIRONMENT_MANAGER;;\n                 break;\n             case \"admin\":\n-                loginInfo.username = adminUserName;;\n+                loginInfo.username = Installer.DATA_HUB_ADMIN;;\n                 break;\n             default:\n                 loginInfo.username = \"fake\";\n"}}, {"oid": "1b952ff7927fa4b1c09fdecc68b8f5805e52f814", "url": "https://github.com/marklogic/marklogic-data-hub/commit/1b952ff7927fa4b1c09fdecc68b8f5805e52f814", "message": "DHFPROD-4604:Fix failing one-ui tests", "committedDate": "2020-03-17T01:39:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM5OTgyMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3703#discussion_r393399820", "bodyText": "@rjrudin ,\nThe only way I can prevent spring container from instantiating HubTestBase and it's derived classes is to exclude it here. It doesn't feel right as one-ui code has dependency on test code in marklogic-data-hub. Is that ok or is there a better way to prevent its instantiation", "author": "srinathgit", "createdAt": "2020-03-17T01:42:19Z", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/Application.java", "diffHunk": "@@ -29,9 +30,9 @@\n import java.util.Set;\n import java.util.stream.Stream;\n \n-@ComponentScan(basePackages = \"com.marklogic.hub\", excludeFilters = {@ComponentScan.Filter(\n-\t\ttype = FilterType.REGEX,\n-\t\tpattern = \"com\\\\.marklogic\\\\.hub\\\\.impl\\\\.HubConfigImpl\")\n+@ComponentScan(basePackages = \"com.marklogic.hub\",\n+    excludeFilters = {@ComponentScan.Filter(type = FilterType.REGEX, pattern = \"com\\\\.marklogic\\\\.hub\\\\.impl\\\\.HubConfigImpl\"),\n+    @ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, classes = HubTestBase.class)", "originalCommit": "1b952ff7927fa4b1c09fdecc68b8f5805e52f814", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8b860030bf3438d0ccc5faad12faea7c29fa5e96", "chunk": "diff --git a/one-ui/src/main/java/com/marklogic/hub/oneui/Application.java b/one-ui/src/main/java/com/marklogic/hub/oneui/Application.java\nindex 06eb6c3c5..a3a8c33e3 100644\n--- a/one-ui/src/main/java/com/marklogic/hub/oneui/Application.java\n+++ b/one-ui/src/main/java/com/marklogic/hub/oneui/Application.java\n\n@@ -30,9 +29,9 @@ import org.springframework.web.filter.CommonsRequestLoggingFilter;\n import java.util.Set;\n import java.util.stream.Stream;\n \n-@ComponentScan(basePackages = \"com.marklogic.hub\",\n-    excludeFilters = {@ComponentScan.Filter(type = FilterType.REGEX, pattern = \"com\\\\.marklogic\\\\.hub\\\\.impl\\\\.HubConfigImpl\"),\n-    @ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, classes = HubTestBase.class)\n+@ComponentScan(basePackages = \"com.marklogic.hub\", excludeFilters = {@ComponentScan.Filter(\n+\t\ttype = FilterType.REGEX,\n+\t\tpattern = \"com\\\\.marklogic\\\\.hub\\\\.impl\\\\.HubConfigImpl\")\n })\n @SpringBootApplication\n public class Application {\n"}}, {"oid": "fe358eedd223aeeca63a0a791a0a351ca671a33c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/fe358eedd223aeeca63a0a791a0a351ca671a33c", "message": "DHFPROD-4604:Fix failing one-ui tests", "committedDate": "2020-03-17T08:02:45Z", "type": "forcePushed"}, {"oid": "e3b20abc4761b45fc6c376e1ec374e5105248dd4", "url": "https://github.com/marklogic/marklogic-data-hub/commit/e3b20abc4761b45fc6c376e1ec374e5105248dd4", "message": "DHFPROD-4604:Fix failing one-ui tests", "committedDate": "2020-03-17T08:16:22Z", "type": "forcePushed"}, {"oid": "8b860030bf3438d0ccc5faad12faea7c29fa5e96", "url": "https://github.com/marklogic/marklogic-data-hub/commit/8b860030bf3438d0ccc5faad12faea7c29fa5e96", "message": "DHFPROD-4604:Fix failing one-ui tests/ suite", "committedDate": "2020-03-17T21:08:26Z", "type": "forcePushed"}, {"oid": "52fee3a7a43c41df630bbfe6fc16d9003c25193f", "url": "https://github.com/marklogic/marklogic-data-hub/commit/52fee3a7a43c41df630bbfe6fc16d9003c25193f", "message": "DHFPROD-4604:Fix failing one-ui tests/ suite", "committedDate": "2020-03-17T21:27:12Z", "type": "commit"}, {"oid": "52fee3a7a43c41df630bbfe6fc16d9003c25193f", "url": "https://github.com/marklogic/marklogic-data-hub/commit/52fee3a7a43c41df630bbfe6fc16d9003c25193f", "message": "DHFPROD-4604:Fix failing one-ui tests/ suite", "committedDate": "2020-03-17T21:27:12Z", "type": "forcePushed"}]}