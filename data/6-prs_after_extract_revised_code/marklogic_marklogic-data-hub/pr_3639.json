{"pr_number": 3639, "pr_title": "DHFPROD-4524: 5.3 Roles service doesn't provide granular enough feedb\u2026", "pr_createdAt": "2020-03-03T15:55:56Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3639", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMTQ0Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3639#discussion_r387131442", "bodyText": "When we need a method to return a tuple of different things, I'd much rather see us use the Pair class or a custom class instead of passing arrays as ways to capture values.\nSo this can be simplified by returning a Pair<List<GrantedAuthority>, ArrayNode> . That makes it much more obvious what the method is doing.\nFor \"canInstallDataHub\" - can't LoginHandler just iterate over the list of GrantedAuthoritys to see if \"canInstallDataHub\" exists, and if so, write that to the JSON response? It shouldn't need to care about hasManagePrivileges anymore, right? That would get rid of this from this function, which shouldn't care about setting bits specific to the login response. It should just care about getting all the authorities (and for now, all the roles too, though that will soon go away).", "author": "rjrudin", "createdAt": "2020-03-03T16:16:47Z", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/AuthenticationFilter.java", "diffHunk": "@@ -137,15 +139,24 @@ protected AuthenticationToken authenticateUser(String username, String password)\n      * - see https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#appendix-faq-role-prefix.\n      *\n      * @param stagingClient\n+     * @param roles\n+     * @param canInstallDataHub\n      * @return\n      */\n-    protected List<GrantedAuthority> getAuthoritiesForAuthenticatedUser(DatabaseClient stagingClient) {\n+    protected List<GrantedAuthority> getAuthoritiesForAuthenticatedUser(DatabaseClient stagingClient, ArrayNode[] roles, boolean[] canInstallDataHub) {", "originalCommit": "68f16495f7c1ce4e43a31305bfcf762da58264cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE0MDk3MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3639#discussion_r387140971", "bodyText": "@rjrudin Now UI needs hasManagePrivileges for convenience. Because we only send roles as response to UI, but those roles does not tell the if the user has manage-admin privilege or not. We can remove it once UI do not need it. Since we will remove roles, we can refactor the codes later on.", "author": "hao1st", "createdAt": "2020-03-03T16:29:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMTQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE0NTIyMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3639#discussion_r387145222", "bodyText": "@rjrudin I do not see any difference between use a Pair as return and pass roles as a parameter...", "author": "hao1st", "createdAt": "2020-03-03T16:35:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMTQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE2NzAxOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3639#discussion_r387167018", "bodyText": "It's more clear what the inputs and outputs are. A signature of:\nList<GrantedAuthority> getGrantedAuthorities(DatabaseClient, ArrayNode); \n\nimplies that the DatabaseClient and ArrayNode are inputs needed to process a single List as the output. The reader has to do extra work to realize that one of the inputs is actually an output, not an input.\nBut this signature:\nPair<List, ArrayNode> getGrantedAuthorities(DatabaseClient);\n\nimplies that a single input is needed to produce two outputs.\nBut it's fine now not to change it - ideally, the roles will go away soon and we'll have a single output - the List of authorities.", "author": "rjrudin", "createdAt": "2020-03-03T17:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMTQ0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9d31db306306fb89a74eeab0bfc9b6579d104ea4", "chunk": "diff --git a/one-ui/src/main/java/com/marklogic/hub/oneui/auth/AuthenticationFilter.java b/one-ui/src/main/java/com/marklogic/hub/oneui/auth/AuthenticationFilter.java\nindex cab1e4f8e..d04badae6 100644\n--- a/one-ui/src/main/java/com/marklogic/hub/oneui/auth/AuthenticationFilter.java\n+++ b/one-ui/src/main/java/com/marklogic/hub/oneui/auth/AuthenticationFilter.java\n\n@@ -143,8 +145,9 @@ public class AuthenticationFilter extends AbstractAuthenticationProcessingFilter\n      * @param canInstallDataHub\n      * @return\n      */\n-    protected List<GrantedAuthority> getAuthoritiesForAuthenticatedUser(DatabaseClient stagingClient, ArrayNode[] roles, boolean[] canInstallDataHub) {\n-        List<GrantedAuthority> authorities = new ArrayList<>();\n+    protected Pair<List<GrantedAuthority>, ArrayNode> getAuthoritiesForAuthenticatedUser(DatabaseClient stagingClient, ArrayNode[] roles, boolean[] canInstallDataHub) {\n+        List<GrantedAuthority> grantAuthorities = new ArrayList<>();\n+        ArrayNode authorities = null;\n         JsonNode response = SecurityService.on(stagingClient).getAuthorities();\n         if (response != null) {\n             if (response.has(\"authorities\")) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5NDg2Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3639#discussion_r387294867", "bodyText": "@ryanjdew we are still at the early stages of 5.3 so maybe we can change this now. Is hasManagePrivileges telling us if the user has manage-admin role? If so, then shouldnt we name it that way. I am saying this because data-hub-operator has manage privilege, will this flag then be true.", "author": "bsrikan", "createdAt": "2020-03-03T21:09:22Z", "path": "one-ui/src/test/java/com/marklogic/hub/oneui/AuthTest.java", "diffHunk": "@@ -46,14 +48,67 @@ void loginWithInvalidCredentials() throws Exception {\n     }\n \n     @Test\n-    void loginWithValidCredentialsAndLogout() throws Exception {\n+    void loginWithValidAdminAndLogout() throws Exception {\n         String payload = getLoginPayload(\"admin\", \"admin\");\n         final MockHttpSession session[] = new MockHttpSession[1];\n         // Login\n         mockMvc\n             .perform(post(LOGIN_URL).contentType(MediaType.APPLICATION_JSON).content(payload))\n-            .andDo(\n-                result -> session[0] = (MockHttpSession) result.getRequest().getSession())\n+            .andDo (\n+                result -> {\n+                    session[0] = (MockHttpSession) result.getRequest().getSession();\n+                    assertTrue(result.getResponse().getContentAsString().contains(\"\\\"hasManagePrivileges\\\":true\"));\n+                })\n+            .andExpect(status().isOk());\n+\n+        assertFalse(session[0].isInvalid());\n+\n+        // Logout\n+        mockMvc.perform(get(LOGOUT_URL).session(session[0]))\n+            .andExpect(status().isOk());\n+\n+        assertTrue(session[0].isInvalid());\n+    }\n+\n+    @Test\n+    void loginWithDataHubManagerAndLogout() throws Exception {\n+        String payload = getLoginPayload(\"data-hub-environment-manager-user\", \"data-hub-environment-manager-user\");\n+        final MockHttpSession session[] = new MockHttpSession[1];\n+        // Login\n+        mockMvc\n+            .perform(post(LOGIN_URL).contentType(MediaType.APPLICATION_JSON).content(payload))\n+            .andDo (\n+                result -> {\n+                    session[0] = (MockHttpSession) result.getRequest().getSession();\n+                    String strResponse = result.getResponse().getContentAsString();\n+                    ObjectMapper mapper = new ObjectMapper();\n+                    JsonNode jsonResonse = mapper.readTree(strResponse);\n+                    assertTrue(jsonResonse.get(\"roles\").isArray());\n+                    assertTrue(strResponse.contains(\"\\\"hasManagePrivileges\\\":true\"));", "originalCommit": "68f16495f7c1ce4e43a31305bfcf762da58264cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2Njk0NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3639#discussion_r387466944", "bodyText": "It isn't explicitly \"has a role.\" It is depending on whether we have access to the Data Service endpoint it is really either doesn't get forbidden from the manage REST app server or if the Data Service endpoint is available it was checking the role, but now should check \"canInstallDataHub\".", "author": "ryanjdew", "createdAt": "2020-03-04T06:15:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5NDg2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9d31db306306fb89a74eeab0bfc9b6579d104ea4", "chunk": "diff --git a/one-ui/src/test/java/com/marklogic/hub/oneui/AuthTest.java b/one-ui/src/test/java/com/marklogic/hub/oneui/AuthTest.java\nindex b13d9e059..d07e8918a 100644\n--- a/one-ui/src/test/java/com/marklogic/hub/oneui/AuthTest.java\n+++ b/one-ui/src/test/java/com/marklogic/hub/oneui/AuthTest.java\n\n@@ -57,7 +57,13 @@ class AuthTest {\n             .andDo (\n                 result -> {\n                     session[0] = (MockHttpSession) result.getRequest().getSession();\n-                    assertTrue(result.getResponse().getContentAsString().contains(\"\\\"hasManagePrivileges\\\":true\"));\n+                    String strResponse = result.getResponse().getContentAsString();\n+                    ObjectMapper mapper = new ObjectMapper();\n+                    JsonNode jsonResonse = mapper.readTree(strResponse);\n+                    assertTrue(jsonResonse.get(\"roles\").isArray());\n+                    assertTrue(jsonResonse.get(\"authorities\").isArray());\n+                    assertTrue(jsonResonse.get(\"authorities\").toString().contains(\"canInstallDataHub\"));\n+                    assertEquals(jsonResonse.get(\"hasManagePrivileges\").asBoolean(), true);\n                 })\n             .andExpect(status().isOk());\n \n"}}, {"oid": "c86a18dd7358a4aa2de117290b34f813d0756e10", "url": "https://github.com/marklogic/marklogic-data-hub/commit/c86a18dd7358a4aa2de117290b34f813d0756e10", "message": "DHFPROD-4524: 5.3 Roles service doesn't provide granular enough feedback to cover manage-admin/privileges", "committedDate": "2020-03-05T22:19:05Z", "type": "commit"}, {"oid": "11e70e870b30f3bc3aa90ba2918943f1dfd33740", "url": "https://github.com/marklogic/marklogic-data-hub/commit/11e70e870b30f3bc3aa90ba2918943f1dfd33740", "message": "DHFPROD-4524: rename & simplify", "committedDate": "2020-03-05T22:19:05Z", "type": "commit"}, {"oid": "9d31db306306fb89a74eeab0bfc9b6579d104ea4", "url": "https://github.com/marklogic/marklogic-data-hub/commit/9d31db306306fb89a74eeab0bfc9b6579d104ea4", "message": "DHFPROD-4524: let authorities as part of login response", "committedDate": "2020-03-05T22:19:05Z", "type": "commit"}, {"oid": "ab45f6c6b9721b3a97a0e2f77759e54e680bc4e6", "url": "https://github.com/marklogic/marklogic-data-hub/commit/ab45f6c6b9721b3a97a0e2f77759e54e680bc4e6", "message": "DHFPROD-4524: fix response name", "committedDate": "2020-03-05T22:19:05Z", "type": "commit"}, {"oid": "8e20f191fcfc19d80fc9bcb0589c5b1fd724f9b4", "url": "https://github.com/marklogic/marklogic-data-hub/commit/8e20f191fcfc19d80fc9bcb0589c5b1fd724f9b4", "message": "hao/DHFPROD-4524: refactor getAuthorities & test cases", "committedDate": "2020-03-05T23:01:05Z", "type": "commit"}, {"oid": "8e20f191fcfc19d80fc9bcb0589c5b1fd724f9b4", "url": "https://github.com/marklogic/marklogic-data-hub/commit/8e20f191fcfc19d80fc9bcb0589c5b1fd724f9b4", "message": "hao/DHFPROD-4524: refactor getAuthorities & test cases", "committedDate": "2020-03-05T23:01:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg5NjY2NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3639#discussion_r388896664", "bodyText": "Instead of this special case for this one capability, just add a method to AuthenticationToken like this:\n\nboolean hasAuthority(String authorityName);\n\nLoginFilter can then just call token.hasAuthority(\"canInstallDataHub\")\nThen you don't need the boolean array of a single value.", "author": "rjrudin", "createdAt": "2020-03-06T13:18:05Z", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/AuthenticationFilter.java", "diffHunk": "@@ -137,17 +141,38 @@ protected AuthenticationToken authenticateUser(String username, String password)\n      * - see https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#appendix-faq-role-prefix.\n      *\n      * @param stagingClient\n+     * @param roles\n+     * @param canInstallDataHub\n      * @return\n      */\n-    protected List<GrantedAuthority> getAuthoritiesForAuthenticatedUser(DatabaseClient stagingClient) {\n-        List<GrantedAuthority> authorities = new ArrayList<>();\n+    protected Pair<List<GrantedAuthority>, ArrayNode> getAuthoritiesForAuthenticatedUser(DatabaseClient stagingClient, ArrayNode[] roles, boolean[] canInstallDataHub) {\n+        List<GrantedAuthority> grantAuthorities = new ArrayList<>();\n+        ArrayNode authorities = null;\n         JsonNode response = SecurityService.on(stagingClient).getAuthorities();\n-        if (response != null && response.has(\"authorities\")) {\n-            response.get(\"authorities\").iterator().forEachRemaining(node -> {\n-                authorities.add(new SimpleGrantedAuthority(\"ROLE_\" + node.asText()));\n-            });\n+        if (response != null) {\n+            if (response.has(\"authorities\")) {\n+                response.get(\"authorities\").iterator().forEachRemaining(node -> {\n+                    String authority = node.asText();\n+                    if (\"canInstallDataHub\".equals(authority))  {", "originalCommit": "8e20f191fcfc19d80fc9bcb0589c5b1fd724f9b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk3Nzc0MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3639#discussion_r388977740", "bodyText": "@rjrudin I thought about using another method before,.But as we discussed, we do not need to have hasManagerPrivileges after UI change. And I will change the method to remove the canInstallDataHub array.", "author": "hao1st", "createdAt": "2020-03-06T15:43:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg5NjY2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4MDg3Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3639#discussion_r388980877", "bodyText": "Okay, that's fair.", "author": "rjrudin", "createdAt": "2020-03-06T15:49:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg5NjY2NA=="}], "type": "inlineReview", "revised_code": {"commit": "92d96af85f3522ed79b345b25a487351be90625e", "chunk": "diff --git a/one-ui/src/main/java/com/marklogic/hub/oneui/auth/AuthenticationFilter.java b/one-ui/src/main/java/com/marklogic/hub/oneui/auth/AuthenticationFilter.java\nindex d04badae6..2ecc41aee 100644\n--- a/one-ui/src/main/java/com/marklogic/hub/oneui/auth/AuthenticationFilter.java\n+++ b/one-ui/src/main/java/com/marklogic/hub/oneui/auth/AuthenticationFilter.java\n\n@@ -141,13 +140,12 @@ public class AuthenticationFilter extends AbstractAuthenticationProcessingFilter\n      * - see https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#appendix-faq-role-prefix.\n      *\n      * @param stagingClient\n-     * @param roles\n      * @param canInstallDataHub\n      * @return\n      */\n-    protected Pair<List<GrantedAuthority>, ArrayNode> getAuthoritiesForAuthenticatedUser(DatabaseClient stagingClient, ArrayNode[] roles, boolean[] canInstallDataHub) {\n+    protected Pair<List<GrantedAuthority>, ArrayNode> getAuthoritiesForAuthenticatedUser(DatabaseClient stagingClient, boolean[] canInstallDataHub) {\n         List<GrantedAuthority> grantAuthorities = new ArrayList<>();\n-        ArrayNode authorities = null;\n+        ArrayNode roles = null;\n         JsonNode response = SecurityService.on(stagingClient).getAuthorities();\n         if (response != null) {\n             if (response.has(\"authorities\")) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg5ODE5OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3639#discussion_r388898198", "bodyText": "\"Authorites\" is misspelled, but if it were spelled correctly, you'd get a compilation error because \"getAuthorities\" already exists.\nWe don't need to store the authorities in two separate fields in AuthenticationToken. Instead, just add a \"getAuthorityNames\" method that returns a List. It will iterate over each GrantedAuthority and get its value and remove the \"ROLE_\", since the UI doesn't want to deal with that.", "author": "rjrudin", "createdAt": "2020-03-06T13:21:22Z", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginHandler.java", "diffHunk": "@@ -47,6 +47,9 @@ public void onAuthenticationSuccess(HttpServletRequest request, HttpServletRespo\n         if (token.getRoles() != null) {\n             jsonResponse.putArray(\"roles\").addAll(token.getRoles());\n         }\n+        if (token.getAuthorites() != null) {", "originalCommit": "8e20f191fcfc19d80fc9bcb0589c5b1fd724f9b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4MDk0OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3639#discussion_r388980949", "bodyText": "oops, i did not notice that. and will modify it.", "author": "hao1st", "createdAt": "2020-03-06T15:49:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg5ODE5OA=="}], "type": "inlineReview", "revised_code": {"commit": "92d96af85f3522ed79b345b25a487351be90625e", "chunk": "diff --git a/one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginHandler.java b/one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginHandler.java\nindex 4e224e690..4b9960c28 100644\n--- a/one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginHandler.java\n+++ b/one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginHandler.java\n\n@@ -47,9 +49,16 @@ public class LoginHandler implements AuthenticationSuccessHandler {\n         if (token.getRoles() != null) {\n             jsonResponse.putArray(\"roles\").addAll(token.getRoles());\n         }\n-        if (token.getAuthorites() != null) {\n-            jsonResponse.putArray(\"authorities\").addAll(token.getAuthorites());\n-        }\n+\n+        List<TextNode> authorities = new ArrayList<>();\n+        token.getAuthorities().forEach(auth -> {\n+            String authority = auth.getAuthority();\n+            if (authority.length() > 5) { //trim prefix \"ROLE_\"\n+                authorities.add(new TextNode(auth.getAuthority().substring(5, authority.length())));\n+            }\n+        });\n+        jsonResponse.putArray(\"authorities\").addAll(authorities);\n+\n         jsonResponse.put(\"isInstalled\", token.isDataHubInstalled());\n         jsonResponse.put(\"hasManagePrivileges\", token.hasManagePrivileges());\n         jsonResponse.put(\"projectName\", token.getProjectName());\n"}}, {"oid": "92d96af85f3522ed79b345b25a487351be90625e", "url": "https://github.com/marklogic/marklogic-data-hub/commit/92d96af85f3522ed79b345b25a487351be90625e", "message": "DHFPROD-4524: refactor authorities", "committedDate": "2020-03-06T17:14:06Z", "type": "commit"}]}