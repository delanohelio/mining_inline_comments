{"pr_number": 4566, "pr_title": "DHFPROD-5691: Fix outstanding issue found by coverity static scan", "pr_createdAt": "2020-09-14T18:12:57Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4566", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MDg2OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4566#discussion_r488140868", "bodyText": "Can you include a brief comment to explain why this map has a concrete type but the others are just Map? Otherwise some well-meaning developer in the future will change this to Map to be consistent with the others.", "author": "rjrudin", "createdAt": "2020-09-14T18:35:10Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "diffHunk": "@@ -55,7 +55,7 @@\n \n     private StepRunner stepRunner;\n \n-    private final Map<String, Queue<String>> stepsMap = new ConcurrentHashMap<>();\n+    private final ConcurrentHashMap<String, Queue<String>> stepsMap = new ConcurrentHashMap<>();", "originalCommit": "e5f625d856e46de7e69d568e388e338a9742f918", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1NzMxMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4566#discussion_r488157312", "bodyText": "Added the comment", "author": "akshaysonvane", "createdAt": "2020-09-14T19:05:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MDg2OA=="}], "type": "inlineReview", "revised_code": {"commit": "50b21ed0a786a52da8d4e92ae8c03c153424e6fb", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\nindex 3e328ddab..43f5ef71c 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\n\n@@ -55,6 +55,10 @@ public class FlowRunnerImpl implements FlowRunner{\n \n     private StepRunner stepRunner;\n \n+    /*\n+     * Using concrete type ConcurrentHashMap instead of Map so coverity static scan does not complain about\n+     * \"modification without proper synchronization\" when we call `remove(key)` on the `stepsMap` later in the code.\n+     */\n     private final ConcurrentHashMap<String, Queue<String>> stepsMap = new ConcurrentHashMap<>();\n     private Map<String, Flow> flowMap = new ConcurrentHashMap<>();\n     private Map<String, RunFlowResponse> flowResp = new ConcurrentHashMap<>();\n"}}, {"oid": "50b21ed0a786a52da8d4e92ae8c03c153424e6fb", "url": "https://github.com/marklogic/marklogic-data-hub/commit/50b21ed0a786a52da8d4e92ae8c03c153424e6fb", "message": "DHFPROD-5691: Fix outstanding issue found by coverity static scan", "committedDate": "2020-09-14T19:04:06Z", "type": "commit"}, {"oid": "50b21ed0a786a52da8d4e92ae8c03c153424e6fb", "url": "https://github.com/marklogic/marklogic-data-hub/commit/50b21ed0a786a52da8d4e92ae8c03c153424e6fb", "message": "DHFPROD-5691: Fix outstanding issue found by coverity static scan", "committedDate": "2020-09-14T19:04:06Z", "type": "forcePushed"}]}