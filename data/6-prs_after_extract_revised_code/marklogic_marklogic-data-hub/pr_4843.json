{"pr_number": 4843, "pr_title": "DHFPROD-5984: Adding indexes to filter on sourceName and sourceType as hub facets", "pr_createdAt": "2020-11-10T18:14:16Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4843", "timeline": [{"oid": "1ae55164320975860d0ed9f46ad5ac08fa2422fe", "url": "https://github.com/marklogic/marklogic-data-hub/commit/1ae55164320975860d0ed9f46ad5ac08fa2422fe", "message": "DHFPROD-5984: Adding indexes to filter on sourceName and sourceType as hub facets", "committedDate": "2020-11-12T00:34:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc2MjA4Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4843#discussion_r521762082", "bodyText": "We know path-namespaces exists in newProps - I don't see the point of this null check here?", "author": "rjrudin", "createdAt": "2020-11-12T01:33:37Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java", "diffHunk": "@@ -141,6 +142,30 @@ protected void addExistingRangePathIndexes(Fragment newProps, Fragment existingP\n         }\n     }\n \n+    protected void addExistingPathNamespaces(Fragment newProps, Fragment existingProps) {\n+        Element newNamespaces = newProps.getInternalDoc().getRootElement().getChild(\"path-namespaces\", MANAGE_NS);\n+        if(newNamespaces == null) {", "originalCommit": "1ae55164320975860d0ed9f46ad5ac08fa2422fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eb01e4fef2c6d68a5e4305bc781bad99c70126a9", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java\nindex db15982ba..70e2d7f56 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java\n\n@@ -144,23 +144,15 @@ public class DeployDatabaseFieldCommand extends AbstractResourceCommand {\n \n     protected void addExistingPathNamespaces(Fragment newProps, Fragment existingProps) {\n         Element newNamespaces = newProps.getInternalDoc().getRootElement().getChild(\"path-namespaces\", MANAGE_NS);\n-        if(newNamespaces == null) {\n-            String esNamespace = \"<path-namespaces><path-namespace><prefix>es</prefix><namespace-uri>http://marklogic.com/entity-services</namespace-uri>\" +\n-                    \"</path-namespace></path-namespaces>\";\n-            newNamespaces = newProps.getInternalDoc().getRootElement().addContent(esNamespace);\n-        }\n-\n         List<String> newNamespacePrefixes = new ArrayList<>();\n-        newProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\").forEach(namespace -> {\n-            String prefix = namespace.getChildText(\"prefix\", MANAGE_NS);\n-            if (StringUtils.isNotBlank(prefix)) {\n-                newNamespacePrefixes.add(prefix);\n-            }\n-        });\n+\n+        newProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\").forEach(namespace ->\n+            newNamespacePrefixes.add(namespace.getChildText(\"prefix\", MANAGE_NS))\n+        );\n \n         for (Element namespace : existingProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\")) {\n             String prefix = namespace.getChildText(\"prefix\", MANAGE_NS);\n-            if (StringUtils.isNotBlank(prefix) && !newNamespacePrefixes.contains(prefix)) {\n+            if (!newNamespacePrefixes.contains(prefix)) {\n                 newNamespaces.addContent(namespace.detach());\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc2MjQzMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4843#discussion_r521762432", "bodyText": "You don't need this check here - prefix is a required field, it's guaranteed to exist.", "author": "rjrudin", "createdAt": "2020-11-12T01:34:48Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java", "diffHunk": "@@ -141,6 +142,30 @@ protected void addExistingRangePathIndexes(Fragment newProps, Fragment existingP\n         }\n     }\n \n+    protected void addExistingPathNamespaces(Fragment newProps, Fragment existingProps) {\n+        Element newNamespaces = newProps.getInternalDoc().getRootElement().getChild(\"path-namespaces\", MANAGE_NS);\n+        if(newNamespaces == null) {\n+            String esNamespace = \"<path-namespaces><path-namespace><prefix>es</prefix><namespace-uri>http://marklogic.com/entity-services</namespace-uri>\" +\n+                    \"</path-namespace></path-namespaces>\";\n+            newNamespaces = newProps.getInternalDoc().getRootElement().addContent(esNamespace);\n+        }\n+\n+        List<String> newNamespacePrefixes = new ArrayList<>();\n+        newProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\").forEach(namespace -> {\n+            String prefix = namespace.getChildText(\"prefix\", MANAGE_NS);\n+            if (StringUtils.isNotBlank(prefix)) {", "originalCommit": "1ae55164320975860d0ed9f46ad5ac08fa2422fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eb01e4fef2c6d68a5e4305bc781bad99c70126a9", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java\nindex db15982ba..70e2d7f56 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java\n\n@@ -144,23 +144,15 @@ public class DeployDatabaseFieldCommand extends AbstractResourceCommand {\n \n     protected void addExistingPathNamespaces(Fragment newProps, Fragment existingProps) {\n         Element newNamespaces = newProps.getInternalDoc().getRootElement().getChild(\"path-namespaces\", MANAGE_NS);\n-        if(newNamespaces == null) {\n-            String esNamespace = \"<path-namespaces><path-namespace><prefix>es</prefix><namespace-uri>http://marklogic.com/entity-services</namespace-uri>\" +\n-                    \"</path-namespace></path-namespaces>\";\n-            newNamespaces = newProps.getInternalDoc().getRootElement().addContent(esNamespace);\n-        }\n-\n         List<String> newNamespacePrefixes = new ArrayList<>();\n-        newProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\").forEach(namespace -> {\n-            String prefix = namespace.getChildText(\"prefix\", MANAGE_NS);\n-            if (StringUtils.isNotBlank(prefix)) {\n-                newNamespacePrefixes.add(prefix);\n-            }\n-        });\n+\n+        newProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\").forEach(namespace ->\n+            newNamespacePrefixes.add(namespace.getChildText(\"prefix\", MANAGE_NS))\n+        );\n \n         for (Element namespace : existingProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\")) {\n             String prefix = namespace.getChildText(\"prefix\", MANAGE_NS);\n-            if (StringUtils.isNotBlank(prefix) && !newNamespacePrefixes.contains(prefix)) {\n+            if (!newNamespacePrefixes.contains(prefix)) {\n                 newNamespaces.addContent(namespace.detach());\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc2MjYwMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4843#discussion_r521762602", "bodyText": "Same thing, don't need the isNotBlank check - if a path-namespace exists, it's guaranteed to have a prefix.", "author": "rjrudin", "createdAt": "2020-11-12T01:35:28Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java", "diffHunk": "@@ -141,6 +142,30 @@ protected void addExistingRangePathIndexes(Fragment newProps, Fragment existingP\n         }\n     }\n \n+    protected void addExistingPathNamespaces(Fragment newProps, Fragment existingProps) {\n+        Element newNamespaces = newProps.getInternalDoc().getRootElement().getChild(\"path-namespaces\", MANAGE_NS);\n+        if(newNamespaces == null) {\n+            String esNamespace = \"<path-namespaces><path-namespace><prefix>es</prefix><namespace-uri>http://marklogic.com/entity-services</namespace-uri>\" +\n+                    \"</path-namespace></path-namespaces>\";\n+            newNamespaces = newProps.getInternalDoc().getRootElement().addContent(esNamespace);\n+        }\n+\n+        List<String> newNamespacePrefixes = new ArrayList<>();\n+        newProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\").forEach(namespace -> {\n+            String prefix = namespace.getChildText(\"prefix\", MANAGE_NS);\n+            if (StringUtils.isNotBlank(prefix)) {\n+                newNamespacePrefixes.add(prefix);\n+            }\n+        });\n+\n+        for (Element namespace : existingProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\")) {\n+            String prefix = namespace.getChildText(\"prefix\", MANAGE_NS);\n+            if (StringUtils.isNotBlank(prefix) && !newNamespacePrefixes.contains(prefix)) {", "originalCommit": "1ae55164320975860d0ed9f46ad5ac08fa2422fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eb01e4fef2c6d68a5e4305bc781bad99c70126a9", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java\nindex db15982ba..70e2d7f56 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/DeployDatabaseFieldCommand.java\n\n@@ -144,23 +144,15 @@ public class DeployDatabaseFieldCommand extends AbstractResourceCommand {\n \n     protected void addExistingPathNamespaces(Fragment newProps, Fragment existingProps) {\n         Element newNamespaces = newProps.getInternalDoc().getRootElement().getChild(\"path-namespaces\", MANAGE_NS);\n-        if(newNamespaces == null) {\n-            String esNamespace = \"<path-namespaces><path-namespace><prefix>es</prefix><namespace-uri>http://marklogic.com/entity-services</namespace-uri>\" +\n-                    \"</path-namespace></path-namespaces>\";\n-            newNamespaces = newProps.getInternalDoc().getRootElement().addContent(esNamespace);\n-        }\n-\n         List<String> newNamespacePrefixes = new ArrayList<>();\n-        newProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\").forEach(namespace -> {\n-            String prefix = namespace.getChildText(\"prefix\", MANAGE_NS);\n-            if (StringUtils.isNotBlank(prefix)) {\n-                newNamespacePrefixes.add(prefix);\n-            }\n-        });\n+\n+        newProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\").forEach(namespace ->\n+            newNamespacePrefixes.add(namespace.getChildText(\"prefix\", MANAGE_NS))\n+        );\n \n         for (Element namespace : existingProps.getElements(\"/m:database-properties/m:path-namespaces/m:path-namespace\")) {\n             String prefix = namespace.getChildText(\"prefix\", MANAGE_NS);\n-            if (StringUtils.isNotBlank(prefix) && !newNamespacePrefixes.contains(prefix)) {\n+            if (!newNamespacePrefixes.contains(prefix)) {\n                 newNamespaces.addContent(namespace.detach());\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc2NzUyMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4843#discussion_r521767522", "bodyText": "No need for a separate test here - just add the path-namespace stuff to the existing DeployDatabaseFieldCommandTest .", "author": "rjrudin", "createdAt": "2020-11-12T01:52:44Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/deploy/commands/DeployExistingNamespacesTest.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package com.marklogic.hub.deploy.commands;\n+\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.mgmt.api.API;\n+import com.marklogic.mgmt.api.database.Database;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import com.marklogic.mgmt.util.ObjectMapperFactory;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class DeployExistingNamespacesTest extends AbstractHubCoreTest {", "originalCommit": "1ae55164320975860d0ed9f46ad5ac08fa2422fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eb01e4fef2c6d68a5e4305bc781bad99c70126a9", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/deploy/commands/DeployExistingNamespacesTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/deploy/commands/DeployExistingNamespacesTest.java\ndeleted file mode 100644\nindex 4c3eaea7b..000000000\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/deploy/commands/DeployExistingNamespacesTest.java\n+++ /dev/null\n\n@@ -1,122 +0,0 @@\n-package com.marklogic.hub.deploy.commands;\n-\n-import com.fasterxml.jackson.databind.node.ArrayNode;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n-import com.marklogic.hub.AbstractHubCoreTest;\n-import com.marklogic.hub.DatabaseKind;\n-import com.marklogic.mgmt.api.API;\n-import com.marklogic.mgmt.api.database.Database;\n-import com.marklogic.mgmt.resource.databases.DatabaseManager;\n-import com.marklogic.mgmt.util.ObjectMapperFactory;\n-import org.junit.jupiter.api.AfterEach;\n-import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Test;\n-\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-\n-import static org.junit.jupiter.api.Assertions.*;\n-\n-public class DeployExistingNamespacesTest extends AbstractHubCoreTest {\n-\n-    @BeforeEach\n-    void beforeEachTest() {\n-        resetFieldsAndIndexesAndNamespaces();\n-    }\n-\n-    @AfterEach\n-    void afterEachTest() {\n-        resetFieldsAndIndexesAndNamespaces();\n-        applyDatabasePropertiesForTests(getHubConfig());\n-    }\n-\n-    @Test\n-    public void testWhenNamespacesAreNull() {\n-        new DeployDatabaseFieldCommand().execute(newCommandContext());\n-\n-        // verify ES namespace is deployed and datahubSourceName and datahubSourceType indexes are deployed\n-        ObjectNode db = getDatabaseProperties(getHubClient().getDbName(DatabaseKind.FINAL));\n-        ArrayNode namespaces = (ArrayNode) db.get(\"path-namespace\");\n-        assertEquals(1, namespaces.size());\n-        assertEquals(\"es\", namespaces.get(0).get(\"prefix\").asText());\n-        assertEquals(\"http://marklogic.com/entity-services\", namespaces.get(0).get(\"namespace-uri\").asText());\n-\n-        ArrayNode rangeFieldIndexes = (ArrayNode) db.get(\"range-field-index\");\n-        List<String> fieldNames = new ArrayList<>();\n-        rangeFieldIndexes.forEach(rangeFieldIndex -> fieldNames.add(rangeFieldIndex.get(\"field-name\").asText()));\n-        assertTrue(fieldNames.containsAll(Arrays.asList(\"datahubSourceName\", \"datahubSourceType\")));\n-    }\n-\n-    @Test\n-    public void testExistingNamespacesAreRetained() {\n-        // Adding this to verify indexes are also deployed successfully along with custom namespaces\n-        // Creating and saving fields and field range indexes with custom namespace oex\n-        ObjectNode db = getDatabaseProperties(\"data-hub-FINAL\");\n-\n-        ObjectNode newNode = ObjectMapperFactory.getObjectMapper().createObjectNode();\n-        newNode.put(\"database-name\", \"data-hub-FINAL\");\n-        newNode.set(\"field\", db.get(\"field\"));\n-\n-        ObjectNode newField = ((ArrayNode) newNode.get(\"field\")).addObject();\n-        newField.put(\"field-name\", \"myField\");\n-        ObjectNode fieldPath = newField.putObject(\"field-path\");\n-        fieldPath.put(\"path\", \"/oex:envelope/oex:NamespacedCustomer\");\n-        fieldPath.put(\"weight\", 1);\n-\n-        ArrayNode indexes;\n-        if (db.has(\"range-field-index\")) {\n-            indexes = (ArrayNode) db.get(\"range-field-index\");\n-            newNode.set(\"range-field-index\", indexes);\n-        } else {\n-            indexes = newNode.putArray(\"range-field-index\");\n-        }\n-        ObjectNode index = indexes.addObject();\n-        index.put(\"scalar-type\", \"string\");\n-        index.put(\"field-name\", \"myField\");\n-        index.put(\"invalid-values\", \"reject\");\n-        index.put(\"range-value-positions\", false);\n-        index.put(\"collation\", \"http://marklogic.com/collation/\");\n-\n-        ArrayNode namespaces;\n-        if (db.has(\"path-namespace\")) {\n-            namespaces = (ArrayNode) db.get(\"path-namespace\");\n-            newNode.set(\"path-namespace\", namespaces);\n-        } else {\n-            namespaces = newNode.putArray(\"path-namespace\");\n-        }\n-        ObjectNode namespace = namespaces.addObject();\n-        namespace.put(\"prefix\", \"oex\");\n-        namespace.put(\"namespace-uri\", \"http://example.org/\");\n-        new DatabaseManager(getHubClient().getManageClient()).save(newNode.toString());\n-\n-        // deploying the fields, field range indexes and namespaces\n-        new DeployDatabaseFieldCommand().execute(newCommandContext());\n-\n-        // verify ES namespace is deployed and datahubSourceName and datahubSourceType indexes are deployed\n-        db = getDatabaseProperties(getHubClient().getDbName(DatabaseKind.FINAL));\n-        namespaces = (ArrayNode) db.get(\"path-namespace\");\n-        assertEquals(2, namespaces.size());\n-\n-        List<String> prefixes = new ArrayList<>();\n-        namespaces.forEach(namespaceObject -> prefixes.add(namespaceObject.get(\"prefix\").asText()));\n-        assertTrue(prefixes.containsAll(Arrays.asList(\"es\", \"oex\")));\n-\n-        ArrayNode rangeFieldIndexes = (ArrayNode) db.get(\"range-field-index\");\n-        List<String> fieldNames = new ArrayList<>();\n-        rangeFieldIndexes.forEach(rangeFieldIndex -> fieldNames.add(rangeFieldIndex.get(\"field-name\").asText()));\n-        assertTrue(fieldNames.containsAll(Arrays.asList(\"datahubSourceName\", \"datahubSourceType\")));\n-\n-    }\n-\n-    private void resetFieldsAndIndexesAndNamespaces() {\n-        // Wipe out all fields/indexes\n-        Database db = new Database(new API(getHubClient().getManageClient()), getHubClient().getDbName(DatabaseKind.FINAL));\n-        db.setField(new ArrayList<>());\n-        db.setRangeFieldIndex(new ArrayList<>());\n-        db.setRangePathIndex(new ArrayList<>());\n-        db.save();\n-        db.setPathNamespace(new ArrayList<>());\n-        db.save();\n-    }\n-}\n"}}, {"oid": "eb01e4fef2c6d68a5e4305bc781bad99c70126a9", "url": "https://github.com/marklogic/marklogic-data-hub/commit/eb01e4fef2c6d68a5e4305bc781bad99c70126a9", "message": "DHFPROD-5984: Adding indexes to filter on sourceName and sourceType as hub facets", "committedDate": "2020-11-12T15:32:41Z", "type": "forcePushed"}, {"oid": "84f930359cf641b482d6262e74e6355e6ad4aa14", "url": "https://github.com/marklogic/marklogic-data-hub/commit/84f930359cf641b482d6262e74e6355e6ad4aa14", "message": "DHFPROD-5984: Adding indexes to filter on sourceName and sourceType as hub facets", "committedDate": "2020-11-13T07:00:26Z", "type": "forcePushed"}, {"oid": "1b7e0797f014283cc8c95b08937cd7eec6a008fe", "url": "https://github.com/marklogic/marklogic-data-hub/commit/1b7e0797f014283cc8c95b08937cd7eec6a008fe", "message": "DHFPROD-5984: Adding indexes to filter on sourceName and sourceType as hub facets", "committedDate": "2020-11-13T07:02:35Z", "type": "forcePushed"}, {"oid": "345384b5d8acb39ca0bdda6ad8d137e84403c7a1", "url": "https://github.com/marklogic/marklogic-data-hub/commit/345384b5d8acb39ca0bdda6ad8d137e84403c7a1", "message": "DHFPROD-5984: Adding indexes to filter on sourceName and sourceType as hub facets", "committedDate": "2020-11-13T15:34:00Z", "type": "forcePushed"}, {"oid": "e41fccfb9777bb7413430bb88e17b781271e01a4", "url": "https://github.com/marklogic/marklogic-data-hub/commit/e41fccfb9777bb7413430bb88e17b781271e01a4", "message": "DHFPROD-5984: Adding indexes to filter on sourceName and sourceType as hub facets", "committedDate": "2020-11-13T17:27:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyMjczOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4843#discussion_r523122739", "bodyText": "The comment above this should be removed now - and really, we ought to explain why the project is being created here. So I think a comment of \"Need to create the project directory before applying properties\" (assuming that is the correct reason).", "author": "rjrudin", "createdAt": "2020-11-13T17:48:28Z", "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/AbstractHubCentralTest.java", "diffHunk": "@@ -127,8 +128,8 @@ protected File getTestProjectDirectory() {\n     @Override\n     protected HubClient runAsUser(String username, String password) {\n         // Initialize a new HubConfigImpl\n-        testHubConfig = hubCentral.newHubConfig(username, password);\n-        testHubConfig.setHubProject(testHubProject);\n+        testHubConfig.createProject(testProjectDirectory);", "originalCommit": "e41fccfb9777bb7413430bb88e17b781271e01a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eb2e34c7d7b40cacec557078a5c1d31b9ff1c9c3", "chunk": "diff --git a/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/AbstractHubCentralTest.java b/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/AbstractHubCentralTest.java\nindex 97a427803..607ac6fc5 100644\n--- a/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/AbstractHubCentralTest.java\n+++ b/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/AbstractHubCentralTest.java\n\n@@ -127,7 +127,7 @@ public abstract class AbstractHubCentralTest extends AbstractHubTest {\n      */\n     @Override\n     protected HubClient runAsUser(String username, String password) {\n-        // Initialize a new HubConfigImpl\n+        // Need to create the project directory before applying properties\n         testHubConfig.createProject(testProjectDirectory);\n         testHubConfig.applyProperties(hubCentral.buildPropertySource(username, password));\n \n"}}, {"oid": "eb2e34c7d7b40cacec557078a5c1d31b9ff1c9c3", "url": "https://github.com/marklogic/marklogic-data-hub/commit/eb2e34c7d7b40cacec557078a5c1d31b9ff1c9c3", "message": "DHFPROD-5984: Adding indexes to filter on sourceName and sourceType as hub facets", "committedDate": "2020-11-13T17:50:43Z", "type": "commit"}, {"oid": "eb2e34c7d7b40cacec557078a5c1d31b9ff1c9c3", "url": "https://github.com/marklogic/marklogic-data-hub/commit/eb2e34c7d7b40cacec557078a5c1d31b9ff1c9c3", "message": "DHFPROD-5984: Adding indexes to filter on sourceName and sourceType as hub facets", "committedDate": "2020-11-13T17:50:43Z", "type": "forcePushed"}]}