{"pr_number": 3629, "pr_title": "DHFPROD-4540: Added test for applyArtifactSettings", "pr_createdAt": "2020-03-02T14:24:16Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3629", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQyMTg5Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3629#discussion_r386421892", "bodyText": "I am wondering if this code is needed yet. Is it possible for a client to specify any of these inputs as part of artifact settings? Basically, I'm wondering what the schema for a \"settings\" is, as all of these things can already be specified in multiple other places.", "author": "rjrudin", "createdAt": "2020-03-02T14:24:57Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "diffHunk": "@@ -641,34 +641,6 @@ protected void applyArtifactSettings(Step step, Map<String, Object> stepConfig)\n                     stepOptions.put(\"outputFormat\", artifactJson.get(\"targetFormat\").asText());\n                     stepConfig.put(\"fileLocations\", fileLocations);\n                 }\n-                ObjectNode artifactSettingsJson = null;", "originalCommit": "f75849c844a0219d5783f0ea486e6e3b6d80c0eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjUzNjg4Ng==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3629#discussion_r386536886", "bodyText": "It is a combination of this ticket for creating the settings and this ticket for running an ingestion. We should update the Swagger Docs to contain the settings schema.", "author": "ryanjdew", "createdAt": "2020-03-02T17:27:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQyMTg5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "019e0d1f3da8c12535288ee336b834eaffa0e76c", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\nindex 26b785225..f55cbf4c5 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\n\n@@ -641,6 +641,34 @@ public class FlowRunnerImpl implements FlowRunner{\n                     stepOptions.put(\"outputFormat\", artifactJson.get(\"targetFormat\").asText());\n                     stepConfig.put(\"fileLocations\", fileLocations);\n                 }\n+                ObjectNode artifactSettingsJson = null;\n+                try {\n+                    artifactSettingsJson = artifactManager.getArtifactSettings(artifactType, artifactName);\n+                } catch (FailedRequestException e) {\n+                }\n+                if (artifactSettingsJson != null) {\n+                    List<String> stepConfigIntProperties = Arrays.asList(\"batchSize\", \"threadCount\");\n+                    for (String stepConfigIntProperty: stepConfigIntProperties) {\n+                        if (artifactSettingsJson.hasNonNull(stepConfigIntProperty)) {\n+                            stepConfig.put(stepConfigIntProperty, artifactSettingsJson.get(stepConfigIntProperty).asInt());\n+                        }\n+                    }\n+                    if (artifactSettingsJson.hasNonNull(\"customHook\")) {\n+                        step.setCustomHook(artifactSettingsJson.get(\"customHook\"));\n+                    }\n+                    List<String> stepOptionProperties = Arrays.asList(\"collections\", \"permissions\");\n+                    ObjectMapper mapper = new ObjectMapper();\n+                    if (artifactSettingsJson.hasNonNull(\"collections\")) {\n+                        try {\n+                            stepOptions.put(\"collections\", Arrays.asList(mapper.readValue(artifactSettingsJson.get(\"collections\").toString(), String[].class)));\n+                        } catch (IOException e) {\n+                            logger.warn(\"Unable to parse collections from artifact settings\", e);\n+                        }\n+                    }\n+                    if (artifactSettingsJson.hasNonNull(\"permissions\")) {\n+                        stepOptions.put(\"permissions\", artifactSettingsJson.get(\"permissions\").asText());\n+                    }\n+                }\n             }\n         });\n     }\n"}}, {"oid": "019e0d1f3da8c12535288ee336b834eaffa0e76c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/019e0d1f3da8c12535288ee336b834eaffa0e76c", "message": "DHFPROD-4540: Added test for applyArtifactSettings", "committedDate": "2020-03-02T17:30:34Z", "type": "forcePushed"}, {"oid": "b0b0bd20ef17ce58667782230bcc9610038fabe1", "url": "https://github.com/marklogic/marklogic-data-hub/commit/b0b0bd20ef17ce58667782230bcc9610038fabe1", "message": "DHFPROD-4540: Added test for applyArtifactSettings", "committedDate": "2020-03-02T19:54:27Z", "type": "forcePushed"}, {"oid": "b0b0bd20ef17ce58667782230bcc9610038fabe1", "url": "https://github.com/marklogic/marklogic-data-hub/commit/b0b0bd20ef17ce58667782230bcc9610038fabe1", "message": "DHFPROD-4540: Added test for applyArtifactSettings", "committedDate": "2020-03-02T19:54:27Z", "type": "commit"}]}