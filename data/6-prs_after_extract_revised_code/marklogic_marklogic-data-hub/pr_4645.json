{"pr_number": 4645, "pr_title": "DHFPROD-5537:Default to step 1 if flow name and step are not provided", "pr_createdAt": "2020-09-30T06:41:07Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4645", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ5Njc4MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4645#discussion_r497496780", "bodyText": "Can you add an assertion on the Job document that gets created (which unfortunately is left in an unfinished state) on flowName = default-ingestion? I'm guessing that's not tested anywhere, so would be good to test here. There's no indication that the first step was run, although that's implied by the flow finishing successfully.", "author": "rjrudin", "createdAt": "2020-09-30T13:11:13Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/step/impl/RunDefaultIngestionTest.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package com.marklogic.hub.step.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.client.DatabaseClient;\n+import com.marklogic.client.datamovement.WriteBatcher;\n+import com.marklogic.client.document.ServerTransform;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.Format;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.StringHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+\n+public class RunDefaultIngestionTest extends AbstractHubCoreTest {\n+\n+    @Test\n+    void runDefaultIngestion(){\n+        ServerTransform serverTransform = new ServerTransform(\"mlRunIngest\");\n+        DatabaseClient stagingClient = getHubClient().getStagingClient();\n+        WriteBatcher writeBatcher = stagingClient.newDataMovementManager().newWriteBatcher()\n+            .withDefaultMetadata(new DocumentMetadataHandle().withPermission(\"data-hub-common\", DocumentMetadataHandle.Capability.READ))\n+            .withTransform(serverTransform);\n+        writeBatcher.add(\"/test.json\", new StringHandle(\"{\\\"testing\\\": \\\"value\\\"}\").withFormat(Format.JSON));\n+        writeBatcher.flushAndWait();\n+        JsonNode docNode = stagingClient.newJSONDocumentManager().read(\"/test.json\").next().getContent(new JacksonHandle()).get();\n+        Assertions.assertNotNull(docNode);\n+        Assertions.assertEquals(\"value\", docNode.get(\"envelope\").get(\"instance\").get(\"testing\").asText());", "originalCommit": "55898b826d8328686b09c2d7de58dddfe286d042", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2df30f3f8665e1d3cf209557fdd9b1f3a09201d5", "chunk": "diff --git a/marklogic-data-hub/src/test/java/com/marklogic/hub/step/impl/RunDefaultIngestionTest.java b/marklogic-data-hub/src/test/java/com/marklogic/hub/step/impl/RunDefaultIngestionTest.java\nindex f18f961fe..75f01b82a 100644\n--- a/marklogic-data-hub/src/test/java/com/marklogic/hub/step/impl/RunDefaultIngestionTest.java\n+++ b/marklogic-data-hub/src/test/java/com/marklogic/hub/step/impl/RunDefaultIngestionTest.java\n\n@@ -28,5 +28,9 @@ public class RunDefaultIngestionTest extends AbstractHubCoreTest {\n         JsonNode docNode = stagingClient.newJSONDocumentManager().read(\"/test.json\").next().getContent(new JacksonHandle()).get();\n         Assertions.assertNotNull(docNode);\n         Assertions.assertEquals(\"value\", docNode.get(\"envelope\").get(\"instance\").get(\"testing\").asText());\n+        DatabaseClient jobsClient = getHubClient().getJobsClient();\n+        JsonNode jobDoc = jobsClient.newServerEval().javascript(\"fn.head(fn.collection('Job'))\").evalAs(JsonNode.class);\n+        Assertions.assertNotNull(jobDoc);\n+        Assertions.assertEquals(\"default-ingestion\", jobDoc.get(\"job\").get(\"flow\").asText());\n     }\n }\n"}}, {"oid": "2df30f3f8665e1d3cf209557fdd9b1f3a09201d5", "url": "https://github.com/marklogic/marklogic-data-hub/commit/2df30f3f8665e1d3cf209557fdd9b1f3a09201d5", "message": "DHFPROD-5537:Default to step 1 if flow name and step are not provided", "committedDate": "2020-09-30T16:42:32Z", "type": "forcePushed"}, {"oid": "58b81f230d49203ad977a3b582f2f631cf6b523f", "url": "https://github.com/marklogic/marklogic-data-hub/commit/58b81f230d49203ad977a3b582f2f631cf6b523f", "message": "DHFPROD-5537:Default to step 1 if flow name and step are not provided", "committedDate": "2020-09-30T19:36:14Z", "type": "forcePushed"}, {"oid": "aef37186d65d8e7fbc0c94254aeab0b1e0e8cf66", "url": "https://github.com/marklogic/marklogic-data-hub/commit/aef37186d65d8e7fbc0c94254aeab0b1e0e8cf66", "message": "DHFPROD-5537:Default to step 1 if flow name and step are not provided", "committedDate": "2020-09-30T22:13:48Z", "type": "forcePushed"}, {"oid": "37f7c56ff4745ee8a3179c61383148543db41748", "url": "https://github.com/marklogic/marklogic-data-hub/commit/37f7c56ff4745ee8a3179c61383148543db41748", "message": "DHFPROD-5537:Default to step 1 if flow name and step are not provided", "committedDate": "2020-10-01T16:56:57Z", "type": "commit"}, {"oid": "37f7c56ff4745ee8a3179c61383148543db41748", "url": "https://github.com/marklogic/marklogic-data-hub/commit/37f7c56ff4745ee8a3179c61383148543db41748", "message": "DHFPROD-5537:Default to step 1 if flow name and step are not provided", "committedDate": "2020-10-01T16:56:57Z", "type": "forcePushed"}]}