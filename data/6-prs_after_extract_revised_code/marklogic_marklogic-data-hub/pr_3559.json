{"pr_number": 3559, "pr_title": "DHFPROD-4349: Middle-tier work to reject bad path input", "pr_createdAt": "2020-02-06T23:59:45Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3559", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0OTY5OQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#discussion_r376149699", "bodyText": "I recommend including the directory path in here for more context - e.g.\nthrow new IllegalArgumentException(\"Invalid project directory: \" + directory);\n\nI also try to avoid IOException whenever possible, as it's a checked exception. For almost all IO errors, it's unlikely that a client can do anything meaningful with it other than rethrow it.", "author": "rjrudin", "createdAt": "2020-02-07T00:01:03Z", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "diffHunk": "@@ -112,8 +113,11 @@ public void onError(String commandName, Exception exception) {\n         String directory = payload.get(\"directory\").asText(\"\");\n         // setting the project directory will resolve any relative paths\n         try {\n+            Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n                 throw new BadRequestException(\"Missing required directory property\");\n+            } else if (!(directoryPath.isAbsolute() || directoryPath.toFile().exists())) {\n+                throw new IOException(\"Invalid directory supplied\");", "originalCommit": "8ef1f57eae68cf8580231150514af7db04a1ff72", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c98af717dff5255e7c4a02f13712b51933565877", "chunk": "diff --git a/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java b/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\nindex 05f4124b7..ec4018a78 100644\n--- a/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\n+++ b/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\n\n@@ -116,8 +118,10 @@ public class EnvironmentController {\n             Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n                 throw new BadRequestException(\"Missing required directory property\");\n-            } else if (!(directoryPath.isAbsolute() || directoryPath.toFile().exists())) {\n-                throw new IOException(\"Invalid directory supplied\");\n+            } else if (!directoryPath.isAbsolute()) {\n+                throw new ProjectDirectoryException(\"Directory supplied must be an absolute path\");\n+            } else if (!directoryPath.toFile().exists()) {\n+                throw new ProjectDirectoryException(\"Directory '\" + directory + \"' does not exist or cannot be read\");\n             }\n             hubConfig.createProject(directory);\n             // Set the AppConfig with a new AppConfig with the new project directory to ensure it doesn't try to use the current directory\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1MDU0MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#discussion_r376150540", "bodyText": "Oh okay - IOException is being used as way of indicating that the project directory is unavailable. I think IOException is too broad for that - I can definitely see some other feature in the future throwing an IOException that has nothing to do with the project directory.\nI recommend creating an e.g. \"ProjectDirectoryException\" and catching any possible IOException from the code that tries to access the project directory. This code can then catch that exception without any concern that something else may throw the exception.", "author": "rjrudin", "createdAt": "2020-02-07T00:03:57Z", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/exceptions/CustomExceptionHandler.java", "diffHunk": "@@ -97,10 +97,10 @@ private String httpStatusSuggestion(HttpStatus httpStatus) {\n \n     private String exceptionSuggestion(Exception exception) {\n         Throwable rootException = exception;\n-        if (exception instanceof RuntimeException && exception.getCause() != null) {\n+        if (exception.getCause() != null) {\n             rootException = exception.getCause();\n         }\n-        if (rootException instanceof IOException) {\n+        if (rootException instanceof IOException || exception instanceof IOException) {", "originalCommit": "8ef1f57eae68cf8580231150514af7db04a1ff72", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c98af717dff5255e7c4a02f13712b51933565877", "chunk": "diff --git a/one-ui/src/main/java/com/marklogic/hub/oneui/exceptions/CustomExceptionHandler.java b/one-ui/src/main/java/com/marklogic/hub/oneui/exceptions/CustomExceptionHandler.java\nindex 1b09e62df..915353b2c 100644\n--- a/one-ui/src/main/java/com/marklogic/hub/oneui/exceptions/CustomExceptionHandler.java\n+++ b/one-ui/src/main/java/com/marklogic/hub/oneui/exceptions/CustomExceptionHandler.java\n\n@@ -96,11 +94,7 @@ public class CustomExceptionHandler extends ResponseEntityExceptionHandler {\n     }\n \n     private String exceptionSuggestion(Exception exception) {\n-        Throwable rootException = exception;\n-        if (exception.getCause() != null) {\n-            rootException = exception.getCause();\n-        }\n-        if (rootException instanceof IOException || exception instanceof IOException) {\n+        if (exception instanceof ProjectDirectoryException) {\n             return \"Verify that the user account running the service has permissions to read from or write to the project directory.\";\n         } else {\n             return \"Contact your server administrator.\";\n"}}, {"oid": "c98af717dff5255e7c4a02f13712b51933565877", "url": "https://github.com/marklogic/marklogic-data-hub/commit/c98af717dff5255e7c4a02f13712b51933565877", "message": "DHFPROD-4349: Middle-tier work to reject bad path input", "committedDate": "2020-02-07T00:25:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4MTUxMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#discussion_r376481512", "bodyText": "I think it's worth including the directory here as well - e.g.\n\"Project directory must be an absolute path: \" + directory", "author": "rjrudin", "createdAt": "2020-02-07T16:22:50Z", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "diffHunk": "@@ -112,8 +115,13 @@ public void onError(String commandName, Exception exception) {\n         String directory = payload.get(\"directory\").asText(\"\");\n         // setting the project directory will resolve any relative paths\n         try {\n+            Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n                 throw new BadRequestException(\"Missing required directory property\");\n+            } else if (!directoryPath.isAbsolute()) {\n+                throw new ProjectDirectoryException(\"Directory supplied must be an absolute path\");", "originalCommit": "c98af717dff5255e7c4a02f13712b51933565877", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1b3c519e15b328aac235c2e02ebef712fe86f20a", "chunk": "diff --git a/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java b/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\nindex ec4018a78..48f3b0b51 100644\n--- a/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\n+++ b/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\n\n@@ -117,11 +117,11 @@ public class EnvironmentController {\n         try {\n             Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n-                throw new BadRequestException(\"Missing required directory property\");\n+                throw new BadRequestException(\"Property 'directory', identifying project location, not specified\");\n             } else if (!directoryPath.isAbsolute()) {\n-                throw new ProjectDirectoryException(\"Directory supplied must be an absolute path\");\n+                throw new ProjectDirectoryException(\"Project directory supplied must be an absolute path: \" + directory);\n             } else if (!directoryPath.toFile().exists()) {\n-                throw new ProjectDirectoryException(\"Directory '\" + directory + \"' does not exist or cannot be read\");\n+                throw new ProjectDirectoryException(\"Project directory '\" + directory + \"' does not exist or cannot be read\");\n             }\n             hubConfig.createProject(directory);\n             // Set the AppConfig with a new AppConfig with the new project directory to ensure it doesn't try to use the current directory\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4MTc1Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#discussion_r376481752", "bodyText": "I'd clarify this too as \"Project directory\".", "author": "rjrudin", "createdAt": "2020-02-07T16:23:18Z", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "diffHunk": "@@ -112,8 +115,13 @@ public void onError(String commandName, Exception exception) {\n         String directory = payload.get(\"directory\").asText(\"\");\n         // setting the project directory will resolve any relative paths\n         try {\n+            Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n                 throw new BadRequestException(\"Missing required directory property\");\n+            } else if (!directoryPath.isAbsolute()) {\n+                throw new ProjectDirectoryException(\"Directory supplied must be an absolute path\");\n+            } else if (!directoryPath.toFile().exists()) {\n+                throw new ProjectDirectoryException(\"Directory '\" + directory + \"' does not exist or cannot be read\");", "originalCommit": "c98af717dff5255e7c4a02f13712b51933565877", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg2MjcwMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#discussion_r376862701", "bodyText": "@ryanjdew before this check we could provide a path and the missing directory would be created during install. There is no requirement around that. But this implementation now enforces a directory to exist. Is that something we want to do?\nAlso @wooldridge, these exceptions are thrown as a \"message\" and UI shows \"suggestion\" for all the above conditions -- \"Verify that the user account running the service has permissions to read from or write to the project directory.\"\nThis install-form.tsx snippet might have to change if we want the message to show up in GUI:\nlet message = (error.response.status === 500) ? 'Internal Server Error' : error.response.data.message;\n      setIsLoading(false);\n      setErrorMessage({\n        show: true, \n        message: 'Installation Failure', \n          description: <><p>{message}</p><p>{error.response.data.suggestion}</p></>\n      });", "author": "bsrikan", "createdAt": "2020-02-10T04:16:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4MTc1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1b3c519e15b328aac235c2e02ebef712fe86f20a", "chunk": "diff --git a/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java b/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\nindex ec4018a78..48f3b0b51 100644\n--- a/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\n+++ b/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\n\n@@ -117,11 +117,11 @@ public class EnvironmentController {\n         try {\n             Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n-                throw new BadRequestException(\"Missing required directory property\");\n+                throw new BadRequestException(\"Property 'directory', identifying project location, not specified\");\n             } else if (!directoryPath.isAbsolute()) {\n-                throw new ProjectDirectoryException(\"Directory supplied must be an absolute path\");\n+                throw new ProjectDirectoryException(\"Project directory supplied must be an absolute path: \" + directory);\n             } else if (!directoryPath.toFile().exists()) {\n-                throw new ProjectDirectoryException(\"Directory '\" + directory + \"' does not exist or cannot be read\");\n+                throw new ProjectDirectoryException(\"Project directory '\" + directory + \"' does not exist or cannot be read\");\n             }\n             hubConfig.createProject(directory);\n             // Set the AppConfig with a new AppConfig with the new project directory to ensure it doesn't try to use the current directory\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4MjE2NA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#discussion_r376482164", "bodyText": "Same thing - I think it's good to qualify this as the \"Project directory\" - e.g.\n\"Project directory not specified\"", "author": "rjrudin", "createdAt": "2020-02-07T16:23:56Z", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "diffHunk": "@@ -112,8 +115,13 @@ public void onError(String commandName, Exception exception) {\n         String directory = payload.get(\"directory\").asText(\"\");\n         // setting the project directory will resolve any relative paths\n         try {\n+            Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n                 throw new BadRequestException(\"Missing required directory property\");", "originalCommit": "c98af717dff5255e7c4a02f13712b51933565877", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1b3c519e15b328aac235c2e02ebef712fe86f20a", "chunk": "diff --git a/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java b/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\nindex ec4018a78..48f3b0b51 100644\n--- a/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\n+++ b/one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java\n\n@@ -117,11 +117,11 @@ public class EnvironmentController {\n         try {\n             Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n-                throw new BadRequestException(\"Missing required directory property\");\n+                throw new BadRequestException(\"Property 'directory', identifying project location, not specified\");\n             } else if (!directoryPath.isAbsolute()) {\n-                throw new ProjectDirectoryException(\"Directory supplied must be an absolute path\");\n+                throw new ProjectDirectoryException(\"Project directory supplied must be an absolute path: \" + directory);\n             } else if (!directoryPath.toFile().exists()) {\n-                throw new ProjectDirectoryException(\"Directory '\" + directory + \"' does not exist or cannot be read\");\n+                throw new ProjectDirectoryException(\"Project directory '\" + directory + \"' does not exist or cannot be read\");\n             }\n             hubConfig.createProject(directory);\n             // Set the AppConfig with a new AppConfig with the new project directory to ensure it doesn't try to use the current directory\n"}}, {"oid": "1b3c519e15b328aac235c2e02ebef712fe86f20a", "url": "https://github.com/marklogic/marklogic-data-hub/commit/1b3c519e15b328aac235c2e02ebef712fe86f20a", "message": "DHFPROD-4349: Middle-tier work to reject bad path input", "committedDate": "2020-02-07T17:27:21Z", "type": "commit"}, {"oid": "1b3c519e15b328aac235c2e02ebef712fe86f20a", "url": "https://github.com/marklogic/marklogic-data-hub/commit/1b3c519e15b328aac235c2e02ebef712fe86f20a", "message": "DHFPROD-4349: Middle-tier work to reject bad path input", "committedDate": "2020-02-07T17:27:21Z", "type": "forcePushed"}]}