{"pr_number": 4114, "pr_title": "DHFPROD-4180: Delete entity model", "pr_createdAt": "2020-06-18T20:21:19Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4114", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjQwNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r442522406", "bodyText": "There are a few other tests that depend on this folder - let's hold off on renaming this, as it's adding to the number of files modified in this PR.", "author": "rjrudin", "createdAt": "2020-06-18T21:51:41Z", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/hubcentral/ApplyDownloadedZipToProjectTest.java", "diffHunk": "@@ -36,7 +36,7 @@\n      */\n     @Test\n     void deleteOneEntityThenDownloadAndApply() {\n-        installProjectInFolder(\"test-projects/all-artifacts\");\n+        installProjectInFolder(\"test-projects/download-artifacts\");", "originalCommit": "499bdabdf6b331062396150dae900a0dc871fc47", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzMzU2MA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r442533560", "bodyText": "Since we are deleting the entity model which is referenced by a couple of mapping artifacts in the ApplyDownloadedZipToProjectTest it used to fail based on the new changes in this PR.\nI created a new project called download-artifacts based on the all-artifacts(not touching it since other tests depend on it) project, the difference here is that I've removed the steps that referenced the Entity that was being deleted so the tests can pass.", "author": "akshaysonvane", "createdAt": "2020-06-18T22:22:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjQwNg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "586bcb28b49b7af71c033acd179c002c0f218e07", "url": "https://github.com/marklogic/marklogic-data-hub/commit/586bcb28b49b7af71c033acd179c002c0f218e07", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-18T22:29:41Z", "type": "forcePushed"}, {"oid": "c99842fef1e71a10c8064f9d60a7b8db08856f92", "url": "https://github.com/marklogic/marklogic-data-hub/commit/c99842fef1e71a10c8064f9d60a7b8db08856f92", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-19T23:18:38Z", "type": "forcePushed"}, {"oid": "bf30fb133ca9217098757fe619c18aa56bb17ac9", "url": "https://github.com/marklogic/marklogic-data-hub/commit/bf30fb133ca9217098757fe619c18aa56bb17ac9", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-20T01:49:13Z", "type": "forcePushed"}, {"oid": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/3cb193feff072b96ea7d2a06318fc27d66f6775c", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-20T20:15:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYwNDcyNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443604726", "bodyText": "I think it's important to document why we're not doing anything with indexes or protected paths here because we don't have a reliable way to identify the ones to delete and we only expect entity types to be deleted in a development environment where it's usually fine if some old indexes / protected paths hang around. I say this because when I looked at this, I immediately thought - what about indexes? - before remembering that we're taking the approach above. 6 months from now, we'll be glad we have a comment here explaining why.", "author": "rjrudin", "createdAt": "2020-06-22T14:34:52Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java", "diffHunk": "@@ -90,6 +90,21 @@\n         return new ResponseEntity<>(HttpStatus.OK);\n     }\n \n+    @RequestMapping(value = \"/{modelName}\", method = RequestMethod.DELETE)\n+    @Secured(\"ROLE_writeEntityModel\")\n+    public ResponseEntity<Void> deleteModel(@PathVariable String modelName) {\n+        newService().deleteModel(modelName);", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bed829cf79edf69981f6c846114c78936faef13", "chunk": "diff --git a/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java b/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java\nindex f1f9d0749..111a0b8cf 100644\n--- a/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java\n+++ b/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java\n\n@@ -94,8 +94,15 @@ public class ModelController extends BaseController {\n     @Secured(\"ROLE_writeEntityModel\")\n     public ResponseEntity<Void> deleteModel(@PathVariable String modelName) {\n         newService().deleteModel(modelName);\n+\n+        /*\n+        * We're not doing anything with indexes or protected paths here because we don't have a reliable way to\n+        * identify the ones to delete and we only expect entity types to be deleted\n+        * in a development environment where it's usually fine if some old indexes / protected paths hang around.\n+        */\n         logger.info(\"Deploying search options\");\n         deploySearchOptions(newService().generateModelConfig());\n+\n         return emptyOk();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYwOTEyNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443609127", "bodyText": "I appreciate the intent here, but I don't think it's easy for a reader to understand what's going on here. I think a more descriptive method name would be \"doAsDeveloperAndThenLoginAs\" but that's pretty wordy.\nI actually prefer how it reads before. I think the only thing being avoided by the new approach is the call to \"loginAsTestUserWithRoles\", and I think it's beneficial for a reader to see that so the reader knows that the user is being switched. I'm good with shortening that to loginAsTestUser(String... roles), I think the \"WithRoles\" is probably unnecessary.", "author": "rjrudin", "createdAt": "2020-06-22T14:40:22Z", "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/MappingControllerTest.java", "diffHunk": "@@ -31,11 +31,10 @@\n \n     @Test\n     void testValidateMappings() throws Exception {\n-        runAsDataHubDeveloper();\n-        ReferenceModelProject project = installOnlyReferenceModelEntities();\n-        project.createRawCustomer(1, \"Jane\");\n-\n-        loginAsTestUserWithRoles(\"hub-central-mapping-reader\");\n+        elevateToDeveloperRole(() -> {", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bed829cf79edf69981f6c846114c78936faef13", "chunk": "diff --git a/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/MappingControllerTest.java b/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/MappingControllerTest.java\nindex d9f6f933f..d8aab2e37 100644\n--- a/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/MappingControllerTest.java\n+++ b/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/MappingControllerTest.java\n\n@@ -31,10 +31,11 @@ public class MappingControllerTest extends AbstractMvcTest {\n \n     @Test\n     void testValidateMappings() throws Exception {\n-        elevateToDeveloperRole(() -> {\n-            ReferenceModelProject project = installOnlyReferenceModelEntities();\n-            project.createRawCustomer(1, \"Jane\");\n-        }, \"hub-central-mapping-reader\");\n+        runAsDataHubDeveloper();\n+        ReferenceModelProject project = installOnlyReferenceModelEntities();\n+        project.createRawCustomer(1, \"Jane\");\n+\n+        loginAsTestUserWithRoles(\"hub-central-mapping-reader\");\n \n         postJson(\"/api/artifacts/mapping/validation?uri=/customer1.json&db=data-hub-STAGING\", VALID_MAPPING)\n             .andExpect(status().isOk())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYwOTc0Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443609747", "bodyText": "WithMockUser shouldn't be needed anymore, right?", "author": "rjrudin", "createdAt": "2020-06-22T14:41:11Z", "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/model/DeleteModelTest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package com.marklogic.hub.central.controllers.model;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.client.DatabaseClient;\n+import com.marklogic.client.FailedRequestException;\n+import com.marklogic.client.document.GenericDocumentManager;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.hub.central.controllers.ModelController;\n+import com.marklogic.hub.impl.EntityManagerImpl;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import java.util.function.Consumer;\n+import java.util.stream.Stream;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class DeleteModelTest extends AbstractModelTest {\n+\n+    @Autowired\n+    ModelController controller;\n+\n+    @Test\n+    @WithMockUser(roles = {\"writeEntityModel\"})", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1ODAxNA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443658014", "bodyText": "It's required to make spring security happy as this is not using the MockMvc test framework.", "author": "akshaysonvane", "createdAt": "2020-06-22T15:49:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYwOTc0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9bed829cf79edf69981f6c846114c78936faef13", "chunk": "diff --git a/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/model/DeleteModelTest.java b/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/model/DeleteModelTest.java\nindex 45ccd2663..bb1396c9c 100644\n--- a/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/model/DeleteModelTest.java\n+++ b/marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/model/DeleteModelTest.java\n\n@@ -25,11 +25,11 @@ public class DeleteModelTest extends AbstractModelTest {\n     @Test\n     @WithMockUser(roles = {\"writeEntityModel\"})\n     void testModelDeletionEndpoints() {\n-        elevateToDeveloperRole(() -> {\n-            installProjectInFolder(\"test-projects/delete-model-project\");\n-            new EntityManagerImpl(getHubConfig()).deployQueryOptions();\n-        }, \"hub-central-entity-model-writer\");\n+        runAsDataHubDeveloper();\n+        installProjectInFolder(\"test-projects/delete-model-project\");\n+        new EntityManagerImpl(getHubConfig()).deployQueryOptions();\n \n+        runAsTestUserWithRoles(\"hub-central-entity-model-writer\");\n         verifyEntity2BasedArtifactsExist();\n         getModelReferences();\n         deleteModel();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMDUyMA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443610520", "bodyText": "Since the \"models\" list contains entity names, this should really be called \"entityNames\", not \"models\". My assumption is that if something is called \"models\", it's a list of JSON entity models.", "author": "rjrudin", "createdAt": "2020-06-22T14:42:10Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java", "diffHunk": "@@ -253,4 +268,9 @@ private ModelsService newService() {\n     public static class UpdateModelInfoInput {\n         public String description;\n     }\n+\n+    public static class ModelReferencesInfo {\n+        public List<String> steps;\n+        public List<String> models;", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bed829cf79edf69981f6c846114c78936faef13", "chunk": "diff --git a/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java b/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java\nindex f1f9d0749..111a0b8cf 100644\n--- a/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java\n+++ b/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java\n\n@@ -270,7 +277,7 @@ public class ModelController extends BaseController {\n     }\n \n     public static class ModelReferencesInfo {\n-        public List<String> steps;\n-        public List<String> models;\n+        public List<String> stepAndMappingNames;\n+        public List<String> entityNames;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMTY1OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443611658", "bodyText": "Pinging @ryanjdew  on this - why the change here? I believe \"/\" was included to ensure that the base URI ends with a \"/\" which I think is a requirement of ES. Perhaps the \"/\" should only be included if info.getBaseUri() doesn't end with \"/\"?", "author": "rjrudin", "createdAt": "2020-06-22T14:43:40Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/mapping/MappingImpl.java", "diffHunk": "@@ -61,7 +61,7 @@ public MappingImpl(String name, HubEntity entity) {\n         if (entity != null) {\n             InfoType info = entity.getInfo();\n             if (info != null) {\n-                String prefix = info.getBaseUri() != null ? info.getBaseUri() + \"/\" : \"\";\n+                String prefix = info.getBaseUri() != null ? info.getBaseUri() : \"\";", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY1OTY3NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443659675", "bodyText": "This just reverts the changes made in #4065 since we do need a baseUri to end with /", "author": "akshaysonvane", "createdAt": "2020-06-22T15:52:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMTY1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY4NjY0NQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443686645", "bodyText": "@rjrudin Entity Services will add the slash (\"/\") appropriately whether or not the base URI ends with a slash.", "author": "ryanjdew", "createdAt": "2020-06-22T16:34:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMTY1OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMzgyMQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443613821", "bodyText": "Note that when you do need a no-arg no-return-value interface in the future, you can just use Runnable instead.", "author": "rjrudin", "createdAt": "2020-06-22T14:46:35Z", "path": "marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/Action.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.marklogic.hub.test;\n+\n+/**\n+ * Represents an operation that accepts no input arguments and returns no\n+ * result.\n+ */\n+@FunctionalInterface\n+public interface Action {\n+    \n+    void execute();", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2MDM1OA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443660358", "bodyText": "I did not use Runnable as it is associated with threads and might cause confusion in the future.", "author": "akshaysonvane", "createdAt": "2020-06-22T15:53:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxMzgyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "f6ecf6f0f3e31c5bcac0130d467701d143cebf31", "chunk": "diff --git a/marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/Action.java b/marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/Action.java\ndeleted file mode 100644\nindex 5d631e32a..000000000\n--- a/marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/Action.java\n+++ /dev/null\n\n@@ -1,11 +0,0 @@\n-package com.marklogic.hub.test;\n-\n-/**\n- * Represents an operation that accepts no input arguments and returns no\n- * result.\n- */\n-@FunctionalInterface\n-public interface Action {\n-    \n-    void execute();\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYxODEwNg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4114#discussion_r443618106", "bodyText": "A \"step\" is a JSON object. Looking at the impl below, it looks like these are step names, with one exception - mapping names can be in here as well (sigh). To account for this, I think it's best to be verbose here and call this \"stepAndMappingNames\", because the list can contain a combination of step and mapping names. That's not pretty, but it captures the reality.", "author": "rjrudin", "createdAt": "2020-06-22T14:52:24Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java", "diffHunk": "@@ -253,4 +268,9 @@ private ModelsService newService() {\n     public static class UpdateModelInfoInput {\n         public String description;\n     }\n+\n+    public static class ModelReferencesInfo {\n+        public List<String> steps;", "originalCommit": "3cb193feff072b96ea7d2a06318fc27d66f6775c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bed829cf79edf69981f6c846114c78936faef13", "chunk": "diff --git a/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java b/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java\nindex f1f9d0749..111a0b8cf 100644\n--- a/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java\n+++ b/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/ModelController.java\n\n@@ -270,7 +277,7 @@ public class ModelController extends BaseController {\n     }\n \n     public static class ModelReferencesInfo {\n-        public List<String> steps;\n-        public List<String> models;\n+        public List<String> stepAndMappingNames;\n+        public List<String> entityNames;\n     }\n }\n"}}, {"oid": "9bed829cf79edf69981f6c846114c78936faef13", "url": "https://github.com/marklogic/marklogic-data-hub/commit/9bed829cf79edf69981f6c846114c78936faef13", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-22T16:42:46Z", "type": "forcePushed"}, {"oid": "b981c75ad1a80a87b47ef4a165d22155a235919d", "url": "https://github.com/marklogic/marklogic-data-hub/commit/b981c75ad1a80a87b47ef4a165d22155a235919d", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-22T17:05:39Z", "type": "forcePushed"}, {"oid": "4095330c63e7de5046861e83d87d81c80af384a9", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4095330c63e7de5046861e83d87d81c80af384a9", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-22T17:07:23Z", "type": "forcePushed"}, {"oid": "f6ecf6f0f3e31c5bcac0130d467701d143cebf31", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f6ecf6f0f3e31c5bcac0130d467701d143cebf31", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-22T17:10:06Z", "type": "commit"}, {"oid": "f6ecf6f0f3e31c5bcac0130d467701d143cebf31", "url": "https://github.com/marklogic/marklogic-data-hub/commit/f6ecf6f0f3e31c5bcac0130d467701d143cebf31", "message": "DHFPROD-4180: Delete entity model", "committedDate": "2020-06-22T17:10:06Z", "type": "forcePushed"}]}