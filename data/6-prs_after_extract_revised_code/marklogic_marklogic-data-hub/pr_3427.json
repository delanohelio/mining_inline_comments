{"pr_number": 3427, "pr_title": "DHFPROD-2691:Prohibit DHS users from updating DHF modules", "pr_createdAt": "2020-01-06T19:12:13Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/3427", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ1MDIwMg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3427#discussion_r363450202", "bodyText": "This should be SortOrderConstants.LOAD_MODULES + 1 to ensure that the modules have all been loaded already.", "author": "rjrudin", "createdAt": "2020-01-06T19:40:15Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/UpdateDhsModulesPermissionsCommand.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2012-2019 MarkLogic Corporation\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.marklogic.hub.deploy.commands;\n+\n+import com.marklogic.appdeployer.command.AbstractCommand;\n+import com.marklogic.appdeployer.command.CommandContext;\n+import com.marklogic.appdeployer.command.SortOrderConstants;\n+import com.marklogic.client.ext.modulesloader.Modules;\n+import com.marklogic.client.ext.modulesloader.impl.DefaultModulesFinder;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.dataservices.UpdateDhsResourcePermissions;\n+import org.apache.commons.io.FilenameUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+\n+@Component\n+public class UpdateDhsModulesPermissionsCommand extends AbstractCommand {\n+\n+    @Autowired\n+    private HubConfig hubConfig;\n+    private UpdateDhsResourcePermissions service;\n+\n+    //This command has to be run after LoadHubModulesCommand is run.\n+    public UpdateDhsModulesPermissionsCommand() {\n+        setExecuteSortOrder(SortOrderConstants.LOAD_MODULES);", "originalCommit": "20f340706d34667a0cb2835c6c56ff6073522b68", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68d0bd909de3550e5ef07faa830e46d755170308", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/UpdateDhsModulesPermissionsCommand.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/UpdateDhsModulesPermissionsCommand.java\ndeleted file mode 100644\nindex 435d88e62..000000000\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/UpdateDhsModulesPermissionsCommand.java\n+++ /dev/null\n\n@@ -1,64 +0,0 @@\n-/*\n- * Copyright 2012-2019 MarkLogic Corporation\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.marklogic.hub.deploy.commands;\n-\n-import com.marklogic.appdeployer.command.AbstractCommand;\n-import com.marklogic.appdeployer.command.CommandContext;\n-import com.marklogic.appdeployer.command.SortOrderConstants;\n-import com.marklogic.client.ext.modulesloader.Modules;\n-import com.marklogic.client.ext.modulesloader.impl.DefaultModulesFinder;\n-import com.marklogic.hub.HubConfig;\n-import com.marklogic.hub.dataservices.UpdateDhsResourcePermissions;\n-import org.apache.commons.io.FilenameUtils;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.core.io.Resource;\n-import org.springframework.stereotype.Component;\n-\n-import java.util.List;\n-\n-@Component\n-public class UpdateDhsModulesPermissionsCommand extends AbstractCommand {\n-\n-    @Autowired\n-    private HubConfig hubConfig;\n-    private UpdateDhsResourcePermissions service;\n-\n-    //This command has to be run after LoadHubModulesCommand is run.\n-    public UpdateDhsModulesPermissionsCommand() {\n-        setExecuteSortOrder(SortOrderConstants.LOAD_MODULES);\n-    }\n-    private UpdateDhsResourcePermissions getService(){\n-        if(service == null) {\n-            service = UpdateDhsResourcePermissions.on(hubConfig.newStagingClient(null));\n-        }\n-        return service;\n-    }\n-    @Override\n-    public void execute(CommandContext context) {\n-        DefaultModulesFinder moduleFinder = new DefaultModulesFinder();\n-        Modules modules = moduleFinder.findModules(\"classpath*:/ml-modules\");\n-\n-        List<Resource> restServices =  modules.getServices();\n-        for(Resource r : restServices){\n-            getService().updateResourcePermissions(\"resource\", FilenameUtils.removeExtension(r.getFilename()));\n-        }\n-\n-        List<Resource> transformServices =  modules.getTransforms();\n-        for(Resource r : transformServices){\n-            getService().updateResourcePermissions(\"transform\", FilenameUtils.removeExtension(r.getFilename()));\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ1MDc5MQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3427#discussion_r363450791", "bodyText": "Can you remove this so there's one less modification to FlowRunnerImpl? Keeps the version history cleaner.", "author": "rjrudin", "createdAt": "2020-01-06T19:41:39Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "diffHunk": "@@ -5,6 +5,7 @@\n import com.marklogic.client.io.JacksonHandle;\n import com.marklogic.hub.FlowManager;\n import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.Flow;", "originalCommit": "20f340706d34667a0cb2835c6c56ff6073522b68", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68d0bd909de3550e5ef07faa830e46d755170308", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\nindex 6c8c3fbd5..9142c47aa 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\n\n@@ -5,7 +5,6 @@ import com.fasterxml.jackson.databind.ObjectMapper;\n import com.marklogic.client.io.JacksonHandle;\n import com.marklogic.hub.FlowManager;\n import com.marklogic.hub.HubConfig;\n-import com.marklogic.hub.flow.Flow;\n import com.marklogic.hub.flow.*;\n import com.marklogic.hub.impl.HubConfigImpl;\n import com.marklogic.hub.job.JobDocManager;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ1NTQ4Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3427#discussion_r363455487", "bodyText": "This command is specific to installing DHF into DHS, so a few notes on it:\n\nIt should be in the com.marklogic.hub.cli.deploy package along with the other 2 commands specific to installing DHF into DHS\nIt shouldn't be a Spring component - InstallIntoDhsCommand should just pass a HubConfig into its constructor (similar to CopyQueryOptionsCommand)\n\nAnd then regarding the use of data services - I don't think we should do that for a deployment concern. CopyQueryOptionsCommand is using the /v1/eval endpoint to mess around with query options as part of installing DHF into DHS. For consistency and simplicity, I think this command should follow the same approach - i.e. build a script and send it to /v1/eval. Building a script inside of Java code isn't the cleanest thing ever, but I think it's suitable for a deployment concern - whereas Data Services is absolutely the best approach for any interface that we want a customer to be able to invoke (but we definitely don't want a customer invoking this endpoint).", "author": "rjrudin", "createdAt": "2020-01-06T19:53:13Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/UpdateDhsModulesPermissionsCommand.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2012-2019 MarkLogic Corporation\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.marklogic.hub.deploy.commands;\n+\n+import com.marklogic.appdeployer.command.AbstractCommand;\n+import com.marklogic.appdeployer.command.CommandContext;\n+import com.marklogic.appdeployer.command.SortOrderConstants;\n+import com.marklogic.client.ext.modulesloader.Modules;\n+import com.marklogic.client.ext.modulesloader.impl.DefaultModulesFinder;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.dataservices.UpdateDhsResourcePermissions;\n+import org.apache.commons.io.FilenameUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+\n+@Component\n+public class UpdateDhsModulesPermissionsCommand extends AbstractCommand {", "originalCommit": "20f340706d34667a0cb2835c6c56ff6073522b68", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68d0bd909de3550e5ef07faa830e46d755170308", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/UpdateDhsModulesPermissionsCommand.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/UpdateDhsModulesPermissionsCommand.java\ndeleted file mode 100644\nindex 435d88e62..000000000\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/UpdateDhsModulesPermissionsCommand.java\n+++ /dev/null\n\n@@ -1,64 +0,0 @@\n-/*\n- * Copyright 2012-2019 MarkLogic Corporation\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.marklogic.hub.deploy.commands;\n-\n-import com.marklogic.appdeployer.command.AbstractCommand;\n-import com.marklogic.appdeployer.command.CommandContext;\n-import com.marklogic.appdeployer.command.SortOrderConstants;\n-import com.marklogic.client.ext.modulesloader.Modules;\n-import com.marklogic.client.ext.modulesloader.impl.DefaultModulesFinder;\n-import com.marklogic.hub.HubConfig;\n-import com.marklogic.hub.dataservices.UpdateDhsResourcePermissions;\n-import org.apache.commons.io.FilenameUtils;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.core.io.Resource;\n-import org.springframework.stereotype.Component;\n-\n-import java.util.List;\n-\n-@Component\n-public class UpdateDhsModulesPermissionsCommand extends AbstractCommand {\n-\n-    @Autowired\n-    private HubConfig hubConfig;\n-    private UpdateDhsResourcePermissions service;\n-\n-    //This command has to be run after LoadHubModulesCommand is run.\n-    public UpdateDhsModulesPermissionsCommand() {\n-        setExecuteSortOrder(SortOrderConstants.LOAD_MODULES);\n-    }\n-    private UpdateDhsResourcePermissions getService(){\n-        if(service == null) {\n-            service = UpdateDhsResourcePermissions.on(hubConfig.newStagingClient(null));\n-        }\n-        return service;\n-    }\n-    @Override\n-    public void execute(CommandContext context) {\n-        DefaultModulesFinder moduleFinder = new DefaultModulesFinder();\n-        Modules modules = moduleFinder.findModules(\"classpath*:/ml-modules\");\n-\n-        List<Resource> restServices =  modules.getServices();\n-        for(Resource r : restServices){\n-            getService().updateResourcePermissions(\"resource\", FilenameUtils.removeExtension(r.getFilename()));\n-        }\n-\n-        List<Resource> transformServices =  modules.getTransforms();\n-        for(Resource r : transformServices){\n-            getService().updateResourcePermissions(\"transform\", FilenameUtils.removeExtension(r.getFilename()));\n-        }\n-    }\n-}\n"}}, {"oid": "68d0bd909de3550e5ef07faa830e46d755170308", "url": "https://github.com/marklogic/marklogic-data-hub/commit/68d0bd909de3550e5ef07faa830e46d755170308", "message": "DHFPROD-2691:Prohibit DHS users from updating DHF modules", "committedDate": "2020-01-06T21:43:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzODIyMw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3427#discussion_r363538223", "bodyText": "One small tweak here - this new command is specific to InstallIntoDhsCommand, there's no need for DataHubImpl to know about it. Just add it to the list of commands in InstallIntoDhsCommand, just like CopyQueryOptionsCommand.", "author": "rjrudin", "createdAt": "2020-01-06T23:57:31Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "diffHunk": "@@ -830,6 +796,9 @@ private void updateModuleCommandList(Map<String, List<Command>> commandsMap) {\n         commands.add(loadUserArtifactsCommand);\n         commands.add(loadHubArtifactsCommand);\n         commands.add(generateFunctionMetadataCommand);\n+        if(hubConfig.getIsProvisionedEnvironment()){", "originalCommit": "68d0bd909de3550e5ef07faa830e46d755170308", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "517f138b33274a6a27e5a2dddf273c8898cf18ca", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java\nindex ec6852e96..3f1828c5c 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java\n\n@@ -796,9 +830,6 @@ public class DataHubImpl implements DataHub {\n         commands.add(loadUserArtifactsCommand);\n         commands.add(loadHubArtifactsCommand);\n         commands.add(generateFunctionMetadataCommand);\n-        if(hubConfig.getIsProvisionedEnvironment()){\n-            commands.add(new UpdateDhsModulesPermissionsCommand(hubConfig));\n-        }\n \n         for (Command c : commandsMap.get(\"mlModuleCommands\")) {\n             if (c instanceof LoadModulesCommand) {\n"}}, {"oid": "517f138b33274a6a27e5a2dddf273c8898cf18ca", "url": "https://github.com/marklogic/marklogic-data-hub/commit/517f138b33274a6a27e5a2dddf273c8898cf18ca", "message": "DHFPROD-2691:Prohibit DHS users from updating DHF modules", "committedDate": "2020-01-07T00:21:40Z", "type": "commit"}, {"oid": "517f138b33274a6a27e5a2dddf273c8898cf18ca", "url": "https://github.com/marklogic/marklogic-data-hub/commit/517f138b33274a6a27e5a2dddf273c8898cf18ca", "message": "DHFPROD-2691:Prohibit DHS users from updating DHF modules", "committedDate": "2020-01-07T00:21:40Z", "type": "forcePushed"}]}