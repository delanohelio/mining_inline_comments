{"pr_number": 4161, "pr_title": "DHFPROD-5286: Processing URIs for a step now uses DS endpoint", "pr_createdAt": "2020-06-26T20:47:01Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4161", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMTIzOA==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4161#discussion_r446411238", "bodyText": "Should we use batch.getClient() to initialize the StepRunnerService so that request will be sent to all nodes?\nSilvano had previously filed a bug for this https://project.marklogic.com/jira/browse/DHFPROD-1172", "author": "akshaysonvane", "createdAt": "2020-06-26T21:09:31Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/step/impl/QueryStepRunner.java", "diffHunk": "@@ -373,33 +348,38 @@ private RunStepResponse runHarmonizer(RunStepResponse runStepResponse, Collectio\n         Vector<String> errorMessages = new Vector<>();\n \n         // The client used here doesn't matter, given that a QueryBatcher is going to be constructed based on an\n-        // Iterator. It's the construction of the FlowResource that matters, as that makes use of destinationDatabase\n-        // to control where outputted documents are written to.\n+        // Iterator. It's the step options that determine where documents are written to.\n         dataMovementManager = hubClient.getStagingClient().newDataMovementManager();\n \n+        final StepRunnerService stepRunnerService = StepRunnerService.on(hubClient.getStagingClient());", "originalCommit": "7c467ae999ab6977fe6a7b067c1b67576e551f48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMjkwNQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4161#discussion_r446412905", "bodyText": "Ah - I'll add that back in and add a comment to explain why it's being done.", "author": "rjrudin", "createdAt": "2020-06-26T21:13:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMTIzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxNDI0Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4161#discussion_r446414242", "bodyText": "I made the change - presumably, the DatabaseClient will not have \"database\" set on it, since the DC used to construct the DataMovementManager doesn't either. If \"database\" is set, the DataServices-generated interface will complain.", "author": "rjrudin", "createdAt": "2020-06-26T21:17:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMTIzOA=="}], "type": "inlineReview", "revised_code": {"commit": "4187d3edcded0322d0ce19c785493d750afa3bd0", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/step/impl/QueryStepRunner.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/step/impl/QueryStepRunner.java\nindex 43c726ab8..5a02e88d9 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/step/impl/QueryStepRunner.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/step/impl/QueryStepRunner.java\n\n@@ -351,7 +351,6 @@ public class QueryStepRunner implements StepRunner {\n         // Iterator. It's the step options that determine where documents are written to.\n         dataMovementManager = hubClient.getStagingClient().newDataMovementManager();\n \n-        final StepRunnerService stepRunnerService = StepRunnerService.on(hubClient.getStagingClient());\n         final ObjectMapper objectMapper = new ObjectMapper();\n \n         double batchCount = Math.ceil((double) uris.size() / (double) batchSize);\n"}}, {"oid": "4187d3edcded0322d0ce19c785493d750afa3bd0", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4187d3edcded0322d0ce19c785493d750afa3bd0", "message": "DHFPROD-5286: Processing URIs for a step now uses DS endpoint\n\nAll inputs are passed in a JSON object to the DS endpoint. This fixes an issue where the mlRunFlow endpoint fails when the string of request parameters is too long (mostly due to the length of each URI and the batch size). \n\nCleaned up a few other things while I was at it:\n\n- The sourceDatabase field wasn't used in QueryStepRunner, so removed it from QSR and from StepRunnerFactory (as it doesn't apply to WriteStepRunner either)\n- The destinationDatabase field was actually never used in QSR either; the \"target-database\" param passed by FlowResource to mlRunFlow was never used. \n- Modified StepRunnerFactory to only set destinationDatabase on WriteStepRunner and removed it from the StepRunner interface", "committedDate": "2020-06-26T21:16:57Z", "type": "commit"}, {"oid": "4187d3edcded0322d0ce19c785493d750afa3bd0", "url": "https://github.com/marklogic/marklogic-data-hub/commit/4187d3edcded0322d0ce19c785493d750afa3bd0", "message": "DHFPROD-5286: Processing URIs for a step now uses DS endpoint\n\nAll inputs are passed in a JSON object to the DS endpoint. This fixes an issue where the mlRunFlow endpoint fails when the string of request parameters is too long (mostly due to the length of each URI and the batch size). \n\nCleaned up a few other things while I was at it:\n\n- The sourceDatabase field wasn't used in QueryStepRunner, so removed it from QSR and from StepRunnerFactory (as it doesn't apply to WriteStepRunner either)\n- The destinationDatabase field was actually never used in QSR either; the \"target-database\" param passed by FlowResource to mlRunFlow was never used. \n- Modified StepRunnerFactory to only set destinationDatabase on WriteStepRunner and removed it from the StepRunner interface", "committedDate": "2020-06-26T21:16:57Z", "type": "forcePushed"}]}