{"pr_number": 4641, "pr_title": "DHFPROD-6057: CRUD match steps - Backend", "pr_createdAt": "2020-09-29T20:03:36Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4641", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAzMjE1Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#discussion_r497032152", "bodyText": "The authority coming back from the service is \"writeMatching\"", "author": "ryanjdew", "createdAt": "2020-09-29T20:38:39Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MatchingStepController.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.marklogic.hub.central.controllers.steps;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.hub.central.controllers.BaseController;\n+import com.marklogic.hub.central.schemas.StepSchema;\n+import com.marklogic.hub.dataservices.ArtifactService;\n+import com.marklogic.hub.dataservices.StepService;\n+import io.swagger.annotations.ApiImplicitParam;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.annotation.Secured;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+\n+@Controller\n+@RequestMapping(\"/api/steps/matching\")\n+public class MatchingStepController extends BaseController {\n+\n+    private final static String STEP_DEFINITION_TYPE = \"matching\";\n+\n+    @RequestMapping(method = RequestMethod.GET)\n+    @ResponseBody\n+    @ApiOperation(value = \"Get all matching steps\", response = MatchingSteps.class)\n+    @Secured(\"ROLE_readMatchMerge\")\n+    public ResponseEntity<JsonNode> getSteps() {\n+        return ResponseEntity.ok(ArtifactService.on(getHubClient().getStagingClient()).getList(STEP_DEFINITION_TYPE));\n+    }\n+\n+    @RequestMapping(value = \"/{stepName}\", method = RequestMethod.GET)\n+    @ApiOperation(value = \"Get a step\", response = StepSchema.class)\n+    @Secured(\"ROLE_readMatchMerge\")\n+    public ResponseEntity<JsonNode> getStep(@PathVariable String stepName) {\n+        return ResponseEntity.ok(newService().getStep(STEP_DEFINITION_TYPE, stepName));\n+    }\n+\n+    @RequestMapping(value = \"/{stepName}\", method = RequestMethod.POST)\n+    @ApiImplicitParam(required = true, paramType = \"body\", dataType = \"StepSchema\")\n+    @Secured(\"ROLE_writeMatchMerge\")", "originalCommit": "e9dcc407cb2ee15f47f2004b049c09b5cf612895", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzExOTE5Mg==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#discussion_r497119192", "bodyText": "Shouldn't the controller test fail then since the user won't have this authority but will have writeMatching instead?", "author": "rjrudin", "createdAt": "2020-09-29T23:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAzMjE1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUwODM1Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#discussion_r497508357", "bodyText": "Yes, fixed", "author": "fsnow", "createdAt": "2020-09-30T13:27:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAzMjE1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "da2294c79639f1fb086d4ddc8943594fd36a3fd4", "chunk": "diff --git a/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MatchingStepController.java b/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MatchingStepController.java\nindex 1151aa935..29d4d2b87 100644\n--- a/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MatchingStepController.java\n+++ b/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MatchingStepController.java\n\n@@ -25,21 +25,21 @@ public class MatchingStepController extends BaseController {\n     @RequestMapping(method = RequestMethod.GET)\n     @ResponseBody\n     @ApiOperation(value = \"Get all matching steps\", response = MatchingSteps.class)\n-    @Secured(\"ROLE_readMatchMerge\")\n+    @Secured(\"ROLE_readMatching\")\n     public ResponseEntity<JsonNode> getSteps() {\n         return ResponseEntity.ok(ArtifactService.on(getHubClient().getStagingClient()).getList(STEP_DEFINITION_TYPE));\n     }\n \n     @RequestMapping(value = \"/{stepName}\", method = RequestMethod.GET)\n     @ApiOperation(value = \"Get a step\", response = StepSchema.class)\n-    @Secured(\"ROLE_readMatchMerge\")\n+    @Secured(\"ROLE_readMatching\")\n     public ResponseEntity<JsonNode> getStep(@PathVariable String stepName) {\n         return ResponseEntity.ok(newService().getStep(STEP_DEFINITION_TYPE, stepName));\n     }\n \n     @RequestMapping(value = \"/{stepName}\", method = RequestMethod.POST)\n     @ApiImplicitParam(required = true, paramType = \"body\", dataType = \"StepSchema\")\n-    @Secured(\"ROLE_writeMatchMerge\")\n+    @Secured(\"ROLE_writeMatching\")\n     public ResponseEntity<Void> saveStep(@RequestBody @ApiParam(hidden = true) ObjectNode propertiesToAssign, @PathVariable String stepName) {\n         propertiesToAssign.put(\"name\", stepName);\n         newService().saveStep(STEP_DEFINITION_TYPE, propertiesToAssign);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAzMjkxOQ==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#discussion_r497032919", "bodyText": "The authority coming back from the service is \"writeMerge\"", "author": "ryanjdew", "createdAt": "2020-09-29T20:39:25Z", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MergingStepController.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.marklogic.hub.central.controllers.steps;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.hub.central.controllers.BaseController;\n+import com.marklogic.hub.central.schemas.StepSchema;\n+import com.marklogic.hub.dataservices.ArtifactService;\n+import com.marklogic.hub.dataservices.StepService;\n+import io.swagger.annotations.ApiImplicitParam;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.annotation.Secured;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+\n+@Controller\n+@RequestMapping(\"/api/steps/merging\")\n+public class MergingStepController extends BaseController {\n+\n+    private final static String STEP_DEFINITION_TYPE = \"merging\";\n+\n+    @RequestMapping(method = RequestMethod.GET)\n+    @ResponseBody\n+    @ApiOperation(value = \"Get all merging steps\", response = MergingSteps.class)\n+    @Secured(\"ROLE_readMatchMerge\")\n+    public ResponseEntity<JsonNode> getSteps() {\n+        return ResponseEntity.ok(ArtifactService.on(getHubClient().getStagingClient()).getList(STEP_DEFINITION_TYPE));\n+    }\n+\n+    @RequestMapping(value = \"/{stepName}\", method = RequestMethod.GET)\n+    @ApiOperation(value = \"Get a step\", response = StepSchema.class)\n+    @Secured(\"ROLE_readMatchMerge\")\n+    public ResponseEntity<JsonNode> getStep(@PathVariable String stepName) {\n+        return ResponseEntity.ok(newService().getStep(STEP_DEFINITION_TYPE, stepName));\n+    }\n+\n+    @RequestMapping(value = \"/{stepName}\", method = RequestMethod.POST)\n+    @ApiImplicitParam(required = true, paramType = \"body\", dataType = \"StepSchema\")\n+    @Secured(\"ROLE_writeMatchMerge\")\n+    public ResponseEntity<Void> saveStep(@RequestBody @ApiParam(hidden = true) ObjectNode propertiesToAssign, @PathVariable String stepName) {\n+        propertiesToAssign.put(\"name\", stepName);\n+        newService().saveStep(STEP_DEFINITION_TYPE, propertiesToAssign);\n+        return emptyOk();\n+    }\n+\n+    @RequestMapping(value = \"/{stepName}\", method = RequestMethod.DELETE)\n+    @Secured(\"ROLE_writeMatchMerge\")", "originalCommit": "e9dcc407cb2ee15f47f2004b049c09b5cf612895", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUwOTkxNw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#discussion_r497509917", "bodyText": "Fixed", "author": "fsnow", "createdAt": "2020-09-30T13:29:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAzMjkxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "da2294c79639f1fb086d4ddc8943594fd36a3fd4", "chunk": "diff --git a/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MergingStepController.java b/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MergingStepController.java\nindex 43e2f05aa..ae58f4561 100644\n--- a/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MergingStepController.java\n+++ b/marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MergingStepController.java\n\n@@ -25,21 +25,21 @@ public class MergingStepController extends BaseController {\n     @RequestMapping(method = RequestMethod.GET)\n     @ResponseBody\n     @ApiOperation(value = \"Get all merging steps\", response = MergingSteps.class)\n-    @Secured(\"ROLE_readMatchMerge\")\n+    @Secured(\"ROLE_readMerging\")\n     public ResponseEntity<JsonNode> getSteps() {\n         return ResponseEntity.ok(ArtifactService.on(getHubClient().getStagingClient()).getList(STEP_DEFINITION_TYPE));\n     }\n \n     @RequestMapping(value = \"/{stepName}\", method = RequestMethod.GET)\n     @ApiOperation(value = \"Get a step\", response = StepSchema.class)\n-    @Secured(\"ROLE_readMatchMerge\")\n+    @Secured(\"ROLE_readMerging\")\n     public ResponseEntity<JsonNode> getStep(@PathVariable String stepName) {\n         return ResponseEntity.ok(newService().getStep(STEP_DEFINITION_TYPE, stepName));\n     }\n \n     @RequestMapping(value = \"/{stepName}\", method = RequestMethod.POST)\n     @ApiImplicitParam(required = true, paramType = \"body\", dataType = \"StepSchema\")\n-    @Secured(\"ROLE_writeMatchMerge\")\n+    @Secured(\"ROLE_writeMerging\")\n     public ResponseEntity<Void> saveStep(@RequestBody @ApiParam(hidden = true) ObjectNode propertiesToAssign, @PathVariable String stepName) {\n         propertiesToAssign.put(\"name\", stepName);\n         newService().saveStep(STEP_DEFINITION_TYPE, propertiesToAssign);\n"}}, {"oid": "da2294c79639f1fb086d4ddc8943594fd36a3fd4", "url": "https://github.com/marklogic/marklogic-data-hub/commit/da2294c79639f1fb086d4ddc8943594fd36a3fd4", "message": "DHFPROD-6057: CRUD match steps - Backend", "committedDate": "2020-09-30T22:44:12Z", "type": "commit"}]}