{"pr_number": 4631, "pr_title": "DHFPROD-4809: Substitute tokens when loading user artifacts", "pr_createdAt": "2020-09-28T18:07:09Z", "pr_url": "https://github.com/marklogic/marklogic-data-hub/pull/4631", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2MDA5Mw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4631#discussion_r496160093", "bodyText": "We've got 5 instances of code all wanting to do the same thing - convert a File or Resource into a JsonNode, and now they all want to replace tokens at the same time.\nIt's best to do this via a new private method - particularly as when we add a 6th instance of the code, we can just reuse that method and not worry about forgetting to replace tokens.\nSince we know that everything is a File here, the 2 places that use a Resource should just do \"resource.getFile()\". The reusable method can then have a signature of:\nprivate JsonNode readArtifact(File file);\n\nAnd it should catch any exception that occurs and throwing a generic error message of:\nthrow new RuntimeException(\"Unless to read file \" + f.getFilename() \" + as JSON; cause: \" + e.getMessage(), e);", "author": "rjrudin", "createdAt": "2020-09-28T18:45:53Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java", "diffHunk": "@@ -155,9 +159,10 @@ private void loadModels(HubClient hubClient) throws IOException {\n                 public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs)  {\n                     logger.info(\"Loading models from directory \" + dir);\n                     modulesFinder.findModules(dir.toString()).getAssets().forEach(r -> {\n-                        try {\n+                        try (InputStream inputStream = r.getInputStream()) {", "originalCommit": "919f3f1e111c40f03aefe15dda61a601bdb456c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ac8134812e0ba9f27a9d1af03eec0dea5485b1c", "chunk": "diff --git a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java\nindex ba533deb0..8d061a81c 100644\n--- a/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java\n+++ b/marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java\n\n@@ -156,15 +154,15 @@ public class LoadUserArtifactsCommand extends AbstractCommand {\n             EntityDefModulesFinder modulesFinder = new EntityDefModulesFinder();\n             Files.walkFileTree(modelsPath, new SimpleFileVisitor<Path>() {\n                 @Override\n-                public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs)  {\n+                public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) {\n                     logger.info(\"Loading models from directory \" + dir);\n                     modulesFinder.findModules(dir.toString()).getAssets().forEach(r -> {\n-                        try (InputStream inputStream = r.getInputStream()) {\n-                            logger.info(\"Loading model from file: \" + r.getFilename());\n-                            String model = tokenReplacer.replaceTokens(IOUtils.toString(inputStream));\n-                            modelsArray.add(objectMapper.readTree(model));\n-                        } catch (IOException e) {\n-                            throw new RuntimeException(\"Unable to read model as JSON; model filename: \" + r.getFilename(), e);\n+                        logger.info(\"Loading model from file: \" + r.getFilename());\n+                        try {\n+                            modelsArray.add(readArtifact(r.getFile()));\n+                        }\n+                        catch (IOException e) {\n+                            throw new RuntimeException(\"Unable to read model file: \" + r.getFilename() + \"; cause: \" + e.getMessage(), e);\n                         }\n                     });\n                     return FileVisitResult.CONTINUE;\n"}}, {"oid": "9ac8134812e0ba9f27a9d1af03eec0dea5485b1c", "url": "https://github.com/marklogic/marklogic-data-hub/commit/9ac8134812e0ba9f27a9d1af03eec0dea5485b1c", "message": "DHFPROD-4809: Substitute tokens when loading user artifacts", "committedDate": "2020-09-28T20:17:04Z", "type": "forcePushed"}, {"oid": "a2c852bf9516fa6c963c0a7ef37e47f79b59c552", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a2c852bf9516fa6c963c0a7ef37e47f79b59c552", "message": "DHFPROD-4809: Substitute tokens when loading user artifacts", "committedDate": "2020-09-28T20:18:59Z", "type": "commit"}, {"oid": "a2c852bf9516fa6c963c0a7ef37e47f79b59c552", "url": "https://github.com/marklogic/marklogic-data-hub/commit/a2c852bf9516fa6c963c0a7ef37e47f79b59c552", "message": "DHFPROD-4809: Substitute tokens when loading user artifacts", "committedDate": "2020-09-28T20:18:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwOTE2Nw==", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4631#discussion_r496209167", "bodyText": "This is fine to keep, but generally I think it's simpler to just do \"return objectMapper.readTree\" as opposed to declaring this variable here. Shortens the method too.", "author": "rjrudin", "createdAt": "2020-09-28T20:21:01Z", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java", "diffHunk": "@@ -382,6 +378,25 @@ protected ObjectNode replaceLanguageWithLang(ObjectNode object) {\n         return newObject;\n     }\n \n+    /**\n+     * Reads the artifact file, replaces tokens and then returns the content as a JsonNode.\n+     *\n+     * @param file\n+     * @return\n+     */\n+    private JsonNode readArtifact(File file) {\n+        JsonNode jsonNode;", "originalCommit": "a2c852bf9516fa6c963c0a7ef37e47f79b59c552", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}