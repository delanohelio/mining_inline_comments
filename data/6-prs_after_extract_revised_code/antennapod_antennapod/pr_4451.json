{"pr_number": 4451, "pr_title": "Add error message when database export does not have enough space", "pr_createdAt": "2020-09-26T16:29:59Z", "pr_url": "https://github.com/AntennaPod/AntennaPod/pull/4451", "timeline": [{"oid": "321cf485fb1c77b73482e6df2d4227a0b19148f2", "url": "https://github.com/AntennaPod/AntennaPod/commit/321cf485fb1c77b73482e6df2d4227a0b19148f2", "message": "Add error message when db export goes wrong", "committedDate": "2020-09-26T15:55:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU2NjgxMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4451#discussion_r495566812", "bodyText": "The old file should be fully overwritten. Is the old size really needed?", "author": "ByteHamster", "createdAt": "2020-09-27T12:14:41Z", "path": "core/src/main/java/de/danoeh/antennapod/core/storage/DatabaseExporter.java", "diffHunk": "@@ -53,7 +54,18 @@ public static void exportToStream(FileOutputStream outFileStream, Context contex\n             if (currentDB.exists()) {\n                 src = new FileInputStream(currentDB).getChannel();\n                 dst = outFileStream.getChannel();\n-                dst.transferFrom(src, 0, src.size());\n+                long srcSize = src.size();\n+                long oldDstSize = dst.size();\n+                dst.transferFrom(src, 0, srcSize);\n+\n+                long newDstSize = dst.size();\n+                long expected = srcSize + oldDstSize;", "originalCommit": "321cf485fb1c77b73482e6df2d4227a0b19148f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5MTMxMw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4451#discussion_r495591313", "bodyText": "True, it's not.", "author": "jmdouglas", "createdAt": "2020-09-27T16:43:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU2NjgxMg=="}], "type": "inlineReview", "revised_code": {"commit": "748b56e6fe0fc62502ab8e6ea892e329230157c4", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DatabaseExporter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DatabaseExporter.java\nindex 619abc78e..3700dff83 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DatabaseExporter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DatabaseExporter.java\n\n@@ -55,16 +55,14 @@ public class DatabaseExporter {\n                 src = new FileInputStream(currentDB).getChannel();\n                 dst = outFileStream.getChannel();\n                 long srcSize = src.size();\n-                long oldDstSize = dst.size();\n                 dst.transferFrom(src, 0, srcSize);\n \n                 long newDstSize = dst.size();\n-                long expected = srcSize + oldDstSize;\n-                if (newDstSize < expected) {\n+                if (newDstSize < srcSize) {\n                     throw new IOException(String.format(\n                             \"Unable to write entire database. Expected to write %s, but wrote %s.\",\n-                            Formatter.formatShortFileSize(context, expected),\n-                            Formatter.formatShortFileSize(context, newDstSize - oldDstSize)));\n+                            Formatter.formatShortFileSize(context, srcSize),\n+                            Formatter.formatShortFileSize(context, newDstSize)));\n                 }\n             } else {\n                 throw new IOException(\"Can not access current database\");\n"}}, {"oid": "748b56e6fe0fc62502ab8e6ea892e329230157c4", "url": "https://github.com/AntennaPod/AntennaPod/commit/748b56e6fe0fc62502ab8e6ea892e329230157c4", "message": "Don't use old file size", "committedDate": "2020-09-27T16:36:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYwNzkyMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4451#discussion_r495607922", "bodyText": "Just noticed something else. Is there a specific reason for checking < instead of making sure that both files have the exactly same size?", "author": "ByteHamster", "createdAt": "2020-09-27T19:42:15Z", "path": "core/src/main/java/de/danoeh/antennapod/core/storage/DatabaseExporter.java", "diffHunk": "@@ -53,7 +54,16 @@ public static void exportToStream(FileOutputStream outFileStream, Context contex\n             if (currentDB.exists()) {\n                 src = new FileInputStream(currentDB).getChannel();\n                 dst = outFileStream.getChannel();\n-                dst.transferFrom(src, 0, src.size());\n+                long srcSize = src.size();\n+                dst.transferFrom(src, 0, srcSize);\n+\n+                long newDstSize = dst.size();\n+                if (newDstSize < srcSize) {", "originalCommit": "748b56e6fe0fc62502ab8e6ea892e329230157c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5OTM1MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4451#discussion_r504799350", "bodyText": "@jmdouglas ping :) Are you still interested in this PR?", "author": "ByteHamster", "createdAt": "2020-10-14T16:06:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYwNzkyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzNTEzMA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4451#discussion_r506935130", "bodyText": "@ByteHamster Sorry about that", "author": "jmdouglas", "createdAt": "2020-10-17T11:49:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYwNzkyMg=="}], "type": "inlineReview", "revised_code": {"commit": "f5af35e40fea57e36e3db79f99063f917a2991ee", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DatabaseExporter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DatabaseExporter.java\nindex 3700dff83..271babc6e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DatabaseExporter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DatabaseExporter.java\n\n@@ -58,7 +58,7 @@ public class DatabaseExporter {\n                 dst.transferFrom(src, 0, srcSize);\n \n                 long newDstSize = dst.size();\n-                if (newDstSize < srcSize) {\n+                if (newDstSize != srcSize) {\n                     throw new IOException(String.format(\n                             \"Unable to write entire database. Expected to write %s, but wrote %s.\",\n                             Formatter.formatShortFileSize(context, srcSize),\n"}}, {"oid": "f5af35e40fea57e36e3db79f99063f917a2991ee", "url": "https://github.com/AntennaPod/AntennaPod/commit/f5af35e40fea57e36e3db79f99063f917a2991ee", "message": "Use more precise check", "committedDate": "2020-10-17T11:49:23Z", "type": "commit"}]}