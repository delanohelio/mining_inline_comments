{"pr_number": 4563, "pr_title": "Keep loading on the All Episodes tab even if items are filtered out", "pr_createdAt": "2020-10-20T10:27:30Z", "pr_url": "https://github.com/AntennaPod/AntennaPod/pull/4563", "timeline": [{"oid": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945", "url": "https://github.com/AntennaPod/AntennaPod/commit/85b897c7d778ae70d837ae0c2a9e7b4252ea8945", "message": "Filter the All Episodes tab via SQL Query\n\nFixes #4414", "committedDate": "2020-11-06T01:03:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzODgyNw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4563#discussion_r518638827", "bodyText": "Why does the method need to be renamed? I would just keep the old name and update the other uses (which are only tests). That way, we can reduce code duplication.", "author": "ByteHamster", "createdAt": "2020-11-06T09:51:02Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java", "diffHunk": "@@ -105,13 +105,12 @@ protected boolean shouldUpdatedItemRemainInList(FeedItem item) {\n     @NonNull\n     @Override\n     protected List<FeedItem> loadData() {\n-        return feedItemFilter.filter(DBReader.getRecentlyPublishedEpisodes(0, page * EPISODES_PER_PAGE));\n+        return DBReader.getRecentlyPublishedEpisodesFiltered(0, page * EPISODES_PER_PAGE, feedItemFilter);", "originalCommit": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f610ceffc2a257d5e43e5b1d728284fc2800c42c", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java\nindex 08da1f8d9..612959c04 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java\n\n@@ -105,12 +104,12 @@ public class AllEpisodesFragment extends EpisodesListFragment {\n     @NonNull\n     @Override\n     protected List<FeedItem> loadData() {\n-        return DBReader.getRecentlyPublishedEpisodesFiltered(0, page * EPISODES_PER_PAGE, feedItemFilter);\n+        return DBReader.getRecentlyPublishedEpisodes(0, page * EPISODES_PER_PAGE, feedItemFilter);\n     }\n \n     @NonNull\n     @Override\n     protected List<FeedItem> loadMoreData() {\n-        return DBReader.getRecentlyPublishedEpisodesFiltered((page - 1) * EPISODES_PER_PAGE, EPISODES_PER_PAGE, feedItemFilter);\n+        return DBReader.getRecentlyPublishedEpisodes((page - 1) * EPISODES_PER_PAGE, EPISODES_PER_PAGE, feedItemFilter);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0MzM4Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4563#discussion_r518643383", "bodyText": "I think it would be better to move this to its own class. That allows to make the filter object only a data store object without any program logic. AntennaPod's code is pretty mixed up and every object has access to everything else. For example, FeedItems perform database queries. I think we should try to make components of the app as decoupled as possible (and later maybe even move to different modules). This method would fit better into the de.danoeh.antennapod.core.storage package.", "author": "ByteHamster", "createdAt": "2020-11-06T09:58:48Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -78,6 +80,45 @@ public FeedItemFilter(String[] properties) {\n                     break;\n             }\n         }\n+\n+        mQuery = makeQuery();\n+    }\n+\n+    private String makeQuery() {", "originalCommit": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f610ceffc2a257d5e43e5b1d728284fc2800c42c", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\nindex b9d79715a..bd30a3953 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n\n@@ -1,131 +1,70 @@\n package de.danoeh.antennapod.core.feed;\n \n import android.text.TextUtils;\n-import android.util.Log;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n \n import de.danoeh.antennapod.core.storage.DBReader;\n-import de.danoeh.antennapod.core.storage.PodDBAdapter;\n import de.danoeh.antennapod.core.util.LongList;\n \n import static de.danoeh.antennapod.core.feed.FeedItem.TAG_FAVORITE;\n \n public class FeedItemFilter {\n \n-    private final String[] mProperties;\n-    private final String mQuery;\n-\n-    private boolean showPlayed = false;\n-    private boolean showUnplayed = false;\n-    private boolean showPaused = false;\n-    private boolean showNotPaused = false;\n-    private boolean showQueued = false;\n-    private boolean showNotQueued = false;\n-    private boolean showDownloaded = false;\n-    private boolean showNotDownloaded = false;\n-    private boolean showHasMedia = false;\n-    private boolean showNoMedia = false;\n-    private boolean showIsFavorite = false;\n-    private boolean showNotFavorite = false;\n+    private final String[] properties;\n+\n+    public final boolean showPlayed;\n+    public final boolean showUnplayed;\n+    public final boolean showPaused;\n+    public final boolean showNotPaused;\n+    public final boolean showQueued;\n+    public final boolean showNotQueued;\n+    public final boolean showDownloaded;\n+    public final boolean showNotDownloaded;\n+    public final boolean showHasMedia;\n+    public final boolean showNoMedia;\n+    public final boolean showIsFavorite;\n+    public final boolean showNotFavorite;\n+\n+    public static FeedItemFilter unfiltered() {\n+        return new FeedItemFilter(\"\");\n+    }\n \n     public FeedItemFilter(String properties) {\n         this(TextUtils.split(properties, \",\"));\n     }\n \n     public FeedItemFilter(String[] properties) {\n-        this.mProperties = properties;\n-        for (String property : properties) {\n-            // see R.arrays.feed_filter_values\n-            switch (property) {\n-                case \"unplayed\":\n-                    showUnplayed = true;\n-                    break;\n-                case \"paused\":\n-                    showPaused = true;\n-                    break;\n-                case \"not_paused\":\n-                    showNotPaused = true;\n-                    break;\n-                case \"played\":\n-                    showPlayed = true;\n-                    break;\n-                case \"queued\":\n-                    showQueued = true;\n-                    break;\n-                case \"not_queued\":\n-                    showNotQueued = true;\n-                    break;\n-                case \"downloaded\":\n-                    showDownloaded = true;\n-                    break;\n-                case \"not_downloaded\":\n-                    showNotDownloaded = true;\n-                    break;\n-                case \"has_media\":\n-                    showHasMedia = true;\n-                    break;\n-                case \"no_media\":\n-                    showNoMedia = true;\n-                    break;\n-                case \"is_favorite\":\n-                    showIsFavorite = true;\n-                    break;\n-                case \"not_favorite\":\n-                    showNotFavorite = true;\n-                    break;\n-                default:\n-                    break;\n-            }\n-        }\n-\n-        mQuery = makeQuery();\n+        this.properties = properties;\n+\n+        // see R.arrays.feed_filter_values\n+        showUnplayed = hasProperty(\"unplayed\");\n+        showPaused = hasProperty(\"paused\");\n+        showNotPaused = hasProperty(\"not_paused\");\n+        showPlayed = hasProperty(\"played\");\n+        showQueued = hasProperty(\"queued\");\n+        showNotQueued = hasProperty(\"not_queued\");\n+        showDownloaded = hasProperty(\"downloaded\");\n+        showNotDownloaded = hasProperty(\"not_downloaded\");\n+        showHasMedia = hasProperty(\"has_media\");\n+        showNoMedia = hasProperty(\"no_media\");\n+        showIsFavorite = hasProperty(\"is_favorite\");\n+        showNotFavorite = hasProperty(\"not_favorite\");\n     }\n \n-    private String makeQuery() {\n-        // The keys used within this method, but explicitly combined with their table\n-        String keyRead = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_READ;\n-        String keyPosition = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_POSITION;\n-        String keyDownloaded = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_DOWNLOADED;\n-        String keyMediaId = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_ID;\n-        String keyItemId = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_ID;\n-        String keyFeedItem = PodDBAdapter.KEY_FEEDITEM;\n-        String tableQueue = PodDBAdapter.TABLE_NAME_QUEUE;\n-        String tableFavorites = PodDBAdapter.TABLE_NAME_FAVORITES;\n-\n-        List<String> statements = new ArrayList<>();\n-        if (showPlayed)        statements.add(keyRead + \" = 1 \");\n-        if (showUnplayed)      statements.add(\" NOT \" + keyRead + \" = 1 \"); // Match \"New\" items (read = -1) as well\n-        if (showPaused)        statements.add(\" (\" + keyPosition + \" NOT NULL AND \" + keyPosition + \" > 0 \" + \") \");\n-        if (showNotPaused)     statements.add(\" (\" + keyPosition + \" IS NULL OR \" + keyPosition + \" = 0 \" + \") \");\n-        if (showQueued)        statements.add(keyItemId + \" IN (SELECT \" + keyFeedItem + \" FROM \" + tableQueue + \") \");\n-        if (showNotQueued)     statements.add(keyItemId + \" NOT IN (SELECT \" + keyFeedItem + \" FROM \" + tableQueue + \") \");\n-        if (showDownloaded)    statements.add(keyDownloaded + \" = 1 \");\n-        if (showNotDownloaded) statements.add(keyDownloaded + \" = 0 \");\n-        if (showHasMedia)      statements.add(keyMediaId + \" NOT NULL \");\n-        if (showNoMedia)       statements.add(keyMediaId + \" IS NULL \");\n-        if (showIsFavorite)    statements.add(keyItemId + \" IN (SELECT \" + keyFeedItem + \" FROM \" + tableFavorites + \") \");\n-        if (showNotFavorite)   statements.add(keyItemId + \" NOT IN (SELECT \" + keyFeedItem + \" FROM \" + tableFavorites + \") \");\n-\n-        if (statements.isEmpty()) {\n-            return \"\";\n-        }\n-        StringBuilder query = new StringBuilder(\" (\" + statements.get(0));\n-        for (String r : statements.subList(1, statements.size())) {\n-            query.append(\" AND \");\n-            query.append(r);\n-        }\n-        query.append(\") \");\n-        return query.toString();\n+    private boolean hasProperty(String property) {\n+        return Arrays.asList(properties).contains(property);\n     }\n \n     /**\n      * Run a list of feed items through the filter.\n      */\n     public List<FeedItem> filter(List<FeedItem> items) {\n-        if(mProperties.length == 0) return items;\n+        if (properties.length == 0) {\n+            return items;\n+        }\n \n         List<FeedItem> result = new ArrayList<>();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0Mzk5NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4563#discussion_r518643995", "bodyText": "That can later be simplified when using a join for the queue items. Does not have to be done in this PR, though.", "author": "ByteHamster", "createdAt": "2020-11-06T09:59:50Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -78,6 +80,45 @@ public FeedItemFilter(String[] properties) {\n                     break;\n             }\n         }\n+\n+        mQuery = makeQuery();\n+    }\n+\n+    private String makeQuery() {\n+        // The keys used within this method, but explicitly combined with their table\n+        String keyRead = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_READ;\n+        String keyPosition = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_POSITION;\n+        String keyDownloaded = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_DOWNLOADED;\n+        String keyMediaId = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_ID;\n+        String keyItemId = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_ID;\n+        String keyFeedItem = PodDBAdapter.KEY_FEEDITEM;\n+        String tableQueue = PodDBAdapter.TABLE_NAME_QUEUE;\n+        String tableFavorites = PodDBAdapter.TABLE_NAME_FAVORITES;\n+\n+        List<String> statements = new ArrayList<>();\n+        if (showPlayed)        statements.add(keyRead + \" = 1 \");\n+        if (showUnplayed)      statements.add(\" NOT \" + keyRead + \" = 1 \"); // Match \"New\" items (read = -1) as well\n+        if (showPaused)        statements.add(\" (\" + keyPosition + \" NOT NULL AND \" + keyPosition + \" > 0 \" + \") \");\n+        if (showNotPaused)     statements.add(\" (\" + keyPosition + \" IS NULL OR \" + keyPosition + \" = 0 \" + \") \");\n+        if (showQueued)        statements.add(keyItemId + \" IN (SELECT \" + keyFeedItem + \" FROM \" + tableQueue + \") \");", "originalCommit": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f610ceffc2a257d5e43e5b1d728284fc2800c42c", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\nindex b9d79715a..bd30a3953 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n\n@@ -1,131 +1,70 @@\n package de.danoeh.antennapod.core.feed;\n \n import android.text.TextUtils;\n-import android.util.Log;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n \n import de.danoeh.antennapod.core.storage.DBReader;\n-import de.danoeh.antennapod.core.storage.PodDBAdapter;\n import de.danoeh.antennapod.core.util.LongList;\n \n import static de.danoeh.antennapod.core.feed.FeedItem.TAG_FAVORITE;\n \n public class FeedItemFilter {\n \n-    private final String[] mProperties;\n-    private final String mQuery;\n-\n-    private boolean showPlayed = false;\n-    private boolean showUnplayed = false;\n-    private boolean showPaused = false;\n-    private boolean showNotPaused = false;\n-    private boolean showQueued = false;\n-    private boolean showNotQueued = false;\n-    private boolean showDownloaded = false;\n-    private boolean showNotDownloaded = false;\n-    private boolean showHasMedia = false;\n-    private boolean showNoMedia = false;\n-    private boolean showIsFavorite = false;\n-    private boolean showNotFavorite = false;\n+    private final String[] properties;\n+\n+    public final boolean showPlayed;\n+    public final boolean showUnplayed;\n+    public final boolean showPaused;\n+    public final boolean showNotPaused;\n+    public final boolean showQueued;\n+    public final boolean showNotQueued;\n+    public final boolean showDownloaded;\n+    public final boolean showNotDownloaded;\n+    public final boolean showHasMedia;\n+    public final boolean showNoMedia;\n+    public final boolean showIsFavorite;\n+    public final boolean showNotFavorite;\n+\n+    public static FeedItemFilter unfiltered() {\n+        return new FeedItemFilter(\"\");\n+    }\n \n     public FeedItemFilter(String properties) {\n         this(TextUtils.split(properties, \",\"));\n     }\n \n     public FeedItemFilter(String[] properties) {\n-        this.mProperties = properties;\n-        for (String property : properties) {\n-            // see R.arrays.feed_filter_values\n-            switch (property) {\n-                case \"unplayed\":\n-                    showUnplayed = true;\n-                    break;\n-                case \"paused\":\n-                    showPaused = true;\n-                    break;\n-                case \"not_paused\":\n-                    showNotPaused = true;\n-                    break;\n-                case \"played\":\n-                    showPlayed = true;\n-                    break;\n-                case \"queued\":\n-                    showQueued = true;\n-                    break;\n-                case \"not_queued\":\n-                    showNotQueued = true;\n-                    break;\n-                case \"downloaded\":\n-                    showDownloaded = true;\n-                    break;\n-                case \"not_downloaded\":\n-                    showNotDownloaded = true;\n-                    break;\n-                case \"has_media\":\n-                    showHasMedia = true;\n-                    break;\n-                case \"no_media\":\n-                    showNoMedia = true;\n-                    break;\n-                case \"is_favorite\":\n-                    showIsFavorite = true;\n-                    break;\n-                case \"not_favorite\":\n-                    showNotFavorite = true;\n-                    break;\n-                default:\n-                    break;\n-            }\n-        }\n-\n-        mQuery = makeQuery();\n+        this.properties = properties;\n+\n+        // see R.arrays.feed_filter_values\n+        showUnplayed = hasProperty(\"unplayed\");\n+        showPaused = hasProperty(\"paused\");\n+        showNotPaused = hasProperty(\"not_paused\");\n+        showPlayed = hasProperty(\"played\");\n+        showQueued = hasProperty(\"queued\");\n+        showNotQueued = hasProperty(\"not_queued\");\n+        showDownloaded = hasProperty(\"downloaded\");\n+        showNotDownloaded = hasProperty(\"not_downloaded\");\n+        showHasMedia = hasProperty(\"has_media\");\n+        showNoMedia = hasProperty(\"no_media\");\n+        showIsFavorite = hasProperty(\"is_favorite\");\n+        showNotFavorite = hasProperty(\"not_favorite\");\n     }\n \n-    private String makeQuery() {\n-        // The keys used within this method, but explicitly combined with their table\n-        String keyRead = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_READ;\n-        String keyPosition = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_POSITION;\n-        String keyDownloaded = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_DOWNLOADED;\n-        String keyMediaId = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_ID;\n-        String keyItemId = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_ID;\n-        String keyFeedItem = PodDBAdapter.KEY_FEEDITEM;\n-        String tableQueue = PodDBAdapter.TABLE_NAME_QUEUE;\n-        String tableFavorites = PodDBAdapter.TABLE_NAME_FAVORITES;\n-\n-        List<String> statements = new ArrayList<>();\n-        if (showPlayed)        statements.add(keyRead + \" = 1 \");\n-        if (showUnplayed)      statements.add(\" NOT \" + keyRead + \" = 1 \"); // Match \"New\" items (read = -1) as well\n-        if (showPaused)        statements.add(\" (\" + keyPosition + \" NOT NULL AND \" + keyPosition + \" > 0 \" + \") \");\n-        if (showNotPaused)     statements.add(\" (\" + keyPosition + \" IS NULL OR \" + keyPosition + \" = 0 \" + \") \");\n-        if (showQueued)        statements.add(keyItemId + \" IN (SELECT \" + keyFeedItem + \" FROM \" + tableQueue + \") \");\n-        if (showNotQueued)     statements.add(keyItemId + \" NOT IN (SELECT \" + keyFeedItem + \" FROM \" + tableQueue + \") \");\n-        if (showDownloaded)    statements.add(keyDownloaded + \" = 1 \");\n-        if (showNotDownloaded) statements.add(keyDownloaded + \" = 0 \");\n-        if (showHasMedia)      statements.add(keyMediaId + \" NOT NULL \");\n-        if (showNoMedia)       statements.add(keyMediaId + \" IS NULL \");\n-        if (showIsFavorite)    statements.add(keyItemId + \" IN (SELECT \" + keyFeedItem + \" FROM \" + tableFavorites + \") \");\n-        if (showNotFavorite)   statements.add(keyItemId + \" NOT IN (SELECT \" + keyFeedItem + \" FROM \" + tableFavorites + \") \");\n-\n-        if (statements.isEmpty()) {\n-            return \"\";\n-        }\n-        StringBuilder query = new StringBuilder(\" (\" + statements.get(0));\n-        for (String r : statements.subList(1, statements.size())) {\n-            query.append(\" AND \");\n-            query.append(r);\n-        }\n-        query.append(\") \");\n-        return query.toString();\n+    private boolean hasProperty(String property) {\n+        return Arrays.asList(properties).contains(property);\n     }\n \n     /**\n      * Run a list of feed items through the filter.\n      */\n     public List<FeedItem> filter(List<FeedItem> items) {\n-        if(mProperties.length == 0) return items;\n+        if (properties.length == 0) {\n+            return items;\n+        }\n \n         List<FeedItem> result = new ArrayList<>();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NTg3Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4563#discussion_r518645876", "bodyText": "I can conform to the Checkstyle rules if desired but i really think that the cascade of if statements profits in readability if each of them fits onto one line.\n\nReadability was probably the cause of the goto fail bug, too. I would prefer to always use braces, even if it makes the code a bit longer.", "author": "ByteHamster", "createdAt": "2020-11-06T10:03:03Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -78,6 +80,45 @@ public FeedItemFilter(String[] properties) {\n                     break;\n             }\n         }\n+\n+        mQuery = makeQuery();\n+    }\n+\n+    private String makeQuery() {\n+        // The keys used within this method, but explicitly combined with their table\n+        String keyRead = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_READ;\n+        String keyPosition = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_POSITION;\n+        String keyDownloaded = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_DOWNLOADED;\n+        String keyMediaId = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_ID;\n+        String keyItemId = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_ID;\n+        String keyFeedItem = PodDBAdapter.KEY_FEEDITEM;\n+        String tableQueue = PodDBAdapter.TABLE_NAME_QUEUE;\n+        String tableFavorites = PodDBAdapter.TABLE_NAME_FAVORITES;\n+\n+        List<String> statements = new ArrayList<>();\n+        if (showPlayed)        statements.add(keyRead + \" = 1 \");", "originalCommit": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f610ceffc2a257d5e43e5b1d728284fc2800c42c", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\nindex b9d79715a..bd30a3953 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n\n@@ -1,131 +1,70 @@\n package de.danoeh.antennapod.core.feed;\n \n import android.text.TextUtils;\n-import android.util.Log;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n \n import de.danoeh.antennapod.core.storage.DBReader;\n-import de.danoeh.antennapod.core.storage.PodDBAdapter;\n import de.danoeh.antennapod.core.util.LongList;\n \n import static de.danoeh.antennapod.core.feed.FeedItem.TAG_FAVORITE;\n \n public class FeedItemFilter {\n \n-    private final String[] mProperties;\n-    private final String mQuery;\n-\n-    private boolean showPlayed = false;\n-    private boolean showUnplayed = false;\n-    private boolean showPaused = false;\n-    private boolean showNotPaused = false;\n-    private boolean showQueued = false;\n-    private boolean showNotQueued = false;\n-    private boolean showDownloaded = false;\n-    private boolean showNotDownloaded = false;\n-    private boolean showHasMedia = false;\n-    private boolean showNoMedia = false;\n-    private boolean showIsFavorite = false;\n-    private boolean showNotFavorite = false;\n+    private final String[] properties;\n+\n+    public final boolean showPlayed;\n+    public final boolean showUnplayed;\n+    public final boolean showPaused;\n+    public final boolean showNotPaused;\n+    public final boolean showQueued;\n+    public final boolean showNotQueued;\n+    public final boolean showDownloaded;\n+    public final boolean showNotDownloaded;\n+    public final boolean showHasMedia;\n+    public final boolean showNoMedia;\n+    public final boolean showIsFavorite;\n+    public final boolean showNotFavorite;\n+\n+    public static FeedItemFilter unfiltered() {\n+        return new FeedItemFilter(\"\");\n+    }\n \n     public FeedItemFilter(String properties) {\n         this(TextUtils.split(properties, \",\"));\n     }\n \n     public FeedItemFilter(String[] properties) {\n-        this.mProperties = properties;\n-        for (String property : properties) {\n-            // see R.arrays.feed_filter_values\n-            switch (property) {\n-                case \"unplayed\":\n-                    showUnplayed = true;\n-                    break;\n-                case \"paused\":\n-                    showPaused = true;\n-                    break;\n-                case \"not_paused\":\n-                    showNotPaused = true;\n-                    break;\n-                case \"played\":\n-                    showPlayed = true;\n-                    break;\n-                case \"queued\":\n-                    showQueued = true;\n-                    break;\n-                case \"not_queued\":\n-                    showNotQueued = true;\n-                    break;\n-                case \"downloaded\":\n-                    showDownloaded = true;\n-                    break;\n-                case \"not_downloaded\":\n-                    showNotDownloaded = true;\n-                    break;\n-                case \"has_media\":\n-                    showHasMedia = true;\n-                    break;\n-                case \"no_media\":\n-                    showNoMedia = true;\n-                    break;\n-                case \"is_favorite\":\n-                    showIsFavorite = true;\n-                    break;\n-                case \"not_favorite\":\n-                    showNotFavorite = true;\n-                    break;\n-                default:\n-                    break;\n-            }\n-        }\n-\n-        mQuery = makeQuery();\n+        this.properties = properties;\n+\n+        // see R.arrays.feed_filter_values\n+        showUnplayed = hasProperty(\"unplayed\");\n+        showPaused = hasProperty(\"paused\");\n+        showNotPaused = hasProperty(\"not_paused\");\n+        showPlayed = hasProperty(\"played\");\n+        showQueued = hasProperty(\"queued\");\n+        showNotQueued = hasProperty(\"not_queued\");\n+        showDownloaded = hasProperty(\"downloaded\");\n+        showNotDownloaded = hasProperty(\"not_downloaded\");\n+        showHasMedia = hasProperty(\"has_media\");\n+        showNoMedia = hasProperty(\"no_media\");\n+        showIsFavorite = hasProperty(\"is_favorite\");\n+        showNotFavorite = hasProperty(\"not_favorite\");\n     }\n \n-    private String makeQuery() {\n-        // The keys used within this method, but explicitly combined with their table\n-        String keyRead = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_READ;\n-        String keyPosition = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_POSITION;\n-        String keyDownloaded = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_DOWNLOADED;\n-        String keyMediaId = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_ID;\n-        String keyItemId = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_ID;\n-        String keyFeedItem = PodDBAdapter.KEY_FEEDITEM;\n-        String tableQueue = PodDBAdapter.TABLE_NAME_QUEUE;\n-        String tableFavorites = PodDBAdapter.TABLE_NAME_FAVORITES;\n-\n-        List<String> statements = new ArrayList<>();\n-        if (showPlayed)        statements.add(keyRead + \" = 1 \");\n-        if (showUnplayed)      statements.add(\" NOT \" + keyRead + \" = 1 \"); // Match \"New\" items (read = -1) as well\n-        if (showPaused)        statements.add(\" (\" + keyPosition + \" NOT NULL AND \" + keyPosition + \" > 0 \" + \") \");\n-        if (showNotPaused)     statements.add(\" (\" + keyPosition + \" IS NULL OR \" + keyPosition + \" = 0 \" + \") \");\n-        if (showQueued)        statements.add(keyItemId + \" IN (SELECT \" + keyFeedItem + \" FROM \" + tableQueue + \") \");\n-        if (showNotQueued)     statements.add(keyItemId + \" NOT IN (SELECT \" + keyFeedItem + \" FROM \" + tableQueue + \") \");\n-        if (showDownloaded)    statements.add(keyDownloaded + \" = 1 \");\n-        if (showNotDownloaded) statements.add(keyDownloaded + \" = 0 \");\n-        if (showHasMedia)      statements.add(keyMediaId + \" NOT NULL \");\n-        if (showNoMedia)       statements.add(keyMediaId + \" IS NULL \");\n-        if (showIsFavorite)    statements.add(keyItemId + \" IN (SELECT \" + keyFeedItem + \" FROM \" + tableFavorites + \") \");\n-        if (showNotFavorite)   statements.add(keyItemId + \" NOT IN (SELECT \" + keyFeedItem + \" FROM \" + tableFavorites + \") \");\n-\n-        if (statements.isEmpty()) {\n-            return \"\";\n-        }\n-        StringBuilder query = new StringBuilder(\" (\" + statements.get(0));\n-        for (String r : statements.subList(1, statements.size())) {\n-            query.append(\" AND \");\n-            query.append(r);\n-        }\n-        query.append(\") \");\n-        return query.toString();\n+    private boolean hasProperty(String property) {\n+        return Arrays.asList(properties).contains(property);\n     }\n \n     /**\n      * Run a list of feed items through the filter.\n      */\n     public List<FeedItem> filter(List<FeedItem> items) {\n-        if(mProperties.length == 0) return items;\n+        if (properties.length == 0) {\n+            return items;\n+        }\n \n         List<FeedItem> result = new ArrayList<>();\n \n"}}, {"oid": "cdf59a1c8e99720fd737fcbcc1f5ac1eb5252890", "url": "https://github.com/AntennaPod/AntennaPod/commit/cdf59a1c8e99720fd737fcbcc1f5ac1eb5252890", "message": "Merge branch 'develop' into fix_episodes_list_item_loading_b", "committedDate": "2021-01-22T10:07:40Z", "type": "commit"}, {"oid": "f610ceffc2a257d5e43e5b1d728284fc2800c42c", "url": "https://github.com/AntennaPod/AntennaPod/commit/f610ceffc2a257d5e43e5b1d728284fc2800c42c", "message": "Split up filter model and database handling", "committedDate": "2021-01-22T14:09:43Z", "type": "commit"}]}