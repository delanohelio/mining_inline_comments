{"pr_number": 4178, "pr_title": "Redesign filter dialog", "pr_createdAt": "2020-05-21T03:08:56Z", "pr_url": "https://github.com/AntennaPod/AntennaPod/pull/4178", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjk0Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429426946", "bodyText": "This looks a bit fragile, to be honest. What happens if there are suddenly 3 options? I suggest to use something like the following. That would also make it easier to test (separating filters from each other) and would no longer need the big optionSwitch method below.\npublic enum FeedItemFilterGroup {\n    DOWNLOADED(R.string.downloaded_label,\n            new FeedItemFilter(\"downloaded\", R.string.downloaded_label,\n                    feedItem -> feedItem.getMedia().isDownloaded()),\n            new FeedItemFilter(\"not_downloaded\", R.string.not_downloaded_label,\n                    feedItem -> !feedItem.getMedia().isDownloaded())),\n\n    QUEUED(R.string.queue_label,\n            new FeedItemFilter(\"queued\", R.string.queued_label,\n                    feedItem -> feedItem.isTagged(FeedItem.TAG_QUEUE)),\n            new FeedItemFilter(\"not_queued\", R.string.not_queued_label,\n                    feedItem -> !feedItem.isTagged(FeedItem.TAG_QUEUE)));\n\n    private final int nameResId;\n    private final FeedItemFilter[] values;\n\n    FeedItemFilterGroup(int nameResId, FeedItemFilter... values) {\n        this.nameResId = nameResId;\n        this.values = values;\n    }\n\n    public static class FeedItemFilter {\n        public final String filterId;\n        public final int nameResId;\n        public final Function<FeedItem, Boolean> filter;\n\n        public FeedItemFilter(String filterId, int nameResId, Function<FeedItem, Boolean> filter) {\n            this.filterId = filterId;\n            this.nameResId = nameResId;\n            this.filter = filter;\n        }\n        \n        public static FeedItemFilter fromId(String filterId) {\n            for (FeedItemFilterGroup group : FeedItemFilterGroup.values()) {\n                for (FeedItemFilter itemFilter : group.values) {\n                    if (itemFilter.filterId.equals(filterId)) {\n                        return itemFilter;\n                    }\n                }\n            }\n            throw new IllegalArgumentException(\"Id unknown\");\n        }\n    }\n}", "author": "ByteHamster", "createdAt": "2020-05-22T19:46:03Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -58,5 +69,188 @@ public void openDialog() {\n         builder.create().show();\n     }\n \n+    public void openCustomDialog() {\n+\n+        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n+\n+        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        final Set<String> selectedValues = new HashSet<>();\n+        final String[] checkedItems = new String[values.length];\n+\n+        for (int i = 0; i < values.length; i++) {\n+            String value = values[i];\n+            if (filterValues.contains(value)) {\n+                checkedItems[i] = value;\n+            }\n+        }\n+\n+        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n+        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);", "originalCommit": "9590450b9086c49ed57e65a2baf9c33d6f88e8da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1NDM0NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429454345", "bodyText": "Ok, what if we didn't have to handle it at all?; which is what's going on in the openDialog method. Looks like even more unnecessary code to me. I intended the optionSwitch hack to be temporary because I assumed we could add values to the filter that were missing.\n<string-array name=\"episode_filter_values\">\n    <item>unplayed</item>\n    <item>paused</item>\n\nnot paused\nnot favorite\nno media\n    <item>played</item>\n    <item>queued</item>\n    <item>not_queued</item>\n    <item>downloaded</item>\n    <item>not_downloaded</item>\n    <item>has_media</item>\n    <item>is_favorite</item>\n</string-array>\n\nWhy does downloaded have an off/on state but paused does not?\nwe just need \"not paused\", \"not favorite\" and \"no media\" added to the available options( i just don't know where i thought it was beyond the scope of this design) . If you want to add more later you just add an on and off state for each new option. \"on new, off new\"\nIt looks like what you're saying is you want to get rid of \"episode_filter_values\" array and come up with something new based on an enum. I understand deflating the rows, designing in android studio, more maintainable etc. ok\n[edit]\nthe episode_filter_values array should be consistent. (i.e. all on state \"paused\" or all off state, or they all have a on/off state). the value being used to display text is also the value of the option if you look at openDialog()\n\"StateListDrawable, which automatically picks drawables depending on state (selected or not)\" -- i'll check it out. I also need to check for rounded left or right corner", "author": "bws9000", "createdAt": "2020-05-22T21:16:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3NjgyMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429676822", "bodyText": "If you want to add more later you just add an on and off state for each new option. \"on new, off new\"\n\nThere are options that are 3-state, for example New/Unplayed/Played. New is currently not filterable (would clutter the UI) but I want to keep the possibility to do that. That's why I do not really like the arrays that need to be kept in sync and only allow 2 states. Having to keep 4 arrays in sync (keys+translations for 2 columns) sounds like it will cause trouble later.\n\nthe value being used to display text is also the value of the option if you look at openDialog()\n\nYeah, that's a problem for translation. My enum approach would allow to specify ID (for saving) and UI string separately.", "author": "ByteHamster", "createdAt": "2020-05-24T21:24:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY4NTAxMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429685012", "bodyText": "ok, sounds good", "author": "bws9000", "createdAt": "2020-05-24T23:20:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjk0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2MTA5OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r433461099", "bodyText": "okay, i've updated the pull request", "author": "bws9000", "createdAt": "2020-06-01T20:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjk0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\nindex c3869ebf4..ece286eb4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n\n@@ -33,166 +29,98 @@ public abstract class FilterDialog {\n     }\n \n     public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n-\n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n-\n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n-            }\n-        }\n-\n-        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n-        builder.setTitle(R.string.filter);\n-        builder.setMultiChoiceItems(items, checkedItems, (dialog, which, isChecked) -> {\n-            if (isChecked) {\n-                filterValues.add(values[which]);\n-            } else {\n-                filterValues.remove(values[which]);\n-            }\n-        });\n-        builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> {\n-            updateFilter(filterValues);\n-        });\n-        builder.setNegativeButton(R.string.cancel_label, null);\n-        builder.create().show();\n-    }\n-\n-    public void openCustomDialog() {\n-\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-\n-        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n-        final Set<String> selectedValues = new HashSet<>();\n-        final String[] checkedItems = new String[values.length];\n-\n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = value;\n-            }\n-        }\n-\n-        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n-        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);\n-\n         AlertDialog.Builder builder = new AlertDialog.Builder(context);\n         builder.setTitle(R.string.filter);\n \n         LayoutInflater inflater = LayoutInflater.from(this.context);\n-        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout,null);\n-        LinearLayout linearLayout = (LinearLayout) customLayout;\n-\n-        builder.setView(customLayout);\n-\n-        TableLayout tableLayout = new TableLayout(customLayout.getContext());\n-        tableLayout.setPadding(90, 70, 60, 0);\n-\n-        TableRow.LayoutParams rowParams = new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT);\n-        rowParams.setMargins(0, 0, 0, 10);\n-        rowParams.width = 800;\n-\n-        for (int i = 0; i < selection1.length; i++) {\n-\n-            TableRow row = new TableRow(customLayout.getContext());\n-\n-            TextView textView1 = new TextView(customLayout.getContext());\n-            TextView textView2 = new TextView(customLayout.getContext());\n-            TextView textView3 = new TextView(customLayout.getContext());\n-            textView1.setText(selection1[i]);\n-            textView2.setText(selection2[i]);\n-            row.setBackgroundResource(R.drawable.filterdialog_row_main);\n-            textView3.setBackgroundResource(R.drawable.x_custom_off);\n-\n-            if (this.noValueForOption(selection1[i])) {\n-                /* no options */\n-            }\n-\n-            String checked1 = this.optionSwitch(selection1[i]);\n-            for (int j = 0; j < checkedItems.length; j++) {\n-                if (checked1.equals(checkedItems[j])) {\n-                    row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n-                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                    textView1.setTextColor(Color.WHITE);\n-                    textView2.setTextColor(Color.GRAY);\n-                    selectedValues.add((String) textView1.getText());\n+        LinearLayout layout = (LinearLayout) inflater.inflate(R.layout.filter_dialog_layout, null, false);\n+        builder.setView(layout);\n+\n+        for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.filter_dialog_relative_cardview, null);\n+            RadioButton radioButton1 = row.findViewById(R.id.filter_dialog_radioButton1);\n+            RadioButton radioButton2 = row.findViewById(R.id.filter_dialog_radioButton2);\n+            RadioButton radioButton3 = row.findViewById(R.id.filter_dialog_radioButton3);\n+            radioButton1.setText(item.values[1].displayName);\n+            radioButton1.setTextColor(Color.BLACK);\n+            radioButton2.setText(item.values[0].displayName);\n+            radioButton2.setTextColor(Color.BLACK);\n+\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    radioButton1.setBackgroundResource(R.color.accent_light);\n+                    radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                    radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                    radioButton1.setSelected(true);\n+                    radioButton2.setSelected(false);\n+                    radioButton1.setTextColor(Color.WHITE);\n+                    radioButton2.setTextColor(Color.BLACK);\n                 }\n-            }\n-            String checked2 = this.optionSwitch(selection2[i]);\n-            for (int k = 0; k < checkedItems.length; k++) {\n-                if (checked2.equals(checkedItems[k])) {\n-                    row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n-                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                    textView2.setTextColor(Color.WHITE);\n-                    textView1.setTextColor(Color.GRAY);\n-                    selectedValues.add((String) textView2.getText());\n+                if (item.values[0].filterId.equals(nextItem)) {\n+                    item.values[0].setSelected(true);\n+                    item.values[1].setSelected(false);\n+                    radioButton2.setBackgroundResource(R.color.accent_light);\n+                    radioButton1.setBackgroundResource(R.color.master_switch_background_light);\n+                    radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                    radioButton2.setSelected(true);\n+                    radioButton1.setSelected(false);\n+                    radioButton2.setTextColor(Color.WHITE);\n+                    radioButton1.setTextColor(Color.BLACK);\n                 }\n             }\n \n-            textView1.setOnClickListener(arg0 -> {\n-                selectedValues.add((String) textView1.getText());\n-                selectedValues.remove(textView2.getText());\n-                textView1.setTextColor(Color.WHITE);\n-                row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n-                textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                textView2.setTextColor(Color.GRAY);\n+            radioButton1.setOnClickListener(arg0 -> {\n+                item.values[1].setSelected(true);\n+                item.values[0].setSelected(false);\n+                radioButton1.setBackgroundResource(R.color.accent_light);\n+                radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                radioButton2.setSelected(false);\n+                radioButton2.setTextColor(Color.BLACK);\n+                radioButton1.setSelected(true);\n+                radioButton1.setTextColor(Color.WHITE);\n             });\n-            textView2.setOnClickListener(arg0 -> {\n-                selectedValues.add((String) textView2.getText());\n-                selectedValues.remove(textView1.getText());\n-                textView2.setTextColor(Color.WHITE);\n-                row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n-                textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                textView1.setTextColor(Color.GRAY);\n+            radioButton2.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(true);\n+                item.values[1].setSelected(false);\n+                radioButton2.setBackgroundResource(R.color.accent_light);\n+                radioButton1.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                radioButton1.setSelected(false);\n+                radioButton1.setTextColor(Color.BLACK);\n+                radioButton2.setSelected(true);\n+                radioButton2.setTextColor(Color.WHITE);\n             });\n-            textView3.setOnClickListener(arg0 -> {\n-                row.setBackgroundResource(R.drawable.filterdialog_row_main);\n-                textView3.setBackgroundResource(R.drawable.x_custom_off);\n-                selectedValues.remove(textView2.getText());\n-                selectedValues.remove(textView1.getText());\n-                textView1.setTextColor(Color.GRAY);\n-                textView2.setTextColor(Color.GRAY);\n+            radioButton3.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(false);\n+                item.values[1].setSelected(false);\n+                radioButton1.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_off);\n+                radioButton2.setTextColor(Color.BLACK);\n+                radioButton2.setSelected(false);\n+                radioButton1.setTextColor(Color.BLACK);\n+                radioButton1.setSelected(false);\n             });\n-\n-            textView1.setHeight(90);\n-            textView1.setWidth(340);\n-            textView1.setGravity(Gravity.CENTER_VERTICAL);\n-            textView1.setPadding(50, 0, 0, 0);\n-\n-            textView2.setHeight(90);\n-            textView2.setWidth(340);\n-            textView2.setGravity(Gravity.CENTER_VERTICAL);\n-            textView2.setPadding(50, 0, 0, 0);\n-\n-            textView3.setGravity(Gravity.CENTER_VERTICAL);\n-\n-            row.addView(textView1);\n-            row.addView(textView2);\n-            row.addView(textView3);\n-\n-            tableLayout.addView(row);\n-            row.setLayoutParams(rowParams);\n-\n+            layout.addView(row);\n         }\n-        linearLayout.addView(tableLayout, 0);\n+\n \n         builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> {\n             filterValues.clear();\n-            Iterator<String> setIterator2 = selectedValues.iterator();\n-            while (setIterator2.hasNext()) {\n-                String fv = this.optionSwitch(setIterator2.next());\n-                filterValues.add(fv);\n+            for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n+                for (int i = 0; i < item.values.length; i++) {\n+                    if (item.values[i].getSelected()) {\n+                        filterValues.add(item.values[i].filterId);\n+                    }\n+                }\n             }\n             updateFilter(filterValues);\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNzUzNA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429427534", "bodyText": "Instead of doing all this in Java, please create a layout file for a row and inflate it here. This makes it a lot easier to manage the layout (you get a preview in Android Studio, etc).", "author": "ByteHamster", "createdAt": "2020-05-22T19:47:50Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -58,5 +69,188 @@ public void openDialog() {\n         builder.create().show();\n     }\n \n+    public void openCustomDialog() {\n+\n+        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n+\n+        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        final Set<String> selectedValues = new HashSet<>();\n+        final String[] checkedItems = new String[values.length];\n+\n+        for (int i = 0; i < values.length; i++) {\n+            String value = values[i];\n+            if (filterValues.contains(value)) {\n+                checkedItems[i] = value;\n+            }\n+        }\n+\n+        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n+        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);\n+\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n+\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout,null);\n+        LinearLayout linearLayout = (LinearLayout) customLayout;\n+\n+        builder.setView(customLayout);\n+\n+        TableLayout tableLayout = new TableLayout(customLayout.getContext());\n+        tableLayout.setPadding(90, 70, 60, 0);\n+\n+        TableRow.LayoutParams rowParams = new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT);\n+        rowParams.setMargins(0, 0, 0, 10);\n+        rowParams.width = 800;\n+\n+        for (int i = 0; i < selection1.length; i++) {\n+\n+            TableRow row = new TableRow(customLayout.getContext());\n+\n+            TextView textView1 = new TextView(customLayout.getContext());\n+            TextView textView2 = new TextView(customLayout.getContext());\n+            TextView textView3 = new TextView(customLayout.getContext());\n+            textView1.setText(selection1[i]);\n+            textView2.setText(selection2[i]);\n+            row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+            textView3.setBackgroundResource(R.drawable.x_custom_off);\n+\n+            if (this.noValueForOption(selection1[i])) {\n+                /* no options */\n+            }\n+\n+            String checked1 = this.optionSwitch(selection1[i]);\n+            for (int j = 0; j < checkedItems.length; j++) {\n+                if (checked1.equals(checkedItems[j])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView1.getText());\n+                }\n+            }\n+            String checked2 = this.optionSwitch(selection2[i]);\n+            for (int k = 0; k < checkedItems.length; k++) {\n+                if (checked2.equals(checkedItems[k])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView2.getText());\n+                }\n+            }\n+\n+            textView1.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView1.getText());\n+                selectedValues.remove(textView2.getText());\n+                textView1.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+            textView2.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView2.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView1.setTextColor(Color.GRAY);\n+            });\n+            textView3.setOnClickListener(arg0 -> {\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+                textView3.setBackgroundResource(R.drawable.x_custom_off);\n+                selectedValues.remove(textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView1.setTextColor(Color.GRAY);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+\n+            textView1.setHeight(90);\n+            textView1.setWidth(340);\n+            textView1.setGravity(Gravity.CENTER_VERTICAL);\n+            textView1.setPadding(50, 0, 0, 0);\n+\n+            textView2.setHeight(90);\n+            textView2.setWidth(340);\n+            textView2.setGravity(Gravity.CENTER_VERTICAL);\n+            textView2.setPadding(50, 0, 0, 0);", "originalCommit": "9590450b9086c49ed57e65a2baf9c33d6f88e8da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MzQ2Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429473462", "bodyText": "ok, got it", "author": "bws9000", "createdAt": "2020-05-22T22:02:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNzUzNA=="}], "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\nindex c3869ebf4..ece286eb4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n\n@@ -33,166 +29,98 @@ public abstract class FilterDialog {\n     }\n \n     public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n-\n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n-\n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n-            }\n-        }\n-\n-        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n-        builder.setTitle(R.string.filter);\n-        builder.setMultiChoiceItems(items, checkedItems, (dialog, which, isChecked) -> {\n-            if (isChecked) {\n-                filterValues.add(values[which]);\n-            } else {\n-                filterValues.remove(values[which]);\n-            }\n-        });\n-        builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> {\n-            updateFilter(filterValues);\n-        });\n-        builder.setNegativeButton(R.string.cancel_label, null);\n-        builder.create().show();\n-    }\n-\n-    public void openCustomDialog() {\n-\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-\n-        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n-        final Set<String> selectedValues = new HashSet<>();\n-        final String[] checkedItems = new String[values.length];\n-\n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = value;\n-            }\n-        }\n-\n-        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n-        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);\n-\n         AlertDialog.Builder builder = new AlertDialog.Builder(context);\n         builder.setTitle(R.string.filter);\n \n         LayoutInflater inflater = LayoutInflater.from(this.context);\n-        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout,null);\n-        LinearLayout linearLayout = (LinearLayout) customLayout;\n-\n-        builder.setView(customLayout);\n-\n-        TableLayout tableLayout = new TableLayout(customLayout.getContext());\n-        tableLayout.setPadding(90, 70, 60, 0);\n-\n-        TableRow.LayoutParams rowParams = new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT);\n-        rowParams.setMargins(0, 0, 0, 10);\n-        rowParams.width = 800;\n-\n-        for (int i = 0; i < selection1.length; i++) {\n-\n-            TableRow row = new TableRow(customLayout.getContext());\n-\n-            TextView textView1 = new TextView(customLayout.getContext());\n-            TextView textView2 = new TextView(customLayout.getContext());\n-            TextView textView3 = new TextView(customLayout.getContext());\n-            textView1.setText(selection1[i]);\n-            textView2.setText(selection2[i]);\n-            row.setBackgroundResource(R.drawable.filterdialog_row_main);\n-            textView3.setBackgroundResource(R.drawable.x_custom_off);\n-\n-            if (this.noValueForOption(selection1[i])) {\n-                /* no options */\n-            }\n-\n-            String checked1 = this.optionSwitch(selection1[i]);\n-            for (int j = 0; j < checkedItems.length; j++) {\n-                if (checked1.equals(checkedItems[j])) {\n-                    row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n-                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                    textView1.setTextColor(Color.WHITE);\n-                    textView2.setTextColor(Color.GRAY);\n-                    selectedValues.add((String) textView1.getText());\n+        LinearLayout layout = (LinearLayout) inflater.inflate(R.layout.filter_dialog_layout, null, false);\n+        builder.setView(layout);\n+\n+        for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.filter_dialog_relative_cardview, null);\n+            RadioButton radioButton1 = row.findViewById(R.id.filter_dialog_radioButton1);\n+            RadioButton radioButton2 = row.findViewById(R.id.filter_dialog_radioButton2);\n+            RadioButton radioButton3 = row.findViewById(R.id.filter_dialog_radioButton3);\n+            radioButton1.setText(item.values[1].displayName);\n+            radioButton1.setTextColor(Color.BLACK);\n+            radioButton2.setText(item.values[0].displayName);\n+            radioButton2.setTextColor(Color.BLACK);\n+\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    radioButton1.setBackgroundResource(R.color.accent_light);\n+                    radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                    radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                    radioButton1.setSelected(true);\n+                    radioButton2.setSelected(false);\n+                    radioButton1.setTextColor(Color.WHITE);\n+                    radioButton2.setTextColor(Color.BLACK);\n                 }\n-            }\n-            String checked2 = this.optionSwitch(selection2[i]);\n-            for (int k = 0; k < checkedItems.length; k++) {\n-                if (checked2.equals(checkedItems[k])) {\n-                    row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n-                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                    textView2.setTextColor(Color.WHITE);\n-                    textView1.setTextColor(Color.GRAY);\n-                    selectedValues.add((String) textView2.getText());\n+                if (item.values[0].filterId.equals(nextItem)) {\n+                    item.values[0].setSelected(true);\n+                    item.values[1].setSelected(false);\n+                    radioButton2.setBackgroundResource(R.color.accent_light);\n+                    radioButton1.setBackgroundResource(R.color.master_switch_background_light);\n+                    radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                    radioButton2.setSelected(true);\n+                    radioButton1.setSelected(false);\n+                    radioButton2.setTextColor(Color.WHITE);\n+                    radioButton1.setTextColor(Color.BLACK);\n                 }\n             }\n \n-            textView1.setOnClickListener(arg0 -> {\n-                selectedValues.add((String) textView1.getText());\n-                selectedValues.remove(textView2.getText());\n-                textView1.setTextColor(Color.WHITE);\n-                row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n-                textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                textView2.setTextColor(Color.GRAY);\n+            radioButton1.setOnClickListener(arg0 -> {\n+                item.values[1].setSelected(true);\n+                item.values[0].setSelected(false);\n+                radioButton1.setBackgroundResource(R.color.accent_light);\n+                radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                radioButton2.setSelected(false);\n+                radioButton2.setTextColor(Color.BLACK);\n+                radioButton1.setSelected(true);\n+                radioButton1.setTextColor(Color.WHITE);\n             });\n-            textView2.setOnClickListener(arg0 -> {\n-                selectedValues.add((String) textView2.getText());\n-                selectedValues.remove(textView1.getText());\n-                textView2.setTextColor(Color.WHITE);\n-                row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n-                textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                textView1.setTextColor(Color.GRAY);\n+            radioButton2.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(true);\n+                item.values[1].setSelected(false);\n+                radioButton2.setBackgroundResource(R.color.accent_light);\n+                radioButton1.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                radioButton1.setSelected(false);\n+                radioButton1.setTextColor(Color.BLACK);\n+                radioButton2.setSelected(true);\n+                radioButton2.setTextColor(Color.WHITE);\n             });\n-            textView3.setOnClickListener(arg0 -> {\n-                row.setBackgroundResource(R.drawable.filterdialog_row_main);\n-                textView3.setBackgroundResource(R.drawable.x_custom_off);\n-                selectedValues.remove(textView2.getText());\n-                selectedValues.remove(textView1.getText());\n-                textView1.setTextColor(Color.GRAY);\n-                textView2.setTextColor(Color.GRAY);\n+            radioButton3.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(false);\n+                item.values[1].setSelected(false);\n+                radioButton1.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_off);\n+                radioButton2.setTextColor(Color.BLACK);\n+                radioButton2.setSelected(false);\n+                radioButton1.setTextColor(Color.BLACK);\n+                radioButton1.setSelected(false);\n             });\n-\n-            textView1.setHeight(90);\n-            textView1.setWidth(340);\n-            textView1.setGravity(Gravity.CENTER_VERTICAL);\n-            textView1.setPadding(50, 0, 0, 0);\n-\n-            textView2.setHeight(90);\n-            textView2.setWidth(340);\n-            textView2.setGravity(Gravity.CENTER_VERTICAL);\n-            textView2.setPadding(50, 0, 0, 0);\n-\n-            textView3.setGravity(Gravity.CENTER_VERTICAL);\n-\n-            row.addView(textView1);\n-            row.addView(textView2);\n-            row.addView(textView3);\n-\n-            tableLayout.addView(row);\n-            row.setLayoutParams(rowParams);\n-\n+            layout.addView(row);\n         }\n-        linearLayout.addView(tableLayout, 0);\n+\n \n         builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> {\n             filterValues.clear();\n-            Iterator<String> setIterator2 = selectedValues.iterator();\n-            while (setIterator2.hasNext()) {\n-                String fv = this.optionSwitch(setIterator2.next());\n-                filterValues.add(fv);\n+            for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n+                for (int i = 0; i < item.values.length; i++) {\n+                    if (item.values[i].getSelected()) {\n+                        filterValues.add(item.values[i].filterId);\n+                    }\n+                }\n             }\n             updateFilter(filterValues);\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNzg2NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429427865", "bodyText": "The table can be added directly in R.layout.custom_filter_dialog_layout, so it does not need to be created manually in Java.", "author": "ByteHamster", "createdAt": "2020-05-22T19:48:58Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -58,5 +69,188 @@ public void openDialog() {\n         builder.create().show();\n     }\n \n+    public void openCustomDialog() {\n+\n+        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n+\n+        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        final Set<String> selectedValues = new HashSet<>();\n+        final String[] checkedItems = new String[values.length];\n+\n+        for (int i = 0; i < values.length; i++) {\n+            String value = values[i];\n+            if (filterValues.contains(value)) {\n+                checkedItems[i] = value;\n+            }\n+        }\n+\n+        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n+        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);\n+\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n+\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout,null);\n+        LinearLayout linearLayout = (LinearLayout) customLayout;\n+\n+        builder.setView(customLayout);\n+\n+        TableLayout tableLayout = new TableLayout(customLayout.getContext());\n+        tableLayout.setPadding(90, 70, 60, 0);\n+\n+        TableRow.LayoutParams rowParams = new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT);\n+        rowParams.setMargins(0, 0, 0, 10);\n+        rowParams.width = 800;\n+\n+        for (int i = 0; i < selection1.length; i++) {\n+\n+            TableRow row = new TableRow(customLayout.getContext());\n+\n+            TextView textView1 = new TextView(customLayout.getContext());\n+            TextView textView2 = new TextView(customLayout.getContext());\n+            TextView textView3 = new TextView(customLayout.getContext());\n+            textView1.setText(selection1[i]);\n+            textView2.setText(selection2[i]);\n+            row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+            textView3.setBackgroundResource(R.drawable.x_custom_off);\n+\n+            if (this.noValueForOption(selection1[i])) {\n+                /* no options */\n+            }\n+\n+            String checked1 = this.optionSwitch(selection1[i]);\n+            for (int j = 0; j < checkedItems.length; j++) {\n+                if (checked1.equals(checkedItems[j])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView1.getText());\n+                }\n+            }\n+            String checked2 = this.optionSwitch(selection2[i]);\n+            for (int k = 0; k < checkedItems.length; k++) {\n+                if (checked2.equals(checkedItems[k])) {\n+                    row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.GRAY);\n+                    selectedValues.add((String) textView2.getText());\n+                }\n+            }\n+\n+            textView1.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView1.getText());\n+                selectedValues.remove(textView2.getText());\n+                textView1.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+            textView2.setOnClickListener(arg0 -> {\n+                selectedValues.add((String) textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView2.setTextColor(Color.WHITE);\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                textView1.setTextColor(Color.GRAY);\n+            });\n+            textView3.setOnClickListener(arg0 -> {\n+                row.setBackgroundResource(R.drawable.filterdialog_row_main);\n+                textView3.setBackgroundResource(R.drawable.x_custom_off);\n+                selectedValues.remove(textView2.getText());\n+                selectedValues.remove(textView1.getText());\n+                textView1.setTextColor(Color.GRAY);\n+                textView2.setTextColor(Color.GRAY);\n+            });\n+\n+            textView1.setHeight(90);\n+            textView1.setWidth(340);\n+            textView1.setGravity(Gravity.CENTER_VERTICAL);\n+            textView1.setPadding(50, 0, 0, 0);\n+\n+            textView2.setHeight(90);\n+            textView2.setWidth(340);\n+            textView2.setGravity(Gravity.CENTER_VERTICAL);\n+            textView2.setPadding(50, 0, 0, 0);\n+\n+            textView3.setGravity(Gravity.CENTER_VERTICAL);\n+\n+            row.addView(textView1);\n+            row.addView(textView2);\n+            row.addView(textView3);\n+\n+            tableLayout.addView(row);\n+            row.setLayoutParams(rowParams);\n+\n+        }\n+        linearLayout.addView(tableLayout, 0);", "originalCommit": "9590450b9086c49ed57e65a2baf9c33d6f88e8da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3MzM1MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429473351", "bodyText": "ok", "author": "bws9000", "createdAt": "2020-05-22T22:02:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNzg2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\nindex c3869ebf4..ece286eb4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n\n@@ -33,166 +29,98 @@ public abstract class FilterDialog {\n     }\n \n     public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n-\n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n-\n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n-            }\n-        }\n-\n-        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n-        builder.setTitle(R.string.filter);\n-        builder.setMultiChoiceItems(items, checkedItems, (dialog, which, isChecked) -> {\n-            if (isChecked) {\n-                filterValues.add(values[which]);\n-            } else {\n-                filterValues.remove(values[which]);\n-            }\n-        });\n-        builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> {\n-            updateFilter(filterValues);\n-        });\n-        builder.setNegativeButton(R.string.cancel_label, null);\n-        builder.create().show();\n-    }\n-\n-    public void openCustomDialog() {\n-\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-\n-        final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n-        final Set<String> selectedValues = new HashSet<>();\n-        final String[] checkedItems = new String[values.length];\n-\n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = value;\n-            }\n-        }\n-\n-        final String[] selection1 = context.getResources().getStringArray(R.array.episode_filter_selection_text1);\n-        final String[] selection2 = context.getResources().getStringArray(R.array.episode_filter_selection_text2);\n-\n         AlertDialog.Builder builder = new AlertDialog.Builder(context);\n         builder.setTitle(R.string.filter);\n \n         LayoutInflater inflater = LayoutInflater.from(this.context);\n-        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout,null);\n-        LinearLayout linearLayout = (LinearLayout) customLayout;\n-\n-        builder.setView(customLayout);\n-\n-        TableLayout tableLayout = new TableLayout(customLayout.getContext());\n-        tableLayout.setPadding(90, 70, 60, 0);\n-\n-        TableRow.LayoutParams rowParams = new TableRow.LayoutParams(TableRow.LayoutParams.WRAP_CONTENT);\n-        rowParams.setMargins(0, 0, 0, 10);\n-        rowParams.width = 800;\n-\n-        for (int i = 0; i < selection1.length; i++) {\n-\n-            TableRow row = new TableRow(customLayout.getContext());\n-\n-            TextView textView1 = new TextView(customLayout.getContext());\n-            TextView textView2 = new TextView(customLayout.getContext());\n-            TextView textView3 = new TextView(customLayout.getContext());\n-            textView1.setText(selection1[i]);\n-            textView2.setText(selection2[i]);\n-            row.setBackgroundResource(R.drawable.filterdialog_row_main);\n-            textView3.setBackgroundResource(R.drawable.x_custom_off);\n-\n-            if (this.noValueForOption(selection1[i])) {\n-                /* no options */\n-            }\n-\n-            String checked1 = this.optionSwitch(selection1[i]);\n-            for (int j = 0; j < checkedItems.length; j++) {\n-                if (checked1.equals(checkedItems[j])) {\n-                    row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n-                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                    textView1.setTextColor(Color.WHITE);\n-                    textView2.setTextColor(Color.GRAY);\n-                    selectedValues.add((String) textView1.getText());\n+        LinearLayout layout = (LinearLayout) inflater.inflate(R.layout.filter_dialog_layout, null, false);\n+        builder.setView(layout);\n+\n+        for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.filter_dialog_relative_cardview, null);\n+            RadioButton radioButton1 = row.findViewById(R.id.filter_dialog_radioButton1);\n+            RadioButton radioButton2 = row.findViewById(R.id.filter_dialog_radioButton2);\n+            RadioButton radioButton3 = row.findViewById(R.id.filter_dialog_radioButton3);\n+            radioButton1.setText(item.values[1].displayName);\n+            radioButton1.setTextColor(Color.BLACK);\n+            radioButton2.setText(item.values[0].displayName);\n+            radioButton2.setTextColor(Color.BLACK);\n+\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    radioButton1.setBackgroundResource(R.color.accent_light);\n+                    radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                    radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                    radioButton1.setSelected(true);\n+                    radioButton2.setSelected(false);\n+                    radioButton1.setTextColor(Color.WHITE);\n+                    radioButton2.setTextColor(Color.BLACK);\n                 }\n-            }\n-            String checked2 = this.optionSwitch(selection2[i]);\n-            for (int k = 0; k < checkedItems.length; k++) {\n-                if (checked2.equals(checkedItems[k])) {\n-                    row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n-                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                    textView2.setTextColor(Color.WHITE);\n-                    textView1.setTextColor(Color.GRAY);\n-                    selectedValues.add((String) textView2.getText());\n+                if (item.values[0].filterId.equals(nextItem)) {\n+                    item.values[0].setSelected(true);\n+                    item.values[1].setSelected(false);\n+                    radioButton2.setBackgroundResource(R.color.accent_light);\n+                    radioButton1.setBackgroundResource(R.color.master_switch_background_light);\n+                    radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                    radioButton2.setSelected(true);\n+                    radioButton1.setSelected(false);\n+                    radioButton2.setTextColor(Color.WHITE);\n+                    radioButton1.setTextColor(Color.BLACK);\n                 }\n             }\n \n-            textView1.setOnClickListener(arg0 -> {\n-                selectedValues.add((String) textView1.getText());\n-                selectedValues.remove(textView2.getText());\n-                textView1.setTextColor(Color.WHITE);\n-                row.setBackgroundResource(R.drawable.filterdialog_row_main_left_on);\n-                textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                textView2.setTextColor(Color.GRAY);\n+            radioButton1.setOnClickListener(arg0 -> {\n+                item.values[1].setSelected(true);\n+                item.values[0].setSelected(false);\n+                radioButton1.setBackgroundResource(R.color.accent_light);\n+                radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                radioButton2.setSelected(false);\n+                radioButton2.setTextColor(Color.BLACK);\n+                radioButton1.setSelected(true);\n+                radioButton1.setTextColor(Color.WHITE);\n             });\n-            textView2.setOnClickListener(arg0 -> {\n-                selectedValues.add((String) textView2.getText());\n-                selectedValues.remove(textView1.getText());\n-                textView2.setTextColor(Color.WHITE);\n-                row.setBackgroundResource(R.drawable.filterdialog_row_main_right_on);\n-                textView3.setBackgroundResource(R.drawable.x_custom_on);\n-                textView1.setTextColor(Color.GRAY);\n+            radioButton2.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(true);\n+                item.values[1].setSelected(false);\n+                radioButton2.setBackgroundResource(R.color.accent_light);\n+                radioButton1.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                radioButton1.setSelected(false);\n+                radioButton1.setTextColor(Color.BLACK);\n+                radioButton2.setSelected(true);\n+                radioButton2.setTextColor(Color.WHITE);\n             });\n-            textView3.setOnClickListener(arg0 -> {\n-                row.setBackgroundResource(R.drawable.filterdialog_row_main);\n-                textView3.setBackgroundResource(R.drawable.x_custom_off);\n-                selectedValues.remove(textView2.getText());\n-                selectedValues.remove(textView1.getText());\n-                textView1.setTextColor(Color.GRAY);\n-                textView2.setTextColor(Color.GRAY);\n+            radioButton3.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(false);\n+                item.values[1].setSelected(false);\n+                radioButton1.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_off);\n+                radioButton2.setTextColor(Color.BLACK);\n+                radioButton2.setSelected(false);\n+                radioButton1.setTextColor(Color.BLACK);\n+                radioButton1.setSelected(false);\n             });\n-\n-            textView1.setHeight(90);\n-            textView1.setWidth(340);\n-            textView1.setGravity(Gravity.CENTER_VERTICAL);\n-            textView1.setPadding(50, 0, 0, 0);\n-\n-            textView2.setHeight(90);\n-            textView2.setWidth(340);\n-            textView2.setGravity(Gravity.CENTER_VERTICAL);\n-            textView2.setPadding(50, 0, 0, 0);\n-\n-            textView3.setGravity(Gravity.CENTER_VERTICAL);\n-\n-            row.addView(textView1);\n-            row.addView(textView2);\n-            row.addView(textView3);\n-\n-            tableLayout.addView(row);\n-            row.setLayoutParams(rowParams);\n-\n+            layout.addView(row);\n         }\n-        linearLayout.addView(tableLayout, 0);\n+\n \n         builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> {\n             filterValues.clear();\n-            Iterator<String> setIterator2 = selectedValues.iterator();\n-            while (setIterator2.hasNext()) {\n-                String fv = this.optionSwitch(setIterator2.next());\n-                filterValues.add(fv);\n+            for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n+                for (int i = 0; i < item.values.length; i++) {\n+                    if (item.values[i].getSelected()) {\n+                        filterValues.add(item.values[i].filterId);\n+                    }\n+                }\n             }\n             updateFilter(filterValues);\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODQ1NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429428455", "bodyText": "Why did you add a second method instead of just replacing the old one? Do we still need the old one?", "author": "ByteHamster", "createdAt": "2020-05-22T19:50:54Z", "path": "app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java", "diffHunk": "@@ -113,7 +113,7 @@ protected void updateFilter(Set<String> filterValues) {\n             }\n         };\n \n-        filterDialog.openDialog();\n+        filterDialog.openCustomDialog();", "originalCommit": "9590450b9086c49ed57e65a2baf9c33d6f88e8da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ0NTM1NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r429445354", "bodyText": "I had no idea but I assumed you would let me know :)", "author": "bws9000", "createdAt": "2020-05-22T20:47:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODQ1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMjMzMw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436402333", "bodyText": "Why is the function called custom? I think it would be better to just keep the old name.", "author": "ByteHamster", "createdAt": "2020-06-07T21:11:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyODQ1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java b/app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java\nindex 9ae43d191..bcf202c05 100644\n--- a/app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java\n+++ b/app/src/main/java/de/danoeh/antennapod/menuhandler/FeedMenuHandler.java\n\n@@ -113,7 +113,7 @@ public class FeedMenuHandler {\n             }\n         };\n \n-        filterDialog.openCustomDialog();\n+        filterDialog.openDialog();\n     }\n \n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMjg5Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436402896", "bodyText": "I would make the filters independent from the filter UI. This allows (among other things) to automatically test filters instead of having to start the UI every time. Please move this to a new class de.danoeh.antennapod.core.feed.FeedItemFilterGroup. Also, those enums should not store data. If you directly add/remove the filterId in the filterValues array, you do not need to store state in the enums themselves. Storing state there can lead to problems when re-opening the dialog for different podcasts.", "author": "ByteHamster", "createdAt": "2020-06-07T21:19:48Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n+            textView1.setText(item.values[1].displayName);\n+            textView1.setTextColor(Color.DKGRAY);\n+            textView2.setText(item.values[0].displayName);\n+            textView2.setTextColor(Color.DKGRAY);\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    textView1.setSelected(true);\n+                    textView2.setSelected(false);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.DKGRAY);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                }\n+                if (item.values[0].filterId.equals(nextItem)) {\n+                    item.values[0].setSelected(true);\n+                    item.values[1].setSelected(false);\n+                    textView2.setSelected(true);\n+                    textView1.setSelected(false);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.DKGRAY);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                }\n             }\n+\n+            textView1.setOnClickListener(arg0 -> {\n+                item.values[1].setSelected(true);\n+                item.values[0].setSelected(false);\n+                textView2.setSelected(false);\n+                textView2.setTextColor(Color.DKGRAY);\n+                textView1.setSelected(true);\n+                textView1.setTextColor(Color.WHITE);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+            });\n+            textView2.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(true);\n+                item.values[1].setSelected(false);\n+                textView1.setSelected(false);\n+                textView1.setTextColor(Color.DKGRAY);\n+                textView2.setSelected(true);\n+                textView2.setTextColor(Color.WHITE);\n+                textView3.setBackgroundResource(R.drawable.x_custom_on);\n+            });\n+            textView3.setOnClickListener(arg0 -> {\n+                item.values[0].setSelected(false);\n+                item.values[1].setSelected(false);\n+                textView2.setTextColor(Color.DKGRAY);\n+                textView2.setSelected(false);\n+                textView1.setTextColor(Color.DKGRAY);\n+                textView1.setSelected(false);\n+                textView3.setBackgroundResource(R.drawable.x_custom_off);\n+            });\n+            tableLayout.addView(row);\n         }\n \n-        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n-        builder.setTitle(R.string.filter);\n-        builder.setMultiChoiceItems(items, checkedItems, (dialog, which, isChecked) -> {\n-            if (isChecked) {\n-                filterValues.add(values[which]);\n-            } else {\n-                filterValues.remove(values[which]);\n-            }\n-        });\n+\n         builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> {\n+            filterValues.clear();\n+            for (FeedItemEnum item : FeedItemEnum.values()) {\n+                for (int i = 0; i < item.values.length; i++) {\n+                    if (item.values[i].getSelected()) {\n+                        Log.d(\"**added***\", \"\" + item.values[i].filterId);\n+                        filterValues.add(item.values[i].filterId);\n+                    }\n+                }\n+            }\n             updateFilter(filterValues);\n         });\n+\n         builder.setNegativeButton(R.string.cancel_label, null);\n         builder.create().show();\n     }\n \n+    public enum FeedItemEnum {", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE2NTMxNA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r441165314", "bodyText": "okay", "author": "bws9000", "createdAt": "2020-06-16T21:57:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMjg5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\nindex be420adaf..ece286eb4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n\n@@ -29,28 +28,26 @@ public abstract class FilterDialog {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openCustomDialog() {\n+    public void openDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n         AlertDialog.Builder builder = new AlertDialog.Builder(context);\n         builder.setTitle(R.string.filter);\n \n         LayoutInflater inflater = LayoutInflater.from(this.context);\n-        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n-        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+        LinearLayout layout = (LinearLayout) inflater.inflate(R.layout.filter_dialog_layout, null, false);\n+        builder.setView(layout);\n \n-        builder.setView(customLayout);\n+        for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n \n-        for (FeedItemEnum item : FeedItemEnum.values()) {\n-\n-            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n-            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n-            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n-            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n-            textView1.setText(item.values[1].displayName);\n-            textView1.setTextColor(Color.DKGRAY);\n-            textView2.setText(item.values[0].displayName);\n-            textView2.setTextColor(Color.DKGRAY);\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.filter_dialog_relative_cardview, null);\n+            RadioButton radioButton1 = row.findViewById(R.id.filter_dialog_radioButton1);\n+            RadioButton radioButton2 = row.findViewById(R.id.filter_dialog_radioButton2);\n+            RadioButton radioButton3 = row.findViewById(R.id.filter_dialog_radioButton3);\n+            radioButton1.setText(item.values[1].displayName);\n+            radioButton1.setTextColor(Color.BLACK);\n+            radioButton2.setText(item.values[0].displayName);\n+            radioButton2.setTextColor(Color.BLACK);\n \n             Iterator<String> filterIterator = filterValues.iterator();\n             while (filterIterator.hasNext()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzE5Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403196", "bodyText": "This is now fixed with 3 TextViews. My idea was to keep it independent from the number of options. So the views should be inflated one by one from another layout, just as needed. This should also make the code less verbose because you do not have to write everything multiple times (instead, using loops).", "author": "ByteHamster", "createdAt": "2020-06-07T21:23:33Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\nindex be420adaf..ece286eb4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n\n@@ -29,28 +28,26 @@ public abstract class FilterDialog {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openCustomDialog() {\n+    public void openDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n         AlertDialog.Builder builder = new AlertDialog.Builder(context);\n         builder.setTitle(R.string.filter);\n \n         LayoutInflater inflater = LayoutInflater.from(this.context);\n-        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n-        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+        LinearLayout layout = (LinearLayout) inflater.inflate(R.layout.filter_dialog_layout, null, false);\n+        builder.setView(layout);\n \n-        builder.setView(customLayout);\n+        for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n \n-        for (FeedItemEnum item : FeedItemEnum.values()) {\n-\n-            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n-            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n-            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n-            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n-            textView1.setText(item.values[1].displayName);\n-            textView1.setTextColor(Color.DKGRAY);\n-            textView2.setText(item.values[0].displayName);\n-            textView2.setTextColor(Color.DKGRAY);\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.filter_dialog_relative_cardview, null);\n+            RadioButton radioButton1 = row.findViewById(R.id.filter_dialog_radioButton1);\n+            RadioButton radioButton2 = row.findViewById(R.id.filter_dialog_radioButton2);\n+            RadioButton radioButton3 = row.findViewById(R.id.filter_dialog_radioButton3);\n+            radioButton1.setText(item.values[1].displayName);\n+            radioButton1.setTextColor(Color.BLACK);\n+            radioButton2.setText(item.values[0].displayName);\n+            radioButton2.setTextColor(Color.BLACK);\n \n             Iterator<String> filterIterator = filterValues.iterator();\n             while (filterIterator.hasNext()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzQyMQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403421", "bodyText": "The text color can also be specified with a color selector (similar to the backgrounds). That way, you do not need to set it in code. Additionally, this will make it easier to support both light and dark theme. Details: https://stackoverflow.com/a/3565624/4193263", "author": "ByteHamster", "createdAt": "2020-06-07T21:26:20Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n+            textView1.setText(item.values[1].displayName);\n+            textView1.setTextColor(Color.DKGRAY);\n+            textView2.setText(item.values[0].displayName);\n+            textView2.setTextColor(Color.DKGRAY);\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    textView1.setSelected(true);\n+                    textView2.setSelected(false);\n+                    textView1.setTextColor(Color.WHITE);\n+                    textView2.setTextColor(Color.DKGRAY);\n+                    textView3.setBackgroundResource(R.drawable.x_custom_on);\n+                }\n+                if (item.values[0].filterId.equals(nextItem)) {\n+                    item.values[0].setSelected(true);\n+                    item.values[1].setSelected(false);\n+                    textView2.setSelected(true);\n+                    textView1.setSelected(false);\n+                    textView2.setTextColor(Color.WHITE);\n+                    textView1.setTextColor(Color.DKGRAY);", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\nindex be420adaf..ece286eb4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n\n@@ -29,28 +28,26 @@ public abstract class FilterDialog {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openCustomDialog() {\n+    public void openDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n         AlertDialog.Builder builder = new AlertDialog.Builder(context);\n         builder.setTitle(R.string.filter);\n \n         LayoutInflater inflater = LayoutInflater.from(this.context);\n-        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n-        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+        LinearLayout layout = (LinearLayout) inflater.inflate(R.layout.filter_dialog_layout, null, false);\n+        builder.setView(layout);\n \n-        builder.setView(customLayout);\n+        for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n \n-        for (FeedItemEnum item : FeedItemEnum.values()) {\n-\n-            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n-            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n-            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n-            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n-            textView1.setText(item.values[1].displayName);\n-            textView1.setTextColor(Color.DKGRAY);\n-            textView2.setText(item.values[0].displayName);\n-            textView2.setTextColor(Color.DKGRAY);\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.filter_dialog_relative_cardview, null);\n+            RadioButton radioButton1 = row.findViewById(R.id.filter_dialog_radioButton1);\n+            RadioButton radioButton2 = row.findViewById(R.id.filter_dialog_radioButton2);\n+            RadioButton radioButton3 = row.findViewById(R.id.filter_dialog_radioButton3);\n+            radioButton1.setText(item.values[1].displayName);\n+            radioButton1.setTextColor(Color.BLACK);\n+            radioButton2.setText(item.values[0].displayName);\n+            radioButton2.setTextColor(Color.BLACK);\n \n             Iterator<String> filterIterator = filterValues.iterator();\n             while (filterIterator.hasNext()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzU3MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436403571", "bodyText": "If you use RadioButtons instead of TextViews, you do not need to un-check other items in the row manually. They can be styled just like the TextViews (background etc). Details: https://stackoverflow.com/a/55139080/4193263", "author": "ByteHamster", "createdAt": "2020-06-07T21:28:31Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,42 +29,143 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n+        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+\n+        builder.setView(customLayout);\n+\n+        for (FeedItemEnum item : FeedItemEnum.values()) {\n+\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n+            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n+            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n+            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n+            textView1.setText(item.values[1].displayName);\n+            textView1.setTextColor(Color.DKGRAY);\n+            textView2.setText(item.values[0].displayName);\n+            textView2.setTextColor(Color.DKGRAY);\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    textView1.setSelected(true);\n+                    textView2.setSelected(false);", "originalCommit": "6ab14073cf4a8dd99bfcd134e181c6ae5062d39a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1NjU1NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r436956554", "bodyText": "radio buttons it is", "author": "bws9000", "createdAt": "2020-06-08T19:41:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMzU3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\nindex be420adaf..ece286eb4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n\n@@ -29,28 +28,26 @@ public abstract class FilterDialog {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openCustomDialog() {\n+    public void openDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n         AlertDialog.Builder builder = new AlertDialog.Builder(context);\n         builder.setTitle(R.string.filter);\n \n         LayoutInflater inflater = LayoutInflater.from(this.context);\n-        View customLayout = inflater.inflate(R.layout.custom_filter_dialog_layout, null);\n-        TableLayout tableLayout = customLayout.findViewById(R.id.custom_dialog_tableLayout1);\n+        LinearLayout layout = (LinearLayout) inflater.inflate(R.layout.filter_dialog_layout, null, false);\n+        builder.setView(layout);\n \n-        builder.setView(customLayout);\n+        for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n \n-        for (FeedItemEnum item : FeedItemEnum.values()) {\n-\n-            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.custom_dialog_filter_row, null);\n-            TextView textView1 = row.findViewById(R.id.custom_dialog_textView1);\n-            TextView textView2 = row.findViewById(R.id.custom_dialog_textView2);\n-            TextView textView3 = row.findViewById(R.id.custom_dialog_textView3);\n-            textView1.setText(item.values[1].displayName);\n-            textView1.setTextColor(Color.DKGRAY);\n-            textView2.setText(item.values[0].displayName);\n-            textView2.setTextColor(Color.DKGRAY);\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.filter_dialog_relative_cardview, null);\n+            RadioButton radioButton1 = row.findViewById(R.id.filter_dialog_radioButton1);\n+            RadioButton radioButton2 = row.findViewById(R.id.filter_dialog_radioButton2);\n+            RadioButton radioButton3 = row.findViewById(R.id.filter_dialog_radioButton3);\n+            radioButton1.setText(item.values[1].displayName);\n+            radioButton1.setTextColor(Color.BLACK);\n+            radioButton2.setText(item.values[0].displayName);\n+            radioButton2.setTextColor(Color.BLACK);\n \n             Iterator<String> filterIterator = filterValues.iterator();\n             while (filterIterator.hasNext()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4NzE2Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442687167", "bodyText": "Was this change intended?", "author": "ByteHamster", "createdAt": "2020-06-19T07:48:07Z", "path": "app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java", "diffHunk": "@@ -293,7 +293,7 @@ private String generateDeviceID(List<GpodnetDevice> gpodnetDevices) {\n         int num = 0;\n \n         while (isDeviceWithIdInList(id, gpodnetDevices)) {\n-            id = baseId + \"_\" + num;\n+            id = baseId + \"filterdialog_\" + num;", "originalCommit": "a6c75dcd0209764e77719177f549e3df78d4aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc5NDg3Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442794877", "bodyText": "no, definitely not.", "author": "bws9000", "createdAt": "2020-06-19T11:49:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4NzE2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java b/app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java\nindex 251fb7d20..337880317 100644\n--- a/app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/activity/gpoddernet/GpodnetAuthenticationActivity.java\n\n@@ -293,7 +293,7 @@ public class GpodnetAuthenticationActivity extends AppCompatActivity {\n         int num = 0;\n \n         while (isDeviceWithIdInList(id, gpodnetDevices)) {\n-            id = baseId + \"filterdialog_\" + num;\n+            id = baseId + \"_\" + num;\n             num++;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4NzUwMA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442687500", "bodyText": "The method is still named Custom. Please just use the old name, so it does not require changes to other (unrelated) files", "author": "ByteHamster", "createdAt": "2020-06-19T07:48:50Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,39 +28,103 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {", "originalCommit": "a6c75dcd0209764e77719177f549e3df78d4aee1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\nindex db1d5a497..ece286eb4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n\n@@ -28,7 +28,7 @@ public abstract class FilterDialog {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openCustomDialog() {\n+    public void openDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n         AlertDialog.Builder builder = new AlertDialog.Builder(context);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442688759", "bodyText": "I do not really like this duplicated code. Things like this are always hard to maintain.\n\nOne thing; no selectors because every time an element is clicked it needs to update another element, if you can do that with a radio group I still need to update the clear image drawable and it seems to make more sense just to use a couple lines of code where everything else is.\n\nIf you make the clear button a RadioButton and move the RadioGroup out of the CardView, so that it contains the clear button, you do not have to care about de-selecting other items and changing their background. This can then be done automatically.", "author": "ByteHamster", "createdAt": "2020-06-19T07:51:27Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java", "diffHunk": "@@ -21,39 +28,103 @@ public FilterDialog(Context context, FeedItemFilter feedItemFilter) {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openDialog() {\n-        final String[] items = context.getResources().getStringArray(R.array.episode_filter_options);\n-        final String[] values = context.getResources().getStringArray(R.array.episode_filter_values);\n-        final boolean[] checkedItems = new boolean[items.length];\n+    public void openCustomDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        builder.setTitle(R.string.filter);\n \n-        // make sure we have no empty strings in the filter list\n-        for (String filterValue : filterValues) {\n-            if (TextUtils.isEmpty(filterValue)) {\n-                filterValues.remove(filterValue);\n-            }\n-        }\n+        LayoutInflater inflater = LayoutInflater.from(this.context);\n+        LinearLayout layout = (LinearLayout) inflater.inflate(R.layout.filter_dialog_layout, null, false);\n+        builder.setView(layout);\n+\n+        for (FeedItemFilterGroup.FeedItemEnum item : FeedItemFilterGroup.FeedItemEnum.values()) {\n \n-        for (int i = 0; i < values.length; i++) {\n-            String value = values[i];\n-            if (filterValues.contains(value)) {\n-                checkedItems[i] = true;\n+            RelativeLayout row = (RelativeLayout) inflater.inflate(R.layout.filter_dialog_relative_cardview, null);\n+            RadioButton radioButton1 = row.findViewById(R.id.filter_dialog_radioButton1);\n+            RadioButton radioButton2 = row.findViewById(R.id.filter_dialog_radioButton2);\n+            RadioButton radioButton3 = row.findViewById(R.id.filter_dialog_radioButton3);\n+            radioButton1.setText(item.values[1].displayName);\n+            radioButton1.setTextColor(Color.BLACK);\n+            radioButton2.setText(item.values[0].displayName);\n+            radioButton2.setTextColor(Color.BLACK);\n+\n+            Iterator<String> filterIterator = filterValues.iterator();\n+            while (filterIterator.hasNext()) {\n+                String nextItem = filterIterator.next();\n+                if (item.values[1].filterId.equals(nextItem)) {\n+                    item.values[1].setSelected(true);\n+                    item.values[0].setSelected(false);\n+                    radioButton1.setBackgroundResource(R.color.accent_light);\n+                    radioButton2.setBackgroundResource(R.color.master_switch_background_light);\n+                    radioButton3.setBackgroundResource(R.drawable.filter_dialog_x_on);\n+                    radioButton1.setSelected(true);\n+                    radioButton2.setSelected(false);\n+                    radioButton1.setTextColor(Color.WHITE);\n+                    radioButton2.setTextColor(Color.BLACK);", "originalCommit": "a6c75dcd0209764e77719177f549e3df78d4aee1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc5NTI5Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442795293", "bodyText": "right", "author": "bws9000", "createdAt": "2020-06-19T11:50:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzODQ4OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r443138488", "bodyText": "Here is the problem:\nYou want rounded corners with no graphics. The clear button was always a radioButton because I've tried to make that work. It doesn't.\nThe left and right radioButtons have to be nested in the cardView so the cardView can handle giving the rounded corner effect on the radioButtons. The only way I can have 3 is if I do something like this -->\n( left  | middle | right )\ndoing...\n( left | right ) (clear)\nwould require 2 cardViews and why would you want to do that?\nSo I can only fit a radioGroup with 2 radioButtons to give the desired effect that you want.\nTo keep the effect you want I had to hardcode the setSelected because I need the clear button outside the radioGroup and if I'm going to keep it outside the radioGroup because I have to I can't use a selection because each element changes another... (ie I can't set \"set clear button to dark\" inside the on/off selection element)\nIf you want I can put the drawables back and keep everything in 1 radioGroup but you can't have both and still get the rounded corner overlay on the radioButton colors.", "author": "bws9000", "createdAt": "2020-06-20T15:18:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzOTQyMA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r443139420", "bodyText": "Doesn't it work to put the RadioGroup around both, the CardView and the Clear button? Then all buttons are in one RadioGroup and only two of them are in the CardView.\n<RadioGroup>\n    <CardView>\n        <LinearLayout>\n            <RadioButton />\n            <RadioButton />\n        </LinearLayout>\n    </CardView>\n    <RadioButton /> <!-- Clear button -->\n</RadioGroup>", "author": "ByteHamster", "createdAt": "2020-06-20T15:32:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzOTc0Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r443139746", "bodyText": "Ooh wait. Now I get the problem. RadioButtons only work that way if they are direct children of the RadioGroup. I will try to find a solution for this.", "author": "ByteHamster", "createdAt": "2020-06-20T15:38:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzOTk3MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r443139971", "bodyText": "Okay, another thing I could do is just have the 2 on/off in the radioGroup and selector and only update 1 thing(clear button) in the code onclick event() to simplify it more.", "author": "bws9000", "createdAt": "2020-06-20T15:42:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODc1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\nindex db1d5a497..ece286eb4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FilterDialog.java\n\n@@ -28,7 +28,7 @@ public abstract class FilterDialog {\n         this.filter = feedItemFilter;\n     }\n \n-    public void openCustomDialog() {\n+    public void openDialog() {\n \n         final Set<String> filterValues = new HashSet<>(Arrays.asList(filter.getValues()));\n         AlertDialog.Builder builder = new AlertDialog.Builder(context);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4OTU2NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r442689565", "bodyText": "I am pretty sure that this should not be changed", "author": "ByteHamster", "createdAt": "2020-06-19T07:53:08Z", "path": "core/src/main/java/de/danoeh/antennapod/core/util/FileNameGenerator.java", "diffHunk": "@@ -44,7 +44,7 @@ public static String generateFileName(String string) {\n         if (TextUtils.isEmpty(filename)) {\n             return randomString(8);\n         } else if (filename.length() >= MAX_FILENAME_LENGTH) {\n-            return filename.substring(0, MAX_FILENAME_LENGTH - MD5_HEX_LENGTH - 1) + \"_\" + md5(filename);\n+            return filename.substring(0, MAX_FILENAME_LENGTH - MD5_HEX_LENGTH - 1) + \"filterdialog_\" + md5(filename);", "originalCommit": "a6c75dcd0209764e77719177f549e3df78d4aee1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/util/FileNameGenerator.java b/core/src/main/java/de/danoeh/antennapod/core/util/FileNameGenerator.java\nindex 4caeeb349..220a783f3 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/FileNameGenerator.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/util/FileNameGenerator.java\n\n@@ -44,7 +44,7 @@ public class FileNameGenerator {\n         if (TextUtils.isEmpty(filename)) {\n             return randomString(8);\n         } else if (filename.length() >= MAX_FILENAME_LENGTH) {\n-            return filename.substring(0, MAX_FILENAME_LENGTH - MD5_HEX_LENGTH - 1) + \"filterdialog_\" + md5(filename);\n+            return filename.substring(0, MAX_FILENAME_LENGTH - MD5_HEX_LENGTH - 1) + \"_\" + md5(filename);\n         } else {\n             return filename;\n         }\n"}}, {"oid": "f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "url": "https://github.com/AntennaPod/AntennaPod/commit/f243bcd4cce1f3af9449c74fa38f6c90f2ea9d22", "message": "Redesign filter dialog", "committedDate": "2020-06-21T10:59:05Z", "type": "commit"}, {"oid": "7de9e0d4c1807bff054c1aef999fc600088ab521", "url": "https://github.com/AntennaPod/AntennaPod/commit/7de9e0d4c1807bff054c1aef999fc600088ab521", "message": "Using state lists for colors", "committedDate": "2020-06-21T11:17:36Z", "type": "commit"}, {"oid": "7de9e0d4c1807bff054c1aef999fc600088ab521", "url": "https://github.com/AntennaPod/AntennaPod/commit/7de9e0d4c1807bff054c1aef999fc600088ab521", "message": "Using state lists for colors", "committedDate": "2020-06-21T11:17:36Z", "type": "forcePushed"}, {"oid": "a4ce162491cb93535ee1a03d526c8d1228d58fd2", "url": "https://github.com/AntennaPod/AntennaPod/commit/a4ce162491cb93535ee1a03d526c8d1228d58fd2", "message": "Redesign filter dialog", "committedDate": "2020-06-27T14:24:26Z", "type": "commit"}, {"oid": "ecf4b60fcee3d8a180a269a6560e6182ea09110d", "url": "https://github.com/AntennaPod/AntennaPod/commit/ecf4b60fcee3d8a180a269a6560e6182ea09110d", "message": "Merge pull request #7 from AntennaPod/develop\n\nupdate me", "committedDate": "2020-07-03T00:25:15Z", "type": "commit"}, {"oid": "f4677c0d9a7812b7c6e0c3f473bd8f50e7c03901", "url": "https://github.com/AntennaPod/AntennaPod/commit/f4677c0d9a7812b7c6e0c3f473bd8f50e7c03901", "message": "Redesign filter dialog", "committedDate": "2020-07-03T00:34:11Z", "type": "commit"}, {"oid": "70aa6b1f6d8a409fd68b81d71b7a5d32575f3e99", "url": "https://github.com/AntennaPod/AntennaPod/commit/70aa6b1f6d8a409fd68b81d71b7a5d32575f3e99", "message": "Redesign filter dialog", "committedDate": "2020-07-03T00:50:11Z", "type": "commit"}, {"oid": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "url": "https://github.com/AntennaPod/AntennaPod/commit/e221602f8fbf4c135ac4cf1b50977559b06d470b", "message": "Redesign filter dialog", "committedDate": "2020-07-03T01:02:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMTc3Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450501773", "bodyText": "Why is this needed?", "author": "ByteHamster", "createdAt": "2020-07-06T21:59:36Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -11,33 +13,41 @@\n import static de.danoeh.antennapod.core.feed.FeedItem.TAG_FAVORITE;\n \n public class FeedItemFilter {\n+\n     private final String[] mProperties;\n \n     private boolean showPlayed = false;\n     private boolean showUnplayed = false;\n     private boolean showPaused = false;\n+    private boolean showNotPaused = false;\n     private boolean showQueued = false;\n     private boolean showNotQueued = false;\n     private boolean showDownloaded = false;\n     private boolean showNotDownloaded = false;\n     private boolean showHasMedia = false;\n+    private boolean showNoMedia = false;\n     private boolean showIsFavorite = false;\n+    private boolean showNotFavorite = false;\n \n     public FeedItemFilter(String properties) {\n         this(TextUtils.split(properties, \",\"));\n     }\n \n     public FeedItemFilter(String[] properties) {\n         this.mProperties = properties;\n-        for(String property : properties) {\n+        Log.d(\"***xxx***\", Arrays.toString(properties));\n+        for (String property : properties) {\n             // see R.arrays.feed_filter_values\n-            switch(property) {\n+            switch (\"\" + property) {", "originalCommit": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1ODgxNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450858815", "bodyText": "corrected in filterDialog, when nothing is selected and confirmed\nif (filterValues.contains(null)) { filterValues.clear()  }", "author": "bws9000", "createdAt": "2020-07-07T13:21:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMTc3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "2ce23f6868a1205996955f7cbbbb004246ebf9b1", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\nindex 7c707da38..d34e23506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n\n@@ -35,10 +35,9 @@ public class FeedItemFilter {\n \n     public FeedItemFilter(String[] properties) {\n         this.mProperties = properties;\n-        Log.d(\"***xxx***\", Arrays.toString(properties));\n         for (String property : properties) {\n             // see R.arrays.feed_filter_values\n-            switch (\"\" + property) {\n+            switch (property) {\n                 case \"unplayed\":\n                     showUnplayed = true;\n                     break;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjExNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450502115", "bodyText": "This means that the filter will stop completely and silently if there is an unknown value. I think it would be better to just ignore that value by calling break instead.", "author": "ByteHamster", "createdAt": "2020-07-06T22:00:32Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -56,9 +66,17 @@ public FeedItemFilter(String[] properties) {\n                 case \"has_media\":\n                     showHasMedia = true;\n                     break;\n+                case \"no_media\":\n+                    showNoMedia = true;\n+                    break;\n                 case \"is_favorite\":\n                     showIsFavorite = true;\n                     break;\n+                case \"not_favorite\":\n+                    showNotFavorite = true;\n+                    break;\n+                default:\n+                    return;", "originalCommit": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1NTk3Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450855977", "bodyText": "Okay  \ud83d\udc4d\nThere should be no unknown values now.", "author": "bws9000", "createdAt": "2020-07-07T13:17:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjExNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2ce23f6868a1205996955f7cbbbb004246ebf9b1", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\nindex 7c707da38..d34e23506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n\n@@ -76,7 +75,7 @@ public class FeedItemFilter {\n                     showNotFavorite = true;\n                     break;\n                 default:\n-                    return;\n+                    break;\n             }\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjk5Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450502996", "bodyText": "Checkstyle does not like this change. Please either keep the line as it is or add braces. The other checkstyle violations about missing braces can be ignored, for now. I can merge it without those tests passing.", "author": "ByteHamster", "createdAt": "2020-07-06T22:02:37Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java", "diffHunk": "@@ -67,7 +85,7 @@ public FeedItemFilter(String[] properties) {\n      * Run a list of feed items through the filter.\n      */\n     public List<FeedItem> filter(List<FeedItem> items) {\n-        if(mProperties.length == 0) return items;\n+        if (mProperties.length == 0) return items;", "originalCommit": "e221602f8fbf4c135ac4cf1b50977559b06d470b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1NTgwNg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450855806", "bodyText": "\ud83d\udc4d i'm using intelliJ to format the code, i guess it's not so good huh", "author": "bws9000", "createdAt": "2020-07-07T13:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg2NjM2OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4178#discussion_r450866369", "bodyText": "Code styles can be different. There is no \"right\" or \"wrong\" way to format files. The most important thing is that it is consistent throughout the project. For AntennaPod, we started to use the Google Java code style a few months ago, which does not permit if statements without braces. If you remember the goto fail vulnerability, you know why ;)\nTo prevent a huge commit that touches every file, only new code needs to comply. The CI only complains about lines that were changed, so if you do not change the line, it will not complain here. I will make an exception in this PR: The new filters you added can stay single-line to be consistent within the file, even if it does not comply with the code style.", "author": "ByteHamster", "createdAt": "2020-07-07T13:32:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMjk5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "2ce23f6868a1205996955f7cbbbb004246ebf9b1", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\nindex 7c707da38..d34e23506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedItemFilter.java\n\n@@ -85,7 +84,7 @@ public class FeedItemFilter {\n      * Run a list of feed items through the filter.\n      */\n     public List<FeedItem> filter(List<FeedItem> items) {\n-        if (mProperties.length == 0) return items;\n+        if(mProperties.length == 0) return items;\n \n         List<FeedItem> result = new ArrayList<>();\n \n"}}, {"oid": "06f36d12d8ac3e9f00e39f47eda4dfd48dd5e69a", "url": "https://github.com/AntennaPod/AntennaPod/commit/06f36d12d8ac3e9f00e39f47eda4dfd48dd5e69a", "message": "Merge pull request #8 from AntennaPod/develop\n\nupdate me", "committedDate": "2020-07-07T14:44:29Z", "type": "commit"}, {"oid": "2ce23f6868a1205996955f7cbbbb004246ebf9b1", "url": "https://github.com/AntennaPod/AntennaPod/commit/2ce23f6868a1205996955f7cbbbb004246ebf9b1", "message": "Redesign filter dialog", "committedDate": "2020-07-07T14:55:56Z", "type": "commit"}, {"oid": "d90ca124c0f755651334011d11584f58dd0ce3bc", "url": "https://github.com/AntennaPod/AntennaPod/commit/d90ca124c0f755651334011d11584f58dd0ce3bc", "message": "Merge pull request #9 from AntennaPod/develop\n\nupdate me", "committedDate": "2020-07-11T16:01:41Z", "type": "commit"}, {"oid": "722bc2616ef25a7f209d4603f04963fec10d3d06", "url": "https://github.com/AntennaPod/AntennaPod/commit/722bc2616ef25a7f209d4603f04963fec10d3d06", "message": "Redesign filter dialog", "committedDate": "2020-07-11T16:07:39Z", "type": "commit"}, {"oid": "051714dff81061d33fe8cbc14aa9f278b97ccbfe", "url": "https://github.com/AntennaPod/AntennaPod/commit/051714dff81061d33fe8cbc14aa9f278b97ccbfe", "message": "Redesign filter dialog", "committedDate": "2020-07-11T21:09:50Z", "type": "commit"}, {"oid": "a26a41514ae79af7cd9bdfa8838ce62bde1b1c35", "url": "https://github.com/AntennaPod/AntennaPod/commit/a26a41514ae79af7cd9bdfa8838ce62bde1b1c35", "message": "Resize filter rows automatically", "committedDate": "2020-07-13T09:45:01Z", "type": "commit"}, {"oid": "03f2198ed5e977c37f0413483a10ad421d06d153", "url": "https://github.com/AntennaPod/AntennaPod/commit/03f2198ed5e977c37f0413483a10ad421d06d153", "message": "Fixed colors in dark theme", "committedDate": "2020-07-13T10:06:34Z", "type": "commit"}, {"oid": "655c7a9884504206747b2789f0c10cdf72ac3608", "url": "https://github.com/AntennaPod/AntennaPod/commit/655c7a9884504206747b2789f0c10cdf72ac3608", "message": "Fixed clear button clearing all values", "committedDate": "2020-07-13T10:10:00Z", "type": "commit"}, {"oid": "364444e4d64f31ba8d3f8f551680448b2e48edb8", "url": "https://github.com/AntennaPod/AntennaPod/commit/364444e4d64f31ba8d3f8f551680448b2e48edb8", "message": "Reverted unrelated changes", "committedDate": "2020-07-13T10:14:23Z", "type": "commit"}]}