{"pr_number": 4204, "pr_title": "Lint fixes", "pr_createdAt": "2020-05-29T05:37:31Z", "pr_url": "https://github.com/AntennaPod/AntennaPod/pull/4204", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMDQyNA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432310424", "bodyText": "I think the lines got too long here. You can view details on the CI output.", "author": "ByteHamster", "createdAt": "2020-05-29T07:42:38Z", "path": "app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java", "diffHunk": "@@ -116,38 +116,38 @@ public void perform(UiController uiController, View view) {\n      * Clear all app databases\n      */\n     public static void clearPreferences() {\n-        File root = InstrumentationRegistry.getTargetContext().getFilesDir().getParentFile();\n+        File root = InstrumentationRegistry.getInstrumentation().getTargetContext().getFilesDir().getParentFile();\n         String[] sharedPreferencesFileNames = new File(root, \"shared_prefs\").list();\n         for (String fileName : sharedPreferencesFileNames) {\n             System.out.println(\"Cleared database: \" + fileName);\n-            InstrumentationRegistry.getTargetContext().getSharedPreferences(\n+            InstrumentationRegistry.getInstrumentation().getTargetContext().getSharedPreferences(\n                     fileName.replace(\".xml\", \"\"), Context.MODE_PRIVATE).edit().clear().commit();\n         }\n \n-        InstrumentationRegistry.getTargetContext().getSharedPreferences(MainActivity.PREF_NAME, Context.MODE_PRIVATE)\n+        InstrumentationRegistry.getInstrumentation().getTargetContext().getSharedPreferences(MainActivity.PREF_NAME, Context.MODE_PRIVATE)", "originalCommit": "56a4f79b410099868e9d1bc16e3ab0f9fb7ceb7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2NjI5OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432666299", "bodyText": "Yeah, I'll fix those.", "author": "TacoTheDank", "createdAt": "2020-05-29T18:34:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMDQyNA=="}], "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java b/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\nindex aecf76ec1..41c8365fb 100644\n--- a/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\n+++ b/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\n\n@@ -116,30 +116,30 @@ public class EspressoTestUtils {\n      * Clear all app databases\n      */\n     public static void clearPreferences() {\n-        File root = InstrumentationRegistry.getInstrumentation().getTargetContext().getFilesDir().getParentFile();\n+        File root = InstrumentationRegistry.getTargetContext().getFilesDir().getParentFile();\n         String[] sharedPreferencesFileNames = new File(root, \"shared_prefs\").list();\n         for (String fileName : sharedPreferencesFileNames) {\n             System.out.println(\"Cleared database: \" + fileName);\n-            InstrumentationRegistry.getInstrumentation().getTargetContext().getSharedPreferences(\n+            InstrumentationRegistry.getTargetContext().getSharedPreferences(\n                     fileName.replace(\".xml\", \"\"), Context.MODE_PRIVATE).edit().clear().commit();\n         }\n \n-        InstrumentationRegistry.getInstrumentation().getTargetContext().getSharedPreferences(MainActivity.PREF_NAME, Context.MODE_PRIVATE)\n+        InstrumentationRegistry.getTargetContext().getSharedPreferences(MainActivity.PREF_NAME, Context.MODE_PRIVATE)\n                 .edit()\n                 .putBoolean(MainActivity.PREF_IS_FIRST_LAUNCH, false)\n                 .commit();\n \n-        PreferenceManager.getDefaultSharedPreferences(InstrumentationRegistry.getInstrumentation().getTargetContext())\n+        PreferenceManager.getDefaultSharedPreferences(InstrumentationRegistry.getTargetContext())\n                 .edit()\n                 .putString(UserPreferences.PREF_UPDATE_INTERVAL, \"0\")\n                 .commit();\n \n-        RatingDialog.init(InstrumentationRegistry.getInstrumentation().getTargetContext());\n+        RatingDialog.init(InstrumentationRegistry.getTargetContext());\n         RatingDialog.saveRated();\n     }\n \n     public static void setLastNavFragment(String tag) {\n-        InstrumentationRegistry.getInstrumentation().getTargetContext().getSharedPreferences(\n+        InstrumentationRegistry.getTargetContext().getSharedPreferences(\n                 NavDrawerFragment.PREF_NAME, Context.MODE_PRIVATE)\n                 .edit()\n                 .putString(NavDrawerFragment.PREF_LAST_FRAGMENT_TAG, tag)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMDk1Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432310957", "bodyText": "The expected result should be added to the front.", "author": "ByteHamster", "createdAt": "2020-05-29T07:43:30Z", "path": "app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java", "diffHunk": "@@ -82,7 +82,7 @@ private Downloader download(String url, String title, boolean expectedResult, bo\n         downloader.call();\n         DownloadStatus status = downloader.getResult();\n         assertNotNull(status);\n-        assertTrue(status.isSuccessful() == expectedResult);\n+        assertEquals(status.isSuccessful(), expectedResult);", "originalCommit": "56a4f79b410099868e9d1bc16e3ab0f9fb7ceb7b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java b/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java\nindex 6db32c023..301ceea6c 100644\n--- a/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java\n\n@@ -82,7 +82,7 @@ public class HttpDownloaderTest {\n         downloader.call();\n         DownloadStatus status = downloader.getResult();\n         assertNotNull(status);\n-        assertEquals(status.isSuccessful(), expectedResult);\n+        assertTrue(status.isSuccessful() == expectedResult);\n         assertTrue(status.isDone());\n         // the file should not exist if the download has failed and deleteExisting was true\n         assertTrue(!deleteExisting || new File(feedFile.getFile_url()).exists() == expectedResult);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMjE0NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432312144", "bodyText": "I think re-organizing the imports throughout the whole project creates too much noise. I will add a checkstyle rule for import order etc at some point but at the moment, this is not too important.", "author": "ByteHamster", "createdAt": "2020-05-29T07:45:54Z", "path": "app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java", "diffHunk": "@@ -46,7 +45,6 @@\n import static de.test.antennapod.EspressoTestUtils.waitForView;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n import static junit.framework.TestCase.assertTrue;\n-import static org.hamcrest.Matchers.allOf;", "originalCommit": "56a4f79b410099868e9d1bc16e3ab0f9fb7ceb7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MzM3NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432663375", "bodyText": "Well, it's not actually reorganizing, it's just getting rid of imports that aren't being used. Actual re-organizing looks much messier.", "author": "TacoTheDank", "createdAt": "2020-05-29T18:28:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMjE0NA=="}], "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\nindex 507480a82..6741cbc86 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n\n@@ -45,6 +46,7 @@ import static de.test.antennapod.EspressoTestUtils.clickPreference;\n import static de.test.antennapod.EspressoTestUtils.waitForView;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n import static junit.framework.TestCase.assertTrue;\n+import static org.hamcrest.Matchers.allOf;\n import static org.hamcrest.Matchers.endsWith;\n import static org.hamcrest.Matchers.not;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMjU3Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432312576", "bodyText": "This is unused. The activity does not have an options menu, so it can be removed completely.", "author": "ByteHamster", "createdAt": "2020-05-29T07:46:50Z", "path": "app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java", "diffHunk": "@@ -227,15 +227,14 @@ public void finish() {\n \n     @Override\n     public boolean onOptionsItemSelected(MenuItem item) {\n-        switch (item.getItemId()) {\n-            case android.R.id.home:\n-                Intent destIntent = new Intent(this, MainActivity.class);\n-                if (NavUtils.shouldUpRecreateTask(this, destIntent)) {\n-                    startActivity(destIntent);\n-                } else {\n-                    NavUtils.navigateUpFromSameTask(this);\n-                }\n-                return true;\n+        if (item.getItemId() == android.R.id.home) {", "originalCommit": "56a4f79b410099868e9d1bc16e3ab0f9fb7ceb7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MjU4Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432662583", "bodyText": "Sorry, I'd rather not make changes I wasn't intending to make as part of this pull request. If you'd like to do that, I'll leave it to you.", "author": "TacoTheDank", "createdAt": "2020-05-29T18:27:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMjU3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java b/app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java\nindex a0644a4c4..0f7bab273 100644\n--- a/app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java\n\n@@ -227,14 +227,15 @@ public class OnlineFeedViewActivity extends AppCompatActivity {\n \n     @Override\n     public boolean onOptionsItemSelected(MenuItem item) {\n-        if (item.getItemId() == android.R.id.home) {\n-            Intent destIntent = new Intent(this, MainActivity.class);\n-            if (NavUtils.shouldUpRecreateTask(this, destIntent)) {\n-                startActivity(destIntent);\n-            } else {\n-                NavUtils.navigateUpFromSameTask(this);\n-            }\n-            return true;\n+        switch (item.getItemId()) {\n+            case android.R.id.home:\n+                Intent destIntent = new Intent(this, MainActivity.class);\n+                if (NavUtils.shouldUpRecreateTask(this, destIntent)) {\n+                    startActivity(destIntent);\n+                } else {\n+                    NavUtils.navigateUpFromSameTask(this);\n+                }\n+                return true;\n         }\n         return super.onOptionsItemSelected(item);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxMzcyMQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432313721", "bodyText": "Please add a comment that this is a deliberate fall-through", "author": "ByteHamster", "createdAt": "2020-05-29T07:49:10Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java", "diffHunk": "@@ -136,6 +135,7 @@ public void onEventMainThread(QueueEvent event) {\n                 recyclerAdapter.notifyItemInserted(event.position);\n                 break;\n             case SET_QUEUE:\n+            case SORTED:", "originalCommit": "56a4f79b410099868e9d1bc16e3ab0f9fb7ceb7b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java\nindex 10f513970..49c53627f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java\n\n@@ -135,7 +136,6 @@ public class QueueFragment extends Fragment {\n                 recyclerAdapter.notifyItemInserted(event.position);\n                 break;\n             case SET_QUEUE:\n-            case SORTED:\n                 queue = event.items;\n                 recyclerAdapter.notifyDataSetChanged();\n                 break;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxNTYxNA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432315614", "bodyText": "I think this is harder to read. It breaks the symmetry of the items that are compared and makes nextPageLink a special case. Same for the other compare functions.", "author": "ByteHamster", "createdAt": "2020-05-29T07:53:01Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/Feed.java", "diffHunk": "@@ -341,10 +341,7 @@ public boolean compareWithOther(Feed other) {\n         if (other.isPaged() && !this.isPaged()) {\n             return true;\n         }\n-        if (!TextUtils.equals(other.getNextPageLink(), this.getNextPageLink())) {\n-            return true;\n-        }\n-        return false;\n+        return !TextUtils.equals(other.getNextPageLink(), this.getNextPageLink());", "originalCommit": "56a4f79b410099868e9d1bc16e3ab0f9fb7ceb7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1ODA2OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432658068", "bodyText": "I think it's actually a bit easier to read that way, but alright, I'll change it back.", "author": "TacoTheDank", "createdAt": "2020-05-29T18:18:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxNTYxNA=="}], "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/Feed.java b/core/src/main/java/de/danoeh/antennapod/core/feed/Feed.java\nindex b7cdecb4a..0889e5182 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/Feed.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/Feed.java\n\n@@ -341,7 +341,10 @@ public class Feed extends FeedFile implements ImageResource {\n         if (other.isPaged() && !this.isPaged()) {\n             return true;\n         }\n-        return !TextUtils.equals(other.getNextPageLink(), this.getNextPageLink());\n+        if (!TextUtils.equals(other.getNextPageLink(), this.getNextPageLink())) {\n+            return true;\n+        }\n+        return false;\n     }\n \n     public FeedItem getMostRecentItem() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxNjA5MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432316090", "bodyText": "Please add a comment that this is a deliberate fall-through", "author": "ByteHamster", "createdAt": "2020-05-29T07:53:55Z", "path": "core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java", "diffHunk": "@@ -826,8 +826,8 @@ public static void stereoToMono(boolean enable) {\n     public static VideoBackgroundBehavior getVideoBackgroundBehavior() {\n         switch (prefs.getString(PREF_VIDEO_BEHAVIOR, \"pip\")) {\n             case \"stop\": return VideoBackgroundBehavior.STOP;\n-            case \"pip\": return VideoBackgroundBehavior.PICTURE_IN_PICTURE;\n             case \"continue\": return VideoBackgroundBehavior.CONTINUE_PLAYING;\n+            case \"pip\":", "originalCommit": "56a4f79b410099868e9d1bc16e3ab0f9fb7ceb7b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java\nindex a2d92673e..876251563 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java\n\n@@ -826,8 +826,8 @@ public class UserPreferences {\n     public static VideoBackgroundBehavior getVideoBackgroundBehavior() {\n         switch (prefs.getString(PREF_VIDEO_BEHAVIOR, \"pip\")) {\n             case \"stop\": return VideoBackgroundBehavior.STOP;\n+            case \"pip\": return VideoBackgroundBehavior.PICTURE_IN_PICTURE;\n             case \"continue\": return VideoBackgroundBehavior.CONTINUE_PLAYING;\n-            case \"pip\":\n             default: return VideoBackgroundBehavior.PICTURE_IN_PICTURE;\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxNzE0NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432317145", "bodyText": "Long.compare was added in API 19 but we support API 16+", "author": "ByteHamster", "createdAt": "2020-05-29T07:55:58Z", "path": "core/src/main/java/de/danoeh/antennapod/core/util/comparator/ChapterStartTimeComparator.java", "diffHunk": "@@ -8,13 +8,7 @@\n \n \t@Override\n \tpublic int compare(Chapter lhs, Chapter rhs) {\n-\t\tif (lhs.getStart() == rhs.getStart()) {\n-\t\t\treturn 0;\n-\t\t} else if (lhs.getStart() < rhs.getStart()) {\n-\t\t\treturn -1;\n-\t\t} else {\n-\t\t\treturn 1;\n-\t\t}\n+\t\treturn Long.compare(lhs.getStart(), rhs.getStart());", "originalCommit": "56a4f79b410099868e9d1bc16e3ab0f9fb7ceb7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY3MjA5OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r432672099", "bodyText": "That's not an issue here, actually. What I think you're referring to is this compare specifically, which isn't what's being used here.\nhttps://stackoverflow.com/questions/43045966/long-compare-works-on-androidapi19-despite-docu-says-it-should-not\nI'm not getting any lint warning from it.", "author": "TacoTheDank", "createdAt": "2020-05-29T18:46:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxNzE0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/util/comparator/ChapterStartTimeComparator.java b/core/src/main/java/de/danoeh/antennapod/core/util/comparator/ChapterStartTimeComparator.java\nindex 920a1ef8a..8bd23c2ed 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/comparator/ChapterStartTimeComparator.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/util/comparator/ChapterStartTimeComparator.java\n\n@@ -8,7 +8,13 @@ public class ChapterStartTimeComparator implements Comparator<Chapter> {\n \n \t@Override\n \tpublic int compare(Chapter lhs, Chapter rhs) {\n-\t\treturn Long.compare(lhs.getStart(), rhs.getStart());\n+\t\tif (lhs.getStart() == rhs.getStart()) {\n+\t\t\treturn 0;\n+\t\t} else if (lhs.getStart() < rhs.getStart()) {\n+\t\t\treturn -1;\n+\t\t} else {\n+\t\t\treturn 1;\n+\t\t}\n \t}\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3MzM3NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453173375", "bodyText": "I think this is now harder to read than before. Before, you can directly see that there are two separate things happening. After, they are more interwoven, so you have to read more code to understand what is going on. Additionally, the intent name is no longer correct.", "author": "ByteHamster", "createdAt": "2020-07-11T08:47:55Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java", "diffHunk": "@@ -177,21 +177,21 @@ private void addActions(NotificationCompat.Builder notification, MediaSessionCom\n         }\n         numActions++;\n \n+        PendingIntent pauseButtonPendingIntent;\n         if (playerStatus == PlayerStatus.PLAYING) {\n-            PendingIntent pauseButtonPendingIntent = getPendingIntentForMediaAction(\n+            pauseButtonPendingIntent = getPendingIntentForMediaAction(\n                     KeyEvent.KEYCODE_MEDIA_PAUSE, numActions);\n             notification.addAction(R.drawable.ic_notification_pause, //pause action\n                     context.getString(R.string.pause_label),\n                     pauseButtonPendingIntent);\n-            compactActionList.add(numActions++);\n         } else {\n-            PendingIntent playButtonPendingIntent = getPendingIntentForMediaAction(\n+            pauseButtonPendingIntent = getPendingIntentForMediaAction(\n                     KeyEvent.KEYCODE_MEDIA_PLAY, numActions);\n             notification.addAction(R.drawable.ic_notification_play, //play action\n                     context.getString(R.string.play_label),\n-                    playButtonPendingIntent);\n-            compactActionList.add(numActions++);\n+                    pauseButtonPendingIntent);", "originalCommit": "4f110605a4be2d01630407b38957bef05735f861", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0NDM5NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453244394", "bodyText": "Mmm. Ok.", "author": "TacoTheDank", "createdAt": "2020-07-11T23:11:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3MzM3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java\nindex 3dd509fab..4bb88200a 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java\n\n@@ -177,21 +177,21 @@ public class PlaybackServiceNotificationBuilder {\n         }\n         numActions++;\n \n-        PendingIntent pauseButtonPendingIntent;\n         if (playerStatus == PlayerStatus.PLAYING) {\n-            pauseButtonPendingIntent = getPendingIntentForMediaAction(\n+            PendingIntent pauseButtonPendingIntent = getPendingIntentForMediaAction(\n                     KeyEvent.KEYCODE_MEDIA_PAUSE, numActions);\n             notification.addAction(R.drawable.ic_notification_pause, //pause action\n                     context.getString(R.string.pause_label),\n                     pauseButtonPendingIntent);\n+            compactActionList.add(numActions++);\n         } else {\n-            pauseButtonPendingIntent = getPendingIntentForMediaAction(\n+            PendingIntent playButtonPendingIntent = getPendingIntentForMediaAction(\n                     KeyEvent.KEYCODE_MEDIA_PLAY, numActions);\n             notification.addAction(R.drawable.ic_notification_play, //play action\n                     context.getString(R.string.play_label),\n-                    pauseButtonPendingIntent);\n+                    playButtonPendingIntent);\n+            compactActionList.add(numActions++);\n         }\n-        compactActionList.add(numActions++);\n \n         // ff follows play, then we have skip (if it's present)\n         PendingIntent ffButtonPendingIntent = getPendingIntentForMediaAction(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3MzU0OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453173549", "bodyText": "This will cause a merge conflict with #4244. Please do not change this file.", "author": "ByteHamster", "createdAt": "2020-07-11T08:50:22Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java", "diffHunk": "@@ -174,13 +174,11 @@ public void onPrepareOptionsMenu(Menu menu) {\n     @Override\n     public boolean onOptionsItemSelected(MenuItem item) {\n         if (!super.onOptionsItemSelected(item)) {\n-            switch (item.getItemId()) {\n-                case R.id.clear_history_item:\n-                    DBWriter.clearDownloadLog();\n-                    return true;\n-                default:\n-                    return false;\n+            if (item.getItemId() == R.id.clear_history_item) {\n+                DBWriter.clearDownloadLog();\n+                return true;", "originalCommit": "33dd793aec517ada633213b15ead44140e248a31", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java\nindex 9c34d8962..312e3cb62 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java\n\n@@ -174,11 +174,13 @@ public class DownloadLogFragment extends ListFragment {\n     @Override\n     public boolean onOptionsItemSelected(MenuItem item) {\n         if (!super.onOptionsItemSelected(item)) {\n-            if (item.getItemId() == R.id.clear_history_item) {\n-                DBWriter.clearDownloadLog();\n-                return true;\n+            switch (item.getItemId()) {\n+                case R.id.clear_history_item:\n+                    DBWriter.clearDownloadLog();\n+                    return true;\n+                default:\n+                    return false;\n             }\n-            return false;\n         } else {\n             return true;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3MzgwOQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453173809", "bodyText": "I'm not 100% sure but I think this should be the other way around. feeds.size() seems to be the expected value. This problem is also present in other tests.\nBefore, a failing test just showed something about a failed assertion. Now it shows actual value and expected value, so it is misleading if they are exchanged.", "author": "ByteHamster", "createdAt": "2020-07-11T08:54:14Z", "path": "app/src/androidTest/java/de/test/antennapod/storage/DBReaderTest.java", "diffHunk": "@@ -91,7 +91,7 @@ public void testFeedListDownloadUrls() {\n         List<Feed> feeds = saveFeedlist(10, 0, false);\n         List<String> urls = DBReader.getFeedListDownloadUrls();\n         assertNotNull(urls);\n-        assertTrue(urls.size() == feeds.size());\n+        assertEquals(urls.size(), feeds.size());", "originalCommit": "aedc602f16f647bf9af5e26024ffd5e9ce9374ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/androidTest/java/de/test/antennapod/storage/DBReaderTest.java b/app/src/androidTest/java/de/test/antennapod/storage/DBReaderTest.java\nindex be3324a0a..b2458bac6 100644\n--- a/app/src/androidTest/java/de/test/antennapod/storage/DBReaderTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/storage/DBReaderTest.java\n\n@@ -91,7 +91,7 @@ public class DBReaderTest {\n         List<Feed> feeds = saveFeedlist(10, 0, false);\n         List<String> urls = DBReader.getFeedListDownloadUrls();\n         assertNotNull(urls);\n-        assertEquals(urls.size(), feeds.size());\n+        assertTrue(urls.size() == feeds.size());\n         for (int i = 0; i < urls.size(); i++) {\n             assertEquals(urls.get(i), feeds.get(i).getDownload_url());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NDI1NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453174254", "bodyText": "This would be easier to read if it was a single line. I think the line length should be enough to make Checkstyle happy. Same applies to other changes in the same commit.", "author": "ByteHamster", "createdAt": "2020-07-11T08:59:45Z", "path": "app/src/androidTest/java/de/test/antennapod/service/download/DownloadServiceTest.java", "diffHunk": "@@ -106,9 +106,8 @@ private void doTestEventsGeneratedCaseMediaDownloadSuccess(boolean enqueueDownlo\n         // OPEN: Ideally, I'd like the download time long enough so that multiple in-progress DownloadEvents\n         // are generated (to simulate typical download), but it'll make download time quite long (1-2 seconds)\n         // to do so\n-        DownloadService.setDownloaderFactory(new StubDownloaderFactory(50, downloadStatus -> {\n-            downloadStatus.setSuccessful();\n-        }));\n+        DownloadService.setDownloaderFactory(new StubDownloaderFactory(50,\n+                DownloadStatus::setSuccessful));", "originalCommit": "36c6b200d1858ffd6c59dfc71913ea0757446f53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0Nzc0NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453247745", "bodyText": "Funny thing actually, it isn't. Checkstyle wants less than 100 characters per line (from what I remember). This as a single line is 102. Same with some of the others.", "author": "TacoTheDank", "createdAt": "2020-07-12T00:00:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NDI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NTg5NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453285894", "bodyText": "Our Checkstyle config allows 120 characters. See https://github.com/AntennaPod/AntennaPod/blob/develop/config/checkstyle/checkstyle-new-code.xml", "author": "ByteHamster", "createdAt": "2020-07-12T08:25:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NDI1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyOTY4MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453429681", "bodyText": "Huh, I must've remembered it differently. I will correct them.", "author": "TacoTheDank", "createdAt": "2020-07-13T04:34:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NDI1NA=="}], "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/androidTest/java/de/test/antennapod/service/download/DownloadServiceTest.java b/app/src/androidTest/java/de/test/antennapod/service/download/DownloadServiceTest.java\nindex f7ae1c268..b75044d73 100644\n--- a/app/src/androidTest/java/de/test/antennapod/service/download/DownloadServiceTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/service/download/DownloadServiceTest.java\n\n@@ -106,8 +106,9 @@ public class DownloadServiceTest {\n         // OPEN: Ideally, I'd like the download time long enough so that multiple in-progress DownloadEvents\n         // are generated (to simulate typical download), but it'll make download time quite long (1-2 seconds)\n         // to do so\n-        DownloadService.setDownloaderFactory(new StubDownloaderFactory(50,\n-                DownloadStatus::setSuccessful));\n+        DownloadService.setDownloaderFactory(new StubDownloaderFactory(50, downloadStatus -> {\n+            downloadStatus.setSuccessful();\n+        }));\n \n         UserPreferences.setEnqueueDownloadedEpisodes(enqueueDownloaded);\n         withFeedItemEventListener(feedItemEventListener -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NDYzOA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453174638", "bodyText": "Collections.emptyList is already unmodifiable. There is no need to wrap it again.", "author": "ByteHamster", "createdAt": "2020-07-11T09:04:41Z", "path": "core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java", "diffHunk": "@@ -249,7 +249,8 @@ static void doAddToQueueAndAssertResult(String message,\n         assertEquals(message, idsExpected, getIdList(queue));\n     }\n \n-    static final List<FeedItem> QUEUE_EMPTY = Collections.unmodifiableList(Arrays.asList());\n+    static final List<FeedItem> QUEUE_EMPTY = Collections.unmodifiableList(\n+            Collections.emptyList());", "originalCommit": "bcb82b2ca71fb4c7e02b84f039f729d2c8cae7b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java b/core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java\nindex b248552ce..80777d036 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java\n+++ b/core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java\n\n@@ -249,14 +248,13 @@ public class ItemEnqueuePositionCalculatorTest {\n         assertEquals(message, idsExpected, getIdList(queue));\n     }\n \n-    static final List<FeedItem> QUEUE_EMPTY = Collections.unmodifiableList(\n-            Collections.emptyList());\n+    static final List<FeedItem> QUEUE_EMPTY = Collections.unmodifiableList(Arrays.asList());\n \n     static final List<FeedItem> QUEUE_DEFAULT = \n             Collections.unmodifiableList(Arrays.asList(\n                     createFeedItem(11), createFeedItem(12), createFeedItem(13), createFeedItem(14)));\n     static final List<Long> QUEUE_DEFAULT_IDS =\n-            QUEUE_DEFAULT.stream().map(FeedComponent::getId).collect(Collectors.toList());\n+            QUEUE_DEFAULT.stream().map(fi -> fi.getId()).collect(Collectors.toList());\n \n \n     static Playable getCurrentlyPlaying(long idCurrentlyPlaying) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NTQwMw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453175403", "bodyText": "I think the line break is not needed here. Checkstyle should be happy without the line break and I think it makes the code harder to read. The same applies to other changes in this commit.", "author": "ByteHamster", "createdAt": "2020-07-11T09:13:56Z", "path": "app/src/androidTest/java/de/test/antennapod/handler/FeedParserTestBase.java", "diffHunk": "@@ -38,7 +38,8 @@\n \n     @Before\n     public void setUp() throws Exception {\n-        Context context = InstrumentationRegistry.getInstrumentation().getTargetContext();\n+        Context context = InstrumentationRegistry\n+                .getInstrumentation().getTargetContext();", "originalCommit": "45441698e641678237c3df170dc94b1fa651d82b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/androidTest/java/de/test/antennapod/handler/FeedParserTestBase.java b/app/src/androidTest/java/de/test/antennapod/handler/FeedParserTestBase.java\nindex 218fb4557..83f334633 100644\n--- a/app/src/androidTest/java/de/test/antennapod/handler/FeedParserTestBase.java\n+++ b/app/src/androidTest/java/de/test/antennapod/handler/FeedParserTestBase.java\n\n@@ -38,8 +38,7 @@ public abstract class FeedParserTestBase {\n \n     @Before\n     public void setUp() throws Exception {\n-        Context context = InstrumentationRegistry\n-                .getInstrumentation().getTargetContext();\n+        Context context = InstrumentationRegistry.getInstrumentation().getTargetContext();\n         File destDir = context.getExternalFilesDir(FEEDS_DIR);\n         assertNotNull(destDir);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NTY3Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453175672", "bodyText": "What is the reason for adding the activity as a parameter? Can't it just call getActivity() here? The method is located directly in the fragment, just like the calling ones.", "author": "ByteHamster", "createdAt": "2020-07-11T09:16:50Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java", "diffHunk": "@@ -407,13 +408,13 @@ private void refreshTitles() {\n         mAdapter.notifyDataSetChanged();\n     }\n \n-    private void refreshCheckboxes() {\n+    private void refreshCheckboxes(Activity activity) {\n         for (int i = 0; i < episodes.size(); i++) {\n             FeedItem episode = episodes.get(i);\n             boolean checked = checkedIds.contains(episode.getId());\n             mListView.setItemChecked(i, checked);\n         }\n-        ActivityCompat.invalidateOptionsMenu(EpisodesApplyActionFragment.this.getActivity());\n+        activity.invalidateOptionsMenu();", "originalCommit": "45441698e641678237c3df170dc94b1fa651d82b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI1MDQ1Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453250452", "bodyText": "It opens the possibility for a NPE on invalidateOptionsMenu() (as getActivity() is nullable). Calling getActivity() to all the refreshCheckboxes() methods used by the other stuff makes it so it's getting refreshCheckboxes itself with the activity as a parameter, so there's no risk of a NPE.\nActivityCompat is deprecated, and it wants us to use Activity's invalidateOptionsMenu directly. EpisodesApplyActionFragment.this.getActivity() still could've been null, so this actually solves both issues (one being possible nullability of EpisodesApplyActionFragment.this.getActivity(), the other being a possible NPE from getActivity() on invalidateOptionsMenu().\nI'm terrible at explaining things, hopefully that made sense and that I explained it right.", "author": "TacoTheDank", "createdAt": "2020-07-12T00:41:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NTY3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI4NTczNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453285735", "bodyText": "I don't understand. If getActivity() is null, your method also throws a NPE because it simply passes null to the refreshCheckboxes method.", "author": "ByteHamster", "createdAt": "2020-07-12T08:24:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NTY3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzMTcwMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453431702", "bodyText": "I see now, adding @nonnull to Activity activity lets all the getActivity() calls possibly return null. My assumption was wrong. So I think this means it's safer to just have a possible NPE on the refreshCheckboxes method instead of a possible NPE for every time refreshCheckboxes() is called. I'll use your suggestion.", "author": "TacoTheDank", "createdAt": "2020-07-13T04:44:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NTY3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java b/app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java\nindex 95eef0abb..ac1e94437 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/EpisodesApplyActionFragment.java\n\n@@ -408,13 +407,13 @@ public class EpisodesApplyActionFragment extends Fragment {\n         mAdapter.notifyDataSetChanged();\n     }\n \n-    private void refreshCheckboxes(Activity activity) {\n+    private void refreshCheckboxes() {\n         for (int i = 0; i < episodes.size(); i++) {\n             FeedItem episode = episodes.get(i);\n             boolean checked = checkedIds.contains(episode.getId());\n             mListView.setItemChecked(i, checked);\n         }\n-        activity.invalidateOptionsMenu();\n+        ActivityCompat.invalidateOptionsMenu(EpisodesApplyActionFragment.this.getActivity());\n         toolbar.setTitle(getResources().getQuantityString(R.plurals.num_selected_label,\n                 checkedIds.size(), checkedIds.size()));\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NTgyNA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453175824", "bodyText": "This does not work. It returns something like ClipData{...}.", "author": "ByteHamster", "createdAt": "2020-07-11T09:19:07Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java", "diffHunk": "@@ -79,7 +79,7 @@ private void showAddViaUrlDialog() {\n         EditText editText = content.findViewById(R.id.text);\n         editText.setHint(R.string.add_podcast_by_url_hint);\n         ClipboardManager clipboard = (ClipboardManager) getContext().getSystemService(Context.CLIPBOARD_SERVICE);\n-        String clipboardContent = clipboard.getText() != null ? clipboard.getText().toString() : \"\";\n+        String clipboardContent = clipboard.getPrimaryClip() != null ? clipboard.getPrimaryClip().toString() : \"\";", "originalCommit": "45441698e641678237c3df170dc94b1fa651d82b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java\nindex 88b46495f..546684f14 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java\n\n@@ -79,7 +79,7 @@ public class AddFeedFragment extends Fragment {\n         EditText editText = content.findViewById(R.id.text);\n         editText.setHint(R.string.add_podcast_by_url_hint);\n         ClipboardManager clipboard = (ClipboardManager) getContext().getSystemService(Context.CLIPBOARD_SERVICE);\n-        String clipboardContent = clipboard.getPrimaryClip() != null ? clipboard.getPrimaryClip().toString() : \"\";\n+        String clipboardContent = clipboard.getText() != null ? clipboard.getText().toString() : \"\";\n         if (clipboardContent.trim().startsWith(\"http\")) {\n             editText.setText(clipboardContent.trim());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NTg3Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453175873", "bodyText": "Why parent and not child fragment manager? As I understood the fragment manager, this (and some others in this commit) should use the child fragment manager. I have not tried it, though.", "author": "ByteHamster", "createdAt": "2020-07-11T09:19:36Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java", "diffHunk": "@@ -491,11 +491,11 @@ public boolean onMenuItemClick(MenuItem item) {\n         switch (item.getItemId()) {\n             case R.id.disable_sleeptimer_item: // Fall-through\n             case R.id.set_sleeptimer_item:\n-                new SleepTimerDialog().show(getFragmentManager(), \"SleepTimerDialog\");\n+                new SleepTimerDialog().show(getParentFragmentManager(), \"SleepTimerDialog\");", "originalCommit": "45441698e641678237c3df170dc94b1fa651d82b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0OTEzNg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453249136", "bodyText": "Very well.", "author": "TacoTheDank", "createdAt": "2020-07-12T00:22:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NTg3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\nindex 2fce96c71..5ca8b666a 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\n\n@@ -491,11 +491,11 @@ public class AudioPlayerFragment extends Fragment implements\n         switch (item.getItemId()) {\n             case R.id.disable_sleeptimer_item: // Fall-through\n             case R.id.set_sleeptimer_item:\n-                new SleepTimerDialog().show(getParentFragmentManager(), \"SleepTimerDialog\");\n+                new SleepTimerDialog().show(getFragmentManager(), \"SleepTimerDialog\");\n                 return true;\n             case R.id.audio_controls:\n                 PlaybackControlsDialog dialog = PlaybackControlsDialog.newInstance(false);\n-                dialog.show(getParentFragmentManager(), \"playback_controls\");\n+                dialog.show(getFragmentManager(), \"playback_controls\");\n                 return true;\n             case R.id.open_feed_item:\n                 if (feedItem != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NjEzNA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453176134", "bodyText": "What is the reason for this change?", "author": "ByteHamster", "createdAt": "2020-07-11T09:22:56Z", "path": "core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java", "diffHunk": "@@ -5,7 +5,7 @@\n import static org.hamcrest.Matchers.equalTo;\n import static org.hamcrest.Matchers.is;\n import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertThat;\n+import static org.hamcrest.MatcherAssert.assertThat;", "originalCommit": "45441698e641678237c3df170dc94b1fa651d82b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI0MzI2Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4204#discussion_r453243267", "bodyText": "The old assertThat is deprecated, and this is what it wants us to use now.", "author": "TacoTheDank", "createdAt": "2020-07-11T22:54:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NjEzNA=="}], "type": "inlineReview", "revised_code": {"commit": "ecb551c9713adc22549fc068c3f114eccafc75ec", "chunk": "diff --git a/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java b/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java\nindex e933ce034..45c86cb83 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java\n+++ b/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java\n\n@@ -5,7 +5,7 @@ import org.junit.Test;\n import static org.hamcrest.Matchers.equalTo;\n import static org.hamcrest.Matchers.is;\n import static org.junit.Assert.assertEquals;\n-import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.junit.Assert.assertThat;\n import static org.junit.Assert.assertTrue;\n \n public class VolumeAdaptionSettingTest {\n"}}, {"oid": "ecb551c9713adc22549fc068c3f114eccafc75ec", "url": "https://github.com/AntennaPod/AntennaPod/commit/ecb551c9713adc22549fc068c3f114eccafc75ec", "message": "Replace fragment tag with FragmentContainerView", "committedDate": "2020-07-11T23:04:48Z", "type": "commit"}, {"oid": "cbea32684652c8b1f4b3302056ce476f383d1de1", "url": "https://github.com/AntennaPod/AntennaPod/commit/cbea32684652c8b1f4b3302056ce476f383d1de1", "message": "Extract common parts", "committedDate": "2020-07-11T23:11:18Z", "type": "commit"}, {"oid": "eea832ad2c84e8a18ece3beb9885851a8713b257", "url": "https://github.com/AntennaPod/AntennaPod/commit/eea832ad2c84e8a18ece3beb9885851a8713b257", "message": "Replace switch statements with too few case labels with ifs", "committedDate": "2020-07-11T23:15:55Z", "type": "commit"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "url": "https://github.com/AntennaPod/AntennaPod/commit/4857892b05e372073ceba1b51fe0fce62dab3c60", "message": "Convert wrapper types to primitives", "committedDate": "2020-07-11T23:16:07Z", "type": "commit"}, {"oid": "e0e27d442c9825dbafce95e8f37d0d5ccb22bd40", "url": "https://github.com/AntennaPod/AntennaPod/commit/e0e27d442c9825dbafce95e8f37d0d5ccb22bd40", "message": "Simplify junit assertions", "committedDate": "2020-07-11T23:49:35Z", "type": "commit"}, {"oid": "fa30bc5447498d928a2ec3508ef93f2bb7c4821e", "url": "https://github.com/AntennaPod/AntennaPod/commit/fa30bc5447498d928a2ec3508ef93f2bb7c4821e", "message": "Convert try finally into try with resources", "committedDate": "2020-07-11T23:51:07Z", "type": "commit"}, {"oid": "002ba1753df3307861dfc1fa26abde314d6e39b8", "url": "https://github.com/AntennaPod/AntennaPod/commit/002ba1753df3307861dfc1fa26abde314d6e39b8", "message": "Fix lambdas", "committedDate": "2020-07-12T00:01:57Z", "type": "commit"}, {"oid": "14064cbe6faac61ec2a79f6b9c888aeb70969a37", "url": "https://github.com/AntennaPod/AntennaPod/commit/14064cbe6faac61ec2a79f6b9c888aeb70969a37", "message": "Use Long.compare in ChapterStartTimeComparator", "committedDate": "2020-07-12T00:02:35Z", "type": "commit"}, {"oid": "62ca1dfccc8303f0417f7333e3edf71c12ad23a6", "url": "https://github.com/AntennaPod/AntennaPod/commit/62ca1dfccc8303f0417f7333e3edf71c12ad23a6", "message": "Simplify Arrays.asList with too few arguments", "committedDate": "2020-07-12T00:04:48Z", "type": "commit"}, {"oid": "71373d055d8265bf15c48cf0d6b6130317e8eb0b", "url": "https://github.com/AntennaPod/AntennaPod/commit/71373d055d8265bf15c48cf0d6b6130317e8eb0b", "message": "Replace addAlls with parametrized constructor calls", "committedDate": "2020-07-12T00:05:35Z", "type": "commit"}, {"oid": "24f734f1b60e29d28c03f245e4db26867c2d1a64", "url": "https://github.com/AntennaPod/AntennaPod/commit/24f734f1b60e29d28c03f245e4db26867c2d1a64", "message": "Fix redundant initializers", "committedDate": "2020-07-12T00:05:47Z", "type": "commit"}, {"oid": "a17f24912f262c79d1822e3df389ab08d4cb0273", "url": "https://github.com/AntennaPod/AntennaPod/commit/a17f24912f262c79d1822e3df389ab08d4cb0273", "message": "Remove unnecessary conditions", "committedDate": "2020-07-12T00:06:03Z", "type": "commit"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "url": "https://github.com/AntennaPod/AntennaPod/commit/37f9c08fd9d6a605bfcc393fe74a31a596671596", "message": "Fix duplicate branches", "committedDate": "2020-07-12T00:06:19Z", "type": "commit"}, {"oid": "cfac6a3631bf1c25b779fa8214bc075f74b8f9eb", "url": "https://github.com/AntennaPod/AntennaPod/commit/cfac6a3631bf1c25b779fa8214bc075f74b8f9eb", "message": "Fix manual math calculations", "committedDate": "2020-07-12T00:06:36Z", "type": "commit"}, {"oid": "03f3c10bf9adebe50848d3a9621819e77a38432a", "url": "https://github.com/AntennaPod/AntennaPod/commit/03f3c10bf9adebe50848d3a9621819e77a38432a", "message": "Remove unneeded return statement", "committedDate": "2020-07-12T00:06:43Z", "type": "commit"}, {"oid": "2289a482674ee70017f0fdc314296eaa19d5dba2", "url": "https://github.com/AntennaPod/AntennaPod/commit/2289a482674ee70017f0fdc314296eaa19d5dba2", "message": "Delete obsolete version check", "committedDate": "2020-07-12T00:09:28Z", "type": "commit"}, {"oid": "078f97e609c2471dfe66c654810dc507ca656109", "url": "https://github.com/AntennaPod/AntennaPod/commit/078f97e609c2471dfe66c654810dc507ca656109", "message": "Delete unused xml declarations", "committedDate": "2020-07-12T00:14:19Z", "type": "commit"}, {"oid": "24656936c70bc73443119b4e1bb492feeac6dd85", "url": "https://github.com/AntennaPod/AntennaPod/commit/24656936c70bc73443119b4e1bb492feeac6dd85", "message": "Fix a bunch of deprecations", "committedDate": "2020-07-13T04:49:35Z", "type": "commit"}, {"oid": "5a0192f3c8a7b60e068c45287eee4587b0096f1e", "url": "https://github.com/AntennaPod/AntennaPod/commit/5a0192f3c8a7b60e068c45287eee4587b0096f1e", "message": "Merge branch 'develop' into develop", "committedDate": "2020-07-16T08:54:47Z", "type": "commit"}]}