{"pr_number": 1426, "pr_title": "Added AutoCompleteTextView instead of Spinner", "pr_createdAt": "2020-06-23T10:38:09Z", "pr_url": "https://github.com/edx/edx-app-android/pull/1426", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM2MTIxNA==", "url": "https://github.com/edx/edx-app-android/pull/1426#discussion_r445361214", "bodyText": "IMO, We have to create this class in kotlin.", "author": "farhan-arshad-dev", "createdAt": "2020-06-25T07:31:20Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.edx.mobile.module.registration.view;\n+\n+import android.content.Context;\n+import android.util.AttributeSet;\n+import android.widget.ArrayAdapter;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.widget.AppCompatAutoCompleteTextView;\n+\n+import org.edx.mobile.R;\n+import org.edx.mobile.module.registration.model.RegistrationOption;\n+\n+import java.util.List;\n+\n+public class RegistrationOptionAutoCompleteTextView extends AppCompatAutoCompleteTextView {", "originalCommit": "2aebfa10989f93d4f4ae96a33528734a69145212", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "518f7d27e606a3cced0f6a47a35f69ad6b04bfd3", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java b/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java\ndeleted file mode 100644\nindex dbce1ed8..00000000\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java\n+++ /dev/null\n\n@@ -1,95 +0,0 @@\n-package org.edx.mobile.module.registration.view;\n-\n-import android.content.Context;\n-import android.util.AttributeSet;\n-import android.widget.ArrayAdapter;\n-\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-import androidx.appcompat.widget.AppCompatAutoCompleteTextView;\n-\n-import org.edx.mobile.R;\n-import org.edx.mobile.module.registration.model.RegistrationOption;\n-\n-import java.util.List;\n-\n-public class RegistrationOptionAutoCompleteTextView extends AppCompatAutoCompleteTextView {\n-\n-    private ArrayAdapter<RegistrationOption> adapter;\n-    private RegistrationOption selectedItem = null;\n-\n-    public RegistrationOptionAutoCompleteTextView(Context context) {\n-        super(context);\n-    }\n-\n-    public RegistrationOptionAutoCompleteTextView(Context context, AttributeSet attrs) {\n-        super(context, attrs);\n-    }\n-\n-    public RegistrationOptionAutoCompleteTextView(Context context, AttributeSet attrs, int defStyle) {\n-        super(context, attrs, defStyle);\n-    }\n-\n-    public boolean hasValue(@Nullable String value) {\n-        if (adapter != null) {\n-            return (getAdapterPosition(value) >= 0);\n-        }\n-        return false;\n-    }\n-\n-    public void select(@Nullable String value) {\n-        if (adapter != null && value != null) {\n-            int pos = getAdapterPosition(value);\n-            if (pos >= 0) {\n-                setSelection(pos);\n-            }\n-        }\n-    }\n-\n-    public RegistrationOption getSelectedItem() {\n-        return selectedItem;\n-    }\n-\n-    public void setSelectedItem(RegistrationOption option) {\n-        selectedItem = option;\n-    }\n-\n-    @Nullable\n-    public String getSelectedItemValue() {\n-        String value = null;\n-        if (selectedItem != null) {\n-            value = selectedItem.getValue();\n-        }\n-        return value;\n-    }\n-\n-    @NonNull\n-    public String getSelectedItemName() {\n-        String value = null;\n-        if (selectedItem != null) {\n-            value = selectedItem.getName();\n-        }\n-        return value;\n-    }\n-\n-    private int getAdapterPosition(@Nullable String input) {\n-        int posiiton = -1;\n-        if (input != null && adapter != null) {\n-            for(int i=0 ; i<adapter.getCount() ; i++){\n-                RegistrationOption item = adapter.getItem(i);\n-                if (item != null && input.equalsIgnoreCase(item.toString())) {\n-                    posiiton = i;\n-                    setSelectedItem(item);\n-                    break;\n-                }\n-            }\n-        }\n-        return posiiton;\n-    }\n-\n-    public void setItems(@NonNull List<RegistrationOption> options) {\n-        adapter = new ArrayAdapter<>(getContext(), R.layout.registration_spinner_item, options);\n-        setAdapter(adapter);\n-        setThreshold(0);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM3OTI4NA==", "url": "https://github.com/edx/edx-app-android/pull/1426#discussion_r445379284", "bodyText": "Rename the layout as per the auto-complete view.", "author": "farhan-arshad-dev", "createdAt": "2020-06-25T08:04:22Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.edx.mobile.module.registration.view;\n+\n+import android.content.Context;\n+import android.util.AttributeSet;\n+import android.widget.ArrayAdapter;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.widget.AppCompatAutoCompleteTextView;\n+\n+import org.edx.mobile.R;\n+import org.edx.mobile.module.registration.model.RegistrationOption;\n+\n+import java.util.List;\n+\n+public class RegistrationOptionAutoCompleteTextView extends AppCompatAutoCompleteTextView {\n+\n+    private ArrayAdapter<RegistrationOption> adapter;\n+    private RegistrationOption selectedItem = null;\n+\n+    public RegistrationOptionAutoCompleteTextView(Context context) {\n+        super(context);\n+    }\n+\n+    public RegistrationOptionAutoCompleteTextView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+    }\n+\n+    public RegistrationOptionAutoCompleteTextView(Context context, AttributeSet attrs, int defStyle) {\n+        super(context, attrs, defStyle);\n+    }\n+\n+    public boolean hasValue(@Nullable String value) {\n+        if (adapter != null) {\n+            return (getAdapterPosition(value) >= 0);\n+        }\n+        return false;\n+    }\n+\n+    public void select(@Nullable String value) {\n+        if (adapter != null && value != null) {\n+            int pos = getAdapterPosition(value);\n+            if (pos >= 0) {\n+                setSelection(pos);\n+            }\n+        }\n+    }\n+\n+    public RegistrationOption getSelectedItem() {\n+        return selectedItem;\n+    }\n+\n+    public void setSelectedItem(RegistrationOption option) {\n+        selectedItem = option;\n+    }\n+\n+    @Nullable\n+    public String getSelectedItemValue() {\n+        String value = null;\n+        if (selectedItem != null) {\n+            value = selectedItem.getValue();\n+        }\n+        return value;\n+    }\n+\n+    @NonNull\n+    public String getSelectedItemName() {\n+        String value = null;\n+        if (selectedItem != null) {\n+            value = selectedItem.getName();\n+        }\n+        return value;\n+    }\n+\n+    private int getAdapterPosition(@Nullable String input) {\n+        int posiiton = -1;\n+        if (input != null && adapter != null) {\n+            for(int i=0 ; i<adapter.getCount() ; i++){\n+                RegistrationOption item = adapter.getItem(i);\n+                if (item != null && input.equalsIgnoreCase(item.toString())) {\n+                    posiiton = i;\n+                    setSelectedItem(item);\n+                    break;\n+                }\n+            }\n+        }\n+        return posiiton;\n+    }\n+\n+    public void setItems(@NonNull List<RegistrationOption> options) {\n+        adapter = new ArrayAdapter<>(getContext(), R.layout.registration_spinner_item, options);", "originalCommit": "2aebfa10989f93d4f4ae96a33528734a69145212", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "518f7d27e606a3cced0f6a47a35f69ad6b04bfd3", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java b/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java\ndeleted file mode 100644\nindex dbce1ed8..00000000\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java\n+++ /dev/null\n\n@@ -1,95 +0,0 @@\n-package org.edx.mobile.module.registration.view;\n-\n-import android.content.Context;\n-import android.util.AttributeSet;\n-import android.widget.ArrayAdapter;\n-\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-import androidx.appcompat.widget.AppCompatAutoCompleteTextView;\n-\n-import org.edx.mobile.R;\n-import org.edx.mobile.module.registration.model.RegistrationOption;\n-\n-import java.util.List;\n-\n-public class RegistrationOptionAutoCompleteTextView extends AppCompatAutoCompleteTextView {\n-\n-    private ArrayAdapter<RegistrationOption> adapter;\n-    private RegistrationOption selectedItem = null;\n-\n-    public RegistrationOptionAutoCompleteTextView(Context context) {\n-        super(context);\n-    }\n-\n-    public RegistrationOptionAutoCompleteTextView(Context context, AttributeSet attrs) {\n-        super(context, attrs);\n-    }\n-\n-    public RegistrationOptionAutoCompleteTextView(Context context, AttributeSet attrs, int defStyle) {\n-        super(context, attrs, defStyle);\n-    }\n-\n-    public boolean hasValue(@Nullable String value) {\n-        if (adapter != null) {\n-            return (getAdapterPosition(value) >= 0);\n-        }\n-        return false;\n-    }\n-\n-    public void select(@Nullable String value) {\n-        if (adapter != null && value != null) {\n-            int pos = getAdapterPosition(value);\n-            if (pos >= 0) {\n-                setSelection(pos);\n-            }\n-        }\n-    }\n-\n-    public RegistrationOption getSelectedItem() {\n-        return selectedItem;\n-    }\n-\n-    public void setSelectedItem(RegistrationOption option) {\n-        selectedItem = option;\n-    }\n-\n-    @Nullable\n-    public String getSelectedItemValue() {\n-        String value = null;\n-        if (selectedItem != null) {\n-            value = selectedItem.getValue();\n-        }\n-        return value;\n-    }\n-\n-    @NonNull\n-    public String getSelectedItemName() {\n-        String value = null;\n-        if (selectedItem != null) {\n-            value = selectedItem.getName();\n-        }\n-        return value;\n-    }\n-\n-    private int getAdapterPosition(@Nullable String input) {\n-        int posiiton = -1;\n-        if (input != null && adapter != null) {\n-            for(int i=0 ; i<adapter.getCount() ; i++){\n-                RegistrationOption item = adapter.getItem(i);\n-                if (item != null && input.equalsIgnoreCase(item.toString())) {\n-                    posiiton = i;\n-                    setSelectedItem(item);\n-                    break;\n-                }\n-            }\n-        }\n-        return posiiton;\n-    }\n-\n-    public void setItems(@NonNull List<RegistrationOption> options) {\n-        adapter = new ArrayAdapter<>(getContext(), R.layout.registration_spinner_item, options);\n-        setAdapter(adapter);\n-        setThreshold(0);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MzcyNA==", "url": "https://github.com/edx/edx-app-android/pull/1426#discussion_r445383724", "bodyText": "getSelectedItemName is Nullable as value can be null.", "author": "farhan-arshad-dev", "createdAt": "2020-06-25T08:12:02Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.edx.mobile.module.registration.view;\n+\n+import android.content.Context;\n+import android.util.AttributeSet;\n+import android.widget.ArrayAdapter;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.widget.AppCompatAutoCompleteTextView;\n+\n+import org.edx.mobile.R;\n+import org.edx.mobile.module.registration.model.RegistrationOption;\n+\n+import java.util.List;\n+\n+public class RegistrationOptionAutoCompleteTextView extends AppCompatAutoCompleteTextView {\n+\n+    private ArrayAdapter<RegistrationOption> adapter;\n+    private RegistrationOption selectedItem = null;\n+\n+    public RegistrationOptionAutoCompleteTextView(Context context) {\n+        super(context);\n+    }\n+\n+    public RegistrationOptionAutoCompleteTextView(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+    }\n+\n+    public RegistrationOptionAutoCompleteTextView(Context context, AttributeSet attrs, int defStyle) {\n+        super(context, attrs, defStyle);\n+    }\n+\n+    public boolean hasValue(@Nullable String value) {\n+        if (adapter != null) {\n+            return (getAdapterPosition(value) >= 0);\n+        }\n+        return false;\n+    }\n+\n+    public void select(@Nullable String value) {\n+        if (adapter != null && value != null) {\n+            int pos = getAdapterPosition(value);\n+            if (pos >= 0) {\n+                setSelection(pos);\n+            }\n+        }\n+    }\n+\n+    public RegistrationOption getSelectedItem() {\n+        return selectedItem;\n+    }\n+\n+    public void setSelectedItem(RegistrationOption option) {\n+        selectedItem = option;\n+    }\n+\n+    @Nullable\n+    public String getSelectedItemValue() {\n+        String value = null;\n+        if (selectedItem != null) {\n+            value = selectedItem.getValue();\n+        }\n+        return value;\n+    }\n+\n+    @NonNull\n+    public String getSelectedItemName() {", "originalCommit": "2aebfa10989f93d4f4ae96a33528734a69145212", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "518f7d27e606a3cced0f6a47a35f69ad6b04bfd3", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java b/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java\ndeleted file mode 100644\nindex dbce1ed8..00000000\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationOptionAutoCompleteTextView.java\n+++ /dev/null\n\n@@ -1,95 +0,0 @@\n-package org.edx.mobile.module.registration.view;\n-\n-import android.content.Context;\n-import android.util.AttributeSet;\n-import android.widget.ArrayAdapter;\n-\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-import androidx.appcompat.widget.AppCompatAutoCompleteTextView;\n-\n-import org.edx.mobile.R;\n-import org.edx.mobile.module.registration.model.RegistrationOption;\n-\n-import java.util.List;\n-\n-public class RegistrationOptionAutoCompleteTextView extends AppCompatAutoCompleteTextView {\n-\n-    private ArrayAdapter<RegistrationOption> adapter;\n-    private RegistrationOption selectedItem = null;\n-\n-    public RegistrationOptionAutoCompleteTextView(Context context) {\n-        super(context);\n-    }\n-\n-    public RegistrationOptionAutoCompleteTextView(Context context, AttributeSet attrs) {\n-        super(context, attrs);\n-    }\n-\n-    public RegistrationOptionAutoCompleteTextView(Context context, AttributeSet attrs, int defStyle) {\n-        super(context, attrs, defStyle);\n-    }\n-\n-    public boolean hasValue(@Nullable String value) {\n-        if (adapter != null) {\n-            return (getAdapterPosition(value) >= 0);\n-        }\n-        return false;\n-    }\n-\n-    public void select(@Nullable String value) {\n-        if (adapter != null && value != null) {\n-            int pos = getAdapterPosition(value);\n-            if (pos >= 0) {\n-                setSelection(pos);\n-            }\n-        }\n-    }\n-\n-    public RegistrationOption getSelectedItem() {\n-        return selectedItem;\n-    }\n-\n-    public void setSelectedItem(RegistrationOption option) {\n-        selectedItem = option;\n-    }\n-\n-    @Nullable\n-    public String getSelectedItemValue() {\n-        String value = null;\n-        if (selectedItem != null) {\n-            value = selectedItem.getValue();\n-        }\n-        return value;\n-    }\n-\n-    @NonNull\n-    public String getSelectedItemName() {\n-        String value = null;\n-        if (selectedItem != null) {\n-            value = selectedItem.getName();\n-        }\n-        return value;\n-    }\n-\n-    private int getAdapterPosition(@Nullable String input) {\n-        int posiiton = -1;\n-        if (input != null && adapter != null) {\n-            for(int i=0 ; i<adapter.getCount() ; i++){\n-                RegistrationOption item = adapter.getItem(i);\n-                if (item != null && input.equalsIgnoreCase(item.toString())) {\n-                    posiiton = i;\n-                    setSelectedItem(item);\n-                    break;\n-                }\n-            }\n-        }\n-        return posiiton;\n-    }\n-\n-    public void setItems(@NonNull List<RegistrationOption> options) {\n-        adapter = new ArrayAdapter<>(getContext(), R.layout.registration_spinner_item, options);\n-        setAdapter(adapter);\n-        setThreshold(0);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQxNDUxMQ==", "url": "https://github.com/edx/edx-app-android/pull/1426#discussion_r445414511", "bodyText": "IMO, we have to use 'error_select_or_enter_field' message instated of.", "author": "farhan-arshad-dev", "createdAt": "2020-06-25T09:04:48Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java", "diffHunk": "@@ -162,16 +157,21 @@ public boolean isValidInput() {\n         // check if this is required field and has an input value\n         if (mField.isRequired() && !hasValue()) {\n             String errorMessage = mField.getErrorMessage().getRequired();\n-            if(errorMessage==null || errorMessage.isEmpty()){\n+            if (errorMessage == null || errorMessage.isEmpty()) {\n                 errorMessage = getView().getResources().getString(R.string.error_select_field,", "originalCommit": "2aebfa10989f93d4f4ae96a33528734a69145212", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "518f7d27e606a3cced0f6a47a35f69ad6b04bfd3", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java b/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java\nindex 2958e6fd..e045b999 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java\n\n@@ -154,20 +157,10 @@ public class RegistrationSelectView implements IRegistrationFieldView {\n \n         mInputView.setContentDescription(String.format(\"%s. %s.\", mInputView.getSelectedItemName(), mField.getInstructions()));\n \n-        // check if this is required field and has an input value\n-        if (mField.isRequired() && !hasValue()) {\n-            String errorMessage = mField.getErrorMessage().getRequired();\n-            if (errorMessage == null || errorMessage.isEmpty()) {\n-                errorMessage = getView().getResources().getString(R.string.error_select_field,\n-                        mField.getLabel());\n-            }\n-            handleError(errorMessage);\n-            return false;\n-        } else if (!mField.isRequired() && mField.getFieldType().equals(RegistrationFieldType.MULTI)\n-                && mInputView.length() > 0 && !hasValue()) {\n-            String errorMessage = getView().getResources().getString(R.string.error_select_or_enter_field,\n-                    mField.getLabel());\n-            handleError(errorMessage);\n+        // check if this is required field and has an input value or field is optional and have some value\n+        if ((mField.isRequired() || (!mField.isRequired() && mField.getFieldType().equals(RegistrationFieldType.MULTI)\n+                && mInputView.length() > 0)) && !hasValue()) {\n+            initializeErrorMessage();\n             return false;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NjIxMw==", "url": "https://github.com/edx/edx-app-android/pull/1426#discussion_r446146213", "bodyText": "Logger should have RegistrationSelectView.class instated of RegistrationEditTextView.class", "author": "farhan-arshad-dev", "createdAt": "2020-06-26T12:13:34Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java", "diffHunk": "@@ -20,23 +24,20 @@\n     protected static final Logger logger = new Logger(RegistrationEditTextView.class);", "originalCommit": "1350037f8daf780e1b34508b0ee9fe6fab364de7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "518f7d27e606a3cced0f6a47a35f69ad6b04bfd3", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java b/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java\nindex cd7bf429..e045b999 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java\n\n@@ -21,7 +21,7 @@ import org.edx.mobile.module.registration.model.RegistrationOption;\n \n public class RegistrationSelectView implements IRegistrationFieldView {\n \n-    protected static final Logger logger = new Logger(RegistrationEditTextView.class);\n+    protected static final Logger logger = new Logger(RegistrationSelectView.class);\n     private RegistrationFormField mField;\n     private View mView;\n     private RegistrationOptionAutoCompleteTextView mInputView;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NzYyNQ==", "url": "https://github.com/edx/edx-app-android/pull/1426#discussion_r446147625", "bodyText": "both the conditions should be merged as statements are the same within conditions.", "author": "farhan-arshad-dev", "createdAt": "2020-06-26T12:16:46Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java", "diffHunk": "@@ -161,20 +159,27 @@ public boolean isValidInput() {\n \n         // check if this is required field and has an input value\n         if (mField.isRequired() && !hasValue()) {\n-            String errorMessage = mField.getErrorMessage().getRequired();\n-            if(errorMessage==null || errorMessage.isEmpty()){\n-                errorMessage = getView().getResources().getString(R.string.error_select_field,\n-                        mField.getLabel());\n-            }\n-            handleError(errorMessage);\n+            initializeErrorMessage();\n+            return false;\n+        } else if (!mField.isRequired() && mField.getFieldType().equals(RegistrationFieldType.MULTI)\n+                && mInputView.length() > 0 && !hasValue()) {\n+            initializeErrorMessage();", "originalCommit": "1350037f8daf780e1b34508b0ee9fe6fab364de7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1MTY0OQ==", "url": "https://github.com/edx/edx-app-android/pull/1426#discussion_r446151649", "bodyText": "I think the following statements will cover,\n        // check if this is required field and has an input value\n        if ((mField.isRequired() || (!mField.isRequired() && mField.getFieldType().equals(RegistrationFieldType.MULTI)\n                && mInputView.length() > 0)) && !hasValue()) {\n            initializeErrorMessage();\n            return false;\n        }", "author": "farhan-arshad-dev", "createdAt": "2020-06-26T12:25:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NzYyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "518f7d27e606a3cced0f6a47a35f69ad6b04bfd3", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java b/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java\nindex cd7bf429..e045b999 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/module/registration/view/RegistrationSelectView.java\n\n@@ -157,12 +157,9 @@ public class RegistrationSelectView implements IRegistrationFieldView {\n \n         mInputView.setContentDescription(String.format(\"%s. %s.\", mInputView.getSelectedItemName(), mField.getInstructions()));\n \n-        // check if this is required field and has an input value\n-        if (mField.isRequired() && !hasValue()) {\n-            initializeErrorMessage();\n-            return false;\n-        } else if (!mField.isRequired() && mField.getFieldType().equals(RegistrationFieldType.MULTI)\n-                && mInputView.length() > 0 && !hasValue()) {\n+        // check if this is required field and has an input value or field is optional and have some value\n+        if ((mField.isRequired() || (!mField.isRequired() && mField.getFieldType().equals(RegistrationFieldType.MULTI)\n+                && mInputView.length() > 0)) && !hasValue()) {\n             initializeErrorMessage();\n             return false;\n         }\n"}}, {"oid": "518f7d27e606a3cced0f6a47a35f69ad6b04bfd3", "url": "https://github.com/edx/edx-app-android/commit/518f7d27e606a3cced0f6a47a35f69ad6b04bfd3", "message": "Added AutoCompleteTextView instead of Spinner\n- LEARNER-7779\n- All the selectable fields are now using AutoCompleteTextView\n- User can either select or type the valid input", "committedDate": "2020-06-26T16:12:08Z", "type": "commit"}, {"oid": "518f7d27e606a3cced0f6a47a35f69ad6b04bfd3", "url": "https://github.com/edx/edx-app-android/commit/518f7d27e606a3cced0f6a47a35f69ad6b04bfd3", "message": "Added AutoCompleteTextView instead of Spinner\n- LEARNER-7779\n- All the selectable fields are now using AutoCompleteTextView\n- User can either select or type the valid input", "committedDate": "2020-06-26T16:12:08Z", "type": "forcePushed"}]}