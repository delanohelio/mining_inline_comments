{"pr_number": 1435, "pr_title": "Course Date Page view designs", "pr_createdAt": "2020-07-09T12:17:15Z", "pr_url": "https://github.com/edx/edx-app-android/pull/1435", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2NTI2MQ==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r469565261", "bodyText": "Should not reflect changes of unrelated code in this file.", "author": "farhan-arshad-dev", "createdAt": "2020-08-12T21:46:25Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java", "diffHunk": "@@ -1,6 +1,7 @@\n package org.edx.mobile.util;", "originalCommit": "cb1f92b8c73cb30b1a3ce76da86ccc293ebf8e4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUwMzcyNQ==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r475503725", "bodyText": "Done", "author": "omerhabib26", "createdAt": "2020-08-24T10:29:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2NTI2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4c88b6908bbc9c1ece52a61dbfd335c9249e7b94", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\nindex 3db6171d..26a931ca 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n\n@@ -1,7 +1,6 @@\n package org.edx.mobile.util;\n \n import android.annotation.SuppressLint;\n-\n import androidx.annotation.Nullable;\n \n import com.google.gson.internal.bind.util.ISO8601Utils;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2NzEzMg==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r469567132", "bodyText": "unused import.", "author": "farhan-arshad-dev", "createdAt": "2020-08-12T21:50:45Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseAPI.java", "diffHunk": "@@ -28,6 +28,8 @@\n import org.edx.mobile.model.course.BlockModel;\n import org.edx.mobile.model.course.BlockType;\n import org.edx.mobile.model.course.CourseComponent;\n+import org.edx.mobile.model.course.CourseDateBlock;", "originalCommit": "cb1f92b8c73cb30b1a3ce76da86ccc293ebf8e4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUwMjIwMw==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r475502203", "bodyText": "Done", "author": "omerhabib26", "createdAt": "2020-08-24T10:27:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2NzEzMg=="}], "type": "inlineReview", "revised_code": {"commit": "4c88b6908bbc9c1ece52a61dbfd335c9249e7b94", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseAPI.java b/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseAPI.java\nindex e018691b..6584481f 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseAPI.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseAPI.java\n\n@@ -28,7 +28,6 @@ import org.edx.mobile.model.api.VideoResponseModel;\n import org.edx.mobile.model.course.BlockModel;\n import org.edx.mobile.model.course.BlockType;\n import org.edx.mobile.model.course.CourseComponent;\n-import org.edx.mobile.model.course.CourseDateBlock;\n import org.edx.mobile.model.course.CourseDates;\n import org.edx.mobile.model.course.CourseStructureV1Model;\n import org.edx.mobile.model.course.DiscussionBlockModel;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU3ODMxMw==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r469578313", "bodyText": "Now CourseDatesFragment.java is unused, I think we can remove this.\n@miankhalid thoughts?", "author": "farhan-arshad-dev", "createdAt": "2020-08-12T22:19:01Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/CourseTabsDashboardFragment.java", "diffHunk": "@@ -287,9 +287,9 @@ public void onFragmentSelected() {\n         }\n         // Add important dates tab\n         if (environment.getConfig().isCourseDatesEnabled()) {\n-            items.add(new FragmentItemModel(CourseDatesFragment.class,", "originalCommit": "cb1f92b8c73cb30b1a3ce76da86ccc293ebf8e4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQyNDE5Mg==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r471424192", "bodyText": "I'll remove it", "author": "omerhabib26", "createdAt": "2020-08-17T11:46:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU3ODMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI2NTM1NA==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r472265354", "bodyText": "Yep, nuke it!", "author": "miankhalid", "createdAt": "2020-08-18T15:01:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU3ODMxMw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "4c88b6908bbc9c1ece52a61dbfd335c9249e7b94", "url": "https://github.com/edx/edx-app-android/commit/4c88b6908bbc9c1ece52a61dbfd335c9249e7b94", "message": "Address PR comments, except MVVM implementation\nWill do it in separate commit", "committedDate": "2020-08-24T19:34:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkxMjkzOA==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r488912938", "bodyText": "need doc string why need these methods.", "author": "farhan-arshad-dev", "createdAt": "2020-09-15T19:24:17Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java", "diffHunk": "@@ -29,6 +30,19 @@ public void onCreate(Bundle savedInstanceState) {\n         EventBus.getDefault().post(new NewRelicEvent(getClass().getSimpleName()));\n     }\n \n+    public Context getContextOrThrow() {\n+        if (getContext() != null)\n+            return getContext();\n+        throw new IllegalStateException(\"Context can only be accessed when attached with activity\");\n+    }\n+\n+    public String getArgumentString(String key) {\n+        if (getArguments() != null && getArguments().getString(key) != null) {\n+            return getArguments().getString(key);\n+        }\n+        throw new IllegalArgumentException(\"Arguments or key not found in bundle\");\n+    }\n+", "originalCommit": "40f7cac752eaaf41f776940f8d6090db7e6e60fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java b/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\nindex 6b25b3dc..e06f6d86 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\n\n@@ -30,13 +30,22 @@ public class BaseFragment extends RoboFragment {\n         EventBus.getDefault().post(new NewRelicEvent(getClass().getSimpleName()));\n     }\n \n+    /**\n+     * Method to make getContext null safe\n+     * @return context if not null or throw exception else wise\n+     */\n     public Context getContextOrThrow() {\n         if (getContext() != null)\n             return getContext();\n         throw new IllegalStateException(\"Context can only be accessed when attached with activity\");\n     }\n \n-    public String getArgumentString(String key) {\n+    /**\n+     * Method to get String argument null safe\n+     * @param key requested argument\n+     * @return argument value if found or throw exception else wise\n+     */\n+    public String getStringArgument(String key) {\n         if (getArguments() != null && getArguments().getString(key) != null) {\n             return getArguments().getString(key);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0OTMwOQ==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r488949309", "bodyText": "@return Course dates against the given course id", "author": "farhan-arshad-dev", "createdAt": "2020-09-15T20:20:29Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseAPI.java", "diffHunk": "@@ -98,6 +99,14 @@ public CourseAPI(@NonNull CourseService courseService, @NonNull UserPrefs userPr\n         return courseService.getEnrolledCourses(getUsername(), config.getOrganizationCode());\n     }\n \n+    /**\n+     * @return Course dates.", "originalCommit": "40f7cac752eaaf41f776940f8d6090db7e6e60fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseAPI.java b/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseAPI.java\nindex 6584481f..b70e76c2 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseAPI.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseAPI.java\n\n@@ -100,11 +100,11 @@ public class CourseAPI {\n     }\n \n     /**\n-     * @return Course dates.\n+     * @return Course dates against the given course Id.\n      */\n     @NonNull\n     public Call<CourseDates> getCourseDates(@NonNull String courseId) {\n-        return courseService.getCourseDate(courseId);\n+        return courseService.getCourseDates(courseId);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MzA1OQ==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r488953059", "bodyText": "IMO getCourseDates is more appropriate.", "author": "farhan-arshad-dev", "createdAt": "2020-09-15T20:27:33Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseService.java", "diffHunk": "@@ -134,6 +135,9 @@ public CourseService get() {\n     @POST(\"/api/completion/v1/completion-batch\")\n     Call<JSONObject> markBlocksCompletion(@Body BlocksCompletionBody completionBody);\n \n+    @GET(\"api/course_home/v1/dates/{course_key}\")\n+    Call<CourseDates> getCourseDate(@Path(\"course_key\") String courseId);", "originalCommit": "40f7cac752eaaf41f776940f8d6090db7e6e60fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseService.java b/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseService.java\nindex dbe6c18f..a7b99b61 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseService.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/course/CourseService.java\n\n@@ -136,7 +136,7 @@ public interface CourseService {\n     Call<JSONObject> markBlocksCompletion(@Body BlocksCompletionBody completionBody);\n \n     @GET(\"api/course_home/v1/dates/{course_key}\")\n-    Call<CourseDates> getCourseDate(@Path(\"course_key\") String courseId);\n+    Call<CourseDates> getCourseDates(@Path(\"course_key\") String courseId);\n \n     final class BlocksCompletionBody {\n         @NonNull String username;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MzkxNQ==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r488953915", "bodyText": "IMO getStringArgument is more suitable here.", "author": "farhan-arshad-dev", "createdAt": "2020-09-15T20:29:12Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java", "diffHunk": "@@ -29,6 +30,19 @@ public void onCreate(Bundle savedInstanceState) {\n         EventBus.getDefault().post(new NewRelicEvent(getClass().getSimpleName()));\n     }\n \n+    public Context getContextOrThrow() {\n+        if (getContext() != null)\n+            return getContext();\n+        throw new IllegalStateException(\"Context can only be accessed when attached with activity\");\n+    }\n+\n+    public String getArgumentString(String key) {", "originalCommit": "40f7cac752eaaf41f776940f8d6090db7e6e60fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java b/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\nindex 6b25b3dc..e06f6d86 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\n\n@@ -30,13 +30,22 @@ public class BaseFragment extends RoboFragment {\n         EventBus.getDefault().post(new NewRelicEvent(getClass().getSimpleName()));\n     }\n \n+    /**\n+     * Method to make getContext null safe\n+     * @return context if not null or throw exception else wise\n+     */\n     public Context getContextOrThrow() {\n         if (getContext() != null)\n             return getContext();\n         throw new IllegalStateException(\"Context can only be accessed when attached with activity\");\n     }\n \n-    public String getArgumentString(String key) {\n+    /**\n+     * Method to get String argument null safe\n+     * @param key requested argument\n+     * @return argument value if found or throw exception else wise\n+     */\n+    public String getStringArgument(String key) {\n         if (getArguments() != null && getArguments().getString(key) != null) {\n             return getArguments().getString(key);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1NzI5NQ==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r488957295", "bodyText": "I think there is no need to update the generic implementation for the single usage only.", "author": "farhan-arshad-dev", "createdAt": "2020-09-15T20:35:35Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/custom/IconProgressBar.java", "diffHunk": "@@ -89,6 +90,10 @@ public void setIndeterminateIconColor(@NonNull ColorStateList colorStateList) {\n         }\n     }\n \n+    public void showProgress(boolean isShow) {\n+        this.setVisibility(isShow ? View.VISIBLE : View.GONE);", "originalCommit": "40f7cac752eaaf41f776940f8d6090db7e6e60fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/view/custom/IconProgressBar.java b/OpenEdXMobile/src/main/java/org/edx/mobile/view/custom/IconProgressBar.java\nindex 8ff191fa..3d79dad0 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/view/custom/IconProgressBar.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/view/custom/IconProgressBar.java\n\n@@ -90,10 +89,6 @@ public class IconProgressBar extends ProgressBar {\n         }\n     }\n \n-    public void showProgress(boolean isShow) {\n-        this.setVisibility(isShow ? View.VISIBLE : View.GONE);\n-    }\n-\n     public void setIndeterminateIconColorResource(@ColorRes int colorResId) {\n         // Since we have an @ColorRes annotation on the colorRes parameter,\n         // we can be sure that we will get a non-null ColorStateList.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4MzYyMw==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490483623", "bodyText": "no need to add the word Utility.", "author": "farhan-arshad-dev", "createdAt": "2020-09-17T18:54:33Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java", "diffHunk": "@@ -29,6 +30,28 @@ public void onCreate(Bundle savedInstanceState) {\n         EventBus.getDefault().post(new NewRelicEvent(getClass().getSimpleName()));\n     }\n \n+    /**\n+     * Utility method to make getContext null safe", "originalCommit": "dbd449990454f92d7508e543979911179f64ee2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1NzM0MA==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490857340", "bodyText": "Done", "author": "omerhabib26", "createdAt": "2020-09-18T10:36:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4MzYyMw=="}], "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java b/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\nindex 9a5f89f9..e06f6d86 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\n\n@@ -31,7 +31,7 @@ public class BaseFragment extends RoboFragment {\n     }\n \n     /**\n-     * Utility method to make getContext null safe\n+     * Method to make getContext null safe\n      * @return context if not null or throw exception else wise\n      */\n     public Context getContextOrThrow() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4MzY5Nw==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490483697", "bodyText": "no need to add the word Utility.", "author": "farhan-arshad-dev", "createdAt": "2020-09-17T18:54:41Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java", "diffHunk": "@@ -29,6 +30,28 @@ public void onCreate(Bundle savedInstanceState) {\n         EventBus.getDefault().post(new NewRelicEvent(getClass().getSimpleName()));\n     }\n \n+    /**\n+     * Utility method to make getContext null safe\n+     * @return context if not null or throw exception else wise\n+     */\n+    public Context getContextOrThrow() {\n+        if (getContext() != null)\n+            return getContext();\n+        throw new IllegalStateException(\"Context can only be accessed when attached with activity\");\n+    }\n+\n+    /**\n+     * Utility method to get String argument null safe", "originalCommit": "dbd449990454f92d7508e543979911179f64ee2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1NzMxMg==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490857312", "bodyText": "Done", "author": "omerhabib26", "createdAt": "2020-09-18T10:36:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4MzY5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java b/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\nindex 9a5f89f9..e06f6d86 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/base/BaseFragment.java\n\n@@ -31,7 +31,7 @@ public class BaseFragment extends RoboFragment {\n     }\n \n     /**\n-     * Utility method to make getContext null safe\n+     * Method to make getContext null safe\n      * @return context if not null or throw exception else wise\n      */\n     public Context getContextOrThrow() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4NTg0Mw==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490485843", "bodyText": "can directly return the value.", "author": "farhan-arshad-dev", "createdAt": "2020-09-17T18:58:38Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java", "diffHunk": "@@ -62,6 +62,67 @@ public static String formatCourseNotStartedDate(String date) {\n         }\n     }\n \n+    /**\n+     * This function returns course date in the EEE, MMM dd, yyyy format\n+     */\n+    public static String formatCourseDate(String date) {\n+        try {\n+            SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n+            Date startDate = DateUtil.convertToDate(date);\n+\n+            String formattedDate = dateFormat.format(startDate);\n+            return formattedDate;", "originalCommit": "dbd449990454f92d7508e543979911179f64ee2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkxODczMg==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490918732", "bodyText": "Implemented", "author": "omerhabib26", "createdAt": "2020-09-18T12:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4NTg0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\nindex 9d1cff78..3b97008f 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n\n@@ -70,37 +70,45 @@ public class DateUtil {\n             SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n             Date startDate = DateUtil.convertToDate(date);\n \n-            String formattedDate = dateFormat.format(startDate);\n-            return formattedDate;\n+            return dateFormat.format(startDate);\n         } catch (Exception e) {\n-            //This will be removed when the PR for log changes is merged with master\n             logger.error(e);\n-            return \"\";\n         }\n+        return \"\";\n     }\n \n     /**\n      * This function match the provide date with current date\n      *\n-     * @return true if the provided date is today\n+     * @return true if the provided date is today else false\n      */\n     public static boolean isDateToday(String date) {\n         return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n     }\n \n-    public static boolean isDatePast(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is past else false\n+     */\n+    public static boolean isPastDate(String date) {\n+        Date currentDate = new Date();\n         Date pastDate = convertToDate(date);\n-        if (currentDate != null && pastDate != null) {\n+        if (pastDate != null) {\n             return pastDate.compareTo(currentDate) < 0;\n         }\n         return false;\n     }\n \n-    public static boolean isDateDue(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is due else false\n+     */\n+    public static boolean isDueDate(String date) {\n+        Date currentDate = new Date();\n         Date dueDate = convertToDate(date);\n-        if (currentDate != null && dueDate != null) {\n+        if (dueDate != null) {\n             return dueDate.compareTo(currentDate) > 0;\n         }\n         return false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4NzE0Ng==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490487146", "bodyText": "/**\n     * This function match the provide date with the current date\n     *\n     * @return true if the provided date is today else false.\n     */\nis better.", "author": "farhan-arshad-dev", "createdAt": "2020-09-17T19:00:54Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java", "diffHunk": "@@ -62,6 +62,67 @@ public static String formatCourseNotStartedDate(String date) {\n         }\n     }\n \n+    /**\n+     * This function returns course date in the EEE, MMM dd, yyyy format\n+     */\n+    public static String formatCourseDate(String date) {\n+        try {\n+            SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n+            Date startDate = DateUtil.convertToDate(date);\n+\n+            String formattedDate = dateFormat.format(startDate);\n+            return formattedDate;\n+        } catch (Exception e) {\n+            //This will be removed when the PR for log changes is merged with master\n+            logger.error(e);\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * This function match the provide date with current date\n+     *\n+     * @return true if the provided date is today\n+     */", "originalCommit": "dbd449990454f92d7508e543979911179f64ee2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkxODY1Mw==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490918653", "bodyText": "Updated", "author": "omerhabib26", "createdAt": "2020-09-18T12:36:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4NzE0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\nindex 9d1cff78..3b97008f 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n\n@@ -70,37 +70,45 @@ public class DateUtil {\n             SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n             Date startDate = DateUtil.convertToDate(date);\n \n-            String formattedDate = dateFormat.format(startDate);\n-            return formattedDate;\n+            return dateFormat.format(startDate);\n         } catch (Exception e) {\n-            //This will be removed when the PR for log changes is merged with master\n             logger.error(e);\n-            return \"\";\n         }\n+        return \"\";\n     }\n \n     /**\n      * This function match the provide date with current date\n      *\n-     * @return true if the provided date is today\n+     * @return true if the provided date is today else false\n      */\n     public static boolean isDateToday(String date) {\n         return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n     }\n \n-    public static boolean isDatePast(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is past else false\n+     */\n+    public static boolean isPastDate(String date) {\n+        Date currentDate = new Date();\n         Date pastDate = convertToDate(date);\n-        if (currentDate != null && pastDate != null) {\n+        if (pastDate != null) {\n             return pastDate.compareTo(currentDate) < 0;\n         }\n         return false;\n     }\n \n-    public static boolean isDateDue(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is due else false\n+     */\n+    public static boolean isDueDate(String date) {\n+        Date currentDate = new Date();\n         Date dueDate = convertToDate(date);\n-        if (currentDate != null && dueDate != null) {\n+        if (dueDate != null) {\n             return dueDate.compareTo(currentDate) > 0;\n         }\n         return false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4OTE0Nw==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490489147", "bodyText": "IMO: isPastDate is more suitable here.\nneed doc-string here.", "author": "farhan-arshad-dev", "createdAt": "2020-09-17T19:04:31Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java", "diffHunk": "@@ -62,6 +62,67 @@ public static String formatCourseNotStartedDate(String date) {\n         }\n     }\n \n+    /**\n+     * This function returns course date in the EEE, MMM dd, yyyy format\n+     */\n+    public static String formatCourseDate(String date) {\n+        try {\n+            SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n+            Date startDate = DateUtil.convertToDate(date);\n+\n+            String formattedDate = dateFormat.format(startDate);\n+            return formattedDate;\n+        } catch (Exception e) {\n+            //This will be removed when the PR for log changes is merged with master\n+            logger.error(e);\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * This function match the provide date with current date\n+     *\n+     * @return true if the provided date is today\n+     */\n+    public static boolean isDateToday(String date) {\n+        return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n+    }\n+\n+    public static boolean isDatePast(String date) {", "originalCommit": "dbd449990454f92d7508e543979911179f64ee2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkxODQyNw==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490918427", "bodyText": "Added", "author": "omerhabib26", "createdAt": "2020-09-18T12:36:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4OTE0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\nindex 9d1cff78..3b97008f 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n\n@@ -70,37 +70,45 @@ public class DateUtil {\n             SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n             Date startDate = DateUtil.convertToDate(date);\n \n-            String formattedDate = dateFormat.format(startDate);\n-            return formattedDate;\n+            return dateFormat.format(startDate);\n         } catch (Exception e) {\n-            //This will be removed when the PR for log changes is merged with master\n             logger.error(e);\n-            return \"\";\n         }\n+        return \"\";\n     }\n \n     /**\n      * This function match the provide date with current date\n      *\n-     * @return true if the provided date is today\n+     * @return true if the provided date is today else false\n      */\n     public static boolean isDateToday(String date) {\n         return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n     }\n \n-    public static boolean isDatePast(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is past else false\n+     */\n+    public static boolean isPastDate(String date) {\n+        Date currentDate = new Date();\n         Date pastDate = convertToDate(date);\n-        if (currentDate != null && pastDate != null) {\n+        if (pastDate != null) {\n             return pastDate.compareTo(currentDate) < 0;\n         }\n         return false;\n     }\n \n-    public static boolean isDateDue(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is due else false\n+     */\n+    public static boolean isDueDate(String date) {\n+        Date currentDate = new Date();\n         Date dueDate = convertToDate(date);\n-        if (currentDate != null && dueDate != null) {\n+        if (dueDate != null) {\n             return dueDate.compareTo(currentDate) > 0;\n         }\n         return false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5MDUwMg==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490490502", "bodyText": "no need to get current date in string form and then convert into a date object, we can directly use new Date() or Calendar.getInstance().getTime().", "author": "farhan-arshad-dev", "createdAt": "2020-09-17T19:06:48Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java", "diffHunk": "@@ -62,6 +62,67 @@ public static String formatCourseNotStartedDate(String date) {\n         }\n     }\n \n+    /**\n+     * This function returns course date in the EEE, MMM dd, yyyy format\n+     */\n+    public static String formatCourseDate(String date) {\n+        try {\n+            SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n+            Date startDate = DateUtil.convertToDate(date);\n+\n+            String formattedDate = dateFormat.format(startDate);\n+            return formattedDate;\n+        } catch (Exception e) {\n+            //This will be removed when the PR for log changes is merged with master\n+            logger.error(e);\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * This function match the provide date with current date\n+     *\n+     * @return true if the provided date is today\n+     */\n+    public static boolean isDateToday(String date) {\n+        return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n+    }\n+\n+    public static boolean isDatePast(String date) {\n+        Date currentDate = convertToDate(getCurrentTimeStamp());", "originalCommit": "dbd449990454f92d7508e543979911179f64ee2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkxODYxOA==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490918618", "bodyText": "Updated", "author": "omerhabib26", "createdAt": "2020-09-18T12:36:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5MDUwMg=="}], "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\nindex 9d1cff78..3b97008f 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n\n@@ -70,37 +70,45 @@ public class DateUtil {\n             SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n             Date startDate = DateUtil.convertToDate(date);\n \n-            String formattedDate = dateFormat.format(startDate);\n-            return formattedDate;\n+            return dateFormat.format(startDate);\n         } catch (Exception e) {\n-            //This will be removed when the PR for log changes is merged with master\n             logger.error(e);\n-            return \"\";\n         }\n+        return \"\";\n     }\n \n     /**\n      * This function match the provide date with current date\n      *\n-     * @return true if the provided date is today\n+     * @return true if the provided date is today else false\n      */\n     public static boolean isDateToday(String date) {\n         return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n     }\n \n-    public static boolean isDatePast(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is past else false\n+     */\n+    public static boolean isPastDate(String date) {\n+        Date currentDate = new Date();\n         Date pastDate = convertToDate(date);\n-        if (currentDate != null && pastDate != null) {\n+        if (pastDate != null) {\n             return pastDate.compareTo(currentDate) < 0;\n         }\n         return false;\n     }\n \n-    public static boolean isDateDue(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is due else false\n+     */\n+    public static boolean isDueDate(String date) {\n+        Date currentDate = new Date();\n         Date dueDate = convertToDate(date);\n-        if (currentDate != null && dueDate != null) {\n+        if (dueDate != null) {\n             return dueDate.compareTo(currentDate) > 0;\n         }\n         return false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5MDU2Ng==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490490566", "bodyText": "no need to get current date in string form and then convert into a date object, we can directly use new Date() or Calendar.getInstance().getTime().", "author": "farhan-arshad-dev", "createdAt": "2020-09-17T19:06:54Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java", "diffHunk": "@@ -62,6 +62,67 @@ public static String formatCourseNotStartedDate(String date) {\n         }\n     }\n \n+    /**\n+     * This function returns course date in the EEE, MMM dd, yyyy format\n+     */\n+    public static String formatCourseDate(String date) {\n+        try {\n+            SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n+            Date startDate = DateUtil.convertToDate(date);\n+\n+            String formattedDate = dateFormat.format(startDate);\n+            return formattedDate;\n+        } catch (Exception e) {\n+            //This will be removed when the PR for log changes is merged with master\n+            logger.error(e);\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * This function match the provide date with current date\n+     *\n+     * @return true if the provided date is today\n+     */\n+    public static boolean isDateToday(String date) {\n+        return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n+    }\n+\n+    public static boolean isDatePast(String date) {\n+        Date currentDate = convertToDate(getCurrentTimeStamp());\n+        Date pastDate = convertToDate(date);\n+        if (currentDate != null && pastDate != null) {\n+            return pastDate.compareTo(currentDate) < 0;\n+        }\n+        return false;\n+    }\n+\n+    public static boolean isDateDue(String date) {\n+        Date currentDate = convertToDate(getCurrentTimeStamp());", "originalCommit": "dbd449990454f92d7508e543979911179f64ee2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkxODU0NQ==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490918545", "bodyText": "Updated", "author": "omerhabib26", "createdAt": "2020-09-18T12:36:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5MDU2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\nindex 9d1cff78..3b97008f 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n\n@@ -70,37 +70,45 @@ public class DateUtil {\n             SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n             Date startDate = DateUtil.convertToDate(date);\n \n-            String formattedDate = dateFormat.format(startDate);\n-            return formattedDate;\n+            return dateFormat.format(startDate);\n         } catch (Exception e) {\n-            //This will be removed when the PR for log changes is merged with master\n             logger.error(e);\n-            return \"\";\n         }\n+        return \"\";\n     }\n \n     /**\n      * This function match the provide date with current date\n      *\n-     * @return true if the provided date is today\n+     * @return true if the provided date is today else false\n      */\n     public static boolean isDateToday(String date) {\n         return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n     }\n \n-    public static boolean isDatePast(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is past else false\n+     */\n+    public static boolean isPastDate(String date) {\n+        Date currentDate = new Date();\n         Date pastDate = convertToDate(date);\n-        if (currentDate != null && pastDate != null) {\n+        if (pastDate != null) {\n             return pastDate.compareTo(currentDate) < 0;\n         }\n         return false;\n     }\n \n-    public static boolean isDateDue(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is due else false\n+     */\n+    public static boolean isDueDate(String date) {\n+        Date currentDate = new Date();\n         Date dueDate = convertToDate(date);\n-        if (currentDate != null && dueDate != null) {\n+        if (dueDate != null) {\n             return dueDate.compareTo(currentDate) > 0;\n         }\n         return false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5MDg2MA==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490490860", "bodyText": "IMO: isDueDate is more suitable here.", "author": "farhan-arshad-dev", "createdAt": "2020-09-17T19:07:27Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java", "diffHunk": "@@ -62,6 +62,67 @@ public static String formatCourseNotStartedDate(String date) {\n         }\n     }\n \n+    /**\n+     * This function returns course date in the EEE, MMM dd, yyyy format\n+     */\n+    public static String formatCourseDate(String date) {\n+        try {\n+            SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n+            Date startDate = DateUtil.convertToDate(date);\n+\n+            String formattedDate = dateFormat.format(startDate);\n+            return formattedDate;\n+        } catch (Exception e) {\n+            //This will be removed when the PR for log changes is merged with master\n+            logger.error(e);\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * This function match the provide date with current date\n+     *\n+     * @return true if the provided date is today\n+     */\n+    public static boolean isDateToday(String date) {\n+        return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n+    }\n+\n+    public static boolean isDatePast(String date) {\n+        Date currentDate = convertToDate(getCurrentTimeStamp());\n+        Date pastDate = convertToDate(date);\n+        if (currentDate != null && pastDate != null) {\n+            return pastDate.compareTo(currentDate) < 0;\n+        }\n+        return false;\n+    }\n+\n+    public static boolean isDateDue(String date) {", "originalCommit": "dbd449990454f92d7508e543979911179f64ee2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkxODQ5MA==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490918490", "bodyText": "Updated", "author": "omerhabib26", "createdAt": "2020-09-18T12:36:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5MDg2MA=="}], "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\nindex 9d1cff78..3b97008f 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n\n@@ -70,37 +70,45 @@ public class DateUtil {\n             SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n             Date startDate = DateUtil.convertToDate(date);\n \n-            String formattedDate = dateFormat.format(startDate);\n-            return formattedDate;\n+            return dateFormat.format(startDate);\n         } catch (Exception e) {\n-            //This will be removed when the PR for log changes is merged with master\n             logger.error(e);\n-            return \"\";\n         }\n+        return \"\";\n     }\n \n     /**\n      * This function match the provide date with current date\n      *\n-     * @return true if the provided date is today\n+     * @return true if the provided date is today else false\n      */\n     public static boolean isDateToday(String date) {\n         return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n     }\n \n-    public static boolean isDatePast(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is past else false\n+     */\n+    public static boolean isPastDate(String date) {\n+        Date currentDate = new Date();\n         Date pastDate = convertToDate(date);\n-        if (currentDate != null && pastDate != null) {\n+        if (pastDate != null) {\n             return pastDate.compareTo(currentDate) < 0;\n         }\n         return false;\n     }\n \n-    public static boolean isDateDue(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is due else false\n+     */\n+    public static boolean isDueDate(String date) {\n+        Date currentDate = new Date();\n         Date dueDate = convertToDate(date);\n-        if (currentDate != null && dueDate != null) {\n+        if (dueDate != null) {\n             return dueDate.compareTo(currentDate) > 0;\n         }\n         return false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5MjAzMQ==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490492031", "bodyText": "can directly return the value.", "author": "farhan-arshad-dev", "createdAt": "2020-09-17T19:09:41Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java", "diffHunk": "@@ -62,6 +62,67 @@ public static String formatCourseNotStartedDate(String date) {\n         }\n     }\n \n+    /**\n+     * This function returns course date in the EEE, MMM dd, yyyy format\n+     */\n+    public static String formatCourseDate(String date) {\n+        try {\n+            SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n+            Date startDate = DateUtil.convertToDate(date);\n+\n+            String formattedDate = dateFormat.format(startDate);\n+            return formattedDate;\n+        } catch (Exception e) {\n+            //This will be removed when the PR for log changes is merged with master\n+            logger.error(e);\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * This function match the provide date with current date\n+     *\n+     * @return true if the provided date is today\n+     */\n+    public static boolean isDateToday(String date) {\n+        return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n+    }\n+\n+    public static boolean isDatePast(String date) {\n+        Date currentDate = convertToDate(getCurrentTimeStamp());\n+        Date pastDate = convertToDate(date);\n+        if (currentDate != null && pastDate != null) {\n+            return pastDate.compareTo(currentDate) < 0;\n+        }\n+        return false;\n+    }\n+\n+    public static boolean isDateDue(String date) {\n+        Date currentDate = convertToDate(getCurrentTimeStamp());\n+        Date dueDate = convertToDate(date);\n+        if (currentDate != null && dueDate != null) {\n+            return dueDate.compareTo(currentDate) > 0;\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * This function returns Simple date in the yyyy-MM-dd format\n+     */\n+    public static String convertToSimpleDate(String date) {\n+        try {\n+            SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n+            Date startDate = DateUtil.convertToDate(date);\n+\n+            String formattedDate = dateFormat.format(startDate);", "originalCommit": "dbd449990454f92d7508e543979911179f64ee2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg3NjcyNw==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490876727", "bodyText": "Done", "author": "omerhabib26", "createdAt": "2020-09-18T11:15:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5MjAzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\nindex 9d1cff78..3b97008f 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/util/DateUtil.java\n\n@@ -70,37 +70,45 @@ public class DateUtil {\n             SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE, MMM dd, yyyy\");\n             Date startDate = DateUtil.convertToDate(date);\n \n-            String formattedDate = dateFormat.format(startDate);\n-            return formattedDate;\n+            return dateFormat.format(startDate);\n         } catch (Exception e) {\n-            //This will be removed when the PR for log changes is merged with master\n             logger.error(e);\n-            return \"\";\n         }\n+        return \"\";\n     }\n \n     /**\n      * This function match the provide date with current date\n      *\n-     * @return true if the provided date is today\n+     * @return true if the provided date is today else false\n      */\n     public static boolean isDateToday(String date) {\n         return convertToSimpleDate(date).equals(convertToSimpleDate(getCurrentTimeStamp()));\n     }\n \n-    public static boolean isDatePast(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is past else false\n+     */\n+    public static boolean isPastDate(String date) {\n+        Date currentDate = new Date();\n         Date pastDate = convertToDate(date);\n-        if (currentDate != null && pastDate != null) {\n+        if (pastDate != null) {\n             return pastDate.compareTo(currentDate) < 0;\n         }\n         return false;\n     }\n \n-    public static boolean isDateDue(String date) {\n-        Date currentDate = convertToDate(getCurrentTimeStamp());\n+    /**\n+     * This function compare the provide date with current date\n+     *\n+     * @return true if the provided date is due else false\n+     */\n+    public static boolean isDueDate(String date) {\n+        Date currentDate = new Date();\n         Date dueDate = convertToDate(date);\n-        if (currentDate != null && dueDate != null) {\n+        if (dueDate != null) {\n             return dueDate.compareTo(currentDate) > 0;\n         }\n         return false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5Mjg0MA==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490492840", "bodyText": "unnecessary change.", "author": "farhan-arshad-dev", "createdAt": "2020-09-17T19:10:56Z", "path": "OpenEdXMobile/src/main/java/org/edx/mobile/view/custom/IconProgressBar.java", "diffHunk": "@@ -10,6 +10,7 @@\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import android.util.AttributeSet;\n+import android.view.View;", "originalCommit": "dbd449990454f92d7508e543979911179f64ee2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg4NTE1Nw==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r490885157", "bodyText": "Removed", "author": "omerhabib26", "createdAt": "2020-09-18T11:31:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5Mjg0MA=="}], "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/main/java/org/edx/mobile/view/custom/IconProgressBar.java b/OpenEdXMobile/src/main/java/org/edx/mobile/view/custom/IconProgressBar.java\nindex 60f09ada..3d79dad0 100644\n--- a/OpenEdXMobile/src/main/java/org/edx/mobile/view/custom/IconProgressBar.java\n+++ b/OpenEdXMobile/src/main/java/org/edx/mobile/view/custom/IconProgressBar.java\n\n@@ -10,7 +10,6 @@ import androidx.annotation.ColorRes;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import android.util.AttributeSet;\n-import android.view.View;\n import android.widget.ProgressBar;\n \n import com.joanzapata.iconify.Icon;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgyMzY2Mg==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r491823662", "bodyText": "Need auto-format.", "author": "farhan-arshad-dev", "createdAt": "2020-09-21T06:52:17Z", "path": "OpenEdXMobile/src/test/java/org/edx/mobile/test/http/ApiTests.java", "diffHunk": "@@ -173,6 +179,39 @@ public void testEnrollInACourse() throws Exception {\n         print(\"test: finished: reset password\");\n     }\n \n+    @Test\n+    public void testCourseDatesResponse() throws Exception {\n+        login();\n+        print(\"test: Course Dates Response\");\n+\n+        CourseDates dates = executeStrict(courseAPI.getCourseDates(\"\"));\n+        assertNotNull(dates);\n+        assertNotNull(dates.getCourseDateBlocks());\n+\n+        String todayDate = dates.getCourseDateBlocks().get(12).getDate();\n+\n+        try (MockedStatic mockedStatic = mockStatic(DateUtil.class)) {\n+            mockedStatic.when(DateUtil::getCurrentTimeStamp).thenReturn(todayDate);\n+            Mockito.when(DateUtil.isDateToday(todayDate)).thenReturn(true);\n+            assertTrue(dates.isContainToday());\n+        }\n+\n+        dates.organiseCourseDates();\n+\n+        assertNotNull(dates.getCourseDatesMap());\n+\n+        for (String key : dates.getCourseDatesMap().keySet()) {\n+            assertNotNull(key);\n+            ArrayList<CourseDateBlock> blocks = dates.getCourseDatesMap().get(key);\n+            assertNotNull(blocks);\n+            for (CourseDateBlock block: blocks){\n+                assertNotNull(block);\n+            }\n+        }\n+        print(\"success\");\n+        print(\"test: Course Dates Api working fine\");\n+    }\n+", "originalCommit": "3fed4d6e04517ec0130f5130b35ecb484d4d172e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4OTgwOA==", "url": "https://github.com/edx/edx-app-android/pull/1435#discussion_r492589808", "bodyText": "Done", "author": "omerhabib26", "createdAt": "2020-09-22T09:17:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgyMzY2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "chunk": "diff --git a/OpenEdXMobile/src/test/java/org/edx/mobile/test/http/ApiTests.java b/OpenEdXMobile/src/test/java/org/edx/mobile/test/http/ApiTests.java\nindex f323c735..1c380462 100644\n--- a/OpenEdXMobile/src/test/java/org/edx/mobile/test/http/ApiTests.java\n+++ b/OpenEdXMobile/src/test/java/org/edx/mobile/test/http/ApiTests.java\n\n@@ -204,7 +204,7 @@ public class ApiTests extends HttpBaseTestCase {\n             assertNotNull(key);\n             ArrayList<CourseDateBlock> blocks = dates.getCourseDatesMap().get(key);\n             assertNotNull(blocks);\n-            for (CourseDateBlock block: blocks){\n+            for (CourseDateBlock block : blocks) {\n                 assertNotNull(block);\n             }\n         }\n"}}, {"oid": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "url": "https://github.com/edx/edx-app-android/commit/0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "message": "Native Imp of CourseDates PageView using MVVM architecture\n- LEARNER-7814\n- MVVM Architecture implementation\n- Native Designs implementations\n- API Unit testing\n- ViewModel testing", "committedDate": "2020-09-22T09:47:36Z", "type": "commit"}, {"oid": "0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "url": "https://github.com/edx/edx-app-android/commit/0ce81238c626ee2781a5fca9f7cde0bbfc9c4ed6", "message": "Native Imp of CourseDates PageView using MVVM architecture\n- LEARNER-7814\n- MVVM Architecture implementation\n- Native Designs implementations\n- API Unit testing\n- ViewModel testing", "committedDate": "2020-09-22T09:47:36Z", "type": "forcePushed"}]}