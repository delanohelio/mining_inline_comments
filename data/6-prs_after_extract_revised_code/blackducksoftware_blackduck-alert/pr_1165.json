{"pr_number": 1165, "pr_title": "Role Controller Update", "pr_createdAt": "2020-09-14T12:47:34Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1165", "timeline": [{"oid": "1216085c42a52d715aa17131dcf44a924225b9b4", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1216085c42a52d715aa17131dcf44a924225b9b4", "message": "Fix(Role API): Update response statuses and entities for existing HTTP methods", "committedDate": "2020-09-14T12:43:54Z", "type": "commit"}, {"oid": "e83778b70ff7e91789d2f2347862957efa057f77", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e83778b70ff7e91789d2f2347862957efa057f77", "message": "Fix(JS): Update role actions to handle save and validation separately", "committedDate": "2020-09-14T12:44:04Z", "type": "commit"}, {"oid": "9aa211bc9a4cdcb2776bfa080cfbdc936578b392", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9aa211bc9a4cdcb2776bfa080cfbdc936578b392", "message": "Fix(Roles API): Add role name existence check when updating a role", "committedDate": "2020-09-14T12:44:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NzI3MQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1165#discussion_r487967271", "bodyText": "More of a thought, but would this go through the stream twice? Would it be more efficient to put both checks in either the filter call or the anyMatch call?", "author": "bamandel", "createdAt": "2020-09-14T14:18:58Z", "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -86,9 +94,25 @@ public UserRoleModel createRole(RolePermissionModel rolePermissionModel) throws\n         return userRoleModel;\n     }\n \n-    public UserRoleModel updateRole(Long roleId, RolePermissionModel rolePermissionModel) throws AlertDatabaseConstraintException, AlertConfigurationException {\n+    public UserRoleModel updateRole(Long roleId, RolePermissionModel rolePermissionModel) throws AlertDatabaseConstraintException, AlertConfigurationException, AlertFieldException {\n         String roleName = rolePermissionModel.getRoleName();\n-        authorizationUtility.updateRoleName(roleId, roleName);\n+        Optional<AlertFieldStatus> roleNameMissingError = validateRoleNameFieldRequired(roleName);\n+        if (roleNameMissingError.isPresent()) {\n+            throw AlertFieldException.singleFieldError(roleNameMissingError.get());\n+        }\n+\n+        UserRoleModel existingRole = getExistingRoleOrThrow404(roleId);\n+        boolean targetRoleNameIsUsedByDifferentRole = authorizationUtility.getRoles()\n+                                                          .stream()\n+                                                          .filter(role -> !role.getId().equals(existingRole.getId()))\n+                                                          .anyMatch(role -> role.getName().equalsIgnoreCase(roleName));", "originalCommit": "9aa211bc9a4cdcb2776bfa080cfbdc936578b392", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAxNjgwMw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1165#discussion_r488016803", "bodyText": "It makes no difference as each element will go through the entire stream a maximum of once. .findAny is just like .filter except it forces the stream to start evaluating (like collect).\nhttps://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html", "author": "gkillough", "createdAt": "2020-09-14T15:20:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NzI3MQ=="}], "type": "inlineReview", "revised_code": null}]}