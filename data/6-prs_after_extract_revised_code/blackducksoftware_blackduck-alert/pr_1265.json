{"pr_number": 1265, "pr_title": "Additional Email Address Paging", "pr_createdAt": "2020-11-16T19:55:03Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1265", "timeline": [{"oid": "5c6fee168b0c9f9d357a0588cbcbbb243c81b97c", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5c6fee168b0c9f9d357a0588cbcbbb243c81b97c", "message": "Feat(Actions): Abstract custom function paged param extraction", "committedDate": "2020-11-16T14:25:54Z", "type": "commit"}, {"oid": "8f6dcc91f01cdf6826de24f3aa02467108e65830", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8f6dcc91f01cdf6826de24f3aa02467108e65830", "message": "Feat(Provider): Make Provider Projects custom function extend new paging custom function class", "committedDate": "2020-11-16T15:01:07Z", "type": "commit"}, {"oid": "a85bb32a023d9d38fdc5412a45ea1024a9989aeb", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a85bb32a023d9d38fdc5412a45ea1024a9989aeb", "message": "Feat(Email): Make paged requests to BlackDuck to retrieve users", "committedDate": "2020-11-16T19:54:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUzNTQ3OQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1265#discussion_r524535479", "bodyText": "Can we not use UserView here because it doesn't declare the getEmail method?", "author": "jamesrichard91", "createdAt": "2020-11-16T19:57:41Z", "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckProviderDataAccessor.java", "diffHunk": "@@ -195,26 +205,35 @@ public void updateProjectAndUserData(Long providerConfigId, Map<ProviderProject,\n     private AlertPagedModel<ProviderProject> retrieveProjectsForProvider(ConfigurationModel blackDuckConfigurationModel, int pageNumber, int pageSize, String searchTerm) throws IntegrationException {\n         BlackDuckServicesFactory blackDuckServicesFactory = createBlackDuckServicesFactory(blackDuckConfigurationModel);\n         BlackDuckService blackDuckService = blackDuckServicesFactory.getBlackDuckService();\n-        RequestFactory requestFactory = blackDuckServicesFactory.getRequestFactory();\n-\n-        BlackDuckJsonTransformer blackDuckJsonTransformer = new BlackDuckJsonTransformer(blackDuckServicesFactory.getGson(), blackDuckServicesFactory.getObjectMapper(), blackDuckServicesFactory.getLogger());\n-        BlackDuckResponsesTransformer blackDuckResponsesTransformer = new BlackDuckResponsesTransformer(blackDuckServicesFactory.getBlackDuckHttpClient(), blackDuckJsonTransformer);\n-\n-        int offset = pageNumber * pageSize;\n-        HttpUrl projectsRequestUrl = blackDuckServicesFactory.getBlackDuckHttpClient().getBaseUrl().appendRelativeUrl(ApiDiscovery.PROJECTS_LINK.getPath());\n-        BlackDuckRequestBuilder blackDuckRequestBuilder = requestFactory.createCommonGetRequestBuilder()\n-                                                              .url(projectsRequestUrl);\n \n         Predicate<ProjectView> searchFilter = alwaysTruePredicate -> true;\n         if (StringUtils.isNotBlank(searchTerm)) {\n             searchFilter = projectView -> StringUtils.containsIgnoreCase(projectView.getName(), searchTerm);\n         }\n \n-        PagedRequest pagedRequest = new PagedRequest(blackDuckRequestBuilder, offset, pageSize);\n-        BlackDuckPageResponse<ProjectView> projectViewBlackDuckPageResponse = blackDuckResponsesTransformer.getSomeMatchingResponses(pagedRequest, ProjectView.class, searchFilter, pagedRequest.getLimit());\n+        BlackDuckPageResponse<ProjectView> pageOfViews = retrieveBlackDuckPageResponse(blackDuckServicesFactory, ApiDiscovery.PROJECTS_LINK_RESPONSE, pageNumber, pageSize, searchFilter);\n+\n+        List<ProviderProject> foundProjects = convertBlackDuckProjects(pageOfViews.getItems(), blackDuckService);\n+        int totalPageCount = (pageOfViews.getTotalCount() + (pageSize - 1)) / pageSize;\n+        return new AlertPagedModel<>(totalPageCount, pageNumber, pageSize, foundProjects);\n+    }\n+\n+    private AlertPagedModel<ProviderUserModel> retrieveUsersForProvider(ConfigurationModel blackDuckConfigurationModel, int pageNumber, int pageSize, String searchTerm) throws IntegrationException {\n+        BlackDuckServicesFactory blackDuckServicesFactory = createBlackDuckServicesFactory(blackDuckConfigurationModel);\n \n-        List<ProviderProject> foundProjects = convertBlackDuckProjects(projectViewBlackDuckPageResponse.getItems(), blackDuckService);\n-        int totalPageCount = (projectViewBlackDuckPageResponse.getTotalCount() + (pageSize - 1)) / pageSize;\n+        Predicate<UserView> searchFilter = userView -> StringUtils.isNotBlank(userView.getEmail());\n+        if (StringUtils.isNotBlank(searchTerm)) {\n+            searchFilter = searchFilter.and(userView -> StringUtils.containsIgnoreCase(userView.getEmail(), searchTerm));\n+        }\n+\n+        BlackDuckPageResponse<UserView> pageOfViews = retrieveBlackDuckPageResponse(blackDuckServicesFactory, ApiDiscovery.USERS_LINK_RESPONSE, pageNumber, pageSize, searchFilter);\n+\n+        List<ProviderUserModel> foundProjects = pageOfViews.getItems()\n+                                                    .stream()\n+                                                    .map(UserViewV4::getEmail)", "originalCommit": "a85bb32a023d9d38fdc5412a45ea1024a9989aeb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUzNzQ4Ng==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1265#discussion_r524537486", "bodyText": "This was a typo that I have now fixed. It still worked though because they both deserialized to the same thing.", "author": "gkillough", "createdAt": "2020-11-16T20:01:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUzNTQ3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "9991b16d39a8c9f8bc521d4695408f3ec8d12bbb", "chunk": "diff --git a/provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckProviderDataAccessor.java b/provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckProviderDataAccessor.java\nindex c8602b8ae..9adfc9dd9 100644\n--- a/provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckProviderDataAccessor.java\n+++ b/provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckProviderDataAccessor.java\n\n@@ -230,7 +229,7 @@ public class BlackDuckProviderDataAccessor implements ProviderDataAccessor {\n \n         List<ProviderUserModel> foundProjects = pageOfViews.getItems()\n                                                     .stream()\n-                                                    .map(UserViewV4::getEmail)\n+                                                    .map(UserView::getEmail)\n                                                     .map(email -> new ProviderUserModel(email, false))\n                                                     .collect(Collectors.toList());\n         int totalPageCount = (pageOfViews.getTotalCount() + (pageSize - 1)) / pageSize;\n"}}, {"oid": "9991b16d39a8c9f8bc521d4695408f3ec8d12bbb", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9991b16d39a8c9f8bc521d4695408f3ec8d12bbb", "message": "Fix(Email): Fix typo using wrong BlackDuck view", "committedDate": "2020-11-16T20:00:28Z", "type": "commit"}, {"oid": "1040fa4698871bef648150de92c042858fe1037a", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1040fa4698871bef648150de92c042858fe1037a", "message": "Chore: Remove left-over comment", "committedDate": "2020-11-16T20:07:02Z", "type": "commit"}, {"oid": "438d29b76b43bae79a709f5f47af063b08a3e306", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/438d29b76b43bae79a709f5f47af063b08a3e306", "message": "Merge branch 'master' into gk_email_address_paging", "committedDate": "2020-11-16T20:09:07Z", "type": "commit"}]}