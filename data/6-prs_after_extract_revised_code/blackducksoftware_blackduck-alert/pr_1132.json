{"pr_number": 1132, "pr_title": "Feat azure testing", "pr_createdAt": "2020-08-24T19:49:53Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132", "timeline": [{"oid": "3987f1bc4c7cba0bd3bcb22b4afe496749d5cbd5", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/3987f1bc4c7cba0bd3bcb22b4afe496749d5cbd5", "message": "fix: Check if the fields are defined first before creation.", "committedDate": "2020-08-24T16:38:47Z", "type": "commit"}, {"oid": "da1497bc38c4301529f246def6d6407432054b5b", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/da1497bc38c4301529f246def6d6407432054b5b", "message": "fix: Fix the code to handle empty existing issues.", "committedDate": "2020-08-24T17:13:15Z", "type": "commit"}, {"oid": "372de072d092a542a3c7ea5f71d54f90b650c5cc", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/372de072d092a542a3c7ea5f71d54f90b650c5cc", "message": "refactor: Add logger error message when catching IntegrationException to return the stack", "committedDate": "2020-08-24T17:40:28Z", "type": "commit"}, {"oid": "cf7a64343b85ceabe57141c0cceeecb3fdf8f254", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/cf7a64343b85ceabe57141c0cceeecb3fdf8f254", "message": "Merge branch 'feat_azure_testing' into mc_azure_distribution_error_log", "committedDate": "2020-08-24T17:42:40Z", "type": "commit"}, {"oid": "66ade237cfa009af0409792affb5279fbf3b550e", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/66ade237cfa009af0409792affb5279fbf3b550e", "message": "Merge pull request #1130 from blackducksoftware/mc_azure_distribution_error_log\n\nMc azure distribution error log", "committedDate": "2020-08-24T18:44:29Z", "type": "commit"}, {"oid": "1dc7a0c79aac1055da480952d3ff2d4ba5fafeaa", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1dc7a0c79aac1055da480952d3ff2d4ba5fafeaa", "message": "feat: Implement issue transition in Azure.", "committedDate": "2020-08-24T19:35:30Z", "type": "commit"}, {"oid": "cd8a934b496a789f3215089e6e30c6ece17ffb53", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/cd8a934b496a789f3215089e6e30c6ece17ffb53", "message": "Merge branch 'feat_azure_testing' of https://github.com/blackducksoftware/blackduck-alert into feat_azure_testing", "committedDate": "2020-08-24T19:35:47Z", "type": "commit"}, {"oid": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8c08199f0aae9e6f27d1aa97181ab0aa9cee8523", "message": "refactor: Rename a method used.", "committedDate": "2020-08-24T19:48:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg2MDczMg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#discussion_r475860732", "bodyText": "Typo in \"AzureWorkItemReponst\".\nWhat does \"when called via the rest API\" mean? In the response from a POST request? I believe it is there for a GET request.\nWe need this link for the callback to Black Duck, so we should add a GET here if necessary.", "author": "gkillough", "createdAt": "2020-08-24T20:00:57Z", "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java", "diffHunk": "@@ -160,10 +186,15 @@ protected String getIssueKey(WorkItemResponseModel issueModel) {\n     protected IssueTrackerIssueResponseModel createResponseModel(AlertIssueOrigin alertIssueOrigin, String issueTitle, IssueOperation issueOperation, WorkItemResponseModel issueResponse) {\n         Integer workItemId = issueResponse.getId();\n         Map<String, ReferenceLinkModel> issueLinks = issueResponse.getLinks();\n-        ReferenceLinkModel htmlLink = issueLinks.get(\"html\");\n-        String uiLink = Optional.ofNullable(htmlLink)\n-                            .map(ReferenceLinkModel::getHref)\n-                            .orElseGet(this::getIssueTrackerUrl);\n+        // the AzureWorkItemReponst does not contain any links when called via the rest API.", "originalCommit": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg2Mzk2Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#discussion_r475863963", "bodyText": "the retrieveExistingIssues call in AzureBoardsIssueHandler makes an API call that returns a WorkItemResponse that contains null for the links.  When the createWorkItemRequest method is called in AzureBoardsIssueHandler the links aren't null.  That's the issue I was seeing.", "author": "psantos1113", "createdAt": "2020-08-24T20:07:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg2MDczMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg2MTg1MA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#discussion_r475861850", "bodyText": "Can we call the error method just once here?", "author": "bamandel", "createdAt": "2020-08-24T20:03:12Z", "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java", "diffHunk": "@@ -135,13 +137,37 @@ public AzureBoardsIssueHandler(IssueContentLengthValidator issueContentLengthVal\n                                        .stream()\n                                        .map(WorkItemReferenceModel::getId)\n                                        .collect(Collectors.toSet());\n-        AzureArrayResponseModel<WorkItemResponseModel> workItemArrayResponse = azureWorkItemService.getWorkItems(azureBoardsProperties.getOrganizationName(), issueConfig.getProjectName(), workItemIds);\n-        return workItemArrayResponse.getValue();\n+        if (!workItemIds.isEmpty()) {\n+            AzureArrayResponseModel<WorkItemResponseModel> workItemArrayResponse = azureWorkItemService.getWorkItems(azureBoardsProperties.getOrganizationName(), issueConfig.getProjectName(), workItemIds);\n+            return workItemArrayResponse.getValue();\n+        }\n+        return List.of();\n     }\n \n     @Override\n     protected boolean transitionIssue(WorkItemResponseModel issueModel, IssueConfig issueConfig, IssueOperation operation) throws IntegrationException {\n-        // FIXME implement\n+        List<WorkItemElementOperationModel> requestElementOps = new ArrayList<>();\n+        Optional<String> transition;\n+        if (IssueOperation.RESOLVE.equals(operation)) {\n+            transition = issueConfig.getResolveTransition();\n+        } else {\n+            transition = issueConfig.getOpenTransition();\n+        }\n+        if (transition.isPresent()) {\n+            String transitionName = transition.get();\n+            try {\n+                WorkItemElementOperationModel descriptionField = createUpdateFieldModel(WorkItemResponseFields.System_State, transitionName);\n+                requestElementOps.add(descriptionField);\n+                WorkItemRequest request = new WorkItemRequest(requestElementOps);\n+                WorkItemResponseModel workItemResponse = azureWorkItemService.updateWorkItem(azureBoardsProperties.getOrganizationName(), issueConfig.getProjectName(), issueModel.getId(), request);\n+                JsonElement stateElement = workItemResponse.getFields().get(WorkItemResponseFields.System_State.getFieldName());\n+                return transitionName.equals(stateElement.getAsString());\n+            } catch (HttpServiceException ex) {\n+                logger.error(\"Error transitioning work item {} to {}\", issueModel.getId(), transitionName);\n+                logger.error(\"Cause: \", ex);", "originalCommit": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d7fe2e851f678ca507abfee6d3a609a29291460", "chunk": "diff --git a/src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java b/src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java\nindex 597ede512..c8fd4a240 100644\n--- a/src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java\n+++ b/src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java\n\n@@ -163,8 +163,7 @@ public class AzureBoardsIssueHandler extends IssueHandler<WorkItemResponseModel>\n                 JsonElement stateElement = workItemResponse.getFields().get(WorkItemResponseFields.System_State.getFieldName());\n                 return transitionName.equals(stateElement.getAsString());\n             } catch (HttpServiceException ex) {\n-                logger.error(\"Error transitioning work item {} to {}\", issueModel.getId(), transitionName);\n-                logger.error(\"Cause: \", ex);\n+                logger.error(\"Error transitioning work item {} to {}\", issueModel.getId(), transitionName, ex);\n             }\n         }\n \n"}}, {"oid": "8d7fe2e851f678ca507abfee6d3a609a29291460", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8d7fe2e851f678ca507abfee6d3a609a29291460", "message": "refactor: Remove a logger statement.", "committedDate": "2020-08-24T20:10:03Z", "type": "commit"}, {"oid": "ba957d3c46d17ae6ef52b62bb2d5e45591fab153", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/ba957d3c46d17ae6ef52b62bb2d5e45591fab153", "message": "refactor: Update the logger message.", "committedDate": "2020-08-24T20:11:00Z", "type": "commit"}, {"oid": "1e885a13e8b9f1224766fd9ad20551098bd225ed", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1e885a13e8b9f1224766fd9ad20551098bd225ed", "message": "fix: Create the correct object to add a comment.", "committedDate": "2020-08-25T00:23:51Z", "type": "commit"}, {"oid": "d776722c0b58f7379153a928ffde660ff5e8ea8e", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/d776722c0b58f7379153a928ffde660ff5e8ea8e", "message": "refactor: log the exception first before adding to audit.", "committedDate": "2020-08-25T00:38:17Z", "type": "commit"}]}