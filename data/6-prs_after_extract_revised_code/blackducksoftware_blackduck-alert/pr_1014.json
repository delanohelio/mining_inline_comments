{"pr_number": 1014, "pr_title": "Refactor validation functions into a ValidationResult object", "pr_createdAt": "2020-06-11T15:21:24Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014", "timeline": [{"oid": "43317611ad5df5e4e0fd6635fbbea66b30d6e854", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/43317611ad5df5e4e0fd6635fbbea66b30d6e854", "message": "refactor: Create ValidationResult object to replace handle error messages", "committedDate": "2020-06-10T19:43:24Z", "type": "commit"}, {"oid": "48c8d5d7ba1732ff1724b97226df1154d9db7f2d", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/48c8d5d7ba1732ff1724b97226df1154d9db7f2d", "message": "style: Removing comments", "committedDate": "2020-06-11T13:50:57Z", "type": "commit"}, {"oid": "9a91d675f73724fbed21608f65188a36cb7f4597", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9a91d675f73724fbed21608f65188a36cb7f4597", "message": "Merge remote-tracking branch 'origin/master' into mc_validation_result", "committedDate": "2020-06-11T13:51:25Z", "type": "commit"}, {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/cb9a2d2a503dd9a597182d54869d1c9247dc406b", "message": "test: Adding test coverage for ValidationResult", "committedDate": "2020-06-11T15:16:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2NzAxOA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438867018", "bodyText": "The comment should be removed", "author": "bamandel", "createdAt": "2020-06-11T15:23:38Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/ConfigField.java", "diffHunk": "@@ -194,22 +195,21 @@ public ConfigField applyValidationFunctions(ConfigValidationFunction... validati\n         return this;\n     }\n \n-    public Collection<String> validate(FieldValueModel fieldToValidate, FieldModel fieldModel) {\n+    public ValidationResult validate(FieldValueModel fieldToValidate, FieldModel fieldModel) {\n         return validate(fieldToValidate, fieldModel, getValidationFunctions());\n     }\n \n-    private Collection<String> validate(FieldValueModel fieldToValidate, FieldModel fieldModel, List<ConfigValidationFunction> validationFunctions) {\n-        Collection<String> errors = new LinkedList<>();\n-        validateRequiredField(fieldToValidate, errors);\n-        validateLength(fieldToValidate, errors);\n-        if (errors.isEmpty()) {\n+    private ValidationResult validate(FieldValueModel fieldToValidate, FieldModel fieldModel, List<ConfigValidationFunction> validationFunctions) {\n+        ValidationResult errors = ValidationResult.of(validateRequiredField(fieldToValidate), validateLength(fieldToValidate));\n+\n+        if (!errors.hasErrors()) {\n             for (ConfigValidationFunction validation : validationFunctions) {\n                 if (null != validation) {\n-                    errors.addAll(validation.apply(fieldToValidate, fieldModel));\n+                    //errors.addAll(validation.apply(fieldToValidate, fieldModel));", "originalCommit": "cb9a2d2a503dd9a597182d54869d1c9247dc406b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea30dd23ce323b081532e3194db24400ba1e516", "chunk": "diff --git a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/ConfigField.java b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/ConfigField.java\nindex 2c42e0c18..4119e2663 100644\n--- a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/ConfigField.java\n+++ b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/ConfigField.java\n\n@@ -205,7 +205,6 @@ public abstract class ConfigField extends AlertSerializableModel {\n         if (!errors.hasErrors()) {\n             for (ConfigValidationFunction validation : validationFunctions) {\n                 if (null != validation) {\n-                    //errors.addAll(validation.apply(fieldToValidate, fieldModel));\n                     errors = ValidationResult.of(validation.apply(fieldToValidate, fieldModel));\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2ODkxMg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438868912", "bodyText": "It might be nice to update the variable name to validationResult.", "author": "gkillough", "createdAt": "2020-06-11T15:26:25Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/UploadEndpointManager.java", "diffHunk": "@@ -151,13 +150,13 @@ public void unRegisterTarget(String targetKey) throws AlertException {\n             if (validationFunction.isPresent()) {\n                 writeFile(tempFilename, fileResource);\n                 File fileToValidate = filePersistenceUtil.createUploadsFile(tempFilename);\n-                Collection<String> errors = validationFunction.get().apply(fileToValidate);\n+                ValidationResult errors = validationFunction.get().apply(fileToValidate);", "originalCommit": "cb9a2d2a503dd9a597182d54869d1c9247dc406b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9dac5a39aeb75c8d5e5dc86f7f9161dd04e1b24f", "chunk": "diff --git a/alert-common/src/main/java/com/synopsys/integration/alert/common/action/UploadEndpointManager.java b/alert-common/src/main/java/com/synopsys/integration/alert/common/action/UploadEndpointManager.java\nindex 28ac7d08b..6be2535c9 100644\n--- a/alert-common/src/main/java/com/synopsys/integration/alert/common/action/UploadEndpointManager.java\n+++ b/alert-common/src/main/java/com/synopsys/integration/alert/common/action/UploadEndpointManager.java\n\n@@ -150,13 +150,13 @@ public class UploadEndpointManager {\n             if (validationFunction.isPresent()) {\n                 writeFile(tempFilename, fileResource);\n                 File fileToValidate = filePersistenceUtil.createUploadsFile(tempFilename);\n-                ValidationResult errors = validationFunction.get().apply(fileToValidate);\n+                ValidationResult validationResult = validationFunction.get().apply(fileToValidate);\n                 filePersistenceUtil.delete(fileToValidate);\n-                if (!errors.hasErrors()) {\n+                if (!validationResult.hasErrors()) {\n                     writeFile(targetFilename, fileResource);\n                     return responseFactory.createCreatedResponse(\"\", \"File uploaded.\");\n                 }\n-                return responseFactory.createBadRequestResponse(\"\", errors.combineErrorMessages());\n+                return responseFactory.createBadRequestResponse(\"\", validationResult.combineErrorMessages());\n             } else {\n                 writeFile(targetFilename, fileResource);\n                 return responseFactory.createCreatedResponse(\"\", \"File uploaded.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MjA2NA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438872064", "bodyText": "A stream would work nicely here. You can use Stream.of (or something similar) on the array validationResults and then use the map method to convert the list to errors.", "author": "bamandel", "createdAt": "2020-06-11T15:29:40Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ValidationResult {\n+\n+    private Collection<String> errors;\n+\n+    private ValidationResult() {\n+        this.errors = List.of();\n+    }\n+\n+    private ValidationResult(Collection<String> errors) {\n+        this.errors = errors;\n+    }\n+\n+    public Collection<String> getErrors() {\n+        return errors;\n+    }\n+\n+    public boolean hasErrors() {\n+        return !errors.isEmpty();\n+    }\n+\n+    public String combineErrorMessages() {\n+        return StringUtils.join(errors, \", \");\n+    }\n+\n+    public static ValidationResult of() {\n+        return new ValidationResult();\n+    }\n+\n+    public static ValidationResult of(Collection<String> errors) {\n+        return new ValidationResult(errors);\n+    }\n+\n+    public static ValidationResult of(String... errors) {\n+        return new ValidationResult(Arrays.asList(errors));\n+    }\n+\n+    public static ValidationResult of(ValidationResult... validationResults) {\n+        Collection<String> newValidationResult = new ArrayList(validationResults.length);\n+        for (ValidationResult result : validationResults) {\n+            newValidationResult.addAll(result.getErrors());\n+        }", "originalCommit": "cb9a2d2a503dd9a597182d54869d1c9247dc406b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3NDQ1OA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438874458", "bodyText": "Arrays.stream(...)\nStream.of(...) calls that method, I'm not sure if we have convention on which one we prefer.", "author": "gkillough", "createdAt": "2020-06-11T15:31:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MjA2NA=="}], "type": "inlineReview", "revised_code": {"commit": "1ea30dd23ce323b081532e3194db24400ba1e516", "chunk": "diff --git a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\nindex 017347c8c..1d317abe7 100644\n--- a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\n+++ b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\n\n@@ -22,10 +22,10 @@\n  */\n package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n import org.apache.commons.lang3.StringUtils;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MjcwOQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438872709", "bodyText": "As a team convention, we tend to put public static methods above the constructor(s).", "author": "gkillough", "createdAt": "2020-06-11T15:30:18Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ValidationResult {\n+\n+    private Collection<String> errors;\n+\n+    private ValidationResult() {\n+        this.errors = List.of();\n+    }\n+\n+    private ValidationResult(Collection<String> errors) {\n+        this.errors = errors;\n+    }\n+\n+    public Collection<String> getErrors() {\n+        return errors;\n+    }\n+\n+    public boolean hasErrors() {\n+        return !errors.isEmpty();\n+    }\n+\n+    public String combineErrorMessages() {\n+        return StringUtils.join(errors, \", \");\n+    }\n+\n+    public static ValidationResult of() {\n+        return new ValidationResult();\n+    }\n+\n+    public static ValidationResult of(Collection<String> errors) {\n+        return new ValidationResult(errors);\n+    }\n+\n+    public static ValidationResult of(String... errors) {\n+        return new ValidationResult(Arrays.asList(errors));\n+    }\n+\n+    public static ValidationResult of(ValidationResult... validationResults) {\n+        Collection<String> newValidationResult = new ArrayList(validationResults.length);\n+        for (ValidationResult result : validationResults) {\n+            newValidationResult.addAll(result.getErrors());\n+        }\n+        return new ValidationResult(newValidationResult);\n+    }", "originalCommit": "cb9a2d2a503dd9a597182d54869d1c9247dc406b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea30dd23ce323b081532e3194db24400ba1e516", "chunk": "diff --git a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\nindex 017347c8c..1d317abe7 100644\n--- a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\n+++ b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\n\n@@ -22,10 +22,10 @@\n  */\n package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n import org.apache.commons.lang3.StringUtils;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkxMzc4MQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438913781", "bodyText": "Can we change the name of the is method to success()?", "author": "jamesrichard91", "createdAt": "2020-06-11T16:23:53Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ValidationResult {\n+\n+    private Collection<String> errors;\n+\n+    private ValidationResult() {\n+        this.errors = List.of();\n+    }\n+\n+    private ValidationResult(Collection<String> errors) {\n+        this.errors = errors;\n+    }\n+\n+    public Collection<String> getErrors() {\n+        return errors;\n+    }\n+\n+    public boolean hasErrors() {\n+        return !errors.isEmpty();\n+    }\n+\n+    public String combineErrorMessages() {\n+        return StringUtils.join(errors, \", \");\n+    }\n+\n+    public static ValidationResult of() {", "originalCommit": "cb9a2d2a503dd9a597182d54869d1c9247dc406b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea30dd23ce323b081532e3194db24400ba1e516", "chunk": "diff --git a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\nindex 017347c8c..1d317abe7 100644\n--- a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\n+++ b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\n\n@@ -22,10 +22,10 @@\n  */\n package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n import org.apache.commons.lang3.StringUtils;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkxMzk4NA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438913984", "bodyText": "Can we change the name of the is method to errors(Collection<String> errors)?", "author": "jamesrichard91", "createdAt": "2020-06-11T16:24:13Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ValidationResult {\n+\n+    private Collection<String> errors;\n+\n+    private ValidationResult() {\n+        this.errors = List.of();\n+    }\n+\n+    private ValidationResult(Collection<String> errors) {\n+        this.errors = errors;\n+    }\n+\n+    public Collection<String> getErrors() {\n+        return errors;\n+    }\n+\n+    public boolean hasErrors() {\n+        return !errors.isEmpty();\n+    }\n+\n+    public String combineErrorMessages() {\n+        return StringUtils.join(errors, \", \");\n+    }\n+\n+    public static ValidationResult of() {\n+        return new ValidationResult();\n+    }\n+\n+    public static ValidationResult of(Collection<String> errors) {", "originalCommit": "cb9a2d2a503dd9a597182d54869d1c9247dc406b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea30dd23ce323b081532e3194db24400ba1e516", "chunk": "diff --git a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\nindex 017347c8c..1d317abe7 100644\n--- a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\n+++ b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\n\n@@ -22,10 +22,10 @@\n  */\n package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n import org.apache.commons.lang3.StringUtils;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkxNDE2Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438914163", "bodyText": "Can we change the name of the is method to error(String... errors)?", "author": "jamesrichard91", "createdAt": "2020-06-11T16:24:31Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ValidationResult {\n+\n+    private Collection<String> errors;\n+\n+    private ValidationResult() {\n+        this.errors = List.of();\n+    }\n+\n+    private ValidationResult(Collection<String> errors) {\n+        this.errors = errors;\n+    }\n+\n+    public Collection<String> getErrors() {\n+        return errors;\n+    }\n+\n+    public boolean hasErrors() {\n+        return !errors.isEmpty();\n+    }\n+\n+    public String combineErrorMessages() {\n+        return StringUtils.join(errors, \", \");\n+    }\n+\n+    public static ValidationResult of() {\n+        return new ValidationResult();\n+    }\n+\n+    public static ValidationResult of(Collection<String> errors) {\n+        return new ValidationResult(errors);\n+    }\n+\n+    public static ValidationResult of(String... errors) {", "originalCommit": "cb9a2d2a503dd9a597182d54869d1c9247dc406b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea30dd23ce323b081532e3194db24400ba1e516", "chunk": "diff --git a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\nindex 017347c8c..1d317abe7 100644\n--- a/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\n+++ b/alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java\n\n@@ -22,10 +22,10 @@\n  */\n package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n import org.apache.commons.lang3.StringUtils;\n \n"}}, {"oid": "1ea30dd23ce323b081532e3194db24400ba1e516", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1ea30dd23ce323b081532e3194db24400ba1e516", "message": "refactor: Refactoring static methods in ValidationResult", "committedDate": "2020-06-11T19:38:37Z", "type": "commit"}, {"oid": "9dac5a39aeb75c8d5e5dc86f7f9161dd04e1b24f", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9dac5a39aeb75c8d5e5dc86f7f9161dd04e1b24f", "message": "refactor: Updating variable name for ValidationResult", "committedDate": "2020-06-11T19:47:41Z", "type": "commit"}]}