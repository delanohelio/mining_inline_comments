{"pr_number": 829, "pr_title": "Update black duck response cache with api object", "pr_createdAt": "2020-01-27T18:18:17Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/829", "timeline": [{"oid": "362206269d8719430eb841f4730f9c63c689f329", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/362206269d8719430eb841f4730f9c63c689f329", "message": "Fix(API): Update BlackDuckResponseCache.getSeverity to use API object", "committedDate": "2020-01-24T21:25:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwOTAyMA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/829#discussion_r371409020", "bodyText": "Can you change this to Optional.ofNullable(severity) ? Just in case the severity is null", "author": "jamesrichard91", "createdAt": "2020-01-27T18:32:06Z", "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java", "diffHunk": "@@ -145,19 +146,9 @@ public String getSeverity(String vulnerabilityUrl) {\n     }\n \n     // TODO update this code with an Object from blackduck-common-api when available\n-    private Optional<String> getCvss3Severity(VulnerabilityView vulnerabilityView) {\n-        Boolean useCvss3 = vulnerabilityView.getUseCvss3();\n-        if (null != useCvss3 && useCvss3) {\n-            JsonObject vulnJsonObject = vulnerabilityView.getJsonElement().getAsJsonObject();\n-            JsonElement cvss3 = vulnJsonObject.get(\"cvss3\");\n-            if (null != cvss3) {\n-                JsonElement cvss3Severity = cvss3.getAsJsonObject().get(\"severity\");\n-                if (null != cvss3Severity) {\n-                    return Optional.of(cvss3Severity.getAsString());\n-                }\n-            }\n-        }\n-        return Optional.empty();\n+    private Optional<ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType> getCvss3Severity(VulnerabilityView vulnerabilityView) {\n+        ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType severity = vulnerabilityView.getCvss3().getSeverity();\n+        return Optional.of(severity);", "originalCommit": "362206269d8719430eb841f4730f9c63c689f329", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxMjQ5OQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/829#discussion_r371412499", "bodyText": "certainly", "author": "crowleySynopsys", "createdAt": "2020-01-27T18:39:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwOTAyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxMzk3MA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/829#discussion_r371413970", "bodyText": "We should probably also check that getCvss3() is not null. Alternatively we can keep looking at the useCvss3 flag in the object.", "author": "gkillough", "createdAt": "2020-01-27T18:42:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwOTAyMA=="}], "type": "inlineReview", "revised_code": {"commit": "48cb4dabb56b4cc559ebf204784c7f1c774aa672", "chunk": "diff --git a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\nindex 120852d8e..e1834c14f 100644\n--- a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\n+++ b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\n\n@@ -147,8 +149,11 @@ public class BlackDuckResponseCache {\n \n     // TODO update this code with an Object from blackduck-common-api when available\n     private Optional<ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType> getCvss3Severity(VulnerabilityView vulnerabilityView) {\n-        ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType severity = vulnerabilityView.getCvss3().getSeverity();\n-        return Optional.of(severity);\n+        VulnerabilityCvss3View vulnerabilityCvss3View = vulnerabilityView.getCvss3();\n+        if (vulnerabilityCvss3View != null) {\n+            return Optional.ofNullable(vulnerabilityCvss3View.getSeverity());\n+        }\n+        return Optional.empty();\n     }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwOTk3OQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/829#discussion_r371409979", "bodyText": "Why did we change the return type from String to ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType?  Instead of the users of the method calling the name() method on the response why dont we do that at the end of this method?", "author": "jamesrichard91", "createdAt": "2020-01-27T18:34:14Z", "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java", "diffHunk": "@@ -105,14 +106,14 @@ public String getProjectComponentQueryLink(String projectLink, String componentN\n         return Optional.empty();\n     }\n \n-    public String getSeverity(String vulnerabilityUrl) {\n-        String severity = \"UNKNOWN\";\n+    public ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType getSeverity(String vulnerabilityUrl) {", "originalCommit": "362206269d8719430eb841f4730f9c63c689f329", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0MjEzNg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/829#discussion_r371442136", "bodyText": "good question, I'll change that", "author": "crowleySynopsys", "createdAt": "2020-01-27T19:39:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwOTk3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "48cb4dabb56b4cc559ebf204784c7f1c774aa672", "chunk": "diff --git a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\nindex 120852d8e..e1834c14f 100644\n--- a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\n+++ b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\n\n@@ -106,7 +108,7 @@ public class BlackDuckResponseCache {\n         return Optional.empty();\n     }\n \n-    public ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType getSeverity(String vulnerabilityUrl) {\n+    public String getSeverity(String vulnerabilityUrl) {\n         ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType severity = null;\n         try {\n             Optional<VulnerabilityView> vulnerabilityView = getItem(VulnerabilityView.class, vulnerabilityUrl);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxMjYzMQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/829#discussion_r371412631", "bodyText": "Based on the TODO, it looks like the item the loop is on (VulnerabilitySourceQualifiedId vulnerabilityItem) should now have the severity. Can we replace the line getting it from the blackDuckResponseCache? If so, let's remove the TODO.", "author": "gkillough", "createdAt": "2020-01-27T18:39:47Z", "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/VulnerabilityNotificationMessageBuilder.java", "diffHunk": "@@ -151,9 +152,9 @@ public String getNotificationType() {\n \n             LinkableItem vulnIdItem = new LinkableItem(MessageBuilderConstants.LABEL_VULNERABILITIES, vulnerabilityId, vulnerabilityUrl);\n             // TODO in Black Duck 2019.10.0, the VulnerabilitySourceQualifiedId includes the severity so we don't need to make a request to get it\n-            String notificationSeverity = blackDuckResponseCache.getSeverity(vulnerabilityUrl);\n+            ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType notificationSeverity = blackDuckResponseCache.getSeverity(vulnerabilityUrl);\n             if (vulnerabilityFilters.isEmpty() || vulnerabilityFilters.contains(notificationSeverity)) {\n-                LinkableItem severity = new LinkableItem(MessageBuilderConstants.LABEL_VULNERABILITY_SEVERITY, notificationSeverity);\n+                LinkableItem severity = new LinkableItem(MessageBuilderConstants.LABEL_VULNERABILITY_SEVERITY, notificationSeverity.name());", "originalCommit": "362206269d8719430eb841f4730f9c63c689f329", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0NTczMQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/829#discussion_r371445731", "bodyText": "the object is manually maintained in the API, and does not have a severity field.  do we know who made the TODO/how they heard that this change would happen in 2019.10.0?", "author": "crowleySynopsys", "createdAt": "2020-01-27T19:46:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxMjYzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0NzQzMg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/829#discussion_r371447432", "bodyText": "We would need to search the issue tracker on that version. I'll discuss more offline.", "author": "gkillough", "createdAt": "2020-01-27T19:49:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxMjYzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "48cb4dabb56b4cc559ebf204784c7f1c774aa672", "chunk": "diff --git a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/VulnerabilityNotificationMessageBuilder.java b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/VulnerabilityNotificationMessageBuilder.java\nindex 6162f9b61..e65bece14 100644\n--- a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/VulnerabilityNotificationMessageBuilder.java\n+++ b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/VulnerabilityNotificationMessageBuilder.java\n\n@@ -151,10 +151,10 @@ public class VulnerabilityNotificationMessageBuilder implements BlackDuckMessage\n             String vulnerabilityUrl = vulnerabilityItem.getVulnerability();\n \n             LinkableItem vulnIdItem = new LinkableItem(MessageBuilderConstants.LABEL_VULNERABILITIES, vulnerabilityId, vulnerabilityUrl);\n-            // TODO in Black Duck 2019.10.0, the VulnerabilitySourceQualifiedId includes the severity so we don't need to make a request to get it\n-            ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType notificationSeverity = blackDuckResponseCache.getSeverity(vulnerabilityUrl);\n+            // TODO in blackduck-common:45.1.2+ the VulnerabilitySourceQualifiedId includes the severity so we don't need to make a request to get it\n+            String notificationSeverity = blackDuckResponseCache.getSeverity(vulnerabilityUrl);\n             if (vulnerabilityFilters.isEmpty() || vulnerabilityFilters.contains(notificationSeverity)) {\n-                LinkableItem severity = new LinkableItem(MessageBuilderConstants.LABEL_VULNERABILITY_SEVERITY, notificationSeverity.name());\n+                LinkableItem severity = new LinkableItem(MessageBuilderConstants.LABEL_VULNERABILITY_SEVERITY, notificationSeverity);\n                 ComponentItemPriority priority = ComponentItemPriority.findPriority(severity.getValue());\n \n                 ComponentItem.Builder builder = new ComponentItem.Builder()\n"}}, {"oid": "48cb4dabb56b4cc559ebf204784c7f1c774aa672", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/48cb4dabb56b4cc559ebf204784c7f1c774aa672", "message": "fix(API): Suggested edits in PR comments.  Edited TODO in VulnerabilityNotificationMessageBuilder", "committedDate": "2020-01-28T20:04:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA0MjIyMQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/829#discussion_r372042221", "bodyText": "We can remove this TODO now.", "author": "gkillough", "createdAt": "2020-01-28T20:37:16Z", "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java", "diffHunk": "@@ -145,17 +148,10 @@ public String getSeverity(String vulnerabilityUrl) {\n     }\n \n     // TODO update this code with an Object from blackduck-common-api when available", "originalCommit": "48cb4dabb56b4cc559ebf204784c7f1c774aa672", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f9dc96e7e943aae85067c389522428b5b2192cbd", "chunk": "diff --git a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\nindex e1834c14f..c1c7c98d5 100644\n--- a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\n+++ b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\n\n@@ -147,7 +147,6 @@ public class BlackDuckResponseCache {\n         return Optional.empty();\n     }\n \n-    // TODO update this code with an Object from blackduck-common-api when available\n     private Optional<ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType> getCvss3Severity(VulnerabilityView vulnerabilityView) {\n         VulnerabilityCvss3View vulnerabilityCvss3View = vulnerabilityView.getCvss3();\n         if (vulnerabilityCvss3View != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA0MjgyNw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/829#discussion_r372042827", "bodyText": "Could this throw an NPE?", "author": "gkillough", "createdAt": "2020-01-28T20:38:46Z", "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java", "diffHunk": "@@ -121,7 +124,7 @@ public String getSeverity(String vulnerabilityUrl) {\n             logger.debug(\"Error fetching vulnerability view\", e);\n         }\n \n-        return severity;\n+        return severity.name();", "originalCommit": "48cb4dabb56b4cc559ebf204784c7f1c774aa672", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA0OTA1NQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/829#discussion_r372049055", "bodyText": "good call, if vulnerabilityView is an empty optional then it would throw an NPE.  how do you guys feel about returning inline conditionals?  or would you rather getSeverity return an Optional?", "author": "crowleySynopsys", "createdAt": "2020-01-28T20:52:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA0MjgyNw=="}], "type": "inlineReview", "revised_code": {"commit": "4e4fdde6b883deadb00466c4012fa175f44a2ccd", "chunk": "diff --git a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\nindex e1834c14f..54b8e6ff2 100644\n--- a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\n+++ b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/util/BlackDuckResponseCache.java\n\n@@ -108,23 +108,28 @@ public class BlackDuckResponseCache {\n         return Optional.empty();\n     }\n \n-    public String getSeverity(String vulnerabilityUrl) {\n-        ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType severity = null;\n+    public String getSeverity(String vulnerabilityUrl) throws NullPointerException {\n+        String severity = \"UNKNOWN\";\n+        ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType severityType = null;\n         try {\n             Optional<VulnerabilityView> vulnerabilityView = getItem(VulnerabilityView.class, vulnerabilityUrl);\n             if (vulnerabilityView.isPresent()) {\n                 VulnerabilityView vulnerability = vulnerabilityView.get();\n-                severity = vulnerability.getSeverity();\n+                severityType = vulnerability.getSeverity();\n                 Optional<ProjectVersionVulnerableBomComponentsItemsVulnerabilityWithRemediationSeverityType> cvss3Severity = getCvss3Severity(vulnerability);\n                 if (cvss3Severity.isPresent()) {\n-                    severity = cvss3Severity.get();\n+                    severityType = cvss3Severity.get();\n                 }\n             }\n         } catch (Exception e) {\n             logger.debug(\"Error fetching vulnerability view\", e);\n         }\n \n-        return severity.name();\n+        if (severityType != null) {\n+            severity = severityType.name();\n+        }\n+\n+        return severity;\n     }\n \n     public Optional<ProjectVersionWrapper> getProjectVersionWrapper(ProjectVersionComponentView versionBomComponent) {\n"}}, {"oid": "f9dc96e7e943aae85067c389522428b5b2192cbd", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f9dc96e7e943aae85067c389522428b5b2192cbd", "message": "fix(API): Removed TODO in BlackDuckResponseCache", "committedDate": "2020-01-28T20:39:12Z", "type": "commit"}, {"oid": "4e4fdde6b883deadb00466c4012fa175f44a2ccd", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/4e4fdde6b883deadb00466c4012fa175f44a2ccd", "message": "fix(API): Handle NPE in getSeverity", "committedDate": "2020-01-28T21:03:22Z", "type": "commit"}, {"oid": "c64ea67ed8b058a5cabb4606e1faa507fba88994", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/c64ea67ed8b058a5cabb4606e1faa507fba88994", "message": "Merge branch 'testNewApi' into updateBlackDuckResponseCacheWithApiObject", "committedDate": "2020-01-30T17:41:20Z", "type": "commit"}]}