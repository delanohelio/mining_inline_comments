{"pr_number": 935, "pr_title": "Validation updates", "pr_createdAt": "2020-03-25T21:09:30Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/935", "timeline": [{"oid": "b28ac9dd277032f96e5c6e482cc9d21ad8ce374c", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b28ac9dd277032f96e5c6e482cc9d21ad8ce374c", "message": "Merge branch 'jr_530_validation' into jr_validation_updates", "committedDate": "2020-03-25T16:38:53Z", "type": "commit"}, {"oid": "70217ac0b4c0bf8cee0df6c4644a8c0490f0cded", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/70217ac0b4c0bf8cee0df6c4644a8c0490f0cded", "message": "Updating the validators. Cleaning up the default admin validations", "committedDate": "2020-03-25T21:03:49Z", "type": "commit"}, {"oid": "1a3ab66f8c112c4dcb98df554d8783bf0a7fdbbe", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1a3ab66f8c112c4dcb98df554d8783bf0a7fdbbe", "message": "Merge branch 'master' into jr_validation_updates\n\n# Conflicts:\n#\tsrc/main/java/com/synopsys/integration/alert/web/user/UserActions.java", "committedDate": "2020-03-25T21:17:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4MTc0Nw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/935#discussion_r398581747", "bodyText": "This is a good change, but we should double check that we are clear about blank values not being allowed for these settings in the doc.", "author": "gkillough", "createdAt": "2020-03-26T13:43:53Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/security/EncryptionUtility.java", "diffHunk": "@@ -113,7 +113,11 @@ private String getEncodedSalt() {\n     }\n \n     public boolean isPasswordSet() {\n-        return null != getPassword();\n+        return StringUtils.isNotBlank(getPassword());", "originalCommit": "1a3ab66f8c112c4dcb98df554d8783bf0a7fdbbe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwMjkxMw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/935#discussion_r398602913", "bodyText": "I know this method name was my suggestion, but ForError might be less clunky than IfHasError.", "author": "gkillough", "createdAt": "2020-03-26T14:11:33Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/system/BaseSystemValidator.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.system;\n+\n+import com.synopsys.integration.alert.common.enumeration.SystemMessageSeverity;\n+import com.synopsys.integration.alert.common.enumeration.SystemMessageType;\n+import com.synopsys.integration.alert.common.persistence.accessor.SystemMessageUtility;\n+\n+public class BaseSystemValidator {\n+    private SystemMessageUtility systemMessageUtility;\n+\n+    public BaseSystemValidator(SystemMessageUtility systemMessageUtility) {\n+        this.systemMessageUtility = systemMessageUtility;\n+    }\n+\n+    public boolean addSystemMessageIfHasError(String errorMessage, SystemMessageSeverity systemMessageSeverity, SystemMessageType messageType, boolean hasError) {", "originalCommit": "1a3ab66f8c112c4dcb98df554d8783bf0a7fdbbe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d204a73681bddc1fb3f959f5204107b8b5da0a7a", "chunk": "diff --git a/alert-common/src/main/java/com/synopsys/integration/alert/common/system/BaseSystemValidator.java b/alert-common/src/main/java/com/synopsys/integration/alert/common/system/BaseSystemValidator.java\nindex 1332af459..ae58bba57 100644\n--- a/alert-common/src/main/java/com/synopsys/integration/alert/common/system/BaseSystemValidator.java\n+++ b/alert-common/src/main/java/com/synopsys/integration/alert/common/system/BaseSystemValidator.java\n\n@@ -33,7 +33,7 @@ public class BaseSystemValidator {\n         this.systemMessageUtility = systemMessageUtility;\n     }\n \n-    public boolean addSystemMessageIfHasError(String errorMessage, SystemMessageSeverity systemMessageSeverity, SystemMessageType messageType, boolean hasError) {\n+    public boolean addSystemMessageForError(String errorMessage, SystemMessageSeverity systemMessageSeverity, SystemMessageType messageType, boolean hasError) {\n         if (hasError) {\n             getSystemMessageUtility().addSystemMessage(errorMessage, systemMessageSeverity, messageType);\n             return true;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwMzk4Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/935#discussion_r398603983", "bodyText": "We do this a few times. Should we add an overloaded version of the method with a logError flag?", "author": "gkillough", "createdAt": "2020-03-26T14:12:55Z", "path": "src/main/java/com/synopsys/integration/alert/component/settings/SettingsValidator.java", "diffHunk": "@@ -35,45 +31,43 @@\n import com.synopsys.integration.alert.common.enumeration.SystemMessageType;\n import com.synopsys.integration.alert.common.persistence.accessor.SystemMessageUtility;\n import com.synopsys.integration.alert.common.security.EncryptionUtility;\n+import com.synopsys.integration.alert.common.system.BaseSystemValidator;\n import com.synopsys.integration.alert.component.settings.descriptor.SettingsDescriptor;\n \n @Component\n-public class SettingsValidator {\n+public class SettingsValidator extends BaseSystemValidator {\n     private static final Logger logger = LoggerFactory.getLogger(SettingsValidator.class);\n     private EncryptionUtility encryptionUtility;\n-    private SystemMessageUtility systemMessageUtility;\n \n     @Autowired\n     public SettingsValidator(EncryptionUtility encryptionUtility, SystemMessageUtility systemMessageUtility) {\n+        super(systemMessageUtility);\n         this.encryptionUtility = encryptionUtility;\n-        this.systemMessageUtility = systemMessageUtility;\n     }\n \n-    public Map<String, String> validateEncryption() {\n-        systemMessageUtility.removeSystemMessagesByType(SystemMessageType.ENCRYPTION_CONFIGURATION_ERROR);\n-\n-        Map<String, String> fieldErrors = new HashMap<>();\n+    public boolean validateEncryption() {\n+        getSystemMessageUtility().removeSystemMessagesByType(SystemMessageType.ENCRYPTION_CONFIGURATION_ERROR);\n+        boolean valid = true;\n         if (!encryptionUtility.isInitialized()) {\n             logger.error(\"Encryption utilities: Not Initialized\");\n \n-            validationCheck(SettingsDescriptor.FIELD_ERROR_ENCRYPTION_PWD, SystemMessageType.ENCRYPTION_CONFIGURATION_ERROR, !encryptionUtility.isPasswordSet())\n-                .ifPresent(error -> fieldErrors.put(SettingsDescriptor.KEY_ENCRYPTION_PWD, error));\n-            validationCheck(SettingsDescriptor.FIELD_ERROR_ENCRYPTION_GLOBAL_SALT, SystemMessageType.ENCRYPTION_CONFIGURATION_ERROR, !encryptionUtility.isGlobalSaltSet())\n-                .ifPresent(error -> fieldErrors.put(SettingsDescriptor.KEY_ENCRYPTION_GLOBAL_SALT, error));\n-            return fieldErrors;\n+            boolean encryptionError = addSystemMessageIfHasError(SettingsDescriptor.FIELD_ERROR_ENCRYPTION_PWD, SystemMessageSeverity.ERROR, SystemMessageType.ENCRYPTION_CONFIGURATION_ERROR,\n+                encryptionUtility.isPasswordMissing());\n+            if (encryptionError) {\n+                valid = false;\n+                logger.error(SettingsDescriptor.FIELD_ERROR_ENCRYPTION_PWD);\n+            }\n+            boolean saltError = addSystemMessageIfHasError(SettingsDescriptor.FIELD_ERROR_ENCRYPTION_GLOBAL_SALT, SystemMessageSeverity.ERROR, SystemMessageType.ENCRYPTION_CONFIGURATION_ERROR,\n+                encryptionUtility.isGlobalSaltMissing());\n+            if (saltError) {\n+                valid = false;\n+                logger.error(SettingsDescriptor.FIELD_ERROR_ENCRYPTION_GLOBAL_SALT);", "originalCommit": "1a3ab66f8c112c4dcb98df554d8783bf0a7fdbbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYyMDcxNA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/935#discussion_r398620714", "bodyText": "The problem is we are not always logging at error level, some of them are warnings which makes it more complicated.", "author": "jamesrichard91", "createdAt": "2020-03-26T14:34:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwMzk4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "d204a73681bddc1fb3f959f5204107b8b5da0a7a", "chunk": "diff --git a/src/main/java/com/synopsys/integration/alert/component/settings/SettingsValidator.java b/src/main/java/com/synopsys/integration/alert/component/settings/SettingsValidator.java\nindex e2ac20964..c0c52cb14 100644\n--- a/src/main/java/com/synopsys/integration/alert/component/settings/SettingsValidator.java\n+++ b/src/main/java/com/synopsys/integration/alert/component/settings/SettingsValidator.java\n\n@@ -51,13 +51,13 @@ public class SettingsValidator extends BaseSystemValidator {\n         if (!encryptionUtility.isInitialized()) {\n             logger.error(\"Encryption utilities: Not Initialized\");\n \n-            boolean encryptionError = addSystemMessageIfHasError(SettingsDescriptor.FIELD_ERROR_ENCRYPTION_PWD, SystemMessageSeverity.ERROR, SystemMessageType.ENCRYPTION_CONFIGURATION_ERROR,\n+            boolean encryptionError = addSystemMessageForError(SettingsDescriptor.FIELD_ERROR_ENCRYPTION_PWD, SystemMessageSeverity.ERROR, SystemMessageType.ENCRYPTION_CONFIGURATION_ERROR,\n                 encryptionUtility.isPasswordMissing());\n             if (encryptionError) {\n                 valid = false;\n                 logger.error(SettingsDescriptor.FIELD_ERROR_ENCRYPTION_PWD);\n             }\n-            boolean saltError = addSystemMessageIfHasError(SettingsDescriptor.FIELD_ERROR_ENCRYPTION_GLOBAL_SALT, SystemMessageSeverity.ERROR, SystemMessageType.ENCRYPTION_CONFIGURATION_ERROR,\n+            boolean saltError = addSystemMessageForError(SettingsDescriptor.FIELD_ERROR_ENCRYPTION_GLOBAL_SALT, SystemMessageSeverity.ERROR, SystemMessageType.ENCRYPTION_CONFIGURATION_ERROR,\n                 encryptionUtility.isGlobalSaltMissing());\n             if (saltError) {\n                 valid = false;\n"}}, {"oid": "d204a73681bddc1fb3f959f5204107b8b5da0a7a", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/d204a73681bddc1fb3f959f5204107b8b5da0a7a", "message": "Refactor: Updating the method name in the BaseSystemValidator", "committedDate": "2020-03-26T14:40:37Z", "type": "commit"}]}