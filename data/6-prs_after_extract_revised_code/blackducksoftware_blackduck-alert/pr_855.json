{"pr_number": 855, "pr_title": "refactor(phoneHome): Create a handler interface for provider specific\u2026", "pr_createdAt": "2020-02-12T21:34:39Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/855", "timeline": [{"oid": "68faf8e8dd71cff7e93b73cfe1b4eeb6072c526a", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/68faf8e8dd71cff7e93b73cfe1b4eeb6072c526a", "message": "refactor(phoneHome): Create a handler interface for provider specific data.", "committedDate": "2020-02-12T21:30:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg3ODIzNQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/855#discussion_r378878235", "bodyText": "This class seems unnecessary. Why not just autowire a List< ProviderPhoneHomeHandler> in the PhoneHomeTask and then loop over that? You can still look up the provider configs because ProviderPhoneHomeHandler has a ProviderKey.", "author": "gkillough", "createdAt": "2020-02-13T14:03:00Z", "path": "src/main/java/com/synopsys/integration/alert/workflow/scheduled/PhoneHomeHandlerMap.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.synopsys.integration.alert.workflow.scheduled;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.common.persistence.model.ConfigurationModel;\n+import com.synopsys.integration.alert.common.provider.Provider;\n+import com.synopsys.integration.alert.common.provider.ProviderKey;\n+import com.synopsys.integration.alert.common.provider.ProviderPhoneHomeHandler;\n+import com.synopsys.integration.phonehome.PhoneHomeRequestBody;\n+\n+@Component\n+public class PhoneHomeHandlerMap {", "originalCommit": "68faf8e8dd71cff7e93b73cfe1b4eeb6072c526a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4NDEzMw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/855#discussion_r378884133", "bodyText": "This is just for a more efficient way to look up the provider handler.  We would have to have another for loop or a filter stream to find the handler for each provider.  With this it would be a constant time lookup of the provider key.  I can simply put in a stream to filter the handlers based on key.", "author": "psantos1113", "createdAt": "2020-02-13T14:13:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg3ODIzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "df01a8d0b0d990c2bc4bed69630648471f98bde8", "chunk": "diff --git a/src/main/java/com/synopsys/integration/alert/workflow/scheduled/PhoneHomeHandlerMap.java b/src/main/java/com/synopsys/integration/alert/workflow/scheduled/PhoneHomeHandlerMap.java\ndeleted file mode 100644\nindex 8da2b62d7..000000000\n--- a/src/main/java/com/synopsys/integration/alert/workflow/scheduled/PhoneHomeHandlerMap.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-package com.synopsys.integration.alert.workflow.scheduled;\n-\n-import java.util.List;\n-import java.util.Map;\n-import java.util.function.Function;\n-import java.util.stream.Collectors;\n-\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-\n-import com.synopsys.integration.alert.common.persistence.model.ConfigurationModel;\n-import com.synopsys.integration.alert.common.provider.Provider;\n-import com.synopsys.integration.alert.common.provider.ProviderKey;\n-import com.synopsys.integration.alert.common.provider.ProviderPhoneHomeHandler;\n-import com.synopsys.integration.phonehome.PhoneHomeRequestBody;\n-\n-@Component\n-public class PhoneHomeHandlerMap {\n-    private List<ProviderPhoneHomeHandler> handlers;\n-    private Map<ProviderKey, ProviderPhoneHomeHandler> handlerMap;\n-\n-    @Autowired\n-    public PhoneHomeHandlerMap(List<ProviderPhoneHomeHandler> handlers) {\n-        this.handlers = handlers;\n-        handlerMap = this.handlers.stream()\n-                         .collect(Collectors.toMap(ProviderPhoneHomeHandler::getProviderKey, Function.identity()));\n-    }\n-\n-    public PhoneHomeRequestBody.Builder populatePhoneHomeData(Provider provider, ConfigurationModel configurationModel, PhoneHomeRequestBody.Builder phoneHomeBuilder) {\n-        if (!handlerMap.containsKey(provider.getKey())) {\n-            return phoneHomeBuilder;\n-        }\n-        ProviderPhoneHomeHandler handler = handlerMap.get(provider.getKey());\n-        return handler.populatePhoneHomeData(configurationModel, phoneHomeBuilder);\n-    }\n-}\n"}}, {"oid": "df01a8d0b0d990c2bc4bed69630648471f98bde8", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/df01a8d0b0d990c2bc4bed69630648471f98bde8", "message": "refactor(phoneHome): Delete PhoneHomeHandlerMap and update PhoneHomeTask.", "committedDate": "2020-02-13T14:54:10Z", "type": "commit"}, {"oid": "4053813eee9c4a4560a01c0437e459f691b21f23", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/4053813eee9c4a4560a01c0437e459f691b21f23", "message": "Merge remote-tracking branch 'origin/feat_provider_lifecycle_management' into ps_phone_home_refactor", "committedDate": "2020-02-13T15:00:49Z", "type": "commit"}, {"oid": "3ab5bc41e4e63e1d8769192f2327704bf40e8ffe", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/3ab5bc41e4e63e1d8769192f2327704bf40e8ffe", "message": "test: Clean up whitespace.", "committedDate": "2020-02-13T15:23:20Z", "type": "commit"}]}