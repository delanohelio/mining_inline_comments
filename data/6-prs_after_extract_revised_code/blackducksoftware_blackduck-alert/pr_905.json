{"pr_number": 905, "pr_title": "Fix: compare existing job name with all other jobs to prevent duplicate names", "pr_createdAt": "2020-03-09T15:33:48Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/905", "timeline": [{"oid": "0d72deadfa217aa400d56167e229106dfc2ab290", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/0d72deadfa217aa400d56167e229106dfc2ab290", "message": "Fix: compare existing job name with all other jobs to prevent duplicate names", "committedDate": "2020-03-09T15:31:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxOTU3Ng==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/905#discussion_r389819576", "bodyText": "Either abstract this into its own method, or do the check before this stream. This is a little to cluttered IMO.", "author": "gkillough", "createdAt": "2020-03-09T16:48:01Z", "path": "src/main/java/com/synopsys/integration/alert/web/config/JobConfigActions.java", "diffHunk": "@@ -172,20 +174,28 @@ public JobFieldModel updateJob(UUID id, JobFieldModel jobFieldModel) throws Aler\n         return savedJobFieldModel;\n     }\n \n-    private void validateJobNameUnique(JobFieldModel jobFieldModel) throws AlertFieldException {\n+    private void validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) throws AlertFieldException {\n         for (FieldModel fieldModel : jobFieldModel.getFieldModels()) {\n-            validateJobNameUnique(fieldModel);\n+            validateJobNameUnique(currentJobId, fieldModel);\n         }\n     }\n \n-    private void validateJobNameUnique(FieldModel fieldModel) throws AlertFieldException {\n+    private void validateJobNameUnique(@Nullable UUID currentJobId, FieldModel fieldModel) throws AlertFieldException {\n         Optional<FieldValueModel> jobNameFieldOptional = fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME);\n         String error = \"\";\n         if (jobNameFieldOptional.isPresent()) {\n             String jobName = jobNameFieldOptional.get().getValue().orElse(null);\n             if (StringUtils.isNotBlank(jobName)) {\n                 List<ConfigurationJobModel> jobs = configurationAccessor.getAllJobs();\n+\n                 boolean foundDuplicateName = jobs.stream()\n+                                                 .filter(job -> {\n+                                                     if (null != currentJobId) {\n+                                                         return !job.getJobId().equals(currentJobId);\n+                                                     } else {\n+                                                         return true;\n+                                                     }\n+                                                 })", "originalCommit": "0d72deadfa217aa400d56167e229106dfc2ab290", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4cba61270080539c6a9a13974be80bbecfa73edd", "chunk": "diff --git a/src/main/java/com/synopsys/integration/alert/web/config/JobConfigActions.java b/src/main/java/com/synopsys/integration/alert/web/config/JobConfigActions.java\nindex 0fa99c449..cc9fe4ce9 100644\n--- a/src/main/java/com/synopsys/integration/alert/web/config/JobConfigActions.java\n+++ b/src/main/java/com/synopsys/integration/alert/web/config/JobConfigActions.java\n\n@@ -189,13 +189,7 @@ public class JobConfigActions {\n                 List<ConfigurationJobModel> jobs = configurationAccessor.getAllJobs();\n \n                 boolean foundDuplicateName = jobs.stream()\n-                                                 .filter(job -> {\n-                                                     if (null != currentJobId) {\n-                                                         return !job.getJobId().equals(currentJobId);\n-                                                     } else {\n-                                                         return true;\n-                                                     }\n-                                                 })\n+                                                 .filter(job -> filterOutMatchingJobs(currentJobId, job))\n                                                  .flatMap(job -> job.getCopyOfConfigurations().stream())\n                                                  .map(configurationModel -> configurationModel.getField(ChannelDistributionUIConfig.KEY_NAME).orElse(null))\n                                                  .filter(configurationFieldModel -> (null != configurationFieldModel) && configurationFieldModel.getFieldValue().isPresent())\n"}}, {"oid": "4cba61270080539c6a9a13974be80bbecfa73edd", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/4cba61270080539c6a9a13974be80bbecfa73edd", "message": "Refactor: moving filter logic out into its own method", "committedDate": "2020-03-09T17:17:21Z", "type": "commit"}, {"oid": "e5d4307db25e3eaa290cc7d0d8badda818af37b1", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e5d4307db25e3eaa290cc7d0d8badda818af37b1", "message": "Refactor: Removing unnecessary null check", "committedDate": "2020-03-09T17:27:32Z", "type": "commit"}]}