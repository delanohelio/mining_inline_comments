{"pr_number": 1060, "pr_title": "Azure Library: Work Item Types", "pr_createdAt": "2020-07-09T18:49:21Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1060", "timeline": [{"oid": "9f8a2b94817517fed7942b7bcc6d2349db3084b7", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9f8a2b94817517fed7942b7bcc6d2349db3084b7", "message": "Feat(Azure Library): Create GET all method for work item types", "committedDate": "2020-07-09T18:41:01Z", "type": "commit"}, {"oid": "a937f244cef871adab4a8a605b79f53583046590", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a937f244cef871adab4a8a605b79f53583046590", "message": "Feat(Azure Library): Add GET method for a single work item type", "committedDate": "2020-07-09T18:43:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNjI5Nw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1060#discussion_r452426297", "bodyText": "Are you sure we should be using a version type of *-preview?", "author": "jamesrichard91", "createdAt": "2020-07-09T18:58:28Z", "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/state/WorkItemTypeStateService.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * azure-boards-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.azure.boards.common.service.state;\n+\n+import java.lang.reflect.Type;\n+\n+import com.google.gson.reflect.TypeToken;\n+import com.synopsys.integration.azure.boards.common.http.AzureHttpService;\n+import com.synopsys.integration.azure.boards.common.http.HttpServiceException;\n+import com.synopsys.integration.azure.boards.common.model.AzureArrayResponseModel;\n+import com.synopsys.integration.azure.boards.common.util.AzureSpecTemplate;\n+\n+public class WorkItemTypeStateService {\n+    public static final AzureSpecTemplate API_SPEC_ORGANIZATION_PROJECT_WORKITEMTYPE_STATES = new AzureSpecTemplate(\"/{organization}/{project}/_apis/wit/workitemtypes/{type}/states\");\n+    public static final AzureSpecTemplate API_SPEC_ORGANIZATION_PROCESS_WORKITEMTYPE_STATES = new AzureSpecTemplate(\"/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/states\");\n+    public static final AzureSpecTemplate API_SPEC_ORGANIZATION_PROCESS_WORKITEMTYPE_STATE_INDIVIDUAL = new AzureSpecTemplate(\"/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/states/{stateId}\");\n+\n+    private final AzureHttpService azureHttpService;\n+\n+    public WorkItemTypeStateService(AzureHttpService azureHttpService) {\n+        this.azureHttpService = azureHttpService;\n+    }\n+\n+    public AzureArrayResponseModel<WorkItemTypeStateResponseModel> getStatesForProject(String organizationName, String projectIdOrName, String workItemType) throws HttpServiceException {\n+        String requestSpec = API_SPEC_ORGANIZATION_PROJECT_WORKITEMTYPE_STATES\n+                                 .defineReplacement(\"{organization}\", organizationName)\n+                                 .defineReplacement(\"{project}\", projectIdOrName)\n+                                 .defineReplacement(\"{type}\", workItemType)\n+                                 .populateSpec();\n+        requestSpec = String.format(\"%s?%s=%s\", requestSpec, AzureHttpService.AZURE_API_VERSION_QUERY_PARAM_NAME, \"5.1-preview.1\");\n+        Type responseType = new TypeToken<AzureArrayResponseModel<WorkItemTypeStateResponseModel>>() {}.getType();\n+        return azureHttpService.get(requestSpec, responseType);\n+    }\n+\n+    public AzureArrayResponseModel<WorkItemTypeProcessStateResponseModel> getStatesForProcess(String organizationName, String processId, String workItemTypeRefName) throws HttpServiceException {\n+        String requestSpec = API_SPEC_ORGANIZATION_PROCESS_WORKITEMTYPE_STATES\n+                                 .defineReplacement(\"{organization}\", organizationName)\n+                                 .defineReplacement(\"{processId}\", processId)\n+                                 .defineReplacement(\"{witRefName}\", workItemTypeRefName)\n+                                 .populateSpec();\n+        requestSpec = String.format(\"%s?%s=%s\", requestSpec, AzureHttpService.AZURE_API_VERSION_QUERY_PARAM_NAME, \"5.1-preview.1\");", "originalCommit": "a937f244cef871adab4a8a605b79f53583046590", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyODMxMw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1060#discussion_r452428313", "bodyText": "There are several pieces of functionality that require using preview versions. Luckily these are not subject to change, but they may not be fully tested.", "author": "gkillough", "createdAt": "2020-07-09T19:02:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNjI5Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "61c5741b17df8c4b0204127748a9efa5c81affe9", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/61c5741b17df8c4b0204127748a9efa5c81affe9", "message": "Merge branch 'master' into gk_work_item_types", "committedDate": "2020-07-09T19:08:47Z", "type": "commit"}]}