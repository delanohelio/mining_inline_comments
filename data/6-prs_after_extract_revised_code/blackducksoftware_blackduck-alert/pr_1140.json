{"pr_number": 1140, "pr_title": "using String.format", "pr_createdAt": "2020-08-27T17:21:17Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140", "timeline": [{"oid": "e292c08d4d78574eddfce9672e72e8185747b100", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e292c08d4d78574eddfce9672e72e8185747b100", "message": "using String.format", "committedDate": "2020-08-27T17:18:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU3OTcwNQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478579705", "bodyText": "Instead of modifying the provided String shouldn't we create a new one in this method?", "author": "jamesrichard91", "createdAt": "2020-08-27T17:26:10Z", "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureApiVersionAppender.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/**\n+ * azure-boards-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.azure.boards.common.http;\n+\n+import static com.synopsys.integration.azure.boards.common.http.AzureHttpService.AZURE_API_VERSION_QUERY_PARAM_NAME;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class AzureApiVersionAppender {\n+    public String appendApiVersion(String spec, String apiVersion) {\n+        char queryParamSeparator = '?';\n+        if (StringUtils.contains(spec, queryParamSeparator)) {\n+            queryParamSeparator = '&';\n+        }\n+        spec += queryParamSeparator;", "originalCommit": "e292c08d4d78574eddfce9672e72e8185747b100", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4OTA0OA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478589048", "bodyText": "Given that string are immutable, that IS what occurs anyway. But I can make it more explict.", "author": "ekerwin", "createdAt": "2020-08-27T17:42:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU3OTcwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168", "chunk": "diff --git a/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureApiVersionAppender.java b/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureApiVersionAppender.java\nindex bd8363094..1b822c277 100644\n--- a/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureApiVersionAppender.java\n+++ b/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureApiVersionAppender.java\n\n@@ -28,16 +28,15 @@ import org.apache.commons.lang3.StringUtils;\n \n public class AzureApiVersionAppender {\n     public String appendApiVersion(String spec, String apiVersion) {\n-        char queryParamSeparator = '?';\n-        if (StringUtils.contains(spec, queryParamSeparator)) {\n-            queryParamSeparator = '&';\n-        }\n-        spec += queryParamSeparator;\n-        spec += AZURE_API_VERSION_QUERY_PARAM_NAME;\n-        spec += \"=\";\n-        spec += apiVersion;\n+        char queryParamSeparator = StringUtils.contains(spec, '?') ? '&' : '?';\n \n-        return spec;\n+        StringBuilder appendedSpec = new StringBuilder(spec);\n+        appendedSpec.append(queryParamSeparator);\n+        appendedSpec.append(AZURE_API_VERSION_QUERY_PARAM_NAME);\n+        appendedSpec.append(\"=\");\n+        appendedSpec.append(apiVersion);\n+\n+        return appendedSpec.toString();\n     }\n \n }\n"}}, {"oid": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/2c45c2f0810f1c3dc0bdc0da2785fa144ec09168", "message": "using better appending", "committedDate": "2020-08-27T17:49:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwNDExOA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478604118", "bodyText": "Probably the latter. Each service that needs to append a version should have an AzureApiVersionAppender. The version constants should probably end up in AzureApiVersionAppender as well.\nThe original code here was a misunderstanding of the Azure API (thinking that all endpoints we would use would use the same API version).", "author": "gkillough", "createdAt": "2020-08-27T18:09:12Z", "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureHttpService.java", "diffHunk": "@@ -154,22 +161,19 @@ public GenericUrl constructRequestUrl(String spec) {\n             requestUrlBuilder.append(\"/\");\n         }\n \n-        requestUrlBuilder.append(spec);\n-\n         if (!StringUtils.contains(spec, AZURE_API_VERSION_QUERY_PARAM_NAME)) {\n-            char queryParamSeparator = '?';\n-            if (StringUtils.contains(spec, queryParamSeparator)) {\n-                queryParamSeparator = '&';\n-            }\n-            requestUrlBuilder.append(queryParamSeparator);\n-            requestUrlBuilder.append(AZURE_API_VERSION_QUERY_PARAM_NAME);\n-            requestUrlBuilder.append('=');\n-            requestUrlBuilder.append(AZURE_API_VERSION);\n+            spec = azureApiVersionAppender.appendApiVersion(spec, AZURE_API_VERSION);\n         }\n+        requestUrlBuilder.append(spec);\n \n         return new GenericUrl(requestUrlBuilder.toString());\n     }\n \n+    public String appendApiVersion(String spec, String apiVersion) {\n+        //TODO ejk - is this appropriate or should the classes that need this demand an appender?", "originalCommit": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4OTg2MQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478689861", "bodyText": "I injected the appender and added some utility methods for appending specific versions.", "author": "ekerwin", "createdAt": "2020-08-27T20:54:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwNDExOA=="}], "type": "inlineReview", "revised_code": {"commit": "ef5f20cb76dd2f0f035fc3cdb787fbe3f9a7b3e7", "chunk": "diff --git a/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureHttpService.java b/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureHttpService.java\nindex 542b30232..b68c822fb 100644\n--- a/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureHttpService.java\n+++ b/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureHttpService.java\n\n@@ -169,11 +169,6 @@ public class AzureHttpService {\n         return new GenericUrl(requestUrlBuilder.toString());\n     }\n \n-    public String appendApiVersion(String spec, String apiVersion) {\n-        //TODO ejk - is this appropriate or should the classes that need this demand an appender?\n-        return azureApiVersionAppender.appendApiVersion(spec, apiVersion);\n-    }\n-\n     protected String acceptHeader() {\n         return \"application/json\";\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwNDg2OQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478604869", "bodyText": "Is this not thrown? why are we removing it?", "author": "jamesrichard91", "createdAt": "2020-08-27T18:10:29Z", "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureCustomFieldManager.java", "diffHunk": "@@ -128,8 +128,6 @@ public void installCustomFields(String projectName, String workItemTypeName) thr\n     private Optional<ProjectWorkItemFieldModel> getAlertCustomProjectField(String projectName, String fieldReferenceName) {\n         try {\n             return Optional.of(projectService.getField(organizationName, fieldReferenceName));\n-        } catch (IOException e) {", "originalCommit": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3NTQ4Nw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478675487", "bodyText": "It isn't thrown anymore.", "author": "ekerwin", "createdAt": "2020-08-27T20:25:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwNDg2OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyMTg3NQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478621875", "bodyText": "Looks like this was supposed to be based on: API_SPEC_ORGANIZATION_WORKITEMS_INDIVIDUAL", "author": "gkillough", "createdAt": "2020-08-27T18:42:13Z", "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/workitem/AzureWorkItemService.java", "diffHunk": "@@ -124,10 +91,8 @@ public WorkItemResponseModel updateWorkItem(String organizationName, String proj\n     }\n \n     public WorkItemDeletedResponseModel deleteWorkItem(String organizationName, Integer workItemId) throws HttpServiceException {\n-        String requestSpec = API_SPEC_ORGANIZATION_PROJECT_WORKITEMS_INDIVIDUAL\n-                                 .defineReplacement(PATH_ORGANIZATION_REPLACEMENT, organizationName)\n-                                 .defineReplacement(PATH_WORK_ITEM_ID_REPLACEMENT, workItemId.toString())\n-                                 .populateSpec();\n+        //TODO verify this is a bug", "originalCommit": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzODgwNg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478638806", "bodyText": "I used API_SPEC_ORGANIZATION_PROJECT_WORKITEMS_INDIVIDUAL because the spec template looked to be the same for getting the WorkItemDeleted. I realized it matched the ...WORKITEMS_INDIVIDUAL so I reused it in this spot", "author": "ChomickiM", "createdAt": "2020-08-27T19:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyMTg3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY0MDUyMA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478640520", "bodyText": "Right, but that would not have worked right?", "author": "gkillough", "createdAt": "2020-08-27T19:17:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyMTg3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMyODE0NQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r479328145", "bodyText": "@ekerwin This is a bug. Project name is optional in the request, but cannot be null.\nThe String formatting should look like this:\nString.format(\"/%s/_apis/wit/workitems/%s\", organizationName, workItemId.toString());", "author": "gkillough", "createdAt": "2020-08-28T14:09:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyMTg3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MjE2OQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r479342169", "bodyText": "Thanks @gkillough !", "author": "ekerwin", "createdAt": "2020-08-28T14:28:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyMTg3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "bcabdab09a1478a96a5e14add9cb6a0553697d74", "chunk": "diff --git a/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/workitem/AzureWorkItemService.java b/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/workitem/AzureWorkItemService.java\nindex 79a940d56..54ee8f750 100644\n--- a/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/workitem/AzureWorkItemService.java\n+++ b/azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/workitem/AzureWorkItemService.java\n\n@@ -91,8 +91,7 @@ public class AzureWorkItemService {\n     }\n \n     public WorkItemDeletedResponseModel deleteWorkItem(String organizationName, Integer workItemId) throws HttpServiceException {\n-        //TODO verify this is a bug\n-        String requestSpec = createOrganizationProjectWorkItemsIndividualSpec(organizationName, null, workItemId);\n+        String requestSpec = createWorkItemSpecById(organizationName, workItemId);\n         return azureHttpService.delete(requestSpec, WorkItemDeletedResponseModel.class);\n     }\n \n"}}, {"oid": "ef5f20cb76dd2f0f035fc3cdb787fbe3f9a7b3e7", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/ef5f20cb76dd2f0f035fc3cdb787fbe3f9a7b3e7", "message": "injecting the appender", "committedDate": "2020-08-27T20:34:54Z", "type": "commit"}, {"oid": "5468ccf603516896211e9c208a199fafa6dac521", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5468ccf603516896211e9c208a199fafa6dac521", "message": "adding some utility methods to appender", "committedDate": "2020-08-27T20:53:29Z", "type": "commit"}, {"oid": "bcabdab09a1478a96a5e14add9cb6a0553697d74", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/bcabdab09a1478a96a5e14add9cb6a0553697d74", "message": "fixing defects", "committedDate": "2020-08-28T15:52:35Z", "type": "commit"}]}