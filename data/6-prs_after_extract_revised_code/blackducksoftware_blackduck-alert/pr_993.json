{"pr_number": 993, "pr_title": "duplicate email fix", "pr_createdAt": "2020-05-26T19:04:01Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/993", "timeline": [{"oid": "3537863cc13cc4c7adf0ee1e8d62751c01476541", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/3537863cc13cc4c7adf0ee1e8d62751c01476541", "message": "fix: Update project email relations to remove old relations.", "committedDate": "2020-05-26T17:52:47Z", "type": "commit"}, {"oid": "5f033bb7295fd199aa93a5983509b538ec3ae7e2", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5f033bb7295fd199aa93a5983509b538ec3ae7e2", "message": "Merge remote-tracking branch 'origin/6.0.0' into ps_duplicate_email_fix", "committedDate": "2020-05-26T18:14:59Z", "type": "commit"}, {"oid": "8e311962aded6b5b296ce9c0297b3d1cef92ccf7", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8e311962aded6b5b296ce9c0297b3d1cef92ccf7", "message": "Merge remote-tracking branch 'origin/ps_real_time_fix' into ps_duplicate_email_fix", "committedDate": "2020-05-26T18:15:23Z", "type": "commit"}, {"oid": "22c5cbf4641668f96332e683f381718ccd766134", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/22c5cbf4641668f96332e683f381718ccd766134", "message": "fix: Update project and user relations in the database.", "committedDate": "2020-05-26T19:00:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/993#discussion_r430646818", "bodyText": "Why does findByEmailAddressAndProviderConfigId(...) return a List? Shouldn't it be an optional?\nI think what we want is a findByEmailAddressInAndProviderConfigId(Collection<String> emailAddresses, Long providerConfigId). (Note the \"In\" in the method name; this will allow us to get all of the relevant relations in a single query).", "author": "gkillough", "createdAt": "2020-05-26T19:14:54Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultProviderDataAccessor.java", "diffHunk": "@@ -163,12 +164,21 @@ private void mapUsersToProjectByEmail(Long providerConfigId, String projectHref,\n         ProviderProjectEntity project = providerProjectRepository.findFirstByHref(projectHref)\n                                             .orElseThrow(() -> new AlertDatabaseConstraintException(\"A project with the following href did not exist: \" + projectHref));\n         Long projectId = project.getId();\n+        List<ProviderUserProjectRelation> userRelationsToRemove = providerUserProjectRelationRepository.findByProviderProjectId(projectId);\n+        List<ProviderUserProjectRelation> userRelationsToAdd = new LinkedList<>();\n         for (String emailAddress : emailAddresses) {\n-            providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId)\n-                .stream()\n-                .map(ProviderUserEntity::getId)\n-                .forEach(userId -> providerUserProjectRelationRepository.save(new ProviderUserProjectRelation(userId, projectId)));\n+            List<ProviderUserEntity> providerUserEntities = providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId);", "originalCommit": "22c5cbf4641668f96332e683f381718ccd766134", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2MjEzMw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/993#discussion_r430662133", "bodyText": "The same email address could be a user in multiple configs so it returns a list per the API.  I will add the in keyword and test it out.", "author": "psantos1113", "createdAt": "2020-05-26T19:39:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NTUzMQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/993#discussion_r430665531", "bodyText": "Right, but we are filtering the config, so that should be a unique combination, no?", "author": "gkillough", "createdAt": "2020-05-26T19:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NzIyMQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/993#discussion_r430667221", "bodyText": "You can also have multiple blackduck users with the same email address.  We do that for testing. The username is unique in Black Duck but not the email address when it is a local user.  That is why we need a list.", "author": "psantos1113", "createdAt": "2020-05-26T19:47:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3NjQ0NQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/993#discussion_r430676445", "bodyText": "Gotcha. Regardless, we should make this a single query.", "author": "gkillough", "createdAt": "2020-05-26T20:04:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "227ee1763c26818fc6bf6f3c859760f48d1e382d", "chunk": "diff --git a/alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultProviderDataAccessor.java b/alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultProviderDataAccessor.java\nindex 662e35e34..333b45404 100644\n--- a/alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultProviderDataAccessor.java\n+++ b/alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultProviderDataAccessor.java\n\n@@ -166,14 +166,12 @@ public class DefaultProviderDataAccessor implements ProviderDataAccessor {\n         Long projectId = project.getId();\n         List<ProviderUserProjectRelation> userRelationsToRemove = providerUserProjectRelationRepository.findByProviderProjectId(projectId);\n         List<ProviderUserProjectRelation> userRelationsToAdd = new LinkedList<>();\n-        for (String emailAddress : emailAddresses) {\n-            List<ProviderUserEntity> providerUserEntities = providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId);\n-            for (ProviderUserEntity userEntity : providerUserEntities) {\n-                Long userId = userEntity.getId();\n-                userRelationsToAdd.add(new ProviderUserProjectRelation(userId, projectId));\n-                userRelationsToRemove.removeIf(entity -> entity.getProviderUserId().equals(userId)\n-                                                             && entity.getProviderProjectId().equals(projectId));\n-            }\n+        List<ProviderUserEntity> providerUserEntities = providerUserRepository.findByEmailAddressInAndProviderConfigId(emailAddresses, providerConfigId);\n+        for (ProviderUserEntity userEntity : providerUserEntities) {\n+            Long userId = userEntity.getId();\n+            userRelationsToAdd.add(new ProviderUserProjectRelation(userId, projectId));\n+            userRelationsToRemove.removeIf(entity -> entity.getProviderUserId().equals(userId)\n+                                                         && entity.getProviderProjectId().equals(projectId));\n         }\n         logger.debug(\"Adding {} user relations to project {} \", userRelationsToAdd.size(), project.getName());\n         logger.debug(\"Removing {} user relations from project {} \", userRelationsToRemove.size(), project.getName());\n"}}, {"oid": "227ee1763c26818fc6bf6f3c859760f48d1e382d", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/227ee1763c26818fc6bf6f3c859760f48d1e382d", "message": "refactor: Remove a for loop using a JPA query.", "committedDate": "2020-05-27T12:10:13Z", "type": "commit"}, {"oid": "33d098a4bcd63bef5e857aad17b62f3518cbfa36", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/33d098a4bcd63bef5e857aad17b62f3518cbfa36", "message": "Merge remote-tracking branch 'origin/6.0.0' into ps_duplicate_email_fix", "committedDate": "2020-05-27T12:10:37Z", "type": "commit"}]}