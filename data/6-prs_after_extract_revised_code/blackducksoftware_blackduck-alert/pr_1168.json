{"pr_number": 1168, "pr_title": "distribution validation", "pr_createdAt": "2020-09-16T13:09:50Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/1168", "timeline": [{"oid": "26467d924f59866b5d4567a6e3092d5f1e2a2872", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/26467d924f59866b5d4567a6e3092d5f1e2a2872", "message": "feat: Implement actions and reducers for validating jobs.", "committedDate": "2020-09-15T17:30:55Z", "type": "commit"}, {"oid": "df7b3ea98904e6553b1387d77803601d35e506c6", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/df7b3ea98904e6553b1387d77803601d35e506c6", "message": "refactor: Validate before saving.", "committedDate": "2020-09-15T20:31:56Z", "type": "commit"}, {"oid": "4c404b87d5e29a6c13d51b9355d56ed48e376e7b", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/4c404b87d5e29a6c13d51b9355d56ed48e376e7b", "message": "fix: Update the distribution jobs to show validation errors.", "committedDate": "2020-09-16T13:04:39Z", "type": "commit"}, {"oid": "d423bc1d9f327d96e1d69a11bce5023c932c115d", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/d423bc1d9f327d96e1d69a11bce5023c932c115d", "message": "chore: Update comment for the getValue/setValue methods.", "committedDate": "2020-09-16T13:08:23Z", "type": "commit"}, {"oid": "7b5c39cf513474e45148c300821acc58cb30aa16", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/7b5c39cf513474e45148c300821acc58cb30aa16", "message": "fix: Update the status for distribution test success.", "committedDate": "2020-09-16T13:15:56Z", "type": "commit"}, {"oid": "8db117a41bc6b0cf1d9f29e0709de9aa5a5b592f", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8db117a41bc6b0cf1d9f29e0709de9aa5a5b592f", "message": "fix: Remove unused dispatch call.", "committedDate": "2020-09-16T13:57:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUwMTE1Mw==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1168#discussion_r489501153", "bodyText": "If we're ok returning null, then why do we work with an optional as Content?", "author": "bamandel", "createdAt": "2020-09-16T14:52:52Z", "path": "src/main/java/com/synopsys/integration/alert/web/api/job/JobConfigController.java", "diffHunk": "@@ -100,6 +100,7 @@ public ValidationResponseModel validate(JobFieldModel requestBody) {\n \n     @Override\n     public ValidationResponseModel test(JobFieldModel resource) {\n-        return ResponseFactory.createContentResponseFromAction(jobConfigActions.test(resource));\n+        ValidationActionResponse response = jobConfigActions.test(resource);\n+        return ResponseFactory.createContentResponseFromAction(new ValidationActionResponse(HttpStatus.OK, response.getContent().orElse(null)));", "originalCommit": "8db117a41bc6b0cf1d9f29e0709de9aa5a5b592f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUwMzE3NA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1168#discussion_r489503174", "bodyText": "I brought this same issue up in the video code review. It shouldn't ever actually return null, but we should have a static initializer for validation responses anyway.", "author": "gkillough", "createdAt": "2020-09-16T14:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUwMTE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUxOTAyNg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1168#discussion_r489519026", "bodyText": "ActionResponse has the getContent() method and in some cases there is no content to return it can be null you just want the http status code and/or message with no content. So because content can be null we return an Optional to indicate to other users of the API that the content can be null and avoid NullPointerExceptions.  The Optional allows you to know you need to check if it is present otherwise you would need to have special code to check for null otherwise you would have NullPointerExceptions.  ValidationActionResponse extends ActionResponse. Because we are wrapping the ValidationActionResponse with a new ValidationActionResponse with an OK status to represent validation or test execution, we need to get the content with getContent() which is an Optional.  So to work with the Optional API i have the orElse(null) for the empty optional case.\nIt's a little beyond the scope of this PR but we might be able to refactor the API to make it a clearer if there's confusion.", "author": "psantos1113", "createdAt": "2020-09-16T15:16:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUwMTE1Mw=="}], "type": "inlineReview", "revised_code": null}]}