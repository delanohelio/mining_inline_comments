{"pr_number": 894, "pr_title": "Resolve 6.0.0 TODOs and create issues for big ticket items", "pr_createdAt": "2020-03-03T18:07:16Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/894", "timeline": [{"oid": "2b2c92fa8124d711f4973258c69602d291cb72e9", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/2b2c92fa8124d711f4973258c69602d291cb72e9", "message": "Fix(Java): Resolve 6.0.0 TODOs and create issues for big ticket items", "committedDate": "2020-03-03T18:04:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwMDczNA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/894#discussion_r387200734", "bodyText": "Issue created", "author": "gkillough", "createdAt": "2020-03-03T18:10:11Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/UploadEndpointManager.java", "diffHunk": "@@ -153,7 +153,6 @@ public void unRegisterTarget(String targetKey) throws AlertException {\n                 File fileToValidate = filePersistenceUtil.createUploadsFile(tempFilename);\n                 Collection<String> errors = validationFunction.get().apply(fileToValidate);\n                 filePersistenceUtil.delete(fileToValidate);\n-                // TODO Implement a ValidationResult object that UploadValidationFunction and ConfigValidationFunction can return.", "originalCommit": "2b2c92fa8124d711f4973258c69602d291cb72e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwMTU1MQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/894#discussion_r387201551", "bodyText": "Issue created", "author": "gkillough", "createdAt": "2020-03-03T18:11:44Z", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/persistence/model/ConfigurationModel.java", "diffHunk": "@@ -88,7 +88,6 @@ public ConfigContextEnum getDescriptorContext() {\n         return new HashMap<>(configuredFields);\n     }\n \n-    // TODO it might be worthwhile to expose a builder for this class rather than allowing this method to be used outside of the accessors", "originalCommit": "2b2c92fa8124d711f4973258c69602d291cb72e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwMjA0MA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/894#discussion_r387202040", "bodyText": "Issue created", "author": "gkillough", "createdAt": "2020-03-03T18:12:47Z", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultConfigurationAccessor.java", "diffHunk": "@@ -425,7 +425,6 @@ private ConfigurationModel createConfigModel(Long descriptorId, Long configId, D\n \n         ConfigurationModel newModel = new ConfigurationModel(descriptorId, configId, createdAtFormatted, lastUpdatedFormatted, configContext);\n         List<FieldValueEntity> fieldValueEntities = fieldValueRepository.findByConfigId(configId);\n-        // TODO should empty fields be included?", "originalCommit": "2b2c92fa8124d711f4973258c69602d291cb72e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwNTYyOQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/894#discussion_r387205629", "bodyText": "It is because of the filter chain.", "author": "gkillough", "createdAt": "2020-03-03T18:19:38Z", "path": "src/main/java/com/synopsys/integration/alert/web/security/authentication/AlertAuthenticationProvider.java", "diffHunk": "@@ -47,7 +47,6 @@ public Authentication authenticate(Authentication authentication) throws Authent\n             throw new IllegalArgumentException(\"Only UsernamePasswordAuthenticationToken is supported, \" + authentication.getClass() + \" was attempted\");\n         }\n \n-        // TODO investigate why parallelStream() does not work here", "originalCommit": "2b2c92fa8124d711f4973258c69602d291cb72e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIwNTg5NQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/894#discussion_r387205895", "bodyText": "Issue created to replace this.", "author": "gkillough", "createdAt": "2020-03-03T18:20:07Z", "path": "src/main/java/com/synopsys/integration/alert/workflow/startup/component/SystemMessageInitializer.java", "diffHunk": "@@ -61,10 +61,9 @@ public boolean validate() {\n         logger.info(\"----------------------------------------\");\n         logger.info(\"Validating system configuration....\");\n \n-        boolean defaultUserSettingsValid = settingsValidator.validateUser().isEmpty();", "originalCommit": "2b2c92fa8124d711f4973258c69602d291cb72e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIyNzUwMg==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/894#discussion_r387227502", "bodyText": "I was under the impression that changing to the use of href was a much more significant change than just these few lines.", "author": "bamandel", "createdAt": "2020-03-03T18:58:53Z", "path": "src/main/java/com/synopsys/integration/alert/channel/email/EmailAddressHandler.java", "diffHunk": "@@ -120,11 +125,11 @@ public FieldAccessor updateEmailAddresses(String providerConfigName, MessageCont\n         return Set.of();\n     }\n \n-    private Set<String> collectProviderEmailsFromProject(String providerConfigName, String projectName, boolean projectOwnerOnly) {\n+    private Set<String> collectProviderEmailsFromProject(String providerConfigName, String projectHref, boolean projectOwnerOnly) {\n         Optional<ProviderProject> optionalProject = providerDataAccessor.getProjectsByProviderConfigName(providerConfigName)\n                                                         .stream()\n-                                                        .filter(project -> project.getName().equals(projectName))\n-                                                        .findFirst(); // FIXME use href", "originalCommit": "2b2c92fa8124d711f4973258c69602d291cb72e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIzMDMxOQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/894#discussion_r387230319", "bodyText": "Should the style be like the following to match our convention with streams()?\n`\nroles.addAll(existingRoles\n.stream()\n.filter(StringUtils::isNotBlank)\n.collect(Collectors.toSet()));\n`", "author": "psantos1113", "createdAt": "2020-03-03T19:04:10Z", "path": "src/main/java/com/synopsys/integration/alert/web/security/authentication/UserManagementAuthoritiesPopulator.java", "diffHunk": "@@ -72,19 +69,10 @@ public UserManagementAuthoritiesPopulator(AuthenticationDescriptorKey Authentica\n     }\n \n     public Set<String> addAdditionalRoleNames(String userName, Set<String> existingRoles, boolean appendRolePrefix) {\n-        // TODO remove in 6.0.0 the createRolesMapping method.\n-        Map<String, String> roleMap = createRolesMapping(appendRolePrefix);\n         Set<String> rolesFromDB = getRolesFromDatabase(userName, appendRolePrefix);\n         Set<String> roles = new LinkedHashSet<>();\n         roles.addAll(rolesFromDB);\n-        roles.addAll(existingRoles.stream().filter(role -> StringUtils.isNotBlank(role)).collect(Collectors.toSet()));\n-        //TODO remove in 6.0.0 with the deprecated method\n-        if (!roleMap.isEmpty()) {\n-            roles.addAll(existingRoles.stream()\n-                             .filter(roleMap::containsKey)\n-                             .map(roleMap::get)\n-                             .collect(Collectors.toSet()));\n-        }\n+        roles.addAll(existingRoles.stream().filter(StringUtils::isNotBlank).collect(Collectors.toSet()));", "originalCommit": "2b2c92fa8124d711f4973258c69602d291cb72e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIzMjA0MQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/894#discussion_r387232041", "bodyText": "You can use this for multi-line code blocks (language optional).\n```java\n<your_code>\n```", "author": "gkillough", "createdAt": "2020-03-03T19:07:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIzMDMxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "5a6675dfb5743ad3f0dda36d3a8f0025384d1c68", "chunk": "diff --git a/src/main/java/com/synopsys/integration/alert/web/security/authentication/UserManagementAuthoritiesPopulator.java b/src/main/java/com/synopsys/integration/alert/web/security/authentication/UserManagementAuthoritiesPopulator.java\nindex e847c6c8f..8f958a80b 100644\n--- a/src/main/java/com/synopsys/integration/alert/web/security/authentication/UserManagementAuthoritiesPopulator.java\n+++ b/src/main/java/com/synopsys/integration/alert/web/security/authentication/UserManagementAuthoritiesPopulator.java\n\n@@ -70,10 +70,11 @@ public class UserManagementAuthoritiesPopulator {\n \n     public Set<String> addAdditionalRoleNames(String userName, Set<String> existingRoles, boolean appendRolePrefix) {\n         Set<String> rolesFromDB = getRolesFromDatabase(userName, appendRolePrefix);\n-        Set<String> roles = new LinkedHashSet<>();\n-        roles.addAll(rolesFromDB);\n-        roles.addAll(existingRoles.stream().filter(StringUtils::isNotBlank).collect(Collectors.toSet()));\n-\n+        Set<String> roles = new LinkedHashSet<>(rolesFromDB);\n+        existingRoles\n+            .stream()\n+            .filter(StringUtils::isNotBlank)\n+            .forEach(roles::add);\n         return roles;\n     }\n \n"}}, {"oid": "5a6675dfb5743ad3f0dda36d3a8f0025384d1c68", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5a6675dfb5743ad3f0dda36d3a8f0025384d1c68", "message": "Fix(Java): Add topic url wherever possible", "committedDate": "2020-03-03T19:34:57Z", "type": "commit"}, {"oid": "3366d0d69845ba93c1f0fbe9c6a1516ee079cc24", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/3366d0d69845ba93c1f0fbe9c6a1516ee079cc24", "message": "Fix(Test): Update mock objects to have projectNameUrls", "committedDate": "2020-03-03T20:25:47Z", "type": "commit"}]}