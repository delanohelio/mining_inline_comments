{"pr_number": 850, "pr_title": "Updating the vulnerability handling, we no longer need to make a request per vulnerability.", "pr_createdAt": "2020-02-11T21:20:43Z", "pr_url": "https://github.com/blackducksoftware/blackduck-alert/pull/850", "timeline": [{"oid": "f5a445d816ad0d95650d1a937bc1d13b8e4ec048", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f5a445d816ad0d95650d1a937bc1d13b8e4ec048", "message": "Refactor: Updating the vulnerability handling, we no longer need to make a request per vulnerability.", "committedDate": "2020-02-11T21:18:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwNzAwNQ==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/850#discussion_r377907005", "bodyText": "The BlackDuckServicesFactory constructor now requires MediaTypeDiscovery", "author": "jamesrichard91", "createdAt": "2020-02-11T21:23:20Z", "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckProperties.java", "diffHunk": "@@ -81,49 +81,50 @@ public Integer getBlackDuckTimeout() {\n         return retrieveGlobalConfig();\n     }\n \n-    public BlackDuckServicesFactory createBlackDuckServicesFactory(final BlackDuckHttpClient blackDuckHttpClient, final IntLogger logger) {\n-        return new BlackDuckServicesFactory(new IntEnvironmentVariables(), gson, BlackDuckServicesFactory.createDefaultObjectMapper(), new NoThreadExecutorService(), blackDuckHttpClient, logger);\n+    public BlackDuckServicesFactory createBlackDuckServicesFactory(BlackDuckHttpClient blackDuckHttpClient, IntLogger logger) {\n+        return new BlackDuckServicesFactory(new IntEnvironmentVariables(), gson, BlackDuckServicesFactory.createDefaultObjectMapper(), new NoThreadExecutorService(), blackDuckHttpClient, logger,\n+            BlackDuckServicesFactory.createDefaultMediaTypeDiscovery());", "originalCommit": "f5a445d816ad0d95650d1a937bc1d13b8e4ec048", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwNzU0OA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/850#discussion_r377907548", "bodyText": "Moving the comment here from BlackDuckResponseCache  because the comment only applies to the Bom Edit notifications", "author": "jamesrichard91", "createdAt": "2020-02-11T21:24:27Z", "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/BomEditMessageBuilder.java", "diffHunk": "@@ -90,6 +90,9 @@ public String getNotificationType() {\n         BlackDuckResponseCache responseCache = new BlackDuckResponseCache(bucketService, blackDuckBucket, timeout);\n         BomEditNotificationContent bomEditContent = notificationView.getContent();\n         Optional<ProjectVersionComponentView> bomComponent = responseCache.getBomComponentView(bomEditContent.getBomComponent());\n+\n+        // TODO Stop using this when Black Duck supports going back to the project-version\n+        // blackduck-common-api 2019.12.0.4+ should have the project version link in the BomEditNotificationContent", "originalCommit": "f5a445d816ad0d95650d1a937bc1d13b8e4ec048", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI1NjM4MA==", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/850#discussion_r378256380", "bodyText": "We could do Objects.requireNonNullElse(vulnerabilityItem.getSeverity(), \"UNKNOWN\")", "author": "gkillough", "createdAt": "2020-02-12T13:41:56Z", "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/VulnerabilityNotificationMessageBuilder.java", "diffHunk": "@@ -148,14 +148,13 @@ public String getNotificationType() {\n         for (VulnerabilitySourceQualifiedId vulnerabilityItem : vulnerabilityList) {\n             String vulnerabilityId = vulnerabilityItem.getVulnerabilityId();\n             String vulnerabilityUrl = vulnerabilityItem.getVulnerability();\n-\n             LinkableItem vulnIdItem = new LinkableItem(MessageBuilderConstants.LABEL_VULNERABILITIES, vulnerabilityId, vulnerabilityUrl);\n-            // TODO in blackduck-common:45.1.2+ the VulnerabilitySourceQualifiedId includes the severity so we don't need to make a request to get it\n-            String notificationSeverity = blackDuckResponseCache.getSeverity(vulnerabilityUrl);\n-            if (vulnerabilityFilters.isEmpty() || vulnerabilityFilters.contains(notificationSeverity)) {\n+\n+            String notificationSeverity = vulnerabilityItem.getSeverity();", "originalCommit": "f5a445d816ad0d95650d1a937bc1d13b8e4ec048", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1fdc82fe13ef105027af392aee27591b0388de8f", "chunk": "diff --git a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/VulnerabilityNotificationMessageBuilder.java b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/VulnerabilityNotificationMessageBuilder.java\nindex 2a48db719..6971fb2b3 100644\n--- a/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/VulnerabilityNotificationMessageBuilder.java\n+++ b/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/VulnerabilityNotificationMessageBuilder.java\n\n@@ -150,8 +151,8 @@ public class VulnerabilityNotificationMessageBuilder implements BlackDuckMessage\n             String vulnerabilityUrl = vulnerabilityItem.getVulnerability();\n             LinkableItem vulnIdItem = new LinkableItem(MessageBuilderConstants.LABEL_VULNERABILITIES, vulnerabilityId, vulnerabilityUrl);\n \n-            String notificationSeverity = vulnerabilityItem.getSeverity();\n-            if (null != notificationSeverity && (vulnerabilityFilters.isEmpty() || vulnerabilityFilters.contains(notificationSeverity))) {\n+            String notificationSeverity = Objects.requireNonNullElse(vulnerabilityItem.getSeverity(), \"UNKNOWN\");\n+            if (vulnerabilityFilters.isEmpty() || vulnerabilityFilters.contains(notificationSeverity)) {\n                 LinkableItem severity = new LinkableItem(MessageBuilderConstants.LABEL_VULNERABILITY_SEVERITY, notificationSeverity);\n \n                 ComponentItemPriority priority = ComponentItemPriority.findPriority(severity.getValue());\n"}}, {"oid": "1fdc82fe13ef105027af392aee27591b0388de8f", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1fdc82fe13ef105027af392aee27591b0388de8f", "message": "Refactor: Updating null check", "committedDate": "2020-02-12T15:19:42Z", "type": "commit"}, {"oid": "945ad5f950a265dc61ddfd82243e0ee97f8986e7", "url": "https://github.com/blackducksoftware/blackduck-alert/commit/945ad5f950a265dc61ddfd82243e0ee97f8986e7", "message": "Refactor: Updating the vulnerabilityNotificationComplex test", "committedDate": "2020-02-12T15:35:43Z", "type": "commit"}]}