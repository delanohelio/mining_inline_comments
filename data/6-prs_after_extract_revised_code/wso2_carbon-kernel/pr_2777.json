{"pr_number": 2777, "pr_title": "Support tenant metadata deletion through tenant unique id", "pr_createdAt": "2020-09-24T04:29:17Z", "pr_url": "https://github.com/wso2/carbon-kernel/pull/2777", "timeline": [{"oid": "4a88504cb11f661fb9485b42838b717c3644a9c0", "url": "https://github.com/wso2/carbon-kernel/commit/4a88504cb11f661fb9485b42838b717c3644a9c0", "message": "Support tenant metadata deletion through tenant unique id", "committedDate": "2020-09-24T04:10:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4MTQyOA==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500781428", "bodyText": "Why is this changed?", "author": "IsuraD", "createdAt": "2020-10-07T07:03:20Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -961,11 +1012,11 @@ private void clearTenantCache(int tenantId) throws UserStoreException {\n         tenantCacheManager.clearCacheEntry(new TenantIdKey(tenantId));\n     }\n \n-    private void clearTenantCaches(String tenantUniqueID) throws UserStoreException {\n+    private void clearTenantCaches(Tenant tenant) throws UserStoreException {", "originalCommit": "4a88504cb11f661fb9485b42838b717c3644a9c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4MTU2NQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500781565", "bodyText": "Still uses only the tenantUniqueID? Why do we want to send the whole tenant object to clear the cache", "author": "IsuraD", "createdAt": "2020-10-07T07:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4MTQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4MzQ5MA==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500783490", "bodyText": "In deleteTenant we need tenant domain to call invalidateCacheManager. Therefore getting the tenant before clearTenantCaches will stop calling this.getTenant(tenantUniqueID) two times. Thatswhy remove this.getTenant(tenantUniqueID) from this method (clearTenantCaches) and called it inside deleteTenant(String tenantUniqueID, boolean removeFromPersistentStorage).", "author": "nilasini", "createdAt": "2020-10-07T07:07:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4MTQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4NDczMA==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500784730", "bodyText": "Previously we have got the whole tenant object using this.getTenant(tenantUniqueID) inside the clearTenantCaches method since we need to get tenantId, tenant domain.", "author": "nilasini", "createdAt": "2020-10-07T07:10:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4MTQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4Nzc1OA==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500787758", "bodyText": "Then you can have both clearTenantCaches(String tenantUniqueID) and clearTenantCaches(Tenant tenant).", "author": "IsuraD", "createdAt": "2020-10-07T07:16:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4MTQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5MzI3MA==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500793270", "bodyText": "Yes, we can have both. Isn't having two methods with similar functionalities will make duplicate logic? Is there any specific reason to have separate methods as clearTenantCaches(String tenantUniqueID) and clearTenantCaches(Tenant tenant) rather than having one method clearTenantCaches(Tenant tenant) and handled it as I have done currently.", "author": "nilasini", "createdAt": "2020-10-07T07:26:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4MTQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NzUxNw==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500797517", "bodyText": "The tenantUniqueID is the key. We should be able to clear the caches using the key. Otherwise, in each place, we have to getTenant and call the clear method. We should think of code about readability as well.\nEx.\npublic void activateTenant(String tenantUniqueID) throws UserStoreException {\n        Tenant tenant = this.getTenant(tenantUniqueID);\n        clearTenantCaches(tenant);\n\npublic void activateTenant(String tenantUniqueID) throws UserStoreException {\n        clearTenantCaches(tenantUniqueID);", "author": "IsuraD", "createdAt": "2020-10-07T07:34:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4MTQyOA=="}], "type": "inlineReview", "revised_code": {"commit": "c2ee6aaeca10f2d486757c3c8249af7329d5b89f", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\nindex 44817a28a..34f9555de 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\n\n@@ -1012,6 +1010,18 @@ public class JDBCTenantManager implements TenantManager {\n         tenantCacheManager.clearCacheEntry(new TenantIdKey(tenantId));\n     }\n \n+    private void clearTenantCaches(String tenantUniqueID) throws UserStoreException {\n+\n+        Tenant tenant = this.getTenant(tenantUniqueID);\n+        if (tenant != null) {\n+            int tenantId = tenant.getId();\n+            tenantUniqueIdCache.clearCacheEntry(new TenantUniqueIDKey(tenantUniqueID));\n+            tenantDomainCache.clearCacheEntry(new TenantIdKey(tenantId));\n+            tenantIdCache.clearCacheEntry(new TenantDomainKey(tenant.getDomain()));\n+            tenantCacheManager.clearCacheEntry(new TenantIdKey(tenantId));\n+        }\n+    }\n+\n     private void clearTenantCaches(Tenant tenant) throws UserStoreException {\n \n         if (tenant != null) {\n"}}, {"oid": "b1ed64fb7faeb0990b6eac8d0b6b05b7503101bb", "url": "https://github.com/wso2/carbon-kernel/commit/b1ed64fb7faeb0990b6eac8d0b6b05b7503101bb", "message": "Merge branch '4.6.x' of github.com:wso2/carbon-kernel into 4.6.x", "committedDate": "2020-10-07T07:38:04Z", "type": "commit"}, {"oid": "c2ee6aaeca10f2d486757c3c8249af7329d5b89f", "url": "https://github.com/wso2/carbon-kernel/commit/c2ee6aaeca10f2d486757c3c8249af7329d5b89f", "message": "Fixed comments", "committedDate": "2020-10-07T07:40:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwNzcwMg==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500807702", "bodyText": "Java doc missing", "author": "IsuraD", "createdAt": "2020-10-07T07:51:47Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -871,6 +871,55 @@ public void deleteTenant(int tenantId) throws UserStoreException {\n         }\n     }\n \n+    public void deleteTenant(String tenantUniqueID) throws UserStoreException {", "originalCommit": "c2ee6aaeca10f2d486757c3c8249af7329d5b89f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzMzQ5NQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500833495", "bodyText": "Interface having the Java doc comment thatswhy didn't add it.", "author": "nilasini", "createdAt": "2020-10-07T08:33:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwNzcwMg=="}], "type": "inlineReview", "revised_code": {"commit": "715e329db094f1fde8e1ce34e1a039ccb0384000", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\nindex 34f9555de..7e75ed848 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\n\n@@ -871,24 +871,10 @@ public class JDBCTenantManager implements TenantManager {\n         }\n     }\n \n-    public void deleteTenant(String tenantUniqueID) throws UserStoreException {\n-\n-        try {\n-            deleteTenant(tenantUniqueID, true);\n-        } catch (UserStoreException e) {\n-            throw new UserStoreException(e);\n-        }\n-    }\n-\n     /**\n-     * Delete Tenant\n-     *\n-     * @param tenantUniqueID              - Tenant Id\n-     * @param removeFromPersistentStorage - Flag to decide weather delete from persistent storage\n-     * @throws UserStoreException\n+     * {@inheritDoc}\n      */\n-    public void deleteTenant(String tenantUniqueID, boolean removeFromPersistentStorage)\n-            throws UserStoreException {\n+    public void deleteTenant(String tenantUniqueID) throws UserStoreException {\n \n         Tenant tenant = this.getTenant(tenantUniqueID);\n         // Remove tenant information from the cache.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwODg4Mw==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500808883", "bodyText": "What is the purpose of supporting non-persistent tenant deletion?\nWill that tenant available after a restart?", "author": "IsuraD", "createdAt": "2020-10-07T07:53:39Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -871,6 +871,55 @@ public void deleteTenant(int tenantId) throws UserStoreException {\n         }\n     }\n \n+    public void deleteTenant(String tenantUniqueID) throws UserStoreException {\n+\n+        try {\n+            deleteTenant(tenantUniqueID, true);\n+        } catch (UserStoreException e) {\n+            throw new UserStoreException(e);\n+        }\n+    }\n+\n+    /**\n+     * Delete Tenant\n+     *\n+     * @param tenantUniqueID              - Tenant Id\n+     * @param removeFromPersistentStorage - Flag to decide weather delete from persistent storage\n+     * @throws UserStoreException\n+     */\n+    public void deleteTenant(String tenantUniqueID, boolean removeFromPersistentStorage)", "originalCommit": "c2ee6aaeca10f2d486757c3c8249af7329d5b89f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNDY3NQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500834675", "bodyText": "Yes only the cache will be deleted.", "author": "nilasini", "createdAt": "2020-10-07T08:35:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwODg4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "715e329db094f1fde8e1ce34e1a039ccb0384000", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\nindex 34f9555de..7e75ed848 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\n\n@@ -871,24 +871,10 @@ public class JDBCTenantManager implements TenantManager {\n         }\n     }\n \n-    public void deleteTenant(String tenantUniqueID) throws UserStoreException {\n-\n-        try {\n-            deleteTenant(tenantUniqueID, true);\n-        } catch (UserStoreException e) {\n-            throw new UserStoreException(e);\n-        }\n-    }\n-\n     /**\n-     * Delete Tenant\n-     *\n-     * @param tenantUniqueID              - Tenant Id\n-     * @param removeFromPersistentStorage - Flag to decide weather delete from persistent storage\n-     * @throws UserStoreException\n+     * {@inheritDoc}\n      */\n-    public void deleteTenant(String tenantUniqueID, boolean removeFromPersistentStorage)\n-            throws UserStoreException {\n+    public void deleteTenant(String tenantUniqueID) throws UserStoreException {\n \n         Tenant tenant = this.getTenant(tenantUniqueID);\n         // Remove tenant information from the cache.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgwOTE3Mg==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500809172", "bodyText": "use try with resources", "author": "IsuraD", "createdAt": "2020-10-07T07:54:08Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -871,6 +871,55 @@ public void deleteTenant(int tenantId) throws UserStoreException {\n         }\n     }\n \n+    public void deleteTenant(String tenantUniqueID) throws UserStoreException {\n+\n+        try {\n+            deleteTenant(tenantUniqueID, true);\n+        } catch (UserStoreException e) {\n+            throw new UserStoreException(e);\n+        }\n+    }\n+\n+    /**\n+     * Delete Tenant\n+     *\n+     * @param tenantUniqueID              - Tenant Id\n+     * @param removeFromPersistentStorage - Flag to decide weather delete from persistent storage\n+     * @throws UserStoreException\n+     */\n+    public void deleteTenant(String tenantUniqueID, boolean removeFromPersistentStorage)\n+            throws UserStoreException {\n+\n+        Tenant tenant = this.getTenant(tenantUniqueID);\n+        // Remove tenant information from the cache.\n+        clearTenantCaches(tenant);\n+        if (tenant != null) {\n+            invalidateCacheManager(tenant.getDomain());\n+        }\n+        if (removeFromPersistentStorage) {\n+            Connection dbConnection = null;\n+            PreparedStatement prepStmt = null;\n+            try {\n+                dbConnection = getDBConnection();", "originalCommit": "c2ee6aaeca10f2d486757c3c8249af7329d5b89f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "715e329db094f1fde8e1ce34e1a039ccb0384000", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\nindex 34f9555de..7e75ed848 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\n\n@@ -871,24 +871,10 @@ public class JDBCTenantManager implements TenantManager {\n         }\n     }\n \n-    public void deleteTenant(String tenantUniqueID) throws UserStoreException {\n-\n-        try {\n-            deleteTenant(tenantUniqueID, true);\n-        } catch (UserStoreException e) {\n-            throw new UserStoreException(e);\n-        }\n-    }\n-\n     /**\n-     * Delete Tenant\n-     *\n-     * @param tenantUniqueID              - Tenant Id\n-     * @param removeFromPersistentStorage - Flag to decide weather delete from persistent storage\n-     * @throws UserStoreException\n+     * {@inheritDoc}\n      */\n-    public void deleteTenant(String tenantUniqueID, boolean removeFromPersistentStorage)\n-            throws UserStoreException {\n+    public void deleteTenant(String tenantUniqueID) throws UserStoreException {\n \n         Tenant tenant = this.getTenant(tenantUniqueID);\n         // Remove tenant information from the cache.\n"}}, {"oid": "715e329db094f1fde8e1ce34e1a039ccb0384000", "url": "https://github.com/wso2/carbon-kernel/commit/715e329db094f1fde8e1ce34e1a039ccb0384000", "message": "Use try with resource", "committedDate": "2020-10-07T10:32:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkyNTcxMg==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500925712", "bodyText": "Check this for clearTenantCaches as well", "author": "IsuraD", "createdAt": "2020-10-07T11:06:40Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -871,6 +871,35 @@ public void deleteTenant(int tenantId) throws UserStoreException {\n         }\n     }\n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    public void deleteTenant(String tenantUniqueID) throws UserStoreException {\n+\n+        Tenant tenant = this.getTenant(tenantUniqueID);\n+        // Remove tenant information from the cache.\n+        clearTenantCaches(tenant);\n+        if (tenant != null) {", "originalCommit": "715e329db094f1fde8e1ce34e1a039ccb0384000", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkyNTg0MQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2777#discussion_r500925841", "bodyText": "if (tenant != null) {", "author": "IsuraD", "createdAt": "2020-10-07T11:06:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkyNTcxMg=="}], "type": "inlineReview", "revised_code": {"commit": "1450475c1c3da9c66f22bd19273cbaab52e34480", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\nindex 7e75ed848..5c82c382d 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java\n\n@@ -878,8 +878,8 @@ public class JDBCTenantManager implements TenantManager {\n \n         Tenant tenant = this.getTenant(tenantUniqueID);\n         // Remove tenant information from the cache.\n-        clearTenantCaches(tenant);\n         if (tenant != null) {\n+            clearTenantCaches(tenant);\n             invalidateCacheManager(tenant.getDomain());\n         }\n         String sqlStmt = TenantConstants.DELETE_TENANT_BY_UUID_SQL;\n"}}, {"oid": "1450475c1c3da9c66f22bd19273cbaab52e34480", "url": "https://github.com/wso2/carbon-kernel/commit/1450475c1c3da9c66f22bd19273cbaab52e34480", "message": "Use try with resource", "committedDate": "2020-10-07T11:10:19Z", "type": "commit"}, {"oid": "1450475c1c3da9c66f22bd19273cbaab52e34480", "url": "https://github.com/wso2/carbon-kernel/commit/1450475c1c3da9c66f22bd19273cbaab52e34480", "message": "Use try with resource", "committedDate": "2020-10-07T11:10:19Z", "type": "forcePushed"}]}