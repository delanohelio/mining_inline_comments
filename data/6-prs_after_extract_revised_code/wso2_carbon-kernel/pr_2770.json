{"pr_number": 2770, "pr_title": "Commit the db connection when persisting domain against user id", "pr_createdAt": "2020-09-16T10:35:52Z", "pr_url": "https://github.com/wso2/carbon-kernel/pull/2770", "timeline": [{"oid": "452d8b8c69c8715c32e3063e95b917afc1ce183b", "url": "https://github.com/wso2/carbon-kernel/commit/452d8b8c69c8715c32e3063e95b917afc1ce183b", "message": "Commit the db connection when persisting domain against user id", "committedDate": "2020-09-16T10:34:53Z", "type": "commit"}, {"oid": "1fe5a32c023739ddd3f0031b3a236f956212ec75", "url": "https://github.com/wso2/carbon-kernel/commit/1fe5a32c023739ddd3f0031b3a236f956212ec75", "message": "Handle set autocommit true scenario", "committedDate": "2020-09-16T15:29:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTkzMTg3Mw==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489931873", "bodyText": "Why do we need to apply transactions for SELECT statements?", "author": "ashensw", "createdAt": "2020-09-17T03:31:31Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java", "diffHunk": "@@ -165,7 +167,7 @@ public void setDomainForUserId(String userId, String userDomain, int tenantId) t\n     private String getDomainFromDB(String userId, int tenantId) throws UserStoreException {\n \n         String domainName = null;\n-        try (Connection dbConnection = getDBConnection();\n+        try (Connection dbConnection = getDBConnection(true);", "originalCommit": "1fe5a32c023739ddd3f0031b3a236f956212ec75", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "30a8e6f54483aa2645919ff99b9f82cec07ed668", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\nindex fbb94c9bb..41f35fde5 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n\n@@ -167,7 +167,7 @@ public class UserUniqueIDDomainResolver {\n     private String getDomainFromDB(String userId, int tenantId) throws UserStoreException {\n \n         String domainName = null;\n-        try (Connection dbConnection = getDBConnection(true);\n+        try (Connection dbConnection = getDBConnection();\n              PreparedStatement preparedStatement = dbConnection.prepareStatement(GET_DOMAIN)) {\n             preparedStatement.setString(1, userId);\n             preparedStatement.setInt(2, tenantId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTkzNDA2NQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489934065", "bodyText": "We need to handle the rollback as well.", "author": "ashensw", "createdAt": "2020-09-17T03:35:12Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java", "diffHunk": "@@ -209,6 +212,7 @@ private void persistDomainAgainstUserId(String userId, String userDomain, int te\n                     preparedStatement.setInt(3, tenantId);\n                     preparedStatement.setInt(4, tenantId);\n                     preparedStatement.execute();\n+                    commitTransaction(dbConnection);\n                 }\n             }\n         } catch (SQLException ex) {", "originalCommit": "1fe5a32c023739ddd3f0031b3a236f956212ec75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTkzNzQzMQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489937431", "bodyText": "Rollback handled https://github.com/wso2/carbon-kernel/pull/2770/files#diff-64f4ebd98c48b6db56341e6f89eb219dR253 in here", "author": "Buddhimah", "createdAt": "2020-09-17T03:41:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTkzNDA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTkzODg5NQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489938895", "bodyText": "But there can be SQLExceptions before comes to the commitTransaction..", "author": "ashensw", "createdAt": "2020-09-17T03:43:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTkzNDA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk1MzA4MA==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489953080", "bodyText": "done", "author": "Buddhimah", "createdAt": "2020-09-17T04:06:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTkzNDA2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "06425238d57a94735f8229806a622dce96b1dace", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\nindex fbb94c9bb..c08676b55 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n\n@@ -184,36 +182,41 @@ public class UserUniqueIDDomainResolver {\n \n     private void persistDomainAgainstUserId(String userId, String userDomain, int tenantId) throws UserStoreException {\n \n-        try (Connection dbConnection = getDBConnection(true)) {\n+        try (Connection dbConnection = getDBConnection()) {\n \n             // Check whether the domain already exists in the DB against this user id. If so, we have to\n             // update the record.\n             // Do it in the same connection.\n-            if (isDomainExistsForUserId(userId, dbConnection)) {\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"Domain name available for the provided user id: \" + userId + \" Hence updating it.\");\n-                }\n-                try (PreparedStatement preparedStatement = dbConnection.prepareStatement(UPDATE_DOMAIN_NAME)) {\n-                    preparedStatement.setString(1, userDomain);\n-                    preparedStatement.setInt(2, tenantId);\n-                    preparedStatement.setInt(3, tenantId);\n-                    preparedStatement.setString(4, userId);\n-                    preparedStatement.execute();\n-                    commitTransaction(dbConnection);\n-                }\n-            } else {\n-                if (log.isDebugEnabled()) {\n-                    log.debug(\"No domain name found for the give user id: \" + userId\n-                            + \" Hence adding it as a new value.\");\n-                }\n-                try (PreparedStatement preparedStatement = dbConnection.prepareStatement(ADD_DOMAIN_NAME)) {\n-                    preparedStatement.setString(1, userId);\n-                    preparedStatement.setString(2, userDomain);\n-                    preparedStatement.setInt(3, tenantId);\n-                    preparedStatement.setInt(4, tenantId);\n-                    preparedStatement.execute();\n-                    commitTransaction(dbConnection);\n+            try {\n+                if (isDomainExistsForUserId(userId, dbConnection)) {\n+                    if (log.isDebugEnabled()) {\n+                        log.debug(\"Domain name available for the provided user id: \" + userId + \" Hence updating it.\");\n+                    }\n+                    try (PreparedStatement preparedStatement = dbConnection.prepareStatement(UPDATE_DOMAIN_NAME)) {\n+                        preparedStatement.setString(1, userDomain);\n+                        preparedStatement.setInt(2, tenantId);\n+                        preparedStatement.setInt(3, tenantId);\n+                        preparedStatement.setString(4, userId);\n+                        preparedStatement.execute();\n+                        commitTransaction(dbConnection);\n+                    }\n+                } else {\n+                    if (log.isDebugEnabled()) {\n+                        log.debug(\"No domain name found for the give user id: \" + userId\n+                                + \" Hence adding it as a new value.\");\n+                    }\n+                    try (PreparedStatement preparedStatement = dbConnection.prepareStatement(ADD_DOMAIN_NAME)) {\n+                        preparedStatement.setString(1, userId);\n+                        preparedStatement.setString(2, userDomain);\n+                        preparedStatement.setInt(3, tenantId);\n+                        preparedStatement.setInt(4, tenantId);\n+                        preparedStatement.execute();\n+                        commitTransaction(dbConnection);\n+                    }\n                 }\n+            } catch (SQLException e) {\n+                rollbackTransaction(dbConnection);\n+                throw new UserStoreException(\"Error occurred while persisting domain against the user id.\", e);\n             }\n         } catch (SQLException ex) {\n             throw new UserStoreException(\"Error occurred while persisting domain against the user id.\", ex);\n"}}, {"oid": "30a8e6f54483aa2645919ff99b9f82cec07ed668", "url": "https://github.com/wso2/carbon-kernel/commit/30a8e6f54483aa2645919ff99b9f82cec07ed668", "message": "Handle set autocommit true scenario", "committedDate": "2020-09-17T03:39:42Z", "type": "forcePushed"}, {"oid": "7640ea84064ef354788b38fabc59851c7dab0102", "url": "https://github.com/wso2/carbon-kernel/commit/7640ea84064ef354788b38fabc59851c7dab0102", "message": "Handle set autocommit true scenario", "committedDate": "2020-09-17T03:40:38Z", "type": "forcePushed"}, {"oid": "06425238d57a94735f8229806a622dce96b1dace", "url": "https://github.com/wso2/carbon-kernel/commit/06425238d57a94735f8229806a622dce96b1dace", "message": "Handle set autocommit true scenario", "committedDate": "2020-09-17T04:04:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4MTEwMg==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489981102", "bodyText": "Should check whether autocommit is false here", "author": "omindu", "createdAt": "2020-09-17T05:34:47Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java", "diffHunk": "@@ -233,4 +240,37 @@ private Connection getDBConnection() throws SQLException, UserStoreException {\n         }\n         return dataSource.getConnection();\n     }\n+\n+    /**\n+     * Commit the transaction.\n+     *\n+     * @param dbConnection database connection.\n+     */\n+    private void commitTransaction(Connection dbConnection) {\n+\n+        try {\n+            if (dbConnection != null && !dbConnection.getAutoCommit()) {\n+                dbConnection.commit();\n+            }\n+        } catch (SQLException e) {\n+            rollbackTransaction(dbConnection);\n+            log.error(\"An error occurred while commit transactions. \", e);\n+        }\n+    }\n+\n+    /**\n+     * Revoke the transaction when catch then sql transaction errors.\n+     *\n+     * @param dbConnection database connection.\n+     */\n+    private void rollbackTransaction(Connection dbConnection) {\n+\n+        try {\n+            if (dbConnection != null) {", "originalCommit": "06425238d57a94735f8229806a622dce96b1dace", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4MzQwMQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489983401", "bodyText": "done", "author": "Buddhimah", "createdAt": "2020-09-17T05:42:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4MTEwMg=="}], "type": "inlineReview", "revised_code": {"commit": "ce6d08426eff4861b49f4751684c5016b0309fa0", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\nindex c08676b55..ff83b3d68 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n\n@@ -266,7 +266,7 @@ public class UserUniqueIDDomainResolver {\n     private void rollbackTransaction(Connection dbConnection) {\n \n         try {\n-            if (dbConnection != null) {\n+            if (dbConnection != null && !dbConnection.getAutoCommit()) {\n                 dbConnection.rollback();\n             }\n         } catch (SQLException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4MTU3Nw==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489981577", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        rollbackTransaction(dbConnection);\n          \n          \n            \n                        log.error(\"An error occurred while commit transactions. \", e);\n          \n          \n            \n                        log.error(\"An error occurred while commit transactions.\", e);\n          \n          \n            \n                        rollbackTransaction(dbConnection);", "author": "omindu", "createdAt": "2020-09-17T05:36:18Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java", "diffHunk": "@@ -233,4 +240,37 @@ private Connection getDBConnection() throws SQLException, UserStoreException {\n         }\n         return dataSource.getConnection();\n     }\n+\n+    /**\n+     * Commit the transaction.\n+     *\n+     * @param dbConnection database connection.\n+     */\n+    private void commitTransaction(Connection dbConnection) {\n+\n+        try {\n+            if (dbConnection != null && !dbConnection.getAutoCommit()) {\n+                dbConnection.commit();\n+            }\n+        } catch (SQLException e) {\n+            rollbackTransaction(dbConnection);\n+            log.error(\"An error occurred while commit transactions. \", e);", "originalCommit": "06425238d57a94735f8229806a622dce96b1dace", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4NDExNQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489984115", "bodyText": "done", "author": "Buddhimah", "createdAt": "2020-09-17T05:44:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4MTU3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "ce6d08426eff4861b49f4751684c5016b0309fa0", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\nindex c08676b55..ff83b3d68 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n\n@@ -266,7 +266,7 @@ public class UserUniqueIDDomainResolver {\n     private void rollbackTransaction(Connection dbConnection) {\n \n         try {\n-            if (dbConnection != null) {\n+            if (dbConnection != null && !dbConnection.getAutoCommit()) {\n                 dbConnection.rollback();\n             }\n         } catch (SQLException e) {\n"}}, {"oid": "ce6d08426eff4861b49f4751684c5016b0309fa0", "url": "https://github.com/wso2/carbon-kernel/commit/ce6d08426eff4861b49f4751684c5016b0309fa0", "message": "Handle set autocommit true scenario", "committedDate": "2020-09-17T05:41:10Z", "type": "forcePushed"}, {"oid": "70c564e6b50720f3652cd8ea4ab843b99385b8d8", "url": "https://github.com/wso2/carbon-kernel/commit/70c564e6b50720f3652cd8ea4ab843b99385b8d8", "message": "Handle set autocommit true scenario", "committedDate": "2020-09-17T05:44:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5ODg5Nw==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489998897", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.error(\"An error occurred while commit transactions. \", e);\n          \n          \n            \n                        log.error(\"An error occurred while transaction commit.\", e);", "author": "omindu", "createdAt": "2020-09-17T06:25:45Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java", "diffHunk": "@@ -233,4 +240,37 @@ private Connection getDBConnection() throws SQLException, UserStoreException {\n         }\n         return dataSource.getConnection();\n     }\n+\n+    /**\n+     * Commit the transaction.\n+     *\n+     * @param dbConnection database connection.\n+     */\n+    private void commitTransaction(Connection dbConnection) {\n+\n+        try {\n+            if (dbConnection != null && !dbConnection.getAutoCommit()) {\n+                dbConnection.commit();\n+            }\n+        } catch (SQLException e) {\n+            log.error(\"An error occurred while commit transactions. \", e);", "originalCommit": "70c564e6b50720f3652cd8ea4ab843b99385b8d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwNjEwNg==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r490006106", "bodyText": "done", "author": "Buddhimah", "createdAt": "2020-09-17T06:42:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5ODg5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "29edd4b5a79969e7def2e6b46919723a958b81a8", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\nindex 9cf4fe784..e240c6a84 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n\n@@ -242,7 +242,7 @@ public class UserUniqueIDDomainResolver {\n     }\n \n     /**\n-     * Commit the transaction.\n+     * Commit a transaction.\n      *\n      * @param dbConnection database connection.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5OTQ5MA==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489999490", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Revoke the transaction when catch then sql transaction errors.\n          \n          \n            \n                 * Rollback a transaction.", "author": "omindu", "createdAt": "2020-09-17T06:27:08Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java", "diffHunk": "@@ -233,4 +240,37 @@ private Connection getDBConnection() throws SQLException, UserStoreException {\n         }\n         return dataSource.getConnection();\n     }\n+\n+    /**\n+     * Commit the transaction.\n+     *\n+     * @param dbConnection database connection.\n+     */\n+    private void commitTransaction(Connection dbConnection) {\n+\n+        try {\n+            if (dbConnection != null && !dbConnection.getAutoCommit()) {\n+                dbConnection.commit();\n+            }\n+        } catch (SQLException e) {\n+            log.error(\"An error occurred while commit transactions. \", e);\n+            rollbackTransaction(dbConnection);\n+        }\n+    }\n+\n+    /**\n+     * Revoke the transaction when catch then sql transaction errors.", "originalCommit": "70c564e6b50720f3652cd8ea4ab843b99385b8d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwNjEzOQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r490006139", "bodyText": "done", "author": "Buddhimah", "createdAt": "2020-09-17T06:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5OTQ5MA=="}], "type": "inlineReview", "revised_code": {"commit": "29edd4b5a79969e7def2e6b46919723a958b81a8", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\nindex 9cf4fe784..e240c6a84 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n\n@@ -242,7 +242,7 @@ public class UserUniqueIDDomainResolver {\n     }\n \n     /**\n-     * Commit the transaction.\n+     * Commit a transaction.\n      *\n      * @param dbConnection database connection.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5OTgxOQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489999819", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.error(\"An error occurred while rolling back transactions.\", e);\n          \n          \n            \n                        log.error(\"An error occurred while transaction rollback.\", e);", "author": "omindu", "createdAt": "2020-09-17T06:27:46Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java", "diffHunk": "@@ -233,4 +240,37 @@ private Connection getDBConnection() throws SQLException, UserStoreException {\n         }\n         return dataSource.getConnection();\n     }\n+\n+    /**\n+     * Commit the transaction.\n+     *\n+     * @param dbConnection database connection.\n+     */\n+    private void commitTransaction(Connection dbConnection) {\n+\n+        try {\n+            if (dbConnection != null && !dbConnection.getAutoCommit()) {\n+                dbConnection.commit();\n+            }\n+        } catch (SQLException e) {\n+            log.error(\"An error occurred while commit transactions. \", e);\n+            rollbackTransaction(dbConnection);\n+        }\n+    }\n+\n+    /**\n+     * Revoke the transaction when catch then sql transaction errors.\n+     *\n+     * @param dbConnection database connection.\n+     */\n+    private void rollbackTransaction(Connection dbConnection) {\n+\n+        try {\n+            if (dbConnection != null && !dbConnection.getAutoCommit()) {\n+                dbConnection.rollback();\n+            }\n+        } catch (SQLException e) {\n+            log.error(\"An error occurred while rolling back transactions.\", e);", "originalCommit": "70c564e6b50720f3652cd8ea4ab843b99385b8d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwNjE3Mg==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r490006172", "bodyText": "done", "author": "Buddhimah", "createdAt": "2020-09-17T06:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5OTgxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "29edd4b5a79969e7def2e6b46919723a958b81a8", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\nindex 9cf4fe784..e240c6a84 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n\n@@ -242,7 +242,7 @@ public class UserUniqueIDDomainResolver {\n     }\n \n     /**\n-     * Commit the transaction.\n+     * Commit a transaction.\n      *\n      * @param dbConnection database connection.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5OTkyMQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r489999921", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Commit the transaction.\n          \n          \n            \n                 * Commit a transaction.", "author": "omindu", "createdAt": "2020-09-17T06:27:59Z", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java", "diffHunk": "@@ -233,4 +240,37 @@ private Connection getDBConnection() throws SQLException, UserStoreException {\n         }\n         return dataSource.getConnection();\n     }\n+\n+    /**\n+     * Commit the transaction.", "originalCommit": "70c564e6b50720f3652cd8ea4ab843b99385b8d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwNjIwMA==", "url": "https://github.com/wso2/carbon-kernel/pull/2770#discussion_r490006200", "bodyText": "done", "author": "Buddhimah", "createdAt": "2020-09-17T06:42:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5OTkyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "29edd4b5a79969e7def2e6b46919723a958b81a8", "chunk": "diff --git a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\nindex 9cf4fe784..e240c6a84 100644\n--- a/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n+++ b/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDDomainResolver.java\n\n@@ -242,7 +242,7 @@ public class UserUniqueIDDomainResolver {\n     }\n \n     /**\n-     * Commit the transaction.\n+     * Commit a transaction.\n      *\n      * @param dbConnection database connection.\n      */\n"}}, {"oid": "29edd4b5a79969e7def2e6b46919723a958b81a8", "url": "https://github.com/wso2/carbon-kernel/commit/29edd4b5a79969e7def2e6b46919723a958b81a8", "message": "Handle set autocommit true scenario", "committedDate": "2020-09-17T06:41:35Z", "type": "forcePushed"}, {"oid": "b47d5a220350767864c91accaa5a28a191d62d10", "url": "https://github.com/wso2/carbon-kernel/commit/b47d5a220350767864c91accaa5a28a191d62d10", "message": "Handle set autocommit true scenario", "committedDate": "2020-09-17T06:42:11Z", "type": "commit"}, {"oid": "b47d5a220350767864c91accaa5a28a191d62d10", "url": "https://github.com/wso2/carbon-kernel/commit/b47d5a220350767864c91accaa5a28a191d62d10", "message": "Handle set autocommit true scenario", "committedDate": "2020-09-17T06:42:11Z", "type": "forcePushed"}]}