{"pr_number": 2670, "pr_title": "Add new API in crypto util to pass the internal crypto provider type", "pr_createdAt": "2020-04-24T06:58:32Z", "pr_url": "https://github.com/wso2/carbon-kernel/pull/2670", "timeline": [{"oid": "66b3debcad212e66c4175fcce1288248b98b6399", "url": "https://github.com/wso2/carbon-kernel/commit/66b3debcad212e66c4175fcce1288248b98b6399", "message": "Add new API in crypto util to pass the internal crypto provider type", "committedDate": "2020-04-24T06:54:46Z", "type": "commit"}, {"oid": "eb170027e595b1e644f1a9f9c94722d2bd58827f", "url": "https://github.com/wso2/carbon-kernel/commit/eb170027e595b1e644f1a9f9c94722d2bd58827f", "message": "Merge branch '4.6.x' of https://github.com/wso2/carbon-kernel into denu-4.6.x.1.1", "committedDate": "2020-04-27T05:50:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU1Njc4MA==", "url": "https://github.com/wso2/carbon-kernel/pull/2670#discussion_r415556780", "bodyText": "Can't we catch the specific exception here?", "author": "ashensw", "createdAt": "2020-04-27T06:55:21Z", "path": "core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java", "diffHunk": "@@ -307,6 +377,56 @@ public String encryptAndBase64Encode(byte[] plainText) throws\n         }\n     }\n \n+    /**\n+     * Decrypt the cipher text using the given algorithm and internal crypto provider type.\n+     *\n+     * @param cipherTextBytes            The cipher text to be decrypted.\n+     * @param algorithm                  The algorithm used for decryption.\n+     * @param internalCryptoProviderType The {@link org.wso2.carbon.crypto.api.InternalCryptoProvider} type.\n+     * @return Decrypted bytes.\n+     * @throws CryptoException\n+     */\n+    public byte[] decrypt(byte[] cipherTextBytes, String algorithm, String internalCryptoProviderType)\n+            throws CryptoException {\n+\n+        failIfEncryptDecryptInputsAreInvalid(cipherTextBytes,algorithm,internalCryptoProviderType);\n+\n+        byte[] decryptedValue;\n+\n+        try {\n+            CryptoService cryptoService = CarbonCoreDataHolder.getInstance().getCryptoService();\n+\n+            if (cryptoService == null) {\n+                throw new CryptoException(\"A crypto service implementation has not been registered.\");\n+            }\n+\n+            CipherMetaDataHolder\n+                    cipherMetaDataHolder = cipherTextToCipherMetaDataHolder(cipherTextBytes);\n+            if (cipherMetaDataHolder != null) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\n+                            String.format(\"Cipher text is in self contained format. Retrieve the actual cipher from \" +\n+                                    \"the self contained cipher text.\"));\n+                }\n+                cipherTextBytes = cipherMetaDataHolder.getCipherBase64Decoded();\n+            }\n+\n+            if (cipherTextBytes.length == 0) {\n+                decryptedValue = StringUtils.EMPTY.getBytes();\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Ciphertext is empty. An empty array will be used as the plaintext bytes.\");\n+                }\n+            } else {\n+                decryptedValue = cryptoService.decrypt(cipherTextBytes, algorithm, CRYPTO_API_PROVIDER_BC,\n+                        internalCryptoProviderType);\n+            }\n+            return decryptedValue;\n+        } catch (Exception e) {", "originalCommit": "66b3debcad212e66c4175fcce1288248b98b6399", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3OTUyOA==", "url": "https://github.com/wso2/carbon-kernel/pull/2670#discussion_r415579528", "bodyText": "Fixed with 7157b37", "author": "denuwanthi", "createdAt": "2020-04-27T07:35:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU1Njc4MA=="}], "type": "inlineReview", "revised_code": {"commit": "7157b37d5c65be094165fc2ee48137ca915b81c3", "chunk": "diff --git a/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java b/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java\nindex af72fe799..97038ad64 100644\n--- a/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java\n+++ b/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java\n\n@@ -421,7 +422,7 @@ public class CryptoUtil {\n                         internalCryptoProviderType);\n             }\n             return decryptedValue;\n-        } catch (Exception e) {\n+        } catch (org.wso2.carbon.crypto.api.CryptoException e) {\n             throw new CryptoException(\"An error occurred while decrypting data.\", e);\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU1NzU0Nw==", "url": "https://github.com/wso2/carbon-kernel/pull/2670#discussion_r415557547", "bodyText": "Can't we catch the specific exception here?", "author": "ashensw", "createdAt": "2020-04-27T06:56:34Z", "path": "core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java", "diffHunk": "@@ -170,6 +170,58 @@ public RegistryService getRegistryService() {\n         return encrypt(plainTextBytes, System.getProperty(CIPHER_TRANSFORMATION_SYSTEM_PROPERTY), true);\n     }\n \n+    /**\n+     * Encrypt a given plain text with the provided algorithm and internal crypto provider type.\n+     *\n+     * @param plainTextBytes                plain text bytes that need to be encrypted.\n+     * @param algorithm                     The encryption algorithm.\n+     * @param returnSelfContainedCipherText Create self-contained cipher text if true, return simple encrypted ciphertext otherwise.\n+     * @param internalCryptoProviderType    The {@link org.wso2.carbon.crypto.api.InternalCryptoProvider} type.\n+     * @return The cipher text bytes.\n+     * @throws CryptoException\n+     */\n+    public byte[] encrypt(byte[] plainTextBytes, String algorithm, boolean returnSelfContainedCipherText,\n+                          String internalCryptoProviderType)\n+            throws CryptoException {\n+\n+        failIfEncryptDecryptInputsAreInvalid(plainTextBytes, algorithm, internalCryptoProviderType);\n+\n+        byte[] encryptedKey;\n+        try {\n+\n+            CryptoService cryptoService = CarbonCoreDataHolder.getInstance().getCryptoService();\n+\n+            if (cryptoService == null) {\n+                throw new CryptoException(\"A crypto service implementation has not been registered.\");\n+            }\n+            if (plainTextBytes.length == 0) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Plaintext is empty. An empty array will be used as the ciphertext bytes.\");\n+                }\n+                encryptedKey = StringUtils.EMPTY.getBytes();\n+            } else {\n+                if (log.isDebugEnabled()) {\n+                    if (returnSelfContainedCipherText) {\n+                        log.debug(String.format(\n+                                \"Encrypting data in self contained format, with algorithm: '%s' and internal crypto \" +\n+                                        \"provider: '%s'\", algorithm, internalCryptoProviderType));\n+                    } else {\n+                        log.debug(String.format(\n+                                \"Encrypting data with algorithm: '%s' and internal crypto \" +\n+                                        \"provider: '%s'\", algorithm, internalCryptoProviderType));\n+                    }\n+                }\n+                encryptedKey = cryptoService\n+                        .encrypt(plainTextBytes, algorithm, CRYPTO_API_PROVIDER_BC, returnSelfContainedCipherText,\n+                                internalCryptoProviderType);\n+            }\n+\n+        } catch (Exception e) {", "originalCommit": "66b3debcad212e66c4175fcce1288248b98b6399", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3OTYyMA==", "url": "https://github.com/wso2/carbon-kernel/pull/2670#discussion_r415579620", "bodyText": "Fixed with 7157b37", "author": "denuwanthi", "createdAt": "2020-04-27T07:35:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU1NzU0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7157b37d5c65be094165fc2ee48137ca915b81c3", "chunk": "diff --git a/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java b/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java\nindex af72fe799..97038ad64 100644\n--- a/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java\n+++ b/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java\n\n@@ -214,9 +214,10 @@ public class CryptoUtil {\n                 encryptedKey = cryptoService\n                         .encrypt(plainTextBytes, algorithm, CRYPTO_API_PROVIDER_BC, returnSelfContainedCipherText,\n                                 internalCryptoProviderType);\n+\n             }\n \n-        } catch (Exception e) {\n+        } catch (org.wso2.carbon.crypto.api.CryptoException e) {\n             throw new CryptoException(\"An error occurred while encrypting data.\", e);\n         }\n         return encryptedKey;\n"}}, {"oid": "7157b37d5c65be094165fc2ee48137ca915b81c3", "url": "https://github.com/wso2/carbon-kernel/commit/7157b37d5c65be094165fc2ee48137ca915b81c3", "message": "Fix PR Comment", "committedDate": "2020-04-27T07:33:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyNjUwOQ==", "url": "https://github.com/wso2/carbon-kernel/pull/2670#discussion_r415726509", "bodyText": "formatting", "author": "malithie", "createdAt": "2020-04-27T11:18:38Z", "path": "core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java", "diffHunk": "@@ -307,6 +378,56 @@ public String encryptAndBase64Encode(byte[] plainText) throws\n         }\n     }\n \n+    /**\n+     * Decrypt the cipher text using the given algorithm and internal crypto provider type.\n+     *\n+     * @param cipherTextBytes            The cipher text to be decrypted.\n+     * @param algorithm                  The algorithm used for decryption.\n+     * @param internalCryptoProviderType The {@link org.wso2.carbon.crypto.api.InternalCryptoProvider} type.\n+     * @return Decrypted bytes.\n+     * @throws CryptoException\n+     */\n+    public byte[] decrypt(byte[] cipherTextBytes, String algorithm, String internalCryptoProviderType)\n+            throws CryptoException {\n+\n+        failIfEncryptDecryptInputsAreInvalid(cipherTextBytes,algorithm,internalCryptoProviderType);", "originalCommit": "7157b37d5c65be094165fc2ee48137ca915b81c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4OTkxMA==", "url": "https://github.com/wso2/carbon-kernel/pull/2670#discussion_r416289910", "bodyText": "fixed with fe82da8", "author": "denuwanthi", "createdAt": "2020-04-28T02:58:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyNjUwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "fe82da84cda344cc5f4771cb2750525a7b3e4e98", "chunk": "diff --git a/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java b/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java\nindex 97038ad64..894f24385 100644\n--- a/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java\n+++ b/core/org.wso2.carbon.core/src/main/java/org/wso2/carbon/core/util/CryptoUtil.java\n\n@@ -390,7 +390,7 @@ public class CryptoUtil {\n     public byte[] decrypt(byte[] cipherTextBytes, String algorithm, String internalCryptoProviderType)\n             throws CryptoException {\n \n-        failIfEncryptDecryptInputsAreInvalid(cipherTextBytes,algorithm,internalCryptoProviderType);\n+        failIfEncryptDecryptInputsAreInvalid(cipherTextBytes, algorithm, internalCryptoProviderType);\n \n         byte[] decryptedValue;\n \n"}}, {"oid": "fe82da84cda344cc5f4771cb2750525a7b3e4e98", "url": "https://github.com/wso2/carbon-kernel/commit/fe82da84cda344cc5f4771cb2750525a7b3e4e98", "message": "Fix formatting", "committedDate": "2020-04-28T02:56:42Z", "type": "commit"}, {"oid": "761477b076480a0cce6eaddfac030a70b1521766", "url": "https://github.com/wso2/carbon-kernel/commit/761477b076480a0cce6eaddfac030a70b1521766", "message": "Retrieve the algorithm from self contained cipher text", "committedDate": "2020-05-13T09:26:26Z", "type": "commit"}, {"oid": "2637d39ae033a65416f30f19e655a6bb36c2bf35", "url": "https://github.com/wso2/carbon-kernel/commit/2637d39ae033a65416f30f19e655a6bb36c2bf35", "message": "Update the cryptoservice version", "committedDate": "2020-05-22T10:55:45Z", "type": "commit"}]}