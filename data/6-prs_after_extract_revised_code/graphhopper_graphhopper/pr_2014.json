{"pr_number": 2014, "pr_title": "timeout should propagate to OkHttp", "pr_createdAt": "2020-04-23T12:07:52Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/2014", "timeline": [{"oid": "fa3f24754c49cc84242ea3a8f1e212a012e3862f", "url": "https://github.com/graphhopper/graphhopper/commit/fa3f24754c49cc84242ea3a8f1e212a012e3862f", "message": "test if timeout propagates to OkHttp", "committedDate": "2020-04-23T12:06:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc2MzE3Ng==", "url": "https://github.com/graphhopper/graphhopper/pull/2014#discussion_r413763176", "bodyText": "This does not run agains graphhopper.com? do we need the parameterization here?", "author": "easbar", "createdAt": "2020-04-23T12:13:33Z", "path": "client-hc/src/test/java/com/graphhopper/api/GraphHopperWebTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package com.graphhopper.api;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.graphhopper.GHRequest;\n+import com.graphhopper.PathWrapper;\n+import com.graphhopper.jackson.Jackson;\n+import com.graphhopper.jackson.PathWrapperDeserializer;\n+import com.graphhopper.util.shapes.GHPoint;\n+import org.junit.Assume;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+@RunWith(Parameterized.class)\n+public class GraphHopperWebTest {\n+\n+    private final GraphHopperWeb gh;\n+\n+    public GraphHopperWebTest(boolean usePost, int maxUnzippedLength) {\n+        gh = new GraphHopperWeb(null).setPostRequest(usePost).setMaxUnzippedLength(maxUnzippedLength);\n+    }\n+\n+    /**\n+     * Runs the same test with each of the supported traversal modes\n+     */\n+    @Parameterized.Parameters(name = \"POST: {0}, maxUnzippedLength: {1}\")\n+    public static Collection<Object[]> configs() {\n+        return Arrays.asList(new Object[][]{\n+                {false, -1},\n+                {true, 0},\n+                {true, 1000}\n+        });\n+    }", "originalCommit": "fa3f24754c49cc84242ea3a8f1e212a012e3862f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc2Nzk3Ng==", "url": "https://github.com/graphhopper/graphhopper/pull/2014#discussion_r413767976", "bodyText": "Ok, we would need it for GET and POST but the maxUnzippedLength is indeed misleading and not required.", "author": "karussell", "createdAt": "2020-04-23T12:21:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc2MzE3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc2ODI1OQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2014#discussion_r413768259", "bodyText": "(to test that it is applied to OkHttp for POST and GET)", "author": "karussell", "createdAt": "2020-04-23T12:21:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc2MzE3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc3MDI2Mw==", "url": "https://github.com/graphhopper/graphhopper/pull/2014#discussion_r413770263", "bodyText": "One way to do it with Junit5 would be\n@ParameterizedTest(name = \"POST={0}\")\n@BooleanSource(values = {true, false})\npublic void myTest(boolean usePost) {\n}\n.. but then you have to create GHWeb in every test again", "author": "easbar", "createdAt": "2020-04-23T12:24:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc2MzE3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc5NTY4Ng==", "url": "https://github.com/graphhopper/graphhopper/pull/2014#discussion_r413795686", "bodyText": "Thanks, will use this as this is perfect here as I have to create it only once :)", "author": "karussell", "createdAt": "2020-04-23T13:01:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc2MzE3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxMzAzMw==", "url": "https://github.com/graphhopper/graphhopper/pull/2014#discussion_r413813033", "bodyText": "Btw: there is no BooleanSource ... it is done via @ValueSource(booleans = {true, false}) it seems.", "author": "karussell", "createdAt": "2020-04-23T13:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc2MzE3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxODM5Mw==", "url": "https://github.com/graphhopper/graphhopper/pull/2014#discussion_r413818393", "bodyText": "oh sorry my bad", "author": "easbar", "createdAt": "2020-04-23T13:59:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc2MzE3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "85ff8fdaef243b3a666ff4ced21d9cccdad78bc4", "chunk": "diff --git a/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebTest.java b/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebTest.java\nindex f9c48695e..5569d84bf 100644\n--- a/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebTest.java\n+++ b/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebTest.java\n\n@@ -8,8 +8,6 @@ import com.graphhopper.PathWrapper;\n import com.graphhopper.jackson.Jackson;\n import com.graphhopper.jackson.PathWrapperDeserializer;\n import com.graphhopper.util.shapes.GHPoint;\n-import org.junit.Assume;\n-import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.junit.runners.Parameterized;\n"}}, {"oid": "85ff8fdaef243b3a666ff4ced21d9cccdad78bc4", "url": "https://github.com/graphhopper/graphhopper/commit/85ff8fdaef243b3a666ff4ced21d9cccdad78bc4", "message": "remove maxUnzippedLength", "committedDate": "2020-04-23T12:24:40Z", "type": "commit"}, {"oid": "ac43f67856cc8227c75f17b7de4d29fb3fd5c3d4", "url": "https://github.com/graphhopper/graphhopper/commit/ac43f67856cc8227c75f17b7de4d29fb3fd5c3d4", "message": "make test a bit shorter via ValueSource", "committedDate": "2020-04-23T13:52:06Z", "type": "commit"}]}