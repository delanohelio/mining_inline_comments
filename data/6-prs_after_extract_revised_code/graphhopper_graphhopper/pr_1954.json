{"pr_number": 1954, "pr_title": "use enum instead of int", "pr_createdAt": "2020-03-13T17:03:42Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/1954", "timeline": [{"oid": "ea236aee3aee951f775495c861c5c3cff59ed1a4", "url": "https://github.com/graphhopper/graphhopper/commit/ea236aee3aee951f775495c861c5c3cff59ed1a4", "message": "use enum instead of int", "committedDate": "2020-03-13T16:55:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1ODA4Nw==", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392358087", "bodyText": "This is a bit more lengthy now ;)", "author": "karussell", "createdAt": "2020-03-13T17:05:17Z", "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -968,14 +968,14 @@ private PointList fetchWayGeometry_(long edgePointer, boolean reverse, int mode,\n             geoRef += 4L;\n             bytes = new byte[count * nodeAccess.getDimension() * 4];\n             wayGeometry.getBytes(geoRef, bytes, bytes.length);\n-        } else if (mode == 0)\n+        } else if (mode == FetchWayGeometry.PILLAR_ONLY)\n             return PointList.EMPTY;\n \n-        PointList pillarNodes = new PointList(count + mode, nodeAccess.is3D());\n+        PointList pillarNodes = new PointList(FetchWayGeometry.count(count, mode), nodeAccess.is3D());\n         if (reverse) {\n-            if ((mode & 2) != 0)\n+            if (mode == FetchWayGeometry.ALL || mode == FetchWayGeometry.PILLAR_AND_ADJ)\n                 pillarNodes.add(nodeAccess, adjNode);\n-        } else if ((mode & 1) != 0)\n+        } else if (mode == FetchWayGeometry.ALL || mode == FetchWayGeometry.BASE_AND_PILLAR)\n             pillarNodes.add(nodeAccess, baseNode);", "originalCommit": "ea236aee3aee951f775495c861c5c3cff59ed1a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2NTIxOQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392565219", "bodyText": "IMO its more lengthy and a lot more readable. With the previous code I did not understand what happened here without looking up what e.g. mode=2 means.", "author": "easbar", "createdAt": "2020-03-14T07:33:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1ODA4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e1d84d09d0dcd14ae55dd74321c22fa26b88c698", "chunk": "diff --git a/core/src/main/java/com/graphhopper/storage/BaseGraph.java b/core/src/main/java/com/graphhopper/storage/BaseGraph.java\nindex b5b923348..8453d149f 100644\n--- a/core/src/main/java/com/graphhopper/storage/BaseGraph.java\n+++ b/core/src/main/java/com/graphhopper/storage/BaseGraph.java\n\n@@ -968,14 +968,14 @@ class BaseGraph implements Graph {\n             geoRef += 4L;\n             bytes = new byte[count * nodeAccess.getDimension() * 4];\n             wayGeometry.getBytes(geoRef, bytes, bytes.length);\n-        } else if (mode == FetchWayGeometry.PILLAR_ONLY)\n+        } else if (mode == FetchMode.PILLAR_ONLY)\n             return PointList.EMPTY;\n \n-        PointList pillarNodes = new PointList(FetchWayGeometry.count(count, mode), nodeAccess.is3D());\n+        PointList pillarNodes = new PointList(getPointListLength(count, mode), nodeAccess.is3D());\n         if (reverse) {\n-            if (mode == FetchWayGeometry.ALL || mode == FetchWayGeometry.PILLAR_AND_ADJ)\n+            if (mode == FetchMode.ALL || mode == FetchMode.PILLAR_AND_ADJ)\n                 pillarNodes.add(nodeAccess, adjNode);\n-        } else if (mode == FetchWayGeometry.ALL || mode == FetchWayGeometry.BASE_AND_PILLAR)\n+        } else if (mode == FetchMode.ALL || mode == FetchMode.BASE_AND_PILLAR)\n             pillarNodes.add(nodeAccess, baseNode);\n \n         int index = 0;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2NTIxMA==", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392565210", "bodyText": "I do not really like the enum name FetchWayGeometry too much. Its not a noun and it does not really tell us anything. Maybe we can use this name to communicate that this enum is used to specify how many nodes we fetch? For example GeometryNodes.ALL? FetchMode.ALL? WayGeometryFetchMode.ALL?", "author": "easbar", "createdAt": "2020-03-14T07:33:45Z", "path": "core/src/main/java/com/graphhopper/util/FetchWayGeometry.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.graphhopper.util;\n+\n+public enum FetchWayGeometry {", "originalCommit": "ea236aee3aee951f775495c861c5c3cff59ed1a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NTkxNg==", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392595916", "bodyText": "Yes, FetchMode sounds already good.", "author": "karussell", "createdAt": "2020-03-14T15:20:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2NTIxMA=="}], "type": "inlineReview", "revised_code": {"commit": "e1d84d09d0dcd14ae55dd74321c22fa26b88c698", "chunk": "diff --git a/core/src/main/java/com/graphhopper/util/FetchWayGeometry.java b/core/src/main/java/com/graphhopper/util/FetchWayGeometry.java\ndeleted file mode 100644\nindex 97e363e21..000000000\n--- a/core/src/main/java/com/graphhopper/util/FetchWayGeometry.java\n+++ /dev/null\n\n@@ -1,20 +0,0 @@\n-package com.graphhopper.util;\n-\n-public enum FetchWayGeometry {\n-    TOWER_ONLY, PILLAR_ONLY, BASE_AND_PILLAR, PILLAR_AND_ADJ, ALL;\n-\n-    public static int count(int count, FetchWayGeometry mode) {\n-        switch (mode) {\n-            case TOWER_ONLY:\n-                return 2;\n-            case PILLAR_ONLY:\n-                return count;\n-            case BASE_AND_PILLAR:\n-            case PILLAR_AND_ADJ:\n-                return count + 1;\n-            case ALL:\n-                return count + 2;\n-        }\n-        throw new IllegalArgumentException(\"Mode isn't handled \" + mode);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2NTYzMg==", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392565632", "bodyText": "The names here could be more expressive. int count(int count does not tell me anything about what this method does. Apparently the method returns the total number of nodes that will be returned by fetchWayGeometry given the number of pillar nodes? So maybe we can at least rename the count parameter to pillarNodes? Maybe rename the method to getFetchedNodeCount or countFetchedNodes?", "author": "easbar", "createdAt": "2020-03-14T07:42:41Z", "path": "core/src/main/java/com/graphhopper/util/FetchWayGeometry.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.graphhopper.util;\n+\n+public enum FetchWayGeometry {\n+    TOWER_ONLY, PILLAR_ONLY, BASE_AND_PILLAR, PILLAR_AND_ADJ, ALL;\n+\n+    public static int count(int count, FetchWayGeometry mode) {", "originalCommit": "ea236aee3aee951f775495c861c5c3cff59ed1a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NTk4MQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392595981", "bodyText": "I'll probably move the method into the only class where it is being used then we do not need to care much about the name for now :) (?)", "author": "karussell", "createdAt": "2020-03-14T15:21:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2NTYzMg=="}], "type": "inlineReview", "revised_code": {"commit": "e1d84d09d0dcd14ae55dd74321c22fa26b88c698", "chunk": "diff --git a/core/src/main/java/com/graphhopper/util/FetchWayGeometry.java b/core/src/main/java/com/graphhopper/util/FetchWayGeometry.java\ndeleted file mode 100644\nindex 97e363e21..000000000\n--- a/core/src/main/java/com/graphhopper/util/FetchWayGeometry.java\n+++ /dev/null\n\n@@ -1,20 +0,0 @@\n-package com.graphhopper.util;\n-\n-public enum FetchWayGeometry {\n-    TOWER_ONLY, PILLAR_ONLY, BASE_AND_PILLAR, PILLAR_AND_ADJ, ALL;\n-\n-    public static int count(int count, FetchWayGeometry mode) {\n-        switch (mode) {\n-            case TOWER_ONLY:\n-                return 2;\n-            case PILLAR_ONLY:\n-                return count;\n-            case BASE_AND_PILLAR:\n-            case PILLAR_AND_ADJ:\n-                return count + 1;\n-            case ALL:\n-                return count + 2;\n-        }\n-        throw new IllegalArgumentException(\"Mode isn't handled \" + mode);\n-    }\n-}\n"}}, {"oid": "e1d84d09d0dcd14ae55dd74321c22fa26b88c698", "url": "https://github.com/graphhopper/graphhopper/commit/e1d84d09d0dcd14ae55dd74321c22fa26b88c698", "message": "use noun FetchMode instead of FetchWayGeometry", "committedDate": "2020-03-14T15:26:23Z", "type": "commit"}, {"oid": "5dc2c742cc78f0247381d89de5e1cff4d0ab2269", "url": "https://github.com/graphhopper/graphhopper/commit/5dc2c742cc78f0247381d89de5e1cff4d0ab2269", "message": "minor doc changes", "committedDate": "2020-03-14T15:30:18Z", "type": "commit"}, {"oid": "fdfc85d1c1f70b79c188403d8eae1e5ea826fd2a", "url": "https://github.com/graphhopper/graphhopper/commit/fdfc85d1c1f70b79c188403d8eae1e5ea826fd2a", "message": "Merge branch 'master' into fetchwaygeometry_enum", "committedDate": "2020-03-15T18:33:34Z", "type": "commit"}, {"oid": "1b07cd6408003413aa90a87ecb0b48ab71a425e7", "url": "https://github.com/graphhopper/graphhopper/commit/1b07cd6408003413aa90a87ecb0b48ab71a425e7", "message": "javadoc change", "committedDate": "2020-03-15T18:35:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMDU1OQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1954#discussion_r392700559", "bodyText": "I'd still change count to pillarNodes (if thats what it is?)", "author": "easbar", "createdAt": "2020-03-15T18:40:27Z", "path": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "diffHunk": "@@ -993,16 +993,31 @@ private PointList fetchWayGeometry_(long edgePointer, boolean reverse, int mode,\n         }\n \n         if (reverse) {\n-            if ((mode & 1) != 0)\n+            if (mode == FetchMode.ALL || mode == FetchMode.BASE_AND_PILLAR)\n                 pillarNodes.add(nodeAccess, baseNode);\n \n             pillarNodes.reverse();\n-        } else if ((mode & 2) != 0)\n+        } else if (mode == FetchMode.ALL || mode == FetchMode.PILLAR_AND_ADJ)\n             pillarNodes.add(nodeAccess, adjNode);\n \n         return pillarNodes;\n     }\n \n+    static int getPointListLength(int count, FetchMode mode) {", "originalCommit": "1b07cd6408003413aa90a87ecb0b48ab71a425e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00d267f9b58ce32e25103ba416531bbd82d3589f", "chunk": "diff --git a/core/src/main/java/com/graphhopper/storage/BaseGraph.java b/core/src/main/java/com/graphhopper/storage/BaseGraph.java\nindex 8453d149f..e9c146dbc 100644\n--- a/core/src/main/java/com/graphhopper/storage/BaseGraph.java\n+++ b/core/src/main/java/com/graphhopper/storage/BaseGraph.java\n\n@@ -1003,17 +1003,17 @@ class BaseGraph implements Graph {\n         return pillarNodes;\n     }\n \n-    static int getPointListLength(int count, FetchMode mode) {\n+    static int getPointListLength(int pillarNodes, FetchMode mode) {\n         switch (mode) {\n             case TOWER_ONLY:\n                 return 2;\n             case PILLAR_ONLY:\n-                return count;\n+                return pillarNodes;\n             case BASE_AND_PILLAR:\n             case PILLAR_AND_ADJ:\n-                return count + 1;\n+                return pillarNodes + 1;\n             case ALL:\n-                return count + 2;\n+                return pillarNodes + 2;\n         }\n         throw new IllegalArgumentException(\"Mode isn't handled \" + mode);\n     }\n"}}, {"oid": "00d267f9b58ce32e25103ba416531bbd82d3589f", "url": "https://github.com/graphhopper/graphhopper/commit/00d267f9b58ce32e25103ba416531bbd82d3589f", "message": "rename param", "committedDate": "2020-03-15T21:49:21Z", "type": "commit"}]}