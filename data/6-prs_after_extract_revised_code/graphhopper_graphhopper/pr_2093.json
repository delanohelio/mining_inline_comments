{"pr_number": 2093, "pr_title": "add isochrone to measurement", "pr_createdAt": "2020-07-23T09:36:29Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/2093", "timeline": [{"oid": "c4a84c97971bf81aefe7ddfedbe06d342643d050", "url": "https://github.com/graphhopper/graphhopper/commit/c4a84c97971bf81aefe7ddfedbe06d342643d050", "message": "add isochrone to measurement", "committedDate": "2020-07-23T09:34:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMyODM2Mw==", "url": "https://github.com/graphhopper/graphhopper/pull/2093#discussion_r459328363", "bodyText": "Is this the correct place? (I did not want to duplicate it)", "author": "karussell", "createdAt": "2020-07-23T09:36:56Z", "path": "isochrone/src/main/java/com/graphhopper/isochrone/algorithm/ContourBuilder.java", "diffHunk": "@@ -152,4 +151,20 @@ public int compare(Polygon o1, Polygon o2) {\n         }\n         return punched;\n     }\n+\n+    public static Polygon heuristicallyFindMainConnectedComponent(MultiPolygon multiPolygon, Point point) {\n+        int maxPoints = 0;\n+        Polygon maxPolygon = null;\n+        for (int j = 0; j < multiPolygon.getNumGeometries(); j++) {\n+            Polygon polygon = (Polygon) multiPolygon.getGeometryN(j);\n+            if (polygon.contains(point)) {\n+                return polygon;\n+            }\n+            if (polygon.getNumPoints() > maxPoints) {\n+                maxPoints = polygon.getNumPoints();\n+                maxPolygon = polygon;\n+            }\n+        }\n+        return maxPolygon;\n+    }", "originalCommit": "c4a84c97971bf81aefe7ddfedbe06d342643d050", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}