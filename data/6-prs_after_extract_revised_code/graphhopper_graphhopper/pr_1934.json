{"pr_number": 1934, "pr_title": "Use new profile parameter to select routing profile", "pr_createdAt": "2020-02-27T10:54:47Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/1934", "timeline": [{"oid": "378d7c55adfcbe0eab4df5e792b90a4a9c564c62", "url": "https://github.com/graphhopper/graphhopper/commit/378d7c55adfcbe0eab4df5e792b90a4a9c564c62", "message": "Make sure profiles are configured for every test", "committedDate": "2020-02-25T18:51:31Z", "type": "commit"}, {"oid": "1f0396d9c3f1b032a30547309d26281efef4300c", "url": "https://github.com/graphhopper/graphhopper/commit/1f0396d9c3f1b032a30547309d26281efef4300c", "message": "Throw an error when there is a routing request with no profile and start fixing tests", "committedDate": "2020-02-26T22:45:14Z", "type": "commit"}, {"oid": "733111888087eec64d7f266f83f5549798501bd2", "url": "https://github.com/graphhopper/graphhopper/commit/733111888087eec64d7f266f83f5549798501bd2", "message": "Adjust web exceptions test", "committedDate": "2020-02-27T08:36:46Z", "type": "commit"}, {"oid": "1697573176e33c201a5bbe8fd524d28ed42dbde5", "url": "https://github.com/graphhopper/graphhopper/commit/1697573176e33c201a5bbe8fd524d28ed42dbde5", "message": "Adjust GraphHopperIT tests", "committedDate": "2020-02-27T08:51:28Z", "type": "commit"}, {"oid": "772710492e88d17ac31c8cdad0377e40d1b8b4ed", "url": "https://github.com/graphhopper/graphhopper/commit/772710492e88d17ac31c8cdad0377e40d1b8b4ed", "message": "Make vehicle an instance variable in Measurement", "committedDate": "2020-02-27T08:51:57Z", "type": "commit"}, {"oid": "da949dc10b5f015377f57ae6d9d4302f6e77b09a", "url": "https://github.com/graphhopper/graphhopper/commit/da949dc10b5f015377f57ae6d9d4302f6e77b09a", "message": "Adjust a few more tests in GraphHopperIT", "committedDate": "2020-02-27T09:50:39Z", "type": "commit"}, {"oid": "aaa27de22c912637c6af3648cf159ad58960c0dc", "url": "https://github.com/graphhopper/graphhopper/commit/aaa27de22c912637c6af3648cf159ad58960c0dc", "message": "Add todos", "committedDate": "2020-02-27T09:50:58Z", "type": "commit"}, {"oid": "624f9697226b34b85b27ae4c601936db8615ce64", "url": "https://github.com/graphhopper/graphhopper/commit/624f9697226b34b85b27ae4c601936db8615ce64", "message": "Remove some more GHRequest#setVehicle/Weighting", "committedDate": "2020-02-27T09:51:29Z", "type": "commit"}, {"oid": "c7cd51c605818bf4734aa714d3f81d674aa79fa5", "url": "https://github.com/graphhopper/graphhopper/commit/c7cd51c605818bf4734aa714d3f81d674aa79fa5", "message": "Fix remaining tests", "committedDate": "2020-02-27T10:04:10Z", "type": "commit"}, {"oid": "1d2e208acbfa518f6345db3603e8c400b76de483", "url": "https://github.com/graphhopper/graphhopper/commit/1d2e208acbfa518f6345db3603e8c400b76de483", "message": "Merge branch 'master' into profile_parameter", "committedDate": "2020-02-27T10:24:02Z", "type": "commit"}, {"oid": "5200ca30a5ecf9d6d3067b32cf18963de153e8e5", "url": "https://github.com/graphhopper/graphhopper/commit/5200ca30a5ecf9d6d3067b32cf18963de153e8e5", "message": "Error if vehicle/weighting is still set on GHRequest, tests failing mostly because request is manipulated", "committedDate": "2020-02-27T12:50:10Z", "type": "commit"}, {"oid": "27cd44204566a5ab760749a688c35b06210774a8", "url": "https://github.com/graphhopper/graphhopper/commit/27cd44204566a5ab760749a688c35b06210774a8", "message": "Actually select CH/LM profiles by name, remove Weighting#matches, many todos left", "committedDate": "2020-02-27T17:14:52Z", "type": "commit"}, {"oid": "8108e8fa11329132b157beaca79a7d9f36579786", "url": "https://github.com/graphhopper/graphhopper/commit/8108e8fa11329132b157beaca79a7d9f36579786", "message": "Merge branch 'master' into profile_parameter", "committedDate": "2020-02-29T13:36:21Z", "type": "commit"}, {"oid": "c3dc9fd74439f5a6082c01dd5d1ed092c0c959b0", "url": "https://github.com/graphhopper/graphhopper/commit/c3dc9fd74439f5a6082c01dd5d1ed092c0c959b0", "message": "Add comment", "committedDate": "2020-02-29T14:11:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3OTI1Mg==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r385079252", "bodyText": "To improve readability also in tests we could remove the comments and reuse the previously defined variable carWithoutTurnCosts=\"profile1\" instead of just \"profile1\"?\nAnd why are the assertMoscowEdge/NodeBased calls removed? Because it is expected to work once the converter is tested?", "author": "karussell", "createdAt": "2020-02-27T11:52:27Z", "path": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "diffHunk": "@@ -1385,17 +1416,26 @@ public void testDisablingLM() {\n \n     @Test\n     public void testTurnCostsOnOff() {\n+        final String profile1 = \"profile1\";\n+        final String profile2 = \"profile2\";\n+        final String vehicle = \"car\";\n+        final String weighting = \"fastest\";\n         GraphHopper hopper = createGraphHopper(\"car|turn_costs=true\").\n                 setOSMFile(MOSCOW).\n+                setProfiles(\n+                        new ProfileConfig(profile1).setVehicle(vehicle).setWeighting(weighting).setTurnCosts(false),\n+                        new ProfileConfig(profile2).setVehicle(vehicle).setWeighting(weighting).setTurnCosts(true)\n+                ).\n                 setStoreOnFlush(true);\n         hopper.importOrLoad();\n \n-        // no edge_based parameter -> use edge-based (since encoder supports it and no CH)\n-        assertMoscowEdgeBased(hopper, \"none\", false);\n-        // edge_based=false -> use node-based\n-        assertMoscowNodeBased(hopper, \"false\", false);\n-        // edge_based=true -> use edge-based\n-        assertMoscowEdgeBased(hopper, \"true\", false);\n+        GHRequest req = new GHRequest(55.813357, 37.5958585, 55.811042, 37.594689);\n+        // without turn costs\n+        req.setProfile(\"profile1\");\n+        assertEquals(400, hopper.route(req).getBest().getDistance(), 1);\n+        // with turn costs\n+        req.setProfile(\"profile2\");\n+        assertEquals(1044, hopper.route(req).getBest().getDistance(), 1);", "originalCommit": "1d2e208acbfa518f6345db3603e8c400b76de483", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIwODk1NA==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r388208954", "bodyText": "To improve readability also in tests we could remove the comments and reuse the previously defined variable carWithoutTurnCosts=\"profile1\" instead of just \"profile1\"?\n\nYes. Good point.\n\nAnd why are the assertMoscowEdge/NodeBased calls removed? Because it is expected to work once the converter is tested?\n\nThey weren't removed, but only inlined, because it no longer made sense to re-use the code in this method", "author": "easbar", "createdAt": "2020-03-05T10:36:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA3OTI1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "000512738aebf44a2b483e7bbf54e9fff225b88a", "chunk": "diff --git a/reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java b/reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java\nindex 3afc8920a..d63c21728 100644\n--- a/reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java\n+++ b/reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java\n\n@@ -1416,8 +1436,8 @@ public class GraphHopperIT {\n \n     @Test\n     public void testTurnCostsOnOff() {\n-        final String profile1 = \"profile1\";\n-        final String profile2 = \"profile2\";\n+        final String profile1 = \"profile_no_turn_costs\";\n+        final String profile2 = \"profile_turn_costs\";\n         final String vehicle = \"car\";\n         final String weighting = \"fastest\";\n         GraphHopper hopper = createGraphHopper(\"car|turn_costs=true\").\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA4MTI1MA==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r385081250", "bodyText": "Yes to both :) ? (profile should be in hints as long as the DefaultWeightingFactory gets only the HintsMap)", "author": "karussell", "createdAt": "2020-02-27T11:56:47Z", "path": "api/src/main/java/com/graphhopper/GHRequest.java", "diffHunk": "@@ -34,6 +34,9 @@\n  */\n public class GHRequest {\n     private List<GHPoint> points;\n+    // todonow: keep this here or put it into hints, and even more important: can we remove vehicle+weighting from\n+    // hints?", "originalCommit": "1d2e208acbfa518f6345db3603e8c400b76de483", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "097ed56985091246588308b1a9ee2d4f844d3340", "chunk": "diff --git a/api/src/main/java/com/graphhopper/GHRequest.java b/api/src/main/java/com/graphhopper/GHRequest.java\nindex 2d9c50d1b..1e228d0ea 100644\n--- a/api/src/main/java/com/graphhopper/GHRequest.java\n+++ b/api/src/main/java/com/graphhopper/GHRequest.java\n\n@@ -34,7 +34,7 @@ import java.util.Locale;\n  */\n public class GHRequest {\n     private List<GHPoint> points;\n-    // todonow: keep this here or put it into hints, and even more important: can we remove vehicle+weighting from\n+    // todo #1934: keep this here or put it into hints, and even more important: remove vehicle+weighting from\n     // hints?\n     private String profile = \"\";\n     private final HintsMap hints = new HintsMap();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA4MTcxMA==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r385081710", "bodyText": "Why is this necessary? The only exception should be the key parameter that should go into the URL.", "author": "karussell", "createdAt": "2020-02-27T11:57:46Z", "path": "client-hc/src/main/java/com/graphhopper/api/GraphHopperWeb.java", "diffHunk": "@@ -236,6 +236,11 @@ private Request createPostRequest(GHRequest ghRequest) {\n         String url = tmpServiceURL + \"?\";\n         if (!Helper.isEmpty(key))\n             url += \"key=\" + key;\n+        if (!Helper.isEmpty(ghRequest.getProfile())) {\n+            if (!url.endsWith(\"?\"))\n+                url += \"&\";\n+            url += \"profile=\" + ghRequest.getProfile();\n+        }", "originalCommit": "1d2e208acbfa518f6345db3603e8c400b76de483", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIwOTcxOA==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r388209718", "bodyText": "Ok at some point I thought it would be useful to have profile as url parameter, so one can quickly decide (without looking at the request body) what kind of profile was requested (e.g. when filtering requests).", "author": "easbar", "createdAt": "2020-03-05T10:37:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA4MTcxMA=="}], "type": "inlineReview", "revised_code": {"commit": "2adb95c74e41a9b94cf32008a03c5613d755f2c8", "chunk": "diff --git a/client-hc/src/main/java/com/graphhopper/api/GraphHopperWeb.java b/client-hc/src/main/java/com/graphhopper/api/GraphHopperWeb.java\nindex 9005fec19..2c749fd72 100644\n--- a/client-hc/src/main/java/com/graphhopper/api/GraphHopperWeb.java\n+++ b/client-hc/src/main/java/com/graphhopper/api/GraphHopperWeb.java\n\n@@ -236,11 +236,6 @@ public class GraphHopperWeb implements GraphHopperAPI {\n         String url = tmpServiceURL + \"?\";\n         if (!Helper.isEmpty(key))\n             url += \"key=\" + key;\n-        if (!Helper.isEmpty(ghRequest.getProfile())) {\n-            if (!url.endsWith(\"?\"))\n-                url += \"&\";\n-            url += \"profile=\" + ghRequest.getProfile();\n-        }\n \n         ObjectNode requestJson = objectMapper.createObjectNode();\n         requestJson.putArray(\"points\").addAll(createPointList(ghRequest.getPoints()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA4MjYxNw==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r385082617", "bodyText": "We did this for backward compatibility but we should probably not do this anymore and just ensure that the created profiles follow a certain standard (lower case and no spaces etc)", "author": "karussell", "createdAt": "2020-02-27T11:59:47Z", "path": "core/src/main/java/com/graphhopper/GraphHopper.java", "diffHunk": "@@ -1027,16 +1028,32 @@ public GHResponse route(GHRequest request) {\n         if (locationIndex == null)\n             throw new IllegalStateException(\"Location index not initialized\");\n \n-        // default handling\n-        String vehicle = request.getVehicle();\n-        if (vehicle.isEmpty()) {\n-            vehicle = getDefaultVehicle().toString();\n-            request.setVehicle(vehicle);\n-        }\n-\n         Lock readLock = readWriteLock.readLock();\n         readLock.lock();\n         try {\n+\n+            if (profilesByName.isEmpty()) {\n+                // todonow\n+                throw new IllegalArgumentException(\"XXX\");\n+            }\n+\n+            if (request.getProfile().isEmpty()) {\n+                throw new IllegalArgumentException(\"You need to specify a profile to perform a routing request\");\n+            }\n+\n+            // todonow: make sure trimmed, lower case etc.?", "originalCommit": "1d2e208acbfa518f6345db3603e8c400b76de483", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "27cd44204566a5ab760749a688c35b06210774a8", "chunk": "diff --git a/core/src/main/java/com/graphhopper/GraphHopper.java b/core/src/main/java/com/graphhopper/GraphHopper.java\nindex 4520f792d..ef7802b87 100644\n--- a/core/src/main/java/com/graphhopper/GraphHopper.java\n+++ b/core/src/main/java/com/graphhopper/GraphHopper.java\n\n@@ -1031,7 +1029,6 @@ public class GraphHopper implements GraphHopperAPI {\n         Lock readLock = readWriteLock.readLock();\n         readLock.lock();\n         try {\n-\n             if (profilesByName.isEmpty()) {\n                 // todonow\n                 throw new IllegalArgumentException(\"XXX\");\n"}}, {"oid": "01a9e115e6ae16a523b142aee3b1029b178f82b6", "url": "https://github.com/graphhopper/graphhopper/commit/01a9e115e6ae16a523b142aee3b1029b178f82b6", "message": "Merge branch 'master' into profile_parameter\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/GraphHopper.java\n#\tcore/src/main/java/com/graphhopper/routing/lm/LMPreparationHandler.java\n#\tcore/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "committedDate": "2020-03-10T09:55:44Z", "type": "commit"}, {"oid": "737b740d73076800303b31a4ff86d109b0fc0bdf", "url": "https://github.com/graphhopper/graphhopper/commit/737b740d73076800303b31a4ff86d109b0fc0bdf", "message": "Some updates from profile_resolver branch", "committedDate": "2020-03-10T13:58:19Z", "type": "commit"}, {"oid": "2adb95c74e41a9b94cf32008a03c5613d755f2c8", "url": "https://github.com/graphhopper/graphhopper/commit/2adb95c74e41a9b94cf32008a03c5613d755f2c8", "message": "Remove profile url parameter for POST", "committedDate": "2020-03-10T13:58:36Z", "type": "commit"}, {"oid": "5124841a0c39334b09651bab02e790e637bea8cc", "url": "https://github.com/graphhopper/graphhopper/commit/5124841a0c39334b09651bab02e790e637bea8cc", "message": "wip", "committedDate": "2020-03-10T22:25:34Z", "type": "commit"}, {"oid": "7c771948ed2eb8655a8658df5b1c31b8336d46d6", "url": "https://github.com/graphhopper/graphhopper/commit/7c771948ed2eb8655a8658df5b1c31b8336d46d6", "message": "Merge branch 'master' into profile_parameter", "committedDate": "2020-03-10T22:27:41Z", "type": "commit"}, {"oid": "c4fd48236361478ade9a1a50709ec8acc69f4c14", "url": "https://github.com/graphhopper/graphhopper/commit/c4fd48236361478ade9a1a50709ec8acc69f4c14", "message": "Merge branch 'master' into profile_parameter\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/GraphHopper.java\n#\tcore/src/main/java/com/graphhopper/routing/ProfileResolver.java\n#\tcore/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java\n#\tweb/src/test/java/com/graphhopper/http/GraphHopperLandmarksTest.java\n#\tweb/src/test/java/com/graphhopper/http/SpatialRulesTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/ChangeGraphResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/GtfsTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceIssue1574Test.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceWithEleTest.java\n#\tweb/src/test/java/com/graphhopper/http/util/TestUtils.java", "committedDate": "2020-03-15T21:41:33Z", "type": "commit"}, {"oid": "321935a69025ed0eef7eadac368c2caf363beb30", "url": "https://github.com/graphhopper/graphhopper/commit/321935a69025ed0eef7eadac368c2caf363beb30", "message": "adjust to master", "committedDate": "2020-03-15T22:11:56Z", "type": "commit"}, {"oid": "86e67cc4a227444d6ef684b1a23d611eac76bdb3", "url": "https://github.com/graphhopper/graphhopper/commit/86e67cc4a227444d6ef684b1a23d611eac76bdb3", "message": "Merge branch 'master' into profile_parameter", "committedDate": "2020-03-17T22:20:24Z", "type": "commit"}, {"oid": "000512738aebf44a2b483e7bbf54e9fff225b88a", "url": "https://github.com/graphhopper/graphhopper/commit/000512738aebf44a2b483e7bbf54e9fff225b88a", "message": "Update to profile_parameter2 branch", "committedDate": "2020-03-17T22:38:27Z", "type": "commit"}, {"oid": "444d14124b5fe1ba78ed409efeaa51138b6247da", "url": "https://github.com/graphhopper/graphhopper/commit/444d14124b5fe1ba78ed409efeaa51138b6247da", "message": "Merge branch 'master' into profile_parameter\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/routing/ProfileResolver.java\n#\tcore/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java\n#\treader-osm/src/test/java/com/graphhopper/GraphHopperIT.java\n#\treader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java\n#\ttools/src/main/java/com/graphhopper/tools/CHMeasurement.java\n#\ttools/src/main/java/com/graphhopper/tools/Measurement.java\n#\tweb-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java\n#\tweb-bundle/src/main/java/com/graphhopper/resources/RouteResource.java\n#\tweb-bundle/src/main/java/com/graphhopper/resources/SPTResource.java", "committedDate": "2020-03-19T15:17:19Z", "type": "commit"}, {"oid": "097ed56985091246588308b1a9ee2d4f844d3340", "url": "https://github.com/graphhopper/graphhopper/commit/097ed56985091246588308b1a9ee2d4f844d3340", "message": "More updates to p2", "committedDate": "2020-03-19T15:20:06Z", "type": "commit"}, {"oid": "9efde55f52a30212e10b850b6d18034547c91728", "url": "https://github.com/graphhopper/graphhopper/commit/9efde55f52a30212e10b850b6d18034547c91728", "message": "Update to p2", "committedDate": "2020-03-19T18:43:48Z", "type": "commit"}, {"oid": "3783aa1fbad14bd00a5a1c5f3b1a26e87f1d9f7d", "url": "https://github.com/graphhopper/graphhopper/commit/3783aa1fbad14bd00a5a1c5f3b1a26e87f1d9f7d", "message": "Adjust to pp", "committedDate": "2020-03-19T23:16:51Z", "type": "commit"}, {"oid": "43d0751c04ec64bb16f413c0fd8c1003322fa83f", "url": "https://github.com/graphhopper/graphhopper/commit/43d0751c04ec64bb16f413c0fd8c1003322fa83f", "message": "Reset entire branch to profile_parameter2 branch", "committedDate": "2020-03-20T07:35:07Z", "type": "commit"}, {"oid": "813470015fd0906820fb0e9deff0f018aa0720a1", "url": "https://github.com/graphhopper/graphhopper/commit/813470015fd0906820fb0e9deff0f018aa0720a1", "message": "Replace vehicle/weighting parameters with profile parameter in GET /route", "committedDate": "2020-03-20T07:35:17Z", "type": "commit"}, {"oid": "b947e706912fc9a473a2154a0ac4825766550d59", "url": "https://github.com/graphhopper/graphhopper/commit/b947e706912fc9a473a2154a0ac4825766550d59", "message": "Implement profile parameter in RouteResource and GraphHopperWeb, use it in tests", "committedDate": "2020-03-20T07:35:32Z", "type": "commit"}, {"oid": "df975f6f082004b60c3828f82bfeb23f07b32bd8", "url": "https://github.com/graphhopper/graphhopper/commit/df975f6f082004b60c3828f82bfeb23f07b32bd8", "message": "whitespace", "committedDate": "2020-03-20T07:35:37Z", "type": "commit"}, {"oid": "d3867d4c3369bdc3dd6d155ad6639acb4b63a851", "url": "https://github.com/graphhopper/graphhopper/commit/d3867d4c3369bdc3dd6d155ad6639acb4b63a851", "message": "Adjusts a few more tests with missing profile", "committedDate": "2020-03-20T07:35:40Z", "type": "commit"}, {"oid": "c11b4c2e0a885b27d2a89686fcb95f12b1d6d9a3", "url": "https://github.com/graphhopper/graphhopper/commit/c11b4c2e0a885b27d2a89686fcb95f12b1d6d9a3", "message": "Remove HintsMap from RoutingAlgorithm(OSM)IT", "committedDate": "2020-03-20T07:35:42Z", "type": "commit"}, {"oid": "69e7d6971ba416d8df61adbe86f2f83c3946f5f4", "url": "https://github.com/graphhopper/graphhopper/commit/69e7d6971ba416d8df61adbe86f2f83c3946f5f4", "message": "Change hints map to pmap in block area", "committedDate": "2020-03-20T07:35:44Z", "type": "commit"}, {"oid": "33b9f9ed6d5da3d85d66bd0a3a272de6c11e6fe9", "url": "https://github.com/graphhopper/graphhopper/commit/33b9f9ed6d5da3d85d66bd0a3a272de6c11e6fe9", "message": "Add profile parameter to /isochrone & /spt", "committedDate": "2020-03-20T07:35:47Z", "type": "commit"}, {"oid": "d96e7f99f6671b123a2966c0699e0e2b4d87e4d3", "url": "https://github.com/graphhopper/graphhopper/commit/d96e7f99f6671b123a2966c0699e0e2b4d87e4d3", "message": "fix mixin", "committedDate": "2020-03-20T08:48:28Z", "type": "commit"}, {"oid": "1b92c8749ea52eb6a2b876b78951d189f8361b2f", "url": "https://github.com/graphhopper/graphhopper/commit/1b92c8749ea52eb6a2b876b78951d189f8361b2f", "message": "Add integration for profile selection using profile or legacy parameters", "committedDate": "2020-03-20T09:23:19Z", "type": "commit"}, {"oid": "48bdadfecacee6bcecca528c506775e98b23e09a", "url": "https://github.com/graphhopper/graphhopper/commit/48bdadfecacee6bcecca528c506775e98b23e09a", "message": "Reduce usages of HintsMap", "committedDate": "2020-03-20T09:30:58Z", "type": "commit"}, {"oid": "2779b251415d1a037caa350c28aaaafcb522953d", "url": "https://github.com/graphhopper/graphhopper/commit/2779b251415d1a037caa350c28aaaafcb522953d", "message": "Fix broken url for get requests", "committedDate": "2020-03-20T10:00:41Z", "type": "commit"}, {"oid": "b8f8073b71a19fd0a3648319adeac78e497c0d3d", "url": "https://github.com/graphhopper/graphhopper/commit/b8f8073b71a19fd0a3648319adeac78e497c0d3d", "message": "Update todo comment", "committedDate": "2020-03-20T10:02:32Z", "type": "commit"}, {"oid": "c1d9e93a36c10d9ac799c67282748ee28c6b4cba", "url": "https://github.com/graphhopper/graphhopper/commit/c1d9e93a36c10d9ac799c67282748ee28c6b4cba", "message": "Merge branch 'master' into profile_parameter\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/routing/ProfileResolver.java\n#\treader-gtfs/src/test/java/com/graphhopper/AnotherAgencyIT.java\n#\treader-gtfs/src/test/java/com/graphhopper/ExtendedRouteTypeIT.java\n#\treader-gtfs/src/test/java/com/graphhopper/GraphHopperGtfsIT.java\n#\treader-gtfs/src/test/java/com/graphhopper/GraphHopperMultimodalIT.java\n#\treader-gtfs/src/test/java/com/graphhopper/RealtimeIT.java\n#\treader-osm/src/test/java/com/graphhopper/GraphHopperIT.java\n#\treader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java\n#\tweb/src/test/java/com/graphhopper/http/SpatialRulesTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/ChangeGraphResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/GtfsTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/I18nResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/IsochroneResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/MvtResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/NearestResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/NearestResourceWithEleTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/PtIsochroneTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceWithEleTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/SPTResourceTest.java", "committedDate": "2020-03-20T10:08:12Z", "type": "commit"}, {"oid": "86e4ddcd6df469382036e1fa044918c3c18637f6", "url": "https://github.com/graphhopper/graphhopper/commit/86e4ddcd6df469382036e1fa044918c3c18637f6", "message": "web ui, tmp", "committedDate": "2020-03-20T11:15:21Z", "type": "commit"}, {"oid": "7be0639462953a899655be580fd6ebea8284c681", "url": "https://github.com/graphhopper/graphhopper/commit/7be0639462953a899655be580fd6ebea8284c681", "message": "Merge branch 'master' into profile_parameter\n\n# Conflicts:\n#\tcore/src/main/java/com/graphhopper/routing/ProfileResolver.java\n#\ttools/src/main/java/com/graphhopper/tools/Measurement.java\n#\tweb-bundle/src/main/java/com/graphhopper/resources/RouteResource.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceProfileSelectionTest.java", "committedDate": "2020-03-23T18:26:20Z", "type": "commit"}, {"oid": "e165edf1822dcfdc4767f0c97480ff24f30bb23e", "url": "https://github.com/graphhopper/graphhopper/commit/e165edf1822dcfdc4767f0c97480ff24f30bb23e", "message": "Some picks from p2", "committedDate": "2020-03-23T18:41:10Z", "type": "commit"}, {"oid": "6b7fb8ff644cb885e1695ca890488b7eb1d9bb9a", "url": "https://github.com/graphhopper/graphhopper/commit/6b7fb8ff644cb885e1695ca890488b7eb1d9bb9a", "message": "Merge branch 'master' into p3\n\n# Conflicts:\n#\tcore/files/changelog.txt\n#\tcore/src/main/java/com/graphhopper/GraphHopper.java\n#\tcore/src/main/java/com/graphhopper/routing/ProfileResolver.java\n#\tcore/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java\n#\tweb-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java\n#\tweb-bundle/src/main/java/com/graphhopper/resources/RouteResource.java\n#\tweb-bundle/src/main/java/com/graphhopper/resources/SPTResource.java\n#\tweb/src/test/java/com/graphhopper/http/resources/ChangeGraphResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/IsochroneResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceIssue1574Test.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceProfileSelectionTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceTurnCostsTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceWithEleTest.java", "committedDate": "2020-03-23T21:12:43Z", "type": "commit"}, {"oid": "a68317d888413450cfa1ccd541b03d34d19f02d8", "url": "https://github.com/graphhopper/graphhopper/commit/a68317d888413450cfa1ccd541b03d34d19f02d8", "message": "Adjust after merge", "committedDate": "2020-03-24T06:45:53Z", "type": "commit"}, {"oid": "65d9ea2e64db41ffb10b546a67c4319a8fa386a1", "url": "https://github.com/graphhopper/graphhopper/commit/65d9ea2e64db41ffb10b546a67c4319a8fa386a1", "message": "Add comment/todo", "committedDate": "2020-03-25T18:21:01Z", "type": "commit"}, {"oid": "e705bc2ea7455506a52a46979b0ea24d797f50b9", "url": "https://github.com/graphhopper/graphhopper/commit/e705bc2ea7455506a52a46979b0ea24d797f50b9", "message": "Merge branch 'master' into profile_parameter\n\n# Conflicts:\n#\tweb-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java\n#\tweb-bundle/src/main/java/com/graphhopper/resources/RouteResource.java\n#\tweb-bundle/src/main/java/com/graphhopper/resources/SPTResource.java\n#\tweb/src/test/java/com/graphhopper/http/resources/ChangeGraphResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/IsochroneResourceTest.java\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceTurnCostsTest.java", "committedDate": "2020-04-09T07:00:18Z", "type": "commit"}, {"oid": "3fc91f9de6fae3910f155ccdb9154c623010de99", "url": "https://github.com/graphhopper/graphhopper/commit/3fc91f9de6fae3910f155ccdb9154c623010de99", "message": "Minor cleanup", "committedDate": "2020-04-09T07:09:35Z", "type": "commit"}, {"oid": "db8ed3ead9d0d6fb9fe8e64eb5db6d0e84fd7757", "url": "https://github.com/graphhopper/graphhopper/commit/db8ed3ead9d0d6fb9fe8e64eb5db6d0e84fd7757", "message": "Merge branch 'master' into profile_parameter", "committedDate": "2020-04-14T10:43:18Z", "type": "commit"}, {"oid": "d75f924ca6c228ad05eb4ad52dc82926c4cd905b", "url": "https://github.com/graphhopper/graphhopper/commit/d75f924ca6c228ad05eb4ad52dc82926c4cd905b", "message": "Update some todos", "committedDate": "2020-04-14T11:52:13Z", "type": "commit"}, {"oid": "08339c8e39f9c7dadf600ef5b15e245202487629", "url": "https://github.com/graphhopper/graphhopper/commit/08339c8e39f9c7dadf600ef5b15e245202487629", "message": "Merge branch 'master' into profile_parameter", "committedDate": "2020-04-16T09:07:51Z", "type": "commit"}, {"oid": "677ef7acf1527f7cf11855e59dcc5312a767a58a", "url": "https://github.com/graphhopper/graphhopper/commit/677ef7acf1527f7cf11855e59dcc5312a767a58a", "message": "Revert web ui stuff", "committedDate": "2020-04-16T09:11:16Z", "type": "commit"}, {"oid": "ad9fab074c2264b8a9f129b0ae02dd583e5499d0", "url": "https://github.com/graphhopper/graphhopper/commit/ad9fab074c2264b8a9f129b0ae02dd583e5499d0", "message": "Merge branch 'master' into profile_parameter", "committedDate": "2020-04-16T11:24:56Z", "type": "commit"}, {"oid": "91b3fb747847eae67d8cdf572a764961fb119f18", "url": "https://github.com/graphhopper/graphhopper/commit/91b3fb747847eae67d8cdf572a764961fb119f18", "message": "No longer allow legacy parameters when profile parameter is used", "committedDate": "2020-04-16T11:27:10Z", "type": "commit"}, {"oid": "ba6b9aff22cb05d730121efe00fd352f71dededd", "url": "https://github.com/graphhopper/graphhopper/commit/ba6b9aff22cb05d730121efe00fd352f71dededd", "message": "Update", "committedDate": "2020-04-16T13:10:38Z", "type": "commit"}, {"oid": "23913ccf3386771ea23bea7cf248b125673983e3", "url": "https://github.com/graphhopper/graphhopper/commit/23913ccf3386771ea23bea7cf248b125673983e3", "message": "Merge branch 'master' into profile_parameter\n\n# Conflicts:\n#\tweb/src/test/java/com/graphhopper/http/resources/RouteResourceTest.java", "committedDate": "2020-04-16T21:12:20Z", "type": "commit"}, {"oid": "97b2c8ee6f5d3ad6c215f062cb56fe1772fed943", "url": "https://github.com/graphhopper/graphhopper/commit/97b2c8ee6f5d3ad6c215f062cb56fe1772fed943", "message": "A few more tests and fixes", "committedDate": "2020-04-16T22:19:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNjU0Mw==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410026543", "bodyText": "I wonder if we should remove get/SetVehicle/Weighting from HintsMap now? The problem is that when using GraphHopper as a Java library we pass GHRequest including a HintsMap to GraphHopper#route, but this method no longer accepts weighting/vehicle but needs a profile instead. On the other hand when we use GHRequest on the client side via GraphHopperWeb one can still use vehicle/weighting due to the ProfileResolver in the RouteResource (even though also here profile is the recommended parameter now). We could also  copy&paste GHRequest and HintsMap on the client side and adjust both versions accordingly, but I do not see a real reason to keep vehicle/weighting? When someone is updating the client version there will be a compile error and he/she will be forced to replace setVehicle/Weighting with setProfile, but is this a problem? Using older clients still works of course (because of ProfileResolver).\nUpdate: This is what it would look like without HintsMap: d2cc097. Maybe we could extract a constant for \"vehicle\" and \"weighting\", but otherwise I do not see a reason not to remove it at the moment.", "author": "easbar", "createdAt": "2020-04-17T06:55:21Z", "path": "api/src/main/java/com/graphhopper/GHRequest.java", "diffHunk": "@@ -243,6 +243,8 @@ public String getWeighting() {\n      * By default it supports fastest and shortest. Or specify empty to use default.\n      */\n     public GHRequest setWeighting(String w) {\n+        // todonow: setting weighting/vehicle only works on the client side, but no longer with GHRequest in GraphHopper\n+        // should we remove it?", "originalCommit": "97b2c8ee6f5d3ad6c215f062cb56fe1772fed943", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE1NTk4Mw==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410155983", "bodyText": "When someone is updating the client version there will be a compile error and he/she will be forced to replace setVehicle/Weighting with setProfile, but is this a problem?\n\nIn general this would be nice to have. Could we even remove HintsMap completely (replace with PMap)?\nAnd I see hints().putObject(\"vehicle\", \"bike\") is still possible so removing this should not be a problem. (E.g. we might not be fast enough to accept \"profile\" in the public API)", "author": "karussell", "createdAt": "2020-04-17T11:13:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE2Mzk0Mg==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410163942", "bodyText": "In general this would be nice to have. Could we even remove HintsMap completely (replace with PMap)?\n\nAbsolutely I already did this here: d2cc097", "author": "easbar", "createdAt": "2020-04-17T11:32:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNjU0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "d2cc0978c3dd284007816c7de5a1107d90284d7a", "chunk": "diff --git a/api/src/main/java/com/graphhopper/GHRequest.java b/api/src/main/java/com/graphhopper/GHRequest.java\nindex 8972b713b..3c45b0fb5 100644\n--- a/api/src/main/java/com/graphhopper/GHRequest.java\n+++ b/api/src/main/java/com/graphhopper/GHRequest.java\n\n@@ -235,33 +235,7 @@ public class GHRequest {\n         return this;\n     }\n \n-    public String getWeighting() {\n-        return hints.getWeighting();\n-    }\n-\n-    /**\n-     * By default it supports fastest and shortest. Or specify empty to use default.\n-     */\n-    public GHRequest setWeighting(String w) {\n-        // todonow: setting weighting/vehicle only works on the client side, but no longer with GHRequest in GraphHopper\n-        // should we remove it?\n-        hints.setWeighting(w);\n-        return this;\n-    }\n-\n-    public String getVehicle() {\n-        return hints.getVehicle();\n-    }\n-\n-    /**\n-     * Specify car, bike or foot. Or specify empty to use default.\n-     */\n-    public GHRequest setVehicle(String vehicle) {\n-        hints.setVehicle(vehicle);\n-        return this;\n-    }\n-\n-    public HintsMap getHints() {\n+    public PMap getHints() {\n         return hints;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNjkyOA==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410026928", "bodyText": "I guess this is so because the POST endpoint does not support gpx and we can leave as is here?", "author": "easbar", "createdAt": "2020-04-17T06:56:13Z", "path": "client-hc/src/test/java/com/graphhopper/api/GraphHopperWebIT.java", "diffHunk": "@@ -248,6 +248,8 @@ public void doNotReadFinishInstruction() {\n \n     @Test\n     public void testSimpleExport() {\n+        // todonow: is it ok/meant to be that export() always uses get (regardless of the setting), looks like our\n+        // POST endpoint does not support gpx yet?", "originalCommit": "97b2c8ee6f5d3ad6c215f062cb56fe1772fed943", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE1NzcxMQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410157711", "bodyText": "Ah, good catch. I think we should always prefer POST as the request is optionally compressed and has no other limitations (?)\n\nlooks like our POST endpoint does not support gpx yet?\n\ndoPost should support it or why do you think it does not?", "author": "karussell", "createdAt": "2020-04-17T11:17:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNjkyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE2Njg5Mg==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410166892", "bodyText": "doPost should support it or why do you think it does not?\n\nHm, yes you are right it should already support it. Ok then we should make GraphHopperWeb#export respect the postRequest flag. If I do this the test fails, but maybe thats for another issue. -> #1994", "author": "easbar", "createdAt": "2020-04-17T11:39:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNjkyOA=="}], "type": "inlineReview", "revised_code": {"commit": "891d3337f3ea227ee01023c74e673d565909ae6e", "chunk": "diff --git a/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebIT.java b/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebIT.java\nindex 5f8db1cfe..1ff02cb51 100644\n--- a/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebIT.java\n+++ b/client-hc/src/test/java/com/graphhopper/api/GraphHopperWebIT.java\n\n@@ -248,8 +247,6 @@ public class GraphHopperWebIT {\n \n     @Test\n     public void testSimpleExport() {\n-        // todonow: is it ok/meant to be that export() always uses get (regardless of the setting), looks like our\n-        // POST endpoint does not support gpx yet?\n         GHRequest req = new GHRequest().\n                 addPoint(new GHPoint(49.6724, 11.3494)).\n                 addPoint(new GHPoint(49.6550, 11.4180));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNzI0NQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410027245", "bodyText": "Do you remember the reason this is done here instead of in GraphHopper? Can we move it over now?", "author": "easbar", "createdAt": "2020-04-17T06:57:01Z", "path": "web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java", "diffHunk": "@@ -112,6 +107,7 @@ public Response doGet(\n                     + \"or equal to the number of points (\" + requestPoints.size() + \")\");\n \n         // TODO these checks should be only necessary once in the core, e.g. pointHints problems are currently ignored for POST requests\n+        // todonow: maybe its time to fix this?", "originalCommit": "97b2c8ee6f5d3ad6c215f062cb56fe1772fed943", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE1OTI3Nw==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410159277", "bodyText": "Good question. I do not remember a reason why this is here.", "author": "karussell", "createdAt": "2020-04-17T11:21:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNzI0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NzE4MQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410187181", "bodyText": "Maybe for backward compatibility? Is it ok to add these checks for POST as well? If yes we can move them into GraphHopper#calcPaths.", "author": "easbar", "createdAt": "2020-04-17T12:24:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNzI0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4ODgwNg==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410188806", "bodyText": "But there is more: Also the enableElevation, pointsEmpty checks and the \"start heading\" logic is missing for POST? All this should probably go into GraphHopper#calcPaths as well? Maybe this is also for another issue? -> #1996", "author": "easbar", "createdAt": "2020-04-17T12:27:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNzI0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyMDEwMw==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410220103", "bodyText": "Should be good for POST too, yes. Good idea with the new issue.", "author": "karussell", "createdAt": "2020-04-17T13:25:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNzI0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "612e430c8401fc0fc4b1e22c7fa676d2a04e97f3", "chunk": "diff --git a/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java b/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java\nindex 3bbb457ea..084b789bc 100644\n--- a/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java\n+++ b/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java\n\n@@ -107,7 +106,7 @@ public class RouteResource {\n                     + \"or equal to the number of points (\" + requestPoints.size() + \")\");\n \n         // TODO these checks should be only necessary once in the core, e.g. pointHints problems are currently ignored for POST requests\n-        // todonow: maybe its time to fix this?\n+        // -> #1996\n         if (pointHints.size() > 0 && pointHints.size() != requestPoints.size())\n             throw new IllegalArgumentException(\"If you pass \" + POINT_HINT + \", you need to pass exactly one hint for every point, empty hints will be ignored\");\n         if (curbsides.size() > 0 && curbsides.size() != requestPoints.size())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNzMyNQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410027325", "bodyText": "Probably not?", "author": "easbar", "createdAt": "2020-04-17T06:57:13Z", "path": "web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java", "diffHunk": "@@ -151,10 +148,11 @@ public Response doGet(\n \n         GHResponse ghResponse = graphHopper.route(request);\n \n-        float took = sw.stop().getSeconds();\n+        long took = sw.stop().getNanos() / 1000;\n         String infoStr = httpReq.getRemoteAddr() + \" \" + httpReq.getLocale() + \" \" + httpReq.getHeader(\"User-Agent\");\n+        // todonow: is there any reason we should keep logging vehicle/weighting? maybe to keep track of the number of 'legacy' requests or something?", "originalCommit": "97b2c8ee6f5d3ad6c215f062cb56fe1772fed943", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE2MDE4Mw==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410160183", "bodyText": "I would indeed probably keep it until 2.0?", "author": "karussell", "createdAt": "2020-04-17T11:23:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNzMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4Njg0OQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410186849", "bodyText": "For GET its already contained in httpReq.getQueryString(). Same for algoStr, but I added it explicitly now.", "author": "easbar", "createdAt": "2020-04-17T12:23:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNzMyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "faf8ea2458edb2f25c1e44eb81cb661f38c7c95a", "chunk": "diff --git a/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java b/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java\nindex 3bbb457ea..7ccd84da1 100644\n--- a/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java\n+++ b/web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java\n\n@@ -150,9 +150,8 @@ public class RouteResource {\n \n         long took = sw.stop().getNanos() / 1000;\n         String infoStr = httpReq.getRemoteAddr() + \" \" + httpReq.getLocale() + \" \" + httpReq.getHeader(\"User-Agent\");\n-        // todonow: is there any reason we should keep logging vehicle/weighting? maybe to keep track of the number of 'legacy' requests or something?\n         String logStr = httpReq.getQueryString() + \" \" + infoStr + \" \" + requestPoints + \", took:\"\n-                + took + \"micros, \" + algoStr + \", \" + profileName;\n+                + took + \"micros, algo: \" + algoStr + \", profile: \" + profileName + \", \" + weightingVehicleLogStr;\n \n         if (ghResponse.hasErrors()) {\n             logger.error(logStr + \", errors:\" + ghResponse.getErrors());\n"}}, {"oid": "0bfc645a56808602b8b2b43a55e2b1343b66f60b", "url": "https://github.com/graphhopper/graphhopper/commit/0bfc645a56808602b8b2b43a55e2b1343b66f60b", "message": "Fix test", "committedDate": "2020-04-17T11:13:45Z", "type": "commit"}, {"oid": "d2cc0978c3dd284007816c7de5a1107d90284d7a", "url": "https://github.com/graphhopper/graphhopper/commit/d2cc0978c3dd284007816c7de5a1107d90284d7a", "message": "Remove HintsMap", "committedDate": "2020-04-17T11:14:13Z", "type": "commit"}, {"oid": "891d3337f3ea227ee01023c74e673d565909ae6e", "url": "https://github.com/graphhopper/graphhopper/commit/891d3337f3ea227ee01023c74e673d565909ae6e", "message": "Remove some todos", "committedDate": "2020-04-17T11:44:39Z", "type": "commit"}, {"oid": "faf8ea2458edb2f25c1e44eb81cb661f38c7c95a", "url": "https://github.com/graphhopper/graphhopper/commit/faf8ea2458edb2f25c1e44eb81cb661f38c7c95a", "message": "Put back vehicle/weighting logs", "committedDate": "2020-04-17T12:21:45Z", "type": "commit"}, {"oid": "612e430c8401fc0fc4b1e22c7fa676d2a04e97f3", "url": "https://github.com/graphhopper/graphhopper/commit/612e430c8401fc0fc4b1e22c7fa676d2a04e97f3", "message": "Update todo", "committedDate": "2020-04-17T13:13:49Z", "type": "commit"}, {"oid": "cddbfedc29699f8846ab8f5c58939ed4633f7804", "url": "https://github.com/graphhopper/graphhopper/commit/cddbfedc29699f8846ab8f5c58939ed4633f7804", "message": "Merge branch 'master' into profile_parameter", "committedDate": "2020-04-17T13:14:46Z", "type": "commit"}, {"oid": "c07fa0263fb0b286f89375701019355c0f5740a5", "url": "https://github.com/graphhopper/graphhopper/commit/c07fa0263fb0b286f89375701019355c0f5740a5", "message": "Merge branch 'master' into profile_parameter", "committedDate": "2020-04-17T13:45:34Z", "type": "commit"}, {"oid": "a59067edb773c7d48bdda9cdb9663d261df81e4e", "url": "https://github.com/graphhopper/graphhopper/commit/a59067edb773c7d48bdda9cdb9663d261df81e4e", "message": "Update changelog", "committedDate": "2020-04-17T13:47:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwODE5OA==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410508198", "bodyText": "@easbar for better readability IMO we should use milliseconds: + took/1000f + \"ms...? (or just Math.round(took/1000))", "author": "karussell", "createdAt": "2020-04-17T23:04:09Z", "path": "web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java", "diffHunk": "@@ -151,10 +148,10 @@ public Response doGet(\n \n         GHResponse ghResponse = graphHopper.route(request);\n \n-        float took = sw.stop().getSeconds();\n+        long took = sw.stop().getNanos() / 1000;\n         String infoStr = httpReq.getRemoteAddr() + \" \" + httpReq.getLocale() + \" \" + httpReq.getHeader(\"User-Agent\");\n         String logStr = httpReq.getQueryString() + \" \" + infoStr + \" \" + requestPoints + \", took:\"\n-                + took + \", \" + algoStr + \", \" + weighting + \", \" + vehicleStr;\n+                + took + \"micros, algo: \" + algoStr + \", profile: \" + profileName + \", \" + weightingVehicleLogStr;", "originalCommit": "a59067edb773c7d48bdda9cdb9663d261df81e4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2MTIxNw==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410661217", "bodyText": "Ok micros might still be a bit too optimistic ;) I changed to millisecond with one decimal place", "author": "easbar", "createdAt": "2020-04-18T07:16:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwODE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MTE5NQ==", "url": "https://github.com/graphhopper/graphhopper/pull/1934#discussion_r410691195", "bodyText": "\ud83d\udc4d", "author": "karussell", "createdAt": "2020-04-18T12:24:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwODE5OA=="}], "type": "inlineReview", "revised_code": null}]}