{"pr_number": 2188, "pr_title": "Refactor spatialrule border handling", "pr_createdAt": "2020-11-24T15:47:27Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/2188", "timeline": [{"oid": "d195b9936e43826527ca2ea00f1fa0fb572f245f", "url": "https://github.com/graphhopper/graphhopper/commit/d195b9936e43826527ca2ea00f1fa0fb572f245f", "message": "Move SpatialRuleFactory into its own file", "committedDate": "2020-11-24T14:32:15Z", "type": "commit"}, {"oid": "6da48c3b235c538e6fb45816c86e38cc95970246", "url": "https://github.com/graphhopper/graphhopper/commit/6da48c3b235c538e6fb45816c86e38cc95970246", "message": "Directly use an envelope", "committedDate": "2020-11-24T14:32:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NjU5MQ==", "url": "https://github.com/graphhopper/graphhopper/pull/2188#discussion_r529776591", "bodyText": "This change should be included in the changelog.\nAnd is this used elsewhere or why did you make it public? E.g. it could be used in Measurement?", "author": "karussell", "createdAt": "2020-11-24T18:05:08Z", "path": "core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupHelper.java", "diffHunk": "@@ -41,7 +41,7 @@\n public class SpatialRuleLookupHelper {\n \n     private static final Logger logger = LoggerFactory.getLogger(SpatialRuleLookupHelper.class);\n-    static String JSON_ID_FIELD = \"ISO_A3\";\n+    public static String JSON_ID_FIELD = \"ISO3166-1:alpha3\";", "originalCommit": "d6c6925b68856c96ffff685f7311de66b9166bb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE3NzM0Mg==", "url": "https://github.com/graphhopper/graphhopper/pull/2188#discussion_r530177342", "bodyText": "Probably a relict from my other PR.", "author": "otbutz", "createdAt": "2020-11-25T08:11:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NjU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk0MzYzMA==", "url": "https://github.com/graphhopper/graphhopper/pull/2188#discussion_r530943630", "bodyText": "Thanks! IMO it should be still included in the changelog. GeoJSON files with ISO_A4 will now break (?)", "author": "karussell", "createdAt": "2020-11-26T10:55:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NjU5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAwOTAxMg==", "url": "https://github.com/graphhopper/graphhopper/pull/2188#discussion_r531009012", "bodyText": "Done", "author": "otbutz", "createdAt": "2020-11-26T12:52:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NjU5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f1e5458fa0e89e9e0cb04ab39af66e4c35942794", "chunk": "diff --git a/core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupHelper.java b/core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupHelper.java\nindex 1c3adab10..0ca56b396 100644\n--- a/core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupHelper.java\n+++ b/core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupHelper.java\n\n@@ -41,7 +41,7 @@ import java.util.*;\n public class SpatialRuleLookupHelper {\n \n     private static final Logger logger = LoggerFactory.getLogger(SpatialRuleLookupHelper.class);\n-    public static String JSON_ID_FIELD = \"ISO3166-1:alpha3\";\n+    static final String JSON_ID_FIELD = \"ISO3166-1:alpha3\";\n \n     /**\n      * This method limits the JsonFeatures to the specified subset\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgwMjQ1Nw==", "url": "https://github.com/graphhopper/graphhopper/pull/2188#discussion_r529802457", "bodyText": "Why is this necessary and not just borders.add(intersection)? Isn't intersection always a Polygon?", "author": "karussell", "createdAt": "2020-11-24T18:48:01Z", "path": "core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupBuilder.java", "diffHunk": "@@ -53,27 +54,27 @@ public static SpatialRuleLookup buildIndex(List<JsonFeatureCollection> jsonFeatu\n                 List<Polygon> borders = new ArrayList<>();\n                 for (int i = 0; i < jsonFeature.getGeometry().getNumGeometries(); i++) {\n                     Geometry poly = jsonFeature.getGeometry().getGeometryN(i);\n-                    if (poly instanceof Polygon)\n-                        borders.add((Polygon) poly);\n-                    else\n+                    if (poly instanceof Polygon) {\n+                        Geometry intersection = bboxGeometry.intersection(poly);\n+                        if (!intersection.isEmpty()) {\n+                            PolygonExtracter.getPolygons(intersection, borders);", "originalCommit": "d6c6925b68856c96ffff685f7311de66b9166bb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE4MDE5Mg==", "url": "https://github.com/graphhopper/graphhopper/pull/2188#discussion_r530180192", "bodyText": "Geometry.intersection(Geometry other):\n\nIf the result is empty, it is an atomic geometry with the dimension of the lowest input dimension\n\nFor two polygons this would result in an empty polygon being picked up by the PolygonExtracter.", "author": "otbutz", "createdAt": "2020-11-25T08:17:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgwMjQ1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "cc404c8cf8eba4ebad42c736e1a1e62068305120", "chunk": "diff --git a/core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupBuilder.java b/core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupBuilder.java\nindex 9423e7a0e..07c905cee 100644\n--- a/core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupBuilder.java\n+++ b/core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupBuilder.java\n\n@@ -54,27 +49,27 @@ public class SpatialRuleLookupBuilder {\n                 List<Polygon> borders = new ArrayList<>();\n                 for (int i = 0; i < jsonFeature.getGeometry().getNumGeometries(); i++) {\n                     Geometry poly = jsonFeature.getGeometry().getGeometryN(i);\n-                    if (poly instanceof Polygon) {\n-                        Geometry intersection = bboxGeometry.intersection(poly);\n-                        if (!intersection.isEmpty()) {\n-                            PolygonExtracter.getPolygons(intersection, borders);\n-                        }\n-                    } else {\n+                    if (poly instanceof Polygon)\n+                        borders.add((Polygon) poly);\n+                    else\n                         throw new IllegalArgumentException(\"Geometry for \" + id + \" (\" + i + \") not supported \" + poly.getClass().getSimpleName());\n-                    }\n                 }\n \n-                SpatialRule spatialRule = borders.isEmpty() ? null : spatialRuleFactory.createSpatialRule(Helper.toLowerCase(id), borders);\n+                SpatialRule spatialRule = spatialRuleFactory.createSpatialRule(Helper.toLowerCase(id), borders);\n                 if (spatialRule != null) {\n                     spatialRules.add(spatialRule);\n+                    for (Polygon polygon : spatialRule.getBorders()) {\n+                        envelope.expandToInclude(polygon.getEnvelopeInternal());\n+                    }\n                 }\n             }\n         }\n \n-        if (spatialRules.isEmpty())\n+        Envelope calculatedBounds = envelope.intersection(maxBBox);\n+        if (calculatedBounds.isNull())\n             return SpatialRuleLookup.EMPTY;\n \n-        SpatialRuleLookup spatialRuleLookup = new SpatialRuleLookupJTS(spatialRules);\n+        SpatialRuleLookup spatialRuleLookup = new SpatialRuleLookupJTS(spatialRules, calculatedBounds);\n         logger.info(\"Created the SpatialRuleLookup with the following rules: {}\", Arrays.toString(spatialRules.toArray()));\n         return spatialRuleLookup;\n     }\n"}}, {"oid": "f1e5458fa0e89e9e0cb04ab39af66e4c35942794", "url": "https://github.com/graphhopper/graphhopper/commit/f1e5458fa0e89e9e0cb04ab39af66e4c35942794", "message": "Switch to `intersects()` for faster PIP checks", "committedDate": "2020-11-26T10:28:59Z", "type": "forcePushed"}, {"oid": "cc404c8cf8eba4ebad42c736e1a1e62068305120", "url": "https://github.com/graphhopper/graphhopper/commit/cc404c8cf8eba4ebad42c736e1a1e62068305120", "message": "Use intersection free border polygons", "committedDate": "2020-11-26T11:18:24Z", "type": "commit"}, {"oid": "a919503f942458baa96795c8fd4212c2d46e78fd", "url": "https://github.com/graphhopper/graphhopper/commit/a919503f942458baa96795c8fd4212c2d46e78fd", "message": "Use intersections with the max bbox as spatial rule borders", "committedDate": "2020-11-26T11:18:24Z", "type": "commit"}, {"oid": "4db016d0a2ab482ab94e282e2175e2af2e311dd5", "url": "https://github.com/graphhopper/graphhopper/commit/4db016d0a2ab482ab94e282e2175e2af2e311dd5", "message": "Treat `JSON_ID_FIELD` as a constant", "committedDate": "2020-11-26T11:18:25Z", "type": "commit"}, {"oid": "1da4a3b23a7d9cf672497b195d46e7f548d9e94d", "url": "https://github.com/graphhopper/graphhopper/commit/1da4a3b23a7d9cf672497b195d46e7f548d9e94d", "message": "Provide a find method for Country", "committedDate": "2020-11-26T11:18:25Z", "type": "commit"}, {"oid": "e6c285635f56384509bae018c699afc5084966ae", "url": "https://github.com/graphhopper/graphhopper/commit/e6c285635f56384509bae018c699afc5084966ae", "message": "Use Country.find() to lookup enum value", "committedDate": "2020-11-26T11:18:25Z", "type": "commit"}, {"oid": "da0e02cfd93a194fa33354459bd076cdc9c71403", "url": "https://github.com/graphhopper/graphhopper/commit/da0e02cfd93a194fa33354459bd076cdc9c71403", "message": "Use static helper method", "committedDate": "2020-11-26T11:18:25Z", "type": "commit"}, {"oid": "021b85a608950152d6c32a3c61a6aa7381cb841b", "url": "https://github.com/graphhopper/graphhopper/commit/021b85a608950152d6c32a3c61a6aa7381cb841b", "message": "Mark JSON_ID_FIELD as a package scoped constant", "committedDate": "2020-11-26T11:18:25Z", "type": "commit"}, {"oid": "312e8c3d556225ef20d8f5a4301004b735f355f8", "url": "https://github.com/graphhopper/graphhopper/commit/312e8c3d556225ef20d8f5a4301004b735f355f8", "message": "Switch to `intersects()` for faster PIP checks", "committedDate": "2020-11-26T11:18:25Z", "type": "commit"}, {"oid": "312e8c3d556225ef20d8f5a4301004b735f355f8", "url": "https://github.com/graphhopper/graphhopper/commit/312e8c3d556225ef20d8f5a4301004b735f355f8", "message": "Switch to `intersects()` for faster PIP checks", "committedDate": "2020-11-26T11:18:25Z", "type": "forcePushed"}, {"oid": "f5cd2123e341d53ba071db062d34b9a2340986ee", "url": "https://github.com/graphhopper/graphhopper/commit/f5cd2123e341d53ba071db062d34b9a2340986ee", "message": "Mention different id field in the changelog", "committedDate": "2020-11-26T12:52:41Z", "type": "commit"}, {"oid": "f7b17438a117b7bcd14a579d5354e02d8538b664", "url": "https://github.com/graphhopper/graphhopper/commit/f7b17438a117b7bcd14a579d5354e02d8538b664", "message": "Merge branch 'master' into spatial_rules_refactor", "committedDate": "2020-11-26T14:27:13Z", "type": "commit"}]}