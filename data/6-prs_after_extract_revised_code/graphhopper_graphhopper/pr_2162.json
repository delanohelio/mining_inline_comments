{"pr_number": 2162, "pr_title": "CustomWeighting: ensure Map is ordered", "pr_createdAt": "2020-10-24T09:44:39Z", "pr_url": "https://github.com/graphhopper/graphhopper/pull/2162", "timeline": [{"oid": "9e951bff8bcc0e64acce021c9fe6ff31f67e451f", "url": "https://github.com/graphhopper/graphhopper/commit/9e951bff8bcc0e64acce021c9fe6ff31f67e451f", "message": "CustomWeighting: ensure Map is ordered", "committedDate": "2020-10-23T22:09:04Z", "type": "commit"}, {"oid": "98b90b202d6f906b11277bbd32fd926aabc09fbb", "url": "https://github.com/graphhopper/graphhopper/commit/98b90b202d6f906b11277bbd32fd926aabc09fbb", "message": "minor", "committedDate": "2020-10-24T09:47:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM3NDYyMg==", "url": "https://github.com/graphhopper/graphhopper/pull/2162#discussion_r511374622", "bodyText": "junit 5 has assertThrows(...).", "author": "easbar", "createdAt": "2020-10-24T10:03:18Z", "path": "core/src/test/java/com/graphhopper/routing/weighting/CustomWeightingTest.java", "diffHunk": "@@ -243,6 +244,19 @@ public void testIntEncodedValue() {\n         assertEquals(3.70, weighting.calcEdgeWeight(fastEdge, false), 0.01);\n     }\n \n+    @Test\n+    public void unorderedMapShouldFail() {\n+        Map map = new HashMap<>();\n+        map.put(\" > 1.5\", 0.2); // allow decimal values in range even for int encoded value\n+        CustomModel vehicleModel = new CustomModel();\n+        vehicleModel.getPriority().put(\"lanes\", map);\n+        try {", "originalCommit": "98b90b202d6f906b11277bbd32fd926aabc09fbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM4NDMzNg==", "url": "https://github.com/graphhopper/graphhopper/pull/2162#discussion_r511384336", "bodyText": "Ah, thanks. Old habits are hard to kill :)", "author": "karussell", "createdAt": "2020-10-24T10:29:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM3NDYyMg=="}], "type": "inlineReview", "revised_code": {"commit": "2fb7477d86f6550a27f1798ef47b64dce913b2cb", "chunk": "diff --git a/core/src/test/java/com/graphhopper/routing/weighting/CustomWeightingTest.java b/core/src/test/java/com/graphhopper/routing/weighting/CustomWeightingTest.java\nindex e350da0a5..9cea03c84 100644\n--- a/core/src/test/java/com/graphhopper/routing/weighting/CustomWeightingTest.java\n+++ b/core/src/test/java/com/graphhopper/routing/weighting/CustomWeightingTest.java\n\n@@ -250,11 +249,7 @@ public class CustomWeightingTest {\n         map.put(\" > 1.5\", 0.2); // allow decimal values in range even for int encoded value\n         CustomModel vehicleModel = new CustomModel();\n         vehicleModel.getPriority().put(\"lanes\", map);\n-        try {\n-            createWeighting(vehicleModel);\n-            assertTrue(false);\n-        } catch (Exception ex) {\n-        }\n+        assertThrows(IllegalArgumentException.class, () -> createWeighting(vehicleModel));\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM3NDc0MA==", "url": "https://github.com/graphhopper/graphhopper/pull/2162#discussion_r511374740", "bodyText": "whitespace", "author": "easbar", "createdAt": "2020-10-24T10:03:33Z", "path": "example/src/main/java/com/graphhopper/example/RoutingExample.java", "diffHunk": "@@ -97,10 +93,12 @@ public static void headingAndAlternativeRoute(GraphHopper hopper) {\n                 addPoint(new GHPoint(42.508774, 1.535414)).addPoint(new GHPoint(42.506595, 1.528795)).\n                 setHeadings(Arrays.asList(180d, 90d)).\n                 // use flexible mode (i.e. disable contraction hierarchies) to make heading and pass_through working\n-                putHint(Parameters.CH.DISABLE, true);\n+                        putHint(Parameters.CH.DISABLE, true);", "originalCommit": "98b90b202d6f906b11277bbd32fd926aabc09fbb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c8ab97c0524e5690abafcd39252a26ceb8c43be6", "chunk": "diff --git a/example/src/main/java/com/graphhopper/example/RoutingExample.java b/example/src/main/java/com/graphhopper/example/RoutingExample.java\nindex 426401a4b..4a1ba4437 100644\n--- a/example/src/main/java/com/graphhopper/example/RoutingExample.java\n+++ b/example/src/main/java/com/graphhopper/example/RoutingExample.java\n\n@@ -93,7 +93,7 @@ public class RoutingExample {\n                 addPoint(new GHPoint(42.508774, 1.535414)).addPoint(new GHPoint(42.506595, 1.528795)).\n                 setHeadings(Arrays.asList(180d, 90d)).\n                 // use flexible mode (i.e. disable contraction hierarchies) to make heading and pass_through working\n-                        putHint(Parameters.CH.DISABLE, true);\n+                putHint(Parameters.CH.DISABLE, true);\n         // if you have via points you can avoid U-turns there with\n         // req.getHints().putObject(Parameters.Routing.PASS_THROUGH, true);\n         GHResponse res = hopper.route(req);\n"}}, {"oid": "c8ab97c0524e5690abafcd39252a26ceb8c43be6", "url": "https://github.com/graphhopper/graphhopper/commit/c8ab97c0524e5690abafcd39252a26ceb8c43be6", "message": "cleaner juni5 assertThrows", "committedDate": "2020-10-24T10:37:32Z", "type": "commit"}, {"oid": "2fb7477d86f6550a27f1798ef47b64dce913b2cb", "url": "https://github.com/graphhopper/graphhopper/commit/2fb7477d86f6550a27f1798ef47b64dce913b2cb", "message": "one more assertThrow", "committedDate": "2020-10-25T22:28:40Z", "type": "commit"}]}