{"pr_number": 1797, "pr_title": "Added exception handler around link type code in case rel string is i\u2026", "pr_createdAt": "2020-11-11T02:02:02Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1797", "timeline": [{"oid": "b8701cfb2590368388472f775b9090a919b6d8c4", "url": "https://github.com/fcrepo/fcrepo/commit/b8701cfb2590368388472f775b9090a919b6d8c4", "message": "Added exception handler around link type code in case rel string is invalid.\nproduces 400 bad request exception/status\n\n- getTypes() in CreateResourceServiceImpl.java uses java stream to parse the\n  rel type in a link header. if the rel type is invalid or corrupt, it causes\n  a stack trace in the server as it equals a null string object that it tries\n  to operate upon. The fix is to add an exception handler around the parsing\n  code to throw a 400 bad request exception that should pass back a 400 status\n  to the client.\n\nResolves https://jira.lyrasis.org/browse/FCREPO-3367", "committedDate": "2020-11-11T01:54:38Z", "type": "commit"}, {"oid": "6eb0298d89b1643b685de12c76c44e32037f3287", "url": "https://github.com/fcrepo/fcrepo/commit/6eb0298d89b1643b685de12c76c44e32037f3287", "message": "Removed commented out code in solution\n\nResolves https://jira.lyrasis.org/browse/FCREPO-3367", "committedDate": "2020-11-11T02:26:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxMjM4NA==", "url": "https://github.com/fcrepo/fcrepo/pull/1797#discussion_r521412384", "bodyText": "Is there a reason that getLinkHeaders needs to be called a second time?", "author": "pwinckles", "createdAt": "2020-11-11T14:52:20Z", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -236,9 +237,14 @@ private void checkParent(final String txId, final PersistentStorageSession pSess\n      * @return a list of LINK headers with rel=\"type\"\n      */\n     private List<String> getTypes(final List<String> headers) {\n-        return getLinkHeaders(headers) == null ? emptyList() : getLinkHeaders(headers).stream()\n-                .filter(p -> p.getRel().equalsIgnoreCase(\"type\")).map(Link::getUri)\n-                .map(URI::toString).collect(Collectors.toList());\n+        final List hdrobjs = getLinkHeaders(headers);\n+        try {\n+            return hdrobjs == null ? emptyList() : getLinkHeaders(headers).stream()", "originalCommit": "6eb0298d89b1643b685de12c76c44e32037f3287", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "613dc276d3a3ba2bbc56c35dcacaef61352ae55f", "chunk": "diff --git a/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java b/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java\nindex 4ee7bbfee0..c6232ad62b 100644\n--- a/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java\n+++ b/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java\n\n@@ -237,9 +237,9 @@ public class CreateResourceServiceImpl extends AbstractService implements Create\n      * @return a list of LINK headers with rel=\"type\"\n      */\n     private List<String> getTypes(final List<String> headers) {\n-        final List hdrobjs = getLinkHeaders(headers);\n+        final List<Link> hdrobjs = getLinkHeaders(headers);\n         try {\n-            return hdrobjs == null ? emptyList() : getLinkHeaders(headers).stream()\n+            return hdrobjs == null ? emptyList() : hdrobjs.stream()\n                     .filter(p -> p.getRel().equalsIgnoreCase(\"type\")).map(Link::getUri)\n                     .map(URI::toString).collect(Collectors.toList());\n         } catch ( Exception e ) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxMzU2Nw==", "url": "https://github.com/fcrepo/fcrepo/pull/1797#discussion_r521413567", "bodyText": "Can you change this to new BadRequestException(\"Invalid type found\", e) so that the stack trace is not lost.", "author": "pwinckles", "createdAt": "2020-11-11T14:54:05Z", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -236,9 +237,14 @@ private void checkParent(final String txId, final PersistentStorageSession pSess\n      * @return a list of LINK headers with rel=\"type\"\n      */\n     private List<String> getTypes(final List<String> headers) {\n-        return getLinkHeaders(headers) == null ? emptyList() : getLinkHeaders(headers).stream()\n-                .filter(p -> p.getRel().equalsIgnoreCase(\"type\")).map(Link::getUri)\n-                .map(URI::toString).collect(Collectors.toList());\n+        final List hdrobjs = getLinkHeaders(headers);\n+        try {\n+            return hdrobjs == null ? emptyList() : getLinkHeaders(headers).stream()\n+                    .filter(p -> p.getRel().equalsIgnoreCase(\"type\")).map(Link::getUri)\n+                    .map(URI::toString).collect(Collectors.toList());\n+        } catch ( Exception e ) {\n+            throw new BadRequestException(\"Invalid type found\");", "originalCommit": "6eb0298d89b1643b685de12c76c44e32037f3287", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0OTk3NQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1797#discussion_r521449975", "bodyText": "..or maybe to be even more clear:\nnew BadRequestException(\"Invalid Link header type found\", e)", "author": "awoods", "createdAt": "2020-11-11T15:45:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxMzU2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "613dc276d3a3ba2bbc56c35dcacaef61352ae55f", "chunk": "diff --git a/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java b/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java\nindex 4ee7bbfee0..c6232ad62b 100644\n--- a/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java\n+++ b/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java\n\n@@ -237,9 +237,9 @@ public class CreateResourceServiceImpl extends AbstractService implements Create\n      * @return a list of LINK headers with rel=\"type\"\n      */\n     private List<String> getTypes(final List<String> headers) {\n-        final List hdrobjs = getLinkHeaders(headers);\n+        final List<Link> hdrobjs = getLinkHeaders(headers);\n         try {\n-            return hdrobjs == null ? emptyList() : getLinkHeaders(headers).stream()\n+            return hdrobjs == null ? emptyList() : hdrobjs.stream()\n                     .filter(p -> p.getRel().equalsIgnoreCase(\"type\")).map(Link::getUri)\n                     .map(URI::toString).collect(Collectors.toList());\n         } catch ( Exception e ) {\n"}}, {"oid": "613dc276d3a3ba2bbc56c35dcacaef61352ae55f", "url": "https://github.com/fcrepo/fcrepo/commit/613dc276d3a3ba2bbc56c35dcacaef61352ae55f", "message": "Removed commented out line of code (travis build failed last night, local worked)\n\ngetLinkHeaders() called once instead of two/three times\n\nhttps://jira.lyrasis.org/browse/FCREPO-3367", "committedDate": "2020-11-11T15:35:00Z", "type": "commit"}, {"oid": "283dfabd262729915aeaf0ee6bfcd6df8c4da120", "url": "https://github.com/fcrepo/fcrepo/commit/283dfabd262729915aeaf0ee6bfcd6df8c4da120", "message": "Modified exception message to be more descriptive, to be found easier in a\nstack trace (thought I had already modified it, sorry)\n\nhttps://jira.lyrasis.org/browse/FCREPO-3367", "committedDate": "2020-11-11T17:46:29Z", "type": "commit"}]}