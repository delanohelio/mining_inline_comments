{"pr_number": 1642, "pr_title": "Handle binary HTML test", "pr_createdAt": "2020-03-06T19:24:58Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1642", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE0ODc4OA==", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r389148788", "bodyText": "I think we should probably keep these for rendering these types (except, 'Pairtree').\nIs there a reason why you believe they should go away?", "author": "awoods", "createdAt": "2020-03-06T21:18:14Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java", "diffHunk": "@@ -164,10 +164,6 @@ void init() throws IOException {\n \n         templatesMap = templatesMapBuilder\n             .put(REPOSITORY_NAMESPACE + \"RepositoryRoot\", velocity.getTemplate(getTemplateLocation(\"root\")))\n-            .put(REPOSITORY_NAMESPACE + \"Binary\", velocity.getTemplate(getTemplateLocation(\"binary\")))", "originalCommit": "4b20ee79759ef702fac83be5e9965515096b9c63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY3NDQyNw==", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r389674427", "bodyText": "Seemingly a fedora:Binary will always also have a ldp:NonRDFSource type and therefore will get the template using that type. Same with fedora:Container and ldp:RDFSource. So having these seemed redundant.", "author": "whikloj", "createdAt": "2020-03-09T13:38:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE0ODc4OA=="}], "type": "inlineReview", "revised_code": {"commit": "b2b2e4907b1408fd514fc83fef7dd5cb8799d6e3", "chunk": "diff --git a/fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java b/fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java\nindex f388316a67..9dc676029c 100644\n--- a/fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java\n+++ b/fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java\n\n@@ -163,7 +175,7 @@ public class StreamingBaseHtmlProvider implements MessageBodyWriter<RdfNamespace\n             .forEach(key -> templatesMapBuilder.put(key, velocity.getTemplate(getTemplateLocation(key))));\n \n         templatesMap = templatesMapBuilder\n-            .put(REPOSITORY_NAMESPACE + \"RepositoryRoot\", velocity.getTemplate(getTemplateLocation(\"root\")))\n+            .put(REPOSITORY_ROOT.toString(), velocity.getTemplate(getTemplateLocation(\"root\")))\n             .put(NON_RDF_SOURCE.toString(), velocity.getTemplate(getTemplateLocation(\"binary\")))\n             .put(RDF_SOURCE.toString(), velocity.getTemplate(getTemplateLocation(\"resource\"))).build();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjQzNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r389152434", "bodyText": "I suspect this was put in-place to prioritize the \"RepositoryRoot\" template... did your observations indicate otherwise?", "author": "awoods", "createdAt": "2020-03-06T21:27:19Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java", "diffHunk": "@@ -257,9 +253,6 @@ private Template getTemplate(final Model rdf, final Node subject,\n             .map(x -> ((HtmlTemplate) x).value()).filter(templatesMap::containsKey).findFirst()\n             .orElseGet(() -> {\n                 final List<String> types = multiValueURI(rdf.getResource(subject.getURI()), type);\n-                if (types.contains(REPOSITORY_NAMESPACE + \"RepositoryRoot\")) {\n-                    return REPOSITORY_NAMESPACE + \"RepositoryRoot\";", "originalCommit": "4b20ee79759ef702fac83be5e9965515096b9c63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY3OTUwNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r389679504", "bodyText": "I did not do a lot of research into the reason for this. But RepositoryRoot is the first entry in the templateMap and so if this types.contains() is going to match then it should also match in the following types.stream()... and the findFirst() should return the first match, which should be RepositoryRoot.", "author": "whikloj", "createdAt": "2020-03-09T13:42:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjQzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczMzcxOQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r390733719", "bodyText": "Now the test required me to re-add this. Remove it and it works, rebase and it fails. \ud83e\udd37\u200d\u2642", "author": "whikloj", "createdAt": "2020-03-11T03:56:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjQzNA=="}], "type": "inlineReview", "revised_code": {"commit": "b2b2e4907b1408fd514fc83fef7dd5cb8799d6e3", "chunk": "diff --git a/fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java b/fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java\nindex f388316a67..9dc676029c 100644\n--- a/fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java\n+++ b/fcrepo-http-api/src/main/java/org/fcrepo/http/api/responses/StreamingBaseHtmlProvider.java\n\n@@ -253,6 +265,9 @@ public class StreamingBaseHtmlProvider implements MessageBodyWriter<RdfNamespace\n             .map(x -> ((HtmlTemplate) x).value()).filter(templatesMap::containsKey).findFirst()\n             .orElseGet(() -> {\n                 final List<String> types = multiValueURI(rdf.getResource(subject.getURI()), type);\n+                if (types.contains(REPOSITORY_ROOT.toString())) {\n+                    return REPOSITORY_ROOT.toString();\n+                }\n                 return types.stream().filter(templatesMap::containsKey).findFirst().orElse(\"default\");\n             });\n         LOGGER.debug(\"Using template: {}\", tplName);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1Mzk2NQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1642#discussion_r389153965", "bodyText": "This comment can probably now be removed.", "author": "awoods", "createdAt": "2020-03-06T21:30:55Z", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/NonRdfSourceDescriptionImpl.java", "diffHunk": "@@ -47,6 +58,20 @@ public NonRdfSourceDescriptionImpl(final String id,\n     @Override\n     public FedoraResource getDescribedResource() {\n         // TODO must return the described binary", "originalCommit": "4b20ee79759ef702fac83be5e9965515096b9c63", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d08ea694b5076fd82d3c825f25f3a0133bb4e0a3", "chunk": "diff --git a/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/NonRdfSourceDescriptionImpl.java b/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/NonRdfSourceDescriptionImpl.java\nindex 771eb93094..4efa52221c 100644\n--- a/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/NonRdfSourceDescriptionImpl.java\n+++ b/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/models/NonRdfSourceDescriptionImpl.java\n\n@@ -57,7 +57,6 @@ public class NonRdfSourceDescriptionImpl extends FedoraResourceImpl {\n \n     @Override\n     public FedoraResource getDescribedResource() {\n-        // TODO must return the described binary\n         final String describedId = this.getId().replaceAll(\"/\" + FCR_METADATA + \"$\", \"\");\n         try {\n             return this.resourceFactory.getResource(tx, describedId);\n"}}, {"oid": "c9a22814aab44d1f31fe0b104c0d294d530b0801", "url": "https://github.com/fcrepo/fcrepo/commit/c9a22814aab44d1f31fe0b104c0d294d530b0801", "message": "Handle binary HTML test", "committedDate": "2020-03-11T03:19:53Z", "type": "commit"}, {"oid": "b2b2e4907b1408fd514fc83fef7dd5cb8799d6e3", "url": "https://github.com/fcrepo/fcrepo/commit/b2b2e4907b1408fd514fc83fef7dd5cb8799d6e3", "message": "Stuff to make the thing work, we hope", "committedDate": "2020-03-11T03:54:24Z", "type": "commit"}, {"oid": "b2b2e4907b1408fd514fc83fef7dd5cb8799d6e3", "url": "https://github.com/fcrepo/fcrepo/commit/b2b2e4907b1408fd514fc83fef7dd5cb8799d6e3", "message": "Stuff to make the thing work, we hope", "committedDate": "2020-03-11T03:54:24Z", "type": "forcePushed"}, {"oid": "d08ea694b5076fd82d3c825f25f3a0133bb4e0a3", "url": "https://github.com/fcrepo/fcrepo/commit/d08ea694b5076fd82d3c825f25f3a0133bb4e0a3", "message": "Last time I do small PRs", "committedDate": "2020-03-11T03:58:32Z", "type": "commit"}]}