{"pr_number": 1812, "pr_title": "Fixity Service", "pr_createdAt": "2020-11-18T21:59:17Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1812", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5NjAyMw==", "url": "https://github.com/fcrepo/fcrepo/pull/1812#discussion_r526496023", "bodyText": "Haven't looked at this PR in depth. Was just browsing and noticed this. binary.getContent() should be called in a try-with block so that it is closed.", "author": "pwinckles", "createdAt": "2020-11-18T23:42:18Z", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/FixityServiceImpl.java", "diffHunk": "@@ -49,8 +73,37 @@\n     }\n \n     @Override\n-    public Collection<URI> checkFixity(final Binary binary, final Collection<String> algorithms)\n-            throws UnsupportedAlgorithmException {\n-        return null;\n+    public RdfStream checkFixity(final Binary binary)\n+            throws InvalidChecksumException {\n+        final Model model = createDefaultModel();\n+        final Resource subject = model.createResource(binary.getId());\n+        final Resource fixityResult = model.createResource(\n+                binary.getFedoraId().resolve(\"#\" + UUID.randomUUID().toString()).getFullId());\n+        model.add(subject, HAS_FIXITY_RESULT, fixityResult);\n+        model.add(fixityResult, type, PREMIS_FIXITY);\n+        model.add(fixityResult, type, PREMIS_EVENT_OUTCOME_DETAIL);\n+        model.add(fixityResult, HAS_SIZE, createTypedLiteral(binary.getContentSize()));\n+\n+        // Built for more than one digest in anticipation of FCREPO-3419\n+        final List<URI> existingDigestList = new ArrayList<>();\n+        existingDigestList.add(binary.getContentDigest());\n+\n+        final var digestAlgs = existingDigestList.stream()\n+                .map(URI::toString)\n+                .map(a -> a.replace(\"urn:\", \"\").split(\":\")[0])\n+                .map(DIGEST_ALGORITHM::fromAlgorithm)\n+                .collect(Collectors.toList());\n+\n+        final MultiDigestInputStreamWrapper digestWrapper = new MultiDigestInputStreamWrapper(\n+                binary.getContent(), existingDigestList, digestAlgs);", "originalCommit": "0277fc4bff6672f99cf930e3ae7caafd5ea517a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "889b82d09f97b8b313058718c3105ea354bdac10", "chunk": "diff --git a/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/FixityServiceImpl.java b/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/FixityServiceImpl.java\nindex a32c2781a8..a39bf9e538 100644\n--- a/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/FixityServiceImpl.java\n+++ b/fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/FixityServiceImpl.java\n\n@@ -66,10 +68,14 @@ public class FixityServiceImpl extends AbstractService implements FixityService\n                 .map(DIGEST_ALGORITHM::fromAlgorithm)\n                 .collect(Collectors.toList());\n \n-        final MultiDigestInputStreamWrapper digestWrapper = new MultiDigestInputStreamWrapper(\n-                binary.getContent(), null, digestAlgs);\n-\n-        return digestWrapper.getDigests();\n+        try (final var content = binary.getContent()) {\n+            final MultiDigestInputStreamWrapper digestWrapper = new MultiDigestInputStreamWrapper(content, null,\n+                    digestAlgs);\n+            return digestWrapper.getDigests();\n+        } catch (final IOException e) {\n+            // input stream closed prematurely.\n+            throw new RepositoryRuntimeException(\"Problem reading content stream from \" + binary.getId(), e);\n+        }\n     }\n \n     @Override\n"}}, {"oid": "889b82d09f97b8b313058718c3105ea354bdac10", "url": "https://github.com/fcrepo/fcrepo/commit/889b82d09f97b8b313058718c3105ea354bdac10", "message": "Close input streams", "committedDate": "2020-11-20T01:18:03Z", "type": "forcePushed"}, {"oid": "c12758068f44e4acf46d4a6c444b4569e38d48b7", "url": "https://github.com/fcrepo/fcrepo/commit/c12758068f44e4acf46d4a6c444b4569e38d48b7", "message": "Fixity service", "committedDate": "2020-11-27T18:59:34Z", "type": "commit"}, {"oid": "b1c172c9e3a59f3c711b3516ee4bf20203851604", "url": "https://github.com/fcrepo/fcrepo/commit/b1c172c9e3a59f3c711b3516ee4bf20203851604", "message": "Close input streams", "committedDate": "2020-11-27T18:59:34Z", "type": "commit"}, {"oid": "5e8731c3f899152010567ae6ca50d8af9317b248", "url": "https://github.com/fcrepo/fcrepo/commit/5e8731c3f899152010567ae6ca50d8af9317b248", "message": "Add integration test", "committedDate": "2020-11-27T18:59:34Z", "type": "commit"}, {"oid": "9e0f6c366ce2ad47eddf27d02e12762359a8edf3", "url": "https://github.com/fcrepo/fcrepo/commit/9e0f6c366ce2ad47eddf27d02e12762359a8edf3", "message": "Corrupt a binary and check fixity", "committedDate": "2020-11-27T19:17:20Z", "type": "commit"}, {"oid": "9e0f6c366ce2ad47eddf27d02e12762359a8edf3", "url": "https://github.com/fcrepo/fcrepo/commit/9e0f6c366ce2ad47eddf27d02e12762359a8edf3", "message": "Corrupt a binary and check fixity", "committedDate": "2020-11-27T19:17:20Z", "type": "forcePushed"}]}