{"pr_number": 1806, "pr_title": "Added exception handling for identifier line that is too long, plus c\u2026", "pr_createdAt": "2020-11-17T19:50:26Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1806", "timeline": [{"oid": "1a84bf9a4cf40938a37462fc6aef68e24cd1b8e7", "url": "https://github.com/fcrepo/fcrepo/commit/1a84bf9a4cf40938a37462fc6aef68e24cd1b8e7", "message": "Added exception handling for identifier line that is too long, plus custom message\n\nResolves https://jira.lyrasis.org/browse/FCREPO-3374", "committedDate": "2020-11-17T19:38:12Z", "type": "commit"}, {"oid": "65bd290003cbdd49f0584049185e13ebff84b328", "url": "https://github.com/fcrepo/fcrepo/commit/65bd290003cbdd49f0584049185e13ebff84b328", "message": "removed some commented out lines of code plus an import that wasn't used\n\nresolves https://jira.lyrasis.org/browse/FCREPO-3374", "committedDate": "2020-11-17T21:15:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2MzQyMw==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r526163423", "bodyText": "This logic is not specific enough. It's possible for the update call to fail for reason unrelated to the length of the id.", "author": "pwinckles", "createdAt": "2020-11-18T15:11:29Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java", "diffHunk": "@@ -265,7 +266,11 @@ private void upsert(final String transactionId, final FedoraId fedoraId, final S\n         parameterSource.addValue(\"ocflId\", ocflId);\n         parameterSource.addValue(\"transactionId\", transactionId);\n         parameterSource.addValue(\"operation\", operation);\n-        jdbcTemplate.update(UPSERT_MAPPING_TX_MAP.get(dbPlatform), parameterSource);\n+        try {\n+            jdbcTemplate.update(UPSERT_MAPPING_TX_MAP.get(dbPlatform), parameterSource);\n+        } catch (Exception e) {", "originalCommit": "65bd290003cbdd49f0584049185e13ebff84b328", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3Mjk2Mg==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r526172962", "bodyText": "so, should I check the length of the id, rather than just wrap it in an exception handler?", "author": "robyj", "createdAt": "2020-11-18T15:23:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2MzQyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE4MTA4NQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r526181085", "bodyText": "Checking the length may be reasonable, though, if we go that route, I think it would make more sense if the id length enforcement happened up in the HTTP layer.\nCatching the exception here is not a problem. You just need to be more targeted about it. What is the type of exception that's thrown when the id is too long? What is the message of the exception? Are these consistent across database implementations? Using that information, you should be able to inspect the exception and only throw the id length exception when appropriate.", "author": "pwinckles", "createdAt": "2020-11-18T15:33:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2MzQyMw=="}], "type": "inlineReview", "revised_code": {"commit": "ae907df3a6790dafeb71fd245380e19f65e30685", "chunk": "diff --git a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java\nindex b3ffdb345c..c579170eb8 100644\n--- a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java\n+++ b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java\n\n@@ -268,8 +269,8 @@ public class DbFedoraToOcflObjectIndex implements FedoraToOcflObjectIndex {\n         parameterSource.addValue(\"operation\", operation);\n         try {\n             jdbcTemplate.update(UPSERT_MAPPING_TX_MAP.get(dbPlatform), parameterSource);\n-        } catch (Exception e) {\n-            throw new InvalidResourceIdentifierException(\"ID path too long\");\n+        } catch (DataIntegrityViolationException e) {\n+            throw new InvalidResourceIdentifierException(\"Database error - Fedora ID path too long\",e);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2NDU5Nw==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r526164597", "bodyText": "It is almost always a good idea to include the cause when throwing a new exception. You should do so here, unless there's a good reason not to.", "author": "pwinckles", "createdAt": "2020-11-18T15:12:58Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java", "diffHunk": "@@ -265,7 +266,11 @@ private void upsert(final String transactionId, final FedoraId fedoraId, final S\n         parameterSource.addValue(\"ocflId\", ocflId);\n         parameterSource.addValue(\"transactionId\", transactionId);\n         parameterSource.addValue(\"operation\", operation);\n-        jdbcTemplate.update(UPSERT_MAPPING_TX_MAP.get(dbPlatform), parameterSource);\n+        try {\n+            jdbcTemplate.update(UPSERT_MAPPING_TX_MAP.get(dbPlatform), parameterSource);\n+        } catch (Exception e) {\n+            throw new InvalidResourceIdentifierException(\"ID path too long\");", "originalCommit": "65bd290003cbdd49f0584049185e13ebff84b328", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3MzM3Nw==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r526173377", "bodyText": "you mean change the message to be more descriptive?", "author": "robyj", "createdAt": "2020-11-18T15:23:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2NDU5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3Nzg1NA==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r526177854", "bodyText": "I mean include the cause in the new exception like:\nthrow new InvalidResourceIdentifierException(\"message\", e);", "author": "pwinckles", "createdAt": "2020-11-18T15:29:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE2NDU5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "ae907df3a6790dafeb71fd245380e19f65e30685", "chunk": "diff --git a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java\nindex b3ffdb345c..c579170eb8 100644\n--- a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java\n+++ b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java\n\n@@ -268,8 +269,8 @@ public class DbFedoraToOcflObjectIndex implements FedoraToOcflObjectIndex {\n         parameterSource.addValue(\"operation\", operation);\n         try {\n             jdbcTemplate.update(UPSERT_MAPPING_TX_MAP.get(dbPlatform), parameterSource);\n-        } catch (Exception e) {\n-            throw new InvalidResourceIdentifierException(\"ID path too long\");\n+        } catch (DataIntegrityViolationException e) {\n+            throw new InvalidResourceIdentifierException(\"Database error - Fedora ID path too long\",e);\n         }\n     }\n \n"}}, {"oid": "ae907df3a6790dafeb71fd245380e19f65e30685", "url": "https://github.com/fcrepo/fcrepo/commit/ae907df3a6790dafeb71fd245380e19f65e30685", "message": "- modified error message\n- made the exception catch more specific to the exception type\n- added a string/exception parameter to the InvalidResourceIdentifierException\n  so the root cause exception can be used if needed", "committedDate": "2020-11-19T18:18:51Z", "type": "commit"}, {"oid": "30a516136e8b1009d9266ae795e17a581ba2fd0a", "url": "https://github.com/fcrepo/fcrepo/commit/30a516136e8b1009d9266ae795e17a581ba2fd0a", "message": "added test to create and map fedora item with a very long path. The generation is the same as\nthe exmaple code in the ticket. tested several times to make sure it triggers.", "committedDate": "2020-11-19T22:47:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzMwNzc3Mg==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r527307772", "bodyText": "This is a good test, and we should keep it. However, it only tests against H2:\n\n  \n    \n      fcrepo/fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndexTest.java\n    \n    \n        Lines 53 to 54\n      in\n      30a5161\n    \n    \n    \n    \n\n        \n          \n           dataSource.setDriverClassName(\"org.h2.jdbcx.JdbcDataSource\"); \n        \n\n        \n          \n           dataSource.setUrl(\"jdbc:h2:mem:index;DB_CLOSE_DELAY=-1\"); \n        \n    \n  \n\n\nIf we add a similar integration test to FedoraLdpIT, the GitHub Actions builds will test it against all three supported databases. You should be able to add a test in here:\nhttps://github.com/fcrepo/fcrepo/blob/main/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java\n..and you will be good to go.\nSorry for the lack of specificity in my previous comment. The integration tests (those that end in **IT.java) run against a deployed Fedora application... and GitHub Actions are configured to run the tests three times.", "author": "awoods", "createdAt": "2020-11-20T00:35:44Z", "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndexTest.java", "diffHunk": "@@ -175,6 +176,23 @@ public void testRollback() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void identifierTooLong() throws InvalidResourceIdentifierException {", "originalCommit": "30a516136e8b1009d9266ae795e17a581ba2fd0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "a318c0b03ad81ead885416c3a9d17a8490814146", "url": "https://github.com/fcrepo/fcrepo/commit/a318c0b03ad81ead885416c3a9d17a8490814146", "message": "added integration test for database id path exception that should work for\nall database types", "committedDate": "2020-11-24T15:57:42Z", "type": "commit"}, {"oid": "a8548850a4ef66355c2dba8b8ee26e491311cfc6", "url": "https://github.com/fcrepo/fcrepo/commit/a8548850a4ef66355c2dba8b8ee26e491311cfc6", "message": "On the advice of @whikloj, I've changed the test into two tests, to show the boundary of where the character\nlimit lies (479 charcters).", "committedDate": "2020-11-24T20:15:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4NzYwNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r529887604", "bodyText": "Can be removed", "author": "whikloj", "createdAt": "2020-11-24T21:25:01Z", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java", "diffHunk": "@@ -202,6 +203,8 @@\n import nu.validator.htmlparser.sax.HtmlParser;\n import nu.validator.saxtree.TreeBuilder;\n \n+//import org.fcrepo.kernel.api.exception.InvalidResourceIdentifierException;", "originalCommit": "a8548850a4ef66355c2dba8b8ee26e491311cfc6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "903cde2db970e2269460414cd780f66ed60aaf61", "chunk": "diff --git a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java\nindex db25e21a6a..8a07386beb 100644\n--- a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java\n+++ b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java\n\n@@ -203,7 +203,6 @@ import com.google.common.collect.Iterators;\n import nu.validator.htmlparser.sax.HtmlParser;\n import nu.validator.saxtree.TreeBuilder;\n \n-//import org.fcrepo.kernel.api.exception.InvalidResourceIdentifierException;\n \n /**\n  * @author cabeer\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4ODA5Mw==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r529888093", "bodyText": "Can be private static", "author": "whikloj", "createdAt": "2020-11-24T21:25:52Z", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java", "diffHunk": "@@ -5011,4 +5014,38 @@ public void testRepositoryRootTypes() throws Exception {\n             assertTrue(graph.contains(ANY, rootNode, type.asNode(), BASIC_CONTAINER.asNode()));\n         }\n     }\n+\n+    public String genLongUrl(final String prefix, final int numChars) {", "originalCommit": "a8548850a4ef66355c2dba8b8ee26e491311cfc6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "903cde2db970e2269460414cd780f66ed60aaf61", "chunk": "diff --git a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java\nindex db25e21a6a..8a07386beb 100644\n--- a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java\n+++ b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java\n\n@@ -5015,23 +5014,21 @@ public class FedoraLdpIT extends AbstractResourceIT {\n         }\n     }\n \n-    public String genLongUrl(final String prefix, final int numChars) {\n+    private static String genLongUrl(final String prefix, final int numChars) {\n         String ret = prefix;\n-        String lastret = ret;\n         final Random rand = new Random();\n         int cnt = prefix.length();\n \n         while (cnt <= numChars) {\n-            lastret = ret;\n             ret = ret + \"/\" + (char)(rand.nextInt(26) + 'a');\n             cnt = ret.length();\n         }\n-        return lastret;\n+        return ret;\n     }\n \n     @Test\n     public void testLongIdentifier1() throws IOException {\n-        final String url = genLongUrl(serverAddress,478);\n+        final String url = genLongUrl(serverAddress,476);\n         final HttpPost postMethod = new HttpPost(url);\n         postMethod.setHeader(\"Slug\", getRandomUniqueId());\n         try (final CloseableHttpResponse response = execute(postMethod)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MDgyMQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r529890821", "bodyText": "Not sure I understand what lastret is doing, is this to actually return the next to last iteration of this loop? If the slashes are messing you up I think (but I could be wrong) that a single super long URI would also cause this error.\nie.\nfinal String superLongUri = \"someverrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr...\n\nyou get the picture.\nI don't think you need to have a / between each character is what I mean if that makes the loop cleaner to execute and removes the need of lastret to store the previous iteration.", "author": "whikloj", "createdAt": "2020-11-24T21:31:26Z", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java", "diffHunk": "@@ -5011,4 +5014,38 @@ public void testRepositoryRootTypes() throws Exception {\n             assertTrue(graph.contains(ANY, rootNode, type.asNode(), BASIC_CONTAINER.asNode()));\n         }\n     }\n+\n+    public String genLongUrl(final String prefix, final int numChars) {\n+        String ret = prefix;\n+        String lastret = ret;\n+        final Random rand = new Random();\n+        int cnt = prefix.length();\n+\n+        while (cnt <= numChars) {\n+            lastret = ret;", "originalCommit": "a8548850a4ef66355c2dba8b8ee26e491311cfc6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM5ODgwNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r530398806", "bodyText": "Hmmm, I am using lastret to store the last string before it goes over the length required, so when it completes, lastret would contain the string that is upto the length required. Of course, I see now that the \"<=\" probably would return a string that is almost always less than the required length.\nI used the / between the elements in the path as the original bug report script iterated a path until it was too big and the first version of the test did the same, a for loop iterated through the path. I wasn't sure if the problem was a length issue or a path \"deepness\" issue", "author": "robyj", "createdAt": "2020-11-25T14:07:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MDgyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "903cde2db970e2269460414cd780f66ed60aaf61", "chunk": "diff --git a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java\nindex db25e21a6a..8a07386beb 100644\n--- a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java\n+++ b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java\n\n@@ -5015,23 +5014,21 @@ public class FedoraLdpIT extends AbstractResourceIT {\n         }\n     }\n \n-    public String genLongUrl(final String prefix, final int numChars) {\n+    private static String genLongUrl(final String prefix, final int numChars) {\n         String ret = prefix;\n-        String lastret = ret;\n         final Random rand = new Random();\n         int cnt = prefix.length();\n \n         while (cnt <= numChars) {\n-            lastret = ret;\n             ret = ret + \"/\" + (char)(rand.nextInt(26) + 'a');\n             cnt = ret.length();\n         }\n-        return lastret;\n+        return ret;\n     }\n \n     @Test\n     public void testLongIdentifier1() throws IOException {\n-        final String url = genLongUrl(serverAddress,478);\n+        final String url = genLongUrl(serverAddress,476);\n         final HttpPost postMethod = new HttpPost(url);\n         postMethod.setHeader(\"Slug\", getRandomUniqueId());\n         try (final CloseableHttpResponse response = execute(postMethod)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA2MjkyOA==", "url": "https://github.com/fcrepo/fcrepo/pull/1806#discussion_r530062928", "bodyText": "MariaDB is dying because it is throwing a different Exception and so its not getting caught here.\norg.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO ocfl_id_map_session_operations (fedora_id, fedora_root_id, ocfl_id, session_id, operation) VALUES (?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE fedora_root_id = VALUES(fedora_id), ocfl_id = VALUES(ocfl_id), operation = VALUES(operation)]; nested exception is java.sql.SQLSyntaxErrorException: (conn=33) Data too long for column 'fedora_id' at row 1\n\nSo you'll need to catch both Exceptions here, ala\n} catch (final DataIntegrityViolationException | BadSqlGrammarException e) {", "author": "whikloj", "createdAt": "2020-11-25T02:13:15Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java", "diffHunk": "@@ -265,7 +267,11 @@ private void upsert(final String transactionId, final FedoraId fedoraId, final S\n         parameterSource.addValue(\"ocflId\", ocflId);\n         parameterSource.addValue(\"transactionId\", transactionId);\n         parameterSource.addValue(\"operation\", operation);\n-        jdbcTemplate.update(UPSERT_MAPPING_TX_MAP.get(dbPlatform), parameterSource);\n+        try {\n+            jdbcTemplate.update(UPSERT_MAPPING_TX_MAP.get(dbPlatform), parameterSource);\n+        } catch (final DataIntegrityViolationException e) {", "originalCommit": "a8548850a4ef66355c2dba8b8ee26e491311cfc6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "903cde2db970e2269460414cd780f66ed60aaf61", "chunk": "diff --git a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java\nindex f6eafb5852..171b2af819 100644\n--- a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java\n+++ b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java\n\n@@ -269,7 +270,7 @@ public class DbFedoraToOcflObjectIndex implements FedoraToOcflObjectIndex {\n         parameterSource.addValue(\"operation\", operation);\n         try {\n             jdbcTemplate.update(UPSERT_MAPPING_TX_MAP.get(dbPlatform), parameterSource);\n-        } catch (final DataIntegrityViolationException e) {\n+        } catch (final DataIntegrityViolationException | BadSqlGrammarException e) {\n             throw new InvalidResourceIdentifierException(\"Database error - Fedora ID path too long\",e);\n         }\n     }\n"}}, {"oid": "903cde2db970e2269460414cd780f66ed60aaf61", "url": "https://github.com/fcrepo/fcrepo/commit/903cde2db970e2269460414cd780f66ed60aaf61", "message": "removed that dangling import for InvalidResourceIdentifierException\n\nChanged the definition of the genLongUrl function\n\nremoved lastret. this altered the returned string length, so the comparison values in the asserts had to\nbe modified down slightly\n\nnow catch the MariaDB exception BadSqlGrammarException as well as the DataIntegrityViolationException", "committedDate": "2020-11-25T14:50:50Z", "type": "commit"}, {"oid": "89211194f304d6874ae9d63da68fde8c11c4f208", "url": "https://github.com/fcrepo/fcrepo/commit/89211194f304d6874ae9d63da68fde8c11c4f208", "message": "improved the exception handler as per @pwinckles, checks for part of the specific string and if not found\nthrows another error with a descriptive error message", "committedDate": "2020-11-25T16:24:35Z", "type": "commit"}]}