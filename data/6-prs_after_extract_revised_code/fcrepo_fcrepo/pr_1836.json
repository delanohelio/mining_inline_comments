{"pr_number": 1836, "pr_title": "FCREPO-3541 - Etags reflect membership and other request preferences", "pr_createdAt": "2020-12-15T16:54:05Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1836", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3NTc4Nw==", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543575787", "bodyText": "TransactionUtils.openTxId()", "author": "pwinckles", "createdAt": "2020-12-15T18:15:48Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -715,7 +725,9 @@ void evaluateRequestPreconditions(final Request request,\n             date = resource.getLastModifiedDate();\n         } else {\n             // Use a strong ETag for the LDP-RS when validating If-(None)-Match headers\n-            etag = new EntityTag(resource.getEtagValue());\n+            final String txId = transaction == null ? null : transaction.getId();", "originalCommit": "ad4f35a0e946407638254247bedc3bae62500f93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01d6b09302464e66885f66a8b01ed8fc404ce780", "chunk": "diff --git a/fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java b/fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java\nindex 976b02c8ea..d4ded5c932 100644\n--- a/fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java\n+++ b/fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java\n\n@@ -725,7 +725,7 @@ public abstract class ContentExposingResource extends FedoraBaseResource {\n             date = resource.getLastModifiedDate();\n         } else {\n             // Use a strong ETag for the LDP-RS when validating If-(None)-Match headers\n-            final String txId = transaction == null ? null : transaction.getId();\n+            final String txId = TransactionUtils.openTxId(transaction);\n             etag = new EntityTag(etagService.getRdfResourceEtag(txId, resource, getLdpPreferTag(),\n                     headers.getAcceptableMediaTypes()), false);\n             date = resource.getLastModifiedDate();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3NjMxNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543576316", "bodyText": "TransactionUtils.openTxId()", "author": "pwinckles", "createdAt": "2020-12-15T18:16:36Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java", "diffHunk": "@@ -655,7 +663,9 @@ protected void addCacheControlHeaders(final HttpServletResponse servletResponse,\n             date = resource.getLastModifiedDate();\n         } else {\n             // Use a weak ETag for the LDP-RS\n-            etag = new EntityTag(resource.getEtagValue(), true);\n+            final String txId = transaction == null ? null : transaction.getId();", "originalCommit": "ad4f35a0e946407638254247bedc3bae62500f93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01d6b09302464e66885f66a8b01ed8fc404ce780", "chunk": "diff --git a/fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java b/fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java\nindex 976b02c8ea..d4ded5c932 100644\n--- a/fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java\n+++ b/fcrepo-http-api/src/main/java/org/fcrepo/http/api/ContentExposingResource.java\n\n@@ -663,7 +663,7 @@ public abstract class ContentExposingResource extends FedoraBaseResource {\n             date = resource.getLastModifiedDate();\n         } else {\n             // Use a weak ETag for the LDP-RS\n-            final String txId = transaction == null ? null : transaction.getId();\n+            final String txId = TransactionUtils.openTxId(transaction);\n             etag = new EntityTag(etagService.getRdfResourceEtag(txId, resource, getLdpPreferTag(),\n                     headers.getAcceptableMediaTypes()), true);\n             date = resource.getLastModifiedDate();\n"}}, {"oid": "58185e749b0882bdc2a46f82e34e9407b601daa4", "url": "https://github.com/fcrepo/fcrepo/commit/58185e749b0882bdc2a46f82e34e9407b601daa4", "message": "Compute RDF etags based on state token, serialization, prefer headers, last modified timestamps for containment and membership. Store last updated timestamps for membership relations", "committedDate": "2020-12-15T21:22:22Z", "type": "commit"}, {"oid": "64fa32aadee958a759e59233674a15fac8cf35dd", "url": "https://github.com/fcrepo/fcrepo/commit/64fa32aadee958a759e59233674a15fac8cf35dd", "message": "Add integration tests. Handle last_updated for mementos.", "committedDate": "2020-12-15T21:22:22Z", "type": "commit"}, {"oid": "827346dac38d747dfd73c52ef08bbf679a6dcf83", "url": "https://github.com/fcrepo/fcrepo/commit/827346dac38d747dfd73c52ef08bbf679a6dcf83", "message": "Remove baking of containment last_updated into state token since its now being included during etag calculation", "committedDate": "2020-12-15T21:22:22Z", "type": "commit"}, {"oid": "b6fac6b2392d8b9ed815c7cd76e31090afce7d1d", "url": "https://github.com/fcrepo/fcrepo/commit/b6fac6b2392d8b9ed815c7cd76e31090afce7d1d", "message": "Add more etag testing, move some DirectContainer tests, enable one of them and update it", "committedDate": "2020-12-15T21:22:22Z", "type": "commit"}, {"oid": "01d6b09302464e66885f66a8b01ed8fc404ce780", "url": "https://github.com/fcrepo/fcrepo/commit/01d6b09302464e66885f66a8b01ed8fc404ce780", "message": "Use TransactionUtils.openTxId", "committedDate": "2020-12-15T21:23:45Z", "type": "commit"}, {"oid": "01d6b09302464e66885f66a8b01ed8fc404ce780", "url": "https://github.com/fcrepo/fcrepo/commit/01d6b09302464e66885f66a8b01ed8fc404ce780", "message": "Use TransactionUtils.openTxId", "committedDate": "2020-12-15T21:23:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcwODMwOQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543708309", "bodyText": "typo: 'reosurce'", "author": "awoods", "createdAt": "2020-12-15T21:44:32Z", "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/services/EtagService.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.http.api.services;\n+\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import java.util.Collection;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.fcrepo.kernel.api.ContainmentIndex;\n+import org.fcrepo.kernel.api.models.FedoraResource;\n+import org.fcrepo.kernel.api.rdf.LdpTriplePreferences;\n+import org.fcrepo.kernel.api.services.MembershipService;\n+\n+import org.apache.commons.codec.digest.DigestUtils;\n+import org.slf4j.Logger;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Service for computing etags for request responses\n+ *\n+ * @author bbpennel\n+ */\n+@Component\n+public class EtagService {\n+    private static final Logger LOGGER = getLogger(EtagService.class);\n+\n+    @Inject\n+    private ContainmentIndex containmentIndex;\n+\n+    @Inject\n+    private MembershipService membershipService;\n+\n+    /**\n+     * Produces etag for a request for an RDF resource. It is based on factors related to the\n+     * current state of the resource, as well as request options which change the\n+     * representation of the reosurce.", "originalCommit": "01d6b09302464e66885f66a8b01ed8fc404ce780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c738044240d8a3679718283a4e8671e173d0fa52", "chunk": "diff --git a/fcrepo-http-api/src/main/java/org/fcrepo/http/api/services/EtagService.java b/fcrepo-http-api/src/main/java/org/fcrepo/http/api/services/EtagService.java\nindex 72aba38a75..2856288dce 100644\n--- a/fcrepo-http-api/src/main/java/org/fcrepo/http/api/services/EtagService.java\n+++ b/fcrepo-http-api/src/main/java/org/fcrepo/http/api/services/EtagService.java\n\n@@ -52,7 +52,7 @@ public class EtagService {\n     /**\n      * Produces etag for a request for an RDF resource. It is based on factors related to the\n      * current state of the resource, as well as request options which change the\n-     * representation of the reosurce.\n+     * representation of the resource.\n      *\n      * @param txId transaction id\n      * @param resource resource\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMTg2OQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543721869", "bodyText": "Would we expect initialEtag to match the etag returned with an \"omit=\"http://www.w3.org/ns/ldp#PreferMembership\\\"\" response?", "author": "awoods", "createdAt": "2020-12-15T22:07:26Z", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java", "diffHunk": "@@ -2420,9 +2355,15 @@ public void testGetObjectOmitContainment() throws IOException {\n         assertTrue(getLinkHeaders(getObjMethod(id + \"/a\")).contains(DIRECT_CONTAINER_LINK_HEADER));\n         createObject(id + \"/a/1\");\n \n+        final String withMemberEtag = getEtag(serverAddress + id);\n+        assertNotEquals(initialEtag, withMemberEtag);\n+\n         final HttpGet getObjMethod = getObjMethod(id);\n         getObjMethod\n                 .addHeader(\"Prefer\", \"return=representation; omit=\\\"http://www.w3.org/ns/ldp#PreferContainment\\\"\");\n+        final String omitEtag = getEtag(getObjMethod);\n+        assertNotEquals(\"Should not match initial because of membership\", initialEtag, omitEtag);", "originalCommit": "01d6b09302464e66885f66a8b01ed8fc404ce780", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc2NjIzNQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543766235", "bodyText": "Tested... works as expected. Nice.", "author": "awoods", "createdAt": "2020-12-15T23:37:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMTg2OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNTY3Mw==", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543725673", "bodyText": "Should this annotation be instead referring to: https://jira.lyrasis.org/browse/FCREPO-3410 ?", "author": "awoods", "createdAt": "2020-12-15T22:14:24Z", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java", "diffHunk": "@@ -282,6 +289,51 @@ public void testIndirectContainerPatchWithoutLdpContains() throws IOException {\n                 NO_CONTENT.getStatusCode(), getStatus(patch));\n     }\n \n+    @Test\n+    @Ignore(\"Needs updated eTags - FCREPO-3541\")", "originalCommit": "01d6b09302464e66885f66a8b01ed8fc404ce780", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMyODE4OA==", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r544328188", "bodyText": "Given that the current PR is for 3541, I think you might be right :)", "author": "bbpennel", "createdAt": "2020-12-16T14:11:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNTY3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c738044240d8a3679718283a4e8671e173d0fa52", "chunk": "diff --git a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java\nindex 82196add45..6a6601c125 100644\n--- a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java\n+++ b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java\n\n@@ -290,7 +288,7 @@ public class LDPContainerIT extends AbstractResourceIT {\n     }\n \n     @Test\n-    @Ignore(\"Needs updated eTags - FCREPO-3541\")\n+    @Ignore(\"Needs updated eTags - FCREPO-3410\")\n     public void testETagOnDeletedLdpIndirectContainerChild() throws Exception {\n         final String id = getRandomUniqueId();\n         final String members = id + \"/members\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyODA1Ng==", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543728056", "bodyText": "Any reason not to use \"AbstractResourceIT.getEtag()\"?", "author": "awoods", "createdAt": "2020-12-15T22:18:43Z", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java", "diffHunk": "@@ -282,6 +289,51 @@ public void testIndirectContainerPatchWithoutLdpContains() throws IOException {\n                 NO_CONTENT.getStatusCode(), getStatus(patch));\n     }\n \n+    @Test\n+    @Ignore(\"Needs updated eTags - FCREPO-3541\")\n+    public void testETagOnDeletedLdpIndirectContainerChild() throws Exception {\n+        final String id = getRandomUniqueId();\n+        final String members = id + \"/members\";\n+        final String child = members + \"/child\";\n+\n+        createObjectAndClose(id);\n+\n+        // Create the IndirectContainer\n+        final HttpPut createContainer = new HttpPut(serverAddress + members);\n+        createContainer.addHeader(CONTENT_TYPE, \"text/turtle\");\n+        createContainer.addHeader(LINK, INDIRECT_CONTAINER_LINK_HEADER);\n+        final String membersRDF = \"<> <http://www.w3.org/ns/ldp#hasMemberRelation> <info:fedora/test/hasTitle> ; \"\n+            + \"<http://www.w3.org/ns/ldp#insertedContentRelation> <http://www.w3.org/2004/02/skos/core#prefLabel>; \"\n+            + \"<http://www.w3.org/ns/ldp#membershipResource> <\" + serverAddress + id + \"> . \";\n+        createContainer.setEntity(new StringEntity(membersRDF));\n+        assertEquals(\"Membership container not created!\", CREATED.getStatusCode(), getStatus(createContainer));\n+\n+        // Create a child with the appropriate property\n+        final HttpPut createChild = new HttpPut(serverAddress + child);\n+        createChild.addHeader(CONTENT_TYPE, \"text/turtle\");\n+        final String childRDF = \"<> <http://www.w3.org/2004/02/skos/core#prefLabel> \\\"A title\\\".\";\n+        createChild.setEntity(new StringEntity(childRDF));\n+        assertEquals(\"Child container not created!\", CREATED.getStatusCode(), getStatus(createChild));\n+\n+        final HttpGet get = new HttpGet(serverAddress + id);\n+        final String etag1;\n+        try (final CloseableHttpResponse response = execute(get)) {\n+            etag1 = response.getFirstHeader(\"ETag\").getValue();", "originalCommit": "01d6b09302464e66885f66a8b01ed8fc404ce780", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMyODczOQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r544328739", "bodyText": "Updated. I hadn't made any changes to the body of the test since it was still ignored", "author": "bbpennel", "createdAt": "2020-12-16T14:12:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyODA1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "c738044240d8a3679718283a4e8671e173d0fa52", "chunk": "diff --git a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java\nindex 82196add45..6a6601c125 100644\n--- a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java\n+++ b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java\n\n@@ -290,7 +288,7 @@ public class LDPContainerIT extends AbstractResourceIT {\n     }\n \n     @Test\n-    @Ignore(\"Needs updated eTags - FCREPO-3541\")\n+    @Ignore(\"Needs updated eTags - FCREPO-3410\")\n     public void testETagOnDeletedLdpIndirectContainerChild() throws Exception {\n         final String id = getRandomUniqueId();\n         final String members = id + \"/members\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyODcyMg==", "url": "https://github.com/fcrepo/fcrepo/pull/1836#discussion_r543728722", "bodyText": "Any reason not to use \"AbstractResourceIT.getEtag()\"?", "author": "awoods", "createdAt": "2020-12-15T22:19:55Z", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java", "diffHunk": "@@ -282,6 +289,51 @@ public void testIndirectContainerPatchWithoutLdpContains() throws IOException {\n                 NO_CONTENT.getStatusCode(), getStatus(patch));\n     }\n \n+    @Test\n+    @Ignore(\"Needs updated eTags - FCREPO-3541\")\n+    public void testETagOnDeletedLdpIndirectContainerChild() throws Exception {\n+        final String id = getRandomUniqueId();\n+        final String members = id + \"/members\";\n+        final String child = members + \"/child\";\n+\n+        createObjectAndClose(id);\n+\n+        // Create the IndirectContainer\n+        final HttpPut createContainer = new HttpPut(serverAddress + members);\n+        createContainer.addHeader(CONTENT_TYPE, \"text/turtle\");\n+        createContainer.addHeader(LINK, INDIRECT_CONTAINER_LINK_HEADER);\n+        final String membersRDF = \"<> <http://www.w3.org/ns/ldp#hasMemberRelation> <info:fedora/test/hasTitle> ; \"\n+            + \"<http://www.w3.org/ns/ldp#insertedContentRelation> <http://www.w3.org/2004/02/skos/core#prefLabel>; \"\n+            + \"<http://www.w3.org/ns/ldp#membershipResource> <\" + serverAddress + id + \"> . \";\n+        createContainer.setEntity(new StringEntity(membersRDF));\n+        assertEquals(\"Membership container not created!\", CREATED.getStatusCode(), getStatus(createContainer));\n+\n+        // Create a child with the appropriate property\n+        final HttpPut createChild = new HttpPut(serverAddress + child);\n+        createChild.addHeader(CONTENT_TYPE, \"text/turtle\");\n+        final String childRDF = \"<> <http://www.w3.org/2004/02/skos/core#prefLabel> \\\"A title\\\".\";\n+        createChild.setEntity(new StringEntity(childRDF));\n+        assertEquals(\"Child container not created!\", CREATED.getStatusCode(), getStatus(createChild));\n+\n+        final HttpGet get = new HttpGet(serverAddress + id);\n+        final String etag1;\n+        try (final CloseableHttpResponse response = execute(get)) {\n+            etag1 = response.getFirstHeader(\"ETag\").getValue();\n+            IOUtils.toString(response.getEntity().getContent(), UTF_8);\n+        }\n+\n+        assertEquals(\"Child resource not deleted!\", NO_CONTENT.getStatusCode(),\n+                getStatus(new HttpDelete(serverAddress + child)));\n+\n+        final String etag2;\n+        try (final CloseableHttpResponse response = execute(get)) {\n+            etag2 = response.getFirstHeader(\"ETag\").getValue();", "originalCommit": "01d6b09302464e66885f66a8b01ed8fc404ce780", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c738044240d8a3679718283a4e8671e173d0fa52", "chunk": "diff --git a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java\nindex 82196add45..6a6601c125 100644\n--- a/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java\n+++ b/fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/LDPContainerIT.java\n\n@@ -290,7 +288,7 @@ public class LDPContainerIT extends AbstractResourceIT {\n     }\n \n     @Test\n-    @Ignore(\"Needs updated eTags - FCREPO-3541\")\n+    @Ignore(\"Needs updated eTags - FCREPO-3410\")\n     public void testETagOnDeletedLdpIndirectContainerChild() throws Exception {\n         final String id = getRandomUniqueId();\n         final String members = id + \"/members\";\n"}}, {"oid": "c738044240d8a3679718283a4e8671e173d0fa52", "url": "https://github.com/fcrepo/fcrepo/commit/c738044240d8a3679718283a4e8671e173d0fa52", "message": "Tidying up", "committedDate": "2020-12-16T14:09:57Z", "type": "commit"}]}