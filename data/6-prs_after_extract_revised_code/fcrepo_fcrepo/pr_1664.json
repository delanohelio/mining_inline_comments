{"pr_number": 1664, "pr_title": "Use RDF extension when looking for files", "pr_createdAt": "2020-04-16T15:08:40Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1664", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODE2MA==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r409718160", "bodyText": "This seems like something that should be done within the Utils class so that it can be reused other places if needed.", "author": "pwinckles", "createdAt": "2020-04-16T17:13:18Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "diffHunk": "@@ -46,13 +48,15 @@ public void persist(final OCFLPersistentStorageSession session, final ResourceOp\n         final var fedoraResourceRoot = mapping.getRootObjectIdentifier();\n         final var resourceId = operation.getResourceId();\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n+        final var isRdf = ((DeleteResourceOperation) operation).isRdf();\n         log.debug(\"Deleting {} from {}\", resourceId, mapping.getOcflObjectId());\n         if (fedoraResourceRoot.equals(resourceId)) {\n             // We are at the root of the object.\n             objectSession.deleteObject();\n         } else {\n             final var relativeSubPath = relativizeSubpath(fedoraResourceRoot, operation.getResourceId());\n-            final var ocflSubPath = resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath);\n+            final var ocflSubPath = resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath) +", "originalCommit": "2f3e2f2bb73b2c532735c88b5eca7d76a36044fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgyMDc2Ng==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r409820766", "bodyText": "Like in the resolveOCFLSubpath method?", "author": "whikloj", "createdAt": "2020-04-16T20:12:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIzMzE3Mw==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r410233173", "bodyText": "Yeah, that would seem to make sense. I probably won't get around to it for a few weeks, but I'd like to refactor that whole pathing mess. It's very confusing.", "author": "pwinckles", "createdAt": "2020-04-17T13:46:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1MTM3NQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r410451375", "bodyText": "Except that the resolveOCFLSubpath really gets the subpath, which is used to resolve the sidecar files so adding .nt there would cause problems.\nThis is a difference we are dealing with in Delete because we use one persister to delete both RDFSource and NonRDFSource whereas to create or update we have two separate persisters (the RDF one adds this .nt).\nI can duplicate the persister, but I think just having this in the DeleteResourcePersister might be ok.", "author": "whikloj", "createdAt": "2020-04-17T20:22:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1NjgyMg==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r410456822", "bodyText": "How about a resolveRdfOcflSubpath() method? Not a big deal either way and not a blocker for the PR.", "author": "pwinckles", "createdAt": "2020-04-17T20:35:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ2MDIyNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r410460226", "bodyText": "except that the subpath technically does not include the .nt we only add that here https://github.com/fcrepo4/fcrepo4/blob/cd97a2e7a869f9598b64b8fc61fa95af6db5e83b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/OCFLPersistentStorageUtils.java#L193\nI'm a little out of my depth with how this stuff is operating, if you want me to make a method I will but it will not be used for all instances of \"subpath\" but instead only be called to replace the above line (in writeRDF), this line in getTriples() and in the delete persister to refer to the exact file.", "author": "whikloj", "createdAt": "2020-04-17T20:43:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODE2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ2MTM3Mw==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r410461373", "bodyText": "It's fine. Just leave it.", "author": "pwinckles", "createdAt": "2020-04-17T20:46:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcxODE2MA=="}], "type": "inlineReview", "revised_code": {"commit": "8af8f21cde42652a4f62ad6c430fcecfa457ed53", "chunk": "diff --git a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java\nindex 0776a26a4d..9adf7ead5f 100644\n--- a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java\n+++ b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java\n\n@@ -48,16 +50,18 @@ class DeleteResourcePersister extends AbstractPersister {\n         final var fedoraResourceRoot = mapping.getRootObjectIdentifier();\n         final var resourceId = operation.getResourceId();\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n-        final var isRdf = ((DeleteResourceOperation) operation).isRdf();\n         log.debug(\"Deleting {} from {}\", resourceId, mapping.getOcflObjectId());\n         if (fedoraResourceRoot.equals(resourceId)) {\n             // We are at the root of the object.\n             objectSession.deleteObject();\n         } else {\n             final var relativeSubPath = relativizeSubpath(fedoraResourceRoot, operation.getResourceId());\n-            final var ocflSubPath = resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath) +\n-                    (isRdf ? getRDFFileExtension() : \"\");\n-            objectSession.delete(ocflSubPath);\n+            final var ocflSubPath = resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath);\n+            final var headers = readHeaders(objectSession, ocflSubPath);\n+            final var filePath = resolveExtensions(ocflSubPath,\n+                    !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel())\n+            );\n+            objectSession.delete(filePath);\n         }\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5OTMyNQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r412399325", "bodyText": "Would it be an option to call readHeaders here in the persister to determine that the object being deleted is a binary or not, rather than passing it down through the Operation stuff?", "author": "bbpennel", "createdAt": "2020-04-21T18:38:22Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java", "diffHunk": "@@ -46,13 +48,14 @@ public void persist(final OCFLPersistentStorageSession session, final ResourceOp\n         final var fedoraResourceRoot = mapping.getRootObjectIdentifier();\n         final var resourceId = operation.getResourceId();\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n+        final var isRdf = ((DeleteResourceOperation) operation).isRdf();", "originalCommit": "0f51dabe3727234c390d6d673b01aac118bc7c14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQzNjEyMA==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r412436120", "bodyText": "Maybe...the OCFL layer is still a bit of a tangle moving stuff around too me. Is that preferable to passing it down?", "author": "whikloj", "createdAt": "2020-04-21T19:34:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5OTMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ4Nzg1MA==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r412487850", "bodyText": "Ugh, ok I'm going to start over with a fresh branch instead of trying to revert all the changes here. I'll force push over top later.", "author": "whikloj", "createdAt": "2020-04-21T21:00:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5OTMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNTAxOA==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r412515018", "bodyText": "I don't have a strong opinion on it,  but it does seem cleaner not to pass the isRdf flag.", "author": "dbernstein", "createdAt": "2020-04-21T21:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5OTMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMzkwNg==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r412523906", "bodyText": "Sorry to blow things up on you like that. Just seems preferable to have the data coming from as close as possible if its an option, fewer things to lineup or places for things to go wrong.", "author": "bbpennel", "createdAt": "2020-04-21T22:05:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5OTMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3NjUxNA==", "url": "https://github.com/fcrepo/fcrepo/pull/1664#discussion_r412976514", "bodyText": "It's ok, I'm still stumbling a bit in the persistence layer.", "author": "whikloj", "createdAt": "2020-04-22T13:21:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM5OTMyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "8af8f21cde42652a4f62ad6c430fcecfa457ed53", "chunk": "diff --git a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java\nindex d0ffc07ee9..9adf7ead5f 100644\n--- a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java\n+++ b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DeleteResourcePersister.java\n\n@@ -48,15 +50,18 @@ class DeleteResourcePersister extends AbstractPersister {\n         final var fedoraResourceRoot = mapping.getRootObjectIdentifier();\n         final var resourceId = operation.getResourceId();\n         final var objectSession = session.findOrCreateSession(mapping.getOcflObjectId());\n-        final var isRdf = ((DeleteResourceOperation) operation).isRdf();\n         log.debug(\"Deleting {} from {}\", resourceId, mapping.getOcflObjectId());\n         if (fedoraResourceRoot.equals(resourceId)) {\n             // We are at the root of the object.\n             objectSession.deleteObject();\n         } else {\n             final var relativeSubPath = relativizeSubpath(fedoraResourceRoot, operation.getResourceId());\n-            final var ocflSubPath = resolveExtensions(resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath), isRdf);\n-            objectSession.delete(ocflSubPath);\n+            final var ocflSubPath = resolveOCFLSubpath(fedoraResourceRoot, relativeSubPath);\n+            final var headers = readHeaders(objectSession, ocflSubPath);\n+            final var filePath = resolveExtensions(ocflSubPath,\n+                    !Objects.equals(NON_RDF_SOURCE.toString(), headers.getInteractionModel())\n+            );\n+            objectSession.delete(filePath);\n         }\n     }\n }\n"}}, {"oid": "8af8f21cde42652a4f62ad6c430fcecfa457ed53", "url": "https://github.com/fcrepo/fcrepo/commit/8af8f21cde42652a4f62ad6c430fcecfa457ed53", "message": "Fix delete to point to actual file path.", "committedDate": "2020-04-22T14:53:34Z", "type": "commit"}, {"oid": "8af8f21cde42652a4f62ad6c430fcecfa457ed53", "url": "https://github.com/fcrepo/fcrepo/commit/8af8f21cde42652a4f62ad6c430fcecfa457ed53", "message": "Fix delete to point to actual file path.", "committedDate": "2020-04-22T14:53:34Z", "type": "forcePushed"}]}