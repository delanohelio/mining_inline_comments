{"pr_number": 1616, "pr_title": "Added unique PathNotFoundExceptionMapper and mock test for that file", "pr_createdAt": "2020-01-30T15:32:36Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1616", "timeline": [{"oid": "8bb1dad40ddc7474f62b21c96ab0a08e9ff9a233", "url": "https://github.com/fcrepo/fcrepo/commit/8bb1dad40ddc7474f62b21c96ab0a08e9ff9a233", "message": "Added unique PathNotFoundExceptionMapper and mock test for that file\n\nResolves https://jira.lyrasis.org/browse/FCREPO-3177", "committedDate": "2020-01-30T15:25:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0NzY0OQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1616#discussion_r373147649", "bodyText": "space after ,", "author": "bbpennel", "createdAt": "2020-01-30T19:27:22Z", "path": "fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.http.commons.exceptionhandlers;\n+\n+import static javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR;\n+import static javax.ws.rs.core.Response.Status.NOT_FOUND;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+import javax.ws.rs.core.Response;\n+\n+import org.fcrepo.kernel.api.exception.PathNotFoundException;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+\n+/**\n+ * PathNotFoundExceptionMapperTest class.\n+ *\n+ * @author robyj\n+ */\n+public class PathNotFoundExceptionMapperTest {\n+\n+    private PathNotFoundExceptionMapper testObj;\n+\n+    @Before\n+    public void setUp() {\n+        testObj = new PathNotFoundExceptionMapper();\n+    }\n+\n+    @Test\n+    public void testToResponse() {\n+        final PathNotFoundException input = new PathNotFoundException(\"xyz\");\n+        final Response actual = testObj.toResponse(input);\n+        assertEquals(NOT_FOUND.getStatusCode(), actual.getStatus());\n+        assertEquals(actual.getEntity(),\"Error: xyz\");", "originalCommit": "8bb1dad40ddc7474f62b21c96ab0a08e9ff9a233", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE3NjgwMQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1616#discussion_r373176801", "bodyText": "completed", "author": "robyj", "createdAt": "2020-01-30T20:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0NzY0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c930319edf5ab17a8c50dac23682450182921bf8", "chunk": "diff --git a/fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java b/fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java\nindex cf121debf2..142a48eba8 100644\n--- a/fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java\n+++ b/fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java\n\n@@ -49,7 +49,6 @@ public class PathNotFoundExceptionMapperTest {\n         final PathNotFoundException input = new PathNotFoundException(\"xyz\");\n         final Response actual = testObj.toResponse(input);\n         assertEquals(NOT_FOUND.getStatusCode(), actual.getStatus());\n-        assertEquals(actual.getEntity(),\"Error: xyz\");\n-        assertNotEquals(INTERNAL_SERVER_ERROR.getStatusCode(), actual.getStatus());\n+        assertEquals(actual.getEntity(), \"Error: xyz\");\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0ODcwNQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1616#discussion_r373148705", "bodyText": "Line 51 is checking that actual.getStatus() equals 404, so i don't think its possible for this line to ever receive 500, since line 51 would have failed in that case.", "author": "bbpennel", "createdAt": "2020-01-30T19:29:28Z", "path": "fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.http.commons.exceptionhandlers;\n+\n+import static javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR;\n+import static javax.ws.rs.core.Response.Status.NOT_FOUND;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+import javax.ws.rs.core.Response;\n+\n+import org.fcrepo.kernel.api.exception.PathNotFoundException;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+\n+/**\n+ * PathNotFoundExceptionMapperTest class.\n+ *\n+ * @author robyj\n+ */\n+public class PathNotFoundExceptionMapperTest {\n+\n+    private PathNotFoundExceptionMapper testObj;\n+\n+    @Before\n+    public void setUp() {\n+        testObj = new PathNotFoundExceptionMapper();\n+    }\n+\n+    @Test\n+    public void testToResponse() {\n+        final PathNotFoundException input = new PathNotFoundException(\"xyz\");\n+        final Response actual = testObj.toResponse(input);\n+        assertEquals(NOT_FOUND.getStatusCode(), actual.getStatus());\n+        assertEquals(actual.getEntity(),\"Error: xyz\");\n+        assertNotEquals(INTERNAL_SERVER_ERROR.getStatusCode(), actual.getStatus());", "originalCommit": "8bb1dad40ddc7474f62b21c96ab0a08e9ff9a233", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE3NzEyMA==", "url": "https://github.com/fcrepo/fcrepo/pull/1616#discussion_r373177120", "bodyText": "the check against INTERNAL_SERVER_ERROR and the imports used for that check have been removed", "author": "robyj", "createdAt": "2020-01-30T20:29:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE0ODcwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "c930319edf5ab17a8c50dac23682450182921bf8", "chunk": "diff --git a/fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java b/fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java\nindex cf121debf2..142a48eba8 100644\n--- a/fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java\n+++ b/fcrepo-http-commons/src/test/java/org/fcrepo/http/commons/exceptionhandlers/PathNotFoundExceptionMapperTest.java\n\n@@ -49,7 +49,6 @@ public class PathNotFoundExceptionMapperTest {\n         final PathNotFoundException input = new PathNotFoundException(\"xyz\");\n         final Response actual = testObj.toResponse(input);\n         assertEquals(NOT_FOUND.getStatusCode(), actual.getStatus());\n-        assertEquals(actual.getEntity(),\"Error: xyz\");\n-        assertNotEquals(INTERNAL_SERVER_ERROR.getStatusCode(), actual.getStatus());\n+        assertEquals(actual.getEntity(), \"Error: xyz\");\n     }\n }\n"}}, {"oid": "c930319edf5ab17a8c50dac23682450182921bf8", "url": "https://github.com/fcrepo/fcrepo/commit/c930319edf5ab17a8c50dac23682450182921bf8", "message": "Mockito file modified:\n- space added after comma\n- second error code vs Erro code 500 test removed", "committedDate": "2020-01-30T19:49:08Z", "type": "commit"}, {"oid": "ad0e28887c90c72580f27a404fd44910db5a3a22", "url": "https://github.com/fcrepo/fcrepo/commit/ad0e28887c90c72580f27a404fd44910db5a3a22", "message": "removed imports that made the travis build fail", "committedDate": "2020-01-30T20:16:00Z", "type": "commit"}]}