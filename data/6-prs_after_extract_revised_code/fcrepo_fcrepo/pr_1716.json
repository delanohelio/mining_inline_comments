{"pr_number": 1716, "pr_title": "improved rollback logic", "pr_createdAt": "2020-07-08T12:58:23Z", "pr_url": "https://github.com/fcrepo/fcrepo/pull/1716", "timeline": [{"oid": "58662ef117917eb2af87d8b658796bd19078b554", "url": "https://github.com/fcrepo/fcrepo/commit/58662ef117917eb2af87d8b658796bd19078b554", "message": "improved rollback logic", "committedDate": "2020-07-08T12:50:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1MzExMw==", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451753113", "bodyText": "For consistency with the other methods on this interface... potentially change from tx to txId.", "author": "awoods", "createdAt": "2020-07-08T18:43:41Z", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java", "diffHunk": "@@ -39,7 +38,7 @@\n      * @param fedoraResource The containing fedora resource\n      * @return A stream of contained identifiers\n      */\n-    Stream<String> getContains(Transaction tx, FedoraResource fedoraResource);\n+    Stream<String> getContains(String tx, FedoraResource fedoraResource);", "originalCommit": "58662ef117917eb2af87d8b658796bd19078b554", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg0MDE1Mw==", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451840153", "bodyText": "Will do. Renamed the implementation, but forgot the interface.", "author": "pwinckles", "createdAt": "2020-07-08T21:38:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1MzExMw=="}], "type": "inlineReview", "revised_code": {"commit": "dcd72b685e255d9edaf8373371464eea91280104", "chunk": "diff --git a/fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java b/fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java\nindex f74e793ac2..52a0269f88 100644\n--- a/fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java\n+++ b/fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java\n\n@@ -34,25 +34,25 @@ public interface ContainmentIndex {\n     /**\n      * Return a stream of fedora identifiers contained by the specified fedora resource.\n      *\n-     * @param tx The transaction.  If no transaction, null is okay.\n+     * @param txId The transaction id, or null if no transaction\n      * @param fedoraResource The containing fedora resource\n      * @return A stream of contained identifiers\n      */\n-    Stream<String> getContains(String tx, FedoraResource fedoraResource);\n+    Stream<String> getContains(String txId, FedoraResource fedoraResource);\n \n     /**\n      * Return a stream of fedora identifiers contained by the specified fedora resource that have deleted\n      * relationships.\n      *\n-     * @param tx The transaction.  If no transaction, null is okay.\n+     * @param txId The transaction id, or null if no transaction\n      * @param fedoraResource The containing fedora resource\n      * @return A stream of contained identifiers\n      */\n-    Stream<String> getContainsDeleted(String tx, FedoraResource fedoraResource);\n+    Stream<String> getContainsDeleted(String txId, FedoraResource fedoraResource);\n \n     /**\n      * Return the ID of the containing resource for resourceID.\n-     * @param txID The transaction. If no transaction, null is okay.\n+     * @param txID The transaction id, or null if no transaction\n      * @param resource The FedoraId of the resource to find the containing resource for.\n      * @return The id of the containing resource or null if none found.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1MzE3OQ==", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451753179", "bodyText": "For consistency with the other methods on this interface... potentially change from tx to txId.", "author": "awoods", "createdAt": "2020-07-08T18:43:48Z", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java", "diffHunk": "@@ -49,7 +48,7 @@\n      * @param fedoraResource The containing fedora resource\n      * @return A stream of contained identifiers\n      */\n-    Stream<String> getContainsDeleted(Transaction tx, FedoraResource fedoraResource);\n+    Stream<String> getContainsDeleted(String tx, FedoraResource fedoraResource);", "originalCommit": "58662ef117917eb2af87d8b658796bd19078b554", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dcd72b685e255d9edaf8373371464eea91280104", "chunk": "diff --git a/fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java b/fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java\nindex f74e793ac2..52a0269f88 100644\n--- a/fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java\n+++ b/fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/ContainmentIndex.java\n\n@@ -34,25 +34,25 @@ public interface ContainmentIndex {\n     /**\n      * Return a stream of fedora identifiers contained by the specified fedora resource.\n      *\n-     * @param tx The transaction.  If no transaction, null is okay.\n+     * @param txId The transaction id, or null if no transaction\n      * @param fedoraResource The containing fedora resource\n      * @return A stream of contained identifiers\n      */\n-    Stream<String> getContains(String tx, FedoraResource fedoraResource);\n+    Stream<String> getContains(String txId, FedoraResource fedoraResource);\n \n     /**\n      * Return a stream of fedora identifiers contained by the specified fedora resource that have deleted\n      * relationships.\n      *\n-     * @param tx The transaction.  If no transaction, null is okay.\n+     * @param txId The transaction id, or null if no transaction\n      * @param fedoraResource The containing fedora resource\n      * @return A stream of contained identifiers\n      */\n-    Stream<String> getContainsDeleted(String tx, FedoraResource fedoraResource);\n+    Stream<String> getContainsDeleted(String txId, FedoraResource fedoraResource);\n \n     /**\n      * Return the ID of the containing resource for resourceID.\n-     * @param txID The transaction. If no transaction, null is okay.\n+     * @param txID The transaction id, or null if no transaction\n      * @param resource The FedoraId of the resource to find the containing resource for.\n      * @return The id of the containing resource or null if none found.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1NTQwMw==", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451755403", "bodyText": "Thank you.", "author": "awoods", "createdAt": "2020-07-08T18:47:53Z", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/observer/EventAccumulatorImpl.java", "diffHunk": "@@ -71,7 +71,7 @@ public void recordEventForOperation(final String transactionId, final FedoraId f\n \n     @Override\n     public void emitEvents(final String transactionId, final String baseUrl, final String userAgent) {\n-        LOG.info(\"Emitting events for transaction {}\", transactionId);\n+        LOG.debug(\"Emitting events for transaction {}\", transactionId);", "originalCommit": "58662ef117917eb2af87d8b658796bd19078b554", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxMzQ3MA==", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451813470", "bodyText": "For clarity around the use of this pseudo-transaction, can we make this method (rebuild()) private, and remove it from the IndexBuilder interface?", "author": "awoods", "createdAt": "2020-07-08T20:42:16Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -89,80 +97,92 @@ public void rebuild() {\n         containmentIndex.reset();\n         searchIndex.reset();\n \n+        final var txId = UUID.randomUUID().toString();", "originalCommit": "58662ef117917eb2af87d8b658796bd19078b554", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg0MTU2NA==", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451841564", "bodyText": "Hmm... I'm not sure I understand. The whole point of the this class is the rebuild method, and there are tests that use it. rebuildIfNecessary is just a wrapper that tries to make a guess as to whether or not rebuild should be called.", "author": "pwinckles", "createdAt": "2020-07-08T21:41:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxMzQ3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg0MTk5NA==", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451841994", "bodyText": "rebuild() is never called outside of this class.", "author": "awoods", "createdAt": "2020-07-08T21:43:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxMzQ3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg0MzMzMw==", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451843333", "bodyText": "Ah, you're right. It used to be called by RebuildIT, but I changed that earlier this week. Sure, I can remove it from the interface. Presumably we might want it add it back later if we add the ability to force a rebuild?", "author": "pwinckles", "createdAt": "2020-07-08T21:46:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxMzQ3MA=="}], "type": "inlineReview", "revised_code": {"commit": "dcd72b685e255d9edaf8373371464eea91280104", "chunk": "diff --git a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java\nindex d04a0f914c..c512ee244e 100644\n--- a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java\n+++ b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java\n\n@@ -89,8 +89,7 @@ public class IndexBuilderImpl implements IndexBuilder {\n         }\n     }\n \n-    @Override\n-    public void rebuild() {\n+    private void rebuild() {\n         LOGGER.info(\"Initiating index rebuild.\");\n \n         fedoraToOCFLObjectIndex.reset();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxODU0Nw==", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451818547", "bodyText": "I believe slf4j sees a miniscule performance benefit from the non-concatenating syntax (\"Failed to cleanup staging directory: {}\", stagingDir)... but no big deal.", "author": "awoods", "createdAt": "2020-07-08T20:52:35Z", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -190,4 +210,32 @@ private boolean repoContainsObjects() {\n         return ocflRepository.listObjectIds().findFirst().isPresent();\n     }\n \n+    private Path createStagingDir(final String txId) {\n+        try {\n+            return Files.createDirectories(sessionStagingRoot.resolve(txId));\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+    }\n+\n+    private void cleanupStaging(final Path stagingDir) {\n+        if (!FileUtils.deleteQuietly(stagingDir.toFile())) {\n+            LOGGER.warn(\"Failed to cleanup staging directory: \" + stagingDir);", "originalCommit": "58662ef117917eb2af87d8b658796bd19078b554", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzOTY1Ng==", "url": "https://github.com/fcrepo/fcrepo/pull/1716#discussion_r451839656", "bodyText": "Yup. I'll fix those", "author": "pwinckles", "createdAt": "2020-07-08T21:37:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxODU0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "dcd72b685e255d9edaf8373371464eea91280104", "chunk": "diff --git a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java\nindex d04a0f914c..c512ee244e 100644\n--- a/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java\n+++ b/fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java\n\n@@ -220,7 +219,7 @@ public class IndexBuilderImpl implements IndexBuilder {\n \n     private void cleanupStaging(final Path stagingDir) {\n         if (!FileUtils.deleteQuietly(stagingDir.toFile())) {\n-            LOGGER.warn(\"Failed to cleanup staging directory: \" + stagingDir);\n+            LOGGER.warn(\"Failed to cleanup staging directory: {}\", stagingDir);\n         }\n     }\n \n"}}, {"oid": "dcd72b685e255d9edaf8373371464eea91280104", "url": "https://github.com/fcrepo/fcrepo/commit/dcd72b685e255d9edaf8373371464eea91280104", "message": "pr fixes", "committedDate": "2020-07-09T14:43:06Z", "type": "commit"}, {"oid": "75f76a039d0c7028454fb81f7a77a35aba76af5f", "url": "https://github.com/fcrepo/fcrepo/commit/75f76a039d0c7028454fb81f7a77a35aba76af5f", "message": "moved txId() to super class", "committedDate": "2020-07-09T15:32:19Z", "type": "commit"}]}