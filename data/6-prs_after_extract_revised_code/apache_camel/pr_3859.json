{"pr_number": 3859, "pr_title": "CAMEL-14805: Component - Use doInit for wiring instead of doStart", "pr_createdAt": "2020-05-26T06:06:36Z", "pr_url": "https://github.com/apache/camel/pull/3859", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE5NDgwNQ==", "url": "https://github.com/apache/camel/pull/3859#discussion_r430194805", "bodyText": "We cannot do init here as createXsltBuilder is potentially loading resources from file system and that should be done in doStart. Loading exclusively from classpath is okay in doInit. But file system should be in doStart.", "author": "davsclaus", "createdAt": "2020-05-26T06:59:19Z", "path": "components/camel-xslt/src/main/java/org/apache/camel/component/xslt/XsltEndpoint.java", "diffHunk": "@@ -327,8 +327,8 @@ protected void loadResource(String resourceUri, XsltBuilder xslt) throws Transfo\n     }\n \n     @Override\n-    protected void doStart() throws Exception {\n-        super.doStart();\n+    protected void doInit() throws Exception {\n+        super.doInit();", "originalCommit": "c58311b66963938f2e2a6b9c1d8e15850f8f6011", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea0f3c0b6c142927aafeed7d8fb843dd5063cb30", "chunk": "diff --git a/components/camel-xslt/src/main/java/org/apache/camel/component/xslt/XsltEndpoint.java b/components/camel-xslt/src/main/java/org/apache/camel/component/xslt/XsltEndpoint.java\nindex fde955b4b9c..c503532906b 100644\n--- a/components/camel-xslt/src/main/java/org/apache/camel/component/xslt/XsltEndpoint.java\n+++ b/components/camel-xslt/src/main/java/org/apache/camel/component/xslt/XsltEndpoint.java\n\n@@ -332,9 +333,23 @@ public class XsltEndpoint extends ProcessorEndpoint {\n \n         // the processor is the xslt builder\n         setXslt(createXsltBuilder());\n+\n+        // must load resource first which sets a template and do a stylesheet compilation to catch errors early\n+        // load resource from classpath otherwise load in doStart()\n+        if (ResourceHelper.isClasspathUri(resourceUri)) {\n+            loadResource(resourceUri, xslt);\n+        }\n         setProcessor(getXslt());\n     }\n \n+    @Override\n+    protected void doStart() throws Exception {\n+        super.doStart();\n+        if (!ResourceHelper.isClasspathUri(resourceUri)) {\n+            loadResource(resourceUri, xslt);\n+        }\n+    }\n+\n     protected XsltBuilder createXsltBuilder() throws Exception {\n         final CamelContext ctx = getCamelContext();\n         final ClassResolver resolver = ctx.getClassResolver();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE5NTc5Mw==", "url": "https://github.com/apache/camel/pull/3859#discussion_r430195793", "bodyText": "charsets are potentially not available if native compiling, so we may consider to make this doStart. However there are ways to make native compilation include all charsets.", "author": "davsclaus", "createdAt": "2020-05-26T07:01:34Z", "path": "components/camel-stream/src/main/java/org/apache/camel/component/stream/StreamEndpoint.java", "diffHunk": "@@ -303,7 +303,8 @@ public void setReadTimeout(int readTimeout) {\n     //-------------------------------------------------------------------------\n \n     @Override\n-    protected void doStart() throws Exception {\n+    protected void doInit() throws Exception {\n+        super.doInit();", "originalCommit": "c58311b66963938f2e2a6b9c1d8e15850f8f6011", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea0f3c0b6c142927aafeed7d8fb843dd5063cb30", "chunk": "diff --git a/components/camel-stream/src/main/java/org/apache/camel/component/stream/StreamEndpoint.java b/components/camel-stream/src/main/java/org/apache/camel/component/stream/StreamEndpoint.java\nindex 68b9cb39f67..32b7a462607 100644\n--- a/components/camel-stream/src/main/java/org/apache/camel/component/stream/StreamEndpoint.java\n+++ b/components/camel-stream/src/main/java/org/apache/camel/component/stream/StreamEndpoint.java\n\n@@ -303,8 +303,8 @@ public class StreamEndpoint extends DefaultEndpoint {\n     //-------------------------------------------------------------------------\n \n     @Override\n-    protected void doInit() throws Exception {\n-        super.doInit();\n+    protected void doStart() throws Exception {\n+        super.doStart();\n         charset = loadCharset();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE5Njc0MA==", "url": "https://github.com/apache/camel/pull/3859#discussion_r430196740", "bodyText": "This should be doStart as SqlHelper.resolveQuery can potentially load the SQL template from file system. See the SQL docs", "author": "davsclaus", "createdAt": "2020-05-26T07:03:36Z", "path": "components/camel-sql/src/main/java/org/apache/camel/component/sql/stored/SqlStoredProducer.java", "diffHunk": "@@ -123,8 +123,8 @@ private StatementWrapper createStatement(Exchange exchange) throws SQLException\n     }\n \n     @Override\n-    protected void doStart() throws Exception {\n-        super.doStart();\n+    protected void doInit() throws Exception {\n+        super.doInit();", "originalCommit": "c58311b66963938f2e2a6b9c1d8e15850f8f6011", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea0f3c0b6c142927aafeed7d8fb843dd5063cb30", "chunk": "diff --git a/components/camel-sql/src/main/java/org/apache/camel/component/sql/stored/SqlStoredProducer.java b/components/camel-sql/src/main/java/org/apache/camel/component/sql/stored/SqlStoredProducer.java\nindex 1636b65b934..a45d8246f17 100644\n--- a/components/camel-sql/src/main/java/org/apache/camel/component/sql/stored/SqlStoredProducer.java\n+++ b/components/camel-sql/src/main/java/org/apache/camel/component/sql/stored/SqlStoredProducer.java\n\n@@ -126,6 +127,19 @@ public class SqlStoredProducer extends DefaultProducer {\n     protected void doInit() throws Exception {\n         super.doInit();\n \n-        resolvedTemplate = SqlHelper.resolveQuery(getEndpoint().getCamelContext(), getEndpoint().getTemplate(), null);\n+        String template = getEndpoint().getTemplate();\n+        if (ResourceHelper.isClasspathUri(template)) {\n+            resolvedTemplate = SqlHelper.resolveQuery(getEndpoint().getCamelContext(), template, null);\n+        }\n+    }\n+\n+    @Override\n+    protected void doStart() throws Exception {\n+        super.doStart();\n+\n+        String template = getEndpoint().getTemplate();\n+        if (!ResourceHelper.isClasspathUri(template)) {\n+            resolvedTemplate = SqlHelper.resolveQuery(getEndpoint().getCamelContext(), template, null);\n+        }\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE5NzA0Nw==", "url": "https://github.com/apache/camel/pull/3859#discussion_r430197047", "bodyText": "This should be doStart as SqlHelper.resolveQuery can potentially load the SQL template from file system. See the SQL docs", "author": "davsclaus", "createdAt": "2020-05-26T07:04:19Z", "path": "components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlProducer.java", "diffHunk": "@@ -69,8 +69,8 @@ public SqlEndpoint getEndpoint() {\n     }\n \n     @Override\n-    protected void doStart() throws Exception {\n-        super.doStart();\n+    protected void doInit() throws Exception {\n+        super.doInit();", "originalCommit": "c58311b66963938f2e2a6b9c1d8e15850f8f6011", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea0f3c0b6c142927aafeed7d8fb843dd5063cb30", "chunk": "diff --git a/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlProducer.java b/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlProducer.java\nindex 12a4262f7ee..b7f4d68cb66 100644\n--- a/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlProducer.java\n+++ b/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlProducer.java\n\n@@ -72,8 +73,20 @@ public class SqlProducer extends DefaultProducer {\n     protected void doInit() throws Exception {\n         super.doInit();\n \n-        String placeholder = getEndpoint().isUsePlaceholder() ? getEndpoint().getPlaceholder() : null;\n-        resolvedQuery = SqlHelper.resolveQuery(getEndpoint().getCamelContext(), query, placeholder);\n+        if (ResourceHelper.isClasspathUri(query)) {\n+            String placeholder = getEndpoint().isUsePlaceholder() ? getEndpoint().getPlaceholder() : null;\n+            resolvedQuery = SqlHelper.resolveQuery(getEndpoint().getCamelContext(), query, placeholder);\n+        }\n+    }\n+\n+    @Override\n+    protected void doStart() throws Exception {\n+        super.doStart();\n+\n+        if (!ResourceHelper.isClasspathUri(query)) {\n+            String placeholder = getEndpoint().isUsePlaceholder() ? getEndpoint().getPlaceholder() : null;\n+            resolvedQuery = SqlHelper.resolveQuery(getEndpoint().getCamelContext(), query, placeholder);\n+        }\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE5NzE4Mw==", "url": "https://github.com/apache/camel/pull/3859#discussion_r430197183", "bodyText": "This should be doStart as SqlHelper.resolveQuery can potentially load the SQL template from file system. See the SQL docs", "author": "davsclaus", "createdAt": "2020-05-26T07:04:41Z", "path": "components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlConsumer.java", "diffHunk": "@@ -101,8 +101,8 @@ public DefaultSqlEndpoint getEndpoint() {\n     }\n \n     @Override\n-    protected void doStart() throws Exception {\n-        super.doStart();\n+    protected void doInit() throws Exception {\n+        super.doInit();", "originalCommit": "c58311b66963938f2e2a6b9c1d8e15850f8f6011", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea0f3c0b6c142927aafeed7d8fb843dd5063cb30", "chunk": "diff --git a/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlConsumer.java b/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlConsumer.java\nindex bfa67566e6a..b690c5dbba5 100644\n--- a/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlConsumer.java\n+++ b/components/camel-sql/src/main/java/org/apache/camel/component/sql/SqlConsumer.java\n\n@@ -104,8 +105,20 @@ public class SqlConsumer extends ScheduledBatchPollingConsumer {\n     protected void doInit() throws Exception {\n         super.doInit();\n \n-        String placeholder = getEndpoint().isUsePlaceholder() ? getEndpoint().getPlaceholder() : null;\n-        resolvedQuery = SqlHelper.resolveQuery(getEndpoint().getCamelContext(), query, placeholder);\n+        if (ResourceHelper.isClasspathUri(query)) {\n+            String placeholder = getEndpoint().isUsePlaceholder() ? getEndpoint().getPlaceholder() : null;\n+            resolvedQuery = SqlHelper.resolveQuery(getEndpoint().getCamelContext(), query, placeholder);\n+        }\n+    }\n+\n+    @Override\n+    protected void doStart() throws Exception {\n+        super.doStart();\n+\n+        if (!ResourceHelper.isClasspathUri(query)) {\n+            String placeholder = getEndpoint().isUsePlaceholder() ? getEndpoint().getPlaceholder() : null;\n+            resolvedQuery = SqlHelper.resolveQuery(getEndpoint().getCamelContext(), query, placeholder);\n+        }\n     }\n \n     @Override\n"}}, {"oid": "df1bc5dd3391f239bbdd6f508df79e347e38a061", "url": "https://github.com/apache/camel/commit/df1bc5dd3391f239bbdd6f508df79e347e38a061", "message": "CAMEL-14805: Component - Use doInit for wiring instead of doStart\n\n    * camel-bean\n    * camel-dataformat\n    * camel-dozer\n    * camel-file\n    * camel-sql\n    * camel-stream\n    * camel-timer\n    * camel-xslt", "committedDate": "2020-05-26T07:41:52Z", "type": "commit"}, {"oid": "ea0f3c0b6c142927aafeed7d8fb843dd5063cb30", "url": "https://github.com/apache/camel/commit/ea0f3c0b6c142927aafeed7d8fb843dd5063cb30", "message": "CAMEL-14805: Component - load classpath resource in doInit otherwise in doStart", "committedDate": "2020-05-26T07:59:25Z", "type": "commit"}, {"oid": "ea0f3c0b6c142927aafeed7d8fb843dd5063cb30", "url": "https://github.com/apache/camel/commit/ea0f3c0b6c142927aafeed7d8fb843dd5063cb30", "message": "CAMEL-14805: Component - load classpath resource in doInit otherwise in doStart", "committedDate": "2020-05-26T07:59:25Z", "type": "forcePushed"}, {"oid": "1c536daa0a6957a93aecdf682e3ac2c3916fa083", "url": "https://github.com/apache/camel/commit/1c536daa0a6957a93aecdf682e3ac2c3916fa083", "message": "CAMEL-14805: Fix CS", "committedDate": "2020-05-26T08:16:14Z", "type": "commit"}]}