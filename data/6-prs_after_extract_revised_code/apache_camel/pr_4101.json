{"pr_number": 4101, "pr_title": "Added testcontainer integration test for Minio", "pr_createdAt": "2020-08-19T10:00:59Z", "pr_url": "https://github.com/apache/camel/pull/4101", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkyMTY2NA==", "url": "https://github.com/apache/camel/pull/4101#discussion_r472921664", "bodyText": "Please don't add credentials to the source code files", "author": "omarsmak", "createdAt": "2020-08-19T10:19:23Z", "path": "components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/testContainers/MinioComponentIntegrationTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.component.minio.integration.testContainers;\n+\n+import java.io.IOException;\n+import java.time.Duration;\n+import java.util.Properties;\n+\n+import org.apache.camel.EndpointInject;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.ExchangePattern;\n+import org.apache.camel.Message;\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.builder.RouteBuilder;\n+import org.apache.camel.component.minio.MinioConstants;\n+import org.apache.camel.component.minio.integration.MinioTestUtils;\n+import org.apache.camel.component.mock.MockEndpoint;\n+import org.apache.camel.test.testcontainers.junit5.ContainerAwareTestSupport;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.wait.strategy.HttpWaitStrategy;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+\n+public class MinioComponentIntegrationTest extends ContainerAwareTestSupport {\n+\n+    final Properties properties = MinioTestUtils.loadMinioPropertiesFile();\n+    final int port = 9000;\n+\n+    @EndpointInject(\"direct:start\")\n+    private ProducerTemplate template;\n+\n+    @EndpointInject(\"mock:result\")\n+    private MockEndpoint result;\n+\n+    public MinioComponentIntegrationTest() throws IOException {\n+    }\n+\n+    @Test\n+    public void sendInOnly() throws Exception {\n+        result.expectedMessageCount(1);\n+\n+        Exchange exchange1 = template.send(\"direct:start\", ExchangePattern.InOnly, exchange -> {\n+            exchange.getIn().setHeader(MinioConstants.OBJECT_NAME, \"CamelUnitTest\");\n+            exchange.getIn().setBody(\"This is my bucket content.\");\n+        });\n+\n+        Exchange exchange2 = template.send(\"direct:start\", ExchangePattern.InOnly, exchange -> {\n+            exchange.getIn().setHeader(MinioConstants.OBJECT_NAME, \"CamelUnitTest\");\n+            exchange.getIn().setBody(\"This is my bucket content.\");\n+        });\n+\n+        assertMockEndpointsSatisfied();\n+\n+        assertResultExchange(result.getExchanges().get(0));\n+\n+        assertResponseMessage(exchange1.getIn());\n+        assertResponseMessage(exchange2.getIn());\n+    }\n+\n+    @Test\n+    public void sendInOut() throws Exception {\n+        result.expectedMessageCount(1);\n+\n+        Exchange exchange = template.send(\"direct:start\", ExchangePattern.InOut, exchange1 -> {\n+            exchange1.getIn().setHeader(MinioConstants.OBJECT_NAME, \"CamelUnitTest\");\n+            exchange1.getIn().setBody(\"This is my bucket content.\");\n+        });\n+\n+        assertMockEndpointsSatisfied();\n+\n+        assertResultExchange(result.getExchanges().get(0));\n+\n+        assertResponseMessage(exchange.getMessage());\n+    }\n+\n+    private void assertResultExchange(Exchange resultExchange) {\n+        assertEquals(\"This is my bucket content.\", resultExchange.getIn().getBody(String.class));\n+        assertEquals(\"mycamelbucket\", resultExchange.getIn().getHeader(MinioConstants.BUCKET_NAME));\n+        assertTrue(resultExchange.getIn().getHeader(MinioConstants.OBJECT_NAME, String.class).startsWith(\"CamelUnitTest\"));\n+        assertNull(resultExchange.getIn().getHeader(MinioConstants.VERSION_ID)); // not enabled on this bucket\n+        assertNotNull(resultExchange.getIn().getHeader(MinioConstants.LAST_MODIFIED));\n+        assertEquals(\"application/octet-stream\", resultExchange.getIn().getHeader(MinioConstants.CONTENT_TYPE));\n+        assertNull(resultExchange.getIn().getHeader(MinioConstants.CONTENT_ENCODING));\n+        assertEquals(26L, resultExchange.getIn().getHeader(MinioConstants.CONTENT_LENGTH));\n+        assertNull(resultExchange.getIn().getHeader(MinioConstants.CONTENT_DISPOSITION));\n+        assertNull(resultExchange.getIn().getHeader(MinioConstants.CONTENT_MD5));\n+        assertNull(resultExchange.getIn().getHeader(MinioConstants.CACHE_CONTROL));\n+    }\n+\n+    private void assertResponseMessage(Message message) {\n+        assertNull(message.getHeader(MinioConstants.VERSION_ID));\n+    }\n+\n+    @Override\n+    protected RouteBuilder createRouteBuilder() {\n+        return new RouteBuilder() {\n+            @Override\n+            public void configure() {\n+                String minioEndpointUri =\n+                        \"minio://mycamelbucket?accessKey=Q3AM3UQ867SPQQA43P2F&secretKey=RAW(zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG)&region=us-west-1&autoCreateBucket=true&endpoint=http://127.0.0.1&proxyPort=9000\";", "originalCommit": "107125cd629c91b175030b4fd650af039684a013", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA2NDE5Nw==", "url": "https://github.com/apache/camel/pull/4101#discussion_r473064197", "bodyText": "@omarsmak sure I'll import them from a resource file, Any suggestions regarding above error?", "author": "Nayananga", "createdAt": "2020-08-19T14:17:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkyMTY2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA3NDUzNA==", "url": "https://github.com/apache/camel/pull/4101#discussion_r473074534", "bodyText": "@Nayananga Try to use something similar to this as I think testcontainer will generate dynamic IP but then needs to be mapped and then something like getContainer(CONTAINER_NAME).getContainerIpAddress(); to access your container's IP", "author": "omarsmak", "createdAt": "2020-08-19T14:30:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkyMTY2NA=="}], "type": "inlineReview", "revised_code": {"commit": "46bf2afc11816129f9095357c40ad8da5202e67a", "chunk": "diff --git a/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/testContainers/MinioComponentIntegrationTest.java b/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/testContainers/MinioComponentIntegrationTest.java\nindex 543bcf38062..32c3c4c0bf3 100644\n--- a/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/testContainers/MinioComponentIntegrationTest.java\n+++ b/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/testContainers/MinioComponentIntegrationTest.java\n\n@@ -17,7 +17,6 @@\n package org.apache.camel.component.minio.integration.testContainers;\n \n import java.io.IOException;\n-import java.time.Duration;\n import java.util.Properties;\n \n import org.apache.camel.EndpointInject;\n"}}, {"oid": "46bf2afc11816129f9095357c40ad8da5202e67a", "url": "https://github.com/apache/camel/commit/46bf2afc11816129f9095357c40ad8da5202e67a", "message": "Fixed errors in tests", "committedDate": "2020-08-20T12:04:50Z", "type": "forcePushed"}, {"oid": "b4e39edc21c96d32093c64b26b17f8958337b826", "url": "https://github.com/apache/camel/commit/b4e39edc21c96d32093c64b26b17f8958337b826", "message": "Fixed errors in tests", "committedDate": "2020-08-21T14:29:51Z", "type": "forcePushed"}, {"oid": "208a14a671e767e684ce1cb7e35dacbc0b66608b", "url": "https://github.com/apache/camel/commit/208a14a671e767e684ce1cb7e35dacbc0b66608b", "message": "Fixed errors in tests", "committedDate": "2020-08-22T10:49:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3NjYxNw==", "url": "https://github.com/apache/camel/pull/4101#discussion_r475276617", "bodyText": "Junit5 is used, would be better to remove public access modifier in all test classes and all tests methods. So they will have default access modifier:\nclass MinioComponentIntegrationTest extends CamelTestSupport {", "author": "DenisIstomin", "createdAt": "2020-08-23T22:46:18Z", "path": "components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/MinioComponentIntegrationTest.java", "diffHunk": "@@ -33,18 +36,22 @@\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n-@Disabled(\"Must be manually tested. Provide your own accessKey and secretKey!\")\n+@Disabled(\"Goto https://play.min.io and search for 'mycamelbucket'. If bucket(s) does not exist, set 'autoCreateBucket=true' in route(s)\")\n public class MinioComponentIntegrationTest extends CamelTestSupport {", "originalCommit": "208a14a671e767e684ce1cb7e35dacbc0b66608b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4282fb6650ff68e2bbd72bea5dad8088e53c0b71", "chunk": "diff --git a/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/MinioComponentIntegrationTest.java b/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/MinioComponentIntegrationTest.java\nindex 10765a5c6e9..86ddc683415 100644\n--- a/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/MinioComponentIntegrationTest.java\n+++ b/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/MinioComponentIntegrationTest.java\n\n@@ -36,9 +33,8 @@ import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n-@Disabled(\"Goto https://play.min.io and search for 'mycamelbucket'. If bucket(s) does not exist, set 'autoCreateBucket=true' in route(s)\")\n+@Disabled(\"Must be manually tested. Provide your own accessKey and secretKey!\")\n public class MinioComponentIntegrationTest extends CamelTestSupport {\n-    final Properties properties = MinioTestUtils.loadMinioPropertiesFile();\n \n     @EndpointInject(\"direct:start\")\n     private ProducerTemplate template;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3NjcyNQ==", "url": "https://github.com/apache/camel/pull/4101#discussion_r475276725", "bodyText": "Junit5 is used, would be better to remove public access modifier in all test classes and all tests methods. So they will have default access modifier:\nvoid sendInOnly() throws Exception {", "author": "DenisIstomin", "createdAt": "2020-08-23T22:47:26Z", "path": "components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/MinioComponentIntegrationTest.java", "diffHunk": "@@ -33,18 +36,22 @@\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n-@Disabled(\"Must be manually tested. Provide your own accessKey and secretKey!\")\n+@Disabled(\"Goto https://play.min.io and search for 'mycamelbucket'. If bucket(s) does not exist, set 'autoCreateBucket=true' in route(s)\")\n public class MinioComponentIntegrationTest extends CamelTestSupport {\n+    final Properties properties = MinioTestUtils.loadMinioPropertiesFile();\n \n     @EndpointInject(\"direct:start\")\n     private ProducerTemplate template;\n \n     @EndpointInject(\"mock:result\")\n     private MockEndpoint result;\n \n+    public MinioComponentIntegrationTest() throws IOException {\n+    }\n+\n     @Test\n     public void sendInOnly() throws Exception {", "originalCommit": "208a14a671e767e684ce1cb7e35dacbc0b66608b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4282fb6650ff68e2bbd72bea5dad8088e53c0b71", "chunk": "diff --git a/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/MinioComponentIntegrationTest.java b/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/MinioComponentIntegrationTest.java\nindex 10765a5c6e9..86ddc683415 100644\n--- a/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/MinioComponentIntegrationTest.java\n+++ b/components/camel-minio/src/test/java/org/apache/camel/component/minio/integration/MinioComponentIntegrationTest.java\n\n@@ -36,9 +33,8 @@ import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n-@Disabled(\"Goto https://play.min.io and search for 'mycamelbucket'. If bucket(s) does not exist, set 'autoCreateBucket=true' in route(s)\")\n+@Disabled(\"Must be manually tested. Provide your own accessKey and secretKey!\")\n public class MinioComponentIntegrationTest extends CamelTestSupport {\n-    final Properties properties = MinioTestUtils.loadMinioPropertiesFile();\n \n     @EndpointInject(\"direct:start\")\n     private ProducerTemplate template;\n"}}, {"oid": "4282fb6650ff68e2bbd72bea5dad8088e53c0b71", "url": "https://github.com/apache/camel/commit/4282fb6650ff68e2bbd72bea5dad8088e53c0b71", "message": "Added testcontainer integration test", "committedDate": "2020-08-24T08:18:06Z", "type": "commit"}, {"oid": "b0a058ceed181e6b40333e88e99d4ecf77a49177", "url": "https://github.com/apache/camel/commit/b0a058ceed181e6b40333e88e99d4ecf77a49177", "message": "Checkstyle errors fixed", "committedDate": "2020-08-24T08:18:06Z", "type": "commit"}, {"oid": "e168043395f49d75eb2cf3cd6d0db492a2e8a040", "url": "https://github.com/apache/camel/commit/e168043395f49d75eb2cf3cd6d0db492a2e8a040", "message": "Checkstyle errors fixed", "committedDate": "2020-08-24T08:18:06Z", "type": "commit"}, {"oid": "06d4522780e935af60a958c0e79797aa6ebdd354", "url": "https://github.com/apache/camel/commit/06d4522780e935af60a958c0e79797aa6ebdd354", "message": "Fixed errors in tests", "committedDate": "2020-08-24T08:18:06Z", "type": "commit"}, {"oid": "a2b730974c7cb925c6efa0861bc96025da9e7184", "url": "https://github.com/apache/camel/commit/a2b730974c7cb925c6efa0861bc96025da9e7184", "message": "Fixed errors in tests", "committedDate": "2020-08-24T08:18:06Z", "type": "commit"}, {"oid": "71b4301477f9f9b14d592665b3027390edc48659", "url": "https://github.com/apache/camel/commit/71b4301477f9f9b14d592665b3027390edc48659", "message": "Fixed errors in tests", "committedDate": "2020-08-24T08:18:07Z", "type": "commit"}, {"oid": "ef0e93a0343995930aceff36ebbca1e278364460", "url": "https://github.com/apache/camel/commit/ef0e93a0343995930aceff36ebbca1e278364460", "message": "Added maven test profiles", "committedDate": "2020-08-24T08:18:07Z", "type": "commit"}, {"oid": "ef0e93a0343995930aceff36ebbca1e278364460", "url": "https://github.com/apache/camel/commit/ef0e93a0343995930aceff36ebbca1e278364460", "message": "Added maven test profiles", "committedDate": "2020-08-24T08:18:07Z", "type": "forcePushed"}, {"oid": "b3bbbbb23ee79f8c0f685f3fbb7f43e1a5bc0da1", "url": "https://github.com/apache/camel/commit/b3bbbbb23ee79f8c0f685f3fbb7f43e1a5bc0da1", "message": "Changed test's access modifiers from public to default", "committedDate": "2020-08-24T08:38:55Z", "type": "commit"}]}