{"pr_number": 3574, "pr_title": "CAMEL-14543: Execute camel-etcd tests with testcontainers", "pr_createdAt": "2020-02-12T16:29:38Z", "pr_url": "https://github.com/apache/camel/pull/3574", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5MDU3OQ==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378390579", "bodyText": "I think 0.0.0.0 here should be replaced with DockerClientFactory.instance().dockerHostIpAddress(), if that's the endpoint the client will be trying to reach at", "author": "bsideup", "createdAt": "2020-02-12T17:09:02Z", "path": "components/camel-etcd/src/test/java/org/apache/camel/component/etcd/EtcdTestSupport.java", "diffHunk": "@@ -35,12 +43,50 @@ public void process(Exchange exchange) throws Exception {\n         }\n     };\n \n-    @Override\n-    public boolean isCreateCamelContextPerClass() {\n-        return false;\n+    protected String getClientUri() {\n+        return String.format(\n+            \"http://%s:%d\",\n+            getContainerHost(CONTAINER_NAME),\n+            getContainerPort(CONTAINER_NAME, ETCD_CLIENT_PORT));\n     }\n \n     protected EtcdClient getClient() {\n-        return new EtcdClient(URI.create(\"http://localhost:2379\"));\n+        return new EtcdClient(URI.create(getClientUri()));\n+    }\n+\n+    @Override\n+    protected CamelContext createCamelContext() throws Exception {\n+        EtcdKeysComponent keys = new EtcdKeysComponent();\n+        keys.setUris(getClientUri());\n+\n+        EtcdStatsComponent stats = new EtcdStatsComponent();\n+        stats.setUris(getClientUri());\n+\n+        EtcdWatchComponent watch = new EtcdWatchComponent();\n+        watch.setUris(getClientUri());\n+\n+        CamelContext context = super.createCamelContext();\n+        context.addComponent(\"etcd-keys\", keys);\n+        context.addComponent(\"etcd-stats\", stats);\n+        context.addComponent(\"etcd-watch\", watch);\n+\n+        return context;\n+    }\n+\n+    @Override\n+    protected GenericContainer<?> createContainer() {\n+        return etcdContainer();\n+    }\n+\n+    public static GenericContainer etcdContainer() {\n+        return new GenericContainer(CONTAINER_IMAGE)\n+            .withNetworkAliases(CONTAINER_NAME)\n+            .withExposedPorts(ETCD_CLIENT_PORT, ETCD_PEER_PORT)\n+            .waitingFor(Wait.forLogMessageContaining(\"etcdserver: set the initial cluster version\", 1))\n+            .withCommand(\n+                \"-name\", CONTAINER_NAME + \"-0\",\n+                \"-advertise-client-urls\", \"http://0.0.0.0:\" + ETCD_CLIENT_PORT,", "originalCommit": "05b3a588c6eb945ab2a428a0ff6ae60176cd34ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcwODc4OQ==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378708789", "bodyText": "this seems to return `localhost\"", "author": "lburgazzoli", "createdAt": "2020-02-13T08:22:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5MDU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcxMDAwMg==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378710002", "bodyText": "On your machine - yes :)\nSee \"There is no place <...>\" here:\nhttps://bsideup.github.io/posts/testcontainers_fixed_ports/", "author": "bsideup", "createdAt": "2020-02-13T08:25:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5MDU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcxNTk0OQ==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378715949", "bodyText": "I don't use fixed port but the address the client connects to is made using something like\ncontainer.getContainerIpAddress() + \":\" + container.getMappedPort(ETCD_CLIENT_PORT)\n\nThen, by changing the address as you suggested, the client fails to connect because of:\nconnection refused: localhost/127.0.0.1:32804\n\nWhich seems to be expected as etcd inside the container won't bind to all addresses but on loopback", "author": "lburgazzoli", "createdAt": "2020-02-13T08:38:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5MDU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcxOTA1NA==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378719054", "bodyText": "Interesting!\nI assumed the bind address is controlled with -listen-client-urls and not -advertise-client-urls. Or did you change both?\nAlso from here:\nhttps://etcd.io/docs/v3.3.12/faq/\n\nadvertise-client-urls and initial-advertise-peer-urls specify the addresses etcd clients or other etcd members should use to contact the etcd server. The advertise addresses must be reachable from the remote machines. Do not advertise addresses like localhost or 0.0.0.0 for a production setup since these addresses are unreachable from remote machines.", "author": "bsideup", "createdAt": "2020-02-13T08:44:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5MDU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODczMDk1MA==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378730950", "bodyText": "mh, in fact it is another issue with a test, let me fix it", "author": "lburgazzoli", "createdAt": "2020-02-13T09:08:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5MDU3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2MTk2NA==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378761964", "bodyText": "@bsideup ok fixed now, thx for the suggestion", "author": "lburgazzoli", "createdAt": "2020-02-13T10:06:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM5MDU3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c271c6490aef9517b46fb43dedeb1f0fd5a1e914", "chunk": "diff --git a/components/camel-etcd/src/test/java/org/apache/camel/component/etcd/EtcdTestSupport.java b/components/camel-etcd/src/test/java/org/apache/camel/component/etcd/support/EtcdTestSupport.java\nsimilarity index 75%\nrename from components/camel-etcd/src/test/java/org/apache/camel/component/etcd/EtcdTestSupport.java\nrename to components/camel-etcd/src/test/java/org/apache/camel/component/etcd/support/EtcdTestSupport.java\nindex b6309313c71..4d04908d3e6 100644\n--- a/components/camel-etcd/src/test/java/org/apache/camel/component/etcd/EtcdTestSupport.java\n+++ b/components/camel-etcd/src/test/java/org/apache/camel/component/etcd/support/EtcdTestSupport.java\n\n@@ -14,32 +14,35 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.camel.component.etcd;\n+package org.apache.camel.component.etcd.support;\n \n import java.net.URI;\n \n+import com.fasterxml.jackson.databind.ObjectMapper;\n import mousio.etcd4j.EtcdClient;\n import mousio.etcd4j.responses.EtcdKeysResponse;\n import org.apache.camel.CamelContext;\n-import org.apache.camel.Exchange;\n import org.apache.camel.Processor;\n+import org.apache.camel.component.etcd.EtcdHelper;\n+import org.apache.camel.component.etcd.EtcdKeysComponent;\n+import org.apache.camel.component.etcd.EtcdStatsComponent;\n+import org.apache.camel.component.etcd.EtcdWatchComponent;\n import org.apache.camel.test.testcontainers.junit5.ContainerAwareTestSupport;\n import org.apache.camel.test.testcontainers.junit5.Wait;\n+import org.testcontainers.DockerClientFactory;\n import org.testcontainers.containers.GenericContainer;\n \n-public class EtcdTestSupport extends ContainerAwareTestSupport {\n+public abstract class EtcdTestSupport extends ContainerAwareTestSupport {\n+    public static final ObjectMapper MAPPER = EtcdHelper.createObjectMapper();\n     public static final String CONTAINER_IMAGE = \"quay.io/coreos/etcd:v2.3.7\";\n     public static final String CONTAINER_NAME = \"etcd\";\n     public static final int ETCD_CLIENT_PORT = 2379;\n     public static final int ETCD_PEER_PORT = 2380;\n \n-    protected static final Processor NODE_TO_VALUE_IN = new Processor() {\n-        @Override\n-        public void process(Exchange exchange) throws Exception {\n-            EtcdKeysResponse response = exchange.getIn().getBody(EtcdKeysResponse.class);\n-            if (response != null) {\n-                exchange.getIn().setBody(response.node.key + \"=\" + response.node.value);\n-            }\n+    protected static final Processor NODE_TO_VALUE_IN = exchange -> {\n+        EtcdKeysResponse response = exchange.getMessage().getBody(EtcdKeysResponse.class);\n+        if (response != null) {\n+            exchange.getMessage().setBody(response.node.key + \"=\" + response.node.value);\n         }\n     };\n \n"}}, {"oid": "c271c6490aef9517b46fb43dedeb1f0fd5a1e914", "url": "https://github.com/apache/camel/commit/c271c6490aef9517b46fb43dedeb1f0fd5a1e914", "message": "CAMEL-14543: Execute camel-etcd tests with testcontainers", "committedDate": "2020-02-13T10:05:15Z", "type": "commit"}, {"oid": "c271c6490aef9517b46fb43dedeb1f0fd5a1e914", "url": "https://github.com/apache/camel/commit/c271c6490aef9517b46fb43dedeb1f0fd5a1e914", "message": "CAMEL-14543: Execute camel-etcd tests with testcontainers", "committedDate": "2020-02-13T10:05:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2NTc1Mw==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378765753", "bodyText": "actually, I just realized that ETCD_CLIENT_PORT will not be the same as the randomly selected port.\nSince it works, perhaps you don't need it at all?", "author": "bsideup", "createdAt": "2020-02-13T10:13:17Z", "path": "components/camel-etcd/src/test/java/org/apache/camel/component/etcd/support/EtcdTestSupport.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.component.etcd.support;\n+\n+import java.net.URI;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import mousio.etcd4j.EtcdClient;\n+import mousio.etcd4j.responses.EtcdKeysResponse;\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.Processor;\n+import org.apache.camel.component.etcd.EtcdHelper;\n+import org.apache.camel.component.etcd.EtcdKeysComponent;\n+import org.apache.camel.component.etcd.EtcdStatsComponent;\n+import org.apache.camel.component.etcd.EtcdWatchComponent;\n+import org.apache.camel.test.testcontainers.junit5.ContainerAwareTestSupport;\n+import org.apache.camel.test.testcontainers.junit5.Wait;\n+import org.testcontainers.DockerClientFactory;\n+import org.testcontainers.containers.GenericContainer;\n+\n+public abstract class EtcdTestSupport extends ContainerAwareTestSupport {\n+    public static final ObjectMapper MAPPER = EtcdHelper.createObjectMapper();\n+    public static final String CONTAINER_IMAGE = \"quay.io/coreos/etcd:v2.3.7\";\n+    public static final String CONTAINER_NAME = \"etcd\";\n+    public static final int ETCD_CLIENT_PORT = 2379;\n+    public static final int ETCD_PEER_PORT = 2380;\n+\n+    protected static final Processor NODE_TO_VALUE_IN = exchange -> {\n+        EtcdKeysResponse response = exchange.getMessage().getBody(EtcdKeysResponse.class);\n+        if (response != null) {\n+            exchange.getMessage().setBody(response.node.key + \"=\" + response.node.value);\n+        }\n+    };\n+\n+    protected String getClientUri() {\n+        return String.format(\n+            \"http://%s:%d\",\n+            getContainerHost(CONTAINER_NAME),\n+            getContainerPort(CONTAINER_NAME, ETCD_CLIENT_PORT));\n+    }\n+\n+    protected EtcdClient getClient() {\n+        return new EtcdClient(URI.create(getClientUri()));\n+    }\n+\n+    @Override\n+    protected CamelContext createCamelContext() throws Exception {\n+        EtcdKeysComponent keys = new EtcdKeysComponent();\n+        keys.setUris(getClientUri());\n+\n+        EtcdStatsComponent stats = new EtcdStatsComponent();\n+        stats.setUris(getClientUri());\n+\n+        EtcdWatchComponent watch = new EtcdWatchComponent();\n+        watch.setUris(getClientUri());\n+\n+        CamelContext context = super.createCamelContext();\n+        context.addComponent(\"etcd-keys\", keys);\n+        context.addComponent(\"etcd-stats\", stats);\n+        context.addComponent(\"etcd-watch\", watch);\n+\n+        return context;\n+    }\n+\n+    @Override\n+    protected GenericContainer<?> createContainer() {\n+        return etcdContainer();\n+    }\n+\n+    public static GenericContainer etcdContainer() {\n+        return new GenericContainer(CONTAINER_IMAGE)\n+            .withNetworkAliases(CONTAINER_NAME)\n+            .withExposedPorts(ETCD_CLIENT_PORT, ETCD_PEER_PORT)\n+            .waitingFor(Wait.forLogMessageContaining(\"etcdserver: set the initial cluster version\", 1))\n+            .withCommand(\n+                \"-name\", CONTAINER_NAME + \"-0\",\n+                \"-advertise-client-urls\", \"http://\" + DockerClientFactory.instance().dockerHostIpAddress() + \":\" + ETCD_CLIENT_PORT,", "originalCommit": "c271c6490aef9517b46fb43dedeb1f0fd5a1e914", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2ODMzMA==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378768330", "bodyText": "seems to fail top start if that option is not set", "author": "lburgazzoli", "createdAt": "2020-02-13T10:18:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2NTc1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc3NzY0MA==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378777640", "bodyText": "just out of curiosity - can you try using a non-default port?\nI have a guess that it reconnects to localhost where you already have etcd running on the default port.", "author": "bsideup", "createdAt": "2020-02-13T10:35:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2NTc1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc4MDk2OQ==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378780969", "bodyText": "When I look at the doc it looks like advertise-client-urls and listen-client-urls are both bound to the same port", "author": "lburgazzoli", "createdAt": "2020-02-13T10:42:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2NTc1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg2MDEyNg==", "url": "https://github.com/apache/camel/pull/3574#discussion_r378860126", "bodyText": "this is because they use static ports. It reminds me of Kafka, he had to fight with the same issue there, this is why we have a bit fancy implementation of KafkaContainer :D", "author": "bsideup", "createdAt": "2020-02-13T13:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc2NTc1Mw=="}], "type": "inlineReview", "revised_code": null}]}