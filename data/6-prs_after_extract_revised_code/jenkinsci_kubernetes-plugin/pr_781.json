{"pr_number": 781, "pr_title": "Don't use Computer#getLogDir to avoid race condition", "pr_createdAt": "2020-05-15T12:31:00Z", "pr_url": "https://github.com/jenkinsci/kubernetes-plugin/pull/781", "timeline": [{"oid": "033beed9b8680eac68b3d7e011b9e411ef6364f4", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/033beed9b8680eac68b3d7e011b9e411ef6364f4", "message": "Don't use Computer#getLogDir to avoid race condition", "committedDate": "2020-05-15T12:30:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2MjI5Ng==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/781#discussion_r425862296", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    if (j == null) break;\n          \n          \n            \n                                    if (j == null) {\n          \n          \n            \n                                        break;\n          \n          \n            \n                                    }", "author": "jglick", "createdAt": "2020-05-15T15:01:39Z", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java", "diffHunk": "@@ -128,8 +129,12 @@ public void runInPod() throws Exception {\n             new Thread(() -> {\n                 long pos = 0;\n                 try {\n-                    while (Jenkins.getInstanceOrNull() != null) { // otherwise get NPE from Computer.getLogDir\n-                        if (c.getLogFile().isFile()) { // TODO should LargeText.FileSession handle this?\n+                    while (true) {\n+                        Jenkins j = Jenkins.getInstanceOrNull();\n+                        if (j == null) break;", "originalCommit": "033beed9b8680eac68b3d7e011b9e411ef6364f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d10b1fa40fe87889f0197828bf01b177ef92187", "chunk": "diff --git a/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java b/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java\nindex 98f7e70d..f60f0410 100644\n--- a/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java\n+++ b/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java\n\n@@ -131,7 +131,9 @@ public class KubernetesPipelineTest extends AbstractKubernetesPipelineTest {\n                 try {\n                     while (true) {\n                         Jenkins j = Jenkins.getInstanceOrNull();\n-                        if (j == null) break;\n+                        if (j == null) {\n+                            break;\n+                        }\n                         // not using Computer#getLogDir as it has side-effect of creating log directories which can create a race condition with main code\n                         File logFile = new File(j.getRootDir(), \"logs/slaves/\" + c.getName() + \"/slave.log\");\n                         if (logFile.isFile()) { // TODO should LargeText.FileSession handle this?\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2MzA1Ng==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/781#discussion_r425863056", "bodyText": "Hmm. I guess OK as a hotfix but this is not maintainable. Is there a core patch to fix the underlying issue?", "author": "jglick", "createdAt": "2020-05-15T15:02:46Z", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java", "diffHunk": "@@ -128,8 +129,12 @@ public void runInPod() throws Exception {\n             new Thread(() -> {\n                 long pos = 0;\n                 try {\n-                    while (Jenkins.getInstanceOrNull() != null) { // otherwise get NPE from Computer.getLogDir\n-                        if (c.getLogFile().isFile()) { // TODO should LargeText.FileSession handle this?\n+                    while (true) {\n+                        Jenkins j = Jenkins.getInstanceOrNull();\n+                        if (j == null) break;\n+                        // not using Computer#getLogDir as it has side-effect of creating log directories which can create a race condition with main code\n+                        File logFile = new File(j.getRootDir(), \"logs/slaves/\" + c.getName() + \"/slave.log\");", "originalCommit": "033beed9b8680eac68b3d7e011b9e411ef6364f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d10b1fa40fe87889f0197828bf01b177ef92187", "chunk": "diff --git a/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java b/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java\nindex 98f7e70d..f60f0410 100644\n--- a/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java\n+++ b/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java\n\n@@ -131,7 +131,9 @@ public class KubernetesPipelineTest extends AbstractKubernetesPipelineTest {\n                 try {\n                     while (true) {\n                         Jenkins j = Jenkins.getInstanceOrNull();\n-                        if (j == null) break;\n+                        if (j == null) {\n+                            break;\n+                        }\n                         // not using Computer#getLogDir as it has side-effect of creating log directories which can create a race condition with main code\n                         File logFile = new File(j.getRootDir(), \"logs/slaves/\" + c.getName() + \"/slave.log\");\n                         if (logFile.isFile()) { // TODO should LargeText.FileSession handle this?\n"}}, {"oid": "0d10b1fa40fe87889f0197828bf01b177ef92187", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/0d10b1fa40fe87889f0197828bf01b177ef92187", "message": "Update src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java\n\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>", "committedDate": "2020-05-18T12:13:15Z", "type": "commit"}]}