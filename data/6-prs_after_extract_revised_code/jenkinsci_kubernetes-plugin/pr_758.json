{"pr_number": 758, "pr_title": "[JENKINS-61930] JCasC testing", "pr_createdAt": "2020-04-16T13:00:49Z", "pr_url": "https://github.com/jenkinsci/kubernetes-plugin/pull/758", "timeline": [{"oid": "07561d6e0a616d444260ecc6fe0a332d36983575", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/07561d6e0a616d444260ecc6fe0a332d36983575", "message": "[JENKINS-61930] JCasC testing", "committedDate": "2020-04-16T13:00:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUzODMxNA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/758#discussion_r409538314", "bodyText": "OK I am bored already. \ud83d\ude2a", "author": "jglick", "createdAt": "2020-04-16T13:03:58Z", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/casc/CasCTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package org.csanchez.jenkins.plugins.kubernetes.casc;\n+\n+import io.jenkins.plugins.casc.misc.RoundTripAbstractTest;\n+import org.csanchez.jenkins.plugins.kubernetes.ContainerLivenessProbe;\n+import org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate;\n+import org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud;\n+import org.csanchez.jenkins.plugins.kubernetes.PodTemplate;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.yaml.Merge;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.yaml.Overrides;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.DynamicPVCWorkspaceVolume;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.WorkspaceVolume;\n+import org.jvnet.hudson.test.RestartableJenkinsRule;\n+\n+import java.util.List;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.isA;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+public class CasCTest extends RoundTripAbstractTest {\n+\n+    @Override\n+    protected void assertConfiguredAsExpected(RestartableJenkinsRule r, String configContent) {\n+        KubernetesCloud cloud = r.j.jenkins.clouds.get(KubernetesCloud.class);\n+        assertNotNull(cloud);\n+        assertEquals(\"10\",cloud.getContainerCapStr());\n+        assertEquals(\"http://jenkinshost:8080/jenkins/\", cloud.getJenkinsUrl());\n+        assertEquals(\"32\", cloud.getMaxRequestsPerHostStr());\n+        assertEquals(\"kubernetes\", cloud.name);\n+        List<PodTemplate> templates = cloud.getTemplates();\n+        assertNotNull(templates);\n+        assertEquals(3, templates.size());\n+        PodTemplate podTemplate = templates.get(0);\n+        assertEquals(false, podTemplate.isHostNetwork());\n+        assertEquals(\"java\", podTemplate.getLabel());\n+        assertEquals(\"default-java\", podTemplate.getName());\n+        assertThat(podTemplate.getYamlMergeStrategy(), isA(Overrides.class));\n+        podTemplate = templates.get(1);\n+        assertEquals(false, podTemplate.isHostNetwork());\n+        assertEquals(\"dynamic-pvc\", podTemplate.getLabel());\n+        assertEquals(\"dynamic-pvc\", podTemplate.getName());\n+        assertThat(podTemplate.getYamlMergeStrategy(), isA(Overrides.class));\n+        WorkspaceVolume workspaceVolume = podTemplate.getWorkspaceVolume();\n+        assertNotNull(workspaceVolume);\n+        assertThat(workspaceVolume, isA(DynamicPVCWorkspaceVolume.class));\n+        DynamicPVCWorkspaceVolume dynamicPVCVolume = (DynamicPVCWorkspaceVolume) workspaceVolume;\n+        assertEquals(\"ReadWriteOnce\", dynamicPVCVolume.getAccessModes());", "originalCommit": "07561d6e0a616d444260ecc6fe0a332d36983575", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9fff7a7feb18a3f6ced58dca03922f7fb006f257", "chunk": "diff --git a/src/test/java/org/csanchez/jenkins/plugins/kubernetes/casc/CasCTest.java b/src/test/java/org/csanchez/jenkins/plugins/kubernetes/casc/CasCTest.java\nindex 0b1a30db..6dd35a23 100644\n--- a/src/test/java/org/csanchez/jenkins/plugins/kubernetes/casc/CasCTest.java\n+++ b/src/test/java/org/csanchez/jenkins/plugins/kubernetes/casc/CasCTest.java\n\n@@ -24,9 +24,9 @@ public class CasCTest extends RoundTripAbstractTest {\n     protected void assertConfiguredAsExpected(RestartableJenkinsRule r, String configContent) {\n         KubernetesCloud cloud = r.j.jenkins.clouds.get(KubernetesCloud.class);\n         assertNotNull(cloud);\n-        assertEquals(\"10\",cloud.getContainerCapStr());\n+        assertEquals(10,cloud.getContainerCap());\n         assertEquals(\"http://jenkinshost:8080/jenkins/\", cloud.getJenkinsUrl());\n-        assertEquals(\"32\", cloud.getMaxRequestsPerHostStr());\n+        assertEquals(32, cloud.getMaxRequestsPerHost());\n         assertEquals(\"kubernetes\", cloud.name);\n         List<PodTemplate> templates = cloud.getTemplates();\n         assertNotNull(templates);\n"}}, {"oid": "37b9e97ef211c216675f429224935397f8fa8013", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/37b9e97ef211c216675f429224935397f8fa8013", "message": "use version from bom", "committedDate": "2020-04-16T13:18:53Z", "type": "commit"}, {"oid": "9fff7a7feb18a3f6ced58dca03922f7fb006f257", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/9fff7a7feb18a3f6ced58dca03922f7fb006f257", "message": "Clean up and accept int variants for fields using strings", "committedDate": "2020-04-16T13:33:44Z", "type": "commit"}]}