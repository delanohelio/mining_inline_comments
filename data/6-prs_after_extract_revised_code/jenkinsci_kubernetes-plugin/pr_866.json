{"pr_number": 866, "pr_title": "Fix: Concurrency limit 0 must mean unlimited for upgradeability", "pr_createdAt": "2020-10-09T21:31:07Z", "pr_url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866", "timeline": [{"oid": "7bd2bc1612d57a862c635af042b93fe69d27c1b9", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/7bd2bc1612d57a862c635af042b93fe69d27c1b9", "message": "Revert \"don't provision when containerCap is 0\"\n\nThis reverts commit d5e5b42ef2d55d955264076d255388dcf2ddc406.", "committedDate": "2020-10-09T21:07:12Z", "type": "commit"}, {"oid": "23e40caa021679adc1de7f43eed7317cd094742f", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/23e40caa021679adc1de7f43eed7317cd094742f", "message": "concurrency limit 0 means unlimited", "committedDate": "2020-10-09T21:22:32Z", "type": "commit"}, {"oid": "96e48d2155d6965fdcd671f544749bf86c8e059d", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/96e48d2155d6965fdcd671f544749bf86c8e059d", "message": "refactor setter and getter", "committedDate": "2020-10-12T13:29:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5ODI1OQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503298259", "bodyText": "kubernetes-plugin/src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java\n    \n    \n        Lines 383 to 384\n      in\n      23e40ca\n    \n    \n    \n    \n\n        \n          \n           public int getContainerCap() { \n        \n\n        \n          \n               return containerCap != null ? containerCap : Integer.MAX_VALUE;", "author": "schottsfired", "createdAt": "2020-10-12T13:32:03Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -575,8 +575,8 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n      */\n     private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n-        if (containerCap == 0) {\n-            return false;\n+        if (containerCap == Integer.MAX_VALUE) { // don't check concurrency limits when set to \"unlimited.\"\n+            return true;", "originalCommit": "96e48d2155d6965fdcd671f544749bf86c8e059d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMwODcyMA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503308720", "bodyText": "Or rather than calling the getter you could just check containerCap == null.", "author": "jglick", "createdAt": "2020-10-12T13:48:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5ODI1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMzNjQ1MQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503336451", "bodyText": "In either case, KubernetesCloudTest#testInstanceCap fails because concurrency limit checking is skipped when the pod template has a limit but the overall cloud is unlimited.\nFTR Pod templates are using Integer.MAX_VALUE to mean unlimited:\n\n  \n    \n      kubernetes-plugin/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java\n    \n    \n        Lines 306 to 312\n      in\n      dedad44\n    \n    \n    \n    \n\n        \n          \n           public void setInstanceCap(int instanceCap) { \n        \n\n        \n          \n               if (instanceCap < 0) { \n        \n\n        \n          \n                   this.instanceCap = Integer.MAX_VALUE; \n        \n\n        \n          \n               } else { \n        \n\n        \n          \n                   this.instanceCap = instanceCap; \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nI'll toy around with it some more until tests pass.", "author": "schottsfired", "createdAt": "2020-10-12T14:31:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5ODI1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MDE2Mg==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503350162", "bodyText": "In version 1.27.0, before all the changes to concurrency limits, setting the overall cloud to 0 skipped all concurrency limit checking, even if the pod template had one set. Is that the expected behavior?\nI was thinking that the pod template level limit should be obeyed when the overall cloud is unlimited.", "author": "schottsfired", "createdAt": "2020-10-12T14:52:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5ODI1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM3ODk2OQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503378969", "bodyText": "Removed the if statement entirely in 464b642 and tests are passing cc @Vlatombe\nThe behavior is also better than it was before: if the global limit is \"unlimited\" then the pod template limit is still respected.", "author": "schottsfired", "createdAt": "2020-10-12T15:39:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5ODI1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "464b64261c3bba254d51b009f228453e3a8130cc", "chunk": "diff --git a/src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java b/src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java\nindex 356ec598..997d367a 100644\n--- a/src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java\n+++ b/src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java\n\n@@ -575,9 +575,6 @@ public class KubernetesCloud extends Cloud {\n      */\n     private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n-        if (containerCap == Integer.MAX_VALUE) { // don't check concurrency limits when set to \"unlimited.\"\n-            return true;\n-        }\n \n         KubernetesClient client = connect();\n         String templateNamespace = template.getNamespace();\n"}}, {"oid": "ff141430ab60419397517e22232a390436c584f9", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/ff141430ab60419397517e22232a390436c584f9", "message": "test for negative to mean unlimited", "committedDate": "2020-10-12T13:49:45Z", "type": "commit"}, {"oid": "424e0bb2594549fd6c568fc9c1c6c000245d82ed", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/424e0bb2594549fd6c568fc9c1c6c000245d82ed", "message": "Update src/main/resources/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud/help-containerCapStr.html\n\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>", "committedDate": "2020-10-12T13:52:08Z", "type": "commit"}, {"oid": "464b64261c3bba254d51b009f228453e3a8130cc", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/464b64261c3bba254d51b009f228453e3a8130cc", "message": "remove the if statement entirely", "committedDate": "2020-10-12T15:36:59Z", "type": "commit"}, {"oid": "6ece75d089bcb682912a9584c44afd9cae9894a7", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/6ece75d089bcb682912a9584c44afd9cae9894a7", "message": "Merge branch 'zero-must-be-unlimited' of https://github.com/schottsfired/kubernetes-plugin into zero-must-be-unlimited", "committedDate": "2020-10-12T15:37:08Z", "type": "commit"}, {"oid": "1b8cfb78b3d0abbdf54cf34f60fc3de5926e82fa", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/1b8cfb78b3d0abbdf54cf34f60fc3de5926e82fa", "message": "remove unnecessary asserts", "committedDate": "2020-10-12T15:45:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NDQ1Ng==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503394456", "bodyText": "So this is going beyond reverting #828; now you are making API server calls even when no caps are in place, which would be a performance regression.\nI think this method instead needs to be altered in structure. First, if containerCap is not infinite, compute allPods and check its size. Then, if template.instanceCap is not infinite, compute labelPods and check its size. If neither of those returns false then you return true by default.\nAnd the method should be renamed to clarify that it is not actually adding a provisioned agent, but checking whether we may add a provisioned agent.", "author": "jglick", "createdAt": "2020-10-12T16:05:40Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -575,9 +575,6 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n      */\n     private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n-        if (containerCap == 0) {\n-            return false;\n-        }", "originalCommit": "1b8cfb78b3d0abbdf54cf34f60fc3de5926e82fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NzE5Ng==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503397196", "bodyText": "Thank you sir for the check, I don't disagree. Looking into it.", "author": "schottsfired", "createdAt": "2020-10-12T16:10:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NDQ1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwODQ0Mw==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503408443", "bodyText": "0375b35 should do it.", "author": "schottsfired", "createdAt": "2020-10-12T16:32:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NDQ1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "0375b352a1987873b933712bb851331f4459e181", "chunk": "diff --git a/src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java b/src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java\nindex 997d367a..06137a36 100644\n--- a/src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java\n+++ b/src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java\n\n@@ -573,7 +573,7 @@ public class KubernetesCloud extends Cloud {\n      * Check not too many already running.\n      *\n      */\n-    private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n+    private boolean mayAddProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n \n         KubernetesClient client = connect();\n"}}, {"oid": "0375b352a1987873b933712bb851331f4459e181", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/0375b352a1987873b933712bb851331f4459e181", "message": "new unlimited checks to avoid hitting k8s api", "committedDate": "2020-10-12T16:30:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk0NTc1OQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r527945759", "bodyText": "Ineffective because mayAddProvisionedSlave is calling getContainerCap, not this method, so it sees 0 and refuses to provision pods.", "author": "jglick", "createdAt": "2020-11-20T20:11:35Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -390,12 +390,12 @@ public void setContainerCapStr(String containerCapStr) {\n     }\n \n     public void setContainerCap(Integer containerCap) {\n-        this.containerCap = (containerCap != null && containerCap >= 0) ? containerCap : null;\n+        this.containerCap = (containerCap != null && containerCap > 0) ? containerCap : null;\n     }\n \n     public String getContainerCapStr() {\n-        // serialized Integer.MAX_VALUE means no limit\n-        return (containerCap == null || containerCap == Integer.MAX_VALUE) ? \"\" : String.valueOf(containerCap);\n+        // null, serialized Integer.MAX_VALUE, or 0 means no limit\n+        return (containerCap == null || containerCap == Integer.MAX_VALUE || containerCap == 0) ? \"\" : String.valueOf(containerCap);", "originalCommit": "0375b352a1987873b933712bb851331f4459e181", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}