{"pr_number": 677, "pr_title": "[JENKINS-60537] Sanitize label", "pr_createdAt": "2020-01-08T15:01:01Z", "pr_url": "https://github.com/jenkinsci/kubernetes-plugin/pull/677", "timeline": [{"oid": "04808fcb9198bac9ff237fecbe5fe70567c1f2ff", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/04808fcb9198bac9ff237fecbe5fe70567c1f2ff", "message": "[JENKINS-60537] Sanitize label", "committedDate": "2020-01-08T14:59:42Z", "type": "commit"}, {"oid": "be4b55ffc3f85eca842fbb42cdaa7f8937a8747d", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/be4b55ffc3f85eca842fbb42cdaa7f8937a8747d", "message": "Fix test", "committedDate": "2020-01-08T15:51:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0NjExMA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/677#discussion_r364746110", "bodyText": "IIRC there was a similar utility method elsewhere in this plugin.", "author": "jglick", "createdAt": "2020-01-09T13:47:33Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "diffHunk": "@@ -379,7 +379,17 @@ public String getActiveDeadlineSecondsStr() {\n     }\n \n     public Map<String, String> getLabelsMap() {\n-        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : label);\n+        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : sanitizeLabel(label));\n+    }\n+\n+    private String sanitizeLabel(String input) {", "originalCommit": "be4b55ffc3f85eca842fbb42cdaa7f8937a8747d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1MDYzNQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/677#discussion_r364750635", "bodyText": "Similar but not the same - \n  \n    \n      kubernetes-plugin/src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepExecution.java\n    \n    \n        Lines 166 to 175\n      in\n      3f91dcd\n    \n    \n    \n    \n\n        \n          \n           static String labelify(String input) { \n        \n\n        \n          \n               int max = /* Kubernetes limit */ 63 - /* hyphen */ 1 - /* suffix */ 5; \n        \n\n        \n          \n               if (input.length() > max) { \n        \n\n        \n          \n                   input = input.substring(input.length() - max); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               input = input.replaceAll(\"[^_.a-zA-Z0-9-]\", \"_\").replaceFirst(\"^[^a-zA-Z0-9]\", \"x\"); \n        \n\n        \n          \n               String label = input + \"-\" + RandomStringUtils.random(5, \"bcdfghjklmnpqrstvwxz0123456789\"); \n        \n\n        \n          \n               assert PodTemplateUtils.validateLabel(label) : label; \n        \n\n        \n          \n               return label; \n        \n\n        \n          \n           }", "author": "Vlatombe", "createdAt": "2020-01-09T13:56:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0NjExMA=="}], "type": "inlineReview", "revised_code": {"commit": "288cd2c9ca6cea344c6427513be3720ecbfdf109", "chunk": "diff --git a/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java b/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java\nindex 314dc282..4a11b683 100644\n--- a/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java\n+++ b/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java\n\n@@ -382,7 +382,7 @@ public class PodTemplate extends AbstractDescribableImpl<PodTemplate> implements\n         return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : sanitizeLabel(label));\n     }\n \n-    private String sanitizeLabel(String input) {\n+    static String sanitizeLabel(String input) {\n         String label = input;\n         int max = 63; // Kubernetes limit\n         if (label.length() > max) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0NjU2MQ==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/677#discussion_r364746561", "bodyText": "A unit test would be in order for this sort of thing I guess.", "author": "jglick", "createdAt": "2020-01-09T13:48:28Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "diffHunk": "@@ -379,7 +379,17 @@ public String getActiveDeadlineSecondsStr() {\n     }\n \n     public Map<String, String> getLabelsMap() {\n-        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : label);\n+        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : sanitizeLabel(label));\n+    }\n+\n+    private String sanitizeLabel(String input) {\n+        String label = input;\n+        int max = 63; // Kubernetes limit\n+        if (label.length() > max) {\n+            label = label.substring(label.length() - max);\n+        }\n+        label = label.replaceAll(\"[^_.a-zA-Z0-9-]\", \"_\").replaceFirst(\"^[^a-zA-Z0-9]\", \"x\");", "originalCommit": "be4b55ffc3f85eca842fbb42cdaa7f8937a8747d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "288cd2c9ca6cea344c6427513be3720ecbfdf109", "chunk": "diff --git a/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java b/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java\nindex 314dc282..4a11b683 100644\n--- a/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java\n+++ b/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java\n\n@@ -382,7 +382,7 @@ public class PodTemplate extends AbstractDescribableImpl<PodTemplate> implements\n         return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : sanitizeLabel(label));\n     }\n \n-    private String sanitizeLabel(String input) {\n+    static String sanitizeLabel(String input) {\n         String label = input;\n         int max = 63; // Kubernetes limit\n         if (label.length() > max) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0NzEyNw==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/677#discussion_r364747127", "bodyText": "Do we also expect that the Computer has the original labels label1 & label2? I guess \n  \n    \n      kubernetes-plugin/src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/podTemplateWithMultipleLabels.groovy\n    \n    \n         Line 1\n      in\n      be4b55f\n    \n    \n    \n    \n\n        \n          \n           node('label1') { \n        \n    \n  \n\n tests this implicitly but for the benefit of readers it might be good to assert this explicitly.", "author": "jglick", "createdAt": "2020-01-09T13:49:30Z", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java", "diffHunk": "@@ -382,6 +384,26 @@ public void runInPodWithLivenessProbe() throws Exception {\n         r.assertLogContains(\"Still alive\", b);\n     }\n \n+    @Test\n+    public void podTemplateWithMultipleLabels() throws Exception {\n+        PodTemplate pt = new PodTemplate();\n+        pt.setName(\"podTemplate\");\n+        pt.setLabel(\"label1 label2\");\n+        ContainerTemplate jnlp = new ContainerTemplate(\"jnlp\", \"jenkins/jnlp-slave:3.35-5-alpine\");\n+        pt.setContainers(Collections.singletonList(jnlp));\n+        cloud.addTemplate(pt);\n+        SemaphoreStep.waitForStart(\"pod/1\", b);\n+        Map<String, String> labels = getLabels(cloud, this, name);", "originalCommit": "be4b55ffc3f85eca842fbb42cdaa7f8937a8747d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "288cd2c9ca6cea344c6427513be3720ecbfdf109", "chunk": "diff --git a/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java b/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java\nindex 308424b3..ec7e2f4c 100644\n--- a/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java\n+++ b/src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java\n\n@@ -395,6 +396,11 @@ public class KubernetesPipelineTest extends AbstractKubernetesPipelineTest {\n         SemaphoreStep.waitForStart(\"pod/1\", b);\n         Map<String, String> labels = getLabels(cloud, this, name);\n         labels.put(\"jenkins/label\",\"label1_label2\");\n+        KubernetesSlave node = r.jenkins.getNodes().stream()\n+                .filter(KubernetesSlave.class::isInstance)\n+                .map(KubernetesSlave.class::cast)\n+                .findAny().get();\n+        assertTrue(node.getAssignedLabels().containsAll(Label.parse(\"label1 label2\")));\n         PodList pods = cloud.connect().pods().withLabels(labels).list();\n         assertThat(\n                 \"Expected one pod with labels \" + labels + \" but got: \"\n"}}, {"oid": "288cd2c9ca6cea344c6427513be3720ecbfdf109", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/288cd2c9ca6cea344c6427513be3720ecbfdf109", "message": "Fix reviews from Jesse\n\n* Add a unit test for sanitizeLabel\n* Assert the node bears the given labels", "committedDate": "2020-01-09T14:08:34Z", "type": "commit"}]}