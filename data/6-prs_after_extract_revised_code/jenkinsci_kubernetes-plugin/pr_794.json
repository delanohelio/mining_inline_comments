{"pr_number": 794, "pr_title": "Make default JNLP container resource requests overridable", "pr_createdAt": "2020-06-03T15:00:04Z", "pr_url": "https://github.com/jenkinsci/kubernetes-plugin/pull/794", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1MjAyNA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/794#discussion_r434652024", "bodyText": "I do not think settings limits is wise. In the case of CPU, this will prevent anything running in the agent container from using more than 10% CPU, arbitrarily slowing down legitimate operations. In the case of memory, this will cause the agent to crash if the JVM happens to use more than 256Mi.", "author": "jglick", "createdAt": "2020-06-03T15:24:02Z", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilder.java", "diffHunk": "@@ -253,7 +262,12 @@ public Pod build() {\n         envVars.putAll(jnlp.getEnv().stream().collect(Collectors.toMap(EnvVar::getName, Function.identity())));\n         jnlp.setEnv(new ArrayList<>(envVars.values()));\n         if (jnlp.getResources() == null) {\n-            jnlp.setResources(new ContainerBuilder().editOrNewResources().addToRequests(\"cpu\", new Quantity(\"100m\")).addToRequests(\"memory\", new Quantity(\"256Mi\")).endResources().build().getResources());\n+            jnlp.setResources(new ContainerBuilder().editOrNewResources()\n+                .addToRequests(\"cpu\", new Quantity(DEFAULT_JNLP_CONTAINER_CPU_REQUEST))\n+                .addToLimits(\"cpu\", new Quantity(DEFAULT_JNLP_CONTAINER_CPU_LIMIT))\n+                .addToRequests(\"memory\", new Quantity(DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST))\n+                .addToLimits(\"memory\", new Quantity(DEFAULT_JNLP_CONTAINER_MEMORY_LIMIT))", "originalCommit": "19991c46fbb5ec2d0a11d632dd5434ba703dab59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1NjY5MA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/794#discussion_r434656690", "bodyText": "Fair enough. I'll remove the limits.", "author": "mbarbero", "createdAt": "2020-06-03T15:30:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1MjAyNA=="}], "type": "inlineReview", "revised_code": {"commit": "35af4ff30b5072a5a0f883b42f99d0f60e71e665", "chunk": "diff --git a/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilder.java b/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilder.java\nindex 51c0acd7..6017d5ad 100644\n--- a/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilder.java\n+++ b/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilder.java\n\n@@ -262,12 +258,7 @@ public class PodTemplateBuilder {\n         envVars.putAll(jnlp.getEnv().stream().collect(Collectors.toMap(EnvVar::getName, Function.identity())));\n         jnlp.setEnv(new ArrayList<>(envVars.values()));\n         if (jnlp.getResources() == null) {\n-            jnlp.setResources(new ContainerBuilder().editOrNewResources()\n-                .addToRequests(\"cpu\", new Quantity(DEFAULT_JNLP_CONTAINER_CPU_REQUEST))\n-                .addToLimits(\"cpu\", new Quantity(DEFAULT_JNLP_CONTAINER_CPU_LIMIT))\n-                .addToRequests(\"memory\", new Quantity(DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST))\n-                .addToLimits(\"memory\", new Quantity(DEFAULT_JNLP_CONTAINER_MEMORY_LIMIT))\n-                .endResources().build().getResources());\n+            jnlp.setResources(new ContainerBuilder().editOrNewResources().addToRequests(\"cpu\", new Quantity(DEFAULT_JNLP_CONTAINER_CPU_REQUEST)).addToRequests(\"memory\", new Quantity(DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST)).endResources().build().getResources());\n         }\n         \n         // If the volume mounts of any container has been set to null, set it to empty list.\n"}}, {"oid": "35af4ff30b5072a5a0f883b42f99d0f60e71e665", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/35af4ff30b5072a5a0f883b42f99d0f60e71e665", "message": "Make default JNLP container resource requests/limits overridable", "committedDate": "2020-06-03T15:40:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDczMDY0MA==", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/794#discussion_r434730640", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_CPU_REQUEST, requests.get(\"cpu\"));\n          \n          \n            \n                    assertEquals(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST, requests.get(\"memory\"));\n          \n          \n            \n                    PodTemplateUtilsTest.assertQuantity(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_CPU_REQUEST, requests.get(\"cpu\"));\n          \n          \n            \n                    PodTemplateUtilsTest.assertQuantity(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST, requests.get(\"memory\"));", "author": "jglick", "createdAt": "2020-06-03T17:19:46Z", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilderTest.java", "diffHunk": "@@ -344,8 +344,8 @@ public void defaultRequests() throws Exception {\n         assertNotNull(resources);\n         Map<String, Quantity> requests = resources.getRequests();\n         assertNotNull(requests);\n-        assertTrue(requests.containsKey(\"cpu\"));\n-        assertTrue(requests.containsKey(\"memory\"));\n+        assertEquals(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_CPU_REQUEST, requests.get(\"cpu\"));\n+        assertEquals(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST, requests.get(\"memory\"));", "originalCommit": "35af4ff30b5072a5a0f883b42f99d0f60e71e665", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6218f6f5311dc5cc4bb955f85bbe1a2b0643aff2", "chunk": "diff --git a/src/test/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilderTest.java b/src/test/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilderTest.java\nindex 471997a8..349214df 100644\n--- a/src/test/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilderTest.java\n+++ b/src/test/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilderTest.java\n\n@@ -344,8 +344,8 @@ public class PodTemplateBuilderTest {\n         assertNotNull(resources);\n         Map<String, Quantity> requests = resources.getRequests();\n         assertNotNull(requests);\n-        assertEquals(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_CPU_REQUEST, requests.get(\"cpu\"));\n-        assertEquals(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST, requests.get(\"memory\"));\n+        PodTemplateUtilsTest.assertQuantity(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_CPU_REQUEST, requests.get(\"cpu\"));\n+        PodTemplateUtilsTest.assertQuantity(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST, requests.get(\"memory\"));\n     }\n \n     @Test\n"}}, {"oid": "6218f6f5311dc5cc4bb955f85bbe1a2b0643aff2", "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/6218f6f5311dc5cc4bb955f85bbe1a2b0643aff2", "message": "Uses PodTemplateUtilsTest.assertQuantity instead of assertEquals\n\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>", "committedDate": "2020-06-04T09:10:12Z", "type": "commit"}]}