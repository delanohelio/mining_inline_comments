{"pr_number": 4728, "pr_title": "Allow to define a specific maxTimeToLive for the service PGTs", "pr_createdAt": "2020-02-19T15:13:20Z", "pr_url": "https://github.com/apereo/cas/pull/4728", "timeline": [{"oid": "57a691acdf600834160d369459aab4fcabe1aa05", "url": "https://github.com/apereo/cas/commit/57a691acdf600834160d369459aab4fcabe1aa05", "message": "Allow to define a specific maxTimeToLive for the service PGTs", "committedDate": "2020-02-19T15:06:06Z", "type": "commit"}, {"oid": "87b1cf2779a854379b329262baa8c4064a997cbe", "url": "https://github.com/apereo/cas/commit/87b1cf2779a854379b329262baa8c4064a997cbe", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-19T21:06:19Z", "type": "commit"}, {"oid": "df949df5c6f329772a730686b9e6ce9f614f0266", "url": "https://github.com/apereo/cas/commit/df949df5c6f329772a730686b9e6ce9f614f0266", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-20T00:06:19Z", "type": "commit"}, {"oid": "f0682ebeaf12dbbc25685964707571558f36cd60", "url": "https://github.com/apereo/cas/commit/f0682ebeaf12dbbc25685964707571558f36cd60", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-20T03:06:19Z", "type": "commit"}, {"oid": "c1fbefcfa7dc27bbd4161df0aa0acab036b6152b", "url": "https://github.com/apereo/cas/commit/c1fbefcfa7dc27bbd4161df0aa0acab036b6152b", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-20T04:36:19Z", "type": "commit"}, {"oid": "7da2918f9ad1fb1b2e3db9ab16eed59d795df1b7", "url": "https://github.com/apereo/cas/commit/7da2918f9ad1fb1b2e3db9ab16eed59d795df1b7", "message": "refactor pgt TTL implem", "committedDate": "2020-02-20T13:51:49Z", "type": "commit"}, {"oid": "805067a371c9c60f9a9e5a1fe43379b0ce612486", "url": "https://github.com/apereo/cas/commit/805067a371c9c60f9a9e5a1fe43379b0ce612486", "message": "Merge branch 'pgtttl' of github.com:leleuj/cas into pgtttl", "committedDate": "2020-02-20T13:52:05Z", "type": "commit"}, {"oid": "1da4432ed625fd9cbcf14d017d3158b630b7e9ce", "url": "https://github.com/apereo/cas/commit/1da4432ed625fd9cbcf14d017d3158b630b7e9ce", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-20T15:32:35Z", "type": "commit"}, {"oid": "cb5304a3a565f668031b6381f5d70a20cac01df5", "url": "https://github.com/apereo/cas/commit/cb5304a3a565f668031b6381f5d70a20cac01df5", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-20T18:32:35Z", "type": "commit"}, {"oid": "abde4f25a6e2ebb9ae750a6d2e74051b78306844", "url": "https://github.com/apereo/cas/commit/abde4f25a6e2ebb9ae750a6d2e74051b78306844", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-20T21:50:51Z", "type": "commit"}, {"oid": "94456b1152f362e0bb54998e2b5faae892e18e6f", "url": "https://github.com/apereo/cas/commit/94456b1152f362e0bb54998e2b5faae892e18e6f", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-20T23:20:49Z", "type": "commit"}, {"oid": "12f65437e1c6c8510bc9864e3cd8e301cc746f7b", "url": "https://github.com/apereo/cas/commit/12f65437e1c6c8510bc9864e3cd8e301cc746f7b", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-21T03:57:24Z", "type": "commit"}, {"oid": "6d371399b8275eb81cc6b87799ecf9dabc88f054", "url": "https://github.com/apereo/cas/commit/6d371399b8275eb81cc6b87799ecf9dabc88f054", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-21T05:27:21Z", "type": "commit"}, {"oid": "ad10d034c492d7d1e68d23de1243832be6eedfa1", "url": "https://github.com/apereo/cas/commit/ad10d034c492d7d1e68d23de1243832be6eedfa1", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-21T06:57:21Z", "type": "commit"}, {"oid": "b606fa4a73ec81f30e4b27af796bbd209ffb576b", "url": "https://github.com/apereo/cas/commit/b606fa4a73ec81f30e4b27af796bbd209ffb576b", "message": "Merge branch 'master' of github.com:apereo/cas into pgtttl", "committedDate": "2020-02-28T06:44:17Z", "type": "commit"}, {"oid": "e1de408894986b43e40a61d83e4e2d18b069a5c5", "url": "https://github.com/apereo/cas/commit/e1de408894986b43e40a61d83e4e2d18b069a5c5", "message": "Merge branch 'pgtttl' of github.com:leleuj/cas into pgtttl", "committedDate": "2020-02-28T06:44:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU1MzI2NQ==", "url": "https://github.com/apereo/cas/pull/4728#discussion_r385553265", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.debug(\"Overriding PGT policy with the specific policy: {}\", servicePgtPolicy);\n          \n          \n            \n                        LOGGER.trace(\"Overriding proxy-granting ticket policy with the specific policy: [{}]\", servicePgtPolicy);", "author": "mmoayyed", "createdAt": "2020-02-28T07:58:53Z", "path": "core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java", "diffHunk": "@@ -75,6 +86,31 @@\n         return (T) result;\n     }\n \n+    /**\n+     * Produce the ticket with the adequate expiration policy.\n+     *\n+     * @param servicePgtPolicy the proxy granting ticket expiration policy\n+     * @param serviceTicket    the service ticket\n+     * @param authentication   the authentication\n+     * @param pgtId            the PGT id\n+     * @return the ticket\n+     */\n+    protected ProxyGrantingTicket produceTicketWithAdequateExpirationPolicy(\n+            final RegisteredServiceProxyGrantingTicketExpirationPolicy servicePgtPolicy,\n+            final ServiceTicket serviceTicket,\n+            final Authentication authentication,\n+            final String pgtId) {\n+        if (servicePgtPolicy != null) {\n+            LOGGER.debug(\"Overriding PGT policy with the specific policy: {}\", servicePgtPolicy);", "originalCommit": "e1de408894986b43e40a61d83e4e2d18b069a5c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e81595d3a1ff71fa0b57548c9b0a5c560cfbfbed", "chunk": "diff --git a/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java b/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\nindex 7c90c2ec0b..b5cae4e3d4 100644\n--- a/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\n+++ b/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\n\n@@ -101,7 +101,7 @@ public class DefaultProxyGrantingTicketFactory implements ProxyGrantingTicketFac\n             final Authentication authentication,\n             final String pgtId) {\n         if (servicePgtPolicy != null) {\n-            LOGGER.debug(\"Overriding PGT policy with the specific policy: {}\", servicePgtPolicy);\n+            LOGGER.trace(\"Overriding proxy-granting ticket policy with the specific policy: [{}]\", servicePgtPolicy);\n             return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n                     new HardTimeoutExpirationPolicy(servicePgtPolicy.getMaxTimeToLiveInSeconds()));\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU1MzM4Nw==", "url": "https://github.com/apereo/cas/pull/4728#discussion_r385553387", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.debug(\"Using default TGT policy for PGT\");\n          \n          \n            \n                        LOGGER.trace(\"Using default ticket-granting ticket policy for proxy-granting ticket\");", "author": "mmoayyed", "createdAt": "2020-02-28T07:59:15Z", "path": "core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java", "diffHunk": "@@ -75,6 +86,31 @@\n         return (T) result;\n     }\n \n+    /**\n+     * Produce the ticket with the adequate expiration policy.\n+     *\n+     * @param servicePgtPolicy the proxy granting ticket expiration policy\n+     * @param serviceTicket    the service ticket\n+     * @param authentication   the authentication\n+     * @param pgtId            the PGT id\n+     * @return the ticket\n+     */\n+    protected ProxyGrantingTicket produceTicketWithAdequateExpirationPolicy(\n+            final RegisteredServiceProxyGrantingTicketExpirationPolicy servicePgtPolicy,\n+            final ServiceTicket serviceTicket,\n+            final Authentication authentication,\n+            final String pgtId) {\n+        if (servicePgtPolicy != null) {\n+            LOGGER.debug(\"Overriding PGT policy with the specific policy: {}\", servicePgtPolicy);\n+            return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n+                    new HardTimeoutExpirationPolicy(servicePgtPolicy.getMaxTimeToLiveInSeconds()));\n+        } else {\n+            LOGGER.debug(\"Using default TGT policy for PGT\");", "originalCommit": "e1de408894986b43e40a61d83e4e2d18b069a5c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e81595d3a1ff71fa0b57548c9b0a5c560cfbfbed", "chunk": "diff --git a/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java b/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\nindex 7c90c2ec0b..b5cae4e3d4 100644\n--- a/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\n+++ b/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\n\n@@ -101,7 +101,7 @@ public class DefaultProxyGrantingTicketFactory implements ProxyGrantingTicketFac\n             final Authentication authentication,\n             final String pgtId) {\n         if (servicePgtPolicy != null) {\n-            LOGGER.debug(\"Overriding PGT policy with the specific policy: {}\", servicePgtPolicy);\n+            LOGGER.trace(\"Overriding proxy-granting ticket policy with the specific policy: [{}]\", servicePgtPolicy);\n             return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n                     new HardTimeoutExpirationPolicy(servicePgtPolicy.getMaxTimeToLiveInSeconds()));\n         } else {\n"}}, {"oid": "e81595d3a1ff71fa0b57548c9b0a5c560cfbfbed", "url": "https://github.com/apereo/cas/commit/e81595d3a1ff71fa0b57548c9b0a5c560cfbfbed", "message": "Update core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java", "committedDate": "2020-02-28T07:59:21Z", "type": "commit"}, {"oid": "7ce89a806abdae864e4910971ac913b81f434125", "url": "https://github.com/apereo/cas/commit/7ce89a806abdae864e4910971ac913b81f434125", "message": "Update core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java", "committedDate": "2020-02-28T07:59:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU1MzY0Mw==", "url": "https://github.com/apereo/cas/pull/4728#discussion_r385553643", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else {\n          \n          \n            \n                        LOGGER.trace(\"Using default ticket-granting ticket policy for proxy-granting ticket\");\n          \n          \n            \n                        return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n          \n          \n            \n                                this.ticketGrantingTicketExpirationPolicy.buildTicketExpirationPolicy());\n          \n          \n            \n                    }\n          \n          \n            \n                    } \n          \n          \n            \n                    LOGGER.trace(\"Using default ticket-granting ticket policy for proxy-granting ticket\");\n          \n          \n            \n                    return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n          \n          \n            \n                        this.ticketGrantingTicketExpirationPolicy.buildTicketExpirationPolicy());", "author": "mmoayyed", "createdAt": "2020-02-28T08:00:00Z", "path": "core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java", "diffHunk": "@@ -75,6 +86,31 @@\n         return (T) result;\n     }\n \n+    /**\n+     * Produce the ticket with the adequate expiration policy.\n+     *\n+     * @param servicePgtPolicy the proxy granting ticket expiration policy\n+     * @param serviceTicket    the service ticket\n+     * @param authentication   the authentication\n+     * @param pgtId            the PGT id\n+     * @return the ticket\n+     */\n+    protected ProxyGrantingTicket produceTicketWithAdequateExpirationPolicy(\n+            final RegisteredServiceProxyGrantingTicketExpirationPolicy servicePgtPolicy,\n+            final ServiceTicket serviceTicket,\n+            final Authentication authentication,\n+            final String pgtId) {\n+        if (servicePgtPolicy != null) {\n+            LOGGER.trace(\"Overriding proxy-granting ticket policy with the specific policy: [{}]\", servicePgtPolicy);\n+            return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n+                    new HardTimeoutExpirationPolicy(servicePgtPolicy.getMaxTimeToLiveInSeconds()));\n+        } else {\n+            LOGGER.trace(\"Using default ticket-granting ticket policy for proxy-granting ticket\");\n+            return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n+                    this.ticketGrantingTicketExpirationPolicy.buildTicketExpirationPolicy());\n+        }", "originalCommit": "7ce89a806abdae864e4910971ac913b81f434125", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6a28b175014fdf27bd262f2c95f394d84ef9b77b", "chunk": "diff --git a/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java b/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\nindex 63d21c128e..4850dbdfac 100644\n--- a/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\n+++ b/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\n\n@@ -104,11 +104,11 @@ public class DefaultProxyGrantingTicketFactory implements ProxyGrantingTicketFac\n             LOGGER.trace(\"Overriding proxy-granting ticket policy with the specific policy: [{}]\", servicePgtPolicy);\n             return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n                     new HardTimeoutExpirationPolicy(servicePgtPolicy.getMaxTimeToLiveInSeconds()));\n-        } else {\n-            LOGGER.trace(\"Using default ticket-granting ticket policy for proxy-granting ticket\");\n-            return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n-                    this.ticketGrantingTicketExpirationPolicy.buildTicketExpirationPolicy());\n-        }\n+        } \n+        LOGGER.trace(\"Using default ticket-granting ticket policy for proxy-granting ticket\");\n+        return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n+            this.ticketGrantingTicketExpirationPolicy.buildTicketExpirationPolicy());\n+        \n     }\n \n     /**\n"}}, {"oid": "6a28b175014fdf27bd262f2c95f394d84ef9b77b", "url": "https://github.com/apereo/cas/commit/6a28b175014fdf27bd262f2c95f394d84ef9b77b", "message": "Update core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java", "committedDate": "2020-02-28T08:00:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU1NDYyNg==", "url": "https://github.com/apereo/cas/pull/4728#discussion_r385554626", "bodyText": "This looks perfectly fine. Some future refactoring may be in order if we could use a specific builder class and not duplicate the logic here with a hard-coded type of timeout. In theory, because TGT policies can be the same as PGTs by default, we should try to allow for the same type of options when we define policies on a per-service basis as well. (i.e. if a policy can be based on a idle-timeout for TGT per service, it should also be allowed for the same thing when defined for a PGT per service)", "author": "mmoayyed", "createdAt": "2020-02-28T08:03:01Z", "path": "core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java", "diffHunk": "@@ -75,6 +86,31 @@\n         return (T) result;\n     }\n \n+    /**\n+     * Produce the ticket with the adequate expiration policy.\n+     *\n+     * @param servicePgtPolicy the proxy granting ticket expiration policy\n+     * @param serviceTicket    the service ticket\n+     * @param authentication   the authentication\n+     * @param pgtId            the PGT id\n+     * @return the ticket\n+     */\n+    protected ProxyGrantingTicket produceTicketWithAdequateExpirationPolicy(\n+            final RegisteredServiceProxyGrantingTicketExpirationPolicy servicePgtPolicy,\n+            final ServiceTicket serviceTicket,\n+            final Authentication authentication,\n+            final String pgtId) {\n+        if (servicePgtPolicy != null) {\n+            LOGGER.trace(\"Overriding proxy-granting ticket policy with the specific policy: [{}]\", servicePgtPolicy);\n+            return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n+                    new HardTimeoutExpirationPolicy(servicePgtPolicy.getMaxTimeToLiveInSeconds()));", "originalCommit": "6a28b175014fdf27bd262f2c95f394d84ef9b77b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2MDAwMQ==", "url": "https://github.com/apereo/cas/pull/4728#discussion_r385560001", "bodyText": "As you say \"future\", I understand that this pull request remains \"as is\" for the merge, right?\nThis is something I thought about, but to be honest I wan't sure about the expected implementation. As the buildTicketExpirationPolicy method does not accept any parameter, I couldn't think of any solution except than creating every time an expiration policy builder from the service PGT policy. Something like:\nif (servicePgtPolicy != null) {\n  LOGGER.trace(\"Overriding proxy-granting ticket policy with the specific policy: [{}]\", servicePgtPolicy);\n  val servicePGTExpirationPolicyBuilder =\nnew RegisteredServicePGTExpirationPolicyBuilder(servicePgtPolicy);\n  return serviceTicket.grantProxyGrantingTicket(pgtId, authentication, \nservicePGTExpirationPolicyBuilder.buildTicketExpirationPolicy());\nIs this what you had in mind?", "author": "leleuj", "createdAt": "2020-02-28T08:18:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU1NDYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxODY1Ng==", "url": "https://github.com/apereo/cas/pull/4728#discussion_r386018656", "bodyText": "As you say \"future\", I understand that this pull request remains \"as is\" for the merge, right?\n\nExactly, yes. Let's not worry about this right now.\n\nIs this what you had in mind?\n\nYes, but after your explanation it's obvious that might need to clean up the API slightly to allow for dynamic building of expiration policies without having to create the builder every time. Something to do later perhaps once the need pops up, and we can make a note of it internally to revisit perhaps in RC4 or 6.3, etc.\nThanks for your review!", "author": "mmoayyed", "createdAt": "2020-02-29T10:30:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU1NDYyNg=="}], "type": "inlineReview", "revised_code": {"commit": "985d68cc5e4c1fa8f2552330cf1bb51a6338cc4f", "chunk": "diff --git a/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java b/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\nindex 4850dbdfac..7c90c2ec0b 100644\n--- a/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\n+++ b/core/cas-server-core-tickets-api/src/main/java/org/apereo/cas/ticket/factory/DefaultProxyGrantingTicketFactory.java\n\n@@ -101,14 +101,14 @@ public class DefaultProxyGrantingTicketFactory implements ProxyGrantingTicketFac\n             final Authentication authentication,\n             final String pgtId) {\n         if (servicePgtPolicy != null) {\n-            LOGGER.trace(\"Overriding proxy-granting ticket policy with the specific policy: [{}]\", servicePgtPolicy);\n+            LOGGER.debug(\"Overriding PGT policy with the specific policy: {}\", servicePgtPolicy);\n             return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n                     new HardTimeoutExpirationPolicy(servicePgtPolicy.getMaxTimeToLiveInSeconds()));\n-        } \n-        LOGGER.trace(\"Using default ticket-granting ticket policy for proxy-granting ticket\");\n-        return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n-            this.ticketGrantingTicketExpirationPolicy.buildTicketExpirationPolicy());\n-        \n+        } else {\n+            LOGGER.debug(\"Using default TGT policy for PGT\");\n+            return serviceTicket.grantProxyGrantingTicket(pgtId, authentication,\n+                    this.ticketGrantingTicketExpirationPolicy.buildTicketExpirationPolicy());\n+        }\n     }\n \n     /**\n"}}, {"oid": "9f069e5139b48f9b751412670c16b89ba02ad7f8", "url": "https://github.com/apereo/cas/commit/9f069e5139b48f9b751412670c16b89ba02ad7f8", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-28T11:44:09Z", "type": "commit"}, {"oid": "45e461c632b64c8d6a4045bc1737a51d0959a796", "url": "https://github.com/apereo/cas/commit/45e461c632b64c8d6a4045bc1737a51d0959a796", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-28T13:14:14Z", "type": "commit"}, {"oid": "985d68cc5e4c1fa8f2552330cf1bb51a6338cc4f", "url": "https://github.com/apereo/cas/commit/985d68cc5e4c1fa8f2552330cf1bb51a6338cc4f", "message": "fix build", "committedDate": "2020-02-28T13:36:10Z", "type": "commit"}, {"oid": "fdc1418c180de545dde24450c3a35aab33e9a33c", "url": "https://github.com/apereo/cas/commit/fdc1418c180de545dde24450c3a35aab33e9a33c", "message": "Merge branch 'pgtttl' of github.com:leleuj/cas into pgtttl", "committedDate": "2020-02-28T13:36:28Z", "type": "commit"}, {"oid": "8a237822d0e95434c96e807e0eca3a5fdf68f7c1", "url": "https://github.com/apereo/cas/commit/8a237822d0e95434c96e807e0eca3a5fdf68f7c1", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-28T17:44:09Z", "type": "commit"}, {"oid": "7a590c43e695422d31e7ca0238ed10c25c155853", "url": "https://github.com/apereo/cas/commit/7a590c43e695422d31e7ca0238ed10c25c155853", "message": "fix build", "committedDate": "2020-02-28T17:52:43Z", "type": "commit"}, {"oid": "12c0d95c17a0b7752702b5972e2b587c9939bc16", "url": "https://github.com/apereo/cas/commit/12c0d95c17a0b7752702b5972e2b587c9939bc16", "message": "Merge branch 'pgtttl' of github.com:leleuj/cas into pgtttl", "committedDate": "2020-02-28T17:53:00Z", "type": "commit"}, {"oid": "c6a6802262a6578ca24a471995b8bedc798b0159", "url": "https://github.com/apereo/cas/commit/c6a6802262a6578ca24a471995b8bedc798b0159", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-28T23:47:29Z", "type": "commit"}, {"oid": "3c835cebc4b58a39ff303f734e8c446f98eba042", "url": "https://github.com/apereo/cas/commit/3c835cebc4b58a39ff303f734e8c446f98eba042", "message": "Merge branch 'master' into pgtttl", "committedDate": "2020-02-29T10:17:27Z", "type": "commit"}]}