{"pr_number": 489, "pr_title": "- Prevent adding PyMap to itself; add unit tests", "pr_createdAt": "2020-08-24T19:41:09Z", "pr_url": "https://github.com/HubSpot/jinjava/pull/489", "timeline": [{"oid": "b2bca6d7458327c4866a3766d40f44e31201d322", "url": "https://github.com/HubSpot/jinjava/commit/b2bca6d7458327c4866a3766d40f44e31201d322", "message": "- Prevent adding PyMap to itself; add unit tests", "committedDate": "2020-08-24T19:32:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg4NTI5Mw==", "url": "https://github.com/HubSpot/jinjava/pull/489#discussion_r475885293", "bodyText": "this doesn't assert anything. What should it do?", "author": "boulter", "createdAt": "2020-08-24T20:49:05Z", "path": "src/test/java/com/hubspot/jinjava/objects/collections/PyMapTest.java", "diffHunk": "@@ -0,0 +1,262 @@\n+package com.hubspot.jinjava.objects.collections;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+import com.hubspot.jinjava.Jinjava;\n+import com.hubspot.jinjava.interpret.IndexOutOfRangeException;\n+import com.hubspot.jinjava.interpret.RenderResult;\n+import com.hubspot.jinjava.interpret.TemplateError;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class PyMapTest {\n+  private Jinjava jinjava;\n+\n+  @Before\n+  public void setup() {\n+    jinjava = new Jinjava();\n+  }\n+\n+  @Test\n+  public void itSupportsAppendOperation() {\n+    RenderResult result = jinjava.renderForResult(\n+      \"{% set mymap = {} %} {% do mymap.put('map', mymap) %} {{ mymap }}\",\n+      Collections.emptyMap()\n+    );", "originalCommit": "b2bca6d7458327c4866a3766d40f44e31201d322", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ2MzM4OA==", "url": "https://github.com/HubSpot/jinjava/pull/489#discussion_r476463388", "bodyText": "I was using this test for debugging purposes and forgot to reinstate it to its proper form. Thanks for catching this.", "author": "bszabo", "createdAt": "2020-08-25T13:49:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg4NTI5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "4098ebd479404eb0956395aa93f3b70cab96c677", "chunk": "diff --git a/src/test/java/com/hubspot/jinjava/objects/collections/PyMapTest.java b/src/test/java/com/hubspot/jinjava/objects/collections/PyMapTest.java\nindex 68c10ca8..10509419 100644\n--- a/src/test/java/com/hubspot/jinjava/objects/collections/PyMapTest.java\n+++ b/src/test/java/com/hubspot/jinjava/objects/collections/PyMapTest.java\n\n@@ -23,10 +23,13 @@ public class PyMapTest {\n \n   @Test\n   public void itSupportsAppendOperation() {\n-    RenderResult result = jinjava.renderForResult(\n-      \"{% set mymap = {} %} {% do mymap.put('map', mymap) %} {{ mymap }}\",\n-      Collections.emptyMap()\n-    );\n+    assertThat(\n+        jinjava.render(\n+          \"{% set test = [1, 2, 3] %}\" + \"{% do test.append(4) %}\" + \"{{ test }}\",\n+          Collections.emptyMap()\n+        )\n+      )\n+      .isEqualTo(\"[1, 2, 3, 4]\");\n   }\n \n   @Test\n"}}, {"oid": "4098ebd479404eb0956395aa93f3b70cab96c677", "url": "https://github.com/HubSpot/jinjava/commit/4098ebd479404eb0956395aa93f3b70cab96c677", "message": "Reinstate body for itSupportsAppendOperation unit test", "committedDate": "2020-08-25T13:47:26Z", "type": "commit"}]}