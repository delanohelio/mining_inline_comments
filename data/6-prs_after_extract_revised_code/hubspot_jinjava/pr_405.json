{"pr_number": 405, "pr_title": "Return empty string for un-evaluated lazy expression.", "pr_createdAt": "2020-02-28T16:31:42Z", "pr_url": "https://github.com/HubSpot/jinjava/pull/405", "timeline": [{"oid": "35bb0dea04dd65b581014fecd60f9ca36b4382f4", "url": "https://github.com/HubSpot/jinjava/commit/35bb0dea04dd65b581014fecd60f9ca36b4382f4", "message": "Return empty string for un-evaluated lazy expression.", "committedDate": "2020-02-28T16:14:36Z", "type": "commit"}, {"oid": "7c7337469679f47bfcaa65a20753fe9eca939949", "url": "https://github.com/HubSpot/jinjava/commit/7c7337469679f47bfcaa65a20753fe9eca939949", "message": "Revert the style check.", "committedDate": "2020-02-28T16:29:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNDczNg==", "url": "https://github.com/HubSpot/jinjava/pull/405#discussion_r385804736", "bodyText": "Could it evaluate the supplier but catch any exception and return empty string?", "author": "mattcoley", "createdAt": "2020-02-28T16:48:46Z", "path": "src/main/java/com/hubspot/jinjava/interpret/LazyExpression.java", "diffHunk": "@@ -19,13 +19,20 @@ public static LazyExpression of(Supplier supplier, String image) {\n   }\n \n   @Override\n-  @JsonValue\n   public Object get() {\n-    return supplier.get();\n+    if (jsonValue == null) {\n+      jsonValue = supplier.get();\n+    }\n+    return jsonValue;\n   }\n \n   @Override\n   public String toString() {\n     return image;\n   }\n+\n+  @JsonValue\n+  public Object getJsonValue() {\n+    return jsonValue == null ? \"\" : jsonValue;", "originalCommit": "7c7337469679f47bfcaa65a20753fe9eca939949", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgzMDcxOQ==", "url": "https://github.com/HubSpot/jinjava/pull/405#discussion_r385830719", "bodyText": "That is a good question. It depends what the serialization wants. What I wanted here is to get the current state -- no more evaluation. Maybe there is a need to finalize any un-evaluated expression.", "author": "hs-lsong", "createdAt": "2020-02-28T17:39:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNDczNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgzODM2OA==", "url": "https://github.com/HubSpot/jinjava/pull/405#discussion_r385838368", "bodyText": "LazyExpression was created as a more under-the-hood optimization where we could use it to prevent computing something if it wasn't needed. It would be still useful to compute when debugging information.", "author": "mattcoley", "createdAt": "2020-02-28T17:56:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNDczNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg0MDI4Mw==", "url": "https://github.com/HubSpot/jinjava/pull/405#discussion_r385840283", "bodyText": "When debugging, you either just use the toString(), and/or with get() to evaluate it.", "author": "hs-lsong", "createdAt": "2020-02-28T18:00:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNDczNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3MTI5MQ==", "url": "https://github.com/HubSpot/jinjava/pull/405#discussion_r385871291", "bodyText": "I am talking from the developer perspective. Developers depend on the developer info button that displays the context.", "author": "mattcoley", "createdAt": "2020-02-28T19:07:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNDczNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3Nzc2NA==", "url": "https://github.com/HubSpot/jinjava/pull/405#discussion_r385877764", "bodyText": "How does it work now? It will throw exceptions for serialization. If it is not using the json serialization, it does not affect anything.", "author": "hs-lsong", "createdAt": "2020-02-28T19:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNDczNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4OTA5Ng==", "url": "https://github.com/HubSpot/jinjava/pull/405#discussion_r385889096", "bodyText": "I think the serialization breaks if the get() method throws an exception (in the case of the NPE). We should also at least fall back on the image property.", "author": "mattcoley", "createdAt": "2020-02-28T19:47:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNDczNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg5NjYyOQ==", "url": "https://github.com/HubSpot/jinjava/pull/405#discussion_r385896629", "bodyText": "I assume when we store the lazyExpression in somewhere, we assume to store the value, only when we need it. However, the serialization should not execute the function because it may have side effect -- which may cause concurrent modification exception. I thought the image is the expression itself. I think they should be evaluate to empty, but I am OK if you change to keep it.", "author": "hs-lsong", "createdAt": "2020-02-28T20:02:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNDczNg=="}], "type": "inlineReview", "revised_code": null}]}