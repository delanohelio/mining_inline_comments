{"pr_number": 530, "pr_title": "add size limited pymaps and pylists", "pr_createdAt": "2020-11-10T23:05:06Z", "pr_url": "https://github.com/HubSpot/jinjava/pull/530", "timeline": [{"oid": "b150419269893d6419cd527d9f8ef75422cd477b", "url": "https://github.com/HubSpot/jinjava/commit/b150419269893d6419cd527d9f8ef75422cd477b", "message": "add size limited pymaps and pylists", "committedDate": "2020-11-10T23:02:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4MTI2Ng==", "url": "https://github.com/HubSpot/jinjava/pull/530#discussion_r522181266", "bodyText": "Integer overflow might be a concern. It should be safer to do size() >= maxSize - elements.size()", "author": "jasmith-hs", "createdAt": "2020-11-12T15:13:05Z", "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.hubspot.jinjava.objects.collections;\n+\n+import com.hubspot.jinjava.interpret.IndexOutOfRangeException;\n+import com.hubspot.jinjava.objects.PyWrapper;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class SizeLimitingPyList extends PyList implements PyWrapper {\n+  private int maxSize;\n+\n+  private SizeLimitingPyList(List<Object> list) {\n+    super(list);\n+  }\n+\n+  public SizeLimitingPyList(List<Object> list, int maxSize) {\n+    super(list);\n+    if (maxSize <= 0) {\n+      throw new IllegalArgumentException(\"maxSize must be >= 1\");\n+    }\n+\n+    this.maxSize = maxSize;\n+    if (list.size() >= maxSize) {\n+      throw createOutOfRangeException(list.size());\n+    }\n+  }\n+\n+  @Override\n+  public boolean append(Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.append(e);\n+  }\n+\n+  @Override\n+  public void insert(int i, Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    super.insert(i, e);\n+  }\n+\n+  @Override\n+  public boolean add(Object element) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.add(element);\n+  }\n+\n+  @Override\n+  public void add(int index, Object element) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    super.add(index, element);\n+  }\n+\n+  @Override\n+  public boolean addAll(int index, Collection<?> elements) {\n+    if (size() + elements.size() >= maxSize) {", "originalCommit": "b150419269893d6419cd527d9f8ef75422cd477b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI4NzY1MA==", "url": "https://github.com/HubSpot/jinjava/pull/530#discussion_r522287650", "bodyText": "I think we will run out of memory long before this if a collection has 2B items in it!", "author": "boulter", "createdAt": "2020-11-12T17:31:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4MTI2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "bb2bc31c967c7bffdfb824bcc27cee3c68f5656e", "chunk": "diff --git a/src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java b/src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java\nindex 64bd1684..9714d81c 100644\n--- a/src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java\n+++ b/src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java\n\n@@ -20,14 +20,14 @@ public class SizeLimitingPyList extends PyList implements PyWrapper {\n     }\n \n     this.maxSize = maxSize;\n-    if (list.size() >= maxSize) {\n+    if (list.size() > maxSize) {\n       throw createOutOfRangeException(list.size());\n     }\n   }\n \n   @Override\n   public boolean append(Object e) {\n-    if (size() >= maxSize) {\n+    if (size() + 1 > maxSize) {\n       throw createOutOfRangeException(size() + 1);\n     }\n     return super.append(e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4MTkxOA==", "url": "https://github.com/HubSpot/jinjava/pull/530#discussion_r522181918", "bodyText": "To be consistent with addAll, could check what the size would be after adding the one element", "author": "jasmith-hs", "createdAt": "2020-11-12T15:14:01Z", "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.hubspot.jinjava.objects.collections;\n+\n+import com.hubspot.jinjava.interpret.IndexOutOfRangeException;\n+import com.hubspot.jinjava.objects.PyWrapper;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+public class SizeLimitingPyList extends PyList implements PyWrapper {\n+  private int maxSize;\n+\n+  private SizeLimitingPyList(List<Object> list) {\n+    super(list);\n+  }\n+\n+  public SizeLimitingPyList(List<Object> list, int maxSize) {\n+    super(list);\n+    if (maxSize <= 0) {\n+      throw new IllegalArgumentException(\"maxSize must be >= 1\");\n+    }\n+\n+    this.maxSize = maxSize;\n+    if (list.size() >= maxSize) {\n+      throw createOutOfRangeException(list.size());\n+    }\n+  }\n+\n+  @Override\n+  public boolean append(Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.append(e);\n+  }\n+\n+  @Override\n+  public void insert(int i, Object e) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    super.insert(i, e);\n+  }\n+\n+  @Override\n+  public boolean add(Object element) {\n+    if (size() >= maxSize) {\n+      throw createOutOfRangeException(size() + 1);\n+    }\n+    return super.add(element);\n+  }\n+\n+  @Override\n+  public void add(int index, Object element) {\n+    if (size() >= maxSize) {", "originalCommit": "b150419269893d6419cd527d9f8ef75422cd477b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bb2bc31c967c7bffdfb824bcc27cee3c68f5656e", "chunk": "diff --git a/src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java b/src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java\nindex 64bd1684..9714d81c 100644\n--- a/src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java\n+++ b/src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java\n\n@@ -20,14 +20,14 @@ public class SizeLimitingPyList extends PyList implements PyWrapper {\n     }\n \n     this.maxSize = maxSize;\n-    if (list.size() >= maxSize) {\n+    if (list.size() > maxSize) {\n       throw createOutOfRangeException(list.size());\n     }\n   }\n \n   @Override\n   public boolean append(Object e) {\n-    if (size() >= maxSize) {\n+    if (size() + 1 > maxSize) {\n       throw createOutOfRangeException(size() + 1);\n     }\n     return super.append(e);\n"}}, {"oid": "bb2bc31c967c7bffdfb824bcc27cee3c68f5656e", "url": "https://github.com/HubSpot/jinjava/commit/bb2bc31c967c7bffdfb824bcc27cee3c68f5656e", "message": "fix size checks", "committedDate": "2020-11-12T17:50:03Z", "type": "commit"}, {"oid": "f9481111cbca7a719290166953b47b139d0f5c4d", "url": "https://github.com/HubSpot/jinjava/commit/f9481111cbca7a719290166953b47b139d0f5c4d", "message": "centralize handling OutputTooBigExceptions", "committedDate": "2020-11-13T16:52:25Z", "type": "commit"}, {"oid": "a677f42909972923162a4c75b55e195085b24527", "url": "https://github.com/HubSpot/jinjava/commit/a677f42909972923162a4c75b55e195085b24527", "message": "throw CollectionTooBigExceptions", "committedDate": "2020-11-13T16:57:20Z", "type": "commit"}, {"oid": "a29a0df04fd5f926d2f2574787d12f79bc0437e2", "url": "https://github.com/HubSpot/jinjava/commit/a29a0df04fd5f926d2f2574787d12f79bc0437e2", "message": "checkstyle", "committedDate": "2020-11-13T17:22:23Z", "type": "commit"}, {"oid": "38bcb1a9d65ae899370ee95b45d0127aef544db1", "url": "https://github.com/HubSpot/jinjava/commit/38bcb1a9d65ae899370ee95b45d0127aef544db1", "message": "warn on 90 percent full collections", "committedDate": "2020-11-13T20:02:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE5NTc0OA==", "url": "https://github.com/HubSpot/jinjava/pull/530#discussion_r523195748", "bodyText": "Nice", "author": "jasmith-hs", "createdAt": "2020-11-13T20:06:45Z", "path": "src/main/java/com/hubspot/jinjava/objects/collections/SizeLimitingPyList.java", "diffHunk": "@@ -1,13 +1,18 @@\n package com.hubspot.jinjava.objects.collections;\n \n import com.hubspot.jinjava.interpret.CollectionTooBigException;\n+import com.hubspot.jinjava.interpret.JinjavaInterpreter;\n+import com.hubspot.jinjava.interpret.TemplateError;\n+import com.hubspot.jinjava.interpret.TemplateError.ErrorReason;\n+import com.hubspot.jinjava.interpret.TemplateError.ErrorType;\n import com.hubspot.jinjava.objects.PyWrapper;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n \n public class SizeLimitingPyList extends PyList implements PyWrapper {\n   private int maxSize;\n+  private boolean hasWarned;", "originalCommit": "38bcb1a9d65ae899370ee95b45d0127aef544db1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}