{"pr_number": 884, "pr_title": "Notifications for unrefreshed certificates - Separating EmailNotificationService from providers", "pr_createdAt": "2020-02-20T21:11:13Z", "pr_url": "https://github.com/AthenZ/athenz/pull/884", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDcxMg==", "url": "https://github.com/AthenZ/athenz/pull/884#discussion_r382704712", "bodyText": "Instead of hardcoding the AWSEmailProvider here, it should come from properties, so that it can be replaced with another EmailProvider for ZMS vs ZTS", "author": "abvaidya", "createdAt": "2020-02-21T17:17:23Z", "path": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/notification/impl/NotificationServiceFactoryImpl.java", "diffHunk": "@@ -26,6 +26,6 @@\n \n     @Override\n     public NotificationService create() {\n-        return new EmailNotificationService();\n+        return new EmailNotificationService(new AWSEmailProvider());", "originalCommit": "1969289ad57d57019d8362713e9afce9546e59b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkwMjAyMw==", "url": "https://github.com/AthenZ/athenz/pull/884#discussion_r382902023", "bodyText": "Yes, I've considered it and it is actually part of the original design. But that means there would be 2 separate factory types. One for NotificationService - currently only email but in the future could be something else like push messages to phone - and another for providers such as AWS SES, or some SMS messages provider.\nThe providers and types of Notification Services are coupled as there is no reason to Instantiate a NotificationService of one type (for example, EmailNotificationService) with a provider from another type (for example, some push notifications Provider).\nSo I've decided on using a single factory. Implementors can implement other factories that create EmailNotificationService with a different provider of their own or create a different type of NotificationService all together with its own providers.", "author": "OferLevi85", "createdAt": "2020-02-22T10:09:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNDcxMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNTI0NA==", "url": "https://github.com/AthenZ/athenz/pull/884#discussion_r382705244", "bodyText": "Since creating MIMEMessage is common across diff email providers, it can be extracted in the EmailProvider implementation as default method", "author": "abvaidya", "createdAt": "2020-02-21T17:18:34Z", "path": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/notification/impl/AWSEmailProvider.java", "diffHunk": "@@ -0,0 +1,116 @@\n+package com.yahoo.athenz.common.server.notification.impl;\n+\n+import com.amazonaws.regions.Region;\n+import com.amazonaws.regions.Regions;\n+import com.amazonaws.services.simpleemail.AmazonSimpleEmailService;\n+import com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClientBuilder;\n+import com.amazonaws.services.simpleemail.model.RawMessage;\n+import com.amazonaws.services.simpleemail.model.SendRawEmailRequest;\n+import com.amazonaws.services.simpleemail.model.SendRawEmailResult;\n+import com.yahoo.athenz.common.server.notification.EmailProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.mail.Session;\n+import javax.mail.internet.InternetAddress;\n+import javax.mail.internet.MimeBodyPart;\n+import javax.mail.internet.MimeMessage;\n+import javax.mail.internet.MimeMultipart;\n+import java.io.ByteArrayOutputStream;\n+import java.nio.ByteBuffer;\n+import java.util.Collection;\n+import java.util.Properties;\n+\n+import static com.yahoo.athenz.common.server.notification.NotificationServiceConstants.CHARSET_UTF_8;\n+import static com.yahoo.athenz.common.server.notification.NotificationServiceConstants.HTML_LOGO_CID_PLACEHOLDER;\n+\n+public class AWSEmailProvider implements EmailProvider {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AWSEmailProvider.class);\n+    private final AmazonSimpleEmailService ses;\n+\n+    @Override\n+    public boolean sendEmail(String subject, String body, boolean status, Collection<String> recipients, String from, byte[] logoImage) {\n+        try {\n+            Session session = Session.getDefaultInstance(new Properties());", "originalCommit": "1969289ad57d57019d8362713e9afce9546e59b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkwMjEzNg==", "url": "https://github.com/AthenZ/athenz/pull/884#discussion_r382902136", "bodyText": "Yes I'm planning on doing it in the next couple of pull requests. I just want to implement one more email provider before doing it so I'll know exactly what I can extract from this method and what I should keep.", "author": "OferLevi85", "createdAt": "2020-02-22T10:11:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNTI0NA=="}], "type": "inlineReview", "revised_code": {"commit": "eac9596a0a8890ff23daeca3a4b16d880e9ac483", "chunk": "diff --git a/libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/notification/impl/AWSEmailProvider.java b/libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/notification/impl/AWSEmailProvider.java\nindex 5b98ce863..70e82cbe9 100644\n--- a/libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/notification/impl/AWSEmailProvider.java\n+++ b/libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/notification/impl/AWSEmailProvider.java\n\n@@ -1,3 +1,19 @@\n+/*\n+ * Copyright 2020 Verizon Media\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n package com.yahoo.athenz.common.server.notification.impl;\n \n import com.amazonaws.regions.Region;\n"}}, {"oid": "eac9596a0a8890ff23daeca3a4b16d880e9ac483", "url": "https://github.com/AthenZ/athenz/commit/eac9596a0a8890ff23daeca3a4b16d880e9ac483", "message": "Seperate provider implementation from EmailNotificationService\n\n- Currently implemented provider: AWSEmailProvider..\n- The tests checking AWS SES functionality in NotificationManagerTest were extracted to a new test class, AWSEmailProviderTest.\n- Moved Notification constants from interface to dedicated constants file\n- Added missing test assertions for Notifications in ZMS", "committedDate": "2020-02-24T19:29:57Z", "type": "commit"}]}