{"pr_number": 1001, "pr_title": "Auto Apply template.", "pr_createdAt": "2020-06-05T02:56:27Z", "pr_url": "https://github.com/AthenZ/athenz/pull/1001", "timeline": [{"oid": "496de881aac735dbbc4f4cc3ca4fd3e4ca6f121d", "url": "https://github.com/AthenZ/athenz/commit/496de881aac735dbbc4f4cc3ca4fd3e4ca6f121d", "message": "autoupdate templates", "committedDate": "2020-06-05T02:50:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE1NzY1OQ==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436157659", "bodyText": "ZMS server does not know about anything about its Storage system so not sure why this method is in ZMSUtils class. Any such functionality must only exist within their respective storage plugin classes - in this case in the JDBC ones.", "author": "havetisyan", "createdAt": "2020-06-05T20:49:25Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/utils/ZMSUtils.java", "diffHunk": "@@ -411,4 +412,17 @@ public static boolean isUserAuthorityFilterValid(Authority userAuthority, final\n             return true;\n         }\n     }\n+\n+    // To avoid firing multiple queries against DB, this function will generate 1 consolidated query for all domains->templates combination", "originalCommit": "97b74f27dbcaf3519fc46a832c872c5bd056c82e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzNzcyOA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436237728", "bodyText": "Done. Moved it to JDBCConnection.", "author": "jothi-prasad", "createdAt": "2020-06-06T04:48:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE1NzY1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/utils/ZMSUtils.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/utils/ZMSUtils.java\nindex 109640bed..7d84b8dfd 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/utils/ZMSUtils.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/utils/ZMSUtils.java\n\n@@ -413,16 +412,4 @@ public class ZMSUtils {\n         }\n     }\n \n-    // To avoid firing multiple queries against DB, this function will generate 1 consolidated query for all domains->templates combination\n-    public static String generateDomainTemplateVersionQuery(Map<String, Integer> templateNameAndLatestVersion) {\n-        StringBuilder query = new StringBuilder(\"SELECT domain.name, domain_template.template FROM domain_template \" +\n-                \"JOIN domain ON domain_template.domain_id=domain.domain_id WHERE \");\n-\n-        for (String templateName : templateNameAndLatestVersion.keySet()) {\n-            query.append(\"(domain_template.template = '\" + templateName + \"' and current_version < \" + templateNameAndLatestVersion.get(templateName) + \") OR \");\n-        }\n-        //To remove the last occurence of \"OR\" from the generated query\n-        query.delete(query.lastIndexOf(\") OR\"), query.lastIndexOf(\"OR\") + 3).append(\");\");\n-        return query.toString();\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE1ODU5OA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436158598", "bodyText": "we should not use an empty audit ref. Let's define a string that identifies that the server is the one making change.", "author": "havetisyan", "createdAt": "2020-06-05T20:51:48Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -4695,6 +4695,25 @@ void processUserAuthorityRestrictions() {\n         }\n     }\n \n+    Map<String, List<String>> getDomainNamesFromTemplate(Map<String, Integer> templateDetails) {\n+\n+        final String caller = \"getDomainNamesFromTemplate\";\n+        final String auditRef = \"\";", "originalCommit": "97b74f27dbcaf3519fc46a832c872c5bd056c82e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzNzcxMA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436237710", "bodyText": "Done.", "author": "jothi-prasad", "createdAt": "2020-06-06T04:47:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE1ODU5OA=="}], "type": "inlineReview", "revised_code": {"commit": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java\nindex a1d001840..faeb54739 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java\n\n@@ -4695,10 +4695,9 @@ public class DBService {\n         }\n     }\n \n-    Map<String, List<String>> getDomainNamesFromTemplate(Map<String, Integer> templateDetails) {\n-\n-        final String caller = \"getDomainNamesFromTemplate\";\n-        final String auditRef = \"\";\n+    Map<String, List<String>> applyTemplatesForListOfDomains(Map<String, Integer> templateDetails) {\n+        final String caller = \"applyTemplatesForListOfDomains\";\n+        final String auditRef = \"AutoApplyTemplate\";\n         Map<String, List<String>> domainTemplateListMap;\n         DomainTemplate domainTemplate = new DomainTemplate();\n         try (ObjectStoreConnection con = store.getConnection(true, false)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE1OTQ5MQ==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436159491", "bodyText": "we should use .isEmpty method", "author": "havetisyan", "createdAt": "2020-06-05T20:54:01Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -890,6 +896,31 @@ void loadSolutionTemplates() {\n             LOG.error(\"Generating empty solution template list...\");\n             serverSolutionTemplates = new SolutionTemplates();\n             serverSolutionTemplates.setTemplates(new HashMap<>());\n+        } else {\n+            eligibleTemplatesForAutoUpdate = new HashMap<>();\n+            for (String templateName : serverSolutionTemplates.getTemplates().keySet()) {\n+                Template template = serverSolutionTemplates.get(templateName);\n+                if (template.getMetadata().getAutoUpdate()\n+                        && template.getMetadata().getKeywordsToReplace() == \"\") {", "originalCommit": "97b74f27dbcaf3519fc46a832c872c5bd056c82e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzNzcwMw==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436237703", "bodyText": "Done.", "author": "jothi-prasad", "createdAt": "2020-06-06T04:47:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE1OTQ5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\nindex cff5f85fc..e121fab44 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\n\n@@ -901,7 +899,7 @@ public class ZMSImpl implements Authorizer, KeyStore, ZMSHandler {\n             for (String templateName : serverSolutionTemplates.getTemplates().keySet()) {\n                 Template template = serverSolutionTemplates.get(templateName);\n                 if (template.getMetadata().getAutoUpdate()\n-                        && template.getMetadata().getKeywordsToReplace() == \"\") {\n+                        && template.getMetadata().getKeywordsToReplace().isEmpty()) {\n                     eligibleTemplatesForAutoUpdate.put(templateName, template.getMetadata().getLatestVersion());\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MDg2OQ==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436160869", "bodyText": "we should not block zms server from starting and apply all templates. this should be done in a background thread that does its job and exits", "author": "havetisyan", "createdAt": "2020-06-05T20:57:17Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -496,8 +497,13 @@ public ZMSImpl() {\n         // Initialize Notification Manager\n \n         setNotificationManager();\n+\n+        //autoupdate templates\n+\n+        autoApplyTemplates();", "originalCommit": "97b74f27dbcaf3519fc46a832c872c5bd056c82e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzNzY5MA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436237690", "bodyText": "Done.", "author": "jothi-prasad", "createdAt": "2020-06-06T04:47:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MDg2OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MTY1Ng==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436161656", "bodyText": "why is this is class field? it should be something local within the auto apply template method since we only need this once to process templates and never use again.", "author": "havetisyan", "createdAt": "2020-06-05T20:59:17Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -144,6 +144,7 @@\n     protected int domainNameMaxLen;\n     protected AuthorizedServices serverAuthorizedServices = null;\n     protected SolutionTemplates serverSolutionTemplates = null;\n+    protected Map<String, Integer> eligibleTemplatesForAutoUpdate = null;", "originalCommit": "97b74f27dbcaf3519fc46a832c872c5bd056c82e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzODA1MA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436238050", "bodyText": "this is needed because we are populating this map via load solution templates during early stage of app startup and using it in autoApplyTemplate() in the later stages. also we need to load object store in between which is required to called applytemplate function from dbservice. so there is no better way to pass this data down to autoApplyTemplate() function.", "author": "jothi-prasad", "createdAt": "2020-06-06T04:53:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MTY1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NTgwMw==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437145803", "bodyText": "see my comments below. we don't need to maintain this as a class field.", "author": "havetisyan", "createdAt": "2020-06-09T05:28:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MTY1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NzUzMg==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437587532", "bodyText": "will move the code block and remove the field reference from class.", "author": "jothi-prasad", "createdAt": "2020-06-09T17:08:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MTY1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5MzQ4NA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437793484", "bodyText": "Please also make sure to run openclover at the end and make sure all new lines of code are covered with test cases:\nmvn -P coverage clean org.openclover:clover-maven-plugin:instrument org.openclover:clover-maven-plugin:clover\n\nyes did this and added more tests to cover few missing lines.", "author": "jothi-prasad", "createdAt": "2020-06-10T00:24:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MTY1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "c8e5355740a7439c1f278eb98394a0550e3d95be", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\nindex cff5f85fc..0f6f6ef37 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\n\n@@ -144,7 +143,6 @@ public class ZMSImpl implements Authorizer, KeyStore, ZMSHandler {\n     protected int domainNameMaxLen;\n     protected AuthorizedServices serverAuthorizedServices = null;\n     protected SolutionTemplates serverSolutionTemplates = null;\n-    protected Map<String, Integer> eligibleTemplatesForAutoUpdate = null;\n     protected Map<String, String> serverPublicKeyMap = null;\n     protected boolean readOnlyMode = false;\n     protected boolean validateUserRoleMembers = false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MjI4OA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436162288", "bodyText": "the name of the method does not reflect what the method is doing. looks like we're actually doing the auto update there and not just getting domain names from the template", "author": "havetisyan", "createdAt": "2020-06-05T21:00:58Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -4695,6 +4695,25 @@ void processUserAuthorityRestrictions() {\n         }\n     }\n \n+    Map<String, List<String>> getDomainNamesFromTemplate(Map<String, Integer> templateDetails) {", "originalCommit": "97b74f27dbcaf3519fc46a832c872c5bd056c82e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzNzY2NQ==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436237665", "bodyText": "Done changed it.", "author": "jothi-prasad", "createdAt": "2020-06-06T04:47:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MjI4OA=="}], "type": "inlineReview", "revised_code": {"commit": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java\nindex a1d001840..faeb54739 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java\n\n@@ -4695,10 +4695,9 @@ public class DBService {\n         }\n     }\n \n-    Map<String, List<String>> getDomainNamesFromTemplate(Map<String, Integer> templateDetails) {\n-\n-        final String caller = \"getDomainNamesFromTemplate\";\n-        final String auditRef = \"\";\n+    Map<String, List<String>> applyTemplatesForListOfDomains(Map<String, Integer> templateDetails) {\n+        final String caller = \"applyTemplatesForListOfDomains\";\n+        final String auditRef = \"AutoApplyTemplate\";\n         Map<String, List<String>> domainTemplateListMap;\n         DomainTemplate domainTemplate = new DomainTemplate();\n         try (ObjectStoreConnection con = store.getConnection(true, false)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MzY5OQ==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436163699", "bodyText": "no need for this put since we're modifying the existing list", "author": "havetisyan", "createdAt": "2020-06-05T21:04:41Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/file/FileConnection.java", "diffHunk": "@@ -473,6 +473,44 @@ public boolean deleteDomainTemplate(String domainName, String templateName, Stri\n         return list;\n     }\n \n+    @Override\n+    public Map<String, List<String>> getDomainFromTemplateName(Map<String, Integer> templateNameAndLatestVersion) {\n+\n+        //Input - templateNameAndLatestVersion (templateName|latestVersion) from template Meta Data\n+        //Output - for a given domain if domainstruct.templateMeta list has the template name and if the currentVersion is <= latestVersion..\n+        //...return map of domain-> List of templatenames\n+\n+        Map<String, List<String>> domainNameTemplateListMap = new HashMap<>();\n+        List<String> domainNames = listDomains(null, 0);\n+        for (String domainName : domainNames) {\n+            DomainStruct domainStruct = getDomainStruct(domainName);\n+            if (domainStruct == null) {\n+                throw ZMSUtils.error(ResourceException.NOT_FOUND, \"domain not found\", \"updateDomainTemplate\");\n+            }\n+            ArrayList<TemplateMetaData> templateMetaList = domainStruct.getTemplateMeta();\n+\n+            if (templateMetaList != null) {\n+                for (TemplateMetaData meta : templateMetaList) {\n+                    for (String templateName : templateNameAndLatestVersion.keySet()) {\n+                        if (meta.getTemplateName().equals(templateName) && meta.getCurrentVersion() < templateNameAndLatestVersion.get(templateName)) {\n+                            if (domainNameTemplateListMap.get(domainName) != null) {\n+                                List<String> tempTemplateList = domainNameTemplateListMap.get(domainName);\n+                                tempTemplateList.add(meta.getTemplateName());\n+                                domainNameTemplateListMap.put(domainName, tempTemplateList);", "originalCommit": "97b74f27dbcaf3519fc46a832c872c5bd056c82e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzNzY1Mw==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436237653", "bodyText": "Done.", "author": "jothi-prasad", "createdAt": "2020-06-06T04:47:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MzY5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NzI3MQ==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437147271", "bodyText": "the put was not removed - it's not necessary.", "author": "havetisyan", "createdAt": "2020-06-09T05:33:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2MzY5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c8e5355740a7439c1f278eb98394a0550e3d95be", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/file/FileConnection.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/file/FileConnection.java\nindex d170a8c44..6d257696d 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/file/FileConnection.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/file/FileConnection.java\n\n@@ -496,7 +496,6 @@ public class FileConnection implements ObjectStoreConnection {\n                             if (domainNameTemplateListMap.get(domainName) != null) {\n                                 List<String> tempTemplateList = domainNameTemplateListMap.get(domainName);\n                                 tempTemplateList.add(meta.getTemplateName());\n-                                domainNameTemplateListMap.put(domainName, tempTemplateList);\n                             } else {\n                                 List<String> templateList = new ArrayList<>();\n                                 templateList.add(meta.getTemplateName());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2NDQ0NA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436164444", "bodyText": "instead of calling rs.getString multiple times in the if block we should just get those two values and assign to local variables and then do the checks with those values which makes the code more readable.", "author": "havetisyan", "createdAt": "2020-06-05T21:06:35Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -870,7 +870,33 @@ public boolean deleteDomainTemplate(String domainName, String templateName, Stri\n         Collections.sort(templates);\n         return templates;\n     }\n-    \n+\n+    @Override\n+    public Map<String, List<String>> getDomainFromTemplateName(Map<String, Integer> templateNameAndLatestVersion) {\n+        final String caller = \"getDomainsFromTemplate\";\n+        Map<String, List<String>> domainNameTemplateListMap = new HashMap<>();\n+\n+        try (PreparedStatement ps = con.prepareStatement(ZMSUtils.generateDomainTemplateVersionQuery(templateNameAndLatestVersion))) {\n+            try (ResultSet rs = executeQuery(ps, caller)) {\n+                while (rs.next()) {\n+                    if (domainNameTemplateListMap.get(rs.getString(ZMSConsts.DB_COLUMN_NAME)) != null) {", "originalCommit": "97b74f27dbcaf3519fc46a832c872c5bd056c82e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzNzY0MQ==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r436237641", "bodyText": "Done.", "author": "jothi-prasad", "createdAt": "2020-06-06T04:46:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2NDQ0NA=="}], "type": "inlineReview", "revised_code": {"commit": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\nindex a2e4a98c8..3fc81d811 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n\n@@ -876,17 +876,18 @@ public class JDBCConnection implements ObjectStoreConnection {\n         final String caller = \"getDomainsFromTemplate\";\n         Map<String, List<String>> domainNameTemplateListMap = new HashMap<>();\n \n-        try (PreparedStatement ps = con.prepareStatement(ZMSUtils.generateDomainTemplateVersionQuery(templateNameAndLatestVersion))) {\n+        try (PreparedStatement ps = con.prepareStatement(generateDomainTemplateVersionQuery(templateNameAndLatestVersion))) {\n             try (ResultSet rs = executeQuery(ps, caller)) {\n                 while (rs.next()) {\n-                    if (domainNameTemplateListMap.get(rs.getString(ZMSConsts.DB_COLUMN_NAME)) != null) {\n-                        List<String> tempTemplateList = domainNameTemplateListMap.get(rs.getString(ZMSConsts.DB_COLUMN_NAME));\n-                        tempTemplateList.add(rs.getString(ZMSConsts.DB_COLUMN_TEMPLATE_NAME));\n-                        domainNameTemplateListMap.put(rs.getString(ZMSConsts.DB_COLUMN_NAME), tempTemplateList);\n+                    String domainName = rs.getString(ZMSConsts.DB_COLUMN_NAME);\n+                    String templateName = rs.getString(ZMSConsts.DB_COLUMN_TEMPLATE_NAME);\n+                    if (domainNameTemplateListMap.get(domainName) != null) {\n+                        List<String> tempTemplateList = domainNameTemplateListMap.get(domainName);\n+                        tempTemplateList.add(templateName);\n                     } else {\n                         List<String> templateList = new ArrayList<>();\n-                        templateList.add(rs.getString(ZMSConsts.DB_COLUMN_TEMPLATE_NAME));\n-                        domainNameTemplateListMap.put(rs.getString(ZMSConsts.DB_COLUMN_NAME), templateList);\n+                        templateList.add(templateName);\n+                        domainNameTemplateListMap.put(domainName, templateList);\n                     }\n                 }\n             }\n"}}, {"oid": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "url": "https://github.com/AthenZ/athenz/commit/8f846cdc56cdf65ce10a9dd157795d2a50eda075", "message": "fixing review comments", "committedDate": "2020-06-06T04:41:02Z", "type": "commit"}, {"oid": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "url": "https://github.com/AthenZ/athenz/commit/8f846cdc56cdf65ce10a9dd157795d2a50eda075", "message": "fixing review comments", "committedDate": "2020-06-06T04:41:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NjExOQ==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437146119", "bodyText": "let's move this lines at the beginning of the autoApplyTemplates function. the eligibleTemplatesForAutoUpdate will be set as a local variable which is calculated and then passed on to the AutoApplyTemplate constructor", "author": "havetisyan", "createdAt": "2020-06-09T05:29:58Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -890,6 +894,24 @@ void loadSolutionTemplates() {\n             LOG.error(\"Generating empty solution template list...\");\n             serverSolutionTemplates = new SolutionTemplates();\n             serverSolutionTemplates.setTemplates(new HashMap<>());\n+        } else {\n+            eligibleTemplatesForAutoUpdate = new HashMap<>();\n+            for (String templateName : serverSolutionTemplates.getTemplates().keySet()) {\n+                Template template = serverSolutionTemplates.get(templateName);\n+                if (template.getMetadata().getAutoUpdate()\n+                        && template.getMetadata().getKeywordsToReplace().isEmpty()) {\n+                    eligibleTemplatesForAutoUpdate.put(templateName, template.getMetadata().getLatestVersion());\n+                }\n+            }", "originalCommit": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5MjY3Ng==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437792676", "bodyText": "you are right. this is me being stupid. i forgot the fact that solutionServerTemplate is global. made this change and removed the class level declaration", "author": "jothi-prasad", "createdAt": "2020-06-10T00:21:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NjExOQ=="}], "type": "inlineReview", "revised_code": {"commit": "c8e5355740a7439c1f278eb98394a0550e3d95be", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\nindex e121fab44..0f6f6ef37 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\n\n@@ -894,19 +893,18 @@ public class ZMSImpl implements Authorizer, KeyStore, ZMSHandler {\n             LOG.error(\"Generating empty solution template list...\");\n             serverSolutionTemplates = new SolutionTemplates();\n             serverSolutionTemplates.setTemplates(new HashMap<>());\n-        } else {\n-            eligibleTemplatesForAutoUpdate = new HashMap<>();\n-            for (String templateName : serverSolutionTemplates.getTemplates().keySet()) {\n-                Template template = serverSolutionTemplates.get(templateName);\n-                if (template.getMetadata().getAutoUpdate()\n-                        && template.getMetadata().getKeywordsToReplace().isEmpty()) {\n-                    eligibleTemplatesForAutoUpdate.put(templateName, template.getMetadata().getLatestVersion());\n-                }\n-            }\n         }\n     }\n \n     void autoApplyTemplates() {\n+        Map<String, Integer> eligibleTemplatesForAutoUpdate = new HashMap<>();\n+        for (String templateName : serverSolutionTemplates.getTemplates().keySet()) {\n+            Template template = serverSolutionTemplates.get(templateName);\n+            if (template.getMetadata().getAutoUpdate()\n+                    && template.getMetadata().getKeywordsToReplace().isEmpty()) {\n+                eligibleTemplatesForAutoUpdate.put(templateName, template.getMetadata().getLatestVersion());\n+            }\n+        }\n         if (Boolean.parseBoolean(System.getProperty(ZMSConsts.ZMS_AUTO_UPDATE_TEMPLATE_FEATURE_FLAG, \"false\"))\n                 && !eligibleTemplatesForAutoUpdate.isEmpty()) {\n             ExecutorService executor = Executors.newSingleThreadExecutor();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1NzY1Mg==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437157652", "bodyText": "this doesn't need to be public and doesn't look we have any unit tests for this method.", "author": "havetisyan", "createdAt": "2020-06-09T06:06:18Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -4130,6 +4157,19 @@ private boolean updateRoleMemberNotificationTimestamp(String server, long timest\n         return roles;\n     }\n \n+    // To avoid firing multiple queries against DB, this function will generate 1 consolidated query for all domains->templates combination\n+    public String generateDomainTemplateVersionQuery(Map<String, Integer> templateNameAndLatestVersion) {", "originalCommit": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4OTk5OA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437589998", "bodyText": "this code is covered by unit tests in (JDBCConnectionTest->getDomainFromTemplateName) already. i will mark the method as private.", "author": "jothi-prasad", "createdAt": "2020-06-09T17:12:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1NzY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5OTU4Mg==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437599582", "bodyText": "it's not covered by that test. that's just a mock that doesn't look at the query string at all so we never verify that we actually created the correct query string.", "author": "havetisyan", "createdAt": "2020-06-09T17:29:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1NzY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5MTk1NA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437791954", "bodyText": "Done. i added a test for query validation.", "author": "jothi-prasad", "createdAt": "2020-06-10T00:18:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1NzY1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c8e5355740a7439c1f278eb98394a0550e3d95be", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\nindex 3fc81d811..0d1c5edc8 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n\n@@ -4159,9 +4159,9 @@ public class JDBCConnection implements ObjectStoreConnection {\n \n     // To avoid firing multiple queries against DB, this function will generate 1 consolidated query for all domains->templates combination\n     public String generateDomainTemplateVersionQuery(Map<String, Integer> templateNameAndLatestVersion) {\n-        StringBuilder query = new StringBuilder(\"SELECT domain.name, domain_template.template FROM domain_template \" +\n+        StringBuilder query = new StringBuilder();\n+        query.append(\"SELECT domain.name, domain_template.template FROM domain_template \" +\n                 \"JOIN domain ON domain_template.domain_id=domain.domain_id WHERE \");\n-\n         for (String templateName : templateNameAndLatestVersion.keySet()) {\n             query.append(\"(domain_template.template = '\" + templateName + \"' and current_version < \" + templateNameAndLatestVersion.get(templateName) + \") OR \");\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1ODAxNw==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437158017", "bodyText": "why not just call multiple appends instead of adding the strings first and then calling append?", "author": "havetisyan", "createdAt": "2020-06-09T06:07:18Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -4130,6 +4157,19 @@ private boolean updateRoleMemberNotificationTimestamp(String server, long timest\n         return roles;\n     }\n \n+    // To avoid firing multiple queries against DB, this function will generate 1 consolidated query for all domains->templates combination\n+    public String generateDomainTemplateVersionQuery(Map<String, Integer> templateNameAndLatestVersion) {\n+        StringBuilder query = new StringBuilder(\"SELECT domain.name, domain_template.template FROM domain_template \" +\n+                \"JOIN domain ON domain_template.domain_id=domain.domain_id WHERE \");\n+\n+        for (String templateName : templateNameAndLatestVersion.keySet()) {\n+            query.append(\"(domain_template.template = '\" + templateName + \"' and current_version < \" + templateNameAndLatestVersion.get(templateName) + \") OR \");", "originalCommit": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5MTcyNg==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437791726", "bodyText": "Done.", "author": "jothi-prasad", "createdAt": "2020-06-10T00:17:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1ODAxNw=="}], "type": "inlineReview", "revised_code": {"commit": "c8e5355740a7439c1f278eb98394a0550e3d95be", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\nindex 3fc81d811..0d1c5edc8 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n\n@@ -4159,9 +4159,9 @@ public class JDBCConnection implements ObjectStoreConnection {\n \n     // To avoid firing multiple queries against DB, this function will generate 1 consolidated query for all domains->templates combination\n     public String generateDomainTemplateVersionQuery(Map<String, Integer> templateNameAndLatestVersion) {\n-        StringBuilder query = new StringBuilder(\"SELECT domain.name, domain_template.template FROM domain_template \" +\n+        StringBuilder query = new StringBuilder();\n+        query.append(\"SELECT domain.name, domain_template.template FROM domain_template \" +\n                 \"JOIN domain ON domain_template.domain_id=domain.domain_id WHERE \");\n-\n         for (String templateName : templateNameAndLatestVersion.keySet()) {\n             query.append(\"(domain_template.template = '\" + templateName + \"' and current_version < \" + templateNameAndLatestVersion.get(templateName) + \") OR \");\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1ODk4MA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437158980", "bodyText": "not sure what the comment at the end about domain id is referring to", "author": "havetisyan", "createdAt": "2020-06-09T06:10:08Z", "path": "servers/zms/src/test/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnectionTest.java", "diffHunk": "@@ -9358,4 +9358,37 @@ public void testListRolesWithUserAuthorityRestrictionsException() throws Excepti\n         }\n         jdbcConn.close();\n     }\n+\n+    @Test\n+    public void testGetDomainFromTemplateName() throws Exception {\n+        Map<String, Integer> templateDetails = new HashMap<>();\n+        templateDetails.put(\"aws\", 1);\n+        templateDetails.put(\"aws_bastion\", 2);\n+        String domainName = \"testdom\";\n+        String templateName1 = \"testtemplate\";\n+        String templateName2 = \"testtemplate2\";\n+\n+        JDBCConnection jdbcConn = new JDBCConnection(mockConn, true);\n+\n+        Mockito.when(mockResultSet.getString(\"name\"))\n+                .thenReturn(domainName); // domain name\n+        Mockito.when(mockResultSet.getString(\"template\"))\n+                .thenReturn(templateName1); // template name\n+        Mockito.when(mockResultSet.getString(\"name\"))\n+                .thenReturn(domainName);\n+        Mockito.when(mockResultSet.getString(\"template\"))\n+                .thenReturn(templateName2);\n+\n+        Mockito.when(mockResultSet.next())\n+                .thenReturn(true).thenReturn(true).thenReturn(false); // this one is for domain id", "originalCommit": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5MzEzMA==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437793130", "bodyText": "sorry my bad. removed it", "author": "jothi-prasad", "createdAt": "2020-06-10T00:22:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1ODk4MA=="}], "type": "inlineReview", "revised_code": {"commit": "c8e5355740a7439c1f278eb98394a0550e3d95be", "chunk": "diff --git a/servers/zms/src/test/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnectionTest.java b/servers/zms/src/test/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnectionTest.java\nindex 8013cb5ae..41fe6b9fe 100644\n--- a/servers/zms/src/test/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnectionTest.java\n+++ b/servers/zms/src/test/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnectionTest.java\n\n@@ -9380,7 +9380,7 @@ public class JDBCConnectionTest {\n                 .thenReturn(templateName2);\n \n         Mockito.when(mockResultSet.next())\n-                .thenReturn(true).thenReturn(true).thenReturn(false); // this one is for domain id\n+                .thenReturn(true).thenReturn(true).thenReturn(false);\n \n         Mockito.when(mockPrepStmt.executeQuery())\n                 .thenReturn(mockResultSet);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2MjMxOQ==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437162319", "bodyText": "this call should be protected such that if any exception is thrown, we don't stop the process but rather just swallow it and let it continue with the rest of domains.", "author": "havetisyan", "createdAt": "2020-06-09T06:19:16Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java", "diffHunk": "@@ -4695,6 +4695,24 @@ void processUserAuthorityRestrictions() {\n         }\n     }\n \n+    Map<String, List<String>> applyTemplatesForListOfDomains(Map<String, Integer> templateDetails) {\n+        final String caller = \"applyTemplatesForListOfDomains\";\n+        final String auditRef = \"AutoApplyTemplate\";\n+        Map<String, List<String>> domainTemplateListMap;\n+        DomainTemplate domainTemplate = new DomainTemplate();\n+        try (ObjectStoreConnection con = store.getConnection(true, false)) {\n+             domainTemplateListMap = con.getDomainFromTemplateName(templateDetails);\n+        }\n+\n+        for (String domainName : domainTemplateListMap.keySet()) {\n+            domainTemplate.setTemplateNames(domainTemplateListMap.get(domainName));\n+            //Passing null context since it is an internal call during app start up\n+            //executePutDomainTemplate can bulk apply templates given a domain hence sending domainName and templatelist\n+            this.executePutDomainTemplate(null, domainName, domainTemplate, auditRef, caller);", "originalCommit": "8f846cdc56cdf65ce10a9dd157795d2a50eda075", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5MzAwOQ==", "url": "https://github.com/AthenZ/athenz/pull/1001#discussion_r437793009", "bodyText": "yep handled exception case to skip failures and continue.. thank you.", "author": "jothi-prasad", "createdAt": "2020-06-10T00:22:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2MjMxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "c8e5355740a7439c1f278eb98394a0550e3d95be", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java\nindex faeb54739..43908edbe 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/DBService.java\n\n@@ -4708,7 +4708,12 @@ public class DBService {\n             domainTemplate.setTemplateNames(domainTemplateListMap.get(domainName));\n             //Passing null context since it is an internal call during app start up\n             //executePutDomainTemplate can bulk apply templates given a domain hence sending domainName and templatelist\n-            this.executePutDomainTemplate(null, domainName, domainTemplate, auditRef, caller);\n+            try {\n+                this.executePutDomainTemplate(null, domainName, domainTemplate, auditRef, caller);\n+            } catch (Exception ex) {\n+                LOG.error(\"unable to apply template for domain {} and template {} error: {}\", domainName, domainTemplate, ex.getMessage());\n+                continue;\n+            }\n         }\n         return domainTemplateListMap;\n     }\n"}}, {"oid": "c8e5355740a7439c1f278eb98394a0550e3d95be", "url": "https://github.com/AthenZ/athenz/commit/c8e5355740a7439c1f278eb98394a0550e3d95be", "message": "fixing review comments", "committedDate": "2020-06-10T00:16:31Z", "type": "commit"}]}