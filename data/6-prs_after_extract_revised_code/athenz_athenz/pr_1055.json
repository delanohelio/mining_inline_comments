{"pr_number": 1055, "pr_title": "Added missing ZTS tests", "pr_createdAt": "2020-07-25T01:23:23Z", "pr_url": "https://github.com/AthenZ/athenz/pull/1055", "timeline": [{"oid": "1803a7b2b25a0aefb192f81d20399de9c3cc0179", "url": "https://github.com/AthenZ/athenz/commit/1803a7b2b25a0aefb192f81d20399de9c3cc0179", "message": "Added missing ZTS tests", "committedDate": "2020-07-25T08:17:39Z", "type": "forcePushed"}, {"oid": "c6fbb717883c1d4b0e9c3476b68b2fbbd9a877bf", "url": "https://github.com/AthenZ/athenz/commit/c6fbb717883c1d4b0e9c3476b68b2fbbd9a877bf", "message": "Added missing ZTS tests", "committedDate": "2020-07-25T10:38:21Z", "type": "forcePushed"}, {"oid": "d3b9949585e681fc50e2c5b1552fcb78e9bb7ecd", "url": "https://github.com/AthenZ/athenz/commit/d3b9949585e681fc50e2c5b1552fcb78e9bb7ecd", "message": "Added missing ZTS tests", "committedDate": "2020-07-25T12:03:35Z", "type": "commit"}, {"oid": "d3b9949585e681fc50e2c5b1552fcb78e9bb7ecd", "url": "https://github.com/AthenZ/athenz/commit/d3b9949585e681fc50e2c5b1552fcb78e9bb7ecd", "message": "Added missing ZTS tests", "committedDate": "2020-07-25T12:03:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5ODg5NQ==", "url": "https://github.com/AthenZ/athenz/pull/1055#discussion_r460398895", "bodyText": "I couldn't get the test to pass in Travis CI without explicitly specifying the region (locally it works fine).\nI'm getting the following message: \"com.amazonaws.SdkClientException: Unable to find a region via the region provider chain. Must provide an explicit region in the builder or setup environment to supply a region.\"\nI've decided to provide the region explicitly (like we do in the S3ChangeLogStore and AwsPrivateKeyStor\ne) just to be on the safe side.", "author": "OferLevi85", "createdAt": "2020-07-25T12:09:41Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/cert/impl/DynamoDBClientFetcherImpl.java", "diffHunk": "@@ -48,7 +58,10 @@ public DynamoDBClientAndCredentials getDynamoDBClient(ZTSClientNotificationSende\n             LOGGER.info(\"DynamoDB client will use existing AWS authentication\");\n             if (dynamoDBClientSettings.getRegion().isEmpty()) {\n                 // Use default region\n-                AmazonDynamoDB client = AmazonDynamoDBClientBuilder.standard().build();\n+                AmazonDynamoDB client = AmazonDynamoDBClientBuilder", "originalCommit": "d3b9949585e681fc50e2c5b1552fcb78e9bb7ecd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}