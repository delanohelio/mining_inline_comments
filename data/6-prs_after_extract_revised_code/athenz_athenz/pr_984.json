{"pr_number": 984, "pr_title": "Added caching to ZTSClient", "pr_createdAt": "2020-05-20T14:10:00Z", "pr_url": "https://github.com/AthenZ/athenz/pull/984", "timeline": [{"oid": "b5f6f36fb71124e62e35dd4c20c89df6b56f4fdd", "url": "https://github.com/AthenZ/athenz/commit/b5f6f36fb71124e62e35dd4c20c89df6b56f4fdd", "message": "Added caching to ZTSClient", "committedDate": "2020-05-20T14:07:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ1OTc5MQ==", "url": "https://github.com/AthenZ/athenz/pull/984#discussion_r428459791", "bodyText": "We don't have to since it's still the same identity (just a new token) and it's just a lookup - anyone with just read credentials can get the access so it's not one of our access tokens where we need to protect and include which principal used that to get the token since the token is based on the principal itself.", "author": "havetisyan", "createdAt": "2020-05-21T05:56:30Z", "path": "clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClient.java", "diffHunk": "@@ -2044,9 +2048,25 @@ AWSTemporaryCredentials lookupAwsCredInCache(String cacheKey, Integer minExpiryT\n      * @return RoleAccess object on success. ZTSClientException will be thrown in case of failure\n      */\n     public RoleAccess getRoleAccess(String domainName, String principal) {\n-        updateServicePrincipal();\n+        updateServicePrincipal();    // TODO: Henry: what if this method returns true - the principal's credentials are changed: should we not clean up the relevant cache entries ?", "originalCommit": "b5f6f36fb71124e62e35dd4c20c89df6b56f4fdd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c52cf6db411be80965e0f317066315a3910bef7a", "chunk": "diff --git a/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClient.java b/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClient.java\nindex 65a6d5482..e72ec9948 100644\n--- a/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClient.java\n+++ b/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClient.java\n\n@@ -2048,11 +2050,11 @@ public class ZTSClient implements Closeable {\n      * @return RoleAccess object on success. ZTSClientException will be thrown in case of failure\n      */\n     public RoleAccess getRoleAccess(String domainName, String principal) {\n-        updateServicePrincipal();    // TODO: Henry: what if this method returns true - the principal's credentials are changed: should we not clean up the relevant cache entries ?\n+        updateServicePrincipal();\n \n         // Try to fetch from cache.\n         ZTSClientCache.DomainAndPrincipal cacheKey = null;\n-        Cache<ZTSClientCache.DomainAndPrincipal, RoleAccess> cache = ZTSClientCache.getInstance().getRoleAccessCache();\n+        Cache<ZTSClientCache.DomainAndPrincipal, RoleAccess> cache = ztsClientCache.getRoleAccessCache();\n         if (cache != null) {\n             cacheKey = new ZTSClientCache.DomainAndPrincipal(domainName, principal);\n             RoleAccess cachedValue = cache.get(cacheKey);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2MDAxOQ==", "url": "https://github.com/AthenZ/athenz/pull/984#discussion_r428460019", "bodyText": "We should change this to 2020 Verizon Media", "author": "havetisyan", "createdAt": "2020-05-21T05:57:21Z", "path": "clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java", "diffHunk": "@@ -0,0 +1,285 @@\n+/*\n+ * Copyright 2016 Yahoo Inc.", "originalCommit": "b5f6f36fb71124e62e35dd4c20c89df6b56f4fdd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c52cf6db411be80965e0f317066315a3910bef7a", "chunk": "diff --git a/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java b/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java\nindex 9393c02f3..98d06761c 100644\n--- a/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java\n+++ b/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2016 Yahoo Inc.\n+ * Copyright 2020 Verizon Media.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2MTIwMA==", "url": "https://github.com/AthenZ/athenz/pull/984#discussion_r428461200", "bodyText": "For now, we don't need to. The getAccess is used for centralized authorization checks and a proper usage is only for small number of requests and in that case you want to get the changes to any role/policy asap and caching would just delay the response. Though it should be very simple and easy to add additional caches when use cases materialize.", "author": "havetisyan", "createdAt": "2020-05-21T06:01:14Z", "path": "clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java", "diffHunk": "@@ -0,0 +1,285 @@\n+/*\n+ * Copyright 2016 Yahoo Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.yahoo.athenz.zts;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.ehcache.Cache;\n+import org.ehcache.CacheManager;\n+import org.ehcache.config.CacheConfiguration;\n+import org.ehcache.config.builders.CacheConfigurationBuilder;\n+import org.ehcache.config.builders.CacheManagerBuilder;\n+import org.ehcache.impl.copy.ReadWriteCopier;\n+import org.ehcache.spi.serialization.Serializer;\n+import org.ehcache.spi.serialization.SerializerException;\n+import org.ehcache.xml.XmlConfiguration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.charset.CharsetDecoder;\n+import java.nio.charset.CharsetEncoder;\n+import java.nio.charset.StandardCharsets;\n+import java.util.AbstractMap;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+/**\n+ * Provides optional caching for {@link ZTSClient}. <br>\n+ * This class is designed to support multiple caches - but is currently only support a\n+ *  cache from {domain+principal} to {@link RoleAccess} - see\n+ *  {@link com.yahoo.athenz.zts.ZTSClient#getRoleAccess(java.lang.String, java.lang.String)}.  <br><br>\n+ *\n+ * TODO: Henry - what about:", "originalCommit": "b5f6f36fb71124e62e35dd4c20c89df6b56f4fdd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c52cf6db411be80965e0f317066315a3910bef7a", "chunk": "diff --git a/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java b/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java\nindex 9393c02f3..98d06761c 100644\n--- a/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java\n+++ b/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2016 Yahoo Inc.\n+ * Copyright 2020 Verizon Media.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2MjMxMw==", "url": "https://github.com/AthenZ/athenz/pull/984#discussion_r428462313", "bodyText": "It should be very simple to add the unit tests for the caching case. We already provide a setZTSRDLGeneratedClient method where you can just pass a mock for the zts client which can just return the data first time it's called but throws an exception when the second time it's called. with caching we should only get it called once and we should never get an exception.", "author": "havetisyan", "createdAt": "2020-05-21T06:05:11Z", "path": "clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java", "diffHunk": "@@ -0,0 +1,285 @@\n+/*\n+ * Copyright 2016 Yahoo Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.yahoo.athenz.zts;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.ehcache.Cache;\n+import org.ehcache.CacheManager;\n+import org.ehcache.config.CacheConfiguration;\n+import org.ehcache.config.builders.CacheConfigurationBuilder;\n+import org.ehcache.config.builders.CacheManagerBuilder;\n+import org.ehcache.impl.copy.ReadWriteCopier;\n+import org.ehcache.spi.serialization.Serializer;\n+import org.ehcache.spi.serialization.SerializerException;\n+import org.ehcache.xml.XmlConfiguration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.charset.CharsetDecoder;\n+import java.nio.charset.CharsetEncoder;\n+import java.nio.charset.StandardCharsets;\n+import java.util.AbstractMap;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+/**\n+ * Provides optional caching for {@link ZTSClient}. <br>\n+ * This class is designed to support multiple caches - but is currently only support a\n+ *  cache from {domain+principal} to {@link RoleAccess} - see\n+ *  {@link com.yahoo.athenz.zts.ZTSClient#getRoleAccess(java.lang.String, java.lang.String)}.  <br><br>\n+ *\n+ * TODO: Henry - what about:\n+ *      {@link ZTSClient#getAccess(java.lang.String, java.lang.String, java.lang.String)}\n+ *      {@link ZTSClient#getResourceAccess(java.lang.String, java.lang.String, java.lang.String, java.lang.String)} ?\n+ *\n+ * TODO: Henry - no unit-tests - need to discuss", "originalCommit": "b5f6f36fb71124e62e35dd4c20c89df6b56f4fdd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c52cf6db411be80965e0f317066315a3910bef7a", "chunk": "diff --git a/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java b/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java\nindex 9393c02f3..98d06761c 100644\n--- a/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java\n+++ b/clients/java/zts/core/src/main/java/com/yahoo/athenz/zts/ZTSClientCache.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2016 Yahoo Inc.\n+ * Copyright 2020 Verizon Media.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n"}}, {"oid": "c52cf6db411be80965e0f317066315a3910bef7a", "url": "https://github.com/AthenZ/athenz/commit/c52cf6db411be80965e0f317066315a3910bef7a", "message": "Added caching to ZTSClient", "committedDate": "2020-05-24T08:18:06Z", "type": "commit"}]}