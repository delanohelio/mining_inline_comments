{"pr_number": 1099, "pr_title": "Implemented restricted mTLS certs", "pr_createdAt": "2020-09-01T16:54:38Z", "pr_url": "https://github.com/AthenZ/athenz/pull/1099", "timeline": [{"oid": "a6b49af19cd4b445caf4bae23a3a7110fd887c71", "url": "https://github.com/AthenZ/athenz/commit/a6b49af19cd4b445caf4bae23a3a7110fd887c71", "message": "Implemented restricted mTLS certs", "committedDate": "2020-09-01T19:49:32Z", "type": "commit"}, {"oid": "a6b49af19cd4b445caf4bae23a3a7110fd887c71", "url": "https://github.com/AthenZ/athenz/commit/a6b49af19cd4b445caf4bae23a3a7110fd887c71", "message": "Implemented restricted mTLS certs", "committedDate": "2020-09-01T19:49:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ3NDk3Mw==", "url": "https://github.com/AthenZ/athenz/pull/1099#discussion_r481474973", "bodyText": "any reason not just combine these two lines?", "author": "havetisyan", "createdAt": "2020-09-01T22:50:49Z", "path": "libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/impl/CertificateAuthority.java", "diffHunk": "@@ -111,6 +112,9 @@ public Principal authenticate(X509Certificate[] certs, StringBuilder errMsg) {\n         principal.setUnsignedCreds(x509Cert.getSubjectX500Principal().toString());\n         principal.setX509Certificate(x509Cert);\n         principal.setRoles(certId.getRoles());\n+        boolean isRestrictedCert = Crypto.isRestrictedCertificate(x509Cert);\n+        principal.setMtlsRestricted(isRestrictedCert);", "originalCommit": "a6b49af19cd4b445caf4bae23a3a7110fd887c71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ebc39e98c2f41a3259d610701c0f0bcce3041b7", "chunk": "diff --git a/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/impl/CertificateAuthority.java b/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/impl/CertificateAuthority.java\nindex c39b38836..ede5cce01 100644\n--- a/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/impl/CertificateAuthority.java\n+++ b/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/impl/CertificateAuthority.java\n\n@@ -112,8 +116,7 @@ public class CertificateAuthority implements Authority {\n         principal.setUnsignedCreds(x509Cert.getSubjectX500Principal().toString());\n         principal.setX509Certificate(x509Cert);\n         principal.setRoles(certId.getRoles());\n-        boolean isRestrictedCert = Crypto.isRestrictedCertificate(x509Cert);\n-        principal.setMtlsRestricted(isRestrictedCert);\n+        principal.setMtlsRestricted(Crypto.isRestrictedCertificate(x509Cert, globStringsMatcher));\n \n         return principal;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ3NjI1MA==", "url": "https://github.com/AthenZ/athenz/pull/1099#discussion_r481476250", "bodyText": "This could turn out to be a very expensive method since we're parsing and generating new strings matcher every time. This is a static property. While I understand the logic of adding the function here since it simplifies the authority code, I believe each authority should create a static strings matcher object itself and then pass this as an argument. this way we're not creating a new one for every single request.", "author": "havetisyan", "createdAt": "2020-09-01T22:54:58Z", "path": "libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/Crypto.java", "diffHunk": "@@ -1115,6 +1117,12 @@ public static String extractX509CertSubjectOField(X509Certificate x509Cert) {\n         return extractX509CertSubjectField(x509Cert, BCStyle.O);\n     }\n \n+    public static boolean isRestrictedCertificate(X509Certificate x509Cert) {", "originalCommit": "a6b49af19cd4b445caf4bae23a3a7110fd887c71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkyMjI4NQ==", "url": "https://github.com/AthenZ/athenz/pull/1099#discussion_r481922285", "bodyText": "Yeah sounds good. At first I had a single static instance of GlobStringsMatcher in Crypto but it made it hard to unit-test as it required each test to re-initialize the static instance (so it can re-read the property).\nI eventually placed it in the method to write the unit-tests and I planned on fixing it by doing the reload in each unit-test before the push but it slipped my mind.\nBut yeah making the Authority pass the reference is actually a much better solution.", "author": "OferLevi85", "createdAt": "2020-09-02T09:11:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ3NjI1MA=="}], "type": "inlineReview", "revised_code": {"commit": "8ebc39e98c2f41a3259d610701c0f0bcce3041b7", "chunk": "diff --git a/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/Crypto.java b/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/Crypto.java\nindex f905916da..e3bc92124 100644\n--- a/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/Crypto.java\n+++ b/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/Crypto.java\n\n@@ -1117,9 +1115,16 @@ public class Crypto {\n         return extractX509CertSubjectField(x509Cert, BCStyle.O);\n     }\n \n-    public static boolean isRestrictedCertificate(X509Certificate x509Cert) {\n+    public static boolean isRestrictedCertificate(X509Certificate x509Cert, GlobStringsMatcher globStringsMatcher) {\n+        if (globStringsMatcher == null) {\n+            LOG.error(\"isRestrictedCertificate: Required argument globStringsMatcher is null. Returning true.\");\n+            return true;\n+        }\n+        if (x509Cert == null) {\n+            LOG.error(\"isRestrictedCertificate: Required argument x509Cert is null. Returning true.\");\n+            return true;\n+        }\n         String x509Ou = extractX509CertSubjectOUField(x509Cert);\n-        GlobStringsMatcher globStringsMatcher = new GlobStringsMatcher(ATHENZ_RESTRICTED_OU_PROP);\n         return globStringsMatcher.isMatch(x509Ou);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ3OTE3Mg==", "url": "https://github.com/AthenZ/athenz/pull/1099#discussion_r481479172", "bodyText": "we should update the debug statement on line 35 below. it's referring to Ignored services - we should just include the property name in the statement", "author": "havetisyan", "createdAt": "2020-09-01T23:03:47Z", "path": "libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/GlobStringsMatcher.java", "diffHunk": "@@ -30,7 +29,7 @@\n     private final List<String> patterns;\n \n     public GlobStringsMatcher(String systemProperty) {\n-        List<String> globList = ZTSUtils.splitCommaSeperatedSystemProperty(systemProperty);\n+        List<String> globList = AthenzUtils.splitCommaSeperatedSystemProperty(systemProperty);", "originalCommit": "a6b49af19cd4b445caf4bae23a3a7110fd887c71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ebc39e98c2f41a3259d610701c0f0bcce3041b7", "chunk": "diff --git a/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/GlobStringsMatcher.java b/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/GlobStringsMatcher.java\nindex f62af038d..c173d35c3 100644\n--- a/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/GlobStringsMatcher.java\n+++ b/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/GlobStringsMatcher.java\n\n@@ -32,7 +32,7 @@ public class GlobStringsMatcher {\n         List<String> globList = AthenzUtils.splitCommaSeperatedSystemProperty(systemProperty);\n         patterns = globList.stream().map(glob -> StringUtils.patternFromGlob(glob)).collect(Collectors.toList());\n         if (LOGGER.isDebugEnabled()) {\n-            LOGGER.debug(\"Ignored Services Regex List: \" + Arrays.toString(patterns.toArray()));\n+            LOGGER.debug(String.format(\"Property: %s, Regex List: %s\", systemProperty, Arrays.toString(patterns.toArray())));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ3OTY2NQ==", "url": "https://github.com/AthenZ/athenz/pull/1099#discussion_r481479665", "bodyText": "For ZMS - why not just put the check in the authorize call. We should not allow any write operations with the restricted cert.", "author": "havetisyan", "createdAt": "2020-09-01T23:05:12Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java", "diffHunk": "@@ -3482,6 +3482,8 @@ public void putMembership(ResourceContext ctx, String domainName, String roleNam\n \n         verifyAuthorizedServiceRoleOperation(principal.getAuthorizedService(), caller, roleName);\n \n+        validateNotMtlsRestricted(ctx, caller);", "originalCommit": "a6b49af19cd4b445caf4bae23a3a7110fd887c71", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ebc39e98c2f41a3259d610701c0f0bcce3041b7", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\nindex 6e4e15e08..74054b5f7 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/ZMSImpl.java\n\n@@ -3482,8 +3489,6 @@ public class ZMSImpl implements Authorizer, KeyStore, ZMSHandler {\n \n         verifyAuthorizedServiceRoleOperation(principal.getAuthorizedService(), caller, roleName);\n \n-        validateNotMtlsRestricted(ctx, caller);\n-\n         // verify that the member name in the URI and object provided match\n \n         if (!memberName.equals(membership.getMemberName())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4MTE0MA==", "url": "https://github.com/AthenZ/athenz/pull/1099#discussion_r481481140", "bodyText": "For ZTS, we should be probably be more strict and add it to the authenticate method. We should not allow anyone with the restricted certs to connect to ZTS. I can't think of any reason, can you? This would simplify the code for any future commands as well.", "author": "havetisyan", "createdAt": "2020-09-01T23:09:46Z", "path": "servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSImpl.java", "diffHunk": "@@ -1372,6 +1372,8 @@ public RoleToken getRoleToken(ResourceContext ctx, String domainName, String rol\n                     ZTSConsts.ZTS_UNKNOWN_DOMAIN, principalDomain);\n         }\n \n+        validateNotMtlsRestricted(ctx, caller, domainName);", "originalCommit": "a6b49af19cd4b445caf4bae23a3a7110fd887c71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk2Mzk3Ng==", "url": "https://github.com/AthenZ/athenz/pull/1099#discussion_r481963976", "bodyText": "There are some methods to the ones in ZMS where user without authorization can retrieve data.\nFor example:\n\nenable users the option to check access with the restricted certs (get /access)\nGet services in a domain (GET /domain/{domainName}/service/)\nGet a service public key (GET /domain/{domainName}/service/{serviceName}/publickey/{keyId})\nGet a list of services to run on a specific host (GET /host/{host}/services)\nGet Status (/status)\n\nLet me know if you think it's best to block it completely.", "author": "OferLevi85", "createdAt": "2020-09-02T10:25:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4MTE0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM4MjcwNA==", "url": "https://github.com/AthenZ/athenz/pull/1099#discussion_r482382704", "bodyText": "those operations can be carried out against ZMS. There is no point of going to ZTS to get a service or public keys. and if you have a restricted cert, you should not really carry out any access checks. It's basically a limited client certificate. So I think I'm ok restricting from zts server completely.", "author": "havetisyan", "createdAt": "2020-09-02T20:01:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ4MTE0MA=="}], "type": "inlineReview", "revised_code": {"commit": "1aae0d9d942222b39129d78c97e8d7b76489f7c1", "chunk": "diff --git a/servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSImpl.java b/servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSImpl.java\nindex a27810bf1..6e2c8e64d 100644\n--- a/servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSImpl.java\n+++ b/servers/zts/src/main/java/com/yahoo/athenz/zts/ZTSImpl.java\n\n@@ -1372,8 +1372,6 @@ public class ZTSImpl implements KeyStore, ZTSHandler {\n                     ZTSConsts.ZTS_UNKNOWN_DOMAIN, principalDomain);\n         }\n \n-        validateNotMtlsRestricted(ctx, caller, domainName);\n-\n         // first retrieve our domain data object from the cache\n \n         DataCache data = dataStore.getDataCache(domainName);\n"}}, {"oid": "8ebc39e98c2f41a3259d610701c0f0bcce3041b7", "url": "https://github.com/AthenZ/athenz/commit/8ebc39e98c2f41a3259d610701c0f0bcce3041b7", "message": "Fix following code review", "committedDate": "2020-09-02T13:20:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM2OTg3NQ==", "url": "https://github.com/AthenZ/athenz/pull/1099#discussion_r482369875", "bodyText": "we should optimize the use of this function. If I don't have a restricted set, the code parses and gets the ou field anyway and then just does nothing. before doing this we should check if there are any values in our strings matcher and if it's empty, then return false right away without doing anything.", "author": "havetisyan", "createdAt": "2020-09-02T19:51:41Z", "path": "libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/Crypto.java", "diffHunk": "@@ -1115,6 +1115,19 @@ public static String extractX509CertSubjectOField(X509Certificate x509Cert) {\n         return extractX509CertSubjectField(x509Cert, BCStyle.O);\n     }\n \n+    public static boolean isRestrictedCertificate(X509Certificate x509Cert, GlobStringsMatcher globStringsMatcher) {\n+        if (globStringsMatcher == null) {\n+            LOG.error(\"isRestrictedCertificate: Required argument globStringsMatcher is null. Returning true.\");\n+            return true;\n+        }\n+        if (x509Cert == null) {\n+            LOG.error(\"isRestrictedCertificate: Required argument x509Cert is null. Returning true.\");\n+            return true;\n+        }\n+        String x509Ou = extractX509CertSubjectOUField(x509Cert);", "originalCommit": "8ebc39e98c2f41a3259d610701c0f0bcce3041b7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1aae0d9d942222b39129d78c97e8d7b76489f7c1", "chunk": "diff --git a/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/Crypto.java b/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/Crypto.java\nindex e3bc92124..04c5fed95 100644\n--- a/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/Crypto.java\n+++ b/libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/Crypto.java\n\n@@ -1124,6 +1124,11 @@ public class Crypto {\n             LOG.error(\"isRestrictedCertificate: Required argument x509Cert is null. Returning true.\");\n             return true;\n         }\n+        if (globStringsMatcher.isEmptyPatternsList()) {\n+            // No patterns provided, no need to check for mTLS restriction\n+            return false;\n+        }\n+\n         String x509Ou = extractX509CertSubjectOUField(x509Cert);\n         return globStringsMatcher.isMatch(x509Ou);\n     }\n"}}, {"oid": "1aae0d9d942222b39129d78c97e8d7b76489f7c1", "url": "https://github.com/AthenZ/athenz/commit/1aae0d9d942222b39129d78c97e8d7b76489f7c1", "message": "Fix following code review", "committedDate": "2020-09-03T09:09:05Z", "type": "commit"}]}