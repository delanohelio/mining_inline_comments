{"pr_number": 950, "pr_title": "modify using localtime for retrieving modified domains", "pr_createdAt": "2020-04-27T06:41:14Z", "pr_url": "https://github.com/AthenZ/athenz/pull/950", "timeline": [{"oid": "78988c88bc957ee190dc8402cd1d9c889cf3d631", "url": "https://github.com/AthenZ/athenz/commit/78988c88bc957ee190dc8402cd1d9c889cf3d631", "message": "modify using localtime for retrieving modified domains", "committedDate": "2020-04-27T06:58:48Z", "type": "commit"}, {"oid": "78988c88bc957ee190dc8402cd1d9c889cf3d631", "url": "https://github.com/AthenZ/athenz/commit/78988c88bc957ee190dc8402cd1d9c889cf3d631", "message": "modify using localtime for retrieving modified domains", "committedDate": "2020-04-27T06:58:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MTcyMg==", "url": "https://github.com/AthenZ/athenz/pull/950#discussion_r415951722", "bodyText": "this becomes a wasted operation if the command itself does not the calendar instance. please retain the original behavior where the calendar is obtained only when its needed.", "author": "havetisyan", "createdAt": "2020-04-27T16:14:23Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -648,6 +649,8 @@ public boolean deleteDomain(String domainName) {\n     PreparedStatement prepareDomainScanStatement(String prefix, long modifiedSince)\n             throws SQLException {\n         \n+        Calendar cal = getCalendarInstance();", "originalCommit": "78988c88bc957ee190dc8402cd1d9c889cf3d631", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8a2db8f8407c21e706048594e827d2f2ddeaa6d4", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\nindex 3fe35ff14..e783e0322 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n\n@@ -648,8 +650,8 @@ public class JDBCConnection implements ObjectStoreConnection {\n \n     PreparedStatement prepareDomainScanStatement(String prefix, long modifiedSince)\n             throws SQLException {\n-        \n-        Calendar cal = getCalendarInstance();\n+\n+        Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(MYSQL_SERVER_TIMEZONE));\n \n         PreparedStatement ps;\n         if (prefix != null && prefix.length() > 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MjM4NA==", "url": "https://github.com/AthenZ/athenz/pull/950#discussion_r415952384", "bodyText": "we should not fetch the property and parse it every time. this should be a static member of the class  so we only do it once and never again.", "author": "havetisyan", "createdAt": "2020-04-27T16:15:14Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -666,13 +668,27 @@ PreparedStatement prepareDomainScanStatement(String prefix, long modifiedSince)\n             }\n         } else if (modifiedSince != 0) {\n             ps = con.prepareStatement(SQL_LIST_DOMAIN_MODIFIED);\n-            Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n             ps.setTimestamp(1, new java.sql.Timestamp(modifiedSince), cal);\n         } else {\n             ps = con.prepareStatement(SQL_LIST_DOMAIN);\n         }\n         return ps;\n     }\n+\n+    Calendar getCalendarInstance() {\n+\n+        Boolean useLocalTimeZone = Boolean.parseBoolean(", "originalCommit": "78988c88bc957ee190dc8402cd1d9c889cf3d631", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8a2db8f8407c21e706048594e827d2f2ddeaa6d4", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\nindex 3fe35ff14..e783e0322 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n\n@@ -675,21 +677,7 @@ public class JDBCConnection implements ObjectStoreConnection {\n         return ps;\n     }\n \n-    Calendar getCalendarInstance() {\n-\n-        Boolean useLocalTimeZone = Boolean.parseBoolean(\n-                System.getProperty(ZMSConsts.ZMS_PROP_USE_LOCAL_TIMEZONE_IN_DOMAIN_SCAN, \"false\")\n-        );\n-\n-        TimeZone timeZone;\n-        if (useLocalTimeZone) {\n-            timeZone = TimeZone.getDefault();\n-        } else {\n-            timeZone = TimeZone.getTimeZone(\"GMT\");\n-        }\n-        return Calendar.getInstance(timeZone);\n-    }\n-    \n+   \n     PreparedStatement prepareScanByRoleStatement(String roleMember, String roleName)\n             throws SQLException {\n         \n"}}, {"oid": "8a2db8f8407c21e706048594e827d2f2ddeaa6d4", "url": "https://github.com/AthenZ/athenz/commit/8a2db8f8407c21e706048594e827d2f2ddeaa6d4", "message": "fix", "committedDate": "2020-04-27T17:42:24Z", "type": "commit"}, {"oid": "8a2db8f8407c21e706048594e827d2f2ddeaa6d4", "url": "https://github.com/AthenZ/athenz/commit/8a2db8f8407c21e706048594e827d2f2ddeaa6d4", "message": "fix", "committedDate": "2020-04-27T17:42:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA4MDcxNQ==", "url": "https://github.com/AthenZ/athenz/pull/950#discussion_r416080715", "bodyText": "let's move this code how it was before. as I mentioned in my earlier comment we don't need a calendar object if we're just doing a list domain operation.", "author": "havetisyan", "createdAt": "2020-04-27T19:15:14Z", "path": "servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java", "diffHunk": "@@ -647,7 +650,9 @@ public boolean deleteDomain(String domainName) {\n \n     PreparedStatement prepareDomainScanStatement(String prefix, long modifiedSince)\n             throws SQLException {\n-        \n+\n+        Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(MYSQL_SERVER_TIMEZONE));", "originalCommit": "8a2db8f8407c21e706048594e827d2f2ddeaa6d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a91ecbeb8aef368bb45197aa05bee070fecb4649", "chunk": "diff --git a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\nindex e783e0322..2464dd9f4 100644\n--- a/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n+++ b/servers/zms/src/main/java/com/yahoo/athenz/zms/store/jdbc/JDBCConnection.java\n\n@@ -651,8 +651,6 @@ public class JDBCConnection implements ObjectStoreConnection {\n     PreparedStatement prepareDomainScanStatement(String prefix, long modifiedSince)\n             throws SQLException {\n \n-        Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(MYSQL_SERVER_TIMEZONE));\n-\n         PreparedStatement ps;\n         if (prefix != null && prefix.length() > 0) {\n             int len = prefix.length();\n"}}, {"oid": "a91ecbeb8aef368bb45197aa05bee070fecb4649", "url": "https://github.com/AthenZ/athenz/commit/a91ecbeb8aef368bb45197aa05bee070fecb4649", "message": "fix", "committedDate": "2020-04-28T04:40:57Z", "type": "commit"}]}