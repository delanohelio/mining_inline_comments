{"pr_number": 18437, "pr_title": "#18363 pagination fix", "pr_createdAt": "2020-05-06T00:03:24Z", "pr_url": "https://github.com/dotCMS/core/pull/18437", "timeline": [{"oid": "f91eb5d07d4b65ce34734cc2ea444c43c5c13b3c", "url": "https://github.com/dotCMS/core/commit/f91eb5d07d4b65ce34734cc2ea444c43c5c13b3c", "message": "#18363 pagination fix", "committedDate": "2020-05-06T00:02:48Z", "type": "commit"}, {"oid": "c6decc750f57980a53a40731b032f6661ef7faf8", "url": "https://github.com/dotCMS/core/commit/c6decc750f57980a53a40731b032f6661ef7faf8", "message": "#18363 pagination fix2", "committedDate": "2020-05-06T00:08:08Z", "type": "commit"}, {"oid": "1dd435d28224f5133d6f9fea2963896327004f8e", "url": "https://github.com/dotCMS/core/commit/1dd435d28224f5133d6f9fea2963896327004f8e", "message": "#18363 adding unit test for pagination", "committedDate": "2020-05-06T17:41:32Z", "type": "commit"}, {"oid": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02", "url": "https://github.com/dotCMS/core/commit/649f7bc5e0dc51e1c76cc495c8d0eab478e94f02", "message": "#18363 adding unit test for pagination doc", "committedDate": "2020-05-06T17:57:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4ODE5OQ==", "url": "https://github.com/dotCMS/core/pull/18437#discussion_r420988199", "bodyText": "Issue found: Avoid declaring a variable if it is unreferenced before a possible exit point.", "author": "dev-dotcms", "createdAt": "2020-05-06T18:03:57Z", "path": "dotCMS/src/main/java/com/dotcms/browser/BrowserAPIImpl.java", "diffHunk": "@@ -60,6 +62,7 @@\n     @CloseDBIfOpened\n     public Map<String, Object> getFolderContent(final BrowserQuery browserQuery) throws DotSecurityException, DotDataException {\n \n+        final MutableInt countItems                     = new MutableInt(0);", "originalCommit": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4ODIzMg==", "url": "https://github.com/dotCMS/core/pull/18437#discussion_r420988232", "bodyText": "Issue found: The String literal \"total\" appears 5 times in this file; the first occurrence is on line 149", "author": "dev-dotcms", "createdAt": "2020-05-06T18:03:58Z", "path": "dotCMS/src/integration-test/java/com/dotcms/browser/BrowserAPITest.java", "diffHunk": "@@ -113,7 +117,108 @@ public static void prepare() throws Exception {\n \n     }\n \n-    \n+    /**\n+     * Method to test: testing the pagination of the BrowserAPI, the test creates a site and a folder, them add 100 files and iterate over them with the browser api\n+     * Given Scenario: 1)  request items from 0 to 10\n+     *                  2) request items form 10 to 60\n+     *                  3) request items form 60 to 100\n+     *                  4) out of range\n+     * ExpectedResult: Must have always 100 files as a total, and should retrieve the respective items per request\n+     *\n+     */\n+\n+    @Test()\n+    public void test_GetFolderContent_pagination() throws DotDataException, DotSecurityException, IOException {\n+\n+        // create a folder\n+        // create a 100 files\n+        // paginate 10 in 100\n+        final SiteDataGen   siteDataGen   = new SiteDataGen();\n+        final FolderDataGen folderDataGen = new FolderDataGen();\n+        final Host          host          = siteDataGen.nextPersisted();\n+        final Folder        folder        = folderDataGen.site(host).nextPersisted();\n+\n+        for (int i = 0; i < 100; ++i) {\n+\n+            new FileAssetDataGen(FileUtil.createTemporalFile(\"test\", \".txt\", \"this is a test\")).host(host)\n+                    .folder(folder).setPolicy(IndexPolicy.WAIT_FOR).nextPersisted();\n+        }\n+\n+        Map<String, Object> resultMap = browserAPI.getFolderContent(BrowserQuery.builder()\n+                .showDotAssets(true)\n+                .showLinks(true)\n+                .withHostOrFolderId(folder.getIdentifier())\n+                .offset(0)\n+                .showFiles(true)\n+                .showFolders(true)\n+                .showWorking(true)\n+                .maxResults(10)\n+                .build());\n+\n+        assertNotNull(resultMap);\n+        assertEquals(100l, resultMap.get(\"total\"));", "originalCommit": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4ODI1NA==", "url": "https://github.com/dotCMS/core/pull/18437#discussion_r420988254", "bodyText": "Issue found: The String literal \"list\" appears 6 times in this file; the first occurrence is on line 151", "author": "dev-dotcms", "createdAt": "2020-05-06T18:03:59Z", "path": "dotCMS/src/integration-test/java/com/dotcms/browser/BrowserAPITest.java", "diffHunk": "@@ -113,7 +117,108 @@ public static void prepare() throws Exception {\n \n     }\n \n-    \n+    /**\n+     * Method to test: testing the pagination of the BrowserAPI, the test creates a site and a folder, them add 100 files and iterate over them with the browser api\n+     * Given Scenario: 1)  request items from 0 to 10\n+     *                  2) request items form 10 to 60\n+     *                  3) request items form 60 to 100\n+     *                  4) out of range\n+     * ExpectedResult: Must have always 100 files as a total, and should retrieve the respective items per request\n+     *\n+     */\n+\n+    @Test()\n+    public void test_GetFolderContent_pagination() throws DotDataException, DotSecurityException, IOException {\n+\n+        // create a folder\n+        // create a 100 files\n+        // paginate 10 in 100\n+        final SiteDataGen   siteDataGen   = new SiteDataGen();\n+        final FolderDataGen folderDataGen = new FolderDataGen();\n+        final Host          host          = siteDataGen.nextPersisted();\n+        final Folder        folder        = folderDataGen.site(host).nextPersisted();\n+\n+        for (int i = 0; i < 100; ++i) {\n+\n+            new FileAssetDataGen(FileUtil.createTemporalFile(\"test\", \".txt\", \"this is a test\")).host(host)\n+                    .folder(folder).setPolicy(IndexPolicy.WAIT_FOR).nextPersisted();\n+        }\n+\n+        Map<String, Object> resultMap = browserAPI.getFolderContent(BrowserQuery.builder()\n+                .showDotAssets(true)\n+                .showLinks(true)\n+                .withHostOrFolderId(folder.getIdentifier())\n+                .offset(0)\n+                .showFiles(true)\n+                .showFolders(true)\n+                .showWorking(true)\n+                .maxResults(10)\n+                .build());\n+\n+        assertNotNull(resultMap);\n+        assertEquals(100l, resultMap.get(\"total\"));\n+\n+        List<Map<String, Object>> results = (List<Map<String, Object>>)resultMap.get(\"list\");", "originalCommit": "649f7bc5e0dc51e1c76cc495c8d0eab478e94f02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}