{"pr_number": 17914, "pr_title": "#17858: Binary servlet changed to return 401 for non logged users", "pr_createdAt": "2020-01-25T03:39:21Z", "pr_url": "https://github.com/dotCMS/core/pull/17914", "timeline": [{"oid": "6330dff39ed86d97770124fd345624719a0512cc", "url": "https://github.com/dotCMS/core/commit/6330dff39ed86d97770124fd345624719a0512cc", "message": "dotCMS/core#17858: Binary servlet changed to return 401 for non logged users", "committedDate": "2020-01-25T03:33:45Z", "type": "commit"}, {"oid": "b771635cb074eb72680e5473dda9a003676146d8", "url": "https://github.com/dotCMS/core/commit/b771635cb074eb72680e5473dda9a003676146d8", "message": "dotCMS/core#17858: Removed unused imports", "committedDate": "2020-01-25T17:50:09Z", "type": "commit"}, {"oid": "73db92f9daf7e07f9d5cb33a78ebd48920374318", "url": "https://github.com/dotCMS/core/commit/73db92f9daf7e07f9d5cb33a78ebd48920374318", "message": "dotCMS/core#17858: Fixed integration test", "committedDate": "2020-01-25T18:42:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0OTI0Ng==", "url": "https://github.com/dotCMS/core/pull/17914#discussion_r370949246", "bodyText": "Issue found: JUnit 4 tests that execute tests should use the @Test annotation, JUnit 5 tests should use @Test, @RepeatedTest, @TestFactory, @TestTemplate or @ParameterizedTest", "author": "dev-dotcms", "createdAt": "2020-01-25T18:48:34Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/servlets/BinaryExporterServletTest.java", "diffHunk": "@@ -0,0 +1,211 @@\n+package com.dotmarketing.servlets;\n+\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.datagen.ContentletDataGen;\n+import com.dotcms.datagen.FileAssetDataGen;\n+import com.dotcms.datagen.FolderDataGen;\n+import com.dotcms.datagen.RoleDataGen;\n+import com.dotcms.datagen.SiteDataGen;\n+import com.dotcms.mock.request.MockHttpRequest;\n+import com.dotcms.mock.request.MockServletPathRequest;\n+import com.dotcms.mock.request.MockSessionRequest;\n+import com.dotcms.mock.response.BaseResponse;\n+import com.dotcms.mock.response.MockHttpCaptureResponse;\n+import com.dotcms.mock.response.MockHttpStatusResponse;\n+import com.dotcms.util.CollectionsUtils;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.beans.Host;\n+import com.dotmarketing.beans.Permission;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.PermissionAPI;\n+import com.dotmarketing.business.Role;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.folders.model.Folder;\n+import com.dotmarketing.util.UtilMethods;\n+import com.liferay.portal.model.User;\n+import com.tngtech.java.junit.dataprovider.DataProvider;\n+import com.tngtech.java.junit.dataprovider.DataProviderRunner;\n+import com.tngtech.java.junit.dataprovider.UseDataProvider;\n+import java.io.Closeable;\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(DataProviderRunner.class)\n+public class BinaryExporterServletTest {\n+\n+    // Temporary binary png file\n+    private static class TmpBinaryFile implements Closeable {\n+\n+        private final Path pngFilePath;\n+\n+        public TmpBinaryFile(final boolean setContent) throws IOException {\n+            pngFilePath = Files.createTempFile(\"tmp\", \".png\");\n+            if (setContent) {\n+                Files.write(pngFilePath, ShortyServletAndTitleImageTest.pngPixel);\n+            }\n+        }\n+\n+        public Path getPath() {\n+            return pngFilePath;\n+        }\n+\n+        public File getFile() {\n+            return pngFilePath.toFile();\n+        }\n+\n+        @Override\n+        public void close() throws IOException {\n+            Files.deleteIfExists(pngFilePath);\n+        }\n+    }\n+\n+    private static final String BY_ID = \"by-identifier\";\n+    private static final String BY_INODE = \"by-inode\";\n+\n+    private static final String READ_PERMISSIONS = \"has-read-permissions\";\n+    private static final String NO_PERMISSIONS = \"no-permissions\";\n+\n+    private static Host host;\n+    private static Role role;\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+\n+        // Set testing environment\n+        IntegrationTestInitService.getInstance().init();\n+\n+        host = new SiteDataGen().nextPersisted();\n+        role = new RoleDataGen().nextPersisted();\n+\n+    }\n+\n+    @DataProvider", "originalCommit": "73db92f9daf7e07f9d5cb33a78ebd48920374318", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0OTI0Nw==", "url": "https://github.com/dotCMS/core/pull/17914#discussion_r370949247", "bodyText": "Issue found: A method/constructor should not explicitly throw java.lang.Exception", "author": "dev-dotcms", "createdAt": "2020-01-25T18:48:36Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/servlets/BinaryExporterServletTest.java", "diffHunk": "@@ -0,0 +1,211 @@\n+package com.dotmarketing.servlets;\n+\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.datagen.ContentletDataGen;\n+import com.dotcms.datagen.FileAssetDataGen;\n+import com.dotcms.datagen.FolderDataGen;\n+import com.dotcms.datagen.RoleDataGen;\n+import com.dotcms.datagen.SiteDataGen;\n+import com.dotcms.mock.request.MockHttpRequest;\n+import com.dotcms.mock.request.MockServletPathRequest;\n+import com.dotcms.mock.request.MockSessionRequest;\n+import com.dotcms.mock.response.BaseResponse;\n+import com.dotcms.mock.response.MockHttpCaptureResponse;\n+import com.dotcms.mock.response.MockHttpStatusResponse;\n+import com.dotcms.util.CollectionsUtils;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.beans.Host;\n+import com.dotmarketing.beans.Permission;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.PermissionAPI;\n+import com.dotmarketing.business.Role;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.folders.model.Folder;\n+import com.dotmarketing.util.UtilMethods;\n+import com.liferay.portal.model.User;\n+import com.tngtech.java.junit.dataprovider.DataProvider;\n+import com.tngtech.java.junit.dataprovider.DataProviderRunner;\n+import com.tngtech.java.junit.dataprovider.UseDataProvider;\n+import java.io.Closeable;\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(DataProviderRunner.class)\n+public class BinaryExporterServletTest {\n+\n+    // Temporary binary png file\n+    private static class TmpBinaryFile implements Closeable {\n+\n+        private final Path pngFilePath;\n+\n+        public TmpBinaryFile(final boolean setContent) throws IOException {\n+            pngFilePath = Files.createTempFile(\"tmp\", \".png\");\n+            if (setContent) {\n+                Files.write(pngFilePath, ShortyServletAndTitleImageTest.pngPixel);\n+            }\n+        }\n+\n+        public Path getPath() {\n+            return pngFilePath;\n+        }\n+\n+        public File getFile() {\n+            return pngFilePath.toFile();\n+        }\n+\n+        @Override\n+        public void close() throws IOException {\n+            Files.deleteIfExists(pngFilePath);\n+        }\n+    }\n+\n+    private static final String BY_ID = \"by-identifier\";\n+    private static final String BY_INODE = \"by-inode\";\n+\n+    private static final String READ_PERMISSIONS = \"has-read-permissions\";\n+    private static final String NO_PERMISSIONS = \"no-permissions\";\n+\n+    private static Host host;\n+    private static Role role;\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "originalCommit": "73db92f9daf7e07f9d5cb33a78ebd48920374318", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}