{"pr_number": 17973, "pr_title": "Issue 17850 reserved vars", "pr_createdAt": "2020-02-11T16:45:47Z", "pr_url": "https://github.com/dotCMS/core/pull/17973", "timeline": [{"oid": "1675196495efe9874a239abdbba3b23447586edd", "url": "https://github.com/dotCMS/core/commit/1675196495efe9874a239abdbba3b23447586edd", "message": "#17850 untested fix", "committedDate": "2020-01-15T15:05:48Z", "type": "commit"}, {"oid": "c9771491439a232e578800e108fd393754f4de8c", "url": "https://github.com/dotCMS/core/commit/c9771491439a232e578800e108fd393754f4de8c", "message": "#17850 test lowercase", "committedDate": "2020-01-15T15:30:05Z", "type": "commit"}, {"oid": "849b9274382732424cc6db31f98e65ac87ca93c3", "url": "https://github.com/dotCMS/core/commit/849b9274382732424cc6db31f98e65ac87ca93c3", "message": "#17850 throws execption before saving", "committedDate": "2020-01-15T16:18:36Z", "type": "commit"}, {"oid": "0e2be40ea72d5fb43dee7bad4ca7cf90ab9d420f", "url": "https://github.com/dotCMS/core/commit/0e2be40ea72d5fb43dee7bad4ca7cf90ab9d420f", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars", "committedDate": "2020-02-05T21:54:00Z", "type": "commit"}, {"oid": "c693b45499f867b5b086b9310b1e378aa0424e18", "url": "https://github.com/dotCMS/core/commit/c693b45499f867b5b086b9310b1e378aa0424e18", "message": "#17850 include integration-test", "committedDate": "2020-02-05T23:06:04Z", "type": "commit"}, {"oid": "4d62995b21a9f69b9d7cbb7c1dc2428bb2924b70", "url": "https://github.com/dotCMS/core/commit/4d62995b21a9f69b9d7cbb7c1dc2428bb2924b70", "message": "#17850 fix terminology", "committedDate": "2020-02-05T23:09:38Z", "type": "commit"}, {"oid": "91113a7b077b76129052c61c4d3918a6b27cd108", "url": "https://github.com/dotCMS/core/commit/91113a7b077b76129052c61c4d3918a6b27cd108", "message": "#17850 code-review", "committedDate": "2020-02-06T16:45:32Z", "type": "commit"}, {"oid": "4708faa0bf89f3fcd5f17621bce5fddca1df8128", "url": "https://github.com/dotCMS/core/commit/4708faa0bf89f3fcd5f17621bce5fddca1df8128", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars", "committedDate": "2020-02-10T17:37:23Z", "type": "commit"}, {"oid": "acd52e3029e5451ea92c531d02be62d9325f2d3e", "url": "https://github.com/dotCMS/core/commit/acd52e3029e5451ea92c531d02be62d9325f2d3e", "message": "#17850 refactor test to avoid calling init service", "committedDate": "2020-02-10T22:43:16Z", "type": "commit"}, {"oid": "34d685920b457fbdbd1b172969af196afded16c2", "url": "https://github.com/dotCMS/core/commit/34d685920b457fbdbd1b172969af196afded16c2", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars", "committedDate": "2020-03-02T17:12:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxODgwOQ==", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r396918809", "bodyText": "I would do a NPE checking", "author": "jdotcms", "createdAt": "2020-03-24T06:03:58Z", "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java", "diffHunk": "@@ -243,7 +294,7 @@ public String suggestVelocityVar(final String tryVar) throws DotDataException {\n     for (int i = 1; i < 100000; i++) {\n       dc.setSQL(this.contentTypeSql.SELECT_COUNT_VAR);\n       dc.addParam(varName.toLowerCase());\n-      if (dc.getInt(\"test\") == 0) {\n+      if (dc.getInt(\"test\") == 0 && !reservedContentTypeVars.contains(varName.toLowerCase())) {", "originalCommit": "acd52e3029e5451ea92c531d02be62d9325f2d3e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxODgyNw==", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r396918827", "bodyText": "I would do a NPE checking", "author": "jdotcms", "createdAt": "2020-03-24T06:04:02Z", "path": "dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java", "diffHunk": "@@ -315,7 +366,10 @@ private ContentType dbSaveUpdate(final ContentType saveType) throws DotDataExcep\n     }\n \n     ContentType retType = builder.build();\n-\n+    if(reservedContentTypeVars.contains(retType.variable().toLowerCase())){", "originalCommit": "acd52e3029e5451ea92c531d02be62d9325f2d3e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "045efe613e7f148be6c679e70b5a21fddde4d3f5", "chunk": "diff --git a/dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java b/dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java\nindex e92f727c69..e3e1ccfdf4 100644\n--- a/dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java\n+++ b/dotCMS/src/main/java/com/dotcms/contenttype/business/ContentTypeFactoryImpl.java\n\n@@ -366,7 +366,7 @@ public class ContentTypeFactoryImpl implements ContentTypeFactory {\n     }\n \n     ContentType retType = builder.build();\n-    if(reservedContentTypeVars.contains(retType.variable().toLowerCase())){\n+    if(reservedContentTypeVars.contains(retType.variable().toLowerCase()) && !retType.system()){\n         Logger.warn(this, \"Invalid content type variable - reserved var name: \" + retType.variable().toLowerCase());\n         throw new IllegalArgumentException(\"Invalid content type variable - reserved var name: \" + retType.variable().toLowerCase());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM5MzYyNg==", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r401393626", "bodyText": "this is usually done by Tuple.of, but it is ok I guess", "author": "jdotcms", "createdAt": "2020-04-01T06:56:15Z", "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -631,40 +631,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator\n                 .getContentTypeAPI(APILocator.systemUser()).findAll().stream()\n                 .filter((type)->type instanceof EnterpriseType).collect(Collectors.toList());\n \n-        // returns a List of Tuple (typeName, baseType)\n-        return eeTypes.stream().map((type)->\n-                new Tuple2<>(\"my\"+type.variable(), type.baseType())\n-        ).collect(Collectors.toList());\n-    }\n-\n-    @Test\n-    @UseDataProvider(\"dataProviderEEContentTypes\")\n-    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema(\n-            final Tuple2<String, BaseContentType> testCase) throws Exception{\n-        ContentType customType = null;\n-\n-        try {\n-            // create custom persona type. 1=typeName, 2=BaseType\n-            customType = createType(testCase._1,\n-                    testCase._2);\n-\n-            runNoLicense(() -> {\n-                final GraphQLSchema schema = APILocator.getGraphqlAPI().getSchema();\n-                assertNull(schema.getType(testCase._1));\n-            });\n-        } finally {\n-            if(customType!=null) {\n-                APILocator.getContentTypeAPI(APILocator.systemUser()).delete(customType);\n+        List<Tuple2<String, BaseContentType>> eeTypesList = eeTypes.stream().map((type)->\n+                        new Tuple2<>(\"my\"+type.variable(), type.baseType())).collect(Collectors.toList());", "originalCommit": "acd52e3029e5451ea92c531d02be62d9325f2d3e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "1c70296027f54d8042a680d5bb5ccd3125d1996b", "url": "https://github.com/dotCMS/core/commit/1c70296027f54d8042a680d5bb5ccd3125d1996b", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars", "committedDate": "2020-04-21T18:37:57Z", "type": "commit"}, {"oid": "ffaaef8a9a35142a01b528a852dd4d0fcbbb9ccc", "url": "https://github.com/dotCMS/core/commit/ffaaef8a9a35142a01b528a852dd4d0fcbbb9ccc", "message": "#17850 apply validation for non-system types. Integration tests", "committedDate": "2020-04-22T19:01:12Z", "type": "commit"}, {"oid": "f7e98f982710ff674bfb244db78ae1bd78b3f014", "url": "https://github.com/dotCMS/core/commit/f7e98f982710ff674bfb244db78ae1bd78b3f014", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars", "committedDate": "2020-04-22T21:30:00Z", "type": "commit"}, {"oid": "045efe613e7f148be6c679e70b5a21fddde4d3f5", "url": "https://github.com/dotCMS/core/commit/045efe613e7f148be6c679e70b5a21fddde4d3f5", "message": "#17850", "committedDate": "2020-04-22T22:04:43Z", "type": "commit"}, {"oid": "75d57160e76d98127963099c8d4e903f90fb49f9", "url": "https://github.com/dotCMS/core/commit/75d57160e76d98127963099c8d4e903f90fb49f9", "message": "#17850 bypass a couple more validations for system types", "committedDate": "2020-04-23T17:12:13Z", "type": "commit"}, {"oid": "24a0d1f25838ab198dfe7b2f9e45c08d66efede5", "url": "https://github.com/dotCMS/core/commit/24a0d1f25838ab198dfe7b2f9e45c08d66efede5", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars", "committedDate": "2020-04-23T18:46:04Z", "type": "commit"}, {"oid": "b693d5ff1396a311a411aaaa2387b89882a73055", "url": "https://github.com/dotCMS/core/commit/b693d5ff1396a311a411aaaa2387b89882a73055", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars", "committedDate": "2020-04-23T21:27:59Z", "type": "commit"}, {"oid": "81693b9239306ffefbed12d0921132e395202a14", "url": "https://github.com/dotCMS/core/commit/81693b9239306ffefbed12d0921132e395202a14", "message": "#17850 validation only for new types (save, not update)", "committedDate": "2020-04-24T18:32:38Z", "type": "commit"}, {"oid": "398a9a93e9ee03aab3e1477fa12c7a2b79f55532", "url": "https://github.com/dotCMS/core/commit/398a9a93e9ee03aab3e1477fa12c7a2b79f55532", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-17850-reserved-vars", "committedDate": "2020-04-27T21:44:58Z", "type": "commit"}, {"oid": "8ab10ada1de37ce703314acc85b12fe6f4772aaf", "url": "https://github.com/dotCMS/core/commit/8ab10ada1de37ce703314acc85b12fe6f4772aaf", "message": "#17850 clean-up integration tests", "committedDate": "2020-04-27T21:49:07Z", "type": "commit"}, {"oid": "15fdd736c263159a6bfe8fe02c2577f1b9dd54b9", "url": "https://github.com/dotCMS/core/commit/15fdd736c263159a6bfe8fe02c2577f1b9dd54b9", "message": "#17850 exclude host type in test", "committedDate": "2020-04-28T18:18:08Z", "type": "commit"}, {"oid": "6c8c769a7dd0b11a9634600d4f4cc7781de25915", "url": "https://github.com/dotCMS/core/commit/6c8c769a7dd0b11a9634600d4f4cc7781de25915", "message": "#17850 fix test clean-up", "committedDate": "2020-04-28T22:22:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MjE4OQ==", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r416962189", "bodyText": "Issue found: Local variable 'eeTypes' could be declared final", "author": "dev-dotcms", "createdAt": "2020-04-28T22:28:57Z", "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -644,40 +644,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator", "originalCommit": "6c8c769a7dd0b11a9634600d4f4cc7781de25915", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MjE5Nw==", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r416962197", "bodyText": "Issue found: JUnit tests should include assert() or fail()", "author": "dev-dotcms", "createdAt": "2020-04-28T22:28:58Z", "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -644,40 +644,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{", "originalCommit": "6c8c769a7dd0b11a9634600d4f4cc7781de25915", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MjIwMw==", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r416962203", "bodyText": "Issue found: Local variable 'eeTypesList' could be declared final", "author": "dev-dotcms", "createdAt": "2020-04-28T22:28:59Z", "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -644,40 +644,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator\n                 .getContentTypeAPI(APILocator.systemUser()).findAll().stream()\n                 .filter((type)->type instanceof EnterpriseType).collect(Collectors.toList());\n \n-        // returns a List of Tuple (typeName, baseType)\n-        return eeTypes.stream().map((type)->\n-                new Tuple2<>(\"my\"+type.variable(), type.baseType())\n-        ).collect(Collectors.toList());\n-    }\n-\n-    @Test\n-    @UseDataProvider(\"dataProviderEEContentTypes\")\n-    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema(\n-            final Tuple2<String, BaseContentType> testCase) throws Exception{\n-        ContentType customType = null;\n-\n-        try {\n-            // create custom persona type. 1=typeName, 2=BaseType\n-            customType = createType(testCase._1,\n-                    testCase._2);\n-\n-            runNoLicense(() -> {\n-                final GraphQLSchema schema = APILocator.getGraphqlAPI().getSchema();\n-                assertNull(schema.getType(testCase._1));\n-            });\n-        } finally {\n-            if(customType!=null) {\n-                APILocator.getContentTypeAPI(APILocator.systemUser()).delete(customType);\n+        List<Tuple2<String, BaseContentType>> eeTypesList = eeTypes.stream().map((type)->", "originalCommit": "6c8c769a7dd0b11a9634600d4f4cc7781de25915", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2MjIwOQ==", "url": "https://github.com/dotCMS/core/pull/17973#discussion_r416962209", "bodyText": "Issue found: Local variable 'testCase' could be declared final", "author": "dev-dotcms", "createdAt": "2020-04-28T22:29:00Z", "path": "dotCMS/src/integration-test/java/com/dotcms/graphql/business/GraphqlAPITest.java", "diffHunk": "@@ -644,40 +644,33 @@ public void testGetSchema_BothSidedRelationshipFields(final RELATIONSHIP_CARDINA\n \n     }\n \n-    @DataProvider\n-    public static List<Object> dataProviderEEContentTypes() throws Exception {\n-        // data provider needs stuff to get initialized because of API access\n-        IntegrationTestInitService.getInstance().init();\n+    @Test\n+    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema() throws Exception{\n \n         // filter only Enterprise content types\n-        final List<ContentType> eeTypes = APILocator\n+        List<ContentType> eeTypes = APILocator\n                 .getContentTypeAPI(APILocator.systemUser()).findAll().stream()\n                 .filter((type)->type instanceof EnterpriseType).collect(Collectors.toList());\n \n-        // returns a List of Tuple (typeName, baseType)\n-        return eeTypes.stream().map((type)->\n-                new Tuple2<>(\"my\"+type.variable(), type.baseType())\n-        ).collect(Collectors.toList());\n-    }\n-\n-    @Test\n-    @UseDataProvider(\"dataProviderEEContentTypes\")\n-    public void testGetSchema_GivenNoEELicense_EnterpriseTypesShouldNotBeAvailableInSchema(\n-            final Tuple2<String, BaseContentType> testCase) throws Exception{\n-        ContentType customType = null;\n-\n-        try {\n-            // create custom persona type. 1=typeName, 2=BaseType\n-            customType = createType(testCase._1,\n-                    testCase._2);\n-\n-            runNoLicense(() -> {\n-                final GraphQLSchema schema = APILocator.getGraphqlAPI().getSchema();\n-                assertNull(schema.getType(testCase._1));\n-            });\n-        } finally {\n-            if(customType!=null) {\n-                APILocator.getContentTypeAPI(APILocator.systemUser()).delete(customType);\n+        List<Tuple2<String, BaseContentType>> eeTypesList = eeTypes.stream().map((type)->\n+                        new Tuple2<>(\"my\"+type.variable(), type.baseType())).collect(Collectors.toList());\n+\n+        for (Tuple2<String, BaseContentType> testCase : eeTypesList) {", "originalCommit": "6c8c769a7dd0b11a9634600d4f4cc7781de25915", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}