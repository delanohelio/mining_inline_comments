{"pr_number": 18321, "pr_title": "Issue 18318 limit access to app", "pr_createdAt": "2020-04-17T17:30:10Z", "pr_url": "https://github.com/dotCMS/core/pull/18321", "timeline": [{"oid": "1c58c679a2d85455ddc2f6707abf266fed629efc", "url": "https://github.com/dotCMS/core/commit/1c58c679a2d85455ddc2f6707abf266fed629efc", "message": "#18318 removing ServletContext from Velocity", "committedDate": "2020-04-17T15:18:31Z", "type": "commit"}, {"oid": "243c639c1ec33f2f795fa17dfc872b4d0b580dd0", "url": "https://github.com/dotCMS/core/commit/243c639c1ec33f2f795fa17dfc872b4d0b580dd0", "message": "#18318 no application or server context", "committedDate": "2020-04-17T16:26:36Z", "type": "commit"}, {"oid": "45f07f016dac37a72392abf8f58ba251a2e969f2", "url": "https://github.com/dotCMS/core/commit/45f07f016dac37a72392abf8f58ba251a2e969f2", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-18318-limit-access-to-app", "committedDate": "2020-04-21T16:05:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDEzNA==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334134", "bodyText": "Issue found: Local variable 'context' could be declared final", "author": "dev-dotcms", "createdAt": "2020-04-21T17:05:49Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/VelocityUtilTest.java", "diffHunk": "@@ -157,5 +158,36 @@ public void test_unable_to_modify_userid_in_velocity_session() throws Exception{\n         assertTrue(request.getSession().getAttribute(WebKeys.USER_ID) ==null);\n     }\n     \n+    \n+    /**\n+     * https://github.com/dotCMS/core/issues/18318\n+     * \n+     * The servlet context is too dangerous to expose to velocity and allows for arbitrary \n+     * code execution\n+     * \n+     * @throws Exception\n+     */\n+    \n+    @Test\n+    public void test_servlet_context_is_not_available_in_velocity() throws Exception {\n+\n+        final HttpServletRequest request = new MockSessionRequest(\n+                        new MockAttributeRequest(new MockHttpRequest(\"localhost\", \"/\").request()).request()).request();\n+\n+        final HttpServletResponse response = new MockHttpResponse().response();\n+\n+\n+        ChainedContext context = (ChainedContext) VelocityUtil.getWebContext(request, response);", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDE1Mg==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334152", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-04-21T17:05:50Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/VelocityUtilTest.java", "diffHunk": "@@ -157,5 +158,36 @@ public void test_unable_to_modify_userid_in_velocity_session() throws Exception{\n         assertTrue(request.getSession().getAttribute(WebKeys.USER_ID) ==null);\n     }\n     \n+    \n+    /**\n+     * https://github.com/dotCMS/core/issues/18318\n+     * \n+     * The servlet context is too dangerous to expose to velocity and allows for arbitrary \n+     * code execution\n+     * \n+     * @throws Exception\n+     */\n+    \n+    @Test\n+    public void test_servlet_context_is_not_available_in_velocity() throws Exception {\n+\n+        final HttpServletRequest request = new MockSessionRequest(\n+                        new MockAttributeRequest(new MockHttpRequest(\"localhost\", \"/\").request()).request()).request();\n+\n+        final HttpServletResponse response = new MockHttpResponse().response();\n+\n+\n+        ChainedContext context = (ChainedContext) VelocityUtil.getWebContext(request, response);\n+\n+        assert (context.getServletContext() == null);\n+        assert (context.get(\"application\") == null);\n+        assert (context.getRequest().getServletContext() == null);", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDE2MQ==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334161", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-04-21T17:05:51Z", "path": "dotCMS/src/main/java/org/apache/velocity/tools/view/context/ChainedContext.java", "diffHunk": "@@ -87,31 +86,34 @@ public ChainedContext(Context ctx,\n                           HttpServletResponse response,\r\n                           ServletContext application)\r\n     {\r\n-        this(ctx, null, request, response, application);\r\n+        this(ctx, null, request, response);\r\n     }\r\n \r\n \r\n     public ChainedContext(VelocityEngine velocity,\r\n                           HttpServletRequest request,\r\n-                          HttpServletResponse response,\r\n-                          ServletContext application)\r\n+                          HttpServletResponse response)\r\n     {\r\n-        this(null, velocity, request, response, application);\r\n+        this(null, velocity, request, response );\r\n+    }\r\n+    public ChainedContext(VelocityEngine velocity,\r\n+                    HttpServletRequest request,\r\n+                    HttpServletResponse response,ServletContext application)\r\n+    {\r\n+        this(null, velocity, request, response );\r\n     }\r\n-    \r\n     public ChainedContext(Context ctx,\r\n                           VelocityEngine velocity,\r\n                           HttpServletRequest request,\r\n-                          HttpServletResponse response,\r\n-                          ServletContext application)\r\n+                          HttpServletResponse response)\r\n     {\r\n         super(null, ctx);\r\n \r\n         this.velocity = velocity;\r\n-        this.request = request;\r\n+        this.request = (request instanceof VelocityRequestWrapper) ? request : new VelocityRequestWrapper(request);\r", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDE3NA==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334174", "bodyText": "Issue found: Parameter 'response' is not assigned and could be declared final", "author": "dev-dotcms", "createdAt": "2020-04-21T17:05:52Z", "path": "dotCMS/src/main/java/org/apache/velocity/tools/view/context/ChainedContext.java", "diffHunk": "@@ -87,31 +86,34 @@ public ChainedContext(Context ctx,\n                           HttpServletResponse response,\r\n                           ServletContext application)\r\n     {\r\n-        this(ctx, null, request, response, application);\r\n+        this(ctx, null, request, response);\r\n     }\r\n \r\n \r\n     public ChainedContext(VelocityEngine velocity,\r\n                           HttpServletRequest request,\r\n-                          HttpServletResponse response,\r\n-                          ServletContext application)\r\n+                          HttpServletResponse response)\r\n     {\r\n-        this(null, velocity, request, response, application);\r\n+        this(null, velocity, request, response );\r\n+    }\r\n+    public ChainedContext(VelocityEngine velocity,\r\n+                    HttpServletRequest request,\r\n+                    HttpServletResponse response,ServletContext application)\r", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDE4MQ==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334181", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-04-21T17:05:53Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/VelocityUtilTest.java", "diffHunk": "@@ -157,5 +158,36 @@ public void test_unable_to_modify_userid_in_velocity_session() throws Exception{\n         assertTrue(request.getSession().getAttribute(WebKeys.USER_ID) ==null);\n     }\n     \n+    \n+    /**\n+     * https://github.com/dotCMS/core/issues/18318\n+     * \n+     * The servlet context is too dangerous to expose to velocity and allows for arbitrary \n+     * code execution\n+     * \n+     * @throws Exception\n+     */\n+    \n+    @Test\n+    public void test_servlet_context_is_not_available_in_velocity() throws Exception {\n+\n+        final HttpServletRequest request = new MockSessionRequest(\n+                        new MockAttributeRequest(new MockHttpRequest(\"localhost\", \"/\").request()).request()).request();\n+\n+        final HttpServletResponse response = new MockHttpResponse().response();\n+\n+\n+        ChainedContext context = (ChainedContext) VelocityUtil.getWebContext(request, response);\n+\n+        assert (context.getServletContext() == null);\n+        assert (context.get(\"application\") == null);\n+        assert (context.getRequest().getServletContext() == null);\n+        assert (context.getAttribute(\"application\") == null);", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDE5MQ==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334191", "bodyText": "Issue found: Parameter 'obj' is not assigned and could be declared final", "author": "dev-dotcms", "createdAt": "2020-04-21T17:05:54Z", "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/VelocitySessionWrapper.java", "diffHunk": "@@ -112,5 +112,35 @@ public void setMaxInactiveInterval(int arg0) {\n \n     }\n \n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((session == null) ? 0 : session.hashCode());\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDE5Nw==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334197", "bodyText": "Issue found: Local variable 'other' could be declared final", "author": "dev-dotcms", "createdAt": "2020-04-21T17:05:55Z", "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/VelocitySessionWrapper.java", "diffHunk": "@@ -112,5 +112,35 @@ public void setMaxInactiveInterval(int arg0) {\n \n     }\n \n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((session == null) ? 0 : session.hashCode());\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n+            return true;\n+        if (obj == null)\n+            return false;\n+        if (getClass() != obj.getClass())\n+            return false;\n+        VelocitySessionWrapper other = (VelocitySessionWrapper) obj;", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDIxOA==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334218", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-04-21T17:05:56Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/VelocityUtilTest.java", "diffHunk": "@@ -157,5 +158,36 @@ public void test_unable_to_modify_userid_in_velocity_session() throws Exception{\n         assertTrue(request.getSession().getAttribute(WebKeys.USER_ID) ==null);\n     }\n     \n+    \n+    /**\n+     * https://github.com/dotCMS/core/issues/18318\n+     * \n+     * The servlet context is too dangerous to expose to velocity and allows for arbitrary \n+     * code execution\n+     * \n+     * @throws Exception\n+     */\n+    \n+    @Test\n+    public void test_servlet_context_is_not_available_in_velocity() throws Exception {\n+\n+        final HttpServletRequest request = new MockSessionRequest(\n+                        new MockAttributeRequest(new MockHttpRequest(\"localhost\", \"/\").request()).request()).request();\n+\n+        final HttpServletResponse response = new MockHttpResponse().response();\n+\n+\n+        ChainedContext context = (ChainedContext) VelocityUtil.getWebContext(request, response);\n+\n+        assert (context.getServletContext() == null);", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDI0Mg==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334242", "bodyText": "Issue found: This statement should have braces", "author": "dev-dotcms", "createdAt": "2020-04-21T17:05:57Z", "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/VelocitySessionWrapper.java", "diffHunk": "@@ -112,5 +112,35 @@ public void setMaxInactiveInterval(int arg0) {\n \n     }\n \n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((session == null) ? 0 : session.hashCode());\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n+            return true;\n+        if (obj == null)\n+            return false;\n+        if (getClass() != obj.getClass())\n+            return false;\n+        VelocitySessionWrapper other = (VelocitySessionWrapper) obj;\n+        if (session == null) {\n+            if (other.session != null)\n+                return false;\n+        } else if (!session.equals(other.session))\n+            return false;", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDI1MA==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334250", "bodyText": "Issue found: Parameter 'response' is not assigned and could be declared final", "author": "dev-dotcms", "createdAt": "2020-04-21T17:05:58Z", "path": "dotCMS/src/main/java/org/apache/velocity/tools/view/context/ChainedContext.java", "diffHunk": "@@ -87,31 +86,34 @@ public ChainedContext(Context ctx,\n                           HttpServletResponse response,\r\n                           ServletContext application)\r\n     {\r\n-        this(ctx, null, request, response, application);\r\n+        this(ctx, null, request, response);\r\n     }\r\n \r\n \r\n     public ChainedContext(VelocityEngine velocity,\r\n                           HttpServletRequest request,\r\n-                          HttpServletResponse response,\r\n-                          ServletContext application)\r\n+                          HttpServletResponse response)\r\n     {\r\n-        this(null, velocity, request, response, application);\r\n+        this(null, velocity, request, response );\r\n+    }\r\n+    public ChainedContext(VelocityEngine velocity,\r\n+                    HttpServletRequest request,\r\n+                    HttpServletResponse response,ServletContext application)\r\n+    {\r\n+        this(null, velocity, request, response );\r\n     }\r\n-    \r\n     public ChainedContext(Context ctx,\r\n                           VelocityEngine velocity,\r\n                           HttpServletRequest request,\r\n-                          HttpServletResponse response,\r\n-                          ServletContext application)\r\n+                          HttpServletResponse response)\r", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDI2OA==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334268", "bodyText": "Issue found: This statement should have braces", "author": "dev-dotcms", "createdAt": "2020-04-21T17:05:59Z", "path": "dotCMS/src/main/java/com/dotcms/rendering/velocity/viewtools/VelocitySessionWrapper.java", "diffHunk": "@@ -112,5 +112,35 @@ public void setMaxInactiveInterval(int arg0) {\n \n     }\n \n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((session == null) ? 0 : session.hashCode());\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n+            return true;", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDI4OA==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334288", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-04-21T17:06:00Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/VelocityUtilTest.java", "diffHunk": "@@ -157,5 +158,36 @@ public void test_unable_to_modify_userid_in_velocity_session() throws Exception{\n         assertTrue(request.getSession().getAttribute(WebKeys.USER_ID) ==null);\n     }\n     \n+    \n+    /**\n+     * https://github.com/dotCMS/core/issues/18318\n+     * \n+     * The servlet context is too dangerous to expose to velocity and allows for arbitrary \n+     * code execution\n+     * \n+     * @throws Exception\n+     */\n+    \n+    @Test\n+    public void test_servlet_context_is_not_available_in_velocity() throws Exception {\n+\n+        final HttpServletRequest request = new MockSessionRequest(\n+                        new MockAttributeRequest(new MockHttpRequest(\"localhost\", \"/\").request()).request()).request();\n+\n+        final HttpServletResponse response = new MockHttpResponse().response();\n+\n+\n+        ChainedContext context = (ChainedContext) VelocityUtil.getWebContext(request, response);\n+\n+        assert (context.getServletContext() == null);\n+        assert (context.get(\"application\") == null);\n+        assert (context.getRequest().getServletContext() == null);\n+        assert (context.getAttribute(\"application\") == null);\n+        assert (context.getVelocityContext().get(\"application\") == null);", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDMwMA==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334300", "bodyText": "Issue found: JUnit tests should include assert() or fail()", "author": "dev-dotcms", "createdAt": "2020-04-21T17:06:01Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/VelocityUtilTest.java", "diffHunk": "@@ -157,5 +158,36 @@ public void test_unable_to_modify_userid_in_velocity_session() throws Exception{\n         assertTrue(request.getSession().getAttribute(WebKeys.USER_ID) ==null);\n     }\n     \n+    \n+    /**\n+     * https://github.com/dotCMS/core/issues/18318\n+     * \n+     * The servlet context is too dangerous to expose to velocity and allows for arbitrary \n+     * code execution\n+     * \n+     * @throws Exception\n+     */\n+    \n+    @Test\n+    public void test_servlet_context_is_not_available_in_velocity() throws Exception {", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDMxMg==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334312", "bodyText": "Issue found: Avoid unused constructor parameters such as 'application'.", "author": "dev-dotcms", "createdAt": "2020-04-21T17:06:02Z", "path": "dotCMS/src/main/java/org/apache/velocity/tools/view/context/ChainedContext.java", "diffHunk": "@@ -87,31 +86,34 @@ public ChainedContext(Context ctx,\n                           HttpServletResponse response,\r\n                           ServletContext application)\r\n     {\r\n-        this(ctx, null, request, response, application);\r\n+        this(ctx, null, request, response);\r\n     }\r\n \r\n \r\n     public ChainedContext(VelocityEngine velocity,\r\n                           HttpServletRequest request,\r\n-                          HttpServletResponse response,\r\n-                          ServletContext application)\r\n+                          HttpServletResponse response)\r\n     {\r\n-        this(null, velocity, request, response, application);\r\n+        this(null, velocity, request, response );\r\n+    }\r\n+    public ChainedContext(VelocityEngine velocity,\r\n+                    HttpServletRequest request,\r\n+                    HttpServletResponse response,ServletContext application)\r", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDMyOQ==", "url": "https://github.com/dotCMS/core/pull/18321#discussion_r412334329", "bodyText": "Issue found: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-04-21T17:06:02Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rendering/velocity/VelocityUtilTest.java", "diffHunk": "@@ -157,5 +158,36 @@ public void test_unable_to_modify_userid_in_velocity_session() throws Exception{\n         assertTrue(request.getSession().getAttribute(WebKeys.USER_ID) ==null);\n     }\n     \n+    \n+    /**\n+     * https://github.com/dotCMS/core/issues/18318\n+     * \n+     * The servlet context is too dangerous to expose to velocity and allows for arbitrary \n+     * code execution\n+     * \n+     * @throws Exception\n+     */\n+    \n+    @Test\n+    public void test_servlet_context_is_not_available_in_velocity() throws Exception {\n+\n+        final HttpServletRequest request = new MockSessionRequest(\n+                        new MockAttributeRequest(new MockHttpRequest(\"localhost\", \"/\").request()).request()).request();\n+\n+        final HttpServletResponse response = new MockHttpResponse().response();\n+\n+\n+        ChainedContext context = (ChainedContext) VelocityUtil.getWebContext(request, response);\n+\n+        assert (context.getServletContext() == null);\n+        assert (context.get(\"application\") == null);", "originalCommit": "45f07f016dac37a72392abf8f58ba251a2e969f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}