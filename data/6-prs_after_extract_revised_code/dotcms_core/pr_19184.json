{"pr_number": 19184, "pr_title": "#19136 layout complete", "pr_createdAt": "2020-08-27T19:58:15Z", "pr_url": "https://github.com/dotCMS/core/pull/19184", "timeline": [{"oid": "4acfbc68971ffa14f70f1090456c185e167f3c18", "url": "https://github.com/dotCMS/core/commit/4acfbc68971ffa14f70f1090456c185e167f3c18", "message": "#19136 layout almost complete", "committedDate": "2020-08-27T19:57:52Z", "type": "commit"}, {"oid": "74e1fe3797187c1b596f2e291ec5e78409cec516", "url": "https://github.com/dotCMS/core/commit/74e1fe3797187c1b596f2e291ec5e78409cec516", "message": "#19136 finish layout field. Postman tests", "committedDate": "2020-08-27T22:50:52Z", "type": "commit"}, {"oid": "d0a0a08b24af7857368bbe6a755eee38ad513a0a", "url": "https://github.com/dotCMS/core/commit/d0a0a08b24af7857368bbe6a755eee38ad513a0a", "message": "#19136 codacy feedback", "committedDate": "2020-08-27T22:59:39Z", "type": "commit"}, {"oid": "3cfc44037890fced640cb8f28f0af0b2e466725b", "url": "https://github.com/dotCMS/core/commit/3cfc44037890fced640cb8f28f0af0b2e466725b", "message": "#19136 fix javadoc", "committedDate": "2020-08-28T16:39:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDY1Ng==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420656", "bodyText": "Codacy found an issue: The String literal \"ContainerUUID\" appears 4 times in this file; the first occurrence is on line 287", "author": "dev-dotcms", "createdAt": "2020-08-28T16:46:51Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayout>(\"width\")));\n+        layoutFields.put(\"title\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<TemplateLayout>(\"title\")));\n+        layoutFields.put(\"header\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"header\")));\n+        layoutFields.put(\"footer\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"footer\")));\n+        layoutFields.put(\"body\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Body\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"body\")));\n+        layoutFields.put(\"sidebar\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Sidebar\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"sidebar\")));\n+\n+        typeMap.put(\"Layout\", TypeUtil.createObjectType(\"Layout\",\n+                layoutFields));\n+\n+        // Sidebar type\n+        final Map<String, TypeFetcher> sidebarFields = new HashMap<>();\n+        sidebarFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<Sidebar>(\"widthPercent\")));\n+        sidebarFields.put(\"width\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<Sidebar>(\"width\")));\n+        sidebarFields.put(\"location\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<Sidebar>(\"location\")));\n+        sidebarFields.put(\"preview\", new TypeFetcher((GraphQLBoolean),\n+                new PropertyDataFetcher<Sidebar>(\"preview\")));\n+        sidebarFields.put(\"containers\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"ContainerUUID\")),", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDY1OA==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420658", "bodyText": "Codacy found an issue: The String literal \"widthPercent\" appears 4 times in this file; the first occurrence is on line 279", "author": "dev-dotcms", "createdAt": "2020-08-28T16:46:52Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayout>(\"width\")));\n+        layoutFields.put(\"title\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<TemplateLayout>(\"title\")));\n+        layoutFields.put(\"header\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"header\")));\n+        layoutFields.put(\"footer\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"footer\")));\n+        layoutFields.put(\"body\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Body\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"body\")));\n+        layoutFields.put(\"sidebar\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Sidebar\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"sidebar\")));\n+\n+        typeMap.put(\"Layout\", TypeUtil.createObjectType(\"Layout\",\n+                layoutFields));\n+\n+        // Sidebar type\n+        final Map<String, TypeFetcher> sidebarFields = new HashMap<>();\n+        sidebarFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDY2OQ==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420669", "bodyText": "Codacy found an issue: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-08-28T16:46:53Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayout>(\"width\")));\n+        layoutFields.put(\"title\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<TemplateLayout>(\"title\")));\n+        layoutFields.put(\"header\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"header\")));\n+        layoutFields.put(\"footer\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"footer\")));\n+        layoutFields.put(\"body\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Body\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"body\")));\n+        layoutFields.put(\"sidebar\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Sidebar\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"sidebar\")));\n+\n+        typeMap.put(\"Layout\", TypeUtil.createObjectType(\"Layout\",\n+                layoutFields));\n+\n+        // Sidebar type\n+        final Map<String, TypeFetcher> sidebarFields = new HashMap<>();\n+        sidebarFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<Sidebar>(\"widthPercent\")));\n+        sidebarFields.put(\"width\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<Sidebar>(\"width\")));\n+        sidebarFields.put(\"location\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<Sidebar>(\"location\")));\n+        sidebarFields.put(\"preview\", new TypeFetcher((GraphQLBoolean),\n+                new PropertyDataFetcher<Sidebar>(\"preview\")));\n+        sidebarFields.put(\"containers\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"ContainerUUID\")),\n+                new PropertyDataFetcher<ContainerHolder>(\"containers\")));\n+\n+        typeMap.put(\"Sidebar\", TypeUtil.createObjectType(\"Sidebar\",\n+                sidebarFields));\n+\n+        // Body type\n+        final Map<String, TypeFetcher> bodyFields = new HashMap<>();\n+        bodyFields.put(\"rows\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutRow\")),\n+                new PropertyDataFetcher<TemplateLayout>(\"rows\")));\n+\n+        typeMap.put(\"Body\", TypeUtil.createObjectType(\"Body\",\n+                bodyFields));\n+\n+        // LayoutRow type\n+        final Map<String, TypeFetcher> rowFields = new HashMap<>();\n+        rowFields.put(\"columns\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutColumn\")),\n+                new PropertyDataFetcher<TemplateLayoutRow>(\"columns\")));\n+        rowFields.put(\"styleClass\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<TemplateLayoutRow>(\"styleClass\")));\n+\n+        typeMap.put(\"LayoutRow\", TypeUtil.createObjectType(\"LayoutRow\",\n+                rowFields));\n+\n+        // LayoutColumn type\n+        final Map<String, TypeFetcher> columnFields = new HashMap<>();\n+        columnFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"widthPercent\")));\n+        columnFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"width\")));\n+        columnFields.put(\"leftOffset\", new TypeFetcher((GraphQLLong),\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"leftOffset\")));\n+        columnFields.put(\"left\", new TypeFetcher((GraphQLLong),\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"left\")));\n+        columnFields.put(\"styleClass\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"styleClass\")));\n+        columnFields.put(\"preview\", new TypeFetcher((GraphQLBoolean),", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDY4Mw==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420683", "bodyText": "Codacy found an issue: The String literal \"width\" appears 4 times in this file; the first occurrence is on line 250", "author": "dev-dotcms", "createdAt": "2020-08-28T16:46:54Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDY5NQ==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420695", "bodyText": "Codacy found an issue: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-08-28T16:46:55Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayout>(\"width\")));\n+        layoutFields.put(\"title\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<TemplateLayout>(\"title\")));\n+        layoutFields.put(\"header\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"header\")));\n+        layoutFields.put(\"footer\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"footer\")));\n+        layoutFields.put(\"body\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Body\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"body\")));\n+        layoutFields.put(\"sidebar\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Sidebar\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"sidebar\")));\n+\n+        typeMap.put(\"Layout\", TypeUtil.createObjectType(\"Layout\",\n+                layoutFields));\n+\n+        // Sidebar type\n+        final Map<String, TypeFetcher> sidebarFields = new HashMap<>();\n+        sidebarFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<Sidebar>(\"widthPercent\")));\n+        sidebarFields.put(\"width\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<Sidebar>(\"width\")));\n+        sidebarFields.put(\"location\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<Sidebar>(\"location\")));\n+        sidebarFields.put(\"preview\", new TypeFetcher((GraphQLBoolean),\n+                new PropertyDataFetcher<Sidebar>(\"preview\")));\n+        sidebarFields.put(\"containers\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"ContainerUUID\")),\n+                new PropertyDataFetcher<ContainerHolder>(\"containers\")));\n+\n+        typeMap.put(\"Sidebar\", TypeUtil.createObjectType(\"Sidebar\",\n+                sidebarFields));\n+\n+        // Body type\n+        final Map<String, TypeFetcher> bodyFields = new HashMap<>();\n+        bodyFields.put(\"rows\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutRow\")),\n+                new PropertyDataFetcher<TemplateLayout>(\"rows\")));\n+\n+        typeMap.put(\"Body\", TypeUtil.createObjectType(\"Body\",\n+                bodyFields));\n+\n+        // LayoutRow type\n+        final Map<String, TypeFetcher> rowFields = new HashMap<>();\n+        rowFields.put(\"columns\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutColumn\")),\n+                new PropertyDataFetcher<TemplateLayoutRow>(\"columns\")));\n+        rowFields.put(\"styleClass\", new TypeFetcher((GraphQLString),", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDcwMQ==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420701", "bodyText": "Codacy found an issue: The String literal \"styleClass\" appears 4 times in this file; the first occurrence is on line 274", "author": "dev-dotcms", "createdAt": "2020-08-28T16:46:56Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayout>(\"width\")));\n+        layoutFields.put(\"title\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<TemplateLayout>(\"title\")));\n+        layoutFields.put(\"header\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"header\")));\n+        layoutFields.put(\"footer\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"footer\")));\n+        layoutFields.put(\"body\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Body\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"body\")));\n+        layoutFields.put(\"sidebar\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Sidebar\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"sidebar\")));\n+\n+        typeMap.put(\"Layout\", TypeUtil.createObjectType(\"Layout\",\n+                layoutFields));\n+\n+        // Sidebar type\n+        final Map<String, TypeFetcher> sidebarFields = new HashMap<>();\n+        sidebarFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<Sidebar>(\"widthPercent\")));\n+        sidebarFields.put(\"width\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<Sidebar>(\"width\")));\n+        sidebarFields.put(\"location\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<Sidebar>(\"location\")));\n+        sidebarFields.put(\"preview\", new TypeFetcher((GraphQLBoolean),\n+                new PropertyDataFetcher<Sidebar>(\"preview\")));\n+        sidebarFields.put(\"containers\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"ContainerUUID\")),\n+                new PropertyDataFetcher<ContainerHolder>(\"containers\")));\n+\n+        typeMap.put(\"Sidebar\", TypeUtil.createObjectType(\"Sidebar\",\n+                sidebarFields));\n+\n+        // Body type\n+        final Map<String, TypeFetcher> bodyFields = new HashMap<>();\n+        bodyFields.put(\"rows\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutRow\")),\n+                new PropertyDataFetcher<TemplateLayout>(\"rows\")));\n+\n+        typeMap.put(\"Body\", TypeUtil.createObjectType(\"Body\",\n+                bodyFields));\n+\n+        // LayoutRow type\n+        final Map<String, TypeFetcher> rowFields = new HashMap<>();\n+        rowFields.put(\"columns\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutColumn\")),\n+                new PropertyDataFetcher<TemplateLayoutRow>(\"columns\")));\n+        rowFields.put(\"styleClass\", new TypeFetcher((GraphQLString),", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDcxMA==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420710", "bodyText": "Codacy found an issue: The String literal \"preview\" appears 4 times in this file; the first occurrence is on line 285", "author": "dev-dotcms", "createdAt": "2020-08-28T16:46:57Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayout>(\"width\")));\n+        layoutFields.put(\"title\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<TemplateLayout>(\"title\")));\n+        layoutFields.put(\"header\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"header\")));\n+        layoutFields.put(\"footer\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"footer\")));\n+        layoutFields.put(\"body\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Body\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"body\")));\n+        layoutFields.put(\"sidebar\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Sidebar\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"sidebar\")));\n+\n+        typeMap.put(\"Layout\", TypeUtil.createObjectType(\"Layout\",\n+                layoutFields));\n+\n+        // Sidebar type\n+        final Map<String, TypeFetcher> sidebarFields = new HashMap<>();\n+        sidebarFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<Sidebar>(\"widthPercent\")));\n+        sidebarFields.put(\"width\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<Sidebar>(\"width\")));\n+        sidebarFields.put(\"location\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<Sidebar>(\"location\")));\n+        sidebarFields.put(\"preview\", new TypeFetcher((GraphQLBoolean),", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDcxNw==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420717", "bodyText": "Codacy found an issue: Avoid declaring a variable if it is unreferenced before a possible exit point.", "author": "dev-dotcms", "createdAt": "2020-08-28T16:46:58Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/LayoutDataFetcher.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.viewtools.DotTemplateTool;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.Map;\n+\n+/**\n+ * This DataFetcher returns the {@link TemplateLayout} associated to the requested {@link HTMLPageAsset}.\n+ */\n+public class LayoutDataFetcher implements DataFetcher<TemplateLayout> {\n+    @Override\n+    public TemplateLayout get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final DotGraphQLContext context = environment.getContext();\n+            final User user = context.getUser();", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDcyNA==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420724", "bodyText": "Codacy found an issue: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-08-28T16:46:59Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayout>(\"width\")));\n+        layoutFields.put(\"title\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<TemplateLayout>(\"title\")));\n+        layoutFields.put(\"header\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"header\")));\n+        layoutFields.put(\"footer\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"footer\")));\n+        layoutFields.put(\"body\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Body\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"body\")));\n+        layoutFields.put(\"sidebar\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Sidebar\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"sidebar\")));\n+\n+        typeMap.put(\"Layout\", TypeUtil.createObjectType(\"Layout\",\n+                layoutFields));\n+\n+        // Sidebar type\n+        final Map<String, TypeFetcher> sidebarFields = new HashMap<>();\n+        sidebarFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<Sidebar>(\"widthPercent\")));\n+        sidebarFields.put(\"width\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<Sidebar>(\"width\")));\n+        sidebarFields.put(\"location\", new TypeFetcher((GraphQLString),", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDczNQ==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420735", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "author": "dev-dotcms", "createdAt": "2020-08-28T16:47:00Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/LayoutDataFetcher.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.viewtools.DotTemplateTool;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.Map;\n+\n+/**\n+ * This DataFetcher returns the {@link TemplateLayout} associated to the requested {@link HTMLPageAsset}.\n+ */\n+public class LayoutDataFetcher implements DataFetcher<TemplateLayout> {\n+    @Override\n+    public TemplateLayout get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final DotGraphQLContext context = environment.getContext();\n+            final User user = context.getUser();\n+            final Contentlet page = environment.getSource();\n+            final String pageModeAsString = (String) context.getParam(\"pageMode\");\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+\n+            final HTMLPageAsset pageAsset = APILocator.getHTMLPageAssetAPI()\n+                    .fromContentlet(page);\n+\n+            final Template template = APILocator.getHTMLPageAssetAPI()\n+                    .getTemplate(pageAsset, !mode.showLive);\n+            return template != null && template.isDrawed()\n+                    ? DotTemplateTool.themeLayout(template.getInode()) : null;\n+        } catch (Exception e) {", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDc0Ng==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420746", "bodyText": "Codacy found an issue: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-08-28T16:47:01Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayout>(\"width\")));\n+        layoutFields.put(\"title\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<TemplateLayout>(\"title\")));\n+        layoutFields.put(\"header\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"header\")));\n+        layoutFields.put(\"footer\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"footer\")));\n+        layoutFields.put(\"body\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Body\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"body\")));\n+        layoutFields.put(\"sidebar\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Sidebar\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"sidebar\")));\n+\n+        typeMap.put(\"Layout\", TypeUtil.createObjectType(\"Layout\",\n+                layoutFields));\n+\n+        // Sidebar type\n+        final Map<String, TypeFetcher> sidebarFields = new HashMap<>();\n+        sidebarFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<Sidebar>(\"widthPercent\")));\n+        sidebarFields.put(\"width\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<Sidebar>(\"width\")));\n+        sidebarFields.put(\"location\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<Sidebar>(\"location\")));\n+        sidebarFields.put(\"preview\", new TypeFetcher((GraphQLBoolean),", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDc1Mw==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420753", "bodyText": "Codacy found an issue: Avoid unused imports such as 'java.util.Map'", "author": "dev-dotcms", "createdAt": "2020-08-28T16:47:03Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/LayoutDataFetcher.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.viewtools.DotTemplateTool;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.Map;", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDc2Mw==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420763", "bodyText": "Codacy found an issue: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-08-28T16:47:04Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayout>(\"width\")));\n+        layoutFields.put(\"title\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<TemplateLayout>(\"title\")));\n+        layoutFields.put(\"header\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"header\")));\n+        layoutFields.put(\"footer\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"footer\")));\n+        layoutFields.put(\"body\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Body\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"body\")));\n+        layoutFields.put(\"sidebar\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Sidebar\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"sidebar\")));\n+\n+        typeMap.put(\"Layout\", TypeUtil.createObjectType(\"Layout\",\n+                layoutFields));\n+\n+        // Sidebar type\n+        final Map<String, TypeFetcher> sidebarFields = new HashMap<>();\n+        sidebarFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<Sidebar>(\"widthPercent\")));\n+        sidebarFields.put(\"width\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<Sidebar>(\"width\")));\n+        sidebarFields.put(\"location\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<Sidebar>(\"location\")));\n+        sidebarFields.put(\"preview\", new TypeFetcher((GraphQLBoolean),\n+                new PropertyDataFetcher<Sidebar>(\"preview\")));\n+        sidebarFields.put(\"containers\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"ContainerUUID\")),\n+                new PropertyDataFetcher<ContainerHolder>(\"containers\")));\n+\n+        typeMap.put(\"Sidebar\", TypeUtil.createObjectType(\"Sidebar\",\n+                sidebarFields));\n+\n+        // Body type\n+        final Map<String, TypeFetcher> bodyFields = new HashMap<>();\n+        bodyFields.put(\"rows\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutRow\")),\n+                new PropertyDataFetcher<TemplateLayout>(\"rows\")));\n+\n+        typeMap.put(\"Body\", TypeUtil.createObjectType(\"Body\",\n+                bodyFields));\n+\n+        // LayoutRow type\n+        final Map<String, TypeFetcher> rowFields = new HashMap<>();\n+        rowFields.put(\"columns\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutColumn\")),\n+                new PropertyDataFetcher<TemplateLayoutRow>(\"columns\")));\n+        rowFields.put(\"styleClass\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<TemplateLayoutRow>(\"styleClass\")));\n+\n+        typeMap.put(\"LayoutRow\", TypeUtil.createObjectType(\"LayoutRow\",\n+                rowFields));\n+\n+        // LayoutColumn type\n+        final Map<String, TypeFetcher> columnFields = new HashMap<>();\n+        columnFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"widthPercent\")));\n+        columnFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"width\")));\n+        columnFields.put(\"leftOffset\", new TypeFetcher((GraphQLLong),\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"leftOffset\")));\n+        columnFields.put(\"left\", new TypeFetcher((GraphQLLong),", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDc3Mw==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420773", "bodyText": "Codacy found an issue: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-08-28T16:47:05Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayout>(\"width\")));\n+        layoutFields.put(\"title\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<TemplateLayout>(\"title\")));\n+        layoutFields.put(\"header\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"header\")));\n+        layoutFields.put(\"footer\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"footer\")));\n+        layoutFields.put(\"body\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Body\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"body\")));\n+        layoutFields.put(\"sidebar\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Sidebar\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"sidebar\")));\n+\n+        typeMap.put(\"Layout\", TypeUtil.createObjectType(\"Layout\",\n+                layoutFields));\n+\n+        // Sidebar type\n+        final Map<String, TypeFetcher> sidebarFields = new HashMap<>();\n+        sidebarFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<Sidebar>(\"widthPercent\")));\n+        sidebarFields.put(\"width\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<Sidebar>(\"width\")));\n+        sidebarFields.put(\"location\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<Sidebar>(\"location\")));\n+        sidebarFields.put(\"preview\", new TypeFetcher((GraphQLBoolean),\n+                new PropertyDataFetcher<Sidebar>(\"preview\")));\n+        sidebarFields.put(\"containers\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"ContainerUUID\")),\n+                new PropertyDataFetcher<ContainerHolder>(\"containers\")));\n+\n+        typeMap.put(\"Sidebar\", TypeUtil.createObjectType(\"Sidebar\",\n+                sidebarFields));\n+\n+        // Body type\n+        final Map<String, TypeFetcher> bodyFields = new HashMap<>();\n+        bodyFields.put(\"rows\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutRow\")),\n+                new PropertyDataFetcher<TemplateLayout>(\"rows\")));\n+\n+        typeMap.put(\"Body\", TypeUtil.createObjectType(\"Body\",\n+                bodyFields));\n+\n+        // LayoutRow type\n+        final Map<String, TypeFetcher> rowFields = new HashMap<>();\n+        rowFields.put(\"columns\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutColumn\")),\n+                new PropertyDataFetcher<TemplateLayoutRow>(\"columns\")));\n+        rowFields.put(\"styleClass\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<TemplateLayoutRow>(\"styleClass\")));\n+\n+        typeMap.put(\"LayoutRow\", TypeUtil.createObjectType(\"LayoutRow\",\n+                rowFields));\n+\n+        // LayoutColumn type\n+        final Map<String, TypeFetcher> columnFields = new HashMap<>();\n+        columnFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"widthPercent\")));\n+        columnFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"width\")));\n+        columnFields.put(\"leftOffset\", new TypeFetcher((GraphQLLong),", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDc4MQ==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420781", "bodyText": "Codacy found an issue: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-08-28T16:47:06Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -237,7 +256,87 @@\n         typeMap.put(\"Geolocation\", TypeUtil.createObjectType(\"Geolocation\",\n                 geoFields));\n \n+        // Layout type\n+        final Map<String, TypeFetcher> layoutFields = new HashMap<>();\n+        layoutFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayout>(\"width\")));\n+        layoutFields.put(\"title\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<TemplateLayout>(\"title\")));\n+        layoutFields.put(\"header\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"header\")));\n+        layoutFields.put(\"footer\", new TypeFetcher(GraphQLBoolean,\n+                new PropertyDataFetcher<TemplateLayout>(\"footer\")));\n+        layoutFields.put(\"body\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Body\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"body\")));\n+        layoutFields.put(\"sidebar\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Sidebar\"),\n+                new PropertyDataFetcher<TemplateLayout>(\"sidebar\")));\n+\n+        typeMap.put(\"Layout\", TypeUtil.createObjectType(\"Layout\",\n+                layoutFields));\n+\n+        // Sidebar type\n+        final Map<String, TypeFetcher> sidebarFields = new HashMap<>();\n+        sidebarFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<Sidebar>(\"widthPercent\")));\n+        sidebarFields.put(\"width\", new TypeFetcher(GraphQLString,\n+                new PropertyDataFetcher<Sidebar>(\"width\")));\n+        sidebarFields.put(\"location\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<Sidebar>(\"location\")));\n+        sidebarFields.put(\"preview\", new TypeFetcher((GraphQLBoolean),\n+                new PropertyDataFetcher<Sidebar>(\"preview\")));\n+        sidebarFields.put(\"containers\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"ContainerUUID\")),\n+                new PropertyDataFetcher<ContainerHolder>(\"containers\")));\n+\n+        typeMap.put(\"Sidebar\", TypeUtil.createObjectType(\"Sidebar\",\n+                sidebarFields));\n+\n+        // Body type\n+        final Map<String, TypeFetcher> bodyFields = new HashMap<>();\n+        bodyFields.put(\"rows\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutRow\")),\n+                new PropertyDataFetcher<TemplateLayout>(\"rows\")));\n+\n+        typeMap.put(\"Body\", TypeUtil.createObjectType(\"Body\",\n+                bodyFields));\n+\n+        // LayoutRow type\n+        final Map<String, TypeFetcher> rowFields = new HashMap<>();\n+        rowFields.put(\"columns\", new TypeFetcher(list(GraphQLTypeReference.typeRef(\"LayoutColumn\")),\n+                new PropertyDataFetcher<TemplateLayoutRow>(\"columns\")));\n+        rowFields.put(\"styleClass\", new TypeFetcher((GraphQLString),\n+                new PropertyDataFetcher<TemplateLayoutRow>(\"styleClass\")));\n+\n+        typeMap.put(\"LayoutRow\", TypeUtil.createObjectType(\"LayoutRow\",\n+                rowFields));\n+\n+        // LayoutColumn type\n+        final Map<String, TypeFetcher> columnFields = new HashMap<>();\n+        columnFields.put(\"widthPercent\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"widthPercent\")));\n+        columnFields.put(\"width\", new TypeFetcher(GraphQLLong,\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"width\")));\n+        columnFields.put(\"leftOffset\", new TypeFetcher((GraphQLLong),\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"leftOffset\")));\n+        columnFields.put(\"left\", new TypeFetcher((GraphQLLong),\n+                new PropertyDataFetcher<TemplateLayoutColumn>(\"left\")));\n+        columnFields.put(\"styleClass\", new TypeFetcher((GraphQLString),", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDc4OA==", "url": "https://github.com/dotCMS/core/pull/19184#discussion_r479420788", "bodyText": "Codacy found an issue: Avoid unused local variables such as 'user'.", "author": "dev-dotcms", "createdAt": "2020-08-28T16:47:07Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/LayoutDataFetcher.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotcms.rendering.velocity.viewtools.DotTemplateTool;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.design.bean.TemplateLayout;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.Map;\n+\n+/**\n+ * This DataFetcher returns the {@link TemplateLayout} associated to the requested {@link HTMLPageAsset}.\n+ */\n+public class LayoutDataFetcher implements DataFetcher<TemplateLayout> {\n+    @Override\n+    public TemplateLayout get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final DotGraphQLContext context = environment.getContext();\n+            final User user = context.getUser();", "originalCommit": "3cfc44037890fced640cb8f28f0af0b2e466725b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}