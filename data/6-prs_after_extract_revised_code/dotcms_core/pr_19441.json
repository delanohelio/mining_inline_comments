{"pr_number": 19441, "pr_title": "Issues 19395 19396 19397", "pr_createdAt": "2020-10-13T04:49:00Z", "pr_url": "https://github.com/dotCMS/core/pull/19441", "timeline": [{"oid": "786057449b22b4c795286e20b7a8f1c28835a2e5", "url": "https://github.com/dotCMS/core/commit/786057449b22b4c795286e20b7a8f1c28835a2e5", "message": "#19395 #19396 #19397 Adding new fields to the identifier table", "committedDate": "2020-10-13T04:44:36Z", "type": "commit"}, {"oid": "0c301721f4ed61ff883cccb9f77bd2e2af68baf8", "url": "https://github.com/dotCMS/core/commit/0c301721f4ed61ff883cccb9f77bd2e2af68baf8", "message": "Merge branch 'master' of https://github.com/dotCMS/core into issues-19395-19396-19397", "committedDate": "2020-10-13T04:46:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwMzQyMA==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r504003420", "bodyText": "change this 'i' variable name", "author": "freddyucv", "createdAt": "2020-10-13T14:33:56Z", "path": "dotCMS/src/main/java/com/dotmarketing/beans/transform/IdentifierTransformer.java", "diffHunk": "@@ -42,6 +42,9 @@ private static Identifier transform(Map<String, Object> map)  {\n         i.setParentPath((String) map.get(\"parent_path\"));\n         i.setSysPublishDate((Date) map.get(\"syspublish_date\"));\n         i.setSysExpireDate((Date) map.get(\"sysexpire_date\"));\n+        i.setOwner((String) map.get(\"owner\"));\n+        i.setCreateDate((Date) map.get(\"create_date\"));\n+        i.setAssetSubType((String) map.get(\"asset_subtype\"));", "originalCommit": "0c301721f4ed61ff883cccb9f77bd2e2af68baf8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxMDM5NQ==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r504310395", "bodyText": "Done", "author": "nollymar", "createdAt": "2020-10-13T23:13:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwMzQyMA=="}], "type": "inlineReview", "revised_code": {"commit": "330c0f4d5c228606280d1cd95de6aca1556e70a0", "chunk": "diff --git a/dotCMS/src/main/java/com/dotmarketing/beans/transform/IdentifierTransformer.java b/dotCMS/src/main/java/com/dotmarketing/beans/transform/IdentifierTransformer.java\nindex f90c642dc5..bd9abff533 100644\n--- a/dotCMS/src/main/java/com/dotmarketing/beans/transform/IdentifierTransformer.java\n+++ b/dotCMS/src/main/java/com/dotmarketing/beans/transform/IdentifierTransformer.java\n\n@@ -34,17 +34,17 @@ public class IdentifierTransformer implements DBTransformer {\n \n     @NotNull\n     private static Identifier transform(Map<String, Object> map)  {\n-        final Identifier i = new Identifier();\n-        i.setAssetName((String) map.get(\"asset_name\"));\n-        i.setAssetType((String) map.get(\"asset_type\"));\n-        i.setHostId((String) map.get(\"host_inode\"));\n-        i.setId((String) map.get(\"id\"));\n-        i.setParentPath((String) map.get(\"parent_path\"));\n-        i.setSysPublishDate((Date) map.get(\"syspublish_date\"));\n-        i.setSysExpireDate((Date) map.get(\"sysexpire_date\"));\n-        i.setOwner((String) map.get(\"owner\"));\n-        i.setCreateDate((Date) map.get(\"create_date\"));\n-        i.setAssetSubType((String) map.get(\"asset_subtype\"));\n-        return i;\n+        final Identifier identifier = new Identifier();\n+        identifier.setAssetName((String) map.get(\"asset_name\"));\n+        identifier.setAssetType((String) map.get(\"asset_type\"));\n+        identifier.setHostId((String) map.get(\"host_inode\"));\n+        identifier.setId((String) map.get(\"id\"));\n+        identifier.setParentPath((String) map.get(\"parent_path\"));\n+        identifier.setSysPublishDate((Date) map.get(\"syspublish_date\"));\n+        identifier.setSysExpireDate((Date) map.get(\"sysexpire_date\"));\n+        identifier.setOwner((String) map.get(\"owner\"));\n+        identifier.setCreateDate((Date) map.get(\"create_date\"));\n+        identifier.setAssetSubType((String) map.get(\"asset_subtype\"));\n+        return identifier;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4NzE1Mg==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r504187152", "bodyText": "asset_subtype needs an index on it", "author": "wezell", "createdAt": "2020-10-13T18:58:42Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTable.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n+\n+public class Task201013AddNewColumnsToIdentifierTable extends AbstractJDBCStartupTask {\n+    @Override\n+    public boolean forceRun() {\n+        return true;\n+    }\n+\n+    @Override\n+    public String getPostgresScript() {\n+        return \"alter table identifier add owner varchar(255);\" +\n+                \"alter table identifier add create_date timestamp;\" +\n+                \"alter table identifier add asset_subtype varchar(255);\";", "originalCommit": "0c301721f4ed61ff883cccb9f77bd2e2af68baf8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwMzQ0NA==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r505903444", "bodyText": "Done", "author": "nollymar", "createdAt": "2020-10-15T22:38:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4NzE1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7528a9216b37425f9a1411f9399537df8b0a973d", "chunk": "diff --git a/dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTable.java b/dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTable.java\nindex 7bedfc66ba..48ae39cdfe 100644\n--- a/dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTable.java\n+++ b/dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTable.java\n\n@@ -1,14 +1,26 @@\n package com.dotmarketing.startup.runonce;\n \n+import com.dotmarketing.common.db.DotDatabaseMetaData;\n import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import com.dotmarketing.util.Logger;\n+import java.sql.SQLException;\n import java.util.List;\n \n public class Task201013AddNewColumnsToIdentifierTable extends AbstractJDBCStartupTask {\n     @Override\n     public boolean forceRun() {\n-        return true;\n+        try {\n+            final DotDatabaseMetaData dbMetadata = new DotDatabaseMetaData();\n+            return !dbMetadata.hasColumn(\"identifier\", \"owner\") &&\n+                    !dbMetadata.hasColumn(\"identifier\", \"create_date\") &&\n+                    !dbMetadata.hasColumn(\"identifier\", \"asset_subtype\");\n+        } catch (SQLException e) {\n+            Logger.error(this, e.getMessage(),e);\n+            return false;\n+        }\n     }\n \n+\n     @Override\n     public String getPostgresScript() {\n         return \"alter table identifier add owner varchar(255);\" +\n"}}, {"oid": "7528a9216b37425f9a1411f9399537df8b0a973d", "url": "https://github.com/dotCMS/core/commit/7528a9216b37425f9a1411f9399537df8b0a973d", "message": "#19395 #19396 #19397 ITs implemented", "committedDate": "2020-10-13T23:11:27Z", "type": "commit"}, {"oid": "330c0f4d5c228606280d1cd95de6aca1556e70a0", "url": "https://github.com/dotCMS/core/commit/330c0f4d5c228606280d1cd95de6aca1556e70a0", "message": "#19395 #19396 #19397 Renaming variable", "committedDate": "2020-10-13T23:12:48Z", "type": "commit"}, {"oid": "d5a5984ba2634d74d998391f43887fefe38447b7", "url": "https://github.com/dotCMS/core/commit/d5a5984ba2634d74d998391f43887fefe38447b7", "message": "#19395 #19396 #19397 Populating identifier table", "committedDate": "2020-10-15T22:33:26Z", "type": "commit"}, {"oid": "0f84fc224309129a73a117ce5de6a3812fd790ba", "url": "https://github.com/dotCMS/core/commit/0f84fc224309129a73a117ce5de6a3812fd790ba", "message": "#19395 #19396 #19397 New ITs", "committedDate": "2020-10-15T22:33:58Z", "type": "commit"}, {"oid": "b5daccceffcecfd7e7c0b53e0ed1e79fa2535371", "url": "https://github.com/dotCMS/core/commit/b5daccceffcecfd7e7c0b53e0ed1e79fa2535371", "message": "#19395 #19396 #19397 New index was created for asset_subtype field", "committedDate": "2020-10-15T22:34:39Z", "type": "commit"}, {"oid": "2ea318b0bc95520ca51550335296bd1236a32321", "url": "https://github.com/dotCMS/core/commit/2ea318b0bc95520ca51550335296bd1236a32321", "message": "#19395 #19396 #19397 New index was created for asset_subtype field", "committedDate": "2020-10-16T17:26:12Z", "type": "commit"}, {"oid": "46db6dd8bd29bc9351d54519fa2ad75fc0e5b8e1", "url": "https://github.com/dotCMS/core/commit/46db6dd8bd29bc9351d54519fa2ad75fc0e5b8e1", "message": "Merge branch 'master' of https://github.com/dotCMS/core into issues-19395-19396-19397", "committedDate": "2020-10-16T20:16:53Z", "type": "commit"}, {"oid": "0b9685c3f3e6199554b45241cd3816fb2c664f34", "url": "https://github.com/dotCMS/core/commit/0b9685c3f3e6199554b45241cd3816fb2c664f34", "message": "#19395 #19396 #19397 Including new IT in MainSuite", "committedDate": "2020-10-16T21:41:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkxNTk5Ng==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507915996", "bodyText": "this looks like a candidate to create a private method", "author": "jdotcms", "createdAt": "2020-10-19T17:10:21Z", "path": "dotCMS/src/main/java/com/dotmarketing/business/IdentifierFactoryImpl.java", "diffHunk": "@@ -378,19 +398,36 @@ protected Identifier createNewIdentifier ( Versionable versionable, Host site, S\n                 identifier.setAssetType(Identifier.ASSET_TYPE_CONTENTLET);\n                 identifier.setParentPath( \"/\" );\n                 identifier.setAssetName( uri );\n+                identifier.setAssetSubType(cont.getContentType().variable());\n             } else if ( versionable instanceof Link ) {\n                 identifier.setAssetName( versionable.getInode() );\n                 identifier.setParentPath(\"/\");\n             } else if(versionable instanceof Host) {\n \t\t\t\tidentifier.setAssetName(versionable.getInode());\n \t\t\t\tidentifier.setAssetType(Identifier.ASSET_TYPE_CONTENTLET);\n \t\t\t\tidentifier.setParentPath(\"/\");\n+\t\t\t\tidentifier.setAssetSubType(Host.HOST_VELOCITY_VAR_NAME);\n \t\t\t} else {\n                 identifier.setURI( uri );\n             }\n+\n+            identifier.setOwner((versionable instanceof WebAsset)\n+                    ? ((WebAsset) versionable).getOwner() : versionable.getModUser());\n         }\n         identifier.setHostId( site != null ? site.getIdentifier() : null );\n \n+        final Inode inode;", "originalCommit": "0b9685c3f3e6199554b45241cd3816fb2c664f34", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "b9a0fcd80a2a907d454e45450035c7e90fedcc84", "url": "https://github.com/dotCMS/core/commit/b9a0fcd80a2a907d454e45450035c7e90fedcc84", "message": "Merge branch 'master' of https://github.com/dotCMS/core into issues-19395-19396-19397", "committedDate": "2020-10-19T18:06:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTU1Ng==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969556", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "author": "dev-dotcms", "createdAt": "2020-10-19T18:21:48Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTableTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import java.sql.SQLException;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class Task201013AddNewColumnsToIdentifierTableTest {\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "originalCommit": "b9a0fcd80a2a907d454e45450035c7e90fedcc84", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTU2OA==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969568", "bodyText": "Codacy found an issue: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-10-19T18:21:49Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTableTest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.datagen.ContainerDataGen;\n+import com.dotcms.datagen.FolderDataGen;\n+import com.dotcms.datagen.LinkDataGen;\n+import com.dotcms.datagen.TemplateDataGen;\n+import com.dotcms.datagen.TestDataUtils;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.beans.Identifier;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.IdentifierAPI;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.portlets.containers.model.Container;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.folders.model.Folder;\n+import com.dotmarketing.portlets.links.model.Link;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.UtilMethods;\n+import java.sql.SQLException;\n+import java.sql.Timestamp;\n+import java.time.LocalDateTime;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+\n+public class Task201014UpdateColumnsValuesInIdentifierTableTest {\n+\n+    private static IdentifierAPI identifierAPI;\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+        identifierAPI = APILocator.getIdentifierAPI();\n+    }\n+\n+    private void cleanUpColumns(final List<Identifier> identifiers) throws SQLException {\n+        final DotConnect dotConnect = new DotConnect();\n+        for(Identifier identifier:identifiers){\n+            dotConnect.executeStatement(\"UPDATE identifier set owner=null, create_date=null,\"\n+                    + \" asset_subtype=null where id='\" + identifier.getId() + \"'\");\n+        }\n+    }\n+\n+    private List<Identifier> createIdentifiers() throws DotDataException {\n+        final List<Identifier> identifiers = new ArrayList<>();\n+\n+        final Link link = new LinkDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(link.getIdentifier()));\n+\n+        final Folder folder = new FolderDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(folder.getIdentifier()));\n+\n+        final Template template = new TemplateDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(template.getIdentifier()));\n+\n+        final Container container = new ContainerDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(container.getIdentifier()));\n+\n+        final Contentlet contentlet = TestDataUtils\n+                .getPageContent(true, APILocator.getLanguageAPI().getDefaultLanguage().getId());\n+        identifiers.add(identifierAPI.find(contentlet.getIdentifier()));\n+\n+        return identifiers;\n+    }\n+\n+    private boolean areColumnsPopulated(final List<Identifier> identifiers)\n+            throws DotDataException {\n+        List<Map<String, Object>> results;\n+        for (Identifier identifier: identifiers){\n+            final DotConnect dotConnect = new DotConnect();\n+            dotConnect.setSQL(\"select owner, create_date, asset_subtype from identifier where id=?\");\n+            dotConnect.addParam(identifier.getId());\n+            results = dotConnect.loadObjectResults();\n+\n+            if (!areValuesEqual(identifier, results.get(0))){\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    private boolean areValuesEqual(final Identifier expectedResult, final Map<String, Object> result){\n+        final LocalDateTime expectedDate = new Timestamp(\n+                expectedResult.getCreateDate().getTime()).toLocalDateTime().truncatedTo(\n+                ChronoUnit.SECONDS);\n+        final LocalDateTime resultDate = new Timestamp(\n+                ((Date)result.get(\"create_date\")).getTime()).toLocalDateTime().truncatedTo(\n+                ChronoUnit.SECONDS);\n+\n+        return result.get(\"owner\").equals(expectedResult.getOwner()) &&\n+                resultDate.equals(expectedDate) &&\n+                ((!expectedResult.getAssetType().equals(\"contentlet\") && !UtilMethods.isSet(result.get(\"asset_subtype\")))\n+                        || (expectedResult.getAssetType().equals(\"contentlet\") && result.get(\"asset_subtype\").equals(expectedResult.getAssetSubType())));", "originalCommit": "b9a0fcd80a2a907d454e45450035c7e90fedcc84", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTU3Ng==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969576", "bodyText": "Codacy found an issue: A method/constructor should not explicitly throw java.lang.Exception", "author": "dev-dotcms", "createdAt": "2020-10-19T18:21:50Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTableTest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.datagen.ContainerDataGen;\n+import com.dotcms.datagen.FolderDataGen;\n+import com.dotcms.datagen.LinkDataGen;\n+import com.dotcms.datagen.TemplateDataGen;\n+import com.dotcms.datagen.TestDataUtils;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.beans.Identifier;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.IdentifierAPI;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.portlets.containers.model.Container;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.folders.model.Folder;\n+import com.dotmarketing.portlets.links.model.Link;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.UtilMethods;\n+import java.sql.SQLException;\n+import java.sql.Timestamp;\n+import java.time.LocalDateTime;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+\n+public class Task201014UpdateColumnsValuesInIdentifierTableTest {\n+\n+    private static IdentifierAPI identifierAPI;\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {", "originalCommit": "b9a0fcd80a2a907d454e45450035c7e90fedcc84", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTU4Ng==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969586", "bodyText": "Codacy found an issue: The String literal \"update identifier set owner=q.i_owner, create_date=q.create_date from \" appears 4 times in this file; the first occurrence is on line 21", "author": "dev-dotcms", "createdAt": "2020-10-19T18:21:51Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotRuntimeException;\n+import com.dotmarketing.startup.StartupTask;\n+\n+/**\n+ * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n+ */\n+public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n+\n+    protected static final String UPDATE_CONTENTLETS =\n+            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from\"\n+            + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n+            + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n+            + \"inode inode, structure struc \"\n+            + \"where inode.inode=cont.inode \"\n+            + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n+\n+    private static final String UPDATE_FOLDER = \"update identifier set owner=q.i_owner, create_date=q.create_date from \"", "originalCommit": "b9a0fcd80a2a907d454e45450035c7e90fedcc84", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTU5Ng==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969596", "bodyText": "Codacy found an issue: The String literal \"create index idx_identifier_asset_subtype on identifier (asset_subtype);\" appears 4 times in this file; the first occurrence is on line 29", "author": "dev-dotcms", "createdAt": "2020-10-19T18:21:52Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201013AddNewColumnsToIdentifierTable.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import com.dotmarketing.common.db.DotDatabaseMetaData;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import com.dotmarketing.util.Logger;\n+import java.sql.SQLException;\n+import java.util.List;\n+\n+public class Task201013AddNewColumnsToIdentifierTable extends AbstractJDBCStartupTask {\n+    @Override\n+    public boolean forceRun() {\n+        try {\n+            final DotDatabaseMetaData dbMetadata = new DotDatabaseMetaData();\n+            return !dbMetadata.hasColumn(\"identifier\", \"owner\") &&\n+                    !dbMetadata.hasColumn(\"identifier\", \"create_date\") &&\n+                    !dbMetadata.hasColumn(\"identifier\", \"asset_subtype\");\n+        } catch (SQLException e) {\n+            Logger.error(this, e.getMessage(),e);\n+            return false;\n+        }\n+    }\n+\n+\n+    @Override\n+    public String getPostgresScript() {\n+        return \"alter table identifier add owner varchar(255);\" +\n+                \"alter table identifier add create_date timestamp;\" +\n+                \"alter table identifier add asset_subtype varchar(255);\" +\n+                \"create index idx_identifier_asset_subtype on identifier (asset_subtype);\";", "originalCommit": "b9a0fcd80a2a907d454e45450035c7e90fedcc84", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTYwNg==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969606", "bodyText": "Codacy found an issue: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-10-19T18:21:53Z", "path": "dotCMS/src/integration-test/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTableTest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package com.dotmarketing.startup.runonce;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+import com.dotcms.datagen.ContainerDataGen;\n+import com.dotcms.datagen.FolderDataGen;\n+import com.dotcms.datagen.LinkDataGen;\n+import com.dotcms.datagen.TemplateDataGen;\n+import com.dotcms.datagen.TestDataUtils;\n+import com.dotcms.util.IntegrationTestInitService;\n+import com.dotmarketing.beans.Identifier;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.business.IdentifierAPI;\n+import com.dotmarketing.common.db.DotConnect;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.portlets.containers.model.Container;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.folders.model.Folder;\n+import com.dotmarketing.portlets.links.model.Link;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.UtilMethods;\n+import java.sql.SQLException;\n+import java.sql.Timestamp;\n+import java.time.LocalDateTime;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+\n+public class Task201014UpdateColumnsValuesInIdentifierTableTest {\n+\n+    private static IdentifierAPI identifierAPI;\n+\n+    @BeforeClass\n+    public static void prepare() throws Exception {\n+        // Setting web app environment\n+        IntegrationTestInitService.getInstance().init();\n+        identifierAPI = APILocator.getIdentifierAPI();\n+    }\n+\n+    private void cleanUpColumns(final List<Identifier> identifiers) throws SQLException {\n+        final DotConnect dotConnect = new DotConnect();\n+        for(Identifier identifier:identifiers){\n+            dotConnect.executeStatement(\"UPDATE identifier set owner=null, create_date=null,\"\n+                    + \" asset_subtype=null where id='\" + identifier.getId() + \"'\");\n+        }\n+    }\n+\n+    private List<Identifier> createIdentifiers() throws DotDataException {\n+        final List<Identifier> identifiers = new ArrayList<>();\n+\n+        final Link link = new LinkDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(link.getIdentifier()));\n+\n+        final Folder folder = new FolderDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(folder.getIdentifier()));\n+\n+        final Template template = new TemplateDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(template.getIdentifier()));\n+\n+        final Container container = new ContainerDataGen().nextPersisted();\n+        identifiers.add(identifierAPI.find(container.getIdentifier()));\n+\n+        final Contentlet contentlet = TestDataUtils\n+                .getPageContent(true, APILocator.getLanguageAPI().getDefaultLanguage().getId());\n+        identifiers.add(identifierAPI.find(contentlet.getIdentifier()));\n+\n+        return identifiers;\n+    }\n+\n+    private boolean areColumnsPopulated(final List<Identifier> identifiers)\n+            throws DotDataException {\n+        List<Map<String, Object>> results;\n+        for (Identifier identifier: identifiers){\n+            final DotConnect dotConnect = new DotConnect();\n+            dotConnect.setSQL(\"select owner, create_date, asset_subtype from identifier where id=?\");\n+            dotConnect.addParam(identifier.getId());\n+            results = dotConnect.loadObjectResults();\n+\n+            if (!areValuesEqual(identifier, results.get(0))){\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    private boolean areValuesEqual(final Identifier expectedResult, final Map<String, Object> result){\n+        final LocalDateTime expectedDate = new Timestamp(\n+                expectedResult.getCreateDate().getTime()).toLocalDateTime().truncatedTo(\n+                ChronoUnit.SECONDS);\n+        final LocalDateTime resultDate = new Timestamp(\n+                ((Date)result.get(\"create_date\")).getTime()).toLocalDateTime().truncatedTo(\n+                ChronoUnit.SECONDS);\n+\n+        return result.get(\"owner\").equals(expectedResult.getOwner()) &&\n+                resultDate.equals(expectedDate) &&\n+                ((!expectedResult.getAssetType().equals(\"contentlet\") && !UtilMethods.isSet(result.get(\"asset_subtype\")))", "originalCommit": "b9a0fcd80a2a907d454e45450035c7e90fedcc84", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2OTYxNA==", "url": "https://github.com/dotCMS/core/pull/19441#discussion_r507969614", "bodyText": "Codacy found an issue: Useless parentheses.", "author": "dev-dotcms", "createdAt": "2020-10-19T18:21:54Z", "path": "dotCMS/src/main/java/com/dotmarketing/business/IdentifierFactoryImpl.java", "diffHunk": "@@ -317,6 +320,9 @@ protected Identifier createNewIdentifier(final Versionable versionable, final Fo\n \t\t\t\tidentifier.setURI(uri);\n \t\t\t\tidentifier.setAssetType(versionable.getVersionType());\n \t\t\t}\n+\n+            identifier.setOwner((versionable instanceof WebAsset)", "originalCommit": "b9a0fcd80a2a907d454e45450035c7e90fedcc84", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}