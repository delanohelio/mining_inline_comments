{"pr_number": 19495, "pr_title": "Fixing IT", "pr_createdAt": "2020-10-23T23:17:41Z", "pr_url": "https://github.com/dotCMS/core/pull/19495", "timeline": [{"oid": "0806efed6a461793efead8a79c083f607b8d357d", "url": "https://github.com/dotCMS/core/commit/0806efed6a461793efead8a79c083f607b8d357d", "message": "Fixing IT. The old way to populate columns did not consider multiple inodes for the same identifier", "committedDate": "2020-10-23T23:16:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTI5Ng==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195296", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:16Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTI5Nw==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195297", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:16Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsOracle(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsOracle(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMSSQLScript() {\n+        return getPostgresScript();\n+    }\n+\n+    @Override\n+    public String getH2Script() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<String> getTablesToDropConstraints() {\n+        return null;\n+    }\n+\n+    private String getQueryToUpdateNonContentletsOracle(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate from \")\n+                .append(tableName).append(\" temp, inode, \\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from \")\n+                .append(tableName).append(\", inode where inode.inode=\")\n+                .append(tableName).append(\".inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\")\n+                .append(\"WHEN MATCHED THEN\\n\")\n+                .append(\"    UPDATE SET ident.owner = st.iowner,\\n\")\n+                .append(\"               ident.create_date = st.idate;\\n\").toString();\n+    }\n+\n+    private String getQueryToUpdateNonContentletsPostgres(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"update identifier set owner=iowner, create_date=idate from\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate from \")\n+                .append(tableName).append(\" temp, inode,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from \")\n+                .append(tableName).append(\", inode \\n\")\n+                .append(\"where inode.inode=\").append(tableName).append(\".inode group by identifier) custom_select  \\n\")\n+                .append(\" where temp.identifier=custom_select.identifier\\n\")\n+                .append(\" and inode.inode=temp.inode and inode.idate=custom_select.idate) my_query\\n\")\n+                .append(\" where  id=myID;\\n\").toString();\n+    }\n+\n+    private String getQueryToUpdateNonContentletsMySQL(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"update identifier ident,\\n\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMwMg==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195302", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:18Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMwNA==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195304", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:19Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsOracle(\"links\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMwNg==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195306", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:19Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMwNw==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195307", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:20Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsOracle(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsOracle(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMSSQLScript() {\n+        return getPostgresScript();\n+    }\n+\n+    @Override\n+    public String getH2Script() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<String> getTablesToDropConstraints() {\n+        return null;\n+    }\n+\n+    private String getQueryToUpdateNonContentletsOracle(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate from \")\n+                .append(tableName).append(\" temp, inode, \\n\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMwOA==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195308", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 4 consecutive times with literals. Use a single append with a single combined String.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:21Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsOracle(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsOracle(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMSSQLScript() {\n+        return getPostgresScript();\n+    }\n+\n+    @Override\n+    public String getH2Script() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<String> getTablesToDropConstraints() {\n+        return null;\n+    }\n+\n+    private String getQueryToUpdateNonContentletsOracle(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate from \")\n+                .append(tableName).append(\" temp, inode, \\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from \")\n+                .append(tableName).append(\", inode where inode.inode=\")\n+                .append(tableName).append(\".inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\")\n+                .append(\"WHEN MATCHED THEN\\n\")\n+                .append(\"    UPDATE SET ident.owner = st.iowner,\\n\")\n+                .append(\"               ident.create_date = st.idate;\\n\").toString();\n+    }\n+\n+    private String getQueryToUpdateNonContentletsPostgres(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"update identifier set owner=iowner, create_date=idate from\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate from \")\n+                .append(tableName).append(\" temp, inode,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from \")\n+                .append(tableName).append(\", inode \\n\")\n+                .append(\"where inode.inode=\").append(tableName).append(\".inode group by identifier) custom_select  \\n\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMxMA==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195310", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 3 consecutive times with literals. Use a single append with a single combined String.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:22Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsOracle(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsOracle(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMSSQLScript() {\n+        return getPostgresScript();\n+    }\n+\n+    @Override\n+    public String getH2Script() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<String> getTablesToDropConstraints() {\n+        return null;\n+    }\n+\n+    private String getQueryToUpdateNonContentletsOracle(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"MERGE INTO identifier ident\\n\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMxNA==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195314", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:23Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsOracle(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsOracle(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMSSQLScript() {\n+        return getPostgresScript();\n+    }\n+\n+    @Override\n+    public String getH2Script() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<String> getTablesToDropConstraints() {\n+        return null;\n+    }\n+\n+    private String getQueryToUpdateNonContentletsOracle(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate from \")\n+                .append(tableName).append(\" temp, inode, \\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from \")\n+                .append(tableName).append(\", inode where inode.inode=\")\n+                .append(tableName).append(\".inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\")\n+                .append(\"WHEN MATCHED THEN\\n\")\n+                .append(\"    UPDATE SET ident.owner = st.iowner,\\n\")\n+                .append(\"               ident.create_date = st.idate;\\n\").toString();\n+    }\n+\n+    private String getQueryToUpdateNonContentletsPostgres(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"update identifier set owner=iowner, create_date=idate from\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate from \")\n+                .append(tableName).append(\" temp, inode,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from \")\n+                .append(tableName).append(\", inode \\n\")\n+                .append(\"where inode.inode=\").append(tableName).append(\".inode group by identifier) custom_select  \\n\")\n+                .append(\" where temp.identifier=custom_select.identifier\\n\")\n+                .append(\" and inode.inode=temp.inode and inode.idate=custom_select.idate) my_query\\n\")\n+                .append(\" where  id=myID;\\n\").toString();\n+    }\n+\n+    private String getQueryToUpdateNonContentletsMySQL(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate  from \")\n+                .append(tableName).append(\" temp, inode,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from \").append(tableName)\n+                .append(\", inode \\n\").append(\"where inode.inode=\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMxNw==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195317", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:23Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMyMQ==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195321", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:24Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMyNQ==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195325", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:25Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMyOA==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195328", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:26Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMzMA==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195330", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:27Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTMzNw==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195337", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 8 consecutive times with literals. Use a single append with a single combined String.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:28Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTM0Mw==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195343", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 7 consecutive times with literals. Use a single append with a single combined String.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:28Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsOracle(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsOracle(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMSSQLScript() {\n+        return getPostgresScript();\n+    }\n+\n+    @Override\n+    public String getH2Script() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<String> getTablesToDropConstraints() {\n+        return null;\n+    }\n+\n+    private String getQueryToUpdateNonContentletsOracle(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate from \")\n+                .append(tableName).append(\" temp, inode, \\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from \")\n+                .append(tableName).append(\", inode where inode.inode=\")\n+                .append(tableName).append(\".inode group by identifier) custom_select\\n\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTM0Nw==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195347", "bodyText": "Codacy found an issue: The String literal \"where temp.identifier=custom_select.identifier\\n\" appears 5 times in this file; the first occurrence is on line 38", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:29Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTM1MQ==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195351", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:30Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsOracle(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsOracle(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMSSQLScript() {\n+        return getPostgresScript();\n+    }\n+\n+    @Override\n+    public String getH2Script() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<String> getTablesToDropConstraints() {\n+        return null;\n+    }\n+\n+    private String getQueryToUpdateNonContentletsOracle(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate from \")\n+                .append(tableName).append(\" temp, inode, \\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from \")\n+                .append(tableName).append(\", inode where inode.inode=\")\n+                .append(tableName).append(\".inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\")\n+                .append(\"WHEN MATCHED THEN\\n\")\n+                .append(\"    UPDATE SET ident.owner = st.iowner,\\n\")\n+                .append(\"               ident.create_date = st.idate;\\n\").toString();\n+    }\n+\n+    private String getQueryToUpdateNonContentletsPostgres(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"update identifier set owner=iowner, create_date=idate from\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate from \")\n+                .append(tableName).append(\" temp, inode,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from \")\n+                .append(tableName).append(\", inode \\n\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTM1NA==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195354", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:31Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTM1Ng==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195356", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 8 consecutive times with literals. Use a single append with a single combined String.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:32Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsOracle(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsOracle(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"MERGE INTO identifier ident\\n\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTM1OA==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195358", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:33Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTM2MA==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195360", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 2 consecutive times with literals. Use a single append with a single combined String.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:34Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsOracle(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsOracle(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMSSQLScript() {\n+        return getPostgresScript();\n+    }\n+\n+    @Override\n+    public String getH2Script() {\n+        return null;\n+    }\n+\n+    @Override\n+    protected List<String> getTablesToDropConstraints() {\n+        return null;\n+    }\n+\n+    private String getQueryToUpdateNonContentletsOracle(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"MERGE INTO identifier ident\\n\")\n+                .append(\"    USING\\n\")\n+                .append(\"(select distinct temp.identifier myID, owner iowner, inode.idate idate from \")\n+                .append(tableName).append(\" temp, inode, \\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from \")\n+                .append(tableName).append(\", inode where inode.inode=\")\n+                .append(tableName).append(\".inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate)\\n\")\n+                .append(\"st ON (ident.id = st.myID) \\n\")\n+                .append(\"WHEN MATCHED THEN\\n\")\n+                .append(\"    UPDATE SET ident.owner = st.iowner,\\n\")\n+                .append(\"               ident.create_date = st.idate;\\n\").toString();\n+    }\n+\n+    private String getQueryToUpdateNonContentletsPostgres(final String tableName){\n+        final StringBuilder query = new StringBuilder();\n+        return query.append(\"update identifier set owner=iowner, create_date=idate from\\n\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTM2Mg==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195362", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called 10 consecutive times with literals. Use a single append with a single combined String.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:35Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5NTM2NQ==", "url": "https://github.com/dotCMS/core/pull/19495#discussion_r511195365", "bodyText": "Codacy found an issue: StringBuffer (or StringBuilder).append is called consecutively without reusing the target variable.", "author": "dev-dotcms", "createdAt": "2020-10-23T23:24:35Z", "path": "dotCMS/src/main/java/com/dotmarketing/startup/runonce/Task201014UpdateColumnsValuesInIdentifierTable.java", "diffHunk": "@@ -1,102 +1,166 @@\n package com.dotmarketing.startup.runonce;\n \n-import com.dotmarketing.common.db.DotConnect;\n-import com.dotmarketing.db.DbConnectionFactory;\n-import com.dotmarketing.exception.DotDataException;\n-import com.dotmarketing.exception.DotRuntimeException;\n-import com.dotmarketing.startup.StartupTask;\n+import com.dotmarketing.startup.AbstractJDBCStartupTask;\n+import java.util.List;\n \n /**\n  * Task used to populate fields: owner, create_date, asset_subtype of the identifier table\n  */\n-public class Task201014UpdateColumnsValuesInIdentifierTable implements StartupTask {\n-\n-    protected static final String UPDATE_CONTENTLETS =\n-            \"update identifier as ident, \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, struc.velocity_var_name asset_subtype \"\n-                    + \"from contentlet cont, inode inode, structure struc where inode.inode=cont.inode and cont.structure_inode = struc.inode) \"\n-                    + \"as q set ident.owner=q.i_owner, ident.create_date=q.create_date, ident.asset_subtype=q.asset_subtype  where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_CONTENTLETS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date, asset_subtype=q.asset_subtype from \"\n-                    + \"(select cont.identifier, cont.mod_user i_owner, inode.idate create_date, \"\n-                    + \"struc.velocity_var_name asset_subtype from contentlet cont, \"\n-                    + \"inode inode, structure struc \"\n-                    + \"where inode.inode=cont.inode \"\n-                    + \"and cont.structure_inode = struc.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from folder, inode where inode.inode=folder.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_FOLDER_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from folder, inode \"\n-                    + \"where inode.inode=folder.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode where inode.inode=dot_containers.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    private static final String UPDATE_CONTAINERS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from dot_containers, inode \"\n-                    + \"where inode.inode=dot_containers.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_TEMPLATES = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from template, inode where inode.inode=template.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected static final String UPDATE_TEMPLATES_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from template, inode \"\n-                    + \"where inode.inode=template.inode) q where id=q.identifier\";\n-\n-    private static final String UPDATE_LINKS = \"update identifier as ident, \"\n-            + \"(select identifier, owner i_owner, idate create_date from links, inode where inode.inode=links.inode) as q \"\n-            + \"set ident.owner=q.i_owner, ident.create_date=q.create_date \"\n-            + \"where ident.id=q.identifier\";\n-\n-    protected final static String UPDATE_LINKS_POSTGRESQL =\n-            \"update identifier set owner=q.i_owner, create_date=q.create_date from \"\n-                    + \"(select identifier, owner i_owner, idate create_date from links, inode \"\n-                    + \"where inode.inode=links.inode) q where id=q.identifier\";\n+public class Task201014UpdateColumnsValuesInIdentifierTable extends AbstractJDBCStartupTask {\n \n     @Override\n     public boolean forceRun() {\n         return true;\n     }\n \n     @Override\n-    public void executeUpgrade() throws DotDataException, DotRuntimeException {\n+    public String getPostgresScript() {\n \n-        final DotConnect dotConnect = new DotConnect()\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTENTLETS_POSTGRESQL\n-                        : UPDATE_CONTENTLETS);\n-        dotConnect.loadResult();\n+        final StringBuilder query = new StringBuilder();\n \n-        // update owner, create_date and asset_subtype for folders\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_FOLDER_POSTGRESQL\n-                : UPDATE_FOLDER);\n-        dotConnect.loadResult();\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"template\"));\n \n-        // update owner, create_date and asset_subtype for containers\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_CONTAINERS_POSTGRESQL\n-                : UPDATE_CONTAINERS);\n-        dotConnect.loadResult();\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"dot_containers\"));\n \n-        // update owner, create_date and asset_subtype for templates\n-        dotConnect.setSQL(DbConnectionFactory.isPostgres() ? UPDATE_TEMPLATES_POSTGRESQL\n-                : UPDATE_TEMPLATES);\n-        dotConnect.loadResult();\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"links\"));\n \n-        // update owner, create_date and asset_subtype for links\n-        dotConnect\n-                .setSQL(DbConnectionFactory.isPostgres() ? UPDATE_LINKS_POSTGRESQL : UPDATE_LINKS);\n-        dotConnect.loadResult();\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsPostgres(\"folder\"));\n \n+        //update contentlets\n+        query.append(\"update identifier set owner=mod_user, create_date=idate, asset_subtype=velocity_var_name from\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) idate from contentlet, inode \\n\")\n+                .append(\"where inode.inode=contentlet.inode group by identifier) custom_select  \\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\" where  id=myID;\\n\");\n+\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getMySQLScript() {\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsMySQL(\"folder\"));\n+\n+        //update contentlets\n+        query.append(\"update identifier ident,\\n\")\n+                .append(\"(select distinct temp.identifier myID, temp.mod_user, inode.idate, \")\n+                .append(\"struc.velocity_var_name  from contentlet temp, inode, structure struc,\\n\")\n+                .append(\"(select identifier, MIN(idate) as idate from contentlet, inode where \")\n+                .append(\"inode.inode=contentlet.inode group by identifier) custom_select\\n\")\n+                .append(\"where temp.identifier=custom_select.identifier\\n\")\n+                .append(\"and inode.inode=temp.inode and inode.idate=custom_select.idate \\n\")\n+                .append(\"and temp.structure_inode = struc.inode) my_query\\n\")\n+                .append(\"set ident.owner=my_query.mod_user, ident.create_date=my_query.idate\\n\")\n+                .append(\"where ident.id=my_query.myID;\");\n+\n+        return query.toString();\n+    }\n+\n+    @Override\n+    public String getOracleScript() {\n+\n+        final StringBuilder query = new StringBuilder();\n+\n+        //update templates\n+        query.append(getQueryToUpdateNonContentletsOracle(\"template\"));\n+\n+        //update containers\n+        query.append(getQueryToUpdateNonContentletsOracle(\"dot_containers\"));\n+\n+        //update links\n+        query.append(getQueryToUpdateNonContentletsOracle(\"links\"));\n+\n+        //update folders\n+        query.append(getQueryToUpdateNonContentletsOracle(\"folder\"));", "originalCommit": "0806efed6a461793efead8a79c083f607b8d357d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}