{"pr_number": 19119, "pr_title": "#19108 viewAs field for the GraphQL Page API", "pr_createdAt": "2020-08-17T23:43:51Z", "pr_url": "https://github.com/dotCMS/core/pull/19119", "timeline": [{"oid": "72bd276909bf65d83d8d478a2d2d7a16121a97f3", "url": "https://github.com/dotCMS/core/commit/72bd276909bf65d83d8d478a2d2d7a16121a97f3", "message": "#19108 first draft", "committedDate": "2020-08-17T23:43:21Z", "type": "commit"}, {"oid": "6787cb5fd92dac04bc418140187f52de1861a42e", "url": "https://github.com/dotCMS/core/commit/6787cb5fd92dac04bc418140187f52de1861a42e", "message": "#19108 rest of viewAs fields", "committedDate": "2020-08-19T02:22:10Z", "type": "commit"}, {"oid": "6a149bb224c5547eb8ec722a7028f30da54a55e0", "url": "https://github.com/dotCMS/core/commit/6a149bb224c5547eb8ec722a7028f30da54a55e0", "message": "#19108 more fields for viewAs and postman tests", "committedDate": "2020-08-19T23:32:14Z", "type": "commit"}, {"oid": "9d6e6b4b5a69a9518bbfeb7af8adc32ef6652499", "url": "https://github.com/dotCMS/core/commit/9d6e6b4b5a69a9518bbfeb7af8adc32ef6652499", "message": "#19108 add geolocation and finish postman tests", "committedDate": "2020-08-20T17:39:01Z", "type": "commit"}, {"oid": "bb0ee76eff695b9ac02a28c2407509368112053b", "url": "https://github.com/dotCMS/core/commit/bb0ee76eff695b9ac02a28c2407509368112053b", "message": "#19108 codacy", "committedDate": "2020-08-20T17:46:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMDQ4Mw==", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474210483", "bodyText": "javadoc?", "author": "freddyucv", "createdAt": "2020-08-20T19:11:21Z", "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {", "originalCommit": "bb0ee76eff695b9ac02a28c2407509368112053b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDAyNQ==", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474234025", "bodyText": "done", "author": "dsilvam", "createdAt": "2020-08-20T19:48:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMDQ4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce", "chunk": "diff --git a/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java b/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java\nindex d1203291b1..1661b0c228 100644\n--- a/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java\n+++ b/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java\n\n@@ -7,23 +7,24 @@ import com.dotmarketing.portlets.contentlet.model.Contentlet;\n import com.dotmarketing.util.Logger;\n import com.dotmarketing.util.WebKeys;\n import com.liferay.portal.model.User;\n+import java.util.Optional;\n import javax.servlet.http.HttpServletRequest;\n \n public class DeviceAPIImpl implements DeviceAPI {\n \n     @Override\n-    public Contentlet getCurrentDevice(final HttpServletRequest request, final User user)\n+    public Optional<Contentlet> getCurrentDevice(final HttpServletRequest request, final User user)\n             throws DotDataException {\n         final String currentDeviceId = (String) request.getSession().\n                 getAttribute(WebKeys.CURRENT_DEVICE);\n-        Contentlet currentDevice = null;\n+        Optional<Contentlet> currentDevice = Optional.empty();\n \n         try {\n             if (currentDeviceId != null) {\n-                currentDevice = APILocator.getContentletAPI().find(currentDeviceId, user,\n-                        false);\n+                currentDevice = Optional.ofNullable(APILocator.getContentletAPI().find(currentDeviceId, user,\n+                        false));\n \n-                if (currentDevice == null) {\n+                if (!currentDevice.isPresent()) {\n                     request.getSession().removeAttribute(WebKeys.CURRENT_DEVICE);\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMDU0Mg==", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474210542", "bodyText": "any test?", "author": "freddyucv", "createdAt": "2020-08-20T19:11:28Z", "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {\n+\n+    @Override\n+    public Contentlet getCurrentDevice(final HttpServletRequest request, final User user)", "originalCommit": "bb0ee76eff695b9ac02a28c2407509368112053b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzMjE3MA==", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474232170", "bodyText": "Postman test", "author": "dsilvam", "createdAt": "2020-08-20T19:45:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMDU0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce", "chunk": "diff --git a/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java b/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java\nindex d1203291b1..1661b0c228 100644\n--- a/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java\n+++ b/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java\n\n@@ -7,23 +7,24 @@ import com.dotmarketing.portlets.contentlet.model.Contentlet;\n import com.dotmarketing.util.Logger;\n import com.dotmarketing.util.WebKeys;\n import com.liferay.portal.model.User;\n+import java.util.Optional;\n import javax.servlet.http.HttpServletRequest;\n \n public class DeviceAPIImpl implements DeviceAPI {\n \n     @Override\n-    public Contentlet getCurrentDevice(final HttpServletRequest request, final User user)\n+    public Optional<Contentlet> getCurrentDevice(final HttpServletRequest request, final User user)\n             throws DotDataException {\n         final String currentDeviceId = (String) request.getSession().\n                 getAttribute(WebKeys.CURRENT_DEVICE);\n-        Contentlet currentDevice = null;\n+        Optional<Contentlet> currentDevice = Optional.empty();\n \n         try {\n             if (currentDeviceId != null) {\n-                currentDevice = APILocator.getContentletAPI().find(currentDeviceId, user,\n-                        false);\n+                currentDevice = Optional.ofNullable(APILocator.getContentletAPI().find(currentDeviceId, user,\n+                        false));\n \n-                if (currentDevice == null) {\n+                if (!currentDevice.isPresent()) {\n                     request.getSession().removeAttribute(WebKeys.CURRENT_DEVICE);\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMTAzMA==", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474211030", "bodyText": "any test?", "author": "freddyucv", "createdAt": "2020-08-20T19:12:24Z", "path": "dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/HTMLPageAssetRenderedAPIImpl.java", "diffHunk": "@@ -230,6 +236,23 @@ public PageMode getDefaultEditPageMode(\n         }\n     }\n \n+    @Override\n+    public ViewAsPageStatus getViewAsStatus(final HttpServletRequest request,", "originalCommit": "bb0ee76eff695b9ac02a28c2407509368112053b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzMjE1Nw==", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r474232157", "bodyText": "Postman test", "author": "dsilvam", "createdAt": "2020-08-20T19:44:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMTAzMA=="}], "type": "inlineReview", "revised_code": {"commit": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce", "chunk": "diff --git a/dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/HTMLPageAssetRenderedAPIImpl.java b/dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/HTMLPageAssetRenderedAPIImpl.java\nindex 0227ba2d6c..e12e61925b 100644\n--- a/dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/HTMLPageAssetRenderedAPIImpl.java\n+++ b/dotCMS/src/main/java/com/dotmarketing/portlets/htmlpageasset/business/render/HTMLPageAssetRenderedAPIImpl.java\n\n@@ -244,11 +245,13 @@ public class HTMLPageAssetRenderedAPIImpl implements HTMLPageAssetRenderedAPI {\n                 .getPersonalizationsForPage(htmlpage);\n         final IPersona persona     = this.getCurrentPersona(request);\n         final boolean personalized = this.isPersonalized(persona, pagePersonalizationSet);\n+        final Contentlet device = APILocator.getDeviceAPI().getCurrentDevice(request, user)\n+                .orElse(null);\n \n         return new ViewAsPageStatus(\n                 getVisitor(request),\n                 WebAPILocator.getLanguageWebAPI().getLanguage(request),\n-                APILocator.getDeviceAPI().getCurrentDevice(request, user),\n+                device,\n                 pageMode,\n                 personalized );\n     }\n"}}, {"oid": "dff804debb3b34a7f42514bd13774932c0da3cf6", "url": "https://github.com/dotCMS/core/commit/dff804debb3b34a7f42514bd13774932c0da3cf6", "message": "#19108 javadoc", "committedDate": "2020-08-20T19:48:22Z", "type": "commit"}, {"oid": "a402bef91250061ea313a320a6088e616b06a109", "url": "https://github.com/dotCMS/core/commit/a402bef91250061ea313a320a6088e616b06a109", "message": "#19108 restore normal value", "committedDate": "2020-08-20T19:57:16Z", "type": "commit"}, {"oid": "a3911995cc0ed67638fee2639ba96e6a9f474388", "url": "https://github.com/dotCMS/core/commit/a3911995cc0ed67638fee2639ba96e6a9f474388", "message": "Update DeviceAPI.java", "committedDate": "2020-08-21T21:51:31Z", "type": "commit"}, {"oid": "5b9d006da2be937f9e6f4710bb7f523e12a3e265", "url": "https://github.com/dotCMS/core/commit/5b9d006da2be937f9e6f4710bb7f523e12a3e265", "message": "Merge branch 'master' of github.com:dotCMS/core into issue-19108-implement-view-as-field-graphql-page-api", "committedDate": "2020-08-24T15:16:13Z", "type": "commit"}, {"oid": "752e607d9e4936c1807e4750ca063f814cfb4aa0", "url": "https://github.com/dotCMS/core/commit/752e607d9e4936c1807e4750ca063f814cfb4aa0", "message": "#19108 fix postman test", "committedDate": "2020-08-24T15:17:50Z", "type": "commit"}, {"oid": "1f755aff12f701b4506ea86915c119eddf82f9d4", "url": "https://github.com/dotCMS/core/commit/1f755aff12f701b4506ea86915c119eddf82f9d4", "message": "Merge branch 'issue-19108-implement-view-as-field-graphql-page-api' of github.com:dotCMS/core into issue-19108-implement-view-as-field-graphql-page-api", "committedDate": "2020-08-24T15:19:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc0NDU4Mw==", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r475744583", "bodyText": "Is it OK to return null?", "author": "victoralfaro-dotcms", "createdAt": "2020-08-24T16:34:57Z", "path": "dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.dotcms.device;\n+\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.exception.DotDataException;\n+import com.dotmarketing.exception.DotSecurityException;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.WebKeys;\n+import com.liferay.portal.model.User;\n+import javax.servlet.http.HttpServletRequest;\n+\n+public class DeviceAPIImpl implements DeviceAPI {\n+\n+    @Override\n+    public Contentlet getCurrentDevice(final HttpServletRequest request, final User user)\n+            throws DotDataException {\n+        final String currentDeviceId = (String) request.getSession().\n+                getAttribute(WebKeys.CURRENT_DEVICE);\n+        Contentlet currentDevice = null;\n+\n+        try {\n+            if (currentDeviceId != null) {\n+                currentDevice = APILocator.getContentletAPI().find(currentDeviceId, user,\n+                        false);\n+\n+                if (currentDevice == null) {\n+                    request.getSession().removeAttribute(WebKeys.CURRENT_DEVICE);\n+                }\n+            }\n+        } catch (DotSecurityException e) {\n+            Logger.debug(this.getClass(),\n+                    \"Exception on createViewAsMap exception message: \" + e.getMessage(), e);\n+        }\n+\n+        return currentDevice;", "originalCommit": "1f755aff12f701b4506ea86915c119eddf82f9d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2Mzc3Mw==", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r475763773", "bodyText": "Switched to Optional", "author": "dsilvam", "createdAt": "2020-08-24T17:05:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc0NDU4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce", "chunk": "diff --git a/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java b/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java\nindex d1203291b1..1661b0c228 100644\n--- a/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java\n+++ b/dotCMS/src/main/java/com/dotcms/device/DeviceAPIImpl.java\n\n@@ -7,23 +7,24 @@ import com.dotmarketing.portlets.contentlet.model.Contentlet;\n import com.dotmarketing.util.Logger;\n import com.dotmarketing.util.WebKeys;\n import com.liferay.portal.model.User;\n+import java.util.Optional;\n import javax.servlet.http.HttpServletRequest;\n \n public class DeviceAPIImpl implements DeviceAPI {\n \n     @Override\n-    public Contentlet getCurrentDevice(final HttpServletRequest request, final User user)\n+    public Optional<Contentlet> getCurrentDevice(final HttpServletRequest request, final User user)\n             throws DotDataException {\n         final String currentDeviceId = (String) request.getSession().\n                 getAttribute(WebKeys.CURRENT_DEVICE);\n-        Contentlet currentDevice = null;\n+        Optional<Contentlet> currentDevice = Optional.empty();\n \n         try {\n             if (currentDeviceId != null) {\n-                currentDevice = APILocator.getContentletAPI().find(currentDeviceId, user,\n-                        false);\n+                currentDevice = Optional.ofNullable(APILocator.getContentletAPI().find(currentDeviceId, user,\n+                        false));\n \n-                if (currentDevice == null) {\n+                if (!currentDevice.isPresent()) {\n                     request.getSession().removeAttribute(WebKeys.CURRENT_DEVICE);\n                 }\n             }\n"}}, {"oid": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce", "url": "https://github.com/dotCMS/core/commit/7578e27380659564d45c1d0caa7dfe54fb6eb5ce", "message": "#19108 return optional", "committedDate": "2020-08-24T17:02:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2OTU5OQ==", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r475769599", "bodyText": "Codacy found an issue: The String literal \"persona\" appears 5 times in this file; the first occurrence is on line 137", "author": "dev-dotcms", "createdAt": "2020-08-24T17:15:55Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/business/PageAPIGraphQLTypesProvider.java", "diffHunk": "@@ -114,7 +126,111 @@\n \n         typeMap.put(\"Template\", TypeUtil.createObjectType(\"Template\", templateFields));\n \n+        final Map<String, TypeFetcher> viewAsFields = new HashMap<>();\n+        viewAsFields.put(\"visitor\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Visitor\"),\n+                new PropertyDataFetcher<ViewAsPageStatus>(\"visitor\")));\n+        viewAsFields.put(\"language\", new TypeFetcher(GraphQLTypeReference.typeRef(\"Language\"),\n+                new LanguageDataFetcher()));\n+        viewAsFields.put(\"mode\", new TypeFetcher(GraphQLString,\n+                PropertyDataFetcher.fetching((Function<ViewAsPageStatus, String>)\n+                        (viewAs)->viewAs.getPageMode().name())));\n+        viewAsFields.put(\"persona\", new TypeFetcher(GraphQLTypeReference.typeRef(\"PersonaBaseType\"),", "originalCommit": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2OTYxMg==", "url": "https://github.com/dotCMS/core/pull/19119#discussion_r475769612", "bodyText": "Codacy found an issue: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block", "author": "dev-dotcms", "createdAt": "2020-08-24T17:15:56Z", "path": "dotCMS/src/main/java/com/dotcms/graphql/datafetcher/page/ViewAsDataFetcher.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.dotcms.graphql.datafetcher.page;\n+\n+import com.dotcms.graphql.DotGraphQLContext;\n+import com.dotmarketing.business.APILocator;\n+import com.dotmarketing.portlets.contentlet.model.Contentlet;\n+import com.dotmarketing.portlets.htmlpageasset.business.render.page.ViewAsPageStatus;\n+import com.dotmarketing.portlets.htmlpageasset.model.HTMLPageAsset;\n+import com.dotmarketing.portlets.templates.model.Template;\n+import com.dotmarketing.util.Logger;\n+import com.dotmarketing.util.PageMode;\n+import com.liferay.portal.model.User;\n+import graphql.schema.DataFetcher;\n+import graphql.schema.DataFetchingEnvironment;\n+import java.util.Map;\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ * This DataFetcher returns a {@link Map} representing a {@link Template} associated to the originally\n+ * requested {@link HTMLPageAsset}.\n+ */\n+public class ViewAsDataFetcher implements DataFetcher<ViewAsPageStatus> {\n+    @Override\n+    public ViewAsPageStatus get(final DataFetchingEnvironment environment) throws Exception {\n+        try {\n+            final User user = ((DotGraphQLContext) environment.getContext()).getUser();\n+            final Contentlet contentlet = environment.getSource();\n+            final String pageModeAsString = environment.getArgument(\"pageMode\")\n+                    != null ? environment.getArgument(\"pageMode\") : PageMode.LIVE.name();\n+\n+            final PageMode mode = PageMode.get(pageModeAsString);\n+\n+            final HttpServletRequest request = ((DotGraphQLContext) environment.getContext())\n+                    .getHttpServletRequest();\n+\n+            final HTMLPageAsset pageAsset = APILocator.getHTMLPageAssetAPI()\n+                    .fromContentlet(contentlet);\n+\n+            return APILocator.getHTMLPageAssetRenderedAPI().getViewAsStatus(request,\n+                    mode, pageAsset, user);\n+        } catch (Exception e) {", "originalCommit": "7578e27380659564d45c1d0caa7dfe54fb6eb5ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}