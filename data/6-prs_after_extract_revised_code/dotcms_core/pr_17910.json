{"pr_number": 17910, "pr_title": "#16852 reduce log, adapt tests to new return", "pr_createdAt": "2020-01-24T20:43:16Z", "pr_url": "https://github.com/dotCMS/core/pull/17910", "timeline": [{"oid": "0bccecf272a710f311739f3d840c4e600e16171f", "url": "https://github.com/dotCMS/core/commit/0bccecf272a710f311739f3d840c4e600e16171f", "message": "#16852 reduce log, adapt tests to new return", "committedDate": "2020-01-24T20:35:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0MDU4Ng==", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370840586", "bodyText": "is this line still needed?", "author": "dsilvam", "createdAt": "2020-01-24T21:02:40Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java", "diffHunk": "@@ -19,25 +19,25 @@ public static void prepare() throws Exception {\n     }\n \n     @Test(expected = BadRequestException.class)", "originalCommit": "0bccecf272a710f311739f3d840c4e600e16171f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8", "chunk": "diff --git a/dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java b/dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java\nindex 8aa0d64414..faed69ab87 100644\n--- a/dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java\n+++ b/dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java\n\n@@ -18,13 +18,13 @@ public class TempFileAPITest {\n         IntegrationTestInitService.getInstance().init();\n     }\n \n-    @Test(expected = BadRequestException.class)\n+    @Test\n     public void testValidURL_urlReturn400_throwsException() {\n         final String url =  \"https://raw.githubusercontent.com/url/throws/400.jpg\";\n         assertFalse(APILocator.getTempFileAPI().validUrl(url));\n     }\n \n-    @Test(expected = BadRequestException.class)\n+    @Test\n     public void testValidURL_urlReturn404_throwsException() {\n         final String url =  \"https://raw.githubusercontent.com/dotCMS/core/throws/dotCMS/404.jpg\";\n         assertFalse(APILocator.getTempFileAPI().validUrl(url));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0MDY0Mg==", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370840642", "bodyText": "same as above", "author": "dsilvam", "createdAt": "2020-01-24T21:02:47Z", "path": "dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java", "diffHunk": "@@ -19,25 +19,25 @@ public static void prepare() throws Exception {\n     }\n \n     @Test(expected = BadRequestException.class)\n-    public void testValidURL_urlReturn400_throwsException() throws IOException {\n+    public void testValidURL_urlReturn400_throwsException() {\n         final String url =  \"https://raw.githubusercontent.com/url/throws/400.jpg\";\n-        APILocator.getTempFileAPI().validUrl(url);\n+        assertFalse(APILocator.getTempFileAPI().validUrl(url));\n     }\n \n     @Test(expected = BadRequestException.class)", "originalCommit": "0bccecf272a710f311739f3d840c4e600e16171f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8", "chunk": "diff --git a/dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java b/dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java\nindex 8aa0d64414..faed69ab87 100644\n--- a/dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java\n+++ b/dotCMS/src/integration-test/java/com/dotcms/rest/api/v1/temp/TempFileAPITest.java\n\n@@ -18,13 +18,13 @@ public class TempFileAPITest {\n         IntegrationTestInitService.getInstance().init();\n     }\n \n-    @Test(expected = BadRequestException.class)\n+    @Test\n     public void testValidURL_urlReturn400_throwsException() {\n         final String url =  \"https://raw.githubusercontent.com/url/throws/400.jpg\";\n         assertFalse(APILocator.getTempFileAPI().validUrl(url));\n     }\n \n-    @Test(expected = BadRequestException.class)\n+    @Test\n     public void testValidURL_urlReturn404_throwsException() {\n         final String url =  \"https://raw.githubusercontent.com/dotCMS/core/throws/dotCMS/404.jpg\";\n         assertFalse(APILocator.getTempFileAPI().validUrl(url));\n"}}, {"oid": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8", "url": "https://github.com/dotCMS/core/commit/8da0d78457b5e4396bff27e50ad03c8d775e7ed8", "message": "#16852 code review", "committedDate": "2020-01-24T21:04:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0NzIxNw==", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370847217", "bodyText": "remove this, the method is not throwing a IOException anymore", "author": "freddyucv", "createdAt": "2020-01-24T21:20:17Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java", "diffHunk": "@@ -217,17 +217,20 @@ public DotTempFile createTempFileFromUrl(final String incomingFileName,\n    * @return\n    * @throws IOException", "originalCommit": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0OTc5NQ==", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370849795", "bodyText": "done", "author": "erickgonzalez", "createdAt": "2020-01-24T21:27:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0NzIxNw=="}], "type": "inlineReview", "revised_code": {"commit": "7b7a6eed4d7ea21ad1c93ce3d2c3f0857e98217a", "chunk": "diff --git a/dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java b/dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java\nindex 45d9b8195f..eb4ae86e75 100644\n--- a/dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java\n+++ b/dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java\n\n@@ -212,10 +212,9 @@ public class TempFileAPI {\n   /**\n    * This method receives a URL and checks if starts with http or https,\n    * and also makes a request to the URL and if returns 200 the URL is valid,\n-   * if returns any other response an exception will be thrown\n+   * if returns any other response will be false\n    * @param url\n-   * @return\n-   * @throws IOException\n+   * @return boolean if the url is valid or not\n    */\n   public boolean validUrl(final String url) {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0NzU0MA==", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370847540", "bodyText": "If we don't want this error in the logs I would remove it instead of change it to warn, is not a warning, is an error.\nBut to be honest I don't see the problem on having the extra error log in there.", "author": "jgambarios", "createdAt": "2020-01-24T21:21:12Z", "path": "dotCMS/src/main/java/com/dotmarketing/util/ImportUtil.java", "diffHunk": "@@ -1476,7 +1475,7 @@ private static void importLine ( String[] line, String currentHostId, Structure\n                 }\n             }\n         } catch (Exception e) {\n-            Logger.error(ImportUtil.class,e.getMessage(),e);\n+            Logger.warn(ImportUtil.class,e.getMessage());", "originalCommit": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MDkyOQ==", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370850929", "bodyText": "I thought the same, more logs better but was a Bryan and Will call", "author": "erickgonzalez", "createdAt": "2020-01-24T21:29:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0NzU0MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0Nzk2NA==", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370847964", "bodyText": "We should handle the specific !=200 case instead of just catch any exception, we could be hiding real errors.", "author": "jgambarios", "createdAt": "2020-01-24T21:22:12Z", "path": "dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java", "diffHunk": "@@ -217,17 +217,20 @@ public DotTempFile createTempFileFromUrl(final String incomingFileName,\n    * @return\n    * @throws IOException\n    */\n-  public boolean validUrl(final String url) throws IOException {\n+  public boolean validUrl(final String url) {\n \n     if(!(url.toLowerCase().startsWith(\"http://\") ||\n             url.toLowerCase().startsWith(\"https://\"))){\n       Logger.error(this, \"URL does not starts with http or https\");\n       return false;\n     }\n-\n-    final CircuitBreakerUrl urlGetter =\n-            CircuitBreakerUrl.builder().setMethod(Method.GET).setUrl(url).build();\n-    urlGetter.doString();\n+    try {\n+      final CircuitBreakerUrl urlGetter =\n+              CircuitBreakerUrl.builder().setMethod(Method.GET).setUrl(url).build();\n+      urlGetter.doString();\n+    } catch (Exception e) {//If response is not 200, url is invalid", "originalCommit": "8da0d78457b5e4396bff27e50ad03c8d775e7ed8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MDQwMQ==", "url": "https://github.com/dotCMS/core/pull/17910#discussion_r370850401", "bodyText": "The CircuitBreakerUrl throws BadRequestException or DotRuntimeException, so the only way could be catching both exceptions.", "author": "erickgonzalez", "createdAt": "2020-01-24T21:28:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0Nzk2NA=="}], "type": "inlineReview", "revised_code": {"commit": "7b7a6eed4d7ea21ad1c93ce3d2c3f0857e98217a", "chunk": "diff --git a/dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java b/dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java\nindex 45d9b8195f..eb4ae86e75 100644\n--- a/dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java\n+++ b/dotCMS/src/main/java/com/dotcms/rest/api/v1/temp/TempFileAPI.java\n\n@@ -212,10 +212,9 @@ public class TempFileAPI {\n   /**\n    * This method receives a URL and checks if starts with http or https,\n    * and also makes a request to the URL and if returns 200 the URL is valid,\n-   * if returns any other response an exception will be thrown\n+   * if returns any other response will be false\n    * @param url\n-   * @return\n-   * @throws IOException\n+   * @return boolean if the url is valid or not\n    */\n   public boolean validUrl(final String url) {\n \n"}}, {"oid": "7b7a6eed4d7ea21ad1c93ce3d2c3f0857e98217a", "url": "https://github.com/dotCMS/core/commit/7b7a6eed4d7ea21ad1c93ce3d2c3f0857e98217a", "message": "#16852 code review, better handling exceptions", "committedDate": "2020-01-24T22:05:14Z", "type": "commit"}]}