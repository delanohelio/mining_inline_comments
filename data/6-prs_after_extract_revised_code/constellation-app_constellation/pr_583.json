{"pr_number": 583, "pr_title": "Rest API returns custom error codes and Run_plugin endpoint returns a valid error when an incorrect graph_id is supplied.", "pr_createdAt": "2020-06-17T01:13:45Z", "pr_url": "https://github.com/constellation-app/constellation/pull/583", "timeline": [{"oid": "4b9c1c931a3558c8e79311b58a72900b2db4f31a", "url": "https://github.com/constellation-app/constellation/commit/4b9c1c931a3558c8e79311b58a72900b2db4f31a", "message": "Rest API returns custom error codes", "committedDate": "2020-06-17T00:58:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MjMzNg==", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441252336", "bodyText": "Can you please use the HttpURLConnection class instead of creating these constants?", "author": "arcturus2", "createdAt": "2020-06-17T02:57:36Z", "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/RestService.java", "diffHunk": "@@ -38,9 +38,56 @@\n  * <p>\n  * All services are accessed via RestServiceServlet; see that for more details.\n  *\n+ * This also stores status codes.\n+ * Top section copied from public interface HttpServletResponse.\n+ * \n  * @author algol\n  */\n public abstract class RestService {\n+    public static final int SC_CONTINUE = 100;", "originalCommit": "4b9c1c931a3558c8e79311b58a72900b2db4f31a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwOTMyNw==", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441309327", "bodyText": "422 is not there. Shall I leave only that (and may be other missing ones) in the new class then?", "author": "Auriga2", "createdAt": "2020-06-17T06:29:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MjMzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyNjk2MQ==", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441326961", "bodyText": "Yep @Auriga2. Sorry I didn't realise 422 was not there.", "author": "arcturus2", "createdAt": "2020-06-17T07:08:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MjMzNg=="}], "type": "inlineReview", "revised_code": {"commit": "c2583d5699b6a7734578ed76ae867185bbb24ed9", "chunk": "diff --git a/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/RestService.java b/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/RestService.java\nindex 4de65b047..7a974b2c3 100644\n--- a/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/RestService.java\n+++ b/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/RestService.java\n\n@@ -38,56 +38,15 @@ import java.io.OutputStream;\n  * <p>\n  * All services are accessed via RestServiceServlet; see that for more details.\n  *\n- * This also stores status codes.\n- * Top section copied from public interface HttpServletResponse.\n+ * This also stores status codes that are not available in the \n+ * HttpURLConnection class.\n  * \n  * @author algol\n  */\n public abstract class RestService {\n-    public static final int SC_CONTINUE = 100;\n-    public static final int SC_SWITCHING_PROTOCOLS = 101;\n-    public static final int SC_OK = 200;\n-    public static final int SC_CREATED = 201;\n-    public static final int SC_ACCEPTED = 202;\n-    public static final int SC_NON_AUTHORITATIVE_INFORMATION = 203;\n-    public static final int SC_NO_CONTENT = 204;\n-    public static final int SC_RESET_CONTENT = 205;\n-    public static final int SC_PARTIAL_CONTENT = 206;\n-    public static final int SC_MULTIPLE_CHOICES = 300;\n-    public static final int SC_MOVED_PERMANENTLY = 301;\n-    public static final int SC_MOVED_TEMPORARILY = 302;\n-    public static final int SC_FOUND = 302;\n-    public static final int SC_SEE_OTHER = 303;\n-    public static final int SC_NOT_MODIFIED = 304;\n-    public static final int SC_USE_PROXY = 305;\n-    public static final int SC_TEMPORARY_REDIRECT = 307;\n-    public static final int SC_BAD_REQUEST = 400;\n-    public static final int SC_UNAUTHORIZED = 401;\n-    public static final int SC_PAYMENT_REQUIRED = 402;\n-    public static final int SC_FORBIDDEN = 403;\n-    public static final int SC_NOT_FOUND = 404;\n-    public static final int SC_METHOD_NOT_ALLOWED = 405;\n-    public static final int SC_NOT_ACCEPTABLE = 406;\n-    public static final int SC_PROXY_AUTHENTICATION_REQUIRED = 407;\n-    public static final int SC_REQUEST_TIMEOUT = 408;\n-    public static final int SC_CONFLICT = 409;\n-    public static final int SC_GONE = 410;\n-    public static final int SC_LENGTH_REQUIRED = 411;\n-    public static final int SC_PRECONDITION_FAILED = 412;\n-    public static final int SC_REQUEST_ENTITY_TOO_LARGE = 413;\n-    public static final int SC_REQUEST_URI_TOO_LONG = 414;\n-    public static final int SC_UNSUPPORTED_MEDIA_TYPE = 415;\n-    public static final int SC_REQUESTED_RANGE_NOT_SATISFIABLE = 416;\n-    public static final int SC_EXPECTATION_FAILED = 417;\n-    public static final int SC_INTERNAL_SERVER_ERROR = 500;\n-    public static final int SC_NOT_IMPLEMENTED = 501;\n-    public static final int SC_BAD_GATEWAY = 502;\n-    public static final int SC_SERVICE_UNAVAILABLE = 503;\n-    public static final int SC_GATEWAY_TIMEOUT = 504;\n-    public static final int SC_HTTP_VERSION_NOT_SUPPORTED = 505;\n     \n-    // Custom error codes\n-    public static final int SC_UNPROCESSABLE_ENTITY = 422;\n+    // Status codes that are not available in the HttpURLConnection class\n+    public static final int HTTP_UNPROCESSABLE_ENTITY = 422;\n \n     /**\n      * The name of the service as it appears in the URL to be called.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MzY5OA==", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441253698", "bodyText": "So in here it would be HttpURLConnection.HTTP_OK.\nWhat is the reason to show the message \"Successful\" given the HTTP code will inform this. Does the message appear in the response output?\nAlso if you are going to keep it then its work making the string a constant.", "author": "arcturus2", "createdAt": "2020-06-17T03:03:10Z", "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/services/AddRecordStore.java", "diffHunk": "@@ -182,6 +183,7 @@ public void callService(final PluginParameters parameters, final InputStream in,\n         }\n \n         addToGraph(graphId, rs, completeWithSchema, arrange, resetView);\n+        return new ServiceResponse(SC_OK, \"Successful\"); ", "originalCommit": "4b9c1c931a3558c8e79311b58a72900b2db4f31a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMDU4NQ==", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441310585", "bodyText": "@arcturus2 It's not really used afterwards, as I am processing only if it's not a 200. I just typed it thinking it's better than an empty string. What do you think?", "author": "Auriga2", "createdAt": "2020-06-17T06:32:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MzY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyOTc1OA==", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441329758", "bodyText": "If its not used then how about creating another constructor like this?\npublic ServiceResponse(int errorCode){\n        this.errorCode = errorCode;\n        this.errorMessage = null;\n}", "author": "arcturus2", "createdAt": "2020-06-17T07:14:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MzY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAwNzUzMA==", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r442007530", "bodyText": "Agree, fixed.", "author": "Auriga2", "createdAt": "2020-06-18T06:57:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1MzY5OA=="}], "type": "inlineReview", "revised_code": {"commit": "c2583d5699b6a7734578ed76ae867185bbb24ed9", "chunk": "diff --git a/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/services/AddRecordStore.java b/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/services/AddRecordStore.java\nindex 0077c9200..13f1817c3 100644\n--- a/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/services/AddRecordStore.java\n+++ b/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/services/AddRecordStore.java\n\n@@ -183,7 +184,7 @@ public class AddRecordStore extends RestService {\n         }\n \n         addToGraph(graphId, rs, completeWithSchema, arrange, resetView);\n-        return new ServiceResponse(SC_OK, \"Successful\"); \n+        return new ServiceResponse(HttpURLConnection.HTTP_OK);\n     }\n \n     private static void addToGraph(final String graphId, final RecordStore recordStore, final boolean completeWithSchema, final String arrange, final boolean resetView) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyODE3Ng==", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441328176", "bodyText": "how about statusMessage?", "author": "arcturus2", "createdAt": "2020-06-17T07:11:16Z", "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.webserver.restapi;\n+\n+/**\n+ * This class is used to send custom HTTP error codes generated from the \n+ * callService in webserver.services classes.\n+ */\n+public class ServiceResponse { \n+    private String errorMessage;", "originalCommit": "4b9c1c931a3558c8e79311b58a72900b2db4f31a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c2583d5699b6a7734578ed76ae867185bbb24ed9", "chunk": "diff --git a/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java b/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java\nindex 440d65b8f..8c3cb13d7 100644\n--- a/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java\n+++ b/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java\n\n@@ -16,31 +16,36 @@\n package au.gov.asd.tac.constellation.webserver.restapi;\n \n /**\n- * This class is used to send custom HTTP error codes generated from the \n+ * This class is used to send custom HTTP status codes generated from the \n  * callService in webserver.services classes.\n  */\n public class ServiceResponse { \n-    private String errorMessage;\n-    private int errorCode;\n+    private String statusMessage;\n+    private int statusCode;\n     \n-    public ServiceResponse(int errorCode, String errorMessage){\n-        this.errorCode = errorCode;\n-        this.errorMessage = errorMessage;\n+    public ServiceResponse(int statusCode){\n+        this.statusCode = statusCode;\n+        this.statusMessage = null;\n+    }\n+    \n+    public ServiceResponse(int statusCode, String statusMessage){\n+        this.statusCode = statusCode;\n+        this.statusMessage = statusMessage;\n     }    \n     \n-    public void setErrorCode(int errorCode) {\n-        this.errorCode = errorCode;\n+    public void setStatusCode(int statusCode) {\n+        this.statusCode = statusCode;\n     }\n \n-    public void setErrorMessage(String errorMessage) {\n-        this.errorMessage = errorMessage;\n+    public void setStatusMessage(String statusMessage) {\n+        this.statusMessage = statusMessage;\n     }    \n \n-    public int getErrorCode() {\n-        return errorCode;\n+    public int getStatusCode() {\n+        return statusCode;\n     }\n \n-    public String getErrorMessage() {\n-        return errorMessage;\n+    public String getStatusMessage() {\n+        return statusMessage;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyODQ1MQ==", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r441328451", "bodyText": "how about statusCode given the response is not always when there is an error.", "author": "arcturus2", "createdAt": "2020-06-17T07:11:50Z", "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.webserver.restapi;\n+\n+/**\n+ * This class is used to send custom HTTP error codes generated from the \n+ * callService in webserver.services classes.\n+ */\n+public class ServiceResponse { \n+    private String errorMessage;\n+    private int errorCode;", "originalCommit": "4b9c1c931a3558c8e79311b58a72900b2db4f31a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c2583d5699b6a7734578ed76ae867185bbb24ed9", "chunk": "diff --git a/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java b/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java\nindex 440d65b8f..8c3cb13d7 100644\n--- a/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java\n+++ b/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/restapi/ServiceResponse.java\n\n@@ -16,31 +16,36 @@\n package au.gov.asd.tac.constellation.webserver.restapi;\n \n /**\n- * This class is used to send custom HTTP error codes generated from the \n+ * This class is used to send custom HTTP status codes generated from the \n  * callService in webserver.services classes.\n  */\n public class ServiceResponse { \n-    private String errorMessage;\n-    private int errorCode;\n+    private String statusMessage;\n+    private int statusCode;\n     \n-    public ServiceResponse(int errorCode, String errorMessage){\n-        this.errorCode = errorCode;\n-        this.errorMessage = errorMessage;\n+    public ServiceResponse(int statusCode){\n+        this.statusCode = statusCode;\n+        this.statusMessage = null;\n+    }\n+    \n+    public ServiceResponse(int statusCode, String statusMessage){\n+        this.statusCode = statusCode;\n+        this.statusMessage = statusMessage;\n     }    \n     \n-    public void setErrorCode(int errorCode) {\n-        this.errorCode = errorCode;\n+    public void setStatusCode(int statusCode) {\n+        this.statusCode = statusCode;\n     }\n \n-    public void setErrorMessage(String errorMessage) {\n-        this.errorMessage = errorMessage;\n+    public void setStatusMessage(String statusMessage) {\n+        this.statusMessage = statusMessage;\n     }    \n \n-    public int getErrorCode() {\n-        return errorCode;\n+    public int getStatusCode() {\n+        return statusCode;\n     }\n \n-    public String getErrorMessage() {\n-        return errorMessage;\n+    public String getStatusMessage() {\n+        return statusMessage;\n     }\n }\n"}}, {"oid": "c2583d5699b6a7734578ed76ae867185bbb24ed9", "url": "https://github.com/constellation-app/constellation/commit/c2583d5699b6a7734578ed76ae867185bbb24ed9", "message": "Bug fixes and improvements", "committedDate": "2020-06-18T07:51:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI0NTM0MQ==", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r443245341", "bodyText": "@Auriga2  should the 200 be replaced with HttpURLConnection.HTTP_OK?", "author": "arcturus2", "createdAt": "2020-06-21T18:39:07Z", "path": "CoreWebServer/src/au/gov/asd/tac/constellation/webserver/api/RestServiceServlet.java", "diffHunk": "@@ -101,7 +102,10 @@ private void callService(final HttpMethod httpMethod, final HttpServletRequest r\n         try {\n             response.setContentType(rs.getMimeType());\n             response.setStatus(HttpServletResponse.SC_OK);\n-            rs.callService(parameters, request.getInputStream(), response.getOutputStream());\n+            ServiceResponse serviceResponse = rs.callService(parameters, request.getInputStream(), response.getOutputStream());\n+            if (serviceResponse.getStatusCode()!=200){", "originalCommit": "c2583d5699b6a7734578ed76ae867185bbb24ed9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI3MDM1Mw==", "url": "https://github.com/constellation-app/constellation/pull/583#discussion_r443270353", "bodyText": "Yes Thanks! Fixed.", "author": "Auriga2", "createdAt": "2020-06-22T00:05:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI0NTM0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "fad9e05f24440cfd90ff3685a23dc47eaa2416b6", "chunk": "diff --git a/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/api/RestServiceServlet.java b/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/api/RestServiceServlet.java\nindex d9d4167b0..e89a946d4 100644\n--- a/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/api/RestServiceServlet.java\n+++ b/CoreWebServer/src/au/gov/asd/tac/constellation/webserver/api/RestServiceServlet.java\n\n@@ -103,7 +104,7 @@ public class RestServiceServlet extends ConstellationApiServlet {\n             response.setContentType(rs.getMimeType());\n             response.setStatus(HttpServletResponse.SC_OK);\n             ServiceResponse serviceResponse = rs.callService(parameters, request.getInputStream(), response.getOutputStream());\n-            if (serviceResponse.getStatusCode()!=200){\n+            if (serviceResponse.getStatusCode() != HttpURLConnection.HTTP_OK) {\n                 response.sendError(serviceResponse.getStatusCode(), serviceResponse.getStatusMessage());\n             }\n         } catch (final IOException | RuntimeException ex) {\n"}}, {"oid": "fad9e05f24440cfd90ff3685a23dc47eaa2416b6", "url": "https://github.com/constellation-app/constellation/commit/fad9e05f24440cfd90ff3685a23dc47eaa2416b6", "message": "Minor fix", "committedDate": "2020-06-22T00:05:16Z", "type": "commit"}, {"oid": "38f1a15d49862f5632a747c8d54e700dd9833d9e", "url": "https://github.com/constellation-app/constellation/commit/38f1a15d49862f5632a747c8d54e700dd9833d9e", "message": "Revert \"Minor fix\"\n\nThis reverts commit fad9e05f24440cfd90ff3685a23dc47eaa2416b6.", "committedDate": "2020-06-25T07:15:42Z", "type": "commit"}, {"oid": "25a98dc2009fff59e715e7738969b0bfcae48f15", "url": "https://github.com/constellation-app/constellation/commit/25a98dc2009fff59e715e7738969b0bfcae48f15", "message": "Revert \"Bug fixes and improvements\"\n\nThis reverts commit c2583d5699b6a7734578ed76ae867185bbb24ed9.", "committedDate": "2020-06-25T07:19:01Z", "type": "commit"}, {"oid": "1b2624c254c5abf1b9007f99156fecc0d1ec5984", "url": "https://github.com/constellation-app/constellation/commit/1b2624c254c5abf1b9007f99156fecc0d1ec5984", "message": "Revert \"Rest API returns custom error codes\"\n\nThis reverts commit 4b9c1c931a3558c8e79311b58a72900b2db4f31a.", "committedDate": "2020-06-25T07:19:15Z", "type": "commit"}, {"oid": "f69c20c87b2a7ccde1ce140a13c1347eeecda079", "url": "https://github.com/constellation-app/constellation/commit/f69c20c87b2a7ccde1ce140a13c1347eeecda079", "message": "API returns custom error codes using RestServiceException, and fix the run plugin and set graph endpoints.", "committedDate": "2020-06-26T01:11:22Z", "type": "commit"}, {"oid": "77887040274d0995d133ee713be5365b26cb6a27", "url": "https://github.com/constellation-app/constellation/commit/77887040274d0995d133ee713be5365b26cb6a27", "message": "Fixing rest of the endpoints and some bugs", "committedDate": "2020-07-03T01:07:45Z", "type": "commit"}]}