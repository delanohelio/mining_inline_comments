{"pr_number": 386, "pr_title": "Rule (java) anonymous inner classes containing only one method should become lambdas", "pr_createdAt": "2020-04-01T03:57:55Z", "pr_url": "https://github.com/constellation-app/constellation/pull/386", "timeline": [{"oid": "00d9eff93e4978ca4f8185f7941ff07c4d7e18dd", "url": "https://github.com/constellation-app/constellation/commit/00d9eff93e4978ca4f8185f7941ff07c4d7e18dd", "message": "Update ValueStore.java", "committedDate": "2020-04-01T03:55:27Z", "type": "commit"}, {"oid": "9bde9e2315b9f54271b4fa7f44ce28a9fb1b70df", "url": "https://github.com/constellation-app/constellation/commit/9bde9e2315b9f54271b4fa7f44ce28a9fb1b70df", "message": "Merge branch 'master' into RULE-(Java)-Anonymous-inner-classes-containing-only-one-method-should-become-lambdas", "committedDate": "2020-04-01T03:55:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDk5MQ==", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r401674991", "bodyText": "I wonder what performance/memory complications there are when we remove the static modifier. @formalhaut69 did this have to be done to make it a lambda or was it for another reason?", "author": "arcturus2", "createdAt": "2020-04-01T14:49:21Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "diffHunk": "@@ -67,41 +67,41 @@ public void setObject(final Object value) {\n     }\n \n     public final void save() {\n-        converter.save();\n+        converter.save(access);\n     }\n \n-    private static interface Saver extends Serializable {", "originalCommit": "00d9eff93e4978ca4f8185f7941ff07c4d7e18dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc0OTY1MQ==", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r401749651", "bodyText": "https://gitter.im/constellation-app/community?at=5e83ebd9b6d72077bcabfe17\n\n@cygnus-x-1 I've just caught up on the chat in Gitter. For my understanding, can you explain why having the static is bad design?", "author": "arcturus2", "createdAt": "2020-04-01T16:31:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDk5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAyODc5NA==", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r402028794", "bodyText": "@cygnus-x-1 I've just caught up on the chat in Gitter. For my understanding, can you explain why having the static is bad design?\n\nHaving an inner static Interface like that is not inherently bad design (although it does imply it's supposed to be used outside this class); the bad design part was then having it rely on a variable of its outer class, as that variable will only exist when that outer class is instantiated.", "author": "cygnus-x-1", "createdAt": "2020-04-02T03:16:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDk5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c0d0cbc57374e8abe20baca775fdc4a46284fb64", "chunk": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java\nindex 2a8662f19..74aa0c03f 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java\n\n@@ -72,36 +72,36 @@ public final class ValueStore implements ParameterWriteAccess, Serializable {\n \n     private interface Saver extends Serializable {\n         \n-        public void save(ParameterWriteAccess PWA);\n+        public void save(final ParameterWriteAccess PWA);\n     }\n \n     private final Saver INT_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setInt(i);\n         }\n     };\n     private final Saver LONG_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setLong(l);\n         }\n     };\n     private final Saver FLOAT_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setFloat(f);\n         }\n     };\n     private final Saver DOUBLE_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setDouble(d);\n         }\n     };\n     private final Saver OBJECT_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setObject(o);\n         }\n     };\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NTgwOQ==", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r401675809", "bodyText": "Can these be a final parameter?", "author": "arcturus2", "createdAt": "2020-04-01T14:50:24Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "diffHunk": "@@ -67,41 +67,41 @@ public void setObject(final Object value) {\n     }\n \n     public final void save() {\n-        converter.save();\n+        converter.save(access);\n     }\n \n-    private static interface Saver extends Serializable {\n-\n-        public void save();\n+    private interface Saver extends Serializable {\n+        \n+        public void save(ParameterWriteAccess PWA);", "originalCommit": "00d9eff93e4978ca4f8185f7941ff07c4d7e18dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1MTgyNw==", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r401951827", "bodyText": "Yeah, sorry I keep forgetting to do that", "author": "formalhaut69", "createdAt": "2020-04-01T22:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NTgwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAyNzk3NQ==", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r402027975", "bodyText": "Also an all uppercase variable name like that is not good Java style.", "author": "cygnus-x-1", "createdAt": "2020-04-02T03:12:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NTgwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "c0d0cbc57374e8abe20baca775fdc4a46284fb64", "chunk": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java\nindex 2a8662f19..74aa0c03f 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java\n\n@@ -72,36 +72,36 @@ public final class ValueStore implements ParameterWriteAccess, Serializable {\n \n     private interface Saver extends Serializable {\n         \n-        public void save(ParameterWriteAccess PWA);\n+        public void save(final ParameterWriteAccess PWA);\n     }\n \n     private final Saver INT_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setInt(i);\n         }\n     };\n     private final Saver LONG_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setLong(l);\n         }\n     };\n     private final Saver FLOAT_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setFloat(f);\n         }\n     };\n     private final Saver DOUBLE_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setDouble(d);\n         }\n     };\n     private final Saver OBJECT_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setObject(o);\n         }\n     };\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4MDE2MA==", "url": "https://github.com/constellation-app/constellation/pull/386#discussion_r401680160", "bodyText": "A minor comment but when possible please review your NetBeans 11 settings and consider changing it to trim trailing whitespaces.", "author": "arcturus2", "createdAt": "2020-04-01T14:56:07Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java", "diffHunk": "@@ -67,41 +67,41 @@ public void setObject(final Object value) {\n     }\n \n     public final void save() {\n-        converter.save();\n+        converter.save(access);\n     }\n \n-    private static interface Saver extends Serializable {\n-\n-        public void save();\n+    private interface Saver extends Serializable {\n+        ", "originalCommit": "00d9eff93e4978ca4f8185f7941ff07c4d7e18dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c0d0cbc57374e8abe20baca775fdc4a46284fb64", "chunk": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java\nindex 2a8662f19..74aa0c03f 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/ValueStore.java\n\n@@ -72,36 +72,36 @@ public final class ValueStore implements ParameterWriteAccess, Serializable {\n \n     private interface Saver extends Serializable {\n         \n-        public void save(ParameterWriteAccess PWA);\n+        public void save(final ParameterWriteAccess PWA);\n     }\n \n     private final Saver INT_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setInt(i);\n         }\n     };\n     private final Saver LONG_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setLong(l);\n         }\n     };\n     private final Saver FLOAT_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setFloat(f);\n         }\n     };\n     private final Saver DOUBLE_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setDouble(d);\n         }\n     };\n     private final Saver OBJECT_CONVERTER = new Saver() {\n         @Override\n-        public void save(ParameterWriteAccess access) {\n+        public void save(final ParameterWriteAccess access) {\n             access.setObject(o);\n         }\n     };\n"}}, {"oid": "c0d0cbc57374e8abe20baca775fdc4a46284fb64", "url": "https://github.com/constellation-app/constellation/commit/c0d0cbc57374e8abe20baca775fdc4a46284fb64", "message": "Update to ValueStore.java\n\nAdded the final modifier", "committedDate": "2020-04-01T22:46:57Z", "type": "commit"}, {"oid": "662870d58a4466d799d772d2e6a8b911ca4dfb29", "url": "https://github.com/constellation-app/constellation/commit/662870d58a4466d799d772d2e6a8b911ca4dfb29", "message": "Updated WebViewer\n\nReplaced with a Lambda expression", "committedDate": "2020-04-02T00:37:14Z", "type": "commit"}, {"oid": "1afdddec02abd5fd23a8cceec36d1ee76c2dcd43", "url": "https://github.com/constellation-app/constellation/commit/1afdddec02abd5fd23a8cceec36d1ee76c2dcd43", "message": "Merge branch 'master' into RULE-(Java)-Anonymous-inner-classes-containing-only-one-method-should-become-lambdas", "committedDate": "2020-04-02T03:20:14Z", "type": "commit"}, {"oid": "2514eaaa505e7720de8aedeb251ec592aa1c925c", "url": "https://github.com/constellation-app/constellation/commit/2514eaaa505e7720de8aedeb251ec592aa1c925c", "message": "Update to variable name", "committedDate": "2020-04-02T04:01:53Z", "type": "commit"}, {"oid": "ab6bb80ccef58efe8f479512acd84cd421ef8937", "url": "https://github.com/constellation-app/constellation/commit/ab6bb80ccef58efe8f479512acd84cd421ef8937", "message": "Merge branch 'master' into RULE-(Java)-Anonymous-inner-classes-containing-only-one-method-should-become-lambdas", "committedDate": "2020-04-06T04:18:29Z", "type": "commit"}]}