{"pr_number": 459, "pr_title": "Compiler warnings part 1", "pr_createdAt": "2020-04-23T23:11:17Z", "pr_url": "https://github.com/constellation-app/constellation/pull/459", "timeline": [{"oid": "994854fa025e232c3a06e6dbceccce1eae4f036d", "url": "https://github.com/constellation-app/constellation/commit/994854fa025e232c3a06e6dbceccce1eae4f036d", "message": "handled most of the compiler warnings in Analytic view", "committedDate": "2020-04-23T04:12:29Z", "type": "commit"}, {"oid": "ac28f92a2ed4b4e23e42e108f8fa8589cd5cb487", "url": "https://github.com/constellation-app/constellation/commit/ac28f92a2ed4b4e23e42e108f8fa8589cd5cb487", "message": "Merge branch 'master' into compiler-warnings", "committedDate": "2020-04-23T04:20:58Z", "type": "commit"}, {"oid": "7cc19d9b8538bad23db85893b1fa36be983923b7", "url": "https://github.com/constellation-app/constellation/commit/7cc19d9b8538bad23db85893b1fa36be983923b7", "message": "handled compiler warnings in arrangement plugins module", "committedDate": "2020-04-23T05:04:10Z", "type": "commit"}, {"oid": "77cd0d53ca7c23c1ccaebf71eee7757ac090e9f6", "url": "https://github.com/constellation-app/constellation/commit/77cd0d53ca7c23c1ccaebf71eee7757ac090e9f6", "message": "handled most compiler warnings for attribute calculator view module", "committedDate": "2020-04-23T05:22:12Z", "type": "commit"}, {"oid": "18c5162e3a7187e64524fcee7d21fec74b81d8b9", "url": "https://github.com/constellation-app/constellation/commit/18c5162e3a7187e64524fcee7d21fec74b81d8b9", "message": "handled most of compiler warnings in attribute editor view module", "committedDate": "2020-04-23T23:05:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5ODAyNg==", "url": "https://github.com/constellation-app/constellation/pull/459#discussion_r414198026", "bodyText": "I'd assume this can just be ListView<>?", "author": "cygnus-x-1", "createdAt": "2020-04-23T23:48:34Z", "path": "CoreAnalyticView/src/au/gov/asd/tac/constellation/views/analyticview/AnalyticConfigurationPane.java", "diffHunk": "@@ -143,7 +143,7 @@ public AnalyticConfigurationPane() {\n                 .map(plugin -> plugin.getPlugin().getResultType())\n                 .collect(Collectors.toSet()).size() <= 1) :\n                 \"A category should be populated only with analytics of the same result type.\";\n-        this.categoryList = new ListView();\n+        this.categoryList = new ListView<String>();", "originalCommit": "18c5162e3a7187e64524fcee7d21fec74b81d8b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5OTg5NQ==", "url": "https://github.com/constellation-app/constellation/pull/459#discussion_r414199895", "bodyText": "Yep will be fixed in the next commit", "author": "antares1470", "createdAt": "2020-04-23T23:53:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5ODAyNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMyMDQzMw==", "url": "https://github.com/constellation-app/constellation/pull/459#discussion_r414320433", "bodyText": "\"raw\"", "author": "arcturus2", "createdAt": "2020-04-24T06:13:10Z", "path": "CoreAnalyticView/src/au/gov/asd/tac/constellation/views/analyticview/translators/AnalyticTranslator.java", "diffHunk": "@@ -41,5 +41,6 @@ public void setResult(final R result) {\n \n     public abstract String getName();\n \n+    @SuppressWarnings(\"rawtypes\") //taw type needed for AnyToReport implementation", "originalCommit": "18c5162e3a7187e64524fcee7d21fec74b81d8b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMyMjExOA==", "url": "https://github.com/constellation-app/constellation/pull/459#discussion_r414322118", "bodyText": "\ud83d\udc4d", "author": "arcturus2", "createdAt": "2020-04-24T06:17:04Z", "path": "CoreArrangementPlugins/src/au/gov/asd/tac/constellation/plugins/arrangements/planar/PQTree.java", "diffHunk": "@@ -31,25 +33,22 @@\n     private PQNode root;\n     private PQNode pertinentRoot;\n     private int currentNumber;\n-    private Set<PQNode>[] leaves;\n+    private List<Set<PQNode>> leaves;\n     private PQNode directionIndicatorLocation = null;\n     private int numPertinentLeaves;\n \n     public void addLeaves(final PQNode toNode, final List<Integer> childNums) {\n         for (int i : childNums) {\n             PQNode leaf = new PQNode(NodeType.LEAF_NODE, i, currentNumber);\n             toNode.addChild(leaf);\n-            leaves[i - 1].add(leaf);\n+            leaves.get(i - 1).add(leaf);\n         }\n     }\n \n     public PQTree(final int numberNodes) {\n         currentNumber = 1;\n         this.root = new PQNode(NodeType.PNODE);\n-        leaves = new Set[numberNodes];\n-        for (int i = 0; i < numberNodes; i++) {\n-            leaves[i] = new HashSet<>();\n-        }\n+        leaves = new ArrayList<>(Collections.nCopies(numberNodes, new HashSet<>()));", "originalCommit": "18c5162e3a7187e64524fcee7d21fec74b81d8b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}