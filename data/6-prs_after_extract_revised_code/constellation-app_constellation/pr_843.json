{"pr_number": 843, "pr_title": "Adding unit testing for attribute descriptions", "pr_createdAt": "2020-09-08T07:11:41Z", "pr_url": "https://github.com/constellation-app/constellation/pull/843", "timeline": [{"oid": "749a66dbb054e9742ec06ec9fa660cbf55db36d2", "url": "https://github.com/constellation-app/constellation/commit/749a66dbb054e9742ec06ec9fa660cbf55db36d2", "message": ":green_heart: Adding unit testing for attribute descriptions", "committedDate": "2020-09-08T07:08:37Z", "type": "commit"}, {"oid": "c1267f6b4703ecfbd28f42015e1c1295c3478f6e", "url": "https://github.com/constellation-app/constellation/commit/c1267f6b4703ecfbd28f42015e1c1295c3478f6e", "message": ":green_heart: Adding another test\n* Trying to trigger Travis to kick off a SonarQube job", "committedDate": "2020-09-08T07:27:17Z", "type": "commit"}, {"oid": "b175221c09c87c97e25f0332d8c1aa29b5935809", "url": "https://github.com/constellation-app/constellation/commit/b175221c09c87c97e25f0332d8c1aa29b5935809", "message": ":white_check_mark: Adding more unit tests", "committedDate": "2020-09-08T10:31:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyNzczMw==", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r485227733", "bodyText": "Should this have an assert to check if it was set correctly?", "author": "aldebaran30701", "createdAt": "2020-09-08T22:22:59Z", "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);", "originalCommit": "b175221c09c87c97e25f0332d8c1aa29b5935809", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxMTczMw==", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r512311733", "bodyText": "Updated thanks so much for the feedback", "author": "arcturus2", "createdAt": "2020-10-26T22:40:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyNzczMw=="}], "type": "inlineReview", "revised_code": {"commit": "fd062d215420e35145ee83cfb5fdf0989b4c0e72", "chunk": "diff --git a/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java b/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java\nindex 19464bfb8..2d280c991 100644\n--- a/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java\n+++ b/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java\n\n@@ -1,12 +1,12 @@\n /*\n  * Copyright 2010-2020 Australian Signals Directorate\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *     http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyNzg0NQ==", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r485227845", "bodyText": "Should this have an assert to check if it was set correctly?", "author": "aldebaran30701", "createdAt": "2020-09-08T22:23:16Z", "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);\n+    }\n+\n+    /**\n+     * Test of getCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetCapacity() {\n+        int expResult = 1;\n+        int result = instance.getCapacity();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetCapacity() {\n+        int capacity = 0;\n+        instance.setCapacity(capacity);", "originalCommit": "b175221c09c87c97e25f0332d8c1aa29b5935809", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxMTkxMQ==", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r512311911", "bodyText": "Updated", "author": "arcturus2", "createdAt": "2020-10-26T22:41:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyNzg0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "fd062d215420e35145ee83cfb5fdf0989b4c0e72", "chunk": "diff --git a/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java b/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java\nindex 19464bfb8..2d280c991 100644\n--- a/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java\n+++ b/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java\n\n@@ -1,12 +1,12 @@\n /*\n  * Copyright 2010-2020 Australian Signals Directorate\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *     http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyODcyOA==", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r485228728", "bodyText": "Should this have an assert to check if it was set correctly?\nQuite a few more it seems, I wont add review for all. If it does need attention then I'd say just go through the tests.", "author": "aldebaran30701", "createdAt": "2020-09-08T22:25:36Z", "path": "CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java", "diffHunk": "@@ -0,0 +1,461 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.graph.attribute;\n+\n+import au.gov.asd.tac.constellation.graph.GraphReadMethods;\n+import au.gov.asd.tac.constellation.graph.NativeAttributeType;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterReadAccess;\n+import au.gov.asd.tac.constellation.graph.locking.ParameterWriteAccess;\n+import au.gov.asd.tac.constellation.graph.utilities.MultiValueStore;\n+import static org.testng.Assert.*;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author arcturus\n+ */\n+public class BooleanAttributeDescriptionNGTest {\n+\n+    BooleanAttributeDescription instance;\n+\n+    public BooleanAttributeDescriptionNGTest() {\n+    }\n+\n+    @BeforeClass\n+    public static void setUpClass() throws Exception {\n+    }\n+\n+    @AfterClass\n+    public static void tearDownClass() throws Exception {\n+    }\n+\n+    @BeforeMethod\n+    public void setUpMethod() throws Exception {\n+        instance = new BooleanAttributeDescription();\n+        instance.setCapacity(1);\n+    }\n+\n+    @AfterMethod\n+    public void tearDownMethod() throws Exception {\n+    }\n+\n+    /**\n+     * Test of getName method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetName() {\n+        String expResult = \"boolean\";\n+        String result = instance.getName();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeClass method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeClass() {\n+        Class expResult = boolean.class;\n+        Class result = instance.getNativeClass();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getNativeType method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetNativeType() {\n+        NativeAttributeType expResult = NativeAttributeType.BOOLEAN;\n+        NativeAttributeType result = instance.getNativeType();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of getDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetDefault() {\n+        Object expResult = false;\n+        Object result = instance.getDefault();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setDefault method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetDefault() {\n+        Object value = null;\n+        instance.setDefault(value);\n+    }\n+\n+    /**\n+     * Test of getCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetCapacity() {\n+        int expResult = 1;\n+        int result = instance.getCapacity();\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setCapacity method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetCapacity() {\n+        int capacity = 0;\n+        instance.setCapacity(capacity);\n+    }\n+\n+    /**\n+     * Test of getByte method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testGetByte() {\n+        int id = 0;\n+        byte expResult = 0;\n+        byte result = instance.getByte(id);\n+        assertEquals(result, expResult);\n+    }\n+\n+    /**\n+     * Test of setByte method, of class BooleanAttributeDescription.\n+     */\n+    @Test\n+    public void testSetByte() {\n+        int id = 0;\n+        byte value = 0;\n+        instance.setByte(id, value);", "originalCommit": "b175221c09c87c97e25f0332d8c1aa29b5935809", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMxMjUxNA==", "url": "https://github.com/constellation-app/constellation/pull/843#discussion_r512312514", "bodyText": "Yep updated most of them and ready for a review @aldebaran30701. I might continue with more tests down the track but would like to get whats done in if thats ok.", "author": "arcturus2", "createdAt": "2020-10-26T22:42:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIyODcyOA=="}], "type": "inlineReview", "revised_code": {"commit": "fd062d215420e35145ee83cfb5fdf0989b4c0e72", "chunk": "diff --git a/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java b/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java\nindex 19464bfb8..2d280c991 100644\n--- a/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java\n+++ b/CoreGraphFramework/test/unit/src/au/gov/asd/tac/constellation/graph/attribute/BooleanAttributeDescriptionNGTest.java\n\n@@ -1,12 +1,12 @@\n /*\n  * Copyright 2010-2020 Australian Signals Directorate\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *     http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"}}, {"oid": "fd062d215420e35145ee83cfb5fdf0989b4c0e72", "url": "https://github.com/constellation-app/constellation/commit/fd062d215420e35145ee83cfb5fdf0989b4c0e72", "message": "Adding more unit tests to attribute descriptions", "committedDate": "2020-10-07T02:47:44Z", "type": "commit"}, {"oid": "8cd750e376cf4244b0315b7da162ec5780b16f99", "url": "https://github.com/constellation-app/constellation/commit/8cd750e376cf4244b0315b7da162ec5780b16f99", "message": "Added some further unit tests", "committedDate": "2020-10-27T06:50:47Z", "type": "commit"}, {"oid": "7924ba345a6cca8345eef07553853f320ffcc627", "url": "https://github.com/constellation-app/constellation/commit/7924ba345a6cca8345eef07553853f320ffcc627", "message": "Make sure this is a long", "committedDate": "2020-10-28T01:15:48Z", "type": "commit"}]}