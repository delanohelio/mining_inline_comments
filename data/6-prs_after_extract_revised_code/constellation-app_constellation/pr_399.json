{"pr_number": 399, "pr_title": "layers-view-nb11", "pr_createdAt": "2020-04-03T11:10:48Z", "pr_url": "https://github.com/constellation-app/constellation/pull/399", "timeline": [{"oid": "208a245dc9fb9e034609fe790ed26c5a30f9edad", "url": "https://github.com/constellation-app/constellation/commit/208a245dc9fb9e034609fe790ed26c5a30f9edad", "message": "RULE (Java) Asserts should not be used to check the parameters of a public method\n\nMake changes to conform to this rule", "committedDate": "2020-03-25T03:52:04Z", "type": "commit"}, {"oid": "7aa602b2f0476fa2956d177b2fec3fdacd931aad", "url": "https://github.com/constellation-app/constellation/commit/7aa602b2f0476fa2956d177b2fec3fdacd931aad", "message": "Update MarkerUtilities.java", "committedDate": "2020-03-25T03:55:30Z", "type": "commit"}, {"oid": "820d457b80c302580f065cb1d4255466fd38d4b7", "url": "https://github.com/constellation-app/constellation/commit/820d457b80c302580f065cb1d4255466fd38d4b7", "message": "Add proper regex input to ExtractWordsFromTextPlugin; refactor some code.", "committedDate": "2020-03-25T12:45:16Z", "type": "commit"}, {"oid": "30a23595e98a8ee6aced60ab5ae23843c1229a6d", "url": "https://github.com/constellation-app/constellation/commit/30a23595e98a8ee6aced60ab5ae23843c1229a6d", "message": "first set of public fields made private", "committedDate": "2020-03-25T21:21:10Z", "type": "commit"}, {"oid": "d64cea12ddfbde7145259686218f706ccc97ea10", "url": "https://github.com/constellation-app/constellation/commit/d64cea12ddfbde7145259686218f706ccc97ea10", "message": "Merge branch 'master-nb11' into public-fields", "committedDate": "2020-03-25T21:35:34Z", "type": "commit"}, {"oid": "7486f9ab2bce1a07b16f642e77c696075cfcb3c8", "url": "https://github.com/constellation-app/constellation/commit/7486f9ab2bce1a07b16f642e77c696075cfcb3c8", "message": "more public fields made private", "committedDate": "2020-03-26T02:06:56Z", "type": "commit"}, {"oid": "8300402524b46808cbceaeff107be82618cab00f", "url": "https://github.com/constellation-app/constellation/commit/8300402524b46808cbceaeff107be82618cab00f", "message": "Merge branch 'master-nb11' into public-fields", "committedDate": "2020-03-26T02:09:10Z", "type": "commit"}, {"oid": "b2705b1d102e8bd2f7b59d69feda11d3d43f782c", "url": "https://github.com/constellation-app/constellation/commit/b2705b1d102e8bd2f7b59d69feda11d3d43f782c", "message": "Merge pull request #297 from constellation-app/master-nb11\n\nUpgrade master to NB 11 JDK 11", "committedDate": "2020-03-26T02:13:21Z", "type": "commit"}, {"oid": "26118c7c32aec0381981bd51100f4063305b5c00", "url": "https://github.com/constellation-app/constellation/commit/26118c7c32aec0381981bd51100f4063305b5c00", "message": ":memo: Update greetings\n\n* Removed the reference to point to master-nb11 now that it's been merged.", "committedDate": "2020-03-26T02:16:15Z", "type": "commit"}, {"oid": "fe8f3048f6f11ad97a69bd3b2ab4462c9332c647", "url": "https://github.com/constellation-app/constellation/commit/fe8f3048f6f11ad97a69bd3b2ab4462c9332c647", "message": "RULE (Java) Assignments should not be made from within sub-expressions\n\nMade changes to conform to the rule", "committedDate": "2020-03-26T04:35:57Z", "type": "commit"}, {"oid": "a0d0ced2a1f1ea3b93a6b9856b026f339e732203", "url": "https://github.com/constellation-app/constellation/commit/a0d0ced2a1f1ea3b93a6b9856b026f339e732203", "message": "New run_plugins service; ExtractWordsFromTextPlugin updated.\n\nMultiple plugins can be run serially or in parallel. The Python\nclient has been updated to match.\n\nI used ExtractWordsFromTextPlugin to test the new service,\nso I updated it along the way.", "committedDate": "2020-03-26T04:44:58Z", "type": "commit"}, {"oid": "5d43e9e3f686f20dd00d0b09b87db0e739c3dbb5", "url": "https://github.com/constellation-app/constellation/commit/5d43e9e3f686f20dd00d0b09b87db0e739c3dbb5", "message": "Merge branch 'master-nb11' into master-nb11-rest-service", "committedDate": "2020-03-26T04:48:59Z", "type": "commit"}, {"oid": "ffea68a49f296efd401d93c9590f689fc6e929cc", "url": "https://github.com/constellation-app/constellation/commit/ffea68a49f296efd401d93c9590f689fc6e929cc", "message": "more public fields made private", "committedDate": "2020-03-26T05:04:27Z", "type": "commit"}, {"oid": "0421131ba8ca76deb5a3f61bc26ffea96dfb6da9", "url": "https://github.com/constellation-app/constellation/commit/0421131ba8ca76deb5a3f61bc26ffea96dfb6da9", "message": "Increase the default sphere size and add some random blazes.", "committedDate": "2020-03-26T11:16:16Z", "type": "commit"}, {"oid": "e6ee6cb16f8f226480966c5652f69636ad0358d8", "url": "https://github.com/constellation-app/constellation/commit/e6ee6cb16f8f226480966c5652f69636ad0358d8", "message": "Merge pull request #370 from constellation-app/sphere-tidy\n\nIncrease the default sphere size and add some random blazes.", "committedDate": "2020-03-26T22:33:50Z", "type": "commit"}, {"oid": "bbcec50541c66da051e52f5d9854eeb1b94f1694", "url": "https://github.com/constellation-app/constellation/commit/bbcec50541c66da051e52f5d9854eeb1b94f1694", "message": "Merge pull request #367 from constellation-app/RULE-(Java)-Assignments-should-not-be-made-from-within-sub-expressions\n\nRULE (Java) Assignments should not be made from within sub-expressions", "committedDate": "2020-03-26T22:34:22Z", "type": "commit"}, {"oid": "af3bbb88cfa15712ee88b306457df82bc5777512", "url": "https://github.com/constellation-app/constellation/commit/af3bbb88cfa15712ee88b306457df82bc5777512", "message": "Merge pull request #371 from constellation-app/master-nb11\n\nMaster nb11", "committedDate": "2020-03-26T22:35:27Z", "type": "commit"}, {"oid": "4f217ee557ab4e925d86890d037554971b33a8fd", "url": "https://github.com/constellation-app/constellation/commit/4f217ee557ab4e925d86890d037554971b33a8fd", "message": "Merge pull request #361 from constellation-app/RULE-(Java)-Asserts-should-not-be-used-to-check-the-parameters-of-a-public-method\n\nRule (java) asserts should not be used to check the parameters of a public method", "committedDate": "2020-03-26T23:35:22Z", "type": "commit"}, {"oid": "2fc1e35a1af913a2d542c732345d7de4e64a943a", "url": "https://github.com/constellation-app/constellation/commit/2fc1e35a1af913a2d542c732345d7de4e64a943a", "message": "REST API calls now have no delay; new Sleep* plugins for testing REST calls; REST server tidying.", "committedDate": "2020-03-27T05:27:18Z", "type": "commit"}, {"oid": "ca396bb5fc5b132c26247afb690754c41a21d65f", "url": "https://github.com/constellation-app/constellation/commit/ca396bb5fc5b132c26247afb690754c41a21d65f", "message": "Merge branch 'master' into master-nb11-rest-service", "committedDate": "2020-03-27T05:29:17Z", "type": "commit"}, {"oid": "cd8a5c2290938df1de24ed2d83960d85e34ad038", "url": "https://github.com/constellation-app/constellation/commit/cd8a5c2290938df1de24ed2d83960d85e34ad038", "message": "Fix stupid CONSTANT name.", "committedDate": "2020-03-27T05:38:50Z", "type": "commit"}, {"oid": "064749a7c6e2742f7fbacbd5c6054cfbec1ef3b1", "url": "https://github.com/constellation-app/constellation/commit/064749a7c6e2742f7fbacbd5c6054cfbec1ef3b1", "message": "Fixed a parameter name.", "committedDate": "2020-03-27T05:46:35Z", "type": "commit"}, {"oid": "462ebd77760746ec4a0178932e2a4f5a5b0a98a9", "url": "https://github.com/constellation-app/constellation/commit/462ebd77760746ec4a0178932e2a4f5a5b0a98a9", "message": "Sonar fixes.", "committedDate": "2020-03-27T06:22:29Z", "type": "commit"}, {"oid": "ced81402886952206b78b1c47a7dc72185b6bb99", "url": "https://github.com/constellation-app/constellation/commit/ced81402886952206b78b1c47a7dc72185b6bb99", "message": ":memo: Remove reference to master-nb11", "committedDate": "2020-03-27T20:28:23Z", "type": "commit"}, {"oid": "a0c0545981dfeffac5a7ae879a52c4104fbb98ac", "url": "https://github.com/constellation-app/constellation/commit/a0c0545981dfeffac5a7ae879a52c4104fbb98ac", "message": ":art: Minor formatting improvement", "committedDate": "2020-03-27T20:59:16Z", "type": "commit"}, {"oid": "39931d46dbccb8c89e0ecfb2734302f180a3511f", "url": "https://github.com/constellation-app/constellation/commit/39931d46dbccb8c89e0ecfb2734302f180a3511f", "message": ":memo: Minor wording improvement", "committedDate": "2020-03-27T21:01:18Z", "type": "commit"}, {"oid": "bf3f89736aadae185eb3cdcf0722be3b65961385", "url": "https://github.com/constellation-app/constellation/commit/bf3f89736aadae185eb3cdcf0722be3b65961385", "message": ":memo: Minor wording update regarding NB 11", "committedDate": "2020-03-28T16:55:11Z", "type": "commit"}, {"oid": "f79ffd0cfcff5a1ce46e923a219147f39bed2536", "url": "https://github.com/constellation-app/constellation/commit/f79ffd0cfcff5a1ce46e923a219147f39bed2536", "message": "finished fixing public fields problem", "committedDate": "2020-03-31T00:59:48Z", "type": "commit"}, {"oid": "d44415821de94f4f7932852a619e9d21f1030854", "url": "https://github.com/constellation-app/constellation/commit/d44415821de94f4f7932852a619e9d21f1030854", "message": "Merge branch 'master' into public-fields", "committedDate": "2020-03-31T02:27:40Z", "type": "commit"}, {"oid": "9da578ab3ef85b196e3af1ebf7d59fe21cbcacbc", "url": "https://github.com/constellation-app/constellation/commit/9da578ab3ef85b196e3af1ebf7d59fe21cbcacbc", "message": "Update to ZoneDateTimeAxis", "committedDate": "2020-03-31T02:51:33Z", "type": "commit"}, {"oid": "3b45adbd615625a6c9c3477571fecf3fd9102410", "url": "https://github.com/constellation-app/constellation/commit/3b45adbd615625a6c9c3477571fecf3fd9102410", "message": "static calls now call from base class", "committedDate": "2020-03-31T03:19:52Z", "type": "commit"}, {"oid": "23d63a6f2590e3b2d698f60f168f5ee84c961e58", "url": "https://github.com/constellation-app/constellation/commit/23d63a6f2590e3b2d698f60f168f5ee84c961e58", "message": "fixed some sonar rules missed in previous PRs", "committedDate": "2020-03-31T03:59:35Z", "type": "commit"}, {"oid": "f61fc5bbfdbf48ac294ceb1ef3fffcc997abd8a0", "url": "https://github.com/constellation-app/constellation/commit/f61fc5bbfdbf48ac294ceb1ef3fffcc997abd8a0", "message": "replaced multiple catches with either multi-catch or removed need for a catch", "committedDate": "2020-03-31T04:10:48Z", "type": "commit"}, {"oid": "c5fa7d42bf6428c3df2ecf06b3f7fa9f2a564bb0", "url": "https://github.com/constellation-app/constellation/commit/c5fa7d42bf6428c3df2ecf06b3f7fa9f2a564bb0", "message": "removed static modifier from enums", "committedDate": "2020-03-31T04:26:40Z", "type": "commit"}, {"oid": "0ce53701c0907ec579740bcc9b099aa3a37709c3", "url": "https://github.com/constellation-app/constellation/commit/0ce53701c0907ec579740bcc9b099aa3a37709c3", "message": ":green_heart: Stale detection action workflow\n\nAdd a stale detection action workflow that will run once a day. With the growing number of issue and PRs we need to keep on top of them and make sure we don't let them hang around forever or be forgotten about.\r\n\r\nThis is a very lenient numbers and hopefully we don't see this too often!", "committedDate": "2020-03-31T11:29:30Z", "type": "commit"}, {"oid": "20aa9f677ce4077ad08f8cc2c1a900f1c62e17c2", "url": "https://github.com/constellation-app/constellation/commit/20aa9f677ce4077ad08f8cc2c1a900f1c62e17c2", "message": "Merge pull request #382 from constellation-app/public-fields\n\nPublic fields", "committedDate": "2020-03-31T12:20:35Z", "type": "commit"}, {"oid": "93ab3e729bfb7f483ce0e538fd385449ffb48d41", "url": "https://github.com/constellation-app/constellation/commit/93ab3e729bfb7f483ce0e538fd385449ffb48d41", "message": "Merge pull request #383 from constellation-app/RULE---Java-Return-values-from-functions-without-side-effects-should-not-be-ignored\n\nRULE - Java Return values from functions without side effects should not be ignored", "committedDate": "2020-03-31T12:21:39Z", "type": "commit"}, {"oid": "bf640966168210e880beddc54814a45498a4404f", "url": "https://github.com/constellation-app/constellation/commit/bf640966168210e880beddc54814a45498a4404f", "message": "Merge pull request #384 from constellation-app/static-base-class\n\nStatic Related Fixes", "committedDate": "2020-03-31T12:31:25Z", "type": "commit"}, {"oid": "82cf0b2ac2dfd9518e52d09253f11614173da6b8", "url": "https://github.com/constellation-app/constellation/commit/82cf0b2ac2dfd9518e52d09253f11614173da6b8", "message": "Merge pull request #385 from constellation-app/feature/stale-workflow\n\nStale detection action workflow", "committedDate": "2020-04-01T02:20:39Z", "type": "commit"}, {"oid": "786ace54c0025c90a3f1d4bfe9718f49d3a68473", "url": "https://github.com/constellation-app/constellation/commit/786ace54c0025c90a3f1d4bfe9718f49d3a68473", "message": "Merge pull request #368 from constellation-app/master-nb11-rest-service\n\nMaster nb11 rest service", "committedDate": "2020-04-01T14:34:43Z", "type": "commit"}, {"oid": "3c23df44f752edf67e3d6a34e5f26c9b1ee4cfea", "url": "https://github.com/constellation-app/constellation/commit/3c23df44f752edf67e3d6a34e5f26c9b1ee4cfea", "message": "added missing lang attibute to html tag", "committedDate": "2020-04-02T03:10:48Z", "type": "commit"}, {"oid": "76c6c70939a721a93055ee785b66ee24e581d37c", "url": "https://github.com/constellation-app/constellation/commit/76c6c70939a721a93055ee785b66ee24e581d37c", "message": "added missing tags", "committedDate": "2020-04-02T03:17:39Z", "type": "commit"}, {"oid": "76808b7cfa50329d0b4644b8070e51deaf109c8d", "url": "https://github.com/constellation-app/constellation/commit/76808b7cfa50329d0b4644b8070e51deaf109c8d", "message": "added captions to tables", "committedDate": "2020-04-02T04:00:58Z", "type": "commit"}, {"oid": "afc169c9489a5152f6ec081a7eb519790113f450", "url": "https://github.com/constellation-app/constellation/commit/afc169c9489a5152f6ec081a7eb519790113f450", "message": "added th tags to tables", "committedDate": "2020-04-02T04:28:33Z", "type": "commit"}, {"oid": "f8a26c2c73f0689bd1acaee0e70debc362f7531a", "url": "https://github.com/constellation-app/constellation/commit/f8a26c2c73f0689bd1acaee0e70debc362f7531a", "message": "added missing scope attributes from th tags", "committedDate": "2020-04-02T04:31:49Z", "type": "commit"}, {"oid": "9b36b8a9cdcf1868fde21f9f91bc30a3540d80dc", "url": "https://github.com/constellation-app/constellation/commit/9b36b8a9cdcf1868fde21f9f91bc30a3540d80dc", "message": "Merge branch 'master' into Layers_view-NB11", "committedDate": "2020-04-02T10:13:53Z", "type": "commit"}, {"oid": "bfdb361f18d3454a150a9274795da0ca239abfd3", "url": "https://github.com/constellation-app/constellation/commit/bfdb361f18d3454a150a9274795da0ca239abfd3", "message": "Merge pull request #392 from constellation-app/html-bugs\n\nHtml bugs", "committedDate": "2020-04-02T21:09:12Z", "type": "commit"}, {"oid": "e66c95a1b2baf466da0218c8538da3204dca4e2a", "url": "https://github.com/constellation-app/constellation/commit/e66c95a1b2baf466da0218c8538da3204dca4e2a", "message": "Merge branch 'Layers_view-NB11' of https://github.com/constellation-app/constellation into Layers_view-NB11", "committedDate": "2020-04-03T08:11:41Z", "type": "commit"}, {"oid": "337e97bcc47143ccc38e52a870f25e3676e6c38d", "url": "https://github.com/constellation-app/constellation/commit/337e97bcc47143ccc38e52a870f25e3676e6c38d", "message": ":art: added layer limit to add layers button\n:art: cleaned up StoreGraph", "committedDate": "2020-04-03T11:09:30Z", "type": "commit"}, {"oid": "750e56ac12a75e2d88ac20fb66f913555756a882", "url": "https://github.com/constellation-app/constellation/commit/750e56ac12a75e2d88ac20fb66f913555756a882", "message": "Merge branch 'master' into Layers_view-NB11", "committedDate": "2020-04-03T11:24:41Z", "type": "commit"}, {"oid": "3da4fee9c0952b9c18b624bf2c42f8940be5e33e", "url": "https://github.com/constellation-app/constellation/commit/3da4fee9c0952b9c18b624bf2c42f8940be5e33e", "message": ":art: fixed an import", "committedDate": "2020-04-03T13:55:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3MjI1OA==", "url": "https://github.com/constellation-app/constellation/pull/399#discussion_r403772258", "bodyText": "Don't know where I was going on this section of code. Cheers", "author": "aldebaran30701", "createdAt": "2020-04-05T23:25:58Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -2019,79 +2024,79 @@ private int recalculateBitmask(final GraphElementType elementType, final int id)\n     // TODO: Clean up this code and cases\n     /**\n      * Evaluates a string representation of a query in relation to a single\n-     * element on the graph returns true when the node satisfies the condition.\n-     * False otherwise. Query is structured as below:\n+     * element on the graph returns true when the node satisfies the condition,\n+     * false otherwise.\n+     * <p>\n+     * A query should be structured as follows:\n      * vertex_color:<=:0,0,0 vertex_selected:==:true vertex_color:>:255,255,255\n      *\n-     * @param postfixQuery the string query\n-     * @param id the id of the element\n-     * @return a boolean result determining whether the element satisfied the\n+     * @param elementType the type of the element\n+     * @param elementId the id of the element\n+     * @param query the query expression\n+     * @return a boolean determining whether the element satisfied the\n      * constraints.\n      */\n-    private boolean evaluateQuery(final String postfixQuery, final int id, final GraphElementType elementType) {\n-        // Exit condition for show all\n-        if (postfixQuery.equals(\"\")) {\n+    private boolean evaluateLayerQuery(final GraphElementType elementType, final int elementId, final String query) {\n+        // exit condition for show all\n+        if (query.isBlank()) {\n             return true;\n         }\n \n-        Operator currentOperand = Operator.NOTFOUND;\n+        // Split with backtick to reduce chance of char in query.\n+        final String[] rules = query.split(\"`\");\n+//        System.out.println(\"Rules: \" + rules.length);\n \n-        String[] rules = postfixQuery.split(\"`\"); // Split with backtick to reduce chance of char in query.\n-        //System.out.println(\"Rules: \" + rules.length);\n+        // iterate over rules\n         String evaluatedResult = \"\";\n-        boolean finalRes = true;\n-        boolean ignoreRes = false;\n-\n-        for (String rule : rules) {\n-            //System.out.println(\"Rule: \" + rule);\n-            String[] ruleSegments = rule.split(\":\");\n-            int segCount = 0;\n-            AttributeDescription ad = null;\n-            int attrID = 1;\n-            // iterate over each section and grab the values.\n-            for (String segment : ruleSegments) {\n-                //System.out.println(\"Current: \" + segment);\n-                segCount++;\n-                switch (segCount) {\n+        Operator currentOperand = Operator.NOTFOUND;\n+        boolean finalResult = true;\n+        boolean ignoreResult = false;\n+        for (final String rule : rules) {\n+//            System.out.println(\"Rule: \" + rule);\n+            final String[] ruleSegments = rule.split(\":\");\n+\n+            // iterate over each segment and grab the values\n+            AttributeDescription attributeDescription = null;\n+            int attributeId = 1;\n+            int segmentCount = 0;\n+            for (final String ruleSegment : ruleSegments) {\n+//                System.out.println(\"Current: \" + ruleSegment);\n+                segmentCount++;\n+                switch (segmentCount) {\n                     case 1: {\n-                        if (elementType == GraphElementType.VERTEX) {", "originalCommit": "3da4fee9c0952b9c18b624bf2c42f8940be5e33e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4NDEyNA==", "url": "https://github.com/constellation-app/constellation/pull/399#discussion_r403784124", "bodyText": "It looked like you'd separated it out to support debug print statements.", "author": "cygnus-x-1", "createdAt": "2020-04-06T00:57:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3MjI1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4NDU5MQ==", "url": "https://github.com/constellation-app/constellation/pull/399#discussion_r403784591", "bodyText": "There were a few parts I did do that. But I think this was a case of coding before coffee. \ud83d\ude06", "author": "aldebaran30701", "createdAt": "2020-04-06T01:01:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3MjI1OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3MjQ0Mg==", "url": "https://github.com/constellation-app/constellation/pull/399#discussion_r403772442", "bodyText": "I'll merge in some code that removes this. The functionality of >= can be achieved by checking the query with > || =.", "author": "aldebaran30701", "createdAt": "2020-04-05T23:27:29Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -2019,79 +2024,79 @@ private int recalculateBitmask(final GraphElementType elementType, final int id)\n     // TODO: Clean up this code and cases\n     /**\n      * Evaluates a string representation of a query in relation to a single\n-     * element on the graph returns true when the node satisfies the condition.\n-     * False otherwise. Query is structured as below:\n+     * element on the graph returns true when the node satisfies the condition,\n+     * false otherwise.\n+     * <p>\n+     * A query should be structured as follows:\n      * vertex_color:<=:0,0,0 vertex_selected:==:true vertex_color:>:255,255,255\n      *\n-     * @param postfixQuery the string query\n-     * @param id the id of the element\n-     * @return a boolean result determining whether the element satisfied the\n+     * @param elementType the type of the element\n+     * @param elementId the id of the element\n+     * @param query the query expression\n+     * @return a boolean determining whether the element satisfied the\n      * constraints.\n      */\n-    private boolean evaluateQuery(final String postfixQuery, final int id, final GraphElementType elementType) {\n-        // Exit condition for show all\n-        if (postfixQuery.equals(\"\")) {\n+    private boolean evaluateLayerQuery(final GraphElementType elementType, final int elementId, final String query) {\n+        // exit condition for show all\n+        if (query.isBlank()) {\n             return true;\n         }\n \n-        Operator currentOperand = Operator.NOTFOUND;\n+        // Split with backtick to reduce chance of char in query.\n+        final String[] rules = query.split(\"`\");\n+//        System.out.println(\"Rules: \" + rules.length);\n \n-        String[] rules = postfixQuery.split(\"`\"); // Split with backtick to reduce chance of char in query.\n-        //System.out.println(\"Rules: \" + rules.length);\n+        // iterate over rules\n         String evaluatedResult = \"\";\n-        boolean finalRes = true;\n-        boolean ignoreRes = false;\n-\n-        for (String rule : rules) {\n-            //System.out.println(\"Rule: \" + rule);\n-            String[] ruleSegments = rule.split(\":\");\n-            int segCount = 0;\n-            AttributeDescription ad = null;\n-            int attrID = 1;\n-            // iterate over each section and grab the values.\n-            for (String segment : ruleSegments) {\n-                //System.out.println(\"Current: \" + segment);\n-                segCount++;\n-                switch (segCount) {\n+        Operator currentOperand = Operator.NOTFOUND;\n+        boolean finalResult = true;\n+        boolean ignoreResult = false;\n+        for (final String rule : rules) {\n+//            System.out.println(\"Rule: \" + rule);\n+            final String[] ruleSegments = rule.split(\":\");\n+\n+            // iterate over each segment and grab the values\n+            AttributeDescription attributeDescription = null;\n+            int attributeId = 1;\n+            int segmentCount = 0;\n+            for (final String ruleSegment : ruleSegments) {\n+//                System.out.println(\"Current: \" + ruleSegment);\n+                segmentCount++;\n+                switch (segmentCount) {\n                     case 1: {\n-                        if (elementType == GraphElementType.VERTEX) {\n-                            attrID = getAttribute(GraphElementType.VERTEX, segment);\n-                        } else if (elementType == GraphElementType.TRANSACTION) {\n-                            attrID = getAttribute(GraphElementType.TRANSACTION, segment);\n-                        }\n-                        \n-                        if (attrID != Graph.NOT_FOUND) {\n-                            ad = attributeDescriptions[attrID];\n+                        attributeId = getAttribute(elementType, ruleSegment);\n+                        if (attributeId != Graph.NOT_FOUND) {\n+                            attributeDescription = attributeDescriptions[attributeId];\n                         }\n                         break;\n                     }\n                     case 2: {\n-                        switch (segment) {\n-                            case \"=\": {// equality\n+                        switch (ruleSegment) {\n+                            case \"=\": { // equality\n                                 currentOperand = Operator.EQUALS;\n                                 break;\n                             }\n-                            case \"!=\": {// not equality\n+                            case \"!=\": { // non-equality\n                                 currentOperand = Operator.NOTEQUALS;\n                                 break;\n                             }\n-                            case \">\": {// greater than - how to handle things which can't be compared GT or LT?\n+                            case \">\": { // greater than\n                                 currentOperand = Operator.GREATERTHAN;\n                                 break;\n                             }\n-                            case \"<\": {// Less than\n+                            case \"<\": { // less than\n                                 currentOperand = Operator.LESSTHAN;\n                                 break;\n                             }\n-                            case \">=\": {// greater than or EQ to", "originalCommit": "3da4fee9c0952b9c18b624bf2c42f8940be5e33e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3MzgzOA==", "url": "https://github.com/constellation-app/constellation/pull/399#discussion_r403773838", "bodyText": "The only reason it is checked here is so that when the element bitmask is changed, it doesn't re-update the bitmask and get called numerous times.", "author": "aldebaran30701", "createdAt": "2020-04-05T23:38:52Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -2381,13 +2376,15 @@ public void setIntValue(final int attribute, final int id, final int value) {\n             }\n         }\n \n-        // If the selected layers to display value has changed then recalculate visibility of all objects, otherwise,\n-        // check if the change impacts an objects visibility\n-        if (selectedFilterBitmaskAttrId >= 0 && selectedFilterBitmaskAttrId == attribute) {\n+        // if selected visible layers has changed then recalculate visibility of all objects, \n+        // otherwise check if the change impacts an objects visibility\n+        if (attribute == layerMaskSelectedAttributeId && layerMaskSelectedAttributeId >= 0) {\n             // one node changes, pass to change list then only iterate that?\n-            updateAllBitmasks(); // hits here when changing layers only. not on update of elements to layers\n-        } else if (!avoidUpdate) {\n-            updateBitmask(attribute, id);\n+            // hits here when changing layers only. not on update of elements to layers\n+            updateAllLayerMasks();\n+        } else if (!avoidLayerUpdate) {\n+            // TODO: why is avoidLayerUpdate only checked here?", "originalCommit": "3da4fee9c0952b9c18b624bf2c42f8940be5e33e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3NTI3Ng==", "url": "https://github.com/constellation-app/constellation/pull/399#discussion_r403775276", "bodyText": "Perfect.", "author": "aldebaran30701", "createdAt": "2020-04-05T23:50:15Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewPane.java", "diffHunk": "@@ -96,13 +96,19 @@ public LayersViewPane(final LayersViewController controller) {\n         // create options\n         this.options = new HBox();\n         options.setAlignment(Pos.TOP_LEFT);\n-        options.setBackground(new Background(new BackgroundFill(Color.GREEN, CornerRadii.EMPTY, Insets.EMPTY)));\n+//        options.setBackground(new Background(new BackgroundFill(Color.GREEN, CornerRadii.EMPTY, Insets.EMPTY)));\n         \n         // create add button\n         final Button addButton = new Button(\"Add New Layer\");\n         addButton.setAlignment(Pos.CENTER_RIGHT);\n         addButton.setOnAction(event -> {\n-            createLayer(false);\n+            if (layers.getChildren().size() <= 32) {", "originalCommit": "3da4fee9c0952b9c18b624bf2c42f8940be5e33e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}