{"pr_number": 885, "pr_title": "Table view export", "pr_createdAt": "2020-11-02T02:36:55Z", "pr_url": "https://github.com/constellation-app/constellation/pull/885", "timeline": [{"oid": "ad96bd98665f08987fa5f364735396213f44ed58", "url": "https://github.com/constellation-app/constellation/commit/ad96bd98665f08987fa5f364735396213f44ed58", "message": "fixed export to csv", "committedDate": "2020-10-26T22:49:26Z", "type": "commit"}, {"oid": "c7dfbbb6517713cca5c5ab835da6bebc148f7c60", "url": "https://github.com/constellation-app/constellation/commit/c7dfbbb6517713cca5c5ab835da6bebc148f7c60", "message": "fixed export to excel", "committedDate": "2020-10-27T03:38:44Z", "type": "commit"}, {"oid": "8d7ef9eb7f5c5c8725b66fac0a074f8bfd4f6629", "url": "https://github.com/constellation-app/constellation/commit/8d7ef9eb7f5c5c8725b66fac0a074f8bfd4f6629", "message": "fixed export selection for csv and excel", "committedDate": "2020-11-02T02:27:31Z", "type": "commit"}, {"oid": "ee8630b73bbddbc60cfd949ac15f4c16faea4c3f", "url": "https://github.com/constellation-app/constellation/commit/ee8630b73bbddbc60cfd949ac15f4c16faea4c3f", "message": "resolved merge conflicts", "committedDate": "2020-11-02T02:33:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxNjkyNQ==", "url": "https://github.com/constellation-app/constellation/pull/885#discussion_r515716925", "bodyText": "A real minor one but how about calling it updateSelectionFromFxThread?", "author": "arcturus2", "createdAt": "2020-11-02T02:52:12Z", "path": "CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java", "diffHunk": "@@ -1239,44 +1234,99 @@ public void updateSelection(final Graph graph, final TableViewState state) {\n                 if (!state.isSelectedOnly()) {\n                     final List<Integer> selectedIds = new ArrayList<>();\n                     final ReadableGraph readableGraph = graph.getReadableGraph();\n-                    try {\n-                        final boolean isVertex = state.getElementType() == GraphElementType.VERTEX;\n-                        final int selectedAttributeId = isVertex\n-                                ? VisualConcept.VertexAttribute.SELECTED.get(readableGraph)\n-                                : VisualConcept.TransactionAttribute.SELECTED.get(readableGraph);\n-                        final int elementCount = isVertex\n-                                ? readableGraph.getVertexCount()\n-                                : readableGraph.getTransactionCount();\n-                        for (int elementPosition = 0; elementPosition < elementCount; elementPosition++) {\n-                            final int elementId = isVertex\n-                                    ? readableGraph.getVertex(elementPosition)\n-                                    : readableGraph.getTransaction(elementPosition);\n-                            boolean isSelected = false;\n-                            if (selectedAttributeId != Graph.NOT_FOUND) {\n-                                isSelected = readableGraph.getBooleanValue(selectedAttributeId, elementId);\n-                            }\n-                            if (isSelected) {\n-                                selectedIds.add(elementId);\n-                            }\n-                        }\n-                    } finally {\n-                        readableGraph.release();\n-                    }\n+                    addToSelectedIds(selectedIds, readableGraph, state);\n \n                     // update table selection\n                     final int[] selectedIndices = selectedIds.stream().map(id -> elementIdToRowIndex.get(id))\n                             .map(row -> table.getItems().indexOf(row)).mapToInt(i -> i).toArray();\n-\n-                    Platform.runLater(() -> {\n+                    \n+                    Platform.runLater(() -> {                        \n                         selectedProperty.removeListener(tableSelectionListener);\n                         table.getSelectionModel().clearSelection();\n                         if (!selectedIds.isEmpty()) {\n                             table.getSelectionModel().selectIndices(selectedIndices[0], selectedIndices);\n                         }\n-                        selectedProperty.addListener(tableSelectionListener);\n+                        selectedProperty.addListener(tableSelectionListener);                            \n                     });\n                 }\n             }\n         }\n     }\n+       \n+    /**\n+     * A version of the updateSelection(Graph, TableViewState) function which is\n+     * to be run on the JavaFX Application Thread\n+     * \n+     * @param graph the graph to read selection from.\n+     * @param state the current table view state.\n+     */\n+    private void updateSelectionFromJAT(final Graph graph, final TableViewState state) {", "originalCommit": "ee8630b73bbddbc60cfd949ac15f4c16faea4c3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcyNjc0OQ==", "url": "https://github.com/constellation-app/constellation/pull/885#discussion_r515726749", "bodyText": "done", "author": "antares1470", "createdAt": "2020-11-02T03:44:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxNjkyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "992ac4582525a9e3388beaeedb1a2b73bafc0e6a", "chunk": "diff --git a/CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java b/CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java\nindex 3f59a615f..e5b72781a 100644\n--- a/CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java\n+++ b/CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java\n\n@@ -1260,7 +1260,7 @@ public final class TableViewPane extends BorderPane {\n      * @param graph the graph to read selection from.\n      * @param state the current table view state.\n      */\n-    private void updateSelectionFromJAT(final Graph graph, final TableViewState state) {\n+    private void updateSelectionFromFXThread(final Graph graph, final TableViewState state) {\n         synchronized (LOCK) {\n             if (graph != null && state != null) {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxNzY0MQ==", "url": "https://github.com/constellation-app/constellation/pull/885#discussion_r515717641", "bodyText": "So if it is meant to be run on the FX thread, how is this bit passing?", "author": "arcturus2", "createdAt": "2020-11-02T02:55:46Z", "path": "CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java", "diffHunk": "@@ -1239,44 +1234,99 @@ public void updateSelection(final Graph graph, final TableViewState state) {\n                 if (!state.isSelectedOnly()) {\n                     final List<Integer> selectedIds = new ArrayList<>();\n                     final ReadableGraph readableGraph = graph.getReadableGraph();\n-                    try {\n-                        final boolean isVertex = state.getElementType() == GraphElementType.VERTEX;\n-                        final int selectedAttributeId = isVertex\n-                                ? VisualConcept.VertexAttribute.SELECTED.get(readableGraph)\n-                                : VisualConcept.TransactionAttribute.SELECTED.get(readableGraph);\n-                        final int elementCount = isVertex\n-                                ? readableGraph.getVertexCount()\n-                                : readableGraph.getTransactionCount();\n-                        for (int elementPosition = 0; elementPosition < elementCount; elementPosition++) {\n-                            final int elementId = isVertex\n-                                    ? readableGraph.getVertex(elementPosition)\n-                                    : readableGraph.getTransaction(elementPosition);\n-                            boolean isSelected = false;\n-                            if (selectedAttributeId != Graph.NOT_FOUND) {\n-                                isSelected = readableGraph.getBooleanValue(selectedAttributeId, elementId);\n-                            }\n-                            if (isSelected) {\n-                                selectedIds.add(elementId);\n-                            }\n-                        }\n-                    } finally {\n-                        readableGraph.release();\n-                    }\n+                    addToSelectedIds(selectedIds, readableGraph, state);\n \n                     // update table selection\n                     final int[] selectedIndices = selectedIds.stream().map(id -> elementIdToRowIndex.get(id))\n                             .map(row -> table.getItems().indexOf(row)).mapToInt(i -> i).toArray();\n-\n-                    Platform.runLater(() -> {\n+                    \n+                    Platform.runLater(() -> {                        \n                         selectedProperty.removeListener(tableSelectionListener);\n                         table.getSelectionModel().clearSelection();\n                         if (!selectedIds.isEmpty()) {\n                             table.getSelectionModel().selectIndices(selectedIndices[0], selectedIndices);\n                         }\n-                        selectedProperty.addListener(tableSelectionListener);\n+                        selectedProperty.addListener(tableSelectionListener);                            \n                     });\n                 }\n             }\n         }\n     }\n+       \n+    /**\n+     * A version of the updateSelection(Graph, TableViewState) function which is\n+     * to be run on the JavaFX Application Thread\n+     * \n+     * @param graph the graph to read selection from.\n+     * @param state the current table view state.\n+     */\n+    private void updateSelectionFromJAT(final Graph graph, final TableViewState state) {\n+        synchronized (LOCK) {\n+            if (graph != null && state != null) {\n+\n+                if (!Platform.isFxApplicationThread()) {", "originalCommit": "ee8630b73bbddbc60cfd949ac15f4c16faea4c3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcyNjU1Nw==", "url": "https://github.com/constellation-app/constellation/pull/885#discussion_r515726557", "bodyText": "Platform.isFxApplicationThread() is a boolean function that returns true if we are running in the fx application thread. So the condition here returns true if we are NOT running on the fx application thread", "author": "antares1470", "createdAt": "2020-11-02T03:43:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxNzY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTczOTA0NA==", "url": "https://github.com/constellation-app/constellation/pull/885#discussion_r515739044", "bodyText": "Doh! Thanks, I totally misread it.", "author": "arcturus2", "createdAt": "2020-11-02T04:51:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxNzY0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "992ac4582525a9e3388beaeedb1a2b73bafc0e6a", "chunk": "diff --git a/CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java b/CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java\nindex 3f59a615f..e5b72781a 100644\n--- a/CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java\n+++ b/CoreTableView/src/au/gov/asd/tac/constellation/views/tableview2/TableViewPane.java\n\n@@ -1260,7 +1260,7 @@ public final class TableViewPane extends BorderPane {\n      * @param graph the graph to read selection from.\n      * @param state the current table view state.\n      */\n-    private void updateSelectionFromJAT(final Graph graph, final TableViewState state) {\n+    private void updateSelectionFromFXThread(final Graph graph, final TableViewState state) {\n         synchronized (LOCK) {\n             if (graph != null && state != null) {\n \n"}}, {"oid": "992ac4582525a9e3388beaeedb1a2b73bafc0e6a", "url": "https://github.com/constellation-app/constellation/commit/992ac4582525a9e3388beaeedb1a2b73bafc0e6a", "message": "renamed function", "committedDate": "2020-11-02T03:44:53Z", "type": "commit"}, {"oid": "0daec4e7ba5156db08c61404b71b9274b88728c9", "url": "https://github.com/constellation-app/constellation/commit/0daec4e7ba5156db08c61404b71b9274b88728c9", "message": "fixed bug", "committedDate": "2020-11-04T02:37:50Z", "type": "commit"}, {"oid": "6b7422f7a90ec0b9a05cc03c8a5abef64f9b7328", "url": "https://github.com/constellation-app/constellation/commit/6b7422f7a90ec0b9a05cc03c8a5abef64f9b7328", "message": "moved some code off the FX thread", "committedDate": "2020-11-04T04:28:48Z", "type": "commit"}, {"oid": "c1422d59c611b302e71d84c3abb88b0e3f52bcee", "url": "https://github.com/constellation-app/constellation/commit/c1422d59c611b302e71d84c3abb88b0e3f52bcee", "message": "removed unnecessary sync, edited exception catches", "committedDate": "2020-11-05T01:15:30Z", "type": "commit"}]}