{"pr_number": 453, "pr_title": "RULE (Java) Null should not be returned from a \"Boolean\" method", "pr_createdAt": "2020-04-23T01:19:19Z", "pr_url": "https://github.com/constellation-app/constellation/pull/453", "timeline": [{"oid": "beaa959f6a6c809bfa92a165c5cc4a34894f017f", "url": "https://github.com/constellation-app/constellation/commit/beaa959f6a6c809bfa92a165c5cc4a34894f017f", "message": "RULE (Java) Null should not be returned from a \"Boolean\" method", "committedDate": "2020-04-23T01:09:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0MzA3OA==", "url": "https://github.com/constellation-app/constellation/pull/453#discussion_r413443078", "bodyText": "This was actually an intentional design choice. A boolean object attribute has null as its default value, and we take that to essentially mean \"no value\" as oppose to false.", "author": "cygnus-x-1", "createdAt": "2020-04-23T01:28:47Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/attribute/BooleanObjectAttributeDescription.java", "diffHunk": "@@ -47,7 +47,7 @@ public BooleanObjectAttributeDescription() {\n     @SuppressWarnings(\"unchecked\") // Casts are manually checked\n     protected Boolean convertFromObject(final Object object) {\n         if (object == null) {\n-            return null;", "originalCommit": "beaa959f6a6c809bfa92a165c5cc4a34894f017f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0Njk0OQ==", "url": "https://github.com/constellation-app/constellation/pull/453#discussion_r413446949", "bodyText": "Just wondering what that does as opposed to returning false. In other words where was that being checked for to determine different outcomes for cases of false or null?\nAsking because the one time I found where it checked for null was in an inline \"if\" where if the returned value was null it would return false. (Its one of the four changes made on this pull request, not sure how to link code blocks from the code changes into comments.)", "author": "sol695510", "createdAt": "2020-04-23T01:40:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0MzA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ1OTc3MA==", "url": "https://github.com/constellation-app/constellation/pull/453#discussion_r413459770", "bodyText": "To summarise the rule, it basically doesn't like returning null because Boolean can be confused with its primitive counterpart boolean (which can't return null) and so can cause problems with callers code. Based on that, it sounds like we could decide to ignore the rule if we understand the distinction.\nOn the other hand, lines like the one @sol695510 fixed with \"bool == null ? false : bool\" looks a bit silly and it would probably be ideal to remove the need for such lines of code", "author": "antares1470", "createdAt": "2020-04-23T02:19:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0MzA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ2MjQwNQ==", "url": "https://github.com/constellation-app/constellation/pull/453#discussion_r413462405", "bodyText": "Should I just revert the code block mentioned above back to returning a null and keep the others as is?", "author": "sol695510", "createdAt": "2020-04-23T02:27:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0MzA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3NTMwMg==", "url": "https://github.com/constellation-app/constellation/pull/453#discussion_r413475302", "bodyText": "Yes, I think so.", "author": "cygnus-x-1", "createdAt": "2020-04-23T03:07:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0MzA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3NjA0NA==", "url": "https://github.com/constellation-app/constellation/pull/453#discussion_r413476044", "bodyText": "To answer your previous question - the Attribute Editor, for example, will display \"false\" if the value of a boolean object attribute is false and \"\" if it is null. This allows a user to distinguish between, for example, a \"false\" value retrieved from a database and no value having been set (no data, or no database query performed).", "author": "cygnus-x-1", "createdAt": "2020-04-23T03:09:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0MzA3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3NzU0NQ==", "url": "https://github.com/constellation-app/constellation/pull/453#discussion_r413477545", "bodyText": "To summarise the rule, it basically doesn't like returning null because Boolean can be confused with its primitive counterpart boolean (which can't return null) and so can cause problems with callers code. Based on that, it sounds like we could decide to ignore the rule if we understand the distinction.\nOn the other hand, lines like the one @sol695510 fixed with \"bool == null ? false : bool\" looks a bit silly and it would probably be ideal to remove the need for such lines of code\n\n\nTo answer your previous question - the Attribute Editor, for example, will display \"false\" if the value of a boolean object attribute is false and \"\" if it is null. This allows a user to distinguish between, for example, a \"false\" value retrieved from a database and no value having been set (no data, or no database query performed).\n\nThanks @antares1470 and @cygnus-x-1. I'll make the changes.", "author": "sol695510", "createdAt": "2020-04-23T03:14:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0MzA3OA=="}], "type": "inlineReview", "revised_code": {"commit": "c053e3d0981badd419b960516ac01ecf11aa4b61", "chunk": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/attribute/BooleanObjectAttributeDescription.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/attribute/BooleanObjectAttributeDescription.java\nindex 4ba8719bb..5387fb206 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/attribute/BooleanObjectAttributeDescription.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/attribute/BooleanObjectAttributeDescription.java\n\n@@ -47,7 +47,7 @@ public final class BooleanObjectAttributeDescription extends AbstractObjectAttri\n     @SuppressWarnings(\"unchecked\") // Casts are manually checked\n     protected Boolean convertFromObject(final Object object) {\n         if (object == null) {\n-            return false;\n+            return null;\n         } else if (object instanceof Number) {\n             return ((Number) object).longValue() != 0;\n         } else if (object instanceof Boolean) {\n"}}, {"oid": "c053e3d0981badd419b960516ac01ecf11aa4b61", "url": "https://github.com/constellation-app/constellation/commit/c053e3d0981badd419b960516ac01ecf11aa4b61", "message": "Update BooleanObjectAttributeDescription.java", "committedDate": "2020-04-23T03:16:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ4MjM4MQ==", "url": "https://github.com/constellation-app/constellation/pull/453#discussion_r413482381", "bodyText": "Actually, instead of returning result, just return QueryEvaluator.evaluatePostfix(expression) and remove the need for the result variable", "author": "antares1470", "createdAt": "2020-04-23T03:30:26Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -2136,7 +2136,7 @@ private boolean evaluateLayerQuery(final GraphElementType elementType, final int\n         final Boolean result = QueryEvaluator.evaluatePostfix(expression);\n //        System.out.println(\"Result calculated: \" + result);\n \n-        return result == null ? false : result;\n+        return result;", "originalCommit": "c053e3d0981badd419b960516ac01ecf11aa4b61", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f875dc418e21fa3b6d7385768c50fedb8b02daff", "chunk": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\nindex 8244b8608..7d2716f7f 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\n\n@@ -2133,10 +2133,7 @@ public class StoreGraph extends LockingTarget implements GraphWriteMethods, Seri\n         expression = expression.substring(0, expression.length() - 1);\n //        System.out.println(\"Before evaluation: \" + expression);\n \n-        final Boolean result = QueryEvaluator.evaluatePostfix(expression);\n-//        System.out.println(\"Result calculated: \" + result);\n-\n-        return result;\n+        return QueryEvaluator.evaluatePostfix(expression);\n     }\n \n     // update the layer visibility of an element\n"}}, {"oid": "f875dc418e21fa3b6d7385768c50fedb8b02daff", "url": "https://github.com/constellation-app/constellation/commit/f875dc418e21fa3b6d7385768c50fedb8b02daff", "message": "Update StoreGraph.java", "committedDate": "2020-04-23T06:00:40Z", "type": "commit"}]}