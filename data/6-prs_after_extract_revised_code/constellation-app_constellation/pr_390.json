{"pr_number": 390, "pr_title": "Missed rules", "pr_createdAt": "2020-04-02T02:47:40Z", "pr_url": "https://github.com/constellation-app/constellation/pull/390", "timeline": [{"oid": "db8159a20314d775f1bef7de1de042f814eefba3", "url": "https://github.com/constellation-app/constellation/commit/db8159a20314d775f1bef7de1de042f814eefba3", "message": "handled format string smells missed from previous PR", "committedDate": "2020-04-02T01:07:29Z", "type": "commit"}, {"oid": "51af378ed16adc3b83987a8dea40bd889dc97dbc", "url": "https://github.com/constellation-app/constellation/commit/51af378ed16adc3b83987a8dea40bd889dc97dbc", "message": "minor change", "committedDate": "2020-04-02T02:45:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAyNTc3MQ==", "url": "https://github.com/constellation-app/constellation/pull/390#discussion_r402025771", "bodyText": "This is the one I'm unsure about. Not sure whether I actually fixed this properly. codelength threw me out", "author": "antares1470", "createdAt": "2020-04-02T03:03:21Z", "path": "CoreAlgorithmPlugins/src/au/gov/asd/tac/constellation/plugins/algorithms/clustering/infomap/infomap/InfomapBase.java", "diffHunk": "@@ -761,7 +761,7 @@ private void partition(final int recursiveCount, final boolean fast, final boole\n         if (verbose) {\n             if (config.getVerbosity() == 0) {\n                 final String fmt = String.format(\"%s.%df\", \"%\", config.getVerboseNumberPrecision());\n-                System.out.printf(\"to %d modules with codelength \" + fmt + \"%n\", getNumTopModules(), codelength);\n+                System.out.printf(\"to %d modules with codelength %s%n\", getNumTopModules(), fmt, codelength);", "originalCommit": "51af378ed16adc3b83987a8dea40bd889dc97dbc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA2MDMwNQ==", "url": "https://github.com/constellation-app/constellation/pull/390#discussion_r402060305", "bodyText": "I'd agree. It looks like the wrong number of args.", "author": "arcturus2", "createdAt": "2020-04-02T05:31:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAyNTc3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "6028ab7f09e051e67d70a60141a63e08b20ba753", "chunk": "diff --git a/CoreAlgorithmPlugins/src/au/gov/asd/tac/constellation/plugins/algorithms/clustering/infomap/infomap/InfomapBase.java b/CoreAlgorithmPlugins/src/au/gov/asd/tac/constellation/plugins/algorithms/clustering/infomap/infomap/InfomapBase.java\nindex d10684131..cdfce72b9 100644\n--- a/CoreAlgorithmPlugins/src/au/gov/asd/tac/constellation/plugins/algorithms/clustering/infomap/infomap/InfomapBase.java\n+++ b/CoreAlgorithmPlugins/src/au/gov/asd/tac/constellation/plugins/algorithms/clustering/infomap/infomap/InfomapBase.java\n\n@@ -761,7 +761,8 @@ public abstract class InfomapBase {\n         if (verbose) {\n             if (config.getVerbosity() == 0) {\n                 final String fmt = String.format(\"%s.%df\", \"%\", config.getVerboseNumberPrecision());\n-                System.out.printf(\"to %d modules with codelength %s%n\", getNumTopModules(), fmt, codelength);\n+                final String cl = String.format(fmt, codelength);\n+                System.out.printf(\"to %d modules with codelength %s%n\", getNumTopModules(), cl);\n             } else {\n                 System.out.printf(\"Two-level codelength: %f + %f = %f%n\", indexCodelength, moduleCodelength, codelength);\n             }\n"}}, {"oid": "98c47927cdd9be40a6dfedae1ae74c05a6d19ba9", "url": "https://github.com/constellation-app/constellation/commit/98c47927cdd9be40a6dfedae1ae74c05a6d19ba9", "message": "Merge branch 'master' into missed-rules", "committedDate": "2020-04-02T23:12:20Z", "type": "commit"}, {"oid": "6028ab7f09e051e67d70a60141a63e08b20ba753", "url": "https://github.com/constellation-app/constellation/commit/6028ab7f09e051e67d70a60141a63e08b20ba753", "message": "fixed problem with format string", "committedDate": "2020-04-02T23:53:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2MjMyNQ==", "url": "https://github.com/constellation-app/constellation/pull/390#discussion_r402662325", "bodyText": "Hopefully this one is alright. I don't think it's the cleanest solution but I'm struggling to come up with a better one right now", "author": "antares1470", "createdAt": "2020-04-02T23:57:51Z", "path": "CoreAlgorithmPlugins/src/au/gov/asd/tac/constellation/plugins/algorithms/clustering/infomap/infomap/InfomapBase.java", "diffHunk": "@@ -761,7 +761,8 @@ private void partition(final int recursiveCount, final boolean fast, final boole\n         if (verbose) {\n             if (config.getVerbosity() == 0) {\n                 final String fmt = String.format(\"%s.%df\", \"%\", config.getVerboseNumberPrecision());\n-                System.out.printf(\"to %d modules with codelength \" + fmt + \"%n\", getNumTopModules(), codelength);\n+                final String cl = String.format(fmt, codelength);\n+                System.out.printf(\"to %d modules with codelength %s%n\", getNumTopModules(), cl);", "originalCommit": "6028ab7f09e051e67d70a60141a63e08b20ba753", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2NDMyMA==", "url": "https://github.com/constellation-app/constellation/pull/390#discussion_r402664320", "bodyText": "This was what I was thinking. Let me know if I've missed the mark:\nSystem.out.printf(\"to %d modules with codelength %s.%df%n\", getNumTopModules(), \"%\", config.getVerboseNumberPrecision());", "author": "arcturus2", "createdAt": "2020-04-03T00:04:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2MjMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc2NDg5OQ==", "url": "https://github.com/constellation-app/constellation/pull/390#discussion_r403764899", "bodyText": "The issue is that it leaves out the codelength variable. %s.%df is only used to get the correct formatter for codelength and therefore I believe there needs to an additional step to apply codelength to the given format", "author": "antares1470", "createdAt": "2020-04-05T22:21:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2MjMyNQ=="}], "type": "inlineReview", "revised_code": null}]}