{"pr_number": 602, "pr_title": "Modify storage of Layers view queries and preferences", "pr_createdAt": "2020-06-24T23:45:27Z", "pr_url": "https://github.com/constellation-app/constellation/pull/602", "timeline": [{"oid": "22bd06fc06498c9d8dc9f9ea83f5a4070c5484d3", "url": "https://github.com/constellation-app/constellation/commit/22bd06fc06498c9d8dc9f9ea83f5a4070c5484d3", "message": "Add layerQueries and Preferences into attribute objects", "committedDate": "2020-06-24T23:27:53Z", "type": "commit"}, {"oid": "cd11fb9b956b1b08539ab1c4849b1ef30988f6f9", "url": "https://github.com/constellation-app/constellation/commit/cd11fb9b956b1b08539ab1c4849b1ef30988f6f9", "message": "Merge branch 'master' into layerfix", "committedDate": "2020-06-24T23:28:38Z", "type": "commit"}, {"oid": "c71b50ba402e2bba59f2b15029857c9271550f59", "url": "https://github.com/constellation-app/constellation/commit/c71b50ba402e2bba59f2b15029857c9271550f59", "message": "SQ Fixes", "committedDate": "2020-06-25T00:14:23Z", "type": "commit"}, {"oid": "630f3e7e9c5862e51bb37669696044a0615e978e", "url": "https://github.com/constellation-app/constellation/commit/630f3e7e9c5862e51bb37669696044a0615e978e", "message": "Merge branch 'master' into layerfix", "committedDate": "2020-06-26T02:23:19Z", "type": "commit"}, {"oid": "876bfbd2126d75e26bdb48d3c24ba55500faebf7", "url": "https://github.com/constellation-app/constellation/commit/876bfbd2126d75e26bdb48d3c24ba55500faebf7", "message": "ensure attributes on testcase", "committedDate": "2020-06-29T00:37:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyMzkwMw==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447423903", "bodyText": "above 2 could be made final", "author": "antares1470", "createdAt": "2020-06-30T05:46:36Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -1969,18 +1953,24 @@ public void clearValue(final int attribute, final int id) {\n      * </ul>\n      */\n     private void recalculateLayerVisibilities() {\n-        for (int i = 0; i < layerQueries.size(); i++) {\n+        List<String> queries = getQueries();\n+        List<Byte> preferences = getLayerPreferences();", "originalCommit": "876bfbd2126d75e26bdb48d3c24ba55500faebf7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dfe74d9630c451d412f7e8714c1b6a618e6c72f8", "chunk": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\nindex 415f0a1d0..9c2e8fd9d 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\n\n@@ -1953,8 +1953,8 @@ public class StoreGraph extends LockingTarget implements GraphWriteMethods, Seri\n      * </ul>\n      */\n     private void recalculateLayerVisibilities() {\n-        List<String> queries = getQueries();\n-        List<Byte> preferences = getLayerPreferences();\n+        final List<String> queries = getQueries();\n+        final List<Byte> preferences = getLayerPreferences();\n \n         for (int i = 0; i < queries.size(); i++) {\n             // if current mask has bit set, recheck\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNDQ4Ng==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447424486", "bodyText": "final", "author": "antares1470", "createdAt": "2020-06-30T05:48:23Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -1948,6 +1908,30 @@ public void clearValue(final int attribute, final int id) {\n         }\n     }\n \n+    private List<String> getQueries() {\n+        final int queriesId = LayersConcept.GraphAttribute.LAYER_QUERIES.get(this);\n+        if (queriesId == Graph.NOT_FOUND) {\n+            return Collections.emptyList();\n+        }\n+        Object queriesObject = getObjectValue(queriesId, 0);", "originalCommit": "876bfbd2126d75e26bdb48d3c24ba55500faebf7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dfe74d9630c451d412f7e8714c1b6a618e6c72f8", "chunk": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\nindex 415f0a1d0..9c2e8fd9d 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\n\n@@ -1913,7 +1913,7 @@ public class StoreGraph extends LockingTarget implements GraphWriteMethods, Seri\n         if (queriesId == Graph.NOT_FOUND) {\n             return Collections.emptyList();\n         }\n-        Object queriesObject = getObjectValue(queriesId, 0);\n+        final Object queriesObject = getObjectValue(queriesId, 0);\n         if (queriesObject == null) {\n             return Collections.emptyList();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNDU2NA==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447424564", "bodyText": "final", "author": "antares1470", "createdAt": "2020-06-30T05:48:39Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java", "diffHunk": "@@ -1948,6 +1908,30 @@ public void clearValue(final int attribute, final int id) {\n         }\n     }\n \n+    private List<String> getQueries() {\n+        final int queriesId = LayersConcept.GraphAttribute.LAYER_QUERIES.get(this);\n+        if (queriesId == Graph.NOT_FOUND) {\n+            return Collections.emptyList();\n+        }\n+        Object queriesObject = getObjectValue(queriesId, 0);\n+        if (queriesObject == null) {\n+            return Collections.emptyList();\n+        }\n+        return (List<String>) queriesObject;\n+    }\n+\n+    private List<Byte> getLayerPreferences() {\n+        final int preferencesId = LayersConcept.GraphAttribute.LAYER_PREFERENCES.get(this);\n+        if (preferencesId == Graph.NOT_FOUND) {\n+            return Collections.emptyList();\n+        }\n+        Object preferencesObject = getObjectValue(preferencesId, 0);", "originalCommit": "876bfbd2126d75e26bdb48d3c24ba55500faebf7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dfe74d9630c451d412f7e8714c1b6a618e6c72f8", "chunk": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\nindex 415f0a1d0..9c2e8fd9d 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/StoreGraph.java\n\n@@ -1913,7 +1913,7 @@ public class StoreGraph extends LockingTarget implements GraphWriteMethods, Seri\n         if (queriesId == Graph.NOT_FOUND) {\n             return Collections.emptyList();\n         }\n-        Object queriesObject = getObjectValue(queriesId, 0);\n+        final Object queriesObject = getObjectValue(queriesId, 0);\n         if (queriesObject == null) {\n             return Collections.emptyList();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTc0MA==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447425740", "bodyText": "Is there an alternative to passing the active graph here? Just wondering about the case of executing this all standalone (e.g. in a unit test). For context, executeLater(null) throws an exception", "author": "antares1470", "createdAt": "2020-06-30T05:52:07Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -67,36 +70,27 @@ public void edit(final GraphWriteMethods graph, final PluginInteraction interact\n     }\n \n     /**\n+     * Get all layer queries from the Layer View and store them on the qraph.\n      * Update the bitmask used to determine visibility of elements on the graph.\n      */\n     public void execute() {\n         final LayersViewPane pane = parent.getContent();\n         if (pane == null) {\n             return;\n         }\n+        final List<String> layerQueries = new ArrayList<>();\n         int newBitmask = 0b0;\n         for (final LayerDescription layer : pane.getlayers()) {\n+            layerQueries.add(layer.getLayerQuery().isEmpty() ? null : layer.getLayerQuery());\n             newBitmask |= layer.getCurrentLayerVisibility() ? (1 << layer.getLayerIndex() - 1) : 0;\n         }\n         // if the newBitmask is 1, it means none of the boxes are checked. therefore display default layer 1 (All nodes)\n         newBitmask = (newBitmask == 0) ? 0b1 : (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n-        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask))\n+\n+        Future<?> layerQueryFuture = PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(layerQueries))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());", "originalCommit": "876bfbd2126d75e26bdb48d3c24ba55500faebf7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMTIxNw==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447431217", "bodyText": "I think I get where you are coming from - in the case where there is no active graph, or the graph is closed?\nI'm not too aware of other ways - I've seen this way as a standard throughout the project - I could be using it in the wrong context though. @arcturus2 Would a null check here or within the plugin to be executed be necessary?", "author": "aldebaran30701", "createdAt": "2020-06-30T06:07:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ0NjI2NA==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447446264", "bodyText": "I've seen this way as a standard throughout the project - I could be using it in the wrong context though.\n\nI agree @aldebaran30701 it used throughout the code base and context does matter. In general a view should be fine to make the getActiveGraph() call though checking for null here would be required.\nI've opted to not do a null check in executeLater deliberately because situations like this can go unnoticed.", "author": "arcturus2", "createdAt": "2020-06-30T06:44:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1MDIxMg==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447450212", "bodyText": "In an attempt to not let situations like this go unnoticed should we add a warning log or something if the current active graph is null?\nIf the current active graph is null, nothing further should be done correct?", "author": "aldebaran30701", "createdAt": "2020-06-30T06:52:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MTUyOA==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447461528", "bodyText": "Yeah @aldebaran30701 I think logging it is a great idea.\nSo on the topic of things silently passing/failing I commented #602 (comment) that it turns out the plugin is not run in the unit test; a good example of how things get missed. Doing the null check before running executeLater to my mind makes it more obvious when the plugin runs.", "author": "arcturus2", "createdAt": "2020-06-30T07:15:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MzczOQ==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447463739", "bodyText": "If the current active graph is null, nothing further should be done correct?\n\nCorrect. In executeNow() it looks like there is a check for null but not in executeLater. One silently fails and the other throws an exception!\nPerhaps a null check and logging it would be fine. This would be a change in the DefaultPluginEnvironment etc and a separate PR I guess. Want me to do it or are you ok to @aldebaran30701 ?", "author": "arcturus2", "createdAt": "2020-06-30T07:19:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAyOTU1MQ==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r448029551", "bodyText": "Just to reiterate - This code block does not change, but a separate Pr which has a null check and error logging within DefaultPluginEnvironment  is required correct?", "author": "aldebaran30701", "createdAt": "2020-06-30T23:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTc0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEwMTE3MQ==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r448101171", "bodyText": "Yeah @aldebaran30701 and this is largely to keep your PR focused on the layers code and also because the plugin framework not dealing with nulls (on purpose) is a different problem.", "author": "arcturus2", "createdAt": "2020-07-01T03:57:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTc0MA=="}], "type": "inlineReview", "revised_code": {"commit": "4650a95c79911fb6ad123979cfb087086fe379c9", "chunk": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex de993892e..31909c922 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n\n@@ -87,10 +85,7 @@ public class LayersViewController {\n         // if the newBitmask is 1, it means none of the boxes are checked. therefore display default layer 1 (All nodes)\n         newBitmask = (newBitmask == 0) ? 0b1 : (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n \n-        Future<?> layerQueryFuture = PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(layerQueries))\n-                .executeLater(GraphManager.getDefault().getActiveGraph());\n-\n-        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask)).waitingFor(layerQueryFuture)\n+        PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(layerQueries, newBitmask))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQyNTg5OA==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447425898", "bodyText": "same here", "author": "antares1470", "createdAt": "2020-06-30T05:52:33Z", "path": "CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java", "diffHunk": "@@ -67,36 +70,27 @@ public void edit(final GraphWriteMethods graph, final PluginInteraction interact\n     }\n \n     /**\n+     * Get all layer queries from the Layer View and store them on the qraph.\n      * Update the bitmask used to determine visibility of elements on the graph.\n      */\n     public void execute() {\n         final LayersViewPane pane = parent.getContent();\n         if (pane == null) {\n             return;\n         }\n+        final List<String> layerQueries = new ArrayList<>();\n         int newBitmask = 0b0;\n         for (final LayerDescription layer : pane.getlayers()) {\n+            layerQueries.add(layer.getLayerQuery().isEmpty() ? null : layer.getLayerQuery());\n             newBitmask |= layer.getCurrentLayerVisibility() ? (1 << layer.getLayerIndex() - 1) : 0;\n         }\n         // if the newBitmask is 1, it means none of the boxes are checked. therefore display default layer 1 (All nodes)\n         newBitmask = (newBitmask == 0) ? 0b1 : (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n-        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask))\n+\n+        Future<?> layerQueryFuture = PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(layerQueries))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n-    }\n \n-    /**\n-     * Get all layer queries from the Layer View and store them on the qraph.\n-     */\n-    public void submit() {\n-        final LayersViewPane pane = parent.getContent();\n-        if (pane == null) {\n-            return;\n-        }\n-        final List<String> layerQueries = new ArrayList<>();\n-        for (final LayerDescription layer : pane.getlayers()) {\n-            layerQueries.add(layer.getLayerQuery().isEmpty() ? null : layer.getLayerQuery());\n-        }\n-        PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(layerQueries))\n+        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask)).waitingFor(layerQueryFuture)\n                 .executeLater(GraphManager.getDefault().getActiveGraph());", "originalCommit": "876bfbd2126d75e26bdb48d3c24ba55500faebf7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4650a95c79911fb6ad123979cfb087086fe379c9", "chunk": "diff --git a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\nindex de993892e..31909c922 100644\n--- a/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n+++ b/CoreLayersView/src/au/gov/asd/tac/constellation/views/layers/LayersViewController.java\n\n@@ -87,10 +85,7 @@ public class LayersViewController {\n         // if the newBitmask is 1, it means none of the boxes are checked. therefore display default layer 1 (All nodes)\n         newBitmask = (newBitmask == 0) ? 0b1 : (newBitmask > 1) ? newBitmask & ~0b1 : newBitmask;\n \n-        Future<?> layerQueryFuture = PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(layerQueries))\n-                .executeLater(GraphManager.getDefault().getActiveGraph());\n-\n-        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(newBitmask)).waitingFor(layerQueryFuture)\n+        PluginExecution.withPlugin(new UpdateLayerSelectionPlugin(layerQueries, newBitmask))\n                 .executeLater(GraphManager.getDefault().getActiveGraph());\n     }\n \n"}}, {"oid": "dfe74d9630c451d412f7e8714c1b6a618e6c72f8", "url": "https://github.com/constellation-app/constellation/commit/dfe74d9630c451d412f7e8714c1b6a618e6c72f8", "message": "add final modifiers", "committedDate": "2020-06-30T06:23:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1NjYzOA==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447456638", "bodyText": "@aldebaran30701 this is similar to the problem I am presently looking at. In a unit test getActiveGraph() will be null so you will find that this plugin isn't executed. In the edit() if you print something out I think you will find that it isn't appearing.\nThe fix would be to pass in graph.", "author": "arcturus2", "createdAt": "2020-06-30T07:05:40Z", "path": "CoreLayersView/test/unit/src/au/gov/asd/tac/constellation/views/layers/utilities/LayersDualGraphSyncNGTest.java", "diffHunk": "@@ -0,0 +1,318 @@\n+/*\n+ * Copyright 2010-2020 Australian Signals Directorate\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package au.gov.asd.tac.constellation.views.layers.utilities;\n+\n+import au.gov.asd.tac.constellation.graph.Graph;\n+import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n+import au.gov.asd.tac.constellation.graph.LayersConcept;\n+import au.gov.asd.tac.constellation.graph.StoreGraph;\n+import au.gov.asd.tac.constellation.graph.manager.GraphManager;\n+import au.gov.asd.tac.constellation.graph.schema.visual.concept.VisualConcept;\n+import au.gov.asd.tac.constellation.plugins.PluginException;\n+import au.gov.asd.tac.constellation.plugins.PluginExecution;\n+import au.gov.asd.tac.constellation.plugins.PluginInteraction;\n+import au.gov.asd.tac.constellation.plugins.parameters.PluginParameters;\n+import au.gov.asd.tac.constellation.plugins.templates.SimpleEditPlugin;\n+import au.gov.asd.tac.constellation.utilities.color.ConstellationColor;\n+import java.util.ArrayList;\n+import java.util.List;\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.fail;\n+import org.testng.annotations.Test;\n+\n+/**\n+ *\n+ * @author aldebaran30701\n+ */\n+public class LayersDualGraphSyncNGTest {\n+\n+    private int layerMaskV, layerMaskT, layerVisibilityV, layerVisibilityT, selectedV, selectedT, colorV, colorT;\n+    private int vxId1, vxId2, vxId3;\n+    private ConstellationColor vx1Color, vx2Color, vx3Color;\n+    private StoreGraph graph;\n+\n+    private final List<String> queries = new ArrayList();\n+\n+    public LayersDualGraphSyncNGTest() {\n+    }\n+\n+    public void setupGraph() {\n+        graph = new StoreGraph();\n+\n+        // Create LayerMask attributes\n+        layerMaskV = LayersConcept.VertexAttribute.LAYER_MASK.ensure(graph);\n+        if (layerMaskV == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+        layerMaskT = LayersConcept.TransactionAttribute.LAYER_MASK.ensure(graph);\n+        if (layerMaskT == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+\n+        // Create LayerVisilibity Attributes\n+        layerVisibilityV = LayersConcept.VertexAttribute.LAYER_VISIBILITY.ensure(graph);\n+        if (layerVisibilityV == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+        layerVisibilityT = LayersConcept.TransactionAttribute.LAYER_VISIBILITY.ensure(graph);\n+        if (layerVisibilityT == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+\n+        // Create Selected Attributes\n+        selectedV = VisualConcept.VertexAttribute.SELECTED.ensure(graph);\n+        if (selectedV == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+        selectedT = VisualConcept.TransactionAttribute.SELECTED.ensure(graph);\n+        if (selectedT == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+\n+        // Create Color Attributes\n+        colorV = VisualConcept.VertexAttribute.COLOR.ensure(graph);\n+        if (colorV == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+\n+        colorT = VisualConcept.TransactionAttribute.COLOR.ensure(graph);\n+        if (colorT == Graph.NOT_FOUND) {\n+            fail();\n+        }\n+\n+        // Adding 2 Vertices layer 1, visible\n+        vxId1 = graph.addVertex();\n+        vxId2 = graph.addVertex();\n+        vxId3 = graph.addVertex();\n+\n+        vx1Color = ConstellationColor.getColorValue(\"#ed76b1\");\n+        vx2Color = ConstellationColor.getColorValue(\"#eb78b2\");\n+        vx3Color = ConstellationColor.getColorValue(\"#ee71b3\");\n+\n+        graph.setObjectValue(colorV, vxId1, vx1Color);\n+        graph.setObjectValue(colorV, vxId2, vx2Color);\n+        graph.setObjectValue(colorV, vxId3, vx3Color);\n+//        graph.setIntValue(layerMaskV, vxId1, 1);\n+//        graph.setFloatValue(layerVisibilityV, vxId1, 1.0f);\n+//        graph.setBooleanValue(selectedV, vxId1, false);\n+//\n+//        vxId2 = graph.addVertex();\n+//        graph.setIntValue(layerMaskV, vxId2, 1);\n+//        graph.setFloatValue(layerVisibilityV, vxId2, 1.0f);\n+//        graph.setBooleanValue(selectedV, vxId2, false);\n+    }\n+\n+    @Test\n+    public void dynamicLayerChangeTest() throws InterruptedException, PluginException {\n+        setupGraph();\n+\n+        // Check Vertex set correctly\n+        assertTrue(1 == graph.getIntValue(layerMaskV, vxId1));\n+        assertTrue(1.0f == graph.getFloatValue(layerVisibilityV, vxId1));\n+\n+        assertTrue(1 == graph.getIntValue(layerMaskV, vxId2));\n+        assertTrue(1.0f == graph.getFloatValue(layerVisibilityV, vxId2));\n+\n+        assertTrue(1 == graph.getIntValue(layerMaskV, vxId3));\n+        assertTrue(1.0f == graph.getFloatValue(layerVisibilityV, vxId3));\n+        queries.clear();\n+        queries.add(\"Default\");\n+        queries.add(\"color == \" + vx1Color.toString());\n+\n+        LayersConcept.GraphAttribute.LAYER_QUERIES.ensure(graph);\n+        LayersConcept.GraphAttribute.LAYER_PREFERENCES.ensure(graph);\n+\n+        PluginExecution.withPlugin(new UpdateGraphQueriesPlugin(queries)).executeNow(graph);\n+        PluginExecution.withPlugin(new UpdateGraphBitmaskPlugin(0b10)).executeNow(graph);\n+\n+        // Check Vertex set correctly\n+        assertTrue(3 == graph.getIntValue(layerMaskV, vxId1));\n+        assertTrue(1.0f == graph.getFloatValue(layerVisibilityV, vxId1));\n+        assertTrue(vx1Color.toString().equals(graph.getObjectValue(colorV, vxId1).toString()));\n+\n+        assertTrue(1 == graph.getIntValue(layerMaskV, vxId2));\n+        assertTrue(0.0f == graph.getFloatValue(layerVisibilityV, vxId2));\n+        assertTrue(vx2Color.toString().equals(graph.getObjectValue(colorV, vxId2).toString()));\n+\n+        assertTrue(1 == graph.getIntValue(layerMaskV, vxId3));\n+        assertTrue(0.0f == graph.getFloatValue(layerVisibilityV, vxId3));\n+        assertTrue(vx3Color.toString().equals(graph.getObjectValue(colorV, vxId3).toString()));\n+\n+        // change an attribute to trigger switching of graph object within dual graph\n+        PluginExecution.withPlugin(new SimpleEditPlugin(\"Test: change attribute value\") {\n+            @Override\n+            public void edit(final GraphWriteMethods graph, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException {\n+                final int maxTransactionsId = VisualConcept.GraphAttribute.MAX_TRANSACTIONS.ensure(graph);\n+                graph.setIntValue(maxTransactionsId, 0, 9);\n+            }\n+        }).executeNow(GraphManager.getDefault().getActiveGraph());", "originalCommit": "dfe74d9630c451d412f7e8714c1b6a618e6c72f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1ODAwNQ==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r447458005", "bodyText": "@aldebaran30701 I updated it to use graph and it passed - so executing graph.setIntValue(maxTransactionsId, 0, 9); had no net effect. Do you think a revisit of the unit test or layers code is required?", "author": "arcturus2", "createdAt": "2020-06-30T07:08:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1NjYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAyMTk5OQ==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r448021999", "bodyText": "That would explain why the graph out of sync issue was not reproducible through the unit tests. I assumed it was a product of running it on a single thread.", "author": "aldebaran30701", "createdAt": "2020-06-30T22:50:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1NjYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1MjgyNA==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r448052824", "bodyText": "So I have also had a play around with this, and it seems that because getActiveGraph() returns null, and graph is the same instance of StoreGraph, I cannot get it to switch.\nIdeally within the unit test I would like to be able to mimic the switching of StoreGraphs within the DualGraph instance. I Initialised a DualGraph instance in an attempt to get switching to occur in test cases but still could not replicate the bug even while testing it on the current master which happens to have the bug still active in that branch.\nIf you have any ideas on this I'm all ears - If i cannot get it to replicate in a unit test should we remove the unit test as it is redundant? @arcturus2", "author": "aldebaran30701", "createdAt": "2020-07-01T00:35:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1NjYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEwMTcwNQ==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r448101705", "bodyText": "@aldebaran30701 i really like the idea of writing a unit test when fixing bugs as it helps detect it should it come back. I think you are mostly there with it and I'd like to help out to see if I can give some guidance to get the graph switching part to work. I'll get back to you.", "author": "arcturus2", "createdAt": "2020-07-01T04:00:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1NjYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5NDc2MQ==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r448694761", "bodyText": "I've branched off master and added the unit test back in as to replicate the bug and work out how to get the graphs switching in the unit test. https://github.com/constellation-app/constellation/tree/layersSyncTest\nI've tried accessing the instances from within the LockingStoreGraph but ran into many issues with private variables\nI have just tried to get two writable graphs - both grabbed instance 1. Which is not what is needed.", "author": "aldebaran30701", "createdAt": "2020-07-02T01:13:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1NjYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNDA5MA==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r449304090", "bodyText": "I'd like to help out to see if I can give some guidance to get the graph switching part to work\n\n@arcturus2 I think I'll take you up on that offer - Above is the branch I've been testing with.", "author": "aldebaran30701", "createdAt": "2020-07-02T23:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1NjYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyNDM4NA==", "url": "https://github.com/constellation-app/constellation/pull/602#discussion_r449824384", "bodyText": "@aldebaran30701 please see PR #625 and let me know if this helps or not.", "author": "arcturus2", "createdAt": "2020-07-05T02:50:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1NjYzOA=="}], "type": "inlineReview", "revised_code": {"commit": "98454e66c086b38273b1012545e44caa0ce639be", "chunk": "diff --git a/CoreLayersView/test/unit/src/au/gov/asd/tac/constellation/views/layers/utilities/LayersDualGraphSyncNGTest.java b/CoreLayersView/test/unit/src/au/gov/asd/tac/constellation/views/layers/utilities/LayersDualGraphSyncNGTest.java\nindex 6809104a5..9c226dc93 100644\n--- a/CoreLayersView/test/unit/src/au/gov/asd/tac/constellation/views/layers/utilities/LayersDualGraphSyncNGTest.java\n+++ b/CoreLayersView/test/unit/src/au/gov/asd/tac/constellation/views/layers/utilities/LayersDualGraphSyncNGTest.java\n\n@@ -18,8 +18,9 @@ package au.gov.asd.tac.constellation.views.layers.utilities;\n import au.gov.asd.tac.constellation.graph.Graph;\n import au.gov.asd.tac.constellation.graph.GraphWriteMethods;\n import au.gov.asd.tac.constellation.graph.LayersConcept;\n-import au.gov.asd.tac.constellation.graph.StoreGraph;\n-import au.gov.asd.tac.constellation.graph.manager.GraphManager;\n+import au.gov.asd.tac.constellation.graph.ReadableGraph;\n+import au.gov.asd.tac.constellation.graph.WritableGraph;\n+import au.gov.asd.tac.constellation.graph.locking.DualGraph;\n import au.gov.asd.tac.constellation.graph.schema.visual.concept.VisualConcept;\n import au.gov.asd.tac.constellation.plugins.PluginException;\n import au.gov.asd.tac.constellation.plugins.PluginExecution;\n"}}, {"oid": "98454e66c086b38273b1012545e44caa0ce639be", "url": "https://github.com/constellation-app/constellation/commit/98454e66c086b38273b1012545e44caa0ce639be", "message": ":white_check_mark: Convert the test to use a DualGraph (#625)", "committedDate": "2020-07-06T00:39:35Z", "type": "commit"}, {"oid": "4c172f47160c34b667f720903a90aa81d34ed6ac", "url": "https://github.com/constellation-app/constellation/commit/4c172f47160c34b667f720903a90aa81d34ed6ac", "message": "Merge branch 'master' into layerfix", "committedDate": "2020-07-07T05:28:58Z", "type": "commit"}, {"oid": "4650a95c79911fb6ad123979cfb087086fe379c9", "url": "https://github.com/constellation-app/constellation/commit/4650a95c79911fb6ad123979cfb087086fe379c9", "message": "Merge layer update into single plugin\n\n* combines updategraphqueriesplugin with updategraphbitmaskplugin into updatelayerselectionplugin in an attempt to reduce any possible concurrency based bugs", "committedDate": "2020-07-07T23:52:10Z", "type": "commit"}, {"oid": "1bdc1b05e8ce7b1462b71a9b838ccdda6324db71", "url": "https://github.com/constellation-app/constellation/commit/1bdc1b05e8ce7b1462b71a9b838ccdda6324db71", "message": "Merge branch 'master' into layerfix", "committedDate": "2020-07-08T05:39:17Z", "type": "commit"}, {"oid": "88bab42c895839904d016bdf282db0e411970756", "url": "https://github.com/constellation-app/constellation/commit/88bab42c895839904d016bdf282db0e411970756", "message": "Merge branch 'master' into layerfix", "committedDate": "2020-07-09T00:03:39Z", "type": "commit"}]}