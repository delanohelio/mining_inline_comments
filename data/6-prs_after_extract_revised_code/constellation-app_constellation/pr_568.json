{"pr_number": 568, "pr_title": "Fix a bug with split nodes plugin", "pr_createdAt": "2020-06-05T08:08:38Z", "pr_url": "https://github.com/constellation-app/constellation/pull/568", "timeline": [{"oid": "e21df02894d567fd829e0e6839a54b5a58ef4bcd", "url": "https://github.com/constellation-app/constellation/commit/e21df02894d567fd829e0e6839a54b5a58ef4bcd", "message": ":bug: Fix a bug with split nodes plugin\n* The split nodes plugin was only working splitting for one node. It now works as expected for all nodes selected on the graph.", "committedDate": "2020-06-05T08:06:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1NDk0NQ==", "url": "https://github.com/constellation-app/constellation/pull/568#discussion_r437054945", "bodyText": "Why set the type to HostName when the identifier is an IP address?", "author": "cygnus-x-1", "createdAt": "2020-06-08T23:26:31Z", "path": "CoreDataAccessView/test/unit/src/au/gov/asd/tac/constellation/views/dataaccess/plugins/clean/SplitNodesPluginNGTest.java", "diffHunk": "@@ -96,7 +97,7 @@ public void testQueryWithTypes() throws Exception {\n         expResult.set(GraphRecordStoreUtilities.SOURCE + VisualConcept.VertexAttribute.IDENTIFIER, \"+123456789\");\n         expResult.set(GraphRecordStoreUtilities.SOURCE + AnalyticConcept.VertexAttribute.TYPE, AnalyticConcept.VertexType.TELEPHONE_IDENTIFIER);\n         expResult.set(GraphRecordStoreUtilities.DESTINATION + VisualConcept.VertexAttribute.IDENTIFIER, \"192.168.1.1\");\n-        expResult.set(GraphRecordStoreUtilities.DESTINATION + AnalyticConcept.VertexAttribute.TYPE, AnalyticConcept.VertexType.URL);\n+        expResult.set(GraphRecordStoreUtilities.DESTINATION + AnalyticConcept.VertexAttribute.TYPE, AnalyticConcept.VertexType.HOST_NAME);", "originalCommit": "e21df02894d567fd829e0e6839a54b5a58ef4bcd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NTEyMA==", "url": "https://github.com/constellation-app/constellation/pull/568#discussion_r437075120", "bodyText": "I didn't think about this change too much though I didn't think it was a problem until your comment. The reference to URL was wrong and the unit test was failing so I changed it to HOSTNAME which is what that IP was resolving to.  Though it should be IP address so I think there is a bug with Types not resolving correctly @cygnus-x-1 ?", "author": "arcturus2", "createdAt": "2020-06-09T00:42:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1NDk0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzODA4Nw==", "url": "https://github.com/constellation-app/constellation/pull/568#discussion_r437238087", "bodyText": "I don't see how the type could be causing issues here - the type should be irrelevant to the operation of this plugin. However, if the type is causing issues - then perhaps there is a schema-related bug that needs resolving?", "author": "cygnus-x-1", "createdAt": "2020-06-09T08:43:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1NDk0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxODE0OA==", "url": "https://github.com/constellation-app/constellation/pull/568#discussion_r441318148", "bodyText": "the type should be irrelevant to the operation of this plugin\n\nNot really @cygnus-x-1, the plugin has to pick a type for the text it splits up.\n\nthen perhaps there is a schema-related bug that needs resolving\n\nNot sure. For the IP 192.168.1.1 there are 3 possible types and using the AnalyticDominanceCalculator the one with highest priority is HOST_NAME so that's why it's getting picked. Below is the output of the possible types when I run the unit test:\nJun 17, 2020 4:34:22 PM au.gov.asd.tac.constellation.graph.schema.type.SchemaVertexTypeUtilities matchVertexTypes\nWARNING: Multiple types matched identifier 192.168.1.1: [Network Identifier.IP Address.IPv4 Address, Online Location.Host Name]\n\nNote that if I run the 'Extract Types from Text\" plugin and put in 192.168.1.1 I get \"IPv4 Address\" for the type which is inconsistent to Hostname here. The issue there looks like different methods are used. Split nodes uses SchemaVertexTypeUtilities.matchVertexTypes() and the applies the VertexDominantCalculator whereas \"Extract Types from Text\" plugin uses SchemaVertexTypeUtilities.extractVertexTypes().\nI would suggest this is a bug and should be resolved asap but outside the scope of how Split Nodes plugin works", "author": "arcturus2", "createdAt": "2020-06-17T06:50:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1NDk0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI0ODk2NQ==", "url": "https://github.com/constellation-app/constellation/pull/568#discussion_r443248965", "bodyText": "@cygnus-x-1 I created #596 to continue this discussion. I'm going to merge this PR to fix the original bug and unit test.", "author": "arcturus2", "createdAt": "2020-06-21T19:21:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1NDk0NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1NTYyNQ==", "url": "https://github.com/constellation-app/constellation/pull/568#discussion_r437055625", "bodyText": "I must be missing something here - but I would have thought that by removing the RecordStore iterator you're treating it as a Record and so only the one data record currently pointed at will be modified.", "author": "cygnus-x-1", "createdAt": "2020-06-08T23:28:59Z", "path": "CoreDataAccessView/src/au/gov/asd/tac/constellation/views/dataaccess/plugins/clean/SplitNodesPlugin.java", "diffHunk": "@@ -157,19 +157,16 @@ private void editResultStore(final RecordStore result, final String left, final\n         result.set(GraphRecordStoreUtilities.DESTINATION + VisualConcept.VertexAttribute.IDENTIFIER, right);\n \n         //Loops through all of the Node attributes and copies them to the new node\n-        query.reset();\n-        while (query.next()) {\n-            for (final String key : query.keys()) {\n-                if (key.endsWith(\".[id]\") || SOURCE_IDENTIFIER.equals(key)) {\n-                    //Skips the id and Identifier to make the new node unique\n-                } else if ((GraphRecordStoreUtilities.SOURCE + VisualConcept.VertexAttribute.X).equals(key)\n-                        || (GraphRecordStoreUtilities.SOURCE + VisualConcept.VertexAttribute.Y).equals(key)\n-                        || (GraphRecordStoreUtilities.SOURCE + VisualConcept.VertexAttribute.Z).equals(key)) {\n-                    //The coordinates are also skipped so that the second node is not created in the exact same location\n-                    //as the first node\n-                } else {\n-                    result.set(GraphRecordStoreUtilities.DESTINATION + key.replace(GraphRecordStoreUtilities.SOURCE, \"\"), query.get(key));\n-                }\n+        for (final String key : query.keys()) {", "originalCommit": "e21df02894d567fd829e0e6839a54b5a58ef4bcd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NDI3NA==", "url": "https://github.com/constellation-app/constellation/pull/568#discussion_r437074274", "bodyText": "The original bug was the the query RecordStore (passed by reference) in the this method was looping through to the end which meant that when you returned from editRecordStore you were at the end so all other nodes selected would not get a turn.\nThe intension of this bit of the code was to share the attributes of the node that is being split with the splitter nodes. Therefore we don't need to look and we only care about the keys of the current record.\nI wrote a unit test to confirm that it works as expected.", "author": "arcturus2", "createdAt": "2020-06-09T00:38:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1NTYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzNzI5OQ==", "url": "https://github.com/constellation-app/constellation/pull/568#discussion_r437237299", "bodyText": "Ahh I see, the iteration is happening elsewhere.", "author": "cygnus-x-1", "createdAt": "2020-06-09T08:42:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1NTYyNQ=="}], "type": "inlineReview", "revised_code": null}]}