{"pr_number": 446, "pr_title": "Rule (java) switch cases should end with an unconditional break statement", "pr_createdAt": "2020-04-21T05:30:43Z", "pr_url": "https://github.com/constellation-app/constellation/pull/446", "timeline": [{"oid": "bb3c4ec0b0662cfea1c8d9696b2d270d2ed4f252", "url": "https://github.com/constellation-app/constellation/commit/bb3c4ec0b0662cfea1c8d9696b2d270d2ed4f252", "message": "Update TemporalFormatting.java\n\nAdded some case statement breaks to conform to the rule", "committedDate": "2020-04-02T04:48:11Z", "type": "commit"}, {"oid": "36671e24f50358e2d11ff3e55a7a23b386482eaf", "url": "https://github.com/constellation-app/constellation/commit/36671e24f50358e2d11ff3e55a7a23b386482eaf", "message": "Update to Rule", "committedDate": "2020-04-16T05:51:31Z", "type": "commit"}, {"oid": "a44ac8c171388f839932ee9c505ebcab4fe851b3", "url": "https://github.com/constellation-app/constellation/commit/a44ac8c171388f839932ee9c505ebcab4fe851b3", "message": "Update to Rule", "committedDate": "2020-04-21T02:36:18Z", "type": "commit"}, {"oid": "a1c6feaab0bc9701204e8a25371625624eb8b950", "url": "https://github.com/constellation-app/constellation/commit/a1c6feaab0bc9701204e8a25371625624eb8b950", "message": "Merge branch 'master' into RULE-(Java)-Switch-cases-should-end-with-an-unconditional-break-statement", "committedDate": "2020-04-21T02:39:26Z", "type": "commit"}, {"oid": "ac70f02e6dd7060e0445f587a7ef88492ce772d1", "url": "https://github.com/constellation-app/constellation/commit/ac70f02e6dd7060e0445f587a7ef88492ce772d1", "message": "Update MdsArranger.java", "committedDate": "2020-04-21T05:27:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwNDUyOA==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412004528", "bodyText": "@formalhaut69 why is this class deleted?", "author": "arcturus2", "createdAt": "2020-04-21T08:59:07Z", "path": "CoreHistogramView/src/au/gov/asd/tac/constellation/views/histogram/BinElementType.java", "diffHunk": "@@ -1,68 +0,0 @@\n-/*", "originalCommit": "ac70f02e6dd7060e0445f587a7ef88492ce772d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0MzkxNQ==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412543915", "bodyText": "@arcturus2 I came across it because 4 methods within it were flagged by SQ as empty but it appears that the entire class is unused.", "author": "formalhaut69", "createdAt": "2020-04-21T22:48:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwNDUyOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwNzIyMg==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412007222", "bodyText": "Was this method removed because it wasn't used?", "author": "arcturus2", "createdAt": "2020-04-21T09:02:52Z", "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/SharedDrawable.java", "diffHunk": "@@ -222,17 +222,6 @@ public static void updateGlyphTextureController(final GL3 glCurrent) {\n         }\n     }\n \n-    /**", "originalCommit": "ac70f02e6dd7060e0445f587a7ef88492ce772d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0NDY5Mw==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412544693", "bodyText": "Yeah, it was calling the two methods that SQ flagged as empty. I took a look at it and it was never used within the project", "author": "formalhaut69", "createdAt": "2020-04-21T22:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwNzIyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3NTUyNA==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412975524", "bodyText": "This is a static method, perhaps it was intended as a sort of utility function?", "author": "cygnus-x-1", "createdAt": "2020-04-22T13:20:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwNzIyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE0OTk0Nw==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r413149947", "bodyText": "I think so @cygnus-x-1. I put in a break point here and in the dispose() of GlyphManagerOpenGLController and wasn't able to see any of them being executed so I concur that they are not used - even magically.\nI thought I'd create an Action in Experimental -> Developer -> Clear Glyph Textures Buffer which basically calls:\nSharedDrawable.deleteTextures();\nI then got an exception which said \"There is no OpenGL context current in the current thread.\"\nSo I modified the method to look like this:\n        gl.getContext().makeCurrent();\n        gl.glDeleteTextures(1, new int[]{iconTextureName}, 0);\n        glyphTextureController.dispose(gl);\n        gl.getContext().release();\n\nRunning this seemed fine but when I then tried to create a new graph I got this exception:\ncom.jogamp.opengl.GLException: Thread[AWT-EventQueue-1,6,main] glGetError() returned the following error codes after a call to glBindTexture(<int> 0x8C1A, <int> 0x1): GL_INVALID_OPERATION ( 1282 0x502), \n\tat com.jogamp.opengl.DebugGL4bc.writeGLError(DebugGL4bc.java:31781)\n\tat com.jogamp.opengl.DebugGL4bc.glBindTexture(DebugGL4bc.java:730)\n\tat au.gov.asd.tac.constellation.visual.opengl.utilities.GLTools.loadSharedIconTextures(GLTools.java:605)\n\tat au.gov.asd.tac.constellation.visual.opengl.utilities.GLTools.loadSharedIconTextures(GLTools.java:799)\n\tat au.gov.asd.tac.constellation.visual.opengl.renderer.batcher.IconBatcher.updateIconTexture(IconBatcher.java:117)\n\tat au.gov.asd.tac.constellation.visual.opengl.renderer.GraphRenderable.lambda$getChangeProcessor$1(GraphRenderable.java:164)\n\tat au.gov.asd.tac.constellation.visual.opengl.renderer.GraphRenderable.lambda$update$29(GraphRenderable.java:376)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\n\tat au.gov.asd.tac.constellation.visual.opengl.renderer.GraphRenderable.update(GraphRenderable.java:375)\n\tat au.gov.asd.tac.constellation.visual.opengl.renderer.GLRenderer.lambda$display$2(GLRenderer.java:165)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\n\tat au.gov.asd.tac.constellation.visual.opengl.renderer.GLRenderer.display(GLRenderer.java:164)\n\tat jogamp.opengl.GLDrawableHelper.displayImpl(GLDrawableHelper.java:692)\n\tat jogamp.opengl.GLDrawableHelper.display(GLDrawableHelper.java:674)\n\tat com.jogamp.opengl.awt.GLCanvas$11.run(GLCanvas.java:1428)\n\tat jogamp.opengl.GLDrawableHelper.invokeGLImpl(GLDrawableHelper.java:1293)\nCaused: com.jogamp.opengl.GLException: Caught GLException: Thread[AWT-EventQueue-1,6,main] glGetError() returned the following error codes after a call to glBindTexture(<int> 0x8C1A, <int> 0x1): GL_INVALID_OPERATION ( 1282 0x502),  on thread AWT-EventQueue-1\n\tat com.jogamp.opengl.GLException.newGLException(GLException.java:76)\n\tat jogamp.opengl.GLDrawableHelper.invokeGLImpl(GLDrawableHelper.java:1327)\n\tat jogamp.opengl.GLDrawableHelper.invokeGL(GLDrawableHelper.java:1147)\n\tat com.jogamp.opengl.awt.GLCanvas$12.run(GLCanvas.java:1442)\n\tat java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:303)\n\tat java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:770)\n\tat java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)\n\tat java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)\n\tat java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:740)\n\tat org.netbeans.core.TimableEventQueue.dispatchEvent(TimableEventQueue.java:136)\n\tat java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)\n\tat java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)\n\tat java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)\n\tat java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)\n\tat java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\n\tat java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)\nCaused: java.lang.RuntimeException\n\tat com.jogamp.common.util.awt.AWTEDTExecutor.invoke(AWTEDTExecutor.java:58)\n\tat jogamp.opengl.awt.AWTThreadingPlugin.invokeOnOpenGLThread(AWTThreadingPlugin.java:103)\n\tat jogamp.opengl.ThreadingImpl.invokeOnOpenGLThread(ThreadingImpl.java:201)\n\tat com.jogamp.opengl.Threading.invokeOnOpenGLThread(Threading.java:202)\n\tat com.jogamp.opengl.Threading.invoke(Threading.java:221)\n\tat com.jogamp.opengl.awt.GLCanvas.display(GLCanvas.java:503)\n\tat au.gov.asd.tac.constellation.visual.opengl.renderer.GLVisualProcessor.performVisualUpdate(GLVisualProcessor.java:196)\n\tat au.gov.asd.tac.constellation.utilities.visual.VisualProcessor.lambda$update$0(VisualProcessor.java:211)\n[catch] at java.base/java.lang.Thread.run(Thread.java:834)\n\nI think given the method isn't used and has serious side effects as it is then its not worth keeping IMO. What do you think @cygnus-x-1 @algol60  @formalhaut69 ?", "author": "arcturus2", "createdAt": "2020-04-22T16:52:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwNzIyMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwNzYzMA==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412007630", "bodyText": "Was this method removed because it wasn't used?", "author": "arcturus2", "createdAt": "2020-04-21T09:03:22Z", "path": "CoreOpenGLDisplay/src/au/gov/asd/tac/constellation/visual/opengl/utilities/glyphs/GlyphManagerOpenGLController.java", "diffHunk": "@@ -75,11 +75,6 @@ public void bind(GL3 gl, int coordinatesUniformLocation, int coordinatesTextureU\n         bindGlyphs(gl, glyphsUniformLocation, glyphsTexureUnit);\n     }\n \n-    public void dispose(GL3 gl) {", "originalCommit": "ac70f02e6dd7060e0445f587a7ef88492ce772d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0ODcyMA==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412548720", "bodyText": "Yep, this method is called by deleteTextures which is never used.", "author": "formalhaut69", "createdAt": "2020-04-21T22:59:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwNzYzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3MDQ2OQ==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412970469", "bodyText": "This has clearly not been implemented, but I'd be cautious here as dispose is a core function in GL so I suspect that it should be implemented to avoid memory leaks on the graphics card.", "author": "cygnus-x-1", "createdAt": "2020-04-22T13:13:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwNzYzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1MTA5NQ==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r413151095", "bodyText": "I think that this could be removed based on my comment https://github.com/constellation-app/constellation/pull/446/files#r413149947", "author": "arcturus2", "createdAt": "2020-04-22T16:54:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwNzYzMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxMzQ1Mw==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412013453", "bodyText": "@formalhaut69 as tempting as it is to add breaks here, the fall through is intentional; a way to append all subsequent date formats which I think is clever. Noted that SQ will flag it and understand its reasoning. Not sure what others think but I'd like to mark this as wont fix.\nNote that as is this can't be imported because it breaks current functionality and the unit tests; try running TemporalFormattingNGTest and you will see what I mean.", "author": "arcturus2", "createdAt": "2020-04-21T09:11:25Z", "path": "CoreUtilities/src/au/gov/asd/tac/constellation/utilities/temporal/TemporalFormatting.java", "diffHunk": "@@ -295,10 +295,13 @@ private static void completeDateString(final StringBuilder dateTimeStringBuilder\n         switch (currentLength) {\n             case 0:\n                 dateTimeStringBuilder.append(\"1970\");\n+                break;", "originalCommit": "ac70f02e6dd7060e0445f587a7ef88492ce772d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU0OTEwNA==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412549104", "bodyText": "@arcturus2 Okay, no worries. Would you like me to remove these breaks and resubmit the pull request?", "author": "formalhaut69", "createdAt": "2020-04-21T23:00:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxMzQ1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3NjUxMQ==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412976511", "bodyText": "Yep - you should revert this particular change and mark the SQ warnings as all good.", "author": "cygnus-x-1", "createdAt": "2020-04-22T13:21:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxMzQ1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM4NTAzMg==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r413385032", "bodyText": "@formalhaut69 @arcturus2 @cygnus-x-1 Assuming you are referring to the blocker code smell, I have already done this", "author": "antares1470", "createdAt": "2020-04-22T22:49:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxMzQ1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "98f4bc92108945a6c86ee22daad6c14518e0e120", "chunk": "diff --git a/CoreUtilities/src/au/gov/asd/tac/constellation/utilities/temporal/TemporalFormatting.java b/CoreUtilities/src/au/gov/asd/tac/constellation/utilities/temporal/TemporalFormatting.java\nindex 6d4c2bf3c..bd4ae7151 100644\n--- a/CoreUtilities/src/au/gov/asd/tac/constellation/utilities/temporal/TemporalFormatting.java\n+++ b/CoreUtilities/src/au/gov/asd/tac/constellation/utilities/temporal/TemporalFormatting.java\n\n@@ -295,13 +295,10 @@ public class TemporalFormatting {\n         switch (currentLength) {\n             case 0:\n                 dateTimeStringBuilder.append(\"1970\");\n-                break;\n             case YEAR_FORMAT_LENGTH:\n                 dateTimeStringBuilder.append(\"-01\");\n-                break;\n             case YEAR_MONTH_FORMAT_LENGTH:\n                 dateTimeStringBuilder.append(\"-01\");\n-                break;\n             default:\n                 break;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3MjA4MA==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412972080", "bodyText": "It looks like you deleted the overrides in DualGraph...", "author": "cygnus-x-1", "createdAt": "2020-04-22T13:15:57Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/LockingManager.java", "diffHunk": "@@ -145,12 +142,15 @@ public T startReading() {\n     }\n \n     protected void update(final Object description, Object editor) {\n+        // Overridden in class DualGraph", "originalCommit": "ac70f02e6dd7060e0445f587a7ef88492ce772d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM4ODExNQ==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r413388115", "bodyText": "Yeah I think I came across the issues in locking manager before the ones in DualGraph. I've gone back and removed the unused methods", "author": "formalhaut69", "createdAt": "2020-04-22T22:56:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3MjA4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5MjA5Nw==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r413592097", "bodyText": "What I meant was, this comment is no longer valid as you've removed the overridden methods in DualGraph.", "author": "cygnus-x-1", "createdAt": "2020-04-23T07:51:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3MjA4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE4MDM0Ng==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r414180346", "bodyText": "The update method is still being overridden in DualGraph. This is the section where its used, specifically line 87\n\n  \n    \n      constellation/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/DualGraph.java\n    \n    \n        Lines 84 to 98\n      in\n      98f4bc9\n    \n    \n    \n    \n\n        \n          \n           private LockingManager<LockingStoreGraph> createLockingManager() { \n        \n\n        \n          \n               return new LockingManager<LockingStoreGraph>() { \n        \n\n        \n          \n                   @Override \n        \n\n        \n          \n                   protected void update(final Object description, Object editor) { \n        \n\n        \n          \n                       final GraphChangeEvent event = new GraphChangeEvent(previousEvent, DualGraph.this, editor, description); \n        \n\n        \n          \n                       previousEvent = event; \n        \n\n        \n          \n                       SwingUtilities.invokeLater(() -> { \n        \n\n        \n          \n                           synchronized (graphChangeListeners) { \n        \n\n        \n          \n                               for (GraphChangeListener listener : graphChangeListeners) { \n        \n\n        \n          \n                                   listener.graphChanged(event); \n        \n\n        \n          \n                               } \n        \n\n        \n          \n                           } \n        \n\n        \n          \n                       }); \n        \n\n        \n          \n                   } \n        \n\n        \n          \n               };", "author": "formalhaut69", "createdAt": "2020-04-23T23:02:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3MjA4MA=="}], "type": "inlineReview", "revised_code": {"commit": "98f4bc92108945a6c86ee22daad6c14518e0e120", "chunk": "diff --git a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/LockingManager.java b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/LockingManager.java\nindex 6e6a11e25..521c8906d 100644\n--- a/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/LockingManager.java\n+++ b/CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/locking/LockingManager.java\n\n@@ -145,13 +145,6 @@ public class LockingManager<T extends LockingTarget> implements Serializable {\n         // Overridden in class DualGraph\n     }\n \n-    protected void undoOccurred() {\n-        // Overridden in class DualGraph\n-    }\n-\n-    protected void redoOccurred() {\n-        // Overridden in class DualGraph\n-    }\n \n     public void commit(final Object description, final String commitName) throws DuplicateKeyException {\n         if (currentEdit == null || !globalWriteLock.isHeldByCurrentThread()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3MzYwMg==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412973602", "bodyText": "This comment is inconsistent with other similar comments which read\n// Default case when the position of the value getter is equal to 0\n// It has been intentionally left blank", "author": "cygnus-x-1", "createdAt": "2020-04-22T13:17:44Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/undo/access/AttributeValueUpdater3.java", "diffHunk": "@@ -92,10 +92,12 @@ public void getUndo(UndoGraphEditState edit) {\n         new ValueGetter() {\n             @Override\n             public void getExecute(UndoGraphEditState edit) {\n+                // This method has been intentionally left blank", "originalCommit": "ac70f02e6dd7060e0445f587a7ef88492ce772d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQwMTMxNA==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r413401314", "bodyText": "@cygnus-x-1 I could be wrong but the valueGetters in all of the classes except for the two you've pointed out do nothing in index 0 so it appears that that's a default case to intentionally do nothing. For some reason in this class and in class IdValueUpdater3, the empty valueGetter is at position 2 of the array instead of 0 so its not the default case. I could not figure out why they've done it like this here. I can change the comment but I'm not sure what to change it to since I can't explain why they've done it differently. Let me know if I'm misunderstanding something.", "author": "formalhaut69", "createdAt": "2020-04-22T23:29:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3MzYwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ0MTIzOA==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r413441238", "bodyText": "I missed that context from the snippets I was looking at. I also don't fully understand how the undo stack is working... so i'll take your best judgement here.", "author": "cygnus-x-1", "createdAt": "2020-04-23T01:23:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3MzYwMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3Mzg5OA==", "url": "https://github.com/constellation-app/constellation/pull/446#discussion_r412973898", "bodyText": "This comment is inconsistent with other similar comments which read\n// Default case when the position of the value getter is equal to 0\n// It has been intentionally left blank", "author": "cygnus-x-1", "createdAt": "2020-04-22T13:18:06Z", "path": "CoreGraphFramework/src/au/gov/asd/tac/constellation/graph/undo/access/IdValueUpdater3.java", "diffHunk": "@@ -92,10 +92,12 @@ public void getUndo(UndoGraphEditState edit) {\n         new ValueGetter() {\n             @Override\n             public void getExecute(UndoGraphEditState edit) {\n+                // This method has been left intentionally blank", "originalCommit": "ac70f02e6dd7060e0445f587a7ef88492ce772d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "98f4bc92108945a6c86ee22daad6c14518e0e120", "url": "https://github.com/constellation-app/constellation/commit/98f4bc92108945a6c86ee22daad6c14518e0e120", "message": "Update with requested changes", "committedDate": "2020-04-23T04:24:16Z", "type": "commit"}]}