{"pr_number": 534, "pr_title": "Add in chained hashmods (more than one csv to be able to run at a single time).", "pr_createdAt": "2020-05-19T14:11:01Z", "pr_url": "https://github.com/constellation-app/constellation/pull/534", "timeline": [{"oid": "e0fa47703950f616526a8835b38724bc3d76edc5", "url": "https://github.com/constellation-app/constellation/commit/e0fa47703950f616526a8835b38724bc3d76edc5", "message": "Fixups from code review for hashmod", "committedDate": "2020-05-17T15:40:54Z", "type": "commit"}, {"oid": "13b89606f20b109702c05b17ddc8bc31db05c4cc", "url": "https://github.com/constellation-app/constellation/commit/13b89606f20b109702c05b17ddc8bc31db05c4cc", "message": "Fixups from code review for hashmod", "committedDate": "2020-05-18T04:09:56Z", "type": "commit"}, {"oid": "972db9c26a3660deee76db30bc318c3c7e89228a", "url": "https://github.com/constellation-app/constellation/commit/972db9c26a3660deee76db30bc318c3c7e89228a", "message": "Merge branch 'master' of https://github.com/CrucisGamma/constellation", "committedDate": "2020-05-19T14:05:15Z", "type": "commit"}, {"oid": "d254fbd66dd2e5c1c79d86bafbadf20325d88d49", "url": "https://github.com/constellation-app/constellation/commit/d254fbd66dd2e5c1c79d86bafbadf20325d88d49", "message": "Add in the concept of chained hashmods to be run one after another.", "committedDate": "2020-05-19T14:06:32Z", "type": "commit"}, {"oid": "9ae658d1e081267775dd1f7f7b1b1d406ee08a42", "url": "https://github.com/constellation-app/constellation/commit/9ae658d1e081267775dd1f7f7b1b1d406ee08a42", "message": "Add in the concept of chained hashmods to be run one after another.", "committedDate": "2020-05-20T04:59:25Z", "type": "commit"}, {"oid": "e4ccb3093e8d7ec49252f25502e4bb96de371c93", "url": "https://github.com/constellation-app/constellation/commit/e4ccb3093e8d7ec49252f25502e4bb96de371c93", "message": "Add in creating new named attributes.", "committedDate": "2020-05-20T17:01:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MjQyOA==", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428342428", "bodyText": "Does the for loop need to run over the first chained hashmod in the array? If so, you'll need to start at i=0", "author": "antares1470", "createdAt": "2020-05-20T22:25:10Z", "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -65,14 +67,23 @@ public void actionPerformed(final ActionEvent ev) {\n         final DialogDescriptor dialog = new DialogDescriptor(hashmodPanel, Bundle.MSG_Title(), true, e -> {\n             if (e.getActionCommand().equals(\"OK\")) {\n                 final Hashmod hashmod1 = hashmodPanel.getHashmod();\n+                final Boolean isChainedHashmods = hashmodPanel.isChainedHashmods();\n+                final boolean createAttributes = hashmodPanel.getCreateAttributes();\n+                final Hashmod[] chainedHashmods = hashmodPanel.getChainedHashmods();\n+                final int numChainedHashmods = hashmodPanel.numChainedHashmods();\n                 final Boolean createNonMatchingKeysVertexes = hashmodPanel.getCreateVertexes();\n                 hashmodPanel.setAttributeNames(hashmod1.getCSVKey(), hashmod1.getCSVHeader(1), hashmod1.getCSVHeader(2));\n \n                 PluginExecution.withPlugin(new SimpleEditPlugin(Bundle.CTL_HashmodAction()) {\n                     @Override\n                     public void edit(final GraphWriteMethods wg, final PluginInteraction interaction, final PluginParameters parameters) throws InterruptedException {\n                         if (hashmod1 != null) {\n-                            HashmodAction.run(wg, interaction, hashmod1, createNonMatchingKeysVertexes);\n+                            HashmodAction.run(wg, interaction, hashmod1, createNonMatchingKeysVertexes, true, createAttributes);\n+                        }\n+                        if (isChainedHashmods && numChainedHashmods >= 2) {\n+                            for (int i = 1; i < numChainedHashmods; i++) {", "originalCommit": "e4ccb3093e8d7ec49252f25502e4bb96de371c93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MjM0OA==", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428392348", "bodyText": "The first one (hashmod1) has already been run so it starts from the second (aka chainedHashmods[i])", "author": "CrucisGamma", "createdAt": "2020-05-21T01:11:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MjQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwMTAyMw==", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428401023", "bodyText": "I figured it would be something like that, just wanted to make sure that was intentional :)", "author": "antares1470", "createdAt": "2020-05-21T01:46:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MjQyOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MzgzMg==", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428343832", "bodyText": "StringUtils.isNotBlank(nextAttr) instead of !StringUtils.isBlank(nextAttr)", "author": "antares1470", "createdAt": "2020-05-20T22:28:32Z", "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -103,6 +114,13 @@ private static void run(final GraphWriteMethods wg, final PluginInteraction inte\n                 attributeValues[attrCount] = nextAttribute;\n                 csvValues[attrCount] = i;\n                 attrCount++;\n+            } else if (createAttributes && !StringUtils.isBlank(nextAttr)) {", "originalCommit": "e4ccb3093e8d7ec49252f25502e4bb96de371c93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec977c78dd2571a6b4f27efc786e39bbebab8711", "chunk": "diff --git a/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java b/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java\nindex 94e667065..d64693df0 100644\n--- a/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java\n+++ b/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java\n\n@@ -114,8 +116,17 @@ public final class HashmodAction implements ActionListener {\n                 attributeValues[attrCount] = nextAttribute;\n                 csvValues[attrCount] = i;\n                 attrCount++;\n-            } else if (createAttributes && !StringUtils.isBlank(nextAttr)) {\n-                final int newAttribute = wg.addAttribute(GraphElementType.VERTEX, \"string\", nextAttr, nextAttr, \"\", null);\n+            } else if (createAttributes && StringUtils.isNotBlank(nextAttr)) {\n+                final String[] attributeName = nextAttr.split(\"\\\\.\");\n+                String newAttributeType = StringAttributeDescription.ATTRIBUTE_NAME;\n+\n+                if (attributeName.length >= 2) {\n+                    if (AttributeRegistry.getDefault().getAttributes().get(attributeName[attributeName.length - 1]) != null) {\n+                        newAttributeType = attributeName[attributeName.length - 1];\n+                    }\n+                }\n+\n+                final int newAttribute = wg.addAttribute(GraphElementType.VERTEX, newAttributeType, nextAttr, nextAttr, \"\", null);\n                 if (newAttribute != Graph.NOT_FOUND) {\n                     attributeValues[attrCount] = newAttribute;\n                     csvValues[attrCount] = i;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0NjM1MA==", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428346350", "bodyText": "Instead of \"string\", use StringAttributeDescription.ATTRIBUTE_NAME", "author": "antares1470", "createdAt": "2020-05-20T22:35:20Z", "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -103,6 +114,13 @@ private static void run(final GraphWriteMethods wg, final PluginInteraction inte\n                 attributeValues[attrCount] = nextAttribute;\n                 csvValues[attrCount] = i;\n                 attrCount++;\n+            } else if (createAttributes && !StringUtils.isBlank(nextAttr)) {\n+                final int newAttribute = wg.addAttribute(GraphElementType.VERTEX, \"string\", nextAttr, nextAttr, \"\", null);", "originalCommit": "e4ccb3093e8d7ec49252f25502e4bb96de371c93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec977c78dd2571a6b4f27efc786e39bbebab8711", "chunk": "diff --git a/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java b/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java\nindex 94e667065..d64693df0 100644\n--- a/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java\n+++ b/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java\n\n@@ -114,8 +116,17 @@ public final class HashmodAction implements ActionListener {\n                 attributeValues[attrCount] = nextAttribute;\n                 csvValues[attrCount] = i;\n                 attrCount++;\n-            } else if (createAttributes && !StringUtils.isBlank(nextAttr)) {\n-                final int newAttribute = wg.addAttribute(GraphElementType.VERTEX, \"string\", nextAttr, nextAttr, \"\", null);\n+            } else if (createAttributes && StringUtils.isNotBlank(nextAttr)) {\n+                final String[] attributeName = nextAttr.split(\"\\\\.\");\n+                String newAttributeType = StringAttributeDescription.ATTRIBUTE_NAME;\n+\n+                if (attributeName.length >= 2) {\n+                    if (AttributeRegistry.getDefault().getAttributes().get(attributeName[attributeName.length - 1]) != null) {\n+                        newAttributeType = attributeName[attributeName.length - 1];\n+                    }\n+                }\n+\n+                final int newAttribute = wg.addAttribute(GraphElementType.VERTEX, newAttributeType, nextAttr, nextAttr, \"\", null);\n                 if (newAttribute != Graph.NOT_FOUND) {\n                     attributeValues[attrCount] = newAttribute;\n                     csvValues[attrCount] = i;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0NzIyMQ==", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428347221", "bodyText": "Use the ternary operator here", "author": "antares1470", "createdAt": "2020-05-20T22:37:59Z", "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodPanel.java", "diffHunk": "@@ -55,8 +62,48 @@ public HashmodPanel(final Hashmod hashmod) {\n         initComponents();\n     }\n \n-    public Hashmod getHashmod() {\n-        return new Hashmod(hashmodCSVFileStr);\n+    public final Hashmod getHashmod() {\n+        if (!isChainedHashmods()) {\n+            return new Hashmod(hashmodCSVFileStr);\n+        }\n+        if (numChainedHashmods > 0) {\n+            return chainedHashmods[0];\n+        }\n+        return null;\n+    }\n+\n+    public Boolean isChainedHashmods() {\n+        return isChainedHashmods;\n+    }\n+\n+    public final Hashmod[] getChainedHashmods() {\n+        if (isChainedHashmods()) {\n+            return chainedHashmods;\n+        }\n+        return null;", "originalCommit": "e4ccb3093e8d7ec49252f25502e4bb96de371c93", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec977c78dd2571a6b4f27efc786e39bbebab8711", "chunk": "diff --git a/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodPanel.java b/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodPanel.java\nindex fda67b1c6..91e5a7e97 100644\n--- a/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodPanel.java\n+++ b/CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodPanel.java\n\n@@ -66,10 +66,7 @@ public class HashmodPanel extends javax.swing.JPanel {\n         if (!isChainedHashmods()) {\n             return new Hashmod(hashmodCSVFileStr);\n         }\n-        if (numChainedHashmods > 0) {\n-            return chainedHashmods[0];\n-        }\n-        return null;\n+        return numChainedHashmods > 0 ? chainedHashmods[0] : null;\n     }\n \n     public Boolean isChainedHashmods() {\n"}}, {"oid": "ec977c78dd2571a6b4f27efc786e39bbebab8711", "url": "https://github.com/constellation-app/constellation/commit/ec977c78dd2571a6b4f27efc786e39bbebab8711", "message": "Add in creating new named attributes.  Last .field in the name of the column header specifies the name of the attribute type (or you get a string).", "committedDate": "2020-05-21T14:32:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4NDMzMg==", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428984332", "bodyText": "This panel looks something that could be done using plugin parameters and a standalone plugin. This would allow more flexibility in how the plugin can be used, and not lock the UI elements down to the EDT (Swing thread).", "author": "cygnus-x-1", "createdAt": "2020-05-22T00:32:18Z", "path": "CoreGraphUtilities/src/au/gov/asd/tac/constellation/graph/utilities/hashmod/HashmodAction.java", "diffHunk": "@@ -65,14 +69,23 @@ public void actionPerformed(final ActionEvent ev) {\n         final DialogDescriptor dialog = new DialogDescriptor(hashmodPanel, Bundle.MSG_Title(), true, e -> {", "originalCommit": "ec977c78dd2571a6b4f27efc786e39bbebab8711", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4OTgzOQ==", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r428989839", "bodyText": "I was thinking the same thing when I merged in the original version of Hashmod. I was going to make the changes and put a PR up but have not been able to.\nAs @cygnus-x-1 mentions, there are many advantages to following the plugin framework approach like not having to worry about creating your own GUI for it. Defining the plugin parameters is enough and you can do something like PluginExecution.withPlugin(PluginRegistry.HASHMOD).interactively(true).executeLater(graph); and your GUI is done.\nWould you be able to modify it @CrucisGamma? Like I said, I was going to give it a go but probably won't be able to do that today.", "author": "arcturus2", "createdAt": "2020-05-22T00:54:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4NDMzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NzcxMw==", "url": "https://github.com/constellation-app/constellation/pull/534#discussion_r429877713", "bodyText": "Discussed this with @CrucisGamma and given its currently experimental, I'll get this merged in so @CrucisGamma can continue with testing.\nWe agreed that creating custom GUIs is not desirable and it turned out @CrucisGamma did try using plugin parameters but ran into some issues.\nHappy to revisit this again and look to migrate plugins in the experimental menu over to plugin parameters as a separate task.", "author": "arcturus2", "createdAt": "2020-05-25T11:11:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4NDMzMg=="}], "type": "inlineReview", "revised_code": null}]}