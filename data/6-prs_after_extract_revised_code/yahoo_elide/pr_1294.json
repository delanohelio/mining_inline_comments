{"pr_number": 1294, "pr_title": "fixes for Async Models lifecycle hooks failing", "pr_createdAt": "2020-04-29T13:40:23Z", "pr_url": "https://github.com/yahoo/elide/pull/1294", "timeline": [{"oid": "6fa51aee68bcedff61e4a3a4ef2ee99f37d646f8", "url": "https://github.com/yahoo/elide/commit/6fa51aee68bcedff61e4a3a4ef2ee99f37d646f8", "message": "elide standalone fixes for lifecycle hooks failing", "committedDate": "2020-04-29T13:36:10Z", "type": "commit"}, {"oid": "3187fd9619902936ba9217bf3cf593e79541af52", "url": "https://github.com/yahoo/elide/commit/3187fd9619902936ba9217bf3cf593e79541af52", "message": "Manual Binding of lifecycle hooks", "committedDate": "2020-04-29T19:06:31Z", "type": "commit"}, {"oid": "4cbbaf5047ab438bf3d6d441b4347af36836241f", "url": "https://github.com/yahoo/elide/commit/4cbbaf5047ab438bf3d6d441b4347af36836241f", "message": "Manual binding of lifecycle in elide spring", "committedDate": "2020-04-29T20:30:28Z", "type": "commit"}, {"oid": "e041368669469b86db7e4ca950a9e0cdcf7f2fb0", "url": "https://github.com/yahoo/elide/commit/e041368669469b86db7e4ca950a9e0cdcf7f2fb0", "message": "Refactor", "committedDate": "2020-04-29T20:34:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU5NjE3OA==", "url": "https://github.com/yahoo/elide/pull/1294#discussion_r417596178", "bodyText": "Might as well make this consistent - let's remove all life cycle hook annotations from this class.", "author": "aklish", "createdAt": "2020-04-29T20:37:45Z", "path": "elide-async/src/main/java/com/yahoo/elide/async/models/AsyncQuery.java", "diffHunk": "@@ -30,14 +28,15 @@\n \n /**\n  * Model for Async Query.\n+ * ExecuteQueryHook is binded manually during the elide startup,\n+ * after asyncexecutorservice is initialized.\n  */\n @Entity\n @Include(type = \"asyncQuery\", rootLevel = true)\n @ReadPermission(expression = \"Principal is Owner\")\n @UpdatePermission(expression = \"Prefab.Role.None\")\n @DeletePermission(expression = \"Prefab.Role.None\")\n @LifeCycleHookBinding(hook = UpdatePrincipalNameHook.class, operation = CREATE, phase = PRESECURITY)\n-@LifeCycleHookBinding(hook = ExecuteQueryHook.class, operation = CREATE, phase = POSTCOMMIT)", "originalCommit": "e041368669469b86db7e4ca950a9e0cdcf7f2fb0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f1ccfd1217e6c7e85d7c7facb9a95f4943fed83b", "chunk": "diff --git a/elide-async/src/main/java/com/yahoo/elide/async/models/AsyncQuery.java b/elide-async/src/main/java/com/yahoo/elide/async/models/AsyncQuery.java\nindex 6f8a4896b..5d789664f 100644\n--- a/elide-async/src/main/java/com/yahoo/elide/async/models/AsyncQuery.java\n+++ b/elide-async/src/main/java/com/yahoo/elide/async/models/AsyncQuery.java\n\n@@ -28,7 +23,7 @@ import javax.persistence.PrePersist;\n \n /**\n  * Model for Async Query.\n- * ExecuteQueryHook is binded manually during the elide startup,\n+ * ExecuteQueryHook & UpdatePrincipalNameHook is binded manually during the elide startup,\n  * after asyncexecutorservice is initialized.\n  */\n @Entity\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU5NjU1Ng==", "url": "https://github.com/yahoo/elide/pull/1294#discussion_r417596556", "bodyText": "I thought we were going to do all of this logic in the AsyncExecutorService bean?", "author": "aklish", "createdAt": "2020-04-29T20:38:35Z", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java", "diffHunk": "@@ -72,4 +70,10 @@ public AsyncCleanerService buildAsyncCleanerService(Elide elide, ElideConfigProp\n     public AsyncQueryDAO buildAsyncQueryDAO(Elide elide) {\n         return new DefaultAsyncQueryDAO(elide, elide.getDataStore());\n     }\n+\n+    @Override\n+    public void afterPropertiesSet() {\n+        ExecuteQueryHook executeQueryHook = new ExecuteQueryHook(asyncExecutorService);", "originalCommit": "e041368669469b86db7e4ca950a9e0cdcf7f2fb0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f1ccfd1217e6c7e85d7c7facb9a95f4943fed83b", "chunk": "diff --git a/elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java b/elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java\nindex 8a5bc3072..fd5260692 100644\n--- a/elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java\n+++ b/elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAsyncConfiguration.java\n\n@@ -70,10 +87,4 @@ public class ElideAsyncConfiguration implements InitializingBean {\n     public AsyncQueryDAO buildAsyncQueryDAO(Elide elide) {\n         return new DefaultAsyncQueryDAO(elide, elide.getDataStore());\n     }\n-\n-    @Override\n-    public void afterPropertiesSet() {\n-        ExecuteQueryHook executeQueryHook = new ExecuteQueryHook(asyncExecutorService);\n-        entityDictionary.bindTrigger(AsyncQuery.class, CREATE, POSTCOMMIT, executeQueryHook, false);\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU5Njg4NA==", "url": "https://github.com/yahoo/elide/pull/1294#discussion_r417596884", "bodyText": "Why not leave this in the ElideAsyncConfiguration file?", "author": "aklish", "createdAt": "2020-04-29T20:39:09Z", "path": "elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java", "diffHunk": "@@ -144,4 +147,20 @@ public Swagger buildSwagger(EntityDictionary dictionary, ElideConfigProperties s\n \n         return swagger;\n     }\n+\n+    /**\n+     * Configure the AsyncExecutorService used for submitting async query requests.\n+     * @param elide elideObject.\n+     * @param settings Elide settings.\n+     * @return a AsyncExecutorService.\n+     */\n+    @Bean\n+    @ConditionalOnMissingBean\n+    @ConditionalOnProperty(prefix = \"elide.async\", name = \"enabled\", matchIfMissing = false)\n+    public AsyncExecutorService buildAsyncExecutorService(Elide elide, ElideConfigProperties settings,", "originalCommit": "e041368669469b86db7e4ca950a9e0cdcf7f2fb0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f1ccfd1217e6c7e85d7c7facb9a95f4943fed83b", "chunk": "diff --git a/elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java b/elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java\nindex b2a6b45c9..89870d033 100644\n--- a/elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java\n+++ b/elide-spring/elide-spring-boot-autoconfigure/src/main/java/com/yahoo/elide/spring/config/ElideAutoConfiguration.java\n\n@@ -147,20 +144,4 @@ public class ElideAutoConfiguration {\n \n         return swagger;\n     }\n-\n-    /**\n-     * Configure the AsyncExecutorService used for submitting async query requests.\n-     * @param elide elideObject.\n-     * @param settings Elide settings.\n-     * @return a AsyncExecutorService.\n-     */\n-    @Bean\n-    @ConditionalOnMissingBean\n-    @ConditionalOnProperty(prefix = \"elide.async\", name = \"enabled\", matchIfMissing = false)\n-    public AsyncExecutorService buildAsyncExecutorService(Elide elide, ElideConfigProperties settings,\n-            AsyncQueryDAO asyncQueryDao) {\n-        AsyncExecutorService.init(elide, settings.getAsync().getThreadPoolSize(),\n-                settings.getAsync().getMaxRunTimeMinutes(), asyncQueryDao);\n-        return AsyncExecutorService.getInstance();\n-    }\n }\n"}}, {"oid": "f1ccfd1217e6c7e85d7c7facb9a95f4943fed83b", "url": "https://github.com/yahoo/elide/commit/f1ccfd1217e6c7e85d7c7facb9a95f4943fed83b", "message": "Review Comments", "committedDate": "2020-04-29T21:35:36Z", "type": "commit"}, {"oid": "54cc38715f61daf8df914e1444f9032c18944b33", "url": "https://github.com/yahoo/elide/commit/54cc38715f61daf8df914e1444f9032c18944b33", "message": "elide standalone fixes for lifecycle hooks failing", "committedDate": "2020-04-30T14:44:51Z", "type": "commit"}, {"oid": "13a25b993313e49c653a725e3553927dffac8e32", "url": "https://github.com/yahoo/elide/commit/13a25b993313e49c653a725e3553927dffac8e32", "message": "Manual Binding of lifecycle hooks", "committedDate": "2020-04-30T14:46:18Z", "type": "commit"}, {"oid": "da0db3fb30e4b603a18b3f4f86452c5710f56bd1", "url": "https://github.com/yahoo/elide/commit/da0db3fb30e4b603a18b3f4f86452c5710f56bd1", "message": "Manual binding of lifecycle in elide spring", "committedDate": "2020-04-30T14:46:18Z", "type": "commit"}, {"oid": "b5796f2ae04d75f73d037b9a61ed0c735a8c77d1", "url": "https://github.com/yahoo/elide/commit/b5796f2ae04d75f73d037b9a61ed0c735a8c77d1", "message": "Refactor", "committedDate": "2020-04-30T14:46:18Z", "type": "commit"}, {"oid": "2a5437587995d8a05cc67db3152fb9d697cbf74d", "url": "https://github.com/yahoo/elide/commit/2a5437587995d8a05cc67db3152fb9d697cbf74d", "message": "Review Comments", "committedDate": "2020-04-30T14:46:18Z", "type": "commit"}, {"oid": "d136f750e9d0a3e809ef2f428e722a4718f27e6c", "url": "https://github.com/yahoo/elide/commit/d136f750e9d0a3e809ef2f428e722a4718f27e6c", "message": "Resolve conflicts", "committedDate": "2020-04-30T14:49:45Z", "type": "commit"}, {"oid": "198c38d4e3c2ee1dea4b987db9d142ca8bc5fb7c", "url": "https://github.com/yahoo/elide/commit/198c38d4e3c2ee1dea4b987db9d142ca8bc5fb7c", "message": "Rebase with 5.x", "committedDate": "2020-04-30T16:14:54Z", "type": "commit"}]}