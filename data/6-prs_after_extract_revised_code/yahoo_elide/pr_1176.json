{"pr_number": 1176, "pr_title": "Added IsEmpty operation for filter predicate", "pr_createdAt": "2020-01-30T17:29:41Z", "pr_url": "https://github.com/yahoo/elide/pull/1176", "timeline": [{"oid": "a546e686fc8ab527818a60a3aef231f5fddfcac6", "url": "https://github.com/yahoo/elide/commit/a546e686fc8ab527818a60a3aef231f5fddfcac6", "message": "Added IsEmpty operation for filter predicate", "committedDate": "2020-01-30T17:24:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4NTAwNQ==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r373185005", "bodyText": "copy pasted =isnull=. here should be =isempty=", "author": "PatRolland", "createdAt": "2020-01-30T20:47:15Z", "path": "elide-core/src/main/java/com/yahoo/elide/core/filter/dialect/RSQLFilterDialect.java", "diffHunk": "@@ -368,5 +377,25 @@ private FilterExpression buildIsNullOperator(Path path, List<String> arguments)\n                 throw new RSQLParseException(String.format(\"Invalid value for operator =isnull= '%s'\", arg));\n             }\n         }\n+\n+        /**\n+         * Returns Predicate for '=isempty=' case depending on its arguments.\n+         * <p>\n+         * NOTE: Filter Expression builder specially for '=isnull=' case.\n+         *\n+         * @return\n+         */\n+        private FilterExpression buildIsEmptyOperator(Path path, List<String> arguments) {\n+            String arg = arguments.get(0);\n+            try {\n+                boolean wantsEmpty = CoerceUtil.coerce(arg, boolean.class);\n+                if (wantsEmpty) {\n+                    return new IsEmptyPredicate(path);\n+                }\n+                return new NotEmptyPredicate(path);\n+            } catch (InvalidValueException ignored) {\n+                throw new RSQLParseException(String.format(\"Invalid value for operator =isnull= '%s'\", arg));", "originalCommit": "a546e686fc8ab527818a60a3aef231f5fddfcac6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d60d92da334d457ed84299e95934d54a9a778291", "chunk": "diff --git a/elide-core/src/main/java/com/yahoo/elide/core/filter/dialect/RSQLFilterDialect.java b/elide-core/src/main/java/com/yahoo/elide/core/filter/dialect/RSQLFilterDialect.java\nindex 6b0140648..678f5d837 100644\n--- a/elide-core/src/main/java/com/yahoo/elide/core/filter/dialect/RSQLFilterDialect.java\n+++ b/elide-core/src/main/java/com/yahoo/elide/core/filter/dialect/RSQLFilterDialect.java\n\n@@ -381,7 +381,7 @@ public class RSQLFilterDialect implements SubqueryFilterDialect, JoinFilterDiale\n         /**\n          * Returns Predicate for '=isempty=' case depending on its arguments.\n          * <p>\n-         * NOTE: Filter Expression builder specially for '=isnull=' case.\n+         * NOTE: Filter Expression builder specially for '=isempty=' case.\n          *\n          * @return\n          */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODM5NA==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r373188394", "bodyText": "i feel like only collection and map should be handled here", "author": "PatRolland", "createdAt": "2020-01-30T20:55:07Z", "path": "elide-core/src/main/java/com/yahoo/elide/core/filter/Operator.java", "diffHunk": "@@ -316,6 +334,24 @@ public static Operator fromString(final String string) {\n         return (T entity) -> false;\n     }\n \n+    private static <T> Predicate<T> isEmpty(String field, RequestScope requestScope) {\n+        return (T entity) -> {\n+            Object val = getFieldValue(entity, field, requestScope);\n+            if (val == null) { return true; }\n+            if (val instanceof String) {", "originalCommit": "a546e686fc8ab527818a60a3aef231f5fddfcac6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIwNDI3Mw==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r373204273", "bodyText": "So the string \"\" is not considered empty?", "author": "Chandrasekar-Rajasekar", "createdAt": "2020-01-30T21:31:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODM5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI3MTk3Nw==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r373271977", "bodyText": "So we generate JPQL queries based on IS EMPTY and IS NOT EMPTY.  I'm not sure those will work on Strings when we push this to the datastore.\nI'm inclined to think the JPQL queries will blow up if we try this on Strings in the DB.  Either remove the String case - or we need to add explicit tests to see that they work as expected.", "author": "aklish", "createdAt": "2020-01-31T00:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODM5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4NjA1Nw==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r374186057", "bodyText": "@Chandrasekar-Rajasekar Let's remove the string case.", "author": "aklish", "createdAt": "2020-02-03T15:58:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODM5NA=="}], "type": "inlineReview", "revised_code": {"commit": "c8104384443f7543f87b15a588e6db7e7d6f656a", "chunk": "diff --git a/elide-core/src/main/java/com/yahoo/elide/core/filter/Operator.java b/elide-core/src/main/java/com/yahoo/elide/core/filter/Operator.java\nindex af04e155f..52c154991 100644\n--- a/elide-core/src/main/java/com/yahoo/elide/core/filter/Operator.java\n+++ b/elide-core/src/main/java/com/yahoo/elide/core/filter/Operator.java\n\n@@ -336,6 +336,7 @@ public enum Operator {\n \n     private static <T> Predicate<T> isEmpty(String field, RequestScope requestScope) {\n         return (T entity) -> {\n+\n             Object val = getFieldValue(entity, field, requestScope);\n             if (val == null) { return true; }\n             if (val instanceof String) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODc4Mw==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r373188783", "bodyText": "null and empty do not represent the same state imo", "author": "PatRolland", "createdAt": "2020-01-30T20:56:00Z", "path": "elide-core/src/main/java/com/yahoo/elide/core/filter/Operator.java", "diffHunk": "@@ -316,6 +334,24 @@ public static Operator fromString(final String string) {\n         return (T entity) -> false;\n     }\n \n+    private static <T> Predicate<T> isEmpty(String field, RequestScope requestScope) {\n+        return (T entity) -> {\n+            Object val = getFieldValue(entity, field, requestScope);\n+            if (val == null) { return true; }", "originalCommit": "a546e686fc8ab527818a60a3aef231f5fddfcac6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIwMzg0MQ==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r373203841", "bodyText": "For in memory stores, we'll need to check if the field is null OR if the collection is empty. This is the requirement given in the issue.", "author": "Chandrasekar-Rajasekar", "createdAt": "2020-01-30T21:30:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI3MTY0Ng==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r373271646", "bodyText": "I agree - they are not the same thing.  But I think you could interpret this either way.", "author": "aklish", "createdAt": "2020-01-31T00:55:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzEwMQ==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r373623101", "bodyText": "if you look at it in a db table way, a column referring to children might be null or have a value with no associations .\nconsider 3 tables\nTableA(a_id), TableB(b_id) and TableAB(ab_id, a_id, b_id).\nYou might end up with a row in TableAB such as ab_id = 1, a_id = 1 and b_id = null thus representing an empty collection.\nYou migth also end up having no row in TableAB thus representing a null collection.\nI'm not sure if this is a concept worth representing in the =isempty= filter but that is how I can represent the distinction here.", "author": "PatRolland", "createdAt": "2020-01-31T18:33:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4NTg5Ng==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r374185896", "bodyText": "@jkusa Any thoughts on this one?", "author": "aklish", "createdAt": "2020-02-03T15:58:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM2MTU0NQ==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r374361545", "bodyText": "We'll run a test and see what JPQL does.  The in-memory result should match the JPQL result.", "author": "aklish", "createdAt": "2020-02-03T21:51:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2MDI3NQ==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r376460275", "bodyText": "Makes sense. Is there a way where I could make the distinction between an absence of association between and an empty one then? I feel like is isNull and isEmpty operators would clash in some way.", "author": "PatRolland", "createdAt": "2020-02-07T15:44:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg0MTY3Ng==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r377841676", "bodyText": "@PatRolland - Not quite following", "author": "aklish", "createdAt": "2020-02-11T19:13:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODc4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2ODAyMQ==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r379068021", "bodyText": "Doesn't matter I'm being picky \ud83d\ude04", "author": "PatRolland", "createdAt": "2020-02-13T19:21:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE4ODc4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c8104384443f7543f87b15a588e6db7e7d6f656a", "chunk": "diff --git a/elide-core/src/main/java/com/yahoo/elide/core/filter/Operator.java b/elide-core/src/main/java/com/yahoo/elide/core/filter/Operator.java\nindex af04e155f..52c154991 100644\n--- a/elide-core/src/main/java/com/yahoo/elide/core/filter/Operator.java\n+++ b/elide-core/src/main/java/com/yahoo/elide/core/filter/Operator.java\n\n@@ -336,6 +336,7 @@ public enum Operator {\n \n     private static <T> Predicate<T> isEmpty(String field, RequestScope requestScope) {\n         return (T entity) -> {\n+\n             Object val = getFieldValue(entity, field, requestScope);\n             if (val == null) { return true; }\n             if (val instanceof String) {\n"}}, {"oid": "d60d92da334d457ed84299e95934d54a9a778291", "url": "https://github.com/yahoo/elide/commit/d60d92da334d457ed84299e95934d54a9a778291", "message": "small fix", "committedDate": "2020-01-30T21:32:53Z", "type": "commit"}, {"oid": "c8104384443f7543f87b15a588e6db7e7d6f656a", "url": "https://github.com/yahoo/elide/commit/c8104384443f7543f87b15a588e6db7e7d6f656a", "message": "Allow filter on ismany relationship for isempty operation. Add It test", "committedDate": "2020-02-02T22:20:30Z", "type": "commit"}, {"oid": "e60b198d0fe3bc5d8ab1255841a071045737a42a", "url": "https://github.com/yahoo/elide/commit/e60b198d0fe3bc5d8ab1255841a071045737a42a", "message": "Add @ElementCollection to attribute awards", "committedDate": "2020-02-02T23:57:58Z", "type": "commit"}, {"oid": "f6ecc779495b00d19475ce7ed84d6f730aa3894e", "url": "https://github.com/yahoo/elide/commit/f6ecc779495b00d19475ce7ed84d6f730aa3894e", "message": "remove string case", "committedDate": "2020-02-05T22:11:03Z", "type": "commit"}, {"oid": "ab1ba8ee8325d5e41c95a2edec297b6e7fdb4833", "url": "https://github.com/yahoo/elide/commit/ab1ba8ee8325d5e41c95a2edec297b6e7fdb4833", "message": "exclude isnull check on attribute collection", "committedDate": "2020-02-05T22:26:53Z", "type": "commit"}, {"oid": "665cd72c4d85d8f6da0a2e521673048b316ad412", "url": "https://github.com/yahoo/elide/commit/665cd72c4d85d8f6da0a2e521673048b316ad412", "message": "skip query on attribute collection test", "committedDate": "2020-02-06T05:35:41Z", "type": "commit"}, {"oid": "0fa8c818d767f76203c69fd7c0577443f91b50db", "url": "https://github.com/yahoo/elide/commit/0fa8c818d767f76203c69fd7c0577443f91b50db", "message": "exclude tags for jpa datastore", "committedDate": "2020-02-06T22:55:08Z", "type": "commit"}, {"oid": "97d00db842297b4e32d281031417ab6f6dbb655c", "url": "https://github.com/yahoo/elide/commit/97d00db842297b4e32d281031417ab6f6dbb655c", "message": "ieEmpty returns false if there is null association", "committedDate": "2020-02-10T04:25:39Z", "type": "commit"}, {"oid": "4d7631b5bc21f857b8095eb4b2a4cf6524a66c33", "url": "https://github.com/yahoo/elide/commit/4d7631b5bc21f857b8095eb4b2a4cf6524a66c33", "message": "Add exception if toMany association exist on the path and is not target collection", "committedDate": "2020-02-11T23:34:03Z", "type": "commit"}, {"oid": "48041c0aba81d6b5bb9c2cffa3c11dab8c265154", "url": "https://github.com/yahoo/elide/commit/48041c0aba81d6b5bb9c2cffa3c11dab8c265154", "message": "Add IT test", "committedDate": "2020-02-12T22:56:28Z", "type": "commit"}, {"oid": "d827e846479045cdf9237bc841d5b00ccf8baa45", "url": "https://github.com/yahoo/elide/commit/d827e846479045cdf9237bc841d5b00ccf8baa45", "message": "remove unused code", "committedDate": "2020-02-12T22:59:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0Mjk3Mw==", "url": "https://github.com/yahoo/elide/pull/1176#discussion_r379842973", "bodyText": "typo", "author": "aklish", "createdAt": "2020-02-15T17:01:43Z", "path": "elide-core/src/main/java/com/yahoo/elide/core/filter/IsEmptyPredicate.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2019, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.core.filter;\n+\n+import com.yahoo.elide.core.Path;\n+\n+import java.util.Collections;\n+\n+/**\n+ * Is EMopty Predicate Class.", "originalCommit": "d827e846479045cdf9237bc841d5b00ccf8baa45", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89a30de2edfdc66991826c25dbf2dbbf92079d8b", "chunk": "diff --git a/elide-core/src/main/java/com/yahoo/elide/core/filter/IsEmptyPredicate.java b/elide-core/src/main/java/com/yahoo/elide/core/filter/IsEmptyPredicate.java\nindex 720758d33..55bf28fd0 100644\n--- a/elide-core/src/main/java/com/yahoo/elide/core/filter/IsEmptyPredicate.java\n+++ b/elide-core/src/main/java/com/yahoo/elide/core/filter/IsEmptyPredicate.java\n\n@@ -10,7 +10,7 @@ import com.yahoo.elide.core.Path;\n import java.util.Collections;\n \n /**\n- * Is EMopty Predicate Class.\n+ * Is Empty Predicate Class.\n  */\n public class IsEmptyPredicate extends FilterPredicate {\n \n"}}, {"oid": "89a30de2edfdc66991826c25dbf2dbbf92079d8b", "url": "https://github.com/yahoo/elide/commit/89a30de2edfdc66991826c25dbf2dbbf92079d8b", "message": "Fixing Typo", "committedDate": "2020-02-15T17:10:47Z", "type": "commit"}, {"oid": "b82bdc3eab4ee49410898178449502e42e3690db", "url": "https://github.com/yahoo/elide/commit/b82bdc3eab4ee49410898178449502e42e3690db", "message": "Merge branch 'master' into ISSUE-1160_add_isEmpty_filter", "committedDate": "2020-02-15T17:11:41Z", "type": "commit"}]}