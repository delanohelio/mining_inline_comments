{"pr_number": 1444, "pr_title": "Fix for Graphql Fragment Error in Debug Mode ", "pr_createdAt": "2020-07-17T03:40:06Z", "pr_url": "https://github.com/yahoo/elide/pull/1444", "timeline": [{"oid": "d0335a39b36156f68b965990f4ca2b7a1bcb1651", "url": "https://github.com/yahoo/elide/commit/d0335a39b36156f68b965990f4ca2b7a1bcb1651", "message": "Fix for Fragment Error in debug mode", "committedDate": "2020-07-17T03:35:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUwNjM5NQ==", "url": "https://github.com/yahoo/elide/pull/1444#discussion_r456506395", "bodyText": "What does this look like?  There is no space - I'd like to see an example log line.", "author": "aklish", "createdAt": "2020-07-17T15:14:23Z", "path": "elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java", "diffHunk": "@@ -121,11 +122,22 @@ private void filterSortPaginateSanityCheck(Environment environment) {\n      * @param environment Environment encapsulating graphQL's request environment\n      */\n     private void logContext(RelationshipOp operation, Environment environment) {\n-        List<Field> children = (environment.field.getSelectionSet() != null)\n+        List<?> children = (environment.field.getSelectionSet() != null)\n                 ? (List) environment.field.getSelectionSet().getChildren()\n                 : new ArrayList<>();\n-        String requestedFields = environment.field.getName() + (children.size() > 0\n-                ? \"(\" + children.stream().map(Field::getName).collect(Collectors.toList()) + \")\" : \"\");\n+\n+        List<String> fieldName = new ArrayList<String>();\n+        if (children.size() > 0) {\n+            children.stream().forEach(i -> { if (i.getClass().equals(Field.class)) {\n+                    fieldName.add(((Field) i).getName());\n+                } else {\n+                    fieldName.add(((FragmentSpread) i).getName());\n+                }\n+            });\n+        }\n+\n+        String requestedFields = environment.field.getName() + fieldName.toString();", "originalCommit": "d0335a39b36156f68b965990f4ca2b7a1bcb1651", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyMzg3OA==", "url": "https://github.com/yahoo/elide/pull/1444#discussion_r456523878", "bodyText": "DEBUG c.y.e.g.PersistentResourceFetcher.logContext - FETCH table[edges] fields with parent GraphQLObjectType<Query>\nFETCH node[TableFragment] fields with parent GraphQLObjectType<TableEdge>\nFETCH id[] fields with parent GraphQLObjectType<Table>", "author": "moizarafat", "createdAt": "2020-07-17T15:44:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUwNjM5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "cdc942451fa6a84007f0ad1a55b99019b602f31e", "chunk": "diff --git a/elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java b/elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java\nindex 8eedbb2e3..d29063f23 100644\n--- a/elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java\n+++ b/elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java\n\n@@ -130,8 +130,11 @@ public class PersistentResourceFetcher implements DataFetcher<Object> {\n         if (children.size() > 0) {\n             children.stream().forEach(i -> { if (i.getClass().equals(Field.class)) {\n                     fieldName.add(((Field) i).getName());\n-                } else {\n+                } else if (i.getClass().equals(FragmentSpread.class)) {\n                     fieldName.add(((FragmentSpread) i).getName());\n+                } else {\n+                    log.debug(\"A new type of Selection, other than Field and FragmentSpread was encountered, {}\",\n+                            i.getClass());\n                 }\n             });\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUwNjQxMA==", "url": "https://github.com/yahoo/elide/pull/1444#discussion_r456506410", "bodyText": "This might not be safe (there are other types in graphQL besides fields and fragments).  Let's not bother logging the fragment spreads.", "author": "aklish", "createdAt": "2020-07-17T15:14:25Z", "path": "elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java", "diffHunk": "@@ -121,11 +122,22 @@ private void filterSortPaginateSanityCheck(Environment environment) {\n      * @param environment Environment encapsulating graphQL's request environment\n      */\n     private void logContext(RelationshipOp operation, Environment environment) {\n-        List<Field> children = (environment.field.getSelectionSet() != null)\n+        List<?> children = (environment.field.getSelectionSet() != null)\n                 ? (List) environment.field.getSelectionSet().getChildren()\n                 : new ArrayList<>();\n-        String requestedFields = environment.field.getName() + (children.size() > 0\n-                ? \"(\" + children.stream().map(Field::getName).collect(Collectors.toList()) + \")\" : \"\");\n+\n+        List<String> fieldName = new ArrayList<String>();\n+        if (children.size() > 0) {\n+            children.stream().forEach(i -> { if (i.getClass().equals(Field.class)) {\n+                    fieldName.add(((Field) i).getName());\n+                } else {\n+                    fieldName.add(((FragmentSpread) i).getName());", "originalCommit": "d0335a39b36156f68b965990f4ca2b7a1bcb1651", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cdc942451fa6a84007f0ad1a55b99019b602f31e", "chunk": "diff --git a/elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java b/elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java\nindex 8eedbb2e3..d29063f23 100644\n--- a/elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java\n+++ b/elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java\n\n@@ -130,8 +130,11 @@ public class PersistentResourceFetcher implements DataFetcher<Object> {\n         if (children.size() > 0) {\n             children.stream().forEach(i -> { if (i.getClass().equals(Field.class)) {\n                     fieldName.add(((Field) i).getName());\n-                } else {\n+                } else if (i.getClass().equals(FragmentSpread.class)) {\n                     fieldName.add(((FragmentSpread) i).getName());\n+                } else {\n+                    log.debug(\"A new type of Selection, other than Field and FragmentSpread was encountered, {}\",\n+                            i.getClass());\n                 }\n             });\n         }\n"}}, {"oid": "cdc942451fa6a84007f0ad1a55b99019b602f31e", "url": "https://github.com/yahoo/elide/commit/cdc942451fa6a84007f0ad1a55b99019b602f31e", "message": "Review comments", "committedDate": "2020-07-17T16:12:31Z", "type": "commit"}]}