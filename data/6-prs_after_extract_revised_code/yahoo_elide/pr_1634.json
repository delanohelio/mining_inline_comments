{"pr_number": 1634, "pr_title": "ValueSourceType should not be NONE for some of @DimensionFormula", "pr_createdAt": "2020-11-04T16:22:28Z", "pr_url": "https://github.com/yahoo/elide/pull/1634", "timeline": [{"oid": "ff800c245b80f6c3d10ed24ca2db6ea52467a23c", "url": "https://github.com/yahoo/elide/commit/ff800c245b80f6c3d10ed24ca2db6ea52467a23c", "message": "ValueSourceType should not be NONE for some of @DimensionFormula", "committedDate": "2020-11-04T16:26:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ4MDE0MA==", "url": "https://github.com/yahoo/elide/pull/1634#discussion_r517480140", "bodyText": "tableSource is not something we want to infer. It must be provided by the developer in the HJSON file.  TableSource of NONE means no type ahead search should be provided by the API.  This change basically removes that option.", "author": "aklish", "createdAt": "2020-11-04T16:40:53Z", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Column.java", "diffHunk": "@@ -153,13 +153,22 @@ private static String getTableSource(ColumnMeta meta, Column column) {\n             }\n         }\n \n-        if (column.getColumnType() == REFERENCE) {\n+        if (referencesAnotherModel(column.getExpression())) {", "originalCommit": "ff800c245b80f6c3d10ed24ca2db6ea52467a23c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e9674d500338ae68ec227142493109cab0c4150", "chunk": "diff --git a/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Column.java b/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Column.java\nindex 0908c13ce..d1ca25b58 100644\n--- a/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Column.java\n+++ b/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Column.java\n\n@@ -144,35 +148,10 @@ public abstract class Column implements Versioned {\n         }\n     }\n \n-    private static String getTableSource(ColumnMeta meta, Column column) {\n-        if (meta != null) {\n-            if (meta.tableSource() != null && !meta.tableSource().isEmpty()) {\n-                return meta.tableSource();\n-            } else if (meta.values() != null && meta.values().length > 0) {\n-                return null;\n-            }\n-        }\n-\n-        if (referencesAnotherModel(column.getExpression())) {\n-            return column.getExpression();\n-        }\n-\n-        return null;\n-    }\n-\n-    private static boolean referencesAnotherModel(String expr) {\n-        for (String reference : resolveFormulaReferences(expr)) {\n-            if (reference.contains(\".\")) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n     private ValueSourceType getValueSourceType() {\n         if (values != null && !values.isEmpty()) {\n             return ValueSourceType.ENUM;\n-        } else if (tableSource != null && !tableSource.isEmpty()) {\n+        } else if (tableSource != null && !tableSource.equals(NONE)) {\n             return ValueSourceType.TABLE;\n         }\n         return ValueSourceType.NONE;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ4MDQzMw==", "url": "https://github.com/yahoo/elide/pull/1634#discussion_r517480433", "bodyText": "See comment below - this change can be reverted based on that comment.", "author": "aklish", "createdAt": "2020-11-04T16:41:13Z", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/ColumnVisitor.java", "diffHunk": "@@ -78,7 +78,7 @@ protected T visitPhysicalReference(String reference) {\n      * @param formula formula expression\n      * @return references appear in the formula.\n      */\n-    protected static List<String> resolveFormulaReferences(String formula) {\n+    public static final List<String> resolveFormulaReferences(String formula) {", "originalCommit": "ff800c245b80f6c3d10ed24ca2db6ea52467a23c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e9674d500338ae68ec227142493109cab0c4150", "chunk": "diff --git a/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/ColumnVisitor.java b/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/ColumnVisitor.java\nindex 76065118b..99c0dd561 100644\n--- a/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/ColumnVisitor.java\n+++ b/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/ColumnVisitor.java\n\n@@ -78,7 +78,7 @@ public abstract class ColumnVisitor<T> {\n      * @param formula formula expression\n      * @return references appear in the formula.\n      */\n-    public static final List<String> resolveFormulaReferences(String formula) {\n+    protected static List<String> resolveFormulaReferences(String formula) {\n         Matcher matcher = REFERENCE_PARENTHESES.matcher(formula);\n         List<String> references = new ArrayList<>();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyNTcyOQ==", "url": "https://github.com/yahoo/elide/pull/1634#discussion_r517625729", "bodyText": "I believe the UI will interpret this as an actual ID and look it up in the metadata API.  Better to just let it be null.", "author": "aklish", "createdAt": "2020-11-04T20:55:06Z", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Column.java", "diffHunk": "@@ -79,11 +81,15 @@ protected Column(Table table, String fieldName, EntityDictionary dictionary) {\n             this.category = meta.category();\n             this.values = new HashSet<>(Arrays.asList(meta.values()));\n             this.tags = new HashSet<>(Arrays.asList(meta.tags()));\n+            this.tableSource = (meta.tableSource().trim().isEmpty()) ? NONE : meta.tableSource();", "originalCommit": "006f4cfe60d4f4b73ae49c2fbaaf3141366626a5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e5dab00607d6d00bf928f7a951d230db8201b2d2", "chunk": "diff --git a/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Column.java b/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Column.java\nindex d1ca25b58..0908c13ce 100644\n--- a/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Column.java\n+++ b/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/metadata/models/Column.java\n\n@@ -81,15 +79,11 @@ public abstract class Column implements Versioned {\n             this.category = meta.category();\n             this.values = new HashSet<>(Arrays.asList(meta.values()));\n             this.tags = new HashSet<>(Arrays.asList(meta.tags()));\n-            this.tableSource = (meta.tableSource().trim().isEmpty()) ? NONE : meta.tableSource();\n-            this.valueSourceType = getValueSourceType();\n         } else {\n             this.description = null;\n             this.category = null;\n             this.values = null;\n             this.tags = new HashSet<>();\n-            this.tableSource = NONE;\n-            this.valueSourceType = ValueSourceType.NONE;\n         }\n \n         if (dictionary.attributeOrRelationAnnotationExists(tableClass, fieldName, MetricFormula.class)) {\n"}}, {"oid": "e5dab00607d6d00bf928f7a951d230db8201b2d2", "url": "https://github.com/yahoo/elide/commit/e5dab00607d6d00bf928f7a951d230db8201b2d2", "message": "ValueSourceType should not be NONE for some of @DimensionFormula", "committedDate": "2020-11-05T22:23:52Z", "type": "commit"}, {"oid": "0e9674d500338ae68ec227142493109cab0c4150", "url": "https://github.com/yahoo/elide/commit/0e9674d500338ae68ec227142493109cab0c4150", "message": "Review Comments", "committedDate": "2020-11-05T22:23:52Z", "type": "commit"}, {"oid": "9b9f066d1d78fe9ee70f62a30110f6df79048997", "url": "https://github.com/yahoo/elide/commit/9b9f066d1d78fe9ee70f62a30110f6df79048997", "message": "Review Comments", "committedDate": "2020-11-05T22:23:52Z", "type": "commit"}, {"oid": "9b9f066d1d78fe9ee70f62a30110f6df79048997", "url": "https://github.com/yahoo/elide/commit/9b9f066d1d78fe9ee70f62a30110f6df79048997", "message": "Review Comments", "committedDate": "2020-11-05T22:23:52Z", "type": "forcePushed"}]}