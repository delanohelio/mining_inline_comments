{"pr_number": 1363, "pr_title": "Disabling Legacy Filter Dialect in Swagger Documentation", "pr_createdAt": "2020-06-01T19:51:40Z", "pr_url": "https://github.com/yahoo/elide/pull/1363", "timeline": [{"oid": "0b40295de5bbcc8951c11da6a70e854e40bfdfac", "url": "https://github.com/yahoo/elide/commit/0b40295de5bbcc8951c11da6a70e854e40bfdfac", "message": "Disabling Legacy Filter Dialect in Swagger Documentation", "committedDate": "2020-06-01T19:48:05Z", "type": "commit"}, {"oid": "efd93dc06c3e819917c7c07c7b931d18dbe4deba", "url": "https://github.com/yahoo/elide/commit/efd93dc06c3e819917c7c07c7b931d18dbe4deba", "message": "Fixed test ordering issue", "committedDate": "2020-06-01T21:22:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1ODg5Nw==", "url": "https://github.com/yahoo/elide/pull/1363#discussion_r433558897", "bodyText": "Since this is a builder, why is there no\n    . supportLegacyDialect(boolean)", "author": "wcekan", "createdAt": "2020-06-02T00:33:51Z", "path": "elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java", "diffHunk": "@@ -604,7 +607,17 @@ private boolean lineageContainsType(PathMetaData other) {\n      * @param info Basic service information that cannot be generated\n      */\n     public SwaggerBuilder(EntityDictionary dictionary, Info info) {\n+        this(dictionary, info, true);\n+    }\n+\n+    /**\n+     * @param dictionary The entity dictionary\n+     * @param info Basic service information that cannot be generated\n+     * @param supportLegacyDialect Whether or not to support the legacy dialect\n+     */\n+    public SwaggerBuilder(EntityDictionary dictionary, Info info, boolean supportLegacyDialect) {", "originalCommit": "efd93dc06c3e819917c7c07c7b931d18dbe4deba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzczNTczNw==", "url": "https://github.com/yahoo/elide/pull/1363#discussion_r433735737", "bodyText": "So does this also need to be exposed as an configuration option for elide-spring-boot-starter or change the autoconfiguration to disable the legacy dialect?", "author": "whgibbo", "createdAt": "2020-06-02T09:15:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1ODg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MDI2MA==", "url": "https://github.com/yahoo/elide/pull/1363#discussion_r433950260", "bodyText": "The auto-configuration has the legacy dialect disabled by default.  Also, you can auto-configure the Swagger object construction to turn on/off the dialects you want.", "author": "aklish", "createdAt": "2020-06-02T15:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU1ODg5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "543edc2368e8131d95adc7acc62adecb975944f2", "chunk": "diff --git a/elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java b/elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java\nindex bb2a1618e..b947d60f1 100644\n--- a/elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java\n+++ b/elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java\n\n@@ -607,17 +612,9 @@ public class SwaggerBuilder {\n      * @param info Basic service information that cannot be generated\n      */\n     public SwaggerBuilder(EntityDictionary dictionary, Info info) {\n-        this(dictionary, info, true);\n-    }\n-\n-    /**\n-     * @param dictionary The entity dictionary\n-     * @param info Basic service information that cannot be generated\n-     * @param supportLegacyDialect Whether or not to support the legacy dialect\n-     */\n-    public SwaggerBuilder(EntityDictionary dictionary, Info info, boolean supportLegacyDialect) {\n         this.dictionary = dictionary;\n-        this.supportLegacyDialect = supportLegacyDialect;\n+        this.supportLegacyDialect = true;\n+        this.supportRSQLDialect = true;\n         globalResponses = new HashMap<>();\n         globalParams = new HashSet<>();\n         allClasses = new HashSet<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzczNjEwMg==", "url": "https://github.com/yahoo/elide/pull/1363#discussion_r433736102", "bodyText": "I'm new to Elide, but would I be right in thinking that it only supports one dialect..  So for users that want to use the legacy dialect, then the RSQL examples should not be displayed.", "author": "whgibbo", "createdAt": "2020-06-02T09:16:29Z", "path": "elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java", "diffHunk": "@@ -509,19 +510,21 @@ private Parameter getSortParameter() {\n                         .description(\"Filters the collection of \" + typeName + \" using a 'joined' RSQL expression\"));\n             }\n \n-            for (Operator op : filterOperators) {\n-                attributeNames.forEach((name) -> {\n-                    Class<?> attributeClass = dictionary.getType(type, name);\n-\n-                    /* Only filter attributes that can be assigned to strings or primitives */\n-                    if (attributeClass.isPrimitive() || String.class.isAssignableFrom(attributeClass)) {\n-                        params.add(new QueryParameter()\n-                                .type(\"string\")\n-                                .name(\"filter[\" + typeName + \".\" + name + \"][\" + op.getNotation() + \"]\")\n-                                .description(\"Filters the collection of \" + typeName + \" by the attribute \"\n-                                        + name + \" \" + \"using the operator \" + op.getNotation()));\n-                    }\n-                });\n+            if (supportLegacyDialect) {", "originalCommit": "efd93dc06c3e819917c7c07c7b931d18dbe4deba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1MDgyNw==", "url": "https://github.com/yahoo/elide/pull/1363#discussion_r433950827", "bodyText": "Elide supports multiple dialects enabled at the same time.", "author": "aklish", "createdAt": "2020-06-02T15:09:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzczNjEwMg=="}], "type": "inlineReview", "revised_code": {"commit": "543edc2368e8131d95adc7acc62adecb975944f2", "chunk": "diff --git a/elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java b/elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java\nindex bb2a1618e..b947d60f1 100644\n--- a/elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java\n+++ b/elide-contrib/elide-swagger/src/main/java/com/yahoo/elide/contrib/swagger/SwaggerBuilder.java\n\n@@ -496,18 +497,22 @@ public class SwaggerBuilder {\n \n             List<Parameter> params = new ArrayList<>();\n \n-            /* Add RSQL Disjoint Filter Query Param */\n-            params.add(new QueryParameter()\n-                    .type(\"string\")\n-                    .name(\"filter[\" + typeName + \"]\")\n-                    .description(\"Filters the collection of \" + typeName + \" using a 'disjoint' RSQL expression\"));\n-\n-            if (lineage.isEmpty()) {\n-                 /* Add RSQL Joined Filter Query Param */\n+            if (supportRSQLDialect) {\n+                /* Add RSQL Disjoint Filter Query Param */\n                 params.add(new QueryParameter()\n                         .type(\"string\")\n-                        .name(\"filter\")\n-                        .description(\"Filters the collection of \" + typeName + \" using a 'joined' RSQL expression\"));\n+                        .name(\"filter[\" + typeName + \"]\")\n+                        .description(\"Filters the collection of \" + typeName\n+                                + \" using a 'disjoint' RSQL expression\"));\n+\n+                if (lineage.isEmpty()) {\n+                    /* Add RSQL Joined Filter Query Param */\n+                    params.add(new QueryParameter()\n+                            .type(\"string\")\n+                            .name(\"filter\")\n+                            .description(\"Filters the collection of \" + typeName\n+                                    + \" using a 'joined' RSQL expression\"));\n+                }\n             }\n \n             if (supportLegacyDialect) {\n"}}, {"oid": "543edc2368e8131d95adc7acc62adecb975944f2", "url": "https://github.com/yahoo/elide/commit/543edc2368e8131d95adc7acc62adecb975944f2", "message": "Inspection rework", "committedDate": "2020-06-02T14:48:24Z", "type": "commit"}]}