{"pr_number": 1629, "pr_title": "Provide Default time grain SQL expression", "pr_createdAt": "2020-11-02T21:54:12Z", "pr_url": "https://github.com/yahoo/elide/pull/1629", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5NDYwNw==", "url": "https://github.com/yahoo/elide/pull/1629#discussion_r516294607", "bodyText": "Do we need to create such a complex model to test this?  THere is a lot of things unrelated to the test in this model.", "author": "aklish", "createdAt": "2020-11-02T22:31:20Z", "path": "elide-model-config/src/test/java/com/yahoo/elide/contrib/dynamicconfighelpers/parser/handlebars/HandlebarsHydratorTest.java", "diffHunk": "@@ -275,6 +275,183 @@\n             + \"\\n\"\n             + \"}\\n\";\n \n+    private static final String VALID_TABLE_GRAIN_JAVA_NAME = \"PlayerStatsGrain\";\n+    private static final String VALID_TABLE_GRAIN_CLASS = \"/*\\n\"", "originalCommit": "6af1729206ce05eb414fb8a2d1536cda50654038", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c22a218e576cc0f92dc56fd1f0181f4f5fb0e886", "chunk": "diff --git a/elide-model-config/src/test/java/com/yahoo/elide/contrib/dynamicconfighelpers/parser/handlebars/HandlebarsHydratorTest.java b/elide-model-config/src/test/java/com/yahoo/elide/contrib/dynamicconfighelpers/parser/handlebars/HandlebarsHydratorTest.java\nindex 76cc4f5bd..e8e87e8cb 100644\n--- a/elide-model-config/src/test/java/com/yahoo/elide/contrib/dynamicconfighelpers/parser/handlebars/HandlebarsHydratorTest.java\n+++ b/elide-model-config/src/test/java/com/yahoo/elide/contrib/dynamicconfighelpers/parser/handlebars/HandlebarsHydratorTest.java\n\n@@ -223,154 +228,7 @@ public class HandlebarsHydratorTest {\n             + \"\\n\"\n             + \"\\n\"\n             + \"\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"    private Country playerCountry;\\n\"\n-            + \"\\n\"\n-            + \"    @Join(\\\"{{playerCountry.id}} = {{country_id}}\\\")\\n\"\n-            + \"    public Country getPlayerCountry() {\\n\"\n-            + \"        return playerCountry;\\n\"\n-            + \"    }\\n\"\n-            + \"\\n\"\n-            + \"    public void setPlayerCountry(Country playerCountry) {\\n\"\n-            + \"        this.playerCountry = playerCountry;\\n\"\n-            + \"    }\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"    private Set<Team> playerTeam;\\n\"\n-            + \"\\n\"\n-            + \"    @Join(\\\"{{playerTeam.id}} = {{team_id}}\\\")\\n\"\n-            + \"    public Set<Team> getPlayerTeam() {\\n\"\n-            + \"        return playerTeam;\\n\"\n-            + \"    }\\n\"\n-            + \"\\n\"\n-            + \"    public void setPlayerTeam(Set<Team> playerTeam) {\\n\"\n-            + \"        this.playerTeam = playerTeam;\\n\"\n-            + \"    }\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"    \\n\"\n-            + \"    protected Long highScore;\\n\"\n-            + \"    \\n\"\n-            + \"    @MetricFormula(value=\\\"MAX({{score}})\\\")\\n\"\n-            + \"    @ReadPermission(expression = \\\"Prefab.Role.All\\\")\\n\"\n-            + \"    @ColumnMeta(\\n\"\n-            + \"        description = \\\"very awesome score\\\",\\n\"\n-            + \"        category=\\\"\\\",\\n\"\n-            + \"        tags={\\\"PUBLIC\\\"}\\n\"\n-            + \"    )\\n\"\n-            + \"    \\n\"\n-            + \"    \\n\"\n-            + \"    public Long getHighScore() {\\n\"\n-            + \"        return highScore;\\n\"\n-            + \"    }\\n\"\n-            + \"\\n\"\n-            + \"    public void setHighScore(Long highScore) {\\n\"\n-            + \"        this.highScore = highScore;\\n\"\n-            + \"    }\\n\"\n-            + \"\\n\"\n-            + \"}\\n\";\n-\n-    private static final String VALID_TABLE_GRAIN_JAVA_NAME = \"PlayerStatsGrain\";\n-    private static final String VALID_TABLE_GRAIN_CLASS = \"/*\\n\"\n-            + \" * Copyright 2020, Yahoo Inc.\\n\"\n-            + \" * Licensed under the Apache License, Version 2.0\\n\"\n-            + \" * See LICENSE file in project root for terms.\\n\"\n-            + \" */\\n\"\n-            + \"package dynamicconfig.models;\\n\"\n-            + \"\\n\"\n-            + \"import com.yahoo.elide.annotation.Include;\\n\"\n-            + \"import com.yahoo.elide.annotation.Exclude;\\n\"\n-            + \"import com.yahoo.elide.annotation.ReadPermission;\\n\"\n-            + \"import com.yahoo.elide.annotation.UpdatePermission;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.annotation.Cardinality;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.annotation.CardinalitySize;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.annotation.ColumnMeta;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.annotation.DimensionFormula;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.annotation.MetricFormula;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.annotation.Join;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.annotation.TableMeta;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.annotation.Temporal;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.annotation.TimeGrainDefinition;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.metadata.enums.TimeGrain;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.queryengines.sql.annotation.FromSubquery;\\n\"\n-            + \"import com.yahoo.elide.datastores.aggregation.queryengines.sql.annotation.FromTable;\\n\"\n-            + \"\\n\"\n-            + \"import lombok.Data;\\n\"\n-            + \"import lombok.EqualsAndHashCode;\\n\"\n-            + \"import lombok.ToString;\\n\"\n-            + \"\\n\"\n-            + \"import java.math.BigDecimal;\\n\"\n-            + \"import java.util.Set;\\n\"\n-            + \"import javax.persistence.Id;\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"/**\\n\"\n-            + \" * A root level entity for testing AggregationDataStore.\\n\"\n-            + \" */\\n\"\n-            + \"@Cardinality(size = CardinalitySize.LARGE)\\n\"\n-            + \"@EqualsAndHashCode\\n\"\n-            + \"@ToString\\n\"\n-            + \"@Data\\n\"\n-            + \"@FromTable(name = \\\"gamedb.player_stats_grain\\\", dbConnectionName = \\\"\\\")\\n\"\n-            + \"\\n\"\n-            + \"@ReadPermission(expression = \\\"A user is admin or is a player in the game\\\")\\n\"\n-            + \"@TableMeta(\\n\"\n-            + \"    description = \\\"A long description\\\",\\n\"\n-            + \"    category=\\\"Table Category\\\",\\n\"\n-            + \"    tags={\\\"GAME\\\",\\\"PLAYER\\\",\\\"A tag with newline\\\"},\\n\"\n-            + \"    filterTemplate=\\\"countryIsoCode=={{code}}\\\"\\n\"\n-            + \")\\n\"\n-            + \"@Include(type = \\\"playerStatsGrain\\\")\\n\"\n-            + \"public class PlayerStatsGrain {\\n\"\n-            + \"\\n\"\n-            + \"    private String id;\\n\"\n-            + \"\\n\"\n-            + \"    @Id\\n\"\n-            + \"    public String getId() {\\n\"\n-            + \"        return id;\\n\"\n-            + \"    }\\n\"\n-            + \"\\n\"\n-            + \"    public void setId(String id) {\\n\"\n-            + \"        this.id = id;\\n\"\n-            + \"    }\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"    protected String countryIsoCode;\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"    @ReadPermission(expression = \\\"Prefab.Role.All\\\")\\n\"\n-            + \"    @ColumnMeta(\\n\"\n-            + \"        description = \\\"countryIsoCode\\\",\\n\"\n-            + \"        category=\\\"country detail\\\",\\n\"\n-            + \"        values={\\\"US\\\",\\\"HK\\\"},\\n\"\n-            + \"        tags={\\\"PRIVATE\\\"},\\n\"\n-            + \"        tableSource=\\\"\\\"\\n\"\n-            + \"    )\\n\"\n-            + \"    \\n\"\n-            + \"    \\n\"\n-            + \"    @DimensionFormula(\\\"{{playerCountry.isoCode}}\\\")\\n\"\n-            + \"\\n\"\n-            + \"    public String getCountryIsoCode() {\\n\"\n-            + \"        return countryIsoCode;\\n\"\n-            + \"    }\\n\"\n-            + \"\\n\"\n-            + \"    public void setCountryIsoCode(String countryIsoCode) {\\n\"\n-            + \"        this.countryIsoCode = countryIsoCode;\\n\"\n-            + \"    }\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"\\n\"\n-            + \"    protected com.yahoo.elide.datastores.aggregation.timegrains.Day createdOn;\\n\"\n+            + \"    protected com.yahoo.elide.datastores.aggregation.timegrains.Day updatedOn;\\n\"\n             + \"\\n\"\n             + \"\\n\"\n             + \"\\n\"\n"}}, {"oid": "6d14c5e6bd961d48bbb9b111cf148e227bcf86f6", "url": "https://github.com/yahoo/elide/commit/6d14c5e6bd961d48bbb9b111cf148e227bcf86f6", "message": "changes to default sql and grain", "committedDate": "2020-11-05T21:59:49Z", "type": "commit"}, {"oid": "c22a218e576cc0f92dc56fd1f0181f4f5fb0e886", "url": "https://github.com/yahoo/elide/commit/c22a218e576cc0f92dc56fd1f0181f4f5fb0e886", "message": "review fixes", "committedDate": "2020-11-05T21:59:50Z", "type": "commit"}, {"oid": "aa6ffa0fa13bcecdbd9764adf589e6bb7e7e9a09", "url": "https://github.com/yahoo/elide/commit/aa6ffa0fa13bcecdbd9764adf589e6bb7e7e9a09", "message": "fix jetty dependency vulnerability", "committedDate": "2020-11-05T21:59:50Z", "type": "commit"}, {"oid": "43ea5ec3fa8c49d8e811f38b97842ca91ff6d165", "url": "https://github.com/yahoo/elide/commit/43ea5ec3fa8c49d8e811f38b97842ca91ff6d165", "message": "upgrade spring version instead of removing starter dependencies", "committedDate": "2020-11-05T21:59:50Z", "type": "commit"}, {"oid": "aa97e9f82e3bc882ffe7c976c4e0c40dd21e7904", "url": "https://github.com/yahoo/elide/commit/aa97e9f82e3bc882ffe7c976c4e0c40dd21e7904", "message": "remove incorrect example grain", "committedDate": "2020-11-05T21:59:51Z", "type": "commit"}, {"oid": "aa97e9f82e3bc882ffe7c976c4e0c40dd21e7904", "url": "https://github.com/yahoo/elide/commit/aa97e9f82e3bc882ffe7c976c4e0c40dd21e7904", "message": "remove incorrect example grain", "committedDate": "2020-11-05T21:59:51Z", "type": "forcePushed"}]}