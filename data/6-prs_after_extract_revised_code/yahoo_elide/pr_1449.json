{"pr_number": 1449, "pr_title": "Dynamic config schema validation; Read resources from jar", "pr_createdAt": "2020-07-19T20:44:37Z", "pr_url": "https://github.com/yahoo/elide/pull/1449", "timeline": [{"oid": "5a12c61a4a0752df3dfd2b3e59bbf4dd71497f50", "url": "https://github.com/yahoo/elide/commit/5a12c61a4a0752df3dfd2b3e59bbf4dd71497f50", "message": "schema validation\n\nresource from classpath", "committedDate": "2020-07-19T20:41:29Z", "type": "commit"}, {"oid": "8a4c4a8ae7d3a16ac5a9e721503ca7f67df10826", "url": "https://github.com/yahoo/elide/commit/8a4c4a8ae7d3a16ac5a9e721503ca7f67df10826", "message": "test update", "committedDate": "2020-07-20T02:13:16Z", "type": "commit"}, {"oid": "9d48b4bf1517376513109fd37072e2fd81226570", "url": "https://github.com/yahoo/elide/commit/9d48b4bf1517376513109fd37072e2fd81226570", "message": "added testcase", "committedDate": "2020-07-22T04:11:51Z", "type": "commit"}, {"oid": "7796a3edef0c36d222221d48ecfa7f5ac16403b2", "url": "https://github.com/yahoo/elide/commit/7796a3edef0c36d222221d48ecfa7f5ac16403b2", "message": "table config resource", "committedDate": "2020-07-24T04:36:19Z", "type": "commit"}, {"oid": "7a3b20d80d33a221747ec6f0133637b938787504", "url": "https://github.com/yahoo/elide/commit/7a3b20d80d33a221747ec6f0133637b938787504", "message": "variable/security optional", "committedDate": "2020-07-24T07:31:00Z", "type": "commit"}, {"oid": "c983f8fcff26b27bc0bce14509806a9dcd7d63a6", "url": "https://github.com/yahoo/elide/commit/c983f8fcff26b27bc0bce14509806a9dcd7d63a6", "message": "code clean up", "committedDate": "2020-07-27T03:46:36Z", "type": "commit"}, {"oid": "29a61ba91f0205090b43eeacff867b01d7f4805b", "url": "https://github.com/yahoo/elide/commit/29a61ba91f0205090b43eeacff867b01d7f4805b", "message": "update readtableconfig", "committedDate": "2020-07-30T02:28:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI5NjAxMQ==", "url": "https://github.com/yahoo/elide/pull/1449#discussion_r463296011", "bodyText": "I think we can remove this function and also readConfigFile (see later comment).", "author": "aklish", "createdAt": "2020-07-30T22:01:02Z", "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigHelpers.java", "diffHunk": "@@ -190,4 +156,40 @@ public static String readConfigFile(File configFile) {\n         }\n         return sb.toString();\n     }\n+\n+    /**\n+     * Read config from classpath.\n+     * @param resourcePath : path to resource\n+     * @return content of resource\n+     * @throws IOException\n+     */\n+    public static String readResource(String resourcePath) throws IOException {", "originalCommit": "29a61ba91f0205090b43eeacff867b01d7f4805b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "617be2947e50d422830169132d8496dca40ca44d", "chunk": "diff --git a/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigHelpers.java b/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigHelpers.java\nindex 1bc3e84c2..e8c4d6d3d 100644\n--- a/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigHelpers.java\n+++ b/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigHelpers.java\n\n@@ -138,53 +130,6 @@ public class DynamicConfigHelpers {\n         return hydrator.hydrateConfigTemplate(jsonConfig, variables);\n     }\n \n-    /**\n-     * Read hjson config file.\n-     * @param configFile : hjson file to read\n-     * @return hjson file content\n-     */\n-    public static String readConfigFile(File configFile) {\n-        StringBuffer sb = new StringBuffer();\n-        try {\n-            for (String line : FileUtils.readLines(configFile, StandardCharsets.UTF_8)) {\n-                sb.append(line);\n-                sb.append(NEW_LINE);\n-            }\n-        } catch (IOException e) {\n-            log.error(\"error while reading config file \" + configFile.getName());\n-            log.error(e.getMessage());\n-        }\n-        return sb.toString();\n-    }\n-\n-    /**\n-     * Read config from classpath.\n-     * @param resourcePath : path to resource\n-     * @return content of resource\n-     * @throws IOException\n-     */\n-    public static String readResource(String resourcePath) throws IOException {\n-        InputStream stream = null;\n-        BufferedReader reader = null;\n-        String content = null;\n-        try {\n-            stream = DynamicConfigHelpers.class.getClassLoader().getResourceAsStream(resourcePath);\n-            if (stream == null) {\n-                return null;\n-            }\n-            reader = new BufferedReader(new InputStreamReader(stream));\n-            content =  reader.lines().collect(Collectors.joining(System.lineSeparator()));\n-        } finally {\n-            if (stream != null) {\n-                stream.close();\n-            }\n-            if (reader != null) {\n-                reader.close();\n-            }\n-        }\n-        return content;\n-    }\n-\n     private static String hjsonToJson(String hjson) {\n         return JsonValue.readHjson(hjson).toString();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI5NzA3NQ==", "url": "https://github.com/yahoo/elide/pull/1449#discussion_r463297075", "bodyText": "I feel like this is the best place to construct the spring resource URL with either file:// or resource://.\nthis.configDir value could actually be a URL containing file:// or resource:// and then used for loading security, variables, and tables (all using spring resource loader).", "author": "aklish", "createdAt": "2020-07-30T22:03:35Z", "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java", "diffHunk": "@@ -53,11 +53,28 @@\n     private static final String SQL_SPLIT_REGEX = \"\\\\s+\";\n     private static final String SEMI_COLON = \";\";\n     private static final Pattern HANDLEBAR_REGEX = Pattern.compile(\"<%(.*?)%>\");\n+    private static final String RESOURCES = \"resources\";\n+    private static final int RESOURCE_LENGTH = 10; //\"resources/\".length()\n+    private static final String CLASSPATH_PATTERN = \"classpath*:\";\n+    private static final String FILEPATH_PATTERN = \"file://\";\n+    private static final String HJSON_EXTN = \"*.hjson\";\n \n     private ElideTableConfig elideTableConfig;\n     private ElideSecurityConfig elideSecurityConfig;\n     private Map<String, Object> variables;\n     private String configDir;\n+    private boolean configInClassPath;\n+\n+    public DynamicConfigValidator(String configDir) {\n+        File config = new File(configDir);\n+\n+        if (config.exists()) {", "originalCommit": "29a61ba91f0205090b43eeacff867b01d7f4805b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "617be2947e50d422830169132d8496dca40ca44d", "chunk": "diff --git a/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java b/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java\nindex 01d44307f..915f704bf 100644\n--- a/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java\n+++ b/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java\n\n@@ -56,23 +59,24 @@ public class DynamicConfigValidator {\n     private static final String RESOURCES = \"resources\";\n     private static final int RESOURCE_LENGTH = 10; //\"resources/\".length()\n     private static final String CLASSPATH_PATTERN = \"classpath*:\";\n-    private static final String FILEPATH_PATTERN = \"file://\";\n-    private static final String HJSON_EXTN = \"*.hjson\";\n+    private static final String FILEPATH_PATTERN = \"file:\";\n+    private static final String HJSON_EXTN = \"**/*.hjson\";\n \n-    private ElideTableConfig elideTableConfig;\n-    private ElideSecurityConfig elideSecurityConfig;\n-    private Map<String, Object> variables;\n+    private ElideTableConfig elideTableConfig = new ElideTableConfig();\n+    private ElideSecurityConfig elideSecurityConfig = new ElideSecurityConfig();\n+    private Map<String, Object> variables = Collections.<String, Object>emptyMap();\n     private String configDir;\n-    private boolean configInClassPath;\n+    private Map<String, String> configMap = new HashMap<>();\n \n     public DynamicConfigValidator(String configDir) {\n         File config = new File(configDir);\n \n         if (config.exists()) {\n-            this.setConfigDir(DynamicConfigHelpers.formatFilePath(config.getAbsolutePath()));\n+            this.setConfigDir(FILEPATH_PATTERN + DynamicConfigHelpers.formatFilePath(config.getAbsolutePath())\n+                + HJSON_EXTN);\n         } else {\n-            this.setConfigDir(DynamicConfigHelpers.formatFilePath(formatClassPath(configDir)));\n-            this.setConfigInClassPath(true);\n+            this.setConfigDir(CLASSPATH_PATTERN + DynamicConfigHelpers.formatFilePath(formatClassPath(configDir))\n+                + HJSON_EXTN);\n         }\n     }\n \n"}}, {"oid": "617be2947e50d422830169132d8496dca40ca44d", "url": "https://github.com/yahoo/elide/commit/617be2947e50d422830169132d8496dca40ca44d", "message": "update resource reading", "committedDate": "2020-08-03T05:32:27Z", "type": "commit"}, {"oid": "0ff5800d5321a8bd746dcba4ae6f37c151a8a4e5", "url": "https://github.com/yahoo/elide/commit/0ff5800d5321a8bd746dcba4ae6f37c151a8a4e5", "message": "minor update", "committedDate": "2020-08-03T05:39:10Z", "type": "commit"}, {"oid": "1c2f93de2eed911a6f58e3dfff04b6548ded94d8", "url": "https://github.com/yahoo/elide/commit/1c2f93de2eed911a6f58e3dfff04b6548ded94d8", "message": "update to resourceMap", "committedDate": "2020-08-03T06:26:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NTY3OQ==", "url": "https://github.com/yahoo/elide/pull/1449#discussion_r467145679", "bodyText": "Should forward slash here also be File.separator?", "author": "aklish", "createdAt": "2020-08-07T16:31:05Z", "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/Config.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers;\n+\n+import java.io.File;\n+/**\n+ * Dynamic Config enum.\n+ */\n+public enum Config {\n+\n+    TABLE(\"table\",\n+          \"tables\" + File.separator,\n+          \"/elideTableSchema.json\"),", "originalCommit": "1c2f93de2eed911a6f58e3dfff04b6548ded94d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e061c0ce2be5513c829ebbfdd81183702ab2e4e", "chunk": "diff --git a/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/Config.java b/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/Config.java\nindex 2e3bdf9db..4a109afa8 100644\n--- a/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/Config.java\n+++ b/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/Config.java\n\n@@ -13,15 +13,15 @@ public enum Config {\n \n     TABLE(\"table\",\n           \"tables\" + File.separator,\n-          \"/elideTableSchema.json\"),\n+          File.separator + \"elideTableSchema.json\"),\n \n     SECURITY(\"security\",\n             \"security.hjson\",\n-            \"/elideSecuritySchema.json\"),\n+            File.separator + \"elideSecuritySchema.json\"),\n \n     VARIABLE(\"variable\",\n             \"variables.hjson\",\n-            \"/elideVariableSchema.json\");\n+            File.separator + \"elideVariableSchema.json\");\n \n     private final String configType;\n     private final String configPath;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NjIwMg==", "url": "https://github.com/yahoo/elide/pull/1449#discussion_r467146202", "bodyText": "A method like this should either return false or throw an exception but not both.  Otherwise the contract is confusing.", "author": "aklish", "createdAt": "2020-08-07T16:32:07Z", "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigSchemaValidator.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020, Yahoo Inc.\n+ * Licensed under the Apache License, Version 2.0\n+ * See LICENSE file in project root for terms.\n+ */\n+package com.yahoo.elide.contrib.dynamicconfighelpers;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.github.fge.jsonschema.core.exceptions.ProcessingException;\n+import com.github.fge.jsonschema.core.report.ProcessingReport;\n+import com.github.fge.jsonschema.main.JsonSchema;\n+import com.github.fge.jsonschema.main.JsonSchemaFactory;\n+\n+import lombok.extern.slf4j.Slf4j;\n+\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+\n+/**\n+ * Dynamic Model Schema validation.\n+ */\n+@Slf4j\n+public class DynamicConfigSchemaValidator {\n+\n+    private static final JsonSchemaFactory FACTORY = JsonSchemaFactory.byDefault();\n+    private JsonSchema tableSchema;\n+    private JsonSchema securitySchema;\n+    private JsonSchema variableSchema;\n+\n+    public DynamicConfigSchemaValidator() {\n+        tableSchema = loadSchema(Config.TABLE.getConfigSchema());\n+        securitySchema = loadSchema(Config.SECURITY.getConfigSchema());\n+        variableSchema = loadSchema(Config.VARIABLE.getConfigSchema());\n+    }\n+    /**\n+     *  Verify config against schema.\n+     * @param configType\n+     * @param jsonConfig\n+     * @return whether config is valid\n+     * @throws IOException\n+     * @throws ProcessingException\n+     */\n+    public boolean verifySchema(Config configType, String jsonConfig) throws IOException, ProcessingException {\n+        ProcessingReport results = null;\n+        boolean isSuccess = false;\n+\n+        switch (configType) {\n+        case TABLE :\n+            results = this.tableSchema.validate(new ObjectMapper().readTree(jsonConfig));\n+            break;\n+        case SECURITY :\n+            results = this.securitySchema.validate(new ObjectMapper().readTree(jsonConfig));\n+            break;\n+        case VARIABLE :\n+            results = this.variableSchema.validate(new ObjectMapper().readTree(jsonConfig));\n+            break;\n+        default :\n+            log.error(\"Not a valid config type :\" + configType);\n+            return false;", "originalCommit": "1c2f93de2eed911a6f58e3dfff04b6548ded94d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e061c0ce2be5513c829ebbfdd81183702ab2e4e", "chunk": "diff --git a/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigSchemaValidator.java b/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigSchemaValidator.java\nindex 9f05d6c70..f92fcdaa6 100644\n--- a/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigSchemaValidator.java\n+++ b/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/DynamicConfigSchemaValidator.java\n\n@@ -57,9 +57,9 @@ public class DynamicConfigSchemaValidator {\n             break;\n         default :\n             log.error(\"Not a valid config type :\" + configType);\n-            return false;\n+            break;\n         }\n-        isSuccess = results.isSuccess();\n+        isSuccess = (results == null ? false : results.isSuccess());\n \n         if (!isSuccess) {\n             throw new ProcessingException(\"Schema validation failed\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NzI0MA==", "url": "https://github.com/yahoo/elide/pull/1449#discussion_r467147240", "bodyText": "Why not just new HashMap<>?", "author": "aklish", "createdAt": "2020-08-07T16:34:16Z", "path": "elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java", "diffHunk": "@@ -53,11 +56,29 @@\n     private static final String SQL_SPLIT_REGEX = \"\\\\s+\";\n     private static final String SEMI_COLON = \";\";\n     private static final Pattern HANDLEBAR_REGEX = Pattern.compile(\"<%(.*?)%>\");\n+    private static final String RESOURCES = \"resources\";\n+    private static final int RESOURCE_LENGTH = 10; //\"resources/\".length()\n+    private static final String CLASSPATH_PATTERN = \"classpath*:\";\n+    private static final String FILEPATH_PATTERN = \"file:\";\n+    private static final String HJSON_EXTN = \"**/*.hjson\";\n \n-    private ElideTableConfig elideTableConfig;\n-    private ElideSecurityConfig elideSecurityConfig;\n-    private Map<String, Object> variables;\n+    private ElideTableConfig elideTableConfig = new ElideTableConfig();\n+    private ElideSecurityConfig elideSecurityConfig = new ElideSecurityConfig();\n+    private Map<String, Object> variables = Collections.<String, Object>emptyMap();", "originalCommit": "1c2f93de2eed911a6f58e3dfff04b6548ded94d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e061c0ce2be5513c829ebbfdd81183702ab2e4e", "chunk": "diff --git a/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java b/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java\nindex 8686997c5..e6d7cbfe8 100644\n--- a/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java\n+++ b/elide-contrib/elide-dynamic-config-helpers/src/main/java/com/yahoo/elide/contrib/dynamicconfighelpers/validator/DynamicConfigValidator.java\n\n@@ -64,7 +63,7 @@ public class DynamicConfigValidator {\n \n     private ElideTableConfig elideTableConfig = new ElideTableConfig();\n     private ElideSecurityConfig elideSecurityConfig = new ElideSecurityConfig();\n-    private Map<String, Object> variables = Collections.<String, Object>emptyMap();\n+    private Map<String, Object> variables = new HashMap<>();;\n     private String configDir;\n     private Map<String, Resource> resourceMap = new HashMap<>();\n \n"}}, {"oid": "5e061c0ce2be5513c829ebbfdd81183702ab2e4e", "url": "https://github.com/yahoo/elide/commit/5e061c0ce2be5513c829ebbfdd81183702ab2e4e", "message": "review comments", "committedDate": "2020-08-07T16:47:49Z", "type": "commit"}]}