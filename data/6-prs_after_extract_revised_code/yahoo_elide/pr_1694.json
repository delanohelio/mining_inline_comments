{"pr_number": 1694, "pr_title": "Add support for Join type.", "pr_createdAt": "2020-11-25T15:23:20Z", "pr_url": "https://github.com/yahoo/elide/pull/1694", "timeline": [{"oid": "3b9dad9d37e9313e3c7a51080b5c6bb585c15380", "url": "https://github.com/yahoo/elide/commit/3b9dad9d37e9313e3c7a51080b5c6bb585c15380", "message": "Add support for Join type.", "committedDate": "2020-11-25T15:32:24Z", "type": "forcePushed"}, {"oid": "6794561d34df8dbb7edc831d63ffc0cd0d9c6721", "url": "https://github.com/yahoo/elide/commit/6794561d34df8dbb7edc831d63ffc0cd0d9c6721", "message": "Add support for Join type.", "committedDate": "2020-11-25T15:39:16Z", "type": "commit"}, {"oid": "6794561d34df8dbb7edc831d63ffc0cd0d9c6721", "url": "https://github.com/yahoo/elide/commit/6794561d34df8dbb7edc831d63ffc0cd0d9c6721", "message": "Add support for Join type.", "committedDate": "2020-11-25T15:39:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUwMDE4MA==", "url": "https://github.com/yahoo/elide/pull/1694#discussion_r530500180", "bodyText": "Let's use the enum here.", "author": "aklish", "createdAt": "2020-11-25T16:27:24Z", "path": "elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/annotation/Join.java", "diffHunk": "@@ -21,4 +21,10 @@\n      * @return join constraint like <code>{{col1}} = {{joinField.col2}}</code>\n      */\n     String value();\n+\n+    /**\n+     * Join type.\n+     * @return join type like {@code left, right, inner, outer or cross}\n+     */\n+    String type() default \"left\";", "originalCommit": "6794561d34df8dbb7edc831d63ffc0cd0d9c6721", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU1Njc1NA==", "url": "https://github.com/yahoo/elide/pull/1694#discussion_r530556754", "bodyText": "done.", "author": "rishi-aga", "createdAt": "2020-11-25T18:00:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUwMDE4MA=="}], "type": "inlineReview", "revised_code": {"commit": "75c6378a22e8153e9ed2cec8e3d056aa24ece100", "chunk": "diff --git a/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/annotation/Join.java b/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/annotation/Join.java\nindex 280425fbd..c2c7cc356 100644\n--- a/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/annotation/Join.java\n+++ b/elide-datastore/elide-datastore-aggregation/src/main/java/com/yahoo/elide/datastores/aggregation/annotation/Join.java\n\n@@ -24,7 +24,7 @@ public @interface Join {\n \n     /**\n      * Join type.\n-     * @return join type like {@code left, right, inner, outer or cross}\n+     * @return join type like {@code left, inner, full or cross}\n      */\n-    String type() default \"left\";\n+    JoinType type() default JoinType.LEFT;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUwNDMzOQ==", "url": "https://github.com/yahoo/elide/pull/1694#discussion_r530504339", "bodyText": "I think we should have left, inner, full, and cross as the join types.", "author": "aklish", "createdAt": "2020-11-25T16:33:50Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/modelconfig/jsonformats/ElideJoinTypeFormatAttr.java", "diffHunk": "@@ -15,15 +15,16 @@\n /**\n  * Format specifier for {@code elideJoinType} format attribute.\n  * <p>\n- * This specifier will check if a string instance is one of {@code ToOne, ToMany}.\n+ * This specifier will check if a string instance is one of {@code left, right, inner, outer, cross}.\n  * </p>\n  */\n public class ElideJoinTypeFormatAttr extends AbstractFormatAttribute {\n-    private static final String JOIN_TYPE_REGEX = \"^(?i)(ToOne|ToMany)$\";\n+    private static final String JOIN_TYPE_REGEX = \"^(?i)(left|right|inner|outer|cross)$\";", "originalCommit": "6794561d34df8dbb7edc831d63ffc0cd0d9c6721", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU1NjcwNQ==", "url": "https://github.com/yahoo/elide/pull/1694#discussion_r530556705", "bodyText": "done.", "author": "rishi-aga", "createdAt": "2020-11-25T18:00:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUwNDMzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "75c6378a22e8153e9ed2cec8e3d056aa24ece100", "chunk": "diff --git a/elide-model-config/src/main/java/com/yahoo/elide/modelconfig/jsonformats/ElideJoinTypeFormatAttr.java b/elide-model-config/src/main/java/com/yahoo/elide/modelconfig/jsonformats/ElideJoinTypeFormatAttr.java\nindex 3bddd17f3..fd4fa0799 100644\n--- a/elide-model-config/src/main/java/com/yahoo/elide/modelconfig/jsonformats/ElideJoinTypeFormatAttr.java\n+++ b/elide-model-config/src/main/java/com/yahoo/elide/modelconfig/jsonformats/ElideJoinTypeFormatAttr.java\n\n@@ -15,16 +15,16 @@ import com.github.fge.msgsimple.bundle.MessageBundle;\n /**\n  * Format specifier for {@code elideJoinType} format attribute.\n  * <p>\n- * This specifier will check if a string instance is one of {@code left, right, inner, outer, cross}.\n+ * This specifier will check if a string instance is one of {@code left, inner, full, cross}.\n  * </p>\n  */\n public class ElideJoinTypeFormatAttr extends AbstractFormatAttribute {\n-    private static final String JOIN_TYPE_REGEX = \"^(?i)(left|right|inner|outer|cross)$\";\n+    private static final String JOIN_TYPE_REGEX = \"^(?i)(left|inner|full|cross)$\";\n \n     public static final String FORMAT_NAME = \"elideJoinType\";\n     public static final String TYPE_KEY = \"elideJoinType.error.enum\";\n     public static final String TYPE_MSG =\n-                    \"Join type [%s] is not allowed. Supported value is one of [left, right, inner, outer, cross].\";\n+                    \"Join type [%s] is not allowed. Supported value is one of [left, inner, full, cross].\";\n \n     public ElideJoinTypeFormatAttr() {\n         super(FORMAT_NAME, NodeType.STRING);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUwNDc5Nw==", "url": "https://github.com/yahoo/elide/pull/1694#discussion_r530504797", "bodyText": "See earlier comment about supported join types.", "author": "aklish", "createdAt": "2020-11-25T16:34:33Z", "path": "elide-model-config/src/main/java/com/yahoo/elide/modelconfig/model/Join.java", "diffHunk": "@@ -39,16 +40,39 @@\n     @JsonProperty(\"type\")\n     private Join.Type type;\n \n+    @JsonProperty(\"kind\")\n+    private Join.Kind kind;\n+\n     @JsonProperty(\"definition\")\n     private String definition;\n \n-    public enum Type {\n+    public enum Kind {\n \n         TOONE(\"toOne\"),\n         TOMANY(\"toMany\");\n \n         private final String value;\n \n+        private Kind(String value) {\n+            this.value = value;\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return this.value;\n+        }\n+    }\n+\n+    public enum Type {\n+\n+        LEFT(\"left\"),\n+        RIGHT(\"right\"),\n+        INNER(\"inner\"),\n+        OUTER(\"outer\"),", "originalCommit": "6794561d34df8dbb7edc831d63ffc0cd0d9c6721", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU1NjY0OQ==", "url": "https://github.com/yahoo/elide/pull/1694#discussion_r530556649", "bodyText": "done.", "author": "rishi-aga", "createdAt": "2020-11-25T17:59:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUwNDc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "75c6378a22e8153e9ed2cec8e3d056aa24ece100", "chunk": "diff --git a/elide-model-config/src/main/java/com/yahoo/elide/modelconfig/model/Join.java b/elide-model-config/src/main/java/com/yahoo/elide/modelconfig/model/Join.java\nindex 5d85f4c3b..93f1ffa2d 100644\n--- a/elide-model-config/src/main/java/com/yahoo/elide/modelconfig/model/Join.java\n+++ b/elide-model-config/src/main/java/com/yahoo/elide/modelconfig/model/Join.java\n\n@@ -41,7 +41,7 @@ public class Join implements Named {\n     private Join.Type type;\n \n     @JsonProperty(\"kind\")\n-    private Join.Kind kind;\n+    private Join.Kind kind = Join.Kind.TOONE;\n \n     @JsonProperty(\"definition\")\n     private String definition;\n"}}, {"oid": "75c6378a22e8153e9ed2cec8e3d056aa24ece100", "url": "https://github.com/yahoo/elide/commit/75c6378a22e8153e9ed2cec8e3d056aa24ece100", "message": "Review Comments", "committedDate": "2020-11-25T17:01:39Z", "type": "commit"}]}