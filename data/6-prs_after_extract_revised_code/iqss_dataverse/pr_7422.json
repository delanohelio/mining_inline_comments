{"pr_number": 7422, "pr_title": "7418 datasourcedefinition", "pr_createdAt": "2020-11-18T12:55:09Z", "pr_url": "https://github.com/IQSS/dataverse/pull/7422", "timeline": [{"oid": "9dfe7b82f16c006abe6b12e94d55e667fdec48ca", "url": "https://github.com/IQSS/dataverse/commit/9dfe7b82f16c006abe6b12e94d55e667fdec48ca", "message": "Provide @DataSourceDefinition for app-level DB config. #7418\n\nThe JNDI names have been changed to be conform with Java EE 7.\nSee https://github.com/javaee-samples/javaee7-samples/tree/master/jpa/datasourcedefinition-applicationxml-pu\nand others for working examples. (Staying with the old name was not successfull.)", "committedDate": "2020-11-18T12:08:05Z", "type": "commit"}, {"oid": "b92e465d3e1c1f63f631d4337c5ba19f4c864037", "url": "https://github.com/IQSS/dataverse/commit/b92e465d3e1c1f63f631d4337c5ba19f4c864037", "message": "Make the DataSourceDefinition configureable using MicroProfile Config variables in annotation options. #7418 #7000", "committedDate": "2020-11-18T12:08:35Z", "type": "commit"}, {"oid": "3c92120a37f2f54a6b484aa12072b13d9c3a23a9", "url": "https://github.com/IQSS/dataverse/commit/3c92120a37f2f54a6b484aa12072b13d9c3a23a9", "message": "Add defaults for the database connection using a MicroProfile Config file on classpath. #7418 #7000", "committedDate": "2020-11-18T12:08:35Z", "type": "commit"}, {"oid": "d05cbaf578cfddaeacc2a84b76f012ea20c06266", "url": "https://github.com/IQSS/dataverse/commit/d05cbaf578cfddaeacc2a84b76f012ea20c06266", "message": "Remove stale persistence unit from persistence.xml. #7418", "committedDate": "2020-11-18T12:08:35Z", "type": "commit"}, {"oid": "19c5e98324fd468faa26000ecec8b036fa449490", "url": "https://github.com/IQSS/dataverse/commit/19c5e98324fd468faa26000ecec8b036fa449490", "message": "Refactor as-setup.sh installer to use the MPCONFIG based database connection configuration. #7418", "committedDate": "2020-11-18T12:16:43Z", "type": "commit"}, {"oid": "b6468313e6971792eae8a02520ed9acaec78557a", "url": "https://github.com/IQSS/dataverse/commit/b6468313e6971792eae8a02520ed9acaec78557a", "message": "Add docs about the new MPCONFIG based database properties to config doc. #7418", "committedDate": "2020-11-18T12:22:49Z", "type": "commit"}, {"oid": "d0a1194d2155e5c06e70386ee2b3f5e6596959b0", "url": "https://github.com/IQSS/dataverse/commit/d0a1194d2155e5c06e70386ee2b3f5e6596959b0", "message": "Add release notes docs, including references to #7417 and #5345", "committedDate": "2020-11-18T12:49:10Z", "type": "commit"}, {"oid": "813e0fba6ea9d331d18ef1adf74c39f2d446dc52", "url": "https://github.com/IQSS/dataverse/commit/813e0fba6ea9d331d18ef1adf74c39f2d446dc52", "message": "Merge branch 'develop' into 7418-datasourcedefinition #7418", "committedDate": "2020-11-24T21:09:48Z", "type": "commit"}, {"oid": "aa1cc0feb4b18f10e5e014085ea662c925ee4b99", "url": "https://github.com/IQSS/dataverse/commit/aa1cc0feb4b18f10e5e014085ea662c925ee4b99", "message": "fix 'Error in \"code-block\" directive' #7418", "committedDate": "2020-11-25T16:07:04Z", "type": "commit"}, {"oid": "cb4d308beb0209cd758ef43c0633b50cc9d751f5", "url": "https://github.com/IQSS/dataverse/commit/cb4d308beb0209cd758ef43c0633b50cc9d751f5", "message": "tweaks, remove mention of microprofile-config.properties #7418\n\nsrc/main/resources/META-INF/microprofile-config.properties is important\nfor developers to know about but sysadmins following the installation\nguide need not concern themselves with it.\n\nOther tweaks in this commit are cosmetic. I de-emphasized the\nenvironment variables by putting them in the bottom.", "committedDate": "2020-11-25T20:55:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYxMDE0Mg==", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r530610142", "bodyText": "In 9dfe7b8 it is explained why this changed:\n\nThe JNDI names have been changed to be conform with Java EE 7.\nSee https://github.com/javaee-samples/javaee7-samples/tree/master/jpa/datasourcedefinition-applicationxml-pu\nand others for working examples. (Staying with the old name was not successfull.)", "author": "pdurbin", "createdAt": "2020-11-25T19:51:51Z", "path": "src/main/java/edu/harvard/iq/dataverse/flyway/StartupFlywayMigrator.java", "diffHunk": "@@ -15,7 +15,7 @@\n @TransactionManagement(value = TransactionManagementType.BEAN)\n public class StartupFlywayMigrator {\n \n-    @Resource(lookup = \"jdbc/VDCNetDS\")\n+    @Resource(lookup = \"java:app/jdbc/dataverse\")", "originalCommit": "aa1cc0feb4b18f10e5e014085ea662c925ee4b99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "9155c0704c2d3dbc75c1976f69d29dd96dd77d75", "url": "https://github.com/IQSS/dataverse/commit/9155c0704c2d3dbc75c1976f69d29dd96dd77d75", "message": "Update doc/release-notes/7418-datasourcedefinition.md\n\nCo-authored-by: Philip Durbin <philip_durbin@harvard.edu>", "committedDate": "2020-11-25T21:03:00Z", "type": "commit"}, {"oid": "06dbef10ac65a8b07d25c3b7506b0362d04030c9", "url": "https://github.com/IQSS/dataverse/commit/06dbef10ac65a8b07d25c3b7506b0362d04030c9", "message": "PGXADataSource breaks ingest, use PGPoolingDataSource #7418", "committedDate": "2020-12-01T17:27:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY3MDkxMw==", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r533670913", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Note that PGPoolingDataSource is deprecated. PGXADataSource breaks ingest.\n          \n          \n            \n                className = \"org.postgresql.ds.PGPoolingDataSource\",\n          \n          \n            \n                // App server provides its own pooling, so go with simple data source class.\n          \n          \n            \n                // PGXADataSource is unnecessary (no distributed transactions) and breaks ingest.\n          \n          \n            \n                className = \"org.postgresql.ds.PGSimpleDataSource\",", "author": "poikilotherm", "createdAt": "2020-12-01T19:35:36Z", "path": "src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package edu.harvard.iq.dataverse.util;\n+\n+import javax.annotation.Resource;\n+import javax.annotation.sql.DataSourceDefinition;\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Singleton;\n+import javax.sql.DataSource;\n+\n+@Singleton\n+@DataSourceDefinition(\n+    name = \"java:app/jdbc/dataverse\",\n+    // Note that PGPoolingDataSource is deprecated. PGXADataSource breaks ingest.\n+    className = \"org.postgresql.ds.PGPoolingDataSource\",", "originalCommit": "06dbef10ac65a8b07d25c3b7506b0362d04030c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY3MTY4MQ==", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r533671681", "bodyText": "I'll go ahead and do this.", "author": "poikilotherm", "createdAt": "2020-12-01T19:36:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY3MDkxMw=="}], "type": "inlineReview", "revised_code": {"commit": "b1865087ad27a500be18a7a1f89c7d43b5fd3722", "chunk": "diff --git a/src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java b/src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java\nindex bfb64b681..e66de31ee 100644\n--- a/src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java\n+++ b/src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java\n\n@@ -9,8 +9,9 @@ import javax.sql.DataSource;\n @Singleton\n @DataSourceDefinition(\n     name = \"java:app/jdbc/dataverse\",\n-    // Note that PGPoolingDataSource is deprecated. PGXADataSource breaks ingest.\n-    className = \"org.postgresql.ds.PGPoolingDataSource\",\n+    // App server provides its own pooling, so go with simple data source class.\n+    // PGXADataSource is unnecessary (no distributed transactions) and breaks ingest.\n+    className = \"org.postgresql.ds.PGSimpleDataSource\",\n     user = \"${MPCONFIG=dataverse.db.user}\",\n     password = \"${MPCONFIG=dataverse.db.password}\",\n     serverName = \"${MPCONFIG=dataverse.db.host}\",\n"}}, {"oid": "b1865087ad27a500be18a7a1f89c7d43b5fd3722", "url": "https://github.com/IQSS/dataverse/commit/b1865087ad27a500be18a7a1f89c7d43b5fd3722", "message": "Update src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java", "committedDate": "2020-12-01T19:37:02Z", "type": "commit"}, {"oid": "2d0dc6e4d0baedc14671830f4e5fe1d0201f7e4b", "url": "https://github.com/IQSS/dataverse/commit/2d0dc6e4d0baedc14671830f4e5fe1d0201f7e4b", "message": "Remove doubled property usage on DataSourceDefinition following Java EE spec on it. #7418", "committedDate": "2020-12-02T10:11:16Z", "type": "commit"}, {"oid": "1c0959b29da894d058814624b7ea9e53baebf400", "url": "https://github.com/IQSS/dataverse/commit/1c0959b29da894d058814624b7ea9e53baebf400", "message": "Switch to a javax.sql.ConnectionPoolDataSource class for DataSourceDefinition plus add some more inline docs. #7418", "committedDate": "2020-12-02T10:25:03Z", "type": "commit"}, {"oid": "ea0cf29e0e63945ed22de0d4faf26dc574bd9bec", "url": "https://github.com/IQSS/dataverse/commit/ea0cf29e0e63945ed22de0d4faf26dc574bd9bec", "message": "Add more comments about pool sizing and reduce JDBC pool to max 100 connections. #7418", "committedDate": "2020-12-02T11:51:24Z", "type": "commit"}, {"oid": "a41e177977e70706179eec2f723fff34b2ba3134", "url": "https://github.com/IQSS/dataverse/commit/a41e177977e70706179eec2f723fff34b2ba3134", "message": "Enable special JDBC connection pooling properties for debugging and monitoring via MPCONFIG. #7418", "committedDate": "2020-12-02T11:59:00Z", "type": "commit"}, {"oid": "1a921f6b1b0f1a80a34d5651ad3e883a3c30a69e", "url": "https://github.com/IQSS/dataverse/commit/1a921f6b1b0f1a80a34d5651ad3e883a3c30a69e", "message": "Make pool resize configurable. #7418", "committedDate": "2020-12-02T13:23:49Z", "type": "commit"}, {"oid": "83ea82f2d292d88aad3d73aa075eb14692a854ac", "url": "https://github.com/IQSS/dataverse/commit/83ea82f2d292d88aad3d73aa075eb14692a854ac", "message": "Reverting the addition of JDBC pooling settings, configurable via MPCONFIG. #7418\n\nDue to payara/Payara#5024 this is currently not possible. Needs to be addressed\nin a later enhancement when Payara provides a solution.", "committedDate": "2020-12-02T13:49:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMyODM4OQ==", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r534328389", "bodyText": "I find it confusing to see all the MPCONFIG values here when they don't work yet. (Thanks for opening payara/Payara#5024 to address this.)\nIn practice, I'm not sure how many of these we (Harvard Dataverse) use but perhaps this list could be simplified down to the two mentioned in #7048 (comment) which are:\nproperties = {\n    \"fish.payara.is-connection-validation-required=true\",\n    \"fish.payara.validation-table-name=setting\"\n}\n\nOnce there is a list with hard coded values like this, it's more obvious that uncommenting them will (presumably) have an effect.", "author": "pdurbin", "createdAt": "2020-12-02T16:58:33Z", "path": "src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package edu.harvard.iq.dataverse.util;\n+\n+import javax.annotation.Resource;\n+import javax.annotation.sql.DataSourceDefinition;\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Singleton;\n+import javax.sql.DataSource;\n+\n+@Singleton\n+@DataSourceDefinition(\n+    // Find docs here: https://javaee.github.io/javaee-spec/javadocs/javax/annotation/sql/DataSourceDefinition.html\n+    \n+    name = \"java:app/jdbc/dataverse\",\n+    \n+    // The app server (Payara) deploys a managed pool for this data source for us.\n+    // We don't need to deal with this on our own.\n+    //\n+    // HINT: PGSimpleDataSource would work too, but as we use a connection pool, go with a javax.sql.ConnectionPoolDataSource\n+    // HINT: PGXADataSource is unnecessary (no distributed transactions used) and breaks ingest.\n+    className = \"org.postgresql.ds.PGConnectionPoolDataSource\",\n+    \n+    user = \"${MPCONFIG=dataverse.db.user}\",\n+    password = \"${MPCONFIG=dataverse.db.password}\",\n+    url = \"jdbc:postgresql://${MPCONFIG=dataverse.db.host}:${MPCONFIG=dataverse.db.port}/${MPCONFIG=dataverse.db.name}\",\n+    \n+    // If we ever need to change these pool settings, we need to remove this class and create the resource\n+    // from web.xml. We can use MicroProfile Config in there for these values, impossible to do in the annotation.\n+    //\n+    // See also https://blog.payara.fish/an-intro-to-connection-pools-in-payara-server-5\n+    // Payara DataSourceDefinitionDeployer default value = 8\n+    minPoolSize = 10,\n+    \n+    // HINT: Payara DataSourceDefinitionDeployer default value = 32\n+    // HINT: Harvard Dataverse is fine for a while with 64\n+    maxPoolSize = 100,\n+    \n+    // \"The number of seconds that a physical connection should remain unused in the pool before the connection is closed for a connection pool. \"\n+    // Payara DataSourceDefinitionDeployer default value = 300 (seconds)\n+    maxIdleTime = 300)\n+    \n+    // These are documented at https://docs.payara.fish/community/docs/5.2020.6/documentation/payara-server/jdbc/advanced-connection-pool-properties.html#full-list-of-properties\n+    //\n+    // All these vars cannot be configured via MPCONFIG as Payara doesn't support this (yet). To be enhanced.\n+    // See also https://github.com/payara/Payara/issues/5024\n+    /*\n+    properties = {\n+        \"fish.payara.pool-resize-quantity=${MPCONFIG=dataverse.db.pool-resize-quantity}\",\n+        \"fish.payara.is-connection-validation-required=${MPCONFIG=dataverse.db.is-connection-validation-required}\",\n+        \"fish.payara.connection-validation-method=${MPCONFIG=dataverse.db.connection-validation-method}\",\n+        \"fish.payara.validation-table-name=${MPCONFIG=dataverse.db.validation-table-name}\",\n+        \"fish.payara.validation-classname=${MPCONFIG=dataverse.db.validation-classname}\",\n+        \"fish.payara.connection-leak-timeout-in-seconds=${MPCONFIG=dataverse.db.connection-leak-timeout-in-seconds}\",\n+        \"fish.payara.connection-leak-reclaim=${MPCONFIG=dataverse.db.connection-leak-reclaim}\",\n+        \"fish.payara.statement-timeout-in-seconds=${MPCONFIG=dataverse.db.statement-timeout-in-seconds}\",\n+        \"fish.payara.statement-leak-timeout-in-seconds=${MPCONFIG=dataverse.db.statement-leak-timeout-in-seconds}\",\n+        \"fish.payara.statement-leak-reclaim=${MPCONFIG=dataverse.db.statement-leak-reclaim}\",\n+        \"fish.payara.slow-query-threshold-in-seconds=${MPCONFIG=dataverse.db.slow-query-threshold-in-seconds}\",\n+        \"fish.payara.log-jdbc-calls=${MPCONFIG=dataverse.db.log-jdbc-calls}\"", "originalCommit": "83ea82f2d292d88aad3d73aa075eb14692a854ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU3NjU5MA==", "url": "https://github.com/IQSS/dataverse/pull/7422#discussion_r535576590", "bodyText": "Removed in c583909.", "author": "pdurbin", "createdAt": "2020-12-03T20:33:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMyODM4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c583909d21daa63b03f82f6aba02965451ef7467", "chunk": "diff --git a/src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java b/src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java\nindex 9e85fbe5b..82936d191 100644\n--- a/src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java\n+++ b/src/main/java/edu/harvard/iq/dataverse/util/DataSourceProducer.java\n\n@@ -37,27 +37,17 @@ import javax.sql.DataSource;\n     // \"The number of seconds that a physical connection should remain unused in the pool before the connection is closed for a connection pool. \"\n     // Payara DataSourceDefinitionDeployer default value = 300 (seconds)\n     maxIdleTime = 300)\n-    \n-    // These are documented at https://docs.payara.fish/community/docs/5.2020.6/documentation/payara-server/jdbc/advanced-connection-pool-properties.html#full-list-of-properties\n+    // It's possible to add additional properties like this...\n+    //\n+    //properties = {\n+    //    \"fish.payara.log-jdbc-calls=true\"\n+    //})\n+    //\n+    // ... but at this time we don't think we need any. The full list\n+    // of properties can be found at https://docs.payara.fish/community/docs/5.2020.6/documentation/payara-server/jdbc/advanced-connection-pool-properties.html#full-list-of-properties\n     //\n-    // All these vars cannot be configured via MPCONFIG as Payara doesn't support this (yet). To be enhanced.\n+    // All these properties cannot be configured via MPCONFIG as Payara doesn't support this (yet). To be enhanced.\n     // See also https://github.com/payara/Payara/issues/5024\n-    /*\n-    properties = {\n-        \"fish.payara.pool-resize-quantity=${MPCONFIG=dataverse.db.pool-resize-quantity}\",\n-        \"fish.payara.is-connection-validation-required=${MPCONFIG=dataverse.db.is-connection-validation-required}\",\n-        \"fish.payara.connection-validation-method=${MPCONFIG=dataverse.db.connection-validation-method}\",\n-        \"fish.payara.validation-table-name=${MPCONFIG=dataverse.db.validation-table-name}\",\n-        \"fish.payara.validation-classname=${MPCONFIG=dataverse.db.validation-classname}\",\n-        \"fish.payara.connection-leak-timeout-in-seconds=${MPCONFIG=dataverse.db.connection-leak-timeout-in-seconds}\",\n-        \"fish.payara.connection-leak-reclaim=${MPCONFIG=dataverse.db.connection-leak-reclaim}\",\n-        \"fish.payara.statement-timeout-in-seconds=${MPCONFIG=dataverse.db.statement-timeout-in-seconds}\",\n-        \"fish.payara.statement-leak-timeout-in-seconds=${MPCONFIG=dataverse.db.statement-leak-timeout-in-seconds}\",\n-        \"fish.payara.statement-leak-reclaim=${MPCONFIG=dataverse.db.statement-leak-reclaim}\",\n-        \"fish.payara.slow-query-threshold-in-seconds=${MPCONFIG=dataverse.db.slow-query-threshold-in-seconds}\",\n-        \"fish.payara.log-jdbc-calls=${MPCONFIG=dataverse.db.log-jdbc-calls}\"\n-    })\n-    */\n public class DataSourceProducer {\n     \n     @Resource(lookup=\"java:app/jdbc/dataverse\")\n"}}, {"oid": "c583909d21daa63b03f82f6aba02965451ef7467", "url": "https://github.com/IQSS/dataverse/commit/c583909d21daa63b03f82f6aba02965451ef7467", "message": "tweak javadoc, default MP config properties #7418\n\n- Show a simple properties example that's easily verifiable by inspecting\nserver.log (JDBC call debugging).\n- Remove MPCONFIG examples that don't work yet (depends on work in\nPayara).", "committedDate": "2020-12-03T19:45:01Z", "type": "commit"}, {"oid": "f98c1642f50a1b815251da78b42ea848df4b535b", "url": "https://github.com/IQSS/dataverse/commit/f98c1642f50a1b815251da78b42ea848df4b535b", "message": "format with Netbeans #7418", "committedDate": "2020-12-03T19:55:47Z", "type": "commit"}, {"oid": "9168ad124a1cbea4e3bccb66ab7f44388acb2e4e", "url": "https://github.com/IQSS/dataverse/commit/9168ad124a1cbea4e3bccb66ab7f44388acb2e4e", "message": "Merge branch 'develop' into 7418-datasourcedefinition #7418", "committedDate": "2020-12-03T19:56:41Z", "type": "commit"}, {"oid": "d7f3da1f1a13e1b4e3b45a7ecad30a56c70f3c83", "url": "https://github.com/IQSS/dataverse/commit/d7f3da1f1a13e1b4e3b45a7ecad30a56c70f3c83", "message": "mention new JVM options in release notes #7418", "committedDate": "2020-12-03T20:21:44Z", "type": "commit"}, {"oid": "7e3498e72353378a0e14730fa7a7ff6b8a364ec6", "url": "https://github.com/IQSS/dataverse/commit/7e3498e72353378a0e14730fa7a7ff6b8a364ec6", "message": "note that some settings have moved to code #7418", "committedDate": "2020-12-03T20:31:01Z", "type": "commit"}]}