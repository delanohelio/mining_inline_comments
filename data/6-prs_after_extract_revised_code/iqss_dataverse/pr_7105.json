{"pr_number": 7105, "pr_title": "6865 no more deadlocks", "pr_createdAt": "2020-07-21T02:45:42Z", "pr_url": "https://github.com/IQSS/dataverse/pull/7105", "timeline": [{"oid": "63ea223f2152375eabde1c62bac48d7e934af012", "url": "https://github.com/IQSS/dataverse/commit/63ea223f2152375eabde1c62bac48d7e934af012", "message": "Extract index from save and create new helper methods for commands to call.", "committedDate": "2020-07-21T02:16:51Z", "type": "commit"}, {"oid": "710f6273cd696a27b6dcfc6249d987b64235d235", "url": "https://github.com/IQSS/dataverse/commit/710f6273cd696a27b6dcfc6249d987b64235d235", "message": "Extract index from save and create new helper methods for commands to call.", "committedDate": "2020-07-21T02:18:32Z", "type": "commit"}, {"oid": "72e00a22db4047109ff348f234b766e39d4bddd7", "url": "https://github.com/IQSS/dataverse/commit/72e00a22db4047109ff348f234b766e39d4bddd7", "message": "Extract index from save and create new helper methods for commands to call.", "committedDate": "2020-07-21T02:20:37Z", "type": "commit"}, {"oid": "94c58c2e8dd6f440b58f44a8d12dee0ff13cfffb", "url": "https://github.com/IQSS/dataverse/commit/94c58c2e8dd6f440b58f44a8d12dee0ff13cfffb", "message": "removed an extraneous indexing call", "committedDate": "2020-07-21T02:24:42Z", "type": "commit"}, {"oid": "4a86d1285a26953a534f9109c8c47f73b6a24cee", "url": "https://github.com/IQSS/dataverse/commit/4a86d1285a26953a534f9109c8c47f73b6a24cee", "message": "added a TODO comment", "committedDate": "2020-07-21T02:25:58Z", "type": "commit"}, {"oid": "8225dd29d6a96108700235aad5a2fafbfd33d3e2", "url": "https://github.com/IQSS/dataverse/commit/8225dd29d6a96108700235aad5a2fafbfd33d3e2", "message": "Extract index from save and create new helper methods for commands to call.", "committedDate": "2020-07-21T02:27:26Z", "type": "commit"}, {"oid": "82749f63b9a7eafecadd8c6b4b6429f465afd21f", "url": "https://github.com/IQSS/dataverse/commit/82749f63b9a7eafecadd8c6b4b6429f465afd21f", "message": "Extract index from save and create new helper methods for commands to call.", "committedDate": "2020-07-21T02:30:13Z", "type": "commit"}, {"oid": "1f506a0fbad5fe3376b16c7c9dd95a175b199694", "url": "https://github.com/IQSS/dataverse/commit/1f506a0fbad5fe3376b16c7c9dd95a175b199694", "message": "Extract index from save and create new helper methods for commands to call.", "committedDate": "2020-07-21T02:31:56Z", "type": "commit"}, {"oid": "c794c8db9d1794e7e05f4642e7b4fcc64dd23799", "url": "https://github.com/IQSS/dataverse/commit/c794c8db9d1794e7e05f4642e7b4fcc64dd23799", "message": "Extract index from save and create new helper methods for commands to call.", "committedDate": "2020-07-21T02:34:20Z", "type": "commit"}, {"oid": "3f0d65aacf770b9b4d91f077d790172e3dbbb1dd", "url": "https://github.com/IQSS/dataverse/commit/3f0d65aacf770b9b4d91f077d790172e3dbbb1dd", "message": "because indexing happens asynchronously, we'll wait first, and then retry a few times, before failing", "committedDate": "2020-07-21T02:36:49Z", "type": "commit"}, {"oid": "68ccc23bf2d2e97ab181518c0f26a3199d8519cd", "url": "https://github.com/IQSS/dataverse/commit/68ccc23bf2d2e97ab181518c0f26a3199d8519cd", "message": "Extract index from save and create new helper methods for commands to call.", "committedDate": "2020-07-21T02:37:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MDYwNw==", "url": "https://github.com/IQSS/dataverse/pull/7105#discussion_r458980607", "bodyText": "The index dataverse here does not index permissions. Should you be using index((Dataverse) r, true)?", "author": "sekmiller", "createdAt": "2020-07-22T17:59:34Z", "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/CreateDataverseCommand.java", "diffHunk": "@@ -168,17 +169,8 @@ public Dataverse execute(CommandContext ctxt) throws CommandException {\n     }\n     \n     @Override\n-    public boolean onSuccess(CommandContext ctxt, Object r) {\n-        try{\n-            ctxt.index().indexDataverse((Dataverse) r);\n-        } catch (IOException | SolrServerException e){           \n-            Dataverse dv = (Dataverse) r;            \n-            String failureLogText = \"Indexing failed. You can kickoff a re-index of this dataverse with: \\r\\n curl http://localhost:8080/api/admin/index/dataverses/\" + dv.getId().toString();\n-            failureLogText += \"\\r\\n\" + e.getLocalizedMessage();\n-            LoggingUtil.writeOnSuccessFailureLog(this, failureLogText,  dv);\n-            return false;\n-        }\n-        return true;\n+    public boolean onSuccess(CommandContext ctxt, Object r) {  \n+        return ctxt.dataverses().index((Dataverse) r);", "originalCommit": "68ccc23bf2d2e97ab181518c0f26a3199d8519cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3NjAzOQ==", "url": "https://github.com/IQSS/dataverse/pull/7105#discussion_r460976039", "bodyText": "Actually, the index without the boolean (of false) does index the call indePermissionForOneDVObject.\nindexPermissions or (index with true) adds a call to indexPermissionOnSelfAndChildren, but that shouldn't be needed in the case of creating a dataverse.", "author": "scolapasta", "createdAt": "2020-07-27T15:28:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MDYwNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxNDY5OQ==", "url": "https://github.com/IQSS/dataverse/pull/7105#discussion_r459014699", "bodyText": "reindexing datasets may not actually be needed here. (based on the instances where it is called ManageTemplates, Guestbook, etc.)", "author": "sekmiller", "createdAt": "2020-07-22T18:57:46Z", "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/UpdateDataverseCommand.java", "diffHunk": "@@ -90,20 +90,19 @@ public Dataverse execute(CommandContext ctxt) throws CommandException {\n         \n     @Override\n     public boolean onSuccess(CommandContext ctxt, Object r) {\n-        Dataverse result = (Dataverse) r;\n-\n-        List<Dataset> datasets = ctxt.datasets().findByOwnerId(result.getId());\n+        \n+        // first kick of async index of datasets\n+        // TODO: is this actually needed? Is there a better way to handle\n         try {\n-            Future<String> indResponse = ctxt.index().indexDataverse(result);\n+            Dataverse result = (Dataverse) r;\n+            List<Dataset> datasets = ctxt.datasets().findByOwnerId(result.getId());\n             ctxt.index().asyncIndexDatasetList(datasets, true);", "originalCommit": "68ccc23bf2d2e97ab181518c0f26a3199d8519cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3ODIzNg==", "url": "https://github.com/IQSS/dataverse/pull/7105#discussion_r460978236", "bodyText": "I think you're right, but I wanted to change as little as possible while surgically fixing the deadlocks. So left this code as it was, but added the TODO.", "author": "scolapasta", "createdAt": "2020-07-27T15:31:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxNDY5OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ1NTgyNg==", "url": "https://github.com/IQSS/dataverse/pull/7105#discussion_r459455826", "bodyText": "This will never be a dataset so we can simplify the code here", "author": "sekmiller", "createdAt": "2020-07-23T13:39:23Z", "path": "src/main/java/edu/harvard/iq/dataverse/engine/command/impl/UpdatePermissionRootCommand.java", "diffHunk": "@@ -37,6 +37,13 @@ public Dataverse execute( final CommandContext ctxt) throws CommandException {\n \t\t}\n \t}\n \n+    @Override\n+    public boolean onSuccess(CommandContext ctxt, Object r) {  \n+        return ctxt.dataverses().index((Dataverse) r,true);\n+    }        \n+\n+\n+    //TODO: Review this as this will never be an instance of Dataset, will it?", "originalCommit": "68ccc23bf2d2e97ab181518c0f26a3199d8519cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3ODQ1OA==", "url": "https://github.com/IQSS/dataverse/pull/7105#discussion_r460978458", "bodyText": "Similar to last, left as todo and out of scope.", "author": "scolapasta", "createdAt": "2020-07-27T15:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ1NTgyNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUxMjAzOQ==", "url": "https://github.com/IQSS/dataverse/pull/7105#discussion_r459512039", "bodyText": "Kind of a nit, but there are cases where this isn't being called by onSuccess so the failure message so maybe add to the general log in those cases.", "author": "sekmiller", "createdAt": "2020-07-23T14:54:55Z", "path": "src/main/java/edu/harvard/iq/dataverse/DataverseServiceBean.java", "diffHunk": "@@ -91,21 +92,33 @@ public Dataverse save(Dataverse dataverse) {\n        \n         dataverse.setModificationTime(new Timestamp(new Date().getTime()));\n         Dataverse savedDataverse = em.merge(dataverse);\n+        return savedDataverse;\n+    }\n+    \n+    public boolean index(Dataverse dataverse) {\n+        return index(dataverse, false);\n+\n+    }\n+        \n+    public boolean index(Dataverse dataverse, boolean indexPermissions) {    \n         /**\n          * @todo check the result to see if indexing was successful or not\n          * added logging of exceptions \n          */\n         try {\n-            Future<String> indexingResult = indexService.indexDataverse(savedDataverse);\n+            indexService.indexDataverse(dataverse);\n+            if (indexPermissions) {\n+                solrIndexService.indexPermissionsOnSelfAndChildren(dataverse);\n+            }\n         } catch (IOException | SolrServerException e) {\n-            String failureLogText = \"Post-save indexing failed. You can kickoff a re-index of this dataverse with: \\r\\n curl http://localhost:8080/api/admin/index/dataverses/\" + savedDataverse.getId().toString();\n+            String failureLogText = \"Post-save indexing failed. You can kickoff a re-index of this dataverse with: \\r\\n curl http://localhost:8080/api/admin/index/dataverses/\" + dataverse.getId().toString();\n             failureLogText += \"\\r\\n\" + e.getLocalizedMessage();\n-            LoggingUtil.writeOnSuccessFailureLog(null, failureLogText, savedDataverse);\n+            LoggingUtil.writeOnSuccessFailureLog(null, failureLogText, dataverse);", "originalCommit": "68ccc23bf2d2e97ab181518c0f26a3199d8519cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk5MDQ0MA==", "url": "https://github.com/IQSS/dataverse/pull/7105#discussion_r460990440", "bodyText": "This is a brand new method and all the calls I added are in onSuccess methods. Additionally as a tech design decision, we've said we want all such indexing to be onSuccess, no? So I think it's ok.\nNote, that currently not all indexing is actually on success (see MoveDataverse), but changing that was out of scope for this issue).", "author": "scolapasta", "createdAt": "2020-07-27T15:50:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUxMjAzOQ=="}], "type": "inlineReview", "revised_code": null}]}