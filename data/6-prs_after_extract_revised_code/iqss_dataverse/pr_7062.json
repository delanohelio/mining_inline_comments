{"pr_number": 7062, "pr_title": "4597 Fix invalid identify response.", "pr_createdAt": "2020-07-07T21:52:30Z", "pr_url": "https://github.com/IQSS/dataverse/pull/7062", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMzNzMwOA==", "url": "https://github.com/IQSS/dataverse/pull/7062#discussion_r452337308", "bodyText": "In #4597 @JingMa87 and I have been discussing making \"repositoryIdentifier\" (and possibly other identifiers configurable).", "author": "pdurbin", "createdAt": "2020-07-09T16:20:09Z", "path": "src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java", "diffHunk": "@@ -193,10 +193,48 @@ private RepositoryConfiguration createRepositoryConfiguration() {\n                 .withMaxListRecords(100)\n                 .withMaxListSets(100)\n                 .withEarliestDate(new Date());\n-        \n+        String descriptionXml = getDescriptionXml();\n+        if (descriptionXml != null) {\n+            repositoryConfiguration.withDescription(descriptionXml);\n+        }\n         return repositoryConfiguration; \n     }\n-    \n+\n+    private String getDescriptionXml() {\n+        try {\n+            // Builds the XML\n+            Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();\n+            Element oaiIdentifier = doc.createElement(\"oai-identifier\");\n+            oaiIdentifier.setAttribute(\"xmlns\", \"http://www.openarchives.org/OAI/2.0/oai-identifier\");\n+            oaiIdentifier.setAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n+            oaiIdentifier.setAttribute(\"xsi:schemaLocation\", \"http://www.openarchives.org/OAI/2.0/oai-identifier http://www.openarchives.org/OAI/2.0/oai-identifier.xsd\");\n+            doc.appendChild(oaiIdentifier);\n+            Element scheme = doc.createElement(\"scheme\");\n+            scheme.appendChild(doc.createTextNode(\"oai\"));\n+            oaiIdentifier.appendChild(scheme);\n+            Element repositoryIdentifier = doc.createElement(\"repositoryIdentifier\");\n+            repositoryIdentifier.appendChild(doc.createTextNode(\"dataverse.org\"));", "originalCommit": "f69f048bd1dae54199b27a3eb4cc32944a04a29c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "089415c9f499d8fe3feb067e05435962c74afd2b", "chunk": "diff --git a/src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java b/src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java\nindex 79360c656..c68cd98de 100644\n--- a/src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java\n+++ b/src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java\n\n@@ -193,48 +193,10 @@ public class OAIServlet extends HttpServlet {\n                 .withMaxListRecords(100)\n                 .withMaxListSets(100)\n                 .withEarliestDate(new Date());\n-        String descriptionXml = getDescriptionXml();\n-        if (descriptionXml != null) {\n-            repositoryConfiguration.withDescription(descriptionXml);\n-        }\n+        \n         return repositoryConfiguration; \n     }\n-\n-    private String getDescriptionXml() {\n-        try {\n-            // Builds the XML\n-            Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();\n-            Element oaiIdentifier = doc.createElement(\"oai-identifier\");\n-            oaiIdentifier.setAttribute(\"xmlns\", \"http://www.openarchives.org/OAI/2.0/oai-identifier\");\n-            oaiIdentifier.setAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n-            oaiIdentifier.setAttribute(\"xsi:schemaLocation\", \"http://www.openarchives.org/OAI/2.0/oai-identifier http://www.openarchives.org/OAI/2.0/oai-identifier.xsd\");\n-            doc.appendChild(oaiIdentifier);\n-            Element scheme = doc.createElement(\"scheme\");\n-            scheme.appendChild(doc.createTextNode(\"oai\"));\n-            oaiIdentifier.appendChild(scheme);\n-            Element repositoryIdentifier = doc.createElement(\"repositoryIdentifier\");\n-            repositoryIdentifier.appendChild(doc.createTextNode(\"dataverse.org\"));\n-            oaiIdentifier.appendChild(repositoryIdentifier);\n-            Element delimiter = doc.createElement(\"delimiter\");\n-            delimiter.appendChild(doc.createTextNode(\":\"));\n-            oaiIdentifier.appendChild(delimiter);\n-            Element sampleIdentifier = doc.createElement(\"sampleIdentifier\");\n-            sampleIdentifier.appendChild(doc.createTextNode(\"doi:10.7910/DVN/1HE30F\"));\n-            oaiIdentifier.appendChild(sampleIdentifier);\n-            // Transforms the XML to String\n-            Transformer transformer = TransformerFactory.newInstance().newTransformer();\n-            transformer.setOutputProperty(\"omit-xml-declaration\", \"yes\");\n-            transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n-            transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n-            StringWriter writer = new StringWriter();\n-            transformer.transform(new DOMSource(doc), new StreamResult(writer));\n-            return writer.getBuffer().toString();\n-        } catch (Exception e) {\n-            logger.warning(\"Couldn't build description XML; \" + e.getMessage());\n-            return null;\n-        }\n-    }\n-\n+    \n     /**\n      * Handles the HTTP <code>POST</code> method.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyNjkwOA==", "url": "https://github.com/IQSS/dataverse/pull/7062#discussion_r458226908", "bodyText": "In http://oval.base-search.net this DOI is giving an error:\nERROR: Identify response well-formed but invalid: Element '{http://www.openarchives.org/OAI/2.0/oai-identifier}sampleIdentifier': [facet 'pattern'] The value 'doi:10.7910/DVN/1HE30F' is not accepted by the pattern 'oai:[a-zA-Z][a-zA-Z0-9-](.[a-zA-Z][a-zA-Z0-9-])+:[a-zA-Z0-9-_.!~*'();/?:@&=+$,%]+'., line 5\nIn context:", "author": "pdurbin", "createdAt": "2020-07-21T16:23:50Z", "path": "src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java", "diffHunk": "@@ -180,6 +180,11 @@ private RepositoryConfiguration createRepositoryConfiguration() {\n         String dataverseName = dataverseService.findRootDataverse().getName();\n         String repositoryName = StringUtils.isEmpty(dataverseName) || \"Root\".equals(dataverseName) ? \"Test Dataverse OAI Archive\" : dataverseName + \" Dataverse OAI Archive\";\n         InternetAddress internetAddress = MailUtil.parseSystemAddress(settingsService.getValueForKey(SettingsServiceBean.Key.SystemEmail));\n+        String scheme = settingsService.getValueForKey(SettingsServiceBean.Key.Scheme, \"oai\");\n+        String repositoryIdentifier = settingsService.getValueForKey(SettingsServiceBean.Key.RepositoryIdentifier, \"dataverse.org\");\n+        String delimiter = settingsService.getValueForKey(SettingsServiceBean.Key.Delimiter, \":\");\n+        String sampleIdentifier = settingsService.getValueForKey(SettingsServiceBean.Key.SampleIdentifier, \"doi:10.7910/DVN/1HE30F\");", "originalCommit": "7ebdb42009076430312ab7068834f6a637c94675", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "089415c9f499d8fe3feb067e05435962c74afd2b", "chunk": "diff --git a/src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java b/src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java\nindex ed4d21159..c68cd98de 100644\n--- a/src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java\n+++ b/src/main/java/edu/harvard/iq/dataverse/harvest/server/web/servlet/OAIServlet.java\n\n@@ -180,11 +180,6 @@ public class OAIServlet extends HttpServlet {\n         String dataverseName = dataverseService.findRootDataverse().getName();\n         String repositoryName = StringUtils.isEmpty(dataverseName) || \"Root\".equals(dataverseName) ? \"Test Dataverse OAI Archive\" : dataverseName + \" Dataverse OAI Archive\";\n         InternetAddress internetAddress = MailUtil.parseSystemAddress(settingsService.getValueForKey(SettingsServiceBean.Key.SystemEmail));\n-        String scheme = settingsService.getValueForKey(SettingsServiceBean.Key.Scheme, \"oai\");\n-        String repositoryIdentifier = settingsService.getValueForKey(SettingsServiceBean.Key.RepositoryIdentifier, \"dataverse.org\");\n-        String delimiter = settingsService.getValueForKey(SettingsServiceBean.Key.Delimiter, \":\");\n-        String sampleIdentifier = settingsService.getValueForKey(SettingsServiceBean.Key.SampleIdentifier, \"doi:10.7910/DVN/1HE30F\");\n-        String descriptionXml = getDescriptionXml(scheme, repositoryIdentifier, delimiter, sampleIdentifier);\n \n         RepositoryConfiguration repositoryConfiguration = new RepositoryConfiguration()\n                 .withRepositoryName(repositoryName)\n"}}, {"oid": "089415c9f499d8fe3feb067e05435962c74afd2b", "url": "https://github.com/IQSS/dataverse/commit/089415c9f499d8fe3feb067e05435962c74afd2b", "message": "4597 Remove the default description from the Identify response.", "committedDate": "2020-07-31T10:25:45Z", "type": "commit"}]}