{"pr_number": 7124, "pr_title": "tsv ingest fix for directupload", "pr_createdAt": "2020-07-23T18:13:45Z", "pr_url": "https://github.com/IQSS/dataverse/pull/7124", "timeline": [{"oid": "8093dc11b316eef6cf592fb2ab8c768b41163be7", "url": "https://github.com/IQSS/dataverse/commit/8093dc11b316eef6cf592fb2ab8c768b41163be7", "message": "add tsv to recognized extensions for mimetype determination", "committedDate": "2020-07-23T18:00:26Z", "type": "commit"}, {"oid": "ba33cd1227d5128820e08fdd317254f144183747", "url": "https://github.com/IQSS/dataverse/commit/ba33cd1227d5128820e08fdd317254f144183747", "message": "enable direct upload/ingest of text/tsv\n\nwhen no mimetype is assigned by the browser", "committedDate": "2020-07-23T18:00:44Z", "type": "commit"}, {"oid": "4d930df0a5b5203a8a40ebccc3b16cc94daaedea", "url": "https://github.com/IQSS/dataverse/commit/4d930df0a5b5203a8a40ebccc3b16cc94daaedea", "message": "use mimetype determination by extension for direct upload", "committedDate": "2020-07-23T18:00:58Z", "type": "commit"}, {"oid": "8ae270b9a04924ac8fd0b1b2371b9e96e38800ff", "url": "https://github.com/IQSS/dataverse/commit/8ae270b9a04924ac8fd0b1b2371b9e96e38800ff", "message": "remove unnecessary changes", "committedDate": "2020-07-23T18:06:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA0NjcxNQ==", "url": "https://github.com/IQSS/dataverse/pull/7124#discussion_r467046715", "bodyText": "Do we care if the suppliedContentType is blank or null?", "author": "sekmiller", "createdAt": "2020-08-07T13:40:00Z", "path": "src/main/java/edu/harvard/iq/dataverse/util/FileUtil.java", "diffHunk": "@@ -1091,8 +1091,13 @@ public static String generateOriginalExtension(String fileType) {\n \n \t\t\t} \n \t\t} else {\n-\t\t\t//Remote file, trust supplier\n-\t\t\tfinalType = suppliedContentType;\n+\t\t\tif(suppliedContentType==FileUtil.MIME_TYPE_UNDETERMINED_DEFAULT) {\n+\t\t\t\tfinalType=determineFileTypeByExtension(fileName);\n+\t\t\t\tlogger.fine(\"Determined type: \" + finalType);\n+\t\t\t} else {\n+\t\t\t  //Remote file, trust supplier\n+\t\t\t  finalType = suppliedContentType;", "originalCommit": "8ae270b9a04924ac8fd0b1b2371b9e96e38800ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA2MTc3NA==", "url": "https://github.com/IQSS/dataverse/pull/7124#discussion_r467061774", "bodyText": "That should already be being caught (e.g. in the EditDatafilesPage.handleExternalUpload method) but worth a safety check here probably. And we shouldn't replace the default with a null/blank response if determineFileTypeByExtension returns null/blank.", "author": "qqmyers", "createdAt": "2020-08-07T14:04:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA0NjcxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNDg0Mw==", "url": "https://github.com/IQSS/dataverse/pull/7124#discussion_r467214843", "bodyText": "If you make that change, I'll put this into QA. Thanks!", "author": "sekmiller", "createdAt": "2020-08-07T18:55:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA0NjcxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "22572a59f05199f68b0b333a1ebe6c8ff08a7689", "chunk": "diff --git a/src/main/java/edu/harvard/iq/dataverse/util/FileUtil.java b/src/main/java/edu/harvard/iq/dataverse/util/FileUtil.java\nindex 80cc68feb..ec280ce28 100644\n--- a/src/main/java/edu/harvard/iq/dataverse/util/FileUtil.java\n+++ b/src/main/java/edu/harvard/iq/dataverse/util/FileUtil.java\n\n@@ -1091,12 +1093,14 @@ public class FileUtil implements java.io.Serializable  {\n \n \t\t\t} \n \t\t} else {\n+\t\t\t//Default to suppliedContentType if set or the overall undetermined default if a contenttype isn't supplied\n+            finalType = StringUtils.isBlank(suppliedContentType) ? FileUtil.MIME_TYPE_UNDETERMINED_DEFAULT : suppliedContentType;\n \t\t\tif(suppliedContentType==FileUtil.MIME_TYPE_UNDETERMINED_DEFAULT) {\n-\t\t\t\tfinalType=determineFileTypeByExtension(fileName);\n-\t\t\t\tlogger.fine(\"Determined type: \" + finalType);\n-\t\t\t} else {\n-\t\t\t  //Remote file, trust supplier\n-\t\t\t  finalType = suppliedContentType;\n+\t\t\t\tString type=determineFileTypeByExtension(fileName);\n+\t\t\t\tif(!StringUtils.isBlank(type)) {\n+\t\t\t\t\tfinalType=type;\n+\t\t\t\t\tlogger.fine(\"Determined type: \" + finalType);\n+\t\t\t\t} \n \t\t\t}\n \t\t}\n         // Finally, if none of the special cases above were applicable (or \n"}}, {"oid": "22572a59f05199f68b0b333a1ebe6c8ff08a7689", "url": "https://github.com/IQSS/dataverse/commit/22572a59f05199f68b0b333a1ebe6c8ff08a7689", "message": "avoid a null/blank finalType", "committedDate": "2020-08-07T14:03:03Z", "type": "commit"}, {"oid": "54a12b1496cf5750337ff8cd9bf0fe2f8636f774", "url": "https://github.com/IQSS/dataverse/commit/54a12b1496cf5750337ff8cd9bf0fe2f8636f774", "message": "Merge remote-tracking branch 'IQSS/develop' into IQSS/7122-tsv_ingest_with_directupload", "committedDate": "2020-08-10T18:34:17Z", "type": "commit"}, {"oid": "5715f0e780245c161bdbc52d4078c9b62f3ddd64", "url": "https://github.com/IQSS/dataverse/commit/5715f0e780245c161bdbc52d4078c9b62f3ddd64", "message": "still check if suppliedType was blank", "committedDate": "2020-08-12T20:46:48Z", "type": "commit"}, {"oid": "b3be92f4ae977d7883abf1a1b1fed151daa9d7f0", "url": "https://github.com/IQSS/dataverse/commit/b3be92f4ae977d7883abf1a1b1fed151daa9d7f0", "message": "Use same rules for replacing mimetypes in direct upload\n\nas in normal upload. This will replace generic types as in this issue as\nwell as replace text/tab-separated-value mimetypes so that tsv files get\ningested and will stop the browser supplied mimetypes for r, stata, etc.\nin the same way that normal upload does.", "committedDate": "2020-08-12T21:47:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2NjY0OA==", "url": "https://github.com/IQSS/dataverse/pull/7124#discussion_r469566648", "bodyText": "just moved and made to return a boolean, no logic changes.", "author": "qqmyers", "createdAt": "2020-08-12T21:49:39Z", "path": "src/main/java/edu/harvard/iq/dataverse/util/FileUtil.java", "diffHunk": "@@ -1126,7 +1106,42 @@ public static String generateOriginalExtension(String fileType) {\n     }   // end createDataFiles\n     \n \n-    private static File saveInputStreamInTempFile(InputStream inputStream, Long fileSizeLimit)\n+\tprivate static boolean useRecognizedType(String suppliedContentType, String recognizedType) {", "originalCommit": "b3be92f4ae977d7883abf1a1b1fed151daa9d7f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}