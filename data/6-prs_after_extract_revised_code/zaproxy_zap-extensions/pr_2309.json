{"pr_number": 2309, "pr_title": "Fix 5725: Spider Check for JSON/YAML'ish content", "pr_createdAt": "2020-02-17T14:08:23Z", "pr_url": "https://github.com/zaproxy/zap-extensions/pull/2309", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIxOTg3MQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380219871", "bodyText": "How about adding the toLowerCase() here and then it wont be needed later?", "author": "psiinon", "createdAt": "2020-02-17T14:42:17Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "diffHunk": "@@ -65,10 +65,15 @@ public boolean parseResource(HttpMessage message, Source source, int depth) {\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n             String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);", "originalCommit": "0f7faf7020c4077976a5211368eaca34360fb8a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e4fddb9aa78965331167dde3df2e83609c3ed26", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\nindex 64f1bd0f5..61c6c37a7 100644\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\n+++ b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\n\n@@ -64,16 +64,15 @@ public class OpenApiSpider extends SpiderParser {\n     @Override\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n-            String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);\n-            if (contentType.toLowerCase().startsWith(\"application/vnd.oai.openapi\")) {\n+            String contentType =\n+                    message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();\n+            String responseBodyStart =\n+                    message.getResponseBody().toString().substring(0, 8).toLowerCase();\n+            if (contentType.startsWith(\"application/vnd.oai.openapi\")) {\n                 return true;\n-            } else if ((contentType.toLowerCase().contains(\"json\")\n-                            || contentType.toLowerCase().contains(\"yaml\"))\n-                    && (message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")\n-                            || message.getResponseBody()\n-                                    .toString()\n-                                    .toLowerCase()\n-                                    .startsWith(\"openapi:\"))) {\n+            } else if ((contentType.contains(\"json\") || contentType.contains(\"yaml\"))\n+                    && (responseBodyStart.equals(\"swagger:\")\n+                            || responseBodyStart.equals(\"openapi:\"))) {\n                 return true;\n             }\n         } catch (Exception e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyMjc5MA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380222790", "bodyText": "Calling message.getResponseBody().toString().toLowerCase() twice seems very inefficient. Maybe do it just once, and could extract the first 8 chrs rather than doing toLowerCase() on a potentially very large response?", "author": "psiinon", "createdAt": "2020-02-17T14:47:41Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "diffHunk": "@@ -65,10 +65,15 @@ public boolean parseResource(HttpMessage message, Source source, int depth) {\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n             String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);\n-            if (contentType.toLowerCase().startsWith(\"text\")\n-                    && message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")) {\n+            if (contentType.toLowerCase().startsWith(\"application/vnd.oai.openapi\")) {\n                 return true;\n-            } else if (contentType.toLowerCase().startsWith(\"application\")) {\n+            } else if ((contentType.toLowerCase().contains(\"json\")\n+                            || contentType.toLowerCase().contains(\"yaml\"))\n+                    && (message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")", "originalCommit": "0f7faf7020c4077976a5211368eaca34360fb8a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e4fddb9aa78965331167dde3df2e83609c3ed26", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\nindex 64f1bd0f5..61c6c37a7 100644\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\n+++ b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\n\n@@ -64,16 +64,15 @@ public class OpenApiSpider extends SpiderParser {\n     @Override\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n-            String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);\n-            if (contentType.toLowerCase().startsWith(\"application/vnd.oai.openapi\")) {\n+            String contentType =\n+                    message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();\n+            String responseBodyStart =\n+                    message.getResponseBody().toString().substring(0, 8).toLowerCase();\n+            if (contentType.startsWith(\"application/vnd.oai.openapi\")) {\n                 return true;\n-            } else if ((contentType.toLowerCase().contains(\"json\")\n-                            || contentType.toLowerCase().contains(\"yaml\"))\n-                    && (message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")\n-                            || message.getResponseBody()\n-                                    .toString()\n-                                    .toLowerCase()\n-                                    .startsWith(\"openapi:\"))) {\n+            } else if ((contentType.contains(\"json\") || contentType.contains(\"yaml\"))\n+                    && (responseBodyStart.equals(\"swagger:\")\n+                            || responseBodyStart.equals(\"openapi:\"))) {\n                 return true;\n             }\n         } catch (Exception e) {\n"}}, {"oid": "2e4fddb9aa78965331167dde3df2e83609c3ed26", "url": "https://github.com/zaproxy/zap-extensions/commit/2e4fddb9aa78965331167dde3df2e83609c3ed26", "message": "Fix #5725: Spider Check for JSON/YAML'ish content\n\nContent type check in canParseResource(Httpmessage, String,\nboolean) is made more specific.\n\nSigned-off-by: Akshath Kothari <akshath.kothari@gmail.com>", "committedDate": "2020-02-17T17:00:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzOTYwMw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380639603", "bodyText": "String.substring will throw an exception if the body length is less than 8, so should check for that first.", "author": "psiinon", "createdAt": "2020-02-18T12:25:03Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "diffHunk": "@@ -64,11 +64,15 @@ public boolean parseResource(HttpMessage message, Source source, int depth) {\n     @Override\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n-            String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);\n-            if (contentType.toLowerCase().startsWith(\"text\")\n-                    && message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")) {\n+            String contentType =\n+                    message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();\n+            String responseBodyStart =\n+                    message.getResponseBody().toString().substring(0, 8).toLowerCase();", "originalCommit": "2e4fddb9aa78965331167dde3df2e83609c3ed26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0NTAzMA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380645030", "bodyText": "Of course! How silly of me to miss that.", "author": "ricekot", "createdAt": "2020-02-18T12:37:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzOTYwMw=="}], "type": "inlineReview", "revised_code": {"commit": "63854a7be96b0c355dac0165c9fad8836bffe806", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\nindex 61c6c37a7..8efe86736 100644\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\n+++ b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\n\n@@ -67,7 +68,7 @@ public class OpenApiSpider extends SpiderParser {\n             String contentType =\n                     message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();\n             String responseBodyStart =\n-                    message.getResponseBody().toString().substring(0, 8).toLowerCase();\n+                    StringUtils.left(message.getResponseBody().toString(), 8).toLowerCase();\n             if (contentType.startsWith(\"application/vnd.oai.openapi\")) {\n                 return true;\n             } else if ((contentType.contains(\"json\") || contentType.contains(\"yaml\"))\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MTkyNg==", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380651926", "bodyText": "Should lower case with Locale.ROOT, to not rely on the default locale.", "author": "thc202", "createdAt": "2020-02-18T12:51:51Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "diffHunk": "@@ -64,11 +64,15 @@ public boolean parseResource(HttpMessage message, Source source, int depth) {\n     @Override\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n-            String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);\n-            if (contentType.toLowerCase().startsWith(\"text\")\n-                    && message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")) {\n+            String contentType =\n+                    message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();", "originalCommit": "2e4fddb9aa78965331167dde3df2e83609c3ed26", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "63854a7be96b0c355dac0165c9fad8836bffe806", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\nindex 61c6c37a7..8efe86736 100644\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\n+++ b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\n\n@@ -67,7 +68,7 @@ public class OpenApiSpider extends SpiderParser {\n             String contentType =\n                     message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();\n             String responseBodyStart =\n-                    message.getResponseBody().toString().substring(0, 8).toLowerCase();\n+                    StringUtils.left(message.getResponseBody().toString(), 8).toLowerCase();\n             if (contentType.startsWith(\"application/vnd.oai.openapi\")) {\n                 return true;\n             } else if ((contentType.contains(\"json\") || contentType.contains(\"yaml\"))\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MjAyNg==", "url": "https://github.com/zaproxy/zap-extensions/pull/2309#discussion_r380652026", "bodyText": "These checks might not work properly (e.g. if the OpenAPI has comments or when JSON which starts with {), some examples in https://github.com/OAI/OpenAPI-Specification/tree/master/examples", "author": "thc202", "createdAt": "2020-02-18T12:52:05Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java", "diffHunk": "@@ -64,11 +64,15 @@ public boolean parseResource(HttpMessage message, Source source, int depth) {\n     @Override\n     public boolean canParseResource(HttpMessage message, String path, boolean wasAlreadyConsumed) {\n         try {\n-            String contentType = message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE);\n-            if (contentType.toLowerCase().startsWith(\"text\")\n-                    && message.getResponseBody().toString().toLowerCase().startsWith(\"swagger:\")) {\n+            String contentType =\n+                    message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();\n+            String responseBodyStart =\n+                    message.getResponseBody().toString().substring(0, 8).toLowerCase();\n+            if (contentType.startsWith(\"application/vnd.oai.openapi\")) {\n                 return true;\n-            } else if (contentType.toLowerCase().startsWith(\"application\")) {\n+            } else if ((contentType.contains(\"json\") || contentType.contains(\"yaml\"))\n+                    && (responseBodyStart.equals(\"swagger:\")", "originalCommit": "2e4fddb9aa78965331167dde3df2e83609c3ed26", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "63854a7be96b0c355dac0165c9fad8836bffe806", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\nindex 61c6c37a7..8efe86736 100644\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\n+++ b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/OpenApiSpider.java\n\n@@ -67,7 +68,7 @@ public class OpenApiSpider extends SpiderParser {\n             String contentType =\n                     message.getResponseHeader().getHeader(HttpHeader.CONTENT_TYPE).toLowerCase();\n             String responseBodyStart =\n-                    message.getResponseBody().toString().substring(0, 8).toLowerCase();\n+                    StringUtils.left(message.getResponseBody().toString(), 8).toLowerCase();\n             if (contentType.startsWith(\"application/vnd.oai.openapi\")) {\n                 return true;\n             } else if ((contentType.contains(\"json\") || contentType.contains(\"yaml\"))\n"}}, {"oid": "63854a7be96b0c355dac0165c9fad8836bffe806", "url": "https://github.com/zaproxy/zap-extensions/commit/63854a7be96b0c355dac0165c9fad8836bffe806", "message": "Fix #5725: Spider Check for JSON/YAML'ish content\n\nContent type check in canParseResource(Httpmessage, String,\nboolean) is made more specific.\n\nSigned-off-by: Akshath Kothari <akshath.kothari@gmail.com>", "committedDate": "2020-02-18T13:02:53Z", "type": "forcePushed"}, {"oid": "1021009af4c1d2525f60316342ea558e3d28773e", "url": "https://github.com/zaproxy/zap-extensions/commit/1021009af4c1d2525f60316342ea558e3d28773e", "message": "Fix 5725: Spider Check for JSON/YAML'ish content\n\n- Content type check in canParseResource(Httpmessage, String,\nboolean) is made more specific.\n- Updated Changelog\n\nSigned-off-by: Akshath Kothari <akshath.kothari@gmail.com>", "committedDate": "2020-02-18T16:55:26Z", "type": "commit"}, {"oid": "1021009af4c1d2525f60316342ea558e3d28773e", "url": "https://github.com/zaproxy/zap-extensions/commit/1021009af4c1d2525f60316342ea558e3d28773e", "message": "Fix 5725: Spider Check for JSON/YAML'ish content\n\n- Content type check in canParseResource(Httpmessage, String,\nboolean) is made more specific.\n- Updated Changelog\n\nSigned-off-by: Akshath Kothari <akshath.kothari@gmail.com>", "committedDate": "2020-02-18T16:55:26Z", "type": "forcePushed"}]}