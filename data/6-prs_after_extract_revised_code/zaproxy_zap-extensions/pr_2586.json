{"pr_number": 2586, "pr_title": "pscanrules: CSP Scan Rule handle potential IllegalArgumentException", "pr_createdAt": "2020-10-26T18:22:51Z", "pr_url": "https://github.com/zaproxy/zap-extensions/pull/2586", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwNDI1NQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2586#discussion_r512604255", "bodyText": "Remove.", "author": "thc202", "createdAt": "2020-10-27T11:12:41Z", "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java", "diffHunk": "@@ -145,13 +148,16 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n             Origin origin = URI.parse(msg.getRequestHeader().getURI().toString());\n             Policy unifiedPolicy = new Policy(origin);\n             boolean multipleCsp = cspOptions.size() > 1;\n-            if (multipleCsp) {\n+            boolean hasReportUri = hasReportUri(cspOptions);\n+            if (multipleCsp && !hasReportUri) {\n                 for (String csp : cspOptions) {\n                     Policy policy = ParserWithLocation.parse(csp, origin);\n                     unifiedPolicy.intersect(policy);\n                 }\n             }\n-            String unifiedPolicyText = multipleCsp ? unifiedPolicy.show() : cspOptions.get(0);\n+            String unifiedPolicyText =\n+                    multipleCsp && !hasReportUri ? unifiedPolicy.show() : cspOptions.get(0);\n+            System.out.println(unifiedPolicyText);", "originalCommit": "d33465ea5cc95d2f3891fc2e639774d3839788f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dbc9de6eb4a4c7a56dcebdec04f83b37bfeb033e", "chunk": "diff --git a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\nindex 2915c4d98..137fbddf8 100644\n--- a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\n+++ b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\n\n@@ -157,7 +157,6 @@ public class ContentSecurityPolicyScanRule extends PluginPassiveScanner {\n             }\n             String unifiedPolicyText =\n                     multipleCsp && !hasReportUri ? unifiedPolicy.show() : cspOptions.get(0);\n-            System.out.println(unifiedPolicyText);\n             Policy pol =\n                     ParserWithLocation.parse(\n                             unifiedPolicyText, origin, notices); // Populate notices\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwNTEwNg==", "url": "https://github.com/zaproxy/zap-extensions/pull/2586#discussion_r512605106", "bodyText": "static", "author": "thc202", "createdAt": "2020-10-27T11:14:16Z", "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java", "diffHunk": "@@ -245,6 +255,16 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n         }\n     }\n \n+    private boolean hasReportUri(List<String> cspOptions) {", "originalCommit": "d33465ea5cc95d2f3891fc2e639774d3839788f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dbc9de6eb4a4c7a56dcebdec04f83b37bfeb033e", "chunk": "diff --git a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\nindex 2915c4d98..137fbddf8 100644\n--- a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\n+++ b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\n\n@@ -255,10 +254,10 @@ public class ContentSecurityPolicyScanRule extends PluginPassiveScanner {\n         }\n     }\n \n-    private boolean hasReportUri(List<String> cspOptions) {\n+    private static boolean hasReportUri(List<String> cspOptions) {\n         for (String csp : cspOptions) {\n             String lowerCsp = csp.toLowerCase(Locale.ROOT);\n-            if (lowerCsp.contains(\"report-uri\") || lowerCsp.contains(\"report-to\")) {\n+            if (lowerCsp.contains(\"report-uri\")) {\n                 return true;\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwNTEzMw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2586#discussion_r512605133", "bodyText": "Should check just report-uri? The report-to does not seem to cause an exception(?).", "author": "thc202", "createdAt": "2020-10-27T11:14:20Z", "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java", "diffHunk": "@@ -245,6 +255,16 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n         }\n     }\n \n+    private boolean hasReportUri(List<String> cspOptions) {\n+        for (String csp : cspOptions) {\n+            String lowerCsp = csp.toLowerCase(Locale.ROOT);\n+            if (lowerCsp.contains(\"report-uri\") || lowerCsp.contains(\"report-to\")) {", "originalCommit": "d33465ea5cc95d2f3891fc2e639774d3839788f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dbc9de6eb4a4c7a56dcebdec04f83b37bfeb033e", "chunk": "diff --git a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\nindex 2915c4d98..137fbddf8 100644\n--- a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\n+++ b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\n\n@@ -255,10 +254,10 @@ public class ContentSecurityPolicyScanRule extends PluginPassiveScanner {\n         }\n     }\n \n-    private boolean hasReportUri(List<String> cspOptions) {\n+    private static boolean hasReportUri(List<String> cspOptions) {\n         for (String csp : cspOptions) {\n             String lowerCsp = csp.toLowerCase(Locale.ROOT);\n-            if (lowerCsp.contains(\"report-uri\") || lowerCsp.contains(\"report-to\")) {\n+            if (lowerCsp.contains(\"report-uri\")) {\n                 return true;\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwNTIyNQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2586#discussion_r512605225", "bodyText": "This could be done as an else if of the following, it's clearer that the hasReportUri takes precedence that way.", "author": "thc202", "createdAt": "2020-10-27T11:14:30Z", "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java", "diffHunk": "@@ -383,12 +403,16 @@ private void raiseAlert(\n             int risk,\n             String evidence,\n             boolean multipleCsp,\n+            boolean hasReportUri,\n             String policy) {\n         String alertName = StringUtils.isEmpty(name) ? getName() : getName() + \": \" + name;\n-        String otherInfo =\n-                multipleCsp\n-                        ? Constant.messages.getString(MESSAGE_PREFIX + \"otherinfo\", policy)\n-                        : \"\";\n+        String otherInfo = \"\";\n+        if (multipleCsp) {\n+            otherInfo = Constant.messages.getString(MESSAGE_PREFIX + \"otherinfo\", policy);\n+        }", "originalCommit": "d33465ea5cc95d2f3891fc2e639774d3839788f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dbc9de6eb4a4c7a56dcebdec04f83b37bfeb033e", "chunk": "diff --git a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\nindex 2915c4d98..137fbddf8 100644\n--- a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\n+++ b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/ContentSecurityPolicyScanRule.java\n\n@@ -407,11 +406,10 @@ public class ContentSecurityPolicyScanRule extends PluginPassiveScanner {\n             String policy) {\n         String alertName = StringUtils.isEmpty(name) ? getName() : getName() + \": \" + name;\n         String otherInfo = \"\";\n-        if (multipleCsp) {\n-            otherInfo = Constant.messages.getString(MESSAGE_PREFIX + \"otherinfo\", policy);\n-        }\n         if (hasReportUri) {\n             otherInfo = Constant.messages.getString(MESSAGE_PREFIX + \"otherinfo.nomerge\");\n+        } else if (multipleCsp) {\n+            otherInfo = Constant.messages.getString(MESSAGE_PREFIX + \"otherinfo\", policy);\n         }\n \n         newAlert()\n"}}, {"oid": "dbc9de6eb4a4c7a56dcebdec04f83b37bfeb033e", "url": "https://github.com/zaproxy/zap-extensions/commit/dbc9de6eb4a4c7a56dcebdec04f83b37bfeb033e", "message": "pscanrules: CSP Scan Rule handle potential IllegalArgumentException\n\n- Handle an IllegalArgumentException that could occur in the CSP scan\nrule if multiple CSP headers were present and one (or more) had a\nreport-uri or report-to directive when trying to merge them.\n- Add unit tests and add change note to CHANGELOG.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-10-27T12:23:39Z", "type": "forcePushed"}, {"oid": "8c6bd234f9a786c208de12c3c0c60034045f6122", "url": "https://github.com/zaproxy/zap-extensions/commit/8c6bd234f9a786c208de12c3c0c60034045f6122", "message": "pscanrules: CSP Scan Rule handle potential IllegalArgumentException\n\n- Handle an IllegalArgumentException that could occur in the CSP scan\nrule if multiple CSP headers were present and one (or more) had a\nreport-uri or report-to directive when trying to merge them.\n- Add unit tests and add change note to CHANGELOG.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-10-27T12:25:58Z", "type": "forcePushed"}, {"oid": "b8112050cb209737c1ae36a3307d965967e22e7d", "url": "https://github.com/zaproxy/zap-extensions/commit/b8112050cb209737c1ae36a3307d965967e22e7d", "message": "pscanrules: CSP Scan Rule handle potential IllegalArgumentException\n\n- Handle an IllegalArgumentException that could occur in the CSP scan\nrule if multiple CSP headers were present and one (or more) had a\nreport-uri or report-to directive when trying to merge them.\n- Add unit tests and add change note to CHANGELOG.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-10-27T16:54:11Z", "type": "forcePushed"}, {"oid": "b88edacb9050b1cc72bdbeb7a50f351592975733", "url": "https://github.com/zaproxy/zap-extensions/commit/b88edacb9050b1cc72bdbeb7a50f351592975733", "message": "pscanrules: CSP Scan Rule handle potential IllegalArgumentException\n\n- Handle an IllegalArgumentException that could occur in the CSP scan\nrule if multiple CSP headers were present and one (or more) had a\nreport-uri directive when trying to merge them.\n- Add unit tests and add change note to CHANGELOG.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-10-27T17:01:56Z", "type": "commit"}, {"oid": "b88edacb9050b1cc72bdbeb7a50f351592975733", "url": "https://github.com/zaproxy/zap-extensions/commit/b88edacb9050b1cc72bdbeb7a50f351592975733", "message": "pscanrules: CSP Scan Rule handle potential IllegalArgumentException\n\n- Handle an IllegalArgumentException that could occur in the CSP scan\nrule if multiple CSP headers were present and one (or more) had a\nreport-uri directive when trying to merge them.\n- Add unit tests and add change note to CHANGELOG.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-10-27T17:01:56Z", "type": "forcePushed"}]}