{"pr_number": 2306, "pr_title": "OpenAPI - Not creating Map structure properly #5863", "pr_createdAt": "2020-02-13T13:51:55Z", "pr_url": "https://github.com/zaproxy/zap-extensions/pull/2306", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTEzOA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841138", "bodyText": "I'd suggest test them in alphabetic order, easier to read.", "author": "thc202", "createdAt": "2020-02-15T16:27:43Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -49,14 +52,17 @@ public DataGenerator(Generators generators) {\n                             put(\"number\", \"1.2\");\n                             put(\"string\", \"\\\"John Doe\\\"\");\n                             put(\"boolean\", \"true\");\n-                            put(\"array\", \"\");\n-                            put(\"file\", \"\\u0800\");\n-                            put(\"ref\", \"ref\");\n                         }\n                     });\n \n-    public boolean isSupported(String type) {\n-        return TYPES.get(type) != null;\n+    public boolean isSupported(Schema<?> schema) {\n+        return schema instanceof IntegerSchema", "originalCommit": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ff7367feab6d9ffa55c5f1e4758afe78a2c8b8c0", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java\nindex 1796bf8ca..9dbefc59e 100644\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java\n+++ b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java\n\n@@ -56,13 +56,13 @@ public class DataGenerator {\n                     });\n \n     public boolean isSupported(Schema<?> schema) {\n-        return schema instanceof IntegerSchema\n-                || schema instanceof NumberSchema\n-                || schema instanceof StringSchema\n+        return schema instanceof ArraySchema\n                 || schema instanceof BooleanSchema\n-                || schema instanceof ArraySchema\n                 || schema instanceof FileSchema\n-                || schema instanceof MapSchema;\n+                || schema instanceof IntegerSchema\n+                || schema instanceof MapSchema\n+                || schema instanceof NumberSchema\n+                || schema instanceof StringSchema;\n     }\n \n     public String generate(String name, Parameter parameter) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTE0NQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841145", "bodyText": "The else is unnecessary, the above returns (same for the following else).", "author": "thc202", "createdAt": "2020-02-15T16:27:48Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -117,12 +123,15 @@ private String generateArrayValue(String name, Parameter parameter) {\n     }\n \n     public String generateBodyValue(String name, Schema<?> property) {\n-        if (isArray(property.getType())) {\n+        if (isArray(property)) {\n             return generators\n                     .getArrayGenerator()\n                     .generate(name, (ArraySchema) property, \"csv\", false);\n+        } else if (isMap(property)) {", "originalCommit": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1NTMyNQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379855325", "bodyText": "Hi @thc202 , I didn't understand what you are pointing there as I'm seeing three different flows. Could you clarify, please?", "author": "josehenriqueventura", "createdAt": "2020-02-15T20:50:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTE0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1ODA5Mw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379858093", "bodyText": "This is a matter of style, I'm suggesting the following:\nif (isArray(property)) {\n    return generators\n            .getArrayGenerator()\n            .generate(name, (ArraySchema) property, \"csv\", false);\n}\nif (isMap(property)) {\n    return generators.getMapGenerator().generate(TYPES, property);\n}\nreturn generateValue(name, property, false);\nsince the ifs return the elses are unnecessary.", "author": "thc202", "createdAt": "2020-02-15T21:45:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTE0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyMjE2Nw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379922167", "bodyText": "ok", "author": "josehenriqueventura", "createdAt": "2020-02-16T18:12:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTE0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "15792e54e5749a27a193eaa9d1b0574b699d666b", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java\nindex 1796bf8ca..fc675d506 100644\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java\n+++ b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java\n\n@@ -127,11 +127,11 @@ public class DataGenerator {\n             return generators\n                     .getArrayGenerator()\n                     .generate(name, (ArraySchema) property, \"csv\", false);\n-        } else if (isMap(property)) {\n+        }\n+        if (isMap(property)) {\n             return generators.getMapGenerator().generate(TYPES, property);\n-        } else {\n-            return generateValue(name, property, false);\n         }\n+        return generateValue(name, property, false);\n     }\n \n     public String generateValue(String name, Schema<?> schema, boolean isPath) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIxNw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841217", "bodyText": "static (same for isMap).", "author": "thc202", "createdAt": "2020-02-15T16:29:09Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java", "diffHunk": "@@ -202,11 +211,23 @@ public boolean isArray(String type) {\n         return \"array\".equals(type);\n     }\n \n+    public boolean isArray(Schema<?> schema) {", "originalCommit": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1NTIyNA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379855224", "bodyText": "Hi @thc202 , Why those methods need to be static? Could you clarify, please?", "author": "josehenriqueventura", "createdAt": "2020-02-15T20:48:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1ODEwNQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379858105", "bodyText": "Intention/clarity (they should be private also), those methods don't access/need the state of the instance, they are just utility/helper methods.", "author": "thc202", "createdAt": "2020-02-15T21:45:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyMTk5NA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379921994", "bodyText": "Agree on to change from public to private because it makes sense but as static and I don't see the reason. The is isArray is used on ArrayGeneratorc class and If we want to treat them as utility/helper methods, I believe they should be moved a new class. What do you think? Just feels weird to have some methods private and static and others as public.", "author": "josehenriqueventura", "createdAt": "2020-02-16T18:10:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3ODQ0NQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r386478445", "bodyText": "Well, they are already being used as utility/helper methods, being static represents better what they do (i.e. don't access the instance's state).\nI don't see a problem with some being private and others public, if they aren't needed by other classes then private is better than public but I'm ok if they are moved to other class.", "author": "thc202", "createdAt": "2020-03-02T15:53:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIxNw=="}], "type": "inlineReview", "revised_code": {"commit": "ff7367feab6d9ffa55c5f1e4758afe78a2c8b8c0", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java\nindex 1796bf8ca..9dbefc59e 100644\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java\n+++ b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/DataGenerator.java\n\n@@ -211,7 +211,7 @@ public class DataGenerator {\n         return \"array\".equals(type);\n     }\n \n-    public boolean isArray(Schema<?> schema) {\n+    private static boolean isArray(Schema<?> schema) {\n         return schema instanceof ArraySchema;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTIyNQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841225", "bodyText": "The are could be removed.\nits \u2192 their.", "author": "thc202", "createdAt": "2020-02-15T16:29:20Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/MapGenerator.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.generators;\n+\n+import static org.zaproxy.zap.extension.openapi.utils.Element.Json.INNER_SEPARATOR;\n+import static org.zaproxy.zap.extension.openapi.utils.Element.Json.OBJECT_BEGIN;\n+import static org.zaproxy.zap.extension.openapi.utils.Element.Json.OBJECT_END;\n+import static org.zaproxy.zap.extension.openapi.utils.Element.OpenApi.STRING;\n+\n+import io.swagger.v3.oas.models.media.BooleanSchema;\n+import io.swagger.v3.oas.models.media.IntegerSchema;\n+import io.swagger.v3.oas.models.media.NumberSchema;\n+import io.swagger.v3.oas.models.media.ObjectSchema;\n+import io.swagger.v3.oas.models.media.Schema;\n+import io.swagger.v3.oas.models.media.StringSchema;\n+import java.util.Map;\n+\n+public class MapGenerator {\n+\n+    private BodyGenerator bodyGenerator;\n+\n+    public MapGenerator(DataGenerator dataGenerator) {\n+        this.bodyGenerator = dataGenerator.getGenerators().getBodyGenerator();\n+    }\n+\n+    /**\n+     * @param types are the data types supported with its corresponding default values", "originalCommit": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ff7367feab6d9ffa55c5f1e4758afe78a2c8b8c0", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/MapGenerator.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/MapGenerator.java\nindex 966356d28..74d0de1d2 100644\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/MapGenerator.java\n+++ b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/MapGenerator.java\n\n@@ -19,10 +19,10 @@\n  */\n package org.zaproxy.zap.extension.openapi.generators;\n \n-import static org.zaproxy.zap.extension.openapi.utils.Element.Json.INNER_SEPARATOR;\n-import static org.zaproxy.zap.extension.openapi.utils.Element.Json.OBJECT_BEGIN;\n-import static org.zaproxy.zap.extension.openapi.utils.Element.Json.OBJECT_END;\n-import static org.zaproxy.zap.extension.openapi.utils.Element.OpenApi.STRING;\n+import static org.zaproxy.zap.extension.openapi.generators.Element.Json.INNER_SEPARATOR;\n+import static org.zaproxy.zap.extension.openapi.generators.Element.Json.OBJECT_BEGIN;\n+import static org.zaproxy.zap.extension.openapi.generators.Element.Json.OBJECT_END;\n+import static org.zaproxy.zap.extension.openapi.generators.Element.OpenApiType.STRING;\n \n import io.swagger.v3.oas.models.media.BooleanSchema;\n import io.swagger.v3.oas.models.media.IntegerSchema;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI0Nw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841247", "bodyText": "This belongs to the generators(?).", "author": "thc202", "createdAt": "2020-02-15T16:29:48Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;", "originalCommit": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyMjE0Nw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379922147", "bodyText": "Yep, they do belong thinking twice. So, move Element.java to openapi/generators ?", "author": "josehenriqueventura", "createdAt": "2020-02-16T18:12:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3ODYyOA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r386478628", "bodyText": "Sounds good.", "author": "thc202", "createdAt": "2020-03-02T15:53:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "ff7367feab6d9ffa55c5f1e4758afe78a2c8b8c0", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java\ndeleted file mode 100644\nindex 3139b0208..000000000\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java\n+++ /dev/null\n\n@@ -1,53 +0,0 @@\n-/*\n- * Zed Attack Proxy (ZAP) and its related class files.\n- *\n- * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n- *\n- * Copyright 2020 The ZAP Development Team\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.zaproxy.zap.extension.openapi.utils;\n-\n-public final class Element {\n-\n-    private Element() {}\n-\n-    public static class Json {\n-\n-        private Json() {}\n-\n-        public static final String OBJECT_BEGIN = \"{\";\n-        public static final String OBJECT_END = \"}\";\n-        public static final String ARRAY_BEGIN = \"[\";\n-        public static final String ARRAY_END = \"]\";\n-        public static final String PROPERTY_CONTAINER = \"\\\"\";\n-        public static final String INNER_SEPARATOR = \":\";\n-        public static final String OUTER_SEPARATOR = \",\";\n-    }\n-\n-    public static class OpenApi {\n-\n-        private OpenApi() {}\n-\n-        public static final String STRING = \"string\";\n-    }\n-\n-    public static class Form {\n-\n-        private Form() {}\n-\n-        public static final String INNER_SEPARATOR = \"=\";\n-        public static final String OUTER_SEPARATOR = \"&\";\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI1MQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841251", "bodyText": "Should be an Enum (same for following classes).", "author": "thc202", "createdAt": "2020-02-15T16:29:53Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;\n+\n+public final class Element {\n+\n+    private Element() {}\n+\n+    public static class Json {", "originalCommit": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5MTM1MQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r386591351", "bodyText": "Inner enums are not looking great as I will need a dummy value like this:\npublic enum Element {\n\n    ELEMENT;\n\n    public enum Form {\n        INNER_SEPARATOR(\":\"),\n        OUTER_SEPARATOR(\",\");\n\n        private String syntax;\nWhat do you think?", "author": "josehenriqueventura", "createdAt": "2020-03-02T19:09:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMTQ1NA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r386601454", "bodyText": "The Element can be kept as class.", "author": "thc202", "createdAt": "2020-03-02T19:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "ff7367feab6d9ffa55c5f1e4758afe78a2c8b8c0", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java\ndeleted file mode 100644\nindex 3139b0208..000000000\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java\n+++ /dev/null\n\n@@ -1,53 +0,0 @@\n-/*\n- * Zed Attack Proxy (ZAP) and its related class files.\n- *\n- * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n- *\n- * Copyright 2020 The ZAP Development Team\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.zaproxy.zap.extension.openapi.utils;\n-\n-public final class Element {\n-\n-    private Element() {}\n-\n-    public static class Json {\n-\n-        private Json() {}\n-\n-        public static final String OBJECT_BEGIN = \"{\";\n-        public static final String OBJECT_END = \"}\";\n-        public static final String ARRAY_BEGIN = \"[\";\n-        public static final String ARRAY_END = \"]\";\n-        public static final String PROPERTY_CONTAINER = \"\\\"\";\n-        public static final String INNER_SEPARATOR = \":\";\n-        public static final String OUTER_SEPARATOR = \",\";\n-    }\n-\n-    public static class OpenApi {\n-\n-        private OpenApi() {}\n-\n-        public static final String STRING = \"string\";\n-    }\n-\n-    public static class Form {\n-\n-        private Form() {}\n-\n-        public static final String INNER_SEPARATOR = \"=\";\n-        public static final String OUTER_SEPARATOR = \"&\";\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg0MTI1Mw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r379841253", "bodyText": "Type or OpenApiType.", "author": "thc202", "createdAt": "2020-02-15T16:29:56Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.utils;\n+\n+public final class Element {\n+\n+    private Element() {}\n+\n+    public static class Json {\n+\n+        private Json() {}\n+\n+        public static final String OBJECT_BEGIN = \"{\";\n+        public static final String OBJECT_END = \"}\";\n+        public static final String ARRAY_BEGIN = \"[\";\n+        public static final String ARRAY_END = \"]\";\n+        public static final String PROPERTY_CONTAINER = \"\\\"\";\n+        public static final String INNER_SEPARATOR = \":\";\n+        public static final String OUTER_SEPARATOR = \",\";\n+    }\n+\n+    public static class OpenApi {", "originalCommit": "d74e9816546eb1b954d86b39301d6ca4c04e1ca6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ff7367feab6d9ffa55c5f1e4758afe78a2c8b8c0", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java\ndeleted file mode 100644\nindex 3139b0208..000000000\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/utils/Element.java\n+++ /dev/null\n\n@@ -1,53 +0,0 @@\n-/*\n- * Zed Attack Proxy (ZAP) and its related class files.\n- *\n- * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n- *\n- * Copyright 2020 The ZAP Development Team\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.zaproxy.zap.extension.openapi.utils;\n-\n-public final class Element {\n-\n-    private Element() {}\n-\n-    public static class Json {\n-\n-        private Json() {}\n-\n-        public static final String OBJECT_BEGIN = \"{\";\n-        public static final String OBJECT_END = \"}\";\n-        public static final String ARRAY_BEGIN = \"[\";\n-        public static final String ARRAY_END = \"]\";\n-        public static final String PROPERTY_CONTAINER = \"\\\"\";\n-        public static final String INNER_SEPARATOR = \":\";\n-        public static final String OUTER_SEPARATOR = \",\";\n-    }\n-\n-    public static class OpenApi {\n-\n-        private OpenApi() {}\n-\n-        public static final String STRING = \"string\";\n-    }\n-\n-    public static class Form {\n-\n-        private Form() {}\n-\n-        public static final String INNER_SEPARATOR = \"=\";\n-        public static final String OUTER_SEPARATOR = \"&\";\n-    }\n-}\n"}}, {"oid": "2c46e4e87ea019f079839756ff1308fa8b5d722e", "url": "https://github.com/zaproxy/zap-extensions/commit/2c46e4e87ea019f079839756ff1308fa8b5d722e", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* Created a new MapGenerator and added it to Generators class.\n* Created Elements.java which holds some constants as I felt that BodyGenerator (Element, SYNTAX, FORMSYNTAX) were meant to do this but they are class private and other places could have been using this values.\n* DataGenerator\n** Changed the isSupport implementation to check for *Schema types rather than looking to the map because adding map type and object type to the map would sound strange as there isn't a default value for them.\n** Removed LOG variable from DataGenerator as it was not being used.\n** Created isMap, isArray and getGenerators\n* OpenApi_defn_map.yaml\n** Definitions for Map structures: (String, String), (String, Integer), (String, Boolean),(String, Object)\n* BodyGeneratorUnitTest\n** Added tests to assert the Map structures described above.", "committedDate": "2020-02-16T17:52:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkzMDgyNg==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r386930826", "bodyText": "This and Form could override toString() (instead of providing syntax()), less verbose when concatenating them.", "author": "thc202", "createdAt": "2020-03-03T10:35:13Z", "path": "addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/Element.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.openapi.generators;\n+\n+public class Element {\n+\n+    public enum Json {", "originalCommit": "2dd4aa2a12ff23e9a984b3ed6a543e12894501cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwNjkzNg==", "url": "https://github.com/zaproxy/zap-extensions/pull/2306#discussion_r387006936", "bodyText": "Ah ha! The verbosity thing was what stopped me to create the enum in the first place. I wish I had thought about the toString method before. Good catch =)", "author": "josehenriqueventura", "createdAt": "2020-03-03T13:08:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkzMDgyNg=="}], "type": "inlineReview", "revised_code": {"commit": "b88975e63eaa08b2ec213b412575284468a7c286", "chunk": "diff --git a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/Element.java b/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/Element.java\ndeleted file mode 100644\nindex 64fa67472..000000000\n--- a/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/generators/Element.java\n+++ /dev/null\n\n@@ -1,72 +0,0 @@\n-/*\n- * Zed Attack Proxy (ZAP) and its related class files.\n- *\n- * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n- *\n- * Copyright 2020 The ZAP Development Team\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.zaproxy.zap.extension.openapi.generators;\n-\n-public class Element {\n-\n-    public enum Json {\n-        OBJECT_BEGIN(\"{\"),\n-        OBJECT_END(\"}\"),\n-        ARRAY_BEGIN(\"[\"),\n-        ARRAY_END(\"]\"),\n-        PROPERTY_CONTAINER(\"\\\"\"),\n-        INNER_SEPARATOR(\":\"),\n-        OUTER_SEPARATOR(\",\");\n-\n-        private String syntax;\n-\n-        Json(String syntax) {\n-            this.syntax = syntax;\n-        }\n-\n-        public String syntax() {\n-            return syntax;\n-        }\n-    }\n-\n-    public enum OpenApiType {\n-        STRING(\"string\");\n-\n-        private String type;\n-\n-        OpenApiType(String type) {\n-            this.type = type;\n-        }\n-\n-        public String type() {\n-            return this.type;\n-        }\n-    }\n-\n-    public enum Form {\n-        INNER_SEPARATOR(\":\"),\n-        OUTER_SEPARATOR(\",\");\n-\n-        private String syntax;\n-\n-        Form(String syntax) {\n-            this.syntax = syntax;\n-        }\n-\n-        public String syntax() {\n-            return syntax;\n-        }\n-    }\n-}\n"}}, {"oid": "b88975e63eaa08b2ec213b412575284468a7c286", "url": "https://github.com/zaproxy/zap-extensions/commit/b88975e63eaa08b2ec213b412575284468a7c286", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* Created a new MapGenerator and added it to Generators class.\n* Created Elements.java which holds some constants as I felt that BodyGenerator (Element, SYNTAX, FORMSYNTAX) were meant to do this but they are class private and other places could have been using this values.\n* DataGenerator\n** Changed the isSupport implementation to check for *Schema types rather than looking to the map because adding map type and object type to the map would sound strange as there isn't a default value for them.\n** Removed LOG variable from DataGenerator as it was not being used.\n** Created isMap, isArray and getGenerators\n* OpenApi_defn_map.yaml\n** Definitions for Map structures: (String, String), (String, Integer), (String, Boolean),(String, Object)\n* BodyGeneratorUnitTest\n** Added tests to assert the Map structures described above.", "committedDate": "2020-03-06T11:35:01Z", "type": "commit"}, {"oid": "ff7367feab6d9ffa55c5f1e4758afe78a2c8b8c0", "url": "https://github.com/zaproxy/zap-extensions/commit/ff7367feab6d9ffa55c5f1e4758afe78a2c8b8c0", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* DataGenerator#isSupported\n** Changed the order of schema types alphabetically.\n** Made isArray and isMap private and static.\n\n* Element\n** Moved from openapi/utils to openapi/generators\n** Also, transformed the inner classes into enums.\n\n* MapGenerator\n** Applied the new Element syntax on generate method.\n\nResolve zaproxy/zaproxy#5863.", "committedDate": "2020-03-06T11:35:01Z", "type": "commit"}, {"oid": "c2d5f0bec5dbf35352289cd711c6b53242633f1d", "url": "https://github.com/zaproxy/zap-extensions/commit/c2d5f0bec5dbf35352289cd711c6b53242633f1d", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* Element#Json and Element#Form\n** Replaced syntax method by toString method.\n\n* MapGenerator\n** Removed the syntax() method usage\n\nResolve zaproxy/zaproxy#5863.", "committedDate": "2020-03-06T11:35:01Z", "type": "commit"}, {"oid": "15792e54e5749a27a193eaa9d1b0574b699d666b", "url": "https://github.com/zaproxy/zap-extensions/commit/15792e54e5749a27a193eaa9d1b0574b699d666b", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* DataGenerator.java\n** Removed the unnecessary else\n\n* MapGenerator\n** Fixed javadoc\n\nResolve zaproxy/zaproxy#5863.", "committedDate": "2020-03-06T11:35:01Z", "type": "commit"}, {"oid": "15792e54e5749a27a193eaa9d1b0574b699d666b", "url": "https://github.com/zaproxy/zap-extensions/commit/15792e54e5749a27a193eaa9d1b0574b699d666b", "message": "OpenAPI - Not creating Map structure properly #5863\n\n* DataGenerator.java\n** Removed the unnecessary else\n\n* MapGenerator\n** Fixed javadoc\n\nResolve zaproxy/zaproxy#5863.", "committedDate": "2020-03-06T11:35:01Z", "type": "forcePushed"}, {"oid": "08879f4cc3901f00cce4555ddc3063774ac13f5e", "url": "https://github.com/zaproxy/zap-extensions/commit/08879f4cc3901f00cce4555ddc3063774ac13f5e", "message": "* CHANGELOG.md\n** Added Map Structure support for OpenAPI v3.0 (Issue 5863)", "committedDate": "2020-03-06T11:49:46Z", "type": "commit"}]}