{"pr_number": 2532, "pr_title": "Provide example alerts in Cookie scan rules", "pr_createdAt": "2020-09-03T13:42:10Z", "pr_url": "https://github.com/zaproxy/zap-extensions/pull/2532", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk5MzkwNQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2532#discussion_r482993905", "bodyText": "Not worth adding the JavaDoc.", "author": "thc202", "createdAt": "2020-09-03T13:51:53Z", "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java", "diffHunk": "@@ -134,4 +134,28 @@ private Model getModel() {\n     protected void setModel(Model model) {\n         this.model = model;\n     }\n+\n+    /**\n+     * Gets the CWE ID of the issue(s) raised by the scanner.\n+     *\n+     * @return the CWE ID,\n+     * @see <a href=\"https://cwe.mitre.org/index.html\">CWE - Common Weakness Enumeration</a>\n+     */", "originalCommit": "06e2f7e4fc444eb282825594f29ba32d5365836d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e7f54d05deb5bc0a629cd60654e8c00f9de6f71", "chunk": "diff --git a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java\nindex 7a73837e8..170d1c244 100644\n--- a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java\n+++ b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java\n\n@@ -135,25 +135,11 @@ public class CookieHttpOnlyScanRule extends PluginPassiveScanner {\n         this.model = model;\n     }\n \n-    /**\n-     * Gets the CWE ID of the issue(s) raised by the scanner.\n-     *\n-     * @return the CWE ID,\n-     * @see <a href=\"https://cwe.mitre.org/index.html\">CWE - Common Weakness Enumeration</a>\n-     */\n-    public int getCweId(){\n+    public int getCweId() {\n         // CWE Id 16 - Configuration\n         return 16;\n     }\n \n-    /**\n-     * Gets the WASC ID of the issue(s) raised by the scanner.\n-     *\n-     * @return the WASC ID,\n-     * @see <a href=\"http://projects.webappsec.org/w/page/13246978/Threat%20Classification\">The WASC\n-     *     Threat Classification</a>\n-     */\n-\n     public int getWascId() {\n         // WASC Id 13 - Info leakage)\n         return 13;\n"}}, {"oid": "e8cf83b6f2beb6d3ecea65fb2f45fa7e6107aa43", "url": "https://github.com/zaproxy/zap-extensions/commit/e8cf83b6f2beb6d3ecea65fb2f45fa7e6107aa43", "message": "Expose getCweId and getWascId method for Cookie scan rules.\n\nThe CWE id was already managed for these Alerts/ScanRules and within ZAP they were already presented to the user.\nHowever, when visiting the alert detail pages online (https://www.zaproxy.org/docs/alerts/), CWE (and WASC) links were not generated correctly.\n\nThe reason is, that the id values were set inline to the alert.\nFor the script which generates the detail pages however, the getter methods for the ids have to be added publicly to the class.\n\nNote: if this solves the issue, I'll vote for another follow up issue to add this change to the PluginPassiveScanner parent class,\nso that the docs will be generated consistently over all Passive Scan Rules.\n\nFixes zaproxy/zaproxy#6140.\n\nSigned-off-by: Martin Spielmann <mail@martinspielmann.de>", "committedDate": "2020-09-03T14:06:22Z", "type": "commit"}, {"oid": "e8cf83b6f2beb6d3ecea65fb2f45fa7e6107aa43", "url": "https://github.com/zaproxy/zap-extensions/commit/e8cf83b6f2beb6d3ecea65fb2f45fa7e6107aa43", "message": "Expose getCweId and getWascId method for Cookie scan rules.\n\nThe CWE id was already managed for these Alerts/ScanRules and within ZAP they were already presented to the user.\nHowever, when visiting the alert detail pages online (https://www.zaproxy.org/docs/alerts/), CWE (and WASC) links were not generated correctly.\n\nThe reason is, that the id values were set inline to the alert.\nFor the script which generates the detail pages however, the getter methods for the ids have to be added publicly to the class.\n\nNote: if this solves the issue, I'll vote for another follow up issue to add this change to the PluginPassiveScanner parent class,\nso that the docs will be generated consistently over all Passive Scan Rules.\n\nFixes zaproxy/zaproxy#6140.\n\nSigned-off-by: Martin Spielmann <mail@martinspielmann.de>", "committedDate": "2020-09-03T14:06:22Z", "type": "forcePushed"}, {"oid": "0e7f54d05deb5bc0a629cd60654e8c00f9de6f71", "url": "https://github.com/zaproxy/zap-extensions/commit/0e7f54d05deb5bc0a629cd60654e8c00f9de6f71", "message": "Removed worthless javadoc and fix formatting.\n\nSigned-off-by: Martin Spielmann <mail@martinspielmann.de>", "committedDate": "2020-09-03T14:11:29Z", "type": "commit"}, {"oid": "d4ac01d43e6c2db85480014a5bbb0c3d3f525167", "url": "https://github.com/zaproxy/zap-extensions/commit/d4ac01d43e6c2db85480014a5bbb0c3d3f525167", "message": "Add new common getExampleAlerts() method\n\nTo comply with zaproxy/zaproxy#6140, the affected ScanRules have been provided with a getExampeAlerts method.\nIt allows maintenance scripts to generate documentation pages in a common way.\n\nSigned-off-by: Martin Spielmann <mail@martinspielmann.de>", "committedDate": "2020-09-03T15:03:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ5MTk1NQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2532#discussion_r484491955", "bodyText": "This should call existing method, avoids maintaining the same info in two places (which is error prone). There's another PR with similar changes: https://github.com/zaproxy/zap-extensions/pull/2517/files#diff-2587ce4776bf99dbb14cf9284389ba13\nThe methods getCweId() and getWascId() would no longer be needed.", "author": "thc202", "createdAt": "2020-09-07T15:25:04Z", "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java", "diffHunk": "@@ -134,4 +135,30 @@ private Model getModel() {\n     protected void setModel(Model model) {\n         this.model = model;\n     }\n+\n+    private int getCweId() {\n+        // CWE Id 16 - Configuration\n+        return 16;\n+    }\n+\n+    private int getWascId() {\n+        // WASC Id 13 - Info leakage)\n+        return 13;\n+    }\n+\n+    public List<Alert> getExampleAlerts() {\n+        List<Alert> alerts = new ArrayList<Alert>();\n+        Alert alert =\n+                newAlert()", "originalCommit": "d4ac01d43e6c2db85480014a5bbb0c3d3f525167", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "16cfbf872ebcc5fc5a97ee643d7f527784a159f5", "chunk": "diff --git a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java\nindex c7dfbe4fe..bb92b1e1e 100644\n--- a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java\n+++ b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java\n\n@@ -136,29 +135,9 @@ public class CookieHttpOnlyScanRule extends PluginPassiveScanner {\n         this.model = model;\n     }\n \n-    private int getCweId() {\n-        // CWE Id 16 - Configuration\n-        return 16;\n-    }\n-\n-    private int getWascId() {\n-        // WASC Id 13 - Info leakage)\n-        return 13;\n-    }\n-\n     public List<Alert> getExampleAlerts() {\n         List<Alert> alerts = new ArrayList<Alert>();\n-        Alert alert =\n-                newAlert()\n-                        .setRisk(Alert.RISK_LOW)\n-                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                        .setDescription(getDescription())\n-                        .setSolution(getSolution())\n-                        .setReference(getReference())\n-                        .setCweId(getCweId())\n-                        .setWascId(getWascId())\n-                        .build();\n-        alerts.add(alert);\n+        alerts.add(buildAlert(new HttpMessage(), \"\").build());\n         return alerts;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3NjA0Mw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2532#discussion_r484476043", "bodyText": "I dunno why it was there...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // WASC Id 13 - Info leakage)\n          \n          \n            \n                    // WASC Id 13 - Info leakage", "author": "kingthorin", "createdAt": "2020-09-07T14:49:49Z", "path": "addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java", "diffHunk": "@@ -134,4 +135,30 @@ private Model getModel() {\n     protected void setModel(Model model) {\n         this.model = model;\n     }\n+\n+    private int getCweId() {\n+        // CWE Id 16 - Configuration\n+        return 16;\n+    }\n+\n+    private int getWascId() {\n+        // WASC Id 13 - Info leakage)", "originalCommit": "d4ac01d43e6c2db85480014a5bbb0c3d3f525167", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "16cfbf872ebcc5fc5a97ee643d7f527784a159f5", "chunk": "diff --git a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java\nindex c7dfbe4fe..bb92b1e1e 100644\n--- a/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java\n+++ b/addOns/pscanrules/src/main/java/org/zaproxy/zap/extension/pscanrules/CookieHttpOnlyScanRule.java\n\n@@ -136,29 +135,9 @@ public class CookieHttpOnlyScanRule extends PluginPassiveScanner {\n         this.model = model;\n     }\n \n-    private int getCweId() {\n-        // CWE Id 16 - Configuration\n-        return 16;\n-    }\n-\n-    private int getWascId() {\n-        // WASC Id 13 - Info leakage)\n-        return 13;\n-    }\n-\n     public List<Alert> getExampleAlerts() {\n         List<Alert> alerts = new ArrayList<Alert>();\n-        Alert alert =\n-                newAlert()\n-                        .setRisk(Alert.RISK_LOW)\n-                        .setConfidence(Alert.CONFIDENCE_MEDIUM)\n-                        .setDescription(getDescription())\n-                        .setSolution(getSolution())\n-                        .setReference(getReference())\n-                        .setCweId(getCweId())\n-                        .setWascId(getWascId())\n-                        .build();\n-        alerts.add(alert);\n+        alerts.add(buildAlert(new HttpMessage(), \"\").build());\n         return alerts;\n     }\n }\n"}}, {"oid": "16cfbf872ebcc5fc5a97ee643d7f527784a159f5", "url": "https://github.com/zaproxy/zap-extensions/commit/16cfbf872ebcc5fc5a97ee643d7f527784a159f5", "message": "Cleanup methods\n\nSigned-off-by: Martin Spielmann <mail@martinspielmann.de>", "committedDate": "2020-09-07T18:24:55Z", "type": "commit"}]}