{"pr_number": 2635, "pr_title": "Fix various issues identified via sonarcloud", "pr_createdAt": "2020-11-29T14:26:15Z", "pr_url": "https://github.com/zaproxy/zap-extensions/pull/2635", "timeline": [{"oid": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d", "url": "https://github.com/zaproxy/zap-extensions/commit/c4b3b14cb63da4004858acb46adb3f32ceef7c2d", "message": "Fix various issues identified via sonarcloud\n\n- CookieUtils > Address theoretical NPE on cookie name.\n- PayloadIterator > `next()` method should throw NoSuchElementException\nfor iteration beyond the end of the collection.\n- ReportGenerator > Use try-with-resource.\n- diff_match_patch > `equals(Object)` add null and type check, add\noverride notation.\n- EncodeDecodeDialog > Rename `initialize()` to `init()` to avoid name\ncollision with parent.\n- HttpsInfoOutputPanel > Address theoretical NPE in getTarget.\n- ImagelocationScanRule > Assign to value from the toLowerCase\noperation.\n- ImportLogAPI > Use try-with-resource.\n- PortScan > Use try-with-resource.\n- RetireScanRule > Address theoretical NPE on repo.\n\nI didn't update CHANGELOGs as these changes don't seem end-user\nrelevant.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-11-29T14:23:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMTM4NQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532401385", "bodyText": "Could you add a test?", "author": "thc202", "createdAt": "2020-11-30T07:53:42Z", "path": "addOns/commonlib/src/main/java/org/zaproxy/addon/commonlib/CookieUtils.java", "diffHunk": "@@ -146,6 +146,9 @@ public static String getSetCookiePlusName(String header, String cookieHeaderValu\n             return null;\n         }\n         String name = getCookieName(cookieHeaderValue);\n+        if (name == null) {", "originalCommit": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMTQzMA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532401430", "bodyText": "This advances the internal iterator, which would cause the PayloadIterator to skip payloads. Could you add tests?", "author": "thc202", "createdAt": "2020-11-30T07:53:48Z", "path": "addOns/custompayloads/src/main/java/org/zaproxy/zap/extension/custompayloads/PayloadIterator.java", "diffHunk": "@@ -57,6 +58,9 @@ public boolean hasNext() {\n \n         @Override\n         public String next() {\n+            if (!hasNext()) {", "originalCommit": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dc0f7c96f3cd4474d7b3d775ad2f8d5cb55a7252", "chunk": "diff --git a/addOns/custompayloads/src/main/java/org/zaproxy/zap/extension/custompayloads/PayloadIterator.java b/addOns/custompayloads/src/main/java/org/zaproxy/zap/extension/custompayloads/PayloadIterator.java\nindex f68b8c095..36202c58b 100644\n--- a/addOns/custompayloads/src/main/java/org/zaproxy/zap/extension/custompayloads/PayloadIterator.java\n+++ b/addOns/custompayloads/src/main/java/org/zaproxy/zap/extension/custompayloads/PayloadIterator.java\n\n@@ -58,9 +57,6 @@ public class PayloadIterator implements Iterable<String> {\n \n         @Override\n         public String next() {\n-            if (!hasNext()) {\n-                throw new NoSuchElementException();\n-            }\n             return currentPayload.getPayload();\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjEyNA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532402124", "bodyText": "Should it just show that the target is invalid?", "author": "thc202", "createdAt": "2020-11-30T07:55:14Z", "path": "addOns/httpsInfo/src/main/java/org/zaproxy/zap/extension/httpsinfo/HttpsInfoOutputPanel.java", "diffHunk": "@@ -123,7 +123,10 @@ public void run() {\n                             String warnMsg =\n                                     Constant.messages.getString(\n                                             \"httpsinfo.init.warning\",\n-                                            getTarget().toString(),\n+                                            getTarget() == null\n+                                                    ? Constant.messages.getString(\n+                                                            \"httpsinfo.init.warning.missing\")\n+                                                    : getTarget().toString(),", "originalCommit": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "edc3c543fd79213b98df2d0c9930b7fbaf09e400", "chunk": "diff --git a/addOns/httpsInfo/src/main/java/org/zaproxy/zap/extension/httpsinfo/HttpsInfoOutputPanel.java b/addOns/httpsInfo/src/main/java/org/zaproxy/zap/extension/httpsinfo/HttpsInfoOutputPanel.java\nindex 934c13271..62780f47d 100644\n--- a/addOns/httpsInfo/src/main/java/org/zaproxy/zap/extension/httpsinfo/HttpsInfoOutputPanel.java\n+++ b/addOns/httpsInfo/src/main/java/org/zaproxy/zap/extension/httpsinfo/HttpsInfoOutputPanel.java\n\n@@ -117,16 +117,20 @@ public class HttpsInfoOutputPanel extends OutputPanel {\n                 new Thread(\"ZAP-httpsinfo\") {\n                     @Override\n                     public void run() {\n+                        if (getTarget() == null) {\n+                            String missingMsg =\n+                                    Constant.messages.getString(\"httpsinfo.init.warning.missing\");\n+                            LOGGER.warn(missingMsg);\n+                            View.getSingleton().showWarningDialog(missingMsg);\n+                            return;\n+                        }\n                         try {\n                             initSession(getTarget());\n                         } catch (DVException e) {\n                             String warnMsg =\n                                     Constant.messages.getString(\n                                             \"httpsinfo.init.warning\",\n-                                            getTarget() == null\n-                                                    ? Constant.messages.getString(\n-                                                            \"httpsinfo.init.warning.missing\")\n-                                                    : getTarget().toString(),\n+                                            getTarget().toString(),\n                                             e.getCause());\n                             LOGGER.warn(warnMsg);\n                             View.getSingleton().showWarningDialog(warnMsg);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjMzMg==", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532402332", "bodyText": "This needs to be removed (causing the build to fail).", "author": "thc202", "createdAt": "2020-11-30T07:55:41Z", "path": "addOns/importLogFiles/src/main/java/org/zaproxy/zap/extension/importLogFiles/ImportLogAPI.java", "diffHunk": "@@ -289,46 +289,26 @@ private static ApiResponseElement processLogs(\n         }\n \n         if (httpPOSTData == null) {\n-            BufferedWriter wr = null;\n-            BufferedReader br = null;\n-            try {\n+            try (BufferedReader br = new BufferedReader(new FileReader(sourceFilePath));\n+                    BufferedWriter wr = new BufferedWriter(new FileWriter(targetFile))) {\n                 String sCurrentLine;\n \n-                br = new BufferedReader(new FileReader(sourceFilePath));\n-                wr = new BufferedWriter(new FileWriter(targetFile));\n                 while ((sCurrentLine = br.readLine()) != null) {\n                     wr.write(sCurrentLine);\n                     wr.newLine();\n                 }\n \n             } catch (IOException e) {\n                 log.error(e.getMessage(), e);\n-            } finally {\n-                try {\n-                    if (wr != null) wr.close();\n-                    if (br != null) br.close();\n-                } catch (IOException ex) {\n-                    log.error(ex.getMessage(), ex);\n-                }\n             }\n         } else {\n-            FileOutputStream fop = null;\n-            try {\n-                fop = new FileOutputStream(targetFile);\n+            try (FileOutputStream fop = new FileOutputStream(targetFile)) {\n                 byte[] contentInBytes = httpPOSTData.getBytes();\n                 fop.write(contentInBytes);\n                 fop.flush();\n                 fop.close();", "originalCommit": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "edc3c543fd79213b98df2d0c9930b7fbaf09e400", "chunk": "diff --git a/addOns/importLogFiles/src/main/java/org/zaproxy/zap/extension/importLogFiles/ImportLogAPI.java b/addOns/importLogFiles/src/main/java/org/zaproxy/zap/extension/importLogFiles/ImportLogAPI.java\nindex 1ef267cde..9e18f1055 100644\n--- a/addOns/importLogFiles/src/main/java/org/zaproxy/zap/extension/importLogFiles/ImportLogAPI.java\n+++ b/addOns/importLogFiles/src/main/java/org/zaproxy/zap/extension/importLogFiles/ImportLogAPI.java\n\n@@ -306,7 +306,6 @@ public class ImportLogAPI extends ApiImplementor {\n                 byte[] contentInBytes = httpPOSTData.getBytes();\n                 fop.write(contentInBytes);\n                 fop.flush();\n-                fop.close();\n             } catch (IOException ex) {\n                 log.error(ex.getMessage(), ex);\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjM3Nw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532402377", "bodyText": "Should not catch the exception to keep the same behaviour.", "author": "thc202", "createdAt": "2020-11-30T07:55:46Z", "path": "addOns/portscan/src/main/java/org/zaproxy/zap/extension/portscan/PortScan.java", "diffHunk": "@@ -187,9 +185,10 @@ public Integer call() {\n \n                 } else {\n                     // Not using a proxy\n-                    s = new Socket();\n-                    s.connect(new InetSocketAddress(site, port), timeout);\n-                    s.close();\n+                    try (Socket sock = new Socket()) {\n+                        sock.connect(new InetSocketAddress(site, port), timeout);\n+                    } catch (IOException e) {", "originalCommit": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "edc3c543fd79213b98df2d0c9930b7fbaf09e400", "chunk": "diff --git a/addOns/portscan/src/main/java/org/zaproxy/zap/extension/portscan/PortScan.java b/addOns/portscan/src/main/java/org/zaproxy/zap/extension/portscan/PortScan.java\nindex fcbc135b9..9f868f90c 100644\n--- a/addOns/portscan/src/main/java/org/zaproxy/zap/extension/portscan/PortScan.java\n+++ b/addOns/portscan/src/main/java/org/zaproxy/zap/extension/portscan/PortScan.java\n\n@@ -185,9 +185,8 @@ public class PortScan extends ScanThread implements ScanListenner {\n \n                 } else {\n                     // Not using a proxy\n-                    try (Socket sock = new Socket()) {\n-                        sock.connect(new InetSocketAddress(site, port), timeout);\n-                    } catch (IOException e) {\n+                    try (Socket s = new Socket()) {\n+                        s.connect(new InetSocketAddress(site, port), timeout);\n                     }\n                 }\n                 log.debug(\"Site : \" + site + \" open port: \" + port);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQwMjQxOA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2635#discussion_r532402418", "bodyText": "getRepo() == null, this could be done in the initial if.", "author": "thc202", "createdAt": "2020-11-30T07:55:52Z", "path": "addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireScanRule.java", "diffHunk": "@@ -66,6 +66,10 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n         if (!msg.getResponseHeader().isImage()\n                 && !msg.getRequestHeader().isCss()\n                 && !msg.getResponseHeader().isCss()) {\n+            Repo repo = getRepo();\n+            if (repo == null) {", "originalCommit": "c4b3b14cb63da4004858acb46adb3f32ceef7c2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "edc3c543fd79213b98df2d0c9930b7fbaf09e400", "chunk": "diff --git a/addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireScanRule.java b/addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireScanRule.java\nindex 2db0b5971..01cbfab17 100644\n--- a/addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireScanRule.java\n+++ b/addOns/retire/src/main/java/org/zaproxy/addon/retire/RetireScanRule.java\n\n@@ -59,17 +59,13 @@ public class RetireScanRule extends PluginPassiveScanner {\n \n     @Override\n     public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n-        if (!getHelper().isPage200(msg)) {\n+        if (!getHelper().isPage200(msg) || getRepo() == null) {\n             return;\n         }\n         String uri = msg.getRequestHeader().getURI().toString();\n         if (!msg.getResponseHeader().isImage()\n                 && !msg.getRequestHeader().isCss()\n                 && !msg.getResponseHeader().isCss()) {\n-            Repo repo = getRepo();\n-            if (repo == null) {\n-                return;\n-            }\n             Result result = getRepo().scanJS(msg);\n             if (result == null) {\n                 if (LOGGER.isDebugEnabled()) {\n"}}, {"oid": "edc3c543fd79213b98df2d0c9930b7fbaf09e400", "url": "https://github.com/zaproxy/zap-extensions/commit/edc3c543fd79213b98df2d0c9930b7fbaf09e400", "message": "Fix various issues identified via sonarcloud\n\n- CookieUtils > Address theoretical NPE on cookie name.\n- PayloadIterator > `next()` method should throw NoSuchElementException\nfor iteration beyond the end of the collection.\n- ReportGenerator > Use try-with-resource.\n- diff_match_patch > `equals(Object)` add null and type check, add\noverride notation.\n- EncodeDecodeDialog > Rename `initialize()` to `init()` to avoid name\ncollision with parent.\n- HttpsInfoOutputPanel > Address theoretical NPE in getTarget.\n- ImagelocationScanRule > Assign to value from the toLowerCase\noperation.\n- ImportLogAPI > Use try-with-resource.\n- PortScan > Use try-with-resource.\n- RetireScanRule > Address theoretical NPE on repo.\n\nI didn't update CHANGELOGs as these changes don't seem end-user\nrelevant.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-12-01T01:02:56Z", "type": "forcePushed"}, {"oid": "680dbaa62f5e65afb1c804ca61df9cda5c076c2f", "url": "https://github.com/zaproxy/zap-extensions/commit/680dbaa62f5e65afb1c804ca61df9cda5c076c2f", "message": "Fix various issues identified via sonarcloud\n\n- CookieUtils > Address theoretical NPE on cookie name.\n- PayloadIterator > `next()` method should throw NoSuchElementException\nfor iteration beyond the end of the collection.\n- ReportGenerator > Use try-with-resource.\n- diff_match_patch > `equals(Object)` add null and type check, add\noverride notation.\n- EncodeDecodeDialog > Rename `initialize()` to `init()` to avoid name\ncollision with parent.\n- HttpsInfoOutputPanel > Address theoretical NPE in getTarget.\n- ImagelocationScanRule > Assign to value from the toLowerCase\noperation.\n- ImportLogAPI > Use try-with-resource.\n- PortScan > Use try-with-resource.\n- RetireScanRule > Address theoretical NPE on repo.\n\nI didn't update CHANGELOGs as these changes don't seem end-user\nrelevant.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-12-01T01:07:11Z", "type": "forcePushed"}, {"oid": "3c2a3f8b2e926dbf4bb9989acc7c2ee10227d5fa", "url": "https://github.com/zaproxy/zap-extensions/commit/3c2a3f8b2e926dbf4bb9989acc7c2ee10227d5fa", "message": "Fix various issues identified via sonarcloud\n\n- CookieUtils > Address theoretical NPE on cookie name.\n- PayloadIterator > `next()` method should throw NoSuchElementException\nfor iteration beyond the end of the collection.\n- ReportGenerator > Use try-with-resource.\n- diff_match_patch > `equals(Object)` add null and type check, add\noverride notation.\n- EncodeDecodeDialog > Rename `initialize()` to `init()` to avoid name\ncollision with parent.\n- HttpsInfoOutputPanel > Address theoretical NPE in getTarget.\n- ImagelocationScanRule > Assign to value from the toLowerCase\noperation.\n- ImportLogAPI > Use try-with-resource.\n- PortScan > Use try-with-resource.\n- RetireScanRule > Address theoretical NPE on repo.\n\nI didn't update CHANGELOGs as these changes don't seem end-user\nrelevant.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-12-01T02:29:27Z", "type": "forcePushed"}, {"oid": "e04341d1a84e3325ea712d2b050b3ebb4643badb", "url": "https://github.com/zaproxy/zap-extensions/commit/e04341d1a84e3325ea712d2b050b3ebb4643badb", "message": "Fix various issues identified via sonarcloud\n\n- CookieUtils > Address theoretical NPE on cookie name.\n- PayloadIterator > `next()` method should throw NoSuchElementException\nfor iteration beyond the end of the collection.\n- ReportGenerator > Use try-with-resource.\n- diff_match_patch > `equals(Object)` add null and type check, add\noverride notation.\n- EncodeDecodeDialog > Rename `initialize()` to `init()` to avoid name\ncollision with parent.\n- HttpsInfoOutputPanel > Address theoretical NPE in getTarget.\n- ImagelocationScanRule > Assign to value from the toLowerCase\noperation.\n- ImportLogAPI > Use try-with-resource.\n- PortScan > Use try-with-resource.\n- RetireScanRule > Address theoretical NPE on repo.\n\nI didn't update CHANGELOGs as these changes don't seem end-user\nrelevant.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-12-01T12:29:09Z", "type": "forcePushed"}, {"oid": "0213443205ef22015d678023ebe4a4becfb421ef", "url": "https://github.com/zaproxy/zap-extensions/commit/0213443205ef22015d678023ebe4a4becfb421ef", "message": "Fix various issues identified via sonarcloud\n\n- CookieUtils > Address theoretical NPE on cookie name.\n- PayloadIterator > `next()` method should throw NoSuchElementException\nfor iteration beyond the end of the collection.\n- ReportGenerator > Use try-with-resource.\n- diff_match_patch > `equals(Object)` add null and type check, add\noverride notation.\n- EncodeDecodeDialog > Rename `initialize()` to `init()` to avoid name\ncollision with parent.\n- HttpsInfoOutputPanel > Address theoretical NPE in getTarget.\n- ImagelocationScanRule > Assign to value from the toLowerCase\noperation.\n- ImportLogAPI > Use try-with-resource.\n- PortScan > Use try-with-resource.\n- RetireScanRule > Address theoretical NPE on repo.\n\nI didn't update CHANGELOGs as these changes don't seem end-user\nrelevant.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-12-01T12:37:54Z", "type": "forcePushed"}, {"oid": "f8179c0382e00f4c876fb8fd7d4f05293b8ff7d9", "url": "https://github.com/zaproxy/zap-extensions/commit/f8179c0382e00f4c876fb8fd7d4f05293b8ff7d9", "message": "Fix various issues identified via sonarcloud\n\n- CookieUtils > Address theoretical NPE on cookie name.\n- PayloadIterator > `next()` method should throw NoSuchElementException\nfor iteration beyond the end of the collection.\n- ReportGenerator > Use try-with-resource.\n- diff_match_patch > `equals(Object)` add null and type check, add\noverride notation.\n- EncodeDecodeDialog > Rename `initialize()` to `init()` to avoid name\ncollision with parent.\n- HttpsInfoOutputPanel > Address theoretical NPE in getTarget.\n- ImagelocationScanRule > Assign to value from the toLowerCase\noperation.\n- ImportLogAPI > Use try-with-resource.\n- PortScan > Use try-with-resource.\n- RetireScanRule > Address theoretical NPE on repo.\n\nI didn't update CHANGELOGs as these changes don't seem end-user\nrelevant.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-12-01T12:58:14Z", "type": "forcePushed"}, {"oid": "dc0f7c96f3cd4474d7b3d775ad2f8d5cb55a7252", "url": "https://github.com/zaproxy/zap-extensions/commit/dc0f7c96f3cd4474d7b3d775ad2f8d5cb55a7252", "message": "Fix various issues identified via sonarcloud\n\n- CookieUtils > Address theoretical NPE on cookie name.\n- ReportGenerator > Use try-with-resource.\n- diff_match_patch > `equals(Object)` add null and type check, add\noverride notation.\n- EncodeDecodeDialog > Rename `initialize()` to `init()` to avoid name\ncollision with parent.\n- HttpsInfoOutputPanel > Address theoretical NPE in getTarget.\n- ImagelocationScanRule > Assign to value from the toLowerCase\noperation.\n- ImportLogAPI > Use try-with-resource.\n- PortScan > Use try-with-resource.\n- RetireScanRule > Address theoretical NPE on repo.\n\nI didn't update CHANGELOGs as these changes don't seem end-user\nrelevant.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-12-17T21:17:48Z", "type": "commit"}, {"oid": "dc0f7c96f3cd4474d7b3d775ad2f8d5cb55a7252", "url": "https://github.com/zaproxy/zap-extensions/commit/dc0f7c96f3cd4474d7b3d775ad2f8d5cb55a7252", "message": "Fix various issues identified via sonarcloud\n\n- CookieUtils > Address theoretical NPE on cookie name.\n- ReportGenerator > Use try-with-resource.\n- diff_match_patch > `equals(Object)` add null and type check, add\noverride notation.\n- EncodeDecodeDialog > Rename `initialize()` to `init()` to avoid name\ncollision with parent.\n- HttpsInfoOutputPanel > Address theoretical NPE in getTarget.\n- ImagelocationScanRule > Assign to value from the toLowerCase\noperation.\n- ImportLogAPI > Use try-with-resource.\n- PortScan > Use try-with-resource.\n- RetireScanRule > Address theoretical NPE on repo.\n\nI didn't update CHANGELOGs as these changes don't seem end-user\nrelevant.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-12-17T21:17:48Z", "type": "forcePushed"}]}