{"pr_number": 2310, "pr_title": "Extract more sharedutil methods", "pr_createdAt": "2020-02-17T18:35:02Z", "pr_url": "https://github.com/zaproxy/zap-extensions/pull/2310", "timeline": [{"oid": "164f14a3657708378fe5eb8f096123c08893018f", "url": "https://github.com/zaproxy/zap-extensions/commit/164f14a3657708378fe5eb8f096123c08893018f", "message": "Extract more sharedutil methods\n\n- Created NumUtils and PiiUtils from methods in PiiScanner.\n- Modify PiiScanner to use the shared utils, remove TODO note.\n- Modify InformationDisclosureReferrerScanner to use the shared utils.\n- Add generic \"Maintenance changes\" note to CHANGELOGs.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-02-17T19:18:36Z", "type": "forcePushed"}, {"oid": "d60736601b64179db257e47e0dc3d9e251b14f48", "url": "https://github.com/zaproxy/zap-extensions/commit/d60736601b64179db257e47e0dc3d9e251b14f48", "message": "Extract more sharedutil methods\n\n- Created PiiUtils from the PiiScanner.\n- Modify PiiScanner to use the shared utils, remove TODO note.\n- Modify InformationDisclosureReferrerScanner to use the shared utils.\nInformationDisclosureReferrerScannerUnitTest removed an un-used local\nvariable in one of the tests (call it a clean code activity).\n- Add generic \"Maintenance changes\" note to CHANGELOGs.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-02-18T14:50:56Z", "type": "commit"}, {"oid": "d60736601b64179db257e47e0dc3d9e251b14f48", "url": "https://github.com/zaproxy/zap-extensions/commit/d60736601b64179db257e47e0dc3d9e251b14f48", "message": "Extract more sharedutil methods\n\n- Created PiiUtils from the PiiScanner.\n- Modify PiiScanner to use the shared utils, remove TODO note.\n- Modify InformationDisclosureReferrerScanner to use the shared utils.\nInformationDisclosureReferrerScannerUnitTest removed an un-used local\nvariable in one of the tests (call it a clean code activity).\n- Add generic \"Maintenance changes\" note to CHANGELOGs.\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-02-18T14:50:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyMDc2Mw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2310#discussion_r380720763", "bodyText": "I figured this javadoc may as well be kept in-case we come up with a reason to to split this out in the future.", "author": "kingthorin", "createdAt": "2020-02-18T14:52:33Z", "path": "addOns/pscanrulesBeta/src/main/java/org/zaproxy/zap/extension/pscanrulesBeta/PiiScanner.java", "diffHunk": "@@ -95,30 +95,22 @@ public void scanHttpResponseReceive(HttpMessage msg, int id, Source source) {\n                 Matcher matcher = cc.matcher(candidate.getCandidate());\n                 while (matcher.find()) {\n                     String evidence = matcher.group();\n-                    if (validateLuhnChecksum(evidence) && !isSci(candidate.getContainingString())) {\n+                    if (PiiUtils.isValidLuhn(evidence) && !isSci(candidate.getContainingString())) {\n                         raiseAlert(msg, id, evidence, cc.name);\n                     }\n                 }\n             }\n         }\n     }\n \n-    private static boolean validateLuhnChecksum(String evidence) {\n-        int sum = 0;\n-        int parity = evidence.length() % 2;\n-        for (int index = 0; index < evidence.length(); index++) {\n-            int digit = Integer.parseInt(evidence.substring(index, index + 1));\n-            if ((index % 2) == parity) {\n-                digit *= 2;\n-                if (digit > 9) {\n-                    digit -= 9;\n-                }\n-            }\n-            sum += digit;\n-        }\n-        return (sum % 10) == 0;\n-    }\n-\n+    /**\n+     * Checks whether a particular {@code String} input appears to be a valid number in scientific\n+     * (exponent) notation. Ex: 2.14111111111111111e-2, 8.46786664623715E-47, 3.14111111111117293e5\n+     *\n+     * @param containingString the value to be checked.\n+     * @return {@code true} if the value successfully parses as a {@code Float}, {@code false}\n+     *     otherwise.\n+     */", "originalCommit": "d60736601b64179db257e47e0dc3d9e251b14f48", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}