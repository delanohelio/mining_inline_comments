{"pr_number": 2514, "pr_title": "'Hidden File Finder' threshold handling", "pr_createdAt": "2020-08-11T12:27:31Z", "pr_url": "https://github.com/zaproxy/zap-extensions/pull/2514", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY3MDQxOA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2514#discussion_r468670418", "bodyText": "The handling is slightly different but maybe this isn't necessary given shouldRaiseAlertWithLowConfidenceIfTestedUrlRespondsOkToCustomPayload", "author": "kingthorin", "createdAt": "2020-08-11T15:29:13Z", "path": "addOns/ascanrulesAlpha/src/test/java/org/zaproxy/zap/extension/ascanrulesAlpha/HiddenFilesScanRuleUnitTest.java", "diffHunk": "@@ -114,7 +119,50 @@ public void shouldRaiseAlertIfTestedUrlRespondsOkWithRelevantContent()\n     }\n \n     @Test\n-    public void shouldRaiseAlertWithLowConfidenceIfTestedUrlRespondsForbidden()\n+    public void shouldRaiseAlertIfTestedUrlRespondsOkWithCustomPayload()", "originalCommit": "52961744541b9f52e27810446cf5d49bb341514b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a47d1f280e89e9d1adfd656519575f3e945f1859", "chunk": "diff --git a/addOns/ascanrulesAlpha/src/test/java/org/zaproxy/zap/extension/ascanrulesAlpha/HiddenFilesScanRuleUnitTest.java b/addOns/ascanrulesAlpha/src/test/java/org/zaproxy/zap/extension/ascanrulesAlpha/HiddenFilesScanRuleUnitTest.java\nindex 1ac90d945..5e102f012 100644\n--- a/addOns/ascanrulesAlpha/src/test/java/org/zaproxy/zap/extension/ascanrulesAlpha/HiddenFilesScanRuleUnitTest.java\n+++ b/addOns/ascanrulesAlpha/src/test/java/org/zaproxy/zap/extension/ascanrulesAlpha/HiddenFilesScanRuleUnitTest.java\n\n@@ -118,52 +118,10 @@ public class HiddenFilesScanRuleUnitTest extends ActiveScannerTest<HiddenFilesSc\n                 rule.getReference() + '\\n' + hiddenFile.getLinks().get(0), alert.getReference());\n     }\n \n-    @Test\n-    public void shouldRaiseAlertIfTestedUrlRespondsOkWithCustomPayload()\n-            throws HttpMalformedHeaderException {\n-        // Given\n-        String servePath = \"/shouldAlert\";\n-\n-        String testPath = \"foo/test.php\";\n-        List<String> links = Arrays.asList(\"https://example.org\");\n-        HiddenFile hiddenFile =\n-                new HiddenFile(\n-                        testPath,\n-                        Collections.emptyList(),\n-                        Collections.emptyList(),\n-                        \"\",\n-                        links,\n-                        \"test_php\",\n-                        true);\n-\n-        this.nano.addHandler(new OkResponse(servePath));\n-        this.nano.addHandler(\n-                new StaticContentServerHandler(\n-                        '/' + testPath,\n-                        \"<html><head></head><H>Awesome Title</H1> Some Text... <html>\"));\n-\n-        HttpMessage msg = this.getHttpMessage(servePath);\n-\n-        rule.init(msg, this.parent);\n-        HiddenFilesScanRule.addTestPayload(hiddenFile);\n-\n-        // When\n-        rule.scan();\n-        // Then\n-        assertThat(alertsRaised, hasSize(1));\n-        Alert alert = alertsRaised.get(0);\n-        assertEquals(1, httpMessagesSent.size());\n-        assertEquals(Alert.RISK_MEDIUM, alertsRaised.get(0).getRisk());\n-        assertEquals(Alert.CONFIDENCE_LOW, alertsRaised.get(0).getConfidence());\n-        assertEquals(hiddenFile.getType(), alert.getOtherInfo());\n-        assertEquals(\n-                rule.getReference() + '\\n' + hiddenFile.getLinks().get(0), alert.getReference());\n-    }\n-\n     @ParameterizedTest\n-    @ValueSource(strings = {\"LOW\", \"MEDIUM\"})\n-    public void shouldNotRaiseAlertIfTestedUrlRespondsForbiddenWhenhresholdNotHigh(String threshold)\n-            throws HttpMalformedHeaderException {\n+    @EnumSource(names = {\"LOW\", \"MEDIUM\"})\n+    public void shouldNotRaiseAlertIfTestedUrlRespondsForbiddenWhenThresholdNotHigh(\n+            AlertThreshold threshold) throws HttpMalformedHeaderException {\n         // Given\n         String servePath = \"/shouldAlert\";\n \n"}}, {"oid": "a47d1f280e89e9d1adfd656519575f3e945f1859", "url": "https://github.com/zaproxy/zap-extensions/commit/a47d1f280e89e9d1adfd656519575f3e945f1859", "message": "Hidden File Finder' threshold handling\n\n* Builtin checks with content checks will alert with HIGH confidence if\nboth conditions are met (for any threshold).\n* Builtin checks that only match path (200) will alert at LOW confidence\n(only at HIGH threshold).\n* User added payloads/checks alert at LOW confidence (for any threshold)\n[User added checks are purely path based].\n\n* UnitTests updated.\n* CHANGELOG updated.\n\nFixes zaproxy/zaproxy#6116\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-08-12T17:58:57Z", "type": "forcePushed"}, {"oid": "60a0adb2d7e43287d4ede386d8d55c97ce4a7d2b", "url": "https://github.com/zaproxy/zap-extensions/commit/60a0adb2d7e43287d4ede386d8d55c97ce4a7d2b", "message": "Hidden File Finder' threshold handling\n\n* Builtin checks with content checks will alert with HIGH confidence if\nboth conditions are met (for any threshold).\n* Builtin checks that only match path (200) will alert at LOW confidence\n(only at HIGH threshold).\n* User added payloads/checks alert at LOW confidence (for any threshold)\n[User added checks are purely path based].\n\n- UnitTests updated.\n- CHANGELOG updated.\n- Help updated.\n\nFixes zaproxy/zaproxy#6116\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-08-13T01:59:58Z", "type": "forcePushed"}, {"oid": "e8470bf184a6aa6bfefa1779c2dc3b4751640709", "url": "https://github.com/zaproxy/zap-extensions/commit/e8470bf184a6aa6bfefa1779c2dc3b4751640709", "message": "Hidden File Finder' threshold handling\n\n* Builtin checks with content checks will alert with HIGH confidence if\nboth conditions are met (for any threshold).\n* Builtin checks that only match path (200) will alert at LOW confidence\n(only at HIGH threshold).\n* User added payloads/checks alert at LOW confidence (for any threshold)\n[User added checks are purely path based].\n\n- UnitTests updated.\n- CHANGELOG updated.\n- Help updated.\n\nFixes zaproxy/zaproxy#6116\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-08-13T02:01:38Z", "type": "forcePushed"}, {"oid": "c422612fc35299e28dd394ee394eaadb5960dc5d", "url": "https://github.com/zaproxy/zap-extensions/commit/c422612fc35299e28dd394ee394eaadb5960dc5d", "message": "Hidden File Finder' threshold handling\n\n* Builtin checks with content checks will alert with HIGH confidence if\nboth conditions are met (for any threshold).\n* Builtin checks that only match path (200) will alert at LOW confidence\n(only at HIGH threshold).\n* User added payloads/checks alert at LOW confidence (for any threshold)\n[User added checks are purely path based].\n\n- UnitTests updated.\n- CHANGELOG updated.\n- Help updated.\n\nFixes zaproxy/zaproxy#6116\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-08-13T02:03:32Z", "type": "commit"}, {"oid": "c422612fc35299e28dd394ee394eaadb5960dc5d", "url": "https://github.com/zaproxy/zap-extensions/commit/c422612fc35299e28dd394ee394eaadb5960dc5d", "message": "Hidden File Finder' threshold handling\n\n* Builtin checks with content checks will alert with HIGH confidence if\nboth conditions are met (for any threshold).\n* Builtin checks that only match path (200) will alert at LOW confidence\n(only at HIGH threshold).\n* User added payloads/checks alert at LOW confidence (for any threshold)\n[User added checks are purely path based].\n\n- UnitTests updated.\n- CHANGELOG updated.\n- Help updated.\n\nFixes zaproxy/zaproxy#6116\n\nSigned-off-by: kingthorin <kingthorin@users.noreply.github.com>", "committedDate": "2020-08-13T02:03:32Z", "type": "forcePushed"}]}