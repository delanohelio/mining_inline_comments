{"pr_number": 2140, "pr_title": "[CALCITE-4229] Add Util.throwAsRuntime and Util.causeOrSelf to simplify exception re-throwing", "pr_createdAt": "2020-09-04T22:22:43Z", "pr_url": "https://github.com/apache/calcite/pull/2140", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkxNDE4OQ==", "url": "https://github.com/apache/calcite/pull/2140#discussion_r483914189", "bodyText": "Why this block is not present in the other version of this function?", "author": "eolivelli", "createdAt": "2020-09-05T05:40:57Z", "path": "core/src/main/java/org/apache/calcite/util/Util.java", "diffHunk": "@@ -911,6 +912,43 @@ public static void throwIfUnchecked(Throwable throwable) {\n     }\n   }\n \n+  /**\n+   * This method rethrows input throwable as is (if its unchecked) or\n+   * wraps it with {@link RuntimeException} and throws.\n+   * <p>The typical usage would be {@code throw throwAsRuntime(...)}, where {@code throw} statement\n+   * is needed so Java compiler knows the execution stops at that line.</p>\n+   *\n+   * @param throwable input throwable\n+   * @return the method never returns, it always throws an unchecked exception\n+   */\n+  @API(since = \"1.26\", status = API.Status.EXPERIMENTAL)\n+  public static RuntimeException throwAsRuntime(Throwable throwable) {\n+    throwIfUnchecked(throwable);\n+    throw new RuntimeException(throwable);\n+  }\n+\n+  /**\n+   * This method rethrows input throwable as is (if its unchecked) with an extra message or\n+   * wraps it with {@link RuntimeException} and throws.\n+   * <p>The typical usage would be {@code throw throwAsRuntime(...)}, where {@code throw} statement\n+   * is needed so Java compiler knows the execution stops at that line.</p>\n+   *\n+   * @param throwable input throwable\n+   * @return the method never returns, it always throws an unchecked exception\n+   */\n+  @API(since = \"1.26\", status = API.Status.EXPERIMENTAL)\n+  public static RuntimeException throwAsRuntime(String message, Throwable throwable) {\n+    if (throwable instanceof RuntimeException) {\n+      throwable.addSuppressed(new Throwable(message));\n+      throw (RuntimeException) throwable;\n+    }\n+    if (throwable instanceof Error) {", "originalCommit": "046f104da0df7d1843562a98ccd85c823f860e0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkyNjE2MQ==", "url": "https://github.com/apache/calcite/pull/2140#discussion_r483926161", "bodyText": "This block is a part of throwIfUnchecked, however, here I need to call addSuppressed before the throwing.\nAn alternative implementation could be:\ntry {\n  throwIfUnchecked(throwable);\n} catch (Throwable t) {\n  // Ok, it is unchecked, so addSuppressed and rethrow\n  t.addSuppressed(new Throwable(message));\n  throwIfUnchecked(throwable);\n}\nEven though it looks like \"code reuse\", I don't like it", "author": "vlsi", "createdAt": "2020-09-05T08:17:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkxNDE4OQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "76ed50ee9463a736265c6671645678396807ad45", "url": "https://github.com/apache/calcite/commit/76ed50ee9463a736265c6671645678396807ad45", "message": "[CALCITE-4229] Add Util.throwAsRuntime and Util.causeOrSelf to simplify exception re-throwing", "committedDate": "2020-09-05T08:20:47Z", "type": "commit"}, {"oid": "76ed50ee9463a736265c6671645678396807ad45", "url": "https://github.com/apache/calcite/commit/76ed50ee9463a736265c6671645678396807ad45", "message": "[CALCITE-4229] Add Util.throwAsRuntime and Util.causeOrSelf to simplify exception re-throwing", "committedDate": "2020-09-05T08:20:47Z", "type": "forcePushed"}]}