{"pr_number": 2013, "pr_title": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "pr_createdAt": "2020-06-09T08:08:50Z", "pr_url": "https://github.com/apache/calcite/pull/2013", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMyMTE3Nw==", "url": "https://github.com/apache/calcite/pull/2013#discussion_r439321177", "bodyText": "What if it's a right Join but with Calc as the left child ?\nIf above concern is valid, please add a corresponding test.", "author": "jinxing64", "createdAt": "2020-06-12T09:49:52Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1202,8 +1202,9 @@ private JoinOnLeftCalcToJoinUnifyRule() {\n       if (joinRelType == null) {\n         return null;\n       }\n-      if (joinRelType != JoinRelType.INNER\n-          && !(joinRelType.isOuterJoin() && qInput0Cond.isAlwaysTrue())) {\n+      // If JoinType is inner-join or out-join,\n+      // Calc which is bottom join can be pulled up.\n+      if (joinRelType != JoinRelType.INNER && !joinRelType.isOuterJoin()) {", "originalCommit": "934beef56200258677b3404ba5dbaa4956fc3469", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d07410b215c46daecb5715571132737fa7447be3", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\nindex bac43eb70..0bb578ae8 100644\n--- a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n+++ b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n\n@@ -1202,9 +1202,8 @@ private JoinOnLeftCalcToJoinUnifyRule() {\n       if (joinRelType == null) {\n         return null;\n       }\n-      // If JoinType is inner-join or out-join,\n-      // Calc which is bottom join can be pulled up.\n-      if (joinRelType != JoinRelType.INNER && !joinRelType.isOuterJoin()) {\n+      // Check filter bottom join can be pulled up.\n+      if (!canPullUpFilterBottomJoin(joinRelType, qInput0Cond, null)) {\n         return null;\n       }\n       // Try pulling up MutableCalc only when Join condition references mapping.\n"}}, {"oid": "d07410b215c46daecb5715571132737fa7447be3", "url": "https://github.com/apache/calcite/commit/d07410b215c46daecb5715571132737fa7447be3", "message": "[CALCITE-3935] Materialization-Failed, LeftFilter on LeftJoin can be pulled up, such as RightFilterOnRightJoin.", "committedDate": "2020-06-21T07:03:38Z", "type": "forcePushed"}, {"oid": "d17982881b4474f9b8c27efa2caf9dbc4153f53b", "url": "https://github.com/apache/calcite/commit/d17982881b4474f9b8c27efa2caf9dbc4153f53b", "message": "[CALCITE-3935] Materialization-Failed, LeftFilter on LeftJoin can be pulled up, such as RightFilterOnRightJoin.", "committedDate": "2020-06-21T07:07:32Z", "type": "forcePushed"}, {"oid": "daec4dd50eab7ef95f27ec8333fb79b98efd8b35", "url": "https://github.com/apache/calcite/commit/daec4dd50eab7ef95f27ec8333fb79b98efd8b35", "message": "[CALCITE-3935] Materialization-Failed, LeftFilterOnLeftJoin can be pulled up, such as RightFilterOnRightJoin.", "committedDate": "2020-06-21T07:12:19Z", "type": "forcePushed"}, {"oid": "e17d6487eb60f32c6fc33ef8097a2dfde0cda282", "url": "https://github.com/apache/calcite/commit/e17d6487eb60f32c6fc33ef8097a2dfde0cda282", "message": "[CALCITE-3935] Materialization-Failed, LeftFilterOnLeftJoin can be pulled up, such as RightFilterOnRightJoin.", "committedDate": "2020-06-22T02:14:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxMzY0Mw==", "url": "https://github.com/apache/calcite/pull/2013#discussion_r446513643", "bodyText": "we do not format like this", "author": "yanlin-Lynn", "createdAt": "2020-06-27T11:09:07Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -2011,6 +2006,38 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n     return RelOptUtil.equal(desc0, rel0.rowType, desc1, rel1.rowType, litmus);\n   }\n \n+  /**\n+   * Check filter bottom join can be pull-up,\n+   * when meeting JoinOnCalc of query unify to Join of target.\n+   * Such as {@link JoinOnLeftCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnRightCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnCalcsToJoinUnifyRule} <br/>\n+   */\n+  private static boolean canPullUpFilterBottomJoin(JoinRelType joinType,\n+                                                   RexNode leftFilterRexNode,\n+                                                   RexNode rightFilterRexNode) {", "originalCommit": "e17d6487eb60f32c6fc33ef8097a2dfde0cda282", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTIzNzAxNw==", "url": "https://github.com/apache/calcite/pull/2013#discussion_r699237017", "bodyText": "ok, I format it.", "author": "wojustme", "createdAt": "2021-08-31T11:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxMzY0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5d4e8c46b937045c564c57a1777e99a3874ade92", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\nindex 362405368..2d7371fe8 100644\n--- a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n+++ b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n\n@@ -2013,7 +2081,7 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n    * {@link JoinOnRightCalcToJoinUnifyRule} <br/>\n    * {@link JoinOnCalcsToJoinUnifyRule} <br/>\n    */\n-  private static boolean canPullUpFilterBottomJoin(JoinRelType joinType,\n+  private static boolean canPullUpBottomFilterOfJoin(JoinRelType joinType,\n                                                    RexNode leftFilterRexNode,\n                                                    RexNode rightFilterRexNode) {\n     if (joinType == JoinRelType.INNER) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxMzc5OQ==", "url": "https://github.com/apache/calcite/pull/2013#discussion_r446513799", "bodyText": "Check if filter under join can be pulled up", "author": "yanlin-Lynn", "createdAt": "2020-06-27T11:11:08Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -2011,6 +2006,38 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n     return RelOptUtil.equal(desc0, rel0.rowType, desc1, rel1.rowType, litmus);\n   }\n \n+  /**\n+   * Check filter bottom join can be pull-up,", "originalCommit": "e17d6487eb60f32c6fc33ef8097a2dfde0cda282", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTIzNjU3OA==", "url": "https://github.com/apache/calcite/pull/2013#discussion_r699236578", "bodyText": "ok, thanks for your remind.", "author": "wojustme", "createdAt": "2021-08-31T11:36:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUxMzc5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5d4e8c46b937045c564c57a1777e99a3874ade92", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\nindex 362405368..2d7371fe8 100644\n--- a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n+++ b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n\n@@ -2013,7 +2081,7 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n    * {@link JoinOnRightCalcToJoinUnifyRule} <br/>\n    * {@link JoinOnCalcsToJoinUnifyRule} <br/>\n    */\n-  private static boolean canPullUpFilterBottomJoin(JoinRelType joinType,\n+  private static boolean canPullUpBottomFilterOfJoin(JoinRelType joinType,\n                                                    RexNode leftFilterRexNode,\n                                                    RexNode rightFilterRexNode) {\n     if (joinType == JoinRelType.INNER) {\n"}}, {"oid": "5d4e8c46b937045c564c57a1777e99a3874ade92", "url": "https://github.com/apache/calcite/commit/5d4e8c46b937045c564c57a1777e99a3874ade92", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up bottom filters of `Left/Right` join (xurenhe)", "committedDate": "2021-08-31T11:23:09Z", "type": "forcePushed"}, {"oid": "84372b468c424331160dbe79bddcb64db9cb1e65", "url": "https://github.com/apache/calcite/commit/84372b468c424331160dbe79bddcb64db9cb1e65", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up bottom filters of `Left/Right` join (xurenhe)", "committedDate": "2021-08-31T11:37:53Z", "type": "forcePushed"}, {"oid": "3e0668e4491249faa5ab7f85aeefdfb66d478fc9", "url": "https://github.com/apache/calcite/commit/3e0668e4491249faa5ab7f85aeefdfb66d478fc9", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "committedDate": "2021-08-31T12:10:37Z", "type": "forcePushed"}, {"oid": "f2600f98ded3eaaa1e4c8bab74edd994518c7784", "url": "https://github.com/apache/calcite/commit/f2600f98ded3eaaa1e4c8bab74edd994518c7784", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "committedDate": "2021-08-31T12:15:01Z", "type": "forcePushed"}, {"oid": "e13570ba745d6b808a63e70d8a5f9f7833b376e1", "url": "https://github.com/apache/calcite/commit/e13570ba745d6b808a63e70d8a5f9f7833b376e1", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "committedDate": "2021-09-02T12:00:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjc3NDUyMw==", "url": "https://github.com/apache/calcite/pull/2013#discussion_r706774523", "bodyText": "You should refine this note.", "author": "yanlin-Lynn", "createdAt": "2021-09-12T07:09:22Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1388,16 +1388,11 @@ private JoinOnCalcsToJoinUnifyRule() {\n       final RexBuilder rexBuilder = call.getCluster().getRexBuilder();\n \n       // Try pulling up MutableCalc only when:", "originalCommit": "e13570ba745d6b808a63e70d8a5f9f7833b376e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2c39c46da146ebea5a2c859be21f7e0b1eb02ed", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\nindex 2b569ebee..0b58816a0 100644\n--- a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n+++ b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n\n@@ -1387,11 +1383,12 @@ private JoinOnCalcsToJoinUnifyRule() {\n \n       final RexBuilder rexBuilder = call.getCluster().getRexBuilder();\n \n-      // Try pulling up MutableCalc only when:\n+      // Check whether is same join type.\n       final JoinRelType joinRelType = sameJoinType(query.joinType, target.joinType);\n       if (joinRelType == null) {\n         return null;\n       }\n+      // Check if filter under join can be pulled up.\n       if (!canPullUpFilterUnderJoin(joinRelType, qInput0Cond, qInput1Cond)) {\n         return null;\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjc3NDg1OA==", "url": "https://github.com/apache/calcite/pull/2013#discussion_r706774858", "bodyText": "Check if filter under join can be pulled up, keep the same with the note for this method.", "author": "yanlin-Lynn", "createdAt": "2021-09-12T07:12:14Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1303,8 +1303,8 @@ private JoinOnRightCalcToJoinUnifyRule() {\n       if (joinRelType == null) {\n         return null;\n       }\n-      if (joinRelType != JoinRelType.INNER\n-          && !(joinRelType.isOuterJoin() && qInput1Cond.isAlwaysTrue())) {\n+      // Check filter bottom join can be pulled up.", "originalCommit": "e13570ba745d6b808a63e70d8a5f9f7833b376e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2c39c46da146ebea5a2c859be21f7e0b1eb02ed", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\nindex 2b569ebee..0b58816a0 100644\n--- a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n+++ b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n\n@@ -1296,14 +1294,12 @@ private JoinOnRightCalcToJoinUnifyRule() {\n \n       final RexBuilder rexBuilder = call.getCluster().getRexBuilder();\n \n-      // Try pulling up MutableCalc only when:\n-      // 1. it's inner join.\n-      // 2. it's outer join but no filtering condition from MutableCalc.\n+      // Check whether is same join type.\n       final JoinRelType joinRelType = sameJoinType(query.joinType, target.joinType);\n       if (joinRelType == null) {\n         return null;\n       }\n-      // Check filter bottom join can be pulled up.\n+      // Check if filter under join can be pulled up.\n       if (!canPullUpFilterUnderJoin(joinRelType, null, qInput1Cond)) {\n         return null;\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjc3NTQxMQ==", "url": "https://github.com/apache/calcite/pull/2013#discussion_r706775411", "bodyText": "Suggest you write like this.\nif (joinType == JoinRelType.LEFT) && (rightFilterRexNode == null || rightFilterRexNode.isAlwaysTrue()) {\n  return true;\n}", "author": "yanlin-Lynn", "createdAt": "2021-09-12T07:17:15Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -2083,6 +2078,38 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n     return RelOptUtil.equal(desc0, rel0.rowType, desc1, rel1.rowType, litmus);\n   }\n \n+  /**\n+   * Check if filter under join can be pulled up,\n+   * when meeting JoinOnCalc of query unify to Join of target.\n+   * Such as {@link JoinOnLeftCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnRightCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnCalcsToJoinUnifyRule} <br/>\n+   */\n+  private static boolean canPullUpFilterUnderJoin(JoinRelType joinType,\n+                                                  @Nullable RexNode leftFilterRexNode,\n+                                                  @Nullable RexNode rightFilterRexNode) {\n+    if (joinType == JoinRelType.INNER) {\n+      return true;\n+    }\n+    if (joinType == JoinRelType.LEFT) {\n+      if (rightFilterRexNode == null || rightFilterRexNode.isAlwaysTrue()) {", "originalCommit": "e13570ba745d6b808a63e70d8a5f9f7833b376e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2c39c46da146ebea5a2c859be21f7e0b1eb02ed", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\nindex 2b569ebee..0b58816a0 100644\n--- a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n+++ b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n\n@@ -2091,21 +2088,17 @@ private static boolean canPullUpFilterUnderJoin(JoinRelType joinType,\n     if (joinType == JoinRelType.INNER) {\n       return true;\n     }\n-    if (joinType == JoinRelType.LEFT) {\n-      if (rightFilterRexNode == null || rightFilterRexNode.isAlwaysTrue()) {\n+    if (joinType == JoinRelType.LEFT\n+        && (rightFilterRexNode == null || rightFilterRexNode.isAlwaysTrue())) {\n         return true;\n-      }\n     }\n-    if (joinType == JoinRelType.RIGHT) {\n-      if (leftFilterRexNode == null || leftFilterRexNode.isAlwaysTrue()) {\n+    if (joinType == JoinRelType.RIGHT\n+        && (leftFilterRexNode == null || leftFilterRexNode.isAlwaysTrue())) {\n         return true;\n-      }\n     }\n-    if (joinType == JoinRelType.FULL) {\n-      if ((rightFilterRexNode == null || rightFilterRexNode.isAlwaysTrue())\n-          && (leftFilterRexNode == null || leftFilterRexNode.isAlwaysTrue())) {\n-        return true;\n-      }\n+    if (joinType == JoinRelType.FULL\n+        && ((rightFilterRexNode == null || rightFilterRexNode.isAlwaysTrue())\n+        && (leftFilterRexNode == null || leftFilterRexNode.isAlwaysTrue()))) {\n     }\n     return false;\n   }\n"}}, {"oid": "a2c39c46da146ebea5a2c859be21f7e0b1eb02ed", "url": "https://github.com/apache/calcite/commit/a2c39c46da146ebea5a2c859be21f7e0b1eb02ed", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "committedDate": "2021-09-12T13:09:51Z", "type": "forcePushed"}, {"oid": "568025202ccd5da20a95c49e4388f8ff6a46982f", "url": "https://github.com/apache/calcite/commit/568025202ccd5da20a95c49e4388f8ff6a46982f", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "committedDate": "2021-09-12T13:19:59Z", "type": "forcePushed"}, {"id": "PRRC_kwDOAUNjNM4qMiXI", "url": "https://github.com/apache/calcite/pull/2013#discussion_r707929544", "bodyText": "fix this indentation please.", "author": "yanlin-Lynn", "createdAt": "2021-09-14T05:46:59Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -2083,6 +2075,35 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n     return RelOptUtil.equal(desc0, rel0.rowType, desc1, rel1.rowType, litmus);\n   }\n \n+  /**\n+   * Check if filter under join can be pulled up,\n+   * when meeting JoinOnCalc of query unify to Join of target.\n+   * Such as {@link JoinOnLeftCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnRightCalcToJoinUnifyRule} <br/>\n+   * {@link JoinOnCalcsToJoinUnifyRule} <br/>\n+   */\n+  private static boolean canPullUpFilterUnderJoin(JoinRelType joinType,\n+                                                  @Nullable RexNode leftFilterRexNode,\n+                                                  @Nullable RexNode rightFilterRexNode) {", "originalCommit": "568025202ccd5da20a95c49e4388f8ff6a46982f", "replyToReviewId": null, "replies": [{"id": "PRRC_kwDOAUNjNM4qUBjV", "url": "https://github.com/apache/calcite/pull/2013#discussion_r709892309", "bodyText": "@yanlin-Lynn\nThanks for reminding.\nPlease review again.", "author": "wojustme", "createdAt": "2021-09-16T08:17:05Z", "replyToReviewId": "PRRC_kwDOAUNjNM4qMiXI"}], "type": "inlineReview", "revised_code": {"commit": "bc3a87c50e66c382f31e82fe7dafa4adc0b8ab49", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\nindex 9b70c1f86..dbc358e4d 100644\n--- a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n+++ b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n\n@@ -2083,8 +2083,7 @@ public static boolean equalType(String desc0, MutableRel rel0, String desc1,\n    * {@link JoinOnCalcsToJoinUnifyRule} <br/>\n    */\n   private static boolean canPullUpFilterUnderJoin(JoinRelType joinType,\n-                                                  @Nullable RexNode leftFilterRexNode,\n-                                                  @Nullable RexNode rightFilterRexNode) {\n+      @Nullable RexNode leftFilterRexNode, @Nullable RexNode rightFilterRexNode) {\n     if (joinType == JoinRelType.INNER) {\n       return true;\n     }\n"}}, {"oid": "bc3a87c50e66c382f31e82fe7dafa4adc0b8ab49", "url": "https://github.com/apache/calcite/commit/bc3a87c50e66c382f31e82fe7dafa4adc0b8ab49", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "committedDate": "2021-09-16T08:16:15Z", "type": "forcePushed"}, {"oid": "52e12d5947d98ab714e1495e66bb75b24610a9f7", "url": "https://github.com/apache/calcite/commit/52e12d5947d98ab714e1495e66bb75b24610a9f7", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "committedDate": "2021-09-16T08:27:26Z", "type": "forcePushed"}, {"oid": "9036e804747302a7be0e33d14f9132e251baac0b", "url": "https://github.com/apache/calcite/commit/9036e804747302a7be0e33d14f9132e251baac0b", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "committedDate": "2021-09-16T08:53:31Z", "type": "forcePushed"}, {"oid": "ef33f382f9429b0ae2c011a6726f8fa46191eb15", "url": "https://github.com/apache/calcite/commit/ef33f382f9429b0ae2c011a6726f8fa46191eb15", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "committedDate": "2021-09-16T09:26:42Z", "type": "forcePushed"}, {"oid": "a8279a51d7b5046ff1dc14215de5f8ebc1f672f6", "url": "https://github.com/apache/calcite/commit/a8279a51d7b5046ff1dc14215de5f8ebc1f672f6", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "committedDate": "2021-09-18T12:49:49Z", "type": "commit"}, {"oid": "a8279a51d7b5046ff1dc14215de5f8ebc1f672f6", "url": "https://github.com/apache/calcite/commit/a8279a51d7b5046ff1dc14215de5f8ebc1f672f6", "message": "[CALCITE-3935] Enhance Join-Materialization, support to pull-up filters under join of left or right (xurenhe)", "committedDate": "2021-09-18T12:49:49Z", "type": "forcePushed"}]}