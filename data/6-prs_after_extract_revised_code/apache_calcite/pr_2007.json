{"pr_number": 2007, "pr_title": "[CALCITE-4049] Reduce the time complexity of getting shortest distances", "pr_createdAt": "2020-06-08T06:57:38Z", "pr_url": "https://github.com/apache/calcite/pull/2007", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0NjAyMg==", "url": "https://github.com/apache/calcite/pull/2007#discussion_r436546022", "bodyText": "(minor) Maybe adding a unit test for the same node scenario?\nassertEquals(0, frozenGraph.getShortestDistance(\"B\", \"B\"));", "author": "rubenada", "createdAt": "2020-06-08T08:52:02Z", "path": "core/src/test/java/org/apache/calcite/util/graph/DirectedGraphTest.java", "diffHunk": "@@ -215,6 +215,34 @@\n     assertEquals(\"[D, E]\", frozenGraph.getShortestPath(\"D\", \"E\").toString());\n   }\n \n+  @Test void testDistances() {\n+    //       B -> C\n+    //      /      \\\n+    //     A        E\n+    //      \\      /\n+    //       D -->\n+    final DefaultDirectedGraph<String, DefaultEdge> graph =\n+        DefaultDirectedGraph.create();\n+    graph.addVertex(\"A\");\n+    graph.addVertex(\"B\");\n+    graph.addVertex(\"C\");\n+    graph.addVertex(\"D\");\n+    graph.addVertex(\"E\");\n+    graph.addVertex(\"F\");\n+    graph.addEdge(\"A\", \"B\");\n+    graph.addEdge(\"B\", \"C\");\n+    graph.addEdge(\"A\", \"D\");\n+    graph.addEdge(\"D\", \"E\");\n+    graph.addEdge(\"C\", \"E\");\n+    final Graphs.FrozenGraph<String, DefaultEdge> frozenGraph =\n+        Graphs.makeImmutable(graph);\n+    assertEquals(1, frozenGraph.getShortestDistance(\"A\", \"B\"));", "originalCommit": "143b539e4cc1ff3a77bf87ed4988d1c220aaa4b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1MDAzMg==", "url": "https://github.com/apache/calcite/pull/2007#discussion_r436550032", "bodyText": "Done. Thank you for the good suggestion.", "author": "liyafan82", "createdAt": "2020-06-08T08:58:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0NjAyMg=="}], "type": "inlineReview", "revised_code": {"commit": "80067b5b67f8ced064f1c7006b996e0966ea3173", "chunk": "diff --git a/core/src/test/java/org/apache/calcite/util/graph/DirectedGraphTest.java b/core/src/test/java/org/apache/calcite/util/graph/DirectedGraphTest.java\nindex 0a48512b6..ebc647b5d 100644\n--- a/core/src/test/java/org/apache/calcite/util/graph/DirectedGraphTest.java\n+++ b/core/src/test/java/org/apache/calcite/util/graph/DirectedGraphTest.java\n\n@@ -241,6 +241,7 @@\n     assertEquals(-1, frozenGraph.getShortestDistance(\"B\", \"A\"));\n     assertEquals(-1, frozenGraph.getShortestDistance(\"D\", \"C\"));\n     assertEquals(1, frozenGraph.getShortestDistance(\"D\", \"E\"));\n+    assertEquals(0, frozenGraph.getShortestDistance(\"B\", \"B\"));\n   }\n \n   /** Unit test for {@link org.apache.calcite.util.graph.CycleDetector}. */\n"}}, {"oid": "80067b5b67f8ced064f1c7006b996e0966ea3173", "url": "https://github.com/apache/calcite/commit/80067b5b67f8ced064f1c7006b996e0966ea3173", "message": "[CALCITE-4049] Reduce the time complexity of getting shortest distances", "committedDate": "2020-06-08T08:57:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU3MzYwMw==", "url": "https://github.com/apache/calcite/pull/2007#discussion_r436573603", "bodyText": "May I suggest another formatting to make it clearer that all edges are directed? e.g.:\n// A+-->B+-->C+-->E\n// +              ^\n// |              |\n// +----->D+------+", "author": "rubenada", "createdAt": "2020-06-08T09:40:02Z", "path": "core/src/test/java/org/apache/calcite/util/graph/DirectedGraphTest.java", "diffHunk": "@@ -215,6 +215,35 @@\n     assertEquals(\"[D, E]\", frozenGraph.getShortestPath(\"D\", \"E\").toString());\n   }\n \n+  @Test void testDistances() {\n+    //       B -> C", "originalCommit": "80067b5b67f8ced064f1c7006b996e0966ea3173", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY0Mzg1Mg==", "url": "https://github.com/apache/calcite/pull/2007#discussion_r436643852", "bodyText": "Sounds reasonable. I have revised the code accordingly. Please check it.", "author": "liyafan82", "createdAt": "2020-06-08T12:05:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU3MzYwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY1Mjk5MQ==", "url": "https://github.com/apache/calcite/pull/2007#discussion_r436652991", "bodyText": "thanks, looks good.", "author": "rubenada", "createdAt": "2020-06-08T12:23:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU3MzYwMw=="}], "type": "inlineReview", "revised_code": {"commit": "dceb5a9447bfadc199b24a295e82b56bd3e429dd", "chunk": "diff --git a/core/src/test/java/org/apache/calcite/util/graph/DirectedGraphTest.java b/core/src/test/java/org/apache/calcite/util/graph/DirectedGraphTest.java\nindex ebc647b5d..87a4f4e21 100644\n--- a/core/src/test/java/org/apache/calcite/util/graph/DirectedGraphTest.java\n+++ b/core/src/test/java/org/apache/calcite/util/graph/DirectedGraphTest.java\n\n@@ -216,24 +229,7 @@\n   }\n \n   @Test void testDistances() {\n-    //       B -> C\n-    //      /      \\\n-    //     A        E\n-    //      \\      /\n-    //       D -->\n-    final DefaultDirectedGraph<String, DefaultEdge> graph =\n-        DefaultDirectedGraph.create();\n-    graph.addVertex(\"A\");\n-    graph.addVertex(\"B\");\n-    graph.addVertex(\"C\");\n-    graph.addVertex(\"D\");\n-    graph.addVertex(\"E\");\n-    graph.addVertex(\"F\");\n-    graph.addEdge(\"A\", \"B\");\n-    graph.addEdge(\"B\", \"C\");\n-    graph.addEdge(\"A\", \"D\");\n-    graph.addEdge(\"D\", \"E\");\n-    graph.addEdge(\"C\", \"E\");\n+    final DefaultDirectedGraph<String, DefaultEdge> graph = createDag1();\n     final Graphs.FrozenGraph<String, DefaultEdge> frozenGraph =\n         Graphs.makeImmutable(graph);\n     assertEquals(1, frozenGraph.getShortestDistance(\"A\", \"B\"));\n"}}, {"oid": "dceb5a9447bfadc199b24a295e82b56bd3e429dd", "url": "https://github.com/apache/calcite/commit/dceb5a9447bfadc199b24a295e82b56bd3e429dd", "message": "[CALCITE-4049] Reduce the time complexity of getting shortest distances", "committedDate": "2020-06-08T12:03:28Z", "type": "commit"}, {"oid": "dceb5a9447bfadc199b24a295e82b56bd3e429dd", "url": "https://github.com/apache/calcite/commit/dceb5a9447bfadc199b24a295e82b56bd3e429dd", "message": "[CALCITE-4049] Reduce the time complexity of getting shortest distances", "committedDate": "2020-06-08T12:03:28Z", "type": "forcePushed"}]}