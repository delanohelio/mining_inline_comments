{"pr_number": 2243, "pr_title": "Fix grammatical errors in TopDownRuleDriver/TopDownRuleQueue/RuleDriver/VolcanoPlanner", "pr_createdAt": "2020-11-04T02:51:10Z", "pr_url": "https://github.com/apache/calcite/pull/2243", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MDIyNQ==", "url": "https://github.com/apache/calcite/pull/2243#discussion_r517080225", "bodyText": "It would be helpful to add some links to the passThrough and derive operations.", "author": "liyafan82", "createdAt": "2020-11-04T03:37:24Z", "path": "core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java", "diffHunk": "@@ -69,8 +69,8 @@\n   private GeneratorTask applying = null;\n \n   /**\n-   * RelNodes that are generated by passThrough or derive\n-   * these nodes will not takes part in another passThrough or derive.\n+   * RelNodes that are generated by passThrough or derive.\n+   * These nodes will not take part in another passThrough or derive.", "originalCommit": "291945be7ea19948dbb5493d3fc7f7d4a9d5025b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NTE0Nw==", "url": "https://github.com/apache/calcite/pull/2243#discussion_r517085147", "bodyText": "Sounds reasonable.", "author": "chunweilei", "createdAt": "2020-11-04T04:00:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MDIyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "2c306b47e24bf01de420120079d3c29635925d07", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\nindex dce955544..d4a43b9db 100644\n--- a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n+++ b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n\n@@ -69,8 +69,9 @@\n   private GeneratorTask applying = null;\n \n   /**\n-   * RelNodes that are generated by passThrough or derive.\n-   * These nodes will not take part in another passThrough or derive.\n+   * RelNodes that are generated by {@link org.apache.calcite.rel.PhysicalNode#passThrough}\n+   * or {@link org.apache.calcite.rel.PhysicalNode#derive}. These nodes will not take part\n+   * in another passThrough or derive.\n    */\n   private Set<RelNode> passThroughCache = new HashSet<>();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MTQ5OQ==", "url": "https://github.com/apache/calcite/pull/2243#discussion_r517081499", "bodyText": "Rel -> RelNode?", "author": "liyafan82", "createdAt": "2020-11-04T03:43:33Z", "path": "core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java", "diffHunk": "@@ -170,27 +170,27 @@ private void clearProcessed(RelSet set) {\n     }\n   }\n \n-  // a callback invoked when a RelNode is going to be added into a RelSubset,\n-  // either by Register or Reregister. The task driver should need to schedule\n-  // tasks for the new nodes.\n+  // A callback invoked when a RelNode is going to be added into a RelSubset,\n+  // either by Register or Reregister. The task driver should schedule tasks\n+  // for the new nodes.\n   @Override public void onProduce(RelNode node, RelSubset subset) {\n \n-    // if the RelNode is added to another RelSubset, just ignore it.\n-    // It should be schedule in the later OptimizeGroup task\n+    // If the RelNode is added to another RelSubset, just ignore it.\n+    // It should be scheduled in the later OptimizeGroup task.\n     if (applying == null || subset.set\n         != VolcanoPlanner.equivRoot(applying.group().set)) {\n       return;\n     }\n \n-    // extra callback from each task\n+    // Extra callback from each task.\n     if (!applying.onProduce(node)) {\n       return;\n     }\n \n     if (!planner.isLogical(node)) {\n       // For a physical node, schedule tasks to optimize its inputs.\n       // The upper bound depends on all optimizing RelSubsets that this Rel belongs to.", "originalCommit": "291945be7ea19948dbb5493d3fc7f7d4a9d5025b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NTA5Nw==", "url": "https://github.com/apache/calcite/pull/2243#discussion_r517085097", "bodyText": "Done.", "author": "chunweilei", "createdAt": "2020-11-04T04:00:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MTQ5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "2c306b47e24bf01de420120079d3c29635925d07", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\nindex dce955544..d4a43b9db 100644\n--- a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n+++ b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n\n@@ -189,7 +190,7 @@ private void clearProcessed(RelSet set) {\n \n     if (!planner.isLogical(node)) {\n       // For a physical node, schedule tasks to optimize its inputs.\n-      // The upper bound depends on all optimizing RelSubsets that this Rel belongs to.\n+      // The upper bound depends on all optimizing RelSubsets that this RelNode belongs to.\n       // If there are optimizing subsets that come from the same RelSet,\n       // invoke the passThrough method to generate a candidate for that Subset.\n       RelSubset optimizingGroup = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MjM2MQ==", "url": "https://github.com/apache/calcite/pull/2243#discussion_r517082361", "bodyText": "an -> a", "author": "liyafan82", "createdAt": "2020-11-04T03:47:27Z", "path": "core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java", "diffHunk": "@@ -311,31 +311,31 @@ default boolean onProduce(RelNode node) {\n       }\n \n       if (group.taskState != null && upperBound.isLe(group.upperBound)) {\n-        // either this group failed to optimize before or it is a ring\n+        // Either this group failed to optimize before or it is a ring.\n         return;\n       }\n \n       group.startOptimize(upperBound);\n \n-      // cannot decide an actual lower bound before MExpr are fully explored\n-      // so delay the lower bound checking\n+      // Cannot decide an actual lower bound before MExpr are fully explored.\n+      // So delay the lower bound check.\n \n-      // a gate keeper to update context\n+      // A gate keeper to update context.\n       tasks.push(new GroupOptimized(group));\n \n-      // optimize mExprs in group\n+      // Optimize mExprs in group.\n       List<RelNode> physicals = new ArrayList<>();\n       for (RelNode rel : group.set.rels) {\n         if (planner.isLogical(rel)) {\n           tasks.push(new OptimizeMExpr(rel, group, false));\n         } else if (rel.isEnforcer()) {\n-          // Enforcers have lower priority than other physical nodes\n+          // Enforcers have lower priority than other physical nodes.\n           physicals.add(0, rel);\n         } else {\n           physicals.add(rel);\n         }\n       }\n-      // always apply O_INPUTS first so as to get an valid upper bound\n+      // Always apply O_INPUTS first so as to get an valid upper bound.", "originalCommit": "291945be7ea19948dbb5493d3fc7f7d4a9d5025b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NTA3MA==", "url": "https://github.com/apache/calcite/pull/2243#discussion_r517085070", "bodyText": "Done.", "author": "chunweilei", "createdAt": "2020-11-04T04:00:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MjM2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2c306b47e24bf01de420120079d3c29635925d07", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\nindex dce955544..d4a43b9db 100644\n--- a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n+++ b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n\n@@ -335,7 +336,7 @@ default boolean onProduce(RelNode node) {\n           physicals.add(rel);\n         }\n       }\n-      // Always apply O_INPUTS first so as to get an valid upper bound.\n+      // Always apply O_INPUTS first so as to get a valid upper bound.\n       for (RelNode rel : physicals) {\n         Task task = getOptimizeInputTask(rel, group);\n         if (task != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MzI4Ng==", "url": "https://github.com/apache/calcite/pull/2243#discussion_r517083286", "bodyText": "Change this to a JavaDoc, and \"Check\" -> \"Checks\"?", "author": "liyafan82", "createdAt": "2020-11-04T03:51:52Z", "path": "core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java", "diffHunk": "@@ -590,7 +593,7 @@ private RelNode convert(RelNode rel, RelSubset group) {\n     return null;\n   }\n \n-  // check whether a node's lower bound is less than a RelSubset's upper bound\n+  // Check whether a node's lower bound is less than a RelSubset's upper bound.", "originalCommit": "291945be7ea19948dbb5493d3fc7f7d4a9d5025b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c306b47e24bf01de420120079d3c29635925d07", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\nindex dce955544..d4a43b9db 100644\n--- a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n+++ b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n\n@@ -593,7 +596,9 @@ private RelNode convert(RelNode rel, RelSubset group) {\n     return null;\n   }\n \n-  // Check whether a node's lower bound is less than a RelSubset's upper bound.\n+  /**\n+   * Checks whether a node's lower bound is less than a RelSubset's upper bound.\n+   */\n   private boolean checkLowerBound(RelNode rel, RelSubset group) {\n     RelOptCost upperBound = group.upperBound;\n     if (upperBound.isInfinite()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4MzQ2MQ==", "url": "https://github.com/apache/calcite/pull/2243#discussion_r517083461", "bodyText": "simplify -> simplifies", "author": "liyafan82", "createdAt": "2020-11-04T03:52:44Z", "path": "core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java", "diffHunk": "@@ -601,7 +604,7 @@ private boolean checkLowerBound(RelNode rel, RelSubset group) {\n   }\n \n   /**\n-   * A task that optimize input for physical nodes who has only one input.\n+   * A task that optimizes input for physical nodes who has only one input.\n    * This task can be replaced by OptimizeInputs but simplify lots of logic.", "originalCommit": "291945be7ea19948dbb5493d3fc7f7d4a9d5025b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c306b47e24bf01de420120079d3c29635925d07", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\nindex dce955544..d4a43b9db 100644\n--- a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n+++ b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n\n@@ -605,7 +610,7 @@ private boolean checkLowerBound(RelNode rel, RelSubset group) {\n \n   /**\n    * A task that optimizes input for physical nodes who has only one input.\n-   * This task can be replaced by OptimizeInputs but simplify lots of logic.\n+   * This task can be replaced by OptimizeInputs but simplifies lots of logic.\n    */\n   private class OptimizeInput1 implements Task {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4Mzg1Mg==", "url": "https://github.com/apache/calcite/pull/2243#discussion_r517083852", "bodyText": "Optimize -> Optimizing", "author": "liyafan82", "createdAt": "2020-11-04T03:54:39Z", "path": "core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java", "diffHunk": "@@ -768,22 +772,22 @@ private boolean checkLowerBound(RelNode rel, RelSubset group) {\n \n     @Override public void perform() {\n       if (input != parent.getInput(i)) {\n-        // The input has chnaged. So reschedule the optimize task.\n+        // The input has changed. So reschedule the optimize task.\n         input = (RelSubset) parent.getInput(i);\n         tasks.push(this);\n         tasks.push(new OptimizeGroup(input, upper));\n         return;\n       }\n \n-      // Optimize input completed. Update the context for other inputs\n+      // Optimize input completed. Update the context for other inputs.", "originalCommit": "291945be7ea19948dbb5493d3fc7f7d4a9d5025b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c306b47e24bf01de420120079d3c29635925d07", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\nindex dce955544..d4a43b9db 100644\n--- a/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n+++ b/core/src/main/java/org/apache/calcite/plan/volcano/TopDownRuleDriver.java\n\n@@ -779,7 +784,7 @@ private boolean checkLowerBound(RelNode rel, RelSubset group) {\n         return;\n       }\n \n-      // Optimize input completed. Update the context for other inputs.\n+      // Optimizing input completed. Update the context for other inputs.\n       if (context == null) {\n         // If there is no other input, just return (no need to optimize other inputs).\n         return;\n"}}, {"oid": "2c306b47e24bf01de420120079d3c29635925d07", "url": "https://github.com/apache/calcite/commit/2c306b47e24bf01de420120079d3c29635925d07", "message": "address comments", "committedDate": "2020-11-04T04:01:12Z", "type": "forcePushed"}, {"oid": "0b3fcd2f1d26f5937af3755b8fd81d584dac6021", "url": "https://github.com/apache/calcite/commit/0b3fcd2f1d26f5937af3755b8fd81d584dac6021", "message": "Fix grammatical errors in TopDownRuleDriver/TopDownRuleQueue/RuleDriver/VolcanoPlanner", "committedDate": "2020-11-06T02:56:43Z", "type": "commit"}, {"oid": "0b3fcd2f1d26f5937af3755b8fd81d584dac6021", "url": "https://github.com/apache/calcite/commit/0b3fcd2f1d26f5937af3755b8fd81d584dac6021", "message": "Fix grammatical errors in TopDownRuleDriver/TopDownRuleQueue/RuleDriver/VolcanoPlanner", "committedDate": "2020-11-06T02:56:43Z", "type": "forcePushed"}]}