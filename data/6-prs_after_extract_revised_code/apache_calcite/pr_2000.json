{"pr_number": 2000, "pr_title": "[CALCITE-4040] An aggregate function that does not support roll up throws an exception when it is rolled up", "pr_createdAt": "2020-06-03T11:11:28Z", "pr_url": "https://github.com/apache/calcite/pull/2000", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2NjcwNQ==", "url": "https://github.com/apache/calcite/pull/2000#discussion_r434966705", "bodyText": "How about some doc here to explain why matching should fail.", "author": "jinxing64", "createdAt": "2020-06-04T03:07:16Z", "path": "core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java", "diffHunk": "@@ -410,6 +410,18 @@\n     sql(mv, query).noMat();\n   }\n ", "originalCommit": "02e8ad91d14d32c088b56d51f094ce0adee0e0d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2708d2c8cec33078749af8347b102aabd591af92", "chunk": "diff --git a/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java b/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java\nindex effc30337..3b239ac41 100644\n--- a/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java\n+++ b/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java\n\n@@ -410,6 +410,9 @@\n     sql(mv, query).noMat();\n   }\n \n+  /**\n+   * stddev_pop aggregate function does not support roll up\n+   */\n   @Test public void testSqlAggFunctionRollup() {\n     String mv = \"\"\n         + \"select \\\"empid\\\", stddev_pop(\\\"deptno\\\") \"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2NzAwMQ==", "url": "https://github.com/apache/calcite/pull/2000#discussion_r434967001", "bodyText": "How about some doc to explain why matching should fail when the function doesn't support roll-up.", "author": "jinxing64", "createdAt": "2020-06-04T03:08:32Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1899,8 +1899,12 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n         if (i < 0) {\n           return null;\n         }\n+        SqlAggFunction aggFunction = getRollup(aggregateCall.getAggregation());", "originalCommit": "02e8ad91d14d32c088b56d51f094ce0adee0e0d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2NzUwNA==", "url": "https://github.com/apache/calcite/pull/2000#discussion_r434967504", "bodyText": "Mark it as final", "author": "jinxing64", "createdAt": "2020-06-04T03:10:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk2NzAwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "2708d2c8cec33078749af8347b102aabd591af92", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\nindex c47f3a7e3..0b087ab7c 100644\n--- a/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n+++ b/core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java\n\n@@ -1899,7 +1899,9 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n         if (i < 0) {\n           return null;\n         }\n-        SqlAggFunction aggFunction = getRollup(aggregateCall.getAggregation());\n+        // When an SqlAggFunction does not support roll up, it will return null, which means that\n+        // it cannot do secondary aggregation and the materialization recognition will fail.\n+        final SqlAggFunction aggFunction = getRollup(aggregateCall.getAggregation());\n         if (aggFunction == null) {\n           return null;\n         }\n"}}, {"oid": "2708d2c8cec33078749af8347b102aabd591af92", "url": "https://github.com/apache/calcite/commit/2708d2c8cec33078749af8347b102aabd591af92", "message": "[CALCITE-4040] Nonstandard SqlAggFunction rollup Exception (Xu Zhaohui)", "committedDate": "2020-06-04T06:28:57Z", "type": "forcePushed"}, {"oid": "489e3b608d89626c4759e938b62b176847d962dd", "url": "https://github.com/apache/calcite/commit/489e3b608d89626c4759e938b62b176847d962dd", "message": "[CALCITE-4040] Nonstandard SqlAggFunction rollup Exception (Xu Zhaohui)", "committedDate": "2020-06-04T06:39:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyMDE5OA==", "url": "https://github.com/apache/calcite/pull/2000#discussion_r435120198", "bodyText": "In current MaterializedViewSubstitutionVisitorTest.java, there's already an testAggregateRollUp. How about rename this as testSqlAggFunctionRollup2 and put it after testAggregateRollUp ?", "author": "jinxing64", "createdAt": "2020-06-04T09:32:32Z", "path": "core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java", "diffHunk": "@@ -410,6 +410,21 @@\n     sql(mv, query).noMat();\n   }\n \n+  /**\n+   * stddev_pop aggregate function does not support roll up.\n+   */\n+  @Test public void testSqlAggFunctionRollup() {", "originalCommit": "489e3b608d89626c4759e938b62b176847d962dd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6bb083a605928df6a625e2c6400006a6d996d0e4", "chunk": "diff --git a/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java b/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java\nindex 6afd829f7..33fdb2232 100644\n--- a/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java\n+++ b/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java\n\n@@ -410,21 +410,6 @@\n     sql(mv, query).noMat();\n   }\n \n-  /**\n-   * stddev_pop aggregate function does not support roll up.\n-   */\n-  @Test public void testSqlAggFunctionRollup() {\n-    String mv = \"\"\n-        + \"select \\\"empid\\\", stddev_pop(\\\"deptno\\\") \"\n-        + \"from \\\"emps\\\" \"\n-        + \"group by \\\"empid\\\", \\\"deptno\\\"\";\n-    String query = \"\"\n-        + \"select \\\"empid\\\", stddev_pop(\\\"deptno\\\") \"\n-        + \"from \\\"emps\\\" \"\n-        + \"group by \\\"empid\\\"\";\n-    sql(mv, query).noMat();\n-  }\n-\n   /**\n    * There will be a compensating Project added after matching of the Aggregate.\n    * This rule targets to test if the Calc can be handled.\n"}}, {"oid": "6bb083a605928df6a625e2c6400006a6d996d0e4", "url": "https://github.com/apache/calcite/commit/6bb083a605928df6a625e2c6400006a6d996d0e4", "message": "[CALCITE-4040] Nonstandard SqlAggFunction rollup Exception (Xu Zhaohui)", "committedDate": "2020-06-04T09:58:48Z", "type": "forcePushed"}, {"oid": "38ba704427fadf365f75769a42045a7114d2e9e0", "url": "https://github.com/apache/calcite/commit/38ba704427fadf365f75769a42045a7114d2e9e0", "message": "[CALCITE-4040] An aggregate function that does not support roll up throws an exception when it is rolled up (Xu Zhaohui)", "committedDate": "2020-06-04T10:08:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0Mjg0NQ==", "url": "https://github.com/apache/calcite/pull/2000#discussion_r436242845", "bodyText": "public is not needed. Please remove.", "author": "jinxing64", "createdAt": "2020-06-06T06:13:35Z", "path": "core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java", "diffHunk": "@@ -509,6 +509,21 @@\n         .ok();\n   }\n \n+  /**\n+   * stddev_pop aggregate function does not support roll up.\n+   */\n+  @Test public void testAggregateRollUp2() {", "originalCommit": "38ba704427fadf365f75769a42045a7114d2e9e0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "333a3e4c783f5ebae02cccbfbf04afe49198e3a7", "chunk": "diff --git a/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java b/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java\nindex b364bf91e..e599382bf 100644\n--- a/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java\n+++ b/core/src/test/java/org/apache/calcite/test/MaterializedViewSubstitutionVisitorTest.java\n\n@@ -512,12 +512,12 @@\n   /**\n    * stddev_pop aggregate function does not support roll up.\n    */\n-  @Test public void testAggregateRollUp2() {\n-    String mv = \"\"\n+  @Test void testAggregateRollUp2() {\n+    final String mv = \"\"\n         + \"select \\\"empid\\\", stddev_pop(\\\"deptno\\\") \"\n         + \"from \\\"emps\\\" \"\n         + \"group by \\\"empid\\\", \\\"deptno\\\"\";\n-    String query = \"\"\n+    final String query = \"\"\n         + \"select \\\"empid\\\", stddev_pop(\\\"deptno\\\") \"\n         + \"from \\\"emps\\\" \"\n         + \"group by \\\"empid\\\"\";\n"}}, {"oid": "333a3e4c783f5ebae02cccbfbf04afe49198e3a7", "url": "https://github.com/apache/calcite/commit/333a3e4c783f5ebae02cccbfbf04afe49198e3a7", "message": "[CALCITE-4040] An aggregate function that does not support roll up throws an exception when it is rolled up (Xu Zhaohui)", "committedDate": "2020-06-06T07:45:44Z", "type": "forcePushed"}, {"oid": "333a3e4c783f5ebae02cccbfbf04afe49198e3a7", "url": "https://github.com/apache/calcite/commit/333a3e4c783f5ebae02cccbfbf04afe49198e3a7", "message": "[CALCITE-4040] An aggregate function that does not support roll up throws an exception when it is rolled up (Xu Zhaohui)", "committedDate": "2020-06-06T07:45:44Z", "type": "commit"}]}