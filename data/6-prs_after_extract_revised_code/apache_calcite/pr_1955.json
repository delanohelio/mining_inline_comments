{"pr_number": 1955, "pr_title": "[CALCITE-3941] Add the default strict mode to the path in the Json functions", "pr_createdAt": "2020-05-01T07:35:28Z", "pr_url": "https://github.com/apache/calcite/pull/1955", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NTEzMA==", "url": "https://github.com/apache/calcite/pull/1955#discussion_r422465130", "bodyText": "What does pathWff mean? Should we change it to a more clearer name?", "author": "chunweilei", "createdAt": "2020-05-09T07:42:26Z", "path": "core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java", "diffHunk": "@@ -112,18 +113,22 @@ public static JsonPathContext jsonApiCommonSyntax(String input, String pathSpec)\n   }\n \n   public static JsonPathContext jsonApiCommonSyntax(JsonValueContext input, String pathSpec) {\n+    PathMode mode;\n+    String pathWff;\n     try {", "originalCommit": "7bf4205f61a6c0877059e203e90b0d40125ae39a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "90db090863869683f20c00e9b861ac59280ca1ec", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java b/core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java\nindex b517bb1c7..21d42d775 100644\n--- a/core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java\n+++ b/core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java\n\n@@ -114,15 +114,15 @@ public static JsonPathContext jsonApiCommonSyntax(String input, String pathSpec)\n \n   public static JsonPathContext jsonApiCommonSyntax(JsonValueContext input, String pathSpec) {\n     PathMode mode;\n-    String pathWff;\n+    String pathStr;\n     try {\n       Matcher matcher = JSON_PATH_BASE.matcher(pathSpec);\n       if (!matcher.matches()) {\n         mode = PathMode.STRICT;\n-        pathWff = pathSpec;\n+        pathStr = pathSpec;\n       } else {\n         mode = PathMode.valueOf(matcher.group(1).toUpperCase(Locale.ROOT));\n-        pathWff = matcher.group(2);\n+        pathStr = matcher.group(2);\n       }\n       DocumentContext ctx;\n       switch (mode) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NTUzOA==", "url": "https://github.com/apache/calcite/pull/1955#discussion_r422465538", "bodyText": "What if there is an illegal mode? For instance, json_exists('{\\\"foo\\\":\\\"bar\\\"}', \"strictxx $.foo' false on error). Will it throw exception?", "author": "chunweilei", "createdAt": "2020-05-09T07:47:10Z", "path": "core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java", "diffHunk": "@@ -112,18 +113,22 @@ public static JsonPathContext jsonApiCommonSyntax(String input, String pathSpec)\n   }\n \n   public static JsonPathContext jsonApiCommonSyntax(JsonValueContext input, String pathSpec) {\n+    PathMode mode;\n+    String pathWff;\n     try {\n       Matcher matcher = JSON_PATH_BASE.matcher(pathSpec);\n       if (!matcher.matches()) {\n-        throw RESOURCE.illegalJsonPathSpec(pathSpec).ex();\n+        mode = PathMode.STRICT;\n+        pathWff = pathSpec;", "originalCommit": "7bf4205f61a6c0877059e203e90b0d40125ae39a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMDM5NA==", "url": "https://github.com/apache/calcite/pull/1955#discussion_r439800394", "bodyText": "false on error\n\nThe exception was handled and returned as false.", "author": "XuQianJin-Stars", "createdAt": "2020-06-14T07:26:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NTUzOA=="}], "type": "inlineReview", "revised_code": {"commit": "90db090863869683f20c00e9b861ac59280ca1ec", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java b/core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java\nindex b517bb1c7..21d42d775 100644\n--- a/core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java\n+++ b/core/src/main/java/org/apache/calcite/runtime/JsonFunctions.java\n\n@@ -114,15 +114,15 @@ public static JsonPathContext jsonApiCommonSyntax(String input, String pathSpec)\n \n   public static JsonPathContext jsonApiCommonSyntax(JsonValueContext input, String pathSpec) {\n     PathMode mode;\n-    String pathWff;\n+    String pathStr;\n     try {\n       Matcher matcher = JSON_PATH_BASE.matcher(pathSpec);\n       if (!matcher.matches()) {\n         mode = PathMode.STRICT;\n-        pathWff = pathSpec;\n+        pathStr = pathSpec;\n       } else {\n         mode = PathMode.valueOf(matcher.group(1).toUpperCase(Locale.ROOT));\n-        pathWff = matcher.group(2);\n+        pathStr = matcher.group(2);\n       }\n       DocumentContext ctx;\n       switch (mode) {\n"}}, {"oid": "90db090863869683f20c00e9b861ac59280ca1ec", "url": "https://github.com/apache/calcite/commit/90db090863869683f20c00e9b861ac59280ca1ec", "message": "[CALCITE-3941] Add the default strict mode to the path in the Json functions", "committedDate": "2020-06-19T03:52:10Z", "type": "forcePushed"}, {"oid": "1ffc92873c25e9ba6e82e58311963ed45f87e434", "url": "https://github.com/apache/calcite/commit/1ffc92873c25e9ba6e82e58311963ed45f87e434", "message": "[CALCITE-3941] Add the default strict mode to the path in the Json functions", "committedDate": "2020-06-28T05:38:27Z", "type": "commit"}, {"oid": "1ffc92873c25e9ba6e82e58311963ed45f87e434", "url": "https://github.com/apache/calcite/commit/1ffc92873c25e9ba6e82e58311963ed45f87e434", "message": "[CALCITE-3941] Add the default strict mode to the path in the Json functions", "committedDate": "2020-06-28T05:38:27Z", "type": "forcePushed"}]}