{"pr_number": 2015, "pr_title": "[CALCITE-4055] RelFieldTrimmer loses hints", "pr_createdAt": "2020-06-09T13:12:55Z", "pr_url": "https://github.com/apache/calcite/pull/2015", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwNjk0Nw==", "url": "https://github.com/apache/calcite/pull/2015#discussion_r438606947", "bodyText": "Great fix, can we also add a test case for the aggregate ? thanks for that ~", "author": "danny0405", "createdAt": "2020-06-11T07:53:31Z", "path": "core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java", "diffHunk": "@@ -183,4 +187,44 @@\n     assertThat(trimmed, hasTree(expected));\n   }\n \n+  /** Test case for\n+   * <a href=\"https://issues.apache.org/jira/browse/CALCITE-4055\">[CALCITE-4055]\n+   * RelFieldTrimmer loses hints</a>. */\n+  @Test void testJoinWithHints() {\n+    final RelHint noHashJoinHint = RelHint.builder(\"NO_HASH_JOIN\").build();\n+    final RelBuilder builder = RelBuilder.create(config().build());", "originalCommit": "5d000e06dc760ac85995e0de412ec146cf63282f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwODQwNw==", "url": "https://github.com/apache/calcite/pull/2015#discussion_r438608407", "bodyText": "We can also promote the RelBuilder#hints like i said in the JIRA.", "author": "danny0405", "createdAt": "2020-06-11T07:56:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwNjk0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1MzU5Mg==", "url": "https://github.com/apache/calcite/pull/2015#discussion_r438653592", "bodyText": "Thanks, I will add more tests.\nWhat do you mean by \"promoting\" RelBuilder#hints ?", "author": "rubenada", "createdAt": "2020-06-11T09:18:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwNjk0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1NjUyMQ==", "url": "https://github.com/apache/calcite/pull/2015#discussion_r438656521", "bodyText": "Disregard my question, I already saw what you mean \"if the passed in hints is empty, just returns the builder early\". Ok, I will do that.", "author": "rubenada", "createdAt": "2020-06-11T09:24:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwNjk0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY4Nzc1MQ==", "url": "https://github.com/apache/calcite/pull/2015#discussion_r438687751", "bodyText": "changes committed, please check.", "author": "rubenada", "createdAt": "2020-06-11T10:22:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwNjk0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "bba25b12d75b87670bdee1f3fab4941aaeac6e99", "chunk": "diff --git a/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java b/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java\nindex bc3f231fc..7c57f07e9 100644\n--- a/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java\n+++ b/core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java\n\n@@ -191,8 +195,12 @@\n    * <a href=\"https://issues.apache.org/jira/browse/CALCITE-4055\">[CALCITE-4055]\n    * RelFieldTrimmer loses hints</a>. */\n   @Test void testJoinWithHints() {\n-    final RelHint noHashJoinHint = RelHint.builder(\"NO_HASH_JOIN\").build();\n+    final RelHint noHashJoinHint = RelHint.builder(\"no_hash_join\").build();\n     final RelBuilder builder = RelBuilder.create(config().build());\n+    builder.getCluster().setHintStrategies(\n+        HintStrategyTable.builder()\n+            .hintStrategy(\"no_hash_join\", HintPredicates.JOIN)\n+            .build());\n     final RelNode original =\n         builder.scan(\"EMP\")\n             .scan(\"DEPT\")\n"}}, {"oid": "bba25b12d75b87670bdee1f3fab4941aaeac6e99", "url": "https://github.com/apache/calcite/commit/bba25b12d75b87670bdee1f3fab4941aaeac6e99", "message": "[CALCITE-4055] RelFieldTrimmer loses hints", "committedDate": "2020-06-11T12:45:07Z", "type": "commit"}, {"oid": "bba25b12d75b87670bdee1f3fab4941aaeac6e99", "url": "https://github.com/apache/calcite/commit/bba25b12d75b87670bdee1f3fab4941aaeac6e99", "message": "[CALCITE-4055] RelFieldTrimmer loses hints", "committedDate": "2020-06-11T12:45:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzNTM4OQ==", "url": "https://github.com/apache/calcite/pull/2015#discussion_r438835389", "bodyText": "How about we change the param originalRelNode  to just hints which seems more straight-forward.", "author": "danny0405", "createdAt": "2020-06-11T14:38:29Z", "path": "core/src/main/java/org/apache/calcite/sql2rel/RelFieldTrimmer.java", "diffHunk": "@@ -417,17 +417,30 @@ public TrimResult trimFields(\n \n     relBuilder.push(newInput);\n     relBuilder.project(newProjects, newRowType.getFieldNames());\n-    return result(relBuilder.build(), mapping);\n+    final RelNode newProject = RelOptUtil.propagateRelHints(project, relBuilder.build());\n+    return result(newProject, mapping);\n   }\n \n   /** Creates a project with a dummy column, to protect the parts of the system\n    * that cannot handle a relational expression with no columns.\n    *\n    * @param fieldCount Number of fields in the original relational expression\n    * @param input Trimmed input\n-   * @return Dummy project, or null if no dummy is required\n+   * @return Dummy project\n    */\n   protected TrimResult dummyProject(int fieldCount, RelNode input) {\n+    return dummyProject(fieldCount, input, null);\n+  }\n+\n+  /** Creates a project with a dummy column, to protect the parts of the system\n+   * that cannot handle a relational expression with no columns.\n+   *\n+   * @param fieldCount Number of fields in the original relational expression\n+   * @param input Trimmed input\n+   * @param originalRelNode Source RelNode for hint propagation (or null if no propagation needed)\n+   * @return Dummy project\n+   */\n+  protected TrimResult dummyProject(int fieldCount, RelNode input, RelNode originalRelNode) {\n     final RelOptCluster cluster = input.getCluster();", "originalCommit": "bba25b12d75b87670bdee1f3fab4941aaeac6e99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2MTA4OA==", "url": "https://github.com/apache/calcite/pull/2015#discussion_r438861088", "bodyText": "uhmm... I thought we required the RelNode (not just the hints) in order to use RelOptUtil#propagateRelHints(RelNode originalRel, RelNode equiv)", "author": "rubenada", "createdAt": "2020-06-11T15:15:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzNTM4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE5MDczNw==", "url": "https://github.com/apache/calcite/pull/2015#discussion_r439190737", "bodyText": "Okey, that's a reason.", "author": "danny0405", "createdAt": "2020-06-12T03:43:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzNTM4OQ=="}], "type": "inlineReview", "revised_code": null}]}