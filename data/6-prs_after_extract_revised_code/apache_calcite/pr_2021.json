{"pr_number": 2021, "pr_title": "[CALCITE-3929] When deserialize UDAF aggregate call from json string,\u2026", "pr_createdAt": "2020-06-11T14:12:10Z", "pr_url": "https://github.com/apache/calcite/pull/2021", "timeline": [{"oid": "e7d8d86dd3ab971921f5122de6c95868dec8739c", "url": "https://github.com/apache/calcite/commit/e7d8d86dd3ab971921f5122de6c95868dec8739c", "message": "[CALCITE-3929] When deserialize UDAF aggregate call from json string, throws NPE (Xu Zhaohui)", "committedDate": "2020-06-11T14:48:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg5MzI2MQ==", "url": "https://github.com/apache/calcite/pull/2021#discussion_r442893261", "bodyText": "Where is this class attribute used? It doesn't seem to be in RelJsonWriter#toAggCall.", "author": "michaelmior", "createdAt": "2020-06-19T15:05:07Z", "path": "core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java", "diffHunk": "@@ -271,7 +271,9 @@ public RelDataType toType(RelDataTypeFactory typeFactory, Object o) {\n \n   public Object toJson(AggregateCall node) {\n     final Map<String, Object> map = jsonBuilder.map();\n-    map.put(\"agg\", toJson(node.getAggregation()));\n+    Map<String, Object> aggMap = new HashMap(toJson(node.getAggregation()));\n+    aggMap.put(\"class\", node.getAggregation().getClass().getName());", "originalCommit": "e7d8d86dd3ab971921f5122de6c95868dec8739c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA4NTMwMw==", "url": "https://github.com/apache/calcite/pull/2021#discussion_r443085303", "bodyText": "Thank you for your comments. This is a problem of lack of class information during udaf serialization. When we deserialize udaf, we will try to load udaf function through class attribute[1].If we can't load SqlAggregateFunction correctly, there will be an exception when creating AggregateCall.\n[1]RelJson#toOp", "author": "xy2953396112", "createdAt": "2020-06-20T00:38:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg5MzI2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMDA5OA==", "url": "https://github.com/apache/calcite/pull/2021#discussion_r443630098", "bodyText": "why new a map here, is it OK to do like this?\nfinal Map<String, Object> aggMap = toJson(node.getAggregation());\naggMap.put(\"class\", node.getAggregation().getClass().getName());\n\nAnd you only need to add class info for UDAF, for system aggregate function, you do not need to add class info in the map.", "author": "yanlin-Lynn", "createdAt": "2020-06-22T15:08:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg5MzI2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY4MTYxOQ==", "url": "https://github.com/apache/calcite/pull/2021#discussion_r443681619", "bodyText": "Thanks for review.", "author": "xy2953396112", "createdAt": "2020-06-22T16:26:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg5MzI2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "6f3c9ea4384dcbf7d489a3cfd3d3e6c26594be51", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java b/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java\nindex d11b64b19..a5010cde6 100644\n--- a/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java\n+++ b/core/src/main/java/org/apache/calcite/rel/externalize/RelJson.java\n\n@@ -271,8 +271,10 @@ public RelDataType toType(RelDataTypeFactory typeFactory, Object o) {\n \n   public Object toJson(AggregateCall node) {\n     final Map<String, Object> map = jsonBuilder.map();\n-    Map<String, Object> aggMap = new HashMap(toJson(node.getAggregation()));\n-    aggMap.put(\"class\", node.getAggregation().getClass().getName());\n+    Map aggMap = toJson(node.getAggregation());\n+    if (node.getAggregation().getFunctionType().isUserDefined()) {\n+      aggMap.put(\"class\", node.getAggregation().getClass().getName());\n+    }\n     map.put(\"agg\", aggMap);\n     map.put(\"type\", toJson(node.getType()));\n     map.put(\"distinct\", node.isDistinct());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMDYzMw==", "url": "https://github.com/apache/calcite/pull/2021#discussion_r443630633", "bodyText": "I don't think class info is needed for system aggregate function", "author": "yanlin-Lynn", "createdAt": "2020-06-22T15:09:38Z", "path": "core/src/test/java/org/apache/calcite/plan/RelWriterTest.java", "diffHunk": "@@ -146,8 +147,9 @@\n       + \"        {\\n\"\n       + \"          \\\"agg\\\": {\\n\"\n       + \"            \\\"name\\\": \\\"COUNT\\\",\\n\"\n-      + \"            \\\"kind\\\": \\\"COUNT\\\",\\n\"\n-      + \"            \\\"syntax\\\": \\\"FUNCTION_STAR\\\"\\n\"\n+      + \"            \\\"syntax\\\": \\\"FUNCTION_STAR\\\",\\n\"\n+      + \"            \\\"class\\\": \\\"org.apache.calcite.sql.fun.SqlCountAggFunction\\\",\\n\"\n+      + \"            \\\"kind\\\": \\\"COUNT\\\"\\n\"", "originalCommit": "e7d8d86dd3ab971921f5122de6c95868dec8739c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY4NTg2Nw==", "url": "https://github.com/apache/calcite/pull/2021#discussion_r443685867", "bodyText": "You are right. Code has been updated.", "author": "xy2953396112", "createdAt": "2020-06-22T16:33:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMDYzMw=="}], "type": "inlineReview", "revised_code": {"commit": "6f3c9ea4384dcbf7d489a3cfd3d3e6c26594be51", "chunk": "diff --git a/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java b/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java\nindex 4db688fd7..1b056ed4b 100644\n--- a/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java\n+++ b/core/src/test/java/org/apache/calcite/plan/RelWriterTest.java\n\n@@ -147,9 +146,8 @@\n       + \"        {\\n\"\n       + \"          \\\"agg\\\": {\\n\"\n       + \"            \\\"name\\\": \\\"COUNT\\\",\\n\"\n-      + \"            \\\"syntax\\\": \\\"FUNCTION_STAR\\\",\\n\"\n-      + \"            \\\"class\\\": \\\"org.apache.calcite.sql.fun.SqlCountAggFunction\\\",\\n\"\n-      + \"            \\\"kind\\\": \\\"COUNT\\\"\\n\"\n+      + \"            \\\"kind\\\": \\\"COUNT\\\",\\n\"\n+      + \"            \\\"syntax\\\": \\\"FUNCTION_STAR\\\"\\n\"\n       + \"          },\\n\"\n       + \"          \\\"type\\\": {\\n\"\n       + \"            \\\"type\\\": \\\"BIGINT\\\",\\n\"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMTczMg==", "url": "https://github.com/apache/calcite/pull/2021#discussion_r443631732", "bodyText": "extends SqlUserDefinedAggFunction might be better for your case", "author": "yanlin-Lynn", "createdAt": "2020-06-22T15:11:10Z", "path": "core/src/test/java/org/apache/calcite/test/MockSqlOperatorTable.java", "diffHunk": "@@ -125,6 +125,18 @@ public RelDataType inferReturnType(SqlOperatorBinding opBinding) {\n     }\n   }\n \n+  /** \"MYAGGFUNC\" user-defined aggregate function. This agg function accept one or more arguments\n+   * in order to reproduce the throws of CALCITE-3929. */\n+  public static class MyAggFunc extends SqlAggFunction {", "originalCommit": "e7d8d86dd3ab971921f5122de6c95868dec8739c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUwMzc1Mg==", "url": "https://github.com/apache/calcite/pull/2021#discussion_r446503752", "bodyText": "@yanlin-Lynn\nThanks, SqlUserDefinedAggFunction  has an AggregateFunction argument, it's not convenient for reproduce this case.So it's better to extends SqlAggFunction and define it as a user-defined function.", "author": "xy2953396112", "createdAt": "2020-06-27T09:01:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMTczMg=="}], "type": "inlineReview", "revised_code": {"commit": "6f3c9ea4384dcbf7d489a3cfd3d3e6c26594be51", "chunk": "diff --git a/core/src/test/java/org/apache/calcite/test/MockSqlOperatorTable.java b/core/src/test/java/org/apache/calcite/test/MockSqlOperatorTable.java\nindex d0a59697e..705a088df 100644\n--- a/core/src/test/java/org/apache/calcite/test/MockSqlOperatorTable.java\n+++ b/core/src/test/java/org/apache/calcite/test/MockSqlOperatorTable.java\n\n@@ -125,25 +125,13 @@ public RelDataType inferReturnType(SqlOperatorBinding opBinding) {\n     }\n   }\n \n-  /** \"MYAGGFUNC\" user-defined aggregate function. This agg function accept one or more arguments\n-   * in order to reproduce the throws of CALCITE-3929. */\n-  public static class MyAggFunc extends SqlAggFunction {\n-\n-    public MyAggFunc() {\n-      super(\"myAggFunc\", null, SqlKind.OTHER_FUNCTION, ReturnTypes.BIGINT, null,\n-          OperandTypes.ONE_OR_MORE, SqlFunctionCategory.USER_DEFINED_FUNCTION, false, false,\n-          Optionality.FORBIDDEN);\n-    }\n-\n-  }\n-\n   /** \"MYAGG\" user-defined aggregate function. This agg function accept two numeric arguments\n-   * in order to reproduce the throws of CALCITE-2744. */\n+   * in order to reproduce the throws of CALCITE-2744 and CALCITE-3929. */\n   public static class MyAvgAggFunction extends SqlAggFunction {\n     public MyAvgAggFunction() {\n       super(\"MYAGG\", null, SqlKind.AVG, ReturnTypes.AVG_AGG_FUNCTION,\n           null, OperandTypes.family(SqlTypeFamily.NUMERIC, SqlTypeFamily.NUMERIC),\n-          SqlFunctionCategory.NUMERIC, false, false, Optionality.FORBIDDEN);\n+          SqlFunctionCategory.USER_DEFINED_FUNCTION, false, false, Optionality.FORBIDDEN);\n     }\n \n     @Override public boolean isDeterministic() {\n"}}, {"oid": "6f3c9ea4384dcbf7d489a3cfd3d3e6c26594be51", "url": "https://github.com/apache/calcite/commit/6f3c9ea4384dcbf7d489a3cfd3d3e6c26594be51", "message": "[CALCITE-3929] When deserialize UDAF aggregate call from json string, throws NPE (Xu Zhaohui)", "committedDate": "2020-06-22T16:21:44Z", "type": "forcePushed"}, {"oid": "346dfae6cb6604f38a1572a584d70dd2e49c2c0d", "url": "https://github.com/apache/calcite/commit/346dfae6cb6604f38a1572a584d70dd2e49c2c0d", "message": "[CALCITE-3929] When deserialize UDAF aggregate call from json string, throws NPE (Xu Zhaohui)", "committedDate": "2020-06-22T16:25:19Z", "type": "forcePushed"}, {"oid": "648d8d24e4ed1a2f7d1d50cb4ec81c19f8f3f2ed", "url": "https://github.com/apache/calcite/commit/648d8d24e4ed1a2f7d1d50cb4ec81c19f8f3f2ed", "message": "[CALCITE-3929] When deserialize UDAF aggregate call from json string, throws NPE (Xu Zhaohui)", "committedDate": "2020-06-23T00:07:53Z", "type": "forcePushed"}, {"oid": "45471830991b1335e9579a35237ff137c18cf5d6", "url": "https://github.com/apache/calcite/commit/45471830991b1335e9579a35237ff137c18cf5d6", "message": "[CALCITE-3929] When deserialize UDAF aggregate call from json string, throws NPE (Xu Zhaohui)", "committedDate": "2020-06-23T01:23:04Z", "type": "forcePushed"}, {"oid": "cd197f3c131989ecd875fd28a70aef147f3b4887", "url": "https://github.com/apache/calcite/commit/cd197f3c131989ecd875fd28a70aef147f3b4887", "message": "[CALCITE-3929] When deserialize UDAF aggregate call from json string, throws NPE (Xu Zhaohui)", "committedDate": "2020-06-27T08:24:23Z", "type": "commit"}, {"oid": "cd197f3c131989ecd875fd28a70aef147f3b4887", "url": "https://github.com/apache/calcite/commit/cd197f3c131989ecd875fd28a70aef147f3b4887", "message": "[CALCITE-3929] When deserialize UDAF aggregate call from json string, throws NPE (Xu Zhaohui)", "committedDate": "2020-06-27T08:24:23Z", "type": "forcePushed"}]}