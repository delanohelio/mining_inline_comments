{"pr_number": 2208, "pr_title": "[CALCITE-4333] The Sort rel should be decorrelated even though it has\u2026", "pr_createdAt": "2020-10-12T11:47:14Z", "pr_url": "https://github.com/apache/calcite/pull/2208", "timeline": [{"oid": "bd6333a5d52d46ac7971f9802884150aed4bb96c", "url": "https://github.com/apache/calcite/commit/bd6333a5d52d46ac7971f9802884150aed4bb96c", "message": "[CALCITE-4333] The Sort rel should be decorrelated even though it has fetch or limit when its parent is not a Correlate", "committedDate": "2020-10-12T11:55:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg==", "url": "https://github.com/apache/calcite/pull/2208#discussion_r503254426", "bodyText": "Does this code check only the parent or any ancestor? Is it valid to check only the parent?", "author": "zabetak", "createdAt": "2020-10-12T12:15:49Z", "path": "core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java", "diffHunk": "@@ -680,6 +677,17 @@ private static void shiftMapping(Map<Integer, Integer> mapping, int startIndex,\n \n   public Frame getInvoke(RelNode r, RelNode parent) {\n     final Frame frame = dispatcher.invoke(r);\n+    if (frame != null && parent instanceof Correlate && r instanceof Sort) {", "originalCommit": "bd6333a5d52d46ac7971f9802884150aed4bb96c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1Nzg0MQ==", "url": "https://github.com/apache/calcite/pull/2208#discussion_r503257841", "bodyText": "My understanding is that only when the sort is an input of Correlate, we can not decorrelate the sort's input (when the sort input has be decorrelated).", "author": "danny0405", "createdAt": "2020-10-12T12:22:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI2NTc5Mg==", "url": "https://github.com/apache/calcite/pull/2208#discussion_r503265792", "bodyText": "Hmm, we should check all its ancestor, but i have no good way for this ? Should i put a flag there (indicating whether we are under a Correlate now ?) ?", "author": "danny0405", "createdAt": "2020-10-12T12:37:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYyNjExNA==", "url": "https://github.com/apache/calcite/pull/2208#discussion_r503626114", "bodyText": "Finally i changes to check if the sort has a parent, if it does, that means the sort is definitely a branch of Correlate (if the sort input has been rewritten)", "author": "danny0405", "createdAt": "2020-10-13T02:08:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyMzgyMw==", "url": "https://github.com/apache/calcite/pull/2208#discussion_r503723823", "bodyText": "Cool, thanks for checking!", "author": "zabetak", "createdAt": "2020-10-13T07:26:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIxNzE5Nw==", "url": "https://github.com/apache/calcite/pull/2208#discussion_r544217197", "bodyText": "@danny0405 @zabetak  I think this discussion is relevant for https://issues.apache.org/jira/browse/CALCITE-4437", "author": "rubenada", "createdAt": "2020-12-16T11:19:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NDQyNg=="}], "type": "inlineReview", "revised_code": {"commit": "858882965ae872ab3776127eb3b8608535b7f9a1", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java b/core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java\nindex 0a8a53eea..adcf890a5 100644\n--- a/core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java\n+++ b/core/src/main/java/org/apache/calcite/sql2rel/RelDecorrelator.java\n\n@@ -677,21 +677,20 @@ private static void shiftMapping(Map<Integer, Integer> mapping, int startIndex,\n \n   public Frame getInvoke(RelNode r, RelNode parent) {\n     final Frame frame = dispatcher.invoke(r);\n-    if (frame != null && parent instanceof Correlate && r instanceof Sort) {\n-      Sort sort = (Sort) r;\n+    currentRel = parent;\n+    if (frame != null && parent != null && r instanceof Sort) {\n+      final Sort sort = (Sort) r;\n       // Can not decorrelate if the sort has per-correlate-key attributes like\n       // offset or fetch limit, because these attributes scope would change to\n       // global after decorrelation. They should take effect within the scope\n       // of the correlation key actually.\n       if (sort.offset != null || sort.fetch != null) {\n-        currentRel = parent;\n         return null;\n       }\n     }\n     if (frame != null) {\n       map.put(r, frame);\n     }\n-    currentRel = parent;\n     return frame;\n   }\n \n"}}, {"oid": "858882965ae872ab3776127eb3b8608535b7f9a1", "url": "https://github.com/apache/calcite/commit/858882965ae872ab3776127eb3b8608535b7f9a1", "message": "[CALCITE-4333] The Sort rel should be decorrelated even though it has fetch or limit when its parent is not a Correlate\n\nWhen the sort input has been written, cancels the rewrite if:\n* the sort has a parent, that means the sort is a branch of the\nCorrelate\n* the sort has fetch or limit", "committedDate": "2020-10-13T02:00:36Z", "type": "commit"}, {"oid": "858882965ae872ab3776127eb3b8608535b7f9a1", "url": "https://github.com/apache/calcite/commit/858882965ae872ab3776127eb3b8608535b7f9a1", "message": "[CALCITE-4333] The Sort rel should be decorrelated even though it has fetch or limit when its parent is not a Correlate\n\nWhen the sort input has been written, cancels the rewrite if:\n* the sort has a parent, that means the sort is a branch of the\nCorrelate\n* the sort has fetch or limit", "committedDate": "2020-10-13T02:00:36Z", "type": "forcePushed"}]}