{"pr_number": 2062, "pr_title": "[CALCITE-4094] Allow SqlOperator of SqlKind#OTHER_FUNCTION to define a Strong.Policy", "pr_createdAt": "2020-07-11T12:02:38Z", "pr_url": "https://github.com/apache/calcite/pull/2062", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQwOTczMg==", "url": "https://github.com/apache/calcite/pull/2062#discussion_r453409732", "bodyText": "@return -> Returns\n@see Strong should have a blank line in front\nEnd the doc with dot .\nWhy still returns null if the policy inference is implemented ?", "author": "danny0405", "createdAt": "2020-07-13T02:58:54Z", "path": "core/src/main/java/org/apache/calcite/sql/SqlOperator.java", "diffHunk": "@@ -891,6 +893,15 @@ public SqlReturnTypeInference getReturnTypeInference() {\n     return returnTypeInference;\n   }\n \n+  /**\n+   * @return the {@link Strong.Policy} strategy for this operator, or null if\n+   * the policy inference is implemented by a subclass override\n+   * @see Strong\n+   */\n+  public Supplier<Strong.Policy> getStrongPolicyInference() {\n+    return null;\n+  }\n+", "originalCommit": "d1207acd12dffa014286e8f0b4f2bfd54c540db7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ5MjgzNg==", "url": "https://github.com/apache/calcite/pull/2062#discussion_r453492836", "bodyText": "Thanks for your comments @danny0405 , I have fixed the javadoc.", "author": "rubenada", "createdAt": "2020-07-13T08:49:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQwOTczMg=="}], "type": "inlineReview", "revised_code": {"commit": "dcb10acd3c335e58ab29652d45a4a0a67b7cae45", "chunk": "diff --git a/core/src/main/java/org/apache/calcite/sql/SqlOperator.java b/core/src/main/java/org/apache/calcite/sql/SqlOperator.java\nindex f9f01b890..199681c7e 100644\n--- a/core/src/main/java/org/apache/calcite/sql/SqlOperator.java\n+++ b/core/src/main/java/org/apache/calcite/sql/SqlOperator.java\n\n@@ -894,8 +894,9 @@ public SqlReturnTypeInference getReturnTypeInference() {\n   }\n \n   /**\n-   * @return the {@link Strong.Policy} strategy for this operator, or null if\n-   * the policy inference is implemented by a subclass override\n+   * Returns the {@link Strong.Policy} strategy for this operator, or null if there is no particular\n+   * strategy, in which case this policy will be deducted from the operator's {@link SqlKind}.\n+   *\n    * @see Strong\n    */\n   public Supplier<Strong.Policy> getStrongPolicyInference() {\n"}}, {"oid": "dcb10acd3c335e58ab29652d45a4a0a67b7cae45", "url": "https://github.com/apache/calcite/commit/dcb10acd3c335e58ab29652d45a4a0a67b7cae45", "message": "[CALCITE-4094] Allow SqlOperator of SqlKind#OTHER_FUNCTION to define a Strong.Policy\nFollow-up after review comments", "committedDate": "2020-07-14T09:47:01Z", "type": "commit"}, {"oid": "dcb10acd3c335e58ab29652d45a4a0a67b7cae45", "url": "https://github.com/apache/calcite/commit/dcb10acd3c335e58ab29652d45a4a0a67b7cae45", "message": "[CALCITE-4094] Allow SqlOperator of SqlKind#OTHER_FUNCTION to define a Strong.Policy\nFollow-up after review comments", "committedDate": "2020-07-14T09:47:01Z", "type": "forcePushed"}]}