{"pr_number": 2107, "pr_title": "[CALCITE-4113] Support LEFT join in EnumerableMergeJoin", "pr_createdAt": "2020-08-12T16:16:20Z", "pr_url": "https://github.com/apache/calcite/pull/2107", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3NTQ5OA==", "url": "https://github.com/apache/calcite/pull/2107#discussion_r471875498", "bodyText": "Could we merge these two if conditions?", "author": "chunweilei", "createdAt": "2020-08-18T02:22:52Z", "path": "linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java", "diffHunk": "@@ -4223,8 +4227,10 @@ private boolean advanceLeft(TSource left, TKey leftKey) {\n         TKey leftKey2 = outerKeySelector.apply(left);\n         if (leftKey2 == null) {\n           // mergeJoin assumes inputs sorted in ascending order with nulls last,\n-          // if we reach a null key, we are done\n-          break;\n+          // if we reach a null key, we are done (except LEFT join, that needs to process LHS fully)\n+          if (joinType != JoinType.LEFT) {\n+            break;\n+          }\n         }", "originalCommit": "613f0d417d890cb71550d32714a327afe71cb4e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk2MzM4MQ==", "url": "https://github.com/apache/calcite/pull/2107#discussion_r471963381", "bodyText": "well spotted, thanks.\ndone.", "author": "rubenada", "createdAt": "2020-08-18T07:14:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg3NTQ5OA=="}], "type": "inlineReview", "revised_code": {"commit": "0e4de2aca8a55d4ce2294088bf9a9022fb156d42", "chunk": "diff --git a/linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java b/linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java\nindex 7704b0dbf..512130d1b 100644\n--- a/linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java\n+++ b/linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java\n\n@@ -4225,12 +4225,10 @@ private boolean advanceLeft(TSource left, TKey leftKey) {\n       while (getLeftEnumerator().moveNext()) {\n         left = getLeftEnumerator().current();\n         TKey leftKey2 = outerKeySelector.apply(left);\n-        if (leftKey2 == null) {\n+        if (leftKey2 == null && joinType != JoinType.LEFT) {\n           // mergeJoin assumes inputs sorted in ascending order with nulls last,\n           // if we reach a null key, we are done (except LEFT join, that needs to process LHS fully)\n-          if (joinType != JoinType.LEFT) {\n-            break;\n-          }\n+          break;\n         }\n         int c = compare(leftKey, leftKey2);\n         if (c != 0) {\n"}}, {"oid": "0e4de2aca8a55d4ce2294088bf9a9022fb156d42", "url": "https://github.com/apache/calcite/commit/0e4de2aca8a55d4ce2294088bf9a9022fb156d42", "message": "[CALCITE-4113] Support LEFT join in EnumerableMergeJoin", "committedDate": "2020-08-24T07:07:59Z", "type": "commit"}, {"oid": "0e4de2aca8a55d4ce2294088bf9a9022fb156d42", "url": "https://github.com/apache/calcite/commit/0e4de2aca8a55d4ce2294088bf9a9022fb156d42", "message": "[CALCITE-4113] Support LEFT join in EnumerableMergeJoin", "committedDate": "2020-08-24T07:07:59Z", "type": "forcePushed"}]}