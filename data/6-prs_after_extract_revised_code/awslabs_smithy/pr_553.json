{"pr_number": 553, "pr_title": "Fix TopologicalIndex", "pr_createdAt": "2020-09-03T05:10:12Z", "pr_url": "https://github.com/awslabs/smithy/pull/553", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMTQ2Mw==", "url": "https://github.com/awslabs/smithy/pull/553#discussion_r483121463", "bodyText": "Looks like this is a public interface break.", "author": "kstich", "createdAt": "2020-09-03T16:52:09Z", "path": "smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java", "diffHunk": "@@ -125,16 +124,14 @@ public static PathFinder create(Model model) {\n \n     /**\n      * Finds all of the possible paths from the {@code startingShape} to the\n-     * the {@code targetShape}.\n+     * the any in the set of {@code targetShapes}.\n      *\n      * @param startingShape Starting shape to find the paths from.\n-     * @param targetShape The shape to try to find a path to.\n+     * @param targetShapes The shapes to try to find a path to.\n      * @return Returns the list of matching paths.\n      */\n-    public List<Path> search(ToShapeId startingShape, ToShapeId targetShape) {\n-        return searchFromShapeToSet(\n-                startingShape,\n-                model.getShape(targetShape.toShapeId()).map(Collections::singleton).orElse(Collections.emptySet()));\n+    public List<Path> search(ToShapeId startingShape, Collection<Shape> targetShapes) {", "originalCommit": "3615c8f5f86a82d83121334e54b64d58992d5dae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1NTk0Mw==", "url": "https://github.com/awslabs/smithy/pull/553#discussion_r483155943", "bodyText": "It never shipped in a tagged release, so I figured I'd just ship the more broad interface.", "author": "mtdowling", "createdAt": "2020-09-03T17:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMTQ2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "19c40cbdf690bdad137eb205d700041ed205ef9f", "chunk": "diff --git a/smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java b/smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java\nindex 706672313..aa50cfe5e 100644\n--- a/smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java\n+++ b/smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java\n\n@@ -123,8 +123,8 @@ public final class PathFinder {\n     }\n \n     /**\n-     * Finds all of the possible paths from the {@code startingShape} to the\n-     * the any in the set of {@code targetShapes}.\n+     * Finds all of the possible paths from the {@code startingShape} to\n+     * any of the provided shapes in {@code targetShapes}.\n      *\n      * @param startingShape Starting shape to find the paths from.\n      * @param targetShapes The shapes to try to find a path to.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMTY1OQ==", "url": "https://github.com/awslabs/smithy/pull/553#discussion_r483121659", "bodyText": "This sentence doesn't read correctly.", "author": "kstich", "createdAt": "2020-09-03T16:52:26Z", "path": "smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java", "diffHunk": "@@ -125,16 +124,14 @@ public static PathFinder create(Model model) {\n \n     /**\n      * Finds all of the possible paths from the {@code startingShape} to the\n-     * the {@code targetShape}.\n+     * the any in the set of {@code targetShapes}.", "originalCommit": "3615c8f5f86a82d83121334e54b64d58992d5dae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1OTc4MQ==", "url": "https://github.com/awslabs/smithy/pull/553#discussion_r483159781", "bodyText": "Oh, yeah. Fixed.", "author": "mtdowling", "createdAt": "2020-09-03T18:00:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMTY1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "19c40cbdf690bdad137eb205d700041ed205ef9f", "chunk": "diff --git a/smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java b/smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java\nindex 706672313..aa50cfe5e 100644\n--- a/smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java\n+++ b/smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java\n\n@@ -123,8 +123,8 @@ public final class PathFinder {\n     }\n \n     /**\n-     * Finds all of the possible paths from the {@code startingShape} to the\n-     * the any in the set of {@code targetShapes}.\n+     * Finds all of the possible paths from the {@code startingShape} to\n+     * any of the provided shapes in {@code targetShapes}.\n      *\n      * @param startingShape Starting shape to find the paths from.\n      * @param targetShapes The shapes to try to find a path to.\n"}}, {"oid": "19c40cbdf690bdad137eb205d700041ed205ef9f", "url": "https://github.com/awslabs/smithy/commit/19c40cbdf690bdad137eb205d700041ed205ef9f", "message": "Fix TopologicalIndex\n\nThis commit fixes a bug in TopologicalIndex where some forms of\nrecursion weren't detected, which resulted in a stack overflow. This was\nbecause directly recursive shapes were found, but transitively recursive\nshapes were not (shapes that are recursive on themselves, but enter into\na cycle because they reference recursive shapes). To address this,\nTopologicalIndex was rewritten to just implement a DFS rather than try\nto reuse PathFinder.", "committedDate": "2020-09-03T18:00:40Z", "type": "commit"}, {"oid": "19c40cbdf690bdad137eb205d700041ed205ef9f", "url": "https://github.com/awslabs/smithy/commit/19c40cbdf690bdad137eb205d700041ed205ef9f", "message": "Fix TopologicalIndex\n\nThis commit fixes a bug in TopologicalIndex where some forms of\nrecursion weren't detected, which resulted in a stack overflow. This was\nbecause directly recursive shapes were found, but transitively recursive\nshapes were not (shapes that are recursive on themselves, but enter into\na cycle because they reference recursive shapes). To address this,\nTopologicalIndex was rewritten to just implement a DFS rather than try\nto reuse PathFinder.", "committedDate": "2020-09-03T18:00:40Z", "type": "forcePushed"}]}