{"pr_number": 619, "pr_title": "Add javadoc example and unit test for composing set via CodeWriter.on\u2026", "pr_createdAt": "2020-10-30T21:15:46Z", "pr_url": "https://github.com/awslabs/smithy/pull/619", "timeline": [{"oid": "b50870dbd057946fabe76ee7fa370f13d870a2ef", "url": "https://github.com/awslabs/smithy/commit/b50870dbd057946fabe76ee7fa370f13d870a2ef", "message": "Add javadoc example and unit test for composing set via CodeWriter.onSection() and inline section notation.", "committedDate": "2020-10-30T21:14:27Z", "type": "commit"}, {"oid": "ec68e0ca5d3eed4f4ac1823ea832957e45a174cd", "url": "https://github.com/awslabs/smithy/commit/ec68e0ca5d3eed4f4ac1823ea832957e45a174cd", "message": "Fix sample code", "committedDate": "2020-10-30T21:16:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ2Mjk2OA==", "url": "https://github.com/awslabs/smithy/pull/619#discussion_r515462968", "bodyText": "Oh, looks like this needs either a trailing newline, or you need to disable newlines in the writer", "author": "mtdowling", "createdAt": "2020-10-31T06:27:43Z", "path": "smithy-codegen-core/src/test/java/software/amazon/smithy/codegen/core/writer/CodegenWriterTest.java", "diffHunk": "@@ -113,4 +113,18 @@ public void importsUseReferencesFromSymbols() {\n         assertThat(writer.getImportContainer().imports, hasKey(\"MyString\"));\n         assertThat(writer.getImportContainer().imports.get(\"MyString\"), equalTo(\"java.lang.String\"));\n     }\n+\n+    @Test\n+    public void canComposeSetWithSection() {\n+        String testSection = \"testSection\";\n+        MyWriter writer = new MyWriter(\"foo\");\n+\n+        writer.onSection(testSection, text -> writer.write(text + \"1, \"));\n+        writer.onSection(testSection, text -> writer.write(text + \"2, \"));\n+        writer.onSection(testSection, text -> writer.write(text + \"3\"));\n+\n+        writer.write(\"[${L@testSection}]\", \"\");\n+\n+        assertThat(writer.toString(), equalTo(\"[1, 2, 3]\"));", "originalCommit": "ec68e0ca5d3eed4f4ac1823ea832957e45a174cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxMTA1Mw==", "url": "https://github.com/awslabs/smithy/pull/619#discussion_r515511053", "bodyText": "I've pushed up a fix. I also moved this test to smithy-utils.", "author": "mtdowling", "createdAt": "2020-10-31T16:01:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ2Mjk2OA=="}], "type": "inlineReview", "revised_code": {"commit": "949df07b828bef38c21adc696329657de3aff8e7", "chunk": "diff --git a/smithy-codegen-core/src/test/java/software/amazon/smithy/codegen/core/writer/CodegenWriterTest.java b/smithy-codegen-core/src/test/java/software/amazon/smithy/codegen/core/writer/CodegenWriterTest.java\nindex 566347b9b..44bad123c 100644\n--- a/smithy-codegen-core/src/test/java/software/amazon/smithy/codegen/core/writer/CodegenWriterTest.java\n+++ b/smithy-codegen-core/src/test/java/software/amazon/smithy/codegen/core/writer/CodegenWriterTest.java\n\n@@ -113,18 +113,4 @@ public class CodegenWriterTest {\n         assertThat(writer.getImportContainer().imports, hasKey(\"MyString\"));\n         assertThat(writer.getImportContainer().imports.get(\"MyString\"), equalTo(\"java.lang.String\"));\n     }\n-\n-    @Test\n-    public void canComposeSetWithSection() {\n-        String testSection = \"testSection\";\n-        MyWriter writer = new MyWriter(\"foo\");\n-\n-        writer.onSection(testSection, text -> writer.write(text + \"1, \"));\n-        writer.onSection(testSection, text -> writer.write(text + \"2, \"));\n-        writer.onSection(testSection, text -> writer.write(text + \"3\"));\n-\n-        writer.write(\"[${L@testSection}]\", \"\");\n-\n-        assertThat(writer.toString(), equalTo(\"[1, 2, 3]\"));\n-    }\n }\n"}}, {"oid": "949df07b828bef38c21adc696329657de3aff8e7", "url": "https://github.com/awslabs/smithy/commit/949df07b828bef38c21adc696329657de3aff8e7", "message": "Move test to smithy-utils and add trailing \\n", "committedDate": "2020-10-31T16:00:56Z", "type": "commit"}]}