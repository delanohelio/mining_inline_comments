{"pr_number": 558, "pr_title": "Add transformer that removes trait definitions", "pr_createdAt": "2020-09-10T22:16:08Z", "pr_url": "https://github.com/awslabs/smithy/pull/558", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI5MjE0Mw==", "url": "https://github.com/awslabs/smithy/pull/558#discussion_r487292143", "bodyText": "Why not call this RemoveTraitShapes / \"remove-trait-shapes\"?", "author": "mtdowling", "createdAt": "2020-09-11T21:09:59Z", "path": "smithy-build/src/main/java/software/amazon/smithy/build/plugins/RemoveSharedShapesPlugin.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.build.plugins;\n+\n+import software.amazon.smithy.build.PluginContext;\n+import software.amazon.smithy.build.SmithyBuildPlugin;\n+import software.amazon.smithy.model.Model;\n+import software.amazon.smithy.model.node.Node;\n+import software.amazon.smithy.model.shapes.ModelSerializer;\n+import software.amazon.smithy.model.transform.ModelTransformer;\n+\n+public final class RemoveSharedShapesPlugin implements SmithyBuildPlugin {", "originalCommit": "fe2fafdc8b121e3ee3ce0146d5deafb493a03ee5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMwNzcxNA==", "url": "https://github.com/awslabs/smithy/pull/558#discussion_r487307714", "bodyText": "Fixed.  This evolved a bit and I didn't update the naming.", "author": "srchase", "createdAt": "2020-09-11T21:54:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI5MjE0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI4NTI3OQ==", "url": "https://github.com/awslabs/smithy/pull/558#discussion_r488285279", "bodyText": "This should probably be a ProjectionTransformer and not a SmithyBuildPlugin since it needs to modify a model and not necessarily create its own artifacts.", "author": "mtdowling", "createdAt": "2020-09-14T23:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI5MjE0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk0NzYzOA==", "url": "https://github.com/awslabs/smithy/pull/558#discussion_r488947638", "bodyText": "This has been reworked and is now a transformer.", "author": "srchase", "createdAt": "2020-09-15T20:17:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI5MjE0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "fe701b23df26d3ca1d6aefbc7b2e70c75ba3072d", "chunk": "diff --git a/smithy-build/src/main/java/software/amazon/smithy/build/plugins/RemoveSharedShapesPlugin.java b/smithy-build/src/main/java/software/amazon/smithy/build/plugins/RemoveTraitShapesPlugin.java\nsimilarity index 91%\nrename from smithy-build/src/main/java/software/amazon/smithy/build/plugins/RemoveSharedShapesPlugin.java\nrename to smithy-build/src/main/java/software/amazon/smithy/build/plugins/RemoveTraitShapesPlugin.java\nindex d2272b0dd..9eb655aae 100644\n--- a/smithy-build/src/main/java/software/amazon/smithy/build/plugins/RemoveSharedShapesPlugin.java\n+++ b/smithy-build/src/main/java/software/amazon/smithy/build/plugins/RemoveTraitShapesPlugin.java\n\n@@ -22,8 +22,8 @@ import software.amazon.smithy.model.node.Node;\n import software.amazon.smithy.model.shapes.ModelSerializer;\n import software.amazon.smithy.model.transform.ModelTransformer;\n \n-public final class RemoveSharedShapesPlugin implements SmithyBuildPlugin {\n-    private static final String NAME = \"remove-shared-shapes\";\n+public final class RemoveTraitShapesPlugin implements SmithyBuildPlugin {\n+    private static final String NAME = \"remove-trait-shapes\";\n \n     @Override\n     public String getName() {\n"}}, {"oid": "f502b767dc4ea264958132fca790ae996ff2e8f1", "url": "https://github.com/awslabs/smithy/commit/f502b767dc4ea264958132fca790ae996ff2e8f1", "message": "Rename plugin", "committedDate": "2020-09-11T21:33:31Z", "type": "forcePushed"}, {"oid": "fe701b23df26d3ca1d6aefbc7b2e70c75ba3072d", "url": "https://github.com/awslabs/smithy/commit/fe701b23df26d3ca1d6aefbc7b2e70c75ba3072d", "message": "Rename plugin", "committedDate": "2020-09-11T21:34:59Z", "type": "forcePushed"}, {"oid": "22968340e0323350a30711e44a57edf289add4fb", "url": "https://github.com/awslabs/smithy/commit/22968340e0323350a30711e44a57edf289add4fb", "message": "Rename plugin", "committedDate": "2020-09-11T21:36:13Z", "type": "forcePushed"}, {"oid": "6b7404b8265828e0574e02199afccf50664d31e3", "url": "https://github.com/awslabs/smithy/commit/6b7404b8265828e0574e02199afccf50664d31e3", "message": "Add removeTraitDefinitions transformer", "committedDate": "2020-09-15T20:01:07Z", "type": "forcePushed"}, {"oid": "e532889cded9c00c1ab940e5aed556241f416b88", "url": "https://github.com/awslabs/smithy/commit/e532889cded9c00c1ab940e5aed556241f416b88", "message": "Add removeTraitDefinitions transformer", "committedDate": "2020-09-15T20:06:59Z", "type": "commit"}, {"oid": "e532889cded9c00c1ab940e5aed556241f416b88", "url": "https://github.com/awslabs/smithy/commit/e532889cded9c00c1ab940e5aed556241f416b88", "message": "Add removeTraitDefinitions transformer", "committedDate": "2020-09-15T20:06:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MjY0OA==", "url": "https://github.com/awslabs/smithy/pull/558#discussion_r488952648", "bodyText": "This probably doesn't need the BackwardCompatHelper since it's new.", "author": "mtdowling", "createdAt": "2020-09-15T20:26:48Z", "path": "smithy-build/src/main/java/software/amazon/smithy/build/transforms/RemoveTraitDefinitions.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.build.transforms;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import java.util.logging.Logger;\n+import software.amazon.smithy.build.TransformContext;\n+import software.amazon.smithy.model.Model;\n+import software.amazon.smithy.model.shapes.Shape;\n+import software.amazon.smithy.model.traits.TraitDefinition;\n+import software.amazon.smithy.model.transform.ModelTransformer;\n+\n+/**\n+ * {@code removeTraitShapes} removes all trait definitions from a model,\n+ * but leaves if the trait definition contains any of the provided\n+ * {@code tags}.\n+ *\n+ * <p>This transformer will not remove prelude trait definitions.\n+ */\n+public final class RemoveTraitDefinitions extends BackwardCompatHelper<RemoveTraitDefinitions.Config> {", "originalCommit": "e532889cded9c00c1ab940e5aed556241f416b88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA3NTY5Mw==", "url": "https://github.com/awslabs/smithy/pull/558#discussion_r489075693", "bodyText": "Fixed.", "author": "srchase", "createdAt": "2020-09-15T23:34:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1MjY0OA=="}], "type": "inlineReview", "revised_code": {"commit": "ad77f6a229b46a7f1ffc0c6a21bacb038f4eb2b7", "chunk": "diff --git a/smithy-build/src/main/java/software/amazon/smithy/build/transforms/RemoveTraitDefinitions.java b/smithy-build/src/main/java/software/amazon/smithy/build/transforms/RemoveTraitDefinitions.java\nindex e5f70b8ea..5a48813f0 100644\n--- a/smithy-build/src/main/java/software/amazon/smithy/build/transforms/RemoveTraitDefinitions.java\n+++ b/smithy-build/src/main/java/software/amazon/smithy/build/transforms/RemoveTraitDefinitions.java\n\n@@ -18,11 +18,9 @@ package software.amazon.smithy.build.transforms;\n import java.util.Collections;\n import java.util.Set;\n import java.util.function.Predicate;\n-import java.util.logging.Logger;\n import software.amazon.smithy.build.TransformContext;\n import software.amazon.smithy.model.Model;\n import software.amazon.smithy.model.shapes.Shape;\n-import software.amazon.smithy.model.traits.TraitDefinition;\n import software.amazon.smithy.model.transform.ModelTransformer;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk1NDAzNQ==", "url": "https://github.com/awslabs/smithy/pull/558#discussion_r488954035", "bodyText": "I don't see how this would work if, say, a trait shape is removed that is a structure that references other shapes that were removed. It might be better to instead filter before removing trait shapes rather than re-add. (e.g., maybe you can add a Predicate to the getModelWithoutTraitShapes method.", "author": "mtdowling", "createdAt": "2020-09-15T20:29:29Z", "path": "smithy-build/src/main/java/software/amazon/smithy/build/transforms/RemoveTraitDefinitions.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.smithy.build.transforms;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import java.util.logging.Logger;\n+import software.amazon.smithy.build.TransformContext;\n+import software.amazon.smithy.model.Model;\n+import software.amazon.smithy.model.shapes.Shape;\n+import software.amazon.smithy.model.traits.TraitDefinition;\n+import software.amazon.smithy.model.transform.ModelTransformer;\n+\n+/**\n+ * {@code removeTraitShapes} removes all trait definitions from a model,\n+ * but leaves if the trait definition contains any of the provided\n+ * {@code tags}.\n+ *\n+ * <p>This transformer will not remove prelude trait definitions.\n+ */\n+public final class RemoveTraitDefinitions extends BackwardCompatHelper<RemoveTraitDefinitions.Config> {\n+\n+    private static final Logger LOGGER = Logger.getLogger(RemoveTraitDefinitions.class.getName());\n+\n+    /**\n+     * {@code removeTraitShapes} configuration settings.\n+     */\n+    public static final class Config {\n+\n+        private Set<String> exportTagged = Collections.emptySet();\n+\n+        /**\n+         * You can <em>export</em> trait definitions by applying specific tags\n+         * to the trait definition and adding the list of export tags as an\n+         * argument to the transformer.\n+         *\n+         * @param exportByTags Tags that cause trait definitions to be\n+         *                     exported.\n+         */\n+        public void setExportTagged(Set<String> exportByTags) {\n+            this.exportTagged = exportByTags;\n+        }\n+\n+        /**\n+         * Gets the set of tags that are used to export trait definitions.\n+         *\n+         * @return the tags that are used to export trait definitions.\n+         */\n+        public Set<String> getExportTagged() {\n+            return exportTagged;\n+        }\n+    }\n+\n+    @Override\n+    String getBackwardCompatibleNameMapping() {\n+        return \"removeTraitDefinitions\";\n+    }\n+\n+    @Override\n+    public Class<Config> getConfigType() {\n+        return Config.class;\n+    }\n+\n+    @Override\n+    protected Model transformWithConfig(TransformContext context, Config config) {\n+        Model model = context.getModel();\n+        ModelTransformer transformer = context.getTransformer();\n+\n+        Model modelWithoutTraitDefinitions = transformer.getModelWithoutTraitShapes(model);\n+\n+        // If no export tags have been configured, we can return the scrubbed model directly.\n+        if (config.getExportTagged().isEmpty()) {\n+            return modelWithoutTraitDefinitions;\n+        }\n+\n+        Predicate<Shape> keepTraitDefsByTag = trait -> config.getExportTagged().stream().anyMatch(trait::hasTag);\n+        Model.Builder builder = modelWithoutTraitDefinitions.toBuilder();\n+\n+        // Add trait definitions back to scrubbed model.\n+        model.shapes()", "originalCommit": "e532889cded9c00c1ab940e5aed556241f416b88", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad77f6a229b46a7f1ffc0c6a21bacb038f4eb2b7", "chunk": "diff --git a/smithy-build/src/main/java/software/amazon/smithy/build/transforms/RemoveTraitDefinitions.java b/smithy-build/src/main/java/software/amazon/smithy/build/transforms/RemoveTraitDefinitions.java\nindex e5f70b8ea..5a48813f0 100644\n--- a/smithy-build/src/main/java/software/amazon/smithy/build/transforms/RemoveTraitDefinitions.java\n+++ b/smithy-build/src/main/java/software/amazon/smithy/build/transforms/RemoveTraitDefinitions.java\n\n@@ -18,11 +18,9 @@ package software.amazon.smithy.build.transforms;\n import java.util.Collections;\n import java.util.Set;\n import java.util.function.Predicate;\n-import java.util.logging.Logger;\n import software.amazon.smithy.build.TransformContext;\n import software.amazon.smithy.model.Model;\n import software.amazon.smithy.model.shapes.Shape;\n-import software.amazon.smithy.model.traits.TraitDefinition;\n import software.amazon.smithy.model.transform.ModelTransformer;\n \n /**\n"}}, {"oid": "ad77f6a229b46a7f1ffc0c6a21bacb038f4eb2b7", "url": "https://github.com/awslabs/smithy/commit/ad77f6a229b46a7f1ffc0c6a21bacb038f4eb2b7", "message": "Filter trait definitions before removal", "committedDate": "2020-09-15T22:12:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAyMjI3NA==", "url": "https://github.com/awslabs/smithy/pull/558#discussion_r489022274", "bodyText": "model.base?", "author": "mtdowling", "createdAt": "2020-09-15T22:18:02Z", "path": "smithy-model/src/main/java/software/amazon/smithy/model/transform/ModelTransformer.java", "diffHunk": "@@ -387,6 +406,20 @@ public Model scrubTraitDefinitions(Model model) {\n      * @return Returns a model that contains matching shapes.\n      */\n     public Model getModelWithoutTraitShapes(Model model) {\n+        return getModelWithoutTraitShapes(model, FunctionalUtils.alwaysTrue());\n+    }\n+\n+    /**\n+     * Gets all shapes from a model where shapes that define traits or shapes\n+     * that are only used as part of a trait definition have been removed.\n+     *\n+     * @param model Model that contains shapes.\n+     * @param keepFilter Predicate function that accepts a trait shape (that\n+     *  has the {@link TraitDefinition} trait) and returns true to remove the\n+     *  definition or false to keep the definition in the model.base.", "originalCommit": "ad77f6a229b46a7f1ffc0c6a21bacb038f4eb2b7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "28fcd22f930b6b1370bc5a9d8456402a3bd5cf60", "chunk": "diff --git a/smithy-model/src/main/java/software/amazon/smithy/model/transform/ModelTransformer.java b/smithy-model/src/main/java/software/amazon/smithy/model/transform/ModelTransformer.java\nindex fc2576528..e9d0459fc 100644\n--- a/smithy-model/src/main/java/software/amazon/smithy/model/transform/ModelTransformer.java\n+++ b/smithy-model/src/main/java/software/amazon/smithy/model/transform/ModelTransformer.java\n\n@@ -416,7 +416,7 @@ public final class ModelTransformer {\n      * @param model Model that contains shapes.\n      * @param keepFilter Predicate function that accepts a trait shape (that\n      *  has the {@link TraitDefinition} trait) and returns true to remove the\n-     *  definition or false to keep the definition in the model.base.\n+     *  definition or false to keep the definition in the model.\n      * @return Returns a model that contains matching shapes.\n      */\n     public Model getModelWithoutTraitShapes(Model model, Predicate<Shape> keepFilter) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAyMzExMA==", "url": "https://github.com/awslabs/smithy/pull/558#discussion_r489023110", "bodyText": "Can this filtering be done all on a single stream instead of needing to make two sets?", "author": "mtdowling", "createdAt": "2020-09-15T22:19:07Z", "path": "smithy-model/src/main/java/software/amazon/smithy/model/transform/ScrubTraitDefinitions.java", "diffHunk": "@@ -42,14 +45,21 @@\n  */\n final class ScrubTraitDefinitions {\n     Model transform(ModelTransformer transformer, Model model) {\n+        return transform(transformer, model, FunctionalUtils.alwaysTrue());\n+    }\n+\n+    Model transform(ModelTransformer transformer, Model model, Predicate<Shape> keepFilter) {\n         // Find all trait definition shapes and private shapes in the prelude.\n-        Set<Shape> toMark = Stream.concat(\n+        Set<Shape> traitDefinitions = Stream.concat(\n                 model.shapes().filter(shape -> shape.hasTrait(TraitDefinition.class)),\n                 model.shapes().filter(shape -> Prelude.isPreludeShape(shape) && shape.hasTrait(PrivateTrait.class))\n         ).collect(Collectors.toSet());\n \n+        // Filter any trait definitions from being marked for removal that we want to retain.\n+        Set<Shape> toMark = traitDefinitions.stream().filter(keepFilter).collect(Collectors.toSet());", "originalCommit": "ad77f6a229b46a7f1ffc0c6a21bacb038f4eb2b7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "28fcd22f930b6b1370bc5a9d8456402a3bd5cf60", "chunk": "diff --git a/smithy-model/src/main/java/software/amazon/smithy/model/transform/ScrubTraitDefinitions.java b/smithy-model/src/main/java/software/amazon/smithy/model/transform/ScrubTraitDefinitions.java\nindex 96c1d8533..39b2d2655 100644\n--- a/smithy-model/src/main/java/software/amazon/smithy/model/transform/ScrubTraitDefinitions.java\n+++ b/smithy-model/src/main/java/software/amazon/smithy/model/transform/ScrubTraitDefinitions.java\n\n@@ -49,15 +49,12 @@ final class ScrubTraitDefinitions {\n     }\n \n     Model transform(ModelTransformer transformer, Model model, Predicate<Shape> keepFilter) {\n-        // Find all trait definition shapes and private shapes in the prelude.\n-        Set<Shape> traitDefinitions = Stream.concat(\n-                model.shapes().filter(shape -> shape.hasTrait(TraitDefinition.class)),\n+        // Find all trait definition shapes, excluding those to be kept, and private shapes in the prelude.\n+        Set<Shape> toMark = Stream.concat(\n+                model.shapes().filter(shape -> isTraitDefinitionToRemove(shape, keepFilter)),\n                 model.shapes().filter(shape -> Prelude.isPreludeShape(shape) && shape.hasTrait(PrivateTrait.class))\n         ).collect(Collectors.toSet());\n \n-        // Filter any trait definitions from being marked for removal that we want to retain.\n-        Set<Shape> toMark = traitDefinitions.stream().filter(keepFilter).collect(Collectors.toSet());\n-\n         MarkAndSweep markAndSweep = new MarkAndSweep(\n                 // Mark shapes for removal that are private or remaining trait definitions.\n                 context -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAyMzQxOQ==", "url": "https://github.com/awslabs/smithy/pull/558#discussion_r489023419", "bodyText": "s/Swagger/OpenAPI", "author": "mtdowling", "createdAt": "2020-09-15T22:19:30Z", "path": "smithy-model/src/main/java/software/amazon/smithy/model/transform/ModelTransformer.java", "diffHunk": "@@ -376,7 +376,26 @@ public Model removeUnreferencedTraitDefinitions(Model model, Predicate<Shape> ke\n      * @return Returns the transformed model.base.\n      */\n     public Model scrubTraitDefinitions(Model model) {\n-        return new ScrubTraitDefinitions().transform(this, model);\n+        return scrubTraitDefinitions(model, FunctionalUtils.alwaysTrue());\n+    }\n+\n+    /**\n+     * Removes trait definitions from a model and all shapes that are\n+     * only connected to the graph either directly or transitively by a\n+     * trait definition shape.\n+     *\n+     * <p>This can be useful when serializing a Smithy model to a format that\n+     * does not include trait definitions and the shapes used by trait definitions\n+     * would have no meaning (e.g., Swagger).", "originalCommit": "ad77f6a229b46a7f1ffc0c6a21bacb038f4eb2b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA3NTg1OA==", "url": "https://github.com/awslabs/smithy/pull/558#discussion_r489075858", "bodyText": "Fixed this and a couple other Swagger references.", "author": "srchase", "createdAt": "2020-09-15T23:35:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAyMzQxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "28fcd22f930b6b1370bc5a9d8456402a3bd5cf60", "chunk": "diff --git a/smithy-model/src/main/java/software/amazon/smithy/model/transform/ModelTransformer.java b/smithy-model/src/main/java/software/amazon/smithy/model/transform/ModelTransformer.java\nindex fc2576528..e9d0459fc 100644\n--- a/smithy-model/src/main/java/software/amazon/smithy/model/transform/ModelTransformer.java\n+++ b/smithy-model/src/main/java/software/amazon/smithy/model/transform/ModelTransformer.java\n\n@@ -370,7 +370,7 @@ public final class ModelTransformer {\n      *\n      * <p>This can be useful when serializing a Smithy model to a format that\n      * does not include trait definitions and the shapes used by trait definitions\n-     * would have no meaning (e.g., Swagger).\n+     * would have no meaning (e.g., OpenAPI).\n      *\n      * @param model Model to transform.\n      * @return Returns the transformed model.base.\n"}}, {"oid": "b931e8d84fcb1226d99148b8fda8a3592c8bb3f6", "url": "https://github.com/awslabs/smithy/commit/b931e8d84fcb1226d99148b8fda8a3592c8bb3f6", "message": "Test added method signatures", "committedDate": "2020-09-15T22:57:47Z", "type": "commit"}, {"oid": "28fcd22f930b6b1370bc5a9d8456402a3bd5cf60", "url": "https://github.com/awslabs/smithy/commit/28fcd22f930b6b1370bc5a9d8456402a3bd5cf60", "message": "Consolidate streaming to set and fix wording", "committedDate": "2020-09-15T23:31:06Z", "type": "commit"}, {"oid": "864ca08cbf89bee627176e37cdb988e664b1491e", "url": "https://github.com/awslabs/smithy/commit/864ca08cbf89bee627176e37cdb988e664b1491e", "message": "Fix OpenAPI reference", "committedDate": "2020-09-15T23:33:04Z", "type": "commit"}]}