{"pr_number": 2093, "pr_title": "Makes a default data fetcher exception handler possible", "pr_createdAt": "2020-11-03T00:28:32Z", "pr_url": "https://github.com/graphql-java/graphql-java/pull/2093", "timeline": [{"oid": "f9f982145499727fa1da95a7834ad7a148d4b754", "url": "https://github.com/graphql-java/graphql-java/commit/f9f982145499727fa1da95a7834ad7a148d4b754", "message": "Makes a default data fetcher exception handler possible", "committedDate": "2020-11-03T00:27:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM2MDI4MQ==", "url": "https://github.com/graphql-java/graphql-java/pull/2093#discussion_r516360281", "bodyText": "just some better javadoc", "author": "bbakerman", "createdAt": "2020-11-03T00:29:43Z", "path": "src/main/java/graphql/execution/ValueUnboxer.java", "diffHunk": "@@ -2,9 +2,17 @@\n \n import graphql.PublicSpi;\n \n+/**\n+ * A value unboxer takes values that are wrapped in classes like {@link java.util.Optional} / {@link java.util.OptionalInt} etc..\n+ * and returns value from them.  You can provide your own implementation if you have your own specific\n+ * holder classes.\n+ */\n @PublicSpi\n public interface ValueUnboxer {\n \n+    /**\n+     * The default value unboxer handles JDK classes such as {@link java.util.Optional} and {@link java.util.OptionalInt} etc..\n+     */\n     ValueUnboxer DEFAULT = new DefaultValueUnboxer();", "originalCommit": "f9f982145499727fa1da95a7834ad7a148d4b754", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}