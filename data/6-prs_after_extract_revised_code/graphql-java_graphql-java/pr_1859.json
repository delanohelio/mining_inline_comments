{"pr_number": 1859, "pr_title": "New Validation rule: unique_variable_names", "pr_createdAt": "2020-04-11T07:44:53Z", "pr_url": "https://github.com/graphql-java/graphql-java/pull/1859", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMwNDEwMg==", "url": "https://github.com/graphql-java/graphql-java/pull/1859#discussion_r409304102", "bodyText": "Please change this back.  We use non .* imports", "author": "bbakerman", "createdAt": "2020-04-16T06:09:45Z", "path": "src/main/java/graphql/validation/Validator.java", "diffHunk": "@@ -4,32 +4,7 @@\n import graphql.Internal;\n import graphql.language.Document;\n import graphql.schema.GraphQLSchema;\n-import graphql.validation.rules.ArgumentsOfCorrectType;\n-import graphql.validation.rules.DeferredDirectiveOnNonNullableField;\n-import graphql.validation.rules.DeferredDirectiveOnQueryOperation;\n-import graphql.validation.rules.DeferredMustBeOnAllFields;\n-import graphql.validation.rules.ExecutableDefinitions;\n-import graphql.validation.rules.FieldsOnCorrectType;\n-import graphql.validation.rules.FragmentsOnCompositeType;\n-import graphql.validation.rules.KnownArgumentNames;\n-import graphql.validation.rules.KnownDirectives;\n-import graphql.validation.rules.KnownFragmentNames;\n-import graphql.validation.rules.KnownTypeNames;\n-import graphql.validation.rules.LoneAnonymousOperation;\n-import graphql.validation.rules.NoFragmentCycles;\n-import graphql.validation.rules.NoUndefinedVariables;\n-import graphql.validation.rules.NoUnusedFragments;\n-import graphql.validation.rules.NoUnusedVariables;\n-import graphql.validation.rules.OverlappingFieldsCanBeMerged;\n-import graphql.validation.rules.PossibleFragmentSpreads;\n-import graphql.validation.rules.ProvidedNonNullArguments;\n-import graphql.validation.rules.ScalarLeafs;\n-import graphql.validation.rules.UniqueDirectiveNamesPerLocation;\n-import graphql.validation.rules.UniqueFragmentNames;\n-import graphql.validation.rules.UniqueOperationNames;\n-import graphql.validation.rules.VariableDefaultValuesOfCorrectType;\n-import graphql.validation.rules.VariableTypesMatchRule;\n-import graphql.validation.rules.VariablesAreInputTypes;\n+import graphql.validation.rules.*;", "originalCommit": "2751c40c834f29ed842df4e196123eb3c5f0d9f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU1MTQ2OQ==", "url": "https://github.com/graphql-java/graphql-java/pull/1859#discussion_r409551469", "bodyText": "Done, thanks for code review", "author": "dugenkui03", "createdAt": "2020-04-16T13:22:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMwNDEwMg=="}], "type": "inlineReview", "revised_code": {"commit": "52ab4771cc98b627bf1ab470d404c78f8edf4727", "chunk": "diff --git a/src/main/java/graphql/validation/Validator.java b/src/main/java/graphql/validation/Validator.java\nindex 38c03d5b..b5634872 100644\n--- a/src/main/java/graphql/validation/Validator.java\n+++ b/src/main/java/graphql/validation/Validator.java\n\n@@ -4,7 +4,33 @@ package graphql.validation;\n import graphql.Internal;\n import graphql.language.Document;\n import graphql.schema.GraphQLSchema;\n-import graphql.validation.rules.*;\n+import graphql.validation.rules.ArgumentsOfCorrectType;\n+import graphql.validation.rules.DeferredDirectiveOnNonNullableField;\n+import graphql.validation.rules.DeferredDirectiveOnQueryOperation;\n+import graphql.validation.rules.DeferredMustBeOnAllFields;\n+import graphql.validation.rules.ExecutableDefinitions;\n+import graphql.validation.rules.FieldsOnCorrectType;\n+import graphql.validation.rules.FragmentsOnCompositeType;\n+import graphql.validation.rules.KnownArgumentNames;\n+import graphql.validation.rules.KnownDirectives;\n+import graphql.validation.rules.KnownFragmentNames;\n+import graphql.validation.rules.KnownTypeNames;\n+import graphql.validation.rules.LoneAnonymousOperation;\n+import graphql.validation.rules.NoFragmentCycles;\n+import graphql.validation.rules.NoUndefinedVariables;\n+import graphql.validation.rules.NoUnusedFragments;\n+import graphql.validation.rules.NoUnusedVariables;\n+import graphql.validation.rules.OverlappingFieldsCanBeMerged;\n+import graphql.validation.rules.PossibleFragmentSpreads;\n+import graphql.validation.rules.ProvidedNonNullArguments;\n+import graphql.validation.rules.ScalarLeafs;\n+import graphql.validation.rules.UniqueDirectiveNamesPerLocation;\n+import graphql.validation.rules.UniqueFragmentNames;\n+import graphql.validation.rules.UniqueOperationNames;\n+import graphql.validation.rules.VariableDefaultValuesOfCorrectType;\n+import graphql.validation.rules.VariableTypesMatchRule;\n+import graphql.validation.rules.VariablesAreInputTypes;\n+import graphql.validation.rules.UniqueVariableNamesRule;\n \n import java.util.ArrayList;\n import java.util.List;\n"}}, {"oid": "52ab4771cc98b627bf1ab470d404c78f8edf4727", "url": "https://github.com/graphql-java/graphql-java/commit/52ab4771cc98b627bf1ab470d404c78f8edf4727", "message": "unique_variable_names", "committedDate": "2020-04-16T13:06:23Z", "type": "commit"}, {"oid": "52ab4771cc98b627bf1ab470d404c78f8edf4727", "url": "https://github.com/graphql-java/graphql-java/commit/52ab4771cc98b627bf1ab470d404c78f8edf4727", "message": "unique_variable_names", "committedDate": "2020-04-16T13:06:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5NzE3MQ==", "url": "https://github.com/graphql-java/graphql-java/pull/1859#discussion_r427097171", "bodyText": "we use LinkedHashSet in general in favor of HashSet because it preserves the order.", "author": "andimarek", "createdAt": "2020-05-19T07:48:19Z", "path": "src/main/java/graphql/validation/rules/UniqueVariableNamesRule.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package graphql.validation.rules;\n+\n+import graphql.language.*;\n+import graphql.validation.AbstractRule;\n+import graphql.validation.ValidationContext;\n+import graphql.validation.ValidationErrorCollector;\n+import graphql.validation.ValidationErrorType;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Unique variable names\n+ * <p>\n+ * A GraphQL operation is only valid if all its variables are uniquely named.\n+ */\n+public class UniqueVariableNamesRule extends AbstractRule {\n+\n+    public UniqueVariableNamesRule(ValidationContext validationContext, ValidationErrorCollector validationErrorCollector) {\n+        super(validationContext, validationErrorCollector);\n+    }\n+\n+    @Override\n+    public void checkOperationDefinition(OperationDefinition operationDefinition) {\n+        List<VariableDefinition> variableDefinitions = operationDefinition.getVariableDefinitions();\n+        if (variableDefinitions == null || variableDefinitions.size() <= 1) {\n+            return;\n+        }\n+\n+        Set<String> variableNameList = new HashSet<>(variableDefinitions.size());", "originalCommit": "52ab4771cc98b627bf1ab470d404c78f8edf4727", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7dd96aa44ff024aeafefba78a2ade4c4ad9f3bda", "chunk": "diff --git a/src/main/java/graphql/validation/rules/UniqueVariableNamesRule.java b/src/main/java/graphql/validation/rules/UniqueVariableNamesRule.java\nindex 0fd4f529..f242bea4 100644\n--- a/src/main/java/graphql/validation/rules/UniqueVariableNamesRule.java\n+++ b/src/main/java/graphql/validation/rules/UniqueVariableNamesRule.java\n\n@@ -1,12 +1,13 @@\n package graphql.validation.rules;\n \n-import graphql.language.*;\n+import graphql.language.OperationDefinition;\n+import graphql.language.VariableDefinition;\n import graphql.validation.AbstractRule;\n import graphql.validation.ValidationContext;\n import graphql.validation.ValidationErrorCollector;\n import graphql.validation.ValidationErrorType;\n \n-import java.util.HashSet;\n+import java.util.LinkedHashSet;\n import java.util.List;\n import java.util.Set;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5NzQxMg==", "url": "https://github.com/graphql-java/graphql-java/pull/1859#discussion_r427097412", "bodyText": "please have a look at the intellij formatter inside the root folder: we don't use * imports.", "author": "andimarek", "createdAt": "2020-05-19T07:48:44Z", "path": "src/main/java/graphql/validation/rules/UniqueVariableNamesRule.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package graphql.validation.rules;\n+\n+import graphql.language.*;", "originalCommit": "52ab4771cc98b627bf1ab470d404c78f8edf4727", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwNjI2OQ==", "url": "https://github.com/graphql-java/graphql-java/pull/1859#discussion_r427506269", "bodyText": "Thanks for your review and guide, I have updated intellij setting and PR.", "author": "dugenkui03", "createdAt": "2020-05-19T18:17:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5NzQxMg=="}], "type": "inlineReview", "revised_code": {"commit": "7dd96aa44ff024aeafefba78a2ade4c4ad9f3bda", "chunk": "diff --git a/src/main/java/graphql/validation/rules/UniqueVariableNamesRule.java b/src/main/java/graphql/validation/rules/UniqueVariableNamesRule.java\nindex 0fd4f529..f242bea4 100644\n--- a/src/main/java/graphql/validation/rules/UniqueVariableNamesRule.java\n+++ b/src/main/java/graphql/validation/rules/UniqueVariableNamesRule.java\n\n@@ -1,12 +1,13 @@\n package graphql.validation.rules;\n \n-import graphql.language.*;\n+import graphql.language.OperationDefinition;\n+import graphql.language.VariableDefinition;\n import graphql.validation.AbstractRule;\n import graphql.validation.ValidationContext;\n import graphql.validation.ValidationErrorCollector;\n import graphql.validation.ValidationErrorType;\n \n-import java.util.HashSet;\n+import java.util.LinkedHashSet;\n import java.util.List;\n import java.util.Set;\n \n"}}, {"oid": "7dd96aa44ff024aeafefba78a2ade4c4ad9f3bda", "url": "https://github.com/graphql-java/graphql-java/commit/7dd96aa44ff024aeafefba78a2ade4c4ad9f3bda", "message": "remove '*' imports; replace HashSet with LinkedHashSet, in ValidationErrorType.", "committedDate": "2020-05-19T18:10:17Z", "type": "commit"}]}