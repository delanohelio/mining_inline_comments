{"pr_number": 1774, "pr_title": "Use descriptions instead of comments for AstPrinter and IntrospectionResultToSchema", "pr_createdAt": "2020-01-24T05:22:00Z", "pr_url": "https://github.com/graphql-java/graphql-java/pull/1774", "timeline": [{"oid": "94d03131f475517775ca8c2ae41e8c1091045a46", "url": "https://github.com/graphql-java/graphql-java/commit/94d03131f475517775ca8c2ae41e8c1091045a46", "message": "changed comments to descriptions and fixed tests", "committedDate": "2020-01-24T05:16:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4Nzc1MQ==", "url": "https://github.com/graphql-java/graphql-java/pull/1774#discussion_r372187751", "bodyText": "please remove the commented out code", "author": "andimarek", "createdAt": "2020-01-29T04:51:56Z", "path": "src/main/java/graphql/language/AstPrinter.java", "diffHunk": "@@ -184,8 +184,16 @@ private AstPrinter(boolean compactMode) {\n         };\n     }\n \n-    private boolean hasComments(List<? extends Node> nodes) {\n-        return nodes.stream().anyMatch(it -> it.getComments().size() > 0);\n+//    private boolean hasDescription(Node<?> node) {\n+//        Description description = ((AbstractDescribedNode) node).getDescription();", "originalCommit": "94d03131f475517775ca8c2ae41e8c1091045a46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4316c0e777b8225a386aa0a5908892415c7ede7f", "chunk": "diff --git a/src/main/java/graphql/language/AstPrinter.java b/src/main/java/graphql/language/AstPrinter.java\nindex 066c6150..635b5b91 100644\n--- a/src/main/java/graphql/language/AstPrinter.java\n+++ b/src/main/java/graphql/language/AstPrinter.java\n\n@@ -184,14 +184,6 @@ public class AstPrinter {\n         };\n     }\n \n-//    private boolean hasDescription(Node<?> node) {\n-//        Description description = ((AbstractDescribedNode) node).getDescription();\n-//        if (description == null || description.getContent() == null || description.getContent().length() == 0 ) {\n-//                return false;\n-//        }\n-//        return true;\n-//    }\n-\n     private boolean hasDescription(List<? extends Node> nodes) {\n         return nodes.stream().anyMatch(it -> ((AbstractDescribedNode) it).getDescription() != null);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NzgzMA==", "url": "https://github.com/graphql-java/graphql-java/pull/1774#discussion_r372187830", "bodyText": "plase mark it as @PublicAPI (see other classes)", "author": "andimarek", "createdAt": "2020-01-29T04:52:21Z", "path": "src/main/java/graphql/language/AbstractDescribedNode.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package graphql.language;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+public abstract class AbstractDescribedNode<T extends Node> extends AbstractNode<T> implements DescribedNode<T>  {", "originalCommit": "94d03131f475517775ca8c2ae41e8c1091045a46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4316c0e777b8225a386aa0a5908892415c7ede7f", "chunk": "diff --git a/src/main/java/graphql/language/AbstractDescribedNode.java b/src/main/java/graphql/language/AbstractDescribedNode.java\nindex 4c72274b..c8d3b50c 100644\n--- a/src/main/java/graphql/language/AbstractDescribedNode.java\n+++ b/src/main/java/graphql/language/AbstractDescribedNode.java\n\n@@ -1,8 +1,11 @@\n package graphql.language;\n \n+import graphql.PublicApi;\n+\n import java.util.List;\n import java.util.Map;\n \n+@PublicApi\n public abstract class AbstractDescribedNode<T extends Node> extends AbstractNode<T> implements DescribedNode<T>  {\n \n     private Description description;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4Nzk0Mw==", "url": "https://github.com/graphql-java/graphql-java/pull/1774#discussion_r372187943", "bodyText": "please mark it as @PublicAPI and maybe add a short javadoc", "author": "andimarek", "createdAt": "2020-01-29T04:52:57Z", "path": "src/main/java/graphql/language/DescribedNode.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package graphql.language;\n+\n+public interface DescribedNode<T extends Node> extends Node<T> {", "originalCommit": "94d03131f475517775ca8c2ae41e8c1091045a46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4316c0e777b8225a386aa0a5908892415c7ede7f", "chunk": "diff --git a/src/main/java/graphql/language/DescribedNode.java b/src/main/java/graphql/language/DescribedNode.java\nindex 5a2806f5..0d68dac6 100644\n--- a/src/main/java/graphql/language/DescribedNode.java\n+++ b/src/main/java/graphql/language/DescribedNode.java\n\n@@ -1,5 +1,11 @@\n package graphql.language;\n \n+import graphql.PublicApi;\n+\n+/**\n+ * Represents a node that can contain a description.\n+ */\n+@PublicApi\n public interface DescribedNode<T extends Node> extends Node<T> {\n \n     /**\n"}}, {"oid": "4316c0e777b8225a386aa0a5908892415c7ede7f", "url": "https://github.com/graphql-java/graphql-java/commit/4316c0e777b8225a386aa0a5908892415c7ede7f", "message": "removed comment, added public api and javadoc", "committedDate": "2020-01-29T23:07:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1MTA3OA==", "url": "https://github.com/graphql-java/graphql-java/pull/1774#discussion_r374451078", "bodyText": "Since these are all\ntoDescription((String) input.get(\"description\")\nyou could have String toDescription(Map<String, Object> input) say - much less code", "author": "bbakerman", "createdAt": "2020-02-04T02:51:59Z", "path": "src/main/java/graphql/introspection/IntrospectionResultToSchema.java", "diffHunk": "@@ -264,7 +264,7 @@ private void createDeprecatedDirective(Map<String, Object> field, NodeDirectives\n         for (Map<String, Object> arg : args) {\n             Type argType = createTypeIndirection((Map<String, Object>) arg.get(\"type\"));\n             InputValueDefinition.Builder inputValueDefinition = InputValueDefinition.newInputValueDefinition().name((String) arg.get(\"name\")).type(argType);\n-            inputValueDefinition.comments(toComment((String) arg.get(\"description\")));\n+            inputValueDefinition.description(toDescription((String) arg.get(\"description\")));", "originalCommit": "4316c0e777b8225a386aa0a5908892415c7ede7f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk5ODIxMw==", "url": "https://github.com/graphql-java/graphql-java/pull/1774#discussion_r374998213", "bodyText": "Yep, that makes a lot of sense", "author": "Sajan-99", "createdAt": "2020-02-05T00:21:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1MTA3OA=="}], "type": "inlineReview", "revised_code": {"commit": "ac2ca0c0978b1bb99c1fbcfc428f59504950c772", "chunk": "diff --git a/src/main/java/graphql/introspection/IntrospectionResultToSchema.java b/src/main/java/graphql/introspection/IntrospectionResultToSchema.java\nindex 1a4564c3..5bbbdc91 100644\n--- a/src/main/java/graphql/introspection/IntrospectionResultToSchema.java\n+++ b/src/main/java/graphql/introspection/IntrospectionResultToSchema.java\n\n@@ -264,7 +264,7 @@ public class IntrospectionResultToSchema {\n         for (Map<String, Object> arg : args) {\n             Type argType = createTypeIndirection((Map<String, Object>) arg.get(\"type\"));\n             InputValueDefinition.Builder inputValueDefinition = InputValueDefinition.newInputValueDefinition().name((String) arg.get(\"name\")).type(argType);\n-            inputValueDefinition.description(toDescription((String) arg.get(\"description\")));\n+            inputValueDefinition.description(toDescription(arg));\n \n             String valueLiteral = (String) arg.get(\"defaultValue\");\n             if (valueLiteral != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ1MTU5MA==", "url": "https://github.com/graphql-java/graphql-java/pull/1774#discussion_r374451590", "bodyText": "safety might be to filter first\nstream().filter( it -> it instanceof AbstractDescribedNode)..anyMatch(it -> ((AbstractDescribedNode) it).getDescription() != null)", "author": "bbakerman", "createdAt": "2020-02-04T02:54:29Z", "path": "src/main/java/graphql/language/AstPrinter.java", "diffHunk": "@@ -184,8 +184,8 @@ private AstPrinter(boolean compactMode) {\n         };\n     }\n \n-    private boolean hasComments(List<? extends Node> nodes) {\n-        return nodes.stream().anyMatch(it -> it.getComments().size() > 0);\n+    private boolean hasDescription(List<? extends Node> nodes) {\n+        return nodes.stream().anyMatch(it -> ((AbstractDescribedNode) it).getDescription() != null);", "originalCommit": "4316c0e777b8225a386aa0a5908892415c7ede7f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ac2ca0c0978b1bb99c1fbcfc428f59504950c772", "chunk": "diff --git a/src/main/java/graphql/language/AstPrinter.java b/src/main/java/graphql/language/AstPrinter.java\nindex 635b5b91..30344c8b 100644\n--- a/src/main/java/graphql/language/AstPrinter.java\n+++ b/src/main/java/graphql/language/AstPrinter.java\n\n@@ -185,7 +185,7 @@ public class AstPrinter {\n     }\n \n     private boolean hasDescription(List<? extends Node> nodes) {\n-        return nodes.stream().anyMatch(it -> ((AbstractDescribedNode) it).getDescription() != null);\n+        return nodes.stream().filter(it -> it instanceof AbstractDescribedNode).anyMatch(it -> ((AbstractDescribedNode) it).getDescription() != null);\n     }\n \n     private NodePrinter<FragmentDefinition> fragmentDefinition() {\n"}}, {"oid": "ac2ca0c0978b1bb99c1fbcfc428f59504950c772", "url": "https://github.com/graphql-java/graphql-java/commit/ac2ca0c0978b1bb99c1fbcfc428f59504950c772", "message": "shortened toDescription and added safety to hasDescription", "committedDate": "2020-02-05T00:31:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNjkyNQ==", "url": "https://github.com/graphql-java/graphql-java/pull/1774#discussion_r375606925", "bodyText": "the super class AbstractDescribedNode does contain the description, so no derived class should contain description (otherwise it is \"overridden\" in a non obvious way)", "author": "andimarek", "createdAt": "2020-02-06T02:01:56Z", "path": "src/main/java/graphql/language/DirectiveDefinition.java", "diffHunk": "@@ -35,7 +35,7 @@ protected DirectiveDefinition(String name,\n                                   List<Comment> comments,\n                                   IgnoredChars ignoredChars,\n                                   Map<String, String> additionalData) {\n-        super(sourceLocation, comments, ignoredChars, additionalData);\n+        super(sourceLocation, comments, ignoredChars, additionalData, description);\n         this.name = name;\n         this.description = description;", "originalCommit": "ac2ca0c0978b1bb99c1fbcfc428f59504950c772", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEyOTAxMw==", "url": "https://github.com/graphql-java/graphql-java/pull/1774#discussion_r376129013", "bodyText": "Should be okay now, I removed instances of description from derived classes.", "author": "Sajan-99", "createdAt": "2020-02-06T22:58:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNjkyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "1f7ca4a51baad633f3487aed6fb3c110ce409f25", "chunk": "diff --git a/src/main/java/graphql/language/DirectiveDefinition.java b/src/main/java/graphql/language/DirectiveDefinition.java\nindex e43acbe6..cb5a977b 100644\n--- a/src/main/java/graphql/language/DirectiveDefinition.java\n+++ b/src/main/java/graphql/language/DirectiveDefinition.java\n\n@@ -37,7 +36,6 @@ public class DirectiveDefinition extends AbstractDescribedNode<DirectiveDefiniti\n                                   Map<String, String> additionalData) {\n         super(sourceLocation, comments, ignoredChars, additionalData, description);\n         this.name = name;\n-        this.description = description;\n         this.inputValueDefinitions = inputValueDefinitions;\n         this.directiveLocations = directiveLocations;\n     }\n"}}, {"oid": "1f7ca4a51baad633f3487aed6fb3c110ce409f25", "url": "https://github.com/graphql-java/graphql-java/commit/1f7ca4a51baad633f3487aed6fb3c110ce409f25", "message": "removed description and getDescription from child classes", "committedDate": "2020-02-06T22:54:53Z", "type": "commit"}, {"oid": "848f19bffdfde60239e8d13893f97ddda0a797e5", "url": "https://github.com/graphql-java/graphql-java/commit/848f19bffdfde60239e8d13893f97ddda0a797e5", "message": "added removed test", "committedDate": "2020-02-10T22:51:19Z", "type": "commit"}]}