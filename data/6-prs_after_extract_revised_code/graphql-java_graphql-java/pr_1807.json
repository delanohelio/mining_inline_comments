{"pr_number": 1807, "pr_title": "The ability to parse and validate a document without execution", "pr_createdAt": "2020-03-03T11:10:08Z", "pr_url": "https://github.com/graphql-java/graphql-java/pull/1807", "timeline": [{"oid": "f546119088f15f7d836f25c19c0bc41142034f5f", "url": "https://github.com/graphql-java/graphql-java/commit/f546119088f15f7d836f25c19c0bc41142034f5f", "message": "The ability to parse and validate a document", "committedDate": "2020-03-03T11:09:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2Mjk0Mg==", "url": "https://github.com/graphql-java/graphql-java/pull/1807#discussion_r428462942", "bodyText": "can we make it a regular builder Pattern here?", "author": "andimarek", "createdAt": "2020-05-21T06:07:22Z", "path": "src/main/java/graphql/ParseAndValidateResult.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package graphql;\n+\n+import graphql.execution.instrumentation.DocumentAndVariables;\n+import graphql.language.Document;\n+import graphql.parser.InvalidSyntaxException;\n+import graphql.validation.ValidationError;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * A result object used in {@link graphql.ParseAndValidate} helper that indicates the outcomes of a parse\n+ * and validate operation.\n+ */\n+@PublicApi\n+public class ParseAndValidateResult {\n+\n+    private final Document document;\n+    private final Map<String, Object> variables;\n+    private final InvalidSyntaxException syntaxException;\n+    private final List<ValidationError> validationErrors;\n+\n+    private ParseAndValidateResult(Document document, Map<String, Object> variables, InvalidSyntaxException syntaxException, List<ValidationError> validationErrors) {\n+        this.document = document;\n+        this.variables = variables == null ? Collections.emptyMap() : variables;\n+        this.syntaxException = syntaxException;\n+        this.validationErrors = validationErrors;\n+    }\n+\n+    /**\n+     * @return true if there was a parse exception or the validation failed\n+     */\n+    public boolean isFailure() {\n+        return syntaxException != null || !validationErrors.isEmpty();\n+    }\n+\n+    /**\n+     * @return the parsed document or null if its syntactically invalid.\n+     */\n+    public Document getDocument() {\n+        return document;\n+    }\n+\n+    /**\n+     * @return the document variables or null if its syntactically invalid.\n+     */\n+    public Map<String, Object> getVariables() {\n+        return variables;\n+    }\n+\n+    /**\n+     * @return the parsed document and variables or null if its syntactically invalid.\n+     */\n+    public DocumentAndVariables getDocumentAndVariables() {\n+        if (document != null) {\n+            return DocumentAndVariables.newDocumentAndVariables().document(document).variables(variables).build();\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * @return the syntax exception or null if its syntactically valid.\n+     */\n+    public InvalidSyntaxException getSyntaxException() {\n+        return syntaxException;\n+    }\n+\n+    /**\n+     * @return a list of validation errors, which might be empty if its syntactically invalid.\n+     */\n+    public List<ValidationError> getValidationErrors() {\n+        return validationErrors;\n+    }\n+\n+    /**\n+     * A list of all the errors (parse and validate) that have occurred\n+     *\n+     * @return the errors that have occurred or empty list if there are none\n+     */\n+    public List<GraphQLError> getErrors() {\n+        List<GraphQLError> errors = new ArrayList<>();\n+        if (syntaxException != null) {\n+            errors.add(syntaxException.toInvalidSyntaxError());\n+        }\n+        errors.addAll(validationErrors);\n+        return errors;\n+    }\n+", "originalCommit": "f546119088f15f7d836f25c19c0bc41142034f5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3OTA3Mg==", "url": "https://github.com/graphql-java/graphql-java/pull/1807#discussion_r428579072", "bodyText": "done", "author": "bbakerman", "createdAt": "2020-05-21T10:46:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ2Mjk0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "58e14ac9575723e4ccc75459eb248a11eb960225", "chunk": "diff --git a/src/main/java/graphql/ParseAndValidateResult.java b/src/main/java/graphql/ParseAndValidateResult.java\nindex cf26ce75..b2e4a4c7 100644\n--- a/src/main/java/graphql/ParseAndValidateResult.java\n+++ b/src/main/java/graphql/ParseAndValidateResult.java\n\n@@ -9,6 +9,7 @@ import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import java.util.function.Consumer;\n \n /**\n  * A result object used in {@link graphql.ParseAndValidate} helper that indicates the outcomes of a parse\n"}}, {"oid": "93bc574e349accfa95eea2c8eac24fcd01f0ed15", "url": "https://github.com/graphql-java/graphql-java/commit/93bc574e349accfa95eea2c8eac24fcd01f0ed15", "message": "Merge remote-tracking branch 'origin/master' into parse-and-validate-api", "committedDate": "2020-05-21T09:51:01Z", "type": "commit"}, {"oid": "58e14ac9575723e4ccc75459eb248a11eb960225", "url": "https://github.com/graphql-java/graphql-java/commit/58e14ac9575723e4ccc75459eb248a11eb960225", "message": "PR feedback", "committedDate": "2020-05-21T10:38:24Z", "type": "commit"}]}