{"pr_number": 2123, "pr_title": "avoiding allocations in ConditionalNodes", "pr_createdAt": "2020-12-02T17:40:23Z", "pr_url": "https://github.com/graphql-java/graphql-java/pull/2123", "timeline": [{"oid": "8b52548c00688ddf86ea84396f6242e3b761fd2d", "url": "https://github.com/graphql-java/graphql-java/commit/8b52548c00688ddf86ea84396f6242e3b761fd2d", "message": "avoiding allocations in ConditionalNodes", "committedDate": "2020-12-02T17:36:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY3NDQzMw==", "url": "https://github.com/graphql-java/graphql-java/pull/2123#discussion_r534674433", "bodyText": "Move the logic of findDirectiveByName to NodeUtil, and replace all getXXByName with getNodeByName(List<NamedNode> list, String name) will be better.", "author": "dugenkui03", "createdAt": "2020-12-03T05:15:49Z", "path": "src/main/java/graphql/execution/ConditionalNodes.java", "diffHunk": "@@ -28,19 +25,23 @@ public boolean shouldInclude(Map<String, Object> variables, List<Directive> dire\n     }\n \n     private boolean getDirectiveResult(Map<String, Object> variables, List<Directive> directives, String directiveName, boolean defaultValue) {\n-        List<Directive> foundDirectives = getDirectiveByName(directives, directiveName);\n-        if (!foundDirectives.isEmpty()) {\n-            Directive directive = foundDirectives.get(0);\n-            Map<String, Object> argumentValues = valuesResolver.getArgumentValues(SkipDirective.getArguments(), directive.getArguments(), variables);\n+        Directive foundDirective = findDirectiveByName(directives, directiveName);\n+        if (foundDirective != null) {\n+            Map<String, Object> argumentValues = valuesResolver.getArgumentValues(SkipDirective.getArguments(), foundDirective.getArguments(), variables);\n             Object flag = argumentValues.get(\"if\");\n             Assert.assertTrue(flag instanceof Boolean, () -> String.format(\"The '%s' directive MUST have a value for the 'if' argument\", directiveName));\n             return (Boolean) flag;\n         }\n         return defaultValue;\n     }\n \n-    private List<Directive> getDirectiveByName(List<Directive> directives, String name) {\n-        return NodeUtil.allDirectivesByName(directives).getOrDefault(name, emptyList());\n+    private Directive findDirectiveByName(List<Directive> directives, String name) {", "originalCommit": "8b52548c00688ddf86ea84396f6242e3b761fd2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTExODg3Nw==", "url": "https://github.com/graphql-java/graphql-java/pull/2123#discussion_r535118877", "bodyText": "done", "author": "dfa1", "createdAt": "2020-12-03T11:15:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY3NDQzMw=="}], "type": "inlineReview", "revised_code": {"commit": "43aaf7a7932f689229ea570919700140c34b90a6", "chunk": "diff --git a/src/main/java/graphql/execution/ConditionalNodes.java b/src/main/java/graphql/execution/ConditionalNodes.java\nindex b2e3402f..8db77b96 100644\n--- a/src/main/java/graphql/execution/ConditionalNodes.java\n+++ b/src/main/java/graphql/execution/ConditionalNodes.java\n\n@@ -25,7 +25,7 @@ public class ConditionalNodes {\n     }\n \n     private boolean getDirectiveResult(Map<String, Object> variables, List<Directive> directives, String directiveName, boolean defaultValue) {\n-        Directive foundDirective = findDirectiveByName(directives, directiveName);\n+        Directive foundDirective = NodeUtil.findNodeByName(directives, directiveName);\n         if (foundDirective != null) {\n             Map<String, Object> argumentValues = valuesResolver.getArgumentValues(SkipDirective.getArguments(), foundDirective.getArguments(), variables);\n             Object flag = argumentValues.get(\"if\");\n"}}, {"oid": "43aaf7a7932f689229ea570919700140c34b90a6", "url": "https://github.com/graphql-java/graphql-java/commit/43aaf7a7932f689229ea570919700140c34b90a6", "message": "share code in NodeUtil\n\nRewriting findDirectiveByName and getArgumentByName in a more generic way.", "committedDate": "2020-12-03T11:13:41Z", "type": "commit"}]}