{"pr_number": 6430, "pr_title": "Extract move support bonus calculation & Convert Out Parameters to Return Values", "pr_createdAt": "2020-05-08T04:23:58Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6430", "timeline": [{"oid": "14ec2ed480f7f4fb86ac393ebe0bf23e143f3d33", "url": "https://github.com/triplea-game/triplea/commit/14ec2ed480f7f4fb86ac393ebe0bf23e143f3d33", "message": "Move method 'int getSupport' to its own class 'SupportBonusCalculator'", "committedDate": "2020-05-08T02:21:49Z", "type": "commit"}, {"oid": "f75d5960f8176a5ab20acbcae519711b472b45d6", "url": "https://github.com/triplea-game/triplea/commit/f75d5960f8176a5ab20acbcae519711b472b45d6", "message": "DiceRoll: Convert 'out' parameters of '#getSupport' to be a return value.", "committedDate": "2020-05-08T02:37:26Z", "type": "commit"}, {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa", "url": "https://github.com/triplea-game/triplea/commit/f982e4430fc19c3844b77e1c0678e35fbd24befa", "message": "Formatting", "committedDate": "2020-05-08T04:26:54Z", "type": "commit"}, {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa", "url": "https://github.com/triplea-game/triplea/commit/f982e4430fc19c3844b77e1c0678e35fbd24befa", "message": "Formatting", "committedDate": "2020-05-08T04:26:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1Mw==", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931053", "bodyText": "Avoid deeply nested control flow statements.", "author": "codeclimate", "createdAt": "2020-05-08T04:29:04Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(\n+      final Unit unit,\n+      final Set<List<UnitSupportAttachment>> supportsAvailable,\n+      final IntegerMap<UnitSupportAttachment> supportLeft,\n+      final Map<UnitSupportAttachment, IntegerMap<Unit>> supportUnitsLeft,\n+      final Map<Unit, IntegerMap<Unit>> unitSupportMap,\n+      final Predicate<UnitSupportAttachment> ruleFilter) {\n+    int givenSupport = 0;\n+    for (final List<UnitSupportAttachment> bonusType : supportsAvailable) {\n+      int maxPerBonusType = bonusType.get(0).getBonusType().getCount();\n+      for (final UnitSupportAttachment rule : bonusType) {\n+        if (!ruleFilter.test(rule)) {\n+          continue;\n+        }\n+        final Set<UnitType> types = rule.getUnitType();\n+        if (types != null && types.contains(unit.getType()) && supportLeft.getInt(rule) > 0) {\n+          final int numSupportToApply =\n+              Math.min(\n+                  maxPerBonusType,\n+                  Math.min(supportLeft.getInt(rule), supportUnitsLeft.get(rule).size()));\n+          for (int i = 0; i < numSupportToApply; i++) {\n+            givenSupport += rule.getBonus();\n+            supportLeft.add(rule, -1);\n+            final Set<Unit> supporters = supportUnitsLeft.get(rule).keySet();\n+            final Unit u = supporters.iterator().next();\n+            supportUnitsLeft.get(rule).add(u, -1);\n+            if (supportUnitsLeft.get(rule).getInt(u) <= 0) {", "originalCommit": "f982e4430fc19c3844b77e1c0678e35fbd24befa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1NA==", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931054", "bodyText": "Method getSupport has 32 lines of code (exceeds 30 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-05-08T04:29:05Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(", "originalCommit": "f982e4430fc19c3844b77e1c0678e35fbd24befa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1NQ==", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931055", "bodyText": "Method getSupport has a Cognitive Complexity of 23 (exceeds 7 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-05-08T04:29:05Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(", "originalCommit": "f982e4430fc19c3844b77e1c0678e35fbd24befa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1Ng==", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931056", "bodyText": "Method getSupport has 6 arguments (exceeds 4 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-05-08T04:29:05Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(\n+      final Unit unit,", "originalCommit": "f982e4430fc19c3844b77e1c0678e35fbd24befa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}