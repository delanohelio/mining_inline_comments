{"pr_number": 7640, "pr_title": "Convert suicide casualties steps", "pr_createdAt": "2020-09-13T18:41:41Z", "pr_url": "https://github.com/triplea-game/triplea/pull/7640", "timeline": [{"oid": "2c66d226f6475a64bf36417e482a9c7e390db73d", "url": "https://github.com/triplea-game/triplea/commit/2c66d226f6475a64bf36417e482a9c7e390db73d", "message": "Convert suicide casualties steps", "committedDate": "2020-09-13T02:36:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MDYxNw==", "url": "https://github.com/triplea-game/triplea/pull/7640#discussion_r487570617", "bodyText": "Can we get this to be a String return value? Alternatively a domain-data object BattleId that wraps the type as a string?\nThese IDs used to be GUIDs which was a bit overly specified and creates difficult in test. IMO the battle id type is truly a string or a value object for battle-id, it just so happens to be generated via a UUID (so that's an implementation detail).", "author": "DanVanAtta", "createdAt": "2020-09-13T19:56:46Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/BattleState.java", "diffHunk": "@@ -23,6 +24,8 @@ public Side getOpposite() {\n \n   Territory getBattleSite();\n \n+  UUID getBattleId();", "originalCommit": "2c66d226f6475a64bf36417e482a9c7e390db73d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3NzQ1OQ==", "url": "https://github.com/triplea-game/triplea/pull/7640#discussion_r487577459", "bodyText": "I can do that but I'd still have to cast it back to a UUID where it is called because the code requires it to be a UUID.", "author": "trevan", "createdAt": "2020-09-13T21:06:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MDYxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3ODgyNA==", "url": "https://github.com/triplea-game/triplea/pull/7640#discussion_r487578824", "bodyText": "Also, the method already exists and is public on AbstractBattle.  This is just adding the method to the interface.  So I'd either have to make a new method or change a lot of code to make getBattleId return a BattleId or String.", "author": "trevan", "createdAt": "2020-09-13T21:21:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MDYxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU4MTg0OA==", "url": "https://github.com/triplea-game/triplea/pull/7640#discussion_r487581848", "bodyText": "Is there a serialization concern as well? It does sound like coming back and changing this is the right thing to do. Casting back to a UUID is part of the reason why it's brittle as-is.", "author": "DanVanAtta", "createdAt": "2020-09-13T21:53:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MDYxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU4NTgxNw==", "url": "https://github.com/triplea-game/triplea/pull/7640#discussion_r487585817", "bodyText": "Yes, it is stored on AbstractBattle so serialization in saves would be a problem.  I glanced at a few places where it is used and they also look like they are saved.  And I think it might also be used for client/server communication so it is serialized there as well.", "author": "trevan", "createdAt": "2020-09-13T22:35:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MDYxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU4NzIzOA==", "url": "https://github.com/triplea-game/triplea/pull/7640#discussion_r487587238", "bodyText": "That sounds right, when switching from GUID to UUID, there were serialization implications. Well \ud83d\udca9", "author": "DanVanAtta", "createdAt": "2020-09-13T22:50:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MDYxNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MDc3NA==", "url": "https://github.com/triplea-game/triplea/pull/7640#discussion_r487570774", "bodyText": "Sorry for not checking this myself, could you verify if this can be demoted to 'default visibility'? Reducing scoping within a package is a very good thing. In part we have a coupling problem as most everything is raised to public and can see everything else (so there is a very weak module structure).", "author": "DanVanAtta", "createdAt": "2020-09-13T19:58:54Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package games.strategy.triplea.delegate.battle.steps.change.suicide;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.delegate.Matches;\n+import games.strategy.triplea.delegate.battle.BattleActions;\n+import games.strategy.triplea.delegate.battle.BattleState;\n+import games.strategy.triplea.delegate.battle.steps.BattleStep;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Predicate;\n+import lombok.AllArgsConstructor;\n+import org.triplea.java.collections.CollectionUtils;\n+\n+@AllArgsConstructor\n+public abstract class RemoveUnits implements BattleStep {", "originalCommit": "2c66d226f6475a64bf36417e482a9c7e390db73d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b97ad8fb7cc5c6775b432d5074b6e48730104772", "chunk": "diff --git a/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java b/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java\nindex d0b972b56..2c3801546 100644\n--- a/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java\n+++ b/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java\n\n@@ -16,7 +16,7 @@ import lombok.AllArgsConstructor;\n import org.triplea.java.collections.CollectionUtils;\n \n @AllArgsConstructor\n-public abstract class RemoveUnits implements BattleStep {\n+abstract class RemoveUnits implements BattleStep {\n   private static final long serialVersionUID = 1322821208196377684L;\n \n   private final BattleState battleState;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MDg4OA==", "url": "https://github.com/triplea-game/triplea/pull/7640#discussion_r487570888", "bodyText": "nit, would suicideAttackers be a bit more specified? 'deadAttackers' to be implies we are matching attackers that have already been taken as casualties and are no longer participating in the battle (IE: they were removed in a previous battle step round already).", "author": "DanVanAtta", "createdAt": "2020-09-13T19:59:55Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package games.strategy.triplea.delegate.battle.steps.change.suicide;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.delegate.Matches;\n+import games.strategy.triplea.delegate.battle.BattleActions;\n+import games.strategy.triplea.delegate.battle.BattleState;\n+import games.strategy.triplea.delegate.battle.steps.BattleStep;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Predicate;\n+import lombok.AllArgsConstructor;\n+import org.triplea.java.collections.CollectionUtils;\n+\n+@AllArgsConstructor\n+public abstract class RemoveUnits implements BattleStep {\n+  private static final long serialVersionUID = 1322821208196377684L;\n+\n+  private final BattleState battleState;\n+\n+  private final BattleActions battleActions;\n+\n+  protected void removeUnits(final IDelegateBridge bridge, final Predicate<Unit> unitMatch) {\n+    final Collection<Unit> deadAttackers =", "originalCommit": "2c66d226f6475a64bf36417e482a9c7e390db73d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b97ad8fb7cc5c6775b432d5074b6e48730104772", "chunk": "diff --git a/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java b/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java\nindex d0b972b56..2c3801546 100644\n--- a/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java\n+++ b/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java\n\n@@ -16,7 +16,7 @@ import lombok.AllArgsConstructor;\n import org.triplea.java.collections.CollectionUtils;\n \n @AllArgsConstructor\n-public abstract class RemoveUnits implements BattleStep {\n+abstract class RemoveUnits implements BattleStep {\n   private static final long serialVersionUID = 1322821208196377684L;\n \n   private final BattleState battleState;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MTM0NA==", "url": "https://github.com/triplea-game/triplea/pull/7640#discussion_r487571344", "bodyText": "I think we should convert battleActions to be a callback instead. That would remove the side effects.  So instead of having a BattleActions we would have a Consumer<Collection<Unit>> that would be a callback to do the removal. This would make it a bit more clear from the caller how the battle actions parameter is mutated. Otherwise, it's a bit difficult to follow to realize that we're storing a reference and are modifying the caller by modifying a reference passed to us here. If that is the case, then the abstraction of this class is arguably not that helpful, you still have to understand this entire class and its side effects to understand the caller, which loses all information hiding.", "author": "DanVanAtta", "createdAt": "2020-09-13T20:04:20Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package games.strategy.triplea.delegate.battle.steps.change.suicide;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.delegate.Matches;\n+import games.strategy.triplea.delegate.battle.BattleActions;\n+import games.strategy.triplea.delegate.battle.BattleState;\n+import games.strategy.triplea.delegate.battle.steps.BattleStep;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Predicate;\n+import lombok.AllArgsConstructor;\n+import org.triplea.java.collections.CollectionUtils;\n+\n+@AllArgsConstructor\n+public abstract class RemoveUnits implements BattleStep {\n+  private static final long serialVersionUID = 1322821208196377684L;\n+\n+  private final BattleState battleState;\n+\n+  private final BattleActions battleActions;\n+\n+  protected void removeUnits(final IDelegateBridge bridge, final Predicate<Unit> unitMatch) {\n+    final Collection<Unit> deadAttackers =\n+        CollectionUtils.getMatches(\n+            battleState.getUnits(BattleState.Side.OFFENSE),\n+            unitMatch.and(Matches.unitIsSuicideOnAttack()));\n+    final Collection<Unit> deadDefenders =\n+        CollectionUtils.getMatches(\n+            battleState.getUnits(BattleState.Side.DEFENSE),\n+            unitMatch.and(Matches.unitIsSuicideOnDefense()));\n+    bridge\n+        .getDisplayChannelBroadcaster()\n+        .deadUnitNotification(\n+            battleState.getBattleId(),\n+            battleState.getAttacker(),\n+            deadAttackers,\n+            getDependents(deadAttackers));\n+    bridge\n+        .getDisplayChannelBroadcaster()\n+        .deadUnitNotification(\n+            battleState.getBattleId(),\n+            battleState.getDefender(),\n+            deadDefenders,\n+            getDependents(deadDefenders));\n+    final List<Unit> deadUnits = new ArrayList<>(deadAttackers);\n+    deadUnits.addAll(deadDefenders);\n+    battleActions.remove(deadUnits, bridge, battleState.getBattleSite(), null);", "originalCommit": "2c66d226f6475a64bf36417e482a9c7e390db73d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3NzY4MA==", "url": "https://github.com/triplea-game/triplea/pull/7640#discussion_r487577680", "bodyText": "I want to refactor remove so that it doesn't have the side effects.  Most of the code in remove should be in the BattleState api since it is interacting with the BattleState.  The only part that should stay in the BattleActions api is just the communication with the bridge.", "author": "trevan", "createdAt": "2020-09-13T21:09:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU3MTM0NA=="}], "type": "inlineReview", "revised_code": {"commit": "b97ad8fb7cc5c6775b432d5074b6e48730104772", "chunk": "diff --git a/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java b/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java\nindex d0b972b56..2c3801546 100644\n--- a/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java\n+++ b/game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/suicide/RemoveUnits.java\n\n@@ -16,7 +16,7 @@ import lombok.AllArgsConstructor;\n import org.triplea.java.collections.CollectionUtils;\n \n @AllArgsConstructor\n-public abstract class RemoveUnits implements BattleStep {\n+abstract class RemoveUnits implements BattleStep {\n   private static final long serialVersionUID = 1322821208196377684L;\n \n   private final BattleState battleState;\n"}}, {"oid": "b97ad8fb7cc5c6775b432d5074b6e48730104772", "url": "https://github.com/triplea-game/triplea/commit/b97ad8fb7cc5c6775b432d5074b6e48730104772", "message": "Review feedback", "committedDate": "2020-09-13T21:09:33Z", "type": "commit"}]}