{"pr_number": 8291, "pr_title": "Unify low luck and normal roll code in DiceRoll", "pr_createdAt": "2020-11-27T03:23:07Z", "pr_url": "https://github.com/triplea-game/triplea/pull/8291", "timeline": [{"oid": "66aafff96a5583d986ff197b0065c92a036f4d7a", "url": "https://github.com/triplea-game/triplea/commit/66aafff96a5583d986ff197b0065c92a036f4d7a", "message": "Unify low luck and normal roll code in DiceRoll\n\nThe AA low luck and normal rolls have the same logic as the non-AA low\nluck and normal rolls. The only difference is handling dice sides that\nare different from the game state.  So add a getDiceSides method to\nTotalPowerAndTotalRolls and unify the code for low luck and normal\nrolls.", "committedDate": "2020-11-27T03:16:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1ODE3Mg==", "url": "https://github.com/triplea-game/triplea/pull/8291#discussion_r531658172", "bodyText": "Would you mind updating the documentation that 'aaUnits' must have at least one element in it?", "author": "DanVanAtta", "createdAt": "2020-11-27T15:20:08Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java", "diffHunk": "@@ -110,74 +110,26 @@ public static DiceRoll rollAa(\n       final Territory location,\n       final CombatValue combatValueCalculator) {\n \n-    final GameData data = bridge.getData();\n+    final String typeAa = UnitAttachment.get(aaUnits.iterator().next().getType()).getTypeAa();\n+    final GamePlayer player = aaUnits.iterator().next().getOwner();", "originalCommit": "66aafff96a5583d986ff197b0065c92a036f4d7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NjEzNQ==", "url": "https://github.com/triplea-game/triplea/pull/8291#discussion_r531666135", "bodyText": "Side-note, perhaps worth doing here as we've re-written the entire method almost, most of the javadocs on the method are not very valuable.\nEG:\n\n\" aaUnits - AA units that could potentially be rolling\" < does not really add much information.\n\"@param location - battle territory\" < seems like the parameter should just be renamed\n\"* @param bridge - delegate bridge\" < ditto, parameter could just be renamed.", "author": "DanVanAtta", "createdAt": "2020-11-27T15:37:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1ODE3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY5MDA2MA==", "url": "https://github.com/triplea-game/triplea/pull/8291#discussion_r531690060", "bodyText": "I've updated the documentation.  The requirement that 'aaUnits' have at least on element isn't new after this refactor.  It has always been a requirement.  In a future PR, I plan to rework the parameters to this method so that requirement is no longer needed.", "author": "trevan", "createdAt": "2020-11-27T16:32:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1ODE3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "d39b07d4260ffa75ece4cf76b01c25dc76fdc3da", "chunk": "diff --git a/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java b/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java\nindex f36745479..dc8c27c4d 100644\n--- a/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java\n+++ b/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java\n\n@@ -97,23 +97,20 @@ public class DiceRoll implements Externalizable {\n   /**\n    * Used to roll AA for battles, SBR, and fly over.\n    *\n-   * @param validTargets - potential AA targets\n-   * @param aaUnits - AA units that could potentially be rolling\n-   * @param bridge - delegate bridge\n-   * @param location - battle territory\n-   * @return DiceRoll result which includes total hits and dice that were rolled\n+   * @param validTargets Units that are being fired at\n+   * @param aaUnits Units that are firing. There must be at least one unit.\n    */\n   public static DiceRoll rollAa(\n       final Collection<Unit> validTargets,\n       final Collection<Unit> aaUnits,\n       final IDelegateBridge bridge,\n-      final Territory location,\n+      final Territory battleSite,\n       final CombatValue combatValueCalculator) {\n \n     final String typeAa = UnitAttachment.get(aaUnits.iterator().next().getType()).getTypeAa();\n     final GamePlayer player = aaUnits.iterator().next().getOwner();\n     final String annotation =\n-        player.getName() + \" roll \" + typeAa + \" dice in \" + location.getName();\n+        player.getName() + \" roll \" + typeAa + \" dice in \" + battleSite.getName();\n \n     final AaPowerStrengthAndRolls unitPowerAndRollsMap =\n         AaPowerStrengthAndRolls.build(aaUnits, validTargets.size(), combatValueCalculator);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MTc3MQ==", "url": "https://github.com/triplea-game/triplea/pull/8291#discussion_r531661771", "bodyText": "Side-note, this interface I think has lost its cohesion, it is more than total power and total rolls. It's also odds as TotalPowerAndTotalRolls would seem to be the name for a value object rather than an interface. This is something that if we can would be good t come back and rename. I almost think this would be an even better interface for a 'unitGroup', or have that just be a class and get rid of the sub-classing altogether and have the unitGroup use this for an API that would 'just do the right thing'.", "author": "DanVanAtta", "createdAt": "2020-11-27T15:27:54Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/TotalPowerAndTotalRolls.java", "diffHunk": "@@ -13,6 +13,8 @@\n \n   List<Die> getDiceHits(int[] dice);\n \n+  int getDiceSides();\n+", "originalCommit": "66aafff96a5583d986ff197b0065c92a036f4d7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY5MjQwNQ==", "url": "https://github.com/triplea-game/triplea/pull/8291#discussion_r531692405", "bodyText": "This interface and UnitPowerStrengthAndRolls are two things I'm thinking of renaming/reworking for the casualty selection and support calculation.  I'm thinking of turning UnitPowerStrengthAndRolls (with a better name) into a delegate of Unit.  Then instead of passing around Units and calling TotalPowerAndTotalRolls to generate the UnitPowerStrengthAndRolls objects, the battle logic will first wrap all of the units in a UnitPowerStrengthAndRolls delegate and then those will be passed around.\nI'm also planning on moving the dice calculation methods to DiceRoll.  The only reason they are on TotalPowerAndTotalRolls is legacy now.", "author": "trevan", "createdAt": "2020-11-27T16:38:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MTc3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcxNDYwOA==", "url": "https://github.com/triplea-game/triplea/pull/8291#discussion_r531714608", "bodyText": "Cool. One note here, DiceRoll seems like it ought to be a value object, the number and types of methods on it do not seem appropriate. Something for you to consider, seemingly there should be of a strategy object that is more part of battles for determining roll results.", "author": "DanVanAtta", "createdAt": "2020-11-27T17:44:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MTc3MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MjY0NQ==", "url": "https://github.com/triplea-game/triplea/pull/8291#discussion_r531662645", "bodyText": "unitPowerAndRollsMap is an unexpected name for this parameter as the type is not a map. Any objections to renaming it?", "author": "DanVanAtta", "createdAt": "2020-11-27T15:29:49Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java", "diffHunk": "@@ -219,37 +171,40 @@ public static DiceRoll rollDice(\n       final String annotation,\n       final CombatValue combatValueCalculator) {\n \n+    final DiceRoll diceRoll;\n+    final PowerStrengthAndRolls unitPowerAndRollsMap =\n+        PowerStrengthAndRolls.build(units, combatValueCalculator);\n     if (Properties.getLowLuck(bridge.getData().getProperties())) {\n-      return rollDiceLowLuck(units, player, bridge, annotation, combatValueCalculator);\n+      diceRoll = rollDiceLowLuck(unitPowerAndRollsMap, player, bridge, annotation);\n+    } else {\n+      diceRoll = rollDiceNormal(unitPowerAndRollsMap, player, bridge, annotation);\n     }\n-    return rollDiceNormal(units, player, bridge, annotation, combatValueCalculator);\n+\n+    bridge\n+        .getHistoryWriter()\n+        .addChildToEvent(annotation + \" : \" + MyFormatter.asDice(diceRoll), diceRoll);\n+    return diceRoll;\n   }\n \n   /** Roll dice for units using low luck rules. */\n   private static DiceRoll rollDiceLowLuck(\n-      final Collection<Unit> unitsList,\n+      final TotalPowerAndTotalRolls unitPowerAndRollsMap,", "originalCommit": "66aafff96a5583d986ff197b0065c92a036f4d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d39b07d4260ffa75ece4cf76b01c25dc76fdc3da", "chunk": "diff --git a/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java b/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java\nindex f36745479..dc8c27c4d 100644\n--- a/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java\n+++ b/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java\n\n@@ -188,18 +185,18 @@ public class DiceRoll implements Externalizable {\n \n   /** Roll dice for units using low luck rules. */\n   private static DiceRoll rollDiceLowLuck(\n-      final TotalPowerAndTotalRolls unitPowerAndRollsMap,\n+      final TotalPowerAndTotalRolls totalPowerAndTotalRolls,\n       final GamePlayer player,\n       final IDelegateBridge bridge,\n       final String annotation) {\n \n-    final int power = unitPowerAndRollsMap.calculateTotalPower();\n+    final int power = totalPowerAndTotalRolls.calculateTotalPower();\n     if (power == 0) {\n       return new DiceRoll(List.of(), 0, 0);\n     }\n \n     // Roll dice for the fractional part of the dice\n-    final int diceSides = unitPowerAndRollsMap.getDiceSides();\n+    final int diceSides = totalPowerAndTotalRolls.getDiceSides();\n     int hitCount = power / diceSides;\n     final List<Die> dice = new ArrayList<>();\n     final int rollFor = power % diceSides;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MzM2NA==", "url": "https://github.com/triplea-game/triplea/pull/8291#discussion_r531663364", "bodyText": "It seems like 'hitCount' should be part of the 'totalPowerAndRolls' interface. Getting data from an object and then using that data to compute a value, as is the case here, appears to be a 'feature-envy' code-smell.\nIt might be possible that if the API is getHitCount, then we won't need the getDiceSides method and the dice sides would instead turn into a constructor arg for implementations of totalPowerAndRolls", "author": "DanVanAtta", "createdAt": "2020-11-27T15:31:21Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java", "diffHunk": "@@ -219,37 +171,40 @@ public static DiceRoll rollDice(\n       final String annotation,\n       final CombatValue combatValueCalculator) {\n \n+    final DiceRoll diceRoll;\n+    final PowerStrengthAndRolls unitPowerAndRollsMap =\n+        PowerStrengthAndRolls.build(units, combatValueCalculator);\n     if (Properties.getLowLuck(bridge.getData().getProperties())) {\n-      return rollDiceLowLuck(units, player, bridge, annotation, combatValueCalculator);\n+      diceRoll = rollDiceLowLuck(unitPowerAndRollsMap, player, bridge, annotation);\n+    } else {\n+      diceRoll = rollDiceNormal(unitPowerAndRollsMap, player, bridge, annotation);\n     }\n-    return rollDiceNormal(units, player, bridge, annotation, combatValueCalculator);\n+\n+    bridge\n+        .getHistoryWriter()\n+        .addChildToEvent(annotation + \" : \" + MyFormatter.asDice(diceRoll), diceRoll);\n+    return diceRoll;\n   }\n \n   /** Roll dice for units using low luck rules. */\n   private static DiceRoll rollDiceLowLuck(\n-      final Collection<Unit> unitsList,\n+      final TotalPowerAndTotalRolls unitPowerAndRollsMap,\n       final GamePlayer player,\n       final IDelegateBridge bridge,\n-      final String annotation,\n-      final CombatValue combatValueCalculator) {\n-\n-    final GameData data = bridge.getData();\n+      final String annotation) {\n \n-    final int power =\n-        PowerStrengthAndRolls.build(unitsList, combatValueCalculator).calculateTotalPower();\n+    final int power = unitPowerAndRollsMap.calculateTotalPower();\n     if (power == 0) {\n       return new DiceRoll(List.of(), 0, 0);\n     }\n \n     // Roll dice for the fractional part of the dice\n-    int hitCount = power / data.getDiceSides();\n+    final int diceSides = unitPowerAndRollsMap.getDiceSides();\n+    int hitCount = power / diceSides;", "originalCommit": "66aafff96a5583d986ff197b0065c92a036f4d7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY5MDYxNQ==", "url": "https://github.com/triplea-game/triplea/pull/8291#discussion_r531690615", "bodyText": "In a future PR, I'm going to be reworking this so that it correctly handles units with different dice sides.  At that point, getDiceSides should no longer be needed.  I don't think a getHitCount method will fit in that rework but I'll look into it when I work on the PR.", "author": "trevan", "createdAt": "2020-11-27T16:34:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MzM2NA=="}], "type": "inlineReview", "revised_code": {"commit": "d39b07d4260ffa75ece4cf76b01c25dc76fdc3da", "chunk": "diff --git a/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java b/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java\nindex f36745479..dc8c27c4d 100644\n--- a/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java\n+++ b/game-core/src/main/java/games/strategy/triplea/delegate/DiceRoll.java\n\n@@ -188,18 +185,18 @@ public class DiceRoll implements Externalizable {\n \n   /** Roll dice for units using low luck rules. */\n   private static DiceRoll rollDiceLowLuck(\n-      final TotalPowerAndTotalRolls unitPowerAndRollsMap,\n+      final TotalPowerAndTotalRolls totalPowerAndTotalRolls,\n       final GamePlayer player,\n       final IDelegateBridge bridge,\n       final String annotation) {\n \n-    final int power = unitPowerAndRollsMap.calculateTotalPower();\n+    final int power = totalPowerAndTotalRolls.calculateTotalPower();\n     if (power == 0) {\n       return new DiceRoll(List.of(), 0, 0);\n     }\n \n     // Roll dice for the fractional part of the dice\n-    final int diceSides = unitPowerAndRollsMap.getDiceSides();\n+    final int diceSides = totalPowerAndTotalRolls.getDiceSides();\n     int hitCount = power / diceSides;\n     final List<Die> dice = new ArrayList<>();\n     final int rollFor = power % diceSides;\n"}}, {"oid": "d39b07d4260ffa75ece4cf76b01c25dc76fdc3da", "url": "https://github.com/triplea-game/triplea/commit/d39b07d4260ffa75ece4cf76b01c25dc76fdc3da", "message": "Rename variables and fix documentation", "committedDate": "2020-11-27T16:31:17Z", "type": "commit"}]}