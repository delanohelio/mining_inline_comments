{"pr_number": 6884, "pr_title": "Convert defensive sub withdraw", "pr_createdAt": "2020-06-27T05:01:39Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6884", "timeline": [{"oid": "175fce9e5b83b932ebb8cf0e401e6a596677d132", "url": "https://github.com/triplea-game/triplea/commit/175fce9e5b83b932ebb8cf0e401e6a596677d132", "message": "Add new methods to BattleState and BattleActions", "committedDate": "2020-06-26T05:00:30Z", "type": "commit"}, {"oid": "f81a74acb3f3b4e276b29c995ba78236d1b79adc", "url": "https://github.com/triplea-game/triplea/commit/f81a74acb3f3b4e276b29c995ba78236d1b79adc", "message": "Convert defensive sub withdraw step to BattleStep", "committedDate": "2020-06-26T05:01:03Z", "type": "commit"}, {"oid": "bf2b379dae123dd9a6fd154505bc42f57038a6f3", "url": "https://github.com/triplea-game/triplea/commit/bf2b379dae123dd9a6fd154505bc42f57038a6f3", "message": "Add offensive subs retreat tests for step names", "committedDate": "2020-06-26T15:18:34Z", "type": "commit"}, {"oid": "732a42408c7e7cb2ad9a36846939ef75ff227d28", "url": "https://github.com/triplea-game/triplea/commit/732a42408c7e7cb2ad9a36846939ef75ff227d28", "message": "Test and refactor defensive sub retreat step", "committedDate": "2020-06-27T03:35:44Z", "type": "commit"}, {"oid": "95a959cfd283ad1d729a042a6d1428bd618a204f", "url": "https://github.com/triplea-game/triplea/commit/95a959cfd283ad1d729a042a6d1428bd618a204f", "message": "Combine nested if statements", "committedDate": "2020-06-27T05:11:42Z", "type": "commit"}, {"oid": "990ac689e60b7c0d7bdcfd600194803dac466806", "url": "https://github.com/triplea-game/triplea/commit/990ac689e60b7c0d7bdcfd600194803dac466806", "message": "Auto-Formatting", "committedDate": "2020-06-27T05:17:10Z", "type": "commit"}, {"oid": "372f730e87d04351b3fd25b074e63904bf4c5a0a", "url": "https://github.com/triplea-game/triplea/commit/372f730e87d04351b3fd25b074e63904bf4c5a0a", "message": "Merge remote-tracking branch 'upstream/master' into convert-defensive-sub-withdraw", "committedDate": "2020-06-29T00:46:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NjI4Mw==", "url": "https://github.com/triplea-game/triplea/pull/6884#discussion_r448076283", "bodyText": "nit, any thoughts to use a ternary here to isolate the different parts of the 'if/else' block as much as possible?\nEG:\nString stepName =  battleState.getDefender().getName() + (Properties.getSubmersibleSubs(battleState.getGameData() ? SUBS_SUBMERGE : SUBS_WITHDRAW);\nreturn List.of(stepName);", "author": "DanVanAtta", "createdAt": "2020-07-01T02:09:38Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/retreat/DefensiveSubsRetreat.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package games.strategy.triplea.delegate.battle.steps.retreat;\n+\n+import static games.strategy.triplea.delegate.battle.BattleStepStrings.SUBS_SUBMERGE;\n+import static games.strategy.triplea.delegate.battle.BattleStepStrings.SUBS_WITHDRAW;\n+import static games.strategy.triplea.delegate.battle.steps.BattleStep.Order.SUB_DEFENSIVE_RETREAT_AFTER_BATTLE;\n+import static games.strategy.triplea.delegate.battle.steps.BattleStep.Order.SUB_DEFENSIVE_RETREAT_BEFORE_BATTLE;\n+\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.ExecutionStack;\n+import games.strategy.triplea.delegate.Matches;\n+import games.strategy.triplea.delegate.battle.BattleActions;\n+import games.strategy.triplea.delegate.battle.BattleState;\n+import games.strategy.triplea.delegate.battle.MustFightBattle.RetreatType;\n+import games.strategy.triplea.delegate.battle.steps.BattleStep;\n+import java.util.List;\n+import lombok.AllArgsConstructor;\n+import org.triplea.java.collections.CollectionUtils;\n+\n+@AllArgsConstructor\n+public class DefensiveSubsRetreat implements BattleStep {\n+\n+  private static final long serialVersionUID = 1249467218938096244L;\n+\n+  protected final BattleState battleState;\n+\n+  protected final BattleActions battleActions;\n+\n+  @Override\n+  public List<String> getNames() {\n+    if (!isEvaderPresent() || !isRetreatPossible()) {\n+      return List.of();\n+    }\n+\n+    if (getOrder() == SUB_DEFENSIVE_RETREAT_BEFORE_BATTLE && isDestroyerPresent()) {\n+      // only check for destroyers if subs can retreat before battle\n+      // because the destroyer could be killed during the battle which would\n+      // allow the sub to withdraw at the end of the battle\n+      return List.of();\n+    }\n+\n+    if (Properties.getSubmersibleSubs(battleState.getGameData())) {\n+      return List.of(battleState.getDefender().getName() + SUBS_SUBMERGE);", "originalCommit": "372f730e87d04351b3fd25b074e63904bf4c5a0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NjM5MQ==", "url": "https://github.com/triplea-game/triplea/pull/6884#discussion_r448076391", "bodyText": "Ditto on ternary usage here, any objections or thoughts to use it?", "author": "DanVanAtta", "createdAt": "2020-07-01T02:10:05Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/retreat/DefensiveSubsRetreat.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package games.strategy.triplea.delegate.battle.steps.retreat;\n+\n+import static games.strategy.triplea.delegate.battle.BattleStepStrings.SUBS_SUBMERGE;\n+import static games.strategy.triplea.delegate.battle.BattleStepStrings.SUBS_WITHDRAW;\n+import static games.strategy.triplea.delegate.battle.steps.BattleStep.Order.SUB_DEFENSIVE_RETREAT_AFTER_BATTLE;\n+import static games.strategy.triplea.delegate.battle.steps.BattleStep.Order.SUB_DEFENSIVE_RETREAT_BEFORE_BATTLE;\n+\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.ExecutionStack;\n+import games.strategy.triplea.delegate.Matches;\n+import games.strategy.triplea.delegate.battle.BattleActions;\n+import games.strategy.triplea.delegate.battle.BattleState;\n+import games.strategy.triplea.delegate.battle.MustFightBattle.RetreatType;\n+import games.strategy.triplea.delegate.battle.steps.BattleStep;\n+import java.util.List;\n+import lombok.AllArgsConstructor;\n+import org.triplea.java.collections.CollectionUtils;\n+\n+@AllArgsConstructor\n+public class DefensiveSubsRetreat implements BattleStep {\n+\n+  private static final long serialVersionUID = 1249467218938096244L;\n+\n+  protected final BattleState battleState;\n+\n+  protected final BattleActions battleActions;\n+\n+  @Override\n+  public List<String> getNames() {\n+    if (!isEvaderPresent() || !isRetreatPossible()) {\n+      return List.of();\n+    }\n+\n+    if (getOrder() == SUB_DEFENSIVE_RETREAT_BEFORE_BATTLE && isDestroyerPresent()) {\n+      // only check for destroyers if subs can retreat before battle\n+      // because the destroyer could be killed during the battle which would\n+      // allow the sub to withdraw at the end of the battle\n+      return List.of();\n+    }\n+\n+    if (Properties.getSubmersibleSubs(battleState.getGameData())) {\n+      return List.of(battleState.getDefender().getName() + SUBS_SUBMERGE);\n+    } else {\n+      return List.of(battleState.getDefender().getName() + SUBS_WITHDRAW);\n+    }\n+  }\n+\n+  @Override\n+  public Order getOrder() {\n+    if (Properties.getSubRetreatBeforeBattle(battleState.getGameData())) {", "originalCommit": "372f730e87d04351b3fd25b074e63904bf4c5a0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}