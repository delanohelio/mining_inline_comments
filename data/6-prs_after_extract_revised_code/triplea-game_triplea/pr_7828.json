{"pr_number": 7828, "pr_title": "Create an object to track state between fire rounds", "pr_createdAt": "2020-10-03T14:24:44Z", "pr_url": "https://github.com/triplea-game/triplea/pull/7828", "timeline": [{"oid": "9fe6c77be8093ebe950ef6e9cca9cef0692dd52b", "url": "https://github.com/triplea-game/triplea/commit/9fe6c77be8093ebe950ef6e9cca9cef0692dd52b", "message": "Create an object to track state between fire rounds", "committedDate": "2020-10-03T14:22:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3MzYzMw==", "url": "https://github.com/triplea-game/triplea/pull/7828#discussion_r499173633", "bodyText": "I'm noticing this is a mutable object.\nWould you agree it's better to have mutable references to immutable objects than it is to have an final reference to a mutable object?\nCan we instead have this be a @Value?", "author": "DanVanAtta", "createdAt": "2020-10-03T19:05:42Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/fire/FireRoundState.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package games.strategy.triplea.delegate.battle.steps.fire;\n+\n+import games.strategy.triplea.delegate.DiceRoll;\n+import games.strategy.triplea.delegate.data.CasualtyDetails;\n+import lombok.Data;\n+\n+/** Tracks the state through a Fire round (dice roll, select casualties, remove casualties) */\n+@Data", "originalCommit": "9fe6c77be8093ebe950ef6e9cca9cef0692dd52b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjkwMQ==", "url": "https://github.com/triplea-game/triplea/pull/7828#discussion_r499182901", "bodyText": "I agree that it is better to have mutable references to immutable objects.  And that is basically what this is.  It is a collection of mutable references to two mostly immutable objects.  DiceRoll appears to be completely immutable and could probably be marked as @Value and CasualtyDetails looks like it could be made completely immutable and my changes only use it in an immutable manner.\nAnd this can't be a @Value because the three steps need to access and update these references.  The first one will update the dice roll.  The second will use the dice roll to update the casualty details.  And the third uses both the dice roll and the casualty details.", "author": "trevan", "createdAt": "2020-10-03T21:23:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3MzYzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NDg5NQ==", "url": "https://github.com/triplea-game/triplea/pull/7828#discussion_r499184895", "bodyText": "Instead of accessing and updating this object, what if a new one were created and that new value then passed forward? Is this a good use-case for the lombok toBuilder() where you can create a mutated copy of an object?", "author": "DanVanAtta", "createdAt": "2020-10-03T21:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3MzYzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NTE2NQ==", "url": "https://github.com/triplea-game/triplea/pull/7828#discussion_r499185165", "bodyText": "I'd love to do that.  But IExecutables in the stack don't share anything.  You can't pass things between them.", "author": "trevan", "createdAt": "2020-10-03T21:58:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3MzYzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NTYyMw==", "url": "https://github.com/triplea-game/triplea/pull/7828#discussion_r499185623", "bodyText": "\ud83d\ude22", "author": "DanVanAtta", "createdAt": "2020-10-03T22:05:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3MzYzMw=="}], "type": "inlineReview", "revised_code": null}]}