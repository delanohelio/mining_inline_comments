{"pr_number": 6271, "pr_title": "Fix removing disabled units with battle AA", "pr_createdAt": "2020-04-17T03:30:00Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6271", "timeline": [{"oid": "f61b41ea566c1d8b910da622bdb2e5e5aab06e69", "url": "https://github.com/triplea-game/triplea/commit/f61b41ea566c1d8b910da622bdb2e5e5aab06e69", "message": "Fix removing disabled units with battle AA", "committedDate": "2020-04-17T03:27:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk4MTQ3Mg==", "url": "https://github.com/triplea-game/triplea/pull/6271#discussion_r409981472", "bodyText": "The pattern of mutating void method calls is unfortunate. The reasoning/logic behind the ordering is not captured, makes it really brittle as re-ordering lines or adding functionality can cause unexpected problems.\nIt's also not clear as well why the ordering is as it is, we also run into issues as well for reading the functions as the void calls you have to trace down to see what is happening. Much of this perhaps could just as well be inlined and/or made functional so the control flow is captured at a high level. Regardless, it's just kinda sad to see this anti-pattern. There are some interesting tools out there that would perhaps catch this, those tools permute lines and re-run tests to see if any file due to line permutations and then gives you a score of methods that fail highlighting brittlness.", "author": "DanVanAtta", "createdAt": "2020-04-17T04:08:38Z", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/MustFightBattle.java", "diffHunk": "@@ -576,6 +576,7 @@ private static void removeFromDependents(\n   @Override\n   public void fight(final IDelegateBridge bridge) {\n     removeUnitsThatNoLongerExist();", "originalCommit": "f61b41ea566c1d8b910da622bdb2e5e5aab06e69", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}