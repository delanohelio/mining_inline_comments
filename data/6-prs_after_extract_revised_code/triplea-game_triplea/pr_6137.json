{"pr_number": 6137, "pr_title": "Fix potential server-side timeout", "pr_createdAt": "2020-04-05T18:27:18Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6137", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzczOTM5Ng==", "url": "https://github.com/triplea-game/triplea/pull/6137#discussion_r403739396", "bodyText": "This is where I ran into #6136 FYI", "author": "RoiEXLab", "createdAt": "2020-04-05T18:28:07Z", "path": "game-core/src/main/java/games/strategy/engine/message/RemoteMethodCall.java", "diffHunk": "@@ -94,6 +95,12 @@ public String getMethodName() {\n   }\n \n   private static String[] classesToString(final Class<?>[] classes, final Object[] args) {\n+    if (args != null && classes.length != args.length) {\n+      throw new IllegalArgumentException(\n+          String.format(\n+              \"Classes and args arrays diff in length: %s, %s\",\n+              Arrays.toString(classes), Arrays.toString(args)));", "originalCommit": "54400bba417af3eaf6d982b50cdab392f43b66b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e78947bf38ce492030e57aa5d1bb15e68bbacf92", "chunk": "diff --git a/game-core/src/main/java/games/strategy/engine/message/RemoteMethodCall.java b/game-core/src/main/java/games/strategy/engine/message/RemoteMethodCall.java\nindex 0fee43560..f35aa29f5 100644\n--- a/game-core/src/main/java/games/strategy/engine/message/RemoteMethodCall.java\n+++ b/game-core/src/main/java/games/strategy/engine/message/RemoteMethodCall.java\n\n@@ -95,12 +94,6 @@ public class RemoteMethodCall implements Externalizable {\n   }\n \n   private static String[] classesToString(final Class<?>[] classes, final Object[] args) {\n-    if (args != null && classes.length != args.length) {\n-      throw new IllegalArgumentException(\n-          String.format(\n-              \"Classes and args arrays diff in length: %s, %s\",\n-              Arrays.toString(classes), Arrays.toString(args)));\n-    }\n     // as an optimization, if args[i].getClass == classes[i] then leave classes[i] as null\n     // this will reduce the amount of info we write over the network in the common\n     // case where the object is the same type as its arg\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzczOTQ4Mw==", "url": "https://github.com/triplea-game/triplea/pull/6137#discussion_r403739483", "bodyText": "Method processMessage has 36 lines of code (exceeds 25 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-04-05T18:28:49Z", "path": "game-core/src/main/java/games/strategy/engine/message/unifiedmessenger/UnifiedMessenger.java", "diffHunk": "@@ -332,6 +311,54 @@ public void messageReceived(final Serializable msg, final INode from) {\n     }\n   }\n \n+  private void processMessage(final EndPoint local, final SpokeInvoke invoke, final INode from) {", "originalCommit": "54400bba417af3eaf6d982b50cdab392f43b66b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e78947bf38ce492030e57aa5d1bb15e68bbacf92", "chunk": "diff --git a/game-core/src/main/java/games/strategy/engine/message/unifiedmessenger/UnifiedMessenger.java b/game-core/src/main/java/games/strategy/engine/message/unifiedmessenger/UnifiedMessenger.java\nindex 5659c8a6c..0fbc1be16 100644\n--- a/game-core/src/main/java/games/strategy/engine/message/unifiedmessenger/UnifiedMessenger.java\n+++ b/game-core/src/main/java/games/strategy/engine/message/unifiedmessenger/UnifiedMessenger.java\n\n@@ -311,54 +329,6 @@ public class UnifiedMessenger {\n     }\n   }\n \n-  private void processMessage(final EndPoint local, final SpokeInvoke invoke, final INode from) {\n-    // very important\n-    // we are guaranteed that here messages will be read in the same order that they are sent from\n-    // the client\n-    // however, once we delegate to the thread pool, there is no guarantee that the thread pool\n-    // task will run before\n-    // we get the next message notification\n-    // get the number for the invocation here\n-    final long methodRunNumber = local.takeANumber();\n-    // we don't want to block the message thread, only one thread is\n-    // reading messages per connection, so run with out thread pool\n-    CompletableFuture.runAsync(\n-            () -> {\n-              final List<RemoteMethodCallResults> results =\n-                  local.invokeLocal(invoke.call, methodRunNumber, invoke.getInvoker());\n-              if (invoke.needReturnValues) {\n-                final RemoteMethodCallResults result;\n-                if (results.size() == 1) {\n-                  result = results.get(0);\n-                } else {\n-                  result =\n-                      new RemoteMethodCallResults(\n-                          new IllegalStateException(\n-                              String.format(\n-                                  \"Invalid result count '%d' for end point '%s'\",\n-                                  results.size(), local)));\n-                }\n-                send(new HubInvocationResults(result, invoke.methodCallId), from);\n-              }\n-            },\n-            threadPool)\n-        .exceptionally(\n-            throwable -> {\n-              log.log(Level.SEVERE, \"Exception during execution of client request\", throwable);\n-              if (invoke.needReturnValues) {\n-                try {\n-                  send(\n-                      new HubInvocationResults(\n-                          new RemoteMethodCallResults(throwable), invoke.methodCallId),\n-                      from);\n-                } catch (final RuntimeException e) {\n-                  log.log(Level.SEVERE, \"Exception while sending exception to client\", throwable);\n-                }\n-              }\n-              return null;\n-            });\n-  }\n-\n   private void assertIsServer(final INode from) {\n     Preconditions.checkState(\n         from.equals(messenger.getServerNode()), \"Not from server!  Instead from:\" + from);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1NjgxMA==", "url": "https://github.com/triplea-game/triplea/pull/6137#discussion_r403756810", "bodyText": "Is 1 minute potentially an over-generous timeout?\nHave you simulated this error by any chance? Did it show the option to submit an error report (I'm hoping yes)", "author": "DanVanAtta", "createdAt": "2020-04-05T21:05:21Z", "path": "game-core/src/main/java/games/strategy/engine/message/unifiedmessenger/UnifiedMessenger.java", "diffHunk": "@@ -117,7 +119,12 @@ private RemoteMethodCallResults invokeAndWaitRemote(final RemoteMethodCall remot\n     final Invoke invoke = new HubInvoke(methodCallId, true, remoteCall);\n     send(invoke, messenger.getServerNode());\n \n-    Interruptibles.await(latch);\n+    if (!Interruptibles.awaitResult(() -> latch.await(1, TimeUnit.MINUTES)).result.orElse(false)) {", "originalCommit": "54400bba417af3eaf6d982b50cdab392f43b66b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3NTg4NA==", "url": "https://github.com/triplea-game/triplea/pull/6137#discussion_r403775884", "bodyText": "I haven't tested if there is an error dialog, but given that a couple of lines below a similar exception is thrown, hopes are that we'll get an error dialog.\nBut I can test this tomorrow.", "author": "RoiEXLab", "createdAt": "2020-04-05T23:55:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1NjgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc3NTkyNA==", "url": "https://github.com/triplea-game/triplea/pull/6137#discussion_r403775924", "bodyText": "And the 1 minute is arbitrary, open for suggestions", "author": "RoiEXLab", "createdAt": "2020-04-05T23:55:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1NjgxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc4NTI2MQ==", "url": "https://github.com/triplea-game/triplea/pull/6137#discussion_r403785261", "bodyText": "20 seconds?", "author": "DanVanAtta", "createdAt": "2020-04-06T01:05:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc1NjgxMA=="}], "type": "inlineReview", "revised_code": {"commit": "e78947bf38ce492030e57aa5d1bb15e68bbacf92", "chunk": "diff --git a/game-core/src/main/java/games/strategy/engine/message/unifiedmessenger/UnifiedMessenger.java b/game-core/src/main/java/games/strategy/engine/message/unifiedmessenger/UnifiedMessenger.java\nindex 5659c8a6c..0fbc1be16 100644\n--- a/game-core/src/main/java/games/strategy/engine/message/unifiedmessenger/UnifiedMessenger.java\n+++ b/game-core/src/main/java/games/strategy/engine/message/unifiedmessenger/UnifiedMessenger.java\n\n@@ -119,12 +118,7 @@ public class UnifiedMessenger {\n     final Invoke invoke = new HubInvoke(methodCallId, true, remoteCall);\n     send(invoke, messenger.getServerNode());\n \n-    if (!Interruptibles.awaitResult(() -> latch.await(1, TimeUnit.MINUTES)).result.orElse(false)) {\n-      throw new IllegalStateException(\n-          String.format(\n-              \"Server timed out while waiting for result of method %s for remote %s with id %s\",\n-              remoteCall.getMethodName(), remoteCall.getRemoteName(), methodCallId));\n-    }\n+    Interruptibles.await(latch);\n \n     synchronized (pendingLock) {\n       final RemoteMethodCallResults methodCallResults = results.remove(methodCallId);\n"}}, {"oid": "e78947bf38ce492030e57aa5d1bb15e68bbacf92", "url": "https://github.com/triplea-game/triplea/commit/e78947bf38ce492030e57aa5d1bb15e68bbacf92", "message": "Fix wrong parentheses", "committedDate": "2020-04-06T08:24:28Z", "type": "commit"}, {"oid": "353bd4f31304beea9ac980433c860f9ae30a2991", "url": "https://github.com/triplea-game/triplea/commit/353bd4f31304beea9ac980433c860f9ae30a2991", "message": "Add precondition", "committedDate": "2020-04-06T08:24:28Z", "type": "commit"}, {"oid": "7bcb36061c6fda5eb1cd84df541e79b7b4e94d0e", "url": "https://github.com/triplea-game/triplea/commit/7bcb36061c6fda5eb1cd84df541e79b7b4e94d0e", "message": "Enhance exception handling", "committedDate": "2020-04-06T08:24:28Z", "type": "commit"}, {"oid": "c7ee0a13e2b827f64fa29786d07d302551ceeb1d", "url": "https://github.com/triplea-game/triplea/commit/c7ee0a13e2b827f64fa29786d07d302551ceeb1d", "message": "Add client side timeout", "committedDate": "2020-04-06T08:24:28Z", "type": "commit"}, {"oid": "a51b2c76b4774f4393999822c65af7d6047aa3e6", "url": "https://github.com/triplea-game/triplea/commit/a51b2c76b4774f4393999822c65af7d6047aa3e6", "message": "Avoid potential NPE", "committedDate": "2020-04-06T08:24:28Z", "type": "commit"}, {"oid": "149593ecf7f556ec5d8b6c3c75ba90d60e38996e", "url": "https://github.com/triplea-game/triplea/commit/149593ecf7f556ec5d8b6c3c75ba90d60e38996e", "message": "Use 20 second timeout", "committedDate": "2020-04-06T08:24:28Z", "type": "commit"}, {"oid": "3ca17f44bae968cc714a06db8ebdd2556446a2c7", "url": "https://github.com/triplea-game/triplea/commit/3ca17f44bae968cc714a06db8ebdd2556446a2c7", "message": "Fix potential memory leak", "committedDate": "2020-04-06T08:31:29Z", "type": "commit"}, {"oid": "3ca17f44bae968cc714a06db8ebdd2556446a2c7", "url": "https://github.com/triplea-game/triplea/commit/3ca17f44bae968cc714a06db8ebdd2556446a2c7", "message": "Fix potential memory leak", "committedDate": "2020-04-06T08:31:29Z", "type": "forcePushed"}]}