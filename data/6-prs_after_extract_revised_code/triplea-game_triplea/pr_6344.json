{"pr_number": 6344, "pr_title": "Is instant matcher", "pr_createdAt": "2020-04-28T06:52:17Z", "pr_url": "https://github.com/triplea-game/triplea/pull/6344", "timeline": [{"oid": "c420bd1e7bd325923d278e1ac0bcab9ca1de7610", "url": "https://github.com/triplea-game/triplea/commit/c420bd1e7bd325923d278e1ac0bcab9ca1de7610", "message": "Add IsInstant matcher to facilitate matching instant values\n\n- Rather than parsing an instant value from a formatted string\nand comparing against a target instant, this matcher allows for\nan instant to be matched against a numerically specified instant,\neg: 'assertThat(Instant.now(), isInstant(2020, 2, 20, 23, 59, 0));'", "committedDate": "2020-04-28T06:46:55Z", "type": "commit"}, {"oid": "5a4f7e6d962542b18cb9e73cbecc642e7083ff2e", "url": "https://github.com/triplea-game/triplea/commit/5a4f7e6d962542b18cb9e73cbecc642e7083ff2e", "message": "Convert tests to use 'isInstant(...)' in preference to 'is(Instant.parse(...))'", "committedDate": "2020-04-28T06:48:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM3Mjk5Nw==", "url": "https://github.com/triplea-game/triplea/pull/6344#discussion_r416372997", "bodyText": "Method isInstant has 6 arguments (exceeds 4 allowed). Consider refactoring.", "author": "codeclimate", "createdAt": "2020-04-28T06:55:30Z", "path": "test-common/src/main/java/org/triplea/test/common/IsInstant.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.triplea.test.common;\n+\n+import static org.hamcrest.core.Is.is;\n+import static org.hamcrest.core.IsEqual.equalTo;\n+\n+import com.google.common.base.Preconditions;\n+import java.time.Instant;\n+import lombok.experimental.UtilityClass;\n+import org.apache.commons.lang3.StringUtils;\n+import org.hamcrest.Matcher;\n+\n+@UtilityClass\n+public class IsInstant {\n+\n+  /**\n+   * Matches if a given instant has the equivalent date as defined by the parameters (parameters are\n+   * assumed to be UTC).\n+   *\n+   * <p>Example usage: <code>\n+   *   assertThat(Instant.now(), isInstant(2020, 12, 24, 23, 59, 59));\n+   * </code> <br>\n+   * The above is equivalent to:<code>\n+   *   assertThat(Instant.now(), is(Instant.parse(\"2020-12-24T23:59:59Z\")));\n+   * </code>\n+   *\n+   * @param year The year to match (should be YYYY format, eg: 2020)\n+   * @param month The month to match (1-12)\n+   * @param day The day to match (1-31)\n+   * @param hour The hour of day to match (1-23)\n+   * @param minute The minute of the hour to match (0-59)\n+   * @param second The second of the minute to match (0-59)\n+   */\n+  public static Matcher<Instant> isInstant(\n+      final int year,", "originalCommit": "5a4f7e6d962542b18cb9e73cbecc642e7083ff2e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c34b427c01643587f02ad7353806dc11b4ff871", "chunk": "diff --git a/test-common/src/main/java/org/triplea/test/common/IsInstant.java b/test-common/src/main/java/org/triplea/test/common/IsInstant.java\nindex 48a3378ed7..4a17e296a3 100644\n--- a/test-common/src/main/java/org/triplea/test/common/IsInstant.java\n+++ b/test-common/src/main/java/org/triplea/test/common/IsInstant.java\n\n@@ -3,10 +3,10 @@ package org.triplea.test.common;\n import static org.hamcrest.core.Is.is;\n import static org.hamcrest.core.IsEqual.equalTo;\n \n-import com.google.common.base.Preconditions;\n import java.time.Instant;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n import lombok.experimental.UtilityClass;\n-import org.apache.commons.lang3.StringUtils;\n import org.hamcrest.Matcher;\n \n @UtilityClass\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ1NDEyMA==", "url": "https://github.com/triplea-game/triplea/pull/6344#discussion_r416454120", "bodyText": "Thoughts about using https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDateTime.html#of(int,int,int,int,int,int)\nInstead and converting that to an instant?\nThis way you wouldn't need the preconditions and custom parse logic.\nSomething like\nvar ldt = LocalDateTime.of(year, month, day, hour, minute, second);\nvar instant = ldt.toInstant(ZoneOffset.UTC);", "author": "RoiEXLab", "createdAt": "2020-04-28T09:07:43Z", "path": "test-common/src/main/java/org/triplea/test/common/IsInstant.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.triplea.test.common;\n+\n+import static org.hamcrest.core.Is.is;\n+import static org.hamcrest.core.IsEqual.equalTo;\n+\n+import com.google.common.base.Preconditions;\n+import java.time.Instant;\n+import lombok.experimental.UtilityClass;\n+import org.apache.commons.lang3.StringUtils;\n+import org.hamcrest.Matcher;\n+\n+@UtilityClass\n+public class IsInstant {\n+\n+  /**\n+   * Matches if a given instant has the equivalent date as defined by the parameters (parameters are\n+   * assumed to be UTC).\n+   *\n+   * <p>Example usage: <code>\n+   *   assertThat(Instant.now(), isInstant(2020, 12, 24, 23, 59, 59));\n+   * </code> <br>\n+   * The above is equivalent to:<code>\n+   *   assertThat(Instant.now(), is(Instant.parse(\"2020-12-24T23:59:59Z\")));\n+   * </code>\n+   *\n+   * @param year The year to match (should be YYYY format, eg: 2020)\n+   * @param month The month to match (1-12)\n+   * @param day The day to match (1-31)\n+   * @param hour The hour of day to match (1-23)\n+   * @param minute The minute of the hour to match (0-59)\n+   * @param second The second of the minute to match (0-59)\n+   */\n+  public static Matcher<Instant> isInstant(\n+      final int year,\n+      final int month,\n+      final int day,\n+      final int hour,\n+      final int minute,\n+      final int second) {\n+\n+    Preconditions.checkArgument(month > 0 && month < 13);\n+    Preconditions.checkArgument(day > 0 && day < 32);\n+    Preconditions.checkArgument(hour >= 0 && hour < 24);\n+    Preconditions.checkArgument(minute >= 0 && minute < 60);\n+    Preconditions.checkArgument(second >= 0 && second < 60);\n+\n+    return is(\n+        equalTo(\n+            Instant.parse(\n+                String.format(\n+                    \"%s-%s-%sT%s:%s:%sZ\",\n+                    StringUtils.leftPad(String.valueOf(year), 4, '0'),\n+                    StringUtils.leftPad(String.valueOf(month), 2, '0'),\n+                    StringUtils.leftPad(String.valueOf(day), 2, '0'),\n+                    StringUtils.leftPad(String.valueOf(hour), 2, '0'),\n+                    StringUtils.leftPad(String.valueOf(minute), 2, '0'),\n+                    StringUtils.leftPad(String.valueOf(second), 2, '0')))));", "originalCommit": "5a4f7e6d962542b18cb9e73cbecc642e7083ff2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NzYwMQ==", "url": "https://github.com/triplea-game/triplea/pull/6344#discussion_r417057601", "bodyText": "Good suggestion \ud83d\udc4d\n9c34b42", "author": "DanVanAtta", "createdAt": "2020-04-29T04:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ1NDEyMA=="}], "type": "inlineReview", "revised_code": {"commit": "9c34b427c01643587f02ad7353806dc11b4ff871", "chunk": "diff --git a/test-common/src/main/java/org/triplea/test/common/IsInstant.java b/test-common/src/main/java/org/triplea/test/common/IsInstant.java\nindex 48a3378ed7..4a17e296a3 100644\n--- a/test-common/src/main/java/org/triplea/test/common/IsInstant.java\n+++ b/test-common/src/main/java/org/triplea/test/common/IsInstant.java\n\n@@ -3,10 +3,10 @@ package org.triplea.test.common;\n import static org.hamcrest.core.Is.is;\n import static org.hamcrest.core.IsEqual.equalTo;\n \n-import com.google.common.base.Preconditions;\n import java.time.Instant;\n+import java.time.LocalDateTime;\n+import java.time.ZoneOffset;\n import lombok.experimental.UtilityClass;\n-import org.apache.commons.lang3.StringUtils;\n import org.hamcrest.Matcher;\n \n @UtilityClass\n"}}, {"oid": "9c34b427c01643587f02ad7353806dc11b4ff871", "url": "https://github.com/triplea-game/triplea/commit/9c34b427c01643587f02ad7353806dc11b4ff871", "message": "Use LocalDateTime.of over Instant.parse", "committedDate": "2020-04-29T03:34:00Z", "type": "commit"}]}