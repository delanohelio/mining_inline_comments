{"pr_number": 3063, "pr_title": "ARTEMIS-2692 refactor queue creation", "pr_createdAt": "2020-04-05T15:27:49Z", "pr_url": "https://github.com/apache/activemq-artemis/pull/3063", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzczMDM5MA==", "url": "https://github.com/apache/activemq-artemis/pull/3063#discussion_r403730390", "bodyText": "I'm wondering, do we still need all these overloads like createSharedQueue and createTemporaryQueue. Shouldn't the intent be expressed by the state of QueueConfiguration object itself? As the client of the api, I wouldn't expect that the configuration I am passing will be mutated.", "author": "Havret", "createdAt": "2020-04-05T17:12:14Z", "path": "artemis-core-client/src/main/java/org/apache/activemq/artemis/core/client/impl/ClientSessionImpl.java", "diffHunk": "@@ -298,6 +299,28 @@ public void createAddress(final SimpleString address, RoutingType routingType, b\n       createAddress(address, EnumSet.of(routingType), autoCreated);\n    }\n \n+   @Override\n+   public void createQueue(QueueConfiguration queueConfiguration) throws ActiveMQException {\n+      internalCreateQueue(queueConfiguration);\n+   }\n+\n+   @Override\n+   public void createSharedQueue(QueueConfiguration queueConfiguration) throws ActiveMQException {\n+      checkClosed();\n+\n+      startCall();\n+      try {\n+         sessionContext.createSharedQueue(queueConfiguration);\n+      } finally {\n+         endCall();\n+      }\n+   }\n+\n+   @Override\n+   public void createTemporaryQueue(QueueConfiguration queueConfiguration) throws ActiveMQException {", "originalCommit": "40bab72d61b1c5972da0c356edb2f21de1b87ad6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzczMzgxOQ==", "url": "https://github.com/apache/activemq-artemis/pull/3063#discussion_r403733819", "bodyText": "I would agree, essentially a shared queue or temporary queue is just all attributes of a queue. As such having a more simplified single createQueue method will be cleaner.", "author": "michaelandrepearce", "createdAt": "2020-04-05T17:40:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzczMDM5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgwMzE4OQ==", "url": "https://github.com/apache/activemq-artemis/pull/3063#discussion_r403803189", "bodyText": "I'm in favor of that. I'll take those out to simplify it even further.", "author": "jbertram", "createdAt": "2020-04-06T02:44:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzczMDM5MA=="}], "type": "inlineReview", "revised_code": {"commit": "50b45d275d4c0a04c937f0f41279dfbb2b3f4a06", "chunk": "diff --git a/artemis-core-client/src/main/java/org/apache/activemq/artemis/core/client/impl/ClientSessionImpl.java b/artemis-core-client/src/main/java/org/apache/activemq/artemis/core/client/impl/ClientSessionImpl.java\nindex 5e5ced8c01..b87207ef01 100644\n--- a/artemis-core-client/src/main/java/org/apache/activemq/artemis/core/client/impl/ClientSessionImpl.java\n+++ b/artemis-core-client/src/main/java/org/apache/activemq/artemis/core/client/impl/ClientSessionImpl.java\n\n@@ -316,11 +316,6 @@ public final class ClientSessionImpl implements ClientSessionInternal, FailureLi\n       }\n    }\n \n-   @Override\n-   public void createTemporaryQueue(QueueConfiguration queueConfiguration) throws ActiveMQException {\n-      internalCreateQueue(queueConfiguration.setDurable(false).setTemporary(true).setAutoCreated(false));\n-   }\n-\n    @Override\n    public void createQueue(final SimpleString address,\n                            final SimpleString queueName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkxNTY5Ng==", "url": "https://github.com/apache/activemq-artemis/pull/3063#discussion_r403915696", "bodyText": "I would encapsulate this logic in a separate method on a separate class to make it more readeable an d shorter ie translation from request to QueueConfiguration", "author": "franz1981", "createdAt": "2020-04-06T08:31:13Z", "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/protocol/core/ServerSessionPacketHandler.java", "diffHunk": "@@ -357,9 +363,29 @@ private void slowPacketHandler(final Packet packet) {\n                case CREATE_QUEUE_V2: {\n                   CreateQueueMessage_V2 request = (CreateQueueMessage_V2) packet;\n                   requiresResponse = request.isRequiresResponse();\n-                  session.createQueue(request.getAddress(), request.getQueueName(), request.getRoutingType(), request.getFilterString(), request.isTemporary(), request.isDurable(), request.getMaxConsumers(), request.isPurgeOnNoConsumers(),\n-                                      request.isExclusive(), request.isGroupRebalance(), request.getGroupBuckets(), request.getGroupFirstKey(), request.isLastValue(), request.getLastValueKey(), request.isNonDestructive(), request.getConsumersBeforeDispatch(), request.getDelayBeforeDispatch(),\n-                                      request.isAutoDelete(), request.getAutoDeleteDelay(), request.getAutoDeleteMessageCount(), request.isAutoCreated(), request.getRingSize());\n+                  session.createQueue(new QueueConfiguration(request.getQueueName())", "originalCommit": "40bab72d61b1c5972da0c356edb2f21de1b87ad6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0NzI3NA==", "url": "https://github.com/apache/activemq-artemis/pull/3063#discussion_r404347274", "bodyText": "Will do.", "author": "jbertram", "createdAt": "2020-04-06T19:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkxNTY5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "50b45d275d4c0a04c937f0f41279dfbb2b3f4a06", "chunk": "diff --git a/artemis-server/src/main/java/org/apache/activemq/artemis/core/protocol/core/ServerSessionPacketHandler.java b/artemis-server/src/main/java/org/apache/activemq/artemis/core/protocol/core/ServerSessionPacketHandler.java\nindex 5e84f960f9..4c583aabdd 100644\n--- a/artemis-server/src/main/java/org/apache/activemq/artemis/core/protocol/core/ServerSessionPacketHandler.java\n+++ b/artemis-server/src/main/java/org/apache/activemq/artemis/core/protocol/core/ServerSessionPacketHandler.java\n\n@@ -363,28 +363,7 @@ public class ServerSessionPacketHandler implements ChannelHandler {\n                case CREATE_QUEUE_V2: {\n                   CreateQueueMessage_V2 request = (CreateQueueMessage_V2) packet;\n                   requiresResponse = request.isRequiresResponse();\n-                  session.createQueue(new QueueConfiguration(request.getQueueName())\n-                                         .setAddress(request.getAddress())\n-                                         .setRoutingType(request.getRoutingType())\n-                                         .setFilterString(request.getFilterString())\n-                                         .setTemporary(request.isTemporary())\n-                                         .setDurable(request.isDurable())\n-                                         .setMaxConsumers(request.getMaxConsumers())\n-                                         .setPurgeOnNoConsumers(request.isPurgeOnNoConsumers())\n-                                         .setExclusive(request.isExclusive())\n-                                         .setGroupRebalance(request.isGroupRebalance())\n-                                         .setGroupBuckets(request.getGroupBuckets())\n-                                         .setGroupFirstKey(request.getGroupFirstKey())\n-                                         .setLastValue(request.isLastValue())\n-                                         .setLastValueKey(request.getLastValueKey())\n-                                         .setNonDestructive(request.isNonDestructive())\n-                                         .setConsumersBeforeDispatch(request.getConsumersBeforeDispatch())\n-                                         .setDelayBeforeDispatch(request.getDelayBeforeDispatch())\n-                                         .setAutoDelete(request.isAutoDelete())\n-                                         .setAutoDeleteDelay(request.getAutoDeleteDelay())\n-                                         .setAutoDeleteMessageCount(request.getAutoDeleteMessageCount())\n-                                         .setAutoCreated(request.isAutoCreated())\n-                                         .setRingSize(request.getRingSize()));\n+                  session.createQueue(request.toQueueConfiguration());\n \n                   if (requiresResponse) {\n                      response = createNullResponseMessage(packet);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkxNTkzNg==", "url": "https://github.com/apache/activemq-artemis/pull/3063#discussion_r403915936", "bodyText": "I would encapsulate this logic in a separate method on a separate class to make it more readeable an d shorter ie translation from request to QueueConfiguration", "author": "franz1981", "createdAt": "2020-04-06T08:31:38Z", "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/protocol/core/ServerSessionPacketHandler.java", "diffHunk": "@@ -382,9 +411,25 @@ private void slowPacketHandler(final Packet packet) {\n                   requiresResponse = request.isRequiresResponse();\n                   QueueQueryResult result = session.executeQueueQuery(request.getQueueName());\n                   if (!(result.isExists() && Objects.equals(result.getAddress(), request.getAddress()) && Objects.equals(result.getFilterString(), request.getFilterString()))) {\n-                     session.createSharedQueue(request.getAddress(), request.getQueueName(), request.getRoutingType(), request.getFilterString(), request.isDurable(), request.getMaxConsumers(), request.isPurgeOnNoConsumers(),\n-                                               request.isExclusive(), request.isGroupRebalance(), request.getGroupBuckets(), request.getGroupFirstKey(), request.isLastValue(), request.getLastValueKey(), request.isNonDestructive(), request.getConsumersBeforeDispatch(), request.getDelayBeforeDispatch(),\n-                                               request.isAutoDelete(), request.getAutoDeleteDelay(), request.getAutoDeleteMessageCount());\n+                     session.createSharedQueue(new QueueConfiguration(request.getQueueName())", "originalCommit": "40bab72d61b1c5972da0c356edb2f21de1b87ad6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0NzMzMA==", "url": "https://github.com/apache/activemq-artemis/pull/3063#discussion_r404347330", "bodyText": "Will do.", "author": "jbertram", "createdAt": "2020-04-06T19:51:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkxNTkzNg=="}], "type": "inlineReview", "revised_code": {"commit": "50b45d275d4c0a04c937f0f41279dfbb2b3f4a06", "chunk": "diff --git a/artemis-server/src/main/java/org/apache/activemq/artemis/core/protocol/core/ServerSessionPacketHandler.java b/artemis-server/src/main/java/org/apache/activemq/artemis/core/protocol/core/ServerSessionPacketHandler.java\nindex 5e84f960f9..4c583aabdd 100644\n--- a/artemis-server/src/main/java/org/apache/activemq/artemis/core/protocol/core/ServerSessionPacketHandler.java\n+++ b/artemis-server/src/main/java/org/apache/activemq/artemis/core/protocol/core/ServerSessionPacketHandler.java\n\n@@ -411,25 +390,7 @@ public class ServerSessionPacketHandler implements ChannelHandler {\n                   requiresResponse = request.isRequiresResponse();\n                   QueueQueryResult result = session.executeQueueQuery(request.getQueueName());\n                   if (!(result.isExists() && Objects.equals(result.getAddress(), request.getAddress()) && Objects.equals(result.getFilterString(), request.getFilterString()))) {\n-                     session.createSharedQueue(new QueueConfiguration(request.getQueueName())\n-                                                  .setAddress(request.getAddress())\n-                                                  .setRoutingType(request.getRoutingType())\n-                                                  .setFilterString(request.getFilterString())\n-                                                  .setDurable(request.isDurable())\n-                                                  .setMaxConsumers(request.getMaxConsumers())\n-                                                  .setPurgeOnNoConsumers(request.isPurgeOnNoConsumers())\n-                                                  .setExclusive(request.isExclusive())\n-                                                  .setGroupRebalance(request.isGroupRebalance())\n-                                                  .setGroupBuckets(request.getGroupBuckets())\n-                                                  .setGroupFirstKey(request.getGroupFirstKey())\n-                                                  .setLastValue(request.isLastValue())\n-                                                  .setLastValueKey(request.getLastValueKey())\n-                                                  .setNonDestructive(request.isNonDestructive())\n-                                                  .setConsumersBeforeDispatch(request.getConsumersBeforeDispatch())\n-                                                  .setDelayBeforeDispatch(request.getDelayBeforeDispatch())\n-                                                  .setAutoDelete(request.isAutoDelete())\n-                                                  .setAutoDeleteDelay(request.getAutoDeleteDelay())\n-                                                  .setAutoDeleteMessageCount(request.getAutoDeleteMessageCount()));\n+                     session.createSharedQueue(request.toQueueConfiguration());\n                   }\n                   if (requiresResponse) {\n                      response = createNullResponseMessage(packet);\n"}}, {"oid": "50b45d275d4c0a04c937f0f41279dfbb2b3f4a06", "url": "https://github.com/apache/activemq-artemis/commit/50b45d275d4c0a04c937f0f41279dfbb2b3f4a06", "message": "ARTEMIS-2692 refactor queue creation\n\nThis commit changes all tests to use the new methods.", "committedDate": "2020-04-12T02:47:20Z", "type": "forcePushed"}, {"oid": "2efa44daf52994790737e21ee29ae830f8f0a12c", "url": "https://github.com/apache/activemq-artemis/commit/2efa44daf52994790737e21ee29ae830f8f0a12c", "message": "ARTEMIS-2692 refactor queue creation\n\nThis commit does the following:\n- Deprecates existing overloaded createQueue, createSharedQueue,\n  createTemporaryQueue, & updateQueue methods for ClientSession,\n  ServerSession, ActiveMQServer, & ActiveMQServerControl where\n  applicable.\n- Deprecates QueueAttributes, QueueConfig, & CoreQueueConfiguration.\n- Deprecates existing overloaded constructors for QueueImpl.\n- Implements QueueConfiguration with JavaDoc to be the single,\n  centralized configuration object for both client-side and broker-side\n  queue creation including methods to convert to & from JSON for use in\n  the management API.\n- Implements new createQueue, createSharedQueue & updateQueue methods\n  with JavaDoc for ClientSession, ServerSession, ActiveMQServer, &\n  ActiveMQServerControl as well as a new constructor for QueueImpl all\n  using the new QueueConfiguration object.\n- Changes all internal broker code to use the new methods.", "committedDate": "2020-04-13T19:25:30Z", "type": "commit"}, {"oid": "701b4e47944fad231b7ee94f89f93b4b11329b90", "url": "https://github.com/apache/activemq-artemis/commit/701b4e47944fad231b7ee94f89f93b4b11329b90", "message": "ARTEMIS-2692 refactor queue creation\n\nThis commit changes all tests to use the new methods.", "committedDate": "2020-04-13T19:25:30Z", "type": "commit"}, {"oid": "701b4e47944fad231b7ee94f89f93b4b11329b90", "url": "https://github.com/apache/activemq-artemis/commit/701b4e47944fad231b7ee94f89f93b4b11329b90", "message": "ARTEMIS-2692 refactor queue creation\n\nThis commit changes all tests to use the new methods.", "committedDate": "2020-04-13T19:25:30Z", "type": "forcePushed"}]}