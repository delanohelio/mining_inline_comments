{"pr_number": 3824, "pr_title": "CATROID-623 \"if( condition , then , else )\" Function", "pr_createdAt": "2020-10-02T03:37:15Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3824", "timeline": [{"oid": "77a77279179a1b3aba05354526c10129e415a8c1", "url": "https://github.com/Catrobat/Catroid/commit/77a77279179a1b3aba05354526c10129e415a8c1", "message": "CATROID-623 \"if( condition , then , else )\" Function", "committedDate": "2020-10-02T04:32:39Z", "type": "forcePushed"}, {"oid": "616537fdb76f5b8a55cb21d57ecaa5f857e7d0ff", "url": "https://github.com/Catrobat/Catroid/commit/616537fdb76f5b8a55cb21d57ecaa5f857e7d0ff", "message": "CATROID-623 \"if( condition , then , else )\" Function", "committedDate": "2020-10-02T04:38:00Z", "type": "forcePushed"}, {"oid": "bde4d4976e9f610abd2cdfb501a7b78133ab11f3", "url": "https://github.com/Catrobat/Catroid/commit/bde4d4976e9f610abd2cdfb501a7b78133ab11f3", "message": "CATROID-623 \"if( condition , then , else )\" Function", "committedDate": "2020-10-02T05:18:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk1NTIxMw==", "url": "https://github.com/Catrobat/Catroid/pull/3824#discussion_r503955213", "bodyText": "why not using a for loop like in L252? Wouldn't it be less clumsy?", "author": "christophsiegl", "createdAt": "2020-10-13T13:33:34Z", "path": "catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java", "diffHunk": "@@ -215,6 +220,12 @@ private void addFunctionTokens(List<InternToken> tokens, String value, FormulaEl\n \t\t\taddToken(tokens, FUNCTION_PARAMETER_DELIMITER);\n \t\t\ttokens.addAll(rightChild.getInternTokenList());\n \t\t}\n+\t\tfor (int index = 0; index < additionalChildren.size(); index++) {", "originalCommit": "bde4d4976e9f610abd2cdfb501a7b78133ab11f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d759c686dad9970a36b956b59298b4cd8787e332", "chunk": "diff --git a/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java b/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java\nindex 361476f55..a6f67a31f 100644\n--- a/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java\n+++ b/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java\n\n@@ -220,10 +228,10 @@ public class FormulaElement implements Serializable {\n \t\t\taddToken(tokens, FUNCTION_PARAMETER_DELIMITER);\n \t\t\ttokens.addAll(rightChild.getInternTokenList());\n \t\t}\n-\t\tfor (int index = 0; index < additionalChildren.size(); index++) {\n-\t\t\tif (additionalChildren.get(index) != null) {\n+\t\tfor (FormulaElement child : additionalChildren) {\n+\t\t\tif (child != null) {\n \t\t\t\taddToken(tokens, FUNCTION_PARAMETER_DELIMITER);\n-\t\t\t\ttokens.addAll(additionalChildren.get(index).getInternTokenList());\n+\t\t\t\ttokens.addAll(child.getInternTokenList());\n \t\t\t}\n \t\t}\n \t\tif (functionHasParameters) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk1NjY5MA==", "url": "https://github.com/Catrobat/Catroid/pull/3824#discussion_r503956690", "bodyText": "parent is already set in L734 ...", "author": "christophsiegl", "createdAt": "2020-10-13T13:35:30Z", "path": "catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java", "diffHunk": "@@ -675,10 +725,23 @@ public void setLeftChild(FormulaElement leftChild) {\n \t\tthis.leftChild.parent = this;\n \t}\n \n+\tpublic void addAdditionalChild(FormulaElement child) {\n+\t\tadditionalChildren.add(child);\n+\t\tchild.parent = this;\n+\t}\n+\n \tpublic void replaceElement(FormulaElement current) {\n \t\tparent = current.parent;\n \t\tleftChild = current.leftChild;\n \t\trightChild = current.rightChild;\n+\t\tparent = current.parent;", "originalCommit": "bde4d4976e9f610abd2cdfb501a7b78133ab11f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d759c686dad9970a36b956b59298b4cd8787e332", "chunk": "diff --git a/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java b/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java\nindex 361476f55..a6f67a31f 100644\n--- a/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java\n+++ b/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java\n\n@@ -734,7 +748,6 @@ public class FormulaElement implements Serializable {\n \t\tparent = current.parent;\n \t\tleftChild = current.leftChild;\n \t\trightChild = current.rightChild;\n-\t\tparent = current.parent;\n \t\tfor (int index = 0; index < current.additionalChildren.size(); index++) {\n \t\t\tif (index < additionalChildren.size()) {\n \t\t\t\tadditionalChildren.set(index, current.additionalChildren.get(index));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk1OTI2Ng==", "url": "https://github.com/Catrobat/Catroid/pull/3824#discussion_r503959266", "bodyText": "Maybe it would be nice to add an additional constructor which uses a list of additional childs? For loop would be hidden in the costructor ... could be nice in the future?", "author": "christophsiegl", "createdAt": "2020-10-13T13:38:52Z", "path": "catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java", "diffHunk": "@@ -725,8 +800,16 @@ public boolean isNumber() {\n \tpublic FormulaElement clone() {\n \t\tFormulaElement leftChildClone = tryCloneElement(leftChild);\n \t\tFormulaElement rightChildClone = tryCloneElement(rightChild);\n+\t\tList<FormulaElement> additionalChildrenClones = new ArrayList<>();\n+\t\tfor (FormulaElement child : additionalChildren) {\n+\t\t\tadditionalChildrenClones.add(tryCloneElement(child));\n+\t\t}\n \t\tString valueClone = value == null ? \"\" : value;\n-\t\treturn new FormulaElement(type, valueClone, null, leftChildClone, rightChildClone);\n+\t\tFormulaElement formula = new FormulaElement(type, valueClone, null, leftChildClone, rightChildClone);\n+\t\tfor (int index = 0; index < additionalChildrenClones.size(); index++) {", "originalCommit": "bde4d4976e9f610abd2cdfb501a7b78133ab11f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d759c686dad9970a36b956b59298b4cd8787e332", "chunk": "diff --git a/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java b/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java\nindex 361476f55..a6f67a31f 100644\n--- a/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java\n+++ b/catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java\n\n@@ -805,11 +818,8 @@ public class FormulaElement implements Serializable {\n \t\t\tadditionalChildrenClones.add(tryCloneElement(child));\n \t\t}\n \t\tString valueClone = value == null ? \"\" : value;\n-\t\tFormulaElement formula = new FormulaElement(type, valueClone, null, leftChildClone, rightChildClone);\n-\t\tfor (int index = 0; index < additionalChildrenClones.size(); index++) {\n-\t\t\tformula.addAdditionalChild(additionalChildrenClones.get(index));\n-\t\t}\n-\t\treturn formula;\n+\t\treturn new FormulaElement(type, valueClone, null, leftChildClone, rightChildClone,\n+\t\t\t\tadditionalChildrenClones);\n \t}\n \n \tprivate FormulaElement tryCloneElement(FormulaElement element) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk2MTYwNA==", "url": "https://github.com/Catrobat/Catroid/pull/3824#discussion_r503961604", "bodyText": "L321 in updateCollisionFormulaToVersion: Not sure if this also has to be done for our additional children?", "author": "christophsiegl", "createdAt": "2020-10-13T13:41:50Z", "path": "catroid/src/main/java/org/catrobat/catroid/formulaeditor/FormulaElement.java", "diffHunk": "@@ -269,6 +296,11 @@ private boolean containsSpriteInCollision(FormulaElement element, String name) {\n \tpublic final void updateCollisionFormula(String oldName, String newName) {\n \t\ttryUpdateCollisionFormula(leftChild, oldName, newName);\n \t\ttryUpdateCollisionFormula(rightChild, oldName, newName);\n+\n+\t\tfor (FormulaElement child : additionalChildren) {\n+\t\t\ttryUpdateCollisionFormula(child, oldName, newName);\n+\t\t}\n+", "originalCommit": "bde4d4976e9f610abd2cdfb501a7b78133ab11f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk5MDM1Mg==", "url": "https://github.com/Catrobat/Catroid/pull/3824#discussion_r503990352", "bodyText": "InterTokenType.x is already imported. Please use \"FUNCTION_NAME\" without \"InternTokeType.\" like in buildDoubleParameterFunction(). Also apply this change to each used InternTokeType in buildTripleParameterFunction().", "author": "christophsiegl", "createdAt": "2020-10-13T14:17:56Z", "path": "catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternFormulaKeyboardAdapter.java", "diffHunk": "@@ -480,6 +485,21 @@\n \t\treturn returnList;\n \t}\n \n+\tprivate List<InternToken> buildTripleParameterFunction(Functions function, InternTokenType firstParameter,\n+\t\t\tString firstParameterNumberValue, InternTokenType secondParameter, String secondParameterNumberValue,\n+\t\t\tInternTokenType thirdParameter, String thirdParameterNumberValue) {\n+\t\tList<InternToken> returnList = new LinkedList<InternToken>();\n+\t\treturnList.add(new InternToken(InternTokenType.FUNCTION_NAME, function.name()));", "originalCommit": "bde4d4976e9f610abd2cdfb501a7b78133ab11f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d759c686dad9970a36b956b59298b4cd8787e332", "chunk": "diff --git a/catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternFormulaKeyboardAdapter.java b/catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternFormulaKeyboardAdapter.java\nindex 0e602c60e..625dd1027 100644\n--- a/catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternFormulaKeyboardAdapter.java\n+++ b/catroid/src/main/java/org/catrobat/catroid/formulaeditor/InternFormulaKeyboardAdapter.java\n\n@@ -489,14 +489,14 @@ public class InternFormulaKeyboardAdapter {\n \t\t\tString firstParameterNumberValue, InternTokenType secondParameter, String secondParameterNumberValue,\n \t\t\tInternTokenType thirdParameter, String thirdParameterNumberValue) {\n \t\tList<InternToken> returnList = new LinkedList<InternToken>();\n-\t\treturnList.add(new InternToken(InternTokenType.FUNCTION_NAME, function.name()));\n-\t\treturnList.add(new InternToken(InternTokenType.FUNCTION_PARAMETERS_BRACKET_OPEN));\n+\t\treturnList.add(new InternToken(FUNCTION_NAME, function.name()));\n+\t\treturnList.add(new InternToken(FUNCTION_PARAMETERS_BRACKET_OPEN));\n \t\treturnList.add(new InternToken(firstParameter, firstParameterNumberValue));\n-\t\treturnList.add(new InternToken(InternTokenType.FUNCTION_PARAMETER_DELIMITER));\n+\t\treturnList.add(new InternToken(FUNCTION_PARAMETER_DELIMITER));\n \t\treturnList.add(new InternToken(secondParameter, secondParameterNumberValue));\n-\t\treturnList.add(new InternToken(InternTokenType.FUNCTION_PARAMETER_DELIMITER));\n+\t\treturnList.add(new InternToken(FUNCTION_PARAMETER_DELIMITER));\n \t\treturnList.add(new InternToken(thirdParameter, thirdParameterNumberValue));\n-\t\treturnList.add(new InternToken(InternTokenType.FUNCTION_PARAMETERS_BRACKET_CLOSE));\n+\t\treturnList.add(new InternToken(FUNCTION_PARAMETERS_BRACKET_CLOSE));\n \t\treturn returnList;\n \t}\n \n"}}, {"oid": "d759c686dad9970a36b956b59298b4cd8787e332", "url": "https://github.com/Catrobat/Catroid/commit/d759c686dad9970a36b956b59298b4cd8787e332", "message": "CATROID-623 \"if( condition , then , else )\" Function", "committedDate": "2020-10-14T14:31:52Z", "type": "forcePushed"}, {"oid": "b0984283a36bdc5eec1577502d18e58700c2e56a", "url": "https://github.com/Catrobat/Catroid/commit/b0984283a36bdc5eec1577502d18e58700c2e56a", "message": "CATROID-623 \"if( condition , then , else )\" Function\n\nMade the implementation of formulas with more than two parameters possible for this and future formulas by adding an additional list of arbitrary size of children to each formula element. The implementation for formulas with 2 or less children stayed the same and it is therefore possible to load old project files without conversion.\nImplemented the if then else function using this new implementation.", "committedDate": "2020-10-14T15:43:38Z", "type": "forcePushed"}, {"oid": "50f66055a10c130885df51d1d2eefbcc5fc0fb39", "url": "https://github.com/Catrobat/Catroid/commit/50f66055a10c130885df51d1d2eefbcc5fc0fb39", "message": "CATROID-623 \"if( condition , then , else )\" Function\n\nMade the implementation of formulas with more than two parameters possible for this and future formulas by adding an additional list of arbitrary size of children to each formula element. The implementation for formulas with 2 or less children stayed the same and it is therefore possible to load old project files without conversion.\nImplemented the if then else function using this new implementation.", "committedDate": "2020-10-23T13:07:29Z", "type": "forcePushed"}, {"oid": "94edc571be97380e856ca237ef72e3ac64ba2d3e", "url": "https://github.com/Catrobat/Catroid/commit/94edc571be97380e856ca237ef72e3ac64ba2d3e", "message": "CATROID-623 \"if( condition , then , else )\" Function\n\nMade the implementation of formulas with more than two parameters possible for this and future formulas by adding an additional list of arbitrary size of children to each formula element. The implementation for formulas with 2 or less children stayed the same and it is therefore possible to load old project files without conversion.\nImplemented the if then else function using this new implementation.", "committedDate": "2020-10-27T20:17:36Z", "type": "commit"}, {"oid": "94edc571be97380e856ca237ef72e3ac64ba2d3e", "url": "https://github.com/Catrobat/Catroid/commit/94edc571be97380e856ca237ef72e3ac64ba2d3e", "message": "CATROID-623 \"if( condition , then , else )\" Function\n\nMade the implementation of formulas with more than two parameters possible for this and future formulas by adding an additional list of arbitrary size of children to each formula element. The implementation for formulas with 2 or less children stayed the same and it is therefore possible to load old project files without conversion.\nImplemented the if then else function using this new implementation.", "committedDate": "2020-10-27T20:17:36Z", "type": "forcePushed"}]}