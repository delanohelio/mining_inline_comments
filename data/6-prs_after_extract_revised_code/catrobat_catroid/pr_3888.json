{"pr_number": 3888, "pr_title": "CATROID-833 Missing tests for Catblocks integration", "pr_createdAt": "2020-12-02T16:57:13Z", "pr_url": "https://github.com/Catrobat/Catroid/pull/3888", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAwNDg4OA==", "url": "https://github.com/Catrobat/Catroid/pull/3888#discussion_r551004888", "bodyText": "Typo \"Dispayed\"", "author": "juliajulie95", "createdAt": "2021-01-03T13:16:38Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java", "diffHunk": "@@ -0,0 +1,204 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.uiespresso.ui.fragment;\n+\n+import org.catrobat.catroid.ProjectManager;\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.content.Project;\n+import org.catrobat.catroid.content.Script;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.StartScript;\n+import org.catrobat.catroid.content.bricks.ChangeXByNBrick;\n+import org.catrobat.catroid.content.bricks.IfLogicBeginBrick;\n+import org.catrobat.catroid.content.bricks.SetXBrick;\n+import org.catrobat.catroid.ui.SpriteActivity;\n+import org.catrobat.catroid.ui.settingsfragments.SettingsFragment;\n+import org.catrobat.catroid.uiespresso.util.rules.FragmentActivityTestRule;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static junit.framework.TestCase.assertEquals;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.Espresso.openContextualActionModeOverflowMenu;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static androidx.test.espresso.web.assertion.WebViewAssertions.webContent;\n+import static androidx.test.espresso.web.matcher.DomMatchers.hasElementWithXpath;\n+import static androidx.test.espresso.web.sugar.Web.onWebView;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class CatblocksScriptFragmentTest {\n+\n+\t@Rule\n+\tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n+\t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION,\n+\t\t\tSpriteActivity.FRAGMENT_SCRIPTS);\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tSettingsFragment.setUseCatBlocks(ApplicationProvider.getApplicationContext(), false);\n+\t\tcreateProject();\n+\t\tbaseActivityTestRule.launchActivity();\n+\t}\n+\n+\t@After\n+\tpublic void tearDown() {\n+\t\tbaseActivityTestRule.getActivity().finish();\n+\t}\n+\n+\t@Test\n+\tpublic void testContextMenuItems() {\n+\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\t// default is 1D view -> reorder not visible\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// in Catblocks reorder should be visible\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(matches(isDisplayed()));\n+\n+\t\tonView(withText(R.string.undo)).check(doesNotExist());\n+\t\tonView(withText(R.string.backpack)).check(doesNotExist());\n+\t\tonView(withText(R.string.copy)).check(doesNotExist());\n+\t\tonView(withText(R.string.delete)).check(doesNotExist());\n+\t\tonView(withText(R.string.rename)).check(doesNotExist());\n+\t\tonView(withText(R.string.show_details)).check(doesNotExist());\n+\t\tonView(withText(R.string.comment_in_out)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// change back to 1D and check for existing menu items\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.backpack)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.copy)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.comment_in_out)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.catblocks)).check(matches(isDisplayed()));\n+\t}\n+\n+\t@Test\n+\tpublic void testCorrect2DObjectDispayed() {", "originalCommit": "fbaebc741822f70b763c957afa6c50c08e02a85a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "987a312c4f7c7410b47f1ca46f4f96f3ec19077e", "chunk": "diff --git a/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java b/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java\nindex 11e080f7b..f54685db1 100644\n--- a/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java\n+++ b/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java\n\n@@ -113,36 +113,6 @@ public class CatblocksScriptFragmentTest {\n \t\tonView(withText(R.string.catblocks)).check(matches(isDisplayed()));\n \t}\n \n-\t@Test\n-\tpublic void testCorrect2DObjectDispayed() {\n-\t\topenContextualActionModeOverflowMenu();\n-\t\tonView(withText(R.string.catblocks)).perform(click());\n-\n-\t\tint loadCounter = 0;\n-\t\t// since rendering may take some time: try multiple times\n-\t\twhile (true) {\n-\t\t\tloadCounter++;\n-\t\t\ttry {\n-\t\t\t\tonWebView().check(webContent(hasElementWithXpath(\"//*[@data-object=\\\"testSprite\\\" \"\n-\t\t\t\t\t\t+ \"and contains(@class,'catblocks-script-container') \"\n-\t\t\t\t\t\t+ \"and contains(@class,'collapse') \"\n-\t\t\t\t\t\t+ \"and contains(@class,'show')\"\n-\t\t\t\t\t\t+ \"]\")));\n-\t\t\t\tbreak;\n-\t\t\t} catch (Throwable e) {\n-\t\t\t\t// max. 2.5 seconds - then timeout\n-\t\t\t\tif (loadCounter >= 25) {\n-\t\t\t\t\tthrow e;\n-\t\t\t\t}\n-\t\t\t\ttry {\n-\t\t\t\t\tThread.sleep(100);\n-\t\t\t\t} catch (InterruptedException ex) {\n-\t\t\t\t\t// ignore\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\n \t@Test\n \tpublic void testReorderScript() {\n \t\topenContextualActionModeOverflowMenu();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAwNTE5Mg==", "url": "https://github.com/Catrobat/Catroid/pull/3888#discussion_r551005192", "bodyText": "While loop is duplicate of test above. Do we need to check this again? Maybe delete in this test, else delete test above.", "author": "juliajulie95", "createdAt": "2021-01-03T13:19:15Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java", "diffHunk": "@@ -0,0 +1,204 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.uiespresso.ui.fragment;\n+\n+import org.catrobat.catroid.ProjectManager;\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.content.Project;\n+import org.catrobat.catroid.content.Script;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.StartScript;\n+import org.catrobat.catroid.content.bricks.ChangeXByNBrick;\n+import org.catrobat.catroid.content.bricks.IfLogicBeginBrick;\n+import org.catrobat.catroid.content.bricks.SetXBrick;\n+import org.catrobat.catroid.ui.SpriteActivity;\n+import org.catrobat.catroid.ui.settingsfragments.SettingsFragment;\n+import org.catrobat.catroid.uiespresso.util.rules.FragmentActivityTestRule;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static junit.framework.TestCase.assertEquals;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.Espresso.openContextualActionModeOverflowMenu;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static androidx.test.espresso.web.assertion.WebViewAssertions.webContent;\n+import static androidx.test.espresso.web.matcher.DomMatchers.hasElementWithXpath;\n+import static androidx.test.espresso.web.sugar.Web.onWebView;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class CatblocksScriptFragmentTest {\n+\n+\t@Rule\n+\tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n+\t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION,\n+\t\t\tSpriteActivity.FRAGMENT_SCRIPTS);\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tSettingsFragment.setUseCatBlocks(ApplicationProvider.getApplicationContext(), false);\n+\t\tcreateProject();\n+\t\tbaseActivityTestRule.launchActivity();\n+\t}\n+\n+\t@After\n+\tpublic void tearDown() {\n+\t\tbaseActivityTestRule.getActivity().finish();\n+\t}\n+\n+\t@Test\n+\tpublic void testContextMenuItems() {\n+\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\t// default is 1D view -> reorder not visible\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// in Catblocks reorder should be visible\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(matches(isDisplayed()));\n+\n+\t\tonView(withText(R.string.undo)).check(doesNotExist());\n+\t\tonView(withText(R.string.backpack)).check(doesNotExist());\n+\t\tonView(withText(R.string.copy)).check(doesNotExist());\n+\t\tonView(withText(R.string.delete)).check(doesNotExist());\n+\t\tonView(withText(R.string.rename)).check(doesNotExist());\n+\t\tonView(withText(R.string.show_details)).check(doesNotExist());\n+\t\tonView(withText(R.string.comment_in_out)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// change back to 1D and check for existing menu items\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.backpack)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.copy)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.comment_in_out)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.catblocks)).check(matches(isDisplayed()));\n+\t}\n+\n+\t@Test\n+\tpublic void testCorrect2DObjectDispayed() {\n+\t\topenContextualActionModeOverflowMenu();\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\tint loadCounter = 0;\n+\t\t// since rendering may take some time: try multiple times\n+\t\twhile (true) {\n+\t\t\tloadCounter++;\n+\t\t\ttry {\n+\t\t\t\tonWebView().check(webContent(hasElementWithXpath(\"//*[@data-object=\\\"testSprite\\\" \"\n+\t\t\t\t\t\t+ \"and contains(@class,'catblocks-script-container') \"\n+\t\t\t\t\t\t+ \"and contains(@class,'collapse') \"\n+\t\t\t\t\t\t+ \"and contains(@class,'show')\"\n+\t\t\t\t\t\t+ \"]\")));\n+\t\t\t\tbreak;\n+\t\t\t} catch (Throwable e) {\n+\t\t\t\t// max. 2.5 seconds - then timeout\n+\t\t\t\tif (loadCounter >= 25) {\n+\t\t\t\t\tthrow e;\n+\t\t\t\t}\n+\t\t\t\ttry {\n+\t\t\t\t\tThread.sleep(100);\n+\t\t\t\t} catch (InterruptedException ex) {\n+\t\t\t\t\t// ignore\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Test\n+\tpublic void testReorderScript() {\n+\t\topenContextualActionModeOverflowMenu();\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\tint loadCounter = 0;\n+\t\t// since rendering may take some time: try multiple times if finished\n+\t\twhile (true) {", "originalCommit": "fbaebc741822f70b763c957afa6c50c08e02a85a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "987a312c4f7c7410b47f1ca46f4f96f3ec19077e", "chunk": "diff --git a/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java b/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java\nindex 11e080f7b..f54685db1 100644\n--- a/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java\n+++ b/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java\n\n@@ -113,36 +113,6 @@ public class CatblocksScriptFragmentTest {\n \t\tonView(withText(R.string.catblocks)).check(matches(isDisplayed()));\n \t}\n \n-\t@Test\n-\tpublic void testCorrect2DObjectDispayed() {\n-\t\topenContextualActionModeOverflowMenu();\n-\t\tonView(withText(R.string.catblocks)).perform(click());\n-\n-\t\tint loadCounter = 0;\n-\t\t// since rendering may take some time: try multiple times\n-\t\twhile (true) {\n-\t\t\tloadCounter++;\n-\t\t\ttry {\n-\t\t\t\tonWebView().check(webContent(hasElementWithXpath(\"//*[@data-object=\\\"testSprite\\\" \"\n-\t\t\t\t\t\t+ \"and contains(@class,'catblocks-script-container') \"\n-\t\t\t\t\t\t+ \"and contains(@class,'collapse') \"\n-\t\t\t\t\t\t+ \"and contains(@class,'show')\"\n-\t\t\t\t\t\t+ \"]\")));\n-\t\t\t\tbreak;\n-\t\t\t} catch (Throwable e) {\n-\t\t\t\t// max. 2.5 seconds - then timeout\n-\t\t\t\tif (loadCounter >= 25) {\n-\t\t\t\t\tthrow e;\n-\t\t\t\t}\n-\t\t\t\ttry {\n-\t\t\t\t\tThread.sleep(100);\n-\t\t\t\t} catch (InterruptedException ex) {\n-\t\t\t\t\t// ignore\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\n \t@Test\n \tpublic void testReorderScript() {\n \t\topenContextualActionModeOverflowMenu();\n"}}, {"oid": "987a312c4f7c7410b47f1ca46f4f96f3ec19077e", "url": "https://github.com/Catrobat/Catroid/commit/987a312c4f7c7410b47f1ca46f4f96f3ec19077e", "message": "CATROID-833 add Catblocks tests", "committedDate": "2021-01-03T19:53:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDA2OTQ0Ng==", "url": "https://github.com/Catrobat/Catroid/pull/3888#discussion_r554069446", "bodyText": "This results in a lint warning =>\n\nhttps://jenkins.catrob.at/job/Catroid/job/PR-3888/14/analysis/\nhttps://jenkins.catrob.at/job/Catroid/job/PR-3888/14/analysis/source.01d88343-443b-496d-90eb-a6ac09189969/#140", "author": "wslany", "createdAt": "2021-01-08T16:56:19Z", "path": "catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java", "diffHunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Catroid: An on-device visual programming system for Android devices\n+ * Copyright (C) 2010-2020 The Catrobat Team\n+ * (<http://developer.catrobat.org/credits>)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as\n+ * published by the Free Software Foundation, either version 3 of the\n+ * License, or (at your option) any later version.\n+ *\n+ * An additional term exception under section 7 of the GNU Affero\n+ * General Public License, version 3, is available at\n+ * http://developer.catrobat.org/license_additional_term\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.catrobat.catroid.uiespresso.ui.fragment;\n+\n+import org.catrobat.catroid.ProjectManager;\n+import org.catrobat.catroid.R;\n+import org.catrobat.catroid.content.Project;\n+import org.catrobat.catroid.content.Script;\n+import org.catrobat.catroid.content.Sprite;\n+import org.catrobat.catroid.content.StartScript;\n+import org.catrobat.catroid.content.bricks.ChangeXByNBrick;\n+import org.catrobat.catroid.content.bricks.IfLogicBeginBrick;\n+import org.catrobat.catroid.content.bricks.SetXBrick;\n+import org.catrobat.catroid.ui.SpriteActivity;\n+import org.catrobat.catroid.ui.settingsfragments.SettingsFragment;\n+import org.catrobat.catroid.uiespresso.util.rules.FragmentActivityTestRule;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static junit.framework.TestCase.assertEquals;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.Espresso.openContextualActionModeOverflowMenu;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static androidx.test.espresso.web.assertion.WebViewAssertions.webContent;\n+import static androidx.test.espresso.web.matcher.DomMatchers.hasElementWithXpath;\n+import static androidx.test.espresso.web.sugar.Web.onWebView;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class CatblocksScriptFragmentTest {\n+\n+\t@Rule\n+\tpublic FragmentActivityTestRule<SpriteActivity> baseActivityTestRule = new\n+\t\t\tFragmentActivityTestRule<>(SpriteActivity.class, SpriteActivity.EXTRA_FRAGMENT_POSITION,\n+\t\t\tSpriteActivity.FRAGMENT_SCRIPTS);\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tSettingsFragment.setUseCatBlocks(ApplicationProvider.getApplicationContext(), false);\n+\t\tcreateProject();\n+\t\tbaseActivityTestRule.launchActivity();\n+\t}\n+\n+\t@After\n+\tpublic void tearDown() {\n+\t\tbaseActivityTestRule.getActivity().finish();\n+\t}\n+\n+\t@Test\n+\tpublic void testContextMenuItems() {\n+\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\t// default is 1D view -> reorder not visible\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// in Catblocks reorder should be visible\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(matches(isDisplayed()));\n+\n+\t\tonView(withText(R.string.undo)).check(doesNotExist());\n+\t\tonView(withText(R.string.backpack)).check(doesNotExist());\n+\t\tonView(withText(R.string.copy)).check(doesNotExist());\n+\t\tonView(withText(R.string.delete)).check(doesNotExist());\n+\t\tonView(withText(R.string.rename)).check(doesNotExist());\n+\t\tonView(withText(R.string.show_details)).check(doesNotExist());\n+\t\tonView(withText(R.string.comment_in_out)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\t// change back to 1D and check for existing menu items\n+\t\topenContextualActionModeOverflowMenu();\n+\n+\t\tonView(withText(R.string.catblocks_reorder)).check(doesNotExist());\n+\n+\t\tonView(withText(R.string.backpack)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.copy)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.comment_in_out)).check(matches(isDisplayed()));\n+\t\tonView(withText(R.string.catblocks)).check(matches(isDisplayed()));\n+\t}\n+\n+\t@Test\n+\tpublic void testReorderScript() {\n+\t\topenContextualActionModeOverflowMenu();\n+\t\tonView(withText(R.string.catblocks)).perform(click());\n+\n+\t\tint loadCounter = 0;\n+\t\t// since rendering may take some time: try multiple times if finished\n+\t\t// checks if the correct 2D object is displayed\n+\t\twhile (true) {\n+\t\t\tloadCounter++;\n+\t\t\ttry {\n+\t\t\t\tonWebView().check(webContent(hasElementWithXpath(\"//*[@data-object=\\\"testSprite\\\" \"\n+\t\t\t\t\t\t+ \"and contains(@class,'catblocks-script-container') \"\n+\t\t\t\t\t\t+ \"and contains(@class,'collapse') \"\n+\t\t\t\t\t\t+ \"and contains(@class,'show')\"\n+\t\t\t\t\t\t+ \"]\")));\n+\t\t\t\tbreak;\n+\t\t\t} catch (Throwable e) {\n+\t\t\t\t// max. 2.5 seconds - then timeout\n+\t\t\t\tif (loadCounter >= 25) {\n+\t\t\t\t\tthrow e;\n+\t\t\t\t}\n+\t\t\t\ttry {\n+\t\t\t\t\tThread.sleep(100);\n+\t\t\t\t} catch (InterruptedException ex) {\n+\t\t\t\t\t// ignore\n+\t\t\t\t}", "originalCommit": "987a312c4f7c7410b47f1ca46f4f96f3ec19077e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f0cf7c6ed5850615dc674c592ededfc498623b99", "chunk": "diff --git a/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java b/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java\nindex f54685db1..2aab0161b 100644\n--- a/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java\n+++ b/catroid/src/androidTest/java/org/catrobat/catroid/uiespresso/ui/fragment/CatblocksScriptFragmentTest.java\n\n@@ -114,13 +114,11 @@ public class CatblocksScriptFragmentTest {\n \t}\n \n \t@Test\n-\tpublic void testReorderScript() {\n+\tpublic void testReorderScript() throws InterruptedException {\n \t\topenContextualActionModeOverflowMenu();\n \t\tonView(withText(R.string.catblocks)).perform(click());\n \n \t\tint loadCounter = 0;\n-\t\t// since rendering may take some time: try multiple times if finished\n-\t\t// checks if the correct 2D object is displayed\n \t\twhile (true) {\n \t\t\tloadCounter++;\n \t\t\ttry {\n"}}, {"oid": "f0cf7c6ed5850615dc674c592ededfc498623b99", "url": "https://github.com/Catrobat/Catroid/commit/f0cf7c6ed5850615dc674c592ededfc498623b99", "message": "CATROID-833 add Catblocks tests", "committedDate": "2021-01-09T14:50:53Z", "type": "forcePushed"}, {"oid": "833919d9fef435cb2ac29ce43b792dfd1a38ee7c", "url": "https://github.com/Catrobat/Catroid/commit/833919d9fef435cb2ac29ce43b792dfd1a38ee7c", "message": "CATROID-833 add Catblocks tests", "committedDate": "2021-01-09T15:02:32Z", "type": "forcePushed"}, {"oid": "0c8779d24562da5cc7790112c183ece344d9b617", "url": "https://github.com/Catrobat/Catroid/commit/0c8779d24562da5cc7790112c183ece344d9b617", "message": "CATROID-833 add Catblocks tests", "committedDate": "2021-01-09T15:03:06Z", "type": "commit"}, {"oid": "0c8779d24562da5cc7790112c183ece344d9b617", "url": "https://github.com/Catrobat/Catroid/commit/0c8779d24562da5cc7790112c183ece344d9b617", "message": "CATROID-833 add Catblocks tests", "committedDate": "2021-01-09T15:03:06Z", "type": "forcePushed"}]}