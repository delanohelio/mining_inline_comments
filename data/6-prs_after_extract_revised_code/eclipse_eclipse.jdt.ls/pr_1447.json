{"pr_number": 1447, "pr_title": "Add a new command to get all Java projects", "pr_createdAt": "2020-05-19T06:55:39Z", "pr_url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447", "timeline": [{"oid": "3ff755b47cd448c6676f40450581a5d533943ed1", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/3ff755b47cd448c6676f40450581a5d533943ed1", "message": "Add a new command to get all Java projects\n\nSigned-off-by: Sheng Chen <sheche@microsoft.com>", "committedDate": "2020-05-19T06:43:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2MjQ3Ng==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427162476", "bodyText": "javaProjects", "author": "fbricon", "createdAt": "2020-05-19T09:30:29Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -128,6 +130,17 @@ public static boolean isTestFile(String uri) throws CoreException {\n \t\treturn false;\n \t}\n \n+\tpublic static List<URI> getAllJavaProject() {\n+\t\tList<URI> javaProejcts = new LinkedList<>();", "originalCommit": "3ff755b47cd448c6676f40450581a5d533943ed1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "726cb071338a74a5ee3710cd7c346707db6f5854", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\nindex 608f2050..1ff58fad 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\n\n@@ -130,15 +130,15 @@ public class ProjectCommand {\n \t\treturn false;\n \t}\n \n-\tpublic static List<URI> getAllJavaProject() {\n-\t\tList<URI> javaProejcts = new LinkedList<>();\n+\tpublic static List<URI> getAllJavaProjects() {\n+\t\tList<URI> javaProjects = new LinkedList<>();\n \t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {\n \t\t\tif (ResourcesPlugin.getWorkspace().getRoot().getProject(ProjectsManager.DEFAULT_PROJECT_NAME).equals(javaProejct.getProject())) {\n \t\t\t\tcontinue;\n \t\t\t}\n-\t\t\tjavaProejcts.add(ProjectUtils.getProjectRealFolder(javaProejct.getProject()).toFile().toURI());\n+\t\t\tjavaProjects.add(ProjectUtils.getProjectRealFolder(javaProejct.getProject()).toFile().toURI());\n \t\t}\n-\t\treturn javaProejcts;\n+\t\treturn javaProjects;\n \t}\n \n \tprivate static IPath[] listTestSourcePaths(IJavaProject project) throws JavaModelException {\n"}}, {"oid": "726cb071338a74a5ee3710cd7c346707db6f5854", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/726cb071338a74a5ee3710cd7c346707db6f5854", "message": "fix typo\n\nSigned-off-by: Sheng Chen <sheche@microsoft.com>", "committedDate": "2020-05-19T09:46:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTA1NQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427189055", "bodyText": "Why don't you return the default project? Might be valuable information to get for standalone Java files", "author": "fbricon", "createdAt": "2020-05-19T10:14:21Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -128,6 +130,17 @@ public static boolean isTestFile(String uri) throws CoreException {\n \t\treturn false;\n \t}\n \n+\tpublic static List<URI> getAllJavaProjects() {\n+\t\tList<URI> javaProjects = new LinkedList<>();\n+\t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {\n+\t\t\tif (ResourcesPlugin.getWorkspace().getRoot().getProject(ProjectsManager.DEFAULT_PROJECT_NAME).equals(javaProejct.getProject())) {", "originalCommit": "726cb071338a74a5ee3710cd7c346707db6f5854", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI1ODk0OQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427258949", "bodyText": "Because I'm thinking that the project path of the default project is totally different from that of the standalone Java files. The client side needs to have a way to resolve such mapping...", "author": "jdneo", "createdAt": "2020-05-19T12:22:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTA1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI2NTE3MA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427265170", "bodyText": "well, no mapping = default project, no?", "author": "fbricon", "createdAt": "2020-05-19T12:33:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTA1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4ODkzOA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427288938", "bodyText": "Yes, I also thinks of that actually. What I'm afraid is, it might be in some situation that the client side cache is out of sync?\nHmm, Can I say that, if a java file does not belongs to any workspace folder, then it belongs to the default project?", "author": "jdneo", "createdAt": "2020-05-19T13:10:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTA1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5MDIxMQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427290211", "bodyText": "I think that's probably an accurate assumption.", "author": "fbricon", "createdAt": "2020-05-19T13:12:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTA1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "04a756bc5dc5b2a4b4e6ecb5df407b406c2c813f", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\nindex 1ff58fad..72cf95bd 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\n\n@@ -132,11 +132,8 @@ public class ProjectCommand {\n \n \tpublic static List<URI> getAllJavaProjects() {\n \t\tList<URI> javaProjects = new LinkedList<>();\n-\t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {\n-\t\t\tif (ResourcesPlugin.getWorkspace().getRoot().getProject(ProjectsManager.DEFAULT_PROJECT_NAME).equals(javaProejct.getProject())) {\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\t\t\tjavaProjects.add(ProjectUtils.getProjectRealFolder(javaProejct.getProject()).toFile().toURI());\n+\t\tfor (IJavaProject javaProject : ProjectUtils.getJavaProjects()) {\n+\t\t\tjavaProjects.add(ProjectUtils.getProjectRealFolder(javaProject.getProject()).toFile().toURI());\n \t\t}\n \t\treturn javaProjects;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTIyNg==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427189226", "bodyText": "javaProject", "author": "fbricon", "createdAt": "2020-05-19T10:14:38Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -128,6 +130,17 @@ public static boolean isTestFile(String uri) throws CoreException {\n \t\treturn false;\n \t}\n \n+\tpublic static List<URI> getAllJavaProjects() {\n+\t\tList<URI> javaProjects = new LinkedList<>();\n+\t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {", "originalCommit": "726cb071338a74a5ee3710cd7c346707db6f5854", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyMzcwOQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427223709", "bodyText": "Hmm, I think I need to install a spelling checking extension. \ud83d\ude04", "author": "jdneo", "createdAt": "2020-05-19T11:18:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTIyNg=="}], "type": "inlineReview", "revised_code": {"commit": "04a756bc5dc5b2a4b4e6ecb5df407b406c2c813f", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\nindex 1ff58fad..72cf95bd 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\n\n@@ -132,11 +132,8 @@ public class ProjectCommand {\n \n \tpublic static List<URI> getAllJavaProjects() {\n \t\tList<URI> javaProjects = new LinkedList<>();\n-\t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {\n-\t\t\tif (ResourcesPlugin.getWorkspace().getRoot().getProject(ProjectsManager.DEFAULT_PROJECT_NAME).equals(javaProejct.getProject())) {\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\t\t\tjavaProjects.add(ProjectUtils.getProjectRealFolder(javaProejct.getProject()).toFile().toURI());\n+\t\tfor (IJavaProject javaProject : ProjectUtils.getJavaProjects()) {\n+\t\t\tjavaProjects.add(ProjectUtils.getProjectRealFolder(javaProject.getProject()).toFile().toURI());\n \t\t}\n \t\treturn javaProjects;\n \t}\n"}}, {"oid": "04a756bc5dc5b2a4b4e6ecb5df407b406c2c813f", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/04a756bc5dc5b2a4b4e6ecb5df407b406c2c813f", "message": "Return default project as well\n\nSigned-off-by: Sheng Chen <sheche@microsoft.com>", "committedDate": "2020-05-20T03:10:11Z", "type": "commit"}]}