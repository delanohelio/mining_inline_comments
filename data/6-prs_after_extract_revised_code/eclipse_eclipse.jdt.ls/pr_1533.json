{"pr_number": 1533, "pr_title": "Use ASTProvider to getAST for source action handlers", "pr_createdAt": "2020-08-26T13:58:03Z", "pr_url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1533", "timeline": [{"oid": "3f0908ae2ac42a6fae43bb2c445f7b33e1ba53e7", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/3f0908ae2ac42a6fae43bb2c445f7b33e1ba53e7", "message": "Use ASTProvider to getAST for source action handlers\n\nSigned-off-by: Jinbo Wang <jinbwan@microsoft.com>", "committedDate": "2020-08-26T13:34:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMzMjAzMg==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1533#discussion_r477332032", "bodyText": "move before L87, return early there, if needed", "author": "fbricon", "createdAt": "2020-08-26T14:11:02Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/CodeActionHandler.java", "diffHunk": "@@ -87,8 +87,9 @@ public CodeActionHandler(PreferenceManager preferenceManager) {\n \t\tint start = DiagnosticsHelper.getStartOffset(unit, params.getRange());\n \t\tint end = DiagnosticsHelper.getEndOffset(unit, params.getRange());\n \t\tInnovationContext context = new InnovationContext(unit, start, end - start);\n-\t\tcontext.setASTRoot(getASTRoot(unit));\n-\t\tif (monitor.isCanceled()) {\n+\t\tCompilationUnit astRoot = getASTRoot(unit, monitor);", "originalCommit": "3f0908ae2ac42a6fae43bb2c445f7b33e1ba53e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "242c526a49e094227f494be820c3db595a349962", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/CodeActionHandler.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/CodeActionHandler.java\nindex a6157f7a..1854fc21 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/CodeActionHandler.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/CodeActionHandler.java\n\n@@ -84,15 +84,20 @@ public class CodeActionHandler {\n \t\tif (unit == null || monitor.isCanceled()) {\n \t\t\treturn Collections.emptyList();\n \t\t}\n+\n+\t\tCompilationUnit astRoot = getASTRoot(unit, monitor);\n+\t\tif (astRoot == null || monitor.isCanceled()) {\n+\t\t\treturn Collections.emptyList();\n+\t\t}\n+\n \t\tint start = DiagnosticsHelper.getStartOffset(unit, params.getRange());\n \t\tint end = DiagnosticsHelper.getEndOffset(unit, params.getRange());\n \t\tInnovationContext context = new InnovationContext(unit, start, end - start);\n-\t\tCompilationUnit astRoot = getASTRoot(unit, monitor);\n \t\tcontext.setASTRoot(astRoot);\n-\t\tif (astRoot == null || monitor.isCanceled()) {\n+\t\tIProblemLocationCore[] locations = this.getProblemLocationCores(unit, params.getContext().getDiagnostics());\n+\t\tif (monitor.isCanceled()) {\n \t\t\treturn Collections.emptyList();\n \t\t}\n-\t\tIProblemLocationCore[] locations = this.getProblemLocationCores(unit, params.getContext().getDiagnostics());\n \n \t\tList<String> codeActionKinds = new ArrayList<>();\n \t\tif (params.getContext().getOnly() != null && !params.getContext().getOnly().isEmpty()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMzMjkxMQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1533#discussion_r477332911", "bodyText": "simply call checkConstructorsStatus(params, new NullProgressMonitor())", "author": "fbricon", "createdAt": "2020-08-26T14:12:09Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GenerateConstructorsHandler.java", "diffHunk": "@@ -51,20 +52,29 @@\n import org.eclipse.text.edits.TextEdit;\r\n \r\n public class GenerateConstructorsHandler {\r\n-\r\n+\t// For test purpose\r\n \tpublic static CheckConstructorsResponse checkConstructorsStatus(CodeActionParams params) {\r\n-\t\tIType type = SourceAssistProcessor.getSelectionType(params);\r\n-\t\treturn checkConstructorStatus(type);\r", "originalCommit": "3f0908ae2ac42a6fae43bb2c445f7b33e1ba53e7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "242c526a49e094227f494be820c3db595a349962", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GenerateConstructorsHandler.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GenerateConstructorsHandler.java\nindex ee44f329..b3b76e13 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GenerateConstructorsHandler.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GenerateConstructorsHandler.java\n\n@@ -54,9 +54,7 @@ import org.eclipse.text.edits.TextEdit;\n public class GenerateConstructorsHandler {\n \t// For test purpose\n \tpublic static CheckConstructorsResponse checkConstructorsStatus(CodeActionParams params) {\n-\t\tIProgressMonitor monitor = new NullProgressMonitor();\n-\t\tIType type = SourceAssistProcessor.getSelectionType(params, monitor);\n-\t\treturn checkConstructorStatus(type, monitor);\n+\t\treturn checkConstructorsStatus(params, new NullProgressMonitor());\n \t}\n \n \tpublic static CheckConstructorsResponse checkConstructorsStatus(CodeActionParams params, IProgressMonitor monitor) {\n"}}, {"oid": "242c526a49e094227f494be820c3db595a349962", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/242c526a49e094227f494be820c3db595a349962", "message": "Address review comments", "committedDate": "2020-08-26T14:28:28Z", "type": "commit"}, {"oid": "274346c4e98ba8589a159a1435ca06137bbb68b5", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/274346c4e98ba8589a159a1435ca06137bbb68b5", "message": "Fix the test failure\n\nSigned-off-by: Jinbo Wang <jinbwan@microsoft.com>", "committedDate": "2020-08-27T07:47:20Z", "type": "commit"}]}