{"pr_number": 1476, "pr_title": "Wait for jobs to complete when resolving the classpaths", "pr_createdAt": "2020-06-11T06:38:39Z", "pr_url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1476", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3NjMzNQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1476#discussion_r438576335", "bodyText": "That's too broad. You'll wait for unrelated jobs to finish", "author": "fbricon", "createdAt": "2020-06-11T06:48:39Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -108,8 +110,10 @@\n \t *         modulepaths.\n \t * @throws CoreException\n \t * @throws URISyntaxException\n+\t * @throws InterruptedException\n \t */\n-\tpublic static ClasspathResult getClasspaths(String uri, ClasspathOptions options) throws CoreException, URISyntaxException {\n+\tpublic static ClasspathResult getClasspaths(String uri, ClasspathOptions options) throws CoreException, URISyntaxException, InterruptedException {\n+\t\tJobHelpers.waitForJobsToComplete(new NullProgressMonitor());", "originalCommit": "bf97d944bcae579999694e5d0f7c155a29e3e3a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwOTk2OA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1476#discussion_r438609968", "bodyText": "Can I narrow to:\nJobHelpers.waitForJobs(IConstants.UPDATE_PROJECT_FAMILY, new NullProgressMonitor());\nJobHelpers.waitForBuildJobs(10 * 1000);\nAlso wait for build jobs since update request will also trigger a clean build in MavenBuilder. But return the result no matter build finishes or not after 10 secs.", "author": "jdneo", "createdAt": "2020-06-11T07:59:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3NjMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyMDQ0Mg==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1476#discussion_r438620442", "bodyText": "I don't think you need to wait for build jobs. During a build all the classpaths are supposed to have been set already, so building projects won't change anything to that", "author": "fbricon", "createdAt": "2020-06-11T08:19:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3NjMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY4MDI2MQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1476#discussion_r438680261", "bodyText": "Yes you are right. I found out that the case will fail after the invocation of JavaCore.setClasspathContainer(), which will trigger SetContainerOperation\nI'm deciding to add following code:\nIWorkspace workspace = ResourcesPlugin.getWorkspace();\nworkspace.run(new IWorkspaceRunnable() {\n    @Override\n        public void run(IProgressMonitor monitor) {\n    }\n}, workspace.getRoot(), 0, new NullProgressMonitor());\nto wait for it. (JavaModeChangeOperation will lock the workspace tree). Does this make sense?", "author": "jdneo", "createdAt": "2020-06-11T10:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3NjMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY4MTc0Mw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1476#discussion_r438681743", "bodyText": "@snjeza your opinion on that?", "author": "fbricon", "createdAt": "2020-06-11T10:10:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3NjMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcyOTc2OQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1476#discussion_r438729769", "bodyText": "Just add more background here: The cases might fail with a very high possibility after BuildPathManager#mavenProjectChanged(), where the SetContainerOperation will be triggered.", "author": "jdneo", "createdAt": "2020-06-11T11:55:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3NjMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1MzY5Ng==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1476#discussion_r438953696", "bodyText": "you can try\nIWorkspace workspace = ResourcesPlugin.getWorkspace();\nworkspace.run(new IWorkspaceRunnable() {\n    @Override\n        public void run(IProgressMonitor monitor) {\n    }\n}, workspace.getRoot(), IWorkspace.AVOID_UPDATE, new NullProgressMonitor());", "author": "snjeza", "createdAt": "2020-06-11T17:33:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3NjMzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "38b1a59ff53c2166f4b3637beb3e5817290e0c0f", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\nindex fc9d6885..c1eb5ff3 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java\n\n@@ -112,8 +113,7 @@ public class ProjectCommand {\n \t * @throws URISyntaxException\n \t * @throws InterruptedException\n \t */\n-\tpublic static ClasspathResult getClasspaths(String uri, ClasspathOptions options) throws CoreException, URISyntaxException, InterruptedException {\n-\t\tJobHelpers.waitForJobsToComplete(new NullProgressMonitor());\n+\tpublic static ClasspathResult getClasspaths(String uri, ClasspathOptions options) throws CoreException, URISyntaxException {\n \t\tIJavaProject javaProject = getJavaProjectFromUri(uri);\n \t\tOptional<IBuildSupport> bs = JavaLanguageServerPlugin.getProjectsManager().getBuildSupport(javaProject.getProject());\n \t\tif (!bs.isPresent()) {\n"}}, {"oid": "38b1a59ff53c2166f4b3637beb3e5817290e0c0f", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/38b1a59ff53c2166f4b3637beb3e5817290e0c0f", "message": "Wrap the invocation of getting classpaths into workspace runnable\n\nSigned-off-by: Sheng Chen <sheche@microsoft.com>", "committedDate": "2020-06-12T03:21:34Z", "type": "forcePushed"}, {"oid": "901d0af112c4e3ce748886ca5dcbf979f5bc6d3c", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/901d0af112c4e3ce748886ca5dcbf979f5bc6d3c", "message": "Wrap the invocation of getting classpaths into workspace runnable\n\nSigned-off-by: Sheng Chen <sheche@microsoft.com>", "committedDate": "2020-06-12T03:23:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEwMjUxMg==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1476#discussion_r440102512", "bodyText": "move out of loop", "author": "fbricon", "createdAt": "2020-06-15T11:13:39Z", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommandTest.java", "diffHunk": "@@ -116,6 +116,27 @@ public void testGetClasspathsForMaven() throws Exception {\n         assertTrue(containsJunit);\n     }\n \n+    @Test\n+    public void testGetClasspathsForMavenWhenUpdating() throws Exception {\n+        importProjects(\"maven/classpathtest\");\n+        IProject project = WorkspaceHelper.getProject(\"classpathtest\");\n+        String uriString = project.getFile(\"src/main/java/main/App.java\").getLocationURI().toString();\n+        ClasspathOptions options = new ClasspathOptions();\n+\n+        projectsManager.updateProject(project, true);\n+\n+        for (int i = 0; i < 10; i++) {\n+            options.scope = \"test\";", "originalCommit": "901d0af112c4e3ce748886ca5dcbf979f5bc6d3c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2d98c27752043d931f69823ab2b4930c3f772082", "chunk": "diff --git a/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommandTest.java b/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommandTest.java\nindex fc52ed5b..0a348045 100644\n--- a/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommandTest.java\n+++ b/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommandTest.java\n\n@@ -122,11 +122,11 @@ public class ProjectCommandTest extends AbstractProjectsManagerBasedTest {\n         IProject project = WorkspaceHelper.getProject(\"classpathtest\");\n         String uriString = project.getFile(\"src/main/java/main/App.java\").getLocationURI().toString();\n         ClasspathOptions options = new ClasspathOptions();\n+        options.scope = \"test\";\n \n         projectsManager.updateProject(project, true);\n \n         for (int i = 0; i < 10; i++) {\n-            options.scope = \"test\";\n             ClasspathResult result = ProjectCommand.getClasspaths(uriString, options);\n             assertEquals(4, result.classpaths.length);\n             assertEquals(0, result.modulepaths.length);\n"}}, {"oid": "2d98c27752043d931f69823ab2b4930c3f772082", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/2d98c27752043d931f69823ab2b4930c3f772082", "message": "Wrap the invocation of getting classpaths into workspace runnable\n\nSigned-off-by: Sheng Chen <sheche@microsoft.com>", "committedDate": "2020-06-16T03:33:57Z", "type": "commit"}, {"oid": "2d98c27752043d931f69823ab2b4930c3f772082", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/2d98c27752043d931f69823ab2b4930c3f772082", "message": "Wrap the invocation of getting classpaths into workspace runnable\n\nSigned-off-by: Sheng Chen <sheche@microsoft.com>", "committedDate": "2020-06-16T03:33:57Z", "type": "forcePushed"}]}