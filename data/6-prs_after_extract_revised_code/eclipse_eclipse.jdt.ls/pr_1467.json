{"pr_number": 1467, "pr_title": "Ignore subprojects when updating a gradle project", "pr_createdAt": "2020-06-03T17:38:55Z", "pr_url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0NjQ2OQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r434746469", "bodyText": "can you check that, when you set/change the target compilation in the root project, the children are updated?", "author": "fbricon", "createdAt": "2020-06-03T17:47:09Z", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/GradleProjectImporterTest.java", "diffHunk": "@@ -439,6 +441,41 @@ public void testJava14Project() throws Exception {\n \t\ttestJavaProjectWithPreviewFeatures(\"14\", true /* The project has enabled preview features in the jdt setting*/, JavaCore.IGNORE);\n \t}\n \n+\t@Test\n+\tpublic void testSubprojects() throws Exception {", "originalCommit": "f12f013f4c087331b86f11c630431cda6fe7f26b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc2NTM4Mw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r434765383", "bodyText": "Done.", "author": "snjeza", "createdAt": "2020-06-03T18:19:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0NjQ2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e84a67ab276cafb6a13ff19f08816735fad6e86b", "chunk": "diff --git a/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/GradleProjectImporterTest.java b/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/GradleProjectImporterTest.java\nindex 9e66bb35..81772fd7 100644\n--- a/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/GradleProjectImporterTest.java\n+++ b/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/GradleProjectImporterTest.java\n\n@@ -461,11 +461,17 @@ public class GradleProjectImporterTest extends AbstractGradleBasedTest{\n \t\t\tJobHelpers.waitForJobsToComplete();\n \t\t\tJob.getJobManager().join(CorePlugin.GRADLE_JOB_FAMILY, new NullProgressMonitor());\n \t\t\tProjectConfiguration configuration = getProjectConfiguration(root);\n+\t\t\t// check the children .settings/org.eclipse.buildship.core.prefs\n \t\t\tassertTrue(configuration.getBuildConfiguration().isOverrideWorkspaceSettings());\n \t\t\tconfiguration = getProjectConfiguration(project1);\n \t\t\tassertFalse(configuration.getBuildConfiguration().isOverrideWorkspaceSettings());\n \t\t\tconfiguration = getProjectConfiguration(project2);\n \t\t\tassertFalse(configuration.getBuildConfiguration().isOverrideWorkspaceSettings());\n+\t\t\t// check that the children are updated\n+\t\t\tconfiguration = CorePlugin.configurationManager().loadProjectConfiguration(project1);\n+\t\t\tassertTrue(configuration.getBuildConfiguration().isOverrideWorkspaceSettings());\n+\t\t\tconfiguration = CorePlugin.configurationManager().loadProjectConfiguration(project2);\n+\t\t\tassertTrue(configuration.getBuildConfiguration().isOverrideWorkspaceSettings());\n \t\t} finally {\n \t\t\tJavaLanguageServerPlugin.getPreferencesManager().getPreferences().setGradleArguments(arguments);\n \t\t}\n"}}, {"oid": "e84a67ab276cafb6a13ff19f08816735fad6e86b", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/e84a67ab276cafb6a13ff19f08816735fad6e86b", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-03T18:18:48Z", "type": "forcePushed"}, {"oid": "3eae9c9cd76101a284a5703747a145dc75e41b2e", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/3eae9c9cd76101a284a5703747a145dc75e41b2e", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-03T18:31:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzOTYxNA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r434939614", "bodyText": "this else condition branch is redundant, and it's logical is similar as the if (force) { } branch. Please consider merging the duplicated logic.\nFor example:\nOptional<GradleBuild> build = GradleCore.getWorkspace().getBuild(project);\nif (build.isPresent()) {\n  GradleBuild gradleBuild = build.get();\n if (force && isRoot(project, gradleBuild, monitor)) {\n  ...\n  }\n\ngradleBuild.synchronize(monitor);\n}", "author": "testforstephen", "createdAt": "2020-06-04T01:19:44Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java", "diffHunk": "@@ -58,10 +64,16 @@ public void update(IProject project, boolean force, IProgressMonitor monitor) th\n \t\t}\n \t\tJavaLanguageServerPlugin.logInfo(\"Starting Gradle update for \" + project.getName());\n \t\tif (force) {\n-\t\t\tString projectPath = project.getLocation().toFile().getAbsolutePath();\n-\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n-\t\t\tGradleBuild build = GradleCore.getWorkspace().createBuild(buildConfiguration);\n-\t\t\tbuild.synchronize(monitor);\n+\t\t\tOptional<GradleBuild> build = GradleCore.getWorkspace().getBuild(project);\n+\t\t\tif (build.isPresent()) {\n+\t\t\t\tGradleBuild gradleBuild = build.get();\n+\t\t\t\tif (isRoot(project, gradleBuild, monitor)) {\n+\t\t\t\t\tString projectPath = project.getLocation().toFile().getAbsolutePath();\n+\t\t\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n+\t\t\t\t\tgradleBuild = GradleCore.getWorkspace().createBuild(buildConfiguration);\n+\t\t\t\t}\n+\t\t\t\tgradleBuild.synchronize(monitor);\n+\t\t\t}\n \t\t} else {", "originalCommit": "3eae9c9cd76101a284a5703747a145dc75e41b2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIzMTA1NQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435231055", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-06-04T12:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkzOTYxNA=="}], "type": "inlineReview", "revised_code": {"commit": "35774249f4f2d75447c5148a666dfeff2667075c", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java\nindex a63e9c53..02c003fa 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java\n\n@@ -63,22 +63,15 @@ public class GradleBuildSupport implements IBuildSupport {\n \t\t\treturn;\n \t\t}\n \t\tJavaLanguageServerPlugin.logInfo(\"Starting Gradle update for \" + project.getName());\n-\t\tif (force) {\n-\t\t\tOptional<GradleBuild> build = GradleCore.getWorkspace().getBuild(project);\n-\t\t\tif (build.isPresent()) {\n-\t\t\t\tGradleBuild gradleBuild = build.get();\n-\t\t\t\tif (isRoot(project, gradleBuild, monitor)) {\n-\t\t\t\t\tString projectPath = project.getLocation().toFile().getAbsolutePath();\n-\t\t\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n-\t\t\t\t\tgradleBuild = GradleCore.getWorkspace().createBuild(buildConfiguration);\n-\t\t\t\t}\n-\t\t\t\tgradleBuild.synchronize(monitor);\n-\t\t\t}\n-\t\t} else {\n-\t\t\tOptional<GradleBuild> build = GradleCore.getWorkspace().getBuild(project);\n-\t\t\tif (build.isPresent()) {\n-\t\t\t\tbuild.get().synchronize(monitor);\n+\t\tOptional<GradleBuild> build = GradleCore.getWorkspace().getBuild(project);\n+\t\tif (build.isPresent()) {\n+\t\t\tGradleBuild gradleBuild = build.get();\n+\t\t\tif (force && isRoot(project, gradleBuild, monitor)) {\n+\t\t\t\tString projectPath = project.getLocation().toFile().getAbsolutePath();\n+\t\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n+\t\t\t\tgradleBuild = GradleCore.getWorkspace().createBuild(buildConfiguration);\n \t\t\t}\n+\t\t\tgradleBuild.synchronize(monitor);\n \t\t}\n \t}\n \n"}}, {"oid": "35774249f4f2d75447c5148a666dfeff2667075c", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/35774249f4f2d75447c5148a666dfeff2667075c", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-04T12:52:52Z", "type": "forcePushed"}, {"oid": "06a98f7c60edd4aec10629ab62b90ad6412c8bca", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/06a98f7c60edd4aec10629ab62b90ad6412c8bca", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-04T14:58:54Z", "type": "forcePushed"}, {"oid": "4b7cac193a73f6de9679d98d3312a7213f2a3d20", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/4b7cac193a73f6de9679d98d3312a7213f2a3d20", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-04T16:02:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQzODQ1OQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435438459", "bodyText": "this belongs to a Gradle specific Preference Listener", "author": "fbricon", "createdAt": "2020-06-04T17:47:39Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -402,6 +404,11 @@ public void preferencesChange(Preferences oldPreferences, Preferences newPrefere\n \t\t\t\t\t\tregisterWatcherJob.schedule(1000L);\n \t\t\t\t\t\tUpdateClasspathJob.getInstance().updateClasspath();\n \t\t\t\t\t}\n+\t\t\t\t\tif ((!Objects.equals(oldPreferences.getSha256Allowed(), newPreferences.getSha256Allowed()) || !Objects.equals(oldPreferences.getSha256Disallowed(), newPreferences.getSha256Disallowed()))) {", "originalCommit": "4b7cac193a73f6de9679d98d3312a7213f2a3d20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4Njk0NQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435486945", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-06-04T19:04:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQzODQ1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "8962b64919ab6e908812e2c7c2a9a305f11fcb19", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\nindex 6ae8fcb2..dba7e5e8 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\n\n@@ -404,14 +405,10 @@ public class StandardProjectsManager extends ProjectsManager {\n \t\t\t\t\t\tregisterWatcherJob.schedule(1000L);\n \t\t\t\t\t\tUpdateClasspathJob.getInstance().updateClasspath();\n \t\t\t\t\t}\n-\t\t\t\t\tif ((!Objects.equals(oldPreferences.getSha256Allowed(), newPreferences.getSha256Allowed()) || !Objects.equals(oldPreferences.getSha256Disallowed(), newPreferences.getSha256Disallowed()))) {\n-\t\t\t\t\t\tfor (IProject project : ProjectUtils.getGradleProjects()) {\n-\t\t\t\t\t\t\tupdateProject(project, true);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n \t\t\tthis.preferenceManager.addPreferencesChangeListener(this.preferenceChangeListener);\n \t\t}\n+\t\tthis.preferenceManager.addPreferencesChangeListener(gradlePreferenceChangeListener);\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQzOTEwMA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435439100", "bodyText": "only projects affected by the checksum changes should be updated", "author": "fbricon", "createdAt": "2020-06-04T17:48:37Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -402,6 +404,11 @@ public void preferencesChange(Preferences oldPreferences, Preferences newPrefere\n \t\t\t\t\t\tregisterWatcherJob.schedule(1000L);\n \t\t\t\t\t\tUpdateClasspathJob.getInstance().updateClasspath();\n \t\t\t\t\t}\n+\t\t\t\t\tif ((!Objects.equals(oldPreferences.getSha256Allowed(), newPreferences.getSha256Allowed()) || !Objects.equals(oldPreferences.getSha256Disallowed(), newPreferences.getSha256Disallowed()))) {\n+\t\t\t\t\t\tfor (IProject project : ProjectUtils.getGradleProjects()) {", "originalCommit": "4b7cac193a73f6de9679d98d3312a7213f2a3d20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4NjgyOA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435486828", "bodyText": "Fixed", "author": "snjeza", "createdAt": "2020-06-04T19:04:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQzOTEwMA=="}], "type": "inlineReview", "revised_code": {"commit": "8962b64919ab6e908812e2c7c2a9a305f11fcb19", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\nindex 6ae8fcb2..dba7e5e8 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\n\n@@ -404,14 +405,10 @@ public class StandardProjectsManager extends ProjectsManager {\n \t\t\t\t\t\tregisterWatcherJob.schedule(1000L);\n \t\t\t\t\t\tUpdateClasspathJob.getInstance().updateClasspath();\n \t\t\t\t\t}\n-\t\t\t\t\tif ((!Objects.equals(oldPreferences.getSha256Allowed(), newPreferences.getSha256Allowed()) || !Objects.equals(oldPreferences.getSha256Disallowed(), newPreferences.getSha256Disallowed()))) {\n-\t\t\t\t\t\tfor (IProject project : ProjectUtils.getGradleProjects()) {\n-\t\t\t\t\t\t\tupdateProject(project, true);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n \t\t\tthis.preferenceManager.addPreferencesChangeListener(this.preferenceChangeListener);\n \t\t}\n+\t\tthis.preferenceManager.addPreferencesChangeListener(gradlePreferenceChangeListener);\n \t}\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQzOTU3NQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435439575", "bodyText": "why are static imports being moved down here?", "author": "fbricon", "createdAt": "2020-06-04T17:49:30Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java", "diffHunk": "@@ -40,14 +33,18 @@\n import org.eclipse.jdt.internal.core.manipulation.MembersOrderPreferenceCacheCommon;\n import org.eclipse.jdt.ls.core.internal.IConstants;\n import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n-import org.eclipse.jdt.ls.core.internal.ProjectUtils;\n import org.eclipse.jdt.ls.core.internal.ResourceUtils;\n import org.eclipse.jdt.ls.core.internal.RuntimeEnvironment;\n import org.eclipse.jdt.ls.core.internal.contentassist.TypeFilter;\n-import org.eclipse.jdt.ls.core.internal.managers.ProjectsManager;\n import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n import org.eclipse.lsp4j.MessageType;\n \n+import static org.eclipse.jdt.ls.core.internal.handlers.MapFlattener.getBoolean;", "originalCommit": "4b7cac193a73f6de9679d98d3312a7213f2a3d20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4Mjg4Mg==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435482882", "bodyText": "Eclipse have moved them.", "author": "snjeza", "createdAt": "2020-06-04T18:56:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQzOTU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY0Mzc3NA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435643774", "bodyText": "+1, should not change the order of static import. Maybe you should tune the sorting order of your Organize Imports in eclipse preferences.", "author": "testforstephen", "createdAt": "2020-06-05T01:35:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQzOTU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY0NTYxNw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435645617", "bodyText": "Fixed", "author": "snjeza", "createdAt": "2020-06-05T01:43:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQzOTU3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "acbb43132966a184f8e141ef38e1d518f0c579e6", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java\nindex 73d3c1a7..c88759d0 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java\n\n@@ -39,12 +45,6 @@ import org.eclipse.jdt.ls.core.internal.contentassist.TypeFilter;\n import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n import org.eclipse.lsp4j.MessageType;\n \n-import static org.eclipse.jdt.ls.core.internal.handlers.MapFlattener.getBoolean;\n-import static org.eclipse.jdt.ls.core.internal.handlers.MapFlattener.getInt;\n-import static org.eclipse.jdt.ls.core.internal.handlers.MapFlattener.getList;\n-import static org.eclipse.jdt.ls.core.internal.handlers.MapFlattener.getString;\n-import static org.eclipse.jdt.ls.core.internal.handlers.MapFlattener.getValue;\n-\n /**\n  * Preferences model\n  *\n"}}, {"oid": "8962b64919ab6e908812e2c7c2a9a305f11fcb19", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/8962b64919ab6e908812e2c7c2a9a305f11fcb19", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-04T19:03:39Z", "type": "forcePushed"}, {"oid": "2ca74853bb93f24bc1fa797ce123909135c60cac", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/2ca74853bb93f24bc1fa797ce123909135c60cac", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-04T19:51:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyNzQyMw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435627423", "bodyText": "again, we should ensure StandardProjectsManager is build-tool agnostic. We shouldn't reference anything specific to Gradle (or any other tool) in this class.", "author": "fbricon", "createdAt": "2020-06-05T00:26:15Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -100,6 +101,8 @@ protected IStatus run(IProgressMonitor monitor) {\n \n \tprivate IPreferencesChangeListener preferenceChangeListener = null;\n \n+\tprivate IPreferencesChangeListener gradlePreferenceChangeListener = new GradlePreferenceChangeListener();", "originalCommit": "2ca74853bb93f24bc1fa797ce123909135c60cac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMjIzOA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435632238", "bodyText": "Fixed", "author": "snjeza", "createdAt": "2020-06-05T00:46:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyNzQyMw=="}], "type": "inlineReview", "revised_code": {"commit": "9a52218cd8e081d39f1b84e107840fcadbd8b8e4", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\nindex dba7e5e8..856db1af 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\n\n@@ -101,8 +101,6 @@ public class StandardProjectsManager extends ProjectsManager {\n \n \tprivate IPreferencesChangeListener preferenceChangeListener = null;\n \n-\tprivate IPreferencesChangeListener gradlePreferenceChangeListener = new GradlePreferenceChangeListener();\n-\n \tpublic StandardProjectsManager(PreferenceManager preferenceManager) {\n \t\tsuper(preferenceManager);\n \t\tthis.preferenceManager = preferenceManager;\n"}}, {"oid": "9a52218cd8e081d39f1b84e107840fcadbd8b8e4", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/9a52218cd8e081d39f1b84e107840fcadbd8b8e4", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-05T01:14:01Z", "type": "forcePushed"}, {"oid": "acbb43132966a184f8e141ef38e1d518f0c579e6", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/acbb43132966a184f8e141ef38e1d518f0c579e6", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-05T01:42:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY0OTU5Ng==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435649596", "bodyText": "same here, should put static imports in the original place.", "author": "testforstephen", "createdAt": "2020-06-05T01:58:42Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -71,6 +69,9 @@\n import org.eclipse.lsp4j.TextDocumentIdentifier;\n import org.eclipse.lsp4j.WatchKind;\n \n+import static org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin.logInfo;\n+import static org.eclipse.jdt.ls.core.internal.ResourceUtils.isContainedIn;", "originalCommit": "acbb43132966a184f8e141ef38e1d518f0c579e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3MDc3Nw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435670777", "bodyText": "Done.", "author": "snjeza", "createdAt": "2020-06-05T03:27:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY0OTU5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "e913bd5a6a3f070b5acefe70e974539a81b5a0e7", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\nindex 856db1af..d30e1b43 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java\n\n@@ -69,9 +71,6 @@ import org.eclipse.lsp4j.MessageType;\n import org.eclipse.lsp4j.TextDocumentIdentifier;\n import org.eclipse.lsp4j.WatchKind;\n \n-import static org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin.logInfo;\n-import static org.eclipse.jdt.ls.core.internal.ResourceUtils.isContainedIn;\n-\n public class StandardProjectsManager extends ProjectsManager {\n \tprivate static final Set<String> watchers = new LinkedHashSet<>();\n \tprivate PreferenceManager preferenceManager;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY1MTQwMw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435651403", "bodyText": "same here, should not change static imports order.", "author": "testforstephen", "createdAt": "2020-06-05T02:05:59Z", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/GradleProjectImporterTest.java", "diffHunk": "@@ -65,6 +64,9 @@\n import com.google.common.collect.ImmutableList;\n import com.google.common.io.Files;\n \n+import static org.eclipse.jdt.ls.core.internal.ProjectUtils.getJavaSourceLevel;\n+import static org.eclipse.jdt.ls.core.internal.WorkspaceHelper.getProject;\n+", "originalCommit": "acbb43132966a184f8e141ef38e1d518f0c579e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3MDgzNA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435670834", "bodyText": "Done.", "author": "snjeza", "createdAt": "2020-06-05T03:27:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY1MTQwMw=="}], "type": "inlineReview", "revised_code": {"commit": "e913bd5a6a3f070b5acefe70e974539a81b5a0e7", "chunk": "diff --git a/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/GradleProjectImporterTest.java b/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/GradleProjectImporterTest.java\nindex aa42755a..1e3c9dd3 100644\n--- a/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/GradleProjectImporterTest.java\n+++ b/org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/GradleProjectImporterTest.java\n\n@@ -64,9 +66,6 @@ import org.mockito.runners.MockitoJUnitRunner;\n import com.google.common.collect.ImmutableList;\n import com.google.common.io.Files;\n \n-import static org.eclipse.jdt.ls.core.internal.ProjectUtils.getJavaSourceLevel;\n-import static org.eclipse.jdt.ls.core.internal.WorkspaceHelper.getProject;\n-\n /**\n  * @author Fred Bricon\n  *\n"}}, {"oid": "e913bd5a6a3f070b5acefe70e974539a81b5a0e7", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/e913bd5a6a3f070b5acefe70e974539a81b5a0e7", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-05T03:26:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxNTQwMg==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435715402", "bodyText": "Here you'd better refine the compare logic. And handle the empty case better.\nFor example, if old Sha256Allowed list is null and new sha256Allowed is an empty list, then you should take it as equal, and not invoke update project logic.", "author": "testforstephen", "createdAt": "2020-06-05T06:31:13Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016-2020 Red Hat Inc. and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *     Red Hat Inc. - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.jdt.ls.core.internal.managers;\n+\n+import java.util.Objects;\n+\n+import org.eclipse.buildship.core.GradleDistribution;\n+import org.eclipse.buildship.core.WrapperGradleDistribution;\n+import org.eclipse.buildship.core.internal.CorePlugin;\n+import org.eclipse.buildship.core.internal.configuration.ProjectConfiguration;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n+import org.eclipse.jdt.ls.core.internal.ProjectUtils;\n+import org.eclipse.jdt.ls.core.internal.preferences.IPreferencesChangeListener;\n+import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n+\n+/**\n+ * @author snjeza\n+ *\n+ */\n+public class GradlePreferenceChangeListener implements IPreferencesChangeListener {\n+\t@Override\n+\tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n+\t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n+\t\tif (projectsManager != null) {\n+\t\t\tif ((!Objects.equals(oldPreferences.getSha256Allowed(), newPreferences.getSha256Allowed()) || !Objects.equals(oldPreferences.getSha256Disallowed(), newPreferences.getSha256Disallowed()))) {", "originalCommit": "e913bd5a6a3f070b5acefe70e974539a81b5a0e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk4MTM0OA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435981348", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-06-05T15:02:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxNTQwMg=="}], "type": "inlineReview", "revised_code": {"commit": "72983f1a9d5a01747dfdd6ca1797a5229c1c873a", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\nindex 6a14a265..1f69e059 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n\n@@ -12,6 +12,11 @@\n  *******************************************************************************/\n package org.eclipse.jdt.ls.core.internal.managers;\n \n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n import java.util.Objects;\n \n import org.eclipse.buildship.core.GradleDistribution;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0MTc2MA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435741760", "bodyText": "I'm curious why need update project when user changes checksums user setting? Since changing checksums didn't cause the gradle model outdated.\nI installed the latest 0.62.3 fix, and have a play on spring-boot project, when i changed checksums, it will trigger lots of jobs. Is there any way to optimize it?", "author": "testforstephen", "createdAt": "2020-06-05T07:36:01Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016-2020 Red Hat Inc. and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *     Red Hat Inc. - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.jdt.ls.core.internal.managers;\n+\n+import java.util.Objects;\n+\n+import org.eclipse.buildship.core.GradleDistribution;\n+import org.eclipse.buildship.core.WrapperGradleDistribution;\n+import org.eclipse.buildship.core.internal.CorePlugin;\n+import org.eclipse.buildship.core.internal.configuration.ProjectConfiguration;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n+import org.eclipse.jdt.ls.core.internal.ProjectUtils;\n+import org.eclipse.jdt.ls.core.internal.preferences.IPreferencesChangeListener;\n+import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n+\n+/**\n+ * @author snjeza\n+ *\n+ */\n+public class GradlePreferenceChangeListener implements IPreferencesChangeListener {\n+\t@Override\n+\tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n+\t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n+\t\tif (projectsManager != null) {\n+\t\t\tif ((!Objects.equals(oldPreferences.getSha256Allowed(), newPreferences.getSha256Allowed()) || !Objects.equals(oldPreferences.getSha256Disallowed(), newPreferences.getSha256Disallowed()))) {\n+\t\t\t\tfor (IProject project : ProjectUtils.getGradleProjects()) {\n+\t\t\t\t\tProjectConfiguration configuration = CorePlugin.configurationManager().loadProjectConfiguration(project);\n+\t\t\t\t\tGradleDistribution distribution = configuration.getBuildConfiguration().getGradleDistribution();\n+\t\t\t\t\tif (distribution instanceof WrapperGradleDistribution) {\n+\t\t\t\t\t\tprojectsManager.updateProject(project, true);", "originalCommit": "e913bd5a6a3f070b5acefe70e974539a81b5a0e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk4MTUwOQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435981509", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-06-05T15:02:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc0MTc2MA=="}], "type": "inlineReview", "revised_code": {"commit": "72983f1a9d5a01747dfdd6ca1797a5229c1c873a", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\nindex 6a14a265..1f69e059 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n\n@@ -12,6 +12,11 @@\n  *******************************************************************************/\n package org.eclipse.jdt.ls.core.internal.managers;\n \n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n import java.util.Objects;\n \n import org.eclipse.buildship.core.GradleDistribution;\n"}}, {"oid": "72983f1a9d5a01747dfdd6ca1797a5229c1c873a", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/72983f1a9d5a01747dfdd6ca1797a5229c1c873a", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-05T15:01:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5MDAyNA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435990024", "bodyText": "registerPreferencesChangeListener", "author": "fbricon", "createdAt": "2020-06-05T15:16:55Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java", "diffHunk": "@@ -109,4 +110,7 @@ default ILaunchConfiguration getLaunchConfiguration(IJavaProject javaProject, St\n \t\treturn new JavaApplicationLaunchConfiguration(javaProject.getProject(), scope, null);\n \t}\n \n+\tdefault void addPreferencesChangeListener(PreferenceManager preferenceManager) throws CoreException {", "originalCommit": "72983f1a9d5a01747dfdd6ca1797a5229c1c873a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwODkxNQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436008915", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-06-05T15:47:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5MDAyNA=="}], "type": "inlineReview", "revised_code": {"commit": "9a295c69756fc03050b0981b5c77a2ae43408148", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java\nindex 6adf30ae..eec9d4f9 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java\n\n@@ -110,7 +110,7 @@ public interface IBuildSupport {\n \t\treturn new JavaApplicationLaunchConfiguration(javaProject.getProject(), scope, null);\n \t}\n \n-\tdefault void addPreferencesChangeListener(PreferenceManager preferenceManager) throws CoreException {\n+\tdefault void registerPreferencesChangeListener(PreferenceManager preferenceManager) throws CoreException {\n \t}\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5MDQ2MA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435990460", "bodyText": "you don't need a preferencesManager reference, you already have newPreferences", "author": "fbricon", "createdAt": "2020-06-05T15:17:39Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016-2020 Red Hat Inc. and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *     Red Hat Inc. - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.jdt.ls.core.internal.managers;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.buildship.core.GradleDistribution;\n+import org.eclipse.buildship.core.WrapperGradleDistribution;\n+import org.eclipse.buildship.core.internal.CorePlugin;\n+import org.eclipse.buildship.core.internal.configuration.ProjectConfiguration;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n+import org.eclipse.jdt.ls.core.internal.ProjectUtils;\n+import org.eclipse.jdt.ls.core.internal.preferences.IPreferencesChangeListener;\n+import org.eclipse.jdt.ls.core.internal.preferences.PreferenceManager;\n+import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.ValidationResult;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n+\n+/**\n+ * @author snjeza\n+ *\n+ */\n+public class GradlePreferenceChangeListener implements IPreferencesChangeListener {\n+\t@Override\n+\tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n+\t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n+\t\tPreferenceManager preferencesManager = JavaLanguageServerPlugin.getPreferencesManager();", "originalCommit": "72983f1a9d5a01747dfdd6ca1797a5229c1c873a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwODgyMQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436008821", "bodyText": "Fixed", "author": "snjeza", "createdAt": "2020-06-05T15:47:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5MDQ2MA=="}], "type": "inlineReview", "revised_code": {"commit": "9a295c69756fc03050b0981b5c77a2ae43408148", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\nindex 1f69e059..ad0d43a9 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n\n@@ -41,8 +41,7 @@ public class GradlePreferenceChangeListener implements IPreferencesChangeListene\n \t@Override\n \tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n \t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n-\t\tPreferenceManager preferencesManager = JavaLanguageServerPlugin.getPreferencesManager();\n-\t\tif (projectsManager != null && preferencesManager != null) {\n+\t\tif (projectsManager != null) {\n \t\t\tList<String> oldSha256Allowed = oldPreferences.getSha256Allowed() == null ? Collections.emptyList() : oldPreferences.getSha256Allowed();\n \t\t\tList<String> newSha256Allowed = newPreferences.getSha256Allowed() == null ? Collections.emptyList() : newPreferences.getSha256Allowed();\n \t\t\tList<String> oldSha256Disallowed = oldPreferences.getSha256Disallowed() == null ? Collections.emptyList() : oldPreferences.getSha256Disallowed();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5MjMxMw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r435992313", "bodyText": "why updating a project that doesn't use the wrapper when you're checking wrapper checksum changes?", "author": "fbricon", "createdAt": "2020-06-05T15:20:29Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016-2020 Red Hat Inc. and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *     Red Hat Inc. - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.jdt.ls.core.internal.managers;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.buildship.core.GradleDistribution;\n+import org.eclipse.buildship.core.WrapperGradleDistribution;\n+import org.eclipse.buildship.core.internal.CorePlugin;\n+import org.eclipse.buildship.core.internal.configuration.ProjectConfiguration;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n+import org.eclipse.jdt.ls.core.internal.ProjectUtils;\n+import org.eclipse.jdt.ls.core.internal.preferences.IPreferencesChangeListener;\n+import org.eclipse.jdt.ls.core.internal.preferences.PreferenceManager;\n+import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.ValidationResult;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n+\n+/**\n+ * @author snjeza\n+ *\n+ */\n+public class GradlePreferenceChangeListener implements IPreferencesChangeListener {\n+\t@Override\n+\tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n+\t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n+\t\tPreferenceManager preferencesManager = JavaLanguageServerPlugin.getPreferencesManager();\n+\t\tif (projectsManager != null && preferencesManager != null) {\n+\t\t\tList<String> oldSha256Allowed = oldPreferences.getSha256Allowed() == null ? Collections.emptyList() : oldPreferences.getSha256Allowed();\n+\t\t\tList<String> newSha256Allowed = newPreferences.getSha256Allowed() == null ? Collections.emptyList() : newPreferences.getSha256Allowed();\n+\t\t\tList<String> oldSha256Disallowed = oldPreferences.getSha256Disallowed() == null ? Collections.emptyList() : oldPreferences.getSha256Disallowed();\n+\t\t\tList<String> newSha256Disallowed = newPreferences.getSha256Disallowed() == null ? Collections.emptyList() : newPreferences.getSha256Disallowed();\n+\t\t\tif ((!Objects.equals(oldSha256Allowed, newSha256Allowed) || !Objects.equals(oldSha256Disallowed, newSha256Disallowed))) {\n+\t\t\t\tfor (IProject project : ProjectUtils.getGradleProjects()) {\n+\t\t\t\t\tString projectDir = project.getLocation().toFile().getAbsolutePath();\n+\t\t\t\t\tPath projectPath = Paths.get(projectDir);\n+\t\t\t\t\tif (preferencesManager != null && preferencesManager.getPreferences().isGradleWrapperEnabled() && Files.exists(projectPath.resolve(\"gradlew\"))) {\n+\t\t\t\t\t\tProjectConfiguration configuration = CorePlugin.configurationManager().loadProjectConfiguration(project);\n+\t\t\t\t\t\tGradleDistribution distribution = configuration.getBuildConfiguration().getGradleDistribution();\n+\t\t\t\t\t\tif (!(distribution instanceof WrapperGradleDistribution)) {", "originalCommit": "72983f1a9d5a01747dfdd6ca1797a5229c1c873a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwNzkwNQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436007905", "bodyText": "It is required if you update the wrapper's checksum from false to true.\nYou can try the gradle-4.0 project:\n\nadd\n\n\"java.imports.gradle.wrapper.checksums\": [\n        {\n            \"sha256\": \"41c8aa7a337a44af18d8cda0d632ebba469aef34f3041827624ef5c1a4e4419d\",\n            \"allowed\": false\n        }\n    ],\n\n\ncheck .settings/org.eclipse.buildship.core.prefs. You will see that we use\n\nconnection.gradle.distribution=GRADLE_DISTRIBUTION(VERSION(6.3))\n\n\nchange the property:\n\n\"java.imports.gradle.wrapper.checksums\": [\n        {\n            \"sha256\": \"41c8aa7a337a44af18d8cda0d632ebba469aef34f3041827624ef5c1a4e4419d\",\n            \"allowed\": true\n        }\n    ],\n\n\ncheck .settings/org.eclipse.buildship.core.prefs.\n\nconnection.gradle.distribution=GRADLE_DISTRIBUTION(WRAPPER)", "author": "snjeza", "createdAt": "2020-06-05T15:45:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5MjMxMw=="}], "type": "inlineReview", "revised_code": {"commit": "9a295c69756fc03050b0981b5c77a2ae43408148", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\nindex 1f69e059..ad0d43a9 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n\n@@ -41,8 +41,7 @@ public class GradlePreferenceChangeListener implements IPreferencesChangeListene\n \t@Override\n \tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n \t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n-\t\tPreferenceManager preferencesManager = JavaLanguageServerPlugin.getPreferencesManager();\n-\t\tif (projectsManager != null && preferencesManager != null) {\n+\t\tif (projectsManager != null) {\n \t\t\tList<String> oldSha256Allowed = oldPreferences.getSha256Allowed() == null ? Collections.emptyList() : oldPreferences.getSha256Allowed();\n \t\t\tList<String> newSha256Allowed = newPreferences.getSha256Allowed() == null ? Collections.emptyList() : newPreferences.getSha256Allowed();\n \t\t\tList<String> oldSha256Disallowed = oldPreferences.getSha256Disallowed() == null ? Collections.emptyList() : oldPreferences.getSha256Disallowed();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwNTM3OQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436005379", "bodyText": "would be simpler if Preferences always returned non-null collections", "author": "fbricon", "createdAt": "2020-06-05T15:41:14Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016-2020 Red Hat Inc. and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *     Red Hat Inc. - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.jdt.ls.core.internal.managers;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.buildship.core.GradleDistribution;\n+import org.eclipse.buildship.core.WrapperGradleDistribution;\n+import org.eclipse.buildship.core.internal.CorePlugin;\n+import org.eclipse.buildship.core.internal.configuration.ProjectConfiguration;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n+import org.eclipse.jdt.ls.core.internal.ProjectUtils;\n+import org.eclipse.jdt.ls.core.internal.preferences.IPreferencesChangeListener;\n+import org.eclipse.jdt.ls.core.internal.preferences.PreferenceManager;\n+import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.ValidationResult;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n+\n+/**\n+ * @author snjeza\n+ *\n+ */\n+public class GradlePreferenceChangeListener implements IPreferencesChangeListener {\n+\t@Override\n+\tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n+\t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n+\t\tPreferenceManager preferencesManager = JavaLanguageServerPlugin.getPreferencesManager();\n+\t\tif (projectsManager != null && preferencesManager != null) {\n+\t\t\tList<String> oldSha256Allowed = oldPreferences.getSha256Allowed() == null ? Collections.emptyList() : oldPreferences.getSha256Allowed();\n+\t\t\tList<String> newSha256Allowed = newPreferences.getSha256Allowed() == null ? Collections.emptyList() : newPreferences.getSha256Allowed();\n+\t\t\tList<String> oldSha256Disallowed = oldPreferences.getSha256Disallowed() == null ? Collections.emptyList() : oldPreferences.getSha256Disallowed();\n+\t\t\tList<String> newSha256Disallowed = newPreferences.getSha256Disallowed() == null ? Collections.emptyList() : newPreferences.getSha256Disallowed();", "originalCommit": "72983f1a9d5a01747dfdd6ca1797a5229c1c873a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxMjQ1NQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436012455", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-06-05T15:53:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwNTM3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "9a295c69756fc03050b0981b5c77a2ae43408148", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\nindex 1f69e059..ad0d43a9 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n\n@@ -41,8 +41,7 @@ public class GradlePreferenceChangeListener implements IPreferencesChangeListene\n \t@Override\n \tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n \t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n-\t\tPreferenceManager preferencesManager = JavaLanguageServerPlugin.getPreferencesManager();\n-\t\tif (projectsManager != null && preferencesManager != null) {\n+\t\tif (projectsManager != null) {\n \t\t\tList<String> oldSha256Allowed = oldPreferences.getSha256Allowed() == null ? Collections.emptyList() : oldPreferences.getSha256Allowed();\n \t\t\tList<String> newSha256Allowed = newPreferences.getSha256Allowed() == null ? Collections.emptyList() : newPreferences.getSha256Allowed();\n \t\t\tList<String> oldSha256Disallowed = oldPreferences.getSha256Disallowed() == null ? Collections.emptyList() : oldPreferences.getSha256Disallowed();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwNTU3Mg==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436005572", "bodyText": "extract to hasAllowedChecksumsChanged(oldPreferences, newPreferences)", "author": "fbricon", "createdAt": "2020-06-05T15:41:34Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016-2020 Red Hat Inc. and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *     Red Hat Inc. - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.jdt.ls.core.internal.managers;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.buildship.core.GradleDistribution;\n+import org.eclipse.buildship.core.WrapperGradleDistribution;\n+import org.eclipse.buildship.core.internal.CorePlugin;\n+import org.eclipse.buildship.core.internal.configuration.ProjectConfiguration;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n+import org.eclipse.jdt.ls.core.internal.ProjectUtils;\n+import org.eclipse.jdt.ls.core.internal.preferences.IPreferencesChangeListener;\n+import org.eclipse.jdt.ls.core.internal.preferences.PreferenceManager;\n+import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.ValidationResult;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n+\n+/**\n+ * @author snjeza\n+ *\n+ */\n+public class GradlePreferenceChangeListener implements IPreferencesChangeListener {\n+\t@Override\n+\tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n+\t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n+\t\tPreferenceManager preferencesManager = JavaLanguageServerPlugin.getPreferencesManager();\n+\t\tif (projectsManager != null && preferencesManager != null) {\n+\t\t\tList<String> oldSha256Allowed = oldPreferences.getSha256Allowed() == null ? Collections.emptyList() : oldPreferences.getSha256Allowed();\n+\t\t\tList<String> newSha256Allowed = newPreferences.getSha256Allowed() == null ? Collections.emptyList() : newPreferences.getSha256Allowed();\n+\t\t\tList<String> oldSha256Disallowed = oldPreferences.getSha256Disallowed() == null ? Collections.emptyList() : oldPreferences.getSha256Disallowed();\n+\t\t\tList<String> newSha256Disallowed = newPreferences.getSha256Disallowed() == null ? Collections.emptyList() : newPreferences.getSha256Disallowed();\n+\t\t\tif ((!Objects.equals(oldSha256Allowed, newSha256Allowed) || !Objects.equals(oldSha256Disallowed, newSha256Disallowed))) {", "originalCommit": "72983f1a9d5a01747dfdd6ca1797a5229c1c873a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxMjI4OA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436012288", "bodyText": "Fixed", "author": "snjeza", "createdAt": "2020-06-05T15:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwNTU3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9a295c69756fc03050b0981b5c77a2ae43408148", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\nindex 1f69e059..ad0d43a9 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n\n@@ -41,8 +41,7 @@ public class GradlePreferenceChangeListener implements IPreferencesChangeListene\n \t@Override\n \tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n \t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n-\t\tPreferenceManager preferencesManager = JavaLanguageServerPlugin.getPreferencesManager();\n-\t\tif (projectsManager != null && preferencesManager != null) {\n+\t\tif (projectsManager != null) {\n \t\t\tList<String> oldSha256Allowed = oldPreferences.getSha256Allowed() == null ? Collections.emptyList() : oldPreferences.getSha256Allowed();\n \t\t\tList<String> newSha256Allowed = newPreferences.getSha256Allowed() == null ? Collections.emptyList() : newPreferences.getSha256Allowed();\n \t\t\tList<String> oldSha256Disallowed = oldPreferences.getSha256Disallowed() == null ? Collections.emptyList() : oldPreferences.getSha256Disallowed();\n"}}, {"oid": "9a295c69756fc03050b0981b5c77a2ae43408148", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/9a295c69756fc03050b0981b5c77a2ae43408148", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-05T15:45:24Z", "type": "forcePushed"}, {"oid": "93887958187abe9b4a6c8e5b0ea01c3cb3cea506", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/93887958187abe9b4a6c8e5b0ea01c3cb3cea506", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-05T15:52:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxNjI0Ng==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436016246", "bodyText": "this needs to move to the Gradle preference listener now", "author": "fbricon", "createdAt": "2020-06-05T16:00:14Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java", "diffHunk": "@@ -942,20 +939,12 @@ public Preferences setJavaCompletionFavoriteMembers(List<String> javaCompletionF\n \t}\n \n \tpublic Preferences putSha256(List<String> sha256Allowed, List<String> sha256Disallowed) {\n-\t\tList<String> oldAllowed = this.sha256Allowed;\n-\t\tList<String> oldDisallowed = this.sha256Disallowed;\n \t\tWrapperValidator.clear();\n \t\tthis.sha256Allowed = sha256Allowed;\n \t\tif (sha256Disallowed != null) {\n \t\t\tWrapperValidator.disallow(sha256Disallowed);", "originalCommit": "93887958187abe9b4a6c8e5b0ea01c3cb3cea506", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3OTQwMQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436079401", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-06-05T18:02:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxNjI0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "962597232c8b6addabdb7bc227d22ef86db2a892", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java\nindex c14630f2..aec7d746 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java\n\n@@ -938,16 +904,6 @@ public class Preferences {\n \t\treturn this;\n \t}\n \n-\tpublic Preferences putSha256(List<String> sha256Allowed, List<String> sha256Disallowed) {\n-\t\tWrapperValidator.clear();\n-\t\tthis.sha256Allowed = sha256Allowed;\n-\t\tif (sha256Disallowed != null) {\n-\t\t\tWrapperValidator.disallow(sha256Disallowed);\n-\t\t}\n-\t\tthis.sha256Disallowed = sha256Disallowed;\n-\t\treturn this;\n-\t}\n-\n \tprivate Preferences setMembersSortOrder(String sortOrder) {\n \t\tif (sortOrder != null) {\n \t\t\tIEclipsePreferences fPreferenceStore = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxNjc2MQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436016761", "bodyText": "we'll most likely also need to unregister the listener", "author": "fbricon", "createdAt": "2020-06-05T16:01:11Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java", "diffHunk": "@@ -109,4 +110,7 @@ default ILaunchConfiguration getLaunchConfiguration(IJavaProject javaProject, St\n \t\treturn new JavaApplicationLaunchConfiguration(javaProject.getProject(), scope, null);\n \t}\n \n+\tdefault void registerPreferencesChangeListener(PreferenceManager preferenceManager) throws CoreException {\n+\t}", "originalCommit": "93887958187abe9b4a6c8e5b0ea01c3cb3cea506", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3OTYwNA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436079604", "bodyText": "Added.", "author": "snjeza", "createdAt": "2020-06-05T18:03:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxNjc2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "962597232c8b6addabdb7bc227d22ef86db2a892", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java\nindex eec9d4f9..080422c4 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java\n\n@@ -110,7 +110,24 @@ public interface IBuildSupport {\n \t\treturn new JavaApplicationLaunchConfiguration(javaProject.getProject(), scope, null);\n \t}\n \n+\t/**\n+\t * Register the listener(s) for notification of preferences changes. The given\n+\t * preferenceManager argument must not be <code>null</code>.\n+\t *\n+\t * @param preferenceManager\n+\t *            the preferences manager\n+\t */\n \tdefault void registerPreferencesChangeListener(PreferenceManager preferenceManager) throws CoreException {\n \t}\n \n+\t/**\n+\t * Un-register the listener(s) from receiving notification of preferences\n+\t * changes. The given preferenceManager argument must not be <code>null</code>.\n+\t *\n+\t * @param preferenceManager\n+\t *            the preferences manager\n+\t */\n+\tdefault void unregisterPreferencesChangeListener(PreferenceManager preferenceManager) throws CoreException {\n+\t}\n+\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxODMxMQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436018311", "bodyText": "please add some Javadoc", "author": "fbricon", "createdAt": "2020-06-05T16:04:00Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java", "diffHunk": "@@ -109,4 +110,7 @@ default ILaunchConfiguration getLaunchConfiguration(IJavaProject javaProject, St\n \t\treturn new JavaApplicationLaunchConfiguration(javaProject.getProject(), scope, null);\n \t}\n ", "originalCommit": "93887958187abe9b4a6c8e5b0ea01c3cb3cea506", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3OTczMg==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436079732", "bodyText": "Added.", "author": "snjeza", "createdAt": "2020-06-05T18:03:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxODMxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "962597232c8b6addabdb7bc227d22ef86db2a892", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java\nindex eec9d4f9..080422c4 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/IBuildSupport.java\n\n@@ -110,7 +110,24 @@ public interface IBuildSupport {\n \t\treturn new JavaApplicationLaunchConfiguration(javaProject.getProject(), scope, null);\n \t}\n \n+\t/**\n+\t * Register the listener(s) for notification of preferences changes. The given\n+\t * preferenceManager argument must not be <code>null</code>.\n+\t *\n+\t * @param preferenceManager\n+\t *            the preferences manager\n+\t */\n \tdefault void registerPreferencesChangeListener(PreferenceManager preferenceManager) throws CoreException {\n \t}\n \n+\t/**\n+\t * Un-register the listener(s) from receiving notification of preferences\n+\t * changes. The given preferenceManager argument must not be <code>null</code>.\n+\t *\n+\t * @param preferenceManager\n+\t *            the preferences manager\n+\t */\n+\tdefault void unregisterPreferencesChangeListener(PreferenceManager preferenceManager) throws CoreException {\n+\t}\n+\n }\n"}}, {"oid": "962597232c8b6addabdb7bc227d22ef86db2a892", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/962597232c8b6addabdb7bc227d22ef86db2a892", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-05T17:52:17Z", "type": "forcePushed"}, {"oid": "e966a7276024643daa76977f7ae805a6df0b8062", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/e966a7276024643daa76977f7ae805a6df0b8062", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-05T22:40:40Z", "type": "forcePushed"}, {"oid": "ee8a991d590dcf0e2c4a72bc76f77b33ec693452", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/ee8a991d590dcf0e2c4a72bc76f77b33ec693452", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-06T14:18:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQyNDMyMA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436424320", "bodyText": "Copyright (c) 2020", "author": "testforstephen", "createdAt": "2020-06-08T01:38:52Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016-2020 Red Hat Inc. and others.", "originalCommit": "ee8a991d590dcf0e2c4a72bc76f77b33ec693452", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQyNTIyNw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436425227", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-06-08T01:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQyNDMyMA=="}], "type": "inlineReview", "revised_code": {"commit": "9453c5410594b9977436940ca8d47847e6529a7a", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\nindex ca384c7f..c67d728a 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2016-2020 Red Hat Inc. and others.\n+ * Copyright (c) 2020 Red Hat Inc. and others.\n  * All rights reserved. This program and the accompanying materials\n  * are made available under the terms of the Eclipse Public License 2.0\n  * which accompanies this distribution, and is available at\n"}}, {"oid": "9453c5410594b9977436940ca8d47847e6529a7a", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/9453c5410594b9977436940ca8d47847e6529a7a", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-08T01:44:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzMjY2OA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436632668", "bodyText": "no need, you already have access to newPreferences", "author": "fbricon", "createdAt": "2020-06-08T11:40:38Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Red Hat Inc. and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *     Red Hat Inc. - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.jdt.ls.core.internal.managers;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import org.eclipse.buildship.core.GradleDistribution;\n+import org.eclipse.buildship.core.WrapperGradleDistribution;\n+import org.eclipse.buildship.core.internal.CorePlugin;\n+import org.eclipse.buildship.core.internal.configuration.ProjectConfiguration;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n+import org.eclipse.jdt.ls.core.internal.ProjectUtils;\n+import org.eclipse.jdt.ls.core.internal.preferences.IPreferencesChangeListener;\n+import org.eclipse.jdt.ls.core.internal.preferences.PreferenceManager;\n+import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.ValidationResult;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n+\n+/**\n+ * @author snjeza\n+ *\n+ */\n+public class GradlePreferenceChangeListener implements IPreferencesChangeListener {\n+\t@Override\n+\tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n+\t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n+\t\tif (projectsManager != null) {\n+\t\t\tif (hasAllowedChecksumsChanged(oldPreferences, newPreferences)) {\n+\t\t\t\tfor (IProject project : ProjectUtils.getGradleProjects()) {\n+\t\t\t\t\tupdateProject(projectsManager, project);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void updateProject(ProjectsManager projectsManager, IProject project) {\n+\t\tString projectDir = project.getLocation().toFile().getAbsolutePath();\n+\t\tPath projectPath = Paths.get(projectDir);\n+\t\tPreferenceManager preferencesManager = getPreferenceManager();", "originalCommit": "9453c5410594b9977436940ca8d47847e6529a7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyMTc3Mw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436821773", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-06-08T16:05:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzMjY2OA=="}], "type": "inlineReview", "revised_code": {"commit": "eb16a99ff2ae1e77468e0332aebdd0b4e4af111e", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\nindex c67d728a..8b4ae891 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n\n@@ -29,7 +29,6 @@ import org.eclipse.core.runtime.CoreException;\n import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n import org.eclipse.jdt.ls.core.internal.ProjectUtils;\n import org.eclipse.jdt.ls.core.internal.preferences.IPreferencesChangeListener;\n-import org.eclipse.jdt.ls.core.internal.preferences.PreferenceManager;\n import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n import org.eclipse.jdt.ls.internal.gradle.checksums.ValidationResult;\n import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzNTA4Ng==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436635086", "bodyText": "That seems wrong. You're updating the preferences in the preference listener!\nIn here only the WrapperValidator should be updated, from the informations available from the Preference object.\nThe GradleWrapperList should have been transformed into (dis)allowed checksums directly when building the Preference object.", "author": "fbricon", "createdAt": "2020-06-08T11:45:54Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Red Hat Inc. and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *     Red Hat Inc. - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.jdt.ls.core.internal.managers;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import org.eclipse.buildship.core.GradleDistribution;\n+import org.eclipse.buildship.core.WrapperGradleDistribution;\n+import org.eclipse.buildship.core.internal.CorePlugin;\n+import org.eclipse.buildship.core.internal.configuration.ProjectConfiguration;\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n+import org.eclipse.jdt.ls.core.internal.ProjectUtils;\n+import org.eclipse.jdt.ls.core.internal.preferences.IPreferencesChangeListener;\n+import org.eclipse.jdt.ls.core.internal.preferences.PreferenceManager;\n+import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.ValidationResult;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n+\n+/**\n+ * @author snjeza\n+ *\n+ */\n+public class GradlePreferenceChangeListener implements IPreferencesChangeListener {\n+\t@Override\n+\tpublic void preferencesChange(Preferences oldPreferences, Preferences newPreferences) {\n+\t\tProjectsManager projectsManager = JavaLanguageServerPlugin.getProjectsManager();\n+\t\tif (projectsManager != null) {\n+\t\t\tif (hasAllowedChecksumsChanged(oldPreferences, newPreferences)) {\n+\t\t\t\tfor (IProject project : ProjectUtils.getGradleProjects()) {\n+\t\t\t\t\tupdateProject(projectsManager, project);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void updateProject(ProjectsManager projectsManager, IProject project) {\n+\t\tString projectDir = project.getLocation().toFile().getAbsolutePath();\n+\t\tPath projectPath = Paths.get(projectDir);\n+\t\tPreferenceManager preferencesManager = getPreferenceManager();\n+\t\tif (preferencesManager != null && preferencesManager.getPreferences().isGradleWrapperEnabled() && Files.exists(projectPath.resolve(\"gradlew\"))) {\n+\t\t\tProjectConfiguration configuration = CorePlugin.configurationManager().loadProjectConfiguration(project);\n+\t\t\tGradleDistribution distribution = configuration.getBuildConfiguration().getGradleDistribution();\n+\t\t\tif (!(distribution instanceof WrapperGradleDistribution)) {\n+\t\t\t\tprojectsManager.updateProject(project, true);\n+\t\t\t} else {\n+\t\t\t\ttry {\n+\t\t\t\t\tValidationResult result = new WrapperValidator().checkWrapper(projectDir);\n+\t\t\t\t\tif (!result.isValid()) {\n+\t\t\t\t\t\tprojectsManager.updateProject(project, true);\n+\t\t\t\t\t}\n+\t\t\t\t} catch (CoreException e) {\n+\t\t\t\t\tJavaLanguageServerPlugin.logException(e.getMessage(), e);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate PreferenceManager getPreferenceManager() {\n+\t\tPreferenceManager preferencesManager = JavaLanguageServerPlugin.getPreferencesManager();\n+\t\treturn preferencesManager;\n+\t}\n+\n+\tprivate boolean hasAllowedChecksumsChanged(Preferences oldPreferences, Preferences newPreferences) {\n+\t\tif (!Objects.equals(oldPreferences.getGradleWrapperList(), newPreferences.getGradleWrapperList())) {\n+\t\t\tputSha256(newPreferences.getGradleWrapperList());\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\tprivate void putSha256(List<?> gradleWrapperList) {\n+\t\tList<String> sha256Allowed = new ArrayList<>();\n+\t\tList<String> sha256Disallowed = new ArrayList<>();\n+\t\tfor (Object object : gradleWrapperList) {\n+\t\t\tif (object instanceof Map) {\n+\t\t\t\tMap<?, ?> map = (Map<?, ?>) object;\n+\t\t\t\tfinal ChecksumWrapper sha256 = this.new ChecksumWrapper();\n+\t\t\t\tsha256.allowed = true;\n+\t\t\t\tmap.forEach((k, v) -> {\n+\t\t\t\t\tif (k instanceof String) {\n+\t\t\t\t\t\tswitch ((String) k) {\n+\t\t\t\t\t\t\tcase \"sha256\":\n+\t\t\t\t\t\t\t\tif (v instanceof String) {\n+\t\t\t\t\t\t\t\t\tsha256.checksum = (String) v;\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\tcase \"allowed\":\n+\t\t\t\t\t\t\t\tif (v instanceof Boolean) {\n+\t\t\t\t\t\t\t\t\tsha256.allowed = (Boolean) v;\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\tdefault:\n+\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t\t\tif (sha256.checksum != null) {\n+\t\t\t\t\tif (sha256.allowed) {\n+\t\t\t\t\t\tsha256Allowed.add(sha256.checksum);\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tsha256Disallowed.add(sha256.checksum);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tWrapperValidator.clear();\n+\t\tgetPreferenceManager().getPreferences().setSha256Allowed(sha256Allowed);", "originalCommit": "9453c5410594b9977436940ca8d47847e6529a7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgyMjEwNw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1467#discussion_r436822107", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-06-08T16:06:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzNTA4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "eb16a99ff2ae1e77468e0332aebdd0b4e4af111e", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\nindex c67d728a..8b4ae891 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradlePreferenceChangeListener.java\n\n@@ -29,7 +29,6 @@ import org.eclipse.core.runtime.CoreException;\n import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n import org.eclipse.jdt.ls.core.internal.ProjectUtils;\n import org.eclipse.jdt.ls.core.internal.preferences.IPreferencesChangeListener;\n-import org.eclipse.jdt.ls.core.internal.preferences.PreferenceManager;\n import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n import org.eclipse.jdt.ls.internal.gradle.checksums.ValidationResult;\n import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n"}}, {"oid": "eb16a99ff2ae1e77468e0332aebdd0b4e4af111e", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/eb16a99ff2ae1e77468e0332aebdd0b4e4af111e", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-08T16:04:16Z", "type": "commit"}, {"oid": "eb16a99ff2ae1e77468e0332aebdd0b4e4af111e", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/eb16a99ff2ae1e77468e0332aebdd0b4e4af111e", "message": "Ignore subprojects when updating a gradle project\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-08T16:04:16Z", "type": "forcePushed"}]}