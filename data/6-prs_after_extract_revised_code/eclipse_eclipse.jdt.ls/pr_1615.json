{"pr_number": 1615, "pr_title": "Support inferSelection when extract to variable", "pr_createdAt": "2020-11-26T02:45:10Z", "pr_url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1615", "timeline": [{"oid": "872c9af58af4eb9fd5b3189a243de3af86be9df6", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/872c9af58af4eb9fd5b3189a243de3af86be9df6", "message": "Support inferSelection when extract to variable\n\nSigned-off-by: Shi Chen <chenshi@microsoft.com>", "committedDate": "2020-11-30T08:30:47Z", "type": "commit"}, {"oid": "872c9af58af4eb9fd5b3189a243de3af86be9df6", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/872c9af58af4eb9fd5b3189a243de3af86be9df6", "message": "Support inferSelection when extract to variable\n\nSigned-off-by: Shi Chen <chenshi@microsoft.com>", "committedDate": "2020-11-30T08:30:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEyMjgxMA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1615#discussion_r533122810", "bodyText": "Since this method is a public static method, it's kind of API, i prefer not to change its signature frequently, but add a new overriding method with your new extra parameter there.", "author": "testforstephen", "createdAt": "2020-12-01T07:30:13Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/text/correction/RefactorProposalUtility.java", "diffHunk": "@@ -315,20 +315,34 @@ private static boolean supportsExtractVariable(IInvocationContext context) {\n \t\treturn true;\n \t}\n \n-\tpublic static CUCorrectionProposal getExtractVariableAllOccurrenceProposal(CodeActionParams params, IInvocationContext context, boolean problemsAtLocation, Map formatterOptions, boolean returnAsCommand) throws CoreException {\n+\tpublic static CUCorrectionProposal getExtractVariableAllOccurrenceProposal(CodeActionParams params, IInvocationContext context, boolean problemsAtLocation, Map formatterOptions, boolean returnAsCommand, boolean inferSelectionSupport) throws CoreException {", "originalCommit": "872c9af58af4eb9fd5b3189a243de3af86be9df6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE0ODUwNA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1615#discussion_r533148504", "bodyText": "Make sense. Fixed.", "author": "CsCherrYY", "createdAt": "2020-12-01T08:22:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEyMjgxMA=="}], "type": "inlineReview", "revised_code": {"commit": "9b098da3385a07a5074efdd9848b2da9f7ea2b3f", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/text/correction/RefactorProposalUtility.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/text/correction/RefactorProposalUtility.java\nindex c3dad789..26871e40 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/text/correction/RefactorProposalUtility.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/text/correction/RefactorProposalUtility.java\n\n@@ -315,7 +315,11 @@ public class RefactorProposalUtility {\n \t\treturn true;\n \t}\n \n-\tpublic static CUCorrectionProposal getExtractVariableAllOccurrenceProposal(CodeActionParams params, IInvocationContext context, boolean problemsAtLocation, Map formatterOptions, boolean returnAsCommand, boolean inferSelectionSupport) throws CoreException {\n+\tpublic static CUCorrectionProposal getExtractVariableAllOccurrenceProposal(CodeActionParams params, IInvocationContext context, boolean problemsAtLocation, Map formatterOptions, boolean returnAsCommand) throws CoreException {\n+\t\treturn getExtractVariableAllOccurrenceProposal(params, context, problemsAtLocation, formatterOptions, returnAsCommand, false);\n+\t}\n+\n+\tprivate static CUCorrectionProposal getExtractVariableAllOccurrenceProposal(CodeActionParams params, IInvocationContext context, boolean problemsAtLocation, Map formatterOptions, boolean returnAsCommand, boolean inferSelectionSupport) throws CoreException {\n \t\tfinal ICompilationUnit cu = context.getCompilationUnit();\n \t\tString label = CorrectionMessages.QuickAssistProcessor_extract_to_local_all_description;\n \t\tint relevance;\n"}}, {"oid": "9b098da3385a07a5074efdd9848b2da9f7ea2b3f", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/9b098da3385a07a5074efdd9848b2da9f7ea2b3f", "message": "Resolve comments\n\nSigned-off-by: Shi Chen <chenshi@microsoft.com>", "committedDate": "2020-12-01T08:50:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE4MTk1Mg==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1615#discussion_r533181952", "bodyText": "Indentation is wrong for the new block.", "author": "testforstephen", "createdAt": "2020-12-01T09:02:49Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java", "diffHunk": "@@ -68,7 +68,11 @@ public static RefactorWorkspaceEdit getEditsForRefactor(GetRefactorEditParams pa\n \t\t\tLinkedCorrectionProposal proposal = null;\n \t\t\tif (RefactorProposalUtility.EXTRACT_VARIABLE_COMMAND.equals(params.command) || RefactorProposalUtility.EXTRACT_VARIABLE_ALL_OCCURRENCE_COMMAND.equals(params.command)\n \t\t\t\t\t|| RefactorProposalUtility.EXTRACT_CONSTANT_COMMAND.equals(params.command)) {\n-\t\t\t\tproposal = (LinkedCorrectionProposal) getExtractVariableProposal(params.context, context, problemsAtLocation, params.command, formatterOptions);\n+\t\t\t\t\t\tSelectionInfo info = (params.commandArguments != null && !params.commandArguments.isEmpty()) ? JSONUtility.toModel(params.commandArguments.get(0), SelectionInfo.class) : null;\n+\t\t\t\t\t\tif (info != null) {\n+\t\t\t\t\t\t\tcontext = new InnovationContext(unit, info.offset, info.length);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tproposal = (LinkedCorrectionProposal) getExtractVariableProposal(params.context, context, problemsAtLocation, params.command, formatterOptions);", "originalCommit": "9b098da3385a07a5074efdd9848b2da9f7ea2b3f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b25f9b08afc25639014606f67902df115957a9b7", "chunk": "diff --git a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java\nindex 9bad53db..f13d1389 100644\n--- a/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java\n+++ b/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java\n\n@@ -68,11 +68,11 @@ public class GetRefactorEditHandler {\n \t\t\tLinkedCorrectionProposal proposal = null;\n \t\t\tif (RefactorProposalUtility.EXTRACT_VARIABLE_COMMAND.equals(params.command) || RefactorProposalUtility.EXTRACT_VARIABLE_ALL_OCCURRENCE_COMMAND.equals(params.command)\n \t\t\t\t\t|| RefactorProposalUtility.EXTRACT_CONSTANT_COMMAND.equals(params.command)) {\n-\t\t\t\t\t\tSelectionInfo info = (params.commandArguments != null && !params.commandArguments.isEmpty()) ? JSONUtility.toModel(params.commandArguments.get(0), SelectionInfo.class) : null;\n-\t\t\t\t\t\tif (info != null) {\n-\t\t\t\t\t\t\tcontext = new InnovationContext(unit, info.offset, info.length);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tproposal = (LinkedCorrectionProposal) getExtractVariableProposal(params.context, context, problemsAtLocation, params.command, formatterOptions);\n+\t\t\t\tSelectionInfo info = (params.commandArguments != null && !params.commandArguments.isEmpty()) ? JSONUtility.toModel(params.commandArguments.get(0), SelectionInfo.class) : null;\n+\t\t\t\tif (info != null) {\n+\t\t\t\t\tcontext = new InnovationContext(unit, info.offset, info.length);\n+\t\t\t\t}\n+\t\t\t\tproposal = (LinkedCorrectionProposal) getExtractVariableProposal(params.context, context, problemsAtLocation, params.command, formatterOptions);\n \t\t\t} else if (RefactorProposalUtility.ASSIGN_VARIABLE_COMMAND.equals(params.command)) {\n \t\t\t\tproposal = (LinkedCorrectionProposal) getAssignVariableProposal(params, context, problemsAtLocation, params.command, formatterOptions, locations);\n \t\t\t} else if (RefactorProposalUtility.ASSIGN_FIELD_COMMAND.equals(params.command)) {\n"}}, {"oid": "b25f9b08afc25639014606f67902df115957a9b7", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/b25f9b08afc25639014606f67902df115957a9b7", "message": "Fix indentation\n\nSigned-off-by: Shi Chen <chenshi@microsoft.com>", "committedDate": "2020-12-01T09:43:31Z", "type": "commit"}]}