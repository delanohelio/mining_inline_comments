{"pr_number": 310, "pr_title": "InvalidTurnRestrictionCheck Instruction Enhancement", "pr_createdAt": "2020-06-10T18:02:39Z", "pr_url": "https://github.com/osmlab/atlas-checks/pull/310", "timeline": [{"oid": "2ce54169cdeda7edefbe67e3502a45362c2eabda", "url": "https://github.com/osmlab/atlas-checks/commit/2ce54169cdeda7edefbe67e3502a45362c2eabda", "message": "instructions & testing", "committedDate": "2020-06-05T17:16:09Z", "type": "commit"}, {"oid": "8bec37eed29f8b208ce9f6461002f14f0aa6108f", "url": "https://github.com/osmlab/atlas-checks/commit/8bec37eed29f8b208ce9f6461002f14f0aa6108f", "message": "sharding fix", "committedDate": "2020-06-05T19:13:59Z", "type": "commit"}, {"oid": "e00287226e74ef97d5fc0d0a3335fe935f423f02", "url": "https://github.com/osmlab/atlas-checks/commit/e00287226e74ef97d5fc0d0a3335fe935f423f02", "message": "revert test atlas jar", "committedDate": "2020-06-10T15:47:06Z", "type": "commit"}, {"oid": "1d2eaba52338c769a71965afe7f0b26015f15e93", "url": "https://github.com/osmlab/atlas-checks/commit/1d2eaba52338c769a71965afe7f0b26015f15e93", "message": "Merge remote-tracking branch 'upstream/dev' into dev-turnRestrictionInstructions", "committedDate": "2020-06-10T17:25:51Z", "type": "commit"}, {"oid": "bbcb3df40bc589f65fdf515333ff56f23796ab72", "url": "https://github.com/osmlab/atlas-checks/commit/bbcb3df40bc589f65fdf515333ff56f23796ab72", "message": "comments", "committedDate": "2020-06-10T17:33:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM2ODIwOA==", "url": "https://github.com/osmlab/atlas-checks/pull/310#discussion_r438368208", "bodyText": "nit: Could we combine the conditionals in noneMatch() ?", "author": "seancoulter", "createdAt": "2020-06-10T19:46:49Z", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/relations/InvalidTurnRestrictionCheck.java", "diffHunk": "@@ -46,22 +72,32 @@ public boolean validCheckForObject(final AtlasObject object)\n     @Override\n     protected Optional<CheckFlag> flag(final AtlasObject object)\n     {\n-        final Optional<CheckFlag> result;\n-\n         final Relation relation = (Relation) object;\n-        if (!TurnRestriction.from(relation).isPresent())\n+        final Set<AtlasObject> members = relation.members().stream().map(RelationMember::getEntity)\n+                .collect(Collectors.toSet());\n+\n+        // A to and from member are required\n+        if (relation.members().stream()\n+                .noneMatch(member -> member.getRole().equals(RelationTypeTag.RESTRICTION_ROLE_FROM))", "originalCommit": "bbcb3df40bc589f65fdf515333ff56f23796ab72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4Mjg2Mw==", "url": "https://github.com/osmlab/atlas-checks/pull/310#discussion_r438382863", "bodyText": "We can't combine them because then it would be false if there were just from or to members but not both.", "author": "Bentleysb", "createdAt": "2020-06-10T20:15:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM2ODIwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5MTA0MA==", "url": "https://github.com/osmlab/atlas-checks/pull/310#discussion_r438391040", "bodyText": "Yeah that makes sense, I think the only way to combine them would be if we kept track of members we'd seen while iterating. Your way looks good", "author": "seancoulter", "createdAt": "2020-06-10T20:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM2ODIwOA=="}], "type": "inlineReview", "revised_code": null}]}