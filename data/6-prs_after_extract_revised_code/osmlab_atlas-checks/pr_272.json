{"pr_number": 272, "pr_title": "Add construction configuration", "pr_createdAt": "2020-03-23T18:54:03Z", "pr_url": "https://github.com/osmlab/atlas-checks/pull/272", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1NTUyOA==", "url": "https://github.com/osmlab/atlas-checks/pull/272#discussion_r399555528", "bodyText": "I think this makes more sense as part of the conditional on line 143.", "author": "Bentleysb", "createdAt": "2020-03-27T21:53:32Z", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/FloatingEdgeCheck.java", "diffHunk": "@@ -107,6 +110,16 @@ public FloatingEdgeCheck(final Configuration configuration)\n     public boolean validCheckForObject(final AtlasObject object)\n     {\n         // Consider navigable master edges\n+        if (this.checkConstructionRoad) {\n+            return TypePredicates.IS_EDGE.test(object) && ((Edge) object).isMasterEdge()\n+                    && HighwayTag.isCarNavigableHighway(object) && isMinimumHighwayType(object)\n+                    && !intersectsAirport((Edge) object)\n+                    && ((Edge) object).connectedNodes().stream().noneMatch(\n+                    node -> node.getAtlas()\n+                            .linesContaining(node.getLocation(), line -> Validators.isOfType(line,\n+                                    HighwayTag.class, HighwayTag.CONSTRUCTION))\n+                            .iterator().hasNext());", "originalCommit": "74a72facd5a9e886543c917e6bf198872175437d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dad7d2795a99a604d32d40e88c5a260874d08afd", "chunk": "diff --git a/src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/FloatingEdgeCheck.java b/src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/FloatingEdgeCheck.java\nindex eada6de..02c999f 100644\n--- a/src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/FloatingEdgeCheck.java\n+++ b/src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/FloatingEdgeCheck.java\n\n@@ -110,16 +110,6 @@ public class FloatingEdgeCheck extends BaseCheck<Long>\n     public boolean validCheckForObject(final AtlasObject object)\n     {\n         // Consider navigable master edges\n-        if (this.checkConstructionRoad) {\n-            return TypePredicates.IS_EDGE.test(object) && ((Edge) object).isMasterEdge()\n-                    && HighwayTag.isCarNavigableHighway(object) && isMinimumHighwayType(object)\n-                    && !intersectsAirport((Edge) object)\n-                    && ((Edge) object).connectedNodes().stream().noneMatch(\n-                    node -> node.getAtlas()\n-                            .linesContaining(node.getLocation(), line -> Validators.isOfType(line,\n-                                    HighwayTag.class, HighwayTag.CONSTRUCTION))\n-                            .iterator().hasNext());\n-        }\n         return TypePredicates.IS_EDGE.test(object) && ((Edge) object).isMasterEdge()\n                 && HighwayTag.isCarNavigableHighway(object) && isMinimumHighwayType(object)\n                 && !intersectsAirport((Edge) object);\n"}}, {"oid": "dad7d2795a99a604d32d40e88c5a260874d08afd", "url": "https://github.com/osmlab/atlas-checks/commit/dad7d2795a99a604d32d40e88c5a260874d08afd", "message": "Add changes for code smell", "committedDate": "2020-04-06T22:35:23Z", "type": "commit"}, {"oid": "f8fa0d3fafaaff9a9243ea1ae8fe8339616cfdcb", "url": "https://github.com/osmlab/atlas-checks/commit/f8fa0d3fafaaff9a9243ea1ae8fe8339616cfdcb", "message": "Merge branch 'master' of https://github.com/osmlab/atlas-checks into FECconstruction", "committedDate": "2020-04-07T15:40:36Z", "type": "commit"}, {"oid": "f8fa0d3fafaaff9a9243ea1ae8fe8339616cfdcb", "url": "https://github.com/osmlab/atlas-checks/commit/f8fa0d3fafaaff9a9243ea1ae8fe8339616cfdcb", "message": "Merge branch 'master' of https://github.com/osmlab/atlas-checks into FECconstruction", "committedDate": "2020-04-07T15:40:36Z", "type": "forcePushed"}]}