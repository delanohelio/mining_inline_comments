{"pr_number": 1087, "pr_title": "CommonModuleNameDiagnostics", "pr_createdAt": "2020-04-17T20:06:07Z", "pr_url": "https://github.com/1c-syntax/bsl-language-server/pull/1087", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3MzU3OA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r410673578", "bodyText": "\u0430 \u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0442\u0443\u0442 lazy-\u043e\u0431\u0435\u0440\u0442\u043a\u0430 \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 bsl ls? \u043d\u0435 \u0445\u0432\u0430\u0442\u0438\u0442 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u0433\u0435\u0442\u0442\u0435\u0440\u0430?", "author": "nixel2007", "createdAt": "2020-04-18T09:20:29Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/context/DocumentContext.java", "diffHunk": "@@ -79,6 +81,7 @@\n   private final Lazy<DiagnosticIgnoranceComputer.Data> diagnosticIgnoranceData\n     = new Lazy<>(this::computeDiagnosticIgnorance, computeLock);\n   private final Lazy<MetricStorage> metrics = new Lazy<>(this::computeMetrics, computeLock);\n+  private final Lazy<Optional<MDObjectBase>> mdObject = new Lazy<>(this::computeMdObject, computeLock);", "originalCommit": "0ca089ad8207d4a3dbb82feb89b960bab061061c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b82cd85eff3f97585a5473d8dcbd163baa4d95a", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/DocumentContext.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/DocumentContext.java\nindex efc3d229d..2836d421a 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/DocumentContext.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/DocumentContext.java\n\n@@ -81,7 +81,6 @@ public class DocumentContext {\n   private final Lazy<DiagnosticIgnoranceComputer.Data> diagnosticIgnoranceData\n     = new Lazy<>(this::computeDiagnosticIgnorance, computeLock);\n   private final Lazy<MetricStorage> metrics = new Lazy<>(this::computeMetrics, computeLock);\n-  private final Lazy<Optional<MDObjectBase>> mdObject = new Lazy<>(this::computeMdObject, computeLock);\n \n   public DocumentContext(URI uri, String content, ServerContext context) {\n     this.uri = Absolute.uri(uri);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3MzYxNA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r410673614", "bodyText": "\u0430 \u0447\u0442\u043e \u0437\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0435\u0449\u0435?", "author": "nixel2007", "createdAt": "2020-04-18T09:21:10Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.Optional;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  scope = DiagnosticScope.BSL,\n+  modules = {\n+    ModuleType.CommonModule\n+  },\n+  minutesToFix = 2,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class CommonModuleNameClientServerDiagnostic extends AbstractVisitorDiagnostic {\n+  public CommonModuleNameClientServerDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public ParseTree visitFile(BSLParser.FileContext ctx) {\n+\n+    Optional<MDObjectBase> commonModuleOptional = documentContext.getMdObject();\n+\n+    if (commonModuleOptional.isEmpty()\n+      || !(commonModuleOptional.get() instanceof CommonModule)) {", "originalCommit": "0ca089ad8207d4a3dbb82feb89b960bab061061c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b82cd85eff3f97585a5473d8dcbd163baa4d95a", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\nindex 9e79aad28..ca21c1e0c 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\n\n@@ -1,3 +1,24 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3MzY5Ng==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r410673696", "bodyText": "\u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0441\u0442\u043e return ctx;\n\u0442\u043e\u0447\u043d\u0435\u0435 \u0434\u0430\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0442 AbstractDiagnostic, \u0430 \u043d\u0435 AbstractVisitorDiagnostic. AST \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0442\u0443\u0442 \u0432\u0440\u043e\u0434\u0435 \u043d\u0435 \u043d\u0443\u0436\u043d\u0430.", "author": "nixel2007", "createdAt": "2020-04-18T09:21:56Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.Optional;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  scope = DiagnosticScope.BSL,\n+  modules = {\n+    ModuleType.CommonModule\n+  },\n+  minutesToFix = 2,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class CommonModuleNameClientServerDiagnostic extends AbstractVisitorDiagnostic {\n+  public CommonModuleNameClientServerDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public ParseTree visitFile(BSLParser.FileContext ctx) {\n+\n+    Optional<MDObjectBase> commonModuleOptional = documentContext.getMdObject();\n+\n+    if (commonModuleOptional.isEmpty()\n+      || !(commonModuleOptional.get() instanceof CommonModule)) {\n+      return super.visitFile(ctx);", "originalCommit": "0ca089ad8207d4a3dbb82feb89b960bab061061c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY4MDUzNg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r410680536", "bodyText": "ctx \u0442\u0443\u0442 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0442\u043e\u043a\u0435\u043d\u0430.", "author": "asosnoviy", "createdAt": "2020-04-18T10:36:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3MzY5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY4MzMzMQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r410683331", "bodyText": "\u041f\u0435\u0440\u0432\u044b\u0439 \u0442\u043e\u043a\u0435\u043d \u043c\u043e\u0436\u043d\u043e \u0438 \u0438\u0437 getTokens \u0432\u044b\u0442\u0430\u0449\u0438\u0442\u044c :)", "author": "nixel2007", "createdAt": "2020-04-18T11:03:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3MzY5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MDk5OA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r410690998", "bodyText": "\u0410\u0433\u0430.", "author": "asosnoviy", "createdAt": "2020-04-18T12:23:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3MzY5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "2b82cd85eff3f97585a5473d8dcbd163baa4d95a", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\nindex 9e79aad28..ca21c1e0c 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\n\n@@ -1,3 +1,24 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3NDAwMg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r410674002", "bodyText": "\u0435\u0441\u0442\u044c \u043e\u0434\u0438\u043d \u043f\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442, \u043d\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439 \u0432 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0435.\n\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c \u0443 \u043c\u043e\u0434\u0443\u043b\u044f \u0435\u0441\u0442\u044c \u0433\u0430\u043b\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442, \u0441\u0435\u0440\u0432\u0435\u0440, \u043f\u043e\u043b\u043d\u044b\u0435 \u043f\u0440\u0430\u0432\u0430 \u0438 \u043f\u043e\u0432\u0442 \u0438\u0441\u043f.\n\u0423 \u043d\u0435\u0433\u043e \u0432 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u0431\u0443\u0434\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0432\u0440\u043e\u0434\u0435 \u041c\u043e\u0434\u0443\u043b\u044c\u041a\u043b\u0438\u0435\u043d\u0442\u0421\u0435\u0440\u0432\u0435\u0440\u041f\u043e\u043b\u043d\u044b\u0435\u041f\u0440\u0430\u0432\u0430\u041f\u043e\u0432\u0442\u0418\u0441\u043f. \u0418 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043f\u043e\u0441\u0442\u0444\u0438\u043a\u0441\u043e\u0432 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442 \u044f\u0432\u043d\u043e \u043d\u0435 \u0440\u0435\u0433\u0443\u043b\u0438\u0440\u0443\u0435\u0442. \u0442.\u0435. \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u043d\u0435 endsWith, \u0430 \u0447\u0443\u0442\u044c \u0443\u043c\u043d\u0435\u0435 - \u043b\u0438\u0431\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0430 contains, \u043b\u0438\u0431\u043e \u043f\u043e \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043a\u0435 \u0441 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u043d\u0430 \u043d\u0435-\u043d\u0430\u0447\u0430\u043b\u043e \u0441\u0442\u0440\u043e\u043a\u0438, \u043b\u0438\u0431\u043e \u0438\u043c\u0435\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u0445 \u043f\u043e\u0441\u0442\u0444\u0438\u043a\u0441\u043e\u0432, \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0447\u0442\u043e \u0430) \u043c\u043e\u0434\u0443\u043b\u044c \u0438\u043c\u0435\u0435\u0442 \u043f\u043e\u0441\u0442\u0444\u0438\u043a\u0441, \u0431) \u044d\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u0441\u0442\u0444\u0438\u043a\u0441 \u0438 \u043a\u0440\u043e\u043c\u0435 \u043d\u0435\u0433\u043e \u0435\u0441\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u0442\u0444\u0438\u043a\u0441\u044b, \u0430 \u043d\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442", "author": "nixel2007", "createdAt": "2020-04-18T09:24:44Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.Optional;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  scope = DiagnosticScope.BSL,\n+  modules = {\n+    ModuleType.CommonModule\n+  },\n+  minutesToFix = 2,\n+  tags = {\n+    DiagnosticTag.STANDARD\n+  }\n+\n+)\n+public class CommonModuleNameClientServerDiagnostic extends AbstractVisitorDiagnostic {\n+  public CommonModuleNameClientServerDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public ParseTree visitFile(BSLParser.FileContext ctx) {\n+\n+    Optional<MDObjectBase> commonModuleOptional = documentContext.getMdObject();\n+\n+    if (commonModuleOptional.isEmpty()\n+      || !(commonModuleOptional.get() instanceof CommonModule)) {\n+      return super.visitFile(ctx);\n+    }\n+\n+    CommonModule commonModule = (CommonModule) commonModuleOptional.get();\n+\n+    if (commonModule.isServer()\n+      && commonModule.isClientManagedApplication()\n+      && !commonModule.getName().endsWith(\"\u041a\u043b\u0438\u0435\u043d\u0442\u0421\u0435\u0440\u0432\u0435\u0440\")) {", "originalCommit": "0ca089ad8207d4a3dbb82feb89b960bab061061c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY4MTIyMg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r410681222", "bodyText": "\u041f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c\u044b\u0439 \u0435\u0449\u0435", "author": "asosnoviy", "createdAt": "2020-04-18T10:43:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3NDAwMg=="}], "type": "inlineReview", "revised_code": {"commit": "2b82cd85eff3f97585a5473d8dcbd163baa4d95a", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\nindex 9e79aad28..ca21c1e0c 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\n\n@@ -1,3 +1,24 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3NDE2Mw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r410674163", "bodyText": "\u043a\u0430\u0436\u0435\u0442\u0441\u044f \u0432\u043e\u0442 \u044d\u0442\u0438 \u0447\u0435\u0442\u044b\u0440\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e\u0440\u0430 \u0432\u044b\u0434\u0435\u043b\u044f\u0442\u044c \u0432 \u0445\u0435\u043b\u043f\u0435\u0440", "author": "nixel2007", "createdAt": "2020-04-18T09:26:31Z", "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnosticTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.ServerContext;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.utils.Absolute;\n+import lombok.SneakyThrows;\n+import org.apache.commons.io.FileUtils;\n+import org.eclipse.lsp4j.Diagnostic;\n+import org.junit.jupiter.api.Test;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+import static com.github._1c_syntax.bsl.languageserver.util.Assertions.assertThat;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n+\n+class CommonModuleNameClientServerDiagnosticTest extends AbstractDiagnosticTest<CommonModuleNameClientServerDiagnostic> {\n+  CommonModuleNameClientServerDiagnosticTest() {\n+    super(CommonModuleNameClientServerDiagnostic.class);\n+  }\n+\n+  private static final String PATH_TO_METADATA = \"src/test/resources/metadata\";\n+  private static final String PATH_TO_MODULE_FILE = \"src/test/resources/metadata/CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\";\n+\n+\n+  @SneakyThrows\n+  @Test\n+  void test() {\n+\n+    Path path = Absolute.path(PATH_TO_METADATA);\n+    var serverContext = spy(new ServerContext(path));\n+    var configuration = spy(serverContext.getConfiguration());\n+    when(serverContext.getConfiguration()).thenReturn(configuration);", "originalCommit": "0ca089ad8207d4a3dbb82feb89b960bab061061c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b82cd85eff3f97585a5473d8dcbd163baa4d95a", "chunk": "diff --git a/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnosticTest.java b/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnosticTest.java\nindex 9cef18a96..65b8d5f2c 100644\n--- a/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnosticTest.java\n+++ b/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnosticTest.java\n\n@@ -1,3 +1,24 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY3NDIzMQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r410674231", "bodyText": "\u043c\u043e\u0436\u043d\u043e \u0442\u0435\u0431\u044f \u0435\u0449\u0435 \u043f\u043e\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u0440\u0430\u0441\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043f\u043e \u043a\u043e\u0434\u0443 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u044b\n// given\n// when\n// then\n?", "author": "nixel2007", "createdAt": "2020-04-18T09:27:23Z", "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnosticTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.ServerContext;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.utils.Absolute;\n+import lombok.SneakyThrows;\n+import org.apache.commons.io.FileUtils;\n+import org.eclipse.lsp4j.Diagnostic;\n+import org.junit.jupiter.api.Test;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+import static com.github._1c_syntax.bsl.languageserver.util.Assertions.assertThat;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n+\n+class CommonModuleNameClientServerDiagnosticTest extends AbstractDiagnosticTest<CommonModuleNameClientServerDiagnostic> {\n+  CommonModuleNameClientServerDiagnosticTest() {\n+    super(CommonModuleNameClientServerDiagnostic.class);\n+  }\n+\n+  private static final String PATH_TO_METADATA = \"src/test/resources/metadata\";\n+  private static final String PATH_TO_MODULE_FILE = \"src/test/resources/metadata/CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\";\n+\n+\n+  @SneakyThrows\n+  @Test\n+  void test() {\n+\n+    Path path = Absolute.path(PATH_TO_METADATA);\n+    var serverContext = spy(new ServerContext(path));\n+    var configuration = spy(serverContext.getConfiguration());\n+    when(serverContext.getConfiguration()).thenReturn(configuration);\n+\n+    Path testFile = Paths.get(PATH_TO_MODULE_FILE).toAbsolutePath();\n+\n+    var documentContext = spy(new DocumentContext(\n+      testFile.toUri(),\n+      FileUtils.readFileToString(testFile.toFile(), StandardCharsets.UTF_8),\n+      serverContext\n+    ));\n+    when(documentContext.getServerContext()).thenReturn(serverContext);\n+\n+\n+    var modules = spy(configuration.getModulesByURI());\n+    when(configuration.getModulesByURI()).thenReturn(modules);\n+\n+    var module = spy((CommonModule) modules.get(documentContext.getUri()));\n+\n+    when(module.isServer()).thenReturn(Boolean.TRUE);\n+    when(module.isClientManagedApplication()).thenReturn(Boolean.TRUE);\n+\n+    when(modules.get(documentContext.getUri())).thenReturn(module);\n+\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);", "originalCommit": "0ca089ad8207d4a3dbb82feb89b960bab061061c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b82cd85eff3f97585a5473d8dcbd163baa4d95a", "chunk": "diff --git a/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnosticTest.java b/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnosticTest.java\nindex 9cef18a96..65b8d5f2c 100644\n--- a/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnosticTest.java\n+++ b/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnosticTest.java\n\n@@ -1,3 +1,24 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n"}}, {"oid": "2b82cd85eff3f97585a5473d8dcbd163baa4d95a", "url": "https://github.com/1c-syntax/bsl-language-server/commit/2b82cd85eff3f97585a5473d8dcbd163baa4d95a", "message": "utils bump", "committedDate": "2020-04-19T09:14:20Z", "type": "forcePushed"}, {"oid": "2df5e7ff76283ea0ad586b98483b8cf671e68d6f", "url": "https://github.com/1c-syntax/bsl-language-server/commit/2df5e7ff76283ea0ad586b98483b8cf671e68d6f", "message": "\u0421\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u043d\u043e\u0433\u043e\u0442\u0435\u0433\u043e\u0432", "committedDate": "2020-04-19T08:31:47Z", "type": "forcePushed"}, {"oid": "2df5e7ff76283ea0ad586b98483b8cf671e68d6f", "url": "https://github.com/1c-syntax/bsl-language-server/commit/2df5e7ff76283ea0ad586b98483b8cf671e68d6f", "message": "\u0421\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u043d\u043e\u0433\u043e\u0442\u0435\u0433\u043e\u0432", "committedDate": "2020-04-19T08:31:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwMzIzMg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r411503232", "bodyText": "\u041c\u043e\u0436\u0435\u0442 \u0432 \u043b\u0438\u0431\u0443 Utils \u0432\u044b\u043d\u0435\u0441\u0435\u043c?", "author": "otymko", "createdAt": "2020-04-20T16:07:33Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+\n+import java.util.regex.Pattern;\n+\n+abstract class AbstractCommonModuleNameDiagnostic extends AbstractDiagnostic {\n+\n+  private final Pattern pattern;\n+\n+  public AbstractCommonModuleNameDiagnostic(DiagnosticInfo info, String regexp) {\n+    super(info);\n+\n+    pattern = Pattern.compile(", "originalCommit": "2df5e7ff76283ea0ad586b98483b8cf671e68d6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyMzEzMw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r411523133", "bodyText": "\u0422\u0430\u043c \u043f\u0440 \u0443\u0436\u0435 \u0435\u0441\u0442\u044c", "author": "asosnoviy", "createdAt": "2020-04-20T16:34:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwMzIzMg=="}], "type": "inlineReview", "revised_code": {"commit": "bc14bb63f3fd7ad805c4a8ba8d737ee3cfce90fd", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java\ndeleted file mode 100644\nindex cdd27ce8f..000000000\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java\n+++ /dev/null\n\n@@ -1,59 +0,0 @@\n-/*\n- * This file is a part of BSL Language Server.\n- *\n- * Copyright \u00a9 2018-2020\n- * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n- *\n- * SPDX-License-Identifier: LGPL-3.0-or-later\n- *\n- * BSL Language Server is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation; either\n- * version 3.0 of the License, or (at your option) any later version.\n- *\n- * BSL Language Server is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with BSL Language Server.\n- */\n-package com.github._1c_syntax.bsl.languageserver.diagnostics;\n-\n-import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n-import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n-import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n-\n-import java.util.regex.Pattern;\n-\n-abstract class AbstractCommonModuleNameDiagnostic extends AbstractDiagnostic {\n-\n-  private final Pattern pattern;\n-\n-  public AbstractCommonModuleNameDiagnostic(DiagnosticInfo info, String regexp) {\n-    super(info);\n-\n-    pattern = Pattern.compile(\n-      regexp,\n-      Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n-    );\n-\n-  }\n-\n-  @Override\n-  protected void check(DocumentContext documentContext) {\n-    if (documentContext.getTokens().isEmpty()) {\n-      return;\n-    }\n-\n-    documentContext.getMdObject()\n-      .map(CommonModule.class::cast)\n-      .filter(this::flagsCheck)\n-      .filter(commonModule -> !pattern.matcher(commonModule.getName()).matches())\n-      .ifPresent(commonModule -> diagnosticStorage.addDiagnostic(documentContext.getTokens().get(0)));\n-  }\n-\n-  protected abstract boolean flagsCheck(CommonModule commonModule);\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0ODE1Mw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412148153", "bodyText": "\u0430 \u0432 mdclasses \u043d\u0435\u0442 UNKNOWN \u043e\u0431\u044a\u0435\u043a\u0442\u0430? \u0435\u0441\u0442\u044c \u043b\u0438 \u0441\u043c\u044b\u0441\u043b \u0435\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043b\u0438 \u0445\u0432\u0430\u0442\u0438\u0442 Optional?\n@asosnoviy @otymko @theshadowco", "author": "nixel2007", "createdAt": "2020-04-21T12:39:54Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/context/DocumentContext.java", "diffHunk": "@@ -187,6 +189,10 @@ public ModuleType getModuleType() {\n     return supportVariants.getOrCompute();\n   }\n \n+  public Optional<MDObjectBase> getMdObject() {", "originalCommit": "2df5e7ff76283ea0ad586b98483b8cf671e68d6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM3NjQ4OA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r414376488", "bodyText": "\u041d\u0435\u0442\u0443. \u0432 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435 \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0431\u0443\u0434\u0435\u043c \u043f\u043e\u0441\u043f\u0435\u0432\u0430\u0442\u044c \u0437\u0430 \u0440\u0435\u043b\u0438\u0437\u0430\u043c\u0438", "author": "theshadowco", "createdAt": "2020-04-24T08:01:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0ODE1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "bc14bb63f3fd7ad805c4a8ba8d737ee3cfce90fd", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/DocumentContext.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/DocumentContext.java\nindex 2836d421a..efc3d229d 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/DocumentContext.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/DocumentContext.java\n\n@@ -190,7 +191,7 @@ public class DocumentContext {\n   }\n \n   public Optional<MDObjectBase> getMdObject() {\n-    return Optional.ofNullable(getServerContext().getConfiguration().getModulesByURI().get(getUri()));\n+    return mdObject.getOrCompute();\n   }\n \n   public void rebuild(String content) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0ODk0MA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412148940", "bodyText": "\u043d\u0430\u0434\u043e \u043f\u043e\u0434\u0441\u0442\u0435\u043b\u0438\u0442\u044c \u0441\n    .filter(CommonModule.class::isInstance)", "author": "nixel2007", "createdAt": "2020-04-21T12:40:55Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+\n+import java.util.regex.Pattern;\n+\n+abstract class AbstractCommonModuleNameDiagnostic extends AbstractDiagnostic {\n+\n+  private final Pattern pattern;\n+\n+  public AbstractCommonModuleNameDiagnostic(DiagnosticInfo info, String regexp) {\n+    super(info);\n+\n+    pattern = Pattern.compile(\n+      regexp,\n+      Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n+    );\n+\n+  }\n+\n+  @Override\n+  protected void check(DocumentContext documentContext) {\n+    if (documentContext.getTokens().isEmpty()) {\n+      return;\n+    }\n+\n+    documentContext.getMdObject()\n+      .map(CommonModule.class::cast)", "originalCommit": "2df5e7ff76283ea0ad586b98483b8cf671e68d6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE4NTE2MA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412185160", "bodyText": "\u0442\u0440\u044f\u043c", "author": "asosnoviy", "createdAt": "2020-04-21T13:29:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0ODk0MA=="}], "type": "inlineReview", "revised_code": {"commit": "bc14bb63f3fd7ad805c4a8ba8d737ee3cfce90fd", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java\ndeleted file mode 100644\nindex cdd27ce8f..000000000\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java\n+++ /dev/null\n\n@@ -1,59 +0,0 @@\n-/*\n- * This file is a part of BSL Language Server.\n- *\n- * Copyright \u00a9 2018-2020\n- * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n- *\n- * SPDX-License-Identifier: LGPL-3.0-or-later\n- *\n- * BSL Language Server is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation; either\n- * version 3.0 of the License, or (at your option) any later version.\n- *\n- * BSL Language Server is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with BSL Language Server.\n- */\n-package com.github._1c_syntax.bsl.languageserver.diagnostics;\n-\n-import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n-import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n-import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n-\n-import java.util.regex.Pattern;\n-\n-abstract class AbstractCommonModuleNameDiagnostic extends AbstractDiagnostic {\n-\n-  private final Pattern pattern;\n-\n-  public AbstractCommonModuleNameDiagnostic(DiagnosticInfo info, String regexp) {\n-    super(info);\n-\n-    pattern = Pattern.compile(\n-      regexp,\n-      Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n-    );\n-\n-  }\n-\n-  @Override\n-  protected void check(DocumentContext documentContext) {\n-    if (documentContext.getTokens().isEmpty()) {\n-      return;\n-    }\n-\n-    documentContext.getMdObject()\n-      .map(CommonModule.class::cast)\n-      .filter(this::flagsCheck)\n-      .filter(commonModule -> !pattern.matcher(commonModule.getName()).matches())\n-      .ifPresent(commonModule -> diagnosticStorage.addDiagnostic(documentContext.getTokens().get(0)));\n-  }\n-\n-  protected abstract boolean flagsCheck(CommonModule commonModule);\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE1MDAwMg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412150002", "bodyText": "isClientOrdinaryApplication?", "author": "nixel2007", "createdAt": "2020-04-21T12:42:25Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MAJOR,\n+  scope = DiagnosticScope.BSL,\n+  modules = {\n+    ModuleType.CommonModule\n+  },\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.BADPRACTICE,\n+    DiagnosticTag.UNPREDICTABLE\n+  }\n+)\n+public class CommonModuleNameClientServerDiagnostic extends AbstractCommonModuleNameDiagnostic {\n+\n+  private static final String REGEXP = \"^.*\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u0435\u0440\u0432\u0435\u0440|^.*clientserver\";\n+\n+  public CommonModuleNameClientServerDiagnostic(DiagnosticInfo info) {\n+    super(info, REGEXP);\n+  }\n+\n+  @Override\n+  protected boolean flagsCheck(CommonModule commonModule) {\n+    return commonModule.isServer() && commonModule.isClientManagedApplication();", "originalCommit": "2df5e7ff76283ea0ad586b98483b8cf671e68d6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc14bb63f3fd7ad805c4a8ba8d737ee3cfce90fd", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\nindex ca21c1e0c..9e79aad28 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\n\n@@ -1,24 +1,3 @@\n-/*\n- * This file is a part of BSL Language Server.\n- *\n- * Copyright \u00a9 2018-2020\n- * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n- *\n- * SPDX-License-Identifier: LGPL-3.0-or-later\n- *\n- * BSL Language Server is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation; either\n- * version 3.0 of the License, or (at your option) any later version.\n- *\n- * BSL Language Server is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with BSL Language Server.\n- */\n package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE1MDc0NQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412150745", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String REGEXP = \"^.*\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u0435\u0440\u0432\u0435\u0440|^.*clientserver\";\n          \n          \n            \n              private static final String REGEXP = \"^.*(\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u0435\u0440\u0432\u0435\u0440|clientserver)\";\n          \n      \n    \n    \n  \n\n\u043d\u0443 \u0438 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438. \u0441\u0442\u043e\u0438\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u0430 regex101, \u043d\u043e \u0435\u043c\u043d\u0438\u043f, \u0442\u0430\u043a \u0431\u0443\u0434\u0435\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 \u0448\u0430\u0433\u043e\u0432 \u0432 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0435", "author": "nixel2007", "createdAt": "2020-04-21T12:43:36Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MAJOR,\n+  scope = DiagnosticScope.BSL,\n+  modules = {\n+    ModuleType.CommonModule\n+  },\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.BADPRACTICE,\n+    DiagnosticTag.UNPREDICTABLE\n+  }\n+)\n+public class CommonModuleNameClientServerDiagnostic extends AbstractCommonModuleNameDiagnostic {\n+\n+  private static final String REGEXP = \"^.*\u043a\u043b\u0438\u0435\u043d\u0442\u0441\u0435\u0440\u0432\u0435\u0440|^.*clientserver\";", "originalCommit": "2df5e7ff76283ea0ad586b98483b8cf671e68d6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc14bb63f3fd7ad805c4a8ba8d737ee3cfce90fd", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\nindex ca21c1e0c..9e79aad28 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameClientServerDiagnostic.java\n\n@@ -1,24 +1,3 @@\n-/*\n- * This file is a part of BSL Language Server.\n- *\n- * Copyright \u00a9 2018-2020\n- * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n- *\n- * SPDX-License-Identifier: LGPL-3.0-or-later\n- *\n- * BSL Language Server is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation; either\n- * version 3.0 of the License, or (at your option) any later version.\n- *\n- * BSL Language Server is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with BSL Language Server.\n- */\n package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE1MTkyOA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412151928", "bodyText": "\u0430 \u043d\u0443\u0436\u0435\u043d \u043b\u0438 \u0432\u043e\u043e\u0431\u0449\u0435 ^.* \u0432 \u043d\u0430\u0447\u0430\u043b\u0435? \u0435\u0441\u043b\u0438 \u0432 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435 \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c matches \u043d\u0430 find, \u0442\u043e \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0438 \u0431\u0435\u0437 \u044d\u0442\u043e\u0433\u043e", "author": "nixel2007", "createdAt": "2020-04-21T12:45:18Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameServerCallDiagnostic.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MINOR,\n+  scope = DiagnosticScope.BSL,\n+  modules = {\n+    ModuleType.CommonModule\n+  },\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.BADPRACTICE,\n+    DiagnosticTag.UNPREDICTABLE\n+  }\n+)\n+public class CommonModuleNameServerCallDiagnostic extends AbstractCommonModuleNameDiagnostic {\n+\n+  private static final String REGEXP = \"^.*\u0432\u044b\u0437\u043e\u0432\u0441\u0435\u0440\u0432\u0435\u0440\u0430|^.*servercall\";", "originalCommit": "2df5e7ff76283ea0ad586b98483b8cf671e68d6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE1MjY2NA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412152664", "bodyText": "\u0415\u0441\u0442\u044c \u043f\u0430\u0442\u0442\u0435\u0440\u043d \u043d\u0430 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435", "author": "asosnoviy", "createdAt": "2020-04-21T12:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE1MTkyOA=="}], "type": "inlineReview", "revised_code": {"commit": "bc14bb63f3fd7ad805c4a8ba8d737ee3cfce90fd", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameServerCallDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java\nsimilarity index 50%\nrename from src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameServerCallDiagnostic.java\nrename to src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java\nindex 433a83469..6adea7f60 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleNameServerCallDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java\n\n@@ -23,37 +23,69 @@ package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n-import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n-import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.antlr.v4.runtime.Token;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.List;\n+import java.util.regex.Pattern;\n \n @DiagnosticMetadata(\n   type = DiagnosticType.CODE_SMELL,\n   severity = DiagnosticSeverity.MINOR,\n-  scope = DiagnosticScope.BSL,\n+  minutesToFix = 1,\n   modules = {\n+    ModuleType.FormModule,\n+    ModuleType.ObjectModule,\n+    ModuleType.RecordSetModule,\n     ModuleType.CommonModule\n   },\n-  minutesToFix = 5,\n   tags = {\n     DiagnosticTag.STANDARD,\n-    DiagnosticTag.BADPRACTICE,\n-    DiagnosticTag.UNPREDICTABLE\n+    DiagnosticTag.DEPRECATED\n   }\n )\n-public class CommonModuleNameServerCallDiagnostic extends AbstractCommonModuleNameDiagnostic {\n+public class ExcessiveAutoTestCheckDiagnostic extends AbstractVisitorDiagnostic {\n \n-  private static final String REGEXP = \"^.*\u0432\u044b\u0437\u043e\u0432\u0441\u0435\u0440\u0432\u0435\u0440\u0430|^.*servercall\";\n+  private static final Pattern ERROR_EXPRESSION = Pattern.compile(\n+    \"(\\\\.\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e\\\\(\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"\\\\)|=\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"|\\\\.Property\\\\(\\\"AutoTest\\\"\\\\)|=\\\"AutoTest\\\")$\",\n+    Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n+  );\n \n-  public CommonModuleNameServerCallDiagnostic(DiagnosticInfo info) {\n-    super(info, REGEXP);\n+  public ExcessiveAutoTestCheckDiagnostic(DiagnosticInfo info) {\n+    super(info);\n   }\n \n   @Override\n-  protected boolean flagsCheck(CommonModule commonModule) {\n-    return commonModule.isServer() && commonModule.isServerCall();\n+  public ParseTree visitIfBranch(BSLParser.IfBranchContext ctx) {\n+\n+    if (expressionMatchesPattern(ctx.expression()) && codeBlockWithOnlyReturn(ctx.codeBlock())) {\n+      diagnosticStorage.addDiagnostic((BSLParser.IfStatementContext) ctx.getParent());\n+      return ctx;\n+    }\n+\n+    return super.visitIfBranch(ctx);\n+  }\n+\n+  private boolean expressionMatchesPattern(BSLParser.ExpressionContext expression) {\n+    return ERROR_EXPRESSION.matcher(expression.getText()).find();\n+  }\n+\n+  private boolean codeBlockWithOnlyReturn(BSLParser.CodeBlockContext codeBlock) {\n+    List<? extends BSLParser.StatementContext> statements = codeBlock.statement();\n+\n+    if (statements.size() == 1) {\n+      BSLParser.CompoundStatementContext compoundStatement = statements.get(0).compoundStatement();\n+\n+      if (compoundStatement != null) {\n+        return compoundStatement.returnStatement() != null;\n+      }\n+    }\n+\n+    return false;\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE2MDAyNQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412160025", "bodyText": "1 \u0410 \u0440\u0430\u0437\u0432\u0435 if (documentContext.getTokens().isEmpty()) \u043f\u043e\u043b\u0435\u0437\u043d\u043e, \u0435\u0441\u043b\u0438 \u0432 getTokens()  \u043c\u044b \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u0440\u0438\u0432\u043e\u0437\u0438\u043c EOF ?\n\u0432\u0435\u0434\u044c \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u0438\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0434\u0430\u0436\u0435 \u043f\u0440\u0438 \u043f\u0443\u0441\u0442\u043e\u043c \u043c\u043e\u0434\u0443\u043b\u0435?\n2 \u0434\u0430 \u0438 \u0432\u043e\u043e\u0431\u0449\u0435 \u044d\u0442\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0418\u041c\u0425\u041e \u0442\u044f\u0436\u0435\u043b\u043e\u0432\u0435\u0441\u043d\u0430\u044f - \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0442\u043e\u043a\u0435\u043d\u043e\u0432. \u0430 \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u043f\u0443\u0441\u0442\u0430\u044f?\n\u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043c\u044b \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u044d\u0442\u043e\u0439 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0431\u0443\u0434\u0435\u043c \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u043e\u043a\u0435\u043d\u043e\u0432, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043e\u043d \u043e\u0441\u043e\u0431\u043e \u043d\u0435 \u043d\u0443\u0436\u0435\u043d, \u0432\u0435\u0440\u043d\u043e?\n\u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 DocumentContext \u043c\u0435\u0442\u043e\u0434 isEmpty \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438, \u0447\u0442\u043e \u043c\u043e\u0434\u0443\u043b\u044c \u043f\u0443\u0441\u0442\n\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0442\u044c \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 String content \u0438\u043b\u0438 \u0435\u0449\u0435 \u043a\u0430\u043a-\u0442\u043e?\n@asosnoviy @nixel2007 ?", "author": "artbear", "createdAt": "2020-04-21T12:56:21Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+\n+import java.util.regex.Pattern;\n+\n+abstract class AbstractCommonModuleNameDiagnostic extends AbstractDiagnostic {\n+\n+  private final Pattern pattern;\n+\n+  public AbstractCommonModuleNameDiagnostic(DiagnosticInfo info, String regexp) {\n+    super(info);\n+\n+    pattern = Pattern.compile(\n+      regexp,\n+      Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n+    );\n+\n+  }\n+\n+  @Override\n+  protected void check(DocumentContext documentContext) {\n+    if (documentContext.getTokens().isEmpty()) {", "originalCommit": "2df5e7ff76283ea0ad586b98483b8cf671e68d6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE2Mjg3MA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412162870", "bodyText": "\u041e\u043d\u043e \u0442\u0443\u0442 \u0436\u0434\u0435\u0442 \u0437\u0430\u043c\u0435\u043d\u044b \u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 Range(0, 0 , 0 ,0), \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0440\u0435\u043d\u0434\u0436\u0430 \u0441 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c \u0441\u0442\u0430\u0440\u0442 \u0438 \u0441\u0442\u043e\u043f.", "author": "asosnoviy", "createdAt": "2020-04-21T13:00:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE2MDAyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE5MjE4OQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412192189", "bodyText": "\u044f \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u044e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b. getTokens \u0434\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u0432\u044b\u0437\u044b\u0432\u0435\u0442\u0441\u044f \u0432 99.99999999% \u0441\u043b\u0443\u0447\u0430\u0435\u0432. \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438, \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0449\u0438\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0430 content \u0438 contentList, \u044f \u043d\u0435 \u0443\u0432\u0435\u0440\u0435\u043d, \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u0438\u0445 \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c... \u043e\u0434\u043d\u0430. \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0435, \u0431\u0443\u0434\u044c \u0442\u043e \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438, \u0444\u043e\u043b\u0434\u0438\u043d\u0433, \u043c\u0435\u0442\u0440\u0438\u043a\u0438, \u0445\u043e\u0432\u0435\u0440, \u043a\u043e\u0434 \u043b\u0435\u043d\u0437\u044b, \u0441\u043e\u043d\u0430\u0440\u043e\u0432\u0441\u043a\u0438\u0439 \u0445\u0430\u0439\u043b\u0430\u0439\u0442\u0438\u043d\u0433 \u0440\u0430\u043d\u043e \u0438\u043b\u0438 \u043f\u043e\u0437\u0434\u043d\u043e \u0434\u0435\u0440\u043d\u0443\u0442 getTokens \u0438 \u043e\u043d \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f.\n\u0434\u0435\u043b\u0430\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0445\u0435\u043b\u043f\u0435\u0440\u044b \u043f\u043e\u0432\u0435\u0440\u0445 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 (\u0430 \u0435\u0441\u043b\u0438 \u0442\u0430\u043c \u0432\u0430\u0439\u0442\u0441\u043f\u0435\u0439\u0441?) \u0441\u0447\u0438\u0442\u0430\u044e \u0438\u0437\u043b\u0438\u0448\u043d\u0438\u043c.", "author": "nixel2007", "createdAt": "2020-04-21T13:38:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE2MDAyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI5NTk3MQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412295971", "bodyText": "\u043b\u0430\u0434\u044b, \u043f\u043e \u043f.2 \u0432\u043e\u043f\u0440\u043e\u0441 \u0441\u043d\u044f\u0442.\n\u0430 \u0447\u0442\u043e \u0441 \u043f.1 - \u0415\u041e\u0424 \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u0440\u0438\u0435\u0437\u0436\u0430\u0435\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u043f\u0438\u0441\u043e\u043a \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0431\u044b\u0432\u0430\u0435\u0442 \u043f\u0443\u0441\u0442\u044b\u043c? \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0441\u043c\u044b\u0441\u043b\u0430?", "author": "artbear", "createdAt": "2020-04-21T15:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE2MDAyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMxMDg0NQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1087#discussion_r412310845", "bodyText": "@artbear, \u0432 \u0442\u0440\u0435\u0442\u0438\u0439 \u0440\u0430\u0437 \u043f\u0440\u043e\u0448\u0443 \u0442\u0435\u0431\u044f \u0432\u043e\u0437\u0434\u0435\u0440\u0436\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u043d\u0435 \u0432 \u0441\u0432\u043e\u0438 \u041f\u0420.", "author": "asosnoviy", "createdAt": "2020-04-21T16:34:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE2MDAyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "bc14bb63f3fd7ad805c4a8ba8d737ee3cfce90fd", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java\ndeleted file mode 100644\nindex cdd27ce8f..000000000\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java\n+++ /dev/null\n\n@@ -1,59 +0,0 @@\n-/*\n- * This file is a part of BSL Language Server.\n- *\n- * Copyright \u00a9 2018-2020\n- * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n- *\n- * SPDX-License-Identifier: LGPL-3.0-or-later\n- *\n- * BSL Language Server is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation; either\n- * version 3.0 of the License, or (at your option) any later version.\n- *\n- * BSL Language Server is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with BSL Language Server.\n- */\n-package com.github._1c_syntax.bsl.languageserver.diagnostics;\n-\n-import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n-import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n-import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n-\n-import java.util.regex.Pattern;\n-\n-abstract class AbstractCommonModuleNameDiagnostic extends AbstractDiagnostic {\n-\n-  private final Pattern pattern;\n-\n-  public AbstractCommonModuleNameDiagnostic(DiagnosticInfo info, String regexp) {\n-    super(info);\n-\n-    pattern = Pattern.compile(\n-      regexp,\n-      Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n-    );\n-\n-  }\n-\n-  @Override\n-  protected void check(DocumentContext documentContext) {\n-    if (documentContext.getTokens().isEmpty()) {\n-      return;\n-    }\n-\n-    documentContext.getMdObject()\n-      .map(CommonModule.class::cast)\n-      .filter(this::flagsCheck)\n-      .filter(commonModule -> !pattern.matcher(commonModule.getName()).matches())\n-      .ifPresent(commonModule -> diagnosticStorage.addDiagnostic(documentContext.getTokens().get(0)));\n-  }\n-\n-  protected abstract boolean flagsCheck(CommonModule commonModule);\n-\n-}\n"}}, {"oid": "d7f885bb1b324340ed8e9643d44d2d9c72d79df3", "url": "https://github.com/1c-syntax/bsl-language-server/commit/d7f885bb1b324340ed8e9643d44d2d9c72d79df3", "message": "precommit", "committedDate": "2020-04-21T13:01:30Z", "type": "forcePushed"}, {"oid": "bc14bb63f3fd7ad805c4a8ba8d737ee3cfce90fd", "url": "https://github.com/1c-syntax/bsl-language-server/commit/bc14bb63f3fd7ad805c4a8ba8d737ee3cfce90fd", "message": "CommonModuleNameClientServerDiagnostic \u0437\u0430\u0433\u043e\u0442\u043e\u0432\u043a\u0430", "committedDate": "2020-04-27T06:30:51Z", "type": "commit"}, {"oid": "ba37830972f040080aa6242215d4fa1c3f6f1953", "url": "https://github.com/1c-syntax/bsl-language-server/commit/ba37830972f040080aa6242215d4fa1c3f6f1953", "message": "\u0443\u0437\u043e\u0440\u044b \u0432 \u0442\u0435\u0441\u0442\u0435", "committedDate": "2020-04-27T06:30:51Z", "type": "commit"}, {"oid": "5fc6de251d1d1a677ac82369162280be025d5871", "url": "https://github.com/1c-syntax/bsl-language-server/commit/5fc6de251d1d1a677ac82369162280be025d5871", "message": "\u043f\u043e\u043c\u0435\u043d\u044f\u043b\u043e\u0441\u044c \u0432\u0441\u0435", "committedDate": "2020-04-27T06:30:51Z", "type": "commit"}, {"oid": "5dbb27ed493451025f63e556e15525ebc7509a0b", "url": "https://github.com/1c-syntax/bsl-language-server/commit/5dbb27ed493451025f63e556e15525ebc7509a0b", "message": "test \u0438\u0437\u043c\u0435\u043d\u043d\u0435\u043d", "committedDate": "2020-04-27T06:30:51Z", "type": "commit"}, {"oid": "0a250d97a58923c1b7bf2f41759e15a70d7ef2a8", "url": "https://github.com/1c-syntax/bsl-language-server/commit/0a250d97a58923c1b7bf2f41759e15a70d7ef2a8", "message": "\u0440\u0435\u0441\u0443\u0440\u0441\u044b", "committedDate": "2020-04-27T06:30:51Z", "type": "commit"}, {"oid": "2a6cbe2ba211c5ec97ad9b8278817aa16c01766e", "url": "https://github.com/1c-syntax/bsl-language-server/commit/2a6cbe2ba211c5ec97ad9b8278817aa16c01766e", "message": "\u0434\u043e\u043a\u0430", "committedDate": "2020-04-27T06:30:51Z", "type": "commit"}, {"oid": "a13d9285cc499acd096dca8b80e0fb66916fc625", "url": "https://github.com/1c-syntax/bsl-language-server/commit/a13d9285cc499acd096dca8b80e0fb66916fc625", "message": "license add", "committedDate": "2020-04-27T06:30:51Z", "type": "commit"}, {"oid": "3b70c1b93f8492605e3b5557683639a303bc0afe", "url": "https://github.com/1c-syntax/bsl-language-server/commit/3b70c1b93f8492605e3b5557683639a303bc0afe", "message": "\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u043a\u0430 \u0438 \u0442\u0435\u0433\u0438", "committedDate": "2020-04-27T06:30:51Z", "type": "commit"}, {"oid": "2aea4e10a00633623c0769218d1b6ba28600e0e8", "url": "https://github.com/1c-syntax/bsl-language-server/commit/2aea4e10a00633623c0769218d1b6ba28600e0e8", "message": "precommit", "committedDate": "2020-04-27T06:30:51Z", "type": "commit"}, {"oid": "cc0b0ec7e9963417e0de286981ecbd0ebb83bf4f", "url": "https://github.com/1c-syntax/bsl-language-server/commit/cc0b0ec7e9963417e0de286981ecbd0ebb83bf4f", "message": "CommonModuleNameServerCallDiagnostic", "committedDate": "2020-04-27T06:30:51Z", "type": "commit"}, {"oid": "5ca7c57febb10902da5d6e26da14aa286a620536", "url": "https://github.com/1c-syntax/bsl-language-server/commit/5ca7c57febb10902da5d6e26da14aa286a620536", "message": "abstract common module", "committedDate": "2020-04-27T06:30:51Z", "type": "commit"}, {"oid": "5279aaf1db75a7b4e2d6c42c4fe3b71f32d589aa", "url": "https://github.com/1c-syntax/bsl-language-server/commit/5279aaf1db75a7b4e2d6c42c4fe3b71f32d589aa", "message": "precommit", "committedDate": "2020-04-27T06:31:15Z", "type": "commit"}, {"oid": "1346289815e0f7760ff8bce1cee225ed58f25938", "url": "https://github.com/1c-syntax/bsl-language-server/commit/1346289815e0f7760ff8bce1cee225ed58f25938", "message": "CommonModuleNameClientDiagnstic", "committedDate": "2020-04-27T06:31:26Z", "type": "commit"}, {"oid": "1f3c710db7215babeaa58ae59ca6ca4598637199", "url": "https://github.com/1c-syntax/bsl-language-server/commit/1f3c710db7215babeaa58ae59ca6ca4598637199", "message": "CommonModuleNameGlobalDiagnostic", "committedDate": "2020-04-27T06:31:46Z", "type": "commit"}, {"oid": "f9fd96083924b6ff986fa82842009a730be89757", "url": "https://github.com/1c-syntax/bsl-language-server/commit/f9fd96083924b6ff986fa82842009a730be89757", "message": "CommonModuleNameFullAccessDiagnostic", "committedDate": "2020-04-27T06:32:09Z", "type": "commit"}, {"oid": "2958098074abd213efdc02f2bcc426db14a902a4", "url": "https://github.com/1c-syntax/bsl-language-server/commit/2958098074abd213efdc02f2bcc426db14a902a4", "message": "CommonModuleNameCashedDiagnostic", "committedDate": "2020-04-27T06:32:09Z", "type": "commit"}, {"oid": "85a0f9ba3148b0592c6f73d3bb726c78a34bfc46", "url": "https://github.com/1c-syntax/bsl-language-server/commit/85a0f9ba3148b0592c6f73d3bb726c78a34bfc46", "message": "CommonModuleGlobalClientDiagnostic", "committedDate": "2020-04-27T06:32:09Z", "type": "commit"}, {"oid": "a4c9866724e012ba3d510d806c1c4a6ae8000a0b", "url": "https://github.com/1c-syntax/bsl-language-server/commit/a4c9866724e012ba3d510d806c1c4a6ae8000a0b", "message": "test empty file", "committedDate": "2020-04-27T06:32:09Z", "type": "commit"}, {"oid": "d54c5a72df2c04a175ae1c19797d9353e2eb5a7e", "url": "https://github.com/1c-syntax/bsl-language-server/commit/d54c5a72df2c04a175ae1c19797d9353e2eb5a7e", "message": "regexp fix", "committedDate": "2020-04-27T06:32:09Z", "type": "commit"}, {"oid": "8427d107835a78f5cba724057c4685fd56262574", "url": "https://github.com/1c-syntax/bsl-language-server/commit/8427d107835a78f5cba724057c4685fd56262574", "message": "precommit", "committedDate": "2020-04-27T06:32:09Z", "type": "commit"}, {"oid": "3c66ea93ae264e6f9aaee7f9c198008935642bbc", "url": "https://github.com/1c-syntax/bsl-language-server/commit/3c66ea93ae264e6f9aaee7f9c198008935642bbc", "message": "patter \u0432 super", "committedDate": "2020-04-27T06:32:09Z", "type": "commit"}, {"oid": "f0a71a1eaa649c15d8c26db6e49d32dd9af4c974", "url": "https://github.com/1c-syntax/bsl-language-server/commit/f0a71a1eaa649c15d8c26db6e49d32dd9af4c974", "message": "Metadata", "committedDate": "2020-04-27T06:32:09Z", "type": "commit"}, {"oid": "1376750a4daa7f36e4e9b3ade52d84820761ceed", "url": "https://github.com/1c-syntax/bsl-language-server/commit/1376750a4daa7f36e4e9b3ade52d84820761ceed", "message": "docs", "committedDate": "2020-04-27T06:32:09Z", "type": "commit"}, {"oid": "73635a7e3c67d28a68a8f39be2361923c1363223", "url": "https://github.com/1c-syntax/bsl-language-server/commit/73635a7e3c67d28a68a8f39be2361923c1363223", "message": "\u0421\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u043d\u043e\u0433\u043e\u0442\u0435\u0433\u043e\u0432", "committedDate": "2020-04-27T06:32:09Z", "type": "commit"}, {"oid": "8cc345d1e3507b35b14f7c4496f6fee4a5fdb0c2", "url": "https://github.com/1c-syntax/bsl-language-server/commit/8cc345d1e3507b35b14f7c4496f6fee4a5fdb0c2", "message": "precommit", "committedDate": "2020-04-27T06:32:32Z", "type": "commit"}, {"oid": "10c966a642cd36ca1895e04de6fb10a50df4e83c", "url": "https://github.com/1c-syntax/bsl-language-server/commit/10c966a642cd36ca1895e04de6fb10a50df4e83c", "message": "matches -> find", "committedDate": "2020-04-27T06:32:32Z", "type": "commit"}, {"oid": "12563b0f45b62458e7623bfb427215855d827013", "url": "https://github.com/1c-syntax/bsl-language-server/commit/12563b0f45b62458e7623bfb427215855d827013", "message": "\u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u043e\u043a\u0435\u043d \u0434\u0435\u0444\u0430\u0443\u043b\u0442 \u0447\u0435\u043d\u043d\u0435\u043b\u0430", "committedDate": "2020-04-27T06:32:32Z", "type": "commit"}, {"oid": "12563b0f45b62458e7623bfb427215855d827013", "url": "https://github.com/1c-syntax/bsl-language-server/commit/12563b0f45b62458e7623bfb427215855d827013", "message": "\u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u043e\u043a\u0435\u043d \u0434\u0435\u0444\u0430\u0443\u043b\u0442 \u0447\u0435\u043d\u043d\u0435\u043b\u0430", "committedDate": "2020-04-27T06:32:32Z", "type": "forcePushed"}, {"oid": "742092b54eadac6e8185ef2dee66cd60149a9e04", "url": "https://github.com/1c-syntax/bsl-language-server/commit/742092b54eadac6e8185ef2dee66cd60149a9e04", "message": "\u0422\u0435\u0441\u0442 \u043d\u0430 \u0444\u043f \u041a\u043b\u0438\u0435\u043d\u0442\u0427\u0435\u0433\u043e\u0422\u043e\u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439", "committedDate": "2020-04-27T11:04:22Z", "type": "commit"}, {"oid": "3d936d8606464bf8ebbe0cde125fb3ffb7641cbd", "url": "https://github.com/1c-syntax/bsl-language-server/commit/3d936d8606464bf8ebbe0cde125fb3ffb7641cbd", "message": "fp fix", "committedDate": "2020-04-27T14:36:57Z", "type": "commit"}, {"oid": "4efa4334c03a40bbc4bf5dd8bfd51fa82284c0b9", "url": "https://github.com/1c-syntax/bsl-language-server/commit/4efa4334c03a40bbc4bf5dd8bfd51fa82284c0b9", "message": "utils.CaseInsentivitesPatern", "committedDate": "2020-04-27T14:37:35Z", "type": "commit"}, {"oid": "58cf2407aa5467f408d077e43a8df92f1854daea", "url": "https://github.com/1c-syntax/bsl-language-server/commit/58cf2407aa5467f408d077e43a8df92f1854daea", "message": "tests", "committedDate": "2020-04-27T14:37:52Z", "type": "commit"}, {"oid": "7aa3a3b9f354f0e75b00be014e2dcd9fd2b26b80", "url": "https://github.com/1c-syntax/bsl-language-server/commit/7aa3a3b9f354f0e75b00be014e2dcd9fd2b26b80", "message": "precommit", "committedDate": "2020-04-27T14:38:27Z", "type": "commit"}]}