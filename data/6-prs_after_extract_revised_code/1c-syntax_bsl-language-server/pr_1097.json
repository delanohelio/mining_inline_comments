{"pr_number": 1097, "pr_title": "Feature/canceled standart interaction with automated testing tools", "pr_createdAt": "2020-04-20T19:36:27Z", "pr_url": "https://github.com/1c-syntax/bsl-language-server/pull/1097", "timeline": [{"oid": "592fe3920d5c16a7c7b39a03591c39dbb64d1671", "url": "https://github.com/1c-syntax/bsl-language-server/commit/592fe3920d5c16a7c7b39a03591c39dbb64d1671", "message": "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u044b", "committedDate": "2020-04-20T19:27:02Z", "type": "commit"}, {"oid": "75e42ea3c5d0636affb4cc383dcf97ba9ae83e3c", "url": "https://github.com/1c-syntax/bsl-language-server/commit/75e42ea3c5d0636affb4cc383dcf97ba9ae83e3c", "message": "docs", "committedDate": "2020-04-20T19:27:02Z", "type": "commit"}, {"oid": "5a45929e363cb8db2987b6c3f7bbf69daef13135", "url": "https://github.com/1c-syntax/bsl-language-server/commit/5a45929e363cb8db2987b6c3f7bbf69daef13135", "message": "precommit", "committedDate": "2020-04-20T19:31:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk0NTgwNQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r411945805", "bodyText": "@qtLex \u044f \u0431\u044b \u0435\u0449\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u0444\u0438\u043b\u044c\u0442\u0440 t.getChannel() != Lexer.HIDDEN \u0434\u043b\u044f \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f.\n\u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0435 \u043d\u0443\u0436\u043d\u044b \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0438\u0436\u0435 \u043d\u0430 \u043f\u0440\u043e\u0431\u0435\u043b\u044b \u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438", "author": "artbear", "createdAt": "2020-04-21T07:37:13Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.regex.Pattern;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MINOR,\n+  minutesToFix = 1,\n+  modules = {\n+    ModuleType.FormModule,\n+    ModuleType.ObjectModule,\n+    ModuleType.RecordSetModule,\n+    ModuleType.CommonModule\n+  },\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.DEPRECATED\n+  }\n+)\n+public class ExcessiveAutoTestCheckDiagnostic extends AbstractVisitorDiagnostic {\n+\n+  private static final Pattern ERROR_EXPRESSION = Pattern.compile(\n+    \"(\\\\.\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e\\\\(\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"\\\\)|=\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"|\\\\.Property\\\\(\\\"AutoTest\\\"\\\\)|=\\\"AutoTest\\\")$\",\n+    Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n+  );\n+\n+  public ExcessiveAutoTestCheckDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public ParseTree visitIfBranch(BSLParser.IfBranchContext ctx) {\n+\n+    if (expressionMatchesPattern(ctx.expression()) && codeBlockWithOnlyReturn(ctx.codeBlock())) {\n+      diagnosticStorage.addDiagnostic((BSLParser.IfStatementContext) ctx.getParent());\n+      return ctx;\n+    }\n+\n+    return super.visitIfBranch(ctx);\n+  }\n+\n+  private boolean expressionMatchesPattern(BSLParser.ExpressionContext expression) {\n+    return ERROR_EXPRESSION.matcher(expression.getText()).find();\n+  }\n+\n+  private boolean codeBlockWithOnlyReturn(BSLParser.CodeBlockContext codeBlock) {\n+    return codeBlock\n+      .getTokens()\n+      .stream()\n+      .map(t -> t.getType())", "originalCommit": "5a45929e363cb8db2987b6c3f7bbf69daef13135", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk1ODQ1Mw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r411958453", "bodyText": "t.getChannel() != Lexer.HIDDEN \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0435\u0441\u0442\u044c getTokensFromDefaultChannel", "author": "asosnoviy", "createdAt": "2020-04-21T07:55:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk0NTgwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk5NDQ1Ng==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r411994456", "bodyText": "BSLParserRuleContext#getTokens \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u043a\u0435\u043d\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0433\u043e \u043a\u0430\u043d\u0430\u043b\u0430", "author": "nixel2007", "createdAt": "2020-04-21T08:46:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk0NTgwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwMDQxNA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412000414", "bodyText": "\u0443\u0433\u0443, \u044f \u0442\u0443\u043f\u043e\u0439, \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u043b \u043e\u0442\u043a\u0443\u0434\u0430 \u0434\u0435\u0440\u0433\u0430\u0435\u0442\u0441\u044f =(", "author": "asosnoviy", "createdAt": "2020-04-21T08:53:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk0NTgwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAzMzAxNA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412033014", "bodyText": "BSLParserRuleContext#getTokens \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u043a\u0435\u043d\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0433\u043e \u043a\u0430\u043d\u0430\u043b\u0430\n\n\u0422\u043e\u0433\u0434\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u044b \u043d\u0430 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u044b \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u044c\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u043d\u0443\u0436\u043d\u044b, \u0432\u0435\u0440\u043d\u043e?\n\u0437\u043d\u0430\u0447\u0438\u0442, \u044d\u0442\u0438 \u0444\u0438\u043b\u044c\u0442\u0440\u044b \u043d\u0443\u0436\u043d\u043e \u0443\u0431\u0440\u0430\u0442\u044c.", "author": "artbear", "createdAt": "2020-04-21T09:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk0NTgwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA0MzMwMQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412043301", "bodyText": "\u0414\u0430. \u041e\u043d\u0438 \u0442\u0430\u043c \u043b\u0438\u0448\u043d\u0438\u0435.", "author": "qtLex", "createdAt": "2020-04-21T09:53:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk0NTgwNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MTY2Ng==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412051666", "bodyText": "\u0435\u0449\u0435 \u044f \u0441\u0447\u0438\u0442\u0430\u044e \u0438\u0437\u043b\u0438\u0448\u043d\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0442\u043e\u043a\u0435\u043d\u043e\u0432, \u0430 \u043f\u043e\u0442\u043e\u043c \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f, \u043a\u0430\u043a \u0432 \u043a\u043e\u0434\u0435.\n\u0431\u043b\u043e\u043a\u0438 \u043a\u043e\u0434\u0430 \u0432\u043d\u0443\u0442\u0440\u0438 \u0415\u0441\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438\\\u043e\u0433\u0440\u043e\u043c\u043d\u044b\u043c\u0438 \u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0442\u043e\u043a\u0435\u043d\u043e\u0432, \u0430 \u043f\u043e\u0442\u043e\u043c \u0432\u044b\u0431\u043e\u0440\u043a\u0430 \u043e\u0434\u043d\u043e\u0433\u043e \u0438\u0437 \u043d\u0438\u0445 \u043d\u0435\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e.\n\u0444\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435, \u043a\u0430\u043a \u043d\u0430 \u0441\u043a\u0440\u0438\u043d\u0448\u043e\u0442\u0435.\n\n\u044f \u0432 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u043c \u043a\u043e\u0434\u0435 \u0441\u0442\u0430\u0440\u0430\u043b\u0441\u044f (\u0438 \u0441\u0432\u043e\u0438\u0445 \u043f\u0430\u0434\u0430\u0432\u0430\u043d\u043e\u0432 \u0443\u0447\u0438\u043b) \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \"\u043e\u043f\u0430\u0441\u043d\u044b\u0445\" \u043c\u0435\u0442\u043e\u0434\u043e\u0432 (getTokens\\getText) \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0434\u0435\u0440\u0435\u0432\u0430.\n\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c\n\n\u0447\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u0442\u043e\u043c\u043a\u043e\u0432 \u0440\u0430\u0432\u043d\u043e 2\n\u043f\u0435\u0440\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043c\u043e\u043a \u0438\u043c\u0435\u0435\u0442 \u0442\u0438\u043f RETURN_KEYWORD\n\u0430 2\u0439 - \u0442\u0438\u043f SEMICOLON", "author": "artbear", "createdAt": "2020-04-21T10:06:14Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.regex.Pattern;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MINOR,\n+  minutesToFix = 1,\n+  modules = {\n+    ModuleType.FormModule,\n+    ModuleType.ObjectModule,\n+    ModuleType.RecordSetModule,\n+    ModuleType.CommonModule\n+  },\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.DEPRECATED\n+  }\n+)\n+public class ExcessiveAutoTestCheckDiagnostic extends AbstractVisitorDiagnostic {\n+\n+  private static final Pattern ERROR_EXPRESSION = Pattern.compile(\n+    \"(\\\\.\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e\\\\(\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"\\\\)|=\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"|\\\\.Property\\\\(\\\"AutoTest\\\"\\\\)|=\\\"AutoTest\\\")$\",\n+    Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n+  );\n+\n+  public ExcessiveAutoTestCheckDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public ParseTree visitIfBranch(BSLParser.IfBranchContext ctx) {\n+\n+    if (expressionMatchesPattern(ctx.expression()) && codeBlockWithOnlyReturn(ctx.codeBlock())) {\n+      diagnosticStorage.addDiagnostic((BSLParser.IfStatementContext) ctx.getParent());\n+      return ctx;\n+    }\n+\n+    return super.visitIfBranch(ctx);\n+  }\n+\n+  private boolean expressionMatchesPattern(BSLParser.ExpressionContext expression) {\n+    return ERROR_EXPRESSION.matcher(expression.getText()).find();\n+  }\n+\n+  private boolean codeBlockWithOnlyReturn(BSLParser.CodeBlockContext codeBlock) {\n+    return codeBlock\n+      .getTokens()", "originalCommit": "5a45929e363cb8db2987b6c3f7bbf69daef13135", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MjcwNA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412052704", "bodyText": "\u0432 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u0445 1\u0421 - \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0438\u043b\u043b\u0438\u043e\u043d \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0430 \u043f\u043e\u0442\u043e\u043c \u043a\u043e\u0434\u043e\u043c \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u0442\u044c \u0434\u0435\u0441\u044f\u0442\u043e\u043a )", "author": "artbear", "createdAt": "2020-04-21T10:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MTY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjExNTAxNA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412115014", "bodyText": "\u0421\u043f\u0430\u0441\u0438\u0431\u043e, \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u044e, \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0442\u0430\u043a \u0431\u0443\u0434\u0435\u0442 \u043b\u0443\u0447\u0448\u0435.\n\u0422\u043e\u043b\u044c\u043a\u043e \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u044f \u0441\u043a\u043e\u0440\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u043d\u0430 \u0441\u043f\u0438\u0447\u043a\u0430\u0445 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f. \u0422\u0430\u043a \u043a\u0430\u043a \u044d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0438 98% \u0432\u0435\u0442\u043e\u043a \"\u0415\u0441\u043b\u0438\" \u043e\u0442\u0432\u0430\u043b\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u0438 \u0432\u0440\u044f\u0434 \u043b\u0438 \u044d\u0442\u0430 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043d\u043e\u0439 \u043f\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438.\n\u0410 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u043c\u043d\u0435 \u043a\u0430\u0436\u0435\u0442\u0441\u044f \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u043d\u0435 \u0432\u0435\u0440\u043d\u0430\u044f. \u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u0435\u0441\u0442\u044c \u0441\u043f\u043e\u0441\u043e\u0431 \u043e\u0442\u043e\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445. \u0410 \u0442\u0443\u0442 \u0440\u0430\u0431\u043e\u0442\u0430 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0441 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0435\u0439.", "author": "qtLex", "createdAt": "2020-04-21T11:49:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MTY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEyNDY0NQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412124645", "bodyText": "\u0410 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u043c\u043d\u0435 \u043a\u0430\u0436\u0435\u0442\u0441\u044f \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u043d\u0435 \u0432\u0435\u0440\u043d\u0430\u044f. \u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u0435\u0441\u0442\u044c \u0441\u043f\u043e\u0441\u043e\u0431 \u043e\u0442\u043e\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445. \u0410 \u0442\u0443\u0442 \u0440\u0430\u0431\u043e\u0442\u0430 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0441 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0435\u0439.\n\n\u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c. getTokens() - \u044d\u0442\u043e \u043b\u0435\u043d\u0438\u0432\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0430\u0433\u0433\u0440\u0435\u0433\u0430\u0442\u043e\u0440. \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e BSLParserRuleContext \u043d\u0435 \u0445\u0440\u0430\u043d\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u0432 \u0443\u0437\u043b\u0435, \u043e\u043d \u0445\u0440\u0430\u043d\u0438\u0442 \u0434\u0435\u0440\u0435\u0432\u043e \u0434\u0435\u0442\u0435\u0439. \u0430 \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u044d\u0442\u043e \u0434\u0435\u0440\u0435\u0432\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u0434\u043e \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0445 \u0443\u0437\u043b\u043e\u0432 \u0438 \u0432\u044b\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u043f\u043b\u043e\u0441\u043a\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a.", "author": "nixel2007", "createdAt": "2020-04-21T12:04:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MTY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEzNTkyMg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412135922", "bodyText": "\u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c. getTokens() - \u044d\u0442\u043e \u043b\u0435\u043d\u0438\u0432\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0430\u0433\u0433\u0440\u0435\u0433\u0430\u0442\u043e\u0440. \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e BSLParserRuleContext \u043d\u0435 \u0445\u0440\u0430\u043d\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a > > \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u0432 \u0443\u0437\u043b\u0435, \u043e\u043d \u0445\u0440\u0430\u043d\u0438\u0442 \u0434\u0435\u0440\u0435\u0432\u043e \u0434\u0435\u0442\u0435\u0439. \u0430 \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u044d\u0442\u043e \u0434\u0435\u0440\u0435\u0432\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u0434\u043e \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0445 \u0443\u0437\u043b\u043e\u0432 \u0438 \u0432\u044b\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u043f\u043b\u043e\u0441\u043a\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a.\n\n\u042d\u0442\u043e \u043f\u043e\u043d\u044f\u0442\u043d\u043e. \u042f \u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u043b. \u0418 \u043d\u0435 \u0441\u043f\u043e\u0440\u044e, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u0430\u043b \u043d\u0435 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431.\n\u041c\u0435\u043d\u044f \u0441\u043c\u0443\u0449\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u044f \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c. \u0412 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u0445 1\u0421 \u044d\u0442\u043e \u0440\u0430\u0437\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u043d\u0438\u0435 \u0414\u0435\u0440\u0435\u0432\u0430\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u041c\u0430\u0441\u0441\u0438\u0432.  \u041a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u044b\u043c \u043e\u0431\u0445\u043e\u0434\u043e\u043c \u0434\u0435\u0440\u0435\u0432\u0430.", "author": "qtLex", "createdAt": "2020-04-21T12:22:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MTY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0MjM5MA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412142390", "bodyText": "\u044f \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0441\u043e\u0432\u0441\u0435\u043c \u0443\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043b, \u0434\u0430 ) \u0442\u0443\u0442 \u043f\u043e\u0441\u043b\u043e\u0436\u043d\u0435\u0435, \u043a\u043e\u043d\u0435\u0447\u043d\u043e.", "author": "artbear", "createdAt": "2020-04-21T12:31:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MTY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0NTA0Ng==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412145046", "bodyText": "\u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c. getTokens() - \u044d\u0442\u043e \u043b\u0435\u043d\u0438\u0432\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0430\u0433\u0433\u0440\u0435\u0433\u0430\u0442\u043e\u0440. \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e BSLParserRuleContext \u043d\u0435 \u0445\u0440\u0430\u043d\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u0432 \u0443\u0437\u043b\u0435, \u043e\u043d \u0445\u0440\u0430\u043d\u0438\u0442 \u0434\u0435\u0440\u0435\u0432\u043e \u0434\u0435\u0442\u0435\u0439. \u0430 \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u044d\u0442\u043e \u0434\u0435\u0440\u0435\u0432\u043e \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u0434\u043e \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0445 \u0443\u0437\u043b\u043e\u0432 \u0438 \u0432\u044b\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u043f\u043b\u043e\u0441\u043a\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a.\n\n@nixel2007 @qtLex \u043f\u043e\u0433\u043e\u0434\u0438, \u043e\u043d \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043b\u0435\u043d\u0438\u0432\u044b\u043c \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043d\u044f\u0442\u0438\u044f \u043c\u043e\u0435\u0433\u043e \u041f\u0420 \u043d\u0430 \u044d\u0442\u0443 \u0442\u0435\u043c\u0443 \u0432 \u0431\u0441\u043b-\u043f\u0430\u0440\u0441\u0435\u0440\u0435\n\u0441\u0435\u0439\u0447\u0430\u0441-\u0442\u043e \u043e\u043d \u043d\u0435 \u043b\u0435\u043d\u0438\u0432\u044b\u0439, \u0430 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e \u043f\u0435\u0440\u0435\u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0439.\n\u0434\u0430 \u0438 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043d\u044f\u0442\u0438\u044f \"\u043b\u0435\u043d\u0438\u0432\u043e\u0433\u043e\" \u041f\u0420 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0435\u0433\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0432\u0441\u0435 \u0440\u0430\u0432\u043d\u043e \u043d\u0443\u0436\u043d\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c.\n\u0434\u043b\u044f \u043c\u0435\u043b\u043a\u0438\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 (\u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0415\u0441\u043b\u0438, \u0418\u043d\u0430\u0447\u0435\u0415\u0441\u043b\u0438, \u0446\u0438\u043a\u043b\u043e\u0432 \u0438 \u0442.\u043f.) \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0438 \u043e\u0442\u0431\u0440\u043e\u0441\u0438\u0442\u044c.\n\u0430 \u0432\u043e\u0442 \u0434\u043b\u044f \u0431\u043b\u043e\u043a\u043e\u0432 \u043a\u043e\u0434\u0430 (\u043a\u043e\u043c\u043f\u0430\u0443\u043d\u0434\u044b) \u0438 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0446\u0435\u0434\u0443\u0440, \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u0443\u0436\u0435 \u043d\u0443\u0436\u043d\u043e \u0438\u0437\u0443\u0447\u0430\u0442\u044c \u0432\u043d\u0438\u043c\u0430\u0442\u0435\u043b\u044c\u043d\u0435\u0435.\n\u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0443\u0436 \u043d\u0435\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f.", "author": "artbear", "createdAt": "2020-04-21T12:35:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MTY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0NzMzNw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412147337", "bodyText": "\u0418 \u043d\u0435 \u0441\u043f\u043e\u0440\u044e, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u0430\u043b \u043d\u0435 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431.\n\n@qtLex \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u0430\u043a \u044f \u0432\u044b\u0448\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u043b?", "author": "artbear", "createdAt": "2020-04-21T12:38:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MTY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE1OTYyMQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412159621", "bodyText": "@artbear \u0442\u044b \u0447\u0442\u043e \u043f\u0440\u0438\u0441\u0442\u0430\u043b \u043a \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0443? \u041f\u043e\u0441\u043a\u0440\u043e\u043c\u043d\u0435\u0435 \u043f\u043b\u0437.", "author": "asosnoviy", "createdAt": "2020-04-21T12:55:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MTY2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE2OTA5Nw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412169097", "bodyText": "\u0421\u043f\u0430\u0441\u0438\u0431\u043e, \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u044e, \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0442\u0430\u043a \u0431\u0443\u0434\u0435\u0442 \u043b\u0443\u0447\u0448\u0435.\n\n@artbear", "author": "qtLex", "createdAt": "2020-04-21T13:08:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1MTY2Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE3NDYzNw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1097#discussion_r412174637", "bodyText": "@qtLex \u043d\u0438\u0436\u0435 \u044f \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u043b \u0442\u0432\u043e\u0439 \u043e\u0442\u0432\u0435\u0442, \u0447\u0442\u043e \u0442\u044b \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u0448\u044c. \u0418\u0437\u0432\u0438\u043d\u0438.\n\n\u0422\u0430\u043a \u043a\u0430\u043a \u044d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0438 98% \u0432\u0435\u0442\u043e\u043a \"\u0415\u0441\u043b\u0438\" \u043e\u0442\u0432\u0430\u043b\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u0438 \u0432\u0440\u044f\u0434 \u043b\u0438 \u044d\u0442\u0430 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043d\u043e\u0439 \u043f\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438.\n\n\u0447\u0442\u043e\u0431\u044b \u0432\u043e\u043f\u0440\u043e\u0441 \u0437\u0430\u043a\u0440\u044b\u0442\u044c.\n\u043a getText \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0435\u0441\u0442\u044c - \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u0442\u043e\u0440\u043c\u043e\u0437, \u043a\u0430\u043a \u0438 getTokens.\n\u044f \u0432 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u043c \u043a\u043e\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u043b \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u043f\u043e\u0442\u043e\u043c\u043a\u043e\u0432 (\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438 \u0442\u0438\u043f \u043d\u0443\u0436\u043d\u044b\u0445 \u043f\u043e\u0442\u043e\u043c\u043a\u043e\u0432)\n\u0430 \u0443\u0436 \u043f\u043e\u0442\u043e\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u043b \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0443 \u043d\u0443\u0436\u043d\u043e\u0433\u043e \u043f\u043e\u0442\u043e\u043c\u043a\u0430 )", "author": "artbear", "createdAt": "2020-04-21T13:16:14Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExcessiveAutoTestCheckDiagnostic.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.regex.Pattern;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MINOR,\n+  minutesToFix = 1,\n+  modules = {\n+    ModuleType.FormModule,\n+    ModuleType.ObjectModule,\n+    ModuleType.RecordSetModule,\n+    ModuleType.CommonModule\n+  },\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.DEPRECATED\n+  }\n+)\n+public class ExcessiveAutoTestCheckDiagnostic extends AbstractVisitorDiagnostic {\n+\n+  private static final Pattern ERROR_EXPRESSION = Pattern.compile(\n+    \"(\\\\.\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e\\\\(\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"\\\\)|=\\\"\u0410\u0432\u0442\u043e\u0422\u0435\u0441\u0442\\\"|\\\\.Property\\\\(\\\"AutoTest\\\"\\\\)|=\\\"AutoTest\\\")$\",\n+    Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n+  );\n+\n+  public ExcessiveAutoTestCheckDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public ParseTree visitIfBranch(BSLParser.IfBranchContext ctx) {\n+\n+    if (expressionMatchesPattern(ctx.expression()) && codeBlockWithOnlyReturn(ctx.codeBlock())) {\n+      diagnosticStorage.addDiagnostic((BSLParser.IfStatementContext) ctx.getParent());\n+      return ctx;\n+    }\n+\n+    return super.visitIfBranch(ctx);\n+  }\n+\n+  private boolean expressionMatchesPattern(BSLParser.ExpressionContext expression) {\n+    return ERROR_EXPRESSION.matcher(expression.getText()).find();", "originalCommit": "5a45929e363cb8db2987b6c3f7bbf69daef13135", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}