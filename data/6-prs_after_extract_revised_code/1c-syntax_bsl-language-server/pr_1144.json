{"pr_number": 1144, "pr_title": "\u041d\u043e\u0432\u0430\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430: \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0438\u0435 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b 8.3.17", "pr_createdAt": "2020-04-29T13:13:03Z", "pr_url": "https://github.com/1c-syntax/bsl-language-server/pull/1144", "timeline": [{"oid": "de3ce698839704f888c104f41dc385e62f9f73d1", "url": "https://github.com/1c-syntax/bsl-language-server/commit/de3ce698839704f888c104f41dc385e62f9f73d1", "message": "\u041d\u043e\u0432\u0430\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430: (8.3.17+) \u0423\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0438\u0435 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b", "committedDate": "2020-04-29T12:11:47Z", "type": "commit"}, {"oid": "cf379725c8d065cb5dbb9c2cfe0db8a416149439", "url": "https://github.com/1c-syntax/bsl-language-server/commit/cf379725c8d065cb5dbb9c2cfe0db8a416149439", "message": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b \u0442\u0435\u0441\u0442\u044b. \u0418\u0437\u0431\u0430\u0432\u0438\u043b\u0441\u044f \u043e\u0442 AbstractFind \u043a\u043b\u0430\u0441\u0441, \u0442\u0430\u043a \u043a\u0430\u043a \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u043e\u043a\u0438\u0434\u044b\u0432\u0430\u0442\u044c \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0432 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435", "committedDate": "2020-04-29T12:43:55Z", "type": "commit"}, {"oid": "b75d8d273445ad2fd5fa3ff3342c286386b8524e", "url": "https://github.com/1c-syntax/bsl-language-server/commit/b75d8d273445ad2fd5fa3ff3342c286386b8524e", "message": "precommit", "committedDate": "2020-04-29T13:09:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4NDc2MA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1144#discussion_r417384760", "bodyText": "@EightM \u0430 \u043f\u043e\u0447\u0435\u043c\u0443 \u0431\u044b \u043d\u0435 \u043d\u0430 \u0431\u0430\u0437\u0435 \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u043d\u0430 \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b?", "author": "nixel2007", "createdAt": "2020-04-29T15:00:04Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedMethods8317Diagnostic.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticCompatibilityMode;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.regex.Pattern;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.INFO,\n+  compatibilityMode = DiagnosticCompatibilityMode.COMPATIBILITY_MODE_8_3_17,\n+  scope = DiagnosticScope.BSL,\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.DEPRECATED\n+  }\n+\n+)\n+public class DeprecatedMethods8317Diagnostic extends AbstractVisitorDiagnostic {", "originalCommit": "b75d8d273445ad2fd5fa3ff3342c286386b8524e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4NTkzNg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1144#discussion_r417385936", "bodyText": "@nixel2007 \u043e\u043d \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f", "author": "EightM", "createdAt": "2020-04-29T15:01:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4NDc2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM5MjQzMg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1144#discussion_r417392432", "bodyText": "\u0430 \u0434\u0430\u0432\u0430\u0439 \u0434\u043e\u0431\u0430\u0432\u0438\u043c\u2026\nprotected String getMessage(BSLParserRuleContext ctx) {\n    return info.getMessage();\n}\n\u0430 \u0432 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0435 \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0435\u0433\u043e \u0437\u0430\u043e\u0432\u0435\u0440\u0440\u0430\u0439\u0434\u0438\u0442\u044c?\n\u0418 \u0442\u043e\u0433\u0434\u0430 \u0432 visitGlobalMethodCall \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430\ndiagnosticStorage.addDiagnostic(ctx.methodName()); \n\u0437\u0430\u043c\u0435\u043d\u0438\u0442\u0441\u044f \u043d\u0430\ndiagnosticStorage.addDiagnostic(ctx.methodName(), getMessage());", "author": "nixel2007", "createdAt": "2020-04-29T15:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4NDc2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM5NjA0Mw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1144#discussion_r417396043", "bodyText": "@nixel2007 \u0425\u043e\u0440\u043e\u0448\u043e, \u0434\u043e\u0431\u0430\u0432\u043b\u044e", "author": "EightM", "createdAt": "2020-04-29T15:15:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4NDc2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg2MjUzMw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1144#discussion_r417862533", "bodyText": "@nixel2007 \u0433\u043e\u0442\u043e\u0432\u043e", "author": "EightM", "createdAt": "2020-04-30T09:02:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM4NDc2MA=="}], "type": "inlineReview", "revised_code": {"commit": "f2004a9df109e885bed984c8d156c8743f3132f5", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedMethods8317Diagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedMethods8317Diagnostic.java\nindex f1657a62c..098a93f28 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedMethods8317Diagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DeprecatedMethods8317Diagnostic.java\n\n@@ -29,7 +29,7 @@ import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticS\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n import com.github._1c_syntax.bsl.parser.BSLParser;\n-import org.antlr.v4.runtime.tree.ParseTree;\n+import com.github._1c_syntax.bsl.parser.BSLParserRuleContext;\n \n import java.util.regex.Pattern;\n \n"}}, {"oid": "be49bbba8f4a7549a8adce59f28a989321dc3776", "url": "https://github.com/1c-syntax/bsl-language-server/commit/be49bbba8f4a7549a8adce59f28a989321dc3776", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into feature/DeprecatedMethods8317\n\n\u0001 Conflicts:\n\u0001\tdocs/diagnostics/index.md\n\u0001\tdocs/en/diagnostics/index.md", "committedDate": "2020-04-30T08:49:25Z", "type": "commit"}, {"oid": "f2004a9df109e885bed984c8d156c8743f3132f5", "url": "https://github.com/1c-syntax/bsl-language-server/commit/f2004a9df109e885bed984c8d156c8743f3132f5", "message": "1. \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u0437 develop\n2. \u0417\u0430\u043c\u0435\u043d\u0430 \u043d\u0430 AbstractFindMethod\n3. \u0414\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0430 AbstractFindMethod - \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e \u043f\u0440\u043e\u043a\u0438\u0434\u044b\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439\n4. precommit", "committedDate": "2020-04-30T09:01:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5NjgzMQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1144#discussion_r417896831", "bodyText": "\u0415\u0441\u043b\u0438 \u0442\u0443\u0442 \u0431\u0443\u0434\u0443\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u0437\u043d\u0430\u0447\u0438\u0442, \u043c\u044b \u043e\u0431\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0432\u0441\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0438\u043c\u0435\u0435\u0442 \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u043e\u0434\u0438\u043d \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0432 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0438. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u044f \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u043b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0432\u044b\u0437\u043e\u0432 \u0431\u0435\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430. \u0423?", "author": "nixel2007", "createdAt": "2020-04-30T10:01:30Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java", "diffHunk": "@@ -48,11 +49,15 @@ protected boolean checkMethodCall(BSLParser.MethodCallContext ctx) {\n     return getMethodPattern().matcher(ctx.methodName().getText()).matches();\n   }\n \n+  protected String getMessage(BSLParserRuleContext ctx) {", "originalCommit": "f2004a9df109e885bed984c8d156c8743f3132f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f7f965bdf393a21e63a31a7fd496dbf788f7e153", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java\nindex 9ddd8530f..05a534060 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java\n\n@@ -30,29 +30,74 @@ import org.antlr.v4.runtime.tree.ParseTree;\n \n import java.util.regex.Pattern;\n \n+/**\n+ * \u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u0430\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0432\u044b\u0437\u043e\u0432\u0430 \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0438 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430\n+ * \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f.\n+ * {@code AbstractFindMethodDiagnostic} \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0434\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u044b\u0437\u043e\u0432\u043e\u0432 \u0438 \u043e\u0434\u0438\u043d\n+ * \u043c\u0435\u0442\u043e\u0434 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e.\n+ * \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0438\u043c\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e.\n+ * <b>\u0412\u0430\u0436\u043d\u043e:</b> \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f {@code getMessage} \u043f\u043e\u0434\u0440\u0430\u0437\u0443\u043c\u0435\u0432\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0435\u0440\u0432\u044b\u043c\n+ * \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e <b>\u0432\u0441\u0435\u0433\u0434\u0430</b> \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u044f \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430.\n+ */\n public abstract class AbstractFindMethodDiagnostic extends AbstractVisitorDiagnostic {\n \n   @Getter\n   @Setter\n   private Pattern methodPattern;\n \n+  /**\n+   * \u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n+   * @param info \u0441\u043b\u0443\u0436\u0435\u0431\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0435\n+   * @param pattern \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\n+   */\n   AbstractFindMethodDiagnostic(DiagnosticInfo info, Pattern pattern) {\n     super(info);\n     methodPattern = pattern;\n   }\n \n+  /**\n+   * \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @return {@code true} \u0435\u0441\u043b\u0438 \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e\n+   */\n   protected boolean checkGlobalMethodCall(BSLParser.GlobalMethodCallContext ctx) {\n     return getMethodPattern().matcher(ctx.methodName().getText()).matches();\n   }\n \n+  /**\n+   * \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @return {@code true} \u0435\u0441\u043b\u0438 \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e\n+   */\n   protected boolean checkMethodCall(BSLParser.MethodCallContext ctx) {\n     return getMethodPattern().matcher(ctx.methodName().getText()).matches();\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0443\u0437\u043b\u0430\n+   * @return \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u043c\u0435\u0442\u043e\u0434\u0430, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435,\n+   * \u043f\u0435\u0440\u0432\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e <b>\u0432\u0441\u0435\u0433\u0434\u0430</b> \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430.\n+   * \u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u044b\u0447\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0431\u0435\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432.\n+   */\n   protected String getMessage(BSLParserRuleContext ctx) {\n-    return info.getMessage(ctx.getText());\n+\n+    if (ctx instanceof BSLParser.GlobalMethodCallContext) {\n+      return info.getMessage(((BSLParser.GlobalMethodCallContext) ctx).methodName().getText());\n+    } else if (ctx instanceof BSLParser.MethodCallContext) {\n+      return info.getMessage(((BSLParser.MethodCallContext) ctx).methodName().getText());\n+    } else {\n+      return info.getMessage();\n+    }\n+\n   }\n \n+  /**\n+   * \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0443\u0437\u043b\u0430 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0432\u0448\u0435\u0439 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0435\n+   * \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 {@code true}\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0433\u043b\u043e\u043c\u0430\u0431\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @return \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u044f \u043d\u043e\u0434\u044b \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.\n+   */\n   @Override\n   public ParseTree visitGlobalMethodCall(BSLParser.GlobalMethodCallContext ctx) {\n \n"}}, {"oid": "1ef57ed71dd98f658e941504d41b5ee263bc6367", "url": "https://github.com/1c-syntax/bsl-language-server/commit/1ef57ed71dd98f658e941504d41b5ee263bc6367", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into feature/DeprecatedMethods8317", "committedDate": "2020-05-03T11:34:18Z", "type": "commit"}, {"oid": "f7f965bdf393a21e63a31a7fd496dbf788f7e153", "url": "https://github.com/1c-syntax/bsl-language-server/commit/f7f965bdf393a21e63a31a7fd496dbf788f7e153", "message": "1. \u0414\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0430 AbstractFindMethodDiagnostic\n2. \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d javadoc \u0434\u043b\u044f AbstractFindMethodDiagnostic", "committedDate": "2020-05-03T11:42:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NjI2MA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1144#discussion_r419096260", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0433\u043b\u043e\u043c\u0430\u0431\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n          \n          \n            \n               * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430", "author": "nixel2007", "createdAt": "2020-05-03T12:24:46Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java", "diffHunk": "@@ -30,29 +30,74 @@\n \n import java.util.regex.Pattern;\n \n+/**\n+ * \u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u0430\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0432\u044b\u0437\u043e\u0432\u0430 \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0438 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430\n+ * \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f.\n+ * {@code AbstractFindMethodDiagnostic} \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0434\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u044b\u0437\u043e\u0432\u043e\u0432 \u0438 \u043e\u0434\u0438\u043d\n+ * \u043c\u0435\u0442\u043e\u0434 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e.\n+ * \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0438\u043c\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e.\n+ * <b>\u0412\u0430\u0436\u043d\u043e:</b> \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f {@code getMessage} \u043f\u043e\u0434\u0440\u0430\u0437\u0443\u043c\u0435\u0432\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0435\u0440\u0432\u044b\u043c\n+ * \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e <b>\u0432\u0441\u0435\u0433\u0434\u0430</b> \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u044f \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430.\n+ */\n public abstract class AbstractFindMethodDiagnostic extends AbstractVisitorDiagnostic {\n \n   @Getter\n   @Setter\n   private Pattern methodPattern;\n \n+  /**\n+   * \u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n+   * @param info \u0441\u043b\u0443\u0436\u0435\u0431\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0435\n+   * @param pattern \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\n+   */\n   AbstractFindMethodDiagnostic(DiagnosticInfo info, Pattern pattern) {\n     super(info);\n     methodPattern = pattern;\n   }\n \n+  /**\n+   * \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @return {@code true} \u0435\u0441\u043b\u0438 \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e\n+   */\n   protected boolean checkGlobalMethodCall(BSLParser.GlobalMethodCallContext ctx) {\n     return getMethodPattern().matcher(ctx.methodName().getText()).matches();\n   }\n \n+  /**\n+   * \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @return {@code true} \u0435\u0441\u043b\u0438 \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e\n+   */\n   protected boolean checkMethodCall(BSLParser.MethodCallContext ctx) {\n     return getMethodPattern().matcher(ctx.methodName().getText()).matches();\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0443\u0437\u043b\u0430\n+   * @return \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u043c\u0435\u0442\u043e\u0434\u0430, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435,\n+   * \u043f\u0435\u0440\u0432\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e <b>\u0432\u0441\u0435\u0433\u0434\u0430</b> \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430.\n+   * \u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u044b\u0447\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0431\u0435\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432.\n+   */\n   protected String getMessage(BSLParserRuleContext ctx) {\n-    return info.getMessage(ctx.getText());\n+\n+    if (ctx instanceof BSLParser.GlobalMethodCallContext) {\n+      return info.getMessage(((BSLParser.GlobalMethodCallContext) ctx).methodName().getText());\n+    } else if (ctx instanceof BSLParser.MethodCallContext) {\n+      return info.getMessage(((BSLParser.MethodCallContext) ctx).methodName().getText());\n+    } else {\n+      return info.getMessage();\n+    }\n+\n   }\n \n+  /**\n+   * \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0443\u0437\u043b\u0430 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0432\u0448\u0435\u0439 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0435\n+   * \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 {@code true}\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0433\u043b\u043e\u043c\u0430\u0431\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430", "originalCommit": "f7f965bdf393a21e63a31a7fd496dbf788f7e153", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5ODg2NQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1144#discussion_r419098865", "bodyText": "@nixel2007 \u0433\u043e\u0442\u043e\u0432\u043e", "author": "EightM", "createdAt": "2020-05-03T12:46:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NjI2MA=="}], "type": "inlineReview", "revised_code": {"commit": "12f2b29648b2245cede168a9b12ab00dcad72884", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java\nindex 05a534060..4e2d097f7 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java\n\n@@ -94,8 +94,9 @@ public abstract class AbstractFindMethodDiagnostic extends AbstractVisitorDiagno\n \n   /**\n    * \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0443\u0437\u043b\u0430 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0432\u0448\u0435\u0439 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0435\n-   * \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 {@code true}\n-   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0433\u043b\u043e\u043c\u0430\u0431\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 {@link AbstractFindMethodDiagnostic#checkGlobalMethodCall(BSLParser.GlobalMethodCallContext)}\n+   * \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 {@code true}\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n    * @return \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u044f \u043d\u043e\u0434\u044b \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.\n    */\n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NjM1NQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1144#discussion_r419096355", "bodyText": "\u0432 \"\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043c\u0435\u0442\u043e\u0434\u0430\" \u0431\u044b\u043b\u043e \u0431\u044b \u0437\u0434\u043e\u0440\u043e\u0432\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c @link \u043d\u0430 checkGlobalMethod", "author": "nixel2007", "createdAt": "2020-05-03T12:25:40Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java", "diffHunk": "@@ -30,29 +30,74 @@\n \n import java.util.regex.Pattern;\n \n+/**\n+ * \u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u0430\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0432\u044b\u0437\u043e\u0432\u0430 \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0438 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430\n+ * \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f.\n+ * {@code AbstractFindMethodDiagnostic} \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0434\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u044b\u0437\u043e\u0432\u043e\u0432 \u0438 \u043e\u0434\u0438\u043d\n+ * \u043c\u0435\u0442\u043e\u0434 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e.\n+ * \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0438\u043c\u044f \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e.\n+ * <b>\u0412\u0430\u0436\u043d\u043e:</b> \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f {@code getMessage} \u043f\u043e\u0434\u0440\u0430\u0437\u0443\u043c\u0435\u0432\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0435\u0440\u0432\u044b\u043c\n+ * \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e <b>\u0432\u0441\u0435\u0433\u0434\u0430</b> \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u044f \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430.\n+ */\n public abstract class AbstractFindMethodDiagnostic extends AbstractVisitorDiagnostic {\n \n   @Getter\n   @Setter\n   private Pattern methodPattern;\n \n+  /**\n+   * \u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n+   * @param info \u0441\u043b\u0443\u0436\u0435\u0431\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0435\n+   * @param pattern \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\n+   */\n   AbstractFindMethodDiagnostic(DiagnosticInfo info, Pattern pattern) {\n     super(info);\n     methodPattern = pattern;\n   }\n \n+  /**\n+   * \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @return {@code true} \u0435\u0441\u043b\u0438 \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e\n+   */\n   protected boolean checkGlobalMethodCall(BSLParser.GlobalMethodCallContext ctx) {\n     return getMethodPattern().matcher(ctx.methodName().getText()).matches();\n   }\n \n+  /**\n+   * \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u043c\u0435\u0442\u043e\u0434\u0430\n+   * @return {@code true} \u0435\u0441\u043b\u0438 \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u043c\u0443 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044e\n+   */\n   protected boolean checkMethodCall(BSLParser.MethodCallContext ctx) {\n     return getMethodPattern().matcher(ctx.methodName().getText()).matches();\n   }\n \n+  /**\n+   * \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0443\u0437\u043b\u0430\n+   * @return \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u043c\u0435\u0442\u043e\u0434\u0430, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435,\n+   * \u043f\u0435\u0440\u0432\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e <b>\u0432\u0441\u0435\u0433\u0434\u0430</b> \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430.\n+   * \u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u044b\u0447\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0431\u0435\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432.\n+   */\n   protected String getMessage(BSLParserRuleContext ctx) {\n-    return info.getMessage(ctx.getText());\n+\n+    if (ctx instanceof BSLParser.GlobalMethodCallContext) {\n+      return info.getMessage(((BSLParser.GlobalMethodCallContext) ctx).methodName().getText());\n+    } else if (ctx instanceof BSLParser.MethodCallContext) {\n+      return info.getMessage(((BSLParser.MethodCallContext) ctx).methodName().getText());\n+    } else {\n+      return info.getMessage();\n+    }\n+\n   }\n \n+  /**\n+   * \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0443\u0437\u043b\u0430 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0432\u0448\u0435\u0439 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0435\n+   * \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 {@code true}", "originalCommit": "f7f965bdf393a21e63a31a7fd496dbf788f7e153", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5ODg4OQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1144#discussion_r419098889", "bodyText": "@nixel2007 \u0433\u043e\u0442\u043e\u0432\u043e", "author": "EightM", "createdAt": "2020-05-03T12:47:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NjM1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "12f2b29648b2245cede168a9b12ab00dcad72884", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java\nindex 05a534060..4e2d097f7 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractFindMethodDiagnostic.java\n\n@@ -94,8 +94,9 @@ public abstract class AbstractFindMethodDiagnostic extends AbstractVisitorDiagno\n \n   /**\n    * \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0443\u0437\u043b\u0430 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0440\u0430\u0431\u043e\u0442\u0430\u0432\u0448\u0435\u0439 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0435\n-   * \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 {@code true}\n-   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0433\u043b\u043e\u043c\u0430\u0431\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n+   * \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 {@link AbstractFindMethodDiagnostic#checkGlobalMethodCall(BSLParser.GlobalMethodCallContext)}\n+   * \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 {@code true}\n+   * @param ctx \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n    * @return \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u044f \u043d\u043e\u0434\u044b \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.\n    */\n   @Override\n"}}, {"oid": "6c13710c60db84664619db0c217ffb1048ddc56e", "url": "https://github.com/1c-syntax/bsl-language-server/commit/6c13710c60db84664619db0c217ffb1048ddc56e", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into feature/DeprecatedMethods8317", "committedDate": "2020-05-03T12:31:55Z", "type": "commit"}, {"oid": "12f2b29648b2245cede168a9b12ab00dcad72884", "url": "https://github.com/1c-syntax/bsl-language-server/commit/12f2b29648b2245cede168a9b12ab00dcad72884", "message": "\u0418\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438", "committedDate": "2020-05-03T12:40:21Z", "type": "commit"}]}