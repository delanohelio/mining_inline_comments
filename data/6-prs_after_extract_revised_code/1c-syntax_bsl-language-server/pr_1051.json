{"pr_number": 1051, "pr_title": "Another fix fp \u0437\u0430\u043f\u0440\u043e\u0441 \u0432 \u0446\u0438\u043a\u043b\u0435 ", "pr_createdAt": "2020-04-13T13:25:14Z", "pr_url": "https://github.com/1c-syntax/bsl-language-server/pull/1051", "timeline": [{"oid": "eba28e7b88d4055bdab40281197d14882736679e", "url": "https://github.com/1c-syntax/bsl-language-server/commit/eba28e7b88d4055bdab40281197d14882736679e", "message": "Another fix fp \u0437\u0430\u043f\u0440\u043e\u0441 \u0432 \u0446\u0438\u043a\u043b\u0435\n#1046", "committedDate": "2020-04-13T12:27:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ5NjY1Mg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1051#discussion_r407496652", "bodyText": "\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0439 ctx, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u043d\u0435 \u043a\u0440\u0438\u0442\u0438\u0447\u043d\u043e \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u043a\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.", "author": "nixel2007", "createdAt": "2020-04-13T14:08:42Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java", "diffHunk": "@@ -274,10 +275,20 @@ public ParseTree visitAccessCall(BSLParser.AccessCallContext ctx) {\n \n   @Override\n   public ParseTree visitForEachStatement(BSLParser.ForEachStatementContext ctx) {\n+    boolean alreadyInCycle = currentScope.codeFlowInCycle();\n+    ParseTree result;\n     currentScope.flowMode.push(CodeFlowType.CYCLE);\n-    ParseTree result = super.visitForEachStatement(ctx);\n+    if(alreadyInCycle) {\n+      Optional.ofNullable(ctx.expression())\n+        .ifPresent( e -> e.accept(this));\n+    }\n+    Optional.ofNullable(ctx.codeBlock())\n+      .map(e -> e.children)\n+      .stream().\n+      flatMap(Collection::stream)\n+      .forEach( t -> t.accept(this));\n     currentScope.flowMode.pop();\n-    return result;\n+    return null;", "originalCommit": "eba28e7b88d4055bdab40281197d14882736679e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "346fe69bd5075af0b99a2c32e257fe7a1c16b5b9", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java\nindex a187494e9..06ff11b43 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java\n\n@@ -276,17 +284,12 @@ public class CreateQueryInCycleDiagnostic extends AbstractVisitorDiagnostic {\n   @Override\n   public ParseTree visitForEachStatement(BSLParser.ForEachStatementContext ctx) {\n     boolean alreadyInCycle = currentScope.codeFlowInCycle();\n-    ParseTree result;\n     currentScope.flowMode.push(CodeFlowType.CYCLE);\n     if(alreadyInCycle) {\n       Optional.ofNullable(ctx.expression())\n         .ifPresent( e -> e.accept(this));\n     }\n-    Optional.ofNullable(ctx.codeBlock())\n-      .map(e -> e.children)\n-      .stream().\n-      flatMap(Collection::stream)\n-      .forEach( t -> t.accept(this));\n+    visitDescendantCodeBlock(ctx.codeBlock());\n     currentScope.flowMode.pop();\n     return null;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUzNTc2Mg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1051#discussion_r407535762", "bodyText": "\u043a\u043e\u0434 \u043e\u0431\u043e\u0438\u0445 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043f\u043e\u0447\u0442\u0438 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432", "author": "artbear", "createdAt": "2020-04-13T15:22:58Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java", "diffHunk": "@@ -290,10 +301,19 @@ public ParseTree visitWhileStatement(BSLParser.WhileStatementContext ctx) {\n \n   @Override\n   public ParseTree visitForStatement(BSLParser.ForStatementContext ctx) {\n+    boolean alreadyInCycle = currentScope.codeFlowInCycle();\n     currentScope.flowMode.push(CodeFlowType.CYCLE);\n-    ParseTree result = super.visitForStatement(ctx);\n+    if(alreadyInCycle) {\n+      ctx.expression()\n+        .forEach( e-> e.accept(this));\n+    }\n+    Optional.ofNullable(ctx.codeBlock())\n+      .map(e -> e.children)\n+      .stream()\n+      .flatMap(Collection::stream)\n+      .forEach( t -> t.accept(this));\n     currentScope.flowMode.pop();\n-    return result;\n+    return null;", "originalCommit": "eba28e7b88d4055bdab40281197d14882736679e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "346fe69bd5075af0b99a2c32e257fe7a1c16b5b9", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java\nindex a187494e9..06ff11b43 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java\n\n@@ -307,11 +310,7 @@ public class CreateQueryInCycleDiagnostic extends AbstractVisitorDiagnostic {\n       ctx.expression()\n         .forEach( e-> e.accept(this));\n     }\n-    Optional.ofNullable(ctx.codeBlock())\n-      .map(e -> e.children)\n-      .stream()\n-      .flatMap(Collection::stream)\n-      .forEach( t -> t.accept(this));\n+    visitDescendantCodeBlock(ctx.codeBlock());\n     currentScope.flowMode.pop();\n     return null;\n   }\n"}}, {"oid": "346fe69bd5075af0b99a2c32e257fe7a1c16b5b9", "url": "https://github.com/1c-syntax/bsl-language-server/commit/346fe69bd5075af0b99a2c32e257fe7a1c16b5b9", "message": "Cleanup code, remove doubles.", "committedDate": "2020-04-14T03:48:01Z", "type": "commit"}, {"oid": "6a9edd24f5b13066a26c2eafc12b9d9b6e2d4260", "url": "https://github.com/1c-syntax/bsl-language-server/commit/6a9edd24f5b13066a26c2eafc12b9d9b6e2d4260", "message": "return context", "committedDate": "2020-04-14T03:52:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NTcxMw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1051#discussion_r407895713", "bodyText": "\u0430 \u0432\u043e \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u043d\u0435 \u043f\u043e\u0439\u0434\u0435\u043c?", "author": "theshadowco", "createdAt": "2020-04-14T06:29:48Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java", "diffHunk": "@@ -274,10 +283,15 @@ public ParseTree visitAccessCall(BSLParser.AccessCallContext ctx) {\n \n   @Override\n   public ParseTree visitForEachStatement(BSLParser.ForEachStatementContext ctx) {\n+    boolean alreadyInCycle = currentScope.codeFlowInCycle();\n     currentScope.flowMode.push(CodeFlowType.CYCLE);\n-    ParseTree result = super.visitForEachStatement(ctx);\n+    if(alreadyInCycle) {\n+      Optional.ofNullable(ctx.expression())\n+        .ifPresent( e -> e.accept(this));\n+    }\n+    visitDescendantCodeBlock(ctx.codeBlock());\n     currentScope.flowMode.pop();\n-    return result;\n+    return ctx;", "originalCommit": "6a9edd24f5b13066a26c2eafc12b9d9b6e2d4260", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NjU1Mg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1051#discussion_r407896552", "bodyText": "\u0422\u0430\u043c \u0432\u044b\u0448\u0435 \u0438\u0434\u0451\u0442 \u0432\u044b\u0437\u043e\u0432 super", "author": "nixel2007", "createdAt": "2020-04-14T06:32:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NTcxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NjkzNw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1051#discussion_r407896937", "bodyText": "\u0422\u043e\u0447\u043d\u0435\u0435 \u0442\u0435\u043f\u0435\u0440\u044c \u043e\u043d \u0443\u0436\u0435 \u043d\u0435 \u0441\u0443\u043f\u0435\u0440, \u0430 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 \u0434\u0435\u0442\u0435\u0439 \u043d\u0443\u0436\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430, \u043d\u043e \u0441\u043c\u044b\u0441\u043b \u0442\u043e\u0442 \u0436\u0435.", "author": "nixel2007", "createdAt": "2020-04-14T06:33:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NTcxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkwMDQ2MQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1051#discussion_r407900461", "bodyText": "\u0414\u0430\u0436\u0435 \u0442\u0435\u0441\u0442 \u043d\u0430 \u044d\u0442\u043e \u0435\u0441\u0442\u044c", "author": "asosnoviy", "createdAt": "2020-04-14T06:42:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NTcxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkxNzQxNg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1051#discussion_r407917416", "bodyText": "\u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u043b...", "author": "theshadowco", "createdAt": "2020-04-14T07:19:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NTcxMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NTkxOQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1051#discussion_r407895919", "bodyText": "\u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e, \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0439 \u0446\u0438\u043a\u043b?", "author": "theshadowco", "createdAt": "2020-04-14T06:30:22Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CreateQueryInCycleDiagnostic.java", "diffHunk": "@@ -290,10 +304,15 @@ public ParseTree visitWhileStatement(BSLParser.WhileStatementContext ctx) {\n \n   @Override\n   public ParseTree visitForStatement(BSLParser.ForStatementContext ctx) {\n+    boolean alreadyInCycle = currentScope.codeFlowInCycle();\n     currentScope.flowMode.push(CodeFlowType.CYCLE);\n-    ParseTree result = super.visitForStatement(ctx);\n+    if(alreadyInCycle) {\n+      ctx.expression()\n+        .forEach( e-> e.accept(this));\n+    }\n+    visitDescendantCodeBlock(ctx.codeBlock());\n     currentScope.flowMode.pop();\n-    return result;\n+    return ctx;", "originalCommit": "6a9edd24f5b13066a26c2eafc12b9d9b6e2d4260", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NjYyNg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1051#discussion_r407896626", "bodyText": "\u0412\u044b\u0448\u0435 \u0432\u044b\u0437\u043e\u0432 super", "author": "nixel2007", "createdAt": "2020-04-14T06:32:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NTkxOQ=="}], "type": "inlineReview", "revised_code": null}]}