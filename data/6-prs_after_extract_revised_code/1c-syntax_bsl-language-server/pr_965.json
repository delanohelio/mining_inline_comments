{"pr_number": 965, "pr_title": "WIP \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438", "pr_createdAt": "2020-02-11T17:09:04Z", "pr_url": "https://github.com/1c-syntax/bsl-language-server/pull/965", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5MTM1Nw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/965#discussion_r377791357", "bodyText": "@theshadowco \u0412\u0430\u043b\u0435\u0440, \u044d\u0442\u043e \u0436\u0443\u0442\u044c \u043a\u0430\u043a\u0430\u044f-\u0442\u043e) \u0432\u044b\u043a\u043b\u044e\u0447\u0438 \u0443 \u0441\u0435\u0431\u044f re-arange code, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430)", "author": "nixel2007", "createdAt": "2020-02-11T17:39:35Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java", "diffHunk": "@@ -42,101 +44,23 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.Set;\n import java.util.stream.Collectors;\n \n+@Slf4j\n public class DiagnosticSupplier {\n \n-  private final LanguageServerConfiguration configuration;\n   private static List<Class<? extends BSLDiagnostic>> diagnosticClasses = createDiagnosticClasses();\n+  private final LanguageServerConfiguration configuration;\n \n   public DiagnosticSupplier(LanguageServerConfiguration configuration) {\n     this.configuration = configuration;\n   }\n \n-  public Optional<Class<? extends BSLDiagnostic>> getDiagnosticClass(String diagnosticCode) {", "originalCommit": "0c1b4944c0e7f9c16b6b230a2dff69424c5ba2cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5MTUwNQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/965#discussion_r377791505", "bodyText": "\u0431\u043b\u0435\u0439\u043c \u0441\u043e\u0432\u0441\u0435\u043c \u0441\u043a\u0443\u0447\u043d\u044b\u0439 \u043d\u0430 \u0432\u044b\u0445\u043e\u0434\u0435.", "author": "nixel2007", "createdAt": "2020-02-11T17:39:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5MTM1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMzNjYwMA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/965#discussion_r379336600", "bodyText": "\u043f\u043e\u0438\u0449\u0443 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u0438 \u043f\u0435\u0440\u0435\u043a\u043e\u043c\u043c\u0438\u0447\u0443", "author": "theshadowco", "createdAt": "2020-02-14T09:47:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5MTM1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5f20ea26a5e62fbc59c35741f5161b92cbbf4165", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java\nindex 052cbfce7..4222bfddc 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/DiagnosticSupplier.java\n\n@@ -54,105 +54,13 @@ import java.util.stream.Collectors;\n @Slf4j\n public class DiagnosticSupplier {\n \n-  private static List<Class<? extends BSLDiagnostic>> diagnosticClasses = createDiagnosticClasses();\n   private final LanguageServerConfiguration configuration;\n+  private static List<Class<? extends BSLDiagnostic>> diagnosticClasses = createDiagnosticClasses();\n \n   public DiagnosticSupplier(LanguageServerConfiguration configuration) {\n     this.configuration = configuration;\n   }\n \n-  private static boolean inScope(DiagnosticInfo diagnosticInfo, FileType fileType) {\n-    DiagnosticScope scope = diagnosticInfo.getScope();\n-    DiagnosticScope fileScope;\n-    if (fileType == FileType.OS) {\n-      fileScope = DiagnosticScope.OS;\n-    } else {\n-      fileScope = DiagnosticScope.BSL;\n-    }\n-    return scope == DiagnosticScope.ALL || scope == fileScope;\n-  }\n-\n-  private static boolean correctModuleType(DiagnosticInfo diagnosticInfo, ModuleType moduletype) {\n-    ModuleType[] diagnosticModules = diagnosticInfo.getModules();\n-\n-    if (diagnosticModules.length == 0) {\n-      return true;\n-    }\n-\n-    boolean contain = false;\n-    for (ModuleType module : diagnosticModules) {\n-      if (module == moduletype) {\n-        contain = true;\n-        break;\n-      }\n-    }\n-    return contain;\n-  }\n-\n-  private static boolean passedCompatibilityMode(\n-    DiagnosticInfo diagnosticInfo,\n-    CompatibilityMode contextCompatibilityMode\n-  ) {\n-    DiagnosticCompatibilityMode compatibilityMode = diagnosticInfo.getCompatibilityMode();\n-\n-    if (compatibilityMode == DiagnosticCompatibilityMode.UNDEFINED) {\n-      return true;\n-    }\n-    if (contextCompatibilityMode == null) {\n-      return false;\n-    }\n-\n-    return CompatibilityMode.compareTo(compatibilityMode.getCompatibilityMode(), contextCompatibilityMode) >= 0;\n-  }\n-\n-  private static boolean needToComputeDiagnostics(\n-    DocumentContext documentContext,\n-    ComputeDiagnosticsSkipSupport configuredSkipSupport\n-  ) {\n-    if (configuredSkipSupport == ComputeDiagnosticsSkipSupport.NEVER) {\n-      return true;\n-    }\n-\n-    Map<SupportConfiguration, SupportVariant> supportVariants = documentContext.getSupportVariants();\n-    var moduleSupportVariant = supportVariants.values().stream()\n-      .max(Comparator.naturalOrder())\n-      .orElse(SupportVariant.NONE);\n-\n-    if (moduleSupportVariant == SupportVariant.NONE) {\n-      return true;\n-    }\n-\n-    if (configuredSkipSupport == ComputeDiagnosticsSkipSupport.WITH_SUPPORT_LOCKED) {\n-      return moduleSupportVariant != SupportVariant.NOT_EDITABLE;\n-    }\n-\n-    return configuredSkipSupport != ComputeDiagnosticsSkipSupport.WITH_SUPPORT;\n-  }\n-\n-  @SuppressWarnings(\"unchecked\")\n-  private static List<Class<? extends BSLDiagnostic>> createDiagnosticClasses() {\n-\n-    Reflections diagnosticReflections = new Reflections(\n-      new ConfigurationBuilder()\n-        .setUrls(\n-          ClasspathHelper.forPackage(\n-            BSLDiagnostic.class.getPackage().getName(),\n-            ClasspathHelper.contextClassLoader(),\n-            ClasspathHelper.staticClassLoader()\n-          )\n-        )\n-    );\n-\n-    return diagnosticReflections.getTypesAnnotatedWith(DiagnosticMetadata.class)\n-      .stream()\n-      .map(aClass -> (Class<? extends BSLDiagnostic>) aClass)\n-      .collect(Collectors.toList());\n-  }\n-\n-  public static List<Class<? extends BSLDiagnostic>> getDiagnosticClasses() {\n-    return new ArrayList<>(diagnosticClasses);\n-  }\n-\n   public Optional<Class<? extends BSLDiagnostic>> getDiagnosticClass(String diagnosticCode) {\n     return diagnosticClasses.stream()\n       .filter(diagnosticClass -> createDiagnosticInfo(diagnosticClass).getCode().equals(diagnosticCode))\n"}}, {"oid": "5f20ea26a5e62fbc59c35741f5161b92cbbf4165", "url": "https://github.com/1c-syntax/bsl-language-server/commit/5f20ea26a5e62fbc59c35741f5161b92cbbf4165", "message": "rearrange", "committedDate": "2020-02-14T09:57:42Z", "type": "forcePushed"}, {"oid": "dd89ab773288cc38bf7753a50dfdb865b1a3045c", "url": "https://github.com/1c-syntax/bsl-language-server/commit/dd89ab773288cc38bf7753a50dfdb865b1a3045c", "message": "rearrange", "committedDate": "2020-03-02T09:35:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4MTg1Ng==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/965#discussion_r386681856", "bodyText": "\u0422\u043e\u0433\u0434\u0430 \u0438 \u044d\u0442\u043e\u0442 \u0442\u0435\u0441\u0442 \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043a\u0430\u043a \u0435\u0441\u0442\u044c. \u041a\u0430\u0436\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u0430\u043a \u0442\u0430\u043a\u043e\u0432\u043e\u0435 - \u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0441\u0430\u043c\u043e\u0439 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438. \u041e\u0442 \u0441\u0430\u043f\u043f\u043b\u0430\u0435\u0440\u0430 \u043e\u0436\u0438\u0434\u0430\u0435\u0442\u0441\u044f \u043b\u0438\u0448\u044c \u0441\u0430\u043c\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043c\u0430\u043f\u044b", "author": "nixel2007", "createdAt": "2020-03-02T22:11:11Z", "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CognitiveComplexityDiagnosticTest.java", "diffHunk": "@@ -54,9 +53,8 @@ void testConfigure() {\n     Map<String, Object> configuration = diagnosticInstance.getInfo().getDefaultConfiguration();\n     configuration.put(\"complexityThreshold\", 0);\n     configuration.put(\"checkModuleBody\", true);", "originalCommit": "dd89ab773288cc38bf7753a50dfdb865b1a3045c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e2fb1279cfc0196f6fe7afdddf3884e16513e32c", "chunk": "diff --git a/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CognitiveComplexityDiagnosticTest.java b/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CognitiveComplexityDiagnosticTest.java\nindex 45d5fec74..62cad8bf9 100644\n--- a/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CognitiveComplexityDiagnosticTest.java\n+++ b/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CognitiveComplexityDiagnosticTest.java\n\n@@ -53,8 +54,9 @@ class CognitiveComplexityDiagnosticTest extends AbstractDiagnosticTest<Cognitive\n     Map<String, Object> configuration = diagnosticInstance.getInfo().getDefaultConfiguration();\n     configuration.put(\"complexityThreshold\", 0);\n     configuration.put(\"checkModuleBody\", true);\n-    var configuredDiagnosticInstance = getConfiguredDiagnosticInstance(configuration);\n-    List<Diagnostic> diagnostics = getDiagnostics(configuredDiagnosticInstance);\n+    diagnosticInstance.configure(configuration);\n+\n+    List<Diagnostic> diagnostics = getDiagnostics();\n \n     assertThat(diagnostics).hasSize(2);\n   }\n"}}, {"oid": "e2fb1279cfc0196f6fe7afdddf3884e16513e32c", "url": "https://github.com/1c-syntax/bsl-language-server/commit/e2fb1279cfc0196f6fe7afdddf3884e16513e32c", "message": "\u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u0441 default \u043c\u0435\u0442\u043e\u0434\u043e\u043c", "committedDate": "2020-03-05T05:05:54Z", "type": "forcePushed"}, {"oid": "4368a4f1fd5b424e67fbef907a939396c7002542", "url": "https://github.com/1c-syntax/bsl-language-server/commit/4368a4f1fd5b424e67fbef907a939396c7002542", "message": "\u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u0441 default \u043c\u0435\u0442\u043e\u0434\u043e\u043c", "committedDate": "2020-03-27T07:53:35Z", "type": "commit"}, {"oid": "2207e2ff3bd7880393189e67442044bc092bda2e", "url": "https://github.com/1c-syntax/bsl-language-server/commit/2207e2ff3bd7880393189e67442044bc092bda2e", "message": "\u041f\u0435\u0440\u0435\u043d\u0435\u0441 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 DiagnosticHelper + \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u043c\u0435\u0442\u043e\u0434 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 + \u0443\u0431\u0440\u0430\u043b \u0438\u043b\u0438 \u0441\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043b \u043c\u0435\u0442\u043e\u0434 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a", "committedDate": "2020-03-27T07:53:35Z", "type": "commit"}, {"oid": "d506501ea73248b865ba5a51f15657b0d06fde79", "url": "https://github.com/1c-syntax/bsl-language-server/commit/d506501ea73248b865ba5a51f15657b0d06fde79", "message": "\u041d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433", "committedDate": "2020-03-27T08:06:03Z", "type": "commit"}, {"oid": "d506501ea73248b865ba5a51f15657b0d06fde79", "url": "https://github.com/1c-syntax/bsl-language-server/commit/d506501ea73248b865ba5a51f15657b0d06fde79", "message": "\u041d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433", "committedDate": "2020-03-27T08:06:03Z", "type": "forcePushed"}]}