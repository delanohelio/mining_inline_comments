{"pr_number": 952, "pr_title": "[FP] Form data to value", "pr_createdAt": "2020-02-07T11:45:57Z", "pr_url": "https://github.com/1c-syntax/bsl-language-server/pull/952", "timeline": [{"oid": "8d0fd8e61b455fc91155772faaca2a2269ba685c", "url": "https://github.com/1c-syntax/bsl-language-server/commit/8d0fd8e61b455fc91155772faaca2a2269ba685c", "message": "Fix FP", "committedDate": "2020-02-07T08:53:11Z", "type": "commit"}, {"oid": "8197ac0653886000680d2efb61f4778314876ca6", "url": "https://github.com/1c-syntax/bsl-language-server/commit/8197ac0653886000680d2efb61f4778314876ca6", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into feature/FP_FormDataToValue", "committedDate": "2020-02-07T11:41:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1MzA5OA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/952#discussion_r376353098", "bodyText": "\u0410 \u043d\u0435\u043b\u044c\u0437\u044f \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 find Method, \u043d\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0432 override \u043d\u0430 visit Method Call \u0438 \u0432\u044b\u0437\u043e\u0432\u043e\u043c super \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0445 \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432? \u0422\u043e\u0433\u0434\u0430 \u0438 \u043b\u043e\u0433\u0438\u043a\u0430 \u043f\u043e\u0438\u0441\u043a\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u0443\u043f\u0440\u043e\u0441\u0442\u0438\u0442\u0441\u044f. \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435 visitMethodCall \u0430 \u0447\u0435\u0440\u0435\u0437 checkMethodCall - \u043d\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u0438\u0441\u0442\u0438\u043d\u0443 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c, \u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432.", "author": "nixel2007", "createdAt": "2020-02-07T11:52:37Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FormDataToValueDiagnostic.java", "diffHunk": "@@ -40,15 +47,48 @@\n   }\n \n )\n-public class FormDataToValueDiagnostic extends AbstractFindMethodDiagnostic {\n+public class FormDataToValueDiagnostic extends AbstractVisitorDiagnostic {\n \n   private static final Pattern MESSAGE_PATTERN = Pattern.compile(\n     \"\u0414\u0430\u043d\u043d\u044b\u0435\u0424\u043e\u0440\u043c\u044b\u0412\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435|FormDataToValue\",\n     Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n   );\n \n+  private static final Pattern DIRECTIVE_PATTERN = Pattern.compile(\n+    \"&\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\u0411\u0435\u0437\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430|&\u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\u0411\u0435\u0437\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430|&AtServerNoContext|&AtClientAtServerNoContext\",\n+    Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n+  );\n+\n   public FormDataToValueDiagnostic(DiagnosticInfo info) {\n-    super(info, MESSAGE_PATTERN);\n+    super(info);\n+  }\n+\n+  @Override", "originalCommit": "8197ac0653886000680d2efb61f4778314876ca6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM2MjM2Mg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/952#discussion_r376362362", "bodyText": "\u0410 \u043d\u0435\u043b\u044c\u0437\u044f \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 find Method, \u043d\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0432 override \u043d\u0430 visit Method Call \u0438 \u0432\u044b\u0437\u043e\u0432\u043e\u043c super \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0445 \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432?\n\n@nixel2007\n\u041c\u043d\u0435 \u0447\u0442\u043e\u0431\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u0443 \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438 \u043d\u0443\u0436\u0435\u043d methodSymbol, \u044f \u0435\u0433\u043e \u043b\u0435\u0433\u043a\u043e \u0438\u0437 globalMethodCall \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0443 \u0436\u0435.", "author": "EightM", "createdAt": "2020-02-07T12:19:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1MzA5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM2OTY3MA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/952#discussion_r376369670", "bodyText": "@EightM getAncestor \u0438\u0437 \u0430\u043d\u0442\u043b\u0440\u043e\u0432\u0441\u043a\u043e\u0433\u043e Trees \u0437\u0434\u0435\u0441\u044c \u043d\u0435 \u043f\u043e\u043c\u043e\u0436\u0435\u0442?", "author": "nixel2007", "createdAt": "2020-02-07T12:38:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1MzA5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM4NzU0Nw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/952#discussion_r376387547", "bodyText": "@nixel2007 \u041d\u0435\u0442, CompilerDirective \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u044f\u043c\u044b\u043c \u043f\u0440\u0435\u0434\u043a\u043e\u043c GlobalMethodCall, \u0443 \u043d\u0435\u0433\u043e \u0434\u0440\u0443\u0433\u0430\u044f \u0438\u0435\u0440\u0430\u0440\u0445\u0438\u044f.", "author": "EightM", "createdAt": "2020-02-07T13:25:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1MzA5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4NzYyNw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/952#discussion_r376487627", "bodyText": "\u0442\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c SubContext. \u0414\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u044b \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u043b\u0435\u0436\u0430\u0442\u044c \u0432 \u043d\u0435\u043c.", "author": "nixel2007", "createdAt": "2020-02-07T16:34:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1MzA5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwMDkwOA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/952#discussion_r376800908", "bodyText": "done", "author": "EightM", "createdAt": "2020-02-09T17:36:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1MzA5OA=="}], "type": "inlineReview", "revised_code": {"commit": "d10466f6fe6fa344fe7dc9726bcf48dc98a26740", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FormDataToValueDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FormDataToValueDiagnostic.java\nindex 3633a5e6d..017384420 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FormDataToValueDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FormDataToValueDiagnostic.java\n\n@@ -47,48 +45,30 @@ import java.util.regex.Pattern;\n   }\n \n )\n-public class FormDataToValueDiagnostic extends AbstractVisitorDiagnostic {\n+public class FormDataToValueDiagnostic extends AbstractFindMethodDiagnostic {\n \n   private static final Pattern MESSAGE_PATTERN = Pattern.compile(\n     \"\u0414\u0430\u043d\u043d\u044b\u0435\u0424\u043e\u0440\u043c\u044b\u0412\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435|FormDataToValue\",\n     Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n   );\n \n-  private static final Pattern DIRECTIVE_PATTERN = Pattern.compile(\n-    \"&\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\u0411\u0435\u0437\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430|&\u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\u0411\u0435\u0437\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430|&AtServerNoContext|&AtClientAtServerNoContext\",\n-    Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n-  );\n-\n   public FormDataToValueDiagnostic(DiagnosticInfo info) {\n-    super(info);\n+    super(info, MESSAGE_PATTERN);\n   }\n \n   @Override\n-  public ParseTree visitSub(BSLParser.SubContext ctx) {\n-\n-    Optional<MethodSymbol> methodSymbol = documentContext.getMethodSymbol(ctx);\n-    val directivesList = new ArrayList<ParseTree>(Trees.findAllRuleNodes(ctx, BSLParser.RULE_compilerDirective));\n-\n-    if (methodSymbol.isPresent()\n-      && (directivesList.isEmpty() || !DIRECTIVE_PATTERN.matcher(directivesList.get(0).getText()).matches())) {\n+  protected boolean checkGlobalMethodCall(GlobalMethodCallContext ctx) {\n+    var parentNode = Trees.getAncestorByRuleIndex(ctx, BSLParser.RULE_sub);\n+    var compileList = new ArrayList<>(Trees.findAllRuleNodes(parentNode, BSLParser.RULE_compilerDirective));\n \n-      val subNode = methodSymbol.get().getNode();\n-      Trees.findAllRuleNodes(subNode, BSLParser.RULE_globalMethodCall).stream()\n-        .map(GlobalMethodCallContext.class::cast)\n-        .filter(node -> MESSAGE_PATTERN.matcher(node.methodName().getText()).matches()).forEach(node -> diagnosticStorage.addDiagnostic(node.methodName()));\n-    }\n-\n-    return super.visitSub(ctx);\n-  }\n-\n-  @Override\n-  public ParseTree visitMethodCall(BSLParser.MethodCallContext ctx) {\n+    if (compileList.isEmpty()\n+      || (((BSLParser.CompilerDirectiveContext) compileList.get(0)).getStop().getType() != BSLLexer.ANNOTATION_ATSERVERNOCONTEXT_SYMBOL\n+      && ((BSLParser.CompilerDirectiveContext) compileList.get(0)).getStop().getType() != BSLLexer.ANNOTATION_ATCLIENTATSERVERNOCONTEXT_SYMBOL)) {\n \n-    if (MESSAGE_PATTERN.matcher(ctx.methodName().getText()).matches()) {\n-      diagnosticStorage.addDiagnostic(ctx.methodName());\n+      return MESSAGE_PATTERN.matcher(ctx.methodName().getText()).matches();\n     }\n \n-    return super.visitMethodCall(ctx);\n+    return false;\n   }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM2MjY1MA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/952#discussion_r376362650", "bodyText": "\u041a\u0430\u0436\u0435\u0442\u0441\u044f \u044d\u0442\u043e \u0435\u0441\u0442\u044c \u0432 \u043a\u0435\u0439\u0432\u043e\u0440\u0434\u0430\u0445", "author": "asosnoviy", "createdAt": "2020-02-07T12:19:58Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FormDataToValueDiagnostic.java", "diffHunk": "@@ -40,15 +47,48 @@\n   }\n \n )\n-public class FormDataToValueDiagnostic extends AbstractFindMethodDiagnostic {\n+public class FormDataToValueDiagnostic extends AbstractVisitorDiagnostic {\n \n   private static final Pattern MESSAGE_PATTERN = Pattern.compile(\n     \"\u0414\u0430\u043d\u043d\u044b\u0435\u0424\u043e\u0440\u043c\u044b\u0412\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435|FormDataToValue\",\n     Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n   );\n \n+  private static final Pattern DIRECTIVE_PATTERN = Pattern.compile(\n+    \"&\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\u0411\u0435\u0437\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430|&\u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\u0411\u0435\u0437\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430|&AtServerNoContext|&AtClientAtServerNoContext\",", "originalCommit": "8197ac0653886000680d2efb61f4778314876ca6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM3MDQyNQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/952#discussion_r376370425", "bodyText": "\u0442\u0443\u0442 \u0434\u0430\u0436\u0435 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 - \u0437\u0430\u0447\u0435\u043c \u0438\u0445 \u0438\u0441\u043a\u0430\u0442\u044c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043a\u043e\u0439, \u0435\u0441\u043b\u0438 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0442\u0438\u043f \u0443\u0437\u043b\u0430? \u0443 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0432\u044b \u043a\u043e\u043c\u043f\u0438\u043b\u044f\u0446\u0438\u0438 \u0435\u0441\u0442\u044c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u0442\u0438\u043f.", "author": "nixel2007", "createdAt": "2020-02-07T12:41:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM2MjY1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwMDkxNA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/952#discussion_r376800914", "bodyText": "done", "author": "EightM", "createdAt": "2020-02-09T17:36:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM2MjY1MA=="}], "type": "inlineReview", "revised_code": {"commit": "d10466f6fe6fa344fe7dc9726bcf48dc98a26740", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FormDataToValueDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FormDataToValueDiagnostic.java\nindex 3633a5e6d..017384420 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FormDataToValueDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FormDataToValueDiagnostic.java\n\n@@ -47,48 +45,30 @@ import java.util.regex.Pattern;\n   }\n \n )\n-public class FormDataToValueDiagnostic extends AbstractVisitorDiagnostic {\n+public class FormDataToValueDiagnostic extends AbstractFindMethodDiagnostic {\n \n   private static final Pattern MESSAGE_PATTERN = Pattern.compile(\n     \"\u0414\u0430\u043d\u043d\u044b\u0435\u0424\u043e\u0440\u043c\u044b\u0412\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435|FormDataToValue\",\n     Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n   );\n \n-  private static final Pattern DIRECTIVE_PATTERN = Pattern.compile(\n-    \"&\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\u0411\u0435\u0437\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430|&\u041d\u0430\u041a\u043b\u0438\u0435\u043d\u0442\u0435\u041d\u0430\u0421\u0435\u0440\u0432\u0435\u0440\u0435\u0411\u0435\u0437\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430|&AtServerNoContext|&AtClientAtServerNoContext\",\n-    Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE\n-  );\n-\n   public FormDataToValueDiagnostic(DiagnosticInfo info) {\n-    super(info);\n+    super(info, MESSAGE_PATTERN);\n   }\n \n   @Override\n-  public ParseTree visitSub(BSLParser.SubContext ctx) {\n-\n-    Optional<MethodSymbol> methodSymbol = documentContext.getMethodSymbol(ctx);\n-    val directivesList = new ArrayList<ParseTree>(Trees.findAllRuleNodes(ctx, BSLParser.RULE_compilerDirective));\n-\n-    if (methodSymbol.isPresent()\n-      && (directivesList.isEmpty() || !DIRECTIVE_PATTERN.matcher(directivesList.get(0).getText()).matches())) {\n+  protected boolean checkGlobalMethodCall(GlobalMethodCallContext ctx) {\n+    var parentNode = Trees.getAncestorByRuleIndex(ctx, BSLParser.RULE_sub);\n+    var compileList = new ArrayList<>(Trees.findAllRuleNodes(parentNode, BSLParser.RULE_compilerDirective));\n \n-      val subNode = methodSymbol.get().getNode();\n-      Trees.findAllRuleNodes(subNode, BSLParser.RULE_globalMethodCall).stream()\n-        .map(GlobalMethodCallContext.class::cast)\n-        .filter(node -> MESSAGE_PATTERN.matcher(node.methodName().getText()).matches()).forEach(node -> diagnosticStorage.addDiagnostic(node.methodName()));\n-    }\n-\n-    return super.visitSub(ctx);\n-  }\n-\n-  @Override\n-  public ParseTree visitMethodCall(BSLParser.MethodCallContext ctx) {\n+    if (compileList.isEmpty()\n+      || (((BSLParser.CompilerDirectiveContext) compileList.get(0)).getStop().getType() != BSLLexer.ANNOTATION_ATSERVERNOCONTEXT_SYMBOL\n+      && ((BSLParser.CompilerDirectiveContext) compileList.get(0)).getStop().getType() != BSLLexer.ANNOTATION_ATCLIENTATSERVERNOCONTEXT_SYMBOL)) {\n \n-    if (MESSAGE_PATTERN.matcher(ctx.methodName().getText()).matches()) {\n-      diagnosticStorage.addDiagnostic(ctx.methodName());\n+      return MESSAGE_PATTERN.matcher(ctx.methodName().getText()).matches();\n     }\n \n-    return super.visitMethodCall(ctx);\n+    return false;\n   }\n \n }\n"}}, {"oid": "2fa89aa92dd1092bff95afab4d80b5df09ca97b8", "url": "https://github.com/1c-syntax/bsl-language-server/commit/2fa89aa92dd1092bff95afab4d80b5df09ca97b8", "message": "Merge branch 'develop' of https://github.com/1c-syntax/bsl-language-server into feature/FP_FormDataToValue", "committedDate": "2020-02-09T17:31:53Z", "type": "commit"}, {"oid": "d10466f6fe6fa344fe7dc9726bcf48dc98a26740", "url": "https://github.com/1c-syntax/bsl-language-server/commit/d10466f6fe6fa344fe7dc9726bcf48dc98a26740", "message": "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043b\u043e\u0433\u0438\u043a\u0438 \u043d\u0430 \u0430\u0431\u0441\u0442\u0430\u043a\u0442\u043d\u044b\u0439 FindMethod class", "committedDate": "2020-02-09T17:35:13Z", "type": "commit"}, {"oid": "a4af0d07708f2ffa5badae2f57d5edc66f2fc4f1", "url": "https://github.com/1c-syntax/bsl-language-server/commit/a4af0d07708f2ffa5badae2f57d5edc66f2fc4f1", "message": "\u0418\u0437\u0431\u0430\u0432\u0438\u043b\u0441\u044f \u043e\u0442 \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0433\u043e \u0441\u043f\u0443\u0441\u043a\u0430 \u043f\u043e \u0434\u0435\u0440\u0435\u0432\u0443", "committedDate": "2020-02-10T08:37:01Z", "type": "commit"}, {"oid": "c4d89b88682e61add02018df0a62b7102ad27906", "url": "https://github.com/1c-syntax/bsl-language-server/commit/c4d89b88682e61add02018df0a62b7102ad27906", "message": "\u0417\u0430\u043c\u0435\u043d\u0430 \u043a\u0430\u0441\u0442\u0430", "committedDate": "2020-02-10T08:47:13Z", "type": "commit"}, {"oid": "a88d172ac96fcbb422955b1e411e288a3daa679f", "url": "https://github.com/1c-syntax/bsl-language-server/commit/a88d172ac96fcbb422955b1e411e288a3daa679f", "message": "\u0417\u0430\u043c\u0435\u043d\u0430 \u0442\u0438\u043f\u0430 compileList \u0434\u043b\u044f \u0443\u0431\u0438\u0440\u0430\u043d\u0438\u044f \u043a\u0430\u0441\u0442\u043e\u0432", "committedDate": "2020-02-10T09:03:18Z", "type": "commit"}]}