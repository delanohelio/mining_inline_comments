{"pr_number": 1346, "pr_title": "\u0421\u043f\u0440\u0438\u043d\u0433\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f LSPLauncher + \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 traceLog", "pr_createdAt": "2020-08-30T09:59:44Z", "pr_url": "https://github.com/1c-syntax/bsl-language-server/pull/1346", "timeline": [{"oid": "e705083c871ce43980a2297185483d44a75875f6", "url": "https://github.com/1c-syntax/bsl-language-server/commit/e705083c871ce43980a2297185483d44a75875f6", "message": "\u0421\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 PrintWriter \u0434\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 traceLog \n\n\u0420\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433", "committedDate": "2020-08-30T10:01:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwMjE0Ng==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1346#discussion_r485002146", "bodyText": "\u042d\u0442\u043e\u0442 \u0442\u0435\u0441\u0442 \u0443\u0436\u0435 \u043d\u0435 \u043d\u0443\u0436\u0435\u043d?", "author": "otymko", "createdAt": "2020-09-08T15:17:27Z", "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/BSLTextDocumentServiceTest.java", "diffHunk": "@@ -230,11 +230,6 @@ void didSave() {\n     textDocumentService.didSave(params);\n   }\n \n-  @Test", "originalCommit": "e705083c871ce43980a2297185483d44a75875f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAyMDQyOA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1346#discussion_r485020428", "bodyText": "null \u0442\u0443\u0434\u0430 \u0442\u043e\u0447\u043d\u043e \u043d\u0435 \u043d\u0443\u0436\u0435\u043d, \u044f \u0435\u0449\u0435 \u0438 \u043d\u0430 \u043f\u0430\u043a\u0435\u0442 nonnull-\u0430\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044e \u043f\u043e\u0432\u0435\u0448\u0443", "author": "nixel2007", "createdAt": "2020-09-08T15:43:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwMjE0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "d876398132c67951d31849cce91b2540eea36bfc", "chunk": "diff --git a/src/test/java/com/github/_1c_syntax/bsl/languageserver/BSLTextDocumentServiceTest.java b/src/test/java/com/github/_1c_syntax/bsl/languageserver/BSLTextDocumentServiceTest.java\nindex 983fda289..9a9fbe7f9 100644\n--- a/src/test/java/com/github/_1c_syntax/bsl/languageserver/BSLTextDocumentServiceTest.java\n+++ b/src/test/java/com/github/_1c_syntax/bsl/languageserver/BSLTextDocumentServiceTest.java\n\n@@ -230,11 +232,57 @@ class BSLTextDocumentServiceTest {\n     textDocumentService.didSave(params);\n   }\n \n+  @Test\n+  void connect() {\n+    textDocumentService.connect(null);\n+  }\n+\n   @Test\n   void reset() {\n     textDocumentService.reset();\n   }\n \n+  @Test\n+  void testDiagnosticsUnknownFile() throws ExecutionException, InterruptedException {\n+    // when\n+    var params = new DiagnosticParams(getTextDocumentIdentifier());\n+    var diagnostics = textDocumentService.diagnostics(params).get();\n+\n+    // then\n+    assertThat(diagnostics).isEmpty();\n+  }\n+\n+  @Test\n+  void testDiagnosticsKnownFile() throws ExecutionException, InterruptedException, IOException {\n+    // given\n+    var textDocumentItem = getTextDocumentItem();\n+    var didOpenParams = new DidOpenTextDocumentParams(textDocumentItem);\n+    textDocumentService.didOpen(didOpenParams);\n+\n+    // when\n+    var params = new DiagnosticParams(getTextDocumentIdentifier());\n+    var diagnostics = textDocumentService.diagnostics(params).get();\n+\n+    // then\n+    assertThat(diagnostics).isNotEmpty();\n+  }\n+\n+  @Test\n+  void testDiagnosticsKnownFileFilteredRange() throws ExecutionException, InterruptedException, IOException {\n+    // given\n+    var textDocumentItem = getTextDocumentItem();\n+    var didOpenParams = new DidOpenTextDocumentParams(textDocumentItem);\n+    textDocumentService.didOpen(didOpenParams);\n+\n+    // when\n+    var params = new DiagnosticParams(getTextDocumentIdentifier());\n+    params.setRange(Ranges.create(1, 0, 2, 0));\n+    var diagnostics = textDocumentService.diagnostics(params).get();\n+\n+    // then\n+    assertThat(diagnostics).hasSize(1);\n+  }\n+\n   private File getTestFile() {\n     return new File(\"./src/test/resources/BSLTextDocumentServiceTest.bsl\");\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDM1Nw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1346#discussion_r485134357", "bodyText": "\u0430 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u043b\u0438 \u0441\u043c\u044b\u0441\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0440\u0430\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0441\u0442\u0440\u0438\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c?", "author": "theshadowco", "createdAt": "2020-09-08T19:02:55Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/cli/lsp/FileAwarePrintWriter.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.cli.lsp;\n+\n+import com.github._1c_syntax.bsl.languageserver.configuration.watcher.LanguageServerConfigurationChangeEvent;\n+import com.github._1c_syntax.bsl.languageserver.configuration.watcher.LanguageServerConfigurationFileChangeEvent;\n+import lombok.SneakyThrows;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.context.event.EventListener;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.CheckForNull;\n+import java.io.BufferedWriter;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.OutputStream;\n+import java.io.OutputStreamWriter;\n+import java.io.PrintWriter;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Objects;\n+\n+/**\n+ * \u041e\u0431\u0435\u0440\u0442\u043a\u0430 \u043d\u0430\u0434 PrintWriter, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0430\u044f \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \"\u043d\u0430-\u043b\u0435\u0442\u0443\",\n+ * \u0432 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u0432 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u043c {@link PrintWriter}.\n+ */\n+@Component\n+@Slf4j\n+public class FileAwarePrintWriter extends PrintWriter {\n+\n+  private boolean isEmpty = true;\n+  private File file;\n+\n+  /**\n+   * \u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434 \u0432 /dev/null.\n+   */\n+  public FileAwarePrintWriter() {\n+    super(OutputStream.nullOutputStream());\n+  }\n+\n+  /**\n+   * @param file \u0424\u0430\u0439\u043b, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043d\u044b\u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u044b\u0432\u043e\u0434 PrintWriter\n+   */\n+  public void setFile(@CheckForNull File file) {\n+\n+    // sync on non-private field, cause this#lock is supposed to be used as lock-object. See field description.\n+    synchronized (lock) {\n+      if (Objects.equals(file, this.file)) {\n+        return;\n+      }\n+\n+      this.file = file;\n+\n+      if (file == null) {\n+        closeOutputStream();\n+        return;\n+      }\n+\n+      FileOutputStream fileOutputStream;\n+      try {\n+        // stream is not closed, cause it used as output stream in writer. See this#out field.\n+        fileOutputStream = new FileOutputStream(file);\n+      } catch (FileNotFoundException e) {\n+        LOGGER.error(\"Can't create LSP trace file\", e);\n+        return;\n+      }\n+\n+      if (file.isDirectory()) {", "originalCommit": "d8e54b53d8e37d4c25508342a1201b4030af62d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDk3Ng==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1346#discussion_r485134976", "bodyText": "\u0434\u0430, \u043d\u0430\u0434\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c. \u0441\u0443\u0434\u044f \u043f\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0430 FileOutputStream, \u0435\u0441\u043b\u0438 \u0435\u043c\u0443 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0434\u0430\u044e\u0442 \u043a\u0430\u0442\u0430\u043b\u043e\u0433, \u043e\u043d \u043a\u0438\u0434\u0430\u0435\u0442 \u044d\u043a\u0441\u0435\u043f\u0448\u0435\u043d.", "author": "nixel2007", "createdAt": "2020-09-08T19:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDM1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "d876398132c67951d31849cce91b2540eea36bfc", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/cli/lsp/FileAwarePrintWriter.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/cli/lsp/FileAwarePrintWriter.java\ndeleted file mode 100644\nindex e59ec6292..000000000\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/cli/lsp/FileAwarePrintWriter.java\n+++ /dev/null\n\n@@ -1,132 +0,0 @@\n-/*\n- * This file is a part of BSL Language Server.\n- *\n- * Copyright \u00a9 2018-2020\n- * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n- *\n- * SPDX-License-Identifier: LGPL-3.0-or-later\n- *\n- * BSL Language Server is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation; either\n- * version 3.0 of the License, or (at your option) any later version.\n- *\n- * BSL Language Server is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with BSL Language Server.\n- */\n-package com.github._1c_syntax.bsl.languageserver.cli.lsp;\n-\n-import com.github._1c_syntax.bsl.languageserver.configuration.watcher.LanguageServerConfigurationChangeEvent;\n-import com.github._1c_syntax.bsl.languageserver.configuration.watcher.LanguageServerConfigurationFileChangeEvent;\n-import lombok.SneakyThrows;\n-import lombok.extern.slf4j.Slf4j;\n-import org.springframework.context.event.EventListener;\n-import org.springframework.stereotype.Component;\n-\n-import javax.annotation.CheckForNull;\n-import java.io.BufferedWriter;\n-import java.io.File;\n-import java.io.FileNotFoundException;\n-import java.io.FileOutputStream;\n-import java.io.OutputStream;\n-import java.io.OutputStreamWriter;\n-import java.io.PrintWriter;\n-import java.nio.charset.StandardCharsets;\n-import java.util.Objects;\n-\n-/**\n- * \u041e\u0431\u0435\u0440\u0442\u043a\u0430 \u043d\u0430\u0434 PrintWriter, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0430\u044f \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u0444\u0430\u0439\u043b\u043e\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \"\u043d\u0430-\u043b\u0435\u0442\u0443\",\n- * \u0432 \u043e\u0442\u043b\u0438\u0447\u0438\u0435 \u043e\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u0432 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u043e\u043c {@link PrintWriter}.\n- */\n-@Component\n-@Slf4j\n-public class FileAwarePrintWriter extends PrintWriter {\n-\n-  private boolean isEmpty = true;\n-  private File file;\n-\n-  /**\n-   * \u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u044b\u0432\u043e\u0434 \u0432 /dev/null.\n-   */\n-  public FileAwarePrintWriter() {\n-    super(OutputStream.nullOutputStream());\n-  }\n-\n-  /**\n-   * @param file \u0424\u0430\u0439\u043b, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043d\u044b\u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u044b\u0432\u043e\u0434 PrintWriter\n-   */\n-  public void setFile(@CheckForNull File file) {\n-\n-    // sync on non-private field, cause this#lock is supposed to be used as lock-object. See field description.\n-    synchronized (lock) {\n-      if (Objects.equals(file, this.file)) {\n-        return;\n-      }\n-\n-      this.file = file;\n-\n-      if (file == null) {\n-        closeOutputStream();\n-        return;\n-      }\n-\n-      FileOutputStream fileOutputStream;\n-      try {\n-        // stream is not closed, cause it used as output stream in writer. See this#out field.\n-        fileOutputStream = new FileOutputStream(file);\n-      } catch (FileNotFoundException e) {\n-        LOGGER.error(\"Can't create LSP trace file\", e);\n-        return;\n-      }\n-\n-      if (file.isDirectory()) {\n-        LOGGER.error(\"Trace log setting must lead to file, not directory! {}\", file.getAbsolutePath());\n-        return;\n-      }\n-\n-      closeOutputStream();\n-\n-      this.out = new BufferedWriter(new OutputStreamWriter(fileOutputStream, StandardCharsets.UTF_8));\n-      this.lock = this.out;\n-      this.isEmpty = false;\n-    }\n-\n-  }\n-\n-  @Override\n-  public void print(String s) {\n-    if (isEmpty) {\n-      return;\n-    }\n-    super.print(s);\n-  }\n-\n-  @Override\n-  public void flush() {\n-    if (isEmpty) {\n-      return;\n-    }\n-    super.flush();\n-  }\n-\n-  /**\n-   * \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0441\u043e\u0431\u044b\u0442\u0438\u044f {@link LanguageServerConfigurationFileChangeEvent}.\n-   *\n-   * @param event \u0421\u043e\u0431\u044b\u0442\u0438\u0435\n-   */\n-  @EventListener\n-  public void handleEvent(LanguageServerConfigurationChangeEvent event) {\n-    setFile(event.getSource().getTraceLog());\n-  }\n-\n-  @SneakyThrows\n-  private void closeOutputStream() {\n-    out.close();\n-    isEmpty = true;\n-  }\n-}\n"}}, {"oid": "d876398132c67951d31849cce91b2540eea36bfc", "url": "https://github.com/1c-syntax/bsl-language-server/commit/d876398132c67951d31849cce91b2540eea36bfc", "message": "\u0421\u043f\u0440\u0438\u043d\u0433\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0440\u0435\u0436\u0438\u043c\u0430 lsp", "committedDate": "2020-09-08T19:06:23Z", "type": "commit"}, {"oid": "6ca53cd97a622a299e401fffb09dcf9f9bae6c53", "url": "https://github.com/1c-syntax/bsl-language-server/commit/6ca53cd97a622a299e401fffb09dcf9f9bae6c53", "message": "\u0421\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 PrintWriter \u0434\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 traceLog \n\n\u0420\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433", "committedDate": "2020-09-08T19:06:45Z", "type": "commit"}, {"oid": "c80cbd9f837f9b4388d28580c030434bd6f0029e", "url": "https://github.com/1c-syntax/bsl-language-server/commit/c80cbd9f837f9b4388d28580c030434bd6f0029e", "message": "\u041f\u043e\u044f\u0441\u043d\u044f\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438", "committedDate": "2020-09-08T19:06:45Z", "type": "commit"}, {"oid": "3c565f19ea81f51cdbb7c59cb002ce3408be86b0", "url": "https://github.com/1c-syntax/bsl-language-server/commit/3c565f19ea81f51cdbb7c59cb002ce3408be86b0", "message": "javadoc", "committedDate": "2020-09-08T19:06:45Z", "type": "commit"}, {"oid": "a0c54049a7fe3de3fde702a82d8e6f3a45719892", "url": "https://github.com/1c-syntax/bsl-language-server/commit/a0c54049a7fe3de3fde702a82d8e6f3a45719892", "message": "\u0417\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u0441\u0442\u0440\u0438\u043c\u0430 \u043f\u0435\u0440\u0435\u0434 \u043f\u0435\u0440\u0435\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u043e\u0439", "committedDate": "2020-09-08T19:06:45Z", "type": "commit"}, {"oid": "fba43748905e0160e197eea3ef671ac4fe104038", "url": "https://github.com/1c-syntax/bsl-language-server/commit/fba43748905e0160e197eea3ef671ac4fe104038", "message": "\u041f\u043e\u043c\u0435\u043d\u044f\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043c\u0435\u0441\u0442\u0430\u043c\u0438", "committedDate": "2020-09-08T19:06:45Z", "type": "forcePushed"}, {"oid": "5f4918247e390726eff13da8fd82eead81a72b26", "url": "https://github.com/1c-syntax/bsl-language-server/commit/5f4918247e390726eff13da8fd82eead81a72b26", "message": "\u041f\u043e\u043c\u0435\u043d\u044f\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043c\u0435\u0441\u0442\u0430\u043c\u0438", "committedDate": "2020-09-08T19:09:27Z", "type": "commit"}, {"oid": "5f4918247e390726eff13da8fd82eead81a72b26", "url": "https://github.com/1c-syntax/bsl-language-server/commit/5f4918247e390726eff13da8fd82eead81a72b26", "message": "\u041f\u043e\u043c\u0435\u043d\u044f\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043c\u0435\u0441\u0442\u0430\u043c\u0438", "committedDate": "2020-09-08T19:09:27Z", "type": "forcePushed"}]}