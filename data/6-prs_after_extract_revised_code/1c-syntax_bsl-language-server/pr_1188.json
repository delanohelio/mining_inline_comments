{"pr_number": 1188, "pr_title": "CommonModuleInvalidTypeDiagnostic", "pr_createdAt": "2020-05-13T11:26:59Z", "pr_url": "https://github.com/1c-syntax/bsl-language-server/pull/1188", "timeline": [{"oid": "8ef79b8fc6ac5537584026fa9254a76a86d84f46", "url": "https://github.com/1c-syntax/bsl-language-server/commit/8ef79b8fc6ac5537584026fa9254a76a86d84f46", "message": "CommonModuleInvalidTypeDiagnostic", "committedDate": "2020-05-13T11:25:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2OTQ0Ng==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424369446", "bodyText": "@zeegin \u0445\u043e\u0442\u0435\u043b \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0444\u043b\u0430\u0436\u043a\u043e\u0432 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c?", "author": "nixel2007", "createdAt": "2020-05-13T11:37:33Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+\n+import java.util.regex.Matcher;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.UNPREDICTABLE\n+  }\n+\n+)\n+public class CommonModuleInvalidTypeDiagnostic extends AbstractCommonModuleNameDiagnostic {", "originalCommit": "8ef79b8fc6ac5537584026fa9254a76a86d84f46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MjUzOQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424372539", "bodyText": "\u0410\u0433\u0430, \u0432 \u0442\u0435 \u043a\u0435\u0439\u0441\u044b, \u0433\u0434\u0435 \u0438\u0434\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 ordinary. \u041d\u043e \u0415\u0441\u0442\u044c \u043f\u043e\u0434\u043e\u0437\u0440\u0435\u043d\u0438\u0435, \u0447\u0442\u043e \u043e\u043d\u043e \u0438 \u0442\u0430\u043a \u043f\u0440\u043e\u043a\u0430\u0442\u0435\u0442. \u042f \u0431\u044b \u0445\u043e\u0442\u0435\u043b \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0445 \u043a\u0435\u0439\u0441\u043e\u0432 \u0438 \u0444\u043f.", "author": "asosnoviy", "createdAt": "2020-05-13T11:43:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2OTQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MjgxMg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424372812", "bodyText": "\u0421\u0435\u0439\u0447\u0430\u0441 \u044d\u0442\u043e \u0431\u0435\u0437\u0434\u0443\u043c\u043d\u0430\u044f \u043a\u0430\u043b\u044c\u043a\u0430 \u0441 \u0410\u041f\u041a.", "author": "asosnoviy", "createdAt": "2020-05-13T11:44:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2OTQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MzUwMg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424373502", "bodyText": "\u043d\u0443, \u0410\u041f\u041a \u0432\u0440\u044f\u0434 \u043b\u0438 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043d\u0444\u044b, \u0434\u0435\u043a\u043b\u0430\u0440\u0438\u0440\u0443\u044e\u0449\u0438\u0435 \"\u043c\u044b \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0432 \u043e\u0431\u044b\u0447\u043d\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0432\u043e\u043e\u0431\u0449\u0435\", \u043a\u0430\u043a \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 osl.", "author": "nixel2007", "createdAt": "2020-05-13T11:45:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2OTQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MzcxMQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424373711", "bodyText": "\u0441\u043e\u0431\u0441\u043d\u043e, \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043a\u0430\u043a \u0440\u0430\u0437 \u043d\u0430 osl. \u0431\u0443\u0434\u0435\u0442 \u0441\u0442\u0440\u0435\u043b\u044f\u0442\u044c \u043f\u043e \u0438\u0434\u0435\u0435.", "author": "nixel2007", "createdAt": "2020-05-13T11:46:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2OTQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3NDczMg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424374732", "bodyText": "\u044f \u0443 \u0441\u0435\u0431\u044f \u0442\u043e\u0436\u0435 \u043e\u0431\u044b\u0447\u043d\u043e\u0435 \u043f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e", "author": "theshadowco", "createdAt": "2020-05-13T11:48:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2OTQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3NTQ1OQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424375459", "bodyText": "\u0412\u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435 \u0443 \u043c\u0435\u043d\u044f \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u0430 https://github.com/zeegin/OpenSubsystemsLibrary/blob/master/OpenSubsystemsLibrary.Tests/src/CommonModules/Test_Metadata/Module.bsl", "author": "zeegin", "createdAt": "2020-05-13T11:49:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2OTQ0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5a7980938c373c24547eda3d0d95df7294273119", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java\nindex 6d0e452047..834d4586a7 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java\n\n@@ -23,20 +23,27 @@ package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n \n import java.util.regex.Matcher;\n \n @DiagnosticMetadata(\n   type = DiagnosticType.ERROR,\n   severity = DiagnosticSeverity.MAJOR,\n+  scope = DiagnosticScope.BSL,\n+  modules = {\n+    ModuleType.CommonModule\n+  },\n   minutesToFix = 5,\n   tags = {\n     DiagnosticTag.STANDARD,\n-    DiagnosticTag.UNPREDICTABLE\n+    DiagnosticTag.UNPREDICTABLE,\n+    DiagnosticTag.DESIGN\n   }\n \n )\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MDEwNg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424370106", "bodyText": "\u041e\u043f\u0435\u0447\u0430\u0442\u043a\u0430", "author": "theshadowco", "createdAt": "2020-05-13T11:38:50Z", "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnosticTest.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.DocumentContext;\n+import com.github._1c_syntax.bsl.languageserver.context.ServerContext;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.utils.Absolute;\n+import lombok.SneakyThrows;\n+import org.apache.commons.io.FileUtils;\n+import org.eclipse.lsp4j.Diagnostic;\n+import org.junit.jupiter.api.Test;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static com.github._1c_syntax.bsl.languageserver.util.Assertions.assertThat;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.when;\n+\n+class CommonModuleInvalidTypeDiagnosticTest extends AbstractDiagnosticTest<CommonModuleInvalidTypeDiagnostic> {\n+  CommonModuleInvalidTypeDiagnosticTest() {\n+    super(CommonModuleInvalidTypeDiagnostic.class);\n+  }\n+\n+  private CommonModule module;\n+  private DocumentContext documentContext;\n+\n+  private static final String PATH_TO_METADATA = \"src/test/resources/metadata\";\n+  private static final String PATH_TO_MODULE_FILE = \"src/test/resources/metadata/CommonModules/\u041f\u0435\u0440\u0432\u044b\u0439\u041e\u0431\u0449\u0438\u0439\u041c\u043e\u0434\u0443\u043b\u044c/Ext/Module.bsl\";\n+\n+  @Test\n+  void testClientServer() {\n+\n+    getDocumentContextFromFile();\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u041f\u0440\u043e\u0441\u0442\u043e\u041a\u043b\u0438\u0435\u043d\u0442\u0421\u0435\u0440\u0432\u0435\u0440\");\n+    when(module.isServer()).thenReturn(Boolean.TRUE);\n+    when(module.isServerCall()).thenReturn(Boolean.TRUE);\n+    when(module.isExternalConnection()).thenReturn(Boolean.TRUE);\n+    when(module.isClientOrdinaryApplication()).thenReturn(Boolean.TRUE);\n+    when(module.isClientManagedApplication()).thenReturn(Boolean.TRUE);\n+    when(documentContext.getMdObject()).thenReturn(Optional.of(module));\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(1);\n+    assertThat(diagnostics, true)\n+      .hasRange(5, 0, 1);\n+\n+  }\n+\n+  @Test\n+  void testUnknown() {\n+\n+    getDocumentContextFromFile();\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u0421\u041e\u0448\u0438\u0431\u043a\u043e\u0439\");\n+    when(module.isServer()).thenReturn(Boolean.TRUE);\n+    when(module.isServerCall()).thenReturn(Boolean.TRUE);\n+    when(module.isExternalConnection()).thenReturn(Boolean.FALSE);\n+    when(module.isClientOrdinaryApplication()).thenReturn(Boolean.FALSE);\n+    when(module.isClientManagedApplication()).thenReturn(Boolean.FALSE);\n+    when(documentContext.getMdObject()).thenReturn(Optional.of(module));\n+\n+    // when\n+    List<Diagnostic> diagnostics = diagnosticInstance.getDiagnostics(documentContext);\n+\n+    //then\n+    assertThat(diagnostics).hasSize(0);\n+\n+  }\n+\n+  @Test\n+  void testServerCall() {\n+\n+    getDocumentContextFromFile();\n+\n+    // given\n+    when(module.getName()).thenReturn(\"\u041f\u0440\u043e\u0441\u0442\u043e\u0412\u044b\u0437\u043e\u0432\u0421\u0435\u0440\u0432\u0435\u0440\u0430\u0442\");", "originalCommit": "8ef79b8fc6ac5537584026fa9254a76a86d84f46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a7980938c373c24547eda3d0d95df7294273119", "chunk": "diff --git a/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnosticTest.java b/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnosticTest.java\nindex a9601717fb..08c97f7cc4 100644\n--- a/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnosticTest.java\n+++ b/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnosticTest.java\n\n@@ -103,7 +103,7 @@ class CommonModuleInvalidTypeDiagnosticTest extends AbstractDiagnosticTest<Commo\n     getDocumentContextFromFile();\n \n     // given\n-    when(module.getName()).thenReturn(\"\u041f\u0440\u043e\u0441\u0442\u043e\u0412\u044b\u0437\u043e\u0432\u0421\u0435\u0440\u0432\u0435\u0440\u0430\u0442\");\n+    when(module.getName()).thenReturn(\"\u041f\u0440\u043e\u0441\u0442\u043e\u0412\u044b\u0437\u043e\u0432\u0421\u0435\u0440\u0432\u0435\u0440\u0430\");\n     when(module.isServer()).thenReturn(Boolean.TRUE);\n     when(module.isServerCall()).thenReturn(Boolean.TRUE);\n     when(module.isExternalConnection()).thenReturn(Boolean.FALSE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MTc0Ng==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424371746", "bodyText": "\u0430 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u043e\u0431\u0443\u0447\u043d\u044b\u043c \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u043c \u0440\u0430\u0437\u0432\u0435 \u043d\u0435 \u043f\u043e \u0438\u043b\u0438 \u043d\u0430\u0434\u043e?", "author": "theshadowco", "createdAt": "2020-05-13T11:42:04Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+\n+import java.util.regex.Matcher;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.UNPREDICTABLE\n+  }\n+\n+)\n+public class CommonModuleInvalidTypeDiagnostic extends AbstractCommonModuleNameDiagnostic {\n+  public CommonModuleInvalidTypeDiagnostic(DiagnosticInfo info) {\n+    super(info, \"\");\n+  }\n+\n+  @Override\n+  protected boolean flagsCheck(CommonModule commonModule) {\n+\n+    return !isServer(commonModule)\n+      && !isServerCall(commonModule)\n+      && !isClient(commonModule)\n+      && !isClientServer(commonModule);\n+  }\n+\n+  private boolean isClientServer(CommonModule commonModule) {\n+    return !commonModule.isServerCall()\n+      && commonModule.isServer()\n+      && commonModule.isExternalConnection()\n+      && commonModule.isClientOrdinaryApplication()", "originalCommit": "8ef79b8fc6ac5537584026fa9254a76a86d84f46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a7980938c373c24547eda3d0d95df7294273119", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java\nindex 6d0e452047..834d4586a7 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java\n\n@@ -23,20 +23,27 @@ package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n \n import java.util.regex.Matcher;\n \n @DiagnosticMetadata(\n   type = DiagnosticType.ERROR,\n   severity = DiagnosticSeverity.MAJOR,\n+  scope = DiagnosticScope.BSL,\n+  modules = {\n+    ModuleType.CommonModule\n+  },\n   minutesToFix = 5,\n   tags = {\n     DiagnosticTag.STANDARD,\n-    DiagnosticTag.UNPREDICTABLE\n+    DiagnosticTag.UNPREDICTABLE,\n+    DiagnosticTag.DESIGN\n   }\n \n )\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MTkwMA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424371900", "bodyText": "\u0430 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u043e\u0431\u0443\u0447\u043d\u044b\u043c \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u043c \u0440\u0430\u0437\u0432\u0435 \u043d\u0435 \u043f\u043e \u0438\u043b\u0438 \u043d\u0430\u0434\u043e?", "author": "theshadowco", "createdAt": "2020-05-13T11:42:24Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+\n+import java.util.regex.Matcher;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.ERROR,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 5,\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.UNPREDICTABLE\n+  }\n+\n+)\n+public class CommonModuleInvalidTypeDiagnostic extends AbstractCommonModuleNameDiagnostic {\n+  public CommonModuleInvalidTypeDiagnostic(DiagnosticInfo info) {\n+    super(info, \"\");\n+  }\n+\n+  @Override\n+  protected boolean flagsCheck(CommonModule commonModule) {\n+\n+    return !isServer(commonModule)\n+      && !isServerCall(commonModule)\n+      && !isClient(commonModule)\n+      && !isClientServer(commonModule);\n+  }\n+\n+  private boolean isClientServer(CommonModule commonModule) {\n+    return !commonModule.isServerCall()\n+      && commonModule.isServer()\n+      && commonModule.isExternalConnection()\n+      && commonModule.isClientOrdinaryApplication()\n+      && commonModule.isClientManagedApplication();\n+  }\n+\n+  private boolean isClient(CommonModule commonModule) {\n+    return !commonModule.isServerCall()\n+      && !commonModule.isServer()\n+      && !commonModule.isExternalConnection()\n+      && commonModule.isClientOrdinaryApplication()", "originalCommit": "8ef79b8fc6ac5537584026fa9254a76a86d84f46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM4MjA4Ng==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424382086", "bodyText": "// \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043c\u043e\u0434\u0443\u043b\u044c.\n\u0418\u043d\u0430\u0447\u0435\u0415\u0441\u043b\u0438 \u041d\u0415 \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u041e\u0431\u044a\u0435\u043a\u0442\u0430.\u0412\u044b\u0437\u043e\u0432\u0421\u0435\u0440\u0432\u0435\u0440\u0430 \n\t\u0418 \u041d\u0415 \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u041e\u0431\u044a\u0435\u043a\u0442\u0430.\u0421\u0435\u0440\u0432\u0435\u0440\n\t\u0418 \u041d\u0415 \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u041e\u0431\u044a\u0435\u043a\u0442\u0430.\u0412\u043d\u0435\u0448\u043d\u0435\u0435\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\n\t\u0418 \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u041e\u0431\u044a\u0435\u043a\u0442\u0430.\u041a\u043b\u0438\u0435\u043d\u0442\u041e\u0431\u044b\u0447\u043d\u043e\u0435\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \n\t\u0418 \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u041e\u0431\u044a\u0435\u043a\u0442\u0430.\u041a\u043b\u0438\u0435\u043d\u0442\u0423\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u0435\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0422\u043e\u0433\u0434\u0430\n\t\t// \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441 \u043f\u043e\u0441\u0442\u0444\u0438\u043a\u0441\u043e\u043c \"\u041a\u043b\u0438\u0435\u043d\u0442\" (\u0430\u043d\u0433\u043b. \"Client\"), \"\u0413\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439\" (\u0430\u043d\u0433\u043b. \"Global\").", "author": "asosnoviy", "createdAt": "2020-05-13T12:01:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MTkwMA=="}], "type": "inlineReview", "revised_code": {"commit": "5a7980938c373c24547eda3d0d95df7294273119", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java\nindex 6d0e452047..834d4586a7 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/CommonModuleInvalidTypeDiagnostic.java\n\n@@ -23,20 +23,27 @@ package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n import com.github._1c_syntax.mdclasses.mdo.CommonModule;\n+import com.github._1c_syntax.mdclasses.metadata.additional.ModuleType;\n \n import java.util.regex.Matcher;\n \n @DiagnosticMetadata(\n   type = DiagnosticType.ERROR,\n   severity = DiagnosticSeverity.MAJOR,\n+  scope = DiagnosticScope.BSL,\n+  modules = {\n+    ModuleType.CommonModule\n+  },\n   minutesToFix = 5,\n   tags = {\n     DiagnosticTag.STANDARD,\n-    DiagnosticTag.UNPREDICTABLE\n+    DiagnosticTag.UNPREDICTABLE,\n+    DiagnosticTag.DESIGN\n   }\n \n )\n"}}, {"oid": "5a7980938c373c24547eda3d0d95df7294273119", "url": "https://github.com/1c-syntax/bsl-language-server/commit/5a7980938c373c24547eda3d0d95df7294273119", "message": "\u0423\u0437\u043e\u0440\u044b", "committedDate": "2020-05-13T12:17:58Z", "type": "commit"}, {"oid": "2a3ad58fc37900464e886120dad8059b2d119e6e", "url": "https://github.com/1c-syntax/bsl-language-server/commit/2a3ad58fc37900464e886120dad8059b2d119e6e", "message": "test fix", "committedDate": "2020-05-13T12:42:04Z", "type": "commit"}, {"oid": "a2a0e83f705178bce3e3031c0fb046c3545a3e2c", "url": "https://github.com/1c-syntax/bsl-language-server/commit/a2a0e83f705178bce3e3031c0fb046c3545a3e2c", "message": "type in abstract class", "committedDate": "2020-05-13T14:09:53Z", "type": "commit"}, {"oid": "4bb5c5ec16109e628ef8aceaaab9d20650966c4c", "url": "https://github.com/1c-syntax/bsl-language-server/commit/4bb5c5ec16109e628ef8aceaaab9d20650966c4c", "message": "other diags use abstract type", "committedDate": "2020-05-13T14:11:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4OTE5Mg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424489192", "bodyText": "\u044d\u0442\u043e \u0436\u0435 \u0432 TODO, \u0434\u0430? \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043c\u043d\u0435 \u044d\u0442\u0430 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u043e\u0447\u0435\u043d\u044c \u043d\u0443\u0436\u043d\u0430 \u0438\u043c\u0435\u043d\u043d\u043e \u0441 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u043d\u0430 \u043e\u0431\u044b\u0447\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435)", "author": "nixel2007", "createdAt": "2020-05-13T14:37:21Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java", "diffHunk": "@@ -61,4 +61,36 @@ protected boolean matchCheck(Matcher matcher) {\n     return !matcher.find();\n   }\n \n+  protected static boolean isClientServer(CommonModule commonModule) {\n+    return !commonModule.isServerCall()\n+      && commonModule.isServer()\n+      && commonModule.isExternalConnection()\n+//      && commonModule.isClientOrdinaryApplication()", "originalCommit": "4bb5c5ec16109e628ef8aceaaab9d20650966c4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ5NjQ5Ng==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1188#discussion_r424496496", "bodyText": "\u0423\u0433\u0443, \u044f \u043f\u044b\u0442\u0430\u044e\u0441\u044c \u043f\u043e\u043d\u044f\u0442\u044c, \u0447\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0442\u043e.", "author": "asosnoviy", "createdAt": "2020-05-13T14:46:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4OTE5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5e969f4d6c41cd44a0e6fbd39ecc2ec57bce32e5", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java\nindex 58cf77773a..1dc0b0a708 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/AbstractCommonModuleNameDiagnostic.java\n\n@@ -65,7 +65,7 @@ abstract class AbstractCommonModuleNameDiagnostic extends AbstractDiagnostic {\n     return !commonModule.isServerCall()\n       && commonModule.isServer()\n       && commonModule.isExternalConnection()\n-//      && commonModule.isClientOrdinaryApplication()\n+      && commonModule.isClientOrdinaryApplication()\n       && commonModule.isClientManagedApplication();\n   }\n \n"}}, {"oid": "5e969f4d6c41cd44a0e6fbd39ecc2ec57bce32e5", "url": "https://github.com/1c-syntax/bsl-language-server/commit/5e969f4d6c41cd44a0e6fbd39ecc2ec57bce32e5", "message": "isClientOrdinaryApplication", "committedDate": "2020-05-13T15:20:31Z", "type": "commit"}, {"oid": "73e094b3592c43cdadf55a22999041a05656a7c9", "url": "https://github.com/1c-syntax/bsl-language-server/commit/73e094b3592c43cdadf55a22999041a05656a7c9", "message": "\u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c isClientOrdinaryApplication", "committedDate": "2020-05-13T19:41:16Z", "type": "commit"}]}