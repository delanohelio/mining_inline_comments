{"pr_number": 828, "pr_title": "fix EmptyRegions", "pr_createdAt": "2020-01-21T11:50:53Z", "pr_url": "https://github.com/1c-syntax/bsl-language-server/pull/828", "timeline": [{"oid": "a5524c4b582ed4ff18a52de4a260f0a79487dd90", "url": "https://github.com/1c-syntax/bsl-language-server/commit/a5524c4b582ed4ff18a52de4a260f0a79487dd90", "message": "\u0418\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043d\u0435\u0432\u0435\u0440\u043d\u043e\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0443\u0441\u0442\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 + \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0437\u043b\u0430\u0445, \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432 \u043e\u0431\u043b\u0430\u0441\u0442\u044c", "committedDate": "2020-01-21T11:49:35Z", "type": "commit"}, {"oid": "058c9ccdaa54645ef9d8f863ccaa1da53fe48ddc", "url": "https://github.com/1c-syntax/bsl-language-server/commit/058c9ccdaa54645ef9d8f863ccaa1da53fe48ddc", "message": "\u041e\u0447\u0438\u0441\u0442\u043a\u0430 \u0441\u043f\u0438\u0441\u043a\u0430 \u043d\u043e\u0434", "committedDate": "2020-01-21T12:13:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2NzEwMQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r368967101", "bodyText": "\u0441\u043e\u0445\u0440\u0430\u043d\u0438 \u0441\u0440\u0430\u0437\u0443 nodes \u043a\u0430\u043a List<BSLParserRuleContext>", "author": "nixel2007", "createdAt": "2020-01-21T12:16:09Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java", "diffHunk": "@@ -78,9 +87,19 @@ public ParseTree visitRegionEnd(BSLParser.RegionEndContext ctx) {\n     RegionSymbol.RegionSymbolBuilder builder = regionStack.pop();\n     builder.endNode(ctx);\n     builder.endLine(ctx.getStop().getLine());\n-\n     RegionSymbol region = builder.build();\n \n+    nodes.stream().filter(node ->\n+      (((BSLParserRuleContext) node).getStart().getLine() >= region.getStartLine()", "originalCommit": "058c9ccdaa54645ef9d8f863ccaa1da53fe48ddc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2NzYxMQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r368967611", "bodyText": "\u0430\u0433\u0430, \u0437\u0430\u043f\u0438\u0441\u0430\u043b \u0441\u0435\u0431\u0435 \u0438 \u0437\u0430\u0431\u044b\u043b (", "author": "theshadowco", "createdAt": "2020-01-21T12:17:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2NzEwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "e44e6c1aae7b554d25790abf47457ebe4c178922", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java\nindex 32b43ea60..bd14c05dd 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java\n\n@@ -88,16 +88,15 @@ public final class RegionSymbolComputer\n     builder.endNode(ctx);\n     builder.endLine(ctx.getStop().getLine());\n     RegionSymbol region = builder.build();\n-\n     nodes.stream().filter(node ->\n-      (((BSLParserRuleContext) node).getStart().getLine() >= region.getStartLine()\n-        || ((BSLParserRuleContext) node).getStop().getLine() >= region.getStartLine()))\n+      (node.getStart().getLine() >= region.getStartLine()\n+        || node.getStop().getLine() >= region.getStartLine()))\n       .takeWhile(node ->\n-        (((BSLParserRuleContext) node).getStart().getLine() <= region.getEndLine()\n-          || ((BSLParserRuleContext) node).getStop().getLine() <= region.getEndLine()))\n+        (node.getStart().getLine() <= region.getEndLine()\n+          || node.getStop().getLine() <= region.getEndLine()))\n       .filter(node ->\n-        ((BSLParserRuleContext) node).getStart().getLine() > region.getStartLine()\n-          && ((BSLParserRuleContext) node).getStart().getLine() < region.getEndLine())\n+        node.getStart().getLine() > region.getStartLine()\n+          && node.getStart().getLine() < region.getEndLine())\n       .forEach(node -> region.getNodes().add(node));\n \n     RegionSymbol.RegionSymbolBuilder parent = regionStack.peek();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2NzQwOQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r368967409", "bodyText": "BSLParserRuleContext", "author": "nixel2007", "createdAt": "2020-01-21T12:16:58Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/context/symbol/RegionSymbol.java", "diffHunk": "@@ -51,6 +52,7 @@\n   @Singular\n   private final List<RegionSymbol> children;\n   private final List<MethodSymbol> methods = new ArrayList<>();\n+  private final List<ParseTree> nodes = new ArrayList<>();", "originalCommit": "058c9ccdaa54645ef9d8f863ccaa1da53fe48ddc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e44e6c1aae7b554d25790abf47457ebe4c178922", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/symbol/RegionSymbol.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/symbol/RegionSymbol.java\nindex 844976bee..eb7191834 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/symbol/RegionSymbol.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/symbol/RegionSymbol.java\n\n@@ -52,7 +51,7 @@ public class RegionSymbol implements Symbol {\n   @Singular\n   private final List<RegionSymbol> children;\n   private final List<MethodSymbol> methods = new ArrayList<>();\n-  private final List<ParseTree> nodes = new ArrayList<>();\n+  private final List<BSLParserRuleContext> nodes = new ArrayList<>();\n \n   @NonFinal\n   private BSLParserRuleContext node;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2ODYxMg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r368968612", "bodyText": "\u0410 \u0437\u0430\u0447\u0435\u043c \u0432\u043e\u0442 \u044d\u0442\u043e? \u043f\u043e\u0447\u0435\u043c\u0443 \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u0435\u0440\u0445\u043d\u0435\u0443\u0440\u043e\u0432\u043d\u0435\u0433\u043e \u0440\u0435\u0433\u0438\u043e\u043d\u0430? \u0432\u0440\u043e\u0434\u0435 \u0432\u0435\u0440\u0445\u043d\u0435\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u044b\u0439 \u0440\u0435\u0433\u0438\u043e\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435 \u043d\u043e\u0434\u044b \u043f\u043e\u0434\u0447\u0438\u043d\u0435\u043d\u043d\u044b\u0445 \u0440\u0435\u0433\u0438\u043e\u043d\u043e\u0432", "author": "nixel2007", "createdAt": "2020-01-21T12:19:57Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/EmptyRegionDiagnostic.java", "diffHunk": "@@ -73,10 +74,28 @@ private boolean checkRegionRecursively(RegionSymbol region) {\n       }\n     }\n \n-    if (region.getMethods().isEmpty() && !childrensHaveMethods) {\n+    if (region.getNodes().isEmpty() && !childrensHaveMethods) {\n       diagnosticStorage.addDiagnostic(\n         region.getNode(), info.getMessage(region.getName()));\n       return true;\n+    } else if (!region.getNodes().isEmpty() && !children.isEmpty()) {", "originalCommit": "058c9ccdaa54645ef9d8f863ccaa1da53fe48ddc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk5NzU4MQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r368997581", "bodyText": "\u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u043b \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c", "author": "theshadowco", "createdAt": "2020-01-21T13:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2ODYxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3MjA3Mg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r369072072", "bodyText": "fix", "author": "theshadowco", "createdAt": "2020-01-21T15:33:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2ODYxMg=="}], "type": "inlineReview", "revised_code": {"commit": "e44e6c1aae7b554d25790abf47457ebe4c178922", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/EmptyRegionDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/EmptyRegionDiagnostic.java\nindex 323940f2a..4f926d9d9 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/EmptyRegionDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/EmptyRegionDiagnostic.java\n\n@@ -79,11 +79,10 @@ public class EmptyRegionDiagnostic extends AbstractDiagnostic implements QuickFi\n         region.getNode(), info.getMessage(region.getName()));\n       return true;\n     } else if (!region.getNodes().isEmpty() && !children.isEmpty()) {\n-      List<ParseTree> parentNodes = region.getNodes();\n+      // \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u043e\u0439 \u0442.\u043a. \u0432 \u043d\u0435\u0439 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u0440\u0443\u0433\u0438\u0435 \u043e\u0431\u043b\u0430\u0441\u0442\u0438\n+      // \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0443\u0434\u0430\u043b\u0438\u043c \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c, \u0447\u0442\u043e \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c\n+      List<BSLParserRuleContext> parentNodes = region.getNodes();\n       children.forEach((RegionSymbol childrenRegion) -> {\n-        childrenRegion.getNodes().forEach(node ->\n-          parentNodes.removeIf(parentNode -> parentNode.equals(node))\n-        );\n         parentNodes.removeIf(parentNode -> parentNode.equals(childrenRegion.getStartNode()));\n         parentNodes.removeIf(parentNode -> parentNode.equals(childrenRegion.getStartNode().getParent()));\n         parentNodes.removeIf(parentNode -> parentNode.equals(childrenRegion.getEndNode()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2ODkzMg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r368968932", "bodyText": "\u043d\u0430\u0434\u043e \u0432\u043e\u0442 \u044d\u0442\u043e \u043f\u0435\u0440\u0435\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0430 builder.nodes(nodes...)", "author": "nixel2007", "createdAt": "2020-01-21T12:20:41Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java", "diffHunk": "@@ -78,9 +87,19 @@ public ParseTree visitRegionEnd(BSLParser.RegionEndContext ctx) {\n     RegionSymbol.RegionSymbolBuilder builder = regionStack.pop();\n     builder.endNode(ctx);\n     builder.endLine(ctx.getStop().getLine());\n-\n     RegionSymbol region = builder.build();\n \n+    nodes.stream().filter(node ->\n+      (((BSLParserRuleContext) node).getStart().getLine() >= region.getStartLine()\n+        || ((BSLParserRuleContext) node).getStop().getLine() >= region.getStartLine()))\n+      .takeWhile(node ->\n+        (((BSLParserRuleContext) node).getStart().getLine() <= region.getEndLine()\n+          || ((BSLParserRuleContext) node).getStop().getLine() <= region.getEndLine()))\n+      .filter(node ->\n+        ((BSLParserRuleContext) node).getStart().getLine() > region.getStartLine()\n+          && ((BSLParserRuleContext) node).getStart().getLine() < region.getEndLine())\n+      .forEach(node -> region.getNodes().add(node));", "originalCommit": "058c9ccdaa54645ef9d8f863ccaa1da53fe48ddc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk5NTMxNA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r368995314", "bodyText": "\u0445\u043c... \u0430 \u043a\u0430\u043a \u043c\u043d\u0435 \u0434\u043e\u0441\u0442\u0430\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043e\u0431\u043b\u0430\u0441\u0442\u0438? \u0431\u0438\u043b\u0434\u0435\u0442 \u0436\u0435 \u0433\u0435\u0442\u0442\u0435\u0440\u043e\u0432 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442", "author": "theshadowco", "createdAt": "2020-01-21T13:21:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2ODkzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3MjEzNQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r369072135", "bodyText": "fix", "author": "theshadowco", "createdAt": "2020-01-21T15:33:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2ODkzMg=="}], "type": "inlineReview", "revised_code": {"commit": "e44e6c1aae7b554d25790abf47457ebe4c178922", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java\nindex 32b43ea60..bd14c05dd 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java\n\n@@ -88,16 +88,15 @@ public final class RegionSymbolComputer\n     builder.endNode(ctx);\n     builder.endLine(ctx.getStop().getLine());\n     RegionSymbol region = builder.build();\n-\n     nodes.stream().filter(node ->\n-      (((BSLParserRuleContext) node).getStart().getLine() >= region.getStartLine()\n-        || ((BSLParserRuleContext) node).getStop().getLine() >= region.getStartLine()))\n+      (node.getStart().getLine() >= region.getStartLine()\n+        || node.getStop().getLine() >= region.getStartLine()))\n       .takeWhile(node ->\n-        (((BSLParserRuleContext) node).getStart().getLine() <= region.getEndLine()\n-          || ((BSLParserRuleContext) node).getStop().getLine() <= region.getEndLine()))\n+        (node.getStart().getLine() <= region.getEndLine()\n+          || node.getStop().getLine() <= region.getEndLine()))\n       .filter(node ->\n-        ((BSLParserRuleContext) node).getStart().getLine() > region.getStartLine()\n-          && ((BSLParserRuleContext) node).getStart().getLine() < region.getEndLine())\n+        node.getStart().getLine() > region.getStartLine()\n+          && node.getStart().getLine() < region.getEndLine())\n       .forEach(node -> region.getNodes().add(node));\n \n     RegionSymbol.RegionSymbolBuilder parent = regionStack.peek();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3MjQ0MA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r368972440", "bodyText": "\u0435\u0433\u043e \u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c final \u0431\u0435\u0437 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0442\u0443\u0442. \u0430 \u0432 \u0431\u0438\u043b\u0434\u0435\u0440\u0435 \u0438\u043d\u0438\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u043a unmodifiableList.", "author": "nixel2007", "createdAt": "2020-01-21T12:29:20Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java", "diffHunk": "@@ -39,6 +42,7 @@\n   private final DocumentContext documentContext;\n   private Deque<RegionSymbol.RegionSymbolBuilder> regionStack = new ArrayDeque<>();\n   private List<RegionSymbol> regions = new ArrayList<>();\n+  private List<ParseTree> nodes = new ArrayList<>();", "originalCommit": "a5524c4b582ed4ff18a52de4a260f0a79487dd90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3MjE3OQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r369072179", "bodyText": "fix", "author": "theshadowco", "createdAt": "2020-01-21T15:33:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3MjQ0MA=="}], "type": "inlineReview", "revised_code": {"commit": "e44e6c1aae7b554d25790abf47457ebe4c178922", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java\nindex 32b43ea60..bd14c05dd 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java\n\n@@ -42,7 +41,7 @@ public final class RegionSymbolComputer\n   private final DocumentContext documentContext;\n   private Deque<RegionSymbol.RegionSymbolBuilder> regionStack = new ArrayDeque<>();\n   private List<RegionSymbol> regions = new ArrayList<>();\n-  private List<ParseTree> nodes = new ArrayList<>();\n+  private List<BSLParserRuleContext> nodes = new ArrayList<>();\n \n   public RegionSymbolComputer(DocumentContext documentContext) {\n     this.documentContext = documentContext;\n"}}, {"oid": "e44e6c1aae7b554d25790abf47457ebe4c178922", "url": "https://github.com/1c-syntax/bsl-language-server/commit/e44e6c1aae7b554d25790abf47457ebe4c178922", "message": "1. \u041f\u0435\u0440\u0435\u0435\u0437\u0434 \u043d\u0430 BSLParserRuleContext\n\n2. \u041d\u0435\u0431\u043e\u043b\u044c\u0448\u0430\u044f \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438", "committedDate": "2020-01-21T13:25:15Z", "type": "commit"}, {"oid": "ee30bbbc02a281e25f2e7d65a6a9970c24d1012b", "url": "https://github.com/1c-syntax/bsl-language-server/commit/ee30bbbc02a281e25f2e7d65a6a9970c24d1012b", "message": "\u0440\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433", "committedDate": "2020-01-21T15:33:27Z", "type": "commit"}, {"oid": "abbb9e9dae17ef9eb3c43258d64bab65f74dc4b0", "url": "https://github.com/1c-syntax/bsl-language-server/commit/abbb9e9dae17ef9eb3c43258d64bab65f74dc4b0", "message": "\u0420\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433", "committedDate": "2020-01-22T08:38:23Z", "type": "commit"}, {"oid": "234402e3e461a7161cab27d9c2f3ad7a5c898316", "url": "https://github.com/1c-syntax/bsl-language-server/commit/234402e3e461a7161cab27d9c2f3ad7a5c898316", "message": "\u0420\u0435\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u043d\u0433 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0434\u0435\u0442\u0435\u0439", "committedDate": "2020-01-22T09:14:48Z", "type": "commit"}, {"oid": "eacbd8ecd9a25b3661c767f05e0a9e89ec68db3b", "url": "https://github.com/1c-syntax/bsl-language-server/commit/eacbd8ecd9a25b3661c767f05e0a9e89ec68db3b", "message": "Fix QF", "committedDate": "2020-01-22T09:22:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4NjE1Nw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r369486157", "bodyText": "\u0442\u0430\u043a \u0442\u044b \u0432\u0435\u0441\u044c \u043f\u0440\u0435\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440 \u0432\u044b\u043a\u0438\u043d\u0435\u0448\u044c \u0436\u0435... \u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435 \u0445\u043e\u0442\u0435\u043b :(", "author": "theshadowco", "createdAt": "2020-01-22T10:41:34Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/EmptyRegionDiagnostic.java", "diffHunk": "@@ -50,41 +54,42 @@\n )\n public class EmptyRegionDiagnostic extends AbstractDiagnostic implements QuickFixProvider {\n \n+  private static final Set<Integer> REGIONS_NODE_INDEXES = Set.of(\n+    BSLParser.RULE_regionName,\n+    BSLParser.RULE_regionStart,\n+    BSLParser.RULE_regionEnd,\n+    BSLParser.RULE_preprocessor", "originalCommit": "eacbd8ecd9a25b3661c767f05e0a9e89ec68db3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4NzA1NQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r369487055", "bodyText": "\u043e\u043d \u043d\u0435 \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0435\u0442\u0441\u044f, \u0442.\u043a. \u0432 nodes \u043e\u0441\u0442\u0430\u043d\u0443\u0442\u0441\u044f RULE_preproc_*", "author": "nixel2007", "createdAt": "2020-01-22T10:43:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4NjE1Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4NzM5Nw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/828#discussion_r369487397", "bodyText": "\u0441\u0443\u043f\u0435\u0440! \u044f \u0442\u0443\u043f\u0438\u043b, \u043a\u0430\u043a \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c", "author": "theshadowco", "createdAt": "2020-01-22T10:44:20Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/context/computer/RegionSymbolComputer.java", "diffHunk": "@@ -48,6 +53,14 @@ public RegionSymbolComputer(DocumentContext documentContext) {\n   public List<RegionSymbol> compute() {\n     regionStack.clear();\n     regions.clear();\n+    allNodes.clear();\n+\n+    Trees.getDescendants(documentContext.getAst()).stream()\n+      .filter(node -> node instanceof BSLParserRuleContext)\n+      .map(node -> (BSLParserRuleContext) node)", "originalCommit": "eacbd8ecd9a25b3661c767f05e0a9e89ec68db3b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}