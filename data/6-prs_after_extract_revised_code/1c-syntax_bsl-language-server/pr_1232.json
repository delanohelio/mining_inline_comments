{"pr_number": 1232, "pr_title": "Feature/export variables", "pr_createdAt": "2020-06-01T22:30:08Z", "pr_url": "https://github.com/1c-syntax/bsl-language-server/pull/1232", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY3OTI5MQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1232#discussion_r433679291", "bodyText": "\u044f \u0436\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u044e, \u0447\u0442\u043e \u0432 \u043e\u0431\u0449\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0430\u0434\u043e \u0435\u0449\u0435 \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u044b\u0437\u043e\u0432 super.visitSomething \u0432 \u043a\u043e\u043d\u0435\u0446 \u043c\u0435\u0442\u043e\u0434\u0430? \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0442\u0443\u0442 \u043d\u0435 \u043d\u0430\u0434\u043e, \u043d\u043e \u0432\u043e\u043e\u0431\u0449\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0435\u043d\u0438\u044f \u043e\u0431\u0445\u043e\u0434\u0430 \u0434\u0435\u0440\u0435\u0432\u0430 (\u043f\u043e \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0438 \u0441 \u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u0430\u043c\u0438 AbstractVisitorDiagnostic) - \u043d\u0430\u0434\u043e", "author": "nixel2007", "createdAt": "2020-06-02T07:38:54Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExportVariablesDiagnostic.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.MethodSymbol;\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.VariableSymbol;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 5,\n+  scope = DiagnosticScope.ALL,\n+  tags = {\n+    DiagnosticTag.STANDARD,\n+    DiagnosticTag.DESIGN,\n+    DiagnosticTag.UNPREDICTABLE\n+  }\n+)\n+public class ExportVariablesDiagnostic extends AbstractSymbolTreeDiagnostic {\n+  public ExportVariablesDiagnostic(DiagnosticInfo info) {\n+    super(info);\n+  }\n+\n+  @Override\n+  public void visitVariable(VariableSymbol variable) {", "originalCommit": "b8b70ddd8e98fd7d9811e17a39332c463706cc20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcyNTMwMw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1232#discussion_r433725303", "bodyText": "\u0414\u0430 \u0432\u0441\u0435 \u0432\u0435\u0440\u043d\u043e", "author": "alkoleft", "createdAt": "2020-06-02T08:58:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY3OTI5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "98e6f03d0bb26a156e97d5e48e549cae5db22168", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExportVariablesDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java\nsimilarity index 56%\nrename from src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExportVariablesDiagnostic.java\nrename to src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java\nindex b872524f79..9b2c4ef347 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExportVariablesDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/MetadataObjectNameLengthDiagnostic.java\n\n@@ -21,40 +21,56 @@\n  */\n package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n-import com.github._1c_syntax.bsl.languageserver.context.symbol.MethodSymbol;\n-import com.github._1c_syntax.bsl.languageserver.context.symbol.VariableSymbol;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticInfo;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticParameter;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticScope;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.mdclasses.mdo.MDObjectBase;\n+import org.antlr.v4.runtime.Token;\n \n @DiagnosticMetadata(\n-  type = DiagnosticType.CODE_SMELL,\n+  type = DiagnosticType.ERROR,\n   severity = DiagnosticSeverity.MAJOR,\n-  minutesToFix = 5,\n-  scope = DiagnosticScope.ALL,\n+  minutesToFix = 10,\n+  scope = DiagnosticScope.BSL,\n   tags = {\n-    DiagnosticTag.STANDARD,\n-    DiagnosticTag.DESIGN,\n-    DiagnosticTag.UNPREDICTABLE\n+    DiagnosticTag.STANDARD\n   }\n+\n )\n-public class ExportVariablesDiagnostic extends AbstractSymbolTreeDiagnostic {\n-  public ExportVariablesDiagnostic(DiagnosticInfo info) {\n+public class MetadataObjectNameLengthDiagnostic extends AbstractDiagnostic {\n+\n+  private static final int MAX_METADATA_OBJECT_NAME_LENGTH = 80;\n+\n+  @DiagnosticParameter(\n+    type = Integer.class,\n+    defaultValue = \"\" + MAX_METADATA_OBJECT_NAME_LENGTH\n+  )\n+  private int maxMetadataObjectNameLength = MAX_METADATA_OBJECT_NAME_LENGTH;\n+\n+  public MetadataObjectNameLengthDiagnostic(DiagnosticInfo info) {\n     super(info);\n   }\n \n   @Override\n-  public void visitVariable(VariableSymbol variable) {\n-    if (variable.isExport()) {\n-      diagnosticStorage.addDiagnostic(variable.getRange());\n-    }\n+  protected void check() {\n+    if (!documentContext.getTokens().isEmpty()\n+      && documentContext.getTokens().get(0).getType() != Token.EOF\n+    )\n+      documentContext\n+        .getMdObject()\n+        .map(MDObjectBase::getName)\n+        .filter(this::checkName)\n+        .ifPresent(name -> diagnosticStorage.addDiagnostic(\n+          documentContext.getTokens().get(0),\n+          info.getMessage(maxMetadataObjectNameLength))\n+        );\n   }\n \n-  @Override\n-  public void visitMethod(MethodSymbol method) {\n-    // skip content of methods\n+  private boolean checkName(String name) {\n+    return name.length() > maxMetadataObjectNameLength;\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4MTE1Mg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1232#discussion_r433681152", "bodyText": "\u041f\u0435\u0440\u0435\u043d\u0435\u0441\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0432 \u0444\u0430\u0439\u043b, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430.\n\u041f\u043e \u0444\u0430\u0439\u043b\u0430\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0440\u044f\u0434 smoke-\u0442\u0435\u0441\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0442\u043b\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u0441\u044f\u043a\u0438 \u043d\u0430 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438, \u0430 \u0432 \u0442\u0430\u043a\u043e\u043c \u0432\u0438\u0434\u0435 \u044d\u0442\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0442\u0435\u0440\u044f\u0435\u0442\u0441\u044f.", "author": "nixel2007", "createdAt": "2020-06-02T07:42:30Z", "path": "src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExportVariablesDiagnosticTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.util.TestUtils;\n+import lombok.SneakyThrows;\n+import org.apache.commons.io.FileUtils;\n+import org.eclipse.lsp4j.Diagnostic;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.util.List;\n+\n+import static com.github._1c_syntax.bsl.languageserver.util.Assertions.assertThat;\n+\n+class ExportVariablesDiagnosticTest extends AbstractDiagnosticTest<ExportVariablesDiagnostic> {\n+  ExportVariablesDiagnosticTest() {\n+    super(ExportVariablesDiagnostic.class);\n+  }\n+\n+  @Test\n+  void test() throws IOException {\n+\n+    String content = \"\u041f\u0435\u0440\u0435\u043c \u041f\u0435\u0440\u0435\u043c1 \u042d\u043a\u0441\u043f\u043e\u0440\u0442,\\n \u041f\u0435\u0440\u0435\u043c2\\n,\u041f\u0435\u0440\u0435\u043c53 \\n\u042d\u043a\u0441\u043f\u043e\u0440\u0442\\n\\n\\n\";", "originalCommit": "b8b70ddd8e98fd7d9811e17a39332c463706cc20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAwMzE4Mw==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1232#discussion_r437003183", "bodyText": "\u041f\u0435\u0440\u0435\u043d\u0435\u0441 \u0432 \u0444\u0438\u043a\u0441\u0442\u0443\u0440\u044b", "author": "alkoleft", "createdAt": "2020-06-08T21:10:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4MTE1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "98e6f03d0bb26a156e97d5e48e549cae5db22168", "chunk": "diff --git a/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExportVariablesDiagnosticTest.java b/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExportVariablesDiagnosticTest.java\ndeleted file mode 100644\nindex ecd68e4d8b..0000000000\n--- a/src/test/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/ExportVariablesDiagnosticTest.java\n+++ /dev/null\n\n@@ -1,54 +0,0 @@\n-/*\n- * This file is a part of BSL Language Server.\n- *\n- * Copyright \u00a9 2018-2020\n- * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n- *\n- * SPDX-License-Identifier: LGPL-3.0-or-later\n- *\n- * BSL Language Server is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation; either\n- * version 3.0 of the License, or (at your option) any later version.\n- *\n- * BSL Language Server is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with BSL Language Server.\n- */\n-package com.github._1c_syntax.bsl.languageserver.diagnostics;\n-\n-import com.github._1c_syntax.bsl.languageserver.util.TestUtils;\n-import lombok.SneakyThrows;\n-import org.apache.commons.io.FileUtils;\n-import org.eclipse.lsp4j.Diagnostic;\n-import org.junit.jupiter.api.Test;\n-\n-import java.io.File;\n-import java.io.IOException;\n-import java.nio.charset.StandardCharsets;\n-import java.util.List;\n-\n-import static com.github._1c_syntax.bsl.languageserver.util.Assertions.assertThat;\n-\n-class ExportVariablesDiagnosticTest extends AbstractDiagnosticTest<ExportVariablesDiagnostic> {\n-  ExportVariablesDiagnosticTest() {\n-    super(ExportVariablesDiagnostic.class);\n-  }\n-\n-  @Test\n-  void test() throws IOException {\n-\n-    String content = \"\u041f\u0435\u0440\u0435\u043c \u041f\u0435\u0440\u0435\u043c1 \u042d\u043a\u0441\u043f\u043e\u0440\u0442,\\n \u041f\u0435\u0440\u0435\u043c2\\n,\u041f\u0435\u0440\u0435\u043c53 \\n\u042d\u043a\u0441\u043f\u043e\u0440\u0442\\n\\n\\n\";\n-    var document = TestUtils.getDocumentContext(content, context);\n-    List<Diagnostic> diagnostics = getDiagnostics(document);\n-\n-    assertThat(diagnostics).hasSize(2);\n-    assertThat(diagnostics, true)\n-      .hasRange(0, 6, 0, 20)\n-      .hasRange(2, 1, 3, 7);\n-  }\n-}\n"}}, {"oid": "98e6f03d0bb26a156e97d5e48e549cae5db22168", "url": "https://github.com/1c-syntax/bsl-language-server/commit/98e6f03d0bb26a156e97d5e48e549cae5db22168", "message": "\u0421\u043e\u0437\u0434\u0430\u043d\u0430 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430", "committedDate": "2020-06-08T21:06:35Z", "type": "commit"}, {"oid": "b9bff636991f6f0374371cb5e77b5c9d23e20c6c", "url": "https://github.com/1c-syntax/bsl-language-server/commit/b9bff636991f6f0374371cb5e77b5c9d23e20c6c", "message": "SymbolTree visitor", "committedDate": "2020-06-08T21:06:35Z", "type": "commit"}, {"oid": "fe9988adbeb6e7cc000d2f3313e38d2106ab593a", "url": "https://github.com/1c-syntax/bsl-language-server/commit/fe9988adbeb6e7cc000d2f3313e38d2106ab593a", "message": "\u0414\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u0431\u0430\u0437\u0438\u0440\u0443\u044e\u0449\u0430\u044f\u0441\u044f \u043d\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u044c\u043d\u043e\u043c \u0434\u0435\u0440\u0435\u0432\u0435", "committedDate": "2020-06-08T21:06:36Z", "type": "commit"}, {"oid": "b1e5b07d996ed41fce4d1f1b8d2166c5b6357cb2", "url": "https://github.com/1c-syntax/bsl-language-server/commit/b1e5b07d996ed41fce4d1f1b8d2166c5b6357cb2", "message": "\u0414\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0430 \u043d\u0430 \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435", "committedDate": "2020-06-08T21:06:37Z", "type": "commit"}, {"oid": "e2c47111436000f2d492397f57152fba711f87c1", "url": "https://github.com/1c-syntax/bsl-language-server/commit/e2c47111436000f2d492397f57152fba711f87c1", "message": "\u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043b \u0444\u0430\u0439\u043b\u044b", "committedDate": "2020-06-08T21:06:39Z", "type": "commit"}, {"oid": "c68e171df37385a8a0f0887f6e9bcd0b5895767f", "url": "https://github.com/1c-syntax/bsl-language-server/commit/c68e171df37385a8a0f0887f6e9bcd0b5895767f", "message": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a", "committedDate": "2020-06-08T21:07:05Z", "type": "commit"}, {"oid": "1d640b1715a3d187c9e12f4990fcea3f52d7073e", "url": "https://github.com/1c-syntax/bsl-language-server/commit/1d640b1715a3d187c9e12f4990fcea3f52d7073e", "message": "\u0418\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438", "committedDate": "2020-06-08T21:07:38Z", "type": "commit"}, {"oid": "9304125fa701c69eae530983bf9e98fd95aa9e16", "url": "https://github.com/1c-syntax/bsl-language-server/commit/9304125fa701c69eae530983bf9e98fd95aa9e16", "message": "\u0424\u0438\u043a\u0441\u0442\u0443\u0440\u0430 \u043f\u0435\u0440\u0435\u043d\u0435\u0441\u0435\u043d\u0430 \u0432 \u0440\u0435\u0441\u0443\u0440\u0441\u044b", "committedDate": "2020-06-08T21:07:42Z", "type": "commit"}, {"oid": "48bc68e8698b79b560407594b3ae2be4743f963a", "url": "https://github.com/1c-syntax/bsl-language-server/commit/48bc68e8698b79b560407594b3ae2be4743f963a", "message": "\u041f\u0440\u0435\u043a\u043e\u043c\u043c\u0438\u0442 \u043f\u043e\u0441\u043b\u0435 \u0440\u0435\u0431\u0435\u0439\u0437\u0430", "committedDate": "2020-06-08T21:10:15Z", "type": "commit"}, {"oid": "48bc68e8698b79b560407594b3ae2be4743f963a", "url": "https://github.com/1c-syntax/bsl-language-server/commit/48bc68e8698b79b560407594b3ae2be4743f963a", "message": "\u041f\u0440\u0435\u043a\u043e\u043c\u043c\u0438\u0442 \u043f\u043e\u0441\u043b\u0435 \u0440\u0435\u0431\u0435\u0439\u0437\u0430", "committedDate": "2020-06-08T21:10:15Z", "type": "forcePushed"}]}