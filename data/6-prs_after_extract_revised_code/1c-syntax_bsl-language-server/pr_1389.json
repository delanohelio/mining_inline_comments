{"pr_number": 1389, "pr_title": "FunctionOutboundParameterDiagnostic", "pr_createdAt": "2020-10-04T21:10:02Z", "pr_url": "https://github.com/1c-syntax/bsl-language-server/pull/1389", "timeline": [{"oid": "da1e4ee976f01b48839a1604f0725c284274f7a2", "url": "https://github.com/1c-syntax/bsl-language-server/commit/da1e4ee976f01b48839a1604f0725c284274f7a2", "message": "FunctionOutboundParameterDiagnostic", "committedDate": "2020-10-04T21:08:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQxOTMyNA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1389#discussion_r499419324", "bodyText": "\u0435\u043c\u043d\u0438\u043f \u043c\u043e\u0436\u043d\u043e \u0438 \u0431\u0435\u0437 getParent.", "author": "nixel2007", "createdAt": "2020-10-05T08:15:50Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.MethodSymbol;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.languageserver.utils.Trees;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.bsl.parser.BSLParserRuleContext;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.Collection;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  activatedByDefault = false,\n+  tags = {\n+    DiagnosticTag.DESIGN\n+  }\n+\n+)\n+public class FunctionOutboundParameterDiagnostic extends AbstractVisitorDiagnostic {\n+\n+  @Override\n+  public ParseTree visitFunction(BSLParser.FunctionContext ctx) {\n+\n+    TreeMap<String, BSLParserRuleContext> lvalues = Trees.findAllRuleNodes(ctx.subCodeBlock(), BSLParser.RULE_lValue)\n+      .stream()\n+      .collect(\n+        Collectors.toMap(ParseTree::getText, node -> (BSLParserRuleContext) node, (name, node) -> name, TreeMap::new));\n+\n+    documentContext.getSymbolTree().getMethodSymbol((BSLParserRuleContext) ctx.getParent())", "originalCommit": "da1e4ee976f01b48839a1604f0725c284274f7a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQzMzU5MA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1389#discussion_r499433590", "bodyText": "\u041f\u043e\u043c\u043e\u0435\u043c\u0443 \u043f\u0440\u043e\u0431\u043e\u0432\u0430\u043b, \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0432\u0435\u0440\u043d\u0443\u043b\u043e\u0441\u044c", "author": "asosnoviy", "createdAt": "2020-10-05T08:41:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQxOTMyNA=="}], "type": "inlineReview", "revised_code": {"commit": "9be1b071089f5b0078f1874d3761866b0d867f99", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\nsimilarity index 96%\nrename from src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java\nrename to src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\nindex 54ad5f124..a900bcdef 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\n\n@@ -45,7 +45,7 @@ import java.util.stream.Collectors;\n   }\n \n )\n-public class FunctionOutboundParameterDiagnostic extends AbstractVisitorDiagnostic {\n+public class FunctionOutParameterDiagnostic extends AbstractVisitorDiagnostic {\n \n   @Override\n   public ParseTree visitFunction(BSLParser.FunctionContext ctx) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQxOTY3NQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1389#discussion_r499419675", "bodyText": "findAllRuleNodes \u0434\u043e\u0440\u043e\u0433\u043e\u0439. \u0434\u0430\u0432\u0430\u0439 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u0447\u0442\u043e \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 \u043e\u0441\u0442\u0430\u043b\u0438\u0441\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u043c\u0435\u0435\u0442 \u0441\u043c\u044b\u0441\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c, \u0430 \u0443\u0436\u0435 \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043f\u043e\u0438\u0441\u043a findAllRuleNodes \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435.", "author": "nixel2007", "createdAt": "2020-10-05T08:16:31Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.MethodSymbol;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.languageserver.utils.Trees;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.bsl.parser.BSLParserRuleContext;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.Collection;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  activatedByDefault = false,\n+  tags = {\n+    DiagnosticTag.DESIGN\n+  }\n+\n+)\n+public class FunctionOutboundParameterDiagnostic extends AbstractVisitorDiagnostic {\n+\n+  @Override\n+  public ParseTree visitFunction(BSLParser.FunctionContext ctx) {\n+\n+    TreeMap<String, BSLParserRuleContext> lvalues = Trees.findAllRuleNodes(ctx.subCodeBlock(), BSLParser.RULE_lValue)\n+      .stream()\n+      .collect(\n+        Collectors.toMap(ParseTree::getText, node -> (BSLParserRuleContext) node, (name, node) -> name, TreeMap::new));\n+\n+    documentContext.getSymbolTree().getMethodSymbol((BSLParserRuleContext) ctx.getParent())\n+      .stream()\n+      .map(MethodSymbol::getParameters)\n+      .flatMap(Collection::stream)\n+      .filter(param -> !param.isByValue())", "originalCommit": "da1e4ee976f01b48839a1604f0725c284274f7a2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9be1b071089f5b0078f1874d3761866b0d867f99", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\nsimilarity index 96%\nrename from src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java\nrename to src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\nindex 54ad5f124..a900bcdef 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\n\n@@ -45,7 +45,7 @@ import java.util.stream.Collectors;\n   }\n \n )\n-public class FunctionOutboundParameterDiagnostic extends AbstractVisitorDiagnostic {\n+public class FunctionOutParameterDiagnostic extends AbstractVisitorDiagnostic {\n \n   @Override\n   public ParseTree visitFunction(BSLParser.FunctionContext ctx) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQxOTg3Mg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1389#discussion_r499419872", "bodyText": "\u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 TreeMap \u0440\u0430\u0437\u0432\u0435 \u043d\u0435 \u043d\u0430\u0434\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0444\u043b\u0430\u0433 \u0441 \u0438\u0433\u043d\u043e\u0440 \u043a\u0435\u0439\u0441\u043e\u043c?", "author": "nixel2007", "createdAt": "2020-10-05T08:16:54Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.MethodSymbol;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.languageserver.utils.Trees;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.bsl.parser.BSLParserRuleContext;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.Collection;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  activatedByDefault = false,\n+  tags = {\n+    DiagnosticTag.DESIGN\n+  }\n+\n+)\n+public class FunctionOutboundParameterDiagnostic extends AbstractVisitorDiagnostic {\n+\n+  @Override\n+  public ParseTree visitFunction(BSLParser.FunctionContext ctx) {\n+\n+    TreeMap<String, BSLParserRuleContext> lvalues = Trees.findAllRuleNodes(ctx.subCodeBlock(), BSLParser.RULE_lValue)\n+      .stream()\n+      .collect(\n+        Collectors.toMap(ParseTree::getText, node -> (BSLParserRuleContext) node, (name, node) -> name, TreeMap::new));", "originalCommit": "da1e4ee976f01b48839a1604f0725c284274f7a2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9be1b071089f5b0078f1874d3761866b0d867f99", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\nsimilarity index 96%\nrename from src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java\nrename to src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\nindex 54ad5f124..a900bcdef 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutboundParameterDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\n\n@@ -45,7 +45,7 @@ import java.util.stream.Collectors;\n   }\n \n )\n-public class FunctionOutboundParameterDiagnostic extends AbstractVisitorDiagnostic {\n+public class FunctionOutParameterDiagnostic extends AbstractVisitorDiagnostic {\n \n   @Override\n   public ParseTree visitFunction(BSLParser.FunctionContext ctx) {\n"}}, {"oid": "9be1b071089f5b0078f1874d3761866b0d867f99", "url": "https://github.com/1c-syntax/bsl-language-server/commit/9be1b071089f5b0078f1874d3761866b0d867f99", "message": "rename fuctionOutParameter", "committedDate": "2020-10-05T11:55:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU2MDczNg==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1389#discussion_r499560736", "bodyText": "@nixel2007 @theshadowco \u0418\u0437\u0432\u0435\u0447\u043d\u044b\u0439 \u0432\u043e\u043f\u0440\u043e\u0441 - \u0442\u0443\u0442 \u0436e super \u043d\u0435 \u043d\u0430\u0434\u043e?", "author": "asosnoviy", "createdAt": "2020-10-05T12:28:59Z", "path": "src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * This file is a part of BSL Language Server.\n+ *\n+ * Copyright \u00a9 2018-2020\n+ * Alexey Sosnoviy <labotamy@gmail.com>, Nikita Gryzlov <nixel2007@gmail.com> and contributors\n+ *\n+ * SPDX-License-Identifier: LGPL-3.0-or-later\n+ *\n+ * BSL Language Server is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3.0 of the License, or (at your option) any later version.\n+ *\n+ * BSL Language Server is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with BSL Language Server.\n+ */\n+package com.github._1c_syntax.bsl.languageserver.diagnostics;\n+\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.MethodSymbol;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n+import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticType;\n+import com.github._1c_syntax.bsl.languageserver.utils.Trees;\n+import com.github._1c_syntax.bsl.parser.BSLParser;\n+import com.github._1c_syntax.bsl.parser.BSLParserRuleContext;\n+import org.antlr.v4.runtime.tree.ParseTree;\n+\n+import java.util.Collection;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+@DiagnosticMetadata(\n+  type = DiagnosticType.CODE_SMELL,\n+  severity = DiagnosticSeverity.MAJOR,\n+  minutesToFix = 10,\n+  activatedByDefault = false,\n+  tags = {\n+    DiagnosticTag.DESIGN\n+  }\n+\n+)\n+public class FunctionOutParameterDiagnostic extends AbstractVisitorDiagnostic {\n+\n+  @Override\n+  public ParseTree visitFunction(BSLParser.FunctionContext ctx) {\n+\n+    TreeMap<String, BSLParserRuleContext> lvalues = Trees.findAllRuleNodes(ctx.subCodeBlock(), BSLParser.RULE_lValue)\n+      .stream()\n+      .collect(\n+        Collectors.toMap(ParseTree::getText, node -> (BSLParserRuleContext) node, (name, node) -> name, TreeMap::new));\n+\n+    documentContext.getSymbolTree().getMethodSymbol((BSLParserRuleContext) ctx.getParent())\n+      .stream()\n+      .map(MethodSymbol::getParameters)\n+      .flatMap(Collection::stream)\n+      .filter(param -> !param.isByValue())\n+      .filter(param -> lvalues.containsKey(param.getName()))\n+      .map(param -> lvalues.get(param.getName()))\n+      .forEach(diagnosticStorage::addDiagnostic);\n+\n+    return super.visitFunction(ctx);", "originalCommit": "9be1b071089f5b0078f1874d3761866b0d867f99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU4MDg2NQ==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1389#discussion_r499580865", "bodyText": "\u043d\u0435 \u043d\u0430\u0434\u0430, \u0443 \u0442\u0435\u0431\u044f \u0436\u0435\u0436 \u043d\u0435\u0442 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u0432\u0438\u0437\u0438\u0442\u0435\u0440\u043e\u0432 \u0438 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0443\u0437\u0435\u043b \u043d\u0435 \u0431\u044b\u0432\u0430\u0435\u0442 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u043c \u0432 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0435\u0431\u044f", "author": "theshadowco", "createdAt": "2020-10-05T13:02:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU2MDczNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU4MTIzNA==", "url": "https://github.com/1c-syntax/bsl-language-server/pull/1389#discussion_r499581234", "bodyText": "\u043d\u0435\u0430, \u043d\u0435 \u043d\u0430\u0434\u043e. \u0432\u0440\u043e\u0434\u0435 \u0432 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435 \u043f\u043e \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e, \u043a\u043e\u0433\u0434\u0430 \u043d\u0430\u0434\u043e, \u0430 \u043a\u043e\u0433\u0434\u0430 \u043d\u0435\u0442 :)", "author": "nixel2007", "createdAt": "2020-10-05T13:02:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU2MDczNg=="}], "type": "inlineReview", "revised_code": {"commit": "c83a63263e58c7ea1de9c6cad12a0c18129f5158", "chunk": "diff --git a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\nindex a900bcdef..687e9d2bd 100644\n--- a/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\n+++ b/src/main/java/com/github/_1c_syntax/bsl/languageserver/diagnostics/FunctionOutParameterDiagnostic.java\n\n@@ -22,6 +22,7 @@\n package com.github._1c_syntax.bsl.languageserver.diagnostics;\n \n import com.github._1c_syntax.bsl.languageserver.context.symbol.MethodSymbol;\n+import com.github._1c_syntax.bsl.languageserver.context.symbol.ParameterDefinition;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticMetadata;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticSeverity;\n import com.github._1c_syntax.bsl.languageserver.diagnostics.metadata.DiagnosticTag;\n"}}, {"oid": "c83a63263e58c7ea1de9c6cad12a0c18129f5158", "url": "https://github.com/1c-syntax/bsl-language-server/commit/c83a63263e58c7ea1de9c6cad12a0c18129f5158", "message": "ignoreCase, \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0435\u0440\u0435\u0434 \u0441\u0431\u043e\u0440\u043e\u043c", "committedDate": "2020-10-05T13:07:16Z", "type": "commit"}, {"oid": "374a91d2ddc2d2638ed63bf4284e1d4e308fc651", "url": "https://github.com/1c-syntax/bsl-language-server/commit/374a91d2ddc2d2638ed63bf4284e1d4e308fc651", "message": "QF", "committedDate": "2020-10-05T13:15:14Z", "type": "commit"}, {"oid": "ddf94e67a416359c4a089a6306f4eef7d51e6b32", "url": "https://github.com/1c-syntax/bsl-language-server/commit/ddf94e67a416359c4a089a6306f4eef7d51e6b32", "message": "docs", "committedDate": "2020-10-05T13:41:09Z", "type": "commit"}, {"oid": "b99ab6a09a03cf056a8c9d835f09084eea559b67", "url": "https://github.com/1c-syntax/bsl-language-server/commit/b99ab6a09a03cf056a8c9d835f09084eea559b67", "message": "CaseInsensitiveMap", "committedDate": "2020-10-05T14:45:18Z", "type": "commit"}, {"oid": "bf9b5c43e42c6e2d3540e1b2544e5c18f5e3f807", "url": "https://github.com/1c-syntax/bsl-language-server/commit/bf9b5c43e42c6e2d3540e1b2544e5c18f5e3f807", "message": "\u041f\u043e\u0447\u0438\u0441\u0442\u0438\u043b en docs", "committedDate": "2020-10-05T14:50:48Z", "type": "commit"}, {"oid": "e4f521baf5b2cc9ef7c4fcb61525956fea7d1d57", "url": "https://github.com/1c-syntax/bsl-language-server/commit/e4f521baf5b2cc9ef7c4fcb61525956fea7d1d57", "message": "en name", "committedDate": "2020-10-05T15:14:51Z", "type": "commit"}, {"oid": "e4f521baf5b2cc9ef7c4fcb61525956fea7d1d57", "url": "https://github.com/1c-syntax/bsl-language-server/commit/e4f521baf5b2cc9ef7c4fcb61525956fea7d1d57", "message": "en name", "committedDate": "2020-10-05T15:14:51Z", "type": "forcePushed"}]}