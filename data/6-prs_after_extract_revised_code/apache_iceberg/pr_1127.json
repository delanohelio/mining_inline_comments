{"pr_number": 1127, "pr_title": "ORC: fix date metrics to adjust milliseconds to local timezone", "pr_createdAt": "2020-06-19T01:01:03Z", "pr_url": "https://github.com/apache/iceberg/pull/1127", "timeline": [{"oid": "30a5884ca2ac3d2189df93ebf6a2778d8f1a23db", "url": "https://github.com/apache/iceberg/commit/30a5884ca2ac3d2189df93ebf6a2778d8f1a23db", "message": "Disable ORC lower/upper bound metrics for Date", "committedDate": "2020-06-19T01:01:54Z", "type": "forcePushed"}, {"oid": "dfa545bf409665ec12800ddc55b627632514b01c", "url": "https://github.com/apache/iceberg/commit/dfa545bf409665ec12800ddc55b627632514b01c", "message": "Disable ORC lower/upper bound metrics for Date", "committedDate": "2020-06-19T18:21:55Z", "type": "forcePushed"}, {"oid": "82d46d3c733914627ef89ae921788a60f2655f0a", "url": "https://github.com/apache/iceberg/commit/82d46d3c733914627ef89ae921788a60f2655f0a", "message": "Add missing reset of current timezone in ORC tests", "committedDate": "2020-06-22T20:26:08Z", "type": "commit"}, {"oid": "a6fc6885f4ee7f0b00b224510191e4f5a7c3a547", "url": "https://github.com/apache/iceberg/commit/a6fc6885f4ee7f0b00b224510191e4f5a7c3a547", "message": "Use sql.Date.toLocalDate for lower/upper bounds to normalize TZ", "committedDate": "2020-06-23T00:26:40Z", "type": "commit"}, {"oid": "b1fa8e6b3a636d434a46da360556fca100219ba0", "url": "https://github.com/apache/iceberg/commit/b1fa8e6b3a636d434a46da360556fca100219ba0", "message": "Add comment on multiple TZ testing with ORC", "committedDate": "2020-06-23T00:34:44Z", "type": "commit"}, {"oid": "b1fa8e6b3a636d434a46da360556fca100219ba0", "url": "https://github.com/apache/iceberg/commit/b1fa8e6b3a636d434a46da360556fca100219ba0", "message": "Add comment on multiple TZ testing with ORC", "committedDate": "2020-06-23T00:34:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQyNTI5Mw==", "url": "https://github.com/apache/iceberg/pull/1127#discussion_r446425293", "bodyText": "Javadoc for Date.toLocalDate says that the LocalDate returned is \"in local time zone\". It is implemented like this:\nreturn LocalDate.of(getYear() + 1900, getMonth() + 1, getDate());\nAnd, those getter methods use the current zone. So this cannot be correct because the value is dependent on the local zone. I think your intent was to account for the adjustment made by ORC that you referenced by saying \"Getting the min/max stats for Date types in ORC are returned with milliseconds adjusted to the local timezone.\"\nI think the main problem is that this uses a path where the value is modified by ORC based on the JVM environment, which breaks a fundamental rule in Iceberg. I don't think that we should use a path where the value is modified. It's just too hard to guarantee that although the value was modified, we were able to correctly undo it.", "author": "rdblue", "createdAt": "2020-06-26T21:47:28Z", "path": "orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java", "diffHunk": "@@ -158,8 +158,7 @@ private static Metrics buildOrcMetrics(final long numOfRows, final TypeDescripti\n           .orElse(null);\n     } else if (columnStats instanceof DateColumnStatistics) {\n       min = Optional.ofNullable(((DateColumnStatistics) columnStats).getMinimum())\n-          .map(minStats -> DateTimeUtil.daysFromDate(\n-              DateTimeUtil.EPOCH.plus(minStats.getTime(), ChronoUnit.MILLIS).toLocalDate()))\n+          .map(minStats -> DateTimeUtil.daysFromDate(((Date) minStats).toLocalDate()))", "originalCommit": "b1fa8e6b3a636d434a46da360556fca100219ba0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ0NzgwNQ==", "url": "https://github.com/apache/iceberg/pull/1127#discussion_r446447805", "bodyText": "I think your intent was to account for the adjustment made by ORC that you referenced by saying \"Getting the min/max stats for Date types in ORC are returned with milliseconds adjusted to the local timezone.\"\n\nYes, ORC modifies the internally stored stats and returns the values dependent on the timezone. These methods adjust for that.\n\nI think the main problem is that this uses a path where the value is modified by ORC based on the JVM environment, which breaks a fundamental rule in Iceberg. I don't think that we should use a path where the value is modified. It's just too hard to guarantee that although the value was modified, we were able to correctly undo it.\n\nI agree, ORC in this respect violates the rule and modifies the stored value. I'm okay with not using this path, and therefore removing Date metrics collection if that's okay. Does that sound good?", "author": "edgarRd", "createdAt": "2020-06-26T23:13:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQyNTI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NTU5MA==", "url": "https://github.com/apache/iceberg/pull/1127#discussion_r446455590", "bodyText": "I'm okay with either of two options:\n\nDon't collect date metrics until this is fixed in ORC\nUse reflection to pull the minimum and maximum private int fields out of the stats\n\nOption 2 seems reasonable enough to me, since the stats actually store the int min and max values that we're looking for.", "author": "rdblue", "createdAt": "2020-06-26T23:56:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQyNTI5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "d8441e2da705ae3c225dcf84f21789279c1e7955", "chunk": "diff --git a/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java b/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java\nindex e1cba36d..86b76972 100644\n--- a/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java\n+++ b/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java\n\n@@ -157,9 +158,7 @@ public class OrcMetrics {\n               .setScale(((Types.DecimalType) column.type()).scale()))\n           .orElse(null);\n     } else if (columnStats instanceof DateColumnStatistics) {\n-      min = Optional.ofNullable(((DateColumnStatistics) columnStats).getMinimum())\n-          .map(minStats -> DateTimeUtil.daysFromDate(((Date) minStats).toLocalDate()))\n-          .orElse(null);\n+      min = Optional.ofNullable(minDayFromEpoch((DateColumnStatistics) columnStats)).orElse(null);\n     } else if (columnStats instanceof TimestampColumnStatistics) {\n       TimestampColumnStatistics tColStats = (TimestampColumnStatistics) columnStats;\n       Timestamp minValue = tColStats.getMinimumUTC();\n"}}, {"oid": "d8441e2da705ae3c225dcf84f21789279c1e7955", "url": "https://github.com/apache/iceberg/commit/d8441e2da705ae3c225dcf84f21789279c1e7955", "message": "Use Java reflection to get ORC date stats. (#1)", "committedDate": "2020-06-27T01:10:12Z", "type": "commit"}]}