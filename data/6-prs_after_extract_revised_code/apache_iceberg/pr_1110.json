{"pr_number": 1110, "pr_title": "Add a tolerance check of 1 minute to prevent small clock skews to break commits", "pr_createdAt": "2020-06-12T01:50:15Z", "pr_url": "https://github.com/apache/iceberg/pull/1110", "timeline": [{"oid": "387c249e34d92daadd8f51fd41c4ef39e92dffa8", "url": "https://github.com/apache/iceberg/commit/387c249e34d92daadd8f51fd41c4ef39e92dffa8", "message": "Add a tolerance check of 1 minute to prevent small clock skews to break commits\n\nFixes 1109\n\nsquash! 1109 Add a tolerance check of 1 minute to prevent small clock skews to break commits", "committedDate": "2020-06-12T01:47:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU5MDI2Mw==", "url": "https://github.com/apache/iceberg/pull/1110#discussion_r439590263", "bodyText": "We use the one from the new snapshot so that the timestamps all match. Do you think we should change that?", "author": "rdblue", "createdAt": "2020-06-12T18:52:43Z", "path": "core/src/main/java/org/apache/iceberg/TableMetadata.java", "diffHunk": "@@ -431,7 +446,10 @@ public TableMetadata addStagedSnapshot(Snapshot snapshot) {\n         .build();\n \n     return new TableMetadata(null, formatVersion, uuid, location,\n-        snapshot.sequenceNumber(), snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs, properties,\n+        snapshot.sequenceNumber(),\n+        //TODO: should this be System.currentTimeMillis()", "originalCommit": "387c249e34d92daadd8f51fd41c4ef39e92dffa8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3OTg2OA==", "url": "https://github.com/apache/iceberg/pull/1110#discussion_r439679868", "bodyText": "I think it is ok.", "author": "rdsr", "createdAt": "2020-06-12T23:34:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU5MDI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTczNQ==", "url": "https://github.com/apache/iceberg/pull/1110#discussion_r439695735", "bodyText": "If it's okay, can you remove this change?", "author": "rdblue", "createdAt": "2020-06-13T01:18:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU5MDI2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "16bc39320f812d4563e677177412502b8ab1c47c", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/TableMetadata.java b/core/src/main/java/org/apache/iceberg/TableMetadata.java\nindex 8ef0594b9..a19400f4f 100644\n--- a/core/src/main/java/org/apache/iceberg/TableMetadata.java\n+++ b/core/src/main/java/org/apache/iceberg/TableMetadata.java\n\n@@ -446,10 +453,7 @@ public class TableMetadata {\n         .build();\n \n     return new TableMetadata(null, formatVersion, uuid, location,\n-        snapshot.sequenceNumber(),\n-        //TODO: should this be System.currentTimeMillis()\n-        snapshot.timestampMillis(),\n-        lastColumnId, schema, defaultSpecId, specs, properties,\n+        snapshot.sequenceNumber(), snapshot.timestampMillis(), lastColumnId, schema, defaultSpecId, specs, properties,\n         currentSnapshotId, newSnapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYwNTIwNA==", "url": "https://github.com/apache/iceberg/pull/1110#discussion_r439605204", "bodyText": "@rdblue . Thoughts on this?", "author": "rdsr", "createdAt": "2020-06-12T19:28:47Z", "path": "core/src/main/java/org/apache/iceberg/TableMetadata.java", "diffHunk": "@@ -257,14 +260,26 @@ public String toString() {\n     }\n \n     MetadataLogEntry previous = null;\n+    // TODO: this check seems redundant if we are checking lastUpdatedMillis below", "originalCommit": "387c249e34d92daadd8f51fd41c4ef39e92dffa8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYxMDYxMw==", "url": "https://github.com/apache/iceberg/pull/1110#discussion_r439610613", "bodyText": "You already answered this in the issue. Thanks!", "author": "rdsr", "createdAt": "2020-06-12T19:42:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYwNTIwNA=="}], "type": "inlineReview", "revised_code": {"commit": "1519a7adbac3ed7ab62e20a3c130526677f83cfd", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/TableMetadata.java b/core/src/main/java/org/apache/iceberg/TableMetadata.java\nindex 8ef0594b9..7c474db6b 100644\n--- a/core/src/main/java/org/apache/iceberg/TableMetadata.java\n+++ b/core/src/main/java/org/apache/iceberg/TableMetadata.java\n\n@@ -253,14 +253,21 @@ public class TableMetadata {\n     for (HistoryEntry logEntry : snapshotLog) {\n       if (last != null) {\n         Preconditions.checkArgument(\n-            (logEntry.timestampMillis() - last.timestampMillis()) >= 0,\n+            (logEntry.timestampMillis() - last.timestampMillis()) >= -ONE_MINUTE,\n             \"[BUG] Expected sorted snapshot log entries.\");\n       }\n       last = logEntry;\n     }\n+    if (last != null) {\n+      Preconditions.checkArgument(\n+          // commits can happen concurrently from different machines.\n+          // A tolerance helps us avoid failure for small clock skew\n+          lastUpdatedMillis - last.timestampMillis() >= -ONE_MINUTE,\n+          \"lastUpdatedMillis: %s should not be < than the latest snapshot log entry timestamp %s\",\n+          lastUpdatedMillis, last.timestampMillis());\n+    }\n \n     MetadataLogEntry previous = null;\n-    // TODO: this check seems redundant if we are checking lastUpdatedMillis below\n     for (MetadataLogEntry metadataEntry : previousFiles) {\n       if (previous != null) {\n         Preconditions.checkArgument(\n"}}, {"oid": "1519a7adbac3ed7ab62e20a3c130526677f83cfd", "url": "https://github.com/apache/iceberg/commit/1519a7adbac3ed7ab62e20a3c130526677f83cfd", "message": "Add skew handling logic for snapshotlog", "committedDate": "2020-06-13T00:17:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTU1OQ==", "url": "https://github.com/apache/iceberg/pull/1110#discussion_r439695559", "bodyText": "I try to avoid variable names in log messages. Plain language is easier for users and tends to be more descriptive. How about \"Invalid update timestamp %s: before last snapshot log entry at %s\"?", "author": "rdblue", "createdAt": "2020-06-13T01:16:44Z", "path": "core/src/main/java/org/apache/iceberg/TableMetadata.java", "diffHunk": "@@ -253,14 +253,21 @@ public String toString() {\n     for (HistoryEntry logEntry : snapshotLog) {\n       if (last != null) {\n         Preconditions.checkArgument(\n-            (logEntry.timestampMillis() - last.timestampMillis()) >= 0,\n+            (logEntry.timestampMillis() - last.timestampMillis()) >= -ONE_MINUTE,\n             \"[BUG] Expected sorted snapshot log entries.\");\n       }\n       last = logEntry;\n     }\n+    if (last != null) {\n+      Preconditions.checkArgument(\n+          // commits can happen concurrently from different machines.\n+          // A tolerance helps us avoid failure for small clock skew\n+          lastUpdatedMillis - last.timestampMillis() >= -ONE_MINUTE,\n+          \"lastUpdatedMillis: %s should not be < than the latest snapshot log entry timestamp %s\",", "originalCommit": "1519a7adbac3ed7ab62e20a3c130526677f83cfd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "16bc39320f812d4563e677177412502b8ab1c47c", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/TableMetadata.java b/core/src/main/java/org/apache/iceberg/TableMetadata.java\nindex 7c474db6b..a19400f4f 100644\n--- a/core/src/main/java/org/apache/iceberg/TableMetadata.java\n+++ b/core/src/main/java/org/apache/iceberg/TableMetadata.java\n\n@@ -263,7 +263,7 @@ public class TableMetadata {\n           // commits can happen concurrently from different machines.\n           // A tolerance helps us avoid failure for small clock skew\n           lastUpdatedMillis - last.timestampMillis() >= -ONE_MINUTE,\n-          \"lastUpdatedMillis: %s should not be < than the latest snapshot log entry timestamp %s\",\n+          \"Invalid update timestamp %s: before last snapshot log entry at %s\",\n           lastUpdatedMillis, last.timestampMillis());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTY2MQ==", "url": "https://github.com/apache/iceberg/pull/1110#discussion_r439695661", "bodyText": "Rather than wrapping a precondition in an if, it's shorter to add an or:\nPreconditions.checkArgument(last == null || lastUpdatedMillis - last.timestampMillis() >= -ONE_MINUTE, ...);", "author": "rdblue", "createdAt": "2020-06-13T01:17:51Z", "path": "core/src/main/java/org/apache/iceberg/TableMetadata.java", "diffHunk": "@@ -253,14 +253,21 @@ public String toString() {\n     for (HistoryEntry logEntry : snapshotLog) {\n       if (last != null) {\n         Preconditions.checkArgument(\n-            (logEntry.timestampMillis() - last.timestampMillis()) >= 0,\n+            (logEntry.timestampMillis() - last.timestampMillis()) >= -ONE_MINUTE,\n             \"[BUG] Expected sorted snapshot log entries.\");\n       }\n       last = logEntry;\n     }\n+    if (last != null) {", "originalCommit": "1519a7adbac3ed7ab62e20a3c130526677f83cfd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzNjc1MQ==", "url": "https://github.com/apache/iceberg/pull/1110#discussion_r440236751", "bodyText": "The issue is that the argument - last.timestampMillis() will be evaluated eagerly and may result in NPE", "author": "rdsr", "createdAt": "2020-06-15T14:55:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTY2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4Mjc2NA==", "url": "https://github.com/apache/iceberg/pull/1110#discussion_r440482764", "bodyText": "It shouldn't be evaluated eagerly. Are you sure about that? We use this pattern in other classes without a problem.", "author": "rdblue", "createdAt": "2020-06-15T22:31:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTY2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "16bc39320f812d4563e677177412502b8ab1c47c", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/TableMetadata.java b/core/src/main/java/org/apache/iceberg/TableMetadata.java\nindex 7c474db6b..a19400f4f 100644\n--- a/core/src/main/java/org/apache/iceberg/TableMetadata.java\n+++ b/core/src/main/java/org/apache/iceberg/TableMetadata.java\n\n@@ -263,7 +263,7 @@ public class TableMetadata {\n           // commits can happen concurrently from different machines.\n           // A tolerance helps us avoid failure for small clock skew\n           lastUpdatedMillis - last.timestampMillis() >= -ONE_MINUTE,\n-          \"lastUpdatedMillis: %s should not be < than the latest snapshot log entry timestamp %s\",\n+          \"Invalid update timestamp %s: before last snapshot log entry at %s\",\n           lastUpdatedMillis, last.timestampMillis());\n     }\n \n"}}, {"oid": "16bc39320f812d4563e677177412502b8ab1c47c", "url": "https://github.com/apache/iceberg/commit/16bc39320f812d4563e677177412502b8ab1c47c", "message": "Address comments", "committedDate": "2020-06-15T14:52:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4MzA4OQ==", "url": "https://github.com/apache/iceberg/pull/1110#discussion_r440483089", "bodyText": "Nit: indentation is off.", "author": "rdblue", "createdAt": "2020-06-15T22:32:10Z", "path": "core/src/main/java/org/apache/iceberg/TableMetadata.java", "diffHunk": "@@ -250,21 +253,40 @@ public String toString() {\n     for (HistoryEntry logEntry : snapshotLog) {\n       if (last != null) {\n         Preconditions.checkArgument(\n-            (logEntry.timestampMillis() - last.timestampMillis()) >= 0,\n+            (logEntry.timestampMillis() - last.timestampMillis()) >= -ONE_MINUTE,\n             \"[BUG] Expected sorted snapshot log entries.\");\n       }\n       last = logEntry;\n     }\n+    if (last != null) {\n+      Preconditions.checkArgument(\n+          // commits can happen concurrently from different machines.\n+          // A tolerance helps us avoid failure for small clock skew\n+          lastUpdatedMillis - last.timestampMillis() >= -ONE_MINUTE,\n+          \"Invalid update timestamp %s: before last snapshot log entry at %s\",\n+          lastUpdatedMillis, last.timestampMillis());\n+    }\n \n     MetadataLogEntry previous = null;\n     for (MetadataLogEntry metadataEntry : previousFiles) {\n       if (previous != null) {\n         Preconditions.checkArgument(\n-            (metadataEntry.timestampMillis() - previous.timestampMillis()) >= 0,\n+            // commits can happen concurrently from different machines.\n+            // A tolerance helps us avoid failure for small clock skew\n+            (metadataEntry.timestampMillis() - previous.timestampMillis()) >= -ONE_MINUTE,\n             \"[BUG] Expected sorted previous metadata log entries.\");\n       }\n       previous = metadataEntry;\n     }\n+      // Make sure that this update's lastUpdatedMillis is > max(previousFile's timestamp)", "originalCommit": "16bc39320f812d4563e677177412502b8ab1c47c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}