{"pr_number": 1031, "pr_title": "TIME_MILLIS support to GenericParquetReader (issue #502)", "pr_createdAt": "2020-05-10T06:30:59Z", "pr_url": "https://github.com/apache/iceberg/pull/1031", "timeline": [{"oid": "38fe5c787b05e1311b5f0b2af1f06d9bccfb16be", "url": "https://github.com/apache/iceberg/commit/38fe5c787b05e1311b5f0b2af1f06d9bccfb16be", "message": "fix for millis type", "committedDate": "2020-05-10T06:28:28Z", "type": "commit"}, {"oid": "1c53d0de1c8c95621e85ef7293bb1bead97c11b3", "url": "https://github.com/apache/iceberg/commit/1c53d0de1c8c95621e85ef7293bb1bead97c11b3", "message": "Merge github.com:apache/incubator-iceberg into parquet_time_millis", "committedDate": "2020-05-16T19:33:57Z", "type": "commit"}, {"oid": "6106979bee24c3f83674539f282b5e7efc44e737", "url": "https://github.com/apache/iceberg/commit/6106979bee24c3f83674539f282b5e7efc44e737", "message": "test for time in ms", "committedDate": "2020-05-17T17:22:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyODIyMg==", "url": "https://github.com/apache/iceberg/pull/1031#discussion_r426828222", "bodyText": "Iceberg won't actually write data in milliseconds, so we would need to write a Parquet file using the annotation and confirm that a time column is correct when reading.\nCan you remove this change?", "author": "rdblue", "createdAt": "2020-05-18T18:51:13Z", "path": "data/src/test/java/org/apache/iceberg/data/DataTest.java", "diffHunk": "@@ -56,7 +56,8 @@\n       required(114, \"dec_9_0\", Types.DecimalType.of(9, 0)),\n       required(115, \"dec_11_2\", Types.DecimalType.of(11, 2)),\n       required(116, \"dec_38_10\", Types.DecimalType.of(38, 10)), // maximum precision\n-      required(117, \"time\", Types.TimeType.get())\n+      required(117, \"time\", Types.TimeType.get()),\n+      required(118, \"time_ms\",  Types.TimeType.get())", "originalCommit": "6106979bee24c3f83674539f282b5e7efc44e737", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4MTk2MQ==", "url": "https://github.com/apache/iceberg/pull/1031#discussion_r427381961", "bodyText": "done.", "author": "pranaydharmale", "createdAt": "2020-05-19T15:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyODIyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzczNTQ4Ng==", "url": "https://github.com/apache/iceberg/pull/1031#discussion_r427735486", "bodyText": "@rdblue do we have any boilerplate code I can use to do that?", "author": "pranaydharmale", "createdAt": "2020-05-20T04:32:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyODIyMg=="}], "type": "inlineReview", "revised_code": {"commit": "71333b4d1bf782fab219e82634e6ddd88027f67d", "chunk": "diff --git a/data/src/test/java/org/apache/iceberg/data/DataTest.java b/data/src/test/java/org/apache/iceberg/data/DataTest.java\nindex d9bdb5404..5566a7530 100644\n--- a/data/src/test/java/org/apache/iceberg/data/DataTest.java\n+++ b/data/src/test/java/org/apache/iceberg/data/DataTest.java\n\n@@ -56,8 +56,7 @@ public abstract class DataTest {\n       required(114, \"dec_9_0\", Types.DecimalType.of(9, 0)),\n       required(115, \"dec_11_2\", Types.DecimalType.of(11, 2)),\n       required(116, \"dec_38_10\", Types.DecimalType.of(38, 10)), // maximum precision\n-      required(117, \"time\", Types.TimeType.get()),\n-      required(118, \"time_ms\",  Types.TimeType.get())\n+      required(117, \"time\", Types.TimeType.get())\n   );\n \n   @Rule\n"}}, {"oid": "7b2f2fa33319834e36a3a7cd763e59ce52919369", "url": "https://github.com/apache/iceberg/commit/7b2f2fa33319834e36a3a7cd763e59ce52919369", "message": "Merge github.com:apache/incubator-iceberg into parquet_time_millis", "committedDate": "2020-05-19T14:46:47Z", "type": "commit"}, {"oid": "71333b4d1bf782fab219e82634e6ddd88027f67d", "url": "https://github.com/apache/iceberg/commit/71333b4d1bf782fab219e82634e6ddd88027f67d", "message": "rolling back the test. Per rdblue 'Iceberg won't actually write data in milliseconds, so we would need to write a Parquet file using the annotation and confirm that a time column is correct when reading.', so this test won't work.", "committedDate": "2020-05-19T14:48:19Z", "type": "commit"}]}