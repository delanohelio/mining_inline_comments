{"pr_number": 1384, "pr_title": "Remove a wrong check for commit operation", "pr_createdAt": "2020-08-26T08:00:30Z", "pr_url": "https://github.com/apache/iceberg/pull/1384", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcyNzQ0OA==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r477727448", "bodyText": "How about also updating internalApply so that it does this check?\nThis is intended to only modify the table and run a commit if the table changes. But you're right that when combined with a transaction, this will cause a failure because commit is not called at all.\nBut we still want to avoid unnecessary commits. To do that, internalApply should do this check on the new TableMetadata it produces. If the new metadata has the same set of manifests as the original, then it should return the original. That will cause the commit to be skipped in most cases because the actual commit logic inside of ops.commit checks whether the metadata is the same as the base metadata and returns if it is.", "author": "rdblue", "createdAt": "2020-08-27T00:04:51Z", "path": "core/src/main/java/org/apache/iceberg/RemoveSnapshots.java", "diffHunk": "@@ -156,10 +156,7 @@ public void commit() {\n         .onlyRetryOn(CommitFailedException.class)\n         .run(item -> {\n           TableMetadata updated = internalApply();\n-          // only commit the updated metadata if at least one snapshot was removed\n-          if (updated.snapshots().size() != base.snapshots().size()) {\n-            ops.commit(base, updated);\n-          }", "originalCommit": "030673c685440e0cf2c3a3f3ca0dcbab04fad43d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODAxNzExMw==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r478017113", "bodyText": "Thanks for reply, in most transaction cases in can commit, but in BaseMetastoreTableOperations, we can pass an original metadata if there has the same set of manifests,  so it will return without any commits. is it right ?", "author": "simonsssu", "createdAt": "2020-08-27T03:14:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcyNzQ0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODA3MDY4NA==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r478070684", "bodyText": "I think if we return the original one, then the logic inside of TransactionTableOperations will put the same metadata to current, like : BaseTransaction.this.current = metadata;  this will also cause failure in commitTransaction because in commitTransaction it has to check whether lastBase != current.\nIMO, I suggest just do a deepcopy if there are no updates in metadata, this will always make commitTransaction success. I have pushed the modification.", "author": "simonsssu", "createdAt": "2020-08-27T03:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcyNzQ0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2Mjg2Nw==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r478762867", "bodyText": "We should definitely not copy the data. The purpose of returning the original metadata is to avoid an unnecessary commit if the metadata hasn't changed. The TableOperations objects use identity to determine if anything has changed.\nThere may be a check inside of BaseTransaction that also needs to be updated. But the right way to handle that is to update that check to allow passing the same metadata back.", "author": "rdblue", "createdAt": "2020-08-28T00:16:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcyNzQ0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc5MDY1OA==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r478790658", "bodyText": "I have tried to change a preCondition check to be a if-else block, this may work but we may need to change some UTs which are assert to return an IllegalStateException. There are 8 UTs need to remove the check where commitTransaction return an IllegaStateException.", "author": "simonsssu", "createdAt": "2020-08-28T02:06:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcyNzQ0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg3MzMxNA==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r479873314", "bodyText": "@rdblue I have change the behavior for commitTransaction, make it the same as what commit does in TableOperations. This will avoid to copy the data and also allow to pass the same metadata.", "author": "simonsssu", "createdAt": "2020-08-31T03:47:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcyNzQ0OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "298bef92260e76550b14944c7d081add06bfc0ac", "url": "https://github.com/apache/iceberg/commit/298bef92260e76550b14944c7d081add06bfc0ac", "message": "Change check in commit transaction to allow pass same meta", "committedDate": "2020-08-31T09:13:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAxNjYzNw==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r480016637", "bodyText": "nit: useless change.", "author": "chenjunjiedada", "createdAt": "2020-08-31T09:46:36Z", "path": "core/src/main/java/org/apache/iceberg/BaseTransaction.java", "diffHunk": "@@ -451,7 +452,6 @@ public void commit(TableMetadata underlyingBase, TableMetadata metadata) {\n       }\n \n       BaseTransaction.this.current = metadata;\n-", "originalCommit": "298bef92260e76550b14944c7d081add06bfc0ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2eb2c43b7f0d47eccb3287c72e508f8a9e959738", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/BaseTransaction.java b/core/src/main/java/org/apache/iceberg/BaseTransaction.java\nindex 176504980..5f19f15dc 100644\n--- a/core/src/main/java/org/apache/iceberg/BaseTransaction.java\n+++ b/core/src/main/java/org/apache/iceberg/BaseTransaction.java\n\n@@ -452,7 +451,10 @@ class BaseTransaction implements Transaction {\n       }\n \n       BaseTransaction.this.current = metadata;\n+\n       this.tempOps = ops.temp(metadata);\n+\n+      BaseTransaction.this.hasLastOpCommitted = true;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA0OTI0MA==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r480049240", "bodyText": "Can we compare the snapshot ID\uff1f", "author": "chenjunjiedada", "createdAt": "2020-08-31T10:56:12Z", "path": "core/src/main/java/org/apache/iceberg/RemoveSnapshots.java", "diffHunk": "@@ -138,10 +138,23 @@ public ExpireSnapshots executeDeleteWith(ExecutorService executorService) {\n   private TableMetadata internalApply() {\n     this.base = ops.refresh();\n \n-    return base.removeSnapshotsIf(snapshot ->\n+    TableMetadata updated = base.removeSnapshotsIf(snapshot ->\n         idsToRemove.contains(snapshot.snapshotId()) ||\n         (expireOlderThan != null && snapshot.timestampMillis() < expireOlderThan &&\n             !idsToRetain.contains(snapshot.snapshotId())));\n+\n+    List<Snapshot> updateSnapshots = updated.snapshots();\n+    List<Snapshot> baseSnapshots = base.snapshots();\n+    if (updateSnapshots.size() != baseSnapshots.size()) {\n+      return updated;\n+    } else {\n+      for (int i = 0; i < baseSnapshots.size(); i += 1) {\n+        if (!updateSnapshots.get(i).equals(baseSnapshots.get(i))) {", "originalCommit": "298bef92260e76550b14944c7d081add06bfc0ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2eb2c43b7f0d47eccb3287c72e508f8a9e959738", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/RemoveSnapshots.java b/core/src/main/java/org/apache/iceberg/RemoveSnapshots.java\nindex 70126eee8..3bb441b31 100644\n--- a/core/src/main/java/org/apache/iceberg/RemoveSnapshots.java\n+++ b/core/src/main/java/org/apache/iceberg/RemoveSnapshots.java\n\n@@ -138,23 +138,13 @@ class RemoveSnapshots implements ExpireSnapshots {\n   private TableMetadata internalApply() {\n     this.base = ops.refresh();\n \n-    TableMetadata updated = base.removeSnapshotsIf(snapshot ->\n+    TableMetadata updateMeta = base.removeSnapshotsIf(snapshot ->\n         idsToRemove.contains(snapshot.snapshotId()) ||\n         (expireOlderThan != null && snapshot.timestampMillis() < expireOlderThan &&\n             !idsToRetain.contains(snapshot.snapshotId())));\n-\n-    List<Snapshot> updateSnapshots = updated.snapshots();\n+    List<Snapshot> updateSnapshots = updateMeta.snapshots();\n     List<Snapshot> baseSnapshots = base.snapshots();\n-    if (updateSnapshots.size() != baseSnapshots.size()) {\n-      return updated;\n-    } else {\n-      for (int i = 0; i < baseSnapshots.size(); i += 1) {\n-        if (!updateSnapshots.get(i).equals(baseSnapshots.get(i))) {\n-          return updated;\n-        }\n-      }\n-      return base;\n-    }\n+    return updateSnapshots.size() != baseSnapshots.size() ? updateMeta : base;\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA2OTg4NA==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r480069884", "bodyText": "You could keep the commitTransaction", "author": "chenjunjiedada", "createdAt": "2020-08-31T11:31:55Z", "path": "core/src/test/java/org/apache/iceberg/TestCreateTransaction.java", "diffHunk": "@@ -267,10 +267,6 @@ public void testCreateDetectsUncommittedChangeOnCommit() throws IOException {\n         TestTables.metadataVersion(\"uncommitted_change\"));\n \n     txn.updateProperties().set(\"test-property\", \"test-value\"); // not committed\n-\n-    AssertHelpers.assertThrows(\"Should reject commit when last operation has not committed\",", "originalCommit": "298bef92260e76550b14944c7d081add06bfc0ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "610c1238fa4a63a24592710e858a1d995f3d9299", "chunk": "diff --git a/core/src/test/java/org/apache/iceberg/TestCreateTransaction.java b/core/src/test/java/org/apache/iceberg/TestCreateTransaction.java\nindex c1f3f517a..73445e0d4 100644\n--- a/core/src/test/java/org/apache/iceberg/TestCreateTransaction.java\n+++ b/core/src/test/java/org/apache/iceberg/TestCreateTransaction.java\n\n@@ -267,6 +267,14 @@ public class TestCreateTransaction extends TableTestBase {\n         TestTables.metadataVersion(\"uncommitted_change\"));\n \n     txn.updateProperties().set(\"test-property\", \"test-value\"); // not committed\n+\n+    txn.commitTransaction();\n+\n+    // nothing to commit.\n+    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n+        TestTables.readMetadata(\"uncommitted_change\"));\n+    Assert.assertNull(\"Should have no metadata version\",\n+        TestTables.metadataVersion(\"uncommitted_change\"));\n   }\n \n   @Test\n"}}, {"oid": "610c1238fa4a63a24592710e858a1d995f3d9299", "url": "https://github.com/apache/iceberg/commit/610c1238fa4a63a24592710e858a1d995f3d9299", "message": "Change check in commit transaction to allow pass same meta", "committedDate": "2020-08-31T12:40:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI4OTM3OQ==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r480289379", "bodyText": "I don't think this block is needed. The contract of removeSnapshotsIf is to only remove snapshots or return the list unmodified. We can rely on that and just check that the size hasn't changed.", "author": "rdblue", "createdAt": "2020-08-31T17:49:53Z", "path": "core/src/main/java/org/apache/iceberg/RemoveSnapshots.java", "diffHunk": "@@ -138,10 +138,23 @@ public ExpireSnapshots executeDeleteWith(ExecutorService executorService) {\n   private TableMetadata internalApply() {\n     this.base = ops.refresh();\n \n-    return base.removeSnapshotsIf(snapshot ->\n+    TableMetadata updated = base.removeSnapshotsIf(snapshot ->\n         idsToRemove.contains(snapshot.snapshotId()) ||\n         (expireOlderThan != null && snapshot.timestampMillis() < expireOlderThan &&\n             !idsToRetain.contains(snapshot.snapshotId())));\n+\n+    List<Snapshot> updateSnapshots = updated.snapshots();\n+    List<Snapshot> baseSnapshots = base.snapshots();\n+    if (updateSnapshots.size() != baseSnapshots.size()) {\n+      return updated;\n+    } else {\n+      for (int i = 0; i < baseSnapshots.size(); i += 1) {\n+        if (!updateSnapshots.get(i).equals(baseSnapshots.get(i))) {\n+          return updated;\n+        }", "originalCommit": "610c1238fa4a63a24592710e858a1d995f3d9299", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2eb2c43b7f0d47eccb3287c72e508f8a9e959738", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/RemoveSnapshots.java b/core/src/main/java/org/apache/iceberg/RemoveSnapshots.java\nindex 70126eee8..3bb441b31 100644\n--- a/core/src/main/java/org/apache/iceberg/RemoveSnapshots.java\n+++ b/core/src/main/java/org/apache/iceberg/RemoveSnapshots.java\n\n@@ -138,23 +138,13 @@ class RemoveSnapshots implements ExpireSnapshots {\n   private TableMetadata internalApply() {\n     this.base = ops.refresh();\n \n-    TableMetadata updated = base.removeSnapshotsIf(snapshot ->\n+    TableMetadata updateMeta = base.removeSnapshotsIf(snapshot ->\n         idsToRemove.contains(snapshot.snapshotId()) ||\n         (expireOlderThan != null && snapshot.timestampMillis() < expireOlderThan &&\n             !idsToRetain.contains(snapshot.snapshotId())));\n-\n-    List<Snapshot> updateSnapshots = updated.snapshots();\n+    List<Snapshot> updateSnapshots = updateMeta.snapshots();\n     List<Snapshot> baseSnapshots = base.snapshots();\n-    if (updateSnapshots.size() != baseSnapshots.size()) {\n-      return updated;\n-    } else {\n-      for (int i = 0; i < baseSnapshots.size(); i += 1) {\n-        if (!updateSnapshots.get(i).equals(baseSnapshots.get(i))) {\n-          return updated;\n-        }\n-      }\n-      return base;\n-    }\n+    return updateSnapshots.size() != baseSnapshots.size() ? updateMeta : base;\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI5MjI2NQ==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r480292265", "bodyText": "I think this test case is still valid.\nThe problem is that this was previously assuming that the table metadata would change when each of the operations in a transaction is committed. That's not necessarily the case.\nInstead of getting rid of the check that each operation committed, we just need to track that it committed differently. I think that means we should replace lastBase in BaseTransaction with a boolean hasComitted that gets set to false each time a new operation is created inside of checkLastOperationCommitted.", "author": "rdblue", "createdAt": "2020-08-31T17:55:15Z", "path": "core/src/test/java/org/apache/iceberg/TestCreateTransaction.java", "diffHunk": "@@ -268,9 +268,13 @@ public void testCreateDetectsUncommittedChangeOnCommit() throws IOException {\n \n     txn.updateProperties().set(\"test-property\", \"test-value\"); // not committed\n \n-    AssertHelpers.assertThrows(\"Should reject commit when last operation has not committed\",\n-        IllegalStateException.class, \"Cannot commit transaction: last operation has not committed\",\n-        txn::commitTransaction);\n+    txn.commitTransaction();\n+\n+    // nothing to commit.\n+    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n+        TestTables.readMetadata(\"uncommitted_change\"));\n+    Assert.assertNull(\"Should have no metadata version\",\n+        TestTables.metadataVersion(\"uncommitted_change\"));", "originalCommit": "610c1238fa4a63a24592710e858a1d995f3d9299", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjczMTY3Nw==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r482731677", "bodyText": "Hi, I have replaced the lastBase with a boolean value to check if last commit has committed. Now It will not change the behaviors of commitTransaction.", "author": "simonsssu", "createdAt": "2020-09-03T06:25:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI5MjI2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "2eb2c43b7f0d47eccb3287c72e508f8a9e959738", "chunk": "diff --git a/core/src/test/java/org/apache/iceberg/TestCreateTransaction.java b/core/src/test/java/org/apache/iceberg/TestCreateTransaction.java\nindex 73445e0d4..e9be1c8a3 100644\n--- a/core/src/test/java/org/apache/iceberg/TestCreateTransaction.java\n+++ b/core/src/test/java/org/apache/iceberg/TestCreateTransaction.java\n\n@@ -268,13 +268,9 @@ public class TestCreateTransaction extends TableTestBase {\n \n     txn.updateProperties().set(\"test-property\", \"test-value\"); // not committed\n \n-    txn.commitTransaction();\n-\n-    // nothing to commit.\n-    Assert.assertNull(\"Starting a create transaction should not commit metadata\",\n-        TestTables.readMetadata(\"uncommitted_change\"));\n-    Assert.assertNull(\"Should have no metadata version\",\n-        TestTables.metadataVersion(\"uncommitted_change\"));\n+    AssertHelpers.assertThrows(\"Should reject commit when last operation has not committed\",\n+        IllegalStateException.class, \"Cannot commit transaction: last operation has not committed\",\n+        txn::commitTransaction);\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI5MzgxNg==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r480293816", "bodyText": "This isn't correct:\n\nSkipping the commit should be done in TableOperations, not here. This logic is incorrect because lastBase is not the current table state, it is the state after the previous operation in the transaction. This logic would skip the rest of the operations in a transaction if the last one didn't make any changes.\nThis still needs to check that the last operation had commit called on it. Otherwise, incomplete operations could be added and would be ignored instead of raising exceptions.", "author": "rdblue", "createdAt": "2020-08-31T17:58:06Z", "path": "core/src/main/java/org/apache/iceberg/BaseTransaction.java", "diffHunk": "@@ -200,9 +200,10 @@ public ExpireSnapshots expireSnapshots() {\n \n   @Override\n   public void commitTransaction() {\n-    Preconditions.checkState(lastBase != current,\n-        \"Cannot commit transaction: last operation has not committed\");\n-\n+    if (lastBase == current) {\n+      LOG.info(\"Nothing to commit.\");\n+      return;\n+    }", "originalCommit": "610c1238fa4a63a24592710e858a1d995f3d9299", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU3MjUwMg==", "url": "https://github.com/apache/iceberg/pull/1384#discussion_r480572502", "bodyText": "I agree with this, it changes the previous commit behaviour.", "author": "chenjunjiedada", "createdAt": "2020-09-01T01:47:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI5MzgxNg=="}], "type": "inlineReview", "revised_code": {"commit": "2eb2c43b7f0d47eccb3287c72e508f8a9e959738", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/BaseTransaction.java b/core/src/main/java/org/apache/iceberg/BaseTransaction.java\nindex 176504980..5f19f15dc 100644\n--- a/core/src/main/java/org/apache/iceberg/BaseTransaction.java\n+++ b/core/src/main/java/org/apache/iceberg/BaseTransaction.java\n\n@@ -200,10 +200,9 @@ class BaseTransaction implements Transaction {\n \n   @Override\n   public void commitTransaction() {\n-    if (lastBase == current) {\n-      LOG.info(\"Nothing to commit.\");\n-      return;\n-    }\n+    Preconditions.checkState(hasLastOpCommitted,\n+        \"Cannot commit transaction: last operation has not committed\");\n+\n     switch (type) {\n       case CREATE_TABLE:\n         commitCreateTransaction();\n"}}, {"oid": "2eb2c43b7f0d47eccb3287c72e508f8a9e959738", "url": "https://github.com/apache/iceberg/commit/2eb2c43b7f0d47eccb3287c72e508f8a9e959738", "message": "Fix commit failed if retainLast larger than current snapshot nums", "committedDate": "2020-09-03T06:19:44Z", "type": "commit"}, {"oid": "2eb2c43b7f0d47eccb3287c72e508f8a9e959738", "url": "https://github.com/apache/iceberg/commit/2eb2c43b7f0d47eccb3287c72e508f8a9e959738", "message": "Fix commit failed if retainLast larger than current snapshot nums", "committedDate": "2020-09-03T06:19:44Z", "type": "forcePushed"}]}