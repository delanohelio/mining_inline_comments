{"pr_number": 1240, "pr_title": "Default warehouse location of a table should be a subdirectory in database location", "pr_createdAt": "2020-07-24T10:13:51Z", "pr_url": "https://github.com/apache/iceberg/pull/1240", "timeline": [{"oid": "775e8b072c6ee8af86722b2d9691a3f579a17a57", "url": "https://github.com/apache/iceberg/commit/775e8b072c6ee8af86722b2d9691a3f579a17a57", "message": "Default warehouse location of a table should be a subdirectory in database location", "committedDate": "2020-07-24T10:09:18Z", "type": "commit"}, {"oid": "5039777809ae81d35264d41343d24dbe5eb75c10", "url": "https://github.com/apache/iceberg/commit/5039777809ae81d35264d41343d24dbe5eb75c10", "message": "fix checkstyle error", "committedDate": "2020-07-24T10:40:27Z", "type": "commit"}, {"oid": "667d9b63a431bea1467ad54ab7941b85a9482c81", "url": "https://github.com/apache/iceberg/commit/667d9b63a431bea1467ad54ab7941b85a9482c81", "message": "Another checkstyle error", "committedDate": "2020-07-24T11:34:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEzNzY1NQ==", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460137655", "bodyText": "Nit: this file doesn't need to change. Can you revert this to avoid git conflicts?", "author": "rdblue", "createdAt": "2020-07-24T15:49:00Z", "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java", "diffHunk": "@@ -66,6 +66,7 @@ public void dropTestTable() throws Exception {\n     tableLocation.getFileSystem(hiveConf).delete(tableLocation, true);\n     catalog.dropTable(TABLE_IDENTIFIER, false /* metadata only, location was already deleted */);\n   }\n+", "originalCommit": "667d9b63a431bea1467ad54ab7941b85a9482c81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODI3Ng==", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460738276", "bodyText": "Done", "author": "pvary", "createdAt": "2020-07-27T08:46:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEzNzY1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "0d3a0f7fef9001b0c2593504d07957fc10ae3414", "chunk": "diff --git a/hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java b/hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java\nindex 67a1d9cd4..76f219240 100644\n--- a/hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java\n+++ b/hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java\n\n@@ -66,7 +66,6 @@ public class HiveTableBaseTest extends HiveMetastoreTest {\n     tableLocation.getFileSystem(hiveConf).delete(tableLocation, true);\n     catalog.dropTable(TABLE_IDENTIFIER, false /* metadata only, location was already deleted */);\n   }\n-\n   private static String getTableBasePath(String tableName) {\n     String databasePath = metastore.getDatabasePath(DB_NAME);\n     return Paths.get(databasePath, tableName).toAbsolutePath().toString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEzODQ2MQ==", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460138461", "bodyText": "The catalog supports creating a namespace, so I think this test would be better if it used the catalog to create the namespace with a location (\"location\" property) instead of going through the metastore client directly. Could you update it?", "author": "rdblue", "createdAt": "2020-07-24T15:50:22Z", "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "diffHunk": "@@ -295,4 +302,29 @@ public void testListTables() {\n     Assert.assertEquals(1, expectedIdents.size());\n     Assert.assertTrue(catalog.tableExists(TABLE_IDENTIFIER));\n   }\n+\n+  @Test\n+  public void testNonDefaultDatabaseLocation() throws IOException, TException {\n+    // Create a new location and a non-default database / namespace for it\n+    File nonDefaultLocation = createTempDirectory(NON_DEFAULT_DATABASE,\n+        asFileAttribute(fromString(\"rwxrwxrwx\"))).toFile();\n+    Database database = new Database();\n+\n+    database.setName(NON_DEFAULT_DATABASE);\n+    database.setLocationUri(nonDefaultLocation.getPath());\n+    metastoreClient.createDatabase(database);", "originalCommit": "667d9b63a431bea1467ad54ab7941b85a9482c81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODU5OQ==", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460738599", "bodyText": "Sure! Updated.\nThanks for the review!", "author": "pvary", "createdAt": "2020-07-27T08:46:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEzODQ2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "0d3a0f7fef9001b0c2593504d07957fc10ae3414", "chunk": "diff --git a/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java b/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java\nindex 3bd76c2de..916c9ef5d 100644\n--- a/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java\n+++ b/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java\n\n@@ -305,22 +305,20 @@ public class HiveTableTest extends HiveTableBaseTest {\n \n   @Test\n   public void testNonDefaultDatabaseLocation() throws IOException, TException {\n+    Namespace namespace = Namespace.of(NON_DEFAULT_DATABASE);\n     // Create a new location and a non-default database / namespace for it\n     File nonDefaultLocation = createTempDirectory(NON_DEFAULT_DATABASE,\n         asFileAttribute(fromString(\"rwxrwxrwx\"))).toFile();\n-    Database database = new Database();\n-\n-    database.setName(NON_DEFAULT_DATABASE);\n-    database.setLocationUri(nonDefaultLocation.getPath());\n-    metastoreClient.createDatabase(database);\n+    catalog.createNamespace(namespace, Collections.singletonMap(\"location\", nonDefaultLocation.getPath()));\n+    Map<String, String> namespaceMeta = catalog.loadNamespaceMetadata(namespace);\n+    // Make sure that we are testing a namespace with a non default location :)\n+    Assert.assertEquals(namespaceMeta.get(\"location\"), \"file:\" + nonDefaultLocation.getPath());\n \n-    Namespace namespace = Namespace.of(NON_DEFAULT_DATABASE);\n     TableIdentifier tableIdentifier = TableIdentifier.of(namespace, TABLE_NAME);\n     catalog.createTable(tableIdentifier, schema);\n \n-    // Let's check the data loaded through the catalog\n+    // Let's check the location loaded through the catalog\n     Table table = catalog.loadTable(tableIdentifier);\n-    Map<String, String> namespaceMeta = catalog.loadNamespaceMetadata(namespace);\n     Assert.assertEquals(namespaceMeta.get(\"location\") + \"/\" + TABLE_NAME, table.location());\n \n     // Drop the database and purge the files\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MjM2Mw==", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460572363", "bodyText": "Nit: Typo in thous?", "author": "shardulm94", "createdAt": "2020-07-26T20:54:34Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -376,6 +376,28 @@ public TableOperations newTableOps(TableIdentifier tableIdentifier) {\n \n   @Override\n   protected String defaultWarehouseLocation(TableIdentifier tableIdentifier) {\n+    // This is a little edgy since we basically duplicate the HMS location generation logic.\n+    // Sadly I do not see a good way around this if we want to keep the order of events, like:\n+    // - Create meta files\n+    // - Create the metadata in HMS, and thous commit the changes", "originalCommit": "667d9b63a431bea1467ad54ab7941b85a9482c81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODM2MQ==", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460738361", "bodyText": "Done", "author": "pvary", "createdAt": "2020-07-27T08:46:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MjM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0d3a0f7fef9001b0c2593504d07957fc10ae3414", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 25c4d182d..9a37f7b3c 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -379,7 +379,7 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n     // This is a little edgy since we basically duplicate the HMS location generation logic.\n     // Sadly I do not see a good way around this if we want to keep the order of events, like:\n     // - Create meta files\n-    // - Create the metadata in HMS, and thous commit the changes\n+    // - Create the metadata in HMS, and this way committing the changes\n \n     // Create a new location based on the namespace / database if it is set on database level\n     try {\n"}}, {"oid": "0d3a0f7fef9001b0c2593504d07957fc10ae3414", "url": "https://github.com/apache/iceberg/commit/0d3a0f7fef9001b0c2593504d07957fc10ae3414", "message": "Addressing review comments", "committedDate": "2020-07-27T08:45:13Z", "type": "commit"}]}