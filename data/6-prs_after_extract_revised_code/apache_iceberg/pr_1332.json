{"pr_number": 1332, "pr_title": "Flink: Introduce CatalogLoader and TableLoader", "pr_createdAt": "2020-08-13T08:59:44Z", "pr_url": "https://github.com/apache/iceberg/pull/1332", "timeline": [{"oid": "1c7572124e8fd79af0ca8e79d3b5b4e110251624", "url": "https://github.com/apache/iceberg/commit/1c7572124e8fd79af0ca8e79d3b5b4e110251624", "message": "Flink: Introduce CatalogLoader and TableLoader", "committedDate": "2020-08-17T07:38:41Z", "type": "commit"}, {"oid": "1c7572124e8fd79af0ca8e79d3b5b4e110251624", "url": "https://github.com/apache/iceberg/commit/1c7572124e8fd79af0ca8e79d3b5b4e110251624", "message": "Flink: Introduce CatalogLoader and TableLoader", "committedDate": "2020-08-17T07:38:41Z", "type": "forcePushed"}, {"oid": "de62dac2cae6c391f4efa44023cc3f4120105dc4", "url": "https://github.com/apache/iceberg/commit/de62dac2cae6c391f4efa44023cc3f4120105dc4", "message": "Add util clusterHadoopConf", "committedDate": "2020-08-17T08:18:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkwMTEzNQ==", "url": "https://github.com/apache/iceberg/pull/1332#discussion_r471901135", "bodyText": "Those two seems don't have to be private members because I did not see anywhere accessing them except the constructor.", "author": "openinx", "createdAt": "2020-08-18T04:05:51Z", "path": "flink/src/main/java/org/apache/iceberg/flink/FlinkCatalog.java", "diffHunk": "@@ -71,6 +72,8 @@\n  */\n public class FlinkCatalog extends AbstractCatalog {\n \n+  private final CatalogLoader catalogLoader;\n+  private final Configuration hadoopConf;", "originalCommit": "de62dac2cae6c391f4efa44023cc3f4120105dc4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "103997e68910e767173f86edaf5ebb6c9edafc45", "chunk": "diff --git a/flink/src/main/java/org/apache/iceberg/flink/FlinkCatalog.java b/flink/src/main/java/org/apache/iceberg/flink/FlinkCatalog.java\nindex 0029f8950..4182964a8 100644\n--- a/flink/src/main/java/org/apache/iceberg/flink/FlinkCatalog.java\n+++ b/flink/src/main/java/org/apache/iceberg/flink/FlinkCatalog.java\n\n@@ -74,10 +74,10 @@ public class FlinkCatalog extends AbstractCatalog {\n \n   private final CatalogLoader catalogLoader;\n   private final Configuration hadoopConf;\n-  private final Catalog originalCatalog;\n   private final Catalog icebergCatalog;\n   private final String[] baseNamespace;\n   private final SupportsNamespaces asNamespaceCatalog;\n+  private final Closeable closeable;\n \n   public FlinkCatalog(\n       String catalogName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkwMzI2Mw==", "url": "https://github.com/apache/iceberg/pull/1332#discussion_r471903263", "bodyText": "Is possible to track only on Catalog in this FlinkCatalog class ? For example,  we only keep the icebergCatalog as the member of this class, that will be much easier to follow the code ( Introducing two member here confused me sometime).   When close the catalog we could make the CachingCatalog to implement Closeable inteface.", "author": "openinx", "createdAt": "2020-08-18T04:15:09Z", "path": "flink/src/main/java/org/apache/iceberg/flink/FlinkCatalog.java", "diffHunk": "@@ -80,14 +83,17 @@ public FlinkCatalog(\n       String catalogName,\n       String defaultDatabase,\n       String[] baseNamespace,\n-      Catalog icebergCatalog,\n+      CatalogLoader catalogLoader,\n+      Configuration hadoopConf,\n       boolean cacheEnabled) {\n     super(catalogName, defaultDatabase);\n-    this.originalCatalog = icebergCatalog;\n-    this.icebergCatalog = cacheEnabled ? CachingCatalog.wrap(icebergCatalog) : icebergCatalog;\n+    this.hadoopConf = hadoopConf;\n+    this.originalCatalog = catalogLoader.loadCatalog(hadoopConf);", "originalCommit": "de62dac2cae6c391f4efa44023cc3f4120105dc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkyMjI5MA==", "url": "https://github.com/apache/iceberg/pull/1332#discussion_r471922290", "bodyText": "CachingCatalog is just a wrapper for original catalog. I think it is better to not let it implement Closeable interface.\nA way to solve this problem can be: Keep Closeable as a class member instead of Catalog.\ncloseable = originalCatalog instanceof Closeable ? (Closeable) originalCatalog : null;\nWhat do you think?", "author": "JingsongLi", "createdAt": "2020-08-18T05:26:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkwMzI2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk0NTcxMA==", "url": "https://github.com/apache/iceberg/pull/1332#discussion_r471945710", "bodyText": "Make sense.", "author": "openinx", "createdAt": "2020-08-18T06:35:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkwMzI2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "103997e68910e767173f86edaf5ebb6c9edafc45", "chunk": "diff --git a/flink/src/main/java/org/apache/iceberg/flink/FlinkCatalog.java b/flink/src/main/java/org/apache/iceberg/flink/FlinkCatalog.java\nindex 0029f8950..4182964a8 100644\n--- a/flink/src/main/java/org/apache/iceberg/flink/FlinkCatalog.java\n+++ b/flink/src/main/java/org/apache/iceberg/flink/FlinkCatalog.java\n\n@@ -74,10 +74,10 @@ public class FlinkCatalog extends AbstractCatalog {\n \n   private final CatalogLoader catalogLoader;\n   private final Configuration hadoopConf;\n-  private final Catalog originalCatalog;\n   private final Catalog icebergCatalog;\n   private final String[] baseNamespace;\n   private final SupportsNamespaces asNamespaceCatalog;\n+  private final Closeable closeable;\n \n   public FlinkCatalog(\n       String catalogName,\n"}}, {"oid": "103997e68910e767173f86edaf5ebb6c9edafc45", "url": "https://github.com/apache/iceberg/commit/103997e68910e767173f86edaf5ebb6c9edafc45", "message": "Address comments", "committedDate": "2020-08-18T05:27:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyMzMzNA==", "url": "https://github.com/apache/iceberg/pull/1332#discussion_r472423334", "bodyText": "Do you really need this? isn't this covered by the CatalogTableLoader using hadoop?", "author": "edgarRd", "createdAt": "2020-08-18T19:16:39Z", "path": "flink/src/main/java/org/apache/iceberg/flink/TableLoader.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.flink;\n+\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.io.Serializable;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.iceberg.Table;\n+import org.apache.iceberg.catalog.Catalog;\n+import org.apache.iceberg.catalog.TableIdentifier;\n+import org.apache.iceberg.hadoop.HadoopTables;\n+\n+/**\n+ * Serializable loader to load an Iceberg {@link Table}.\n+ * Flink needs to get {@link Table} objects in the cluster (for example, to get splits), not just on the client side.\n+ * So we need an Iceberg table loader to get the {@link Table} object.\n+ */\n+public interface TableLoader extends Closeable, Serializable {\n+\n+  void open(Configuration configuration);\n+\n+  Table loadTable();\n+\n+  static TableLoader fromCatalog(CatalogLoader catalogLoader, TableIdentifier identifier) {\n+    return new CatalogTableLoader(catalogLoader, identifier);\n+  }\n+\n+  static TableLoader fromHadoopTable(String location) {\n+    return new HadoopTableLoader(location);\n+  }\n+\n+  class HadoopTableLoader implements TableLoader {", "originalCommit": "103997e68910e767173f86edaf5ebb6c9edafc45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjYwMTA3Mg==", "url": "https://github.com/apache/iceberg/pull/1332#discussion_r472601072", "bodyText": "I saw #1306 , I don't know if I misunderstood something.\nIt seems that a simple path can make it easier for users to use.", "author": "JingsongLi", "createdAt": "2020-08-19T02:25:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyMzMzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ3OTUzNA==", "url": "https://github.com/apache/iceberg/pull/1332#discussion_r473479534", "bodyText": "Right, I think part of the discussion is that providing a table via this API does not guarantee the atomic commit on table changes, therefore we have HiveCatalog for tables that are backed in systems like s3. While HadoopCatalog for hdfs which does not implement HMS coordination since the filesystem itself has atomic renames.\nI'm not sure which case specifically this specific Flink implementation will use, but as mentioned in #1306 (comment) it seems dangerous to provide tables loaded with HadoopTables if there's no context of the underlying limitations.", "author": "edgarRd", "createdAt": "2020-08-20T00:39:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyMzMzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2MTIwNw==", "url": "https://github.com/apache/iceberg/pull/1332#discussion_r473561207", "bodyText": "Yes, There are some comments in HadoopCatalog: The HadoopCatalog requires that the underlying file system supports atomic rename. So as HadoopTables.\nBut I think if users use HadoopTables, HadoopCatalog or TableLoader.fromHadoopTable, users should know, yeah, we need a file system supports atomic rename instead S3 and etc...\nIn #1306, should be discussing how to support location in the SQL layer.\nFor Flink, there are two kinds of users: DataStream users and SQL users.\nSo here is my thoughts:\n\nJust like Spark and Mapreduce. For a Flink DataStream programer, he/she can just specify a hadoop location path for reading and writing, or use iceberg Catalog.\nBut for Flink SQL user, he/she must specify an iceberg Catalog to load tables.", "author": "JingsongLi", "createdAt": "2020-08-20T03:09:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyMzMzNA=="}], "type": "inlineReview", "revised_code": null}]}