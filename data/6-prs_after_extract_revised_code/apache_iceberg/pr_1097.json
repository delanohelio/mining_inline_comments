{"pr_number": 1097, "pr_title": "Add test case for deleting column in hive metastore ", "pr_createdAt": "2020-06-05T10:15:17Z", "pr_url": "https://github.com/apache/iceberg/pull/1097", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0NDAzNA==", "url": "https://github.com/apache/iceberg/pull/1097#discussion_r436844034", "bodyText": "Tests for new cases should be in separate test methods instead of tacked on to existing tests. Also, can you change the assertions to check the full table schema instead of just sizes? It should be something like this:\nSchema expectedSchema = new Schema(...);\nicebergTable.updateSchema()\n    ...\n    .commit();\n\nAssert.assertEquals(\"Schema should match expected\", expected.asStruct(), icebergTable.schema().asStruct());", "author": "rdblue", "createdAt": "2020-06-08T16:40:00Z", "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "diffHunk": "@@ -238,6 +238,19 @@ public void testExistingTableUpdate() throws TException {\n         .map(Types.NestedField::name)\n         .collect(Collectors.toList());\n     Assert.assertEquals(icebergColumns, hiveColumns);\n+\n+    // Add two columns with different types, then verify we could delete the first column in hive metastore\n+    // as hive conf METASTORE_DISALLOW_INCOMPATIBLE_COL_TYPE_CHANGES was set to false. If this was set to true,\n+    // an InvalidOperationException would thrown in method MetaStoreUtils#throwExceptionIfIncompatibleColTypeChange()\n+    int columnCount = icebergTable.schema().columns().size();\n+    icebergTable.updateSchema()\n+            .addColumn(\"str1\", Types.StringType.get())\n+            .addColumn(\"int1\", Types.IntegerType.get())\n+            .commit();\n+    Assert.assertEquals(\"2 columns added\", columnCount + 2, icebergTable.schema().columns().size());\n+\n+    icebergTable.updateSchema().deleteColumn(\"str1\").commit();\n+    Assert.assertEquals(\"1 column deleted\", columnCount + 1, icebergTable.schema().columns().size());", "originalCommit": "eaa3bb0e123e063624eb774848ccc4d740c18243", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1MTA1Ng==", "url": "https://github.com/apache/iceberg/pull/1097#discussion_r437351056", "bodyText": "added a new test method testColumnTypeChangeInMetastore()", "author": "vanliu-tx", "createdAt": "2020-06-09T11:56:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0NDAzNA=="}], "type": "inlineReview", "revised_code": {"commit": "7b6e09c73b15991bb8269267027b15899bd7a297", "chunk": "diff --git a/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java b/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java\nindex e49c9f3ef..ba6080402 100644\n--- a/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java\n+++ b/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java\n\n@@ -238,19 +241,37 @@ public class HiveTableTest extends HiveTableBaseTest {\n         .map(Types.NestedField::name)\n         .collect(Collectors.toList());\n     Assert.assertEquals(icebergColumns, hiveColumns);\n+  }\n+\n+  @Test\n+  public void testColumnTypeChangeInMetastore() throws TException {\n+    Table icebergTable = catalog.loadTable(TABLE_IDENTIFIER);\n \n-    // Add two columns with different types, then verify we could delete the first column in hive metastore\n+    Schema expectedSchema = new Schema(Types.StructType.of(\n+            required(1, \"id\", Types.LongType.get()),\n+            optional(2, \"data\", Types.LongType.get()),\n+            optional(3, \"string\", Types.StringType.get()),\n+            optional(4, \"int\", Types.IntegerType.get())).fields());\n+    // Add columns with different types, then verify we could delete one column in hive metastore\n     // as hive conf METASTORE_DISALLOW_INCOMPATIBLE_COL_TYPE_CHANGES was set to false. If this was set to true,\n     // an InvalidOperationException would thrown in method MetaStoreUtils#throwExceptionIfIncompatibleColTypeChange()\n-    int columnCount = icebergTable.schema().columns().size();\n     icebergTable.updateSchema()\n-            .addColumn(\"str1\", Types.StringType.get())\n-            .addColumn(\"int1\", Types.IntegerType.get())\n+            .addColumn(\"data\", Types.LongType.get())\n+            .addColumn(\"string\", Types.StringType.get())\n+            .addColumn(\"int\", Types.IntegerType.get())\n             .commit();\n-    Assert.assertEquals(\"2 columns added\", columnCount + 2, icebergTable.schema().columns().size());\n \n-    icebergTable.updateSchema().deleteColumn(\"str1\").commit();\n-    Assert.assertEquals(\"1 column deleted\", columnCount + 1, icebergTable.schema().columns().size());\n+    icebergTable = catalog.loadTable(TABLE_IDENTIFIER);\n+    Assert.assertEquals(\"Schema should match expected\", expectedSchema.asStruct(), icebergTable.schema().asStruct());\n+\n+    expectedSchema = new Schema(Types.StructType.of(\n+            required(1, \"id\", Types.LongType.get()),\n+            optional(2, \"data\", Types.LongType.get()),\n+            optional(4, \"int\", Types.IntegerType.get())).fields());\n+    icebergTable.updateSchema().deleteColumn(\"string\").commit();\n+\n+    icebergTable = catalog.loadTable(TABLE_IDENTIFIER);\n+    Assert.assertEquals(\"Schema should match expected\", expectedSchema.asStruct(), icebergTable.schema().asStruct());\n   }\n \n   @Test(expected = CommitFailedException.class)\n"}}, {"oid": "7b6e09c73b15991bb8269267027b15899bd7a297", "url": "https://github.com/apache/iceberg/commit/7b6e09c73b15991bb8269267027b15899bd7a297", "message": "Add test case for deleting column in hive metastore with METASTORE_DISALLOW_INCOMPATIBLE_COL_TYPE_CHANGES set to false", "committedDate": "2020-06-09T11:50:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2ODk1NQ==", "url": "https://github.com/apache/iceberg/pull/1097#discussion_r437568955", "bodyText": "It isn't necessary to reload the table. The one in memory is updated when an operation commits.", "author": "rdblue", "createdAt": "2020-06-09T16:38:02Z", "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "diffHunk": "@@ -240,6 +243,37 @@ public void testExistingTableUpdate() throws TException {\n     Assert.assertEquals(icebergColumns, hiveColumns);\n   }\n \n+  @Test\n+  public void testColumnTypeChangeInMetastore() throws TException {\n+    Table icebergTable = catalog.loadTable(TABLE_IDENTIFIER);\n+\n+    Schema expectedSchema = new Schema(Types.StructType.of(\n+            required(1, \"id\", Types.LongType.get()),\n+            optional(2, \"data\", Types.LongType.get()),\n+            optional(3, \"string\", Types.StringType.get()),\n+            optional(4, \"int\", Types.IntegerType.get())).fields());\n+    // Add columns with different types, then verify we could delete one column in hive metastore\n+    // as hive conf METASTORE_DISALLOW_INCOMPATIBLE_COL_TYPE_CHANGES was set to false. If this was set to true,\n+    // an InvalidOperationException would thrown in method MetaStoreUtils#throwExceptionIfIncompatibleColTypeChange()\n+    icebergTable.updateSchema()\n+            .addColumn(\"data\", Types.LongType.get())\n+            .addColumn(\"string\", Types.StringType.get())\n+            .addColumn(\"int\", Types.IntegerType.get())\n+            .commit();\n+\n+    icebergTable = catalog.loadTable(TABLE_IDENTIFIER);", "originalCommit": "7b6e09c73b15991bb8269267027b15899bd7a297", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "614c3ff02f4f14c54fb1a8205222c585ed843f52", "chunk": "diff --git a/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java b/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java\nindex ba6080402..b3a315838 100644\n--- a/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java\n+++ b/hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java\n\n@@ -261,7 +261,6 @@ public class HiveTableTest extends HiveTableBaseTest {\n             .addColumn(\"int\", Types.IntegerType.get())\n             .commit();\n \n-    icebergTable = catalog.loadTable(TABLE_IDENTIFIER);\n     Assert.assertEquals(\"Schema should match expected\", expectedSchema.asStruct(), icebergTable.schema().asStruct());\n \n     expectedSchema = new Schema(Types.StructType.of(\n"}}, {"oid": "614c3ff02f4f14c54fb1a8205222c585ed843f52", "url": "https://github.com/apache/iceberg/commit/614c3ff02f4f14c54fb1a8205222c585ed843f52", "message": "Remove unnecessary load calls.", "committedDate": "2020-06-09T16:39:12Z", "type": "commit"}]}