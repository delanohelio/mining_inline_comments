{"pr_number": 1570, "pr_title": "Run hive storage handler tests for both Parquet and ORC", "pr_createdAt": "2020-10-09T11:02:10Z", "pr_url": "https://github.com/apache/iceberg/pull/1570", "timeline": [{"oid": "e21fba4c042ea51cde3285e759e7b23f7c361366", "url": "https://github.com/apache/iceberg/commit/e21fba4c042ea51cde3285e759e7b23f7c361366", "message": "run methods for both Parquet and ORC", "committedDate": "2020-10-08T15:35:42Z", "type": "commit"}, {"oid": "1e5be00db17d87907054561cd993d6702f1ac618", "url": "https://github.com/apache/iceberg/commit/1e5be00db17d87907054561cd993d6702f1ac618", "message": "fix indentation for checkstyle", "committedDate": "2020-10-09T11:28:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDIxNA==", "url": "https://github.com/apache/iceberg/pull/1570#discussion_r502830214", "bodyText": "Rather than creating more test cases, we usually parameterize the test suite. TestIdentityPartitionData is an example. Could you use that approach instead? Or is there a reason why you chose to do it this way?", "author": "rdblue", "createdAt": "2020-10-10T20:41:40Z", "path": "mr/src/test/java/org/apache/iceberg/mr/hive/HiveIcebergStorageHandlerBaseTest.java", "diffHunk": "@@ -136,18 +136,50 @@ public void after() throws Exception {\n     }\n   }\n \n+  // PARQUET\n+\n+  @Test\n+  public void testScanEmptyTableParquet() throws IOException {", "originalCommit": "1e5be00db17d87907054561cd993d6702f1ac618", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzODE3Mw==", "url": "https://github.com/apache/iceberg/pull/1570#discussion_r502838173", "bodyText": "Hi @rdblue, thanks for taking a look! The reason I did that is because these StorageHandler tests already use a different test runner (StandaloneHiveRunner), therefore I couldn't use Parameterized.class as well. I've tried to outline this rationale in the PR description, but I'm afraid it must have gotten lost in my rather long-winded sentences... :)", "author": "marton-bod", "createdAt": "2020-10-10T22:17:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzODMyMA==", "url": "https://github.com/apache/iceberg/pull/1570#discussion_r502838320", "bodyText": "Sorry, my mistake!", "author": "rdblue", "createdAt": "2020-10-10T22:19:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3NDMzOA==", "url": "https://github.com/apache/iceberg/pull/1570#discussion_r504574338", "bodyText": "I'm afraid this isn't possible with HiveRunner using JUnit4 rules but it is possible using JUnit5 extensions as this doesn't require a different extension to be used, the @ParameterizedTest annotation can go at the method level and then the two play nicely together. So, if/when Iceberg moves to JUnit5 we could refactor all this.", "author": "massdosage", "createdAt": "2020-10-14T10:35:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDIxNA=="}], "type": "inlineReview", "revised_code": null}]}