{"pr_number": 1379, "pr_title": "Spark: Estimate statistics using snapshot summary only for partitioned tables", "pr_createdAt": "2020-08-25T17:07:37Z", "pr_url": "https://github.com/apache/iceberg/pull/1379", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNDAwMA==", "url": "https://github.com/apache/iceberg/pull/1379#discussion_r476604000", "bodyText": "We had a wrong predicate before: we compared a list to an expression.", "author": "aokolnychyi", "createdAt": "2020-08-25T17:08:09Z", "path": "spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java", "diffHunk": "@@ -283,7 +284,8 @@ public Statistics estimateStatistics() {\n       return new Stats(0L, 0L);\n     }\n \n-    if (filterExpressions == null || filterExpressions == Expressions.alwaysTrue()) {", "originalCommit": "d6f74344eca48ee4089d6b4e4d54d3752ce929fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYxMjY5Mg==", "url": "https://github.com/apache/iceberg/pull/1379#discussion_r476612692", "bodyText": "And it was always null then?", "author": "rdblue", "createdAt": "2020-08-25T17:22:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNDAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYyMTk1NA==", "url": "https://github.com/apache/iceberg/pull/1379#discussion_r476621954", "bodyText": "Yeah, it was null", "author": "aokolnychyi", "createdAt": "2020-08-25T17:33:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNDAwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc2MTI3Mg==", "url": "https://github.com/apache/iceberg/pull/1379#discussion_r476761272", "bodyText": "thanks for catching this @aokolnychyi", "author": "sudssf", "createdAt": "2020-08-25T21:38:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNDAwMA=="}], "type": "inlineReview", "revised_code": {"commit": "d420bd6db54d31307dc4df83bad054b52e731c80", "chunk": "diff --git a/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java b/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java\nindex ec691814c..7d23b2a57 100644\n--- a/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java\n+++ b/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java\n\n@@ -284,8 +284,8 @@ class Reader implements DataSourceReader, SupportsScanColumnarBatch, SupportsPus\n       return new Stats(0L, 0L);\n     }\n \n-    // we don't estimate stats using snapshot summary when scanning metadata tables\n-    if (table instanceof BaseTable && filterExpression() == Expressions.alwaysTrue()) {\n+    // estimate stats using snapshot summary only for partitioned tables (metadata tables are unpartitioned)\n+    if (table.spec().fields().size() > 0 && filterExpression() == Expressions.alwaysTrue()) {\n       long totalRecords = PropertyUtil.propertyAsLong(table.currentSnapshot().summary(),\n           SnapshotSummary.TOTAL_RECORDS_PROP, Long.MAX_VALUE);\n       return new Stats(SparkSchemaUtil.estimateSize(lazyType(), totalRecords), totalRecords);\n"}}, {"oid": "d420bd6db54d31307dc4df83bad054b52e731c80", "url": "https://github.com/apache/iceberg/commit/d420bd6db54d31307dc4df83bad054b52e731c80", "message": "Spark: Estimate statistics using snapshot summary only for partitioned tables", "committedDate": "2020-08-25T17:13:11Z", "type": "forcePushed"}, {"oid": "f823afd230eab532a9dc75ac79d43a3dd9654a00", "url": "https://github.com/apache/iceberg/commit/f823afd230eab532a9dc75ac79d43a3dd9654a00", "message": "Spark: Estimate statistics using snapshot summary only for partitioned tables", "committedDate": "2020-08-25T17:14:16Z", "type": "commit"}, {"oid": "f823afd230eab532a9dc75ac79d43a3dd9654a00", "url": "https://github.com/apache/iceberg/commit/f823afd230eab532a9dc75ac79d43a3dd9654a00", "message": "Spark: Estimate statistics using snapshot summary only for partitioned tables", "committedDate": "2020-08-25T17:14:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYxMjkxMw==", "url": "https://github.com/apache/iceberg/pull/1379#discussion_r476612913", "bodyText": "I recently added isUnpartitioned since we do this check fairly often.", "author": "rdblue", "createdAt": "2020-08-25T17:22:21Z", "path": "spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java", "diffHunk": "@@ -283,7 +283,8 @@ public Statistics estimateStatistics() {\n       return new Stats(0L, 0L);\n     }\n \n-    if (filterExpressions == null || filterExpressions == Expressions.alwaysTrue()) {\n+    // estimate stats using snapshot summary only for partitioned tables (metadata tables are unpartitioned)\n+    if (table.spec().fields().size() > 0 && filterExpression() == Expressions.alwaysTrue()) {", "originalCommit": "f823afd230eab532a9dc75ac79d43a3dd9654a00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYyMzAzOA==", "url": "https://github.com/apache/iceberg/pull/1379#discussion_r476623038", "bodyText": "I try to avoid negation in conditions to keep them easy to read. It looks OK here, updated.", "author": "aokolnychyi", "createdAt": "2020-08-25T17:34:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYxMjkxMw=="}], "type": "inlineReview", "revised_code": {"commit": "a9f77cca603ae13552765ef51c9e71e8e0bc9e35", "chunk": "diff --git a/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java b/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java\nindex 5fc41dfcc..564f8f216 100644\n--- a/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java\n+++ b/spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java\n\n@@ -284,7 +284,7 @@ class Reader implements DataSourceReader, SupportsScanColumnarBatch, SupportsPus\n     }\n \n     // estimate stats using snapshot summary only for partitioned tables (metadata tables are unpartitioned)\n-    if (table.spec().fields().size() > 0 && filterExpression() == Expressions.alwaysTrue()) {\n+    if (!table.spec().isUnpartitioned() && filterExpression() == Expressions.alwaysTrue()) {\n       long totalRecords = PropertyUtil.propertyAsLong(table.currentSnapshot().summary(),\n           SnapshotSummary.TOTAL_RECORDS_PROP, Long.MAX_VALUE);\n       return new Stats(SparkSchemaUtil.estimateSize(lazyType(), totalRecords), totalRecords);\n"}}, {"oid": "a9f77cca603ae13552765ef51c9e71e8e0bc9e35", "url": "https://github.com/apache/iceberg/commit/a9f77cca603ae13552765ef51c9e71e8e0bc9e35", "message": "Use unpartitioned method", "committedDate": "2020-08-25T17:31:51Z", "type": "commit"}]}