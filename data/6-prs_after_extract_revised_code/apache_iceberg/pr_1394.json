{"pr_number": 1394, "pr_title": "Hive: Add logging for Hive related classes", "pr_createdAt": "2020-08-27T12:51:22Z", "pr_url": "https://github.com/apache/iceberg/pull/1394", "timeline": [{"oid": "94472c657080b13f934bf227bbec0110efcd0af0", "url": "https://github.com/apache/iceberg/commit/94472c657080b13f934bf227bbec0110efcd0af0", "message": "Add logging for Hive related classes", "committedDate": "2020-08-27T12:26:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMDU0Mg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478400542", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.info(\"Renamed table form: [{}], to: [{}]\", from, to);\n          \n          \n            \n                  LOG.info(\"Renamed table from: [{}], to: [{}]\", from, to);", "author": "massdosage", "createdAt": "2020-08-27T13:00:57Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -177,6 +182,8 @@ public void renameTable(TableIdentifier from, TableIdentifier originalTo) {\n         return null;\n       });\n \n+      LOG.info(\"Renamed table form: [{}], to: [{}]\", from, to);", "originalCommit": "94472c657080b13f934bf227bbec0110efcd0af0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMDcxNw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478430717", "bodyText": "Fixed. Thanks!", "author": "pvary", "createdAt": "2020-08-27T13:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMDU0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 9d1b05032..6ea4b01f7 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -182,7 +182,7 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n         return null;\n       });\n \n-      LOG.info(\"Renamed table form: [{}], to: [{}]\", from, to);\n+      LOG.info(\"Renamed table from: [{}], to: [{}]\", from, to);\n \n     } catch (NoSuchObjectException e) {\n       throw new NoSuchTableException(\"Table does not exist: %s\", from);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478401575", "bodyText": "Is the additional \\ here intentional? If so, what behaviour changes?", "author": "massdosage", "createdAt": "2020-08-27T13:02:31Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -465,9 +495,14 @@ protected void finalize() throws Throwable {\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\n\\t\").join(\n+      String trace = Joiner.on(\"\\\\n\\t\").join(", "originalCommit": "94472c657080b13f934bf227bbec0110efcd0af0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwNTMzNA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478405334", "bodyText": "Collapsing the multiline log to a single line - was not brave enough to remove the \\n-s altogether.\nThis should create logs like:\nUnclosed input stream created by:\\n {Stacktrace.line1\\n  Stractrace.line2\\n  Stractrace.line3}", "author": "pvary", "createdAt": "2020-08-27T13:08:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1ODIxMA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478758210", "bodyText": "This makes logs harder to read. What is the intended purpose of this change?", "author": "rdblue", "createdAt": "2020-08-27T23:58:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE5MTU0MA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479191540", "bodyText": "When I have to read Hive logs where there are plenty of concurrent queries running parallel, extra log lines will appear inside if we have multiline logs which will make them hard to read (even harder than the one proposed above).\nAlso only the first line of the log will get the timestamp and other log header information, which will make it hard to use any log analyzer tool to check them.\nThese are the main reasons in Hive we usually try to avoid multiline logs, and accept the drawback of the \"hardness\" of reading them.\nI am open to suggestions, even reverting back to this change if you strongly feel that it should remain as it is.", "author": "pvary", "createdAt": "2020-08-28T11:53:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMyODU5NQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479328595", "bodyText": "Reverted in the meantime to proceed with the patch", "author": "pvary", "createdAt": "2020-08-28T14:10:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxNDQ1NQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479414455", "bodyText": "@pvary, I'm not sure why, but I've never seen mixed log lines in our environment. So I don't think it is a good idea to solve the problem for one environment by making logs harder to read everywhere.\nWhat about using a custom appender or SLF4J binding in your environment that converts newlines to \\\\n so that you can configure it locally? I think that is a fairly easy solution that doesn't require changing logs everywhere.", "author": "rdblue", "createdAt": "2020-08-28T16:34:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ4OTYyNg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479489626", "bodyText": "Ok. Keeping the reverted stuff", "author": "pvary", "createdAt": "2020-08-28T19:14:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b1a48b8813c1072ad67061796b1511f698efe151", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 9d1b05032..71d27a0f8 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -495,14 +497,17 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\\\n\\t\").join(\n+      String trace = Joiner.on(\"\\n\\t\").join(\n           Arrays.copyOfRange(createStack, 1, createStack.length));\n-      LOG.warn(\"Unclosed input stream created by:\\\\n\\t{}\", trace);\n+      LOG.warn(\"Unclosed input stream created by:\\n\\t{}\", trace);\n     }\n   }\n \n   @Override\n   public String toString() {\n-    return \"HiveCatalog [name=\" + name + \", location=\" + this.conf.get(\"hive.metastore.uris\") + \"]\";\n+    return MoreObjects.toStringHelper(this)\n+        .add(\"name\", name)\n+        .add(\"uri\", this.conf.get(HiveConf.ConfVars.METASTOREURIS.varname))\n+        .toString();\n   }\n }\n"}}, {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "url": "https://github.com/apache/iceberg/commit/9db3dd5fba5b95ce95b2076f6ae291c25b364109", "message": "Fixed typo pointed out by Adrian", "committedDate": "2020-08-27T13:44:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzE3Mw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478757173", "bodyText": "What is the purpose of this debug message? I'm not sure how it would help.", "author": "rdblue", "createdAt": "2020-08-27T23:54:17Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -89,10 +89,13 @@ public HiveCatalog(String name, String uri, int clientPoolSize, Configuration co\n \n     try {\n       List<String> tables = clients.run(client -> client.getAllTables(database));\n-      return tables.stream()\n+      List<TableIdentifier> tableIdentifiers = tables.stream()\n           .map(t -> TableIdentifier.of(namespace, t))\n           .collect(Collectors.toList());\n \n+      LOG.debug(\"Listing of namespace [{}] resulted in the following tables: [{}]\", namespace, tableIdentifiers);", "originalCommit": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE5NjkxNg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479196916", "bodyText": "In Hive we often find that it could be important to know what is the exact information we got from downstream systems, so we can decide if we have to check downstream code to find the problem, or we have to check if we had a bug in Hive code.\nFor the specific situation (made up example), it could be that HMS returned wrong list of tables because the namespace contained '%' character and HMS used as a wildcard instead of returning exact matches. This debug log could help find the root cause of the issue.", "author": "pvary", "createdAt": "2020-08-28T11:58:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzE3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b1a48b8813c1072ad67061796b1511f698efe151", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 6ea4b01f7..71d27a0f8 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -93,7 +95,7 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n           .map(t -> TableIdentifier.of(namespace, t))\n           .collect(Collectors.toList());\n \n-      LOG.debug(\"Listing of namespace [{}] resulted in the following tables: [{}]\", namespace, tableIdentifiers);\n+      LOG.debug(\"Listing of namespace: {} resulted in the following tables: {}\", namespace, tableIdentifiers);\n       return tableIdentifiers;\n \n     } catch (UnknownDBException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzUxNA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478757514", "bodyText": "How about \"Dropped table: {}\" instead of using a passive form? We also tend to use : instead of brackets in messages.", "author": "rdblue", "createdAt": "2020-08-27T23:55:31Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -138,9 +141,11 @@ public boolean dropTable(TableIdentifier identifier, boolean purge) {\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n+      LOG.info(\"Table is dropped [{}]\", identifier);", "originalCommit": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIwMTY4Mw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479201683", "bodyText": "Done, I will also remove every '[]' - I tend to use them because once spent 2 days trying to figure out why my code is not able to find table 'sneakytable', where the log cleanly shows that 'sneakytable ' is in the listing (notice the missing ' ', which is hardly noticeable in the logs if the beginning/end of the variable is not marked clearly, and it is the end of the line :))", "author": "pvary", "createdAt": "2020-08-28T12:02:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzUxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NzQyOA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r480977428", "bodyText": "I too have endured this pain of whitespace at the start/end of a string like this causing all kinds of problems and being really hard to spot as the cause!", "author": "massdosage", "createdAt": "2020-09-01T08:50:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzUxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NzAzNA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481377034", "bodyText": "For concerns like this, I prefer to have a quote method that handles special characters. That way you get a readable error message when everything is normal, but the space problem is highlighted when it needs to be. So ident.quote() would return db.table normally and db.\"table \" if there is a trailing space.", "author": "rdblue", "createdAt": "2020-09-01T19:20:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzUxNA=="}], "type": "inlineReview", "revised_code": {"commit": "b1a48b8813c1072ad67061796b1511f698efe151", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 6ea4b01f7..71d27a0f8 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -141,11 +143,11 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n-      LOG.info(\"Table is dropped [{}]\", identifier);\n+      LOG.info(\"Dropped table: {}\", identifier);\n       return true;\n \n     } catch (NoSuchTableException | NoSuchObjectException e) {\n-      LOG.debug(\"Unable to drop missing table: [{}]\", identifier, e);\n+      LOG.debug(\"Skipping drop, table does not exist: {}\", identifier, e);\n       return false;\n \n     } catch (TException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzY4Nw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478757687", "bodyText": "How about \"Skipping drop, table does not exist: {}\"?", "author": "rdblue", "createdAt": "2020-08-27T23:56:09Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -138,9 +141,11 @@ public boolean dropTable(TableIdentifier identifier, boolean purge) {\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n+      LOG.info(\"Table is dropped [{}]\", identifier);\n       return true;\n \n     } catch (NoSuchTableException | NoSuchObjectException e) {\n+      LOG.debug(\"Unable to drop missing table: [{}]\", identifier, e);", "originalCommit": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIwMjA2OQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479202069", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T12:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b1a48b8813c1072ad67061796b1511f698efe151", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 6ea4b01f7..71d27a0f8 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -141,11 +143,11 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n-      LOG.info(\"Table is dropped [{}]\", identifier);\n+      LOG.info(\"Dropped table: {}\", identifier);\n       return true;\n \n     } catch (NoSuchTableException | NoSuchObjectException e) {\n-      LOG.debug(\"Unable to drop missing table: [{}]\", identifier, e);\n+      LOG.debug(\"Skipping drop, table does not exist: {}\", identifier, e);\n       return false;\n \n     } catch (TException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1Nzc3Mg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478757772", "bodyText": "Can you remove the brackers?", "author": "rdblue", "createdAt": "2020-08-27T23:56:25Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -177,6 +182,8 @@ public void renameTable(TableIdentifier from, TableIdentifier originalTo) {\n         return null;\n       });\n \n+      LOG.info(\"Renamed table from: [{}], to: [{}]\", from, to);", "originalCommit": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1Nzg0NQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478757845", "bodyText": "Here and in other messages", "author": "rdblue", "createdAt": "2020-08-27T23:56:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1Nzc3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIwMjYwOQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479202609", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T12:03:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1Nzc3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b1a48b8813c1072ad67061796b1511f698efe151", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 6ea4b01f7..71d27a0f8 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -182,7 +184,7 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n         return null;\n       });\n \n-      LOG.info(\"Renamed table from: [{}], to: [{}]\", from, to);\n+      LOG.info(\"Renamed table from: {}, to: {}\", from, to);\n \n     } catch (NoSuchObjectException e) {\n       throw new NoSuchTableException(\"Table does not exist: %s\", from);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1ODQ2Mw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478758463", "bodyText": "In configuration, we use uri instead of location. Can you use that here?\nAlso, other toString methods use the helpers in MoreObjects. To have a common format, could you use that instead?", "author": "rdblue", "createdAt": "2020-08-27T23:59:08Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -465,9 +495,14 @@ protected void finalize() throws Throwable {\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\n\\t\").join(\n+      String trace = Joiner.on(\"\\\\n\\t\").join(\n           Arrays.copyOfRange(createStack, 1, createStack.length));\n-      LOG.warn(\"Unclosed input stream created by:\\n\\t{}\", trace);\n+      LOG.warn(\"Unclosed input stream created by:\\\\n\\t{}\", trace);\n     }\n   }\n+\n+  @Override\n+  public String toString() {\n+    return \"HiveCatalog [name=\" + name + \", location=\" + this.conf.get(\"hive.metastore.uris\") + \"]\";", "originalCommit": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIxNDc3Mg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479214772", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T12:14:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1ODQ2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b1a48b8813c1072ad67061796b1511f698efe151", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 6ea4b01f7..71d27a0f8 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -495,14 +497,17 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\\\n\\t\").join(\n+      String trace = Joiner.on(\"\\n\\t\").join(\n           Arrays.copyOfRange(createStack, 1, createStack.length));\n-      LOG.warn(\"Unclosed input stream created by:\\\\n\\t{}\", trace);\n+      LOG.warn(\"Unclosed input stream created by:\\n\\t{}\", trace);\n     }\n   }\n \n   @Override\n   public String toString() {\n-    return \"HiveCatalog [name=\" + name + \", location=\" + this.conf.get(\"hive.metastore.uris\") + \"]\";\n+    return MoreObjects.toStringHelper(this)\n+        .add(\"name\", name)\n+        .add(\"uri\", this.conf.get(HiveConf.ConfVars.METASTOREURIS.varname))\n+        .toString();\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDE3Mg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478760172", "bodyText": "I think these changes are too verbose for INFO, although I do think it would be good to have a log message for the commit.\nCould you add an INFO log in BaseMetastoreTableOperations#commit instead of these? Something like this:\nLOG.info(\"Successfully committed to table {} in {} ms: {}\", table.name(), end - start, newMetadataLocation);\nThat way, logging is not too verbose, consistent across implementations, and adds useful info: the time it took to commit.", "author": "rdblue", "createdAt": "2020-08-28T00:05:41Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -143,9 +144,11 @@ protected void doCommit(TableMetadata base, TableMetadata metadata) {\n       // TODO add lock heart beating for cases where default lock timeout is too low.\n       Table tbl;\n       if (base != null) {\n+        LOG.info(\"Committing existing table [{}]\", fullName);", "originalCommit": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI2ODY0Nw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479268647", "bodyText": "This was a bit more involved. Please check the resulting method changes:\n\nBaseMetastoreTableOperations did not know about the tableName - added fullName\nBaseMetastoreTableOperations#commit did not know about the newMetadataLocation - added newMetadataLocation as a return value for doCommit\nAdded Stopwatch to the used guava classes", "author": "pvary", "createdAt": "2020-08-28T13:05:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDE3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b1a48b8813c1072ad67061796b1511f698efe151", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java b/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java\nindex 22b777430..02db04789 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java\n\n@@ -144,11 +142,11 @@ public class HiveTableOperations extends BaseMetastoreTableOperations {\n       // TODO add lock heart beating for cases where default lock timeout is too low.\n       Table tbl;\n       if (base != null) {\n-        LOG.info(\"Committing existing table [{}]\", fullName);\n+        LOG.debug(\"Committing existing table: {}\", fullName());\n         tbl = metaClients.run(client -> client.getTable(database, tableName));\n         tbl.setSd(storageDescriptor(metadata)); // set to pickup any schema changes\n       } else {\n-        LOG.info(\"Committing new table [{}]\", fullName);\n+        LOG.debug(\"Committing new table: {}\", fullName());\n         final long currentTimeMillis = System.currentTimeMillis();\n         tbl = new Table(tableName,\n             database,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDM2Mg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478760362", "bodyText": "There is already a log in BaseMetastoreTableOperations for this. It has the location, but not the table name. Maybe just add table name to that one.", "author": "rdblue", "createdAt": "2020-08-28T00:06:23Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -130,6 +130,7 @@ protected void doRefresh() {\n     }\n \n     refreshFromMetadataLocation(metadataLocation);\n+    LOG.debug(\"Refreshed [{}]\", fullName);", "originalCommit": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI3MDUyNw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479270527", "bodyText": "removed", "author": "pvary", "createdAt": "2020-08-28T13:08:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDM2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b1a48b8813c1072ad67061796b1511f698efe151", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java b/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java\nindex 22b777430..02db04789 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java\n\n@@ -130,11 +129,10 @@ public class HiveTableOperations extends BaseMetastoreTableOperations {\n     }\n \n     refreshFromMetadataLocation(metadataLocation);\n-    LOG.debug(\"Refreshed [{}]\", fullName);\n   }\n \n   @Override\n-  protected void doCommit(TableMetadata base, TableMetadata metadata) {\n+  protected String doCommit(TableMetadata base, TableMetadata metadata) {\n     String newMetadataLocation = writeNewMetadata(metadata, currentVersion() + 1);\n \n     boolean threw = true;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDk5MQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478760991", "bodyText": "I think this should be done in the catalog or HadoopTables, not in Catalogs. Otherwise, we don't get the log message consistently when table loads go directly through the catalog (as in Spark 3) or through a different class like IcebergSource (Spark 2). And if we were to later add a message to the catalog, then this would be a duplicate.", "author": "rdblue", "createdAt": "2020-08-28T00:08:51Z", "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -65,13 +68,17 @@ public static Table loadTable(Configuration conf, Properties props) {\n   private static Table loadTable(Configuration conf, String tableIdentifier, String tableLocation) {\n     Optional<Catalog> catalog = loadCatalog(conf);\n \n+    Table table;\n     if (catalog.isPresent()) {\n       Preconditions.checkArgument(tableIdentifier != null, \"Table identifier not set\");\n-      return catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n+      table = catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n+    } else {\n+      Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n+      table = new HadoopTables(conf).load(tableLocation);\n     }\n \n-    Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n-    return new HadoopTables(conf).load(tableLocation);\n+    LOG.info(\"Table loaded by catalog: [{}]\", table);", "originalCommit": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI4NzE0NA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479287144", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T13:25:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDk5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "b1a48b8813c1072ad67061796b1511f698efe151", "chunk": "diff --git a/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java b/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\nindex 26eaa27c8..7ab6d1def 100644\n--- a/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\n+++ b/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\n\n@@ -68,17 +68,14 @@ public final class Catalogs {\n   private static Table loadTable(Configuration conf, String tableIdentifier, String tableLocation) {\n     Optional<Catalog> catalog = loadCatalog(conf);\n \n-    Table table;\n     if (catalog.isPresent()) {\n       Preconditions.checkArgument(tableIdentifier != null, \"Table identifier not set\");\n-      table = catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n+      return catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n     } else {\n       Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n-      table = new HadoopTables(conf).load(tableLocation);\n+      return new HadoopTables(conf).load(tableLocation);\n     }\n \n-    LOG.info(\"Table loaded by catalog: [{}]\", table);\n-    return table;\n   }\n \n   @VisibleForTesting\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MTUzMA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478761530", "bodyText": "I think it would be better to give more specific information:\nLOG.info(\"Loaded catalog {} using {}\", catalog, catalogLoaderClass);", "author": "rdblue", "createdAt": "2020-08-28T00:11:01Z", "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -83,28 +90,33 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n               .impl(catalogLoaderClass)\n               .build()\n               .newInstance();\n-      return Optional.of(loader.load(conf));\n+      Catalog catalog = loader.load(conf);\n+      LOG.info(\"Dynamic catalog is used: [{}]\", catalog);", "originalCommit": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI4Nzk3OQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479287979", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T13:26:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MTUzMA=="}], "type": "inlineReview", "revised_code": {"commit": "b1a48b8813c1072ad67061796b1511f698efe151", "chunk": "diff --git a/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java b/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\nindex 26eaa27c8..7ab6d1def 100644\n--- a/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\n+++ b/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\n\n@@ -91,7 +88,7 @@ public final class Catalogs {\n               .build()\n               .newInstance();\n       Catalog catalog = loader.load(conf);\n-      LOG.info(\"Dynamic catalog is used: [{}]\", catalog);\n+      LOG.info(\"Loaded catalog {} using {}\", catalog, catalogLoaderClass);\n       return Optional.of(catalog);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MTk3Mg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478761972", "bodyText": "Aren't there already logs for this from the underlying file system implementation?", "author": "rdblue", "createdAt": "2020-08-28T00:12:48Z", "path": "mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java", "diffHunk": "@@ -227,6 +227,7 @@ public void close() throws IOException {\n \n     private CloseableIterable<T> open(FileScanTask currentTask, Schema readSchema) {\n       DataFile file = currentTask.file();\n+      LOG.debug(\"Opening [{}] for read\", file);", "originalCommit": "9db3dd5fba5b95ce95b2076f6ae291c25b364109", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI5NTkyOQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479295929", "bodyText": "You are right. Removed.", "author": "pvary", "createdAt": "2020-08-28T13:35:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MTk3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b1a48b8813c1072ad67061796b1511f698efe151", "chunk": "diff --git a/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java b/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java\nindex fb7b1568a..ad49205ce 100644\n--- a/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java\n+++ b/mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java\n\n@@ -227,7 +227,6 @@ public class IcebergInputFormat<T> extends InputFormat<Void, T> {\n \n     private CloseableIterable<T> open(FileScanTask currentTask, Schema readSchema) {\n       DataFile file = currentTask.file();\n-      LOG.debug(\"Opening [{}] for read\", file);\n       // TODO we should make use of FileIO to create inputFile\n       InputFile inputFile = HadoopInputFile.fromLocation(file.path(), context.getConfiguration());\n       CloseableIterable<T> iterable;\n"}}, {"oid": "b1a48b8813c1072ad67061796b1511f698efe151", "url": "https://github.com/apache/iceberg/commit/b1a48b8813c1072ad67061796b1511f698efe151", "message": "Addressed Ryan's comments", "committedDate": "2020-08-28T13:43:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxNjA4NQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479416085", "bodyText": "We are trying to avoid adding more Guava classes. Could you use System.currentTimeMilis() instead?", "author": "rdblue", "createdAt": "2020-08-28T16:37:53Z", "path": "bundled-guava/src/main/java/org/apache/iceberg/GuavaClasses.java", "diffHunk": "@@ -81,6 +82,7 @@\n     Multimaps.class.getName();\n     Ordering.class.getName();\n     Sets.class.getName();\n+    Stopwatch.class.getName();", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5MDQzNQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479490435", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T19:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxNjA4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/bundled-guava/src/main/java/org/apache/iceberg/GuavaClasses.java b/bundled-guava/src/main/java/org/apache/iceberg/GuavaClasses.java\nindex b7222835d..107e420b2 100644\n--- a/bundled-guava/src/main/java/org/apache/iceberg/GuavaClasses.java\n+++ b/bundled-guava/src/main/java/org/apache/iceberg/GuavaClasses.java\n\n@@ -82,7 +81,6 @@ public class GuavaClasses {\n     Multimaps.class.getName();\n     Ordering.class.getName();\n     Sets.class.getName();\n-    Stopwatch.class.getName();\n     Streams.class.getName();\n     Hasher.class.getName();\n     HashFunction.class.getName();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxNzk5MA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479417990", "bodyText": "This base class is extended by external projects, so I think we should avoid breaking changes like this one.\nI propose adding a tableName method with a base implementation that returns null. Hive can override the implementation to provide the table name (as could external implementations) and the log message can include the table name if it is non-null. Does that sound reasonable?", "author": "rdblue", "createdAt": "2020-08-28T16:41:37Z", "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -46,12 +48,18 @@\n \n   private static final String METADATA_FOLDER_NAME = \"metadata\";\n \n+  private String fullName;\n   private TableMetadata currentMetadata = null;\n   private String currentMetadataLocation = null;\n   private boolean shouldRefresh = true;\n   private int version = -1;\n \n-  protected BaseMetastoreTableOperations() {\n+  protected BaseMetastoreTableOperations(String fullName) {", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5MjAwMQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479492001", "bodyText": "Absolutely!\nDone", "author": "pvary", "createdAt": "2020-08-28T19:20:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxNzk5MA=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java b/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\nindex 6f2a23bfc..fe4d36100 100644\n--- a/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\n+++ b/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\n\n@@ -48,18 +46,16 @@ public abstract class BaseMetastoreTableOperations implements TableOperations {\n \n   private static final String METADATA_FOLDER_NAME = \"metadata\";\n \n-  private String fullName;\n   private TableMetadata currentMetadata = null;\n   private String currentMetadataLocation = null;\n   private boolean shouldRefresh = true;\n   private int version = -1;\n \n-  protected BaseMetastoreTableOperations(String fullName) {\n-    this.fullName = fullName;\n+  protected BaseMetastoreTableOperations() {\n   }\n \n   protected String fullName() {\n-    return fullName;\n+    return null;\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxOTM3NQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479419375", "bodyText": "I don't think we should change the signature of this method, since there are external implementations. This also highlights that there is not even a requirement to store metadata in a file (this could be implemented with a backing database). So we probably shouldn't log the metadata location from this class.", "author": "rdblue", "createdAt": "2020-08-28T16:44:21Z", "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -101,12 +109,25 @@ public void commit(TableMetadata base, TableMetadata metadata) {\n       return;\n     }\n \n-    doCommit(base, metadata);\n+    Stopwatch stopwatch = Stopwatch.createStarted();\n+    String newMetadataLocation = doCommit(base, metadata);\n     deleteRemovedMetadataFiles(base, metadata);\n     requestRefresh();\n+    stopwatch.stop();\n+\n+    LOG.info(\"Successfully committed to table: {} in: {} ms: {}\",\n+        fullName,\n+        newMetadataLocation,\n+        stopwatch.elapsed(TimeUnit.MILLISECONDS));\n   }\n \n-  protected void doCommit(TableMetadata base, TableMetadata metadata) {\n+  /**\n+   * Executes the commit in the Metastore\n+   * @param base The base table metadata\n+   * @param metadata The new table metadata\n+   * @return The new metadata location\n+   */\n+  protected String doCommit(TableMetadata base, TableMetadata metadata) {", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5MjQxMA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479492410", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T19:21:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxOTM3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java b/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\nindex 6f2a23bfc..fe4d36100 100644\n--- a/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\n+++ b/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\n\n@@ -109,25 +105,17 @@ public abstract class BaseMetastoreTableOperations implements TableOperations {\n       return;\n     }\n \n-    Stopwatch stopwatch = Stopwatch.createStarted();\n-    String newMetadataLocation = doCommit(base, metadata);\n+    long start = System.currentTimeMillis();\n+    doCommit(base, metadata);\n     deleteRemovedMetadataFiles(base, metadata);\n     requestRefresh();\n-    stopwatch.stop();\n \n-    LOG.info(\"Successfully committed to table: {} in: {} ms: {}\",\n-        fullName,\n-        newMetadataLocation,\n-        stopwatch.elapsed(TimeUnit.MILLISECONDS));\n+    LOG.info(\"Successfully committed to table {} in {} ms\",\n+        fullName(),\n+        System.currentTimeMillis() - start);\n   }\n \n-  /**\n-   * Executes the commit in the Metastore\n-   * @param base The base table metadata\n-   * @param metadata The new table metadata\n-   * @return The new metadata location\n-   */\n-  protected String doCommit(TableMetadata base, TableMetadata metadata) {\n+  protected void doCommit(TableMetadata base, TableMetadata metadata) {\n     throw new UnsupportedOperationException(\"Not implemented: doCommit\");\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxOTYzNA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479419634", "bodyText": "I don't think we need so many colons. How about Successfully committed to table {} in {} ms?", "author": "rdblue", "createdAt": "2020-08-28T16:44:53Z", "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -101,12 +109,25 @@ public void commit(TableMetadata base, TableMetadata metadata) {\n       return;\n     }\n \n-    doCommit(base, metadata);\n+    Stopwatch stopwatch = Stopwatch.createStarted();\n+    String newMetadataLocation = doCommit(base, metadata);\n     deleteRemovedMetadataFiles(base, metadata);\n     requestRefresh();\n+    stopwatch.stop();\n+\n+    LOG.info(\"Successfully committed to table: {} in: {} ms: {}\",", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5MjU5OA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479492598", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T19:21:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxOTYzNA=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java b/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\nindex 6f2a23bfc..fe4d36100 100644\n--- a/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\n+++ b/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\n\n@@ -109,25 +105,17 @@ public abstract class BaseMetastoreTableOperations implements TableOperations {\n       return;\n     }\n \n-    Stopwatch stopwatch = Stopwatch.createStarted();\n-    String newMetadataLocation = doCommit(base, metadata);\n+    long start = System.currentTimeMillis();\n+    doCommit(base, metadata);\n     deleteRemovedMetadataFiles(base, metadata);\n     requestRefresh();\n-    stopwatch.stop();\n \n-    LOG.info(\"Successfully committed to table: {} in: {} ms: {}\",\n-        fullName,\n-        newMetadataLocation,\n-        stopwatch.elapsed(TimeUnit.MILLISECONDS));\n+    LOG.info(\"Successfully committed to table {} in {} ms\",\n+        fullName(),\n+        System.currentTimeMillis() - start);\n   }\n \n-  /**\n-   * Executes the commit in the Metastore\n-   * @param base The base table metadata\n-   * @param metadata The new table metadata\n-   * @return The new metadata location\n-   */\n-  protected String doCommit(TableMetadata base, TableMetadata metadata) {\n+  protected void doCommit(TableMetadata base, TableMetadata metadata) {\n     throw new UnsupportedOperationException(\"Not implemented: doCommit\");\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDM0Mg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479420342", "bodyText": "I think this is misleading. What we want to know is whether a cached version of the table was used or whether the catalog loaded the table. The catalog should log when it loads a table, so this just needs to log when there was a cache hit.", "author": "rdblue", "createdAt": "2020-08-28T16:46:14Z", "path": "core/src/main/java/org/apache/iceberg/CachingCatalog.java", "diffHunk": "@@ -63,7 +66,10 @@ private TableIdentifier canonicalizeIdentifier(TableIdentifier tableIdentifier)\n \n   @Override\n   public Table loadTable(TableIdentifier ident) {\n-    return tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n+    Table result = tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n+    LOG.info(\"Table loaded by catalog: {}\", result);", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5NDk3MQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479494971", "bodyText": "I was thinking around the same lines, but I did not find a way to differentiate between the cache hit, and the cache miss.\nShall we just remove the log, or you have some idea how to check for cache hit?\nRemoved the log for the time being.", "author": "pvary", "createdAt": "2020-08-28T19:27:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDM0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwOTQwOA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479509408", "bodyText": "Well, a cache hit could just be the absence of a log message. But you could also inject an atomic boolean in the load table call that is passed to the cache. If it gets called, it sets the boolean to true. Then the log only triggers if it was not called.", "author": "rdblue", "createdAt": "2020-08-28T20:01:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDM0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwNjEyOQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479606129", "bodyText": "Ok, then cache hit will be marked by the absence of the log message.", "author": "pvary", "createdAt": "2020-08-29T04:30:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDM0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/CachingCatalog.java b/core/src/main/java/org/apache/iceberg/CachingCatalog.java\nindex 8be03b110..b3ab1faae 100644\n--- a/core/src/main/java/org/apache/iceberg/CachingCatalog.java\n+++ b/core/src/main/java/org/apache/iceberg/CachingCatalog.java\n\n@@ -66,10 +63,7 @@ public class CachingCatalog implements Catalog {\n \n   @Override\n   public Table loadTable(TableIdentifier ident) {\n-    Table result = tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n-    LOG.info(\"Table loaded by catalog: {}\", result);\n-\n-    return result;\n+    return tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDc4OQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479420789", "bodyText": "HadoopTables is logging this message, so there is no need to add it here. Also, can we log the location instead of the table instance?", "author": "rdblue", "createdAt": "2020-08-28T16:47:07Z", "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java", "diffHunk": "@@ -71,20 +74,24 @@ public HadoopTables(Configuration conf) {\n    */\n   @Override\n   public Table load(String location) {\n+    Table result;\n     Pair<String, MetadataTableType> parsedMetadataType = parseMetadataType(location);\n \n     if (parsedMetadataType != null) {\n       // Load a metadata table\n-      return loadMetadataTable(parsedMetadataType.first(), parsedMetadataType.second());\n+      result = loadMetadataTable(parsedMetadataType.first(), parsedMetadataType.second());\n     } else {\n       // Load a normal table\n       TableOperations ops = newTableOps(location);\n       if (ops.current() != null) {\n-        return new BaseTable(ops, location);\n+        result = new BaseTable(ops, location);\n       } else {\n         throw new NoSuchTableException(\"Table does not exist at location: \" + location);\n       }\n     }\n+\n+    LOG.info(\"Table loaded by HadoopTables: {}\", result);", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5NTQ3Nw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479495477", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T19:28:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDc4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java b/core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java\nindex 2f5a3c950..1e5d6e447 100644\n--- a/core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java\n+++ b/core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java\n\n@@ -90,7 +90,7 @@ public class HadoopTables implements Tables, Configurable {\n       }\n     }\n \n-    LOG.info(\"Table loaded by HadoopTables: {}\", result);\n+    LOG.info(\"Table location loaded: {}\", result.location());\n     return result;\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMTcyMQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479421721", "bodyText": "Let's clean up the message a bit: \"Listing namespace {} returned tables: {}\"", "author": "rdblue", "createdAt": "2020-08-28T16:49:03Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -89,10 +91,13 @@ public HiveCatalog(String name, String uri, int clientPoolSize, Configuration co\n \n     try {\n       List<String> tables = clients.run(client -> client.getAllTables(database));\n-      return tables.stream()\n+      List<TableIdentifier> tableIdentifiers = tables.stream()\n           .map(t -> TableIdentifier.of(namespace, t))\n           .collect(Collectors.toList());\n \n+      LOG.debug(\"Listing of namespace: {} resulted in the following tables: {}\", namespace, tableIdentifiers);", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5NTczOQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479495739", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T19:29:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMTcyMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMjMxMw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479422313", "bodyText": "Should this be info?\nI doubt that this is much help if you have to turn debug on and re-run because whether the table exists is external and modified by this method.", "author": "rdblue", "createdAt": "2020-08-28T16:50:12Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -138,9 +143,11 @@ public boolean dropTable(TableIdentifier identifier, boolean purge) {\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n+      LOG.info(\"Dropped table: {}\", identifier);\n       return true;\n \n     } catch (NoSuchTableException | NoSuchObjectException e) {\n+      LOG.debug(\"Skipping drop, table does not exist: {}\", identifier, e);", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5NTkxNw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479495917", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T19:29:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMjMxMw=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 71d27a0f8..31c7cf929 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -147,7 +147,7 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n       return true;\n \n     } catch (NoSuchTableException | NoSuchObjectException e) {\n-      LOG.debug(\"Skipping drop, table does not exist: {}\", identifier, e);\n+      LOG.info(\"Skipping drop, table does not exist: {}\", identifier, e);\n       return false;\n \n     } catch (TException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMjQxNQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479422415", "bodyText": "No need for colons after from and to.", "author": "rdblue", "createdAt": "2020-08-28T16:50:27Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -177,6 +184,8 @@ public void renameTable(TableIdentifier from, TableIdentifier originalTo) {\n         return null;\n       });\n \n+      LOG.info(\"Renamed table from: {}, to: {}\", from, to);", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5NjA0MQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479496041", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T19:30:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMjQxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 71d27a0f8..31c7cf929 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -184,7 +184,7 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n         return null;\n       });\n \n-      LOG.info(\"Renamed table from: {}, to: {}\", from, to);\n+      LOG.info(\"Renamed table from {}, to {}\", from, to);\n \n     } catch (NoSuchObjectException e) {\n       throw new NoSuchTableException(\"Table does not exist: %s\", from);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzU1Ng==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479423556", "bodyText": "I'm really skeptical that this is a good idea. Properties can contain sensitive information that we don't want to leak into logs. If the operation succeeds, we can get the properties directly from the table. If it fails, we will get an exception and the properties that were attempted aren't very important (the user should also be able to tell us what they were).", "author": "rdblue", "createdAt": "2020-08-28T16:52:39Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -285,7 +300,15 @@ public boolean setProperties(Namespace namespace,  Map<String, String> propertie\n     parameter.putAll(properties);\n     Database database = convertToDatabase(namespace, parameter);\n \n-    return alterHiveDataBase(namespace, database);\n+    boolean result = alterHiveDataBase(namespace, database);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Set properties for: {} to: {} resulted: {}\",\n+          namespace,\n+          Joiner.on(\",\").withKeyValueSeparator(\"=\").join(properties),\n+          result);", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5Nzc3NA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479497774", "bodyText": "Good point!\nRemoved the printing of the parameters.", "author": "pvary", "createdAt": "2020-08-28T19:34:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzU1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 71d27a0f8..31c7cf929 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -301,11 +301,13 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n     Database database = convertToDatabase(namespace, parameter);\n \n     boolean result = alterHiveDataBase(namespace, database);\n+\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Set properties for: {} to: {} resulted: {}\",\n-          namespace,\n-          Joiner.on(\",\").withKeyValueSeparator(\"=\").join(properties),\n-          result);\n+      if (result) {\n+        LOG.debug(\"Successfully set properties for {}\", namespace);\n+      } else {\n+        LOG.debug(\"Failed to set properties for {}\", namespace);\n+      }\n     }\n \n     return result;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzczMg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479423732", "bodyText": "Same here. I'd rather not add debug logs for properties.", "author": "rdblue", "createdAt": "2020-08-28T16:53:01Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -296,7 +319,10 @@ public boolean removeProperties(Namespace namespace,  Set<String> properties) {\n     properties.forEach(key -> parameter.put(key, null));\n     Database database = convertToDatabase(namespace, parameter);\n \n-    return alterHiveDataBase(namespace, database);\n+    boolean result = alterHiveDataBase(namespace, database);\n+    LOG.debug(\"Remove properties: {} from: {} resulted: {}\", properties, namespace, result);", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5ODQ0Mw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479498443", "bodyText": "We do not log the actual values, just the properties we are removing.\nCould it also contain sensitive information?\nIf not I would keep the log message, so we can be able to trace things in case of trouble", "author": "pvary", "createdAt": "2020-08-28T19:35:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzczMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwODk2OA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479508968", "bodyText": "If not logging the properties, then what is the value of this log? If the query fails, it will throw an exception so the only time this will run is when the result is true. That doesn't seem useful to me, considering this is called from an operation that probably logs itself, like updateProperties.", "author": "rdblue", "createdAt": "2020-08-28T20:00:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzczMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwNzcxNA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479607714", "bodyText": "Removed the alterHiveDataBase method return value, since it is a private function and as you correctly pointed out never returns false.\nTried to find the usages of the HiveCatalog.setProperties/removeProperties method, and followed the call stack a few steps, but did not find any logs around that. (I might missed something)", "author": "pvary", "createdAt": "2020-08-29T04:52:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzczMg=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 71d27a0f8..31c7cf929 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -320,7 +322,13 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n     Database database = convertToDatabase(namespace, parameter);\n \n     boolean result = alterHiveDataBase(namespace, database);\n-    LOG.debug(\"Remove properties: {} from: {} resulted: {}\", properties, namespace, result);\n+    if (LOG.isDebugEnabled()) {\n+      if (result) {\n+        LOG.debug(\"Successfully remove properties {} from {}\", properties, namespace);\n+      } else {\n+        LOG.debug(\"Failed to remove properties for {}\", properties, namespace);\n+      }\n+    }\n \n     return result;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDEwMw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479424103", "bodyText": "Same here. We should not be logging potentially sensitive properties.", "author": "rdblue", "createdAt": "2020-08-28T16:53:45Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -329,7 +355,13 @@ private boolean alterHiveDataBase(Namespace namespace,  Database database) {\n \n     try {\n       Database database = clients.run(client -> client.getDatabase(namespace.level(0)));\n-      return convertToMetadata(database);\n+      Map<String, String> metadata = convertToMetadata(database);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"For namespace: {} loaded metadata: {}\",\n+            namespace,\n+            Joiner.on(\",\").withKeyValueSeparator(\"=\").join(metadata));\n+      }", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5ODkwMg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479498902", "bodyText": "Removed", "author": "pvary", "createdAt": "2020-08-28T19:36:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDEwMw=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex 71d27a0f8..31c7cf929 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -356,11 +364,7 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n     try {\n       Database database = clients.run(client -> client.getDatabase(namespace.level(0)));\n       Map<String, String> metadata = convertToMetadata(database);\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"For namespace: {} loaded metadata: {}\",\n-            namespace,\n-            Joiner.on(\",\").withKeyValueSeparator(\"=\").join(metadata));\n-      }\n+      LOG.debug(\"Loaded metadata for namespace {}\", namespace);\n       return metadata;\n \n     } catch (NoSuchObjectException | UnknownDBException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDQxOQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479424419", "bodyText": "Looks like this change is not needed. Could you roll it back?", "author": "rdblue", "createdAt": "2020-08-28T16:54:25Z", "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -68,10 +71,11 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n     if (catalog.isPresent()) {\n       Preconditions.checkArgument(tableIdentifier != null, \"Table identifier not set\");\n       return catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n+    } else {\n+      Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n+      return new HadoopTables(conf).load(tableLocation);", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5OTQxNg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479499416", "bodyText": "I missed this one. Sorry :(\nReverted", "author": "pvary", "createdAt": "2020-08-28T19:38:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDQxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java b/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\nindex 7ab6d1def..6dd9648a4 100644\n--- a/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\n+++ b/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\n\n@@ -71,11 +71,10 @@ public final class Catalogs {\n     if (catalog.isPresent()) {\n       Preconditions.checkArgument(tableIdentifier != null, \"Table identifier not set\");\n       return catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n-    } else {\n-      Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n-      return new HadoopTables(conf).load(tableLocation);\n     }\n \n+    Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n+    return new HadoopTables(conf).load(tableLocation);\n   }\n \n   @VisibleForTesting\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNTIwNQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479425205", "bodyText": "How about logging a similar message in the HADOOP and HIVE cases instead of this?\nLOG.info(\"Loaded Hive Metastore catalog {}\", catalog);\n\nThat gives more information about the path the code took.", "author": "rdblue", "createdAt": "2020-08-28T16:55:51Z", "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -83,28 +87,33 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n               .impl(catalogLoaderClass)\n               .build()\n               .newInstance();\n-      return Optional.of(loader.load(conf));\n+      Catalog catalog = loader.load(conf);\n+      LOG.info(\"Loaded catalog {} using {}\", catalog, catalogLoaderClass);\n+      return Optional.of(catalog);\n     }\n \n     String catalogName = conf.get(InputFormatConfig.CATALOG);\n \n     if (catalogName != null) {\n+      Catalog catalog;\n       switch (catalogName.toLowerCase()) {\n         case HADOOP:\n           String warehouseLocation = conf.get(InputFormatConfig.HADOOP_CATALOG_WAREHOUSE_LOCATION);\n \n-          if (warehouseLocation != null) {\n-            return Optional.of(new HadoopCatalog(conf, warehouseLocation));\n-          }\n-\n-          return Optional.of(new HadoopCatalog(conf));\n+          catalog = (warehouseLocation != null) ? new HadoopCatalog(conf, warehouseLocation) : new HadoopCatalog(conf);\n+          break;\n         case HIVE:\n-          return Optional.of(HiveCatalogs.loadCatalog(conf));\n+          catalog = HiveCatalogs.loadCatalog(conf);\n+          break;\n         default:\n           throw new NoSuchNamespaceException(\"Catalog \" + catalogName + \" is not supported.\");\n       }\n+\n+      LOG.info(\"Catalog is used: {}\", catalog);", "originalCommit": "b1a48b8813c1072ad67061796b1511f698efe151", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMDgxMg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479500812", "bodyText": "Done", "author": "pvary", "createdAt": "2020-08-28T19:41:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNTIwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "a4dfb424e404408754f685215452c47eb89c749d", "chunk": "diff --git a/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java b/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\nindex 7ab6d1def..6dd9648a4 100644\n--- a/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\n+++ b/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\n\n@@ -101,16 +100,15 @@ public final class Catalogs {\n           String warehouseLocation = conf.get(InputFormatConfig.HADOOP_CATALOG_WAREHOUSE_LOCATION);\n \n           catalog = (warehouseLocation != null) ? new HadoopCatalog(conf, warehouseLocation) : new HadoopCatalog(conf);\n-          break;\n+          LOG.info(\"Loaded Hadoop catalog {}\", catalog);\n+          return Optional.of(catalog);\n         case HIVE:\n           catalog = HiveCatalogs.loadCatalog(conf);\n-          break;\n+          LOG.info(\"Loaded Hive Metastore catalog {}\", catalog);\n+          return Optional.of(catalog);\n         default:\n           throw new NoSuchNamespaceException(\"Catalog \" + catalogName + \" is not supported.\");\n       }\n-\n-      LOG.info(\"Catalog is used: {}\", catalog);\n-      return Optional.of(catalog);\n     }\n \n     LOG.info(\"No catalog is used\");\n"}}, {"oid": "a4dfb424e404408754f685215452c47eb89c749d", "url": "https://github.com/apache/iceberg/commit/a4dfb424e404408754f685215452c47eb89c749d", "message": "Reverting the API changes, and changing some more log messages", "committedDate": "2020-08-28T19:47:27Z", "type": "commit"}, {"oid": "89ebfe17a8a29f8878ff61214093731e22df43ed", "url": "https://github.com/apache/iceberg/commit/89ebfe17a8a29f8878ff61214093731e22df43ed", "message": "alterDatabase always returns true, so removed the return value", "committedDate": "2020-08-29T04:39:14Z", "type": "commit"}, {"oid": "b73970d0661c70c832bdf4dc50bb7c993c66b995", "url": "https://github.com/apache/iceberg/commit/b73970d0661c70c832bdf4dc50bb7c993c66b995", "message": "Only a single newline - I suspect flaky tests, but not sure", "committedDate": "2020-08-29T20:32:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY5NTM3Mg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479695372", "bodyText": "This log doesn't seem useful to me since it doesn't have any information other than the method reached this point. It should be clear from other places (e.g., the SQL statement that ran) what was called. And we know it is successful or else an error is logged.", "author": "rdblue", "createdAt": "2020-08-29T22:16:58Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -300,17 +300,11 @@ public boolean setProperties(Namespace namespace,  Map<String, String> propertie\n     parameter.putAll(properties);\n     Database database = convertToDatabase(namespace, parameter);\n \n-    boolean result = alterHiveDataBase(namespace, database);\n+    alterHiveDataBase(namespace, database);\n+    LOG.debug(\"Successfully set properties for {}\", namespace);", "originalCommit": "89ebfe17a8a29f8878ff61214093731e22df43ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcyODE3Mw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479728173", "bodyText": "First I removed the logs, but then thought better of it.\nAdded it back with the list of the name of the properties we decided to set.\nThis way we will at least know how the SparkCatalog.alterNamespace/FlinkCatalog.alterNamespace classified the properties, and which one was removed which one was set instead.\nDo you think it is worthwhile to log this way?\nI kinda feel that I have dragged on too much on your patience, so one last request and I will remove both log lines from the code.\nThanks again!\nPeter", "author": "pvary", "createdAt": "2020-08-30T06:23:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY5NTM3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MzcyMg==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r480483722", "bodyText": "This way we will at least know how the SparkCatalog.alterNamespace/FlinkCatalog.alterNamespace classified the properties, and which one was removed which one was set instead.\n\nI don't think I follow your logic here. All this says is that setProperties succeeded. But that's usually obvious from the job because the SQL that's running is ALTER TABLE ... SET TBLPROPERTIES or ALTER TABLE ... UNSET TBLPROPERTIES. So it seems to me that this is already clear from context.\n\nI kinda feel that I have dragged on too much on your patience, so one last request and I will remove both log lines from the code.\n\nDon't worry about it! I had a similar thought because I'm asking for so many logs to be removed or changed. Sounds like we're both happy to come to an agreement and improve logging, even if that takes a lot of discussion. Thanks for your patience here.", "author": "rdblue", "createdAt": "2020-09-01T00:08:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY5NTM3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkyNDAwNA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r480924004", "bodyText": "This way we will at least know how the SparkCatalog.alterNamespace/FlinkCatalog.alterNamespace classified the properties, and which one was removed which one was set instead.\n\nI don't think I follow your logic here. All this says is that setProperties succeeded. But that's usually obvious from the job because the SQL that's running is ALTER TABLE ... SET TBLPROPERTIES or ALTER TABLE ... UNSET TBLPROPERTIES. So it seems to me that this is already clear from context.\n\nI understand your concerns about logging where the only added info we have is that the code line is reached, and I agree that is rarely useful (I occasionally find them handy when debugging performance issues, but that is a rare case). This is why I have removed the logs in the first commit.\nAfter pushing the commit I checked again how the catalog calls are called.\nIn the fear of stating the obvious:\n\nSparkCatalog.alterNamespace/FlinkCatalog.alterNamespace gets an array of NamespaceChange and splits them to 2 lists updates/removals.\nUpdates ends in setProperties call, removals ends in a removeProperties call.\n\nThat is why I have added back and modified the setProperties logging, so it will log not only the call but also logs the properties.keySet() too. This way we could know which properties were removed, and which were updated in this call. I think this could be beneficial to have in debug level, unless this info is also available somewhere else in the logs.\n\n\nI kinda feel that I have dragged on too much on your patience, so one last request and I will remove both log lines from the code.\n\nDon't worry about it! I had a similar thought because I'm asking for so many logs to be removed or changed. Sounds like we're both happy to come to an agreement and improve logging, even if that takes a lot of discussion. Thanks for your patience here.\n\nGood to meet a likeminded person, and thanks for all the useful help here!", "author": "pvary", "createdAt": "2020-09-01T07:35:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY5NTM3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "86372a7d27d8eb5c39e4df8f2497667d90f740ff", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex a1e943263..3d195f6e9 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -301,7 +301,6 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n     Database database = convertToDatabase(namespace, parameter);\n \n     alterHiveDataBase(namespace, database);\n-    LOG.debug(\"Successfully set properties for {}\", namespace);\n \n     // Always successful, otherwise exception is thrown\n     return true;\n"}}, {"oid": "86372a7d27d8eb5c39e4df8f2497667d90f740ff", "url": "https://github.com/apache/iceberg/commit/86372a7d27d8eb5c39e4df8f2497667d90f740ff", "message": "Removed extra log line from setProperties/removeProperties", "committedDate": "2020-08-30T06:08:08Z", "type": "commit"}, {"oid": "8b823421e765e929db0f1cd8859ee77d974d65c7", "url": "https://github.com/apache/iceberg/commit/8b823421e765e929db0f1cd8859ee77d974d65c7", "message": "Added back the setProperties/removeProperties log with printing the property names in both cases", "committedDate": "2020-08-30T06:16:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzMjc5Nw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481232797", "bodyText": "Could we rename this to tableName so it is more clear for implementations? It would also be good to add Javadoc.", "author": "rdblue", "createdAt": "2020-09-01T15:30:20Z", "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -54,6 +54,10 @@\n   protected BaseMetastoreTableOperations() {\n   }\n \n+  protected String fullName() {", "originalCommit": "8b823421e765e929db0f1cd8859ee77d974d65c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1MTAzNQ==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481351035", "bodyText": "Renamed and added javadoc.\nCould you please check them?\nThanks, Peter", "author": "pvary", "createdAt": "2020-09-01T18:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzMjc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "01d4ed1eaea882b05c06c9482f89abecf4c86dda", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java b/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\nindex fe4d36100..017659ba6 100644\n--- a/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\n+++ b/core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java\n\n@@ -54,7 +54,12 @@ public abstract class BaseMetastoreTableOperations implements TableOperations {\n   protected BaseMetastoreTableOperations() {\n   }\n \n-  protected String fullName() {\n+  /**\n+   * The full name of the table used for logging purposes only. For example for HiveTableOperations it is\n+   * catalogName + \".\" + database + \".\" + table.\n+   * @return The full name\n+   */\n+  protected String tableName() {\n     return null;\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzMzYyNA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481233624", "bodyText": "Is this change needed? This is an instance variable so there should be no need to call the getter.", "author": "rdblue", "createdAt": "2020-09-01T15:31:37Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -111,7 +116,7 @@ protected void doRefresh() {\n     String metadataLocation = null;\n     try {\n       Table table = metaClients.run(client -> client.getTable(database, tableName));\n-      validateTableIsIceberg(table, fullName);\n+      validateTableIsIceberg(table, fullName());", "originalCommit": "8b823421e765e929db0f1cd8859ee77d974d65c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1MTEyOA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481351128", "bodyText": "Reverted", "author": "pvary", "createdAt": "2020-09-01T18:37:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzMzYyNA=="}], "type": "inlineReview", "revised_code": {"commit": "01d4ed1eaea882b05c06c9482f89abecf4c86dda", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java b/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java\nindex 503ff1cf4..0e87770ae 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java\n\n@@ -116,7 +116,7 @@ public class HiveTableOperations extends BaseMetastoreTableOperations {\n     String metadataLocation = null;\n     try {\n       Table table = metaClients.run(client -> client.getTable(database, tableName));\n-      validateTableIsIceberg(table, fullName());\n+      validateTableIsIceberg(table, fullName);\n \n       metadataLocation = table.getParameters().get(METADATA_LOCATION_PROP);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzNDA2NA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481234064", "bodyText": "How about Catalog is not configured instead?", "author": "rdblue", "createdAt": "2020-09-01T15:32:15Z", "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -83,28 +86,32 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n               .impl(catalogLoaderClass)\n               .build()\n               .newInstance();\n-      return Optional.of(loader.load(conf));\n+      Catalog catalog = loader.load(conf);\n+      LOG.info(\"Loaded catalog {} using {}\", catalog, catalogLoaderClass);\n+      return Optional.of(catalog);\n     }\n \n     String catalogName = conf.get(InputFormatConfig.CATALOG);\n \n     if (catalogName != null) {\n+      Catalog catalog;\n       switch (catalogName.toLowerCase()) {\n         case HADOOP:\n           String warehouseLocation = conf.get(InputFormatConfig.HADOOP_CATALOG_WAREHOUSE_LOCATION);\n \n-          if (warehouseLocation != null) {\n-            return Optional.of(new HadoopCatalog(conf, warehouseLocation));\n-          }\n-\n-          return Optional.of(new HadoopCatalog(conf));\n+          catalog = (warehouseLocation != null) ? new HadoopCatalog(conf, warehouseLocation) : new HadoopCatalog(conf);\n+          LOG.info(\"Loaded Hadoop catalog {}\", catalog);\n+          return Optional.of(catalog);\n         case HIVE:\n-          return Optional.of(HiveCatalogs.loadCatalog(conf));\n+          catalog = HiveCatalogs.loadCatalog(conf);\n+          LOG.info(\"Loaded Hive Metastore catalog {}\", catalog);\n+          return Optional.of(catalog);\n         default:\n           throw new NoSuchNamespaceException(\"Catalog \" + catalogName + \" is not supported.\");\n       }\n     }\n \n+    LOG.info(\"No catalog is used\");", "originalCommit": "8b823421e765e929db0f1cd8859ee77d974d65c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1MTI0Ng==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481351246", "bodyText": "Changed the text", "author": "pvary", "createdAt": "2020-09-01T18:37:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzNDA2NA=="}], "type": "inlineReview", "revised_code": {"commit": "01d4ed1eaea882b05c06c9482f89abecf4c86dda", "chunk": "diff --git a/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java b/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\nindex 6dd9648a4..62f17d1a5 100644\n--- a/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\n+++ b/mr/src/main/java/org/apache/iceberg/mr/Catalogs.java\n\n@@ -111,7 +111,7 @@ public final class Catalogs {\n       }\n     }\n \n-    LOG.info(\"No catalog is used\");\n+    LOG.info(\"Catalog is not configured\");\n     return Optional.empty();\n   }\n }\n"}}, {"oid": "01d4ed1eaea882b05c06c9482f89abecf4c86dda", "url": "https://github.com/apache/iceberg/commit/01d4ed1eaea882b05c06c9482f89abecf4c86dda", "message": "Reverted from the usage of fullName() in HiveTableOperations.java\nFixed comment text in Catalogs.java\nRenamed fullName() to tableName() and added javadoc", "committedDate": "2020-09-01T18:34:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NTI5Nw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481375297", "bodyText": "Sorry, but I didn't catch this before. This is logging a property map that could contain sensitive items. Could you log just the keys instead?", "author": "rdblue", "createdAt": "2020-09-01T19:17:26Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -329,7 +350,9 @@ private boolean alterHiveDataBase(Namespace namespace,  Database database) {\n \n     try {\n       Database database = clients.run(client -> client.getDatabase(namespace.level(0)));\n-      return convertToMetadata(database);\n+      Map<String, String> metadata = convertToMetadata(database);\n+      LOG.debug(\"Loaded metadata for namespace {}\", namespace);", "originalCommit": "01d4ed1eaea882b05c06c9482f89abecf4c86dda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3OTc4Ng==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481379786", "bodyText": "Thanks for the quick turn-around!", "author": "rdblue", "createdAt": "2020-09-01T19:26:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NTI5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4MDAzMw==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481380033", "bodyText": "I did not log the metadata loaded, as I should.\nAdded the log of the loaded metadata keys, like this:\nLoaded metadata for namespace dbname_load found [owner, location, comment, group]", "author": "pvary", "createdAt": "2020-09-01T19:26:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NTI5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4MDQwNA==", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481380404", "bodyText": "And feel free to ask changes if they are needed. Better now, than 1 year from now when some info is leaked!", "author": "pvary", "createdAt": "2020-09-01T19:27:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NTI5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "636e499ebbec3f619eb0f4fec32c82c7479e7352", "chunk": "diff --git a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\nindex e397b94d4..6c136a4d6 100644\n--- a/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n+++ b/hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java\n\n@@ -351,7 +351,7 @@ public class HiveCatalog extends BaseMetastoreCatalog implements Closeable, Supp\n     try {\n       Database database = clients.run(client -> client.getDatabase(namespace.level(0)));\n       Map<String, String> metadata = convertToMetadata(database);\n-      LOG.debug(\"Loaded metadata for namespace {}\", namespace);\n+      LOG.debug(\"Loaded metadata for namespace {} found {}\", namespace, metadata.keySet());\n       return metadata;\n \n     } catch (NoSuchObjectException | UnknownDBException e) {\n"}}, {"oid": "636e499ebbec3f619eb0f4fec32c82c7479e7352", "url": "https://github.com/apache/iceberg/commit/636e499ebbec3f619eb0f4fec32c82c7479e7352", "message": "Added logging the property keys too.", "committedDate": "2020-09-01T19:22:34Z", "type": "commit"}]}