{"pr_number": 1569, "pr_title": "API: add some validation when create bucket/truncate partition", "pr_createdAt": "2020-10-09T07:12:15Z", "pr_url": "https://github.com/apache/iceberg/pull/1569", "timeline": [{"oid": "403fa63fdb373aaed52d5d1db6a3e3a8d18a344c", "url": "https://github.com/apache/iceberg/commit/403fa63fdb373aaed52d5d1db6a3e3a8d18a344c", "message": "add some validation when create bucket/truncate partition", "committedDate": "2020-10-09T07:02:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ5MzQ0OA==", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502493448", "bodyText": "nits: Missing a space after the comma\nnumber of bucket(s)", "author": "RussellSpitzer", "createdAt": "2020-10-09T15:04:25Z", "path": "api/src/main/java/org/apache/iceberg/transforms/Bucket.java", "diffHunk": "@@ -44,6 +45,9 @@\n \n   @SuppressWarnings(\"unchecked\")\n   static <T> Bucket<T> get(Type type, int numBuckets) {\n+    Preconditions.checkArgument(numBuckets > 0,\n+        \"The number of bucket must larger than zero,but is %s\", numBuckets);", "originalCommit": "403fa63fdb373aaed52d5d1db6a3e3a8d18a344c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "871cdadfce6e834ce5c2bdfd365e4928c7568d12", "chunk": "diff --git a/api/src/main/java/org/apache/iceberg/transforms/Bucket.java b/api/src/main/java/org/apache/iceberg/transforms/Bucket.java\nindex fe8434972..b18770218 100644\n--- a/api/src/main/java/org/apache/iceberg/transforms/Bucket.java\n+++ b/api/src/main/java/org/apache/iceberg/transforms/Bucket.java\n\n@@ -46,7 +46,7 @@ abstract class Bucket<T> implements Transform<T, Integer> {\n   @SuppressWarnings(\"unchecked\")\n   static <T> Bucket<T> get(Type type, int numBuckets) {\n     Preconditions.checkArgument(numBuckets > 0,\n-        \"The number of bucket must larger than zero,but is %s\", numBuckets);\n+        \"The number of bucket(s) must be larger than zero, but is %s\", numBuckets);\n \n     switch (type.typeId()) {\n       case DATE:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ5Mzc0MA==", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502493740", "bodyText": "nit: Space after comma", "author": "RussellSpitzer", "createdAt": "2020-10-09T15:04:55Z", "path": "api/src/main/java/org/apache/iceberg/transforms/Truncate.java", "diffHunk": "@@ -30,12 +30,16 @@\n import org.apache.iceberg.expressions.Expressions;\n import org.apache.iceberg.expressions.UnboundPredicate;\n import org.apache.iceberg.relocated.com.google.common.base.Objects;\n+import org.apache.iceberg.relocated.com.google.common.base.Preconditions;\n import org.apache.iceberg.types.Type;\n import org.apache.iceberg.util.UnicodeUtil;\n \n abstract class Truncate<T> implements Transform<T, T> {\n   @SuppressWarnings(\"unchecked\")\n   static <T> Truncate<T> get(Type type, int width) {\n+    Preconditions.checkArgument(width > 0,\n+        \"The width of truncate must larger than zero,but is %s\", width);", "originalCommit": "403fa63fdb373aaed52d5d1db6a3e3a8d18a344c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "871cdadfce6e834ce5c2bdfd365e4928c7568d12", "chunk": "diff --git a/api/src/main/java/org/apache/iceberg/transforms/Truncate.java b/api/src/main/java/org/apache/iceberg/transforms/Truncate.java\nindex 27a57d443..36d383081 100644\n--- a/api/src/main/java/org/apache/iceberg/transforms/Truncate.java\n+++ b/api/src/main/java/org/apache/iceberg/transforms/Truncate.java\n\n@@ -38,7 +38,7 @@ abstract class Truncate<T> implements Transform<T, T> {\n   @SuppressWarnings(\"unchecked\")\n   static <T> Truncate<T> get(Type type, int width) {\n     Preconditions.checkArgument(width > 0,\n-        \"The width of truncate must larger than zero,but is %s\", width);\n+        \"The width of truncate must be larger than zero, but is %s\", width);\n \n     switch (type.typeId()) {\n       case INTEGER:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ5NDA2MQ==", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502494061", "bodyText": "bucket -> buckets , but here it matters less since it's just a test message", "author": "RussellSpitzer", "createdAt": "2020-10-09T15:05:27Z", "path": "api/src/test/java/org/apache/iceberg/transforms/TestBucketing.java", "diffHunk": "@@ -275,6 +276,14 @@ public void testUUIDHash() {\n         hashBytes(uuidBytes), bucketFunc.hash(uuid));\n   }\n \n+  @Test\n+  public void testVerifiedIllegalNumBucket() {\n+    AssertHelpers.assertThrows(\"Should fail if numBucket is less than or equal to zero\",\n+        IllegalArgumentException.class,\n+        \"The number of bucket must larger than zero\",", "originalCommit": "403fa63fdb373aaed52d5d1db6a3e3a8d18a344c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "871cdadfce6e834ce5c2bdfd365e4928c7568d12", "chunk": "diff --git a/api/src/test/java/org/apache/iceberg/transforms/TestBucketing.java b/api/src/test/java/org/apache/iceberg/transforms/TestBucketing.java\nindex fcd98341c..2fbff7019 100644\n--- a/api/src/test/java/org/apache/iceberg/transforms/TestBucketing.java\n+++ b/api/src/test/java/org/apache/iceberg/transforms/TestBucketing.java\n\n@@ -277,10 +277,10 @@ public class TestBucketing {\n   }\n \n   @Test\n-  public void testVerifiedIllegalNumBucket() {\n+  public void testVerifiedIllegalNumBuckets() {\n     AssertHelpers.assertThrows(\"Should fail if numBucket is less than or equal to zero\",\n         IllegalArgumentException.class,\n-        \"The number of bucket must larger than zero\",\n+        \"The number of bucket(s) must be larger than zero\",\n         () -> Bucket.get(Types.IntegerType.get(), 0));\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyNDM1Ng==", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502524356", "bodyText": "must larger -> must be larger, here and in other places with similar message", "author": "shardulm94", "createdAt": "2020-10-09T15:53:21Z", "path": "api/src/test/java/org/apache/iceberg/transforms/TestTruncate.java", "diffHunk": "@@ -86,4 +87,12 @@ public void testTruncateByteBuffer() throws Exception {\n         ByteBuffer.wrap(\"abc\".getBytes(\"UTF-8\")),\n         trunc.apply(ByteBuffer.wrap(\"abc\".getBytes(\"UTF-8\"))));\n   }\n+\n+  @Test\n+  public void testVerifiedIllegalWidth() {\n+    AssertHelpers.assertThrows(\"Should fail if width is less than or equal to zero\",\n+        IllegalArgumentException.class,\n+        \"The width of truncate must larger than zero\",", "originalCommit": "403fa63fdb373aaed52d5d1db6a3e3a8d18a344c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "871cdadfce6e834ce5c2bdfd365e4928c7568d12", "chunk": "diff --git a/api/src/test/java/org/apache/iceberg/transforms/TestTruncate.java b/api/src/test/java/org/apache/iceberg/transforms/TestTruncate.java\nindex f92117cf2..38067ea85 100644\n--- a/api/src/test/java/org/apache/iceberg/transforms/TestTruncate.java\n+++ b/api/src/test/java/org/apache/iceberg/transforms/TestTruncate.java\n\n@@ -92,7 +92,7 @@ public class TestTruncate {\n   public void testVerifiedIllegalWidth() {\n     AssertHelpers.assertThrows(\"Should fail if width is less than or equal to zero\",\n         IllegalArgumentException.class,\n-        \"The width of truncate must larger than zero\",\n+        \"The width of truncate must be larger than zero\",\n         () -> Truncate.get(Types.IntegerType.get(), 0));\n   }\n }\n"}}, {"oid": "871cdadfce6e834ce5c2bdfd365e4928c7568d12", "url": "https://github.com/apache/iceberg/commit/871cdadfce6e834ce5c2bdfd365e4928c7568d12", "message": "fix some comment", "committedDate": "2020-10-10T01:27:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDc1NQ==", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502830755", "bodyText": "How about \"Invalid truncate width: %s\"? We try to keep error messages a bit shorter and clearer, with the most useful information up front. In this case, the problem is that the truncate width is invalid. We can also add more clarification if you want, like \"Invalid truncate width: %s (must be > 0)\"", "author": "rdblue", "createdAt": "2020-10-10T20:48:04Z", "path": "api/src/main/java/org/apache/iceberg/transforms/Truncate.java", "diffHunk": "@@ -30,12 +30,16 @@\n import org.apache.iceberg.expressions.Expressions;\n import org.apache.iceberg.expressions.UnboundPredicate;\n import org.apache.iceberg.relocated.com.google.common.base.Objects;\n+import org.apache.iceberg.relocated.com.google.common.base.Preconditions;\n import org.apache.iceberg.types.Type;\n import org.apache.iceberg.util.UnicodeUtil;\n \n abstract class Truncate<T> implements Transform<T, T> {\n   @SuppressWarnings(\"unchecked\")\n   static <T> Truncate<T> get(Type type, int width) {\n+    Preconditions.checkArgument(width > 0,\n+        \"The width of truncate must be larger than zero, but is %s\", width);", "originalCommit": "871cdadfce6e834ce5c2bdfd365e4928c7568d12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkyNjc1MA==", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502926750", "bodyText": "Thank you for the succinct error message, It's great for me.", "author": "zhangdove", "createdAt": "2020-10-11T15:00:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDc1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "c57abf1ac09138e6652643f4487c763713c0a976", "chunk": "diff --git a/api/src/main/java/org/apache/iceberg/transforms/Truncate.java b/api/src/main/java/org/apache/iceberg/transforms/Truncate.java\nindex 36d383081..13ac63739 100644\n--- a/api/src/main/java/org/apache/iceberg/transforms/Truncate.java\n+++ b/api/src/main/java/org/apache/iceberg/transforms/Truncate.java\n\n@@ -38,7 +38,7 @@ abstract class Truncate<T> implements Transform<T, T> {\n   @SuppressWarnings(\"unchecked\")\n   static <T> Truncate<T> get(Type type, int width) {\n     Preconditions.checkArgument(width > 0,\n-        \"The width of truncate must be larger than zero, but is %s\", width);\n+        \"Invalid truncate width: %s (must be > 0)\", width);\n \n     switch (type.typeId()) {\n       case INTEGER:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDc5Ng==", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502830796", "bodyText": "Same here. What about \"Invalid number of buckets: %s (must be > 0)\"?", "author": "rdblue", "createdAt": "2020-10-10T20:48:38Z", "path": "api/src/main/java/org/apache/iceberg/transforms/Bucket.java", "diffHunk": "@@ -44,6 +45,9 @@\n \n   @SuppressWarnings(\"unchecked\")\n   static <T> Bucket<T> get(Type type, int numBuckets) {\n+    Preconditions.checkArgument(numBuckets > 0,\n+        \"The number of bucket(s) must be larger than zero, but is %s\", numBuckets);", "originalCommit": "871cdadfce6e834ce5c2bdfd365e4928c7568d12", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c57abf1ac09138e6652643f4487c763713c0a976", "chunk": "diff --git a/api/src/main/java/org/apache/iceberg/transforms/Bucket.java b/api/src/main/java/org/apache/iceberg/transforms/Bucket.java\nindex b18770218..44577278a 100644\n--- a/api/src/main/java/org/apache/iceberg/transforms/Bucket.java\n+++ b/api/src/main/java/org/apache/iceberg/transforms/Bucket.java\n\n@@ -46,7 +46,7 @@ abstract class Bucket<T> implements Transform<T, Integer> {\n   @SuppressWarnings(\"unchecked\")\n   static <T> Bucket<T> get(Type type, int numBuckets) {\n     Preconditions.checkArgument(numBuckets > 0,\n-        \"The number of bucket(s) must be larger than zero, but is %s\", numBuckets);\n+        \"Invalid number of buckets: %s (must be > 0)\", numBuckets);\n \n     switch (type.typeId()) {\n       case DATE:\n"}}, {"oid": "c57abf1ac09138e6652643f4487c763713c0a976", "url": "https://github.com/apache/iceberg/commit/c57abf1ac09138e6652643f4487c763713c0a976", "message": "Fix the more elegant error message", "committedDate": "2020-10-11T15:02:15Z", "type": "commit"}]}