{"pr_number": 1244, "pr_title": "Allow ExpireSnapshots to run without Deleting Files", "pr_createdAt": "2020-07-24T22:04:28Z", "pr_url": "https://github.com/apache/iceberg/pull/1244", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMjk0Mg==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r460322942", "bodyText": "It seems kind of counterintuitive to pass a deleteWith but still expect that the files won't be deleted?\nWhat about defining a default method instead which does nothing eg: doNothing, and make it available as a handy reference which people could use instead? So it would look something like table.expireSnapshots().deleteWith(doNothing)", "author": "moulimukherjee", "createdAt": "2020-07-24T23:02:29Z", "path": "core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java", "diffHunk": "@@ -472,6 +472,55 @@ public void dataFilesCleanup() throws IOException {\n     Assert.assertTrue(\"FILE_B should be deleted\", deletedFiles.contains(FILE_B.path().toString()));\n   }\n \n+  @Test\n+  public void noDataFileCleanup() throws IOException {\n+    table.newFastAppend()\n+        .appendFile(FILE_A)\n+        .commit();\n+\n+    table.newFastAppend()\n+        .appendFile(FILE_B)\n+        .commit();\n+\n+    table.newRewrite()\n+        .rewriteFiles(ImmutableSet.of(FILE_B), ImmutableSet.of(FILE_D))\n+        .commit();\n+    long thirdSnapshotId = table.currentSnapshot().snapshotId();\n+\n+    table.newRewrite()\n+        .rewriteFiles(ImmutableSet.of(FILE_A), ImmutableSet.of(FILE_C))\n+        .commit();\n+    long fourthSnapshotId = table.currentSnapshot().snapshotId();\n+\n+    long t4 = System.currentTimeMillis();\n+    while (t4 <= table.currentSnapshot().timestampMillis()) {\n+      t4 = System.currentTimeMillis();\n+    }\n+\n+    List<ManifestFile> manifests = table.currentSnapshot().dataManifests();\n+\n+    ManifestFile newManifest = writeManifest(\n+        \"manifest-file-1.avro\",\n+        manifestEntry(Status.EXISTING, thirdSnapshotId, FILE_C),\n+        manifestEntry(Status.EXISTING, fourthSnapshotId, FILE_D));\n+\n+    RewriteManifests rewriteManifests = table.rewriteManifests();\n+    manifests.forEach(rewriteManifests::deleteManifest);\n+    rewriteManifests.addManifest(newManifest);\n+    rewriteManifests.commit();\n+\n+    Set<String> deletedFiles = Sets.newHashSet();\n+\n+    table.expireSnapshots()\n+        .deleteExpiredFiles(false)\n+        .expireOlderThan(t4)\n+        .deleteWith(deletedFiles::add)", "originalCommit": "7af6a37446c054d8983aae5db91350dd9c70e56b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDUyMQ==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r460324521", "bodyText": "Oh, is it to prevent iteration through callback for each deleted file? Actually that makes sense. If so, please ignore ^.", "author": "moulimukherjee", "createdAt": "2020-07-24T23:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMjk0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNjY4OQ==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r460326689", "bodyText": "Yeah, this is how all the tests in this class function. They use the \"add\" to set delete action to see whether the delete action gets triggered and on what files.", "author": "RussellSpitzer", "createdAt": "2020-07-24T23:18:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMjk0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNzUyMg==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r460327522", "bodyText": "Ack. (To clarify, was not commenting on the test per se, I should have made it a general comment rather than on this particular line)", "author": "moulimukherjee", "createdAt": "2020-07-24T23:22:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMjk0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c76e3cb999606296e812b51ed2271a232f2ae3f3", "chunk": "diff --git a/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java b/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java\nindex b4cc573e1..4ec2d195a 100644\n--- a/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java\n+++ b/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java\n\n@@ -473,7 +476,7 @@ public class TestRemoveSnapshots extends TableTestBase {\n   }\n \n   @Test\n-  public void noDataFileCleanup() throws IOException {\n+  public void dataFilesCleanupWithParallelTasks() throws IOException {\n     table.newFastAppend()\n         .appendFile(FILE_A)\n         .commit();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAxODczMg==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r461018732", "bodyText": "Nit: No need for </p> in Javadoc.", "author": "rdblue", "createdAt": "2020-07-27T16:33:55Z", "path": "api/src/main/java/org/apache/iceberg/ExpireSnapshots.java", "diffHunk": "@@ -82,4 +82,16 @@\n    * @return this for method chaining\n    */\n   ExpireSnapshots deleteWith(Consumer<String> deleteFunc);\n+\n+  /**\n+   * Allows expiration of snapshots without any cleanup of underlying manifest or data files.\n+   * <p>\n+   * Allows control in removing data and manifest files which may be more efficiently removed using\n+   * a distributed framework through the actions API.\n+   * </p>", "originalCommit": "7af6a37446c054d8983aae5db91350dd9c70e56b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c76e3cb999606296e812b51ed2271a232f2ae3f3", "chunk": "diff --git a/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java b/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java\nindex 8ac18fc8f..95a38219b 100644\n--- a/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java\n+++ b/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java\n\n@@ -83,6 +84,20 @@ public interface ExpireSnapshots extends PendingUpdate<List<Snapshot>> {\n    */\n   ExpireSnapshots deleteWith(Consumer<String> deleteFunc);\n \n+  /**\n+   * Passes an alternative executor service that will be used for manifests and data files deletion.\n+   * <p>\n+   * Manifest files that are no longer used by valid snapshots will be deleted. Data files that were\n+   * deleted by snapshots that are expired will be deleted.\n+   * <p>\n+   * If this method is not called, unnecessary manifests and data files will still be deleted using a single threaded\n+   * executor service.\n+   *\n+   * @param executorService an executor service to parallelize tasks to delete manifests and data files\n+   * @return this for method chaining\n+   */\n+  ExpireSnapshots executeWith(ExecutorService executorService);\n+\n   /**\n    * Allows expiration of snapshots without any cleanup of underlying manifest or data files.\n    * <p>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAxOTI1OQ==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r461019259", "bodyText": "Should this be cleanExpiredFiles instead? I think that makes more sense because this actually avoids the work of finding the files that have expired, not calling delete for them. And that's what you call it elsewhere, so it makes sense to me.", "author": "rdblue", "createdAt": "2020-07-27T16:34:50Z", "path": "api/src/main/java/org/apache/iceberg/ExpireSnapshots.java", "diffHunk": "@@ -82,4 +82,16 @@\n    * @return this for method chaining\n    */\n   ExpireSnapshots deleteWith(Consumer<String> deleteFunc);\n+\n+  /**\n+   * Allows expiration of snapshots without any cleanup of underlying manifest or data files.\n+   * <p>\n+   * Allows control in removing data and manifest files which may be more efficiently removed using\n+   * a distributed framework through the actions API.\n+   * </p>\n+   *\n+   * @param clean setting this to false will skip deleting expired manifests and files\n+   * @return this for method chaining\n+   */\n+  ExpireSnapshots deleteExpiredFiles(boolean clean);", "originalCommit": "7af6a37446c054d8983aae5db91350dd9c70e56b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMzc5MQ==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r461023791", "bodyText": "sgtm", "author": "RussellSpitzer", "createdAt": "2020-07-27T16:42:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAxOTI1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c76e3cb999606296e812b51ed2271a232f2ae3f3", "chunk": "diff --git a/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java b/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java\nindex 8ac18fc8f..95a38219b 100644\n--- a/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java\n+++ b/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java\n\n@@ -83,6 +84,20 @@ public interface ExpireSnapshots extends PendingUpdate<List<Snapshot>> {\n    */\n   ExpireSnapshots deleteWith(Consumer<String> deleteFunc);\n \n+  /**\n+   * Passes an alternative executor service that will be used for manifests and data files deletion.\n+   * <p>\n+   * Manifest files that are no longer used by valid snapshots will be deleted. Data files that were\n+   * deleted by snapshots that are expired will be deleted.\n+   * <p>\n+   * If this method is not called, unnecessary manifests and data files will still be deleted using a single threaded\n+   * executor service.\n+   *\n+   * @param executorService an executor service to parallelize tasks to delete manifests and data files\n+   * @return this for method chaining\n+   */\n+  ExpireSnapshots executeWith(ExecutorService executorService);\n+\n   /**\n    * Allows expiration of snapshots without any cleanup of underlying manifest or data files.\n    * <p>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMTA3Nw==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r461021077", "bodyText": "Why rewrite manifests? It seems like the intent was to rewrite manifests so that the manifests from the third and fourth snapshots can be deleted, then to add assertions that the metadata files are also not cleaned.", "author": "rdblue", "createdAt": "2020-07-27T16:37:58Z", "path": "core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java", "diffHunk": "@@ -472,6 +472,55 @@ public void dataFilesCleanup() throws IOException {\n     Assert.assertTrue(\"FILE_B should be deleted\", deletedFiles.contains(FILE_B.path().toString()));\n   }\n \n+  @Test\n+  public void noDataFileCleanup() throws IOException {\n+    table.newFastAppend()\n+        .appendFile(FILE_A)\n+        .commit();\n+\n+    table.newFastAppend()\n+        .appendFile(FILE_B)\n+        .commit();\n+\n+    table.newRewrite()\n+        .rewriteFiles(ImmutableSet.of(FILE_B), ImmutableSet.of(FILE_D))\n+        .commit();\n+    long thirdSnapshotId = table.currentSnapshot().snapshotId();\n+\n+    table.newRewrite()\n+        .rewriteFiles(ImmutableSet.of(FILE_A), ImmutableSet.of(FILE_C))\n+        .commit();\n+    long fourthSnapshotId = table.currentSnapshot().snapshotId();\n+\n+    long t4 = System.currentTimeMillis();\n+    while (t4 <= table.currentSnapshot().timestampMillis()) {\n+      t4 = System.currentTimeMillis();\n+    }\n+\n+    List<ManifestFile> manifests = table.currentSnapshot().dataManifests();\n+\n+    ManifestFile newManifest = writeManifest(\n+        \"manifest-file-1.avro\",\n+        manifestEntry(Status.EXISTING, thirdSnapshotId, FILE_C),\n+        manifestEntry(Status.EXISTING, fourthSnapshotId, FILE_D));\n+\n+    RewriteManifests rewriteManifests = table.rewriteManifests();\n+    manifests.forEach(rewriteManifests::deleteManifest);\n+    rewriteManifests.addManifest(newManifest);\n+    rewriteManifests.commit();", "originalCommit": "7af6a37446c054d8983aae5db91350dd9c70e56b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMzU4Mw==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r461023583", "bodyText": "Ah I just copied the other test without actually reading through it :)", "author": "RussellSpitzer", "createdAt": "2020-07-27T16:41:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMTA3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c76e3cb999606296e812b51ed2271a232f2ae3f3", "chunk": "diff --git a/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java b/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java\nindex b4cc573e1..4ec2d195a 100644\n--- a/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java\n+++ b/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java\n\n@@ -473,7 +476,7 @@ public class TestRemoveSnapshots extends TableTestBase {\n   }\n \n   @Test\n-  public void noDataFileCleanup() throws IOException {\n+  public void dataFilesCleanupWithParallelTasks() throws IOException {\n     table.newFastAppend()\n         .appendFile(FILE_A)\n         .commit();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAyMTM3NQ==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r461021375", "bodyText": "It would be good to have an assertion for at least one of the manifests that isn't deleted as well.\nAlternatively, you could just assert that deletedFiles.isEmpty()", "author": "rdblue", "createdAt": "2020-07-27T16:38:31Z", "path": "core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java", "diffHunk": "@@ -472,6 +472,55 @@ public void dataFilesCleanup() throws IOException {\n     Assert.assertTrue(\"FILE_B should be deleted\", deletedFiles.contains(FILE_B.path().toString()));\n   }\n \n+  @Test\n+  public void noDataFileCleanup() throws IOException {\n+    table.newFastAppend()\n+        .appendFile(FILE_A)\n+        .commit();\n+\n+    table.newFastAppend()\n+        .appendFile(FILE_B)\n+        .commit();\n+\n+    table.newRewrite()\n+        .rewriteFiles(ImmutableSet.of(FILE_B), ImmutableSet.of(FILE_D))\n+        .commit();\n+    long thirdSnapshotId = table.currentSnapshot().snapshotId();\n+\n+    table.newRewrite()\n+        .rewriteFiles(ImmutableSet.of(FILE_A), ImmutableSet.of(FILE_C))\n+        .commit();\n+    long fourthSnapshotId = table.currentSnapshot().snapshotId();\n+\n+    long t4 = System.currentTimeMillis();\n+    while (t4 <= table.currentSnapshot().timestampMillis()) {\n+      t4 = System.currentTimeMillis();\n+    }\n+\n+    List<ManifestFile> manifests = table.currentSnapshot().dataManifests();\n+\n+    ManifestFile newManifest = writeManifest(\n+        \"manifest-file-1.avro\",\n+        manifestEntry(Status.EXISTING, thirdSnapshotId, FILE_C),\n+        manifestEntry(Status.EXISTING, fourthSnapshotId, FILE_D));\n+\n+    RewriteManifests rewriteManifests = table.rewriteManifests();\n+    manifests.forEach(rewriteManifests::deleteManifest);\n+    rewriteManifests.addManifest(newManifest);\n+    rewriteManifests.commit();\n+\n+    Set<String> deletedFiles = Sets.newHashSet();\n+\n+    table.expireSnapshots()\n+        .deleteExpiredFiles(false)\n+        .expireOlderThan(t4)\n+        .deleteWith(deletedFiles::add)\n+        .commit();\n+\n+    Assert.assertFalse(\"FILE_A should not be deleted\", deletedFiles.contains(FILE_A.path().toString()));\n+    Assert.assertFalse(\"FILE_B should not be deleted\", deletedFiles.contains(FILE_B.path().toString()));", "originalCommit": "7af6a37446c054d8983aae5db91350dd9c70e56b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c76e3cb999606296e812b51ed2271a232f2ae3f3", "chunk": "diff --git a/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java b/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java\nindex b4cc573e1..4ec2d195a 100644\n--- a/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java\n+++ b/core/src/test/java/org/apache/iceberg/TestRemoveSnapshots.java\n\n@@ -473,7 +476,7 @@ public class TestRemoveSnapshots extends TableTestBase {\n   }\n \n   @Test\n-  public void noDataFileCleanup() throws IOException {\n+  public void dataFilesCleanupWithParallelTasks() throws IOException {\n     table.newFastAppend()\n         .appendFile(FILE_A)\n         .commit();\n"}}, {"oid": "c76e3cb999606296e812b51ed2271a232f2ae3f3", "url": "https://github.com/apache/iceberg/commit/c76e3cb999606296e812b51ed2271a232f2ae3f3", "message": "Allow ExpireSnapshots to run without Deleting Files\n\nPreviously ExpireSnapshots would always follow the expiration of Snapshots\nwith a deletion of local DataFiles and Manifests which were no longer relevant\nto the Table. This patch introduces an API to skip this deletion phase, which\nwas always run locally, and instead just expire the snapshots. This allows for\nfuture implementations which can read and remove unused files in parallel or\non distributed frameworks.", "committedDate": "2020-07-28T15:42:43Z", "type": "commit"}, {"oid": "16db43aac5cc80a4991b9597f99638d8809b1dad", "url": "https://github.com/apache/iceberg/commit/16db43aac5cc80a4991b9597f99638d8809b1dad", "message": "Comments from Review", "committedDate": "2020-07-28T16:21:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyMTUyNw==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r461721527", "bodyText": "nit: is this added deliberately?", "author": "aokolnychyi", "createdAt": "2020-07-28T16:40:49Z", "path": "api/src/main/java/org/apache/iceberg/ExpireSnapshots.java", "diffHunk": "@@ -97,4 +97,16 @@\n    * @return this for method chaining\n    */\n   ExpireSnapshots executeWith(ExecutorService executorService);\n+\n+  /**\n+   * Allows expiration of snapshots without any cleanup of underlying manifest or data files.\n+   * <p>\n+   * Allows control in removing data and manifest files which may be more efficiently removed using\n+   * a distributed framework through the actions API.\n+   * <p>", "originalCommit": "16db43aac5cc80a4991b9597f99638d8809b1dad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyMzk4NQ==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r461723985", "bodyText": "What is this?", "author": "RussellSpitzer", "createdAt": "2020-07-28T16:44:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyMTUyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyNTUwMA==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r461725500", "bodyText": "I mean an extra <p> at the end.", "author": "aokolnychyi", "createdAt": "2020-07-28T16:47:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyMTUyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyOTk4MQ==", "url": "https://github.com/apache/iceberg/pull/1244#discussion_r461729981", "bodyText": "Ah I can remove that.", "author": "RussellSpitzer", "createdAt": "2020-07-28T16:54:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcyMTUyNw=="}], "type": "inlineReview", "revised_code": {"commit": "015bda72d3bab4da58f85227129acb7320c271eb", "chunk": "diff --git a/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java b/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java\nindex 2f2723cf9..1c835af81 100644\n--- a/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java\n+++ b/api/src/main/java/org/apache/iceberg/ExpireSnapshots.java\n\n@@ -103,7 +103,6 @@ public interface ExpireSnapshots extends PendingUpdate<List<Snapshot>> {\n    * <p>\n    * Allows control in removing data and manifest files which may be more efficiently removed using\n    * a distributed framework through the actions API.\n-   * <p>\n    *\n    * @param clean setting this to false will skip deleting expired manifests and files\n    * @return this for method chaining\n"}}, {"oid": "015bda72d3bab4da58f85227129acb7320c271eb", "url": "https://github.com/apache/iceberg/commit/015bda72d3bab4da58f85227129acb7320c271eb", "message": "Comments from Review", "committedDate": "2020-07-28T16:55:01Z", "type": "forcePushed"}, {"oid": "e533b4b94fb6e0fe411535ab4bef8751cb3586d3", "url": "https://github.com/apache/iceberg/commit/e533b4b94fb6e0fe411535ab4bef8751cb3586d3", "message": "Comments from Review", "committedDate": "2020-07-28T18:54:36Z", "type": "commit"}, {"oid": "e533b4b94fb6e0fe411535ab4bef8751cb3586d3", "url": "https://github.com/apache/iceberg/commit/e533b4b94fb6e0fe411535ab4bef8751cb3586d3", "message": "Comments from Review", "committedDate": "2020-07-28T18:54:36Z", "type": "forcePushed"}]}