{"pr_number": 924, "pr_title": "Add void transform that always produces null", "pr_createdAt": "2020-04-15T19:08:58Z", "pr_url": "https://github.com/apache/iceberg/pull/924", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NDQxMw==", "url": "https://github.com/apache/iceberg/pull/924#discussion_r409084413", "bodyText": "Minor nit here to think about . . . we seem to be using both void and null.  Would it make more sense to just consistently use void as it seems to better indicate there there is no expected value?", "author": "danielcweeks", "createdAt": "2020-04-15T19:32:22Z", "path": "api/src/main/java/org/apache/iceberg/transforms/VoidTransform.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.transforms;\n+\n+import java.io.ObjectStreamException;\n+import org.apache.iceberg.expressions.BoundPredicate;\n+import org.apache.iceberg.expressions.UnboundPredicate;\n+import org.apache.iceberg.types.Type;\n+\n+class VoidTransform<S> implements Transform<S, Void> {\n+  private static final VoidTransform<Object> INSTANCE = new VoidTransform<>();\n+\n+  @SuppressWarnings(\"unchecked\")\n+  static <T> VoidTransform<T> get() {\n+    return (VoidTransform<T>) INSTANCE;\n+  }\n+\n+  private VoidTransform() {\n+  }\n+\n+  @Override\n+  public Void apply(Object value) {\n+    return null;\n+  }\n+\n+  @Override\n+  public boolean canTransform(Type type) {\n+    return true;\n+  }\n+\n+  @Override\n+  public Type getResultType(Type sourceType) {\n+    return sourceType;\n+  }\n+\n+  @Override\n+  public UnboundPredicate<Void> projectStrict(String name, BoundPredicate<S> predicate) {\n+    return null;\n+  }\n+\n+  @Override\n+  public UnboundPredicate<Void> project(String name, BoundPredicate<S> predicate) {\n+    return null;\n+  }\n+\n+  @Override\n+  public String toHumanString(Void value) {\n+    return \"null\";\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"void\";\n+  }", "originalCommit": "659fcd43aa77f91e841e807b134d62a89ffdc437", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MzU4NA==", "url": "https://github.com/apache/iceberg/pull/924#discussion_r409093584", "bodyText": "Null is the human-readable string for the value produced by the transform. Void is the name of the transform. I considered naming it something like always_null but void seemed shorter and less error prone (was that alwaysNull or always-null?)", "author": "rdblue", "createdAt": "2020-04-15T19:49:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NDQxMw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "b758a87b1a40c25987ba9d11dd8402ae90bd213e", "url": "https://github.com/apache/iceberg/commit/b758a87b1a40c25987ba9d11dd8402ae90bd213e", "message": "Add void transform that always produces null.", "committedDate": "2020-04-15T20:16:06Z", "type": "commit"}, {"oid": "688a37f747c1742b146167d739a1cff54afe7e4a", "url": "https://github.com/apache/iceberg/commit/688a37f747c1742b146167d739a1cff54afe7e4a", "message": "Add tests for PartitionSpecParser.", "committedDate": "2020-04-15T20:21:54Z", "type": "commit"}, {"oid": "688a37f747c1742b146167d739a1cff54afe7e4a", "url": "https://github.com/apache/iceberg/commit/688a37f747c1742b146167d739a1cff54afe7e4a", "message": "Add tests for PartitionSpecParser.", "committedDate": "2020-04-15T20:21:54Z", "type": "forcePushed"}, {"oid": "e50f2180e0a5fed61e1ea71392be17d8807dde66", "url": "https://github.com/apache/iceberg/commit/e50f2180e0a5fed61e1ea71392be17d8807dde66", "message": "Suppress false positive checkstyle error.", "committedDate": "2020-04-15T22:04:55Z", "type": "commit"}]}