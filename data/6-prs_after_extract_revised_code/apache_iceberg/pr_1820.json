{"pr_number": 1820, "pr_title": "Core: update record_count behavior, include in manifest reader", "pr_createdAt": "2020-11-25T02:47:25Z", "pr_url": "https://github.com/apache/iceberg/pull/1820", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3ODYwNw==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r530578607", "bodyText": "Keeps record count or discards record count?\nI think it was an oversight to not include record count in stats. I think we should just have one list.", "author": "rdblue", "createdAt": "2020-11-25T18:44:17Z", "path": "core/src/main/java/org/apache/iceberg/ManifestReader.java", "diffHunk": "@@ -52,8 +54,13 @@\n public class ManifestReader<F extends ContentFile<F>>\n     extends CloseableGroup implements CloseableIterable<F> {\n   static final ImmutableList<String> ALL_COLUMNS = ImmutableList.of(\"*\");\n-  static final Set<String> STATS_COLUMNS = Sets.newHashSet(\n+\n+  // the difference between the two stats set below is to support ContentFile.copyWithoutStats(), which\n+  // still keeps record count.\n+  private static final Set<String> STATS_COLUMNS = Sets.newHashSet(", "originalCommit": "684459ca6e2757a247d495dda32f2feb2b37dc38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYwNzUxMw==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r530607513", "bodyText": "I think copyWithoutStats doesn't discard record count will discarding all column-specific stats.\nI do agree that having one list is simpler, the reason for me to do this is\n\nIf we add record_count to this list then it will result in a behavior change, that if people select record_count without other stats listed here, earlier they will not receive those stats, but now they will receive a full list. This is because dropStats relies on this list.\nAlternatively we can stop copying recordCount over within copyWithoutStats but I'm not entirely sure if we want to do that since currently the metrics that can be discarded are all map, and recordCount is long; and I guess if we no longer copy recordCount  we may as well not copy fileSizeInBytes which is another long. After this change since these two attributes return primitive type, they will return -1, which I'm not sure if it's the best thing to do.\n\nI think the first approach is safer, but I wasn't sure if it's worth changing the behavior to keep the code simpler. Do you have a recommendation?", "author": "yyanyy", "createdAt": "2020-11-25T19:46:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3ODYwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkyNDczNQ==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r536924735", "bodyText": "Can we special-case record_count? I don't think that record_count should be dropped in copyWithoutStats, but I also agree that simply selecting record_count should not select all stats columns.\nThis set is primarily for ensuring that all stats required to filter the instances of DataFile or DeleteFile stored in a manifest are present. I think we should limit it to that purpose. I don't think that this list should affect the behavior or copyWithoutStats.", "author": "rdblue", "createdAt": "2020-12-06T00:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3ODYwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc4NDEyMA==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r538784120", "bodyText": "Sounds good, I'll add record_count to the set so that the set tracks all stats required for filtering data/delete file, and special-case record_count in dropStats() to account for the case that selecting only record_count will still result in copyWithoutStats instead of a full copy. (This is actually the same as the current logic, just consolidate the two sets into one)", "author": "yyanyy", "createdAt": "2020-12-08T20:29:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3ODYwNw=="}], "type": "inlineReview", "revised_code": {"commit": "76d6056f78ba4021dfed59e03a0904c2d0047546", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/ManifestReader.java b/core/src/main/java/org/apache/iceberg/ManifestReader.java\nindex 75ea1272a..746e62d9f 100644\n--- a/core/src/main/java/org/apache/iceberg/ManifestReader.java\n+++ b/core/src/main/java/org/apache/iceberg/ManifestReader.java\n\n@@ -58,9 +56,7 @@ public class ManifestReader<F extends ContentFile<F>>\n   // the difference between the two stats set below is to support ContentFile.copyWithoutStats(), which\n   // still keeps record count.\n   private static final Set<String> STATS_COLUMNS = Sets.newHashSet(\n-      \"value_counts\", \"null_value_counts\", \"nan_value_counts\", \"lower_bounds\", \"upper_bounds\");\n-  private static final Set<String> FULL_STATS_COLUMNS =\n-      Stream.concat(STATS_COLUMNS.stream(), Stream.of(\"record_count\")).collect(Collectors.toSet());\n+      \"value_counts\", \"null_value_counts\", \"nan_value_counts\", \"lower_bounds\", \"upper_bounds\", \"record_count\");\n \n   protected enum FileType {\n     DATA_FILES(GenericDataFile.class.getName()),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3OTQ4Mw==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r530579483", "bodyText": "If this returned List, then we wouldn't need to copy the list in ManifestGroup", "author": "rdblue", "createdAt": "2020-11-25T18:45:59Z", "path": "core/src/main/java/org/apache/iceberg/ManifestReader.java", "diffHunk": "@@ -289,12 +296,12 @@ static boolean dropStats(Expression rowFilter, Collection<String> columns) {\n         Sets.intersection(Sets.newHashSet(columns), STATS_COLUMNS).isEmpty();\n   }\n \n-  private static Collection<String> withStatsColumns(Collection<String> columns) {\n+  static Collection<String> withStatsColumns(Collection<String> columns) {", "originalCommit": "684459ca6e2757a247d495dda32f2feb2b37dc38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYxMDM3NQ==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r530610375", "bodyText": "In one of the usage columns directly comes from the field column which is a collection so I didn't change that, but it seems that from all its current usage this field could be changed to a list. I'll need to update a few tests after this but I think it's doable. Will do!", "author": "yyanyy", "createdAt": "2020-11-25T19:52:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3OTQ4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "106d5db5e92f630762744a861faa8ee869d6cb67", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/ManifestReader.java b/core/src/main/java/org/apache/iceberg/ManifestReader.java\nindex 75ea1272a..3a151a97b 100644\n--- a/core/src/main/java/org/apache/iceberg/ManifestReader.java\n+++ b/core/src/main/java/org/apache/iceberg/ManifestReader.java\n\n@@ -296,7 +296,7 @@ public class ManifestReader<F extends ContentFile<F>>\n         Sets.intersection(Sets.newHashSet(columns), STATS_COLUMNS).isEmpty();\n   }\n \n-  static Collection<String> withStatsColumns(Collection<String> columns) {\n+  static List<String> withStatsColumns(List<String> columns) {\n     if (columns.containsAll(ManifestReader.ALL_COLUMNS)) {\n       return columns;\n     } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkyNDQwNA==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r536924404", "bodyText": "I don't think we should make this change. I like that the NullPointerException ensures that an incorrect record count just can't be used.", "author": "rdblue", "createdAt": "2020-12-06T00:53:00Z", "path": "core/src/main/java/org/apache/iceberg/BaseFile.java", "diffHunk": "@@ -60,7 +60,7 @@ public PartitionData copy() {\n   private String filePath = null;\n   private FileFormat format = null;\n   private PartitionData partitionData = null;\n-  private Long recordCount = null;\n+  private long recordCount = -1L;", "originalCommit": "bb09e68e7b774e83ab4111c2edf0f1e135d7cb4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc4NDMyNw==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r538784327", "bodyText": "I mostly did this to simplify testing as I noticed fileSizeInBytes which is also a long has the pattern of defaulting to -1, but I don't have strong opinion either way. Will revert!", "author": "yyanyy", "createdAt": "2020-12-08T20:29:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkyNDQwNA=="}], "type": "inlineReview", "revised_code": {"commit": "76d6056f78ba4021dfed59e03a0904c2d0047546", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/BaseFile.java b/core/src/main/java/org/apache/iceberg/BaseFile.java\nindex 8bf16836f..1ca5346e3 100644\n--- a/core/src/main/java/org/apache/iceberg/BaseFile.java\n+++ b/core/src/main/java/org/apache/iceberg/BaseFile.java\n\n@@ -60,7 +60,7 @@ abstract class BaseFile<F>\n   private String filePath = null;\n   private FileFormat format = null;\n   private PartitionData partitionData = null;\n-  private long recordCount = -1L;\n+  private Long recordCount = null;\n   private long fileSizeInBytes = -1L;\n \n   // optional fields\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkyNTAwMQ==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r536925001", "bodyText": "I think this should always contain the record count, even after copyWithoutStats. That's primarily to drop the stats maps, which can be really large.", "author": "rdblue", "createdAt": "2020-12-06T00:57:25Z", "path": "core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java", "diffHunk": "@@ -149,19 +150,35 @@ private void assertFullStats(DataFile dataFile) {\n     Assert.assertNull(dataFile.columnSizes());\n     Assert.assertEquals(VALUE_COUNT, dataFile.valueCounts());\n     Assert.assertEquals(NULL_VALUE_COUNTS, dataFile.nullValueCounts());\n+    Assert.assertEquals(NAN_VALUE_COUNTS, dataFile.nanValueCounts());\n     Assert.assertEquals(LOWER_BOUNDS, dataFile.lowerBounds());\n     Assert.assertEquals(UPPER_BOUNDS, dataFile.upperBounds());\n-    Assert.assertEquals(NAN_VALUE_COUNTS, dataFile.nanValueCounts());\n+\n+    Assert.assertEquals(FILE_PATH, dataFile.path()); // always select file path in all test cases\n   }\n \n   private void assertStatsDropped(DataFile dataFile) {\n-    Assert.assertEquals(3, dataFile.recordCount()); // always select record count in all test cases\n+    Assert.assertEquals(3, dataFile.recordCount()); // record count is not considered as droppable stats\n     Assert.assertNull(dataFile.columnSizes());\n     Assert.assertNull(dataFile.valueCounts());\n     Assert.assertNull(dataFile.nullValueCounts());\n+    Assert.assertNull(dataFile.nanValueCounts());\n     Assert.assertNull(dataFile.lowerBounds());\n     Assert.assertNull(dataFile.upperBounds());\n+\n+    Assert.assertEquals(FILE_PATH, dataFile.path()); // always select file path in all test cases\n+  }\n+\n+  private void assertNoStats(DataFile dataFile) {\n+    Assert.assertEquals(-1L, dataFile.recordCount());", "originalCommit": "bb09e68e7b774e83ab4111c2edf0f1e135d7cb4a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc4NDQ0Nw==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r538784447", "bodyText": "This code actually is not testing results from copyWithoutStats, copyWithoutStats results are actually tested by another method assertStatsDropped which still keeps recordCount. In the test case that uses this assertNoStats, only select but no filter operation is applied to the manifest reader, so the reader doesn't project stats columns when reading (since manifest entries don't have to go through evaluators when no filter is applied), and thus only return the field being selected (in this case file_path). But I can see that this name is confusing so I updated it a bit to hopefully makes things clearer.", "author": "yyanyy", "createdAt": "2020-12-08T20:30:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkyNTAwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "76d6056f78ba4021dfed59e03a0904c2d0047546", "chunk": "diff --git a/core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java b/core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java\nindex 41d31d16b..324b31f7a 100644\n--- a/core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java\n+++ b/core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java\n\n@@ -169,16 +195,12 @@ public class TestManifestReaderStats extends TableTestBase {\n     Assert.assertEquals(FILE_PATH, dataFile.path()); // always select file path in all test cases\n   }\n \n-  private void assertNoStats(DataFile dataFile) {\n-    Assert.assertEquals(-1L, dataFile.recordCount());\n-    Assert.assertNull(dataFile.columnSizes());\n-    Assert.assertNull(dataFile.valueCounts());\n-    Assert.assertNull(dataFile.nullValueCounts());\n-    Assert.assertNull(dataFile.nanValueCounts());\n-    Assert.assertNull(dataFile.lowerBounds());\n-    Assert.assertNull(dataFile.upperBounds());\n-\n-    Assert.assertEquals(FILE_PATH, dataFile.path()); // always select file path in all test cases\n+  private void assertNullRecordCount(DataFile dataFile) {\n+    // record count is a primitive type, accessing null record count will throw NPE\n+    AssertHelpers.assertThrows(\n+        \"Should throw NPE when accessing non-populated record count field\",\n+        NullPointerException.class,\n+        dataFile::recordCount);\n   }\n \n }\n"}}, {"oid": "287c82bc91ee7f0bb006169a7b4c25d7ba8f88b2", "url": "https://github.com/apache/iceberg/commit/287c82bc91ee7f0bb006169a7b4c25d7ba8f88b2", "message": "Core: update record_count behavior, include in manifest reader", "committedDate": "2020-12-08T20:16:45Z", "type": "commit"}, {"oid": "106d5db5e92f630762744a861faa8ee869d6cb67", "url": "https://github.com/apache/iceberg/commit/106d5db5e92f630762744a861faa8ee869d6cb67", "message": "update columns type to list in manifest reader", "committedDate": "2020-12-08T20:16:45Z", "type": "commit"}, {"oid": "76d6056f78ba4021dfed59e03a0904c2d0047546", "url": "https://github.com/apache/iceberg/commit/76d6056f78ba4021dfed59e03a0904c2d0047546", "message": "revert basefile change", "committedDate": "2020-12-08T20:16:45Z", "type": "commit"}, {"oid": "76d6056f78ba4021dfed59e03a0904c2d0047546", "url": "https://github.com/apache/iceberg/commit/76d6056f78ba4021dfed59e03a0904c2d0047546", "message": "revert basefile change", "committedDate": "2020-12-08T20:16:45Z", "type": "forcePushed"}, {"oid": "7e757de881d41626d72452990c84ed65a3db8bd5", "url": "https://github.com/apache/iceberg/commit/7e757de881d41626d72452990c84ed65a3db8bd5", "message": "update some comment", "committedDate": "2020-12-08T21:07:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMzc2Nw==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r549523767", "bodyText": "Did you mean interaction or intersection?", "author": "rdblue", "createdAt": "2020-12-29T00:07:00Z", "path": "core/src/main/java/org/apache/iceberg/ManifestReader.java", "diffHunk": "@@ -282,14 +283,18 @@ private static boolean requireStatsProjection(Expression rowFilter, Collection<S\n \n   static boolean dropStats(Expression rowFilter, Collection<String> columns) {\n     // Make sure we only drop all stats if we had projected all stats\n-    // We do not drop stats even if we had partially added some stats columns\n-    return rowFilter != Expressions.alwaysTrue() &&\n-        columns != null &&\n-        !columns.containsAll(ManifestReader.ALL_COLUMNS) &&\n-        Sets.intersection(Sets.newHashSet(columns), STATS_COLUMNS).isEmpty();\n+    // We do not drop stats even if we had partially added some stats columns, except for record_count column.\n+    // Since we don't want to keep stats map which could be huge in size just because we select record_count, which\n+    // is a primitive type.\n+    if (rowFilter != Expressions.alwaysTrue() && columns != null &&\n+        !columns.containsAll(ManifestReader.ALL_COLUMNS)) {\n+      Set<String> interaction = Sets.intersection(Sets.newHashSet(columns), STATS_COLUMNS);", "originalCommit": "7e757de881d41626d72452990c84ed65a3db8bd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMwNjYyMA==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r552306620", "bodyText": "Yes, thanks for catching it!", "author": "yyanyy", "createdAt": "2021-01-06T01:05:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMzc2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7e177d1937fadf031d3c491a384a1194cc752e41", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/ManifestReader.java b/core/src/main/java/org/apache/iceberg/ManifestReader.java\nindex 295715075..8a0b8baa8 100644\n--- a/core/src/main/java/org/apache/iceberg/ManifestReader.java\n+++ b/core/src/main/java/org/apache/iceberg/ManifestReader.java\n\n@@ -288,15 +288,15 @@ public class ManifestReader<F extends ContentFile<F>>\n     // is a primitive type.\n     if (rowFilter != Expressions.alwaysTrue() && columns != null &&\n         !columns.containsAll(ManifestReader.ALL_COLUMNS)) {\n-      Set<String> interaction = Sets.intersection(Sets.newHashSet(columns), STATS_COLUMNS);\n-      return interaction.isEmpty() || interaction.equals(Sets.newHashSet(\"record_count\"));\n+      Set<String> intersection = Sets.intersection(Sets.newHashSet(columns), STATS_COLUMNS);\n+      return intersection.isEmpty() || intersection.equals(Sets.newHashSet(\"record_count\"));\n     }\n     return false;\n   }\n \n-  static List<String> withStatsColumns(List<String> columns) {\n+  static List<String> withStatsColumns(Collection<String> columns) {\n     if (columns.containsAll(ManifestReader.ALL_COLUMNS)) {\n-      return columns;\n+      return Lists.newArrayList(columns);\n     } else {\n       List<String> projectColumns = Lists.newArrayList(columns);\n       projectColumns.addAll(STATS_COLUMNS); // order doesn't matter\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyNDAyOA==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r549524028", "bodyText": "Why was it necessary to change this to List instead of Collection? That's not a binary-compatible change. Couldn't we just make a copy of the collection if we need the field to be a list? I'm also not sure why columns can't be a Collection.", "author": "rdblue", "createdAt": "2020-12-29T00:08:37Z", "path": "core/src/main/java/org/apache/iceberg/ManifestReader.java", "diffHunk": "@@ -136,7 +137,7 @@ public PartitionSpec spec() {\n     return spec;\n   }\n \n-  public ManifestReader<F> select(Collection<String> newColumns) {\n+  public ManifestReader<F> select(List<String> newColumns) {", "originalCommit": "7e757de881d41626d72452990c84ed65a3db8bd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMwNjY1NQ==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r552306655", "bodyText": "I think I modified this when trying to address this comment, as I noticed that all usage of columns could be done via list so I directly changed the type to avoid the list copying, without thinking about backward compatibility of this method. I guess your original suggestion was to move the copying from ManifestGroup to ManifestReader, but I misinterpreted it to get rid of the list copy completely?", "author": "yyanyy", "createdAt": "2021-01-06T01:05:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyNDAyOA=="}], "type": "inlineReview", "revised_code": {"commit": "7e177d1937fadf031d3c491a384a1194cc752e41", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/ManifestReader.java b/core/src/main/java/org/apache/iceberg/ManifestReader.java\nindex 295715075..8a0b8baa8 100644\n--- a/core/src/main/java/org/apache/iceberg/ManifestReader.java\n+++ b/core/src/main/java/org/apache/iceberg/ManifestReader.java\n\n@@ -137,7 +137,7 @@ public class ManifestReader<F extends ContentFile<F>>\n     return spec;\n   }\n \n-  public ManifestReader<F> select(List<String> newColumns) {\n+  public ManifestReader<F> select(Collection<String> newColumns) {\n     Preconditions.checkState(fileProjection == null,\n         \"Cannot select columns using both select(String...) and project(Schema)\");\n     this.columns = newColumns;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyNDQ5Mw==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r549524493", "bodyText": "Do the tests also validate that if stats columns were added, copyWithoutStats will remove the maps, like upperBounds, but not recordCount?", "author": "rdblue", "createdAt": "2020-12-29T00:11:59Z", "path": "core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java", "diffHunk": "@@ -74,7 +74,7 @@ public void testReadIncludesFullStats() throws IOException {\n   }\n \n   @Test\n-  public void testReadWithFilterIncludesFullStats() throws IOException {\n+  public void testReadEntriesWithFilterIncludesFullStats() throws IOException {", "originalCommit": "7e757de881d41626d72452990c84ed65a3db8bd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMwNjcwMA==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r552306700", "bodyText": "I think the tests won't be able to verify this with calling ManifestReader, since the only way to invoke copyWithoutStats within ManifestReader is by calling iterator() which checks if stats should be dropped first (from dropStats), and stats won't be dropped if any stat column is selected. To test this I added a line to explicitly call copyWithoutStats. Please let me know if you have better suggestion!", "author": "yyanyy", "createdAt": "2021-01-06T01:05:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyNDQ5Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "7e177d1937fadf031d3c491a384a1194cc752e41", "url": "https://github.com/apache/iceberg/commit/7e177d1937fadf031d3c491a384a1194cc752e41", "message": "address comments", "committedDate": "2021-01-06T00:39:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTM3OTE0OA==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r555379148", "bodyText": "nit: use immutable set", "author": "jackye1995", "createdAt": "2021-01-11T22:24:46Z", "path": "core/src/main/java/org/apache/iceberg/ManifestReader.java", "diffHunk": "@@ -52,8 +52,9 @@\n public class ManifestReader<F extends ContentFile<F>>\n     extends CloseableGroup implements CloseableIterable<F> {\n   static final ImmutableList<String> ALL_COLUMNS = ImmutableList.of(\"*\");\n-  static final Set<String> STATS_COLUMNS = Sets.newHashSet(\n-      \"value_counts\", \"null_value_counts\", \"nan_value_counts\", \"lower_bounds\", \"upper_bounds\");\n+\n+  private static final Set<String> STATS_COLUMNS = Sets.newHashSet(", "originalCommit": "7e177d1937fadf031d3c491a384a1194cc752e41", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca8e3623087e32df2cfd6a58199001ef20b87d34", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/ManifestReader.java b/core/src/main/java/org/apache/iceberg/ManifestReader.java\nindex 8a0b8baa8..1b46e70c4 100644\n--- a/core/src/main/java/org/apache/iceberg/ManifestReader.java\n+++ b/core/src/main/java/org/apache/iceberg/ManifestReader.java\n\n@@ -53,7 +54,7 @@ public class ManifestReader<F extends ContentFile<F>>\n     extends CloseableGroup implements CloseableIterable<F> {\n   static final ImmutableList<String> ALL_COLUMNS = ImmutableList.of(\"*\");\n \n-  private static final Set<String> STATS_COLUMNS = Sets.newHashSet(\n+  private static final Set<String> STATS_COLUMNS = ImmutableSet.of(\n       \"value_counts\", \"null_value_counts\", \"nan_value_counts\", \"lower_bounds\", \"upper_bounds\", \"record_count\");\n \n   protected enum FileType {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTM4NTM3Ng==", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r555385376", "bodyText": "nit: to minimize changes, no need to move line for this. Same comment for L206", "author": "jackye1995", "createdAt": "2021-01-11T22:38:44Z", "path": "core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java", "diffHunk": "@@ -100,47 +110,79 @@ public void testReadEntriesWithFilterAndSelectIncludesFullStats() throws IOExcep\n   public void testReadIteratorWithFilterAndSelectDropsStats() throws IOException {\n     ManifestFile manifest = writeManifest(1000L, FILE);\n     try (ManifestReader<DataFile> reader = ManifestFiles.read(manifest, FILE_IO)\n-        .select(ImmutableSet.of(\"record_count\"))\n+        .select(ImmutableList.of(\"file_path\"))\n         .filterRows(Expressions.equal(\"id\", 3))) {\n       DataFile entry = reader.iterator().next();\n       assertStatsDropped(entry);\n     }\n   }\n+\n+  @Test\n+  public void testReadIteratorWithFilterAndSelectRecordCountDropsStats() throws IOException {\n+    ManifestFile manifest = writeManifest(1000L, FILE);\n+    try (ManifestReader<DataFile> reader = ManifestFiles.read(manifest, FILE_IO)\n+        .select(ImmutableList.of(\"file_path\", \"record_count\"))\n+        .filterRows(Expressions.equal(\"id\", 3))) {\n+      DataFile entry = reader.iterator().next();\n+      assertStatsDropped(entry);\n+    }\n+  }\n+\n   @Test\n   public void testReadIteratorWithFilterAndSelectStatsIncludesFullStats() throws IOException {\n     ManifestFile manifest = writeManifest(1000L, FILE);\n     try (ManifestReader<DataFile> reader = ManifestFiles.read(manifest, FILE_IO)\n-        .select(ImmutableSet.of(\"record_count\", \"value_counts\"))\n+        .select(ImmutableList.of(\"file_path\", \"value_counts\"))\n         .filterRows(Expressions.equal(\"id\", 3))) {\n       DataFile entry = reader.iterator().next();\n       assertFullStats(entry);\n+\n+      // explicitly call copyWithoutStats and ensure record count will not be dropped\n+      assertStatsDropped(entry.copyWithoutStats());\n     }\n   }\n \n   @Test\n-  public void testReadEntriesWithSelectNotIncludeFullStats() throws IOException {\n+  public void testReadEntriesWithSelectNotProjectStats() throws IOException {\n     ManifestFile manifest = writeManifest(1000L, FILE);\n     try (ManifestReader<DataFile> reader = ManifestFiles.read(manifest, FILE_IO)\n-        .select(ImmutableSet.of(\"record_count\"))) {\n+        .select(ImmutableList.of(\"file_path\"))) {\n       CloseableIterable<ManifestEntry<DataFile>> entries = reader.entries();\n       ManifestEntry<DataFile> entry = entries.iterator().next();\n-      assertStatsDropped(entry.file());\n+      DataFile dataFile = entry.file();\n+\n+      // selected field is populated\n+      Assert.assertEquals(FILE_PATH, dataFile.path());\n+\n+      // not selected fields are all null and not projected\n+      Assert.assertNull(dataFile.columnSizes());\n+      Assert.assertNull(dataFile.valueCounts());\n+      Assert.assertNull(dataFile.nullValueCounts());\n+      Assert.assertNull(dataFile.nanValueCounts());\n+      Assert.assertNull(dataFile.lowerBounds());\n+      Assert.assertNull(dataFile.upperBounds());\n+      assertNullRecordCount(dataFile);\n     }\n   }\n+\n   @Test\n-  public void testReadEntriesWithSelectCertainStatNotIncludeFullStats() throws IOException {\n+  public void testReadEntriesWithSelectCertainStatNotProjectStats() throws IOException {\n     ManifestFile manifest = writeManifest(1000L, FILE);\n     try (ManifestReader<DataFile> reader = ManifestFiles.read(manifest, FILE_IO)\n-        .select(ImmutableSet.of(\"record_count\", \"value_counts\"))) {\n+        .select(ImmutableList.of(\"file_path\", \"value_counts\"))) {\n       DataFile dataFile = reader.iterator().next();\n \n-      Assert.assertEquals(3, dataFile.recordCount());\n-      Assert.assertNull(dataFile.columnSizes());\n+      // selected fields are populated\n       Assert.assertEquals(VALUE_COUNT, dataFile.valueCounts());\n+      Assert.assertEquals(FILE_PATH, dataFile.path());\n+\n+      // not selected fields are all null and not projected\n+      Assert.assertNull(dataFile.columnSizes());\n       Assert.assertNull(dataFile.nullValueCounts());\n+      Assert.assertNull(dataFile.nanValueCounts());\n       Assert.assertNull(dataFile.lowerBounds());\n       Assert.assertNull(dataFile.upperBounds());\n-      Assert.assertNull(dataFile.nanValueCounts());", "originalCommit": "7e177d1937fadf031d3c491a384a1194cc752e41", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca8e3623087e32df2cfd6a58199001ef20b87d34", "chunk": "diff --git a/core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java b/core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java\nindex 6421658a2..a3c4adb6c 100644\n--- a/core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java\n+++ b/core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java\n\n@@ -158,9 +158,9 @@ public class TestManifestReaderStats extends TableTestBase {\n       Assert.assertNull(dataFile.columnSizes());\n       Assert.assertNull(dataFile.valueCounts());\n       Assert.assertNull(dataFile.nullValueCounts());\n-      Assert.assertNull(dataFile.nanValueCounts());\n       Assert.assertNull(dataFile.lowerBounds());\n       Assert.assertNull(dataFile.upperBounds());\n+      Assert.assertNull(dataFile.nanValueCounts());\n       assertNullRecordCount(dataFile);\n     }\n   }\n"}}, {"oid": "ca8e3623087e32df2cfd6a58199001ef20b87d34", "url": "https://github.com/apache/iceberg/commit/ca8e3623087e32df2cfd6a58199001ef20b87d34", "message": "minor changes", "committedDate": "2021-01-12T01:53:44Z", "type": "commit"}]}