{"pr_number": 1975, "pr_title": "Core: add sort order id to content file", "pr_createdAt": "2020-12-23T02:45:19Z", "pr_url": "https://github.com/apache/iceberg/pull/1975", "timeline": [{"oid": "d8cf852b030a188e57c7e2e92e6a5b5f8c6459a3", "url": "https://github.com/apache/iceberg/commit/d8cf852b030a188e57c7e2e92e6a5b5f8c6459a3", "message": "Core: add sort order id to content file interface", "committedDate": "2020-12-23T02:19:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1NDY5Ng==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r549454696", "bodyText": "What about withSortOrder? Is there a case where we would only have the ID and not the SortOrder? Just trying to think of what will be convenient. We could always expose both methods.", "author": "rdblue", "createdAt": "2020-12-28T19:03:02Z", "path": "core/src/main/java/org/apache/iceberg/DataFiles.java", "diffHunk": "@@ -268,6 +271,11 @@ public Builder withEncryptionKeyMetadata(EncryptionKeyMetadata newKeyMetadata) {\n       return withEncryptionKeyMetadata(newKeyMetadata.buffer());\n     }\n \n+    public Builder withSortOrderId(int newSortOrderId) {", "originalCommit": "d8cf852b030a188e57c7e2e92e6a5b5f8c6459a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM0NDgwMA==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r552344800", "bodyText": "I think if we change this to withSortOrder and store sortOrder directly, copy() of this Builder might have problem since DataFile only has sortOrderId() but no sortOrder() so we couldn't copy directly; we probably also couldn't add sortOrder() to ContentFile/DataFile since the file created from Avro reflection will not have the struct without looking up table metadata?\nBut if withSortOrder essentially only extracts the id and does the same thing as withSortOrderId here, then it will definitely be more convenient. I'll update to do that but please let me know if I didn't understand correctly!", "author": "yyanyy", "createdAt": "2021-01-06T03:20:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1NDY5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "cda3d992ab0474fc24f9aa76da81722971c7e024", "chunk": "diff --git a/core/src/main/java/org/apache/iceberg/DataFiles.java b/core/src/main/java/org/apache/iceberg/DataFiles.java\nindex 0ce13c48d..fc7e6fae9 100644\n--- a/core/src/main/java/org/apache/iceberg/DataFiles.java\n+++ b/core/src/main/java/org/apache/iceberg/DataFiles.java\n\n@@ -271,8 +271,10 @@ public class DataFiles {\n       return withEncryptionKeyMetadata(newKeyMetadata.buffer());\n     }\n \n-    public Builder withSortOrderId(int newSortOrderId) {\n-      this.sortOrderId = newSortOrderId;\n+    public Builder withSortOrder(SortOrder newSortOrder) {\n+      if (newSortOrder != null) {\n+        this.sortOrderId = newSortOrder.orderId();\n+      }\n       return this;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1NTg2Ng==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r549455866", "bodyText": "We will also need to add this to the spec.", "author": "rdblue", "createdAt": "2020-12-28T19:07:19Z", "path": "api/src/main/java/org/apache/iceberg/DataFile.java", "diffHunk": "@@ -61,11 +61,12 @@\n       \"Splittable offsets\");\n   Types.NestedField EQUALITY_IDS = optional(135, \"equality_ids\", ListType.ofRequired(136, IntegerType.get()),\n       \"Equality comparison field IDs\");\n+  Types.NestedField SORT_ORDER_ID = optional(140, \"sort_order_id\", IntegerType.get(), \"Sort order ID\");\n \n   int PARTITION_ID = 102;\n   String PARTITION_NAME = \"partition\";\n   String PARTITION_DOC = \"Partition data tuple, schema based on the partition spec\";\n-  // NEXT ID TO ASSIGN: 140\n+  // NEXT ID TO ASSIGN: 141", "originalCommit": "d8cf852b030a188e57c7e2e92e6a5b5f8c6459a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1NjExNw==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r549456117", "bodyText": "Could you add this after equalityFieldIds instead of here? The copy methods should be last because they aren't fields in the file.", "author": "rdblue", "createdAt": "2020-12-28T19:08:15Z", "path": "api/src/main/java/org/apache/iceberg/ContentFile.java", "diffHunk": "@@ -141,4 +141,13 @@\n    *         null value counts, or nan value counts\n    */\n   F copyWithoutStats();\n+\n+  /**\n+   * Returns the sort order id of this file, which describes how the file is ordered.\n+   * This information will be useful for merging data and equality delete files more efficiently\n+   * when they share the same sort order id.\n+   */\n+  default Integer sortOrderId() {\n+    return null;", "originalCommit": "d8cf852b030a188e57c7e2e92e6a5b5f8c6459a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cda3d992ab0474fc24f9aa76da81722971c7e024", "chunk": "diff --git a/api/src/main/java/org/apache/iceberg/ContentFile.java b/api/src/main/java/org/apache/iceberg/ContentFile.java\nindex 2163c436a..9c9e6385b 100644\n--- a/api/src/main/java/org/apache/iceberg/ContentFile.java\n+++ b/api/src/main/java/org/apache/iceberg/ContentFile.java\n\n@@ -142,12 +150,4 @@ public interface ContentFile<F> {\n    */\n   F copyWithoutStats();\n \n-  /**\n-   * Returns the sort order id of this file, which describes how the file is ordered.\n-   * This information will be useful for merging data and equality delete files more efficiently\n-   * when they share the same sort order id.\n-   */\n-  default Integer sortOrderId() {\n-    return null;\n-  }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1NjIxMA==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r549456210", "bodyText": "Do we need a default?", "author": "rdblue", "createdAt": "2020-12-28T19:08:33Z", "path": "api/src/main/java/org/apache/iceberg/ContentFile.java", "diffHunk": "@@ -141,4 +141,13 @@\n    *         null value counts, or nan value counts\n    */\n   F copyWithoutStats();\n+\n+  /**\n+   * Returns the sort order id of this file, which describes how the file is ordered.\n+   * This information will be useful for merging data and equality delete files more efficiently\n+   * when they share the same sort order id.\n+   */\n+  default Integer sortOrderId() {", "originalCommit": "d8cf852b030a188e57c7e2e92e6a5b5f8c6459a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM0NzM5MA==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r552347390", "bodyText": "I was thinking to add it to ensure backward compatibility in case people implement their own ContentFile, do you think it's unlikely so it's safe for us to not have default?", "author": "yyanyy", "createdAt": "2021-01-06T03:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1NjIxMA=="}], "type": "inlineReview", "revised_code": {"commit": "cda3d992ab0474fc24f9aa76da81722971c7e024", "chunk": "diff --git a/api/src/main/java/org/apache/iceberg/ContentFile.java b/api/src/main/java/org/apache/iceberg/ContentFile.java\nindex 2163c436a..9c9e6385b 100644\n--- a/api/src/main/java/org/apache/iceberg/ContentFile.java\n+++ b/api/src/main/java/org/apache/iceberg/ContentFile.java\n\n@@ -142,12 +150,4 @@ public interface ContentFile<F> {\n    */\n   F copyWithoutStats();\n \n-  /**\n-   * Returns the sort order id of this file, which describes how the file is ordered.\n-   * This information will be useful for merging data and equality delete files more efficiently\n-   * when they share the same sort order id.\n-   */\n-  default Integer sortOrderId() {\n-    return null;\n-  }\n }\n"}}, {"oid": "cda3d992ab0474fc24f9aa76da81722971c7e024", "url": "https://github.com/apache/iceberg/commit/cda3d992ab0474fc24f9aa76da81722971c7e024", "message": "address comments", "committedDate": "2021-01-07T02:37:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njk2NDkzNw==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r556964937", "bodyText": "nit: <p> after the line", "author": "jackye1995", "createdAt": "2021-01-14T00:26:25Z", "path": "api/src/main/java/org/apache/iceberg/ContentFile.java", "diffHunk": "@@ -124,6 +124,14 @@\n    */\n   List<Integer> equalityFieldIds();\n \n+  /**\n+   * Returns the sort order id of this file, which describes how the file is ordered.", "originalCommit": "cda3d992ab0474fc24f9aa76da81722971c7e024", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTA0OTYyNA==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r569049624", "bodyText": "Nit: Can you remove this whitespace change? It isn't needed and could cause conflicts.", "author": "rdblue", "createdAt": "2021-02-03T01:36:13Z", "path": "api/src/main/java/org/apache/iceberg/ContentFile.java", "diffHunk": "@@ -141,4 +149,5 @@\n    *         null value counts, or nan value counts\n    */\n   F copyWithoutStats();\n+", "originalCommit": "cda3d992ab0474fc24f9aa76da81722971c7e024", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTA1NTgxNQ==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r569055815", "bodyText": "Nevermind, this is the only issue and it isn't worth blocking.", "author": "rdblue", "createdAt": "2021-02-03T01:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTA0OTYyNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTA1MTQ5NA==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r569051494", "bodyText": "What about using value != null ? (int) value : 0?\nThat way, the order is always filled in as early as possible.", "author": "rdblue", "createdAt": "2021-02-03T01:40:04Z", "path": "core/src/main/java/org/apache/iceberg/BaseFile.java", "diffHunk": "@@ -270,6 +273,9 @@ public void put(int i, Object value) {\n         this.equalityIds = ArrayUtil.toIntArray((List<Integer>) value);\n         return;\n       case 15:\n+        this.sortOrderId = (Integer) value;", "originalCommit": "cda3d992ab0474fc24f9aa76da81722971c7e024", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTA1MzY3NQ==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r569053675", "bodyText": "Oh, I remember. This is for position delete files that don't have a sort order. That's too bad. It would be nice if we didn't need to write null for those. Nevermind, I guess.", "author": "rdblue", "createdAt": "2021-02-03T01:42:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTA1MTQ5NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTA1MjIwNQ==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r569052205", "bodyText": "I think this can be an int because we have a default that is always valid, 0.", "author": "rdblue", "createdAt": "2021-02-03T01:40:54Z", "path": "core/src/main/java/org/apache/iceberg/BaseFile.java", "diffHunk": "@@ -73,6 +73,7 @@ public PartitionData copy() {\n   private long[] splitOffsets = null;\n   private int[] equalityIds = null;\n   private byte[] keyMetadata = null;\n+  private Integer sortOrderId;", "originalCommit": "cda3d992ab0474fc24f9aa76da81722971c7e024", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTA1MzkzNw==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r569053937", "bodyText": "Same outcome as the comment below. The problem is with position delete files. Nevermind.", "author": "rdblue", "createdAt": "2021-02-03T01:43:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTA1MjIwNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTA1MjU3MA==", "url": "https://github.com/apache/iceberg/pull/1975#discussion_r569052570", "bodyText": "Looks good.", "author": "rdblue", "createdAt": "2021-02-03T01:41:25Z", "path": "core/src/main/java/org/apache/iceberg/DataFiles.java", "diffHunk": "@@ -268,6 +271,13 @@ public Builder withEncryptionKeyMetadata(EncryptionKeyMetadata newKeyMetadata) {\n       return withEncryptionKeyMetadata(newKeyMetadata.buffer());\n     }\n \n+    public Builder withSortOrder(SortOrder newSortOrder) {", "originalCommit": "cda3d992ab0474fc24f9aa76da81722971c7e024", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}