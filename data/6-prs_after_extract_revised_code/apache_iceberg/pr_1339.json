{"pr_number": 1339, "pr_title": "ORC: Use MetricsConfig", "pr_createdAt": "2020-08-13T22:33:30Z", "pr_url": "https://github.com/apache/iceberg/pull/1339", "timeline": [{"oid": "690127cf535b05b34f2d47fa352fb51d3df62f86", "url": "https://github.com/apache/iceberg/commit/690127cf535b05b34f2d47fa352fb51d3df62f86", "message": "Add unit tests for MetricsConfig usage in Metrics", "committedDate": "2020-08-17T20:37:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgxNTYyMw==", "url": "https://github.com/apache/iceberg/pull/1339#discussion_r472815623", "bodyText": "Got confused for a second, I think what the comment wants to say is that out of the two types which require truncation (string/binary) ORC only supports string bounds. Can we rephrase the comment?", "author": "shardulm94", "createdAt": "2020-08-19T07:42:08Z", "path": "orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java", "diffHunk": "@@ -203,7 +227,29 @@ private static Metrics buildOrcMetrics(final long numOfRows, final TypeDescripti\n       BooleanColumnStatistics booleanStats = (BooleanColumnStatistics) columnStats;\n       max = booleanStats.getTrueCount() > 0;\n     }\n-    return Optional.ofNullable(Conversions.toByteBuffer(column.type(), max));\n+    return Optional.ofNullable(Conversions.toByteBuffer(type, truncateIfNeeded(Bound.UPPER, type, max, metricsMode)));\n+  }\n+\n+  private static Object truncateIfNeeded(Bound bound, Type type, Object value, MetricsMode metricsMode) {\n+    // ORC only stores min/max for String columns", "originalCommit": "690127cf535b05b34f2d47fa352fb51d3df62f86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d43ee8b90289b36cc2fed428f94f804acf66b88c", "chunk": "diff --git a/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java b/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java\nindex 0a7a6cbb1..42ca081c1 100644\n--- a/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java\n+++ b/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java\n\n@@ -231,13 +231,13 @@ public class OrcMetrics {\n   }\n \n   private static Object truncateIfNeeded(Bound bound, Type type, Object value, MetricsMode metricsMode) {\n-    // ORC only stores min/max for String columns\n-    if (value == null || metricsMode == MetricsModes.Full.get() || type.typeId() != Type.TypeID.STRING) {\n+    // Out of the two types which could be truncated, string or binary, ORC only supports string bounds.\n+    // Therefore, truncation will be applied if needed only on string type.\n+    if (!(metricsMode instanceof MetricsModes.Truncate) || type.typeId() != Type.TypeID.STRING || value == null) {\n       return value;\n     }\n \n     CharSequence charSequence = (CharSequence) value;\n-    Preconditions.checkArgument(metricsMode instanceof MetricsModes.Truncate, \"Expected Truncate MetricsMode\");\n     MetricsModes.Truncate truncateMode = (MetricsModes.Truncate) metricsMode;\n     int truncateLength = truncateMode.length();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgzNTU2OA==", "url": "https://github.com/apache/iceberg/pull/1339#discussion_r472835568", "bodyText": "Might be better to check if the Metrics mode != Truncate, seems easier to read that way. Also we have a Precondition later to assert the same, which may be unnecessary if we make the check here.", "author": "shardulm94", "createdAt": "2020-08-19T08:04:36Z", "path": "orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java", "diffHunk": "@@ -203,7 +227,29 @@ private static Metrics buildOrcMetrics(final long numOfRows, final TypeDescripti\n       BooleanColumnStatistics booleanStats = (BooleanColumnStatistics) columnStats;\n       max = booleanStats.getTrueCount() > 0;\n     }\n-    return Optional.ofNullable(Conversions.toByteBuffer(column.type(), max));\n+    return Optional.ofNullable(Conversions.toByteBuffer(type, truncateIfNeeded(Bound.UPPER, type, max, metricsMode)));\n+  }\n+\n+  private static Object truncateIfNeeded(Bound bound, Type type, Object value, MetricsMode metricsMode) {\n+    // ORC only stores min/max for String columns\n+    if (value == null || metricsMode == MetricsModes.Full.get() || type.typeId() != Type.TypeID.STRING) {", "originalCommit": "690127cf535b05b34f2d47fa352fb51d3df62f86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ5NTQwNA==", "url": "https://github.com/apache/iceberg/pull/1339#discussion_r473495404", "bodyText": "Done.", "author": "edgarRd", "createdAt": "2020-08-20T01:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgzNTU2OA=="}], "type": "inlineReview", "revised_code": {"commit": "d43ee8b90289b36cc2fed428f94f804acf66b88c", "chunk": "diff --git a/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java b/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java\nindex 0a7a6cbb1..42ca081c1 100644\n--- a/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java\n+++ b/orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java\n\n@@ -231,13 +231,13 @@ public class OrcMetrics {\n   }\n \n   private static Object truncateIfNeeded(Bound bound, Type type, Object value, MetricsMode metricsMode) {\n-    // ORC only stores min/max for String columns\n-    if (value == null || metricsMode == MetricsModes.Full.get() || type.typeId() != Type.TypeID.STRING) {\n+    // Out of the two types which could be truncated, string or binary, ORC only supports string bounds.\n+    // Therefore, truncation will be applied if needed only on string type.\n+    if (!(metricsMode instanceof MetricsModes.Truncate) || type.typeId() != Type.TypeID.STRING || value == null) {\n       return value;\n     }\n \n     CharSequence charSequence = (CharSequence) value;\n-    Preconditions.checkArgument(metricsMode instanceof MetricsModes.Truncate, \"Expected Truncate MetricsMode\");\n     MetricsModes.Truncate truncateMode = (MetricsModes.Truncate) metricsMode;\n     int truncateLength = truncateMode.length();\n \n"}}, {"oid": "9aceada4f8e0fa9c0a0d9c2e02b5c91e9a58eed3", "url": "https://github.com/apache/iceberg/commit/9aceada4f8e0fa9c0a0d9c2e02b5c91e9a58eed3", "message": "ORC: use MetricsConfig for ORC metrics", "committedDate": "2020-08-20T00:09:53Z", "type": "commit"}, {"oid": "bf662a4f1449bf7c10e0ffbb0456094b38fde9bb", "url": "https://github.com/apache/iceberg/commit/bf662a4f1449bf7c10e0ffbb0456094b38fde9bb", "message": "Add unit tests for MetricsConfig usage in Metrics", "committedDate": "2020-08-20T00:09:59Z", "type": "commit"}, {"oid": "d43ee8b90289b36cc2fed428f94f804acf66b88c", "url": "https://github.com/apache/iceberg/commit/d43ee8b90289b36cc2fed428f94f804acf66b88c", "message": "PR comments", "committedDate": "2020-08-20T01:02:33Z", "type": "forcePushed"}, {"oid": "eb116fbee9a685158e677f41a4a51c23e6482a3c", "url": "https://github.com/apache/iceberg/commit/eb116fbee9a685158e677f41a4a51c23e6482a3c", "message": "PR comments", "committedDate": "2020-08-20T17:08:34Z", "type": "commit"}, {"oid": "eb116fbee9a685158e677f41a4a51c23e6482a3c", "url": "https://github.com/apache/iceberg/commit/eb116fbee9a685158e677f41a4a51c23e6482a3c", "message": "PR comments", "committedDate": "2020-08-20T17:08:34Z", "type": "forcePushed"}]}