{"pr_number": 2990, "pr_title": "NMS-12654: Update remote-poller model to link service to locations instead of individual RPs", "pr_createdAt": "2020-04-30T12:21:03Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/2990", "timeline": [{"oid": "35cd84abc98de7f6e95428fd96018244ee9fc090", "url": "https://github.com/OpenNMS/opennms/commit/35cd84abc98de7f6e95428fd96018244ee9fc090", "message": "Basic model change", "committedDate": "2020-04-30T08:32:23Z", "type": "commit"}, {"oid": "dc841bfe4f340a47af45c23c982acfd05d7a2e7f", "url": "https://github.com/OpenNMS/opennms/commit/dc841bfe4f340a47af45c23c982acfd05d7a2e7f", "message": "WIP", "committedDate": "2020-04-30T08:32:23Z", "type": "commit"}, {"oid": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5", "url": "https://github.com/OpenNMS/opennms/commit/ade029b6276ab6b22dc0ccca516ae135aac4fcf5", "message": "OnmsLocationMonitor and LocationMonitorDao removed", "committedDate": "2020-04-30T12:19:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NDc0Nw==", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r417974747", "bodyText": "The constant can be removed, too.", "author": "fooker", "createdAt": "2020-04-30T12:33:03Z", "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsLocationMonitor.java", "diffHunk": "@@ -1,123 +0,0 @@\n-/*******************************************************************************\n- * This file is part of OpenNMS(R).\n- *\n- * Copyright (C) 2006-2014 The OpenNMS Group, Inc.\n- * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Affero General Public License as published\n- * by the Free Software Foundation, either version 3 of the License,\n- * or (at your option) any later version.\n- *\n- * OpenNMS(R) is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU Affero General Public License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with OpenNMS(R).  If not, see:\n- *      http://www.gnu.org/licenses/\n- *\n- * For more information contact:\n- *     OpenNMS(R) Licensing <license@opennms.org>\n- *     http://www.opennms.org/\n- *     http://www.opennms.com/\n- *******************************************************************************/\n-\n-package org.opennms.netmgt.model;\n-\n-import javax.persistence.Column;\n-import javax.persistence.DiscriminatorValue;\n-import javax.persistence.Entity;\n-import javax.persistence.EnumType;\n-import javax.persistence.Enumerated;\n-import javax.persistence.Transient;\n-import javax.xml.bind.annotation.XmlRootElement;\n-\n-import com.google.common.base.MoreObjects;\n-\n-/**\n- * Represents the current status of a location monitor from the\n- * view of the controlling OpenNMS daemon.\n- *\n- * Note: this class has a natural ordering that is inconsistent\n- * with equals.\n- *\n- * @author <a href=\"mailto:brozow@opennms.org\">Mathew Brozowski</a>\n- * @author <a href=\"mailto:david@opennms.org\">David Hustace</a>\n- */\n-@Entity\n-@DiscriminatorValue(OnmsMonitoringSystem.TYPE_REMOTE_POLLER)", "originalCommit": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzODM3OQ==", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r418038379", "bodyText": "Yes, you're soooo right.", "author": "christianpape", "createdAt": "2020-04-30T14:08:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NDc0Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NTY2OQ==", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r417975669", "bodyText": "As the sub-class is removed, the liquibase update should ensure that all values with this type are removed from the monitoringsystems table, too.", "author": "fooker", "createdAt": "2020-04-30T12:34:44Z", "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsLocationMonitor.java", "diffHunk": "@@ -1,123 +0,0 @@\n-/*******************************************************************************\n- * This file is part of OpenNMS(R).\n- *\n- * Copyright (C) 2006-2014 The OpenNMS Group, Inc.\n- * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Affero General Public License as published\n- * by the Free Software Foundation, either version 3 of the License,\n- * or (at your option) any later version.\n- *\n- * OpenNMS(R) is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU Affero General Public License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with OpenNMS(R).  If not, see:\n- *      http://www.gnu.org/licenses/\n- *\n- * For more information contact:\n- *     OpenNMS(R) Licensing <license@opennms.org>\n- *     http://www.opennms.org/\n- *     http://www.opennms.com/\n- *******************************************************************************/\n-\n-package org.opennms.netmgt.model;\n-\n-import javax.persistence.Column;\n-import javax.persistence.DiscriminatorValue;\n-import javax.persistence.Entity;\n-import javax.persistence.EnumType;\n-import javax.persistence.Enumerated;\n-import javax.persistence.Transient;\n-import javax.xml.bind.annotation.XmlRootElement;\n-\n-import com.google.common.base.MoreObjects;\n-\n-/**\n- * Represents the current status of a location monitor from the\n- * view of the controlling OpenNMS daemon.\n- *\n- * Note: this class has a natural ordering that is inconsistent\n- * with equals.\n- *\n- * @author <a href=\"mailto:brozow@opennms.org\">Mathew Brozowski</a>\n- * @author <a href=\"mailto:david@opennms.org\">David Hustace</a>\n- */\n-@Entity\n-@DiscriminatorValue(OnmsMonitoringSystem.TYPE_REMOTE_POLLER)", "originalCommit": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzODUwNg==", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r418038506", "bodyText": "Good catch.", "author": "christianpape", "createdAt": "2020-04-30T14:09:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NTY2OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NzkxNA==", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r417977914", "bodyText": "As this needs revisiting in future, should we mark this with a TODO?", "author": "fooker", "createdAt": "2020-04-30T12:38:41Z", "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/AvailCalculator.java", "diffHunk": "@@ -154,23 +154,23 @@ private double uptime(TimeChunk chunk, TimeIntervalSequence uptime) {\n     }\n     \n     public static class ServiceAvailCalculator {\n-        Map<OnmsLocationMonitor, UptimeCalculator> m_uptimeCalculators = new HashMap<OnmsLocationMonitor, UptimeCalculator>();", "originalCommit": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzODU5OQ==", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r418038599", "bodyText": "Done.", "author": "christianpape", "createdAt": "2020-04-30T14:09:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NzkxNA=="}], "type": "inlineReview", "revised_code": {"commit": "6d87a07da9b79f8082d62be239ad6acc7bddeb4c", "chunk": "diff --git a/opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/AvailCalculator.java b/opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/AvailCalculator.java\nindex b859316d0e2..35f4776435b 100644\n--- a/opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/AvailCalculator.java\n+++ b/opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/AvailCalculator.java\n\n@@ -154,6 +154,7 @@ public class AvailCalculator {\n     }\n     \n     public static class ServiceAvailCalculator {\n+        // TODO: This need to take care of this spot...\n         Map<OnmsMonitoringLocation, UptimeCalculator> m_uptimeCalculators = new HashMap<OnmsMonitoringLocation, UptimeCalculator>();\n         TimeChunker m_timeChunker;\n         public ServiceAvailCalculator(TimeChunker timeChunker) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4MzI0Mw==", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r417983243", "bodyText": "Get rid of the definitionName.  createResource is used just here and can be adopted easily.", "author": "fooker", "createdAt": "2020-04-30T12:48:02Z", "path": "opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DistributedStatusResourceType.java", "diffHunk": "@@ -117,11 +117,11 @@ public boolean isResourceTypeOnParent(OnmsResource parent) {\n \n         final OnmsNode node = ResourceTypeUtils.getNodeFromResource(parent);\n         final List<OnmsResource> resources = Lists.newLinkedList();\n-        final Collection<LocationMonitorIpInterface> statuses = m_locationMonitorDao.findStatusChangesForNodeForUniqueMonitorAndInterface(node.getId());\n+        final Collection<LocationIpInterface> statuses = m_locationSpecificStatusDao.findStatusChangesForNodeForUniqueMonitorAndInterface(node.getId());\n \n-        for (LocationMonitorIpInterface status : statuses) {\n-            String definitionName = status.getLocationMonitor().getLocation();\n-            String id = status.getLocationMonitor().getId();\n+        for (LocationIpInterface status : statuses) {", "originalCommit": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzODY1Mw==", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r418038653", "bodyText": "Done.", "author": "christianpape", "createdAt": "2020-04-30T14:09:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4MzI0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "6d87a07da9b79f8082d62be239ad6acc7bddeb4c", "chunk": "diff --git a/opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DistributedStatusResourceType.java b/opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DistributedStatusResourceType.java\nindex 3b4abbf08ae..388e3aa0e42 100644\n--- a/opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DistributedStatusResourceType.java\n+++ b/opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DistributedStatusResourceType.java\n\n@@ -120,13 +120,12 @@ public class DistributedStatusResourceType implements OnmsResourceType {\n         final Collection<LocationIpInterface> statuses = m_locationSpecificStatusDao.findStatusChangesForNodeForUniqueMonitorAndInterface(node.getId());\n \n         for (LocationIpInterface status : statuses) {\n-            String definitionName = status.getLocation().getLocationName();\n-            String id = status.getLocation().getLocationName();\n+            String location = status.getLocation().getLocationName();\n             final OnmsIpInterface ipInterface = status.getIpInterface();\n             String ipAddr = InetAddressUtils.str(ipInterface.getIpAddress());\n \n-            if (m_resourceStorageDao.exists(getRelativeInterfacePath(id, ipAddr), 0)) {\n-                resources.add(createResource(definitionName, id, ipAddr));\n+            if (m_resourceStorageDao.exists(getRelativeInterfacePath(location, ipAddr), 0)) {\n+                resources.add(createResource(location, ipAddr));\n             }\n         }\n \n"}}, {"oid": "6d87a07da9b79f8082d62be239ad6acc7bddeb4c", "url": "https://github.com/OpenNMS/opennms/commit/6d87a07da9b79f8082d62be239ad6acc7bddeb4c", "message": "Review changes", "committedDate": "2020-04-30T14:09:34Z", "type": "commit"}]}