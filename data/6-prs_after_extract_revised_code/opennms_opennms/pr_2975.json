{"pr_number": 2975, "pr_title": "NMS-12552: Add unknown variants for BMP and BGP", "pr_createdAt": "2020-04-14T11:27:12Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/2975", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE0ODYxMg==", "url": "https://github.com/OpenNMS/opennms/pull/2975#discussion_r408148612", "bodyText": "2019->2020", "author": "christianpape", "createdAt": "2020-04-14T13:46:41Z", "path": "features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bgp/packets/UnknownPacket.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2019 The OpenNMS Group, Inc.", "originalCommit": "81b17d785378253bdbd166953ce93b0627542845", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE0ODY5Ng==", "url": "https://github.com/OpenNMS/opennms/pull/2975#discussion_r408148696", "bodyText": "Same here", "author": "christianpape", "createdAt": "2020-04-14T13:46:48Z", "path": "features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bgp/packets/UnknownPacket.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2019 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2019 The OpenNMS Group, Inc.", "originalCommit": "81b17d785378253bdbd166953ce93b0627542845", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE0OTg2NQ==", "url": "https://github.com/OpenNMS/opennms/pull/2975#discussion_r408149865", "bodyText": "Only one final? Or should we make all final?", "author": "christianpape", "createdAt": "2020-04-14T13:48:24Z", "path": "features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bmp/Packet.java", "diffHunk": "@@ -67,6 +69,7 @@ public void visit(PeerUpPacket packet) {}\n             public void visit(InitiationPacket packet) {}\n             public void visit(TerminationPacket packet) {}\n             public void visit(RouteMirroringPacket packet) {}\n+            public void visit(final UnknownPacket packet) {}", "originalCommit": "81b17d785378253bdbd166953ce93b0627542845", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE2NzU3Nw==", "url": "https://github.com/OpenNMS/opennms/pull/2975#discussion_r409167577", "bodyText": "Yup.", "author": "fooker", "createdAt": "2020-04-15T22:19:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE0OTg2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "78bcd3ba3ca0f1653db8db3337883fb4cbf4800d", "chunk": "diff --git a/features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bmp/Packet.java b/features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bmp/Packet.java\nindex 611627afcfe..512574c0c3a 100644\n--- a/features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bmp/Packet.java\n+++ b/features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bmp/Packet.java\n\n@@ -62,13 +62,13 @@ public interface Packet {\n         void visit(final UnknownPacket packet);\n \n         class Adapter implements Visitor {\n-            public void visit(RouteMonitoringPacket packet) {}\n-            public void visit(StatisticsReportPacket packet) {}\n-            public void visit(PeerDownPacket packet) {}\n-            public void visit(PeerUpPacket packet) {}\n-            public void visit(InitiationPacket packet) {}\n-            public void visit(TerminationPacket packet) {}\n-            public void visit(RouteMirroringPacket packet) {}\n+            public void visit(final RouteMonitoringPacket packet) {}\n+            public void visit(final StatisticsReportPacket packet) {}\n+            public void visit(final PeerDownPacket packet) {}\n+            public void visit(final PeerUpPacket packet) {}\n+            public void visit(final InitiationPacket packet) {}\n+            public void visit(final TerminationPacket packet) {}\n+            public void visit(final RouteMirroringPacket packet) {}\n             public void visit(final UnknownPacket packet) {}\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE1MDIyNg==", "url": "https://github.com/OpenNMS/opennms/pull/2975#discussion_r408150226", "bodyText": "2019->2020", "author": "christianpape", "createdAt": "2020-04-14T13:48:53Z", "path": "features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bmp/packets/UnknownPacket.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2019 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2019 The OpenNMS Group, Inc.", "originalCommit": "81b17d785378253bdbd166953ce93b0627542845", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "78bcd3ba3ca0f1653db8db3337883fb4cbf4800d", "chunk": "diff --git a/features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bmp/packets/UnknownPacket.java b/features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bmp/packets/UnknownPacket.java\nindex 41541019f4b..057c748fb83 100644\n--- a/features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bmp/packets/UnknownPacket.java\n+++ b/features/telemetry/protocols/bmp/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/proto/bmp/packets/UnknownPacket.java\n\n@@ -1,8 +1,8 @@\n /*******************************************************************************\n  * This file is part of OpenNMS(R).\n  *\n- * Copyright (C) 2019 The OpenNMS Group, Inc.\n- * OpenNMS(R) is Copyright (C) 1999-2019 The OpenNMS Group, Inc.\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n  *\n  * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n  *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE1MTE3Nw==", "url": "https://github.com/OpenNMS/opennms/pull/2975#discussion_r408151177", "bodyText": "All methods visit(final...?", "author": "christianpape", "createdAt": "2020-04-14T13:50:08Z", "path": "features/telemetry/protocols/bmp/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/ParserTest.java", "diffHunk": "@@ -113,4 +114,8 @@ public void visit(RouteMonitoringPacket packet) {\n     @Override\n     public void visit(RouteMirroringPacket packet) {\n     }\n+\n+    @Override\n+    public void visit(final UnknownPacket packet) {", "originalCommit": "81b17d785378253bdbd166953ce93b0627542845", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE2NzQyNA==", "url": "https://github.com/OpenNMS/opennms/pull/2975#discussion_r409167424", "bodyText": "The whole visitor implementation is empty. I've just removed it.", "author": "fooker", "createdAt": "2020-04-15T22:18:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE1MTE3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "78bcd3ba3ca0f1653db8db3337883fb4cbf4800d", "chunk": "diff --git a/features/telemetry/protocols/bmp/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/ParserTest.java b/features/telemetry/protocols/bmp/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/ParserTest.java\nindex e13bc3dc676..53cf8ac71e3 100644\n--- a/features/telemetry/protocols/bmp/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/ParserTest.java\n+++ b/features/telemetry/protocols/bmp/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/bmp/parser/ParserTest.java\n\n@@ -86,36 +85,4 @@ public class ParserTest implements Packet.Visitor {\n     public void testNMS12649() throws Exception {\n         checkFile(FILE_NMS_12649);\n     }\n-\n-    @Override\n-    public void visit(InitiationPacket packet) {\n-    }\n-\n-    @Override\n-    public void visit(TerminationPacket packet) {\n-    }\n-\n-    @Override\n-    public void visit(PeerUpPacket packet) {\n-    }\n-\n-    @Override\n-    public void visit(PeerDownPacket packet) {\n-    }\n-\n-    @Override\n-    public void visit(StatisticsReportPacket packet) {\n-    }\n-\n-    @Override\n-    public void visit(RouteMonitoringPacket packet) {\n-    }\n-\n-    @Override\n-    public void visit(RouteMirroringPacket packet) {\n-    }\n-\n-    @Override\n-    public void visit(final UnknownPacket packet) {\n-    }\n }\n"}}, {"oid": "78bcd3ba3ca0f1653db8db3337883fb4cbf4800d", "url": "https://github.com/OpenNMS/opennms/commit/78bcd3ba3ca0f1653db8db3337883fb4cbf4800d", "message": "NMS-12552: Add unknown variants for BMP and BGP\n\nBGP packet parsing now may not return a packet if the packet type does\nnot match the expected one. Parsing still can contine even if a packet\nis unknown.", "committedDate": "2020-04-15T22:17:25Z", "type": "commit"}, {"oid": "78bcd3ba3ca0f1653db8db3337883fb4cbf4800d", "url": "https://github.com/OpenNMS/opennms/commit/78bcd3ba3ca0f1653db8db3337883fb4cbf4800d", "message": "NMS-12552: Add unknown variants for BMP and BGP\n\nBGP packet parsing now may not return a packet if the packet type does\nnot match the expected one. Parsing still can contine even if a packet\nis unknown.", "committedDate": "2020-04-15T22:17:25Z", "type": "forcePushed"}]}