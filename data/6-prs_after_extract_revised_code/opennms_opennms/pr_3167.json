{"pr_number": 3167, "pr_title": "NMS-12915: Support gNMI for OpenConfig", "pr_createdAt": "2020-09-23T13:20:28Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/3167", "timeline": [{"oid": "34292ae1ffd017a3a9ca80efe63228d2aaa7b5bf", "url": "https://github.com/OpenNMS/opennms/commit/34292ae1ffd017a3a9ca80efe63228d2aaa7b5bf", "message": "NMS-12915: Add support for gNMI\n\nBy default mode would be gnmi", "committedDate": "2020-09-23T13:16:32Z", "type": "commit"}, {"oid": "64b7eb9227e4a0f8a967c9d8270fba208841b9c0", "url": "https://github.com/OpenNMS/opennms/commit/64b7eb9227e4a0f8a967c9d8270fba208841b9c0", "message": "NMS-12915: Handle inner path separators", "committedDate": "2020-09-23T18:53:12Z", "type": "commit"}, {"oid": "0515a5298af8ca69e47278022e04b5cf54f6f8d8", "url": "https://github.com/OpenNMS/opennms/commit/0515a5298af8ca69e47278022e04b5cf54f6f8d8", "message": "Merge branch 'develop' into jira/NMS-12915", "committedDate": "2020-09-23T20:03:52Z", "type": "commit"}, {"oid": "5ba8c9491801e6ff190471fefd062300ee13b6af", "url": "https://github.com/OpenNMS/opennms/commit/5ba8c9491801e6ff190471fefd062300ee13b6af", "message": "NMS-12915: Add support for different sampling rates for different paths", "committedDate": "2020-09-25T03:54:12Z", "type": "commit"}, {"oid": "5ba8c9491801e6ff190471fefd062300ee13b6af", "url": "https://github.com/OpenNMS/opennms/commit/5ba8c9491801e6ff190471fefd062300ee13b6af", "message": "NMS-12915: Add support for different sampling rates for different paths", "committedDate": "2020-09-25T03:54:12Z", "type": "forcePushed"}, {"oid": "869f5981af6af2b94c2e8da38ecc010040faae62", "url": "https://github.com/OpenNMS/opennms/commit/869f5981af6af2b94c2e8da38ecc010040faae62", "message": "Merge branch 'develop' into jira/NMS-12915", "committedDate": "2020-09-25T20:22:19Z", "type": "commit"}, {"oid": "6aa9e5df862492770f033c8b4e1c3be332ec1dae", "url": "https://github.com/OpenNMS/opennms/commit/6aa9e5df862492770f033c8b4e1c3be332ec1dae", "message": "Merge branch 'develop' into jira/NMS-12915", "committedDate": "2020-09-25T20:30:43Z", "type": "commit"}, {"oid": "68ccac6a12cfd2a32d6de4e0f56d026caa0f7e37", "url": "https://github.com/OpenNMS/opennms/commit/68ccac6a12cfd2a32d6de4e0f56d026caa0f7e37", "message": "Merge branch 'develop' into jira/NMS-12915", "committedDate": "2020-09-28T16:05:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc1MDE0MA==", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r512750140", "bodyText": "Looks like the whole block just interpolates all keys regardless of the group.\nMaybe something like this does the job:\nList<Map<String, String>> interpolatedMapList = packageConfig.getParameters().stream()\n    .map(parmeterMap -> getInterpolated(parmeterMap, serviceRef))\n    .collect(Collectors.toList());", "author": "fooker", "createdAt": "2020-10-27T14:40:28Z", "path": "features/telemetry/daemon/src/main/java/org/opennms/netmgt/telemetry/daemon/ConnectorManager.java", "diffHunk": "@@ -88,28 +91,43 @@ private void startStreamingFor(ConnectorConfig connectorConfig, PackageConfig pa\n             if (connectorsByKey.containsKey(key)) {\n                 LOG.debug(\"Connector already exists. Ignoring.\");\n             }\n-\n+            List<Map<String, String>> interpolatedMapList = new ArrayList<>();\n             // Flatten the parameters to a map\n             Map<String,String> parmMap = packageConfig.getParameters().stream()\n+                    .filter(parameter -> Strings.isNullOrEmpty(parameter.getGroup()))\n                     .collect(Collectors.toMap(\n                             Parameter::getKey,\n                             Parameter::getValue\n                     ));\n             // Interpolate meta-data in parameter values\n-            parmMap = Interpolator.interpolateStrings(parmMap, new FallbackScope(\n-                    entityScopeProvider.getScopeForNode(serviceRef.getNodeId()),\n-                    entityScopeProvider.getScopeForInterface(serviceRef.getNodeId(), InetAddressUtils.str(serviceRef.getIpAddress())),\n-                    entityScopeProvider.getScopeForService(serviceRef.getNodeId(), serviceRef.getIpAddress(), serviceRef.getServiceName())\n-            ));\n+            parmMap = getInterpolated(parmMap, serviceRef);\n+            interpolatedMapList.add(parmMap);\n+\n+            // Interpolate grouped parameters\n+            Map<String, Map<String, String>> parmMapByGroup = packageConfig.getParameters().stream()\n+                    .filter(parameter -> !Strings.isNullOrEmpty(parameter.getGroup()))\n+                    .collect(Collectors.groupingBy(Parameter::getGroup, Collectors.toMap(Parameter::getKey, Parameter::getValue)));\n+\n+            parmMapByGroup.forEach((group, parmeterMap) -> {\n+                interpolatedMapList.add(getInterpolated(parmeterMap, serviceRef));\n+            });", "originalCommit": "68ccac6a12cfd2a32d6de4e0f56d026caa0f7e37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzUxNDM5Mg==", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r513514392", "bodyText": "This is to put parameters that belong to one group into one set of params. Modified this and added test case to show how grouping is done.", "author": "cgorantla", "createdAt": "2020-10-28T14:58:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc1MDE0MA=="}], "type": "inlineReview", "revised_code": {"commit": "70c213244764cf322a28cebacb949bc202fa6212", "chunk": "diff --git a/features/telemetry/daemon/src/main/java/org/opennms/netmgt/telemetry/daemon/ConnectorManager.java b/features/telemetry/daemon/src/main/java/org/opennms/netmgt/telemetry/daemon/ConnectorManager.java\nindex 5c0575365ab..0fd48430953 100644\n--- a/features/telemetry/daemon/src/main/java/org/opennms/netmgt/telemetry/daemon/ConnectorManager.java\n+++ b/features/telemetry/daemon/src/main/java/org/opennms/netmgt/telemetry/daemon/ConnectorManager.java\n\n@@ -91,27 +91,7 @@ public class ConnectorManager {\n             if (connectorsByKey.containsKey(key)) {\n                 LOG.debug(\"Connector already exists. Ignoring.\");\n             }\n-            List<Map<String, String>> interpolatedMapList = new ArrayList<>();\n-            // Flatten the parameters to a map\n-            Map<String,String> parmMap = packageConfig.getParameters().stream()\n-                    .filter(parameter -> Strings.isNullOrEmpty(parameter.getGroup()))\n-                    .collect(Collectors.toMap(\n-                            Parameter::getKey,\n-                            Parameter::getValue\n-                    ));\n-            // Interpolate meta-data in parameter values\n-            parmMap = getInterpolated(parmMap, serviceRef);\n-            interpolatedMapList.add(parmMap);\n-\n-            // Interpolate grouped parameters\n-            Map<String, Map<String, String>> parmMapByGroup = packageConfig.getParameters().stream()\n-                    .filter(parameter -> !Strings.isNullOrEmpty(parameter.getGroup()))\n-                    .collect(Collectors.groupingBy(Parameter::getGroup, Collectors.toMap(Parameter::getKey, Parameter::getValue)));\n-\n-            parmMapByGroup.forEach((group, parmeterMap) -> {\n-                interpolatedMapList.add(getInterpolated(parmeterMap, serviceRef));\n-            });\n-\n+            List<Map<String, String>> interpolatedMapList = getGroupedParams(packageConfig, serviceRef);\n             // Create a new connector\n             LOG.debug(\"Starting connector for: {}\", key);\n             final Connector connector = telemetryRegistry.getConnector(connectorConfig);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc1NTI4OA==", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r512755288", "bodyText": "I think it would be better to enforce en empty group on the global parameters. (And maybe print an error log message if they are specified with a group)", "author": "fooker", "createdAt": "2020-10-27T14:46:22Z", "path": "features/openconfig/telemetry-client/src/main/java/org/opennms/features/openconfig/telemetry/OpenConfigClientImpl.java", "diffHunk": "@@ -78,16 +87,24 @@\n     private ManagedChannel channel;\n     private final InetAddress host;\n     private Integer port;\n-    private Map<String, String> parameters = new HashMap<>();\n+    private String mode;\n+    private Integer interval;\n+    private Integer retries;\n+    private List<Map<String,String>> paramList = new ArrayList<>();\n     private AtomicBoolean closed = new AtomicBoolean(false);\n     private AtomicBoolean scheduled = new AtomicBoolean(false);\n     private ExecutorService executor = Executors.newSingleThreadExecutor();\n     private ScheduledExecutorService scheduledExecutor = Executors.newSingleThreadScheduledExecutor();\n \n-    public OpenConfigClientImpl(InetAddress host, Map<String, String> params) {\n+    public OpenConfigClientImpl(InetAddress host, List<Map<String, String>> paramList) {\n         this.host = Objects.requireNonNull(host);\n-        this.port = Objects.requireNonNull(StringUtils.parseInt(params.get(\"port\"), null));\n-        parameters.putAll(params);\n+        this.paramList.addAll(paramList);\n+        // Extract port and mode which are global.\n+        this.paramList.stream().filter(entry -> entry.get(\"port\") != null)", "originalCommit": "68ccac6a12cfd2a32d6de4e0f56d026caa0f7e37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwNzg3OA==", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r513707878", "bodyText": "At this point, Client doesn't have any group info. It has a set of parameters.", "author": "cgorantla", "createdAt": "2020-10-28T19:31:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc1NTI4OA=="}], "type": "inlineReview", "revised_code": {"commit": "50e1d70261c0d99dad510dfffb707e0a868bb469", "chunk": "diff --git a/features/openconfig/telemetry-client/src/main/java/org/opennms/features/openconfig/telemetry/OpenConfigClientImpl.java b/features/openconfig/telemetry-client/src/main/java/org/opennms/features/openconfig/telemetry/OpenConfigClientImpl.java\nindex 496656d6e42..63550afdc47 100644\n--- a/features/openconfig/telemetry-client/src/main/java/org/opennms/features/openconfig/telemetry/OpenConfigClientImpl.java\n+++ b/features/openconfig/telemetry-client/src/main/java/org/opennms/features/openconfig/telemetry/OpenConfigClientImpl.java\n\n@@ -84,6 +84,13 @@ public class OpenConfigClientImpl implements OpenConfigClient {\n     private static final int DEFAULT_INTERNAL_TIMEOUT = 1000;\n     private static final int DEFAULT_FREQUENCY = 300000; //5min\n     private static final int DEFAULT_INTERVAL_IN_SEC = 300; //5min\n+    private static final String PORT = \"port\";\n+    private static final String MODE = \"mode\";\n+    private static final String PATHS = \"paths\";\n+    private static final String FREQUENCY = \"frequency\";\n+    private static final String INTERVAL = \"interval\";\n+    private static final String RETRIES = \"retries\";\n+    private static final String JTI_MODE = \"jti\";\n     private ManagedChannel channel;\n     private final InetAddress host;\n     private Integer port;\n"}}, {"oid": "70c213244764cf322a28cebacb949bc202fa6212", "url": "https://github.com/OpenNMS/opennms/commit/70c213244764cf322a28cebacb949bc202fa6212", "message": "NMS-12915: Handle review comments\n\nAdd test case", "committedDate": "2020-10-28T14:56:55Z", "type": "commit"}, {"oid": "315b26514689736eadec6aa05b59bdd940893d98", "url": "https://github.com/OpenNMS/opennms/commit/315b26514689736eadec6aa05b59bdd940893d98", "message": "NMS-12915: Update docs", "committedDate": "2020-10-28T19:28:42Z", "type": "commit"}, {"oid": "50e1d70261c0d99dad510dfffb707e0a868bb469", "url": "https://github.com/OpenNMS/opennms/commit/50e1d70261c0d99dad510dfffb707e0a868bb469", "message": "NMS-12915: Handle review comments", "committedDate": "2020-10-28T21:30:13Z", "type": "commit"}, {"oid": "410cc6a019c468bfdf78eecacb3925b595492fc9", "url": "https://github.com/OpenNMS/opennms/commit/410cc6a019c468bfdf78eecacb3925b595492fc9", "message": "NMS-12915: Doc update\n[skip ci]", "committedDate": "2020-10-30T14:17:46Z", "type": "commit"}]}