{"pr_number": 3113, "pr_title": "NMS-12729: OpenConfig streaming support", "pr_createdAt": "2020-08-14T11:59:37Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/3113", "timeline": [{"oid": "39318104827461b569c5b7cbd944b79f313b9d1f", "url": "https://github.com/OpenNMS/opennms/commit/39318104827461b569c5b7cbd944b79f313b9d1f", "message": "NMS-12729: Add openconfig support for Telemetryd", "committedDate": "2020-07-23T22:01:54Z", "type": "commit"}, {"oid": "c6a7ede905ca32b497ce28b6b475d3759194c2ff", "url": "https://github.com/OpenNMS/opennms/commit/c6a7ede905ca32b497ce28b6b475d3759194c2ff", "message": "NMS-12729: Move certain listener functionality to parser\n\nAddress review commetns", "committedDate": "2020-07-23T22:01:54Z", "type": "commit"}, {"oid": "be84d9977c6a48f086c950c7fce501861a87f924", "url": "https://github.com/OpenNMS/opennms/commit/be84d9977c6a48f086c950c7fce501861a87f924", "message": "NMS=12729: Move all stream handling to parser, more cleanup, add IT", "committedDate": "2020-08-05T13:14:47Z", "type": "commit"}, {"oid": "decd22360147993eacc94b37afd8cf569fe41433", "url": "https://github.com/OpenNMS/opennms/commit/decd22360147993eacc94b37afd8cf569fe41433", "message": "Add support for defining \"connectors\" in the telemetryd configuration.", "committedDate": "2020-08-10T17:00:24Z", "type": "commit"}, {"oid": "f96af374a9d8bb3cf97af7649fe176f96762c06c", "url": "https://github.com/OpenNMS/opennms/commit/f96af374a9d8bb3cf97af7649fe176f96762c06c", "message": "connectors!", "committedDate": "2020-08-10T20:46:24Z", "type": "commit"}, {"oid": "be245296ad9fd9f192c8c6232f5e1c20d89b27b5", "url": "https://github.com/OpenNMS/opennms/commit/be245296ad9fd9f192c8c6232f5e1c20d89b27b5", "message": "Move the FilterService to the DAO API.", "committedDate": "2020-08-11T13:21:43Z", "type": "commit"}, {"oid": "fc608a77196f65524b49b832652dc0e3ef5b55e9", "url": "https://github.com/OpenNMS/opennms/commit/fc608a77196f65524b49b832652dc0e3ef5b55e9", "message": "more wiring & improve logging", "committedDate": "2020-08-11T14:33:28Z", "type": "commit"}, {"oid": "947860f868efaa9e160d8daf09794638890371d0", "url": "https://github.com/OpenNMS/opennms/commit/947860f868efaa9e160d8daf09794638890371d0", "message": "Merge branch 'jw/openconfig' into features/openconfig", "committedDate": "2020-08-11T17:41:50Z", "type": "commit"}, {"oid": "d51fe30224c4f8d9c860554ffb32f725f38833d6", "url": "https://github.com/OpenNMS/opennms/commit/d51fe30224c4f8d9c860554ffb32f725f38833d6", "message": "NMS-12729: Move to Connector, Refactor scheduling part", "committedDate": "2020-08-13T02:31:07Z", "type": "commit"}, {"oid": "1d1efd2c14550354affb5e9696df4c3930aa6b47", "url": "https://github.com/OpenNMS/opennms/commit/1d1efd2c14550354affb5e9696df4c3930aa6b47", "message": "filterservice -> servicetracker", "committedDate": "2020-08-14T01:02:46Z", "type": "commit"}, {"oid": "6b022bf6bdaa51fdb2f551ef96e9cd72acd93dd1", "url": "https://github.com/OpenNMS/opennms/commit/6b022bf6bdaa51fdb2f551ef96e9cd72acd93dd1", "message": "more service tracking work", "committedDate": "2020-08-14T01:02:46Z", "type": "commit"}, {"oid": "f999c46a78314da09d8334cf9ba23394d3835ffd", "url": "https://github.com/OpenNMS/opennms/commit/f999c46a78314da09d8334cf9ba23394d3835ffd", "message": "working service tracker", "committedDate": "2020-08-14T01:02:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4MjI5MA==", "url": "https://github.com/OpenNMS/opennms/pull/3113#discussion_r470582290", "bodyText": "This still needed?", "author": "j-white", "createdAt": "2020-08-14T12:02:14Z", "path": "core/ipc/rpc/utils/src/main/java/org/opennms/core/rpc/utils/mate/Interpolator.java", "diffHunk": "@@ -93,7 +93,24 @@ public static String interpolate(final String raw, final Scope scope) {\n         outerMatcher.appendTail(stringBuffer);\n         return stringBuffer.toString();\n     }\n-    \n+\n+    public static Optional<ContextKey> getContextKeyFromMateData(final String raw) {", "originalCommit": "f999c46a78314da09d8334cf9ba23394d3835ffd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcyMDgwMA==", "url": "https://github.com/OpenNMS/opennms/pull/3113#discussion_r470720800", "bodyText": "I guess there is no method to retrieve ContextKey from mate expression. So it may be useful in future ?", "author": "cgorantla", "createdAt": "2020-08-14T16:13:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4MjI5MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4MjU2OQ==", "url": "https://github.com/OpenNMS/opennms/pull/3113#discussion_r470582569", "bodyText": "We should probably remove one of these.", "author": "j-white", "createdAt": "2020-08-14T12:02:56Z", "path": "core/lib/src/main/java/org/opennms/core/utils/StringUtils.java", "diffHunk": "@@ -453,4 +453,20 @@ public static String getHumanReadableByteCount(long bytes, boolean si) {\n             return Optional.empty();\n         }\n     }\n+\n+    public static Integer parseInt(String value, Integer defaultValue) {", "originalCommit": "f999c46a78314da09d8334cf9ba23394d3835ffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56548574701130dec9e9a327981d07edd914bc23", "chunk": "diff --git a/core/lib/src/main/java/org/opennms/core/utils/StringUtils.java b/core/lib/src/main/java/org/opennms/core/utils/StringUtils.java\nindex 0046d66c0f4..015f9fe9dbb 100644\n--- a/core/lib/src/main/java/org/opennms/core/utils/StringUtils.java\n+++ b/core/lib/src/main/java/org/opennms/core/utils/StringUtils.java\n\n@@ -462,11 +462,4 @@ public abstract class StringUtils {\n         }\n     }\n \n-    public static Integer getInteger(String value, Integer defaultValue) {\n-        try {\n-            return Integer.parseInt(value);\n-        } catch (NumberFormatException e) {\n-            return defaultValue;\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4Mjc5MQ==", "url": "https://github.com/OpenNMS/opennms/pull/3113#discussion_r470582791", "bodyText": "Unnecessary change.", "author": "j-white", "createdAt": "2020-08-14T12:03:29Z", "path": "features/kafka/producer/src/main/java/org/opennms/features/kafka/producer/OpennmsKafkaProducer.java", "diffHunk": "@@ -397,7 +397,7 @@ private void sendRecord(Callable<ProducerRecord<byte[], byte[]>> callable, Consu\n         }\n     }\n \n-    private void processKafkaSendQueue() {\n+    private void    processKafkaSendQueue() {", "originalCommit": "f999c46a78314da09d8334cf9ba23394d3835ffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56548574701130dec9e9a327981d07edd914bc23", "chunk": "diff --git a/features/kafka/producer/src/main/java/org/opennms/features/kafka/producer/OpennmsKafkaProducer.java b/features/kafka/producer/src/main/java/org/opennms/features/kafka/producer/OpennmsKafkaProducer.java\nindex 7f1cc1eec31..e24abe8ebea 100644\n--- a/features/kafka/producer/src/main/java/org/opennms/features/kafka/producer/OpennmsKafkaProducer.java\n+++ b/features/kafka/producer/src/main/java/org/opennms/features/kafka/producer/OpennmsKafkaProducer.java\n\n@@ -397,7 +397,7 @@ public class OpennmsKafkaProducer implements AlarmLifecycleListener, EventListen\n         }\n     }\n \n-    private void    processKafkaSendQueue() {\n+    private void processKafkaSendQueue() {\n         //noinspection InfiniteLoopStatement\n         while (true) {\n             try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4NDc0Mg==", "url": "https://github.com/OpenNMS/opennms/pull/3113#discussion_r470584742", "bodyText": "TODO: Implement or delete.", "author": "j-white", "createdAt": "2020-08-14T12:08:19Z", "path": "features/telemetry/itests/src/test/java/org/opennms/netmgt/telemetry/itests/OpenConfigAdapterIT.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.netmgt.telemetry.itests;\n+\n+public class OpenConfigAdapterIT {", "originalCommit": "f999c46a78314da09d8334cf9ba23394d3835ffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cb97dcf9d57be588baa8c9af223b339e70edbbb7", "chunk": "diff --git a/features/telemetry/itests/src/test/java/org/opennms/netmgt/telemetry/itests/OpenConfigAdapterIT.java b/features/telemetry/itests/src/test/java/org/opennms/netmgt/telemetry/itests/OpenConfigAdapterIT.java\ndeleted file mode 100644\nindex a6298d00dc4..00000000000\n--- a/features/telemetry/itests/src/test/java/org/opennms/netmgt/telemetry/itests/OpenConfigAdapterIT.java\n+++ /dev/null\n\n@@ -1,32 +0,0 @@\n-/*******************************************************************************\n- * This file is part of OpenNMS(R).\n- *\n- * Copyright (C) 2020 The OpenNMS Group, Inc.\n- * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Affero General Public License as published\n- * by the Free Software Foundation, either version 3 of the License,\n- * or (at your option) any later version.\n- *\n- * OpenNMS(R) is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU Affero General Public License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with OpenNMS(R).  If not, see:\n- *      http://www.gnu.org/licenses/\n- *\n- * For more information contact:\n- *     OpenNMS(R) Licensing <license@opennms.org>\n- *     http://www.opennms.org/\n- *     http://www.opennms.com/\n- *******************************************************************************/\n-\n-package org.opennms.netmgt.telemetry.itests;\n-\n-public class OpenConfigAdapterIT {\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4NjI3OA==", "url": "https://github.com/OpenNMS/opennms/pull/3113#discussion_r470586278", "bodyText": "TODO", "author": "j-white", "createdAt": "2020-08-14T12:11:47Z", "path": "opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DefaultFilterWatcher.java", "diffHunk": "@@ -0,0 +1,281 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.netmgt.dao.support;\n+\n+import java.io.Closeable;\n+import java.net.InetAddress;\n+import java.util.LinkedHashSet;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.Timer;\n+import java.util.TimerTask;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Consumer;\n+import java.util.stream.Collectors;\n+\n+import org.opennms.core.sysprops.SystemProperties;\n+import org.opennms.core.utils.StringUtils;\n+import org.opennms.netmgt.dao.api.FilterWatcher;\n+import org.opennms.netmgt.dao.api.ServiceRef;\n+import org.opennms.netmgt.dao.api.SessionUtils;\n+import org.opennms.netmgt.events.api.EventConstants;\n+import org.opennms.netmgt.events.api.annotations.EventHandler;\n+import org.opennms.netmgt.events.api.annotations.EventListener;\n+import org.opennms.netmgt.events.api.model.IEvent;\n+import org.opennms.netmgt.filter.api.FilterDao;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.DisposableBean;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+/**\n+ * TODO: Review/document concurrency model", "originalCommit": "f999c46a78314da09d8334cf9ba23394d3835ffd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dc7d13798c9d99132c8b8b49340f6f0e90c3b508", "chunk": "diff --git a/opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DefaultFilterWatcher.java b/opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DefaultFilterWatcher.java\nindex 820d744b8ec..be05e32e73b 100644\n--- a/opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DefaultFilterWatcher.java\n+++ b/opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DefaultFilterWatcher.java\n\n@@ -60,9 +60,6 @@ import org.springframework.beans.factory.DisposableBean;\n import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-/**\n- * TODO: Review/document concurrency model\n- */\n @EventListener(name = \"FilterWatcher\")\n public class DefaultFilterWatcher implements FilterWatcher, InitializingBean, DisposableBean {\n     private static final Logger LOG = LoggerFactory.getLogger(DefaultFilterWatcher.class);\n"}}, {"oid": "cb97dcf9d57be588baa8c9af223b339e70edbbb7", "url": "https://github.com/OpenNMS/opennms/commit/cb97dcf9d57be588baa8c9af223b339e70edbbb7", "message": "NMS-12729: More changes, Add end-to-end IT", "committedDate": "2020-08-14T13:20:32Z", "type": "commit"}, {"oid": "56548574701130dec9e9a327981d07edd914bc23", "url": "https://github.com/OpenNMS/opennms/commit/56548574701130dec9e9a327981d07edd914bc23", "message": "NMS-12729: Handle review comments", "committedDate": "2020-08-14T18:13:11Z", "type": "commit"}, {"oid": "1491eccaad113a25d911b687a83452f7572b24f1", "url": "https://github.com/OpenNMS/opennms/commit/1491eccaad113a25d911b687a83452f7572b24f1", "message": "NMS-12729: More doc changes\n[ci skip]", "committedDate": "2020-08-14T20:45:36Z", "type": "commit"}, {"oid": "dc7d13798c9d99132c8b8b49340f6f0e90c3b508", "url": "https://github.com/OpenNMS/opennms/commit/dc7d13798c9d99132c8b8b49340f6f0e90c3b508", "message": "review concurrency in the DefaultFilterWatcher", "committedDate": "2020-08-17T15:55:37Z", "type": "commit"}, {"oid": "d4999fe2b56b20bc28d9e4f5d54cff5f7d9fe414", "url": "https://github.com/OpenNMS/opennms/commit/d4999fe2b56b20bc28d9e4f5d54cff5f7d9fe414", "message": "Merge remote-tracking branch 'origin/develop' into features/openconfig", "committedDate": "2020-08-17T15:58:29Z", "type": "commit"}, {"oid": "0d041bdba1515f674219309eee8f69d16f90fedd", "url": "https://github.com/OpenNMS/opennms/commit/0d041bdba1515f674219309eee8f69d16f90fedd", "message": "NMS-12729: Address doc review comments", "committedDate": "2020-08-18T16:25:40Z", "type": "commit"}, {"oid": "a9789151baaf8ff054fce702e61a9ce9cbdbbbfc", "url": "https://github.com/OpenNMS/opennms/commit/a9789151baaf8ff054fce702e61a9ce9cbdbbbfc", "message": "NMS-12857: Add documentation for OpenConfig\n\nNMS-12857. Added some context docuementation around OpenConfig", "committedDate": "2020-08-18T19:28:31Z", "type": "commit"}, {"oid": "8795a97056e4b170471bd958ea60b4ed8ef8337a", "url": "https://github.com/OpenNMS/opennms/commit/8795a97056e4b170471bd958ea60b4ed8ef8337a", "message": "NMS-12857: Additions to the OpenConfig documentation\n\nNMS-12857: added info about OpenConfig to the documentation", "committedDate": "2020-08-19T15:20:29Z", "type": "commit"}, {"oid": "c5ccdc4869ca027a18f66ee10a7b77a2bacd0cac", "url": "https://github.com/OpenNMS/opennms/commit/c5ccdc4869ca027a18f66ee10a7b77a2bacd0cac", "message": "Merge pull request #3118 from OpenNMS/NMS-12857\n\nNMS-12857: Add documentation for OpenConfig feature", "committedDate": "2020-08-19T16:59:29Z", "type": "commit"}]}