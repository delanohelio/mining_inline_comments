{"pr_number": 3189, "pr_title": "NMS-12955: sFlow Ingress / Egress", "pr_createdAt": "2020-10-19T15:44:58Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/3189", "timeline": [{"oid": "52264d5963affc44d83720d3aa3b1ef680907d2e", "url": "https://github.com/OpenNMS/opennms/commit/52264d5963affc44d83720d3aa3b1ef680907d2e", "message": "add support for detecting direction of sflow packets", "committedDate": "2020-10-19T15:36:27Z", "type": "commit"}, {"oid": "24d18d6e71b11526d9f88157a7be38c9dfb21771", "url": "https://github.com/OpenNMS/opennms/commit/24d18d6e71b11526d9f88157a7be38c9dfb21771", "message": "Forgot the import", "committedDate": "2020-10-19T16:29:52Z", "type": "commit"}, {"oid": "c71b5926dc9d5175045d563c3d9891df66117527", "url": "https://github.com/OpenNMS/opennms/commit/c71b5926dc9d5175045d563c3d9891df66117527", "message": "Fix tests?", "committedDate": "2020-10-19T19:05:02Z", "type": "commit"}, {"oid": "0a2a7c7a8503034757001e16bb25bd399e081879", "url": "https://github.com/OpenNMS/opennms/commit/0a2a7c7a8503034757001e16bb25bd399e081879", "message": "Oops, remove these prints", "committedDate": "2020-10-19T19:07:51Z", "type": "commit"}, {"oid": "fd957c786a442737a958bdd2443a398b6af8bd2f", "url": "https://github.com/OpenNMS/opennms/commit/fd957c786a442737a958bdd2443a398b6af8bd2f", "message": "fix indentation", "committedDate": "2020-10-19T21:28:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMzc3Mg==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r515823772", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!getInt64(document, \"source_id\").equals(getInt64(document, \"input\")) &&\n          \n          \n            \n                        !getInt64(document, \"source_id\").equals(Optional.empty())) {\n          \n          \n            \n                        return Direction.EGRESS;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return Direction.INGRESS;\n          \n          \n            \n                    }\n          \n          \n            \n                    if (getInt64(document, \"source_id\").equals(getInt64(document, \"input\"))) {\n          \n          \n            \n                        return Direction.INGRESS;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return Direction.EGRESS;\n          \n          \n            \n                    }", "author": "fooker", "createdAt": "2020-11-02T09:00:32Z", "path": "features/telemetry/protocols/sflow/adapter/src/main/java/org/opennms/netmgt/telemetry/protocols/sflow/adapter/SFlow.java", "diffHunk": "@@ -92,7 +93,12 @@ public Long getBytes() {\n \n     @Override\n     public Direction getDirection() {\n-        return Direction.INGRESS;\n+        if (!getInt64(document, \"source_id\").equals(getInt64(document, \"input\")) &&\n+            !getInt64(document, \"source_id\").equals(Optional.empty())) {\n+            return Direction.EGRESS;\n+        } else {\n+            return Direction.INGRESS;\n+        }", "originalCommit": "fd957c786a442737a958bdd2443a398b6af8bd2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0NDU4Mw==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r516044583", "bodyText": "I did it this way because I only wanted to set egress on packets that specifically met the criteria, and let everything else be ingress (egress as the exception, ingress as the rule, i suppose).  I felt that better aligned with the current behavior of unconditionally marking everything as ingress.  I don't have a problem flipping the logic if that's what's preferred.", "author": "dino2gnt", "createdAt": "2020-11-02T15:19:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMzc3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMwNTIyMA==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r516305220", "bodyText": "There are two things that came to my mind:\n\nswitching the then and the else branches to get rid of some boolean inverts. But your explaination makes sens - if ingress is the default, keep it in the else branch.\nlooks like source_id is never empty (if there is a chance, using getInt64(...).isPresent() is a more appropriate way to check, btw.)", "author": "fooker", "createdAt": "2020-11-02T22:48:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMzc3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "80539d2f6df5818fd670f489005ea0c075ed7674", "chunk": "diff --git a/features/telemetry/protocols/sflow/adapter/src/main/java/org/opennms/netmgt/telemetry/protocols/sflow/adapter/SFlow.java b/features/telemetry/protocols/sflow/adapter/src/main/java/org/opennms/netmgt/telemetry/protocols/sflow/adapter/SFlow.java\nindex a1f6a597ac3..ead93be7cb5 100644\n--- a/features/telemetry/protocols/sflow/adapter/src/main/java/org/opennms/netmgt/telemetry/protocols/sflow/adapter/SFlow.java\n+++ b/features/telemetry/protocols/sflow/adapter/src/main/java/org/opennms/netmgt/telemetry/protocols/sflow/adapter/SFlow.java\n\n@@ -93,8 +94,13 @@ public class SFlow implements Flow {\n \n     @Override\n     public Direction getDirection() {\n-        if (!getInt64(document, \"source_id\").equals(getInt64(document, \"input\")) &&\n-            !getInt64(document, \"source_id\").equals(Optional.empty())) {\n+        final Optional<BsonValue> source = first(get(document, \"source_id\", \"source_id_index\"),\n+                get(document, \"source_id\"));\n+\n+        final Optional<BsonValue> input = first(get(document, \"input\", \"value\"),\n+                get(document, \"input\"));\n+\n+        if (source.isPresent() && input.isPresent() && !Objects.equals(source, input)) {\n             return Direction.EGRESS;\n         } else {\n             return Direction.INGRESS;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyNDA5Nw==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r515824097", "bodyText": "Indention", "author": "fooker", "createdAt": "2020-11-02T09:01:07Z", "path": "features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java", "diffHunk": "@@ -382,6 +406,20 @@ public void testSFlowHeader() {\n         Assert.assertEquals(null, sFlow.getTimestamp());\n     }\n \n+    @Test\n+    public void testIngress() {\n+        final BsonDocument bsonDocument = createDirectionIngress();\n+        final SFlow sFlow = new SFlow(SFLOW_HEADER, bsonDocument);\n+\tAssert.assertEquals(Flow.Direction.INGRESS, sFlow.getDirection());", "originalCommit": "fd957c786a442737a958bdd2443a398b6af8bd2f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "42fa018403f3e05502e0d12b20831f9d3e248afb", "chunk": "diff --git a/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java b/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java\nindex f938e4780fc..83725b96c57 100644\n--- a/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java\n+++ b/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java\n\n@@ -410,14 +410,14 @@ public class BsonDocumentTest implements SampleDatagramEnrichment {\n     public void testIngress() {\n         final BsonDocument bsonDocument = createDirectionIngress();\n         final SFlow sFlow = new SFlow(SFLOW_HEADER, bsonDocument);\n-\tAssert.assertEquals(Flow.Direction.INGRESS, sFlow.getDirection());\n+        Assert.assertEquals(Flow.Direction.INGRESS, sFlow.getDirection());\n     }\n \n     @Test\n     public void testEgress() {\n         final BsonDocument bsonDocument = createDirectionEgress();\n         final SFlow sFlow = new SFlow(SFLOW_HEADER, bsonDocument);\n-\tAssert.assertEquals(Flow.Direction.EGRESS, sFlow.getDirection());\n+        Assert.assertEquals(Flow.Direction.EGRESS, sFlow.getDirection());\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyNDEyOA==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r515824128", "bodyText": "Indention", "author": "fooker", "createdAt": "2020-11-02T09:01:12Z", "path": "features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java", "diffHunk": "@@ -382,6 +406,20 @@ public void testSFlowHeader() {\n         Assert.assertEquals(null, sFlow.getTimestamp());\n     }\n \n+    @Test\n+    public void testIngress() {\n+        final BsonDocument bsonDocument = createDirectionIngress();\n+        final SFlow sFlow = new SFlow(SFLOW_HEADER, bsonDocument);\n+\tAssert.assertEquals(Flow.Direction.INGRESS, sFlow.getDirection());\n+    }\n+\n+    @Test\n+    public void testEgress() {\n+        final BsonDocument bsonDocument = createDirectionEgress();\n+        final SFlow sFlow = new SFlow(SFLOW_HEADER, bsonDocument);\n+\tAssert.assertEquals(Flow.Direction.EGRESS, sFlow.getDirection());", "originalCommit": "fd957c786a442737a958bdd2443a398b6af8bd2f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "42fa018403f3e05502e0d12b20831f9d3e248afb", "chunk": "diff --git a/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java b/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java\nindex f938e4780fc..83725b96c57 100644\n--- a/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java\n+++ b/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java\n\n@@ -410,14 +410,14 @@ public class BsonDocumentTest implements SampleDatagramEnrichment {\n     public void testIngress() {\n         final BsonDocument bsonDocument = createDirectionIngress();\n         final SFlow sFlow = new SFlow(SFLOW_HEADER, bsonDocument);\n-\tAssert.assertEquals(Flow.Direction.INGRESS, sFlow.getDirection());\n+        Assert.assertEquals(Flow.Direction.INGRESS, sFlow.getDirection());\n     }\n \n     @Test\n     public void testEgress() {\n         final BsonDocument bsonDocument = createDirectionEgress();\n         final SFlow sFlow = new SFlow(SFLOW_HEADER, bsonDocument);\n-\tAssert.assertEquals(Flow.Direction.EGRESS, sFlow.getDirection());\n+        Assert.assertEquals(Flow.Direction.EGRESS, sFlow.getDirection());\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyNTE1NQ==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r515825155", "bodyText": "If only called once, just inline these methods", "author": "fooker", "createdAt": "2020-11-02T09:03:00Z", "path": "features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java", "diffHunk": "@@ -198,6 +198,30 @@ private BsonDocument createExtendedGateway() {\n         return bsonDocument;\n     }\n \n+    private BsonDocument createDirectionIngress() {", "originalCommit": "fd957c786a442737a958bdd2443a398b6af8bd2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0NzAwNA==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r516047004", "bodyText": "I don't actually know what that means :)  I am not a Java developer in any sense.", "author": "dino2gnt", "createdAt": "2020-11-02T15:23:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyNTE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzMjEwMA==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r516232100", "bodyText": "don't bother making a little function to return the thing, just use the thing", "author": "RangerRick", "createdAt": "2020-11-02T20:21:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyNTE1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "e3fe0405441701eacb92083ce254dfb25fe8d66f", "chunk": "diff --git a/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java b/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java\nindex f938e4780fc..3c29e9d3da1 100644\n--- a/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java\n+++ b/features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java\n\n@@ -198,30 +198,6 @@ public class BsonDocumentTest implements SampleDatagramEnrichment {\n         return bsonDocument;\n     }\n \n-    private BsonDocument createDirectionIngress() {\n-        final Inet4Header inet4Header = new Inet4Header(TOS, LENGTH, PROTOCOL, (Inet4Address) InetAddressUtils.addr(SRC_IPV4_STR), (Inet4Address) InetAddressUtils.addr(DST_IPV4_STR), SRC_PORT, DST_PORT, TCP_FLAGS);\n-        final EthernetHeader ethernetHeader = new EthernetHeader(SRC_VLAN, inet4Header, null, null);\n-        final SampledHeader flowData = new SampledHeader(HeaderProtocol.IPv4, 1100, 1000, ethernetHeader, inet4Header, null, null);\n-        final FlowRecord flowRecord = new FlowRecord(Record.DataFormat.from(0, 1), new Opaque<FlowData>(1, flowData));\n-        final FlowSample flowSample = new FlowSample(1, new SFlowDataSource(101), 2, 3, 4, new Interface(INPUT), new Interface(OUTPUT), new Array<FlowRecord>(1, Arrays.<FlowRecord>asList(flowRecord)));\n-        final BsonDocument bsonDocument = new BsonDocument();\n-        final BsonDocumentWriter bsonDocumentWriter = new BsonDocumentWriter(bsonDocument);\n-        flowSample.writeBson(bsonDocumentWriter, this);\n-        return bsonDocument;\n-    }\n-\n-    private BsonDocument createDirectionEgress() {\n-        final Inet4Header inet4Header = new Inet4Header(TOS, LENGTH, PROTOCOL, (Inet4Address) InetAddressUtils.addr(SRC_IPV4_STR), (Inet4Address) InetAddressUtils.addr(DST_IPV4_STR), SRC_PORT, DST_PORT, TCP_FLAGS);\n-        final EthernetHeader ethernetHeader = new EthernetHeader(SRC_VLAN, inet4Header, null, null);\n-        final SampledHeader flowData = new SampledHeader(HeaderProtocol.IPv4, 1100, 1000, ethernetHeader, inet4Header, null, null);\n-        final FlowRecord flowRecord = new FlowRecord(Record.DataFormat.from(0, 1), new Opaque<FlowData>(1, flowData));\n-        final FlowSample flowSample = new FlowSample(1, new SFlowDataSource(999), 2, 3, 4, new Interface(INPUT), new Interface(OUTPUT), new Array<FlowRecord>(1, Arrays.<FlowRecord>asList(flowRecord)));\n-        final BsonDocument bsonDocument = new BsonDocument();\n-        final BsonDocumentWriter bsonDocumentWriter = new BsonDocumentWriter(bsonDocument);\n-        flowSample.writeBson(bsonDocumentWriter, this);\n-        return bsonDocument;\n-    }\n-\n     /**\n      * These tests assure, that the test flow data is really at the right spot in the BsonDocument's structure.\n      */\n"}}, {"oid": "42fa018403f3e05502e0d12b20831f9d3e248afb", "url": "https://github.com/OpenNMS/opennms/commit/42fa018403f3e05502e0d12b20831f9d3e248afb", "message": "fix indentation", "committedDate": "2020-11-02T15:39:59Z", "type": "commit"}, {"oid": "e3fe0405441701eacb92083ce254dfb25fe8d66f", "url": "https://github.com/OpenNMS/opennms/commit/e3fe0405441701eacb92083ce254dfb25fe8d66f", "message": "inlining per PR feedback", "committedDate": "2020-11-02T21:30:41Z", "type": "commit"}, {"oid": "80539d2f6df5818fd670f489005ea0c075ed7674", "url": "https://github.com/OpenNMS/opennms/commit/80539d2f6df5818fd670f489005ea0c075ed7674", "message": "further refinement after discussion with Dustin", "committedDate": "2020-11-03T21:51:36Z", "type": "commit"}, {"oid": "fe15173190a14b7b3bc9d4dd5deb6412c8e2c396", "url": "https://github.com/OpenNMS/opennms/commit/fe15173190a14b7b3bc9d4dd5deb6412c8e2c396", "message": "this import is no longer needed", "committedDate": "2020-11-03T21:54:39Z", "type": "commit"}]}