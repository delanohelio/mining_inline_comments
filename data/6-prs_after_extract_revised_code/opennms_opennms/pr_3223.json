{"pr_number": 3223, "pr_title": "NMS-13015: Fix NPE while dequeing", "pr_createdAt": "2020-11-24T20:28:52Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/3223", "timeline": [{"oid": "0a809ccd729f46a72d380d905e79db97cdfd2bc4", "url": "https://github.com/OpenNMS/opennms/commit/0a809ccd729f46a72d380d905e79db97cdfd2bc4", "message": "NMS-13015: Fix NPE when dequeing", "committedDate": "2020-11-24T20:26:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxNTI4Ng==", "url": "https://github.com/OpenNMS/opennms/pull/3223#discussion_r529915286", "bodyText": "I guess this should only be the case when the result from enqueuing was deferred so we did not persist a latch to track it. I wonder why the above condition on line 224 wasn't written to handle this originally. Hope we are not missing anything, been a while since I looked at this.", "author": "mattixtech", "createdAt": "2020-11-24T22:02:56Z", "path": "core/ipc/sink/common/src/main/java/org/opennms/core/ipc/sink/common/AsyncDispatcherImpl.java", "diffHunk": "@@ -224,8 +224,10 @@ void enqueue(T message, String key, Consumer<DispatchQueue.EnqueueResult> onEnqu\n             if (messageEntry.getKey() == null) {\n                 return messageEntry;\n             }\n-\n-            resultRecordedMap.remove(messageEntry.getKey()).await();\n+            CountDownLatch resultRecorded = resultRecordedMap.remove(messageEntry.getKey());\n+            if(resultRecorded != null) {\n+                resultRecorded.await();\n+            }", "originalCommit": "0a809ccd729f46a72d380d905e79db97cdfd2bc4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk4NjE1OA==", "url": "https://github.com/OpenNMS/opennms/pull/3223#discussion_r529986158", "bodyText": "yeah, DEFERRED seems to be the one case this could happen. Think this is corner case when default Offheap Queue fills up.", "author": "cgorantla", "createdAt": "2020-11-24T23:11:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxNTI4Ng=="}], "type": "inlineReview", "revised_code": null}]}