{"pr_number": 3073, "pr_title": "NMS-12792: Add outages for remote poller status changes", "pr_createdAt": "2020-07-20T07:53:25Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/3073", "timeline": [{"oid": "5fc173849efc0c4e9999eebd5340691bcceda395", "url": "https://github.com/OpenNMS/opennms/commit/5fc173849efc0c4e9999eebd5340691bcceda395", "message": "NMS-12792: Creating outages for remote poller status changes", "committedDate": "2020-07-08T17:31:30Z", "type": "commit"}, {"oid": "cf8bb34208cbce3b30d6f696d1da294546c57961", "url": "https://github.com/OpenNMS/opennms/commit/cf8bb34208cbce3b30d6f696d1da294546c57961", "message": "NMS-12792: Fixing tests", "committedDate": "2020-07-08T18:19:38Z", "type": "commit"}, {"oid": "f83b08248e1d91027d9b4c218e750e33a93136d1", "url": "https://github.com/OpenNMS/opennms/commit/f83b08248e1d91027d9b4c218e750e33a93136d1", "message": "NMS-12792: Fixing tests", "committedDate": "2020-07-08T19:55:28Z", "type": "commit"}, {"oid": "bd0ede94756b65087508616335dfcc21ad6338e7", "url": "https://github.com/OpenNMS/opennms/commit/bd0ede94756b65087508616335dfcc21ad6338e7", "message": "NMS-12792: Fixed AuthorizationIT", "committedDate": "2020-07-09T08:27:33Z", "type": "commit"}, {"oid": "c47efb46a39f603255f5b7654eed33372558d403", "url": "https://github.com/OpenNMS/opennms/commit/c47efb46a39f603255f5b7654eed33372558d403", "message": "NMS-12792: Fixed OutageRestServiceIT", "committedDate": "2020-07-09T09:10:10Z", "type": "commit"}, {"oid": "1c9b150516167443e3d203f78c4d7fc1d71a8f86", "url": "https://github.com/OpenNMS/opennms/commit/1c9b150516167443e3d203f78c4d7fc1d71a8f86", "message": "NMS-12792: Fixed EventconfFactoryIT", "committedDate": "2020-07-09T09:14:12Z", "type": "commit"}, {"oid": "ef02a854fd821b7adffa62eecd0cae62f1be3d77", "url": "https://github.com/OpenNMS/opennms/commit/ef02a854fd821b7adffa62eecd0cae62f1be3d77", "message": "NMS-12792: Fixed OnmsOutageTest", "committedDate": "2020-07-09T09:21:53Z", "type": "commit"}, {"oid": "d1655742163465b17670e68699645f1406eddbd8", "url": "https://github.com/OpenNMS/opennms/commit/d1655742163465b17670e68699645f1406eddbd8", "message": "NMS-12792: Ignore failing DefaultResourceDaoTest tests for now", "committedDate": "2020-07-09T09:26:47Z", "type": "commit"}, {"oid": "50e50ce9c1df66cfa164e37659a7e76c137a5b1c", "url": "https://github.com/OpenNMS/opennms/commit/50e50ce9c1df66cfa164e37659a7e76c137a5b1c", "message": "NMS-12792: Send events on outage creation and resolution", "committedDate": "2020-07-09T12:42:40Z", "type": "commit"}, {"oid": "61a1141d4609b87a15175eb55c61bb31663e1dab", "url": "https://github.com/OpenNMS/opennms/commit/61a1141d4609b87a15175eb55c61bb31663e1dab", "message": "NMS-12792: Fixed AvailabilityDatabasePopulatorIT", "committedDate": "2020-07-09T15:15:17Z", "type": "commit"}, {"oid": "ec36aad45dd16b099cc6bc2e71e1b5be282abefe", "url": "https://github.com/OpenNMS/opennms/commit/ec36aad45dd16b099cc6bc2e71e1b5be282abefe", "message": "NMS-12792: Fixed liquibase changelog", "committedDate": "2020-07-10T07:49:28Z", "type": "commit"}, {"oid": "7a615ba6990f63540da002b438db21fc9d29a04e", "url": "https://github.com/OpenNMS/opennms/commit/7a615ba6990f63540da002b438db21fc9d29a04e", "message": "NMS-12792: Changed OutageDaoHibernate", "committedDate": "2020-07-10T07:53:12Z", "type": "commit"}, {"oid": "8e9803164ee1c02465e81f954fa85829cac8b989", "url": "https://github.com/OpenNMS/opennms/commit/8e9803164ee1c02465e81f954fa85829cac8b989", "message": "NMS-12792: Fixed MigratorIT", "committedDate": "2020-07-12T09:32:40Z", "type": "commit"}, {"oid": "e7c85c0fdd896900903f450eb8e844e4b493f5a6", "url": "https://github.com/OpenNMS/opennms/commit/e7c85c0fdd896900903f450eb8e844e4b493f5a6", "message": "NMS-12792: Fixed AuthorizationIT", "committedDate": "2020-07-14T15:57:09Z", "type": "commit"}, {"oid": "ac9a29dfef0632c2dd8f9a96bcaa7f5a28db489c", "url": "https://github.com/OpenNMS/opennms/commit/ac9a29dfef0632c2dd8f9a96bcaa7f5a28db489c", "message": "NMS-12792: Ignoring some tests for now", "committedDate": "2020-07-15T06:46:12Z", "type": "commit"}, {"oid": "08931ad57204d71a898c89dfe26dce469f80c2dd", "url": "https://github.com/OpenNMS/opennms/commit/08931ad57204d71a898c89dfe26dce469f80c2dd", "message": "NMS-12792: Fixed OutageRestServiceIT", "committedDate": "2020-07-15T06:49:40Z", "type": "commit"}, {"oid": "329808e93b0ac572d8ab08bd513046ae3662ca71", "url": "https://github.com/OpenNMS/opennms/commit/329808e93b0ac572d8ab08bd513046ae3662ca71", "message": "NMS-12792: Fixed DaoWebOutageRepository/WebOutageRepositoryFilterIT", "committedDate": "2020-07-15T06:54:26Z", "type": "commit"}, {"oid": "ba14c0d32363d3981e827dd3f67f567a4ece07a6", "url": "https://github.com/OpenNMS/opennms/commit/ba14c0d32363d3981e827dd3f67f567a4ece07a6", "message": "NMS-12792: Fixed trend configuration", "committedDate": "2020-07-16T08:22:58Z", "type": "commit"}, {"oid": "e7e3afd9e21eaefa4e96c51fd80ee97d541c060b", "url": "https://github.com/OpenNMS/opennms/commit/e7e3afd9e21eaefa4e96c51fd80ee97d541c060b", "message": "NMS-12792: Fixed reports", "committedDate": "2020-07-16T08:24:49Z", "type": "commit"}, {"oid": "6985085838c34cbbf1b5a3d94698043f918c3fb5", "url": "https://github.com/OpenNMS/opennms/commit/6985085838c34cbbf1b5a3d94698043f918c3fb5", "message": "NMS-12792: Fixed charts configuration", "committedDate": "2020-07-16T08:27:26Z", "type": "commit"}, {"oid": "10244099a07b1de1470f736d42e15c9af8bc518e", "url": "https://github.com/OpenNMS/opennms/commit/10244099a07b1de1470f736d42e15c9af8bc518e", "message": "NMS-12792: Fixed PL/SQL function", "committedDate": "2020-07-16T08:28:57Z", "type": "commit"}, {"oid": "a16076ffa6cd1f5d612416df0937270d8d4b477a", "url": "https://github.com/OpenNMS/opennms/commit/a16076ffa6cd1f5d612416df0937270d8d4b477a", "message": "NMS-12792: Fixed views to include the perspective", "committedDate": "2020-07-16T09:55:01Z", "type": "commit"}, {"oid": "3dbd7e9f4cd122893e69a248a5ad78baa56f0424", "url": "https://github.com/OpenNMS/opennms/commit/3dbd7e9f4cd122893e69a248a5ad78baa56f0424", "message": "NMS-12792: Fixed PassiveStatusKeeper", "committedDate": "2020-07-17T06:55:20Z", "type": "commit"}, {"oid": "fc410b183ab0c2d7d2f295bb631da802013c7aaa", "url": "https://github.com/OpenNMS/opennms/commit/fc410b183ab0c2d7d2f295bb631da802013c7aaa", "message": "NMS-12792: Fixed OutageFactory and OutageModel", "committedDate": "2020-07-17T06:56:06Z", "type": "commit"}, {"oid": "3c6a448d4ee0ad8e64ead986f19ebacb1df169e0", "url": "https://github.com/OpenNMS/opennms/commit/3c6a448d4ee0ad8e64ead986f19ebacb1df169e0", "message": "NMS-12792: Fixed some poller tests", "committedDate": "2020-07-17T06:56:51Z", "type": "commit"}, {"oid": "39988260a3975dd4c66c4f1de0fffe7a854d2179", "url": "https://github.com/OpenNMS/opennms/commit/39988260a3975dd4c66c4f1de0fffe7a854d2179", "message": "NMS-12792: Some more fixes", "committedDate": "2020-07-17T06:57:25Z", "type": "commit"}, {"oid": "aafccd8289b7cce1f53f14695187103c05081614", "url": "https://github.com/OpenNMS/opennms/commit/aafccd8289b7cce1f53f14695187103c05081614", "message": "NMS-12792: Some more fixes", "committedDate": "2020-07-20T07:39:59Z", "type": "commit"}, {"oid": "1fa45007cadebcabaa987758740ea1bc13578678", "url": "https://github.com/OpenNMS/opennms/commit/1fa45007cadebcabaa987758740ea1bc13578678", "message": "NMS-12792: Fixed event handling", "committedDate": "2020-07-22T14:58:25Z", "type": "forcePushed"}, {"oid": "cdbf2c5411dac8a4aa2d048901b11cd650c4261d", "url": "https://github.com/OpenNMS/opennms/commit/cdbf2c5411dac8a4aa2d048901b11cd650c4261d", "message": "NMS-12792: Fixed event handling", "committedDate": "2020-07-22T14:58:59Z", "type": "commit"}, {"oid": "cdbf2c5411dac8a4aa2d048901b11cd650c4261d", "url": "https://github.com/OpenNMS/opennms/commit/cdbf2c5411dac8a4aa2d048901b11cd650c4261d", "message": "NMS-12792: Fixed event handling", "committedDate": "2020-07-22T14:58:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNDUyMA==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459314520", "bodyText": "Formatting", "author": "fooker", "createdAt": "2020-07-23T09:10:37Z", "path": "opennms-webapp/src/main/java/org/opennms/web/outage/OutageModel.java", "diffHunk": "@@ -88,7 +88,8 @@\n             \t\t\"       on node.nodeid = ipinterface.nodeid \\n\" + \n             \t\t\"    join service \\n\" + \n             \t\t\"      on ifservices.serviceid = service.serviceid \\n\" + \n-            \t\t\"   where node.nodeid = ? \\n\" + \n+            \t\t\"   where node.nodeid = ? \\n\" +\n+                    \"     and outages.perspective is null \\n\" +", "originalCommit": "cdbf2c5411dac8a4aa2d048901b11cd650c4261d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM2NzQyMg==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459367422", "bodyText": "done", "author": "christianpape", "createdAt": "2020-07-23T10:55:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNDUyMA=="}], "type": "inlineReview", "revised_code": {"commit": "eb3e8e9cc9363c2998fc759041a067f61370294e", "chunk": "diff --git a/opennms-webapp/src/main/java/org/opennms/web/outage/OutageModel.java b/opennms-webapp/src/main/java/org/opennms/web/outage/OutageModel.java\nindex 2da65336a79..abd83e08f9f 100644\n--- a/opennms-webapp/src/main/java/org/opennms/web/outage/OutageModel.java\n+++ b/opennms-webapp/src/main/java/org/opennms/web/outage/OutageModel.java\n\n@@ -89,7 +89,7 @@ public abstract class OutageModel {\n             \t\t\"    join service \\n\" + \n             \t\t\"      on ifservices.serviceid = service.serviceid \\n\" + \n             \t\t\"   where node.nodeid = ? \\n\" +\n-                    \"     and outages.perspective is null \\n\" +\n+            \t\t\"     and outages.perspective is null \\n\" +\n             \t\t\"     and outages.ifregainedservice is null \\n\" + \n             \t\t\"     and outages.suppresstime is null \\n\" + \n             \t\t\"      or outages.suppresstime < now() \\n\" + \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNDk0OQ==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459314949", "bodyText": "Please add an TODO cpape so we can find it later on", "author": "fooker", "createdAt": "2020-07-23T09:11:23Z", "path": "opennms-webapp/src/test/java/org/opennms/web/svclayer/support/DefaultDistributedStatusServiceTest.java", "diffHunk": "@@ -79,6 +80,10 @@\n import junit.framework.AssertionFailedError;\n import junit.framework.TestCase;\n \n+/**\n+ * Ignore for now, since the remote poller with minion stuff is still in development\n+ */\n+@Ignore", "originalCommit": "cdbf2c5411dac8a4aa2d048901b11cd650c4261d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM2NzkzNg==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459367936", "bodyText": "done", "author": "christianpape", "createdAt": "2020-07-23T10:56:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNDk0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "097b4d5d98c88d2b1839c9c9a505fa8dac4e27df", "chunk": "diff --git a/opennms-webapp/src/test/java/org/opennms/web/svclayer/support/DefaultDistributedStatusServiceTest.java b/opennms-webapp/src/test/java/org/opennms/web/svclayer/support/DefaultDistributedStatusServiceTest.java\nindex fd2c0a41da5..f61fcfac370 100644\n--- a/opennms-webapp/src/test/java/org/opennms/web/svclayer/support/DefaultDistributedStatusServiceTest.java\n+++ b/opennms-webapp/src/test/java/org/opennms/web/svclayer/support/DefaultDistributedStatusServiceTest.java\n\n@@ -81,7 +81,7 @@ import junit.framework.AssertionFailedError;\n import junit.framework.TestCase;\n \n /**\n- * Ignore for now, since the remote poller with minion stuff is still in development\n+ * TODO: Ignore for now, since the remote poller with minion stuff is still in development\n  */\n @Ignore\n public class DefaultDistributedStatusServiceTest extends TestCase {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNTI2NA==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459315264", "bodyText": "Please add an TODO cpape so we can find this later on.", "author": "fooker", "createdAt": "2020-07-23T09:11:57Z", "path": "opennms-webapp-rest/src/test/java/org/opennms/web/rest/v1/RemotePollerAvailabilityRestServiceIT.java", "diffHunk": "@@ -87,6 +88,10 @@\n @JUnitConfigurationEnvironment\n @JUnitTemporaryDatabase\n @Transactional\n+/**\n+ * Ignore for now, since the remote poller with minion stuff is still in development\n+ */\n+@Ignore", "originalCommit": "cdbf2c5411dac8a4aa2d048901b11cd650c4261d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM2ODAyMw==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459368023", "bodyText": "done", "author": "christianpape", "createdAt": "2020-07-23T10:56:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNTI2NA=="}], "type": "inlineReview", "revised_code": {"commit": "097b4d5d98c88d2b1839c9c9a505fa8dac4e27df", "chunk": "diff --git a/opennms-webapp-rest/src/test/java/org/opennms/web/rest/v1/RemotePollerAvailabilityRestServiceIT.java b/opennms-webapp-rest/src/test/java/org/opennms/web/rest/v1/RemotePollerAvailabilityRestServiceIT.java\nindex 4cc5cc0a00f..321428881ea 100644\n--- a/opennms-webapp-rest/src/test/java/org/opennms/web/rest/v1/RemotePollerAvailabilityRestServiceIT.java\n+++ b/opennms-webapp-rest/src/test/java/org/opennms/web/rest/v1/RemotePollerAvailabilityRestServiceIT.java\n\n@@ -89,7 +89,7 @@ import org.springframework.transaction.support.TransactionTemplate;\n @JUnitTemporaryDatabase\n @Transactional\n /**\n- * Ignore for now, since the remote poller with minion stuff is still in development\n+ * TODO: Ignore for now, since the remote poller with minion stuff is still in development\n  */\n @Ignore\n public class RemotePollerAvailabilityRestServiceIT extends AbstractSpringJerseyRestTestCase {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNTg0OA==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459315848", "bodyText": "Maybe that is more of kind trace", "author": "fooker", "createdAt": "2020-07-23T09:13:03Z", "path": "opennms-services/src/main/java/org/opennms/netmgt/rtc/DataUpdater.java", "diffHunk": "@@ -218,11 +218,17 @@ private void handleNodeCategoryMembershipChanged(int nodeid) {\n     private void processEvent() {\n \n         if (m_event == null) {\n-\n             LOG.debug(\"Event is null, nothing to process\");\n             return;\n         }\n \n+        final boolean isPerspectiveNull = m_event.getParm(\"perspective\") == null ? true : m_event.getParm(\"perspective\").getValue() == null;\n+\n+        if (!isPerspectiveNull) {\n+            LOG.debug(\"Event's perspective is not null, nothing to process\");", "originalCommit": "cdbf2c5411dac8a4aa2d048901b11cd650c4261d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM2ODQxMQ==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459368411", "bodyText": "done", "author": "christianpape", "createdAt": "2020-07-23T10:57:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNTg0OA=="}], "type": "inlineReview", "revised_code": {"commit": "5f16dcdd2b3baaf059c239b815c71863d8f9671a", "chunk": "diff --git a/opennms-services/src/main/java/org/opennms/netmgt/rtc/DataUpdater.java b/opennms-services/src/main/java/org/opennms/netmgt/rtc/DataUpdater.java\nindex 3e9d052fbc5..044acec4c9e 100644\n--- a/opennms-services/src/main/java/org/opennms/netmgt/rtc/DataUpdater.java\n+++ b/opennms-services/src/main/java/org/opennms/netmgt/rtc/DataUpdater.java\n\n@@ -225,7 +225,7 @@ final class DataUpdater implements Runnable {\n         final boolean isPerspectiveNull = m_event.getParm(\"perspective\") == null ? true : m_event.getParm(\"perspective\").getValue() == null;\n \n         if (!isPerspectiveNull) {\n-            LOG.debug(\"Event's perspective is not null, nothing to process\");\n+            LOG.trace(\"Event's perspective is not null, nothing to process\");\n             return;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNjIwMw==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459316203", "bodyText": "Please add an TODO cpape so we can find this later on.", "author": "fooker", "createdAt": "2020-07-23T09:13:49Z", "path": "opennms-dao/src/test/java/org/opennms/netmgt/dao/support/DefaultResourceDaoTest.java", "diffHunk": "@@ -268,6 +269,10 @@ public void testGetTopLevelResourceDomainDoesNotExistInCollectdConfig() {\n         assertNull(\"Resource should be null\", resource);\n     }\n \n+    /**\n+     * Rewrite of RmotePoller is still in progress, so ignore this one for now.\n+     */\n+    @Ignore", "originalCommit": "cdbf2c5411dac8a4aa2d048901b11cd650c4261d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM2ODc3Mw==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459368773", "bodyText": "done", "author": "christianpape", "createdAt": "2020-07-23T10:58:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNjIwMw=="}], "type": "inlineReview", "revised_code": {"commit": "097b4d5d98c88d2b1839c9c9a505fa8dac4e27df", "chunk": "diff --git a/opennms-dao/src/test/java/org/opennms/netmgt/dao/support/DefaultResourceDaoTest.java b/opennms-dao/src/test/java/org/opennms/netmgt/dao/support/DefaultResourceDaoTest.java\nindex 9dbf96db4ac..c647c80506c 100644\n--- a/opennms-dao/src/test/java/org/opennms/netmgt/dao/support/DefaultResourceDaoTest.java\n+++ b/opennms-dao/src/test/java/org/opennms/netmgt/dao/support/DefaultResourceDaoTest.java\n\n@@ -270,7 +270,7 @@ public class DefaultResourceDaoTest {\n     }\n \n     /**\n-     * Rewrite of RmotePoller is still in progress, so ignore this one for now.\n+     * TODO: Rewrite of RmotePoller is still in progress, so ignore this one for now.\n      */\n     @Ignore\n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNjI1Mg==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459316252", "bodyText": "Please add an TODO cpape so we can find this later on.", "author": "fooker", "createdAt": "2020-07-23T09:13:55Z", "path": "opennms-dao/src/test/java/org/opennms/netmgt/dao/support/DefaultResourceDaoTest.java", "diffHunk": "@@ -342,6 +347,10 @@ public void testFindNodeResourcesWithResponseTime() throws Exception {\n         assertEquals(\"resource list size\", 1, resources.size());\n     }\n \n+    /**\n+     * Rewrite of RmotePoller is still in progress, so ignore this one for now.\n+     */\n+    @Ignore", "originalCommit": "cdbf2c5411dac8a4aa2d048901b11cd650c4261d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM2ODgzMw==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459368833", "bodyText": "done", "author": "christianpape", "createdAt": "2020-07-23T10:58:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNjI1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "097b4d5d98c88d2b1839c9c9a505fa8dac4e27df", "chunk": "diff --git a/opennms-dao/src/test/java/org/opennms/netmgt/dao/support/DefaultResourceDaoTest.java b/opennms-dao/src/test/java/org/opennms/netmgt/dao/support/DefaultResourceDaoTest.java\nindex 9dbf96db4ac..c647c80506c 100644\n--- a/opennms-dao/src/test/java/org/opennms/netmgt/dao/support/DefaultResourceDaoTest.java\n+++ b/opennms-dao/src/test/java/org/opennms/netmgt/dao/support/DefaultResourceDaoTest.java\n\n@@ -348,7 +348,7 @@ public class DefaultResourceDaoTest {\n     }\n \n     /**\n-     * Rewrite of RmotePoller is still in progress, so ignore this one for now.\n+     * TODO: Rewrite of RmotePoller is still in progress, so ignore this one for now.\n      */\n     @Ignore\n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNzQxMw==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459317413", "bodyText": "It seems a bit strange to react to an event which is created by the same class. Any reason why we create the outage by reacting to the event instead of creating it directly when we create the event? This would safe a lot of event parameter handling and checking.", "author": "fooker", "createdAt": "2020-07-23T09:16:06Z", "path": "features/remotepollerng/daemon/src/main/java/org/opennms/netmgt/remotepollerng/RemotePollerd.java", "diffHunk": "@@ -508,4 +522,63 @@ public void reloadDaemonConfigForLocation(final IEvent e) {\n             }\n         }\n     }\n+\n+    @EventHandler(uei = EventConstants.REMOTE_NODE_LOST_SERVICE_UEI)\n+    public void handleRemoteNodeLostService(final IEvent e) {\n+        if (e.hasNodeid() && e.getInterfaceAddress() != null && e.getService() != null && e.getParm(\"perspective\") != null) {\n+            final OnmsEvent onmsEvent = eventDao.get(e.getDbid());\n+            final OnmsMonitoredService service = monSvcDao.get(onmsEvent.getNodeId(), onmsEvent.getIpAddr(), onmsEvent.getServiceType().getId());\n+            final OnmsMonitoringLocation perspective = monitoringLocationDao.get(e.getParm(\"perspective\").getValue().getContent());\n+            final OnmsOutage onmsOutage = new OnmsOutage(onmsEvent.getEventCreateTime(), onmsEvent, service);\n+            onmsOutage.setPerspective(perspective);\n+            outageDao.save(onmsOutage);\n+\n+            final Event outageEvent = new EventBuilder(EventConstants.OUTAGE_CREATED_EVENT_UEI, \"RemotePollerd\")\n+                    .setNodeid(onmsEvent.getNodeId())\n+                    .setService(service.getServiceName())\n+                    .setTime(onmsEvent.getEventCreateTime())\n+                    .setParam(\"perspective\", perspective.getLocationName())\n+                    .getEvent();\n+            eventForwarder.sendNow(outageEvent);\n+        } else {\n+            LOG.warn(\"Received incomplete {} event: {}\", EventConstants.REMOTE_NODE_LOST_SERVICE_UEI, e);\n+        }\n+    }\n+\n+    @EventHandler(uei = EventConstants.REMOTE_NODE_REGAINED_SERVICE_UEI)\n+    public void handleRemoteNodeGainedService(final IEvent e) {\n+        if (e.hasNodeid() && e.getInterfaceAddress() != null && e.getService() != null && e.getParm(\"perspective\") != null) {\n+            final OnmsEvent onmsEvent = eventDao.get(e.getDbid());\n+            final OnmsMonitoredService service = monSvcDao.get(onmsEvent.getNodeId(), onmsEvent.getIpAddr(), onmsEvent.getServiceType().getId());\n+            final OnmsMonitoringLocation perspective = monitoringLocationDao.get(e.getParm(\"perspective\").getValue().getContent());\n+\n+            final Criteria criteria = new CriteriaBuilder(OnmsOutage.class)\n+                    .eq(\"perspective\", perspective)\n+                    .isNull(\"serviceRegainedEvent\")\n+                    .isNull(\"ifRegainedService\")\n+                    .eq(\"monitoredService\", service).toCriteria();\n+\n+            final List<OnmsOutage> onmsOutages = outageDao.findMatching(criteria);\n+\n+            if (onmsOutages.size() == 1) {\n+                final OnmsOutage onmsOutage = onmsOutages.get(0);\n+                onmsOutage.setIfRegainedService(onmsEvent.getEventCreateTime());\n+                onmsOutage.setServiceRegainedEvent(onmsEvent);\n+                outageDao.update(onmsOutage);\n+\n+                final Event outageEvent = new EventBuilder(EventConstants.OUTAGE_RESOLVED_EVENT_UEI, \"RemotePollerd\")\n+                        .setNodeid(onmsEvent.getNodeId())\n+                        .setService(service.getServiceName())\n+                        .setTime(onmsEvent.getEventCreateTime())\n+                        .setParam(\"perspective\", perspective.getLocationName())\n+                        .getEvent();\n+                eventForwarder.sendNow(outageEvent);\n+            } else {\n+                LOG.warn(\"Found more than one outages for {} event: {}\", EventConstants.REMOTE_NODE_REGAINED_SERVICE_UEI, e);\n+                return;\n+            }\n+        } else {\n+            LOG.warn(\"Received incomplete {} event: {}\", EventConstants.REMOTE_NODE_REGAINED_SERVICE_UEI, e);\n+        }\n+    }", "originalCommit": "cdbf2c5411dac8a4aa2d048901b11cd650c4261d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5Mzc5Nw==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r459393797", "bodyText": "The problem is that the service lost event is needed to generate an outage. But if I create the event and send it to the eventbus it is not necessarily persisted immediately. Only when I consume the event I can be sure that it is present in the database. If you look at the class QueryManagerDaoImpl you will see the same behavior, but in my opinion it is realizied in a much more complicated way. The outage is persisted there without the event and after the event is received the outage is updated with the event\u2019s id. In my opinion this is too heavy and unnecessary, since I cannot imagine a case in which I need an persisted outage before the original service lost event was properly processed by OpenNMS.", "author": "christianpape", "createdAt": "2020-07-23T11:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNzQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwOTkxNw==", "url": "https://github.com/OpenNMS/opennms/pull/3073#discussion_r460009917", "bodyText": "Would be handy if we could do something like:\nCompletableFuture<Event> future =  eventForwarder.sendNow(outageEvent);\nEvent eventWithDbId = future.get();", "author": "j-white", "createdAt": "2020-07-24T12:00:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNzQxMw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "916d427464e741ef8bd4adda37624ab5610b5f41", "url": "https://github.com/OpenNMS/opennms/commit/916d427464e741ef8bd4adda37624ab5610b5f41", "message": "NMS-12792: Review changes, fixed create.sql", "committedDate": "2020-07-23T11:35:59Z", "type": "commit"}, {"oid": "097b4d5d98c88d2b1839c9c9a505fa8dac4e27df", "url": "https://github.com/OpenNMS/opennms/commit/097b4d5d98c88d2b1839c9c9a505fa8dac4e27df", "message": "NMS-12792: Review changes, added TODOs", "committedDate": "2020-07-23T11:37:43Z", "type": "commit"}, {"oid": "64c15d28ec53faf592467354d842e42ea238bfe5", "url": "https://github.com/OpenNMS/opennms/commit/64c15d28ec53faf592467354d842e42ea238bfe5", "message": "NMS-12792: Review changes, fixed criterias", "committedDate": "2020-07-23T11:39:00Z", "type": "commit"}, {"oid": "eb3e8e9cc9363c2998fc759041a067f61370294e", "url": "https://github.com/OpenNMS/opennms/commit/eb3e8e9cc9363c2998fc759041a067f61370294e", "message": "NMS-12792: Review changes, fixed formatting", "committedDate": "2020-07-23T11:39:41Z", "type": "commit"}, {"oid": "5f16dcdd2b3baaf059c239b815c71863d8f9671a", "url": "https://github.com/OpenNMS/opennms/commit/5f16dcdd2b3baaf059c239b815c71863d8f9671a", "message": "NMS-12792: Review changes, fixed logging statement", "committedDate": "2020-07-23T11:40:15Z", "type": "commit"}, {"oid": "5715b89300502b11e395b4bb0bef642fc60e2598", "url": "https://github.com/OpenNMS/opennms/commit/5715b89300502b11e395b4bb0bef642fc60e2598", "message": "NMS-12792: Review changes, fixed SearchProperties.java", "committedDate": "2020-07-23T11:40:51Z", "type": "commit"}, {"oid": "185eab6e1ca99291340b2cc1a8ece4c15849b798", "url": "https://github.com/OpenNMS/opennms/commit/185eab6e1ca99291340b2cc1a8ece4c15849b798", "message": "NMS-12792: Fixed reports", "committedDate": "2020-07-24T15:26:27Z", "type": "commit"}, {"oid": "5937cdc47c3b0a36f1b878c1ede6b365ed839528", "url": "https://github.com/OpenNMS/opennms/commit/5937cdc47c3b0a36f1b878c1ede6b365ed839528", "message": "NMS-12792: Fixed 'Availability Summary -Default configuration for past 7 Days' report", "committedDate": "2020-08-07T14:43:02Z", "type": "commit"}, {"oid": "3a4c736dd039408d3a6704fb59a6d0bd4e7b28df", "url": "https://github.com/OpenNMS/opennms/commit/3a4c736dd039408d3a6704fb59a6d0bd4e7b28df", "message": "NMS-12792: Fixed merge conflicts", "committedDate": "2020-08-10T07:25:45Z", "type": "commit"}, {"oid": "31f24319d10d13733e7f60a24afbbc89392e320b", "url": "https://github.com/OpenNMS/opennms/commit/31f24319d10d13733e7f60a24afbbc89392e320b", "message": "NMS-12792: Fixed subreport", "committedDate": "2020-08-10T11:02:23Z", "type": "commit"}]}