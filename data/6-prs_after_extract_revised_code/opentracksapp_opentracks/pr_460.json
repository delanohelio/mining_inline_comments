{"pr_number": 460, "pr_title": "Export All: ask to the user when conflicts and show a summary.", "pr_createdAt": "2020-10-18T10:50:34Z", "pr_url": "https://github.com/OpenTracksApp/OpenTracks/pull/460", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNTAwMQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507115001", "bodyText": "Under which circumstances can this happen?", "author": "dennisguse", "createdAt": "2020-10-18T11:56:33Z", "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportService.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package de.dennisguse.opentracks.io.file.exporter;\n+\n+import android.app.job.JobService;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.os.ResultReceiver;\n+\n+import androidx.annotation.NonNull;\n+import androidx.core.app.JobIntentService;\n+import androidx.documentfile.provider.DocumentFile;\n+\n+import de.dennisguse.opentracks.content.data.Track;\n+import de.dennisguse.opentracks.content.provider.ContentProviderUtils;\n+import de.dennisguse.opentracks.io.file.TrackFileFormat;\n+import de.dennisguse.opentracks.util.ExportUtils;\n+\n+public class ExportService extends JobIntentService {\n+\n+    private static final int JOB_ID = 1;\n+\n+    private static final String EXTRA_RECEIVER = \"extra_receiver\";\n+    private static final String EXTRA_TRACK_ID = \"extra_track_id\";\n+    private static final String EXTRA_TRACK_FILE_FORMAT = \"extra_track_file_format\";\n+    private static final String EXTRA_DIRECTORY_URI = \"extra_directory_uri\";\n+    private static final String EXTRA_CONFLICT_DECISION = \"extra_conflict_decision\";\n+\n+    public static final int CONFLICT_UNKNOWN = 0;\n+    public static final int CONFLICT_OVERWRITE = 1;\n+    public static final int CONFLICT_SKIP = 2;\n+\n+    public static void enqueue(Context context, ExportServiceResultReceiver receiver, Track.Id trackId, TrackFileFormat trackFileFormat, Uri directoryUri, int conflictDecision) {\n+        Intent intent = new Intent(context, JobService.class);\n+        intent.putExtra(EXTRA_RECEIVER, receiver);\n+        intent.putExtra(EXTRA_TRACK_ID, trackId);\n+        intent.putExtra(EXTRA_TRACK_FILE_FORMAT, trackFileFormat);\n+        intent.putExtra(EXTRA_DIRECTORY_URI, directoryUri);\n+        intent.putExtra(EXTRA_CONFLICT_DECISION, conflictDecision);\n+        enqueueWork(context, ExportService.class, JOB_ID, intent);\n+    }\n+\n+    @Override\n+    protected void onHandleWork(@NonNull Intent intent) {\n+        // Get all data.\n+        ResultReceiver resultReceiver = intent.getParcelableExtra(EXTRA_RECEIVER);\n+        Track.Id trackId = intent.getParcelableExtra(EXTRA_TRACK_ID);\n+        TrackFileFormat trackFileFormat = (TrackFileFormat) intent.getSerializableExtra(EXTRA_TRACK_FILE_FORMAT);\n+        Uri directoryUri = intent.getParcelableExtra(EXTRA_DIRECTORY_URI);\n+        int conflictDecision = intent.getIntExtra(EXTRA_CONFLICT_DECISION, CONFLICT_UNKNOWN);\n+\n+        // Build directory file.\n+        DocumentFile directoryFile = DocumentFile.fromTreeUri(this, directoryUri);\n+\n+        // Checks if the track is already exported in the directory.\n+        boolean fileAlreadyExists = ExportUtils.existsExportDocumentFile(trackId, trackFileFormat.getExtension(), directoryFile);\n+\n+        // Prepare resultCode and bundle to send to the receiver.\n+        int resultCode = getResultCode(fileAlreadyExists, conflictDecision);\n+        Bundle bundle = new Bundle();\n+        bundle.putParcelable(ExportServiceResultReceiver.RESULT_EXTRA_TRACK_ID, trackId);\n+        bundle.putBoolean(ExportServiceResultReceiver.RESULT_EXTRA_SUCCESS, false);\n+\n+        // If file doesn't exists or exists but conflict decision is overwrite then export the track.\n+        if (!fileAlreadyExists || (fileAlreadyExists && conflictDecision == CONFLICT_OVERWRITE)) {\n+            ContentProviderUtils contentProviderUtils = new ContentProviderUtils(this);\n+            Track track = contentProviderUtils.getTrack(trackId);\n+            boolean success = ExportUtils.exportTrack(this, trackFileFormat, directoryFile, track);\n+            bundle.putBoolean(ExportServiceResultReceiver.RESULT_EXTRA_SUCCESS, success);\n+        }\n+\n+        // Send result to the receiver.\n+        resultReceiver.send(resultCode, bundle);\n+    }\n+\n+    private int getResultCode(boolean fileExists, int conflictDecicions) {\n+        if (!fileExists) {\n+            return ExportServiceResultReceiver.RESULT_EXPORTED;\n+        }\n+\n+        switch (conflictDecicions) {\n+            case CONFLICT_OVERWRITE:\n+                return ExportServiceResultReceiver.RESULT_OVERWRITTEN;\n+            case CONFLICT_SKIP:\n+                return ExportServiceResultReceiver.RESULT_SKIPPED;\n+            default:\n+                return ExportServiceResultReceiver.RESULT_UNKNOWN;", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MDU1NQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507170555", "bodyText": "The first time there is a conflict (file already exists). Then service send a response with a RESULT_UNKNOWN so the client knows that the service doesn't know how to fix the conflict and the client ask the user (skip and overwrite buttons show).", "author": "rgmf", "createdAt": "2020-10-18T14:35:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNTAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MzA0Nw==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507173047", "bodyText": "I see: what about renaming to RESULT_NEEDS_CONFLICT_RESOLUTION?", "author": "dennisguse", "createdAt": "2020-10-18T14:55:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNTAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3MzQyNg==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507173426", "bodyText": "Okay, more descriptive \ud83d\udc4d", "author": "rgmf", "createdAt": "2020-10-18T14:58:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNTAwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "0fc4929de78ff466f614070a02f67c2e42c087ff", "chunk": "diff --git a/src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportService.java b/src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportService.java\nindex 732f61003..54a7a122f 100644\n--- a/src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportService.java\n+++ b/src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportService.java\n\n@@ -24,19 +24,13 @@ public class ExportService extends JobIntentService {\n     private static final String EXTRA_TRACK_ID = \"extra_track_id\";\n     private static final String EXTRA_TRACK_FILE_FORMAT = \"extra_track_file_format\";\n     private static final String EXTRA_DIRECTORY_URI = \"extra_directory_uri\";\n-    private static final String EXTRA_CONFLICT_DECISION = \"extra_conflict_decision\";\n \n-    public static final int CONFLICT_UNKNOWN = 0;\n-    public static final int CONFLICT_OVERWRITE = 1;\n-    public static final int CONFLICT_SKIP = 2;\n-\n-    public static void enqueue(Context context, ExportServiceResultReceiver receiver, Track.Id trackId, TrackFileFormat trackFileFormat, Uri directoryUri, int conflictDecision) {\n+    public static void enqueue(Context context, ExportServiceResultReceiver receiver, Track.Id trackId, TrackFileFormat trackFileFormat, Uri directoryUri) {\n         Intent intent = new Intent(context, JobService.class);\n         intent.putExtra(EXTRA_RECEIVER, receiver);\n         intent.putExtra(EXTRA_TRACK_ID, trackId);\n         intent.putExtra(EXTRA_TRACK_FILE_FORMAT, trackFileFormat);\n         intent.putExtra(EXTRA_DIRECTORY_URI, directoryUri);\n-        intent.putExtra(EXTRA_CONFLICT_DECISION, conflictDecision);\n         enqueueWork(context, ExportService.class, JOB_ID, intent);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNTI5MQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507115291", "bodyText": "Can we get one sentence per line?\nAnd also I would put the description on top of the class rather than the constructor.\nWhen the documentation is generated, this will be the description.\nConstructor descriptions are only need (IMHO) if they do something unexpected.", "author": "dennisguse", "createdAt": "2020-10-18T11:57:15Z", "path": "src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportServiceResultReceiver.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package de.dennisguse.opentracks.io.file.exporter;\n+\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.os.ResultReceiver;\n+\n+public class ExportServiceResultReceiver extends ResultReceiver {\n+\n+    public static final int RESULT_UNKNOWN = 100;\n+    public static final int RESULT_OVERWRITTEN = 101;\n+    public static final int RESULT_SKIPPED = 102;\n+    public static final int RESULT_EXPORTED = 103;\n+\n+    public static final String RESULT_EXTRA_TRACK_ID = \"result_extra_track_id\";\n+    public static final String RESULT_EXTRA_SUCCESS = \"result_extra_success\";\n+\n+    private Receiver receiver;\n+\n+    /**\n+     * Create a new ResultReceive to receive results.  Your", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0fc4929de78ff466f614070a02f67c2e42c087ff", "chunk": "diff --git a/src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportServiceResultReceiver.java b/src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportServiceResultReceiver.java\nindex caefe45d4..cea13a887 100644\n--- a/src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportServiceResultReceiver.java\n+++ b/src/main/java/de/dennisguse/opentracks/io/file/exporter/ExportServiceResultReceiver.java\n\n@@ -4,25 +4,19 @@ import android.os.Bundle;\n import android.os.Handler;\n import android.os.ResultReceiver;\n \n+/**\n+ * Create a new ResultReceive to receive results.\n+ * Your {@link #onReceiveResult} method will be called from the thread running <var>handler</var> if given, or from an arbitrary thread if null.\n+ */\n public class ExportServiceResultReceiver extends ResultReceiver {\n \n-    public static final int RESULT_UNKNOWN = 100;\n-    public static final int RESULT_OVERWRITTEN = 101;\n-    public static final int RESULT_SKIPPED = 102;\n-    public static final int RESULT_EXPORTED = 103;\n+    public static final int RESULT_CODE_SUCCESS = 1;\n+    public static final int RESULT_CODE_ERROR = 0;\n \n     public static final String RESULT_EXTRA_TRACK_ID = \"result_extra_track_id\";\n-    public static final String RESULT_EXTRA_SUCCESS = \"result_extra_success\";\n \n     private Receiver receiver;\n \n-    /**\n-     * Create a new ResultReceive to receive results.  Your\n-     * {@link #onReceiveResult} method will be called from the thread running\n-     * <var>handler</var> if given, or from an arbitrary thread if null.\n-     *\n-     * @param handler\n-     */\n     public ExportServiceResultReceiver(Handler handler) {\n         super(handler);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNjcxNQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507116715", "bodyText": "I have no better option, but the name is somehow not telling me what it does.\nSomething like: isExportFileExists (but sucks also) :)", "author": "dennisguse", "createdAt": "2020-10-18T12:00:55Z", "path": "src/main/java/de/dennisguse/opentracks/util/ExportUtils.java", "diffHunk": "@@ -59,6 +59,10 @@ public static DocumentFile getExportDocumentFile(Track.Id trackId, String trackF\n         return file;\n     }\n \n+    public static boolean existsExportDocumentFile(Track.Id trackId, String trackFileFormatExtension, DocumentFile directory) {", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0fc4929de78ff466f614070a02f67c2e42c087ff", "chunk": "diff --git a/src/main/java/de/dennisguse/opentracks/util/ExportUtils.java b/src/main/java/de/dennisguse/opentracks/util/ExportUtils.java\nindex 2a4a97392..e40d7c15a 100644\n--- a/src/main/java/de/dennisguse/opentracks/util/ExportUtils.java\n+++ b/src/main/java/de/dennisguse/opentracks/util/ExportUtils.java\n\n@@ -59,8 +60,8 @@ public class ExportUtils {\n         return file;\n     }\n \n-    public static boolean existsExportDocumentFile(Track.Id trackId, String trackFileFormatExtension, DocumentFile directory) {\n-        return directory.findFile(getExportFileNameByTrackId(trackId, trackFileFormatExtension)) == null ? false : true;\n+    public static boolean isExportFileExists(Track.Id trackId, String trackFileFormatExtension, List<String> filesName) {\n+        return filesName.contains(getExportFileNameByTrackId(trackId, trackFileFormatExtension));\n     }\n \n     private static String getExportFileNameByTrackId(Track.Id trackId, String trackFileFormatExtension) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzExNjg4OQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/460#discussion_r507116889", "bodyText": "directory.findFile(getExportFileNameByTrackId(trackId, trackFileFormatExtension)) != null", "author": "dennisguse", "createdAt": "2020-10-18T12:01:19Z", "path": "src/main/java/de/dennisguse/opentracks/util/ExportUtils.java", "diffHunk": "@@ -59,6 +59,10 @@ public static DocumentFile getExportDocumentFile(Track.Id trackId, String trackF\n         return file;\n     }\n \n+    public static boolean existsExportDocumentFile(Track.Id trackId, String trackFileFormatExtension, DocumentFile directory) {\n+        return directory.findFile(getExportFileNameByTrackId(trackId, trackFileFormatExtension)) == null ? false : true;", "originalCommit": "026a9fe6286885c6df526d67e772ac782c850c20", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0fc4929de78ff466f614070a02f67c2e42c087ff", "chunk": "diff --git a/src/main/java/de/dennisguse/opentracks/util/ExportUtils.java b/src/main/java/de/dennisguse/opentracks/util/ExportUtils.java\nindex 2a4a97392..e40d7c15a 100644\n--- a/src/main/java/de/dennisguse/opentracks/util/ExportUtils.java\n+++ b/src/main/java/de/dennisguse/opentracks/util/ExportUtils.java\n\n@@ -59,8 +60,8 @@ public class ExportUtils {\n         return file;\n     }\n \n-    public static boolean existsExportDocumentFile(Track.Id trackId, String trackFileFormatExtension, DocumentFile directory) {\n-        return directory.findFile(getExportFileNameByTrackId(trackId, trackFileFormatExtension)) == null ? false : true;\n+    public static boolean isExportFileExists(Track.Id trackId, String trackFileFormatExtension, List<String> filesName) {\n+        return filesName.contains(getExportFileNameByTrackId(trackId, trackFileFormatExtension));\n     }\n \n     private static String getExportFileNameByTrackId(Track.Id trackId, String trackFileFormatExtension) {\n"}}, {"oid": "0fc4929de78ff466f614070a02f67c2e42c087ff", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/0fc4929de78ff466f614070a02f67c2e42c087ff", "message": "Performance. Conflicts manage by ExporActivity instead of JobIntentService.", "committedDate": "2020-10-19T14:10:00Z", "type": "forcePushed"}, {"oid": "d68dbb3545bf8a6d819606bb5d10ea5179b992ef", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/d68dbb3545bf8a6d819606bb5d10ea5179b992ef", "message": "Uses DocumentsContract instead of DocumentFile for find files.", "committedDate": "2020-10-20T09:51:16Z", "type": "forcePushed"}, {"oid": "dc5ee1d7708f118ea48df61479df2d012b1e5115", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/dc5ee1d7708f118ea48df61479df2d012b1e5115", "message": "Export All: ask to the user when conflicts (track already exported in the selected directory) and show a summary. Fixes #451.", "committedDate": "2020-10-20T09:59:11Z", "type": "forcePushed"}, {"oid": "e945f586fe4211654d903de51ce7efe6a14d9437", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/e945f586fe4211654d903de51ce7efe6a14d9437", "message": "Export All: ask to the user when conflicts (track already exported in the selected directory) and show a summary. Fixes #451.", "committedDate": "2020-10-20T09:59:58Z", "type": "forcePushed"}, {"oid": "e945f586fe4211654d903de51ce7efe6a14d9437", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/e945f586fe4211654d903de51ce7efe6a14d9437", "message": "Export All: ask to the user when conflicts (track already exported in the selected directory) and show a summary. Fixes #451.", "committedDate": "2020-10-20T09:59:58Z", "type": "commit"}]}