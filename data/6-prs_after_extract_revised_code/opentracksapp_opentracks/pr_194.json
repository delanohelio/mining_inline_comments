{"pr_number": 194, "pr_title": "Images/folders are deleted when tracks/waypoints are deleted. This fixes #189.", "pr_createdAt": "2020-04-25T12:23:07Z", "pr_url": "https://github.com/OpenTracksApp/OpenTracks/pull/194", "timeline": [{"oid": "46c06f0438745c7ce2ba5308e3c6251c12301542", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/46c06f0438745c7ce2ba5308e3c6251c12301542", "message": "Images/folders are deleted when tracks/waypoints are deleted. This fixes #189.", "committedDate": "2020-04-25T12:13:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1MzY3MQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415053671", "bodyText": "Why not throw the IOException?", "author": "dennisguse", "createdAt": "2020-04-25T12:32:37Z", "path": "src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java", "diffHunk": "@@ -73,4 +79,26 @@ public static void insertTrackWithLocations(ContentProviderUtils contentProvider\n         contentProviderUtils.insertTrack(track);\n         contentProviderUtils.bulkInsertTrackPoint(trackPoints, track.getId());\n     }\n+\n+    /**\n+     * Creates a Waypoint with a photo.\n+     *\n+     * @param context  The context.\n+     * @param trackId  The track id.\n+     * @param location The location.\n+     * @return the Waypoint created.\n+     */\n+    public static  Waypoint createWaypointWithPhoto(Context context, long trackId, Location location) {\n+        String photoUrl = \"\";\n+        try {\n+            File dstFile = new File(FileUtils.getImageUrl(context, trackId));\n+            dstFile.createNewFile();\n+            Uri photoUri = FileUtils.getUriForFile(context, dstFile);\n+            photoUrl = photoUri.toString();\n+        } catch (IOException ioe) {\n+            throw new RuntimeException(ioe);", "originalCommit": "46c06f0438745c7ce2ba5308e3c6251c12301542", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1NjQ5Ng==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415056496", "bodyText": "Because this exception shouldn't never occur or the tests will fail. With RuntimeException I don't need to mark this method as throwing that exception and it results in a cleaner code.\nI don't know if it's the best approach for this case.", "author": "rgmf", "createdAt": "2020-04-25T12:49:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1MzY3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "d07f54c8ccbad18bf33588ad489721f9b300018e", "chunk": "diff --git a/src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java b/src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java\nindex 884a335d7..f9ceac3ad 100644\n--- a/src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java\n+++ b/src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java\n\n@@ -88,7 +88,7 @@ public class TestDataUtil {\n      * @param location The location.\n      * @return the Waypoint created.\n      */\n-    public static  Waypoint createWaypointWithPhoto(Context context, long trackId, Location location) {\n+    public static  Waypoint createWaypointWithPhoto(Context context, long trackId, Location location) throws IOException {\n         String photoUrl = \"\";\n         try {\n             File dstFile = new File(FileUtils.getImageUrl(context, trackId));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1Mzc5Nw==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415053797", "bodyText": "if (file == null) {\nreturn;\n}", "author": "dennisguse", "createdAt": "2020-04-25T12:33:19Z", "path": "src/androidTest/java/de/dennisguse/opentracks/content/provider/CustomContentProviderUtilsTest.java", "diffHunk": "@@ -75,6 +77,17 @@ public void setUp() {\n         contentProviderUtils.deleteAllTracks(context);\n     }\n \n+    private void cleanPhotoDir(File file) {\n+        if (file != null && file.exists() && file.isDirectory()) {", "originalCommit": "46c06f0438745c7ce2ba5308e3c6251c12301542", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1NjgwMg==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415056802", "bodyText": "I've removed this code because it's not needed.", "author": "rgmf", "createdAt": "2020-04-25T12:51:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1Mzc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b8db435446edcfd67117c33b108ffb5f84466f59", "chunk": "diff --git a/src/androidTest/java/de/dennisguse/opentracks/content/provider/CustomContentProviderUtilsTest.java b/src/androidTest/java/de/dennisguse/opentracks/content/provider/CustomContentProviderUtilsTest.java\nindex 7e689632d..40a0d8b0b 100644\n--- a/src/androidTest/java/de/dennisguse/opentracks/content/provider/CustomContentProviderUtilsTest.java\n+++ b/src/androidTest/java/de/dennisguse/opentracks/content/provider/CustomContentProviderUtilsTest.java\n\n@@ -77,17 +77,6 @@ public class CustomContentProviderUtilsTest {\n         contentProviderUtils.deleteAllTracks(context);\n     }\n \n-    private void cleanPhotoDir(File file) {\n-        if (file != null && file.exists() && file.isDirectory()) {\n-            for (File child : file.listFiles()) {\n-                cleanPhotoDir(child);\n-            }\n-            file.delete();\n-        } else if (file != null && file.isFile()) {\n-            file.delete();\n-        }\n-    }\n-\n     @Test\n     public void testLocationIterator_noPoints() {\n         testIterator(1, 0, 1, false);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1NDM5Nw==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415054397", "bodyText": "Looks exactly like cleanPhotoDir, right?\nWhat about moving it to FileUtils?", "author": "dennisguse", "createdAt": "2020-04-25T12:36:52Z", "path": "src/main/java/de/dennisguse/opentracks/content/provider/ContentProviderUtils.java", "diffHunk": "@@ -197,20 +200,21 @@ private void deleteTrackPointsAndWaypoints(Context context, long trackId) {\n         contentResolver.delete(TrackPointsColumns.CONTENT_URI_BY_ID, where, selectionArgs);\n \n         contentResolver.delete(WaypointsColumns.CONTENT_URI, WaypointsColumns.TRACKID + \"=?\", new String[]{Long.toString(trackId)});\n-        deleteDirectoryRecurse(FileUtils.getPhotoDir(context, trackId));\n     }\n \n     /**\n      * Delete the directory recursively.\n      *\n-     * @param dir the directory\n+     * @param file the directory\n      */\n-    private void deleteDirectoryRecurse(File dir) {\n-        if (dir != null && dir.exists() && dir.isDirectory()) {\n-            for (File child : dir.listFiles()) {\n+    private void deleteDirectoryRecurse(File file) {\n+        if (file != null && file.exists() && file.isDirectory()) {", "originalCommit": "46c06f0438745c7ce2ba5308e3c6251c12301542", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1NzM4Mg==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415057382", "bodyText": "I've deleted cleanPhotoDir from test but anyway I think it can be a future utility so I'm going to move it to FileUtils.", "author": "rgmf", "createdAt": "2020-04-25T12:54:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA1NDM5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b8db435446edcfd67117c33b108ffb5f84466f59", "chunk": "diff --git a/src/main/java/de/dennisguse/opentracks/content/provider/ContentProviderUtils.java b/src/main/java/de/dennisguse/opentracks/content/provider/ContentProviderUtils.java\nindex 1fee76669..be2f2f452 100644\n--- a/src/main/java/de/dennisguse/opentracks/content/provider/ContentProviderUtils.java\n+++ b/src/main/java/de/dennisguse/opentracks/content/provider/ContentProviderUtils.java\n\n@@ -202,22 +202,6 @@ public class ContentProviderUtils {\n         contentResolver.delete(WaypointsColumns.CONTENT_URI, WaypointsColumns.TRACKID + \"=?\", new String[]{Long.toString(trackId)});\n     }\n \n-    /**\n-     * Delete the directory recursively.\n-     *\n-     * @param file the directory\n-     */\n-    private void deleteDirectoryRecurse(File file) {\n-        if (file != null && file.exists() && file.isDirectory()) {\n-            for (File child : file.listFiles()) {\n-                deleteDirectoryRecurse(child);\n-            }\n-            file.delete();\n-        } else if (file != null && file.isFile()) {\n-            file.delete();\n-        }\n-    }\n-\n     /**\n      * Gets all the tracks.\n      *\n"}}, {"oid": "b8db435446edcfd67117c33b108ffb5f84466f59", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/b8db435446edcfd67117c33b108ffb5f84466f59", "message": "Refactoring: move deleteDirectoryRecurse to FileUtils.", "committedDate": "2020-04-25T13:04:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0MzU3NQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415543575", "bodyText": "Actually, you can just throw the IOException directly as this is only test code :)", "author": "dennisguse", "createdAt": "2020-04-27T06:27:42Z", "path": "src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java", "diffHunk": "@@ -73,4 +79,26 @@ public static void insertTrackWithLocations(ContentProviderUtils contentProvider\n         contentProviderUtils.insertTrack(track);\n         contentProviderUtils.bulkInsertTrackPoint(trackPoints, track.getId());\n     }\n+\n+    /**\n+     * Creates a Waypoint with a photo.\n+     *\n+     * @param context  The context.\n+     * @param trackId  The track id.\n+     * @param location The location.\n+     * @return the Waypoint created.\n+     */\n+    public static  Waypoint createWaypointWithPhoto(Context context, long trackId, Location location) {\n+        String photoUrl = \"\";\n+        try {\n+            File dstFile = new File(FileUtils.getImageUrl(context, trackId));\n+            dstFile.createNewFile();\n+            Uri photoUri = FileUtils.getUriForFile(context, dstFile);\n+            photoUrl = photoUri.toString();\n+        } catch (IOException ioe) {", "originalCommit": "b8db435446edcfd67117c33b108ffb5f84466f59", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU1MzU0OA==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/194#discussion_r415553548", "bodyText": "Ok. Done :)", "author": "rgmf", "createdAt": "2020-04-27T06:48:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU0MzU3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d07f54c8ccbad18bf33588ad489721f9b300018e", "chunk": "diff --git a/src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java b/src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java\nindex 884a335d7..f9ceac3ad 100644\n--- a/src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java\n+++ b/src/androidTest/java/de/dennisguse/opentracks/content/data/TestDataUtil.java\n\n@@ -88,7 +88,7 @@ public class TestDataUtil {\n      * @param location The location.\n      * @return the Waypoint created.\n      */\n-    public static  Waypoint createWaypointWithPhoto(Context context, long trackId, Location location) {\n+    public static  Waypoint createWaypointWithPhoto(Context context, long trackId, Location location) throws IOException {\n         String photoUrl = \"\";\n         try {\n             File dstFile = new File(FileUtils.getImageUrl(context, trackId));\n"}}, {"oid": "d07f54c8ccbad18bf33588ad489721f9b300018e", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/d07f54c8ccbad18bf33588ad489721f9b300018e", "message": "RuntimeException by IOException change.", "committedDate": "2020-04-27T06:49:18Z", "type": "commit"}]}