{"pr_number": 538, "pr_title": "fix #537 ignore waypoint markers with invalid coordinates on import", "pr_createdAt": "2020-11-28T21:11:13Z", "pr_url": "https://github.com/OpenTracksApp/OpenTracks/pull/538", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMzU5OQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/538#discussion_r532113599", "bodyText": "This should not be necessary as findAndParseKmlFile() either throws an exception or returns a trackid, right?", "author": "dennisguse", "createdAt": "2020-11-28T22:25:45Z", "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java", "diffHunk": "@@ -194,7 +194,7 @@ private boolean hasImageExtension(String fileName) {\n      * @param trackId the id of the Track.\n      */\n     private void deleteOrphanImages(Context context, Track.Id trackId) {\n-        if (!trackId.isValid()) {\n+        if (trackId != null && !trackId.isValid()) {", "originalCommit": "c49ba064429ddbfbebec43a819222d7d0b387d20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExNDY4Nw==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/538#discussion_r532114687", "bodyText": "I came across this when I first experimented with a kmz file for the Unit test. But I had problems with it an the while ZipEntry didn't find any files in the zip input stream. Then it resulted in a null trackId.", "author": "pstorch", "createdAt": "2020-11-28T22:38:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMzU5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExNDgzMA==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/538#discussion_r532114830", "bodyText": "Then we should throw an exception in findAndParseKmlFile as the file is broken or am I mistaken?", "author": "dennisguse", "createdAt": "2020-11-28T22:39:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMzU5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExNTEyNQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/538#discussion_r532115125", "bodyText": "Yes, you are right.", "author": "pstorch", "createdAt": "2020-11-28T22:42:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjExMzU5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f516109380fad38c7e5a3612a29d5925ec9086fd", "chunk": "diff --git a/src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java b/src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java\nindex 0198c36d2..8eb440c9b 100644\n--- a/src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java\n+++ b/src/main/java/de/dennisguse/opentracks/io/file/importer/KmzTrackImporter.java\n\n@@ -194,7 +194,7 @@ public class KmzTrackImporter implements TrackImporter {\n      * @param trackId the id of the Track.\n      */\n     private void deleteOrphanImages(Context context, Track.Id trackId) {\n-        if (trackId != null && !trackId.isValid()) {\n+        if (!trackId.isValid()) {\n             // 1.- Gets all photo names in the markers of the track identified by id.\n             ContentProviderUtils contentProviderUtils = new ContentProviderUtils(context);\n             List<Marker> markers = contentProviderUtils.getMarkers(trackId);\n"}}, {"oid": "f516109380fad38c7e5a3612a29d5925ec9086fd", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/f516109380fad38c7e5a3612a29d5925ec9086fd", "message": "fix #537 ignore waypoint markers with invalid\n\ncoordinates on import.\n\nI've also added a unit test with such an export file.", "committedDate": "2020-11-29T09:50:50Z", "type": "commit"}, {"oid": "c46e81dc94d38005e83709378f284814da5f91ea", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/c46e81dc94d38005e83709378f284814da5f91ea", "message": "throw Exception when no doc.kml file found in kmz", "committedDate": "2020-11-29T09:58:15Z", "type": "commit"}, {"oid": "c46e81dc94d38005e83709378f284814da5f91ea", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/c46e81dc94d38005e83709378f284814da5f91ea", "message": "throw Exception when no doc.kml file found in kmz", "committedDate": "2020-11-29T09:58:15Z", "type": "forcePushed"}]}