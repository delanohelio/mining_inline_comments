{"pr_number": 299, "pr_title": "Restructuring TrackRecordingService", "pr_createdAt": "2020-06-22T06:00:21Z", "pr_url": "https://github.com/OpenTracksApp/OpenTracks/pull/299", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3NzAxNg==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/299#discussion_r444977016", "bodyText": "rename to recordingGpsAccuracy :)", "author": "dennisguse", "createdAt": "2020-06-24T15:23:01Z", "path": "src/main/java/de/dennisguse/opentracks/services/HandlerServer.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package de.dennisguse.opentracks.services;\n+\n+import android.content.Context;\n+import android.location.Location;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import de.dennisguse.opentracks.content.data.TrackPoint;\n+\n+public class HandlerServer {\n+    private String TAG = HandlerServer.class.getSimpleName();\n+\n+    private List<HandlerSubscriber> subscriberList;\n+\n+    private static HandlerServer handlerServerInstance;\n+    private final LocationHandler locationHandler;\n+    private final Context context;\n+\n+    public static HandlerServer getInstance(Context context) {\n+        if (handlerServerInstance == null) {\n+            handlerServerInstance = new HandlerServer(context);\n+        }\n+        return handlerServerInstance;\n+    }\n+\n+    private HandlerServer(Context context) {\n+        this.subscriberList = new ArrayList<>();\n+        this.locationHandler = new LocationHandler();\n+        this.context = context;\n+    }\n+\n+    public void subscribe(HandlerSubscriber s) {\n+        if (subscriberList.isEmpty()) {\n+            locationHandler.onStart(context);\n+        }\n+        if (!subscriberList.contains(s)) {\n+            subscriberList.add(s);\n+        }\n+    }\n+\n+    public void unsubscribe(HandlerSubscriber s) {\n+        if (subscriberList.contains(s)) {\n+            subscriberList.remove(s);\n+            if (subscriberList.isEmpty()) {\n+                locationHandler.onStop();\n+            }\n+        }\n+    }\n+\n+    public void sendTrackPoint(TrackPoint trackPoint, int gpsAccuracy) {", "originalCommit": "241c0954a8f8911b09437874658ae7404ecc4b39", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d25f8fc3f618dc52a9f174e32810c20ef1ff04b7", "chunk": "diff --git a/src/main/java/de/dennisguse/opentracks/services/HandlerServer.java b/src/main/java/de/dennisguse/opentracks/services/HandlerServer.java\ndeleted file mode 100644\nindex 91a0a3f68..000000000\n--- a/src/main/java/de/dennisguse/opentracks/services/HandlerServer.java\n+++ /dev/null\n\n@@ -1,61 +0,0 @@\n-package de.dennisguse.opentracks.services;\n-\n-import android.content.Context;\n-import android.location.Location;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import de.dennisguse.opentracks.content.data.TrackPoint;\n-\n-public class HandlerServer {\n-    private String TAG = HandlerServer.class.getSimpleName();\n-\n-    private List<HandlerSubscriber> subscriberList;\n-\n-    private static HandlerServer handlerServerInstance;\n-    private final LocationHandler locationHandler;\n-    private final Context context;\n-\n-    public static HandlerServer getInstance(Context context) {\n-        if (handlerServerInstance == null) {\n-            handlerServerInstance = new HandlerServer(context);\n-        }\n-        return handlerServerInstance;\n-    }\n-\n-    private HandlerServer(Context context) {\n-        this.subscriberList = new ArrayList<>();\n-        this.locationHandler = new LocationHandler();\n-        this.context = context;\n-    }\n-\n-    public void subscribe(HandlerSubscriber s) {\n-        if (subscriberList.isEmpty()) {\n-            locationHandler.onStart(context);\n-        }\n-        if (!subscriberList.contains(s)) {\n-            subscriberList.add(s);\n-        }\n-    }\n-\n-    public void unsubscribe(HandlerSubscriber s) {\n-        if (subscriberList.contains(s)) {\n-            subscriberList.remove(s);\n-            if (subscriberList.isEmpty()) {\n-                locationHandler.onStop();\n-            }\n-        }\n-    }\n-\n-    public void sendTrackPoint(TrackPoint trackPoint, int gpsAccuracy) {\n-        for (HandlerSubscriber s : subscriberList) {\n-            s.newTrackPoint(trackPoint, gpsAccuracy);\n-        }\n-    }\n-\n-    public interface HandlerSubscriber {\n-        void newTrackPoint(TrackPoint trackPoint, int gpsAccuracy);\n-    }\n-}\n-\n"}}, {"oid": "d25f8fc3f618dc52a9f174e32810c20ef1ff04b7", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/d25f8fc3f618dc52a9f174e32810c20ef1ff04b7", "message": "Service refactoring: refactoring tests.", "committedDate": "2020-07-06T14:48:52Z", "type": "forcePushed"}, {"oid": "214a766d3ad1fbbfb520cf421a2d8e5c0a7d3982", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/214a766d3ad1fbbfb520cf421a2d8e5c0a7d3982", "message": "Service refactoring: refactoring tests.", "committedDate": "2020-07-08T14:21:22Z", "type": "forcePushed"}, {"oid": "0cdd19e3ec2cddd25f39c05ec869c1f46ad8e158", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/0cdd19e3ec2cddd25f39c05ec869c1f46ad8e158", "message": "Service refactoring: move location management to the LocationHandle.\nTests refactoring: location and service tests re-worked.", "committedDate": "2020-07-17T10:23:50Z", "type": "forcePushed"}, {"oid": "0cdd19e3ec2cddd25f39c05ec869c1f46ad8e158", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/0cdd19e3ec2cddd25f39c05ec869c1f46ad8e158", "message": "Service refactoring: move location management to the LocationHandle.\nTests refactoring: location and service tests re-worked.", "committedDate": "2020-07-17T10:23:50Z", "type": "commit"}]}