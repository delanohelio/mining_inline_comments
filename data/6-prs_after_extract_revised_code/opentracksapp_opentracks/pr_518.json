{"pr_number": 518, "pr_title": "Optimize import (pstorch's option 4)", "pr_createdAt": "2020-11-13T15:40:04Z", "pr_url": "https://github.com/OpenTracksApp/OpenTracks/pull/518", "timeline": [{"oid": "413ec8d4c606eb355bbafad8dbe0078c830a81fb", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/413ec8d4c606eb355bbafad8dbe0078c830a81fb", "message": "Import files by track in memory (avoid clean track when error). Fixes #473.", "committedDate": "2020-11-13T17:34:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM5OTU0OQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518#discussion_r523399549", "bodyText": "I wouldn't encapsulate SQLiteConstraintException, because it didn't happen here.", "author": "pstorch", "createdAt": "2020-11-14T09:35:27Z", "path": "src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java", "diffHunk": "@@ -279,17 +255,26 @@ protected void onTrackEnd() {\n         }\n         trackData.track.setTrackStatistics(trackData.trackStatisticsUpdater.getTrackStatistics());\n \n-        try {\n-            contentProviderUtils.updateTrack(trackData.track);\n-        } catch (SQLiteConstraintException e) {\n+        Track track = contentProviderUtils.getTrack(trackData.track.getUuid());\n+        if (track != null) {\n             if (PreferencesUtils.getPreventReimportTracks(context)) {\n-                throw e;\n+                throw new ImportAlreadyExistsException(new SQLiteConstraintException());", "originalCommit": "413ec8d4c606eb355bbafad8dbe0078c830a81fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ1NDY5NA==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518#discussion_r523454694", "bodyText": "Thank you @pstorch for your review. What do you think something of this:\nthrow new ImportAlreadyExistsException(context.getString(R.string.import_prevent_reimport));\nwith R.string.import_prevent_reimport = \"You have set prevent re-import track\"", "author": "rgmf", "createdAt": "2020-11-14T19:35:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM5OTU0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzcxNDM1MQ==", "url": "https://github.com/OpenTracksApp/OpenTracks/pull/518#discussion_r523714351", "bodyText": "Normally I don't like translating Exception messages, but in this case we show it to the user. So it might be appropriate.\n@dennisguse what do you think?", "author": "pstorch", "createdAt": "2020-11-15T06:24:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM5OTU0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "6e6f8cff8de0f6f39341296ec11bef3b45a4f12f", "chunk": "diff --git a/src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java b/src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java\nindex fba5744ea..c307606a9 100644\n--- a/src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java\n+++ b/src/main/java/de/dennisguse/opentracks/io/file/importer/AbstractFileTrackImporter.java\n\n@@ -258,7 +258,7 @@ abstract class AbstractFileTrackImporter extends DefaultHandler implements Track\n         Track track = contentProviderUtils.getTrack(trackData.track.getUuid());\n         if (track != null) {\n             if (PreferencesUtils.getPreventReimportTracks(context)) {\n-                throw new ImportAlreadyExistsException(new SQLiteConstraintException());\n+                throw new ImportAlreadyExistsException(context.getString(R.string.import_prevent_reimport));\n             }\n \n             //TODO This is a workaround until we have proper UI.\n"}}, {"oid": "6e6f8cff8de0f6f39341296ec11bef3b45a4f12f", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/6e6f8cff8de0f6f39341296ec11bef3b45a4f12f", "message": "Adjustments after rebasing.", "committedDate": "2020-11-22T19:22:47Z", "type": "forcePushed"}, {"oid": "09245fbabe680134cfe884954753827f45ebb7d5", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/09245fbabe680134cfe884954753827f45ebb7d5", "message": "Import files by track in memory (avoid clean track when error). Fixes #473.", "committedDate": "2020-11-23T17:19:27Z", "type": "commit"}, {"oid": "09245fbabe680134cfe884954753827f45ebb7d5", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/09245fbabe680134cfe884954753827f45ebb7d5", "message": "Import files by track in memory (avoid clean track when error). Fixes #473.", "committedDate": "2020-11-23T17:19:27Z", "type": "forcePushed"}, {"oid": "99860155fc2555de84375038b9b643239f9ce5c9", "url": "https://github.com/OpenTracksApp/OpenTracks/commit/99860155fc2555de84375038b9b643239f9ce5c9", "message": "Only clean if parse error is out of <trk>", "committedDate": "2020-11-24T16:30:36Z", "type": "commit"}]}