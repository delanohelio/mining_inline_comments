{"pr_number": 1341, "pr_title": "Fix multiple issue in Oauth", "pr_createdAt": "2020-03-04T06:27:15Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1341", "timeline": [{"oid": "c206e01c006dc52556a89ea9165db8a6504c0e9c", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/c206e01c006dc52556a89ea9165db8a6504c0e9c", "message": "Fix username case sensitive issue in query", "committedDate": "2020-03-04T06:22:55Z", "type": "commit"}, {"oid": "db00584ff1c0415a0aee35049f6f0268806fda0f", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/db00584ff1c0415a0aee35049f6f0268806fda0f", "message": "Fix issue in jwt cache", "committedDate": "2020-03-04T07:29:59Z", "type": "commit"}, {"oid": "db00584ff1c0415a0aee35049f6f0268806fda0f", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/db00584ff1c0415a0aee35049f6f0268806fda0f", "message": "Fix issue in jwt cache", "committedDate": "2020-03-04T07:29:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMTM1Nw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1341#discussion_r387501357", "bodyText": "it would better to change the jti variable name to something else :)\npersistedAlias or something", "author": "mefarazath", "createdAt": "2020-03-04T08:04:05Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/token/handlers/grant/AbstractAuthorizationGrantHandler.java", "diffHunk": "@@ -428,14 +429,35 @@ private void persistAccessTokenInDB(OAuthTokenReqMessageContext tokReqMsgCtx, Ac\n         }\n     }\n \n-    private void updateCacheIfEnabled(AccessTokenDO newTokenBean, String scope)\n+    private void updateCacheIfEnabled(AccessTokenDO newTokenBean, String scope, OauthTokenIssuer oauthTokenIssuer)\n             throws IdentityOAuth2Exception {\n \n         if (isHashDisabled && cacheEnabled) {\n-            OAuthCacheKey cacheKey = getOAuthCacheKey(scope, newTokenBean.getConsumerKey(),\n-                    newTokenBean.getAuthzUser().toString(), newTokenBean.getAuthzUser().getFederatedIdPName(),\n-                    getTokenBindingReference(newTokenBean));\n-            oauthCache.addToCache(cacheKey, newTokenBean);\n+            AccessTokenDO tokenToCache = AccessTokenDO.clone(newTokenBean);\n+            // If usePersistedAccessTokenAlias is enabled then in the DB the\n+            // access token alias taken from the OauthTokenIssuer's getAccessTokenHash\n+            // method is set as the token.\n+            if (oauthTokenIssuer.usePersistedAccessTokenAlias()) {\n+                try {\n+                    String jti = oauthTokenIssuer.getAccessTokenHash(newTokenBean.getAccessToken());\n+                    tokenToCache.setAccessToken(jti);", "originalCommit": "db00584ff1c0415a0aee35049f6f0268806fda0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ3ODY2Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1341#discussion_r416478662", "bodyText": "Resolved with #1342 and #1343", "author": "janakamarasena", "createdAt": "2020-04-28T09:46:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMTM1Nw=="}], "type": "inlineReview", "revised_code": null}]}