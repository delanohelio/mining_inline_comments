{"pr_number": 1519, "pr_title": "Clear the opBrowserState Cookie when sending the logout request to framework.", "pr_createdAt": "2020-12-18T04:16:22Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519", "timeline": [{"oid": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "message": "Clear the opBrowserState Cookie when sending the logout request to framework.", "committedDate": "2020-12-18T07:54:01Z", "type": "commit"}, {"oid": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "message": "Clear the opBrowserState Cookie when sending the logout request to framework.", "committedDate": "2020-12-18T07:54:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzODYzNQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545638635", "bodyText": "Can Use StringUtils? WDYT?", "author": "Thumimku", "createdAt": "2020-12-18T08:13:55Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -129,9 +130,9 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n          */\n \n         String redirectURL;\n-        Cookie opBrowserStateCookie = OIDCSessionManagementUtil.getOPBrowserStateCookie(request);\n+        String opBrowserStateCookieValue = getOPBSCookieValue(request);\n \n-        if (opBrowserStateCookie == null) {\n+        if (opBrowserStateCookieValue == null) {", "originalCommit": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNjMyMQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545726321", "bodyText": "Yes. We can. It's fixed with b6b16b4.", "author": "chamathns", "createdAt": "2020-12-18T10:00:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzODYzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\nindex 0cb74d6b1..2ef2d3a12 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\n@@ -132,7 +132,7 @@ public class OIDCLogoutServlet extends HttpServlet {\n         String redirectURL;\n         String opBrowserStateCookieValue = getOPBSCookieValue(request);\n \n-        if (opBrowserStateCookieValue == null) {\n+        if (StringUtils.isBlank(opBrowserStateCookieValue)) {\n             String msg = OIDCSessionConstants.OPBS_COOKIE_ID + \" cookie not received. Missing session state.\";\n             if (log.isDebugEnabled()) {\n                 log.debug(msg);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTAzMg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545639032", "bodyText": "Can we add a param description", "author": "Thumimku", "createdAt": "2020-12-18T08:14:49Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -238,22 +239,39 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n         response.sendRedirect(getRedirectURL(redirectURL, request));\n     }\n \n+    private String getOPBSCookieValue(HttpServletRequest request) {\n+\n+        Cookie opBrowserStateCookie = OIDCSessionManagementUtil.getOPBrowserStateCookie(request);\n+        if (opBrowserStateCookie != null) {\n+            return opBrowserStateCookie.getValue();\n+        } else {\n+            String sessionDataKey = request.getParameter(OIDCSessionConstants.OIDC_SESSION_DATA_KEY_PARAM);\n+            if (StringUtils.isNotBlank(sessionDataKey)) {\n+                OIDCSessionDataCacheEntry cacheEntry = getSessionDataFromCache(sessionDataKey);\n+                if (cacheEntry != null) {\n+                    return cacheEntry.getParamMap().get(OIDCSessionConstants.OPBS_COOKIE_ID);\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n     /**\n      * If postLogoutRedirectUri is send in Logout request parameter then set it as redirect URL.\n      *\n      * @param redirectURL\n-     * @param opBrowserStateCookie\n+     * @param opBrowserStateCookieValue", "originalCommit": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNjA2MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545726061", "bodyText": "Addressed with b6b16b4.", "author": "chamathns", "createdAt": "2020-12-18T10:00:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTAzMg=="}], "type": "inlineReview", "revised_code": {"commit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\nindex 0cb74d6b1..2ef2d3a12 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\n@@ -259,8 +259,8 @@ public class OIDCLogoutServlet extends HttpServlet {\n     /**\n      * If postLogoutRedirectUri is send in Logout request parameter then set it as redirect URL.\n      *\n-     * @param redirectURL\n-     * @param opBrowserStateCookieValue\n+     * @param redirectURL               Redirect URL.\n+     * @param opBrowserStateCookieValue OP browser state cookie value.\n      * @return\n      * @throws UnsupportedEncodingException\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTY0Mw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545639643", "bodyText": "Can't we put this along with previous line?", "author": "Thumimku", "createdAt": "2020-12-18T08:16:08Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -717,7 +741,8 @@ private void addAuthenticationRequestToRequest(HttpServletRequest request,\n     }\n \n     private void sendRequestToFramework(HttpServletRequest request, HttpServletResponse response, String sessionDataKey,\n-                                        String type) throws ServletException, IOException {\n+                                        String type)\n+            throws ServletException, IOException {", "originalCommit": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNjAzMA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545726030", "bodyText": "Addressed with b6b16b4.", "author": "chamathns", "createdAt": "2020-12-18T10:00:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTY0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\nindex 0cb74d6b1..2ef2d3a12 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\n@@ -741,8 +741,7 @@ public class OIDCLogoutServlet extends HttpServlet {\n     }\n \n     private void sendRequestToFramework(HttpServletRequest request, HttpServletResponse response, String sessionDataKey,\n-                                        String type)\n-            throws ServletException, IOException {\n+                                        String type) throws ServletException, IOException {\n \n         CommonAuthenticationHandler commonAuthenticationHandler = new CommonAuthenticationHandler();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTc3Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545639772", "bodyText": "Param description", "author": "Thumimku", "createdAt": "2020-12-18T08:16:23Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -814,11 +839,11 @@ private boolean getOpenIDConnectSkipUserConsent(HttpServletRequest request) thro\n     /**\n      * Sends logout token to registered back-channel logout uris.\n      *\n-     * @param request\n+     * @param opbsCookieValue", "originalCommit": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNjAwMA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545726000", "bodyText": "Addressed with b6b16b4.", "author": "chamathns", "createdAt": "2020-12-18T10:00:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzOTc3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\nindex 0cb74d6b1..2ef2d3a12 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\n@@ -839,7 +838,7 @@ public class OIDCLogoutServlet extends HttpServlet {\n     /**\n      * Sends logout token to registered back-channel logout uris.\n      *\n-     * @param opbsCookieValue\n+     * @param opbsCookieValue OP browser state cookie value.\n      */\n     private void doBackChannelLogout(String opbsCookieValue) {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY0MDMxNA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545640314", "bodyText": "We are passing String instead of HttpServletRequest object, Can't this cause an issue in callee?", "author": "Thumimku", "createdAt": "2020-12-18T08:17:28Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -814,11 +839,11 @@ private boolean getOpenIDConnectSkipUserConsent(HttpServletRequest request) thro\n     /**\n      * Sends logout token to registered back-channel logout uris.\n      *\n-     * @param request\n+     * @param opbsCookieValue\n      */\n-    private void doBackChannelLogout(HttpServletRequest request) {\n+    private void doBackChannelLogout(String opbsCookieValue) {\n \n-        LogoutRequestSender.getInstance().sendLogoutRequests(request);\n+        LogoutRequestSender.getInstance().sendLogoutRequests(opbsCookieValue);", "originalCommit": "20cc869f2b182df33f2f0d4e6eee9d5a6e549138", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyNTQ3MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545725471", "bodyText": "LogoutRequestSender.getInstance().sendLogoutRequests() has multiple implementations where it can accept a String value as well.", "author": "chamathns", "createdAt": "2020-12-18T09:59:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY0MDMxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc1NjMyNg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r545756326", "bodyText": "ACK", "author": "Thumimku", "createdAt": "2020-12-18T10:57:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY0MDMxNA=="}], "type": "inlineReview", "revised_code": {"commit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\nindex 0cb74d6b1..2ef2d3a12 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\n@@ -839,7 +838,7 @@ public class OIDCLogoutServlet extends HttpServlet {\n     /**\n      * Sends logout token to registered back-channel logout uris.\n      *\n-     * @param opbsCookieValue\n+     * @param opbsCookieValue OP browser state cookie value.\n      */\n     private void doBackChannelLogout(String opbsCookieValue) {\n \n"}}, {"oid": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/b6b16b4e9375169a8e8109dead588f7651e3a54b", "message": "Resolve minor issues.", "committedDate": "2020-12-18T09:59:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1OTIyMQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546559221", "bodyText": "shall we rename this to 'addOPBSCookieValueToCacheEntry'", "author": "emswbandara", "createdAt": "2020-12-21T07:59:31Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -629,24 +648,31 @@ private void sendToFrameworkForLogout(HttpServletRequest request, HttpServletRes\n         AuthenticationRequestCacheEntry authenticationRequestCacheEntry =\n                 new AuthenticationRequestCacheEntry(authenticationRequest);\n         addAuthenticationRequestToRequest(request, authenticationRequestCacheEntry);\n+        OIDCSessionManagementUtil.removeOPBrowserStateCookie(request, response);\n         sendRequestToFramework(request, response, sessionDataKey, FrameworkConstants.RequestType.CLAIM_TYPE_OIDC);\n     }\n \n+    private void addOPBSCookieValueToCache(String opBrowserStateCookieValue, OIDCSessionDataCacheEntry cacheEntry) {", "originalCommit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMDU5Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546620592", "bodyText": "+1. Addressed with dda7bf8.", "author": "chamathns", "createdAt": "2020-12-21T10:14:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1OTIyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "dda7bf80cc7f604b87669ae653ed1ac12089cbb2", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\nindex 2ef2d3a12..d84b07e97 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\n@@ -652,9 +665,13 @@ public class OIDCLogoutServlet extends HttpServlet {\n         sendRequestToFramework(request, response, sessionDataKey, FrameworkConstants.RequestType.CLAIM_TYPE_OIDC);\n     }\n \n-    private void addOPBSCookieValueToCache(String opBrowserStateCookieValue, OIDCSessionDataCacheEntry cacheEntry) {\n+    private void addOPBSCookieValueToCacheEntry(String opBrowserStateCookieValue,\n+                                                OIDCSessionDataCacheEntry cacheEntry) {\n \n         ConcurrentMap<String, String> paramMap = cacheEntry.getParamMap();\n+        if (paramMap == null) {\n+            paramMap = new ConcurrentHashMap<>();\n+        }\n         paramMap.put(OIDCSessionConstants.OPBS_COOKIE_ID, opBrowserStateCookieValue);\n         cacheEntry.setParamMap(paramMap);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1OTQwNw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546559407", "bodyText": "can paramMap become null here? if so, handle null check", "author": "emswbandara", "createdAt": "2020-12-21T08:00:03Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -629,24 +648,31 @@ private void sendToFrameworkForLogout(HttpServletRequest request, HttpServletRes\n         AuthenticationRequestCacheEntry authenticationRequestCacheEntry =\n                 new AuthenticationRequestCacheEntry(authenticationRequest);\n         addAuthenticationRequestToRequest(request, authenticationRequestCacheEntry);\n+        OIDCSessionManagementUtil.removeOPBrowserStateCookie(request, response);\n         sendRequestToFramework(request, response, sessionDataKey, FrameworkConstants.RequestType.CLAIM_TYPE_OIDC);\n     }\n \n+    private void addOPBSCookieValueToCache(String opBrowserStateCookieValue, OIDCSessionDataCacheEntry cacheEntry) {\n+\n+        ConcurrentMap<String, String> paramMap = cacheEntry.getParamMap();\n+        paramMap.put(OIDCSessionConstants.OPBS_COOKIE_ID, opBrowserStateCookieValue);", "originalCommit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMDQ4NA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546620484", "bodyText": "Addressed with dda7bf8.", "author": "chamathns", "createdAt": "2020-12-21T10:14:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1OTQwNw=="}], "type": "inlineReview", "revised_code": {"commit": "dda7bf80cc7f604b87669ae653ed1ac12089cbb2", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\nindex 2ef2d3a12..d84b07e97 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\n@@ -652,9 +665,13 @@ public class OIDCLogoutServlet extends HttpServlet {\n         sendRequestToFramework(request, response, sessionDataKey, FrameworkConstants.RequestType.CLAIM_TYPE_OIDC);\n     }\n \n-    private void addOPBSCookieValueToCache(String opBrowserStateCookieValue, OIDCSessionDataCacheEntry cacheEntry) {\n+    private void addOPBSCookieValueToCacheEntry(String opBrowserStateCookieValue,\n+                                                OIDCSessionDataCacheEntry cacheEntry) {\n \n         ConcurrentMap<String, String> paramMap = cacheEntry.getParamMap();\n+        if (paramMap == null) {\n+            paramMap = new ConcurrentHashMap<>();\n+        }\n         paramMap.put(OIDCSessionConstants.OPBS_COOKIE_ID, opBrowserStateCookieValue);\n         cacheEntry.setParamMap(paramMap);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2Mjk5OQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546562999", "bodyText": "Need debug logs to indicate how the obps value was resolved.", "author": "mefarazath", "createdAt": "2020-12-21T08:09:03Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -238,22 +239,39 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n         response.sendRedirect(getRedirectURL(redirectURL, request));\n     }\n \n+    private String getOPBSCookieValue(HttpServletRequest request) {", "originalCommit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMDQ1NA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546620454", "bodyText": "Addressed with dda7bf8.", "author": "chamathns", "createdAt": "2020-12-21T10:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2Mjk5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "dda7bf80cc7f604b87669ae653ed1ac12089cbb2", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\nindex 2ef2d3a12..d84b07e97 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\n@@ -239,20 +239,33 @@ public class OIDCLogoutServlet extends HttpServlet {\n         response.sendRedirect(getRedirectURL(redirectURL, request));\n     }\n \n-    private String getOPBSCookieValue(HttpServletRequest request) {\n+    private String getOPBrowserState(HttpServletRequest request) {\n \n         Cookie opBrowserStateCookie = OIDCSessionManagementUtil.getOPBrowserStateCookie(request);\n         if (opBrowserStateCookie != null) {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Resolving opBrowserState from the opBrowserState Cookie in the inbound request.\");\n+            }\n             return opBrowserStateCookie.getValue();\n         } else {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"OpBrowserState cookie not found in the inbound request. Attempting to extract the \" +\n+                        \"opBrowserState from cache.\");\n+            }\n             String sessionDataKey = request.getParameter(OIDCSessionConstants.OIDC_SESSION_DATA_KEY_PARAM);\n             if (StringUtils.isNotBlank(sessionDataKey)) {\n                 OIDCSessionDataCacheEntry cacheEntry = getSessionDataFromCache(sessionDataKey);\n                 if (cacheEntry != null) {\n+                    if (log.isDebugEnabled()) {\n+                        log.debug(\"Resolving the opBrowserState from cache.\");\n+                    }\n                     return cacheEntry.getParamMap().get(OIDCSessionConstants.OPBS_COOKIE_ID);\n                 }\n             }\n         }\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Unable to resolve the opBrowser state.\");\n+        }\n         return null;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2MzYxOA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546563618", "bodyText": "I prefer to rename this something like opBrowserState?\nobps cookie was one way to track the opBrowserState. And in the subsequent requests where the cookie is not present we are actually retrieving the same opBrowserState using some other means.", "author": "mefarazath", "createdAt": "2020-12-21T08:10:38Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -129,9 +130,9 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n          */\n \n         String redirectURL;\n-        Cookie opBrowserStateCookie = OIDCSessionManagementUtil.getOPBrowserStateCookie(request);\n+        String opBrowserStateCookieValue = getOPBSCookieValue(request);", "originalCommit": "b6b16b4e9375169a8e8109dead588f7651e3a54b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMDQwNw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546620407", "bodyText": "+1. Addressed with dda7bf8.", "author": "chamathns", "createdAt": "2020-12-21T10:14:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2MzYxOA=="}], "type": "inlineReview", "revised_code": {"commit": "dda7bf80cc7f604b87669ae653ed1ac12089cbb2", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\nindex 2ef2d3a12..d84b07e97 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\n@@ -130,9 +130,9 @@ public class OIDCLogoutServlet extends HttpServlet {\n          */\n \n         String redirectURL;\n-        String opBrowserStateCookieValue = getOPBSCookieValue(request);\n+        String opBrowserState = getOPBrowserState(request);\n \n-        if (StringUtils.isBlank(opBrowserStateCookieValue)) {\n+        if (StringUtils.isBlank(opBrowserState)) {\n             String msg = OIDCSessionConstants.OPBS_COOKIE_ID + \" cookie not received. Missing session state.\";\n             if (log.isDebugEnabled()) {\n                 log.debug(msg);\n"}}, {"oid": "dda7bf80cc7f604b87669ae653ed1ac12089cbb2", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/dda7bf80cc7f604b87669ae653ed1ac12089cbb2", "message": "Refactor code.", "committedDate": "2020-12-21T10:13:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMTI2Nw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1519#discussion_r546621267", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.debug(\"Resolving opBrowserState from the opBrowserState Cookie in the inbound request.\");\n          \n          \n            \n                            log.debug(\"Resolving opBrowserState from the 'obps' Cookie in the inbound request.\");", "author": "mefarazath", "createdAt": "2020-12-21T10:15:53Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -238,22 +239,52 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n         response.sendRedirect(getRedirectURL(redirectURL, request));\n     }\n \n+    private String getOPBrowserState(HttpServletRequest request) {\n+\n+        Cookie opBrowserStateCookie = OIDCSessionManagementUtil.getOPBrowserStateCookie(request);\n+        if (opBrowserStateCookie != null) {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Resolving opBrowserState from the opBrowserState Cookie in the inbound request.\");", "originalCommit": "dda7bf80cc7f604b87669ae653ed1ac12089cbb2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a6c60a5d35f6aa8cab097eb52e7e6c04fdc45ab", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\nindex d84b07e97..cd4d6bd47 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\n@@ -244,7 +244,7 @@ public class OIDCLogoutServlet extends HttpServlet {\n         Cookie opBrowserStateCookie = OIDCSessionManagementUtil.getOPBrowserStateCookie(request);\n         if (opBrowserStateCookie != null) {\n             if (log.isDebugEnabled()) {\n-                log.debug(\"Resolving opBrowserState from the opBrowserState Cookie in the inbound request.\");\n+                log.debug(\"Resolving opBrowserState from the 'obps' Cookie in the inbound request.\");\n             }\n             return opBrowserStateCookie.getValue();\n         } else {\n"}}, {"oid": "7a6c60a5d35f6aa8cab097eb52e7e6c04fdc45ab", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/7a6c60a5d35f6aa8cab097eb52e7e6c04fdc45ab", "message": "Update components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\nCo-authored-by: Farasath Ahamed <mefarazath@gmail.com>", "committedDate": "2020-12-21T10:22:41Z", "type": "commit"}]}