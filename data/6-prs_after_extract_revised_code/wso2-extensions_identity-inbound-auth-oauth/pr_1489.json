{"pr_number": 1489, "pr_title": "Fix special character issues", "pr_createdAt": "2020-11-06T12:33:33Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1489", "timeline": [{"oid": "8ebe4ea1a6e263a9300207c972d6dd452c72d2d6", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/8ebe4ea1a6e263a9300207c972d6dd452c72d2d6", "message": "Fix special character issues", "committedDate": "2020-11-06T12:26:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU2MzIxOA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1489#discussion_r520563218", "bodyText": "Shall we have the regex as a constant", "author": "mefarazath", "createdAt": "2020-11-10T13:32:22Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "diffHunk": "@@ -1493,6 +1495,17 @@ private void validateScopeName(String scopeName) throws IdentityOAuthClientExcep\n         validateWhiteSpaces(scopeName);\n     }\n \n+    private void validateRegex(String scopeName) throws IdentityOAuthClientException {\n+\n+        String scopeValidatorRegex = \"^[^?#/()]*$\";", "originalCommit": "8ebe4ea1a6e263a9300207c972d6dd452c72d2d6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b0043446b86652560ae81c8d2d629247e60198af", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java\nindex c74ad8904..2376d2b94 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java\n\n@@ -1497,11 +1498,10 @@ public class OAuthAdminServiceImpl {\n \n     private void validateRegex(String scopeName) throws IdentityOAuthClientException {\n \n-        String scopeValidatorRegex = \"^[^?#/()]*$\";\n-        Pattern regexPattern = Pattern.compile(scopeValidatorRegex);\n+        Pattern regexPattern = Pattern.compile(SCOPE_VALIDATION_REGEX);\n         if (!regexPattern.matcher(scopeName).matches()) {\n-            String message = \"The scope name: '\" + scopeName + \"' is not valid! Scope name should satisfy the \" +\n-                    \"regex : \" + scopeValidatorRegex;\n+            String message = \"Invalid scope name. Scope name : \" + scopeName + \" cannot contain special characters \" +\n+                    \"?,#,/,( or )\";\n             throw handleClientError(INVALID_REQUEST, message);\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU2MzM0OA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1489#discussion_r520563348", "bodyText": "Any reason why we are fixing a depricated method? is it still in use?", "author": "janakamarasena", "createdAt": "2020-11-10T13:32:34Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/OAuthAdminServiceImpl.java", "diffHunk": "@@ -503,6 +503,7 @@ public void addScope(String scope, String[] claims) throws IdentityOAuthAdminExc\n         int tenantId = PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantId();\n         try {\n             if (StringUtils.isNotEmpty(scope)) {\n+                validateRegex(scope);", "originalCommit": "8ebe4ea1a6e263a9300207c972d6dd452c72d2d6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU2NTQxNg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1489#discussion_r520565416", "bodyText": "If we do not allow changing the regex, it would be user friendly if we say why the scope is invalid rather than saying it should adhere to a specific regex.\nSomething like \"Invalid scope name. A scope name cannot contain special characters x,y or z\"\nDo we have plans to make this regex configurable?", "author": "mefarazath", "createdAt": "2020-11-10T13:35:43Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/Oauth2ScopeConstants.java", "diffHunk": "@@ -49,6 +49,8 @@\n         ERROR_CODE_NOT_AUTHORIZED_ADD_INTERNAL_SCOPE(\"41008\", \"User %s is not authorized to add internal scopes\"),\n         ERROR_CODE_NOT_AUTHORIZED_UPDATE_INTERNAL_SCOPE(\"41009\", \"User %s is not authorized to update internal scopes\"),\n         ERROR_CODE_NOT_AUTHORIZED_DELETE_INTERNAL_SCOPE(\"41010\", \"User %s is not authorized to delete internal scopes\"),\n+        ERROR_CODE_BAD_REQUEST_SCOPE_NAME_NOT_SATIFIED_THE_REGEX(\"41011\", \"Scope name is not \" +", "originalCommit": "8ebe4ea1a6e263a9300207c972d6dd452c72d2d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY4MTk1OA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1489#discussion_r520681958", "bodyText": "Didn't plan for a config yet.", "author": "nilasini", "createdAt": "2020-11-10T16:07:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU2NTQxNg=="}], "type": "inlineReview", "revised_code": {"commit": "b0043446b86652560ae81c8d2d629247e60198af", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/Oauth2ScopeConstants.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/Oauth2ScopeConstants.java\nindex b4c6efc52..542a601e7 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/Oauth2ScopeConstants.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/Oauth2ScopeConstants.java\n\n@@ -49,8 +49,8 @@ public class Oauth2ScopeConstants {\n         ERROR_CODE_NOT_AUTHORIZED_ADD_INTERNAL_SCOPE(\"41008\", \"User %s is not authorized to add internal scopes\"),\n         ERROR_CODE_NOT_AUTHORIZED_UPDATE_INTERNAL_SCOPE(\"41009\", \"User %s is not authorized to update internal scopes\"),\n         ERROR_CODE_NOT_AUTHORIZED_DELETE_INTERNAL_SCOPE(\"41010\", \"User %s is not authorized to delete internal scopes\"),\n-        ERROR_CODE_BAD_REQUEST_SCOPE_NAME_NOT_SATIFIED_THE_REGEX(\"41011\", \"Scope name is not \" +\n-                \"valid! Scope name should satisfy the regex : %s\"),\n+        ERROR_CODE_BAD_REQUEST_SCOPE_NAME_NOT_SATIFIED_THE_REGEX(\"41011\", \"Invalid scope name. Scope name %s cannot \" +\n+                \"contain special characters ?,#,/,( or )\"),\n         ERROR_CODE_FAILED_TO_REGISTER_SCOPE(\"51001\", \"Error occurred while registering scope %s.\"),\n         ERROR_CODE_FAILED_TO_GET_ALL_SCOPES(\"51002\", \"Error occurred while retrieving all available scopes.\"),\n         ERROR_CODE_FAILED_TO_GET_SCOPE_BY_NAME(\"51003\", \"Error occurred while retrieving scope %s.\"),\n"}}, {"oid": "b0043446b86652560ae81c8d2d629247e60198af", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/b0043446b86652560ae81c8d2d629247e60198af", "message": "Resolve comments", "committedDate": "2020-11-10T17:29:12Z", "type": "commit"}, {"oid": "b0043446b86652560ae81c8d2d629247e60198af", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/b0043446b86652560ae81c8d2d629247e60198af", "message": "Resolve comments", "committedDate": "2020-11-10T17:29:12Z", "type": "forcePushed"}]}