{"pr_number": 1365, "pr_title": "Return default token endpoint for issuer ID in the tenant-qualified URLs mode", "pr_createdAt": "2020-04-24T10:29:51Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NTk4Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414475982", "bodyText": "This shouldn't be a runtime exception right?\nShall we throw a IdentityOAuth2Exception with a proper error message and including the original exception", "author": "mefarazath", "createdAt": "2020-04-24T10:39:42Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,22 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                throw new OAuthRuntimeException(\"Error while building url for context: \" + OAUTH2_TOKEN_EP_URL);", "originalCommit": "5bfee42bc134416e7d6e1fa7c22bb9b45b138692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4MzgyOQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414483829", "bodyText": "Yes. The PR is now updated.", "author": "chamathns", "createdAt": "2020-04-24T10:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NTk4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "11277d223da66490be57b0a7d18a28bb209702e4", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\nindex 2f8e78b55..2039027b7 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\n\n@@ -3131,7 +3131,8 @@ public class OAuth2Util {\n             try {\n                 return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n             } catch (URLBuilderException e) {\n-                throw new OAuthRuntimeException(\"Error while building url for context: \" + OAUTH2_TOKEN_EP_URL);\n+                String errorMsg = String.format(\"Error while building url for '%s' context\", OAUTH2_TOKEN_EP_URL);\n+                throw new IdentityOAuth2Exception(errorMsg, e);\n             }\n         } else {\n             IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n"}}, {"oid": "11277d223da66490be57b0a7d18a28bb209702e4", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/11277d223da66490be57b0a7d18a28bb209702e4", "message": "Return default token endpoint for issuer ID in the tenant-qualified URLs mode", "committedDate": "2020-04-24T10:53:00Z", "type": "commit"}, {"oid": "11277d223da66490be57b0a7d18a28bb209702e4", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/11277d223da66490be57b0a7d18a28bb209702e4", "message": "Return default token endpoint for issuer ID in the tenant-qualified URLs mode", "committedDate": "2020-04-24T10:53:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDI5NA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414494294", "bodyText": "I think it would be better say \"Error while retrieving ID Token issuer value for tenantDomain: \" + tenantDomain\nhere.\nCan you check how the exception thrown is handled? If we are handling and logging a similar message as I suggested above we do not need to change.", "author": "mefarazath", "createdAt": "2020-04-24T11:13:07Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,23 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                String errorMsg = String.format(\"Error while building url for '%s' context\", OAUTH2_TOKEN_EP_URL);", "originalCommit": "11277d223da66490be57b0a7d18a28bb209702e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5OTY2MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414499661", "bodyText": "It only has \"Error while retrieving OIDC Id token issuer\" + e. No mention of a tenant domain. Should we add the tenant domain there?", "author": "chamathns", "createdAt": "2020-04-24T11:22:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDI5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwNDQxMQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414504411", "bodyText": "Okay let add it there", "author": "mefarazath", "createdAt": "2020-04-24T11:31:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDI5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwNDgzNw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414504837", "bodyText": "Also lets try to include the tenantDomain here too", "author": "mefarazath", "createdAt": "2020-04-24T11:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDI5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxMTE1Nw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414511157", "bodyText": "Updated the PR with the change", "author": "chamathns", "createdAt": "2020-04-24T11:43:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDI5NA=="}], "type": "inlineReview", "revised_code": {"commit": "5654c3971e0ccb838191e1bf6df56a404df617d3", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\nindex 2039027b7..b9177745a 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\n\n@@ -3131,7 +3131,8 @@ public class OAuth2Util {\n             try {\n                 return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n             } catch (URLBuilderException e) {\n-                String errorMsg = String.format(\"Error while building url for '%s' context\", OAUTH2_TOKEN_EP_URL);\n+                String errorMsg = String.format(\"Error while building the absolute url of the context: '%s',  for the\" +\n+                        \" tenant domain: '%s'\", OAUTH2_TOKEN_EP_URL, tenantDomain);\n                 throw new IdentityOAuth2Exception(errorMsg, e);\n             }\n         } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzMjc0NQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414532745", "bodyText": "Can we present this message more clearly?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String errorMsg = String.format(\"Error while building url for '%s' context for tenant domain: %s\",\n          \n          \n            \n                            String errorMsg = String.format(\"Error while building url  '%s' for tenant domain: %s\",", "author": "denuwanthi", "createdAt": "2020-04-24T12:21:05Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -3127,14 +3127,24 @@ public static AuthenticatedUser createAuthenticatedUser(String username, String\n \n     public static String getIdTokenIssuer(String tenantDomain) throws IdentityOAuth2Exception {\n \n-        IdentityProvider identityProvider = getResidentIdp(tenantDomain);\n-        FederatedAuthenticatorConfig[] fedAuthnConfigs = identityProvider.getFederatedAuthenticatorConfigs();\n-        // Get OIDC authenticator\n-        FederatedAuthenticatorConfig oidcAuthenticatorConfig =\n-                IdentityApplicationManagementUtil.getFederatedAuthenticator(fedAuthnConfigs,\n-                        IdentityApplicationConstants.Authenticator.OIDC.NAME);\n-        return IdentityApplicationManagementUtil.getProperty(oidcAuthenticatorConfig.getProperties(),\n-                IDP_ENTITY_ID).getValue();\n+        if (IdentityTenantUtil.isTenantQualifiedUrlsEnabled()) {\n+            try {\n+                return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n+            } catch (URLBuilderException e) {\n+                String errorMsg = String.format(\"Error while building url for '%s' context for tenant domain: %s\",", "originalCommit": "1e5a0c8916166a392cb62521d7bcddb459bc2c40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzNzUxMg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1365#discussion_r414537512", "bodyText": "Updated with the changes.", "author": "chamathns", "createdAt": "2020-04-24T12:28:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzMjc0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5654c3971e0ccb838191e1bf6df56a404df617d3", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\nindex 681d16326..b9177745a 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\n\n@@ -3131,8 +3131,8 @@ public class OAuth2Util {\n             try {\n                 return ServiceURLBuilder.create().addPath(OAUTH2_TOKEN_EP_URL).build().getAbsolutePublicURL();\n             } catch (URLBuilderException e) {\n-                String errorMsg = String.format(\"Error while building url for '%s' context for tenant domain: %s\",\n-                        OAUTH2_TOKEN_EP_URL, tenantDomain);\n+                String errorMsg = String.format(\"Error while building the absolute url of the context: '%s',  for the\" +\n+                        \" tenant domain: '%s'\", OAUTH2_TOKEN_EP_URL, tenantDomain);\n                 throw new IdentityOAuth2Exception(errorMsg, e);\n             }\n         } else {\n"}}, {"oid": "5654c3971e0ccb838191e1bf6df56a404df617d3", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/5654c3971e0ccb838191e1bf6df56a404df617d3", "message": "Update error messages", "committedDate": "2020-04-24T12:25:53Z", "type": "commit"}, {"oid": "5654c3971e0ccb838191e1bf6df56a404df617d3", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/5654c3971e0ccb838191e1bf6df56a404df617d3", "message": "Update error messages", "committedDate": "2020-04-24T12:25:53Z", "type": "forcePushed"}]}