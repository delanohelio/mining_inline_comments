{"pr_number": 1508, "pr_title": "Improve backchannel logout to be triggered during session_terminate event flow and improve sso session binding to check the commonAuthId validity", "pr_createdAt": "2020-11-30T06:52:26Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508", "timeline": [{"oid": "be28dfb07b7720445f367b9150c5345873234d02", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/be28dfb07b7720445f367b9150c5345873234d02", "message": "Improve backchannel logout to be triggered during session_terminate event flow and improve sso session binding to check the commonAuthId validity", "committedDate": "2020-12-01T10:27:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNDQ2NQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533314465", "bodyText": "shall we merge the nested if condition with this?", "author": "emswbandara", "createdAt": "2020-12-01T10:48:51Z", "path": "components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java", "diffHunk": "@@ -2586,6 +2593,49 @@ private String appendAuthenticatedIDPs(SessionDataCacheEntry sessionDataCacheEnt\n         return redirectURL;\n     }\n \n+    /**\n+     * Store opbscookie in session context.\n+     *\n+     * @param sessionDataCacheEntry SessionDataCacheEntry.\n+     * @param opbscookie            opbscookie value.\n+     */\n+    private void storeOpbsInSessionContext(SessionDataCacheEntry sessionDataCacheEntry, String opbscookie) {\n+\n+        String sessionContextIdentifier = getSessionContextIdentifier(sessionDataCacheEntry);\n+        if (StringUtils.isNotBlank(sessionContextIdentifier)) {\n+            SessionContext sessionContext = FrameworkUtils.getSessionContextFromCache(sessionContextIdentifier);\n+            if (sessionContext != null) {", "originalCommit": "be28dfb07b7720445f367b9150c5345873234d02", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyNTg5NA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533325894", "bodyText": "there are two else part here", "author": "piraveena", "createdAt": "2020-12-01T11:07:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNDQ2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d1a6e4d1d3139de85598482c0137bea08805022f", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java b/components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java\nindex a376d4067..ba6ec40c8 100644\n--- a/components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java\n+++ b/components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java\n\n@@ -2614,6 +2614,10 @@ public class OAuth2AuthzEndpoint {\n                         log.debug(\"LoggedIn user attribute is not found in the sessionDataCacheEntry\");\n                     }\n                 }\n+            } else {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Session context is not found for the session identifier: \" + sessionContextIdentifier);\n+                }\n             }\n         } else {\n             if (log.isDebugEnabled()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNTA3NQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533315075", "bodyText": "let's use multi-line comments", "author": "emswbandara", "createdAt": "2020-12-01T10:49:44Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/token/bindings/impl/SSOSessionBasedTokenBinder.java", "diffHunk": "@@ -113,6 +118,28 @@ public void clearTokenBindingElements(HttpServletRequest request, HttpServletRes\n     @Override\n     public boolean isValidTokenBinding(Object request, String bindingReference) {\n \n+        try {\n+            String sessionIdentifier = getTokenBindingValue((HttpServletRequest) request);\n+            if (StringUtils.isBlank(sessionIdentifier)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"CommonAuthId cookie is not found in the request.\");\n+                }\n+                return false;\n+            }\n+            // Retrieve session context information using sessionIdentifier in order to check the validity of", "originalCommit": "be28dfb07b7720445f367b9150c5345873234d02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d1a6e4d1d3139de85598482c0137bea08805022f", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/token/bindings/impl/SSOSessionBasedTokenBinder.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/token/bindings/impl/SSOSessionBasedTokenBinder.java\nindex 79f6df0be..5799f64a4 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/token/bindings/impl/SSOSessionBasedTokenBinder.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/token/bindings/impl/SSOSessionBasedTokenBinder.java\n\n@@ -126,8 +126,10 @@ public class SSOSessionBasedTokenBinder extends AbstractTokenBinder {\n                 }\n                 return false;\n             }\n-            // Retrieve session context information using sessionIdentifier in order to check the validity of\n-            // commonAuthId cookie.\n+            /*\n+            Retrieve session context information using sessionIdentifier in order to check the validity of\n+            commonAuthId cookie.\n+            */\n             SessionContext sessionContext = FrameworkUtils.getSessionContextFromCache(sessionIdentifier);\n             if (sessionContext == null) {\n                 if (log.isDebugEnabled()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNTYzMA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533315630", "bodyText": "let's use StringUtils.isNotBlank", "author": "emswbandara", "createdAt": "2020-12-01T10:50:38Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java", "diffHunk": "@@ -85,6 +81,73 @@ public String getName() {\n         return \"OIDCLogoutEventHandler\";\n     }\n \n+    private boolean isLogoutInitiatedFromOIDCApp(Event event) {\n+\n+        HttpServletRequest request = getHttpRequestFromEvent(event);\n+        if (request != null) {\n+            if (StringUtils.equals(request.getParameter(TYPE), FrameworkConstants.RequestType.CLAIM_TYPE_OIDC)) {\n+                // If a logout request is triggered from an OIDC app then the OIDCLogoutServlet\n+                // and OIDCLogoutEventHandler both are triggered and the logout request is handled in both\n+                // places. https://github.com/wso2/product-is/issues/6418\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private String getopbsCookieId(Event event) {\n+\n+        HttpServletRequest request = getHttpRequestFromEvent(event);\n+        String opbsCookie = null;\n+        if (request != null) {\n+            // Get the opbscookie from request.\n+            opbsCookie = getOpbsCookieFromRequest(request);\n+        }\n+        if (StringUtils.isEmpty(opbsCookie)) {", "originalCommit": "be28dfb07b7720445f367b9150c5345873234d02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d1a6e4d1d3139de85598482c0137bea08805022f", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java\nindex 81938f3a3..f076758ff 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java\n\n@@ -103,7 +103,7 @@ public class OIDCLogoutEventHandler extends AbstractEventHandler {\n             // Get the opbscookie from request.\n             opbsCookie = getOpbsCookieFromRequest(request);\n         }\n-        if (StringUtils.isEmpty(opbsCookie)) {\n+        if (StringUtils.isBlank(opbsCookie)) {\n             // If opbscookie is not found in the request, get from session context.\n             if (log.isDebugEnabled()) {\n                 log.debug(\"HttpServletRequest object is not found in the event. Hence getting opbs cookie from the \" +\n"}}, {"oid": "d1a6e4d1d3139de85598482c0137bea08805022f", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/d1a6e4d1d3139de85598482c0137bea08805022f", "message": "Improve backchannel logout to be triggered during session_terminate event flow and improve sso session binding to check the commonAuthId validity", "committedDate": "2020-12-01T11:01:24Z", "type": "commit"}, {"oid": "d1a6e4d1d3139de85598482c0137bea08805022f", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/d1a6e4d1d3139de85598482c0137bea08805022f", "message": "Improve backchannel logout to be triggered during session_terminate event flow and improve sso session binding to check the commonAuthId validity", "committedDate": "2020-12-01T11:01:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM5MDY3MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533390671", "bodyText": "Better if we could add a description to this param for consistency.", "author": "chamathns", "createdAt": "2020-12-01T13:02:57Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/DefaultLogoutTokenBuilder.java", "diffHunk": "@@ -213,20 +238,17 @@ private String getSigningTenantDomain(OAuthAppDO oAuthAppDO) {\n     /**\n      * Returns the OIDCsessionState of the obps cookie.\n      *\n-     * @param request\n+     * @param opbscookie", "originalCommit": "d1a6e4d1d3139de85598482c0137bea08805022f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f5f3d6ee7bde42aad792d9a79c21af4378ed506", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/DefaultLogoutTokenBuilder.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/DefaultLogoutTokenBuilder.java\nindex ca56f6ec4..3107c8234 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/DefaultLogoutTokenBuilder.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/DefaultLogoutTokenBuilder.java\n\n@@ -238,8 +238,8 @@ public class DefaultLogoutTokenBuilder implements LogoutTokenBuilder {\n     /**\n      * Returns the OIDCsessionState of the obps cookie.\n      *\n-     * @param opbscookie\n-     * @return\n+     * @param opbscookie OpbsCookie.\n+     * @return OIDCSessionState\n      */\n     private OIDCSessionState getSessionState(String opbscookie) {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM5MDc2Mw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533390763", "bodyText": "Better if we could add a description to this param for consistency.", "author": "chamathns", "createdAt": "2020-12-01T13:03:09Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutRequestSender.java", "diffHunk": "@@ -89,18 +106,19 @@ public void sendLogoutRequests(HttpServletRequest request) {\n         }\n     }\n \n+\n     /**\n      * Returns a Map with logout tokens and back-channel logut Url of Service providers.\n      *\n-     * @param request\n+     * @param opbsCookie", "originalCommit": "d1a6e4d1d3139de85598482c0137bea08805022f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f5f3d6ee7bde42aad792d9a79c21af4378ed506", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutRequestSender.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutRequestSender.java\nindex 4bf67265d..8bb3d4133 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutRequestSender.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutRequestSender.java\n\n@@ -110,7 +110,7 @@ public class LogoutRequestSender {\n     /**\n      * Returns a Map with logout tokens and back-channel logut Url of Service providers.\n      *\n-     * @param opbsCookie\n+     * @param opbsCookie OpbsCookie.\n      * @return Map with logoutToken, back-channel logout Url.\n      */\n     private Map<String, String> getLogoutTokenList(String opbsCookie) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM5MTEzMA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533391130", "bodyText": "Shall we use sentence-case here for the descriptions?", "author": "chamathns", "createdAt": "2020-12-01T13:03:47Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutTokenBuilder.java", "diffHunk": "@@ -38,4 +38,14 @@\n      */\n     Map<String, String> buildLogoutToken(HttpServletRequest request)\n             throws IdentityOAuth2Exception, InvalidOAuthClientException;\n+\n+    /**\n+     * Returns logout token and back-channel logout uri map.\n+     *\n+     * @param opbsCookie opbscookie value\n+     * @return a map of logout tokens and corresponding back-channel logout URLs.\n+     * @throws IdentityOAuth2Exception", "originalCommit": "d1a6e4d1d3139de85598482c0137bea08805022f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f5f3d6ee7bde42aad792d9a79c21af4378ed506", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutTokenBuilder.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutTokenBuilder.java\nindex f369c297f..07a3c043e 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutTokenBuilder.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/backchannellogout/LogoutTokenBuilder.java\n\n@@ -42,8 +42,8 @@ public interface LogoutTokenBuilder {\n     /**\n      * Returns logout token and back-channel logout uri map.\n      *\n-     * @param opbsCookie opbscookie value\n-     * @return a map of logout tokens and corresponding back-channel logout URLs.\n+     * @param opbsCookie Opbscookie value.\n+     * @return A map of logout tokens and corresponding back-channel logout URLs.\n      * @throws IdentityOAuth2Exception\n      */\n     Map<String, String> buildLogoutToken(String opbsCookie)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM5MTYzNg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1508#discussion_r533391636", "bodyText": "Shall we make use of a comment block here?", "author": "chamathns", "createdAt": "2020-12-01T13:04:39Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java", "diffHunk": "@@ -85,6 +81,73 @@ public String getName() {\n         return \"OIDCLogoutEventHandler\";\n     }\n \n+    private boolean isLogoutInitiatedFromOIDCApp(Event event) {\n+\n+        HttpServletRequest request = getHttpRequestFromEvent(event);\n+        if (request != null) {\n+            if (StringUtils.equals(request.getParameter(TYPE), FrameworkConstants.RequestType.CLAIM_TYPE_OIDC)) {\n+                // If a logout request is triggered from an OIDC app then the OIDCLogoutServlet\n+                // and OIDCLogoutEventHandler both are triggered and the logout request is handled in both\n+                // places. https://github.com/wso2/product-is/issues/6418", "originalCommit": "d1a6e4d1d3139de85598482c0137bea08805022f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f5f3d6ee7bde42aad792d9a79c21af4378ed506", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java\nindex f076758ff..7ddb6df1d 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/handler/OIDCLogoutEventHandler.java\n\n@@ -86,9 +86,10 @@ public class OIDCLogoutEventHandler extends AbstractEventHandler {\n         HttpServletRequest request = getHttpRequestFromEvent(event);\n         if (request != null) {\n             if (StringUtils.equals(request.getParameter(TYPE), FrameworkConstants.RequestType.CLAIM_TYPE_OIDC)) {\n-                // If a logout request is triggered from an OIDC app then the OIDCLogoutServlet\n-                // and OIDCLogoutEventHandler both are triggered and the logout request is handled in both\n-                // places. https://github.com/wso2/product-is/issues/6418\n+                /* If a logout request is triggered from an OIDC app then the OIDCLogoutServlet\n+                and OIDCLogoutEventHandler both are triggered and the logout request is handled in both\n+                places. https://github.com/wso2/product-is/issues/6418\n+                */\n                 return true;\n             }\n         }\n"}}, {"oid": "3d4e7bfdae4cf8f1397da05ea74eebe097efb182", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/3d4e7bfdae4cf8f1397da05ea74eebe097efb182", "message": "Add unit tests for storeOpbsInSessionContext flow", "committedDate": "2020-12-01T15:48:03Z", "type": "commit"}, {"oid": "7f5f3d6ee7bde42aad792d9a79c21af4378ed506", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/7f5f3d6ee7bde42aad792d9a79c21af4378ed506", "message": "Address comments", "committedDate": "2020-12-01T15:54:18Z", "type": "commit"}]}