{"pr_number": 1443, "pr_title": "Implement Oauth Event Mechanism at Revoke from system listenrs", "pr_createdAt": "2020-09-11T12:46:57Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYxOTkzMQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487619931", "bodyText": "Can we use Collections.emptyMap(), instead of creating new map object.", "author": "ruwanta", "createdAt": "2020-09-14T02:27:54Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -474,4 +479,30 @@ private void removeClaimCacheEntry(String username, UserStoreManager userStoreMa\n         }\n         ClaimCache.getInstance().clearCacheEntry(cacheEntry.getClaimCacheKey());\n     }\n+\n+    private void invokePostRevocationListeners(AccessTokenDO accessTokenDO) {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            try {\n+                Map<String, Object> paramMap = new HashMap<>();\n+                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, paramMap);\n+            } catch (IdentityOAuth2Exception e) {\n+                log.error(\"Error occurred when invoking post token revoke listener \", e);\n+            }\n+        }\n+    }\n+\n+    private void invokePreRevocationListeners(AccessTokenDO accessTokenDO) throws IdentityOAuth2Exception {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            Map<String, Object> paramMap = new HashMap<>();", "originalCommit": "b28bfae4a96729a821fc14a3db4ade7333a520a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1b9a349dcd62e900833db68023045d244c98d0c", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\nindex d635fbf66..dec09a367 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\n\n@@ -486,8 +486,7 @@ public class IdentityOathEventListener extends AbstractIdentityUserOperationEven\n                 .getOAuthEventInterceptorProxy();\n         if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n             try {\n-                Map<String, Object> paramMap = new HashMap<>();\n-                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, paramMap);\n+                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n             } catch (IdentityOAuth2Exception e) {\n                 log.error(\"Error occurred when invoking post token revoke listener \", e);\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYxOTk1Ng==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487619956", "bodyText": "Can we use Collections.emptyMap(), instead of creating new map object.", "author": "ruwanta", "createdAt": "2020-09-14T02:28:05Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -474,4 +479,30 @@ private void removeClaimCacheEntry(String username, UserStoreManager userStoreMa\n         }\n         ClaimCache.getInstance().clearCacheEntry(cacheEntry.getClaimCacheKey());\n     }\n+\n+    private void invokePostRevocationListeners(AccessTokenDO accessTokenDO) {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            try {\n+                Map<String, Object> paramMap = new HashMap<>();", "originalCommit": "b28bfae4a96729a821fc14a3db4ade7333a520a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1b9a349dcd62e900833db68023045d244c98d0c", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\nindex d635fbf66..dec09a367 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\n\n@@ -486,8 +486,7 @@ public class IdentityOathEventListener extends AbstractIdentityUserOperationEven\n                 .getOAuthEventInterceptorProxy();\n         if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n             try {\n-                Map<String, Object> paramMap = new HashMap<>();\n-                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, paramMap);\n+                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n             } catch (IdentityOAuth2Exception e) {\n                 log.error(\"Error occurred when invoking post token revoke listener \", e);\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYyMDIxNg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487620216", "bodyText": "Can we change the method signature to\nprivate boolean revokeTokens(AccessTokenDO[] accessTokens) ,\nWhich helps us not to create a List from Array", "author": "ruwanta", "createdAt": "2020-09-14T02:29:15Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -327,23 +330,27 @@ private boolean revokeTokens(String username, UserStoreManager userStoreManager)\n                 // Also, if token binding is enabled, there can be multiple active tokens for the same user, scope\n                 // and client combination.\n                 // So need to revoke all the tokens.\n-                return revokeTokens(accessTokens);\n+                try {\n+                    return revokeTokens(accessTokens);\n+                } catch (IdentityOAuth2Exception e) {\n+                    String errorMsg = \"Error occurred while revoking Access Token\";\n+                    log.error(errorMsg, e);\n+                    throw new UserStoreException(e);\n+                }\n             }\n         }\n         return true;\n     }\n \n-    private boolean revokeTokens(List<String> accessTokens) throws UserStoreException {\n+    private boolean revokeTokens(List<AccessTokenDO> accessTokens) throws IdentityOAuth2Exception {", "originalCommit": "b28bfae4a96729a821fc14a3db4ade7333a520a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcyMzkxNw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487723917", "bodyText": "This was leads to change [1] from List to Array.\n[1] - https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443/files/b28bfae4a96729a821fc14a3db4ade7333a520a1#diff-0daa59162506998f3129964e2307f192R334", "author": "tharindu1st", "createdAt": "2020-09-14T08:02:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYyMDIxNg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "a1b9a349dcd62e900833db68023045d244c98d0c", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/a1b9a349dcd62e900833db68023045d244c98d0c", "message": "Implement Oauth Event Mechanism at Revoke from system listenrs", "committedDate": "2020-09-14T08:08:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTc1NA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487759754", "bodyText": "Do we need log here? We can just throw here and log in the caller method.", "author": "IsuraD", "createdAt": "2020-09-14T09:02:30Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -474,4 +479,28 @@ private void removeClaimCacheEntry(String username, UserStoreManager userStoreMa\n         }\n         ClaimCache.getInstance().clearCacheEntry(cacheEntry.getClaimCacheKey());\n     }\n+\n+    private void invokePostRevocationListeners(AccessTokenDO accessTokenDO) {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            try {\n+                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n+            } catch (IdentityOAuth2Exception e) {\n+                log.error(\"Error occurred when invoking post token revoke listener \", e);", "originalCommit": "a1b9a349dcd62e900833db68023045d244c98d0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc2OTM3NQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487769375", "bodyText": "since we need to iterate over the tokens we just log not throw into upper level", "author": "tharindu1st", "createdAt": "2020-09-14T09:18:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTc1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NDYxNw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487774617", "bodyText": "Samething should be applied for PreRevocation?", "author": "IsuraD", "createdAt": "2020-09-14T09:27:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTc1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NTM5MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487775391", "bodyText": "Do you think, we need to skip revocation process through listeners?", "author": "IsuraD", "createdAt": "2020-09-14T09:28:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTc1NA=="}], "type": "inlineReview", "revised_code": {"commit": "784e452889ae2325e21f6691cc5f440a76273e11", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\nindex dec09a367..31da8f1a6 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\n\n@@ -500,7 +500,6 @@ public class IdentityOathEventListener extends AbstractIdentityUserOperationEven\n         if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n             oAuthEventInterceptorProxy.onPreTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n         }\n-\n     }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc1OTg3MA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1443#discussion_r487759870", "bodyText": "No need this line", "author": "IsuraD", "createdAt": "2020-09-14T09:02:41Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java", "diffHunk": "@@ -474,4 +479,28 @@ private void removeClaimCacheEntry(String username, UserStoreManager userStoreMa\n         }\n         ClaimCache.getInstance().clearCacheEntry(cacheEntry.getClaimCacheKey());\n     }\n+\n+    private void invokePostRevocationListeners(AccessTokenDO accessTokenDO) {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            try {\n+                oAuthEventInterceptorProxy.onPostTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n+            } catch (IdentityOAuth2Exception e) {\n+                log.error(\"Error occurred when invoking post token revoke listener \", e);\n+            }\n+        }\n+    }\n+\n+    private void invokePreRevocationListeners(AccessTokenDO accessTokenDO) throws IdentityOAuth2Exception {\n+\n+        OAuthEventInterceptor oAuthEventInterceptorProxy = OAuthComponentServiceHolder.getInstance()\n+                .getOAuthEventInterceptorProxy();\n+        if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n+            oAuthEventInterceptorProxy.onPreTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n+        }\n+", "originalCommit": "a1b9a349dcd62e900833db68023045d244c98d0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "784e452889ae2325e21f6691cc5f440a76273e11", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\nindex dec09a367..31da8f1a6 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/listener/IdentityOathEventListener.java\n\n@@ -500,7 +500,6 @@ public class IdentityOathEventListener extends AbstractIdentityUserOperationEven\n         if (oAuthEventInterceptorProxy != null && oAuthEventInterceptorProxy.isEnabled()) {\n             oAuthEventInterceptorProxy.onPreTokenRevocationBySystem(accessTokenDO, Collections.emptyMap());\n         }\n-\n     }\n \n }\n"}}, {"oid": "784e452889ae2325e21f6691cc5f440a76273e11", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/784e452889ae2325e21f6691cc5f440a76273e11", "message": "Implement Oauth Event Mechanism at Revoke from system listenrs", "committedDate": "2020-09-14T09:19:55Z", "type": "commit"}, {"oid": "784e452889ae2325e21f6691cc5f440a76273e11", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/784e452889ae2325e21f6691cc5f440a76273e11", "message": "Implement Oauth Event Mechanism at Revoke from system listenrs", "committedDate": "2020-09-14T09:19:55Z", "type": "forcePushed"}, {"oid": "d975b16c4b98fef6a855090d143b8ab31f7f5d0f", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/d975b16c4b98fef6a855090d143b8ab31f7f5d0f", "message": "add skipping if pre token revocation throws errors", "committedDate": "2020-09-14T09:48:45Z", "type": "commit"}, {"oid": "d975b16c4b98fef6a855090d143b8ab31f7f5d0f", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/d975b16c4b98fef6a855090d143b8ab31f7f5d0f", "message": "add skipping if pre token revocation throws errors", "committedDate": "2020-09-14T09:48:45Z", "type": "forcePushed"}]}