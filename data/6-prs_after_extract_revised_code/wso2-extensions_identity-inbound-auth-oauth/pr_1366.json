{"pr_number": 1366, "pr_title": "Add unit tests for getIDTokenIssuer", "pr_createdAt": "2020-04-24T14:52:40Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1366", "timeline": [{"oid": "3d92fe43e73c551e4b4040145f1a48940ed7ee4b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/3d92fe43e73c551e4b4040145f1a48940ed7ee4b", "message": "add unit tests", "committedDate": "2020-04-24T14:53:22Z", "type": "forcePushed"}, {"oid": "dd0031ae4c980be43b1f345b945ee88b16bd542f", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/dd0031ae4c980be43b1f345b945ee88b16bd542f", "message": "add unit tests", "committedDate": "2020-04-24T15:25:37Z", "type": "commit"}, {"oid": "dd0031ae4c980be43b1f345b945ee88b16bd542f", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/dd0031ae4c980be43b1f345b945ee88b16bd542f", "message": "add unit tests", "committedDate": "2020-04-24T15:25:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYyODY3Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1366#discussion_r442628672", "bodyText": "Handle the exception. We can use  expectedExceptions", "author": "piraveena", "createdAt": "2020-06-19T04:48:25Z", "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "diffHunk": "@@ -953,14 +972,59 @@ public void testGetIDTokenIssuer(String oidcIDTokenIssuer, String oauth2TokenEPU\n         assertEquals(OAuth2Util.getIDTokenIssuer(), issuer);\n     }\n \n+    @DataProvider(name = \"IDTokenIssuerData2\")\n+    public Object[][] idTokenIssuerData2() {\n+\n+        return new Object[][]{\n+                // tenant-qualified URL support\n+                // OIDC Config url\n+                // tenant domain\n+                // expected\n+                {false, \"https://localhost:9443/testIssuer\", \"wso2.com\", \"https://localhost:9443/testIssuer\"},\n+                {false, \"https://localhost:9443/testIssuer\", \"\", \"https://localhost:9443/testIssuer\"},\n+                {true, \"https://localhost:9443/testIssuer\", \"\", \"https://localhost:9443/oauth2/token\"},\n+                {true, \"https://localhost:9443/testIssuer\", \"wso2.com\", \"https://localhost:9443/t/wso2\" +\n+                        \".com/oauth2/token\"}\n+\n+        };\n+    }\n+\n+    @Test(dataProvider = \"IDTokenIssuerData2\")\n+    public void testGetIDTokenIssuer2(boolean enableTenantURLSupport, String oidcConfigUrl, String tenantDomain,\n+                                      String expected) {\n+\n+        when(IdentityTenantUtil.isTenantQualifiedUrlsEnabled()).thenReturn(enableTenantURLSupport);\n+        when(IdentityTenantUtil.getTenantDomainFromContext()).thenReturn(tenantDomain);\n+        when(PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantDomain()).thenReturn(\"carbon.super\");\n+\n+        FederatedAuthenticatorConfig[] federatedAuthenticatorConfigs = new FederatedAuthenticatorConfig[0];\n+        when(mockIdentityProvider.getFederatedAuthenticatorConfigs()).thenReturn(federatedAuthenticatorConfigs);\n+\n+        mockStatic(IdentityApplicationManagementUtil.class);\n+        mockStatic(FederatedAuthenticatorConfig.class);\n+        Property property = mock(Property.class);\n+        Property[] properties = new Property[0];\n+        when(IdentityApplicationManagementUtil.getFederatedAuthenticator(federatedAuthenticatorConfigs,\n+                \"openidconnect\")).thenReturn(mockFederatedAuthenticatorConfig);\n+        when(mockFederatedAuthenticatorConfig.getProperties()).thenReturn(properties);\n+        when(IdentityApplicationManagementUtil.getProperty(properties, \"IdPEntityId\")).thenReturn(property);\n+        when(property.getValue()).thenReturn(oidcConfigUrl);\n+        try {\n+            assertEquals(getIdTokenIssuer(tenantDomain), expected);\n+        } catch (IdentityOAuth2Exception e) {\n+            //mock request, hence ignored.", "originalCommit": "dd0031ae4c980be43b1f345b945ee88b16bd542f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0d4bcaf5797a7d5dc2d7e1646a138a8f2b745cd", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java b/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\nindex f3b8dbc2a..e78be7fcb 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\n\n@@ -972,8 +972,8 @@ public class OAuth2UtilTest extends PowerMockIdentityBaseTest {\n         assertEquals(OAuth2Util.getIDTokenIssuer(), issuer);\n     }\n \n-    @DataProvider(name = \"IDTokenIssuerData2\")\n-    public Object[][] idTokenIssuerData2() {\n+    @DataProvider(name = \"TenantQualifiedURLsIDTokenIssuerData\")\n+    public Object[][] tenantQualifiedURLsIdTokenIssuerData() {\n \n         return new Object[][]{\n                 // tenant-qualified URL support\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYyODc1MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1366#discussion_r442628751", "bodyText": "provide a meaning ful name for this dataprovider", "author": "piraveena", "createdAt": "2020-06-19T04:48:44Z", "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "diffHunk": "@@ -953,14 +972,59 @@ public void testGetIDTokenIssuer(String oidcIDTokenIssuer, String oauth2TokenEPU\n         assertEquals(OAuth2Util.getIDTokenIssuer(), issuer);\n     }\n \n+    @DataProvider(name = \"IDTokenIssuerData2\")", "originalCommit": "dd0031ae4c980be43b1f345b945ee88b16bd542f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0d4bcaf5797a7d5dc2d7e1646a138a8f2b745cd", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java b/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\nindex f3b8dbc2a..e78be7fcb 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\n\n@@ -972,8 +972,8 @@ public class OAuth2UtilTest extends PowerMockIdentityBaseTest {\n         assertEquals(OAuth2Util.getIDTokenIssuer(), issuer);\n     }\n \n-    @DataProvider(name = \"IDTokenIssuerData2\")\n-    public Object[][] idTokenIssuerData2() {\n+    @DataProvider(name = \"TenantQualifiedURLsIDTokenIssuerData\")\n+    public Object[][] tenantQualifiedURLsIdTokenIssuerData() {\n \n         return new Object[][]{\n                 // tenant-qualified URL support\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYyOTAxMA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1366#discussion_r442629010", "bodyText": "add the access modifier", "author": "piraveena", "createdAt": "2020-06-19T04:49:42Z", "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "diffHunk": "@@ -162,6 +169,15 @@\n     @Mock\n     private AxisConfiguration mockAxisConfiguration;\n \n+    @Mock\n+    FederatedAuthenticatorConfig mockFederatedAuthenticatorConfig = new FederatedAuthenticatorConfig();", "originalCommit": "dd0031ae4c980be43b1f345b945ee88b16bd542f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0d4bcaf5797a7d5dc2d7e1646a138a8f2b745cd", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java b/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\nindex f3b8dbc2a..e78be7fcb 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\n\n@@ -170,7 +170,7 @@ public class OAuth2UtilTest extends PowerMockIdentityBaseTest {\n     private AxisConfiguration mockAxisConfiguration;\n \n     @Mock\n-    FederatedAuthenticatorConfig mockFederatedAuthenticatorConfig = new FederatedAuthenticatorConfig();\n+    private FederatedAuthenticatorConfig mockFederatedAuthenticatorConfig = new FederatedAuthenticatorConfig();\n \n     @Mock\n     private IdentityProviderManager mockIdentityProviderManager;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYyOTA1Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1366#discussion_r442629052", "bodyText": "remove the new line", "author": "piraveena", "createdAt": "2020-06-19T04:49:58Z", "path": "components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java", "diffHunk": "@@ -953,14 +972,59 @@ public void testGetIDTokenIssuer(String oidcIDTokenIssuer, String oauth2TokenEPU\n         assertEquals(OAuth2Util.getIDTokenIssuer(), issuer);\n     }\n \n+    @DataProvider(name = \"IDTokenIssuerData2\")\n+    public Object[][] idTokenIssuerData2() {\n+\n+        return new Object[][]{\n+                // tenant-qualified URL support\n+                // OIDC Config url\n+                // tenant domain\n+                // expected\n+                {false, \"https://localhost:9443/testIssuer\", \"wso2.com\", \"https://localhost:9443/testIssuer\"},\n+                {false, \"https://localhost:9443/testIssuer\", \"\", \"https://localhost:9443/testIssuer\"},\n+                {true, \"https://localhost:9443/testIssuer\", \"\", \"https://localhost:9443/oauth2/token\"},\n+                {true, \"https://localhost:9443/testIssuer\", \"wso2.com\", \"https://localhost:9443/t/wso2\" +\n+                        \".com/oauth2/token\"}\n+", "originalCommit": "dd0031ae4c980be43b1f345b945ee88b16bd542f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0d4bcaf5797a7d5dc2d7e1646a138a8f2b745cd", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java b/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\nindex f3b8dbc2a..e78be7fcb 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/test/java/org/wso2/carbon/identity/oauth2/util/OAuth2UtilTest.java\n\n@@ -972,8 +972,8 @@ public class OAuth2UtilTest extends PowerMockIdentityBaseTest {\n         assertEquals(OAuth2Util.getIDTokenIssuer(), issuer);\n     }\n \n-    @DataProvider(name = \"IDTokenIssuerData2\")\n-    public Object[][] idTokenIssuerData2() {\n+    @DataProvider(name = \"TenantQualifiedURLsIDTokenIssuerData\")\n+    public Object[][] tenantQualifiedURLsIdTokenIssuerData() {\n \n         return new Object[][]{\n                 // tenant-qualified URL support\n"}}, {"oid": "a0d4bcaf5797a7d5dc2d7e1646a138a8f2b745cd", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/a0d4bcaf5797a7d5dc2d7e1646a138a8f2b745cd", "message": "refactor code", "committedDate": "2020-06-19T05:40:58Z", "type": "commit"}, {"oid": "a0d4bcaf5797a7d5dc2d7e1646a138a8f2b745cd", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/a0d4bcaf5797a7d5dc2d7e1646a138a8f2b745cd", "message": "refactor code", "committedDate": "2020-06-19T05:40:58Z", "type": "forcePushed"}]}