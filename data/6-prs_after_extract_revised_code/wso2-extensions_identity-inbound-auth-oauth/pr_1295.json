{"pr_number": 1295, "pr_title": "Fix inconstancy in the login and logout consent flows", "pr_createdAt": "2020-01-16T06:43:36Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1295", "timeline": [{"oid": "639167d8d95b4a4c6f1f3fac05788556f7e5ab8e", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/639167d8d95b4a4c6f1f3fac05788556f7e5ab8e", "message": "Add separate properties to manage login and logout consent flow.", "committedDate": "2020-01-16T06:38:57Z", "type": "commit"}, {"oid": "5f013bae2ecd16e0b64c9743fffc4139fce2218b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/5f013bae2ecd16e0b64c9743fffc4139fce2218b", "message": "Give priority to server level logout consent skip property.", "committedDate": "2020-01-16T06:39:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4MjU0MA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1295#discussion_r367282540", "bodyText": "shall we add a full stop at the end", "author": "Buddhimah", "createdAt": "2020-01-16T08:20:37Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java", "diffHunk": "@@ -1167,12 +1169,33 @@ public String getOpenIDConnectIDTokenSubjectClaim() {\n     }\n \n     /**\n-     * Returns if skip user consent enabled or not\n+     * Returns if login consent enabled or not", "originalCommit": "60e6b560353109be5c9e292d7487d4c0c0f3208c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e34c4da3a0e0e384b83b67ae6b976fc852b5476f", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\nindex 900d274d8..cb425fc11 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\n\n@@ -1169,14 +1169,15 @@ public class OAuthServerConfiguration {\n     }\n \n     /**\n-     * Returns if login consent enabled or not\n+     * Returns if login consent enabled or not.\n      *\n      */\n     public boolean getOpenIDConnectSkipeUserConsentConfig() {\n \n         if (openIDConnectSkipLoginConsent == null) {\n             if (log.isDebugEnabled()) {\n-                log.debug(\"The SkipLoginConsent property is not configured. So retrieving the SkipUserConsent value\");\n+                log.debug(\"The SkipLoginConsent property is not configured. \" +\n+                        \"So retrieving the SkipUserConsent value.\");\n             }\n             Boolean.parseBoolean(openIDConnectSkipUserConsent);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4Mjk3MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1295#discussion_r367282971", "bodyText": "shall we add a full stop at the end", "author": "Buddhimah", "createdAt": "2020-01-16T08:21:51Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java", "diffHunk": "@@ -1167,12 +1169,33 @@ public String getOpenIDConnectIDTokenSubjectClaim() {\n     }\n \n     /**\n-     * Returns if skip user consent enabled or not\n+     * Returns if login consent enabled or not\n      *\n-     * @return\n      */\n     public boolean getOpenIDConnectSkipeUserConsentConfig() {\n-        return \"true\".equalsIgnoreCase(openIDConnectSkipUserConsent);\n+\n+        if (openIDConnectSkipLoginConsent == null) {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"The SkipLoginConsent property is not configured. So retrieving the SkipUserConsent value\");", "originalCommit": "60e6b560353109be5c9e292d7487d4c0c0f3208c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e34c4da3a0e0e384b83b67ae6b976fc852b5476f", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\nindex 900d274d8..cb425fc11 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\n\n@@ -1169,14 +1169,15 @@ public class OAuthServerConfiguration {\n     }\n \n     /**\n-     * Returns if login consent enabled or not\n+     * Returns if login consent enabled or not.\n      *\n      */\n     public boolean getOpenIDConnectSkipeUserConsentConfig() {\n \n         if (openIDConnectSkipLoginConsent == null) {\n             if (log.isDebugEnabled()) {\n-                log.debug(\"The SkipLoginConsent property is not configured. So retrieving the SkipUserConsent value\");\n+                log.debug(\"The SkipLoginConsent property is not configured. \" +\n+                        \"So retrieving the SkipUserConsent value.\");\n             }\n             Boolean.parseBoolean(openIDConnectSkipUserConsent);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4MzAxOA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1295#discussion_r367283018", "bodyText": "shall we add a full stop at the end", "author": "Buddhimah", "createdAt": "2020-01-16T08:21:59Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java", "diffHunk": "@@ -1167,12 +1169,33 @@ public String getOpenIDConnectIDTokenSubjectClaim() {\n     }\n \n     /**\n-     * Returns if skip user consent enabled or not\n+     * Returns if login consent enabled or not\n      *\n-     * @return\n      */\n     public boolean getOpenIDConnectSkipeUserConsentConfig() {\n-        return \"true\".equalsIgnoreCase(openIDConnectSkipUserConsent);\n+\n+        if (openIDConnectSkipLoginConsent == null) {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"The SkipLoginConsent property is not configured. So retrieving the SkipUserConsent value\");\n+            }\n+            Boolean.parseBoolean(openIDConnectSkipUserConsent);\n+        }\n+        return Boolean.parseBoolean(openIDConnectSkipLoginConsent);\n+    }\n+\n+    /**\n+     * Returns if skip logout consent enabled or not.\n+     *\n+     */\n+    public boolean getOpenIDConnectSkipLogoutConsentConfig() {\n+\n+        if (openIDConnectSkipLogoutConsent == null) {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"The SkipLogoutConsent property is not configured. So retrieving the SkipUserConsent value\");", "originalCommit": "60e6b560353109be5c9e292d7487d4c0c0f3208c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e34c4da3a0e0e384b83b67ae6b976fc852b5476f", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\nindex 900d274d8..cb425fc11 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\n\n@@ -1169,14 +1169,15 @@ public class OAuthServerConfiguration {\n     }\n \n     /**\n-     * Returns if login consent enabled or not\n+     * Returns if login consent enabled or not.\n      *\n      */\n     public boolean getOpenIDConnectSkipeUserConsentConfig() {\n \n         if (openIDConnectSkipLoginConsent == null) {\n             if (log.isDebugEnabled()) {\n-                log.debug(\"The SkipLoginConsent property is not configured. So retrieving the SkipUserConsent value\");\n+                log.debug(\"The SkipLoginConsent property is not configured. \" +\n+                        \"So retrieving the SkipUserConsent value.\");\n             }\n             Boolean.parseBoolean(openIDConnectSkipUserConsent);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4MzY5MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1295#discussion_r367283691", "bodyText": "why we are using openIDConnectSkipUserConsent variable as a string ?", "author": "Buddhimah", "createdAt": "2020-01-16T08:23:48Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java", "diffHunk": "@@ -1167,12 +1169,33 @@ public String getOpenIDConnectIDTokenSubjectClaim() {\n     }\n \n     /**\n-     * Returns if skip user consent enabled or not\n+     * Returns if login consent enabled or not\n      *\n-     * @return\n      */\n     public boolean getOpenIDConnectSkipeUserConsentConfig() {\n-        return \"true\".equalsIgnoreCase(openIDConnectSkipUserConsent);\n+\n+        if (openIDConnectSkipLoginConsent == null) {\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"The SkipLoginConsent property is not configured. So retrieving the SkipUserConsent value\");\n+            }\n+            Boolean.parseBoolean(openIDConnectSkipUserConsent);", "originalCommit": "60e6b560353109be5c9e292d7487d4c0c0f3208c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e34c4da3a0e0e384b83b67ae6b976fc852b5476f", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\nindex 900d274d8..cb425fc11 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\n\n@@ -1169,14 +1169,15 @@ public class OAuthServerConfiguration {\n     }\n \n     /**\n-     * Returns if login consent enabled or not\n+     * Returns if login consent enabled or not.\n      *\n      */\n     public boolean getOpenIDConnectSkipeUserConsentConfig() {\n \n         if (openIDConnectSkipLoginConsent == null) {\n             if (log.isDebugEnabled()) {\n-                log.debug(\"The SkipLoginConsent property is not configured. So retrieving the SkipUserConsent value\");\n+                log.debug(\"The SkipLoginConsent property is not configured. \" +\n+                        \"So retrieving the SkipUserConsent value.\");\n             }\n             Boolean.parseBoolean(openIDConnectSkipUserConsent);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg2MzE4Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1295#discussion_r367863182", "bodyText": "Shouldn't this be backward compatible? That means if\n(ConfigElements.OPENID_CONNECT_SKIP_LOGOUT_CONSENT)) is null, shouldn't we read ConfigElements.OPENID_CONNECT_SKIP_USER_CONSENT from config file and set its value to 'openIDConnectSkipLogoutConsent'?", "author": "emswbandara", "createdAt": "2020-01-17T10:19:48Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java", "diffHunk": "@@ -2510,12 +2520,19 @@ private void parseOpenIDConnectConfig(OMElement oauthConfigElem) {\n                                 .getText().trim();\n             }\n             if (openIDConnectConfigElem\n-                    .getFirstChildWithName(getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_SKIP_USER_CONSENT)) !=\n+                    .getFirstChildWithName(getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_SKIP_LOGIN_CONSENT)) !=\n                     null) {\n-                openIDConnectSkipUserConsent =\n+                openIDConnectSkipLoginConsent = Boolean.parseBoolean(\n                         openIDConnectConfigElem.getFirstChildWithName(\n-                                getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_SKIP_USER_CONSENT))\n-                                .getText().trim();\n+                                getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_SKIP_LOGIN_CONSENT))\n+                                .getText().trim());\n+            }\n+            if (openIDConnectConfigElem.getFirstChildWithName(\n+                    getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_SKIP_LOGOUT_CONSENT)) != null) {", "originalCommit": "a69d1ad93f7332d61118d55462fc1fdc75cb638c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkzNjkxNg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1295#discussion_r367936916", "bodyText": "I have added the old configuration as a fallback", "author": "senthalan", "createdAt": "2020-01-17T13:34:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg2MzE4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e34c4da3a0e0e384b83b67ae6b976fc852b5476f", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\nindex 416959849..cb425fc11 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth/config/OAuthServerConfiguration.java\n\n@@ -2519,20 +2534,28 @@ public class OAuthServerConfiguration {\n                                 getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_IDTOKEN_SUB_CLAIM))\n                                 .getText().trim();\n             }\n+            if (openIDConnectConfigElem\n+                    .getFirstChildWithName(getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_SKIP_USER_CONSENT)) !=\n+                    null) {\n+                openIDConnectSkipUserConsent =\n+                        openIDConnectConfigElem.getFirstChildWithName(\n+                                getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_SKIP_USER_CONSENT))\n+                                .getText().trim();\n+            }\n             if (openIDConnectConfigElem\n                     .getFirstChildWithName(getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_SKIP_LOGIN_CONSENT)) !=\n                     null) {\n-                openIDConnectSkipLoginConsent = Boolean.parseBoolean(\n+                openIDConnectSkipLoginConsent =\n                         openIDConnectConfigElem.getFirstChildWithName(\n                                 getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_SKIP_LOGIN_CONSENT))\n-                                .getText().trim());\n+                                .getText().trim();\n             }\n             if (openIDConnectConfigElem.getFirstChildWithName(\n                     getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_SKIP_LOGOUT_CONSENT)) != null) {\n-                openIDConnectSkipLogoutConsent = Boolean.parseBoolean(\n+                openIDConnectSkipLogoutConsent =\n                         openIDConnectConfigElem.getFirstChildWithName(\n                                 getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_SKIP_LOGOUT_CONSENT))\n-                                .getText().trim());\n+                                .getText().trim();\n             }\n             if (openIDConnectConfigElem\n                     .getFirstChildWithName(getQNameWithIdentityNS(ConfigElements.OPENID_CONNECT_IDTOKEN_ISSUER_ID)) !=\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg2NTQwMQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1295#discussion_r367865401", "bodyText": "shall we rename the variable name to skipLogoutConsent?", "author": "emswbandara", "createdAt": "2020-01-17T10:25:21Z", "path": "components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java", "diffHunk": "@@ -752,14 +752,23 @@ private void removeSessionDataFromCache(String sessionDataKey) {\n      */\n     private boolean getOpenIDConnectSkipUserConsent(String idTokenHint) throws ParseException, IdentityOAuth2Exception {\n \n+        boolean skipLogoutConsentConfig =", "originalCommit": "a69d1ad93f7332d61118d55462fc1fdc75cb638c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a7a929a168d21e851a70f517df56de5acceee420", "chunk": "diff --git a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\nindex 7f590a039..41db3aa6a 100644\n--- a/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n+++ b/components/org.wso2.carbon.identity.oidc.session/src/main/java/org/wso2/carbon/identity/oidc/session/servlet/OIDCLogoutServlet.java\n\n@@ -752,9 +752,9 @@ public class OIDCLogoutServlet extends HttpServlet {\n      */\n     private boolean getOpenIDConnectSkipUserConsent(String idTokenHint) throws ParseException, IdentityOAuth2Exception {\n \n-        boolean skipLogoutConsentConfig =\n+        boolean skipLogoutConsent =\n                 OAuthServerConfiguration.getInstance().getOpenIDConnectSkipLogoutConsentConfig();\n-        if (skipLogoutConsentConfig) {\n+        if (skipLogoutConsent) {\n             if (log.isDebugEnabled()) {\n                 log.debug(\"Server wide configuration is to skip the logout consent. So continue without \" +\n                         \"checking for the service provider level configuration.\");\n"}}, {"oid": "e34c4da3a0e0e384b83b67ae6b976fc852b5476f", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/e34c4da3a0e0e384b83b67ae6b976fc852b5476f", "message": "Fix format", "committedDate": "2020-01-17T13:25:26Z", "type": "commit"}, {"oid": "86c06e49a69b0dfd17a6d29df9834e1bcb2ff47b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/86c06e49a69b0dfd17a6d29df9834e1bcb2ff47b", "message": "Change to Boolean", "committedDate": "2020-01-17T13:25:34Z", "type": "commit"}, {"oid": "86c06e49a69b0dfd17a6d29df9834e1bcb2ff47b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/86c06e49a69b0dfd17a6d29df9834e1bcb2ff47b", "message": "Change to Boolean", "committedDate": "2020-01-17T13:25:34Z", "type": "forcePushed"}, {"oid": "a7a929a168d21e851a70f517df56de5acceee420", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/a7a929a168d21e851a70f517df56de5acceee420", "message": "Change the variable name", "committedDate": "2020-01-17T13:50:49Z", "type": "commit"}]}