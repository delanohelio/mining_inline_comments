{"pr_number": 1403, "pr_title": "Validate request tenant domain in tenant qualified URL mode in oauth2/dcr endpoint", "pr_createdAt": "2020-06-23T13:39:43Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQxODI2Nw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r444418267", "bodyText": "Let's move this to a constant. (DCRMConstants.java)", "author": "janakamarasena", "createdAt": "2020-06-23T18:17:40Z", "path": "components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java", "diffHunk": "@@ -75,6 +78,16 @@\n      */\n     public Application getApplication(String clientId) throws DCRMException {\n \n+        try {\n+            String tenantDomainOfApp = OAuth2Util.getTenantDomainOfOauthApp(clientId);\n+            OAuth2Util.validateRequestTenantDomain(tenantDomainOfApp);\n+        } catch (InvalidOAuthClientException e) {\n+            throw new DCRMClientException(\"NOT_FOUND_60001\", \"Tenant domain in request does not match with the \" +", "originalCommit": "6e178a461d27bab7c261da8d92647d8ad94c2b69", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0c00fa03a2871bc2e4f9ae2a54fa2c0454bc5ab8", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java b/components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java\nindex 72db37355..b4cd9d0cc 100644\n--- a/components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java\n+++ b/components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java\n\n@@ -82,11 +82,11 @@ public class DCRMService {\n             String tenantDomainOfApp = OAuth2Util.getTenantDomainOfOauthApp(clientId);\n             OAuth2Util.validateRequestTenantDomain(tenantDomainOfApp);\n         } catch (InvalidOAuthClientException e) {\n-            throw new DCRMClientException(\"NOT_FOUND_60001\", \"Tenant domain in request does not match with the \" +\n-                    \"application tenant domain for consumer key: \" + clientId);\n+            throw new DCRMClientException(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getErrorCode(),\n+                    String.format(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getMessage(), clientId));\n         } catch (IdentityOAuth2Exception e) {\n-            throw new DCRMServerException(\"Error occurred during validating tenant domain for consumer key: \" +\n-                    clientId);\n+            throw new DCRMServerException(String.format(DCRMConstants.ErrorMessages.FAILED_TO_VALIDATE_TENANT_DOMAIN\n+                    .getMessage(), clientId));\n         }\n         boolean isApplicationRolePermissionRequired = DCRMUtils.isApplicationRolePermissionRequired();\n         return buildResponse(getApplicationById(clientId, isApplicationRolePermissionRequired));\n"}}, {"oid": "9d3e2895f83e64b65120c928c67ddf656ebaa664", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/9d3e2895f83e64b65120c928c67ddf656ebaa664", "message": "Validate request tenant domain in tenant qualified URL mode", "committedDate": "2020-06-29T04:02:14Z", "type": "commit"}, {"oid": "c33e778aa3bae2403d467db6f582b9e323ec441b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/c33e778aa3bae2403d467db6f582b9e323ec441b", "message": "Deprecate identity connect endpoint", "committedDate": "2020-06-29T04:02:14Z", "type": "forcePushed"}, {"oid": "0c00fa03a2871bc2e4f9ae2a54fa2c0454bc5ab8", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/0c00fa03a2871bc2e4f9ae2a54fa2c0454bc5ab8", "message": "Address PR comments", "committedDate": "2020-07-01T07:02:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE5NzQxMQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448197411", "bodyText": "Can we move this to a common private method and reuse?", "author": "mefarazath", "createdAt": "2020-07-01T08:19:51Z", "path": "components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java", "diffHunk": "@@ -75,6 +78,16 @@\n      */\n     public Application getApplication(String clientId) throws DCRMException {\n \n+        try {\n+            String tenantDomainOfApp = OAuth2Util.getTenantDomainOfOauthApp(clientId);\n+            OAuth2Util.validateRequestTenantDomain(tenantDomainOfApp);\n+        } catch (InvalidOAuthClientException e) {\n+            throw new DCRMClientException(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getErrorCode(),\n+                    String.format(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getMessage(), clientId));\n+        } catch (IdentityOAuth2Exception e) {\n+            throw new DCRMServerException(String.format(DCRMConstants.ErrorMessages.FAILED_TO_VALIDATE_TENANT_DOMAIN\n+                    .getMessage(), clientId));\n+        }", "originalCommit": "0c00fa03a2871bc2e4f9ae2a54fa2c0454bc5ab8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIwNDY2Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448204662", "bodyText": "fixed", "author": "emswbandara", "createdAt": "2020-07-01T08:31:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE5NzQxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java b/components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java\nindex b4cd9d0cc..68107f915 100644\n--- a/components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java\n+++ b/components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java\n\n@@ -78,16 +78,7 @@ public class DCRMService {\n      */\n     public Application getApplication(String clientId) throws DCRMException {\n \n-        try {\n-            String tenantDomainOfApp = OAuth2Util.getTenantDomainOfOauthApp(clientId);\n-            OAuth2Util.validateRequestTenantDomain(tenantDomainOfApp);\n-        } catch (InvalidOAuthClientException e) {\n-            throw new DCRMClientException(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getErrorCode(),\n-                    String.format(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getMessage(), clientId));\n-        } catch (IdentityOAuth2Exception e) {\n-            throw new DCRMServerException(String.format(DCRMConstants.ErrorMessages.FAILED_TO_VALIDATE_TENANT_DOMAIN\n-                    .getMessage(), clientId));\n-        }\n+        validateRequestTenantDomain(clientId);\n         boolean isApplicationRolePermissionRequired = DCRMUtils.isApplicationRolePermissionRequired();\n         return buildResponse(getApplicationById(clientId, isApplicationRolePermissionRequired));\n     }\n"}}, {"oid": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/ea6695d83c5836ea8dfbf9be4a9138f37d294d94", "message": "Address PR comments", "committedDate": "2020-07-01T08:30:20Z", "type": "commit"}, {"oid": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/ea6695d83c5836ea8dfbf9be4a9138f37d294d94", "message": "Address PR comments", "committedDate": "2020-07-01T08:30:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIwODc3MA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448208770", "bodyText": "Any reason why we are sending the error code in \"NOT_FOUND_60001\" format?", "author": "mefarazath", "createdAt": "2020-07-01T08:38:46Z", "path": "components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/DCRMConstants.java", "diffHunk": "@@ -48,20 +48,35 @@\n         CONFLICT_EXISTING_CLIENT_ID(\"Client id %s already exist in the system\"),\n         BAD_REQUEST_CLIENT_ID_VIOLATES_PATTERN(\"Provided client id is not adhering to the provided regex %s\"),\n         FORBIDDEN_UNAUTHORIZED_USER(\"User does not have access to the application %s\"),\n-        ERROR_CODE_UNEXPECTED(\"Unexpected error\");\n+        ERROR_CODE_UNEXPECTED(\"Unexpected error\"),\n+        TENANT_DOMAIN_MISMATCH(\"NOT_FOUND_60001\", \"Tenant domain in request does not match with the application \" +", "originalCommit": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyMzYyOQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448223629", "bodyText": "it is the format used to generate HTTP error response to the client\nhttps://github.com/wso2-extensions/identity-inbound-auth-oauth/blob/master/components/org.wso2.carbon.identity.oauth.dcr.endpoint/src/main/java/org/wso2/carbon/identity/oauth2/dcr/endpoint/util/DCRMUtils.java#L98", "author": "emswbandara", "createdAt": "2020-07-01T09:04:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIwODc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNDE3Mw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448224173", "bodyText": "otherwise 500 internal server error will be returned by default for all the cases if we don't add an error code", "author": "emswbandara", "createdAt": "2020-07-01T09:05:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIwODc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0NTgwOA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448245808", "bodyText": "Can we create a git issue to improve this?\nIt looks like a bit of a hack to pass the http status code \ud83d\ude03", "author": "mefarazath", "createdAt": "2020-07-01T09:43:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIwODc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0ODczNQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448248735", "bodyText": "created an issue for that wso2/product-is#8615", "author": "emswbandara", "createdAt": "2020-07-01T09:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIwODc3MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2MDc4Mw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448260783", "bodyText": "Shouldn't this be a client error?", "author": "mefarazath", "createdAt": "2020-07-01T10:10:58Z", "path": "components/org.wso2.carbon.identity.oauth.dcr/src/main/java/org/wso2/carbon/identity/oauth/dcr/service/DCRMService.java", "diffHunk": "@@ -669,4 +675,24 @@ private static boolean clientIdMatchesRegex(String clientId, String clientIdVali\n         }\n         return clientIdRegexPattern.matcher(clientId).matches();\n     }\n+\n+    /**\n+     * Validates whether the tenant domain in the request matches with the application tenant domain.\n+     *\n+     * @param clientId Consumer key of application.\n+     * @throws DCRMException DCRMException\n+     */\n+    private void validateRequestTenantDomain(String clientId) throws DCRMException {\n+\n+        try {\n+            String tenantDomainOfApp = OAuth2Util.getTenantDomainOfOauthApp(clientId);\n+            OAuth2Util.validateRequestTenantDomain(tenantDomainOfApp);\n+        } catch (InvalidOAuthClientException e) {\n+            throw new DCRMClientException(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getErrorCode(),\n+                    String.format(DCRMConstants.ErrorMessages.TENANT_DOMAIN_MISMATCH.getMessage(), clientId));\n+        } catch (IdentityOAuth2Exception e) {\n+            throw new DCRMServerException(String.format(DCRMConstants.ErrorMessages.FAILED_TO_VALIDATE_TENANT_DOMAIN", "originalCommit": "ea6695d83c5836ea8dfbf9be4a9138f37d294d94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyOTAwMg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1403#discussion_r448429002", "bodyText": "this exception is thrown from OAuth2Util.getTenantDomainOfOauthApp method which is due to an internal server error.", "author": "emswbandara", "createdAt": "2020-07-01T15:06:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2MDc4Mw=="}], "type": "inlineReview", "revised_code": null}]}