{"pr_number": 1387, "pr_title": "Fixing PKCE to work when multiple callback URLs", "pr_createdAt": "2020-05-28T13:54:06Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387", "timeline": [{"oid": "ea587edabbf724088b46f665890eb68e64f7774b", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/ea587edabbf724088b46f665890eb68e64f7774b", "message": "fix PKCE does not work when multiple callback URLs", "committedDate": "2020-05-28T13:49:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2Nzc5OA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431867798", "bodyText": "Shall we define a private method like validateCallbackURI(String callbackURI, OAuthAppDO oauth) and move the callback validation logic there?\nIt would be much easy to refactor in the future when we support multiple callbacks in the future", "author": "mefarazath", "createdAt": "2020-05-28T14:14:43Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -197,12 +197,7 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n                 regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n             }\n \n-            if (regexp != null && callbackURI.matches(regexp)) {\n-                validationResponseDTO.setValidClient(true);\n-                validationResponseDTO.setApplicationName(appDO.getApplicationName());\n-                validationResponseDTO.setCallbackURL(callbackURI);\n-                return validationResponseDTO;\n-            } else if (appDO.getCallbackUrl().equals(callbackURI)) {\n+            if (regexp != null && callbackURI.matches(regexp) || appDO.getCallbackUrl().equals(callbackURI)) {", "originalCommit": "ea587edabbf724088b46f665890eb68e64f7774b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkyNDQ3Ng==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431924476", "bodyText": "ok added a private method", "author": "tharakawijekoon", "createdAt": "2020-05-28T15:26:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2Nzc5OA=="}], "type": "inlineReview", "revised_code": {"commit": "68f73123c860a8639752a1a814bd78cbe1978b68", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\nindex eaea377ba..9ed71dfbf 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n\n@@ -197,7 +197,7 @@ public class OAuth2Service extends AbstractAdmin {\n                 regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n             }\n \n-            if (regexp != null && callbackURI.matches(regexp) || appDO.getCallbackUrl().equals(callbackURI)) {\n+            if (validateCallbackURI(regexp, callbackURI, appDO)) {\n                 validationResponseDTO.setValidClient(true);\n                 validationResponseDTO.setApplicationName(appDO.getApplicationName());\n                 validationResponseDTO.setCallbackURL(callbackURI);\n"}}, {"oid": "68f73123c860a8639752a1a814bd78cbe1978b68", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/68f73123c860a8639752a1a814bd78cbe1978b68", "message": "moving callback validation logic to seperate method", "committedDate": "2020-05-28T15:21:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDIwNA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431990204", "bodyText": "Since regex is derived from app config, shall we that logic also into the private method please?", "author": "mefarazath", "createdAt": "2020-05-28T17:04:24Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -197,12 +197,7 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n                 regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n             }\n \n-            if (regexp != null && callbackURI.matches(regexp)) {\n-                validationResponseDTO.setValidClient(true);\n-                validationResponseDTO.setApplicationName(appDO.getApplicationName());\n-                validationResponseDTO.setCallbackURL(callbackURI);\n-                return validationResponseDTO;\n-            } else if (appDO.getCallbackUrl().equals(callbackURI)) {\n+            if (validateCallbackURI(regexp, callbackURI, appDO)) {", "originalCommit": "68f73123c860a8639752a1a814bd78cbe1978b68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDQ2Mg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r431990462", "bodyText": "So basically validateCallbackURI logic only takes the callbackURI from the request and appDO object", "author": "mefarazath", "createdAt": "2020-05-28T17:04:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDIwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTQwNw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269407", "bodyText": "done", "author": "tharakawijekoon", "createdAt": "2020-05-29T05:52:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDIwNA=="}], "type": "inlineReview", "revised_code": {"commit": "00c5e24ddb6a8c63cde2368f385c36a3041b3347", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\nindex 9ed71dfbf..1e659a3e3 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n\n@@ -188,16 +188,7 @@ public class OAuth2Service extends AbstractAdmin {\n                         .getApplicationName() + \", Callback URL : \" + appDO.getCallbackUrl());\n             }\n \n-            // Valid Client with a callback url in the request.\n-            // If application callback url is defined as a regexp check weather it matches the given url\n-            // Or else check weather they are equal\n-            String regexp = null;\n-            String registeredCallbackUrl = appDO.getCallbackUrl();\n-            if (registeredCallbackUrl.startsWith(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX)) {\n-                regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n-            }\n-\n-            if (validateCallbackURI(regexp, callbackURI, appDO)) {\n+            if (validateCallbackURI(callbackURI, appDO)) {\n                 validationResponseDTO.setValidClient(true);\n                 validationResponseDTO.setApplicationName(appDO.getApplicationName());\n                 validationResponseDTO.setCallbackURL(callbackURI);\n"}}, {"oid": "00c5e24ddb6a8c63cde2368f385c36a3041b3347", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/00c5e24ddb6a8c63cde2368f385c36a3041b3347", "message": "refactoring code", "committedDate": "2020-05-28T20:44:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1MzgwNg==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432253806", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {\n          \n          \n            \n                private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {", "author": "mefarazath", "createdAt": "2020-05-29T04:49:33Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.\n+    // If application callback url is defined as a regexp check weather it matches the given url\n+    // Or check weather they are equal\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {", "originalCommit": "00c5e24ddb6a8c63cde2368f385c36a3041b3347", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTM3NA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269374", "bodyText": "changed", "author": "tharakawijekoon", "createdAt": "2020-05-29T05:52:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1MzgwNg=="}], "type": "inlineReview", "revised_code": {"commit": "0feecee3999a6fe5f9b0f385036087cd2d015a57", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\nindex 1e659a3e3..e23f6a8a9 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n\n@@ -220,12 +220,14 @@ public class OAuth2Service extends AbstractAdmin {\n         }\n     }\n \n-    // Validate Client with a callback url in the request.\n-    // If application callback url is defined as a regexp check weather it matches the given url\n-    // Or check weather they are equal\n-    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {\n+    /**\n+     * Validate Client with a callback url in the request.\n+     * If application callback url is defined as a regexp check weather it matches the given url\n+     * Or check weather they are equal\n+     */\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {\n         String regexp = null;\n-        String registeredCallbackUrl = oauth.getCallbackUrl();\n+        String registeredCallbackUrl = oauthApp.getCallbackUrl();\n         if (registeredCallbackUrl.startsWith(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX)) {\n             regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzg1OQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432253859", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String registeredCallbackUrl = oauth.getCallbackUrl();\n          \n          \n            \n                    String registeredCallbackUrl = oauthApp.getCallbackUrl();", "author": "mefarazath", "createdAt": "2020-05-29T04:49:47Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.\n+    // If application callback url is defined as a regexp check weather it matches the given url\n+    // Or check weather they are equal\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {\n+        String regexp = null;\n+        String registeredCallbackUrl = oauth.getCallbackUrl();", "originalCommit": "00c5e24ddb6a8c63cde2368f385c36a3041b3347", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTMyOA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269328", "bodyText": "changed", "author": "tharakawijekoon", "createdAt": "2020-05-29T05:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzg1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0feecee3999a6fe5f9b0f385036087cd2d015a57", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\nindex 1e659a3e3..e23f6a8a9 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n\n@@ -220,12 +220,14 @@ public class OAuth2Service extends AbstractAdmin {\n         }\n     }\n \n-    // Validate Client with a callback url in the request.\n-    // If application callback url is defined as a regexp check weather it matches the given url\n-    // Or check weather they are equal\n-    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {\n+    /**\n+     * Validate Client with a callback url in the request.\n+     * If application callback url is defined as a regexp check weather it matches the given url\n+     * Or check weather they are equal\n+     */\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {\n         String regexp = null;\n-        String registeredCallbackUrl = oauth.getCallbackUrl();\n+        String registeredCallbackUrl = oauthApp.getCallbackUrl();\n         if (registeredCallbackUrl.startsWith(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX)) {\n             regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzk5NQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432253995", "bodyText": "Let's add a block comment", "author": "mefarazath", "createdAt": "2020-05-29T04:50:26Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,18 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    // Validate Client with a callback url in the request.", "originalCommit": "00c5e24ddb6a8c63cde2368f385c36a3041b3347", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2OTI3MA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432269270", "bodyText": "added", "author": "tharakawijekoon", "createdAt": "2020-05-29T05:52:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI1Mzk5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "0feecee3999a6fe5f9b0f385036087cd2d015a57", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\nindex 1e659a3e3..e23f6a8a9 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n\n@@ -220,12 +220,14 @@ public class OAuth2Service extends AbstractAdmin {\n         }\n     }\n \n-    // Validate Client with a callback url in the request.\n-    // If application callback url is defined as a regexp check weather it matches the given url\n-    // Or check weather they are equal\n-    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauth) {\n+    /**\n+     * Validate Client with a callback url in the request.\n+     * If application callback url is defined as a regexp check weather it matches the given url\n+     * Or check weather they are equal\n+     */\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {\n         String regexp = null;\n-        String registeredCallbackUrl = oauth.getCallbackUrl();\n+        String registeredCallbackUrl = oauthApp.getCallbackUrl();\n         if (registeredCallbackUrl.startsWith(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX)) {\n             regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n         }\n"}}, {"oid": "0feecee3999a6fe5f9b0f385036087cd2d015a57", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/0feecee3999a6fe5f9b0f385036087cd2d015a57", "message": "minor changes suggested", "committedDate": "2020-05-29T05:50:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODM0MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432308341", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return regexp != null && callbackURI.matches(regexp) || registeredCallbackUrl.equals(callbackURI);\n          \n          \n            \n                    return (regexp != null && callbackURI.matches(regexp)) || registeredCallbackUrl.equals(callbackURI);", "author": "mefarazath", "createdAt": "2020-05-29T07:38:29Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java", "diffHunk": "@@ -234,6 +220,20 @@ public OAuth2ClientValidationResponseDTO validateClientInfo(String clientId, Str\n         }\n     }\n \n+    /**\n+     * Validate Client with a callback url in the request.\n+     * If application callback url is defined as a regexp check weather it matches the given url\n+     * Or check weather they are equal\n+     */\n+    private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {\n+        String regexp = null;\n+        String registeredCallbackUrl = oauthApp.getCallbackUrl();\n+        if (registeredCallbackUrl.startsWith(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX)) {\n+            regexp = registeredCallbackUrl.substring(OAuthConstants.CALLBACK_URL_REGEXP_PREFIX.length());\n+        }\n+        return regexp != null && callbackURI.matches(regexp) || registeredCallbackUrl.equals(callbackURI);", "originalCommit": "0feecee3999a6fe5f9b0f385036087cd2d015a57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMxNzMzMw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1387#discussion_r432317333", "bodyText": "ok done", "author": "tharakawijekoon", "createdAt": "2020-05-29T07:56:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwODM0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "9a2e83ead683b18c7135992654e165062dc438f1", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\nindex e23f6a8a9..45d35b074 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/OAuth2Service.java\n\n@@ -222,8 +222,11 @@ public class OAuth2Service extends AbstractAdmin {\n \n     /**\n      * Validate Client with a callback url in the request.\n-     * If application callback url is defined as a regexp check weather it matches the given url\n-     * Or check weather they are equal\n+     *\n+     * @param callbackURI callback url in the request.\n+     * @param oauthApp OAuth application data object\n+     * @return boolean If application callback url is defined as a regexp check weather it matches the given url\n+     * Or check weather callback urls are equal\n      */\n     private boolean validateCallbackURI(String callbackURI, OAuthAppDO oauthApp) {\n         String regexp = null;\n"}}, {"oid": "9a2e83ead683b18c7135992654e165062dc438f1", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/9a2e83ead683b18c7135992654e165062dc438f1", "message": "few more minor changes", "committedDate": "2020-05-29T07:55:22Z", "type": "commit"}]}