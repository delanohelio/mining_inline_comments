{"pr_number": 1399, "pr_title": "Fix introspection endpoint url in tenant legacy URL mode in OIDC config response", "pr_createdAt": "2020-06-18T08:34:26Z", "pr_url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1399", "timeline": [{"oid": "d8a134b88129cf8a210bd30c0d63b21d0d34b60d", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/d8a134b88129cf8a210bd30c0d63b21d0d34b60d", "message": "Fix introspection endpoint url in tenant legacy URL mode in OIDC config response", "committedDate": "2020-06-18T08:11:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1MDk4OA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1399#discussion_r442150988", "bodyText": "add space after //", "author": "emswbandara", "createdAt": "2020-06-18T11:15:09Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -1264,6 +1264,26 @@ public static String getOAuth2IntrospectionEPUrl() {\n                     OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n         }\n \n+        /**\n+         * This method is used to get the resolved URL for the OAuth2 introspection endpoint.\n+         *\n+         * @param tenantDomain Tenant Domain.\n+         * @return String of the resolved URL for the introspection endpoint.\n+         * @throws URISyntaxException URI Syntax Exception.\n+         */\n+        public static String getOAuth2IntrospectionEPUrl(String tenantDomain) throws URISyntaxException {\n+\n+            String getOAuth2IntrospectionEPUrl = buildUrl(OAUTH2_INTROSPECT_EP_URL,\n+                    OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n+\n+            if (!IdentityTenantUtil.isTenantQualifiedUrlsEnabled() && isNotSuperTenant(tenantDomain)) {\n+                //Append tenant domain to path when the tenant-qualified url mode is disabled.", "originalCommit": "d8a134b88129cf8a210bd30c0d63b21d0d34b60d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1OTY2MQ==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1399#discussion_r442159661", "bodyText": "Fixed b67eb48", "author": "GANGANI", "createdAt": "2020-06-18T11:33:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1MDk4OA=="}], "type": "inlineReview", "revised_code": {"commit": "b67eb489e485f9f7fc6f19c1526ceaf8fea2fa45", "chunk": "diff --git a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\nindex e6ec6164a..b03da6772 100644\n--- a/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\n+++ b/components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java\n\n@@ -1277,7 +1277,7 @@ public class OAuth2Util {\n                     OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n \n             if (!IdentityTenantUtil.isTenantQualifiedUrlsEnabled() && isNotSuperTenant(tenantDomain)) {\n-                //Append tenant domain to path when the tenant-qualified url mode is disabled.\n+                // Append tenant domain to path when the tenant-qualified url mode is disabled.\n                 getOAuth2IntrospectionEPUrl =\n                         appendTenantDomainAsPathParamInLegacyMode(getOAuth2IntrospectionEPUrl, tenantDomain);\n             }\n"}}, {"oid": "b67eb489e485f9f7fc6f19c1526ceaf8fea2fa45", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/commit/b67eb489e485f9f7fc6f19c1526ceaf8fea2fa45", "message": "Address comment", "committedDate": "2020-06-18T11:31:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0MjM3MA==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1399#discussion_r485342370", "bodyText": "Why do we need the tenantDomain as a query param in the introspection endpoint in legacy mode?", "author": "mefarazath", "createdAt": "2020-09-09T05:13:09Z", "path": "components/org.wso2.carbon.identity.oauth/src/main/java/org/wso2/carbon/identity/oauth2/util/OAuth2Util.java", "diffHunk": "@@ -1264,6 +1264,26 @@ public static String getOAuth2IntrospectionEPUrl() {\n                     OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n         }\n \n+        /**\n+         * This method is used to get the resolved URL for the OAuth2 introspection endpoint.\n+         *\n+         * @param tenantDomain Tenant Domain.\n+         * @return String of the resolved URL for the introspection endpoint.\n+         * @throws URISyntaxException URI Syntax Exception.\n+         */\n+        public static String getOAuth2IntrospectionEPUrl(String tenantDomain) throws URISyntaxException {\n+\n+            String getOAuth2IntrospectionEPUrl = buildUrl(OAUTH2_INTROSPECT_EP_URL,\n+                    OAuthServerConfiguration.getInstance()::getOauth2IntrospectionEPUrl);\n+\n+            if (!IdentityTenantUtil.isTenantQualifiedUrlsEnabled() && isNotSuperTenant(tenantDomain)) {\n+                // Append tenant domain to path when the tenant-qualified url mode is disabled.\n+                getOAuth2IntrospectionEPUrl =", "originalCommit": "b67eb489e485f9f7fc6f19c1526ceaf8fea2fa45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE5NDc3Nw==", "url": "https://github.com/wso2-extensions/identity-inbound-auth-oauth/pull/1399#discussion_r486194777", "bodyText": "With this PR, the tenant domain added as a path param to the introspection endpoint in the legacy tenant URL mode.", "author": "GANGANI", "createdAt": "2020-09-10T09:24:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0MjM3MA=="}], "type": "inlineReview", "revised_code": null}]}