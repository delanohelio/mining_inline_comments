{"pr_number": 3340, "pr_title": "[SegmentV2] Optimize the upgrade logic of SegmentV2", "pr_createdAt": "2020-04-17T03:43:56Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3340", "timeline": [{"oid": "52cfac8d74b5ab56ecef75c7b7ff3795d9158564", "url": "https://github.com/apache/incubator-doris/commit/52cfac8d74b5ab56ecef75c7b7ff3795d9158564", "message": "commit 1", "committedDate": "2020-04-17T03:25:00Z", "type": "commit"}, {"oid": "a6e041bb844589fe7abff040866ab5905034614d", "url": "https://github.com/apache/incubator-doris/commit/a6e041bb844589fe7abff040866ab5905034614d", "message": "3", "committedDate": "2020-04-17T03:25:49Z", "type": "commit"}, {"oid": "f84c52467bead0119e771fd91baa0c15911ab0b7", "url": "https://github.com/apache/incubator-doris/commit/f84c52467bead0119e771fd91baa0c15911ab0b7", "message": "4", "committedDate": "2020-04-17T03:25:49Z", "type": "commit"}, {"oid": "052e6d9ff3159295a87f1a39a6f376f6c1ab93a7", "url": "https://github.com/apache/incubator-doris/commit/052e6d9ff3159295a87f1a39a6f376f6c1ab93a7", "message": "fix ut", "committedDate": "2020-04-17T03:25:49Z", "type": "commit"}, {"oid": "f1771c46eed5bbd5ec3b79b29e018ea89b710cfd", "url": "https://github.com/apache/incubator-doris/commit/f1771c46eed5bbd5ec3b79b29e018ea89b710cfd", "message": "meta to 84", "committedDate": "2020-04-17T03:59:52Z", "type": "commit"}, {"oid": "f1771c46eed5bbd5ec3b79b29e018ea89b710cfd", "url": "https://github.com/apache/incubator-doris/commit/f1771c46eed5bbd5ec3b79b29e018ea89b710cfd", "message": "meta to 84", "committedDate": "2020-04-17T03:59:52Z", "type": "forcePushed"}, {"oid": "5c9414141c4fa289c5ba820bab49a4b27385946a", "url": "https://github.com/apache/incubator-doris/commit/5c9414141c4fa289c5ba820bab49a4b27385946a", "message": "remove info log", "committedDate": "2020-04-17T09:36:00Z", "type": "commit"}, {"oid": "c9db08a93b1c1917c12af743a1dd75068669d89a", "url": "https://github.com/apache/incubator-doris/commit/c9db08a93b1c1917c12af743a1dd75068669d89a", "message": "Update docs/documentation/cn/administrator-guide/segment-v2-usage.md", "committedDate": "2020-04-19T03:41:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwMDYxNQ==", "url": "https://github.com/apache/incubator-doris/pull/3340#discussion_r411300615", "bodyText": "If the storage format is already V2,  will Doris forbidden the schema change job", "author": "EmmyMiao87", "createdAt": "2020-04-20T11:25:50Z", "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java", "diffHunk": "@@ -944,7 +945,9 @@ private void createJob(long dbId, OlapTable olapTable, Map<Long, LinkedList<Colu\n             } else if (hasIndexChange) {\n                 needAlter = true;\n             } else if (storageFormat == TStorageFormat.V2) {\n-                needAlter = true;\n+                if (olapTable.getTableProperty().getStorageFormat() != TStorageFormat.V2) {", "originalCommit": "c9db08a93b1c1917c12af743a1dd75068669d89a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM4NzU1NQ==", "url": "https://github.com/apache/incubator-doris/pull/3340#discussion_r411387555", "bodyText": "Yes, if storage format is already V2, needAlter will remain false, and nothing will be done.", "author": "morningman", "createdAt": "2020-04-20T13:43:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMwMDYxNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzMjYyMg==", "url": "https://github.com/apache/incubator-doris/pull/3340#discussion_r411332622", "bodyText": "If user set 'use v2 rollup', the best rollup will not be selected?", "author": "EmmyMiao87", "createdAt": "2020-04-20T12:21:49Z", "path": "fe/src/main/java/org/apache/doris/planner/MaterializedViewSelector.java", "diffHunk": "@@ -109,9 +109,22 @@ public BestIndexInfo selectBestMV(ScanNode scanNode) throws UserException {\n         long start = System.currentTimeMillis();\n         Preconditions.checkState(scanNode instanceof OlapScanNode);\n         OlapScanNode olapScanNode = (OlapScanNode) scanNode;\n+\n+        ConnectContext connectContext = ConnectContext.get();\n+        if (connectContext != null && connectContext.getSessionVariable().isUseV2Rollup()) {", "originalCommit": "c9db08a93b1c1917c12af743a1dd75068669d89a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM4Nzg2NA==", "url": "https://github.com/apache/incubator-doris/pull/3340#discussion_r411387864", "bodyText": "Yes, if 'use v2 rollup' is true, only base index will be selected", "author": "morningman", "createdAt": "2020-04-20T13:43:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzMjYyMg=="}], "type": "inlineReview", "revised_code": {"commit": "42f2fc3d57a98fc27e4ae35cd6d5b879c6c806fc", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/planner/MaterializedViewSelector.java b/fe/src/main/java/org/apache/doris/planner/MaterializedViewSelector.java\nindex 00195ae7b..6a495adc8 100644\n--- a/fe/src/main/java/org/apache/doris/planner/MaterializedViewSelector.java\n+++ b/fe/src/main/java/org/apache/doris/planner/MaterializedViewSelector.java\n\n@@ -110,18 +110,6 @@ public class MaterializedViewSelector {\n         Preconditions.checkState(scanNode instanceof OlapScanNode);\n         OlapScanNode olapScanNode = (OlapScanNode) scanNode;\n \n-        ConnectContext connectContext = ConnectContext.get();\n-        if (connectContext != null && connectContext.getSessionVariable().isUseV2Rollup()) {\n-            // if user set `use_v2_rollup` variable to true, and there is a segment v2 rollup,\n-            // just return the segment v2 rollup, because user want to check the v2 format data.\n-            OlapTable tbl = olapScanNode.getOlapTable();\n-            String v2RollupIndexName = MaterializedViewHandler.NEW_STORAGE_FORMAT_INDEX_NAME_PREFIX + tbl.getName();\n-            Long v2RollupIndexId = tbl.getIndexIdByName(v2RollupIndexName);\n-            if (v2RollupIndexId != null) {\n-                return new BestIndexInfo(v2RollupIndexId, false, \"use_v2_rollup is true\");\n-            }\n-        }\n-\n         Map<Long, List<Column>> candidateIndexIdToSchema = predicates(olapScanNode);\n         long bestIndexId = priorities(olapScanNode, candidateIndexIdToSchema);\n         LOG.debug(\"The best materialized view is {} for scan node {} in query {}, cost {}\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzNTAyOA==", "url": "https://github.com/apache/incubator-doris/pull/3340#discussion_r411335028", "bodyText": "Maybe We should check the candidate index firstly and choose the best rollup in priorities.", "author": "EmmyMiao87", "createdAt": "2020-04-20T12:25:50Z", "path": "fe/src/main/java/org/apache/doris/planner/MaterializedViewSelector.java", "diffHunk": "@@ -109,9 +109,22 @@ public BestIndexInfo selectBestMV(ScanNode scanNode) throws UserException {\n         long start = System.currentTimeMillis();\n         Preconditions.checkState(scanNode instanceof OlapScanNode);\n         OlapScanNode olapScanNode = (OlapScanNode) scanNode;\n+\n+        ConnectContext connectContext = ConnectContext.get();\n+        if (connectContext != null && connectContext.getSessionVariable().isUseV2Rollup()) {\n+            // if user set `use_v2_rollup` variable to true, and there is a segment v2 rollup,\n+            // just return the segment v2 rollup, because user want to check the v2 format data.\n+            OlapTable tbl = olapScanNode.getOlapTable();\n+            String v2RollupIndexName = MaterializedViewHandler.NEW_STORAGE_FORMAT_INDEX_NAME_PREFIX + tbl.getName();\n+            Long v2RollupIndexId = tbl.getIndexIdByName(v2RollupIndexName);\n+            if (v2RollupIndexId != null) {\n+                return new BestIndexInfo(v2RollupIndexId, false, \"use_v2_rollup is true\");\n+            }\n+        }\n+\n         Map<Long, List<Column>> candidateIndexIdToSchema = predicates(olapScanNode);\n         long bestIndexId = priorities(olapScanNode, candidateIndexIdToSchema);", "originalCommit": "c9db08a93b1c1917c12af743a1dd75068669d89a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "42f2fc3d57a98fc27e4ae35cd6d5b879c6c806fc", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/planner/MaterializedViewSelector.java b/fe/src/main/java/org/apache/doris/planner/MaterializedViewSelector.java\nindex 00195ae7b..6a495adc8 100644\n--- a/fe/src/main/java/org/apache/doris/planner/MaterializedViewSelector.java\n+++ b/fe/src/main/java/org/apache/doris/planner/MaterializedViewSelector.java\n\n@@ -110,18 +110,6 @@ public class MaterializedViewSelector {\n         Preconditions.checkState(scanNode instanceof OlapScanNode);\n         OlapScanNode olapScanNode = (OlapScanNode) scanNode;\n \n-        ConnectContext connectContext = ConnectContext.get();\n-        if (connectContext != null && connectContext.getSessionVariable().isUseV2Rollup()) {\n-            // if user set `use_v2_rollup` variable to true, and there is a segment v2 rollup,\n-            // just return the segment v2 rollup, because user want to check the v2 format data.\n-            OlapTable tbl = olapScanNode.getOlapTable();\n-            String v2RollupIndexName = MaterializedViewHandler.NEW_STORAGE_FORMAT_INDEX_NAME_PREFIX + tbl.getName();\n-            Long v2RollupIndexId = tbl.getIndexIdByName(v2RollupIndexName);\n-            if (v2RollupIndexId != null) {\n-                return new BestIndexInfo(v2RollupIndexId, false, \"use_v2_rollup is true\");\n-            }\n-        }\n-\n         Map<Long, List<Column>> candidateIndexIdToSchema = predicates(olapScanNode);\n         long bestIndexId = priorities(olapScanNode, candidateIndexIdToSchema);\n         LOG.debug(\"The best materialized view is {} for scan node {} in query {}, cost {}\",\n"}}, {"oid": "2e578da1ba619fbb1faec78d0f70505a9bdcb497", "url": "https://github.com/apache/incubator-doris/commit/2e578da1ba619fbb1faec78d0f70505a9bdcb497", "message": "fix review", "committedDate": "2020-04-20T13:46:55Z", "type": "commit"}, {"oid": "c80bb4499bbfdbd9ef961a29e54875443cd00ddc", "url": "https://github.com/apache/incubator-doris/commit/c80bb4499bbfdbd9ef961a29e54875443cd00ddc", "message": "fix code style", "committedDate": "2020-04-20T13:47:42Z", "type": "commit"}, {"oid": "42f2fc3d57a98fc27e4ae35cd6d5b879c6c806fc", "url": "https://github.com/apache/incubator-doris/commit/42f2fc3d57a98fc27e4ae35cd6d5b879c6c806fc", "message": "fix by review2", "committedDate": "2020-04-21T02:24:09Z", "type": "commit"}, {"oid": "1110f64a8ca0f3fb5ad00778e4b5289a9238e2d5", "url": "https://github.com/apache/incubator-doris/commit/1110f64a8ca0f3fb5ad00778e4b5289a9238e2d5", "message": "fix by review 3", "committedDate": "2020-04-21T02:39:33Z", "type": "commit"}]}