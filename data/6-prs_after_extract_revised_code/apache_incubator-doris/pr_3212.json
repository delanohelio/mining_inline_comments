{"pr_number": 3212, "pr_title": "[Alter]Clean SchemaChangeJobV2 when schema change CANCELLED or FINISHED", "pr_createdAt": "2020-03-27T04:38:37Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3212", "timeline": [{"oid": "13161f2232fd769ed89c1061542c91b5a67b5d6c", "url": "https://github.com/apache/incubator-doris/commit/13161f2232fd769ed89c1061542c91b5a67b5d6c", "message": "[Alter]Optimize AlterJobV2's memory consumption", "committedDate": "2020-03-26T13:57:37Z", "type": "commit"}, {"oid": "b4151d98784f633d56f37d373f20f1697b0dbdbf", "url": "https://github.com/apache/incubator-doris/commit/b4151d98784f633d56f37d373f20f1697b0dbdbf", "message": "fix UT", "committedDate": "2020-03-27T04:35:46Z", "type": "commit"}, {"oid": "4d34883ebe73f0f30a4fd0fa053bbf75b487b467", "url": "https://github.com/apache/incubator-doris/commit/4d34883ebe73f0f30a4fd0fa053bbf75b487b467", "message": "fix", "committedDate": "2020-03-27T04:48:05Z", "type": "commit"}, {"oid": "dc13f461f5ff79375a55d727c135fa4cdfa79e97", "url": "https://github.com/apache/incubator-doris/commit/dc13f461f5ff79375a55d727c135fa4cdfa79e97", "message": "Add UT", "committedDate": "2020-03-27T06:59:59Z", "type": "commit"}, {"oid": "fa1312e1aea11d93e3958cf0e527e906113b6b4f", "url": "https://github.com/apache/incubator-doris/commit/fa1312e1aea11d93e3958cf0e527e906113b6b4f", "message": "Merge branch 'master' into fix_alter_job", "committedDate": "2020-03-28T10:15:31Z", "type": "commit"}, {"oid": "ea9c991fb8169aa82153f8385e56c998d7c2230b", "url": "https://github.com/apache/incubator-doris/commit/ea9c991fb8169aa82153f8385e56c998d7c2230b", "message": "fix", "committedDate": "2020-03-28T10:16:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxNzQyNw==", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401017427", "bodyText": "Write double?", "author": "kangkaisen", "createdAt": "2020-03-31T15:42:56Z", "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -953,4 +969,131 @@ public void readFields(DataInput in) throws IOException {\n             }\n         }\n     }\n+\n+    /**\n+     * write data need to persist when job finished\n+     */\n+    private void writeJobFinishedData(DataOutput out) throws IOException {\n+        // only persist data will be used in getInfo\n+        out.writeInt(indexIdMap.size());", "originalCommit": "ea9c991fb8169aa82153f8385e56c998d7c2230b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0MDk2NQ==", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401040965", "bodyText": "why use writeDouble? indexIdMap.size() is a integer type.", "author": "WingsGo", "createdAt": "2020-03-31T16:15:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxNzQyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM0MDU2NA==", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401340564", "bodyText": "Ignore me. I yesterday looked the code write out.writeInt(indexIdMap.size()); twice. So I said write double.", "author": "kangkaisen", "createdAt": "2020-04-01T03:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxNzQyNw=="}], "type": "inlineReview", "revised_code": {"commit": "e9ba13b7c73a6e42bbac8c988cbd1e1e304a63c0", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java b/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\nindex cccbbb3b6..e5d4b3284 100644\n--- a/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\n+++ b/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\n\n@@ -976,9 +976,6 @@ public class SchemaChangeJobV2 extends AlterJobV2 {\n     private void writeJobFinishedData(DataOutput out) throws IOException {\n         // only persist data will be used in getInfo\n         out.writeInt(indexIdMap.size());\n-\n-        // shadow index info\n-        out.writeInt(indexIdMap.size());\n         for (Entry<Long, Long> entry : indexIdMap.entrySet()) {\n             long shadowIndexId = entry.getKey();\n             out.writeLong(shadowIndexId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxODE3OQ==", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401018179", "bodyText": "Don't need this check.", "author": "kangkaisen", "createdAt": "2020-03-31T15:43:54Z", "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -953,4 +969,131 @@ public void readFields(DataInput in) throws IOException {\n             }\n         }\n     }\n+\n+    /**\n+     * write data need to persist when job finished\n+     */\n+    private void writeJobFinishedData(DataOutput out) throws IOException {\n+        // only persist data will be used in getInfo\n+        out.writeInt(indexIdMap.size());\n+\n+        // shadow index info\n+        out.writeInt(indexIdMap.size());\n+        for (Entry<Long, Long> entry : indexIdMap.entrySet()) {\n+            long shadowIndexId = entry.getKey();\n+            out.writeLong(shadowIndexId);\n+            // index id map\n+            out.writeLong(entry.getValue());\n+            // index name\n+            Text.writeString(out, indexIdToName.get(shadowIndexId));\n+            // index schema version and hash\n+            out.writeInt(indexSchemaVersionAndHashMap.get(shadowIndexId).first);\n+            out.writeInt(indexSchemaVersionAndHashMap.get(shadowIndexId).second);\n+        }\n+\n+        // bloom filter\n+        out.writeBoolean(hasBfChange);\n+        if (hasBfChange) {\n+            out.writeInt(bfColumns.size());\n+            for (String bfCol : bfColumns) {\n+                Text.writeString(out, bfCol);\n+            }\n+            out.writeDouble(bfFpp);\n+        }\n+\n+        out.writeLong(watershedTxnId);\n+\n+        // index\n+        out.writeBoolean(indexChange);\n+        if (indexChange) {\n+            if (CollectionUtils.isNotEmpty(indexes)) {\n+                out.writeBoolean(true);\n+                out.writeInt(indexes.size());\n+                for (Index index : indexes) {\n+                    index.write(out);\n+                }\n+            } else {\n+                out.writeBoolean(false);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * read data need to persist when job finished\n+     */\n+    private void readJobFinishedData(DataInput in) throws IOException {\n+        // shadow index info\n+        int indexNum = in.readInt();\n+        for (int i = 0; i < indexNum; i++) {\n+            long shadowIndexId = in.readLong();\n+            long originIndexId = in.readLong();\n+            String indexName = Text.readString(in);\n+            int schemaVersion = in.readInt();\n+            int schemaVersionHash = in.readInt();\n+            Pair<Integer, Integer> schemaVersionAndHash = Pair.create(schemaVersion, schemaVersionHash);\n+            short shortKeyCount = in.readShort();\n+\n+            indexIdMap.put(shadowIndexId, originIndexId);\n+            indexIdToName.put(shadowIndexId, indexName);\n+            indexSchemaVersionAndHashMap.put(shadowIndexId, schemaVersionAndHash);\n+        }\n+\n+        // bloom filter\n+        hasBfChange = in.readBoolean();\n+        if (hasBfChange) {\n+            int bfNum = in.readInt();\n+            bfColumns = Sets.newHashSetWithExpectedSize(bfNum);\n+            for (int i = 0; i < bfNum; i++) {\n+                bfColumns.add(Text.readString(in));\n+            }\n+            bfFpp = in.readDouble();\n+        }\n+\n+        watershedTxnId = in.readLong();\n+\n+        // index\n+        if (Catalog.getCurrentCatalogJournalVersion() >= FeMetaVersion.VERSION_70) {", "originalCommit": "ea9c991fb8169aa82153f8385e56c998d7c2230b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0Njg0NQ==", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401046845", "bodyText": "I just use the origin code, why we don't need this check?", "author": "WingsGo", "createdAt": "2020-03-31T16:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxODE3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM0MDc4OQ==", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401340789", "bodyText": "We only call readJobFinishedData If Catalog.getCurrentCatalogJournalVersion() >= FeMetaVersion.VERSION_80 is true.", "author": "kangkaisen", "createdAt": "2020-04-01T03:50:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxODE3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM1MDk0Nw==", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401350947", "bodyText": "done", "author": "WingsGo", "createdAt": "2020-04-01T04:35:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxODE3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e9ba13b7c73a6e42bbac8c988cbd1e1e304a63c0", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java b/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\nindex cccbbb3b6..e5d4b3284 100644\n--- a/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\n+++ b/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\n\n@@ -976,9 +976,6 @@ public class SchemaChangeJobV2 extends AlterJobV2 {\n     private void writeJobFinishedData(DataOutput out) throws IOException {\n         // only persist data will be used in getInfo\n         out.writeInt(indexIdMap.size());\n-\n-        // shadow index info\n-        out.writeInt(indexIdMap.size());\n         for (Entry<Long, Long> entry : indexIdMap.entrySet()) {\n             long shadowIndexId = entry.getKey();\n             out.writeLong(shadowIndexId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxOTc5Mg==", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401019792", "bodyText": "Please rename. Such as isMetaPruned", "author": "kangkaisen", "createdAt": "2020-03-31T15:46:09Z", "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -95,6 +95,9 @@\n     // shadow index id -> shadow index short key count\n     private Map<Long, Short> indexShortKeyMap = Maps.newHashMap();\n \n+    // identify whether the job is finished and no need to persist some data\n+    private boolean cleared = false;", "originalCommit": "ea9c991fb8169aa82153f8385e56c998d7c2230b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e9ba13b7c73a6e42bbac8c988cbd1e1e304a63c0", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java b/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\nindex cccbbb3b6..e5d4b3284 100644\n--- a/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\n+++ b/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\n\n@@ -96,7 +96,7 @@ public class SchemaChangeJobV2 extends AlterJobV2 {\n     private Map<Long, Short> indexShortKeyMap = Maps.newHashMap();\n \n     // identify whether the job is finished and no need to persist some data\n-    private boolean cleared = false;\n+    private boolean isMetaPruned = false;\n \n     // bloom filter info\n     private boolean hasBfChange;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAyMDUzMw==", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401020533", "bodyText": "Please rename. Such as pruneMeta", "author": "kangkaisen", "createdAt": "2020-03-31T15:47:02Z", "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -159,6 +161,18 @@ public void setStorageFormat(TStorageFormat storageFormat) {\n         this.storageFormat = storageFormat;\n     }\n \n+    /**\n+     * clear some date structure in this job to save memory\n+     * these data structures must not used in getInfo method\n+     */\n+    public void clear() {", "originalCommit": "ea9c991fb8169aa82153f8385e56c998d7c2230b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0MTEwNQ==", "url": "https://github.com/apache/incubator-doris/pull/3212#discussion_r401041105", "bodyText": "done", "author": "WingsGo", "createdAt": "2020-03-31T16:15:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAyMDUzMw=="}], "type": "inlineReview", "revised_code": {"commit": "e9ba13b7c73a6e42bbac8c988cbd1e1e304a63c0", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java b/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\nindex cccbbb3b6..e5d4b3284 100644\n--- a/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\n+++ b/fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java\n\n@@ -165,15 +165,15 @@ public class SchemaChangeJobV2 extends AlterJobV2 {\n      * clear some date structure in this job to save memory\n      * these data structures must not used in getInfo method\n      */\n-    public void clear() {\n+    private void pruneMeta() {\n         partitionIndexTabletMap.clear();\n         partitionIndexMap.clear();\n         indexSchemaMap.clear();\n         indexShortKeyMap.clear();\n-        cleared = true;\n+        isMetaPruned = true;\n     }\n \n-    /*\n+    /**\n      * runPendingJob():\n      * 1. Create all replicas of all shadow indexes and wait them finished.\n      * 2. After creating done, add the shadow indexes to catalog, user can not see this\n"}}, {"oid": "e9ba13b7c73a6e42bbac8c988cbd1e1e304a63c0", "url": "https://github.com/apache/incubator-doris/commit/e9ba13b7c73a6e42bbac8c988cbd1e1e304a63c0", "message": "fix", "committedDate": "2020-03-31T16:24:23Z", "type": "commit"}, {"oid": "40f16e5340406c0a672da4a233ef796f78912c21", "url": "https://github.com/apache/incubator-doris/commit/40f16e5340406c0a672da4a233ef796f78912c21", "message": "fix", "committedDate": "2020-04-01T04:00:21Z", "type": "commit"}]}