{"pr_number": 3357, "pr_title": "disable some unsupported syntax", "pr_createdAt": "2020-04-20T10:31:54Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3357", "timeline": [{"oid": "dcb5d6dfee39be8b643c813721e52cdc759a17ad", "url": "https://github.com/apache/incubator-doris/commit/dcb5d6dfee39be8b643c813721e52cdc759a17ad", "message": "disable some unsupported syntax", "committedDate": "2020-04-20T10:29:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAzNTk5Nw==", "url": "https://github.com/apache/incubator-doris/pull/3357#discussion_r413035997", "bodyText": "caseExpr.getChild(childIdx++) here you got the when expr", "author": "morningman", "createdAt": "2020-04-22T14:32:55Z", "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "diffHunk": "@@ -1362,9 +1362,24 @@ private void rewriteSelectList(ExprRewriter rewriter) throws AnalysisException {\n             if (!item.getExpr().contains(Predicates.instanceOf(Subquery.class))) {\n                 continue;\n             }\n+            CaseExpr caseExpr = (CaseExpr) item.getExpr();\n+\n+            int childIdx = 0;\n+            if (caseExpr.hasCaseExpr()\n+                    && caseExpr.getChild(childIdx++).contains(Predicates.instanceOf(Subquery.class))) {\n+                throw new AnalysisException(\"Only support subquery in binary predicate in case statement.\");\n+            }\n+            while (childIdx + 2 <= caseExpr.getChildren().size()) {\n+                Expr child = caseExpr.getChild(childIdx++);\n+                // case", "originalCommit": "dcb5d6dfee39be8b643c813721e52cdc759a17ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "87577355a15c7001d7048cd4e96c4a9e50d7c83b", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/analysis/SelectStmt.java b/fe/src/main/java/org/apache/doris/analysis/SelectStmt.java\nindex e775911f0..9c5d15853 100644\n--- a/fe/src/main/java/org/apache/doris/analysis/SelectStmt.java\n+++ b/fe/src/main/java/org/apache/doris/analysis/SelectStmt.java\n\n@@ -1371,11 +1371,11 @@ public class SelectStmt extends QueryStmt {\n             }\n             while (childIdx + 2 <= caseExpr.getChildren().size()) {\n                 Expr child = caseExpr.getChild(childIdx++);\n-                // case\n+                // when\n                 if (!(child instanceof BinaryPredicate) && child.contains(Predicates.instanceOf(Subquery.class))) {\n                     throw new AnalysisException(\"Only support subquery in binary predicate in case statement.\");\n                 }\n-                // when\n+                // then\n                 childIdx++;\n             }\n             item.setExpr(rewriteSubquery(item.getExpr(), analyzer));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAzNzE1Nw==", "url": "https://github.com/apache/incubator-doris/pull/3357#discussion_r413037157", "bodyText": "Here is to skip then expr, not when", "author": "morningman", "createdAt": "2020-04-22T14:34:22Z", "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "diffHunk": "@@ -1362,9 +1362,24 @@ private void rewriteSelectList(ExprRewriter rewriter) throws AnalysisException {\n             if (!item.getExpr().contains(Predicates.instanceOf(Subquery.class))) {\n                 continue;\n             }\n+            CaseExpr caseExpr = (CaseExpr) item.getExpr();\n+\n+            int childIdx = 0;\n+            if (caseExpr.hasCaseExpr()\n+                    && caseExpr.getChild(childIdx++).contains(Predicates.instanceOf(Subquery.class))) {\n+                throw new AnalysisException(\"Only support subquery in binary predicate in case statement.\");\n+            }\n+            while (childIdx + 2 <= caseExpr.getChildren().size()) {\n+                Expr child = caseExpr.getChild(childIdx++);\n+                // case\n+                if (!(child instanceof BinaryPredicate) && child.contains(Predicates.instanceOf(Subquery.class))) {\n+                    throw new AnalysisException(\"Only support subquery in binary predicate in case statement.\");\n+                }\n+                // when", "originalCommit": "dcb5d6dfee39be8b643c813721e52cdc759a17ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "87577355a15c7001d7048cd4e96c4a9e50d7c83b", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/analysis/SelectStmt.java b/fe/src/main/java/org/apache/doris/analysis/SelectStmt.java\nindex e775911f0..9c5d15853 100644\n--- a/fe/src/main/java/org/apache/doris/analysis/SelectStmt.java\n+++ b/fe/src/main/java/org/apache/doris/analysis/SelectStmt.java\n\n@@ -1371,11 +1371,11 @@ public class SelectStmt extends QueryStmt {\n             }\n             while (childIdx + 2 <= caseExpr.getChildren().size()) {\n                 Expr child = caseExpr.getChild(childIdx++);\n-                // case\n+                // when\n                 if (!(child instanceof BinaryPredicate) && child.contains(Predicates.instanceOf(Subquery.class))) {\n                     throw new AnalysisException(\"Only support subquery in binary predicate in case statement.\");\n                 }\n-                // when\n+                // then\n                 childIdx++;\n             }\n             item.setExpr(rewriteSubquery(item.getExpr(), analyzer));\n"}}, {"oid": "87577355a15c7001d7048cd4e96c4a9e50d7c83b", "url": "https://github.com/apache/incubator-doris/commit/87577355a15c7001d7048cd4e96c4a9e50d7c83b", "message": "fix typo", "committedDate": "2020-04-23T06:50:57Z", "type": "commit"}, {"oid": "07aef0dd660f116b5afe13d763a1658258a3afc7", "url": "https://github.com/apache/incubator-doris/commit/07aef0dd660f116b5afe13d763a1658258a3afc7", "message": "xx", "committedDate": "2020-04-23T08:57:08Z", "type": "commit"}, {"oid": "8eb374639c359398f59556f6afb38323045be40f", "url": "https://github.com/apache/incubator-doris/commit/8eb374639c359398f59556f6afb38323045be40f", "message": "xx", "committedDate": "2020-04-23T09:18:37Z", "type": "commit"}, {"oid": "337f8ee74849645c04c0a1fcaacae0dcbd164fbb", "url": "https://github.com/apache/incubator-doris/commit/337f8ee74849645c04c0a1fcaacae0dcbd164fbb", "message": "xx", "committedDate": "2020-04-23T11:34:15Z", "type": "commit"}, {"oid": "e70decd43af666f0efc31e4c813b7c168ef10180", "url": "https://github.com/apache/incubator-doris/commit/e70decd43af666f0efc31e4c813b7c168ef10180", "message": "remove change", "committedDate": "2020-04-24T03:10:24Z", "type": "commit"}, {"oid": "a852f13b49eabde07c2dde293c2ba662dab0b83c", "url": "https://github.com/apache/incubator-doris/commit/a852f13b49eabde07c2dde293c2ba662dab0b83c", "message": "remove change", "committedDate": "2020-04-24T03:12:34Z", "type": "commit"}, {"oid": "7005e612bc1189ce198e40de7d6a509886654385", "url": "https://github.com/apache/incubator-doris/commit/7005e612bc1189ce198e40de7d6a509886654385", "message": "remove change", "committedDate": "2020-04-24T03:13:08Z", "type": "commit"}]}