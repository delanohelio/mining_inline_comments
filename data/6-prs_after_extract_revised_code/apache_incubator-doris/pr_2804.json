{"pr_number": 2804, "pr_title": "[JDK] Support OpenJDK", "pr_createdAt": "2020-01-19T14:48:50Z", "pr_url": "https://github.com/apache/incubator-doris/pull/2804", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMwMTY1OQ==", "url": "https://github.com/apache/incubator-doris/pull/2804#discussion_r368301659", "bodyText": "Duplicated ?", "author": "yangzhg", "createdAt": "2020-01-19T15:19:41Z", "path": "fe/src/main/java/org/apache/doris/PaloFe.java", "diffHunk": "@@ -222,10 +274,12 @@ private static CommandLineOptions parseArgs(String[] args) {\n \n     private static void checkCommandLineOptions(CommandLineOptions cmdLineOpts) {\n         if (cmdLineOpts.isVersion()) {\n-            System.out.println(\"Build version: \" + Version.PALO_BUILD_VERSION);\n-            System.out.println(\"Build time: \" + Version.PALO_BUILD_TIME);\n-            System.out.println(\"Build info: \" + Version.PALO_BUILD_INFO);\n-            System.out.println(\"Build hash: \" + Version.PALO_BUILD_HASH);\n+            System.out.println(\"Build version: \" + Version.DORIS_BUILD_VERSION);\n+            System.out.println(\"Build time: \" + Version.DORIS_BUILD_TIME);\n+            System.out.println(\"Build info: \" + Version.DORIS_BUILD_INFO);\n+            System.out.println(\"Build hash: \" + Version.DORIS_BUILD_HASH);\n+            System.out.println(\"Build hash: \" + Version.DORIS_BUILD_HASH);", "originalCommit": "eae85ccfddbfbd80f2cd13ab15a7b46398578d62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMwMjMxNg==", "url": "https://github.com/apache/incubator-doris/pull/2804#discussion_r368302316", "bodyText": "removed", "author": "morningman", "createdAt": "2020-01-19T15:30:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMwMTY1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "eb5d4c82f475ecf6714e2e39f59bce6e6cf5a826", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/PaloFe.java b/fe/src/main/java/org/apache/doris/PaloFe.java\nindex 5b366959c..a38fc02fc 100644\n--- a/fe/src/main/java/org/apache/doris/PaloFe.java\n+++ b/fe/src/main/java/org/apache/doris/PaloFe.java\n\n@@ -278,11 +289,10 @@ public class PaloFe {\n             System.out.println(\"Build time: \" + Version.DORIS_BUILD_TIME);\n             System.out.println(\"Build info: \" + Version.DORIS_BUILD_INFO);\n             System.out.println(\"Build hash: \" + Version.DORIS_BUILD_HASH);\n-            System.out.println(\"Build hash: \" + Version.DORIS_BUILD_HASH);\n             System.out.println(\"Java compile version: \" + Version.DORIS_JAVA_COMPILE_VERSION);\n             System.exit(0);\n         } else if (cmdLineOpts.runBdbTools()) {\n-            BDBTool bdbTool = new BDBTool(Catalog.BDB_DIR, cmdLineOpts.getBdbToolOpts());\n+            BDBTool bdbTool = new BDBTool(Catalog.getCurrentCatalog().getBdbDir(), cmdLineOpts.getBdbToolOpts());\n             if (bdbTool.run()) {\n                 System.exit(0);\n             } else {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMwMTgxMA==", "url": "https://github.com/apache/incubator-doris/pull/2804#discussion_r368301810", "bodyText": "This may be removed", "author": "yangzhg", "createdAt": "2020-01-19T15:21:47Z", "path": "fe/src/main/java/org/apache/doris/rpc/BackendServiceProxy.java", "diffHunk": "@@ -31,6 +32,13 @@\n import org.apache.doris.thrift.TNetworkAddress;\n import org.apache.doris.thrift.TUniqueId;\n \n+//import com.baidu.jprotobuf.pbrpc.client.ProtobufRpcProxy;\n+//import com.baidu.jprotobuf.pbrpc.transport.RpcClient;\n+//import com.baidu.jprotobuf.pbrpc.transport.RpcClientOptions;\n+//import com.google.common.collect.Maps;", "originalCommit": "eae85ccfddbfbd80f2cd13ab15a7b46398578d62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMwMjMyMg==", "url": "https://github.com/apache/incubator-doris/pull/2804#discussion_r368302322", "bodyText": "ok", "author": "morningman", "createdAt": "2020-01-19T15:30:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMwMTgxMA=="}], "type": "inlineReview", "revised_code": {"commit": "eb5d4c82f475ecf6714e2e39f59bce6e6cf5a826", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/rpc/BackendServiceProxy.java b/fe/src/main/java/org/apache/doris/rpc/BackendServiceProxy.java\nindex 25a265178..1bed0cecd 100644\n--- a/fe/src/main/java/org/apache/doris/rpc/BackendServiceProxy.java\n+++ b/fe/src/main/java/org/apache/doris/rpc/BackendServiceProxy.java\n\n@@ -32,11 +32,6 @@ import org.apache.doris.thrift.TExecPlanFragmentParams;\n import org.apache.doris.thrift.TNetworkAddress;\n import org.apache.doris.thrift.TUniqueId;\n \n-//import com.baidu.jprotobuf.pbrpc.client.ProtobufRpcProxy;\n-//import com.baidu.jprotobuf.pbrpc.transport.RpcClient;\n-//import com.baidu.jprotobuf.pbrpc.transport.RpcClientOptions;\n-//import com.google.common.collect.Maps;\n-\n import com.baidu.bjf.remoting.protobuf.utils.JDKCompilerHelper;\n import com.baidu.bjf.remoting.protobuf.utils.compiler.JdkCompiler;\n import com.baidu.jprotobuf.pbrpc.client.ProtobufRpcProxy;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYxODI5Mg==", "url": "https://github.com/apache/incubator-doris/pull/2804#discussion_r368618292", "bodyText": "should check java version after configure initialized? Other wise the config isn't effective", "author": "imay", "createdAt": "2020-01-20T15:54:01Z", "path": "fe/src/main/java/org/apache/doris/PaloFe.java", "diffHunk": "@@ -53,6 +54,10 @@\n \n     // entrance for palo frontend\n     public static void main(String[] args) {\n+        if (!checkJavaVersion()) {", "originalCommit": "697ee50d3ad3bfb5e82d86be3ed99773474b188a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MzY1Nw==", "url": "https://github.com/apache/incubator-doris/pull/2804#discussion_r372163657", "bodyText": "checkJavaVersion() does not, and should not depend on any configurations of the program. It only depends on the java runtime environment, which should already be initialized\nwhen we get here.", "author": "morningman", "createdAt": "2020-01-29T02:39:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYxODI5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "eb5d4c82f475ecf6714e2e39f59bce6e6cf5a826", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/PaloFe.java b/fe/src/main/java/org/apache/doris/PaloFe.java\nindex 09af93e36..a38fc02fc 100644\n--- a/fe/src/main/java/org/apache/doris/PaloFe.java\n+++ b/fe/src/main/java/org/apache/doris/PaloFe.java\n\n@@ -52,29 +52,40 @@ import java.nio.channels.OverlappingFileLockException;\n public class PaloFe {\n     private static final Logger LOG = LogManager.getLogger(PaloFe.class);\n \n-    // entrance for palo frontend\n+    public static final String DORIS_HOME_DIR = System.getenv(\"DORIS_HOME\");\n+    public static final String PID_DIR = System.getenv(\"PID_DIR\");\n+\n     public static void main(String[] args) {\n+        start(DORIS_HOME_DIR, PID_DIR, args);\n+    }\n+\n+    // entrance for doris frontend\n+    public static void start(String dorisHomeDir, String pidDir, String[] args) {\n+        if (Strings.isNullOrEmpty(dorisHomeDir)) {\n+            System.err.println(\"env DORIS_HOME is not set.\");\n+            return;\n+        }\n+\n+        if (Strings.isNullOrEmpty(pidDir)) {\n+            System.err.println(\"env PID_DIR is not set.\");\n+            return;\n+        }\n+\n         if (!checkJavaVersion()) {\n-            System.exit(-1);\n+            return;\n         }\n \n         CommandLineOptions cmdLineOpts = parseArgs(args);\n         System.out.println(cmdLineOpts.toString());\n \n         try {\n-            final String paloHome = System.getenv(\"DORIS_HOME\");\n-            if (Strings.isNullOrEmpty(paloHome)) {\n-                System.out.println(\"env DORIS_HOME is not set.\");\n-                return;\n-            }\n-\n             // pid file\n-            if (!createAndLockPidFile(System.getenv(\"PID_DIR\") + \"/fe.pid\")) {\n+            if (!createAndLockPidFile(pidDir + \"/fe.pid\")) {\n                 throw new IOException(\"pid file is already locked.\");\n             }\n \n             // init config\n-            new Config().init(paloHome + \"/conf/fe.conf\");\n+            new Config().init(dorisHomeDir + \"/conf/fe.conf\");\n             Log4jConfig.initLogging();\n \n             // set dns cache ttl\n"}}, {"oid": "eb5d4c82f475ecf6714e2e39f59bce6e6cf5a826", "url": "https://github.com/apache/incubator-doris/commit/eb5d4c82f475ecf6714e2e39f59bce6e6cf5a826", "message": "check JAVA_OPTS_FOR_JDK_9", "committedDate": "2020-02-10T15:01:25Z", "type": "forcePushed"}, {"oid": "9aad4579975b452d2487db485cf07cdf90f04772", "url": "https://github.com/apache/incubator-doris/commit/9aad4579975b452d2487db485cf07cdf90f04772", "message": "[FE Maven] Change maven repository url from http to https (#2786)\n\nFrom January 15th, 2020, Requests to http://repo1.maven.org/maven2/ return a 501 HTTPS Required status.\nSo switch central repository url from http to https\n\nfirst commit\n\nmodify script\n\nfix bugs\n\nadd runtime version\n\nfs broker\n\nfix ut\n\nfix bug\n\nmodify start_fe.sh to choose JAVA_OPTS automatically", "committedDate": "2020-02-17T15:14:14Z", "type": "commit"}, {"oid": "c9f4595f28af9a49a65974da897c3d9e693b659d", "url": "https://github.com/apache/incubator-doris/commit/c9f4595f28af9a49a65974da897c3d9e693b659d", "message": "check JAVA_OPTS_FOR_JDK_9", "committedDate": "2020-02-17T15:14:14Z", "type": "commit"}, {"oid": "c9f4595f28af9a49a65974da897c3d9e693b659d", "url": "https://github.com/apache/incubator-doris/commit/c9f4595f28af9a49a65974da897c3d9e693b659d", "message": "check JAVA_OPTS_FOR_JDK_9", "committedDate": "2020-02-17T15:14:14Z", "type": "forcePushed"}, {"oid": "e2f5ef493db22efafa443b9be55156a531a9ed48", "url": "https://github.com/apache/incubator-doris/commit/e2f5ef493db22efafa443b9be55156a531a9ed48", "message": "check after config init", "committedDate": "2020-02-17T15:19:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMDAxMA==", "url": "https://github.com/apache/incubator-doris/pull/2804#discussion_r381300010", "bodyText": "I think this function is better to be put in JdkUtils not in PaloFe", "author": "imay", "createdAt": "2020-02-19T13:48:34Z", "path": "fe/src/main/java/org/apache/doris/rpc/BackendServiceProxy.java", "diffHunk": "@@ -53,6 +56,11 @@\n \n     private static BackendServiceProxy INSTANCE;\n \n+    static {\n+        int javaRuntimeVersion = PaloFe.getJavaVersionAsInteger(System.getProperty(\"java.version\"));", "originalCommit": "e2f5ef493db22efafa443b9be55156a531a9ed48", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2068ece8b1a845b2442db7331f3be3ab8f9fa0d", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/rpc/BackendServiceProxy.java b/fe/src/main/java/org/apache/doris/rpc/BackendServiceProxy.java\nindex 1bed0cecd..d9a90dede 100644\n--- a/fe/src/main/java/org/apache/doris/rpc/BackendServiceProxy.java\n+++ b/fe/src/main/java/org/apache/doris/rpc/BackendServiceProxy.java\n\n@@ -57,7 +57,7 @@ public class BackendServiceProxy {\n     private static BackendServiceProxy INSTANCE;\n \n     static {\n-        int javaRuntimeVersion = PaloFe.getJavaVersionAsInteger(System.getProperty(\"java.version\"));\n+        int javaRuntimeVersion = JdkUtils.getJavaVersionAsInteger(System.getProperty(\"java.version\"));\n         JDKCompilerHelper.setCompiler(new JdkCompiler(JdkCompiler.class.getClassLoader(), String.valueOf(javaRuntimeVersion)));\n     }\n \n"}}, {"oid": "3c04b801c674a2b7c0d1cfc9f5f68f41f39c6c33", "url": "https://github.com/apache/incubator-doris/commit/3c04b801c674a2b7c0d1cfc9f5f68f41f39c6c33", "message": "add jdk utils", "committedDate": "2020-02-19T14:43:39Z", "type": "commit"}, {"oid": "a2068ece8b1a845b2442db7331f3be3ab8f9fa0d", "url": "https://github.com/apache/incubator-doris/commit/a2068ece8b1a845b2442db7331f3be3ab8f9fa0d", "message": "fix bug", "committedDate": "2020-02-19T14:45:38Z", "type": "commit"}]}