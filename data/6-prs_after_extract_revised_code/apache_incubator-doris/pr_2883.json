{"pr_number": 2883, "pr_title": "add column type check when create bitmap index using create index clause", "pr_createdAt": "2020-02-11T13:03:25Z", "pr_url": "https://github.com/apache/incubator-doris/pull/2883", "timeline": [{"oid": "1e27f0c177c0380168549d929a0ee3439c424ec8", "url": "https://github.com/apache/incubator-doris/commit/1e27f0c177c0380168549d929a0ee3439c424ec8", "message": "add column type check when create bitmap index using create index clause", "committedDate": "2020-02-11T13:15:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYzMjkzMw==", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r377632933", "bodyText": "use isNumericType(), not list all type", "author": "wutiangan", "createdAt": "2020-02-11T13:28:49Z", "path": "fe/src/main/java/org/apache/doris/analysis/CreateTableStmt.java", "diffHunk": "@@ -412,9 +412,13 @@ public void analyze(Analyzer analyzer) throws UserException {\n \n                             // key columns and none/replace aggregate non-key columns support\n                             if (indexDef.getIndexType() == IndexDef.IndexType.BITMAP) {\n-                                    if (!(colType == PrimitiveType.TINYINT || colType == PrimitiveType.SMALLINT\n-                                                  || colType == PrimitiveType.INT || colType == PrimitiveType.BIGINT ||\n-                                                  colType == PrimitiveType.CHAR || colType == PrimitiveType.VARCHAR)) {\n+                                    if (!(colType == PrimitiveType.TINYINT || colType == PrimitiveType.SMALLINT ||", "originalCommit": "1e27f0c177c0380168549d929a0ee3439c424ec8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY3NzcxNg==", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r377677716", "bodyText": "it dose not support double and float and double\uff0c so cannot use  isNumericType()", "author": "yangzhg", "createdAt": "2020-02-11T14:44:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYzMjkzMw=="}], "type": "inlineReview", "revised_code": {"commit": "af551a7af62757f74283fc357a6e17293ec4e939", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/analysis/CreateTableStmt.java b/fe/src/main/java/org/apache/doris/analysis/CreateTableStmt.java\nindex 72ee9c5fd..0e459610e 100644\n--- a/fe/src/main/java/org/apache/doris/analysis/CreateTableStmt.java\n+++ b/fe/src/main/java/org/apache/doris/analysis/CreateTableStmt.java\n\n@@ -417,7 +417,7 @@ public class CreateTableStmt extends DdlStmt {\n                                               colType == PrimitiveType.CHAR || colType == PrimitiveType.VARCHAR ||\n                                               colType == PrimitiveType.DATE || colType == PrimitiveType.DATETIME ||\n                                               colType == PrimitiveType.LARGEINT || colType == PrimitiveType.DECIMAL ||\n-                                              colType == PrimitiveType.DECIMALV2 || colType == PrimitiveType.BOOLEAN\n+                                              colType == PrimitiveType.BOOLEAN\n                                     )) {\n                                         throw new AnalysisException(colType + \" is not supported in bitmap index. \"\n                                                 + \"invalid column: \" + indexColName);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0MDk5OQ==", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r377640999", "bodyText": "You can just use olapTable.getColumn() to get the column, no need to iterate all columns", "author": "morningman", "createdAt": "2020-02-11T13:43:26Z", "path": "fe/src/main/java/org/apache/doris/alter/Alter.java", "diffHunk": "@@ -200,12 +202,39 @@ public void processAlterTable(AlterTableStmt stmt) throws UserException {\n                         }\n                         Set<String> idxSet = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n                         idxSet.addAll(idx.getColumns());\n-                            if (newColset.equals(idxSet)) {\n-                                throw new AnalysisException(\"index for columns (\" + String\n-                                        .join(\",\", indexDef.getColumns()) + \" ) already exist.\");\n+                        if (newColset.equals(idxSet)) {\n+                            throw new AnalysisException(\"index for columns (\" + String\n+                                    .join(\",\", indexDef.getColumns()) + \" ) already exist.\");\n+                        }\n+                    }\n+                    OlapTable olapTable = (OlapTable) table;\n+                    for (String col : indexDef.getColumns()) {\n+                        for (Column c : olapTable.getFullSchema()) {", "originalCommit": "1e27f0c177c0380168549d929a0ee3439c424ec8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0MjEwMQ==", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r377642101", "bodyText": "And the following type checking logic looks same as in CreateTableStmt.\nSo I think they can be extract to a method?", "author": "morningman", "createdAt": "2020-02-11T13:45:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0MDk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY3OTkyMw==", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r377679923", "bodyText": "the colum name from  create index clause  may not the same case with olapTable.getColumn () so i must use case equalsIgnoreCase to find", "author": "yangzhg", "createdAt": "2020-02-11T14:47:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0MDk5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI2Mzc4Nw==", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r378263787", "bodyText": "This method is case insensitive olapTable.getColumn()", "author": "morningman", "createdAt": "2020-02-12T13:54:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0MDk5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "af551a7af62757f74283fc357a6e17293ec4e939", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/alter/Alter.java b/fe/src/main/java/org/apache/doris/alter/Alter.java\nindex 0c5e945d5..2846cbd8f 100644\n--- a/fe/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/src/main/java/org/apache/doris/alter/Alter.java\n\n@@ -217,7 +217,7 @@ public class Alter {\n                                               colType == PrimitiveType.CHAR || colType == PrimitiveType.VARCHAR ||\n                                               colType == PrimitiveType.DATE || colType == PrimitiveType.DATETIME ||\n                                               colType == PrimitiveType.LARGEINT || colType == PrimitiveType.DECIMAL ||\n-                                              colType == PrimitiveType.DECIMALV2 || colType == PrimitiveType.BOOLEAN\n+                                              colType == PrimitiveType.BOOLEAN\n                                 )) {\n                                     throw new AnalysisException(colType + \" is not supported in bitmap index. \"\n                                             + \"invalid column: \" + c);\n"}}, {"oid": "af551a7af62757f74283fc357a6e17293ec4e939", "url": "https://github.com/apache/incubator-doris/commit/af551a7af62757f74283fc357a6e17293ec4e939", "message": "add column type check when create bitmap index using create index clause", "committedDate": "2020-02-11T14:42:32Z", "type": "forcePushed"}, {"oid": "8e2c7708b94f805a0e7f1bcd8d51f60493fe4bf8", "url": "https://github.com/apache/incubator-doris/commit/8e2c7708b94f805a0e7f1bcd8d51f60493fe4bf8", "message": "add column type check when create bitmap index using create index clause", "committedDate": "2020-02-11T15:01:09Z", "type": "forcePushed"}, {"oid": "79f619002c7bdef79ecfbea97d57ad529f246095", "url": "https://github.com/apache/incubator-doris/commit/79f619002c7bdef79ecfbea97d57ad529f246095", "message": "add column type check when create bitmap index using create index clause", "committedDate": "2020-02-11T15:03:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAxOTU1Mw==", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r378019553", "bodyText": "althrough the implemention supports bf for replace non-key column\nWhat's meaning of bf?  This comment seems conflict with bitmap \u7d22\u5f15\u80fd\u591f\u5e94\u7528\u5728 Duplicate\u6570\u636e\u6a21\u578b\u7684\u6240\u6709\u5217\u548cAggregate, Uniq\u6a21\u578b\u7684key\u5217\u4e0a\u548cREPLACE \u7684value\u5217\u4e0a\u3002", "author": "kangkaisen", "createdAt": "2020-02-12T03:09:12Z", "path": "fe/src/main/java/org/apache/doris/analysis/IndexDef.java", "diffHunk": "@@ -118,4 +121,32 @@ public String getComment() {\n     public enum IndexType {\n         BITMAP,\n     }\n+    public void checkColumn(Column column) throws AnalysisException {\n+        if (indexType == IndexType.BITMAP) {\n+            String indexColName = column.getName();\n+            PrimitiveType colType = column.getDataType();\n+            if (!(colType.isDateType() || colType.isDecimalType() || colType.isFixedPointType() ||\n+                          colType.isStringType() || colType == PrimitiveType.BOOLEAN)) {\n+                throw new AnalysisException(colType + \" is not supported in bitmap index. \"\n+                        + \"invalid column: \" + indexColName);\n+            } else if (!(column.isKey()\n+                                 || column.getAggregationType() == AggregateType.NONE\n+                                 || column.getAggregationType() == AggregateType.REPLACE\n+                                 || column.getAggregationType() == AggregateType.REPLACE_IF_NOT_NULL)){\n+                // althrough the implemention supports bf for replace non-key column,", "originalCommit": "79f619002c7bdef79ecfbea97d57ad529f246095", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAyMzAyMw==", "url": "https://github.com/apache/incubator-doris/pull/2883#discussion_r378023023", "bodyText": "its a typo  i will remove it", "author": "yangzhg", "createdAt": "2020-02-12T03:26:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAxOTU1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "41c66dfa09fd3f75ad4b9d012ebc6fe174ef250c", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/analysis/IndexDef.java b/fe/src/main/java/org/apache/doris/analysis/IndexDef.java\nindex e70685bea..683cfd664 100644\n--- a/fe/src/main/java/org/apache/doris/analysis/IndexDef.java\n+++ b/fe/src/main/java/org/apache/doris/analysis/IndexDef.java\n\n@@ -121,7 +121,8 @@ public class IndexDef {\n     public enum IndexType {\n         BITMAP,\n     }\n-    public void checkColumn(Column column) throws AnalysisException {\n+\n+    public void checkColumn(Column column, KeysType keysType) throws AnalysisException {\n         if (indexType == IndexType.BITMAP) {\n             String indexColName = column.getName();\n             PrimitiveType colType = column.getDataType();\n"}}, {"oid": "41c66dfa09fd3f75ad4b9d012ebc6fe174ef250c", "url": "https://github.com/apache/incubator-doris/commit/41c66dfa09fd3f75ad4b9d012ebc6fe174ef250c", "message": "add column type check when create bitmap index using create index clause", "committedDate": "2020-02-12T03:50:33Z", "type": "forcePushed"}, {"oid": "bee44df89bdebc59c4d5f027bef94ddc2888fed4", "url": "https://github.com/apache/incubator-doris/commit/bee44df89bdebc59c4d5f027bef94ddc2888fed4", "message": "add column type check when create bitmap index using create index clause", "committedDate": "2020-02-12T03:57:38Z", "type": "forcePushed"}, {"oid": "39f9ce1cda51e698d4772020c38fd648e0f82278", "url": "https://github.com/apache/incubator-doris/commit/39f9ce1cda51e698d4772020c38fd648e0f82278", "message": "add column type check when create bitmap index using create index clause", "committedDate": "2020-02-12T15:01:32Z", "type": "commit"}, {"oid": "39f9ce1cda51e698d4772020c38fd648e0f82278", "url": "https://github.com/apache/incubator-doris/commit/39f9ce1cda51e698d4772020c38fd648e0f82278", "message": "add column type check when create bitmap index using create index clause", "committedDate": "2020-02-12T15:01:32Z", "type": "forcePushed"}]}