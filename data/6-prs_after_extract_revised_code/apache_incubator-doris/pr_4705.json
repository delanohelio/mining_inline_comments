{"pr_number": 4705, "pr_title": "[CREATE TABLE]Support new syntax CREATE TABLE LIKE to clone an existe\u2026", "pr_createdAt": "2020-10-08T00:57:40Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4705", "timeline": [{"oid": "7d2a2fa0bd2956e7bdbe72bfc24b3bca43802b75", "url": "https://github.com/apache/incubator-doris/commit/7d2a2fa0bd2956e7bdbe72bfc24b3bca43802b75", "message": "[CREATE TABLE]Support new syntax CREATE TABLE LIKE to clone an existed table", "committedDate": "2020-10-08T00:51:29Z", "type": "commit"}, {"oid": "4dd98d3515b79c62381a659d89ba94514f688511", "url": "https://github.com/apache/incubator-doris/commit/4dd98d3515b79c62381a659d89ba94514f688511", "message": "add docs", "committedDate": "2020-10-08T01:23:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1NjE5NA==", "url": "https://github.com/apache/incubator-doris/pull/4705#discussion_r501756194", "bodyText": "line 102 to line 118 is better moved to createTableLike() in Catalog.java.\nBecause analysis phase is usually used to analyze grammar, not semantics.", "author": "morningman", "createdAt": "2020-10-08T14:15:42Z", "path": "fe/fe-core/src/main/java/org/apache/doris/analysis/CreateTableLikeStmt.java", "diffHunk": "@@ -0,0 +1,130 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.analysis;\n+\n+import com.google.common.collect.Lists;\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.catalog.Database;\n+import org.apache.doris.catalog.Table;\n+import org.apache.doris.common.ErrorCode;\n+import org.apache.doris.common.ErrorReport;\n+import org.apache.doris.common.FeNameFormat;\n+import org.apache.doris.common.UserException;\n+import org.apache.doris.common.util.SqlParserUtils;\n+import org.apache.doris.mysql.privilege.PrivPredicate;\n+import org.apache.doris.qe.ConnectContext;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.List;\n+\n+/**\n+ * @author wangcong\n+ * @version 1.0\n+ * @date 2020/10/7 10:32 \u4e0a\u5348\n+ */\n+public class CreateTableLikeStmt extends DdlStmt {\n+    private static final Logger LOG = LogManager.getLogger(CreateTableLikeStmt.class);\n+\n+    private CreateTableStmt parsedCreateTableStmt;\n+    private final boolean isExternal;\n+    private final boolean ifNotExists;\n+    private final TableName tableName;\n+    private final TableName existedTableName;\n+\n+    public CreateTableLikeStmt(boolean ifNotExists, boolean isExternal, TableName tableName, TableName existedTableName) {\n+        this.ifNotExists = ifNotExists;\n+        this.isExternal = isExternal;\n+        this.tableName = tableName;\n+        this.existedTableName = existedTableName;\n+    }\n+\n+    public boolean isSetIfNotExists() {\n+        return ifNotExists;\n+    }\n+\n+    public boolean isExternal() {\n+        return isExternal;\n+    }\n+\n+    public String getDbName() {\n+        return tableName.getDb();\n+    }\n+\n+    public String getTableName() {\n+        return tableName.getTbl();\n+    }\n+\n+    public String getExistedDbName() {\n+        return existedTableName.getDb();\n+    }\n+\n+    public String getExistedTableName() {\n+        return existedTableName.getTbl();\n+    }\n+\n+    public CreateTableStmt getParsedCreateTableStmt() {\n+        return parsedCreateTableStmt;\n+    }\n+\n+    @Override\n+    public void analyze(Analyzer analyzer) throws UserException {\n+        super.analyze(analyzer);\n+        existedTableName.analyze(analyzer);\n+        ConnectContext ctx = ConnectContext.get();\n+        if (!Catalog.getCurrentCatalog().getAuth().checkTblPriv(ctx, existedTableName.getDb(),\n+                existedTableName.getTbl(), PrivPredicate.SELECT)) {\n+            ErrorReport.reportAnalysisException(ErrorCode.ERR_SPECIFIC_ACCESS_DENIED_ERROR, \"SELECT\");\n+        }\n+\n+        tableName.analyze(analyzer);\n+        FeNameFormat.checkTableName(getTableName());\n+        if (!Catalog.getCurrentCatalog().getAuth().checkTblPriv(ctx, tableName.getDb(),\n+                tableName.getTbl(), PrivPredicate.CREATE)) {\n+            ErrorReport.reportAnalysisException(ErrorCode.ERR_SPECIFIC_ACCESS_DENIED_ERROR, \"CREATE\");\n+        }\n+\n+        Database db = Catalog.getCurrentCatalog().getDb(getExistedDbName());", "originalCommit": "4dd98d3515b79c62381a659d89ba94514f688511", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg2ODcyOA==", "url": "https://github.com/apache/incubator-doris/pull/4705#discussion_r501868728", "bodyText": "done", "author": "WingsGo", "createdAt": "2020-10-08T16:52:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1NjE5NA=="}], "type": "inlineReview", "revised_code": {"commit": "af53fb47089a96175f9523cc09fc9938f778b395", "chunk": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/analysis/CreateTableLikeStmt.java b/fe/fe-core/src/main/java/org/apache/doris/analysis/CreateTableLikeStmt.java\nindex 22735aa6b..c115a8e68 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/analysis/CreateTableLikeStmt.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/analysis/CreateTableLikeStmt.java\n\n@@ -41,7 +41,6 @@ import java.util.List;\n public class CreateTableLikeStmt extends DdlStmt {\n     private static final Logger LOG = LogManager.getLogger(CreateTableLikeStmt.class);\n \n-    private CreateTableStmt parsedCreateTableStmt;\n     private final boolean isExternal;\n     private final boolean ifNotExists;\n     private final TableName tableName;\n"}}, {"oid": "af53fb47089a96175f9523cc09fc9938f778b395", "url": "https://github.com/apache/incubator-doris/commit/af53fb47089a96175f9523cc09fc9938f778b395", "message": "fix by review", "committedDate": "2020-10-08T15:26:15Z", "type": "commit"}, {"oid": "1deab7942dd3bc65bb60d14f9a8cff338bf231b5", "url": "https://github.com/apache/incubator-doris/commit/1deab7942dd3bc65bb60d14f9a8cff338bf231b5", "message": "fix unused import", "committedDate": "2020-10-08T16:37:18Z", "type": "commit"}, {"oid": "6e4524d4a0d097ec65d27715b8490254f5fc61dc", "url": "https://github.com/apache/incubator-doris/commit/6e4524d4a0d097ec65d27715b8490254f5fc61dc", "message": "fix", "committedDate": "2020-10-08T16:53:28Z", "type": "commit"}]}