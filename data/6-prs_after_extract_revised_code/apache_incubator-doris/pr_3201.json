{"pr_number": 3201, "pr_title": "[Bug][Refactor] Fix the conflict of temp partition and dynamic partition operations", "pr_createdAt": "2020-03-25T14:35:55Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3201", "timeline": [{"oid": "c61d135b5d1801bca6b321e5ad056fb83b173b09", "url": "https://github.com/apache/incubator-doris/commit/c61d135b5d1801bca6b321e5ad056fb83b173b09", "message": "1", "committedDate": "2020-03-25T09:36:49Z", "type": "commit"}, {"oid": "367824782d787577632df0aad58d4b31b1d4014c", "url": "https://github.com/apache/incubator-doris/commit/367824782d787577632df0aad58d4b31b1d4014c", "message": "2", "committedDate": "2020-03-25T10:39:08Z", "type": "commit"}, {"oid": "a6278eab63a631df18d8c88a60db4d70944e3498", "url": "https://github.com/apache/incubator-doris/commit/a6278eab63a631df18d8c88a60db4d70944e3498", "message": "1", "committedDate": "2020-03-25T12:50:56Z", "type": "commit"}, {"oid": "07957d7f9effdd387558af102630093dfc35c3fa", "url": "https://github.com/apache/incubator-doris/commit/07957d7f9effdd387558af102630093dfc35c3fa", "message": "2", "committedDate": "2020-03-25T12:50:56Z", "type": "commit"}, {"oid": "8e10691d10d96aeab674fe5b195393d2cef20e06", "url": "https://github.com/apache/incubator-doris/commit/8e10691d10d96aeab674fe5b195393d2cef20e06", "message": "3", "committedDate": "2020-03-25T13:45:16Z", "type": "commit"}, {"oid": "a35d5d6f4d67be4b9eca91495666a8d4c8f841ff", "url": "https://github.com/apache/incubator-doris/commit/a35d5d6f4d67be4b9eca91495666a8d4c8f841ff", "message": "Merge branch 'alter_conflict' of git+ssh://github.com/morningman/incubator-doris into alter_conflict", "committedDate": "2020-03-25T13:46:33Z", "type": "commit"}, {"oid": "57e1ff8d407811ac4abb1c97a10d216d6ba2c8c3", "url": "https://github.com/apache/incubator-doris/commit/57e1ff8d407811ac4abb1c97a10d216d6ba2c8c3", "message": "fix ut", "committedDate": "2020-03-25T14:26:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU2NDcwOA==", "url": "https://github.com/apache/incubator-doris/pull/3201#discussion_r398564708", "bodyText": "If true means 2 operations have no conflict. which should be compatibilityMatrix.", "author": "kangkaisen", "createdAt": "2020-03-26T13:19:34Z", "path": "fe/src/main/java/org/apache/doris/alter/AlterOpType.java", "diffHunk": "@@ -0,0 +1,62 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.alter;\n+\n+public enum AlterOpType {\n+    // rollup\n+    ADD_ROLLUP,\n+    DROP_ROLLUP,\n+    // schema change\n+    SCHEMA_CHANGE,\n+    // partition\n+    ADD_PARTITION,\n+    DROP_PARTITION,\n+    REPLACE_PARTITION,\n+    MODIFY_PARTITION,\n+    // rename\n+    RENAME,\n+    // table property\n+    MODIFY_TABLE_PROPERTY,\n+    MODIFY_TABLE_PROPERTY_SYNC, // Some operations are performed synchronously, so we distinguish them by suffix _SYNC\n+    // others operation, such as add/drop backend. currently we do not care about them\n+    ALTER_OTHER,\n+\n+    INVALID_OP;\n+\n+    // true means 2 operations have no conflict.\n+    public static Boolean[][] CONFLICT_MATRIX;", "originalCommit": "57e1ff8d407811ac4abb1c97a10d216d6ba2c8c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYyODIzMg==", "url": "https://github.com/apache/incubator-doris/pull/3201#discussion_r398628232", "bodyText": "OK", "author": "morningman", "createdAt": "2020-03-26T14:43:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU2NDcwOA=="}], "type": "inlineReview", "revised_code": {"commit": "f0cb7b921008695c4b1ba0f2c46f254fb5c45635", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/alter/AlterOpType.java b/fe/src/main/java/org/apache/doris/alter/AlterOpType.java\nindex 233d0aac5..6cf112e83 100644\n--- a/fe/src/main/java/org/apache/doris/alter/AlterOpType.java\n+++ b/fe/src/main/java/org/apache/doris/alter/AlterOpType.java\n\n@@ -39,20 +39,20 @@ public enum AlterOpType {\n     INVALID_OP;\n \n     // true means 2 operations have no conflict.\n-    public static Boolean[][] CONFLICT_MATRIX;\n+    public static Boolean[][] COMPATIBITLITY_MATRIX;\n     static {\n-        CONFLICT_MATRIX = new Boolean[INVALID_OP.ordinal() + 1][INVALID_OP.ordinal() + 1];\n+        COMPATIBITLITY_MATRIX = new Boolean[INVALID_OP.ordinal() + 1][INVALID_OP.ordinal() + 1];\n         for (int i = 0; i < INVALID_OP.ordinal(); i++) {\n             for (int j = 0; j < INVALID_OP.ordinal(); j++) {\n-                CONFLICT_MATRIX[i][j] = false;\n+                COMPATIBITLITY_MATRIX[i][j] = false;\n             }\n         }\n \n         // rollup can be added or dropped in batch\n-        CONFLICT_MATRIX[ADD_ROLLUP.ordinal()][ADD_ROLLUP.ordinal()] = true;\n-        CONFLICT_MATRIX[DROP_ROLLUP.ordinal()][DROP_ROLLUP.ordinal()] = true;\n+        COMPATIBITLITY_MATRIX[ADD_ROLLUP.ordinal()][ADD_ROLLUP.ordinal()] = true;\n+        COMPATIBITLITY_MATRIX[DROP_ROLLUP.ordinal()][DROP_ROLLUP.ordinal()] = true;\n         // schema change, such as add/modify/drop columns can be processed in batch\n-        CONFLICT_MATRIX[SCHEMA_CHANGE.ordinal()][SCHEMA_CHANGE.ordinal()] = true;\n+        COMPATIBITLITY_MATRIX[SCHEMA_CHANGE.ordinal()][SCHEMA_CHANGE.ordinal()] = true;\n     }\n \n     public boolean needCheckCapacity() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU2ODQyNg==", "url": "https://github.com/apache/incubator-doris/pull/3201#discussion_r398568426", "bodyText": "This comment could remove.", "author": "kangkaisen", "createdAt": "2020-03-26T13:24:50Z", "path": "fe/src/main/java/org/apache/doris/alter/AlterOperations.java", "diffHunk": "@@ -0,0 +1,104 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.alter;\n+\n+import org.apache.doris.analysis.AlterClause;\n+import org.apache.doris.common.DdlException;\n+\n+import com.google.common.base.Joiner;\n+import com.google.common.collect.Sets;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+/*\n+ * AlterOperations contains a set alter operations generated from a AlterStmt's alter clause.\n+ * This class is mainly used to integrate these operation types and check whether they have conflicts.\n+ */\n+public class AlterOperations {\n+    private Set<AlterOpType> currentOps = Sets.newHashSet();\n+    \n+    public AlterOperations() {\n+    }\n+\n+    public Set<AlterOpType> getCurrentOps() {\n+        return currentOps;\n+    }\n+\n+    // check the conflicts of the given list of alter clauses\n+    public void checkConflict(List<AlterClause> alterClauses) throws DdlException {\n+        for (AlterClause alterClause : alterClauses) {\n+            checkOp(alterClause.getOpType());\n+        }\n+    }\n+\n+    // some operations take up disk space. so we need to check the disk capacity before processing.\n+    // return true if we see these kind of opertions.\n+    public boolean needCheckCapacity() {\n+        for (AlterOpType currentOp : currentOps) {\n+            if (currentOp.needCheckCapacity()) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public boolean hasPartitionOp() {\n+        return currentOps.contains(AlterOpType.ADD_PARTITION) || currentOps.contains(AlterOpType.DROP_PARTITION)\n+                || currentOps.contains(AlterOpType.REPLACE_PARTITION) || currentOps.contains(AlterOpType.MODIFY_PARTITION);\n+    }\n+\n+    // MODIFY_TABLE_PROPERTY is also processed by SchemaChangeHandler\n+    public boolean hasSchemaChangeOp() {\n+        return currentOps.contains(AlterOpType.SCHEMA_CHANGE) || currentOps.contains(AlterOpType.MODIFY_TABLE_PROPERTY);\n+    }\n+\n+    public boolean hasRollupOp() {\n+        return currentOps.contains(AlterOpType.ADD_ROLLUP) || currentOps.contains(AlterOpType.DROP_ROLLUP);\n+    }\n+\n+    public boolean hasRenameOp() {\n+        return currentOps.contains(AlterOpType.RENAME);\n+    }\n+\n+    // return true if it has specified operation", "originalCommit": "57e1ff8d407811ac4abb1c97a10d216d6ba2c8c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYyOTc3Mw==", "url": "https://github.com/apache/incubator-doris/pull/3201#discussion_r398629773", "bodyText": "OK", "author": "morningman", "createdAt": "2020-03-26T14:45:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU2ODQyNg=="}], "type": "inlineReview", "revised_code": {"commit": "f0cb7b921008695c4b1ba0f2c46f254fb5c45635", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/alter/AlterOperations.java b/fe/src/main/java/org/apache/doris/alter/AlterOperations.java\nindex 6bbfeee5f..ff3af4ab0 100644\n--- a/fe/src/main/java/org/apache/doris/alter/AlterOperations.java\n+++ b/fe/src/main/java/org/apache/doris/alter/AlterOperations.java\n\n@@ -76,7 +76,6 @@ public class AlterOperations {\n         return currentOps.contains(AlterOpType.RENAME);\n     }\n \n-    // return true if it has specified operation\n     public boolean contains(AlterOpType op) {\n         return currentOps.contains(op);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3MjU1Ng==", "url": "https://github.com/apache/incubator-doris/pull/3201#discussion_r398572556", "bodyText": "Why remove this code\uff1f", "author": "kangkaisen", "createdAt": "2020-03-26T13:30:54Z", "path": "fe/src/main/java/org/apache/doris/analysis/AddPartitionClause.java", "diffHunk": "@@ -46,12 +47,11 @@ public AddPartitionClause(SingleRangePartitionDesc partitionDesc,\n                               DistributionDesc distributionDesc,\n                               Map<String, String> properties,\n                               boolean isTempPartition) {\n+        super(AlterOpType.ADD_PARTITION);\n         this.partitionDesc = partitionDesc;\n         this.distributionDesc = distributionDesc;\n         this.properties = properties;\n         this.isTempPartition = isTempPartition;\n-        \n-        this.needTableStable = false;", "originalCommit": "57e1ff8d407811ac4abb1c97a10d216d6ba2c8c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzMDE4Mw==", "url": "https://github.com/apache/incubator-doris/pull/3201#discussion_r398630183", "bodyText": "Add it back", "author": "morningman", "createdAt": "2020-03-26T14:46:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3MjU1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f0cb7b921008695c4b1ba0f2c46f254fb5c45635", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/analysis/AddPartitionClause.java b/fe/src/main/java/org/apache/doris/analysis/AddPartitionClause.java\nindex 52ca1fb24..23f8a23ea 100644\n--- a/fe/src/main/java/org/apache/doris/analysis/AddPartitionClause.java\n+++ b/fe/src/main/java/org/apache/doris/analysis/AddPartitionClause.java\n\n@@ -52,6 +52,8 @@ public class AddPartitionClause extends AlterTableClause {\n         this.distributionDesc = distributionDesc;\n         this.properties = properties;\n         this.isTempPartition = isTempPartition;\n+\n+        this.needTableStable = false;\n     }\n \n     @Override\n"}}, {"oid": "f0cb7b921008695c4b1ba0f2c46f254fb5c45635", "url": "https://github.com/apache/incubator-doris/commit/f0cb7b921008695c4b1ba0f2c46f254fb5c45635", "message": "fix by review", "committedDate": "2020-03-26T14:46:52Z", "type": "commit"}]}