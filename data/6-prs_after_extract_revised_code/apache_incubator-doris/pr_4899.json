{"pr_number": 4899, "pr_title": "Added #4897: Add table_privileges, schema_privileges and user_privile\u2026", "pr_createdAt": "2020-11-13T09:27:13Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4899", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNjY2Mw==", "url": "https://github.com/apache/incubator-doris/pull/4899#discussion_r522836663", "bodyText": "Maybe add a constant variables like 'PRIVILEGE_TYPE_LEN' is better.", "author": "EmmyMiao87", "createdAt": "2020-11-13T09:43:04Z", "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/SchemaTable.java", "diffHunk": "@@ -104,11 +104,32 @@ public static Builder builder() {\n                             TableType.SCHEMA,\n                             builder()\n                                     .column(\"GRANTEE\", ScalarType.createVarchar(NAME_CHAR_LEN))\n-                                    .column(\"TABLE_CATALOG\", ScalarType.createVarchar(NAME_CHAR_LEN))\n+                                    .column(\"TABLE_CATALOG\", ScalarType.createVarchar(FN_REFLEN))\n                                     .column(\"TABLE_SCHEMA\", ScalarType.createVarchar(NAME_CHAR_LEN))\n                                     .column(\"TABLE_NAME\", ScalarType.createVarchar(NAME_CHAR_LEN))\n-                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(NAME_CHAR_LEN))\n-                                    .column(\"IS_GRANTABLE\", ScalarType.createVarchar(NAME_CHAR_LEN))\n+                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(64))\n+                                    .column(\"IS_GRANTABLE\", ScalarType.createVarchar(3))\n+                                    .build()))\n+                    .put(\"schema_privileges\", new SchemaTable(\n+                            SystemIdGenerator.getNextId(),\n+                            \"schema_privileges\",\n+                            TableType.SCHEMA,\n+                            builder()\n+                                    .column(\"GRANTEE\", ScalarType.createVarchar(NAME_CHAR_LEN))\n+                                    .column(\"TABLE_CATALOG\", ScalarType.createVarchar(FN_REFLEN))\n+                                    .column(\"TABLE_SCHEMA\", ScalarType.createVarchar(NAME_CHAR_LEN))\n+                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(64))", "originalCommit": "1e1b359a71767ff3187e0bd384a3e4a5337d7d2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg5NDI0Ng==", "url": "https://github.com/apache/incubator-doris/pull/4899#discussion_r522894246", "bodyText": "Good idea.", "author": "luozenglin", "createdAt": "2020-11-13T11:32:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNjY2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "1ff6c6dab966e201ce34e190884a28164d779381", "chunk": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/SchemaTable.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/SchemaTable.java\nindex 832085ed5..01da90851 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/SchemaTable.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/SchemaTable.java\n\n@@ -103,33 +106,33 @@ public class SchemaTable extends Table {\n                             \"table_privileges\",\n                             TableType.SCHEMA,\n                             builder()\n-                                    .column(\"GRANTEE\", ScalarType.createVarchar(NAME_CHAR_LEN))\n+                                    .column(\"GRANTEE\", ScalarType.createVarchar(GRANTEE_len))\n                                     .column(\"TABLE_CATALOG\", ScalarType.createVarchar(FN_REFLEN))\n                                     .column(\"TABLE_SCHEMA\", ScalarType.createVarchar(NAME_CHAR_LEN))\n                                     .column(\"TABLE_NAME\", ScalarType.createVarchar(NAME_CHAR_LEN))\n-                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(64))\n-                                    .column(\"IS_GRANTABLE\", ScalarType.createVarchar(3))\n+                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(PRIVILEGE_TYPE_LEN))\n+                                    .column(\"IS_GRANTABLE\", ScalarType.createVarchar(IS_GRANTABLE_LEN))\n                                     .build()))\n                     .put(\"schema_privileges\", new SchemaTable(\n                             SystemIdGenerator.getNextId(),\n                             \"schema_privileges\",\n                             TableType.SCHEMA,\n                             builder()\n-                                    .column(\"GRANTEE\", ScalarType.createVarchar(NAME_CHAR_LEN))\n+                                    .column(\"GRANTEE\", ScalarType.createVarchar(GRANTEE_len))\n                                     .column(\"TABLE_CATALOG\", ScalarType.createVarchar(FN_REFLEN))\n                                     .column(\"TABLE_SCHEMA\", ScalarType.createVarchar(NAME_CHAR_LEN))\n-                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(64))\n-                                    .column(\"IS_GRANTABLE\", ScalarType.createVarchar(3))\n+                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(PRIVILEGE_TYPE_LEN))\n+                                    .column(\"IS_GRANTABLE\", ScalarType.createVarchar(IS_GRANTABLE_LEN))\n                                     .build()))\n                     .put(\"user_privileges\", new SchemaTable(\n                             SystemIdGenerator.getNextId(),\n                             \"user_privileges\",\n                             TableType.SCHEMA,\n                             builder()\n-                                    .column(\"GRANTEE\", ScalarType.createVarchar(NAME_CHAR_LEN))\n+                                    .column(\"GRANTEE\", ScalarType.createVarchar(GRANTEE_len))\n                                     .column(\"TABLE_CATALOG\", ScalarType.createVarchar(FN_REFLEN))\n-                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(64))\n-                                    .column(\"IS_GRANTABLE\", ScalarType.createVarchar(3))\n+                                    .column(\"PRIVILEGE_TYPE\", ScalarType.createVarchar(PRIVILEGE_TYPE_LEN))\n+                                    .column(\"IS_GRANTABLE\", ScalarType.createVarchar(IS_GRANTABLE_LEN))\n                                     .build()))\n                     .put(\"referential_constraints\", new SchemaTable(\n                             SystemIdGenerator.getNextId(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg0NTQ2Nw==", "url": "https://github.com/apache/incubator-doris/pull/4899#discussion_r522845467", "bodyText": "Are word of yes or no case sensitive ?", "author": "EmmyMiao87", "createdAt": "2020-11-13T09:58:11Z", "path": "fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java", "diffHunk": "@@ -1300,6 +1301,120 @@ public TFetchResourceResult toResourceThrift() {\n         }\n     }\n \n+    // Used for transforming privileges in palo to mysql.\n+    private final String[] privilegesInMysql = new String[]{\"\", \"\", \"\", \"SELECT\", \"INSERT\", \"ALTER\",\n+            \"CREATE\", \"DROP\", \"USAGE\"};\n+\n+    // Used for creating table_privileges table in information_schema.\n+    public void getTablePrivStatus(List<TPrivilegeStatus> tblPrivResult, UserIdentity currentUser) {\n+        readLock();\n+        try {\n+            for (PrivEntry entry : tablePrivTable.getEntries()) {\n+                TablePrivEntry tblPrivEntry = (TablePrivEntry) entry;\n+                String dbName = ClusterNamespace.getNameFromFullName(tblPrivEntry.getOrigDb());\n+                String tblName = tblPrivEntry.getOrigTbl();\n+\n+                if (dbName.equals(\"information_schema\" /* Don't show privileges in information_schema */)\n+                        || !checkTblPriv(currentUser, tblPrivEntry.getOrigDb(), tblName, PrivPredicate.SHOW)) {\n+                    continue;\n+                }\n+\n+                String grantee = new String(\"\\'\").concat(ClusterNamespace.getNameFromFullName(tblPrivEntry.getOrigUser()))\n+                        .concat(\"\\'@\\'\").concat(tblPrivEntry.getOrigHost()).concat(\"\\'\");\n+                String isGrantable = tblPrivEntry.getPrivSet().get(2) ? \"yes\" : \"no\"; //Grant_priv", "originalCommit": "1e1b359a71767ff3187e0bd384a3e4a5337d7d2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg5NTU2OQ==", "url": "https://github.com/apache/incubator-doris/pull/4899#discussion_r522895569", "bodyText": "Should use uppercase, I will modify it.", "author": "luozenglin", "createdAt": "2020-11-13T11:35:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg0NTQ2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "1ff6c6dab966e201ce34e190884a28164d779381", "chunk": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java b/fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java\nindex 4ae8ec53c..4cbe28cfc 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java\n\n@@ -1301,10 +1301,6 @@ public class PaloAuth implements Writable {\n         }\n     }\n \n-    // Used for transforming privileges in palo to mysql.\n-    private final String[] privilegesInMysql = new String[]{\"\", \"\", \"\", \"SELECT\", \"INSERT\", \"ALTER\",\n-            \"CREATE\", \"DROP\", \"USAGE\"};\n-\n     // Used for creating table_privileges table in information_schema.\n     public void getTablePrivStatus(List<TPrivilegeStatus> tblPrivResult, UserIdentity currentUser) {\n         readLock();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg0NjI5Mg==", "url": "https://github.com/apache/incubator-doris/pull/4899#discussion_r522846292", "bodyText": "Maybe a map is better? such as <PaloPrivilege, String> ?", "author": "EmmyMiao87", "createdAt": "2020-11-13T09:59:33Z", "path": "fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java", "diffHunk": "@@ -1300,6 +1301,120 @@ public TFetchResourceResult toResourceThrift() {\n         }\n     }\n \n+    // Used for transforming privileges in palo to mysql.\n+    private final String[] privilegesInMysql = new String[]{\"\", \"\", \"\", \"SELECT\", \"INSERT\", \"ALTER\",\n+            \"CREATE\", \"DROP\", \"USAGE\"};\n+\n+    // Used for creating table_privileges table in information_schema.\n+    public void getTablePrivStatus(List<TPrivilegeStatus> tblPrivResult, UserIdentity currentUser) {\n+        readLock();\n+        try {\n+            for (PrivEntry entry : tablePrivTable.getEntries()) {\n+                TablePrivEntry tblPrivEntry = (TablePrivEntry) entry;\n+                String dbName = ClusterNamespace.getNameFromFullName(tblPrivEntry.getOrigDb());\n+                String tblName = tblPrivEntry.getOrigTbl();\n+\n+                if (dbName.equals(\"information_schema\" /* Don't show privileges in information_schema */)\n+                        || !checkTblPriv(currentUser, tblPrivEntry.getOrigDb(), tblName, PrivPredicate.SHOW)) {\n+                    continue;\n+                }\n+\n+                String grantee = new String(\"\\'\").concat(ClusterNamespace.getNameFromFullName(tblPrivEntry.getOrigUser()))\n+                        .concat(\"\\'@\\'\").concat(tblPrivEntry.getOrigHost()).concat(\"\\'\");\n+                String isGrantable = tblPrivEntry.getPrivSet().get(2) ? \"yes\" : \"no\"; //Grant_priv\n+                for (PaloPrivilege paloPriv : tblPrivEntry.getPrivSet().toPrivilegeList()) {\n+                    if (paloPriv == PaloPrivilege.GRANT_PRIV) {\n+                        continue;\n+                    }\n+                    TPrivilegeStatus status = new TPrivilegeStatus();\n+                    status.setTableName(tblName);\n+                    status.setPrivilegeType(privilegesInMysql[paloPriv.getIdx()]);", "originalCommit": "1e1b359a71767ff3187e0bd384a3e4a5337d7d2e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ff6c6dab966e201ce34e190884a28164d779381", "chunk": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java b/fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java\nindex 4ae8ec53c..4cbe28cfc 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/mysql/privilege/PaloAuth.java\n\n@@ -1301,10 +1301,6 @@ public class PaloAuth implements Writable {\n         }\n     }\n \n-    // Used for transforming privileges in palo to mysql.\n-    private final String[] privilegesInMysql = new String[]{\"\", \"\", \"\", \"SELECT\", \"INSERT\", \"ALTER\",\n-            \"CREATE\", \"DROP\", \"USAGE\"};\n-\n     // Used for creating table_privileges table in information_schema.\n     public void getTablePrivStatus(List<TPrivilegeStatus> tblPrivResult, UserIdentity currentUser) {\n         readLock();\n"}}, {"oid": "e4fff3f2f960cf6c989b8d272880e384f427b7d8", "url": "https://github.com/apache/incubator-doris/commit/e4fff3f2f960cf6c989b8d272880e384f427b7d8", "message": "Added #4897: Add table_privileges, schema_privileges and user_privileges table in information_schema database.", "committedDate": "2020-11-13T14:12:59Z", "type": "commit"}, {"oid": "1ff6c6dab966e201ce34e190884a28164d779381", "url": "https://github.com/apache/incubator-doris/commit/1ff6c6dab966e201ce34e190884a28164d779381", "message": "[Compatibility] Add table table_privileges, schema_privileges and user_privileges to the information_schema database (#4897)\nto improve compatibility with the mysql", "committedDate": "2020-11-14T09:41:48Z", "type": "commit"}, {"oid": "1ff6c6dab966e201ce34e190884a28164d779381", "url": "https://github.com/apache/incubator-doris/commit/1ff6c6dab966e201ce34e190884a28164d779381", "message": "[Compatibility] Add table table_privileges, schema_privileges and user_privileges to the information_schema database (#4897)\nto improve compatibility with the mysql", "committedDate": "2020-11-14T09:41:48Z", "type": "forcePushed"}, {"oid": "25db3ef2dd4735a23dd100e22b7227f8d7041003", "url": "https://github.com/apache/incubator-doris/commit/25db3ef2dd4735a23dd100e22b7227f8d7041003", "message": "[Compatibility] Add table table_privileges, schema_privileges and user_privileges to the information_schema database (#4897)\n\nto improve compatibility with the mysql", "committedDate": "2020-11-15T09:57:19Z", "type": "commit"}]}