{"pr_number": 2799, "pr_title": "Return NullLiteral in castTo method instead of throwing a exception", "pr_createdAt": "2020-01-19T12:16:35Z", "pr_url": "https://github.com/apache/incubator-doris/pull/2799", "timeline": [{"oid": "d55782d227b5b44ec3b63fb6558f0a2ff7f298f6", "url": "https://github.com/apache/incubator-doris/commit/d55782d227b5b44ec3b63fb6558f0a2ff7f298f6", "message": "commit 1: fix bug", "committedDate": "2020-01-19T08:44:50Z", "type": "commit"}, {"oid": "161b28692e46a2ae84678e6cf1a153ab2379bb5a", "url": "https://github.com/apache/incubator-doris/commit/161b28692e46a2ae84678e6cf1a153ab2379bb5a", "message": "commit 2:Filter NullLiteral before  method instead of throwing a exception", "committedDate": "2020-01-19T12:00:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUxNjE4OQ==", "url": "https://github.com/apache/incubator-doris/pull/2799#discussion_r368516189", "bodyText": "what the different between IS_NULL_LITERAL  and result instance of NullLiteral", "author": "EmmyMiao87", "createdAt": "2020-01-20T12:12:02Z", "path": "fe/src/test/java/org/apache/doris/analysis/SqlModeTest.java", "diffHunk": "@@ -76,4 +80,34 @@ public void testPipesAsConcatMode() {\n         }\n         Assert.assertEquals(\"(('a') OR ('b')) OR ('c')\", expr.toSql());\n     }\n+\n+    @Test\n+    public void testPipesAsConcatModeNull() {\n+        // Mode Active\n+        String stmt = new String(\"SELECT ('10' || 'xy' > 1) + 2\");\n+        SqlParser parser = new SqlParser(new SqlScanner(new StringReader(stmt), SqlModeHelper.MODE_PIPES_AS_CONCAT));\n+        SelectStmt parsedStmt = null;\n+        try {\n+            parsedStmt = (SelectStmt) parser.parse().value;\n+        } catch (Exception e) {\n+            Assert.fail(e.getMessage());\n+        }\n+        Expr expr = parsedStmt.getSelectList().getItems().get(0).getExpr();\n+        if (!(expr.contains(FunctionCallExpr.class))) {\n+            Assert.fail(\"Mode not working\");\n+        }\n+\n+        analyzer = AccessTestUtil.fetchAdminAnalyzer(false);\n+        try {\n+            parsedStmt.analyze(analyzer);\n+            ExprRewriter rewriter = analyzer.getExprRewriter();\n+            rewriter.reset();\n+            parsedStmt.rewriteExprs(rewriter);\n+\n+            Expr result = parsedStmt.getSelectList().getItems().get(0).getExpr();\n+            Assert.assertEquals(Expr.IS_NULL_LITERAL.apply(result), true);", "originalCommit": "161b28692e46a2ae84678e6cf1a153ab2379bb5a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}