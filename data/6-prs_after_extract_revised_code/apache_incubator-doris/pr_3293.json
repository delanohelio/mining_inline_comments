{"pr_number": 3293, "pr_title": "[Transaction]Cancel all txns whose coordinate be is down.", "pr_createdAt": "2020-04-10T06:32:52Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3293", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTYzMg==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r406641632", "bodyText": "Could  rename aLong and value  to src and target", "author": "kangkaisen", "createdAt": "2020-04-10T07:34:45Z", "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -818,24 +817,26 @@ public boolean isPreviousTransactionsFinished(long endTransactionId, long dbId,\n         return true;\n     }\n \n-    // check if there exists a intersection between the source tableId list and target tableId list\n-    // if one of them is null or empty, that means that we don't know related tables in tableList,\n-    // we think the two lists may have intersection for right ordered txns\n+    /**\n+     * check if there exists a intersection between the source tableId list and target tableId list\n+     * if one of them is null or empty, that means that we don't know related tables in tableList,\n+     * we think the two lists may have intersection for right ordered txns\n+     */\n     public boolean isIntersectionNotEmpty(List<Long> sourceTableIdList, List<Long> targetTableIdList) {\n         if (CollectionUtils.isEmpty(sourceTableIdList) || CollectionUtils.isEmpty(targetTableIdList)) {\n             return true;\n         }\n-        for (int i = 0; i < sourceTableIdList.size(); i++) {\n-            for (int j = 0; j < targetTableIdList.size(); j++) {\n-                if (sourceTableIdList.get(i).equals(targetTableIdList.get(j))) {\n+        for (Long aLong : sourceTableIdList) {", "originalCommit": "ae8793c5a87a96ffc44d7354a8d30dc3dd9076de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY1NTg0Nw==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r406655847", "bodyText": "done", "author": "WingsGo", "createdAt": "2020-04-10T08:16:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTYzMg=="}], "type": "inlineReview", "revised_code": {"commit": "60581683270605d13d719597dcf0185fcbc140cf", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java b/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java\nindex acdc22d14..0eccf0fe3 100644\n--- a/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java\n+++ b/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java\n\n@@ -826,9 +826,9 @@ public class GlobalTransactionMgr implements Writable {\n         if (CollectionUtils.isEmpty(sourceTableIdList) || CollectionUtils.isEmpty(targetTableIdList)) {\n             return true;\n         }\n-        for (Long aLong : sourceTableIdList) {\n-            for (Long value : targetTableIdList) {\n-                if (aLong.equals(value)) {\n+        for (Long srcValue : sourceTableIdList) {\n+            for (Long targetValue : targetTableIdList) {\n+                if (srcValue.equals(targetValue)) {\n                     return true;\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0NzExMg==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r406647112", "bodyText": "Would better rename coordinate to coordinateHost", "author": "kangkaisen", "createdAt": "2020-04-10T07:50:48Z", "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -1389,4 +1389,33 @@ public TransactionState getTransactionStateByCallbackId(long callbackId) {\n         }\n         return null;\n     }\n+\n+    public List<Long> getTransactionIdByCoordinateBe(String coordinate, int limit) {", "originalCommit": "ae8793c5a87a96ffc44d7354a8d30dc3dd9076de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY1NTg3Mw==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r406655873", "bodyText": "done", "author": "WingsGo", "createdAt": "2020-04-10T08:16:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0NzExMg=="}], "type": "inlineReview", "revised_code": {"commit": "60581683270605d13d719597dcf0185fcbc140cf", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java b/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java\nindex acdc22d14..0eccf0fe3 100644\n--- a/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java\n+++ b/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java\n\n@@ -1390,12 +1390,12 @@ public class GlobalTransactionMgr implements Writable {\n         return null;\n     }\n \n-    public List<Long> getTransactionIdByCoordinateBe(String coordinate, int limit) {\n+    public List<Long> getTransactionIdByCoordinateBe(String coordinateHost, int limit) {\n         ArrayList<Long> txnIds = new ArrayList<>();\n         readLock();\n         try {\n             idToTransactionState.values().stream()\n-                    .filter(t -> (t.getCoordinator().contains(coordinate) && (!t.getTransactionStatus().isFinalStatus())))\n+                    .filter(t -> (t.getCoordinator().contains(coordinateHost) && (!t.getTransactionStatus().isFinalStatus())))\n                     .limit(limit)\n                     .forEach(t -> { txnIds.add(t.getTransactionId()); });\n         } finally {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1OTA1MQ==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r407059051", "bodyText": "Why removing the preStatus != null check?", "author": "morningman", "createdAt": "2020-04-11T12:37:00Z", "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -1148,8 +1149,7 @@ private void updateDBRunningTxnNum(TransactionStatus preStatus, TransactionState\n                 && (curTxnState.getTransactionStatus() == TransactionStatus.PREPARE\n                 || curTxnState.getTransactionStatus() == TransactionStatus.COMMITTED)) {\n             ++txnNum;\n-        } else if (preStatus != null\n-                && (preStatus == TransactionStatus.PREPARE\n+        } else if ((preStatus == TransactionStatus.PREPARE", "originalCommit": "0097dc06677be4c957be0208903a079875d12bbd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2MTg1OQ==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r407061859", "bodyText": "because preStatus == TransactionStatus.PREPARE contains the preStatus != null check", "author": "WingsGo", "createdAt": "2020-04-11T13:06:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1OTA1MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2MDM3Mg==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r407060372", "bodyText": "In some clusters, FE and BE are deployed together.\nSo only by checking t.getCoordinator().contains(coordinateHost) will also abort those transactions\nwhich the coordinator is FE, not the BE, which is not expected.\nThe current value of the coordinator is an informal value, it is just for displaying the job information. If we want to use this coordinator field to do some logic control, we should make it formal, for example, by creating a new class \"TxnCoordinator\" to save the coordinator info.\nCurrently, the coordinator is either \"FE: 192.168.0.1\" or \"BE: 192.168.0.1\". So the new class \"TxnCoordinator\" may looks like:\nclass TxnCoordinator {\n    private String source;   // \"FE\" or \"BE\"\n    private String ip;    // the ip\n}\n\nAnd in getTransactionIdByCoordinateBe, we should get all transactions with the specified IP and source is BE.", "author": "morningman", "createdAt": "2020-04-11T12:50:04Z", "path": "fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java", "diffHunk": "@@ -1389,4 +1389,33 @@ public TransactionState getTransactionStateByCallbackId(long callbackId) {\n         }\n         return null;\n     }\n+\n+    public List<Long> getTransactionIdByCoordinateBe(String coordinateHost, int limit) {\n+        ArrayList<Long> txnIds = new ArrayList<>();\n+        readLock();\n+        try {\n+            idToTransactionState.values().stream()\n+                    .filter(t -> (t.getCoordinator().contains(coordinateHost) && (!t.getTransactionStatus().isFinalStatus())))", "originalCommit": "0097dc06677be4c957be0208903a079875d12bbd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2MTkwNg==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r407061906", "bodyText": "OK, I will change it.", "author": "WingsGo", "createdAt": "2020-04-11T13:06:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2MDM3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzMyMTAwMw==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r407321003", "bodyText": "@morningman Done", "author": "WingsGo", "createdAt": "2020-04-13T05:09:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA2MDM3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "4522d4a2ff50cb8e24b34b67789df4e35e8a1dfc", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java b/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java\nindex 0eccf0fe3..acdc22d14 100644\n--- a/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java\n+++ b/fe/src/main/java/org/apache/doris/transaction/GlobalTransactionMgr.java\n\n@@ -1390,12 +1390,12 @@ public class GlobalTransactionMgr implements Writable {\n         return null;\n     }\n \n-    public List<Long> getTransactionIdByCoordinateBe(String coordinateHost, int limit) {\n+    public List<Long> getTransactionIdByCoordinateBe(String coordinate, int limit) {\n         ArrayList<Long> txnIds = new ArrayList<>();\n         readLock();\n         try {\n             idToTransactionState.values().stream()\n-                    .filter(t -> (t.getCoordinator().contains(coordinateHost) && (!t.getTransactionStatus().isFinalStatus())))\n+                    .filter(t -> (t.getCoordinator().contains(coordinate) && (!t.getTransactionStatus().isFinalStatus())))\n                     .limit(limit)\n                     .forEach(t -> { txnIds.add(t.getTransactionId()); });\n         } finally {\n"}}, {"oid": "4522d4a2ff50cb8e24b34b67789df4e35e8a1dfc", "url": "https://github.com/apache/incubator-doris/commit/4522d4a2ff50cb8e24b34b67789df4e35e8a1dfc", "message": "[Transaction]Cancel all txns whose coordinate be is down.\n\nThis CL solve problem:\n- FE cann't aware Coordinate BE down and cancel the txns because the\ntxns cann't finish.\n- Do some codestyle refactor", "committedDate": "2020-04-15T01:37:27Z", "type": "commit"}, {"oid": "60581683270605d13d719597dcf0185fcbc140cf", "url": "https://github.com/apache/incubator-doris/commit/60581683270605d13d719597dcf0185fcbc140cf", "message": "fix", "committedDate": "2020-04-15T01:37:27Z", "type": "commit"}, {"oid": "2f56f9ef74d594f80b80a794379571eb7d603294", "url": "https://github.com/apache/incubator-doris/commit/2f56f9ef74d594f80b80a794379571eb7d603294", "message": "Refacor Coordinator && replace Timer with SchedulerExecutorService", "committedDate": "2020-04-15T01:39:18Z", "type": "commit"}, {"oid": "2f56f9ef74d594f80b80a794379571eb7d603294", "url": "https://github.com/apache/incubator-doris/commit/2f56f9ef74d594f80b80a794379571eb7d603294", "message": "Refacor Coordinator && replace Timer with SchedulerExecutorService", "committedDate": "2020-04-15T01:39:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NjU4Mg==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r408886582", "bodyText": "Why here is a limit 100?", "author": "morningman", "createdAt": "2020-04-15T14:29:11Z", "path": "fe/src/main/java/org/apache/doris/system/HeartbeatMgr.java", "diffHunk": "@@ -176,6 +176,7 @@ private boolean handleHbResponse(HeartbeatResponse response, boolean isReplay) {\n                     if (hbResponse.getStatus() != HbStatus.OK) {\n                         // invalid all connections cached in ClientPool\n                         ClientPool.backendPool.clearPool(new TNetworkAddress(be.getHost(), be.getBePort()));\n+                        Catalog.getCurrentCatalog().getGlobalTransactionMgr().abortTxnWhenCoordinateBeDown(be.getHost(), 100);", "originalCommit": "2f56f9ef74d594f80b80a794379571eb7d603294", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4OTcwOQ==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r408889709", "bodyText": "because i afraid too many txn cancel will influence the heatbeat function", "author": "WingsGo", "createdAt": "2020-04-15T14:33:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NjU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0OTg1NA==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r409249854", "bodyText": "I see.\nAnother 2 things:\n\nPlz rebase the code, the FE meta version 82 has been taken.\nin handleHbResponse() method, if the parameter isReplay is true, means it is a meta log replay thread, so we don't need to process the abort in a replay thread(This is not like clearPool(), which should also be done in replay thread).", "author": "morningman", "createdAt": "2020-04-16T02:51:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NjU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI1OTI3Mg==", "url": "https://github.com/apache/incubator-doris/pull/3293#discussion_r409259272", "bodyText": "thanks, I see~, and all things is done.", "author": "WingsGo", "createdAt": "2020-04-16T03:27:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NjU4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "8dee6f7ef9dcad72bb88c9e0de606d48584ccf57", "chunk": "diff --git a/fe/src/main/java/org/apache/doris/system/HeartbeatMgr.java b/fe/src/main/java/org/apache/doris/system/HeartbeatMgr.java\nindex 499d0cd9c..062c03b37 100644\n--- a/fe/src/main/java/org/apache/doris/system/HeartbeatMgr.java\n+++ b/fe/src/main/java/org/apache/doris/system/HeartbeatMgr.java\n\n@@ -176,7 +176,9 @@ public class HeartbeatMgr extends MasterDaemon {\n                     if (hbResponse.getStatus() != HbStatus.OK) {\n                         // invalid all connections cached in ClientPool\n                         ClientPool.backendPool.clearPool(new TNetworkAddress(be.getHost(), be.getBePort()));\n-                        Catalog.getCurrentCatalog().getGlobalTransactionMgr().abortTxnWhenCoordinateBeDown(be.getHost(), 100);\n+                        if (!isReplay) {\n+                            Catalog.getCurrentCatalog().getGlobalTransactionMgr().abortTxnWhenCoordinateBeDown(be.getHost(), 100);\n+                        }\n                     }\n                     return isChanged;\n                 }\n"}}, {"oid": "b0fac54068c8f17e7328d982a01abe852c2d6834", "url": "https://github.com/apache/incubator-doris/commit/b0fac54068c8f17e7328d982a01abe852c2d6834", "message": "Merge branch 'master' into cancel_txn_coordinate_be", "committedDate": "2020-04-16T03:19:03Z", "type": "commit"}, {"oid": "8dee6f7ef9dcad72bb88c9e0de606d48584ccf57", "url": "https://github.com/apache/incubator-doris/commit/8dee6f7ef9dcad72bb88c9e0de606d48584ccf57", "message": "fix review", "committedDate": "2020-04-16T03:22:51Z", "type": "commit"}, {"oid": "bfacf09992875d681b57bc2c8b5b87ce87110390", "url": "https://github.com/apache/incubator-doris/commit/bfacf09992875d681b57bc2c8b5b87ce87110390", "message": "fix", "committedDate": "2020-04-16T15:43:34Z", "type": "commit"}]}