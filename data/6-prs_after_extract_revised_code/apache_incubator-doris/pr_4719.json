{"pr_number": 4719, "pr_title": "[Bug] Add regular column when materialized slot is empty in tuple", "pr_createdAt": "2020-10-12T09:14:03Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4719", "timeline": [{"oid": "e545eb1e2eb254fa9254f8b7d3fb5e5fe52d474a", "url": "https://github.com/apache/incubator-doris/commit/e545eb1e2eb254fa9254f8b7d3fb5e5fe52d474a", "message": "[Bug] Add regular column when materialized slot is empty in tuple\n\nIf the materilized slot is empty in inline view, the scanner will throw exception 'no materialized slot!'.\nWhen the outer query does not need any real columns of the inner query at all, such as the outer query only contains constant calculations,\nall slots in the inner query will not be materialized.\nFor example:\n```\nselect c1 from (select 'xx' c1, k1 from test) t1;\n```\n\nBut this does not mean that the inner query (select 'xx' c1, k1 from test) does not need to be executed.\nBecause the number of rows in the outer result needs to be determined by the number of rows in the inner query.\nIn this case, the inner query scan node needs to add a column to ensure the correct result.\nAt the same time it can avoid the scan node reporting errors.\n\nFixed #4716\n\nChange-Id: I86bb52efab65b658ea78094037543cb23dbff1d4", "committedDate": "2020-10-12T09:00:08Z", "type": "commit"}, {"oid": "97a7c136abd6944ea046e169daf15853b3bab159", "url": "https://github.com/apache/incubator-doris/commit/97a7c136abd6944ea046e169daf15853b3bab159", "message": "Add ut\n\nChange-Id: Ide230180dfe8d240693c585648b3fb5d514cbd48", "committedDate": "2020-10-12T11:54:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM0NTE2NA==", "url": "https://github.com/apache/incubator-doris/pull/4719#discussion_r503345164", "bodyText": "I think this method name should be changed to a more common name?\nlike: materializeSlotForEmptyMaterializedTableRef()?\nAnd add examples in comment to explain why we call it.", "author": "morningman", "createdAt": "2020-10-12T14:44:38Z", "path": "fe/fe-core/src/main/java/org/apache/doris/planner/SingleNodePlanner.java", "diffHunk": "@@ -1902,7 +1902,7 @@ private void materializeTableResultForCrossJoinOrCountStar(TableRef tblRef, Anal\n      * @param analyzer\n      */\n     private void materializeBaseTableRefResultForCrossJoinOrCountStar(BaseTableRef tblRef, Analyzer analyzer) {", "originalCommit": "97a7c136abd6944ea046e169daf15853b3bab159", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1869d3fc1dc10e0b50b56d0ced1bb1f60ea281a", "chunk": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/planner/SingleNodePlanner.java b/fe/fe-core/src/main/java/org/apache/doris/planner/SingleNodePlanner.java\nindex d9a8ade84..5384bccd4 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/planner/SingleNodePlanner.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/planner/SingleNodePlanner.java\n\n@@ -1896,12 +1896,22 @@ public class SingleNodePlanner {\n     }\n \n     /**\n-     * materialize BaseTableRef result' exprs for Cross Join or Count Star\n+     * When materialized table ref is a empty tbl ref, the planner should add a mini column for this tuple.\n+     * There are two situation:\n+     * 1. The tbl ref is empty, such as select a from (select 'c1' a from test) t;\n+     * Inner tuple: tuple 0 without slot\n+     * 2. The materialized slot in tbl ref is empty, such as select a from (select 'c1' a, k1 from test) t;\n+     * Inner tuple: tuple 0 with a not materialized slot k1\n+     * In the above two cases, it is necessary to add a mini column to the inner tuple\n+     * to ensure that the number of rows in the inner query result is the number of rows in the table.\n      *\n+     * After this function, the inner tuple is following:\n+     * case1. tuple 0: slot<k1> materialized true (new slot)\n+     * case2. tuple 0: slot<k1> materialized true (changed)\n      * @param tblRef\n      * @param analyzer\n      */\n-    private void materializeBaseTableRefResultForCrossJoinOrCountStar(BaseTableRef tblRef, Analyzer analyzer) {\n+    private void materializeSlotForEmptyMaterializedTableRef(BaseTableRef tblRef, Analyzer analyzer) {\n         if (tblRef.getDesc().getMaterializedSlots().isEmpty()) {\n             Column minimuColumn = null;\n             for (Column col : tblRef.getTable().getBaseSchema()) {\n"}}, {"oid": "a1869d3fc1dc10e0b50b56d0ced1bb1f60ea281a", "url": "https://github.com/apache/incubator-doris/commit/a1869d3fc1dc10e0b50b56d0ced1bb1f60ea281a", "message": "Add comment\n\nChange-Id: I51d5e71acdabfb4e48389436391e19917c36f52c", "committedDate": "2020-10-13T02:08:53Z", "type": "commit"}]}