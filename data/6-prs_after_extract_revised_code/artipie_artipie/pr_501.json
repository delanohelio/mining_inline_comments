{"pr_number": 501, "pr_title": "#495 - implemented RepoPermissions.FromSettings.permissions() method", "pr_createdAt": "2020-08-25T10:14:03Z", "pr_url": "https://github.com/artipie/artipie/pull/501", "timeline": [{"oid": "cff1477c57ada40bd6fc5d782befaeb87f8721a7", "url": "https://github.com/artipie/artipie/commit/cff1477c57ada40bd6fc5d782befaeb87f8721a7", "message": "#495 - implemented RepoPermissions.FromSettings.permissions() method", "committedDate": "2020-08-25T10:12:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM0NzE3OQ==", "url": "https://github.com/artipie/artipie/pull/501#discussion_r476347179", "bodyText": "@olenagerasimova I'd suggest to remove dynamic casting and change return type to <? extends YamlMapping> or specify type param for to method as <YamlMapping>", "author": "olegmoz", "createdAt": "2020-08-25T10:31:58Z", "path": "src/main/java/com/artipie/RepoPermissions.java", "diffHunk": "@@ -110,8 +118,37 @@ public FromSettings(final Settings settings) {\n         }\n \n         @Override\n-        public CompletionStage<Map<String, List<String>>> get(final String repo) {\n-            throw new UnsupportedOperationException(\"To implemented later\");\n+        public CompletionStage<Map<String, List<String>>> permissions(final String repo) {\n+            return this.yaml(new Key.From(String.format(\"%s.yaml\", repo))).thenApply(\n+                yaml -> Optional.ofNullable(yaml.yamlMapping(\"repo\").yamlMapping(\"permissions\"))\n+                .map(\n+                    perms -> {\n+                        final Map<String, List<String>> res = new HashMap<>();\n+                        perms.keys().forEach(\n+                            node -> res.put(\n+                                node.asScalar().value(),\n+                                perms.yamlSequence(node.asScalar().value()).values().stream()\n+                                .map(item -> Scalar.class.cast(item).value())\n+                                    .collect(Collectors.toList())\n+                            )\n+                        );\n+                        return res;\n+                    }\n+                ).orElse(Collections.emptyMap())\n+            );\n+        }\n+\n+        /**\n+         * Credentials as yaml.\n+         * @param key Repo settings key\n+         * @return Completion action with yaml\n+         */\n+        private CompletionStage<YamlMapping> yaml(final Key key) {\n+            return new RxStorageWrapper(this.storage())\n+                .value(key)\n+                .to(ContentAs.YAML)\n+                .to(SingleInterop.get())\n+                .thenApply(yaml -> (YamlMapping) yaml);", "originalCommit": "cff1477c57ada40bd6fc5d782befaeb87f8721a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8464adda649ac7fc7124fb5f165d93d467f82009", "chunk": "diff --git a/src/main/java/com/artipie/RepoPermissions.java b/src/main/java/com/artipie/RepoPermissions.java\nindex 30011e9..0c497d8 100644\n--- a/src/main/java/com/artipie/RepoPermissions.java\n+++ b/src/main/java/com/artipie/RepoPermissions.java\n\n@@ -128,7 +128,7 @@ public interface RepoPermissions {\n                             node -> res.put(\n                                 node.asScalar().value(),\n                                 perms.yamlSequence(node.asScalar().value()).values().stream()\n-                                .map(item -> Scalar.class.cast(item).value())\n+                                .map(item -> item.asScalar().value())\n                                     .collect(Collectors.toList())\n                             )\n                         );\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM0ODkwOQ==", "url": "https://github.com/artipie/artipie/pull/501#discussion_r476348909", "bodyText": "@olenagerasimova dynamic casting via Scalar.class.cast(item) could be avoided by using item.asScalar() method", "author": "olegmoz", "createdAt": "2020-08-25T10:35:19Z", "path": "src/main/java/com/artipie/RepoPermissions.java", "diffHunk": "@@ -110,8 +118,37 @@ public FromSettings(final Settings settings) {\n         }\n \n         @Override\n-        public CompletionStage<Map<String, List<String>>> get(final String repo) {\n-            throw new UnsupportedOperationException(\"To implemented later\");\n+        public CompletionStage<Map<String, List<String>>> permissions(final String repo) {\n+            return this.yaml(new Key.From(String.format(\"%s.yaml\", repo))).thenApply(\n+                yaml -> Optional.ofNullable(yaml.yamlMapping(\"repo\").yamlMapping(\"permissions\"))\n+                .map(\n+                    perms -> {\n+                        final Map<String, List<String>> res = new HashMap<>();\n+                        perms.keys().forEach(\n+                            node -> res.put(\n+                                node.asScalar().value(),\n+                                perms.yamlSequence(node.asScalar().value()).values().stream()\n+                                .map(item -> Scalar.class.cast(item).value())", "originalCommit": "cff1477c57ada40bd6fc5d782befaeb87f8721a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8464adda649ac7fc7124fb5f165d93d467f82009", "chunk": "diff --git a/src/main/java/com/artipie/RepoPermissions.java b/src/main/java/com/artipie/RepoPermissions.java\nindex 30011e9..0c497d8 100644\n--- a/src/main/java/com/artipie/RepoPermissions.java\n+++ b/src/main/java/com/artipie/RepoPermissions.java\n\n@@ -128,7 +128,7 @@ public interface RepoPermissions {\n                             node -> res.put(\n                                 node.asScalar().value(),\n                                 perms.yamlSequence(node.asScalar().value()).values().stream()\n-                                .map(item -> Scalar.class.cast(item).value())\n+                                .map(item -> item.asScalar().value())\n                                     .collect(Collectors.toList())\n                             )\n                         );\n"}}, {"oid": "8464adda649ac7fc7124fb5f165d93d467f82009", "url": "https://github.com/artipie/artipie/commit/8464adda649ac7fc7124fb5f165d93d467f82009", "message": "#495 - CR", "committedDate": "2020-08-25T11:15:21Z", "type": "commit"}, {"oid": "80fd4ce24bd25d799706a6babff3838d3e150552", "url": "https://github.com/artipie/artipie/commit/80fd4ce24bd25d799706a6babff3838d3e150552", "message": "#495 - unused import removed", "committedDate": "2020-08-25T11:18:46Z", "type": "commit"}, {"oid": "0faee2d71d68a6f131b3c2b7b1148d9bfd9a4755", "url": "https://github.com/artipie/artipie/commit/0faee2d71d68a6f131b3c2b7b1148d9bfd9a4755", "message": "#495 - CR", "committedDate": "2020-08-25T11:27:41Z", "type": "commit"}]}