{"pr_number": 34, "pr_title": "Fixed artipie config parsing", "pr_createdAt": "2020-02-21T10:04:02Z", "pr_url": "https://github.com/artipie/artipie/pull/34", "timeline": [{"oid": "00485117fc6d891d9aa1606a86bc2d40e8142a18", "url": "https://github.com/artipie/artipie/commit/00485117fc6d891d9aa1606a86bc2d40e8142a18", "message": "#33 - fixed artipie server and config parsing", "committedDate": "2020-02-21T09:59:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgzODk4Mw==", "url": "https://github.com/artipie/artipie/pull/34#discussion_r382838983", "bodyText": "@g4s8 Would be smarter to assign uri.getPath() to a variable once after line 74  and use it.\nThis method response defines uri.getPath() twice.", "author": "fanifieiev", "createdAt": "2020-02-21T22:36:17Z", "path": "src/main/java/com/artipie/Pie.java", "diffHunk": "@@ -67,20 +70,24 @@ public Pie(final Settings settings) {\n     @SuppressWarnings(\"PMD.OnlyOneReturn\")\n     public Response response(final String line, final Iterable<Map.Entry<String, String>> headers,\n         final Publisher<ByteBuffer> body) {\n+        Logger.info(this, \"Request: %s\", line);\n         final URI uri = new RequestLineFrom(line).uri();\n         if (uri.getPath().equals(\"*\")) {\n             return new RsWithStatus(200);\n         }\n-        final String[] path = uri.getPath().split(\"/\");\n+        final String[] path = uri.getPath().replaceAll(\"^/+\", \"\").split(\"/\");", "originalCommit": "00485117fc6d891d9aa1606a86bc2d40e8142a18", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcxMjI1Mw==", "url": "https://github.com/artipie/artipie/pull/34#discussion_r383712253", "bodyText": "@fanifieiev right, fixed", "author": "g4s8", "createdAt": "2020-02-25T08:05:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgzODk4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "1b48e5080699138d5480efe25a34b72e49b6d45e", "chunk": "diff --git a/src/main/java/com/artipie/Pie.java b/src/main/java/com/artipie/Pie.java\nindex 432acce..13ae3e1 100644\n--- a/src/main/java/com/artipie/Pie.java\n+++ b/src/main/java/com/artipie/Pie.java\n\n@@ -72,14 +72,15 @@ public final class Pie implements Slice {\n         final Publisher<ByteBuffer> body) {\n         Logger.info(this, \"Request: %s\", line);\n         final URI uri = new RequestLineFrom(line).uri();\n-        if (uri.getPath().equals(\"*\")) {\n+        final String path = uri.getPath();\n+        if (path.equals(\"*\")) {\n             return new RsWithStatus(200);\n         }\n-        final String[] path = uri.getPath().replaceAll(\"^/+\", \"\").split(\"/\");\n-        if (uri.getPath().equals(\"/\") || path.length == 0) {\n+        final String[] parts = path.replaceAll(\"^/+\", \"\").split(\"/\");\n+        if (path.equals(\"/\") || parts.length == 0) {\n             return new RsWithStatus(200);\n         }\n-        final String repo = path[0];\n+        final String repo = parts[0];\n         Logger.debug(this, \"Slice repo=%s\", repo);\n         return new AsyncSlice(\n             CompletableFuture.supplyAsync(\n"}}, {"oid": "1b48e5080699138d5480efe25a34b72e49b6d45e", "url": "https://github.com/artipie/artipie/commit/1b48e5080699138d5480efe25a34b72e49b6d45e", "message": "#33 - (cr) using path variable", "committedDate": "2020-02-25T08:00:53Z", "type": "commit"}]}