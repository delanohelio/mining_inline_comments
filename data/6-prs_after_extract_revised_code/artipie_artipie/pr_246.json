{"pr_number": 246, "pr_title": "#231 - Added InMemoryCounter", "pr_createdAt": "2020-06-29T10:10:06Z", "pr_url": "https://github.com/artipie/artipie/pull/246", "timeline": [{"oid": "c90bf9baaaa6e331c45876b9b4fd0b2b326dad0c", "url": "https://github.com/artipie/artipie/commit/c90bf9baaaa6e331c45876b9b4fd0b2b326dad0c", "message": "#231 - Added InMemoryCounter", "committedDate": "2020-06-29T11:42:25Z", "type": "forcePushed"}, {"oid": "05e095f717760c6555b9997940e3cea65e4ac146", "url": "https://github.com/artipie/artipie/commit/05e095f717760c6555b9997940e3cea65e4ac146", "message": "#231 - Added InMemoryCounter", "committedDate": "2020-06-29T13:30:37Z", "type": "forcePushed"}, {"oid": "05e095f717760c6555b9997940e3cea65e4ac146", "url": "https://github.com/artipie/artipie/commit/05e095f717760c6555b9997940e3cea65e4ac146", "message": "#231 - Added InMemoryCounter", "committedDate": "2020-06-29T13:30:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4ODc0Nw==", "url": "https://github.com/artipie/artipie/pull/246#discussion_r447488747", "bodyText": "@olegmoz since 0.8", "author": "Vatavuk", "createdAt": "2020-06-30T08:01:20Z", "path": "src/main/java/com/artipie/metrics/memory/InMemoryCounter.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.metrics.memory;\n+\n+import com.artipie.metrics.Counter;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+/**\n+ * {@link Counter} implementation storing data in memory.\n+ *\n+ * @since 0.6", "originalCommit": "05e095f717760c6555b9997940e3cea65e4ac146", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c08f8dec49b4e9bb22aad8fad7fe753fb972c3d", "chunk": "diff --git a/src/main/java/com/artipie/metrics/memory/InMemoryCounter.java b/src/main/java/com/artipie/metrics/memory/InMemoryCounter.java\nindex 904329f..0a468d2 100644\n--- a/src/main/java/com/artipie/metrics/memory/InMemoryCounter.java\n+++ b/src/main/java/com/artipie/metrics/memory/InMemoryCounter.java\n\n@@ -29,14 +29,14 @@ import java.util.concurrent.atomic.AtomicLong;\n /**\n  * {@link Counter} implementation storing data in memory.\n  *\n- * @since 0.6\n+ * @since 0.8\n  */\n final class InMemoryCounter implements Counter {\n \n     /**\n      * Current counter value.\n      */\n-    private final AtomicLong value = new AtomicLong();\n+    private final AtomicLong counter = new AtomicLong();\n \n     @Override\n     public void add(final long amount) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4ODg0OA==", "url": "https://github.com/artipie/artipie/pull/246#discussion_r447488848", "bodyText": "@olegmoz since 0.8", "author": "Vatavuk", "createdAt": "2020-06-30T08:01:27Z", "path": "src/main/java/com/artipie/metrics/memory/package-info.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+/**\n+ * Artipie metrics implementation storing data in memory.\n+ *\n+ * @since 0.6", "originalCommit": "05e095f717760c6555b9997940e3cea65e4ac146", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c08f8dec49b4e9bb22aad8fad7fe753fb972c3d", "chunk": "diff --git a/src/main/java/com/artipie/metrics/memory/package-info.java b/src/main/java/com/artipie/metrics/memory/package-info.java\nindex 75b0331..65e8a5d 100644\n--- a/src/main/java/com/artipie/metrics/memory/package-info.java\n+++ b/src/main/java/com/artipie/metrics/memory/package-info.java\n\n@@ -25,6 +25,6 @@\n /**\n  * Artipie metrics implementation storing data in memory.\n  *\n- * @since 0.6\n+ * @since 0.8\n  */\n package com.artipie.metrics.memory;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4ODg5Nw==", "url": "https://github.com/artipie/artipie/pull/246#discussion_r447488897", "bodyText": "@olegmoz since 0.8", "author": "Vatavuk", "createdAt": "2020-06-30T08:01:32Z", "path": "src/test/java/com/artipie/metrics/memory/InMemoryCounterTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.metrics.memory;\n+\n+import java.util.stream.IntStream;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Tests for {@link InMemoryCounter}.\n+ *\n+ * @since 0.6", "originalCommit": "05e095f717760c6555b9997940e3cea65e4ac146", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c08f8dec49b4e9bb22aad8fad7fe753fb972c3d", "chunk": "diff --git a/src/test/java/com/artipie/metrics/memory/InMemoryCounterTest.java b/src/test/java/com/artipie/metrics/memory/InMemoryCounterTest.java\nindex 2e88fbe..2b3153a 100644\n--- a/src/test/java/com/artipie/metrics/memory/InMemoryCounterTest.java\n+++ b/src/test/java/com/artipie/metrics/memory/InMemoryCounterTest.java\n\n@@ -32,13 +32,13 @@ import org.junit.jupiter.api.Test;\n /**\n  * Tests for {@link InMemoryCounter}.\n  *\n- * @since 0.6\n+ * @since 0.8\n  */\n class InMemoryCounterTest {\n \n     @Test\n     void shouldBeInitializedWithZero() {\n-        MatcherAssert.assertThat(new InMemoryCounter().get(), new IsEqual<>(0L));\n+        MatcherAssert.assertThat(new InMemoryCounter().value(), new IsEqual<>(0L));\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4ODk1MA==", "url": "https://github.com/artipie/artipie/pull/246#discussion_r447488950", "bodyText": "@olegmoz since 0.8", "author": "Vatavuk", "createdAt": "2020-06-30T08:01:37Z", "path": "src/test/java/com/artipie/metrics/memory/package-info.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+/**\n+ * Tests for Artipie metrics implementation storing data in memory.\n+ *\n+ * @since 0.6", "originalCommit": "05e095f717760c6555b9997940e3cea65e4ac146", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c08f8dec49b4e9bb22aad8fad7fe753fb972c3d", "chunk": "diff --git a/src/test/java/com/artipie/metrics/memory/package-info.java b/src/test/java/com/artipie/metrics/memory/package-info.java\nindex a8b9669..d193d94 100644\n--- a/src/test/java/com/artipie/metrics/memory/package-info.java\n+++ b/src/test/java/com/artipie/metrics/memory/package-info.java\n\n@@ -25,6 +25,6 @@\n /**\n  * Tests for Artipie metrics implementation storing data in memory.\n  *\n- * @since 0.6\n+ * @since 0.8\n  */\n package com.artipie.metrics.memory;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4OTQwNg==", "url": "https://github.com/artipie/artipie/pull/246#discussion_r447489406", "bodyText": "@olegmoz I would rename this method to value() to be more explicit.", "author": "Vatavuk", "createdAt": "2020-06-30T08:02:22Z", "path": "src/main/java/com/artipie/metrics/memory/InMemoryCounter.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.metrics.memory;\n+\n+import com.artipie.metrics.Counter;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+/**\n+ * {@link Counter} implementation storing data in memory.\n+ *\n+ * @since 0.6\n+ */\n+final class InMemoryCounter implements Counter {\n+\n+    /**\n+     * Current counter value.\n+     */\n+    private final AtomicLong value = new AtomicLong();\n+\n+    @Override\n+    public void add(final long amount) {\n+        if (amount < 0) {\n+            throw new IllegalArgumentException(\n+                String.format(\"Amount should not be negative: %d\", amount)\n+            );\n+        }\n+        this.value.addAndGet(amount);\n+    }\n+\n+    @Override\n+    public void inc() {\n+        this.value.incrementAndGet();\n+    }\n+\n+    /**\n+     * Get counter value.\n+     *\n+     * @return Counter value.\n+     */\n+    public long get() {", "originalCommit": "05e095f717760c6555b9997940e3cea65e4ac146", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c08f8dec49b4e9bb22aad8fad7fe753fb972c3d", "chunk": "diff --git a/src/main/java/com/artipie/metrics/memory/InMemoryCounter.java b/src/main/java/com/artipie/metrics/memory/InMemoryCounter.java\nindex 904329f..0a468d2 100644\n--- a/src/main/java/com/artipie/metrics/memory/InMemoryCounter.java\n+++ b/src/main/java/com/artipie/metrics/memory/InMemoryCounter.java\n\n@@ -29,14 +29,14 @@ import java.util.concurrent.atomic.AtomicLong;\n /**\n  * {@link Counter} implementation storing data in memory.\n  *\n- * @since 0.6\n+ * @since 0.8\n  */\n final class InMemoryCounter implements Counter {\n \n     /**\n      * Current counter value.\n      */\n-    private final AtomicLong value = new AtomicLong();\n+    private final AtomicLong counter = new AtomicLong();\n \n     @Override\n     public void add(final long amount) {\n"}}, {"oid": "9c08f8dec49b4e9bb22aad8fad7fe753fb972c3d", "url": "https://github.com/artipie/artipie/commit/9c08f8dec49b4e9bb22aad8fad7fe753fb972c3d", "message": "#231 - Changes by review", "committedDate": "2020-06-30T09:29:25Z", "type": "commit"}, {"oid": "e1ada37a659b3b6563b559b200b25e25ec74aea3", "url": "https://github.com/artipie/artipie/commit/e1ada37a659b3b6563b559b200b25e25ec74aea3", "message": "Merge branch 'master' into 231-in-memory-counter", "committedDate": "2020-06-30T09:27:23Z", "type": "commit"}, {"oid": "b08685df3f6da462643c361c9088582f36ffc375", "url": "https://github.com/artipie/artipie/commit/b08685df3f6da462643c361c9088582f36ffc375", "message": "Merge branch 'master' into 231-in-memory-counter", "committedDate": "2020-06-30T11:49:50Z", "type": "commit"}]}