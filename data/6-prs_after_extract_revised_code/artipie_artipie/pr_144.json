{"pr_number": 144, "pr_title": "Test Pie retuns 404 for missing repository", "pr_createdAt": "2020-05-16T14:52:05Z", "pr_url": "https://github.com/artipie/artipie/pull/144", "timeline": [{"oid": "235309d5c74abb04718f0aa0897fe803bdecc2b3", "url": "https://github.com/artipie/artipie/commit/235309d5c74abb04718f0aa0897fe803bdecc2b3", "message": "(#120) - Test Pie retuns 404 for missing repository", "committedDate": "2020-05-16T14:52:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAwMDc1OQ==", "url": "https://github.com/artipie/artipie/pull/144#discussion_r427000759", "bodyText": "@victornoel You mean 404?", "author": "carlosmiranda", "createdAt": "2020-05-19T02:54:11Z", "path": "src/test/java/com/artipie/PieTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie;\n+\n+import com.artipie.http.Headers;\n+import com.artipie.http.hm.RsHasStatus;\n+import com.artipie.http.rq.RequestLine;\n+import com.artipie.http.rs.RsStatus;\n+import io.reactivex.Flowable;\n+import io.vertx.junit5.VertxExtension;\n+import io.vertx.reactivex.core.Vertx;\n+import java.nio.file.Path;\n+import org.hamcrest.MatcherAssert;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+/**\n+ * Test for {@link Pie}.\n+ * @since 0.2\n+ */\n+@ExtendWith(VertxExtension.class)\n+public final class PieTest {\n+    @Test\n+    public void unexistingRepoReturnNotFound(final Vertx vertx, @TempDir final Path tmp) {\n+        MatcherAssert.assertThat(\n+            \"Must return 400 HTTP status\",", "originalCommit": "235309d5c74abb04718f0aa0897fe803bdecc2b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "08bcffbcc500bf2c411f68c7e5aec4e741b810c6", "chunk": "diff --git a/src/test/java/com/artipie/PieTest.java b/src/test/java/com/artipie/PieTest.java\nindex 88ec86a..2ae1b5f 100644\n--- a/src/test/java/com/artipie/PieTest.java\n+++ b/src/test/java/com/artipie/PieTest.java\n\n@@ -45,7 +45,7 @@ public final class PieTest {\n     @Test\n     public void unexistingRepoReturnNotFound(final Vertx vertx, @TempDir final Path tmp) {\n         MatcherAssert.assertThat(\n-            \"Must return 400 HTTP status\",\n+            \"Must return 404 HTTP status\",\n             new Pie(new Settings.Fake(tmp, vertx), vertx).response(\n                 new RequestLine(\"GET\", \"/repo/foo\", \"HTTP/1.1\").toString(),\n                 Headers.EMPTY,\n"}}, {"oid": "08bcffbcc500bf2c411f68c7e5aec4e741b810c6", "url": "https://github.com/artipie/artipie/commit/08bcffbcc500bf2c411f68c7e5aec4e741b810c6", "message": "(#74) - Fix the assertion message as per REV request", "committedDate": "2020-05-19T18:22:29Z", "type": "forcePushed"}, {"oid": "ea4e72267aafac40d5f3b1b3410eb7678147d470", "url": "https://github.com/artipie/artipie/commit/ea4e72267aafac40d5f3b1b3410eb7678147d470", "message": "(#74) - Fix the assertion message as per REV request", "committedDate": "2020-05-22T16:19:08Z", "type": "forcePushed"}, {"oid": "0fd7b6b60d80c8747b7254c6ba51a736db409213", "url": "https://github.com/artipie/artipie/commit/0fd7b6b60d80c8747b7254c6ba51a736db409213", "message": "(#120) - Fix the assertion message as per REV request", "committedDate": "2020-05-22T16:27:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg5MDg3OA==", "url": "https://github.com/artipie/artipie/pull/144#discussion_r429890878", "bodyText": "@victornoel can we use InMemoryStorage for testing? I think it has more sense for fake implementation here and it doesn't depend on FS resources", "author": "g4s8", "createdAt": "2020-05-25T11:44:24Z", "path": "src/main/java/com/artipie/Settings.java", "diffHunk": "@@ -49,4 +52,43 @@\n      * @throws IOException In case of problems with reading settings.\n      */\n     CompletionStage<Authentication> auth() throws IOException;\n+\n+    /**\n+     * Fake {@link Settings} using a file storage.\n+     *\n+     * @since 0.2\n+     */\n+    final class Fake implements Settings {\n+\n+        /**\n+         * Storage path.\n+         */\n+        private final Path storage;\n+\n+        /**\n+         * Vertx.\n+         */\n+        private final Vertx vertx;\n+\n+        /**\n+         * Ctor.\n+         *\n+         * @param storage Storage path\n+         * @param vertx Vertx\n+         */\n+        public Fake(final Path storage, final Vertx vertx) {\n+            this.storage = storage;\n+            this.vertx = vertx;\n+        }\n+\n+        @Override\n+        public Storage storage() throws IOException {\n+            return new FileStorage(this.storage, this.vertx.fileSystem());", "originalCommit": "0fd7b6b60d80c8747b7254c6ba51a736db409213", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dda4432173c990e364692135c2542bd8c556b411", "chunk": "diff --git a/src/main/java/com/artipie/Settings.java b/src/main/java/com/artipie/Settings.java\nindex 97050cf..b0994ee 100644\n--- a/src/main/java/com/artipie/Settings.java\n+++ b/src/main/java/com/artipie/Settings.java\n\n@@ -49,7 +49,7 @@ public interface Settings {\n      * Provides authorization.\n      *\n      * @return Authentication instance\n-     * @throws IOException In case of problems with reading settings.\n+     * @throws IOException On Error\n      */\n     CompletionStage<Authentication> auth() throws IOException;\n \n"}}, {"oid": "dda4432173c990e364692135c2542bd8c556b411", "url": "https://github.com/artipie/artipie/commit/dda4432173c990e364692135c2542bd8c556b411", "message": "(#120) - Test Pie retuns 404 for missing repository", "committedDate": "2020-05-27T11:37:02Z", "type": "commit"}, {"oid": "f7ab0497bacb4ed7901f35995cb98e7d2a0f9e9a", "url": "https://github.com/artipie/artipie/commit/f7ab0497bacb4ed7901f35995cb98e7d2a0f9e9a", "message": "(#120) - Fix the assertion message as per REV request", "committedDate": "2020-05-27T11:37:02Z", "type": "commit"}, {"oid": "ca50da3820a56bbb64803e695f6247d21f8f9896", "url": "https://github.com/artipie/artipie/commit/ca50da3820a56bbb64803e695f6247d21f8f9896", "message": "(#120) - Use InMemoryStorage in Settings.Fake as per ARC request", "committedDate": "2020-05-27T11:45:06Z", "type": "commit"}, {"oid": "ca50da3820a56bbb64803e695f6247d21f8f9896", "url": "https://github.com/artipie/artipie/commit/ca50da3820a56bbb64803e695f6247d21f8f9896", "message": "(#120) - Use InMemoryStorage in Settings.Fake as per ARC request", "committedDate": "2020-05-27T11:45:06Z", "type": "forcePushed"}]}