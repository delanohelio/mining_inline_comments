{"pr_number": 30, "pr_title": "Vertx server for artipie", "pr_createdAt": "2020-02-18T10:02:03Z", "pr_url": "https://github.com/artipie/artipie/pull/30", "timeline": [{"oid": "b430f906f12a995c778c9e117d614338b9688beb", "url": "https://github.com/artipie/artipie/commit/b430f906f12a995c778c9e117d614338b9688beb", "message": "#12 - vertx server for artipie", "committedDate": "2020-02-18T09:57:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxOTc1Mw==", "url": "https://github.com/artipie/artipie/pull/30#discussion_r381919753", "bodyText": "Can we avoid properties and use args?", "author": "Sammers21", "createdAt": "2020-02-20T10:43:28Z", "path": "src/main/java/com/artipie/VertxMain.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.artipie;\n+\n+import com.artipie.asto.fs.FileStorage;\n+import com.artipie.http.Slice;\n+import com.artipie.vertx.VertxSliceServer;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Path;\n+\n+/**\n+ * Vertx server entry point.\n+ * @since 1.0\n+ */\n+public final class VertxMain implements Runnable {\n+\n+    /**\n+     * Slice to serve.\n+     */\n+    private final Slice slice;\n+\n+    /**\n+     * Server port.\n+     */\n+    private final int port;\n+\n+    /**\n+     * Ctor.\n+     * @param slice To server\n+     * @param port HTTP port\n+     */\n+    private VertxMain(final Slice slice, final int port) {\n+        this.slice = slice;\n+        this.port = port;\n+    }\n+\n+    @Override\n+    public void run() {\n+        new VertxSliceServer(this.slice, this.port).start();\n+    }\n+\n+    /**\n+     * Entry point.\n+     * @param args CLI args\n+     */\n+    public static void main(final String... args) {\n+        final String storage = System.getProperty(\"artipie.storage\");", "originalCommit": "b430f906f12a995c778c9e117d614338b9688beb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzMzk3MQ==", "url": "https://github.com/artipie/artipie/pull/30#discussion_r382433971", "bodyText": "@Sammers21 you are right, added todo for CLI options", "author": "g4s8", "createdAt": "2020-02-21T07:35:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxOTc1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "8a12fba8ef8e6564f29055960d474f136515d71e", "chunk": "diff --git a/src/main/java/com/artipie/VertxMain.java b/src/main/java/com/artipie/VertxMain.java\nindex 238f888..000f54a 100644\n--- a/src/main/java/com/artipie/VertxMain.java\n+++ b/src/main/java/com/artipie/VertxMain.java\n\n@@ -24,15 +24,20 @@\n \n package com.artipie;\n \n-import com.artipie.asto.fs.FileStorage;\n import com.artipie.http.Slice;\n import com.artipie.vertx.VertxSliceServer;\n import com.jcabi.log.Logger;\n+import java.io.IOException;\n+import java.nio.charset.Charset;\n+import java.nio.file.Files;\n import java.nio.file.Path;\n \n /**\n  * Vertx server entry point.\n  * @since 1.0\n+ * @todo #12:30min Parse command line options instead of system properties.\n+ *  We need to pass two mandatory options: server port and Artipie configuration\n+ *  storage URI (to local filesystem or cloud storage).\n  */\n public final class VertxMain implements Runnable {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMDM4MQ==", "url": "https://github.com/artipie/artipie/pull/30#discussion_r381920381", "bodyText": "No, don't do this. Just start VertxSliceServer and that is it.", "author": "Sammers21", "createdAt": "2020-02-20T10:44:39Z", "path": "src/main/java/com/artipie/VertxMain.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.artipie;\n+\n+import com.artipie.asto.fs.FileStorage;\n+import com.artipie.http.Slice;\n+import com.artipie.vertx.VertxSliceServer;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Path;\n+\n+/**\n+ * Vertx server entry point.\n+ * @since 1.0\n+ */\n+public final class VertxMain implements Runnable {\n+\n+    /**\n+     * Slice to serve.\n+     */\n+    private final Slice slice;\n+\n+    /**\n+     * Server port.\n+     */\n+    private final int port;\n+\n+    /**\n+     * Ctor.\n+     * @param slice To server\n+     * @param port HTTP port\n+     */\n+    private VertxMain(final Slice slice, final int port) {\n+        this.slice = slice;\n+        this.port = port;\n+    }\n+\n+    @Override\n+    public void run() {\n+        new VertxSliceServer(this.slice, this.port).start();\n+    }\n+\n+    /**\n+     * Entry point.\n+     * @param args CLI args\n+     */\n+    public static void main(final String... args) {\n+        final String storage = System.getProperty(\"artipie.storage\");\n+        final int port = Integer.getInteger(\"artipie.port\");\n+        final Thread thread = new Thread(\n+            new VertxMain(\n+                new Pie(new FileStorage(Path.of(storage))),\n+                port\n+            )\n+        );\n+        thread.setName(VertxMain.class.getSimpleName());\n+        thread.checkAccess();\n+        thread.setPriority(Thread.MAX_PRIORITY);\n+        thread.start();\n+        try {\n+            thread.join();", "originalCommit": "b430f906f12a995c778c9e117d614338b9688beb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzNDEwMA==", "url": "https://github.com/artipie/artipie/pull/30#discussion_r382434100", "bodyText": "@Sammers21 fixed", "author": "g4s8", "createdAt": "2020-02-21T07:35:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMDM4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "8a12fba8ef8e6564f29055960d474f136515d71e", "chunk": "diff --git a/src/main/java/com/artipie/VertxMain.java b/src/main/java/com/artipie/VertxMain.java\nindex 238f888..000f54a 100644\n--- a/src/main/java/com/artipie/VertxMain.java\n+++ b/src/main/java/com/artipie/VertxMain.java\n\n@@ -24,15 +24,20 @@\n \n package com.artipie;\n \n-import com.artipie.asto.fs.FileStorage;\n import com.artipie.http.Slice;\n import com.artipie.vertx.VertxSliceServer;\n import com.jcabi.log.Logger;\n+import java.io.IOException;\n+import java.nio.charset.Charset;\n+import java.nio.file.Files;\n import java.nio.file.Path;\n \n /**\n  * Vertx server entry point.\n  * @since 1.0\n+ * @todo #12:30min Parse command line options instead of system properties.\n+ *  We need to pass two mandatory options: server port and Artipie configuration\n+ *  storage URI (to local filesystem or cloud storage).\n  */\n public final class VertxMain implements Runnable {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMDkyMw==", "url": "https://github.com/artipie/artipie/pull/30#discussion_r381920923", "bodyText": "Can you just call it Main?", "author": "Sammers21", "createdAt": "2020-02-20T10:45:45Z", "path": "src/main/java/com/artipie/VertxMain.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.artipie;\n+\n+import com.artipie.asto.fs.FileStorage;\n+import com.artipie.http.Slice;\n+import com.artipie.vertx.VertxSliceServer;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Path;\n+\n+/**\n+ * Vertx server entry point.\n+ * @since 1.0\n+ */\n+public final class VertxMain implements Runnable {", "originalCommit": "b430f906f12a995c778c9e117d614338b9688beb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzNDM2MQ==", "url": "https://github.com/artipie/artipie/pull/30#discussion_r382434361", "bodyText": "@Sammers21 no, it's one of possible implementation, I'd prefer to use implementation name as part of class name", "author": "g4s8", "createdAt": "2020-02-21T07:36:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMDkyMw=="}], "type": "inlineReview", "revised_code": {"commit": "8a12fba8ef8e6564f29055960d474f136515d71e", "chunk": "diff --git a/src/main/java/com/artipie/VertxMain.java b/src/main/java/com/artipie/VertxMain.java\nindex 238f888..000f54a 100644\n--- a/src/main/java/com/artipie/VertxMain.java\n+++ b/src/main/java/com/artipie/VertxMain.java\n\n@@ -24,15 +24,20 @@\n \n package com.artipie;\n \n-import com.artipie.asto.fs.FileStorage;\n import com.artipie.http.Slice;\n import com.artipie.vertx.VertxSliceServer;\n import com.jcabi.log.Logger;\n+import java.io.IOException;\n+import java.nio.charset.Charset;\n+import java.nio.file.Files;\n import java.nio.file.Path;\n \n /**\n  * Vertx server entry point.\n  * @since 1.0\n+ * @todo #12:30min Parse command line options instead of system properties.\n+ *  We need to pass two mandatory options: server port and Artipie configuration\n+ *  storage URI (to local filesystem or cloud storage).\n  */\n public final class VertxMain implements Runnable {\n \n"}}, {"oid": "8a12fba8ef8e6564f29055960d474f136515d71e", "url": "https://github.com/artipie/artipie/commit/8a12fba8ef8e6564f29055960d474f136515d71e", "message": "#12 - merged master and review fixes", "committedDate": "2020-02-21T07:31:45Z", "type": "commit"}]}