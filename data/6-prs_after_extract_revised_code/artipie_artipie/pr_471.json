{"pr_number": 471, "pr_title": "#465 - fix faulty test", "pr_createdAt": "2020-08-20T10:06:16Z", "pr_url": "https://github.com/artipie/artipie/pull/471", "timeline": [{"oid": "2a608e4206df16edef8236037a130357c6d2fabd", "url": "https://github.com/artipie/artipie/commit/2a608e4206df16edef8236037a130357c6d2fabd", "message": "#465 - fix faulty test", "committedDate": "2020-08-20T09:49:46Z", "type": "commit"}, {"oid": "624362ba042dfbce7c40a9f52d575a1d35703c54", "url": "https://github.com/artipie/artipie/commit/624362ba042dfbce7c40a9f52d575a1d35703c54", "message": "Merge remote-tracking branch 'upstream/master' into 465-fix-faulty-test", "committedDate": "2020-08-20T09:50:11Z", "type": "commit"}, {"oid": "f2ca20d69f2c9f87e054897b4351171f230edb6e", "url": "https://github.com/artipie/artipie/commit/f2ca20d69f2c9f87e054897b4351171f230edb6e", "message": "#465 - remove extra file", "committedDate": "2020-08-20T10:07:39Z", "type": "commit"}, {"oid": "a61dc24073534db452aa054eaef24b15f848fb87", "url": "https://github.com/artipie/artipie/commit/a61dc24073534db452aa054eaef24b15f848fb87", "message": "#465 - fix qulice", "committedDate": "2020-08-20T10:10:43Z", "type": "commit"}, {"oid": "b321939ac7a295d1a859513f9909134f94276e46", "url": "https://github.com/artipie/artipie/commit/b321939ac7a295d1a859513f9909134f94276e46", "message": "Merge branch '465-fix-faulty-test' of https://github.com/genryxy/artipie into 465-fix-faulty-test", "committedDate": "2020-08-20T10:11:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg4ODU0MA==", "url": "https://github.com/artipie/artipie/pull/471#discussion_r473888540", "bodyText": "@genryxy that's a smart fix, but in Artipie project we are trying to avoid using null values.\nCould you please implement Storage interface with all methods throwing exception? It's going to be more verbose, but will make intent more obvious. Using shortcuts is what brought us the problem in the first place.", "author": "olegmoz", "createdAt": "2020-08-20T11:05:43Z", "path": "src/test/java/com/artipie/http/HealthSliceTest.java", "diffHunk": "@@ -66,7 +64,7 @@ void returnsOkForValidStorage() {\n     @Test\n     void returnsBadRequestForBrokenStorage() {\n         MatcherAssert.assertThat(\n-            new HealthSlice(new Settings.Fake(new FileStorage(Paths.get(\"/\")))),\n+            new HealthSlice(new Settings.Fake(new FileStorage(null))),", "originalCommit": "b321939ac7a295d1a859513f9909134f94276e46", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2a7585d61ac6c1399f19f08c6f5bf7514da3b68c", "chunk": "diff --git a/src/test/java/com/artipie/http/HealthSliceTest.java b/src/test/java/com/artipie/http/HealthSliceTest.java\nindex 3ef1686..07dce06 100644\n--- a/src/test/java/com/artipie/http/HealthSliceTest.java\n+++ b/src/test/java/com/artipie/http/HealthSliceTest.java\n\n@@ -64,7 +72,7 @@ final class HealthSliceTest {\n     @Test\n     void returnsBadRequestForBrokenStorage() {\n         MatcherAssert.assertThat(\n-            new HealthSlice(new Settings.Fake(new FileStorage(null))),\n+            new HealthSlice(new Settings.Fake(new FakeStorage())),\n             new SliceHasResponse(\n                 Matchers.allOf(\n                     new RsHasStatus(RsStatus.UNAVAILABLE),\n"}}, {"oid": "2a7585d61ac6c1399f19f08c6f5bf7514da3b68c", "url": "https://github.com/artipie/artipie/commit/2a7585d61ac6c1399f19f08c6f5bf7514da3b68c", "message": "#465 - add FakeStorage implementation", "committedDate": "2020-08-20T11:18:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg5ODkxNw==", "url": "https://github.com/artipie/artipie/pull/471#discussion_r473898917", "bodyText": "@genryxy handling UncheckedIOException here is wrong. It covers only one special case, the FakeStorage you have introduced in this PR. You should catch Exception here, handling just IOException here was wrong.", "author": "olegmoz", "createdAt": "2020-08-20T11:26:37Z", "path": "src/main/java/com/artipie/http/HealthSlice.java", "diffHunk": "@@ -93,7 +94,7 @@ public Response response(final String line,\n                 new Key.From(\".system\", \"test\"),\n                 new Content.From(\"OK\".getBytes(StandardCharsets.US_ASCII))\n             ).thenApply(none -> true).exceptionally(ignore -> false);\n-        } catch (final IOException ignore) {\n+        } catch (final IOException | UncheckedIOException ignore) {", "originalCommit": "2a7585d61ac6c1399f19f08c6f5bf7514da3b68c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "75656f623dabd6f6ed8cb3526f9503a9a0af2cf8", "chunk": "diff --git a/src/main/java/com/artipie/http/HealthSlice.java b/src/main/java/com/artipie/http/HealthSlice.java\nindex 02e108a..377cc72 100644\n--- a/src/main/java/com/artipie/http/HealthSlice.java\n+++ b/src/main/java/com/artipie/http/HealthSlice.java\n\n@@ -94,7 +93,8 @@ public final class HealthSlice implements Slice {\n                 new Key.From(\".system\", \"test\"),\n                 new Content.From(\"OK\".getBytes(StandardCharsets.US_ASCII))\n             ).thenApply(none -> true).exceptionally(ignore -> false);\n-        } catch (final IOException | UncheckedIOException ignore) {\n+            // @checkstyle IllegalCatchCheck (1 line)\n+        } catch (final Exception ignore) {\n             return CompletableFuture.completedFuture(false);\n         }\n     }\n"}}, {"oid": "75656f623dabd6f6ed8cb3526f9503a9a0af2cf8", "url": "https://github.com/artipie/artipie/commit/75656f623dabd6f6ed8cb3526f9503a9a0af2cf8", "message": "#465 - Exception catch", "committedDate": "2020-08-20T11:37:29Z", "type": "commit"}, {"oid": "2b03696b8687704e9b90a649432b201fdaffabbf", "url": "https://github.com/artipie/artipie/commit/2b03696b8687704e9b90a649432b201fdaffabbf", "message": "Merge branch 'master' into 465-fix-faulty-test", "committedDate": "2020-08-20T11:38:08Z", "type": "commit"}]}