{"pr_number": 386, "pr_title": "#338 - Added unit tests for DockerProxy", "pr_createdAt": "2020-07-23T10:08:04Z", "pr_url": "https://github.com/artipie/artipie/pull/386", "timeline": [{"oid": "88f58192497e492d073da47949ff3364d1509806", "url": "https://github.com/artipie/artipie/commit/88f58192497e492d073da47949ff3364d1509806", "message": "#338 - Added unit tests for DockerProxy", "committedDate": "2020-07-24T08:05:33Z", "type": "forcePushed"}, {"oid": "efef0bfb7dadd0aca044afb64bb37695736ec458", "url": "https://github.com/artipie/artipie/commit/efef0bfb7dadd0aca044afb64bb37695736ec458", "message": "#338 - Added unit tests for DockerProxy", "committedDate": "2020-07-24T08:39:48Z", "type": "forcePushed"}, {"oid": "efef0bfb7dadd0aca044afb64bb37695736ec458", "url": "https://github.com/artipie/artipie/commit/efef0bfb7dadd0aca044afb64bb37695736ec458", "message": "#338 - Added unit tests for DockerProxy", "committedDate": "2020-07-24T08:39:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0NjQwNQ==", "url": "https://github.com/artipie/artipie/pull/386#discussion_r459946405", "bodyText": "@olegmoz I'd suggest to unify this test: either use MethodSource in both test methods or nowhere", "author": "olenagerasimova", "createdAt": "2020-07-24T09:25:37Z", "path": "src/test/java/com/artipie/docker/DockerProxyTest.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.docker;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.artipie.RepoConfig;\n+import com.artipie.asto.Key;\n+import com.artipie.http.Headers;\n+import com.artipie.http.Slice;\n+import com.artipie.http.hm.RsHasStatus;\n+import com.artipie.http.rq.RequestLine;\n+import com.artipie.http.rq.RqMethod;\n+import com.artipie.http.rs.RsStatus;\n+import io.reactivex.Flowable;\n+import java.io.IOException;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.stream.Stream;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.hamcrest.MatcherAssert;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+/**\n+ * Tests for {@link DockerProxy}.\n+ *\n+ * @since 0.9\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+class DockerProxyTest {\n+\n+    @Test\n+    void shouldBuildFromConfig() throws Exception {\n+        final Slice slice = dockerProxy(\n+            String.join(\n+                \"\\n\",\n+                \"repo:\",\n+                \"  type: docker-proxy\",\n+                \"  remotes:\",\n+                \"    - url: registry-1.docker.io\",\n+                \"      username: admin\",\n+                \"      password: qwerty\",\n+                \"      cache:\",\n+                \"        storage:\",\n+                \"          type: fs\",\n+                \"          path: /var/artipie/data/cache\",\n+                \"    - url: another-registry.org:54321\",\n+                \"    - url: mcr.microsoft.com\",\n+                \"      cache:\",\n+                \"        storage: my-storage\",\n+                \"  storage:\",\n+                \"    type: fs\",\n+                \"    path: /var/artipie/data/local\"\n+            )\n+        );\n+        MatcherAssert.assertThat(\n+            slice.response(\n+                new RequestLine(RqMethod.GET, \"/v2/\").toString(),\n+                Headers.EMPTY,\n+                Flowable.empty()\n+            ),\n+            new RsHasStatus(RsStatus.OK)\n+        );\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"badConfigs\")", "originalCommit": "efef0bfb7dadd0aca044afb64bb37695736ec458", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxODcxNg==", "url": "https://github.com/artipie/artipie/pull/386#discussion_r460718716", "bodyText": "@olenagerasimova thanks, updated for uniformity", "author": "olegmoz", "createdAt": "2020-07-27T08:12:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0NjQwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "38d3f9a7008229690189755d3c642e09e14a13db", "chunk": "diff --git a/src/test/java/com/artipie/docker/DockerProxyTest.java b/src/test/java/com/artipie/docker/DockerProxyTest.java\nindex 4061a36..d2a3e35 100644\n--- a/src/test/java/com/artipie/docker/DockerProxyTest.java\n+++ b/src/test/java/com/artipie/docker/DockerProxyTest.java\n\n@@ -28,18 +28,19 @@ import com.artipie.RepoConfig;\n import com.artipie.asto.Key;\n import com.artipie.http.Headers;\n import com.artipie.http.Slice;\n+import com.artipie.http.auth.Permissions;\n import com.artipie.http.hm.RsHasStatus;\n import com.artipie.http.rq.RequestLine;\n import com.artipie.http.rq.RqMethod;\n import com.artipie.http.rs.RsStatus;\n import io.reactivex.Flowable;\n import java.io.IOException;\n+import java.util.Optional;\n import java.util.concurrent.CompletableFuture;\n import java.util.stream.Stream;\n import org.eclipse.jetty.client.HttpClient;\n import org.hamcrest.MatcherAssert;\n import org.junit.jupiter.api.Assertions;\n-import org.junit.jupiter.api.Test;\n import org.junit.jupiter.params.ParameterizedTest;\n import org.junit.jupiter.params.provider.MethodSource;\n \n"}}, {"oid": "c68da31317c9cdc64b4d52bc894055a034a88992", "url": "https://github.com/artipie/artipie/commit/c68da31317c9cdc64b4d52bc894055a034a88992", "message": "Merge branch 'master' into 338-proxy-docker-test", "committedDate": "2020-07-27T08:08:37Z", "type": "commit"}, {"oid": "38d3f9a7008229690189755d3c642e09e14a13db", "url": "https://github.com/artipie/artipie/commit/38d3f9a7008229690189755d3c642e09e14a13db", "message": "#338 - Changes by review and merge fix", "committedDate": "2020-07-27T10:28:50Z", "type": "forcePushed"}, {"oid": "38d3f9a7008229690189755d3c642e09e14a13db", "url": "https://github.com/artipie/artipie/commit/38d3f9a7008229690189755d3c642e09e14a13db", "message": "#338 - Changes by review and merge fix", "committedDate": "2020-07-27T10:28:50Z", "type": "commit"}, {"oid": "2c8a0b4295707684f42e40c93d6618f37e0f8474", "url": "https://github.com/artipie/artipie/commit/2c8a0b4295707684f42e40c93d6618f37e0f8474", "message": "Merge branch 'master' into 338-proxy-docker-test", "committedDate": "2020-07-27T10:27:41Z", "type": "commit"}, {"oid": "3fc87d2b5517adc70c6d6d5cd5eddaa34d037e8a", "url": "https://github.com/artipie/artipie/commit/3fc87d2b5517adc70c6d6d5cd5eddaa34d037e8a", "message": "Merge branch 'master' into 338-proxy-docker-test", "committedDate": "2020-07-27T10:45:10Z", "type": "commit"}]}