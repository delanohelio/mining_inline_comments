{"pr_number": 1784, "pr_title": "Task/native types cast", "pr_createdAt": "2020-01-02T15:12:33Z", "pr_url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784", "timeline": [{"oid": "fb10bf1c0dbdfb8d4241198db72e5809f051e714", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/fb10bf1c0dbdfb8d4241198db72e5809f051e714", "message": "add tests for native types", "committedDate": "2020-01-02T11:24:27Z", "type": "commit"}, {"oid": "4acd6f1a0d117bc3ff82513544eb6f0c840f2333", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/4acd6f1a0d117bc3ff82513544eb6f0c840f2333", "message": "add getValue function", "committedDate": "2020-01-02T11:24:35Z", "type": "commit"}, {"oid": "3598d528ffb1739e15e3e3c061e13ee359f5068e", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/3598d528ffb1739e15e3e3c061e13ee359f5068e", "message": "edited aggregate method and upperCase to boolean on agregate method", "committedDate": "2020-01-02T11:24:35Z", "type": "commit"}, {"oid": "87c615435de3edc4d4e8efa1d164cf07004c4d9b", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/87c615435de3edc4d4e8efa1d164cf07004c4d9b", "message": "edited aggregate method and uppercase to boolean on aggregate method", "committedDate": "2020-01-02T11:24:35Z", "type": "commit"}, {"oid": "98dd3dc29270219ed1790ec6b16afa6ea29ce964", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/98dd3dc29270219ed1790ec6b16afa6ea29ce964", "message": "add CNR entry", "committedDate": "2020-01-02T12:41:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNDAzMA==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363634030", "bodyText": "Although this functions is pretty simple, I think style is to include Javadoc (and \"closing } comment\") in every function (not fully sure, should be checked...).", "author": "fgalan", "createdAt": "2020-01-07T08:20:15Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/containers/NotifyContextRequest.java", "diffHunk": "@@ -352,7 +352,11 @@ public String getContextValue() {\n                 return  \"\" + value;\n             }  // if then else if\n         } // getContextValue\n-        \n+\n+        public JsonElement getValue() {", "originalCommit": "26dcb3433ac1fe41351a4645e68490c5076869d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcwNTA3MA==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363705070", "bodyText": "Fixed in 93df3b5", "author": "IvanHdzC", "createdAt": "2020-01-07T11:25:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNDAzMA=="}], "type": "inlineReview", "revised_code": {"commit": "e3c9212af03c1882ffd5951f7bcdbde590f1efdc", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/containers/NotifyContextRequest.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/containers/NotifyContextRequest.java\nindex c3639b0d..87462681 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/containers/NotifyContextRequest.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/containers/NotifyContextRequest.java\n\n@@ -353,6 +353,11 @@ public class NotifyContextRequest {\n             }  // if then else if\n         } // getContextValue\n \n+        /**\n+         * Gets value.\n+         *\n+         * @return the value on JsonElement Object.\n+         */\n         public JsonElement getValue() {\n             return value;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNDMyNQ==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363634325", "bodyText": "Not real changes in NGSIMySQLSinkTest.java file, just indent-fixing, right? (Just checking)", "author": "fgalan", "createdAt": "2020-01-07T08:21:10Z", "path": "cygnus-ngsi/src/test/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSinkTest.java", "diffHunk": "@@ -32,7 +32,7 @@\n  * @author frb\n  */\n public class NGSIMySQLSinkTest {\n-    ", "originalCommit": "26dcb3433ac1fe41351a4645e68490c5076869d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNTg5MA==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363635890", "bodyText": "Moreover, looking to original issue:\n\nThe scope for this issue only considers Postgres and Postgis, this because it's necessary to make some code cleanning for MySQL Sink before this task can be done on it. (issue #1783)\n\nSo, if at the end no tchange has been donde in the SQL Sink, I think that cleanining is not required at the end to progress this PR (and it would be done later in the context of issue #1783). Can you clarify, please?", "author": "fgalan", "createdAt": "2020-01-07T08:25:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNDMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY5OTEzMw==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363699133", "bodyText": "I actually modified NGSIMySQLSinkTest and NGSIMySQLSink but since changes were a bit complicated we (@manucarrace and me) decided that NGSIMySQLSink was going to have it's own issue since the code needed some cleaning before this issue can be solved.\nSo when I reset those commits for some reason when I forced pushed again git marked thos blank spaces as changes, maybe because for compress purposes git removes blank spaces.", "author": "IvanHdzC", "createdAt": "2020-01-07T11:08:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNDMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcwNDI1OQ==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363704259", "bodyText": "Ok, crystal clear :) NTC", "author": "fgalan", "createdAt": "2020-01-07T11:23:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNDMyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e3c9212af03c1882ffd5951f7bcdbde590f1efdc", "chunk": "diff --git a/cygnus-ngsi/src/test/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSinkTest.java b/cygnus-ngsi/src/test/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSinkTest.java\nindex fb0f9213..dd403f77 100644\n--- a/cygnus-ngsi/src/test/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSinkTest.java\n+++ b/cygnus-ngsi/src/test/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSinkTest.java\n\n@@ -18,15 +18,26 @@\n \n package com.telefonica.iot.cygnus.sinks;\n \n+import com.google.gson.JsonPrimitive;\n import com.telefonica.iot.cygnus.containers.NotifyContextRequest;\n import static com.telefonica.iot.cygnus.utils.CommonUtilsForTests.getTestTraceHead;\n+\n+import com.telefonica.iot.cygnus.errors.CygnusBadConfiguration;\n+import com.telefonica.iot.cygnus.interceptors.NGSIEvent;\n+import com.telefonica.iot.cygnus.utils.CommonConstants;\n+import com.telefonica.iot.cygnus.utils.NGSIConstants;\n import org.apache.flume.Context;\n import org.apache.log4j.Level;\n import org.apache.log4j.LogManager;\n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertTrue;\n import org.junit.Test;\n \n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n /**\n  *\n  * @author frb\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1MDgxNw==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363650817", "bodyText": "If no attribute value, for sure there is no attrMetadata. Please, correct.\nOn the other hand, we should deal with the problem of missing attributes in batch insertions. Missing attributes should be included as NULL", "author": "manucarrace", "createdAt": "2020-01-07T09:08:09Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java", "diffHunk": "@@ -549,16 +549,18 @@ public void aggregate(NGSIEvent cygnusEvent) {\n                 } else {\n                     // create part of the column with the current attribute (a.k.a. a column)\n                     if (attrNativeTypes) {\n-                        if (attrType.equals(\"Number\")) {\n-                            column += \",\" + attrValue + \",'\"  + attrMetadata + \"'\";\n-                        } else {\n-                            if (attrValue == null || attrValue.equals(\"\")) {\n-                                attrValue = \"NULL\";\n+                        if (contextAttribute.getValue().isJsonNull()) {\n+                            column += \",NULL,'\" + attrMetadata + \"'\";", "originalCommit": "26dcb3433ac1fe41351a4645e68490c5076869d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcwNTY3NA==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363705674", "bodyText": "Fixed in df6f4e4 and WIP respectively.", "author": "IvanHdzC", "createdAt": "2020-01-07T11:27:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1MDgxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcwNzEwMQ==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363707101", "bodyText": "On the other hand, we should deal with the problem of missing attributes in batch insertions. Missing attributes should be included as NULL\n\nThis only applies to column mode @manucarrace ?", "author": "IvanHdzC", "createdAt": "2020-01-07T11:31:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1MDgxNw=="}], "type": "inlineReview", "revised_code": {"commit": "e3c9212af03c1882ffd5951f7bcdbde590f1efdc", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\nindex 25632b53..932a4344 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\n\n@@ -550,9 +550,10 @@ public class NGSIPostgisSink extends NGSISink {\n                     // create part of the column with the current attribute (a.k.a. a column)\n                     if (attrNativeTypes) {\n                         if (contextAttribute.getValue().isJsonNull()) {\n-                            column += \",NULL,'\" + attrMetadata + \"'\";\n+                            column += \",NULL\";\n                         } else if (contextAttribute.getValue().isJsonPrimitive()) {\n                             if (contextAttribute.getValue().getAsJsonPrimitive().isBoolean()) {\n+                                //https://www.postgresql.org/docs/8.1/datatype-boolean.html TRUE&FALSE are natively conssidered as boolean on POSTGRESQL\n                                 column += \",\" + attrValue.toUpperCase() + \",'\"  + attrMetadata + \"'\";\n                             } else if (contextAttribute.getValue().getAsJsonPrimitive().isNumber()) {\n                                 column += \",\" + attrValue + \",'\"  + attrMetadata + \"'\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1MTM0NA==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363651344", "bodyText": "Please, add a small comment explaining why you change to uppercase.", "author": "manucarrace", "createdAt": "2020-01-07T09:09:30Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java", "diffHunk": "@@ -549,16 +549,18 @@ public void aggregate(NGSIEvent cygnusEvent) {\n                 } else {\n                     // create part of the column with the current attribute (a.k.a. a column)\n                     if (attrNativeTypes) {\n-                        if (attrType.equals(\"Number\")) {\n-                            column += \",\" + attrValue + \",'\"  + attrMetadata + \"'\";\n-                        } else {\n-                            if (attrValue == null || attrValue.equals(\"\")) {\n-                                attrValue = \"NULL\";\n+                        if (contextAttribute.getValue().isJsonNull()) {\n+                            column += \",NULL,'\" + attrMetadata + \"'\";\n+                        } else if (contextAttribute.getValue().isJsonPrimitive()) {\n+                            if (contextAttribute.getValue().getAsJsonPrimitive().isBoolean()) {\n+                                column += \",\" + attrValue.toUpperCase() + \",'\"  + attrMetadata + \"'\";", "originalCommit": "26dcb3433ac1fe41351a4645e68490c5076869d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzcwNTg3Mw==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363705873", "bodyText": "Fixed in 1f72cde", "author": "IvanHdzC", "createdAt": "2020-01-07T11:27:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1MTM0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI1MzY1NA==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r364253654", "bodyText": "The same change about usage isJsonNull() will apply to \n  \n    \n      fiware-cygnus/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\n    \n    \n         Line 436\n      in\n      c9cd1c4\n    \n    \n    \n    \n\n        \n          \n           if (attrValue == null || attrValue.equals(\"\")) { \n        \n    \n  \n\n ?", "author": "AlvaroVega", "createdAt": "2020-01-08T14:20:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1MTM0NA=="}], "type": "inlineReview", "revised_code": {"commit": "e3c9212af03c1882ffd5951f7bcdbde590f1efdc", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\nindex 25632b53..932a4344 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\n\n@@ -550,9 +550,10 @@ public class NGSIPostgisSink extends NGSISink {\n                     // create part of the column with the current attribute (a.k.a. a column)\n                     if (attrNativeTypes) {\n                         if (contextAttribute.getValue().isJsonNull()) {\n-                            column += \",NULL,'\" + attrMetadata + \"'\";\n+                            column += \",NULL\";\n                         } else if (contextAttribute.getValue().isJsonPrimitive()) {\n                             if (contextAttribute.getValue().getAsJsonPrimitive().isBoolean()) {\n+                                //https://www.postgresql.org/docs/8.1/datatype-boolean.html TRUE&FALSE are natively conssidered as boolean on POSTGRESQL\n                                 column += \",\" + attrValue.toUpperCase() + \",'\"  + attrMetadata + \"'\";\n                             } else if (contextAttribute.getValue().getAsJsonPrimitive().isNumber()) {\n                                 column += \",\" + attrValue + \",'\"  + attrMetadata + \"'\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1NDU3OQ==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r363654579", "bodyText": "One aditional remark. It should be nice to have an aditional flag in config like \"NullValuesForMissingAttributes\". This flag is needed to enable backward compatibility for those clients that used to insert \"\" for missing attributes in batches.", "author": "manucarrace", "createdAt": "2020-01-07T09:18:02Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java", "diffHunk": "@@ -507,18 +507,19 @@ public void aggregate(NGSIEvent cygnusEvent) {\n                 LOGGER.debug(\"[\" + getName() + \"] Processing context attribute (name=\" + attrName + \", type=\"\n                         + attrType + \")\");\n \n-                // create part of the column with the current attribute (a.k.a. a column)\n                 if (attrNativeTypes) {\n-                    if (attrType.equals(\"Number\")) {\n-                        column += \",\" + attrValue + \",'\"  + attrMetadata + \"'\";\n-                    } else {\n-                        if (attrValue == null || attrValue.equals(\"\")) {\n-                            attrValue = \"NULL\";\n+                    if (contextAttribute.getValue().isJsonNull()) {\n+                        column += \",NULL,'\" + attrMetadata + \"'\";", "originalCommit": "26dcb3433ac1fe41351a4645e68490c5076869d7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e3c9212af03c1882ffd5951f7bcdbde590f1efdc", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java\nindex a4eb03a8..23d4c81f 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java\n\n@@ -509,9 +509,10 @@ public class NGSIPostgreSQLSink extends NGSISink {\n \n                 if (attrNativeTypes) {\n                     if (contextAttribute.getValue().isJsonNull()) {\n-                        column += \",NULL,'\" + attrMetadata + \"'\";\n+                        column += \",NULL\";\n                     } else if (contextAttribute.getValue().isJsonPrimitive()) {\n                         if (contextAttribute.getValue().getAsJsonPrimitive().isBoolean()) {\n+                            //https://www.postgresql.org/docs/8.1/datatype-boolean.html TRUE&FALSE are natively conssidered as boolean on POSTGRESQL\n                             column += \",\" + attrValue.toUpperCase() + \",'\"  + attrMetadata + \"'\";\n                         } else if (contextAttribute.getValue().getAsJsonPrimitive().isNumber()) {\n                             column += \",\" + attrValue + \",'\"  + attrMetadata + \"'\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4OTM4Mw==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r364189383", "bodyText": "kafka.utils.Json never used ?", "author": "AlvaroVega", "createdAt": "2020-01-08T11:38:39Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java", "diffHunk": "@@ -23,6 +23,10 @@\n import java.util.Iterator;\n import java.util.LinkedHashMap;\n \n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonNull;\n+import com.google.gson.JsonPrimitive;\n+import kafka.utils.Json;", "originalCommit": "bac72afe7d484961dd96c124af44548ceced6f03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc4MjQ4OA==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r364782488", "bodyText": "Fixed in 690d51a", "author": "IvanHdzC", "createdAt": "2020-01-09T14:55:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4OTM4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "106b7abb5c6d2c0c25defaccaa2dd439bfb1fa29", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\nindex 151b7741..502cc9bb 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\n\n@@ -23,10 +23,6 @@ import java.util.Collections;\n import java.util.Iterator;\n import java.util.LinkedHashMap;\n \n-import com.google.gson.JsonElement;\n-import com.google.gson.JsonNull;\n-import com.google.gson.JsonPrimitive;\n-import kafka.utils.Json;\n import org.apache.flume.Context;\n \n import com.telefonica.iot.cygnus.backends.mysql.MySQLBackendImpl;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5NzU4MA==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r364197580", "bodyText": "Be carefull, this is row mode!!", "author": "manucarrace", "createdAt": "2020-01-08T12:01:40Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java", "diffHunk": "@@ -491,16 +500,16 @@ public void initialize(NGSIEvent event) throws CygnusBadConfiguration {\n         @Override\n         public void initialize(NGSIEvent cygnusEvent) throws CygnusBadConfiguration {\n             super.initialize(cygnusEvent);\n-            LinkedHashMap<String, ArrayList<String>> aggregation = getAggregation();\n-            aggregation.put(NGSIConstants.RECV_TIME_TS, new ArrayList<String>());\n-            aggregation.put(NGSIConstants.RECV_TIME, new ArrayList<String>());\n-            aggregation.put(NGSIConstants.FIWARE_SERVICE_PATH, new ArrayList<String>());\n-            aggregation.put(NGSIConstants.ENTITY_ID, new ArrayList<String>());\n-            aggregation.put(NGSIConstants.ENTITY_TYPE, new ArrayList<String>());\n-            aggregation.put(NGSIConstants.ATTR_NAME, new ArrayList<String>());\n-            aggregation.put(NGSIConstants.ATTR_TYPE, new ArrayList<String>());\n-            aggregation.put(NGSIConstants.ATTR_VALUE, new ArrayList<String>());\n-            aggregation.put(NGSIConstants.ATTR_MD, new ArrayList<String>());\n+            LinkedHashMap<String, ArrayList<JsonElement>> aggregation = getAggregation();", "originalCommit": "bac72afe7d484961dd96c124af44548ceced6f03", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "106b7abb5c6d2c0c25defaccaa2dd439bfb1fa29", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\nindex 151b7741..502cc9bb 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\n\n@@ -500,16 +491,16 @@ public class NGSIMySQLSink extends NGSISink {\n         @Override\n         public void initialize(NGSIEvent cygnusEvent) throws CygnusBadConfiguration {\n             super.initialize(cygnusEvent);\n-            LinkedHashMap<String, ArrayList<JsonElement>> aggregation = getAggregation();\n-            aggregation.put(NGSIConstants.RECV_TIME_TS, new ArrayList<JsonElement>());\n-            aggregation.put(NGSIConstants.RECV_TIME, new ArrayList<JsonElement>());\n-            aggregation.put(NGSIConstants.FIWARE_SERVICE_PATH, new ArrayList<JsonElement>());\n-            aggregation.put(NGSIConstants.ENTITY_ID, new ArrayList<JsonElement>());\n-            aggregation.put(NGSIConstants.ENTITY_TYPE, new ArrayList<JsonElement>());\n-            aggregation.put(NGSIConstants.ATTR_NAME, new ArrayList<JsonElement>());\n-            aggregation.put(NGSIConstants.ATTR_TYPE, new ArrayList<JsonElement>());\n-            aggregation.put(NGSIConstants.ATTR_VALUE, new ArrayList<JsonElement>());\n-            aggregation.put(NGSIConstants.ATTR_MD, new ArrayList<JsonElement>());\n+            LinkedHashMap<String, ArrayList<String>> aggregation = getAggregation();\n+            aggregation.put(NGSIConstants.RECV_TIME_TS, new ArrayList<String>());\n+            aggregation.put(NGSIConstants.RECV_TIME, new ArrayList<String>());\n+            aggregation.put(NGSIConstants.FIWARE_SERVICE_PATH, new ArrayList<String>());\n+            aggregation.put(NGSIConstants.ENTITY_ID, new ArrayList<String>());\n+            aggregation.put(NGSIConstants.ENTITY_TYPE, new ArrayList<String>());\n+            aggregation.put(NGSIConstants.ATTR_NAME, new ArrayList<String>());\n+            aggregation.put(NGSIConstants.ATTR_TYPE, new ArrayList<String>());\n+            aggregation.put(NGSIConstants.ATTR_VALUE, new ArrayList<String>());\n+            aggregation.put(NGSIConstants.ATTR_MD, new ArrayList<String>());\n         } // initialize\n         \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5NzcyNw==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r364197727", "bodyText": "Again, row mode", "author": "manucarrace", "createdAt": "2020-01-08T12:02:06Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java", "diffHunk": "@@ -528,22 +537,22 @@ public void aggregate(NGSIEvent event) {\n             for (ContextAttribute contextAttribute : contextAttributes) {\n                 String attrName = contextAttribute.getName();\n                 String attrType = contextAttribute.getType();\n-                String attrValue = contextAttribute.getContextValue(false);\n+                JsonElement attrValue = contextAttribute.getValue();\n                 String attrMetadata = contextAttribute.getContextMetadata();\n                 LOGGER.debug(\"[\" + getName() + \"] Processing context attribute (name=\" + attrName + \", type=\"\n                         + attrType + \")\");\n                 \n                 // aggregate the attribute information\n-                LinkedHashMap<String, ArrayList<String>> aggregation = getAggregation();\n-                aggregation.get(NGSIConstants.RECV_TIME_TS).add(Long.toString(recvTimeTs));\n-                aggregation.get(NGSIConstants.RECV_TIME).add(recvTime);\n-                aggregation.get(NGSIConstants.FIWARE_SERVICE_PATH).add(getServicePathForData());\n-                aggregation.get(NGSIConstants.ENTITY_ID).add(entityId);\n-                aggregation.get(NGSIConstants.ENTITY_TYPE).add(entityType);\n-                aggregation.get(NGSIConstants.ATTR_NAME).add(attrName);\n-                aggregation.get(NGSIConstants.ATTR_TYPE).add(attrType);\n+                LinkedHashMap<String, ArrayList<JsonElement>> aggregation = getAggregation();", "originalCommit": "bac72afe7d484961dd96c124af44548ceced6f03", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "106b7abb5c6d2c0c25defaccaa2dd439bfb1fa29", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\nindex 151b7741..502cc9bb 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\n\n@@ -537,22 +528,22 @@ public class NGSIMySQLSink extends NGSISink {\n             for (ContextAttribute contextAttribute : contextAttributes) {\n                 String attrName = contextAttribute.getName();\n                 String attrType = contextAttribute.getType();\n-                JsonElement attrValue = contextAttribute.getValue();\n+                String attrValue = contextAttribute.getContextValue(false);\n                 String attrMetadata = contextAttribute.getContextMetadata();\n                 LOGGER.debug(\"[\" + getName() + \"] Processing context attribute (name=\" + attrName + \", type=\"\n                         + attrType + \")\");\n                 \n                 // aggregate the attribute information\n-                LinkedHashMap<String, ArrayList<JsonElement>> aggregation = getAggregation();\n-                aggregation.get(NGSIConstants.RECV_TIME_TS).add(new JsonPrimitive(Long.toString(recvTimeTs)));\n-                aggregation.get(NGSIConstants.RECV_TIME).add(new JsonPrimitive(recvTime));\n-                aggregation.get(NGSIConstants.FIWARE_SERVICE_PATH).add(new JsonPrimitive(getServicePathForData()));\n-                aggregation.get(NGSIConstants.ENTITY_ID).add(new JsonPrimitive(entityId));\n-                aggregation.get(NGSIConstants.ENTITY_TYPE).add(new JsonPrimitive(entityType));\n-                aggregation.get(NGSIConstants.ATTR_NAME).add(new JsonPrimitive(attrName));\n-                aggregation.get(NGSIConstants.ATTR_TYPE).add(new JsonPrimitive(attrType));\n+                LinkedHashMap<String, ArrayList<String>> aggregation = getAggregation();\n+                aggregation.get(NGSIConstants.RECV_TIME_TS).add(Long.toString(recvTimeTs));\n+                aggregation.get(NGSIConstants.RECV_TIME).add(recvTime);\n+                aggregation.get(NGSIConstants.FIWARE_SERVICE_PATH).add(getServicePathForData());\n+                aggregation.get(NGSIConstants.ENTITY_ID).add(entityId);\n+                aggregation.get(NGSIConstants.ENTITY_TYPE).add(entityType);\n+                aggregation.get(NGSIConstants.ATTR_NAME).add(attrName);\n+                aggregation.get(NGSIConstants.ATTR_TYPE).add(attrType);\n                 aggregation.get(NGSIConstants.ATTR_VALUE).add(attrValue);\n-                aggregation.get(NGSIConstants.ATTR_MD).add(new JsonPrimitive(attrMetadata));\n+                aggregation.get(NGSIConstants.ATTR_MD).add(attrMetadata);\n             } // for\n         } // aggregate\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE5ODg2OQ==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r364198869", "bodyText": "Needed to convet to uppercase?", "author": "manucarrace", "createdAt": "2020-01-08T12:05:46Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java", "diffHunk": "@@ -406,25 +410,32 @@ public String getValuesForInsert() {\n             \n                 while (it.hasNext()) {\n                     String entry = (String) it.next();\n-                    ArrayList<String> values = (ArrayList<String>) aggregation.get(entry);\n-                    String value = values.get(i);\n+                    ArrayList<JsonElement> values = (ArrayList<JsonElement>) aggregation.get(entry);\n+                    JsonElement value = values.get(i);\n+                    String stringValue = null;\n                     if (attrNativeTypes) {\n                         LOGGER.debug(\"[\" + getName() + \"] aggregation entry = \"  + entry );\n-                        if (value == null || value.equals(\"\")) {\n-                            value = \"NULL\";\n+                        if (value.isJsonNull()) {\n+                            stringValue = \"NULL\";\n+                        } else if (value.isJsonPrimitive()) {\n+                            if (value.getAsJsonPrimitive().isBoolean()) {\n+                                stringValue = value.getAsString();", "originalCommit": "bac72afe7d484961dd96c124af44548ceced6f03", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e3c9212af03c1882ffd5951f7bcdbde590f1efdc", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\nindex 151b7741..a0629490 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIMySQLSink.java\n\n@@ -419,7 +419,7 @@ public class NGSIMySQLSink extends NGSISink {\n                             stringValue = \"NULL\";\n                         } else if (value.isJsonPrimitive()) {\n                             if (value.getAsJsonPrimitive().isBoolean()) {\n-                                stringValue = value.getAsString();\n+                                stringValue = value.getAsString().toUpperCase();\n                             } else if (value.getAsJsonPrimitive().isNumber()) {\n                                 stringValue = value.getAsString();\n                             }else {\n"}}, {"oid": "e3c9212af03c1882ffd5951f7bcdbde590f1efdc", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/e3c9212af03c1882ffd5951f7bcdbde590f1efdc", "message": "edited JsonElement hlanding of values", "committedDate": "2020-01-08T12:11:58Z", "type": "forcePushed"}, {"oid": "c9cd1c4c51d3a81b04790be099bb1fc5b42ed054", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/c9cd1c4c51d3a81b04790be099bb1fc5b42ed054", "message": "edited JsonElement hlanding of values", "committedDate": "2020-01-08T12:18:58Z", "type": "forcePushed"}, {"oid": "106b7abb5c6d2c0c25defaccaa2dd439bfb1fa29", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/106b7abb5c6d2c0c25defaccaa2dd439bfb1fa29", "message": "add README entry", "committedDate": "2020-01-09T10:58:18Z", "type": "commit"}, {"oid": "c36240a64c9e2b6d171064589b3518dcf9178a4f", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/c36240a64c9e2b6d171064589b3518dcf9178a4f", "message": "Update CHANGES_NEXT_RELEASE\n\nCo-Authored-By: Ferm\u00edn Gal\u00e1n M\u00e1rquez <fgalan@users.noreply.github.com>", "committedDate": "2020-01-09T10:59:13Z", "type": "commit"}, {"oid": "aee35121de92c33e6f48edb7ea59e71a8736ed5d", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/aee35121de92c33e6f48edb7ea59e71a8736ed5d", "message": "add java doc", "committedDate": "2020-01-09T10:59:13Z", "type": "commit"}, {"oid": "2fe7afaedb8139d79a814f46e57d830826fddd2b", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/2fe7afaedb8139d79a814f46e57d830826fddd2b", "message": "comments added", "committedDate": "2020-01-09T10:59:13Z", "type": "commit"}, {"oid": "2cd84bdc413097293edfb496bf47a5f28c48e7bf", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/2cd84bdc413097293edfb496bf47a5f28c48e7bf", "message": "remove metadata when null value", "committedDate": "2020-01-09T10:59:13Z", "type": "commit"}, {"oid": "426103bf2dbfce873d85d6116cc21588b61f0f90", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/426103bf2dbfce873d85d6116cc21588b61f0f90", "message": "add tests for MYSQL sink", "committedDate": "2020-01-09T10:59:13Z", "type": "commit"}, {"oid": "a79f96e3c8c14b278edae5c051abc533cb1d263d", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/a79f96e3c8c14b278edae5c051abc533cb1d263d", "message": "edited JsonElement hlanding of values", "committedDate": "2020-01-09T10:59:13Z", "type": "commit"}, {"oid": "d1aae7907f701e4c3863d346c341a5125b56f6c9", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/d1aae7907f701e4c3863d346c341a5125b56f6c9", "message": "edited aggregation process", "committedDate": "2020-01-09T10:59:13Z", "type": "commit"}, {"oid": "44a3ae5ccaefd8e94f0f9f890e4670ac6cc158f8", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/44a3ae5ccaefd8e94f0f9f890e4670ac6cc158f8", "message": "edited aggregation process for postgresql", "committedDate": "2020-01-09T10:59:13Z", "type": "commit"}, {"oid": "690d51a7a072ae9dc4b13b1f1124a9d27dbed382", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/690d51a7a072ae9dc4b13b1f1124a9d27dbed382", "message": "removed unused dependency", "committedDate": "2020-01-09T10:59:13Z", "type": "commit"}, {"oid": "752ea7a77eeeef54eb8e275eddc150d6592c61a0", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/752ea7a77eeeef54eb8e275eddc150d6592c61a0", "message": "process geometry", "committedDate": "2020-01-09T10:59:13Z", "type": "commit"}, {"oid": "752ea7a77eeeef54eb8e275eddc150d6592c61a0", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/752ea7a77eeeef54eb8e275eddc150d6592c61a0", "message": "process geometry", "committedDate": "2020-01-09T10:59:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4MjczNQ==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r364682735", "bodyText": "aggregted -> aggregated", "author": "AlvaroVega", "createdAt": "2020-01-09T11:11:22Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java", "diffHunk": "@@ -283,8 +290,8 @@ public void expirateRecords(long expirationTime) throws CygnusExpiratingError {\n      */\n     private abstract class PostgreSQLAggregator {\n \n-        // string containing the data fieldValues\n-        protected String aggregation;\n+        // object containing the aggregted data", "originalCommit": "752ea7a77eeeef54eb8e275eddc150d6592c61a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc4NDUzNA==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r364784534", "bodyText": "Fixed in 3eb9f3c", "author": "IvanHdzC", "createdAt": "2020-01-09T14:58:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4MjczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "3eb9f3c58274e03d78f55acc4b8ffa54e4b30e7c", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java\nindex 3376dc20..d42e8319 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgreSQLSink.java\n\n@@ -290,7 +290,7 @@ public class NGSIPostgreSQLSink extends NGSISink {\n      */\n     private abstract class PostgreSQLAggregator {\n \n-        // object containing the aggregted data\n+        // object containing the aggregated data\n         protected LinkedHashMap<String, ArrayList<JsonElement>> aggregation;\n \n         protected String service;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4NzkxNg==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r364687916", "bodyText": "Great use var names like MySQLSink!", "author": "AlvaroVega", "createdAt": "2020-01-09T11:25:05Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java", "diffHunk": "@@ -585,27 +622,27 @@ private PostgisAggregator getAggregator(boolean rowAttrPersistence) {\n     } // getAggregator\n \n     private void persistAggregation(PostgisAggregator aggregator) throws CygnusPersistenceError, CygnusRuntimeError, CygnusBadContextData {\n-        String typedFieldNames = aggregator.getTypedFieldNames();\n-        String fieldNames = aggregator.getFieldNames();\n-        String fieldValues = aggregator.getAggregation();\n+        String fieldsForCreate = aggregator.getFieldsForCreate();\n+        String fieldsForInsert = aggregator.getFieldsForInsert();\n+        String valuesForInsert = aggregator.getValuesForInsert();", "originalCommit": "752ea7a77eeeef54eb8e275eddc150d6592c61a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc4NTAxMQ==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r364785011", "bodyText": "\ud83d\udc4d", "author": "IvanHdzC", "createdAt": "2020-01-09T14:59:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4NzkxNg=="}], "type": "inlineReview", "revised_code": {"commit": "49380b02ae4a30112f75e84e11217828f2beae56", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\nindex fa234595..3bae5714 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\n\n@@ -632,7 +635,6 @@ public class NGSIPostgisSink extends NGSISink {\n                 + schemaName + \"), Table (\" + tableName + \"), Fields (\" + fieldsForInsert + \"), Values (\"\n                 + valuesForInsert + \")\");\n \n-        try {\n             if (aggregator instanceof RowAggregator) {\n                 persistenceBackend.createSchema(schemaName);\n                 persistenceBackend.createTable(schemaName, tableName, fieldsForCreate);\n"}}, {"oid": "3eb9f3c58274e03d78f55acc4b8ffa54e4b30e7c", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/3eb9f3c58274e03d78f55acc4b8ffa54e4b30e7c", "message": "typo fix", "committedDate": "2020-01-09T14:58:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDgyODU4NA==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r364828584", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    } // getValue\n          \n      \n    \n    \n  \n\n(Looking to other cases, it seems this is done in every function...)", "author": "fgalan", "createdAt": "2020-01-09T16:13:41Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/containers/NotifyContextRequest.java", "diffHunk": "@@ -352,7 +352,16 @@ public String getContextValue() {\n                 return  \"\" + value;\n             }  // if then else if\n         } // getContextValue\n-        \n+\n+        /**\n+         * Gets value.\n+         *\n+         * @return the value on JsonElement Object.\n+         */\n+        public JsonElement getValue() {\n+            return value;\n+        }", "originalCommit": "3eb9f3c58274e03d78f55acc4b8ffa54e4b30e7c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4f71c1f72e54df9029191f91276e12102eb2d64", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/containers/NotifyContextRequest.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/containers/NotifyContextRequest.java\nindex 87462681..829f2f6b 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/containers/NotifyContextRequest.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/containers/NotifyContextRequest.java\n\n@@ -360,7 +360,7 @@ public class NotifyContextRequest {\n          */\n         public JsonElement getValue() {\n             return value;\n-        }\n+        } // getValue\n \n         /**\n          * Gets the context metadata.\n"}}, {"oid": "c4f71c1f72e54df9029191f91276e12102eb2d64", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/c4f71c1f72e54df9029191f91276e12102eb2d64", "message": "Update cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/containers/NotifyContextRequest.java\n\nCo-Authored-By: Ferm\u00edn Gal\u00e1n M\u00e1rquez <fgalan@users.noreply.github.com>", "committedDate": "2020-01-13T08:31:13Z", "type": "commit"}, {"oid": "0f2e7afd4f0109ed0e25e0b1038743738b76dd30", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/0f2e7afd4f0109ed0e25e0b1038743738b76dd30", "message": "add stop method to sink", "committedDate": "2020-01-13T13:35:51Z", "type": "commit"}, {"oid": "49380b02ae4a30112f75e84e11217828f2beae56", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/49380b02ae4a30112f75e84e11217828f2beae56", "message": "add stop method to sink", "committedDate": "2020-01-14T14:39:23Z", "type": "forcePushed"}, {"oid": "1532b14d711f22f4bc8fffe75dc4a0196feaf877", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/1532b14d711f22f4bc8fffe75dc4a0196feaf877", "message": "edit null handling objects", "committedDate": "2020-01-15T09:41:43Z", "type": "commit"}, {"oid": "e1e31eca555e8e658c3ed5333aaf785db8faac10", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/e1e31eca555e8e658c3ed5333aaf785db8faac10", "message": "Merge branch 'task/native_types_cast' of https://github.com/telefonicaid/fiware-cygnus into task/native_types_cast", "committedDate": "2020-01-15T10:33:42Z", "type": "forcePushed"}, {"oid": "2be6e7d99efb006e187e0243db212ea63d1276ba", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/2be6e7d99efb006e187e0243db212ea63d1276ba", "message": "Merge branch 'task/native_types_cast' of https://github.com/telefonicaid/fiware-cygnus into task/native_types_cast", "committedDate": "2020-01-15T10:35:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkwNDI4Nw==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r366904287", "bodyText": "bad merge!", "author": "AlvaroVega", "createdAt": "2020-01-15T14:28:07Z", "path": "cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java", "diffHunk": "@@ -375,7 +375,11 @@ public String getValuesForInsert() {\n                     String stringValue = null;\n                     if (attrNativeTypes && this instanceof ColumnAggregator) {\n                         LOGGER.debug(\"[\" + getName() + \"] aggregation entry = \"  + entry );\n+<<<<<<< HEAD", "originalCommit": "07ae1eafb030ed73a6a3812e8a32afa324843ea6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxODM0OQ==", "url": "https://github.com/telefonicaid/fiware-cygnus/pull/1784#discussion_r366918349", "bodyText": "Thks! dropped that commit.", "author": "IvanHdzC", "createdAt": "2020-01-15T14:52:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkwNDI4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7af738b4f19199a309bd01412a7d10c85a8fdf4a", "chunk": "diff --git a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\nindex a8d23479..e2492011 100644\n--- a/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\n+++ b/cygnus-ngsi/src/main/java/com/telefonica/iot/cygnus/sinks/NGSIPostgisSink.java\n\n@@ -374,12 +374,7 @@ public class NGSIPostgisSink extends NGSISink {\n                     JsonElement value = values.get(i);\n                     String stringValue = null;\n                     if (attrNativeTypes && this instanceof ColumnAggregator) {\n-                        LOGGER.debug(\"[\" + getName() + \"] aggregation entry = \"  + entry );\n-<<<<<<< HEAD\n                         if (value.isJsonNull() || value == null) {\n-=======\n-                        if (value == null || value.isJsonNull()) {\n->>>>>>> 2be6e7d99efb006e187e0243db212ea63d1276ba\n                             stringValue = \"NULL\";\n                         } else if (value.isJsonPrimitive()) {\n                             if (value.getAsJsonPrimitive().isBoolean()) {\n"}}, {"oid": "7af738b4f19199a309bd01412a7d10c85a8fdf4a", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/7af738b4f19199a309bd01412a7d10c85a8fdf4a", "message": "add stop method to sink", "committedDate": "2020-01-15T14:48:34Z", "type": "commit"}, {"oid": "69646fd219077eb1fee76bf62c5acbde7125e9ea", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/69646fd219077eb1fee76bf62c5acbde7125e9ea", "message": "edited Dockerfile", "committedDate": "2020-01-15T14:48:37Z", "type": "commit"}, {"oid": "383e6f645cef3c50a3a1dc6717c13050566bcd89", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/383e6f645cef3c50a3a1dc6717c13050566bcd89", "message": "change getAsString to toString", "committedDate": "2020-01-15T14:48:37Z", "type": "commit"}, {"oid": "383e6f645cef3c50a3a1dc6717c13050566bcd89", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/383e6f645cef3c50a3a1dc6717c13050566bcd89", "message": "change getAsString to toString", "committedDate": "2020-01-15T14:48:37Z", "type": "forcePushed"}, {"oid": "c45fd47ae72d53d3d636c68b8463f2bffd07fde9", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/c45fd47ae72d53d3d636c68b8463f2bffd07fde9", "message": "update branch", "committedDate": "2020-01-15T14:51:58Z", "type": "commit"}, {"oid": "6e044279f50d6d5292c85ae984ee65a967910db4", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/6e044279f50d6d5292c85ae984ee65a967910db4", "message": "fix tests", "committedDate": "2020-01-15T15:13:10Z", "type": "commit"}, {"oid": "9b17c4857e66e7d68606e277c77294bb52884495", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/9b17c4857e66e7d68606e277c77294bb52884495", "message": "not Json primitive objects handling", "committedDate": "2020-01-15T17:12:55Z", "type": "commit"}, {"oid": "9b17c4857e66e7d68606e277c77294bb52884495", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/9b17c4857e66e7d68606e277c77294bb52884495", "message": "not Json primitive objects handling", "committedDate": "2020-01-15T17:12:55Z", "type": "forcePushed"}, {"oid": "8b8dbef37ad4c7fb0ab20fc95cfd8aa2b1e567fa", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/8b8dbef37ad4c7fb0ab20fc95cfd8aa2b1e567fa", "message": "add batch tests", "committedDate": "2020-01-15T17:54:44Z", "type": "commit"}, {"oid": "e3e7ecbef20b31bc283a04231d68db70b5b4314f", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/e3e7ecbef20b31bc283a04231d68db70b5b4314f", "message": "edit geo values", "committedDate": "2020-01-16T10:33:19Z", "type": "commit"}, {"oid": "57792babb1c1617c04710f9bbd941291c72d29bf", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/57792babb1c1617c04710f9bbd941291c72d29bf", "message": "trace mysql query when exception", "committedDate": "2020-01-16T15:09:17Z", "type": "commit"}, {"oid": "57792babb1c1617c04710f9bbd941291c72d29bf", "url": "https://github.com/telefonicaid/fiware-cygnus/commit/57792babb1c1617c04710f9bbd941291c72d29bf", "message": "trace mysql query when exception", "committedDate": "2020-01-16T15:09:17Z", "type": "forcePushed"}]}