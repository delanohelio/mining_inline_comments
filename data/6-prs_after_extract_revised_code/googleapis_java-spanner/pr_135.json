{"pr_number": 135, "pr_title": "feat: optimize maintainer to let sessions be GC'ed instead of deleted", "pr_createdAt": "2020-03-30T09:22:18Z", "pr_url": "https://github.com/googleapis/java-spanner/pull/135", "timeline": [{"oid": "c95aed62d25e5f7444212493a7d953ee93a1b2ba", "url": "https://github.com/googleapis/java-spanner/commit/c95aed62d25e5f7444212493a7d953ee93a1b2ba", "message": "fix: merge conflicts", "committedDate": "2020-04-08T05:28:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcxNTk1Ng==", "url": "https://github.com/googleapis/java-spanner/pull/135#discussion_r408715956", "bodyText": "Doesn't this logic meant that over time we won't be maintaining the ratio of write prepared sessions to read sessions since we always favor keeping read sessions alive?", "author": "skuruppu", "createdAt": "2020-04-15T09:45:32Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -1053,9 +1057,11 @@ private void keepAliveSessions(Instant currTime) {\n       while (numSessionsToKeepAlive > 0) {\n         PooledSession sessionToKeepAlive = null;\n         synchronized (lock) {\n-          sessionToKeepAlive = findSessionToKeepAlive(readSessions, keepAliveThreshold);\n+          sessionToKeepAlive = findSessionToKeepAlive(readSessions, keepAliveThreshold, 0);\n           if (sessionToKeepAlive == null) {\n-            sessionToKeepAlive = findSessionToKeepAlive(writePreparedSessions, keepAliveThreshold);\n+            sessionToKeepAlive =\n+                findSessionToKeepAlive(\n+                    writePreparedSessions, keepAliveThreshold, readSessions.size());", "originalCommit": "c95aed62d25e5f7444212493a7d953ee93a1b2ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU1NTI0MA==", "url": "https://github.com/googleapis/java-spanner/pull/135#discussion_r409555240", "bodyText": "Yes, the session that is kept alive is taken from the pool, pinged and then released back into the pool (on line 1074). Releasing the session back into the pool will trigger a new prepareSession call if necessary.\nI've added an additional test case to verify this behavior.", "author": "olavloite", "createdAt": "2020-04-16T13:28:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcxNTk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU4NzA5MQ==", "url": "https://github.com/googleapis/java-spanner/pull/135#discussion_r409587091", "bodyText": "And that test case now shows that my line of thought does not always work as expected :-)", "author": "olavloite", "createdAt": "2020-04-16T14:10:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcxNTk1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b6284794e26bd3c00c309d0b19af485b36555b21", "chunk": "diff --git a/google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java b/google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java\nindex 8d731f19..48c40e39 100644\n--- a/google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java\n+++ b/google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java\n\n@@ -1057,11 +1053,9 @@ final class SessionPool {\n       while (numSessionsToKeepAlive > 0) {\n         PooledSession sessionToKeepAlive = null;\n         synchronized (lock) {\n-          sessionToKeepAlive = findSessionToKeepAlive(readSessions, keepAliveThreshold, 0);\n+          sessionToKeepAlive = findSessionToKeepAlive(readSessions, keepAliveThreshold);\n           if (sessionToKeepAlive == null) {\n-            sessionToKeepAlive =\n-                findSessionToKeepAlive(\n-                    writePreparedSessions, keepAliveThreshold, readSessions.size());\n+            sessionToKeepAlive = findSessionToKeepAlive(writePreparedSessions, keepAliveThreshold);\n           }\n         }\n         if (sessionToKeepAlive == null) {\n"}}, {"oid": "b6284794e26bd3c00c309d0b19af485b36555b21", "url": "https://github.com/googleapis/java-spanner/commit/b6284794e26bd3c00c309d0b19af485b36555b21", "message": "perf: increase sessions in the pool in batches\n\nWhen more sessions are requested by the user application than are available in the session pool,\nthe session pool will now create new sessions in batches instead of in steps of 1. This reduces\nthe number of RPCs needed to serve a burst of requests.\n\nA benchmark for the session pool has also been added to be able to compare performance and the\nnumber of RPCs needed before and after this change. This benchmark can also be used for future\nchanges to verify that the change does not deteriorate performance or increase the number of\nRPCs needed.", "committedDate": "2020-04-21T10:24:57Z", "type": "commit"}, {"oid": "424d3704cd8c6e68ae131d14c943663096564dea", "url": "https://github.com/googleapis/java-spanner/commit/424d3704cd8c6e68ae131d14c943663096564dea", "message": "fix: remove unused code", "committedDate": "2020-04-21T10:24:57Z", "type": "commit"}, {"oid": "fa222f28daa64a8d3395294629328170707f7606", "url": "https://github.com/googleapis/java-spanner/commit/fa222f28daa64a8d3395294629328170707f7606", "message": "fix: include num rpcs and sessions in benchmark results", "committedDate": "2020-04-21T10:24:57Z", "type": "commit"}, {"oid": "4d96c2f8de5cf715a20edd6d091cb29bd46d7452", "url": "https://github.com/googleapis/java-spanner/commit/4d96c2f8de5cf715a20edd6d091cb29bd46d7452", "message": "fix: include num rpcs and sessions in benchmark results", "committedDate": "2020-04-21T10:24:57Z", "type": "commit"}, {"oid": "87af06805a2b4db725fe63d4d43dd4eb8e1e24f2", "url": "https://github.com/googleapis/java-spanner/commit/87af06805a2b4db725fe63d4d43dd4eb8e1e24f2", "message": "fix: revert using GetSession as ping", "committedDate": "2020-04-21T10:24:57Z", "type": "commit"}, {"oid": "b5c88dcf88ce336fd2731f085e793a9a3e5bcf2c", "url": "https://github.com/googleapis/java-spanner/commit/b5c88dcf88ce336fd2731f085e793a9a3e5bcf2c", "message": "fix: merge conflicts", "committedDate": "2020-04-21T10:24:57Z", "type": "commit"}, {"oid": "c7d307e0a6c0bbea327a51c2643e9ac3271bd412", "url": "https://github.com/googleapis/java-spanner/commit/c7d307e0a6c0bbea327a51c2643e9ac3271bd412", "message": "tests: add test to verify writeFraction", "committedDate": "2020-04-21T10:24:57Z", "type": "commit"}, {"oid": "9df4713854a2318c148f322b35afbbce7a83f3d1", "url": "https://github.com/googleapis/java-spanner/commit/9df4713854a2318c148f322b35afbbce7a83f3d1", "message": "fix: sessions being prepared should be included in comparison", "committedDate": "2020-04-21T10:24:57Z", "type": "commit"}, {"oid": "a0dfa0872e1cfbb48d835796f5845f40b7205a97", "url": "https://github.com/googleapis/java-spanner/commit/a0dfa0872e1cfbb48d835796f5845f40b7205a97", "message": "fix: update renamed mock server", "committedDate": "2020-04-21T10:31:48Z", "type": "commit"}, {"oid": "a0dfa0872e1cfbb48d835796f5845f40b7205a97", "url": "https://github.com/googleapis/java-spanner/commit/a0dfa0872e1cfbb48d835796f5845f40b7205a97", "message": "fix: update renamed mock server", "committedDate": "2020-04-21T10:31:48Z", "type": "forcePushed"}]}