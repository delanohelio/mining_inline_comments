{"pr_number": 141, "pr_title": "fix: retry non-idempotent long-running RPCs", "pr_createdAt": "2020-04-07T08:39:42Z", "pr_url": "https://github.com/googleapis/java-spanner/pull/141", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQwMDg2Nw==", "url": "https://github.com/googleapis/java-spanner/pull/141#discussion_r405400867", "bodyText": "I think we don't specify retry settings for non-idempotent RPCs. Do you know what this will default to then?", "author": "skuruppu", "createdAt": "2020-04-08T09:51:23Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/spi/v1/GapicSpannerRpc.java", "diffHunk": "@@ -584,30 +780,92 @@ public Database getDatabase(String databaseName) throws SpannerException {\n \n   @Override\n   public OperationFuture<Backup, CreateBackupMetadata> createBackup(\n-      String instanceName, String backupId, Backup backup) throws SpannerException {\n-    acquireAdministrativeRequestsRateLimiter();\n+      final String instanceName, final String backupId, final Backup backup)\n+      throws SpannerException {\n     CreateBackupRequest request =\n         CreateBackupRequest.newBuilder()\n             .setParent(instanceName)\n             .setBackupId(backupId)\n             .setBackup(backup)\n             .build();\n-    GrpcCallContext context = newCallContext(null, instanceName);\n-    return databaseAdminStub.createBackupOperationCallable().futureCall(request, context);\n+    OperationFutureCallable<CreateBackupRequest, Backup, CreateBackupMetadata> callable =\n+        new OperationFutureCallable<CreateBackupRequest, Backup, CreateBackupMetadata>(\n+            CreateBackupMetadata.class,\n+            databaseAdminStub.createBackupOperationCallable(),\n+            request,\n+            instanceName,\n+            new OperationsLister() {\n+              @Override\n+              public Paginated<Operation> listOperations(String nextPageToken) {\n+                return listBackupOperations(\n+                    instanceName,\n+                    0,\n+                    String.format(\n+                        \"(metadata.name:%s) AND (metadata.@type:type.googleapis.com/%s)\",\n+                        String.format(\"%s/backups/%s\", instanceName, backupId),\n+                        CreateBackupMetadata.getDescriptor().getFullName()),\n+                    nextPageToken);\n+              }\n+            },\n+            new Function<CreateBackupMetadata, Timestamp>() {\n+              @Override\n+              public Timestamp apply(CreateBackupMetadata input) {\n+                return input.getProgress().getStartTime();\n+              }\n+            });\n+    return RetryHelper.runWithRetries(\n+        callable,\n+        databaseAdminStubSettings\n+            .createBackupOperationSettings()\n+            .getInitialCallSettings()\n+            .getRetrySettings(),", "originalCommit": "771ae9037fa3b503c76c49264ec7d093dc64b169", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQwNTUyNQ==", "url": "https://github.com/googleapis/java-spanner/pull/141#discussion_r405405525", "bodyText": "There are defaults defined in the gapic configuration file as well, but those are already overridden by the client library. The defaults are set in the constructor of SpannerOptions.Builder:\n\n  \n    \n      java-spanner/google-cloud-spanner/src/main/java/com/google/cloud/spanner/SpannerOptions.java\n    \n    \n        Lines 242 to 295\n      in\n      9e5a1cd\n    \n    \n    \n    \n\n        \n          \n           private Builder() { \n        \n\n        \n          \n             // Manually set retry and polling settings that work. \n        \n\n        \n          \n             OperationTimedPollAlgorithm longRunningPollingAlgorithm = \n        \n\n        \n          \n                 OperationTimedPollAlgorithm.create( \n        \n\n        \n          \n                     RetrySettings.newBuilder() \n        \n\n        \n          \n                         .setInitialRpcTimeout(Duration.ofSeconds(60L)) \n        \n\n        \n          \n                         .setMaxRpcTimeout(Duration.ofSeconds(600L)) \n        \n\n        \n          \n                         .setInitialRetryDelay(Duration.ofSeconds(20L)) \n        \n\n        \n          \n                         .setMaxRetryDelay(Duration.ofSeconds(45L)) \n        \n\n        \n          \n                         .setRetryDelayMultiplier(1.5) \n        \n\n        \n          \n                         .setRpcTimeoutMultiplier(1.5) \n        \n\n        \n          \n                         .setTotalTimeout(Duration.ofHours(48L)) \n        \n\n        \n          \n                         .build()); \n        \n\n        \n          \n             RetrySettings longRunningRetrySettings = \n        \n\n        \n          \n                 RetrySettings.newBuilder() \n        \n\n        \n          \n                     .setInitialRpcTimeout(Duration.ofSeconds(60L)) \n        \n\n        \n          \n                     .setMaxRpcTimeout(Duration.ofSeconds(600L)) \n        \n\n        \n          \n                     .setInitialRetryDelay(Duration.ofSeconds(20L)) \n        \n\n        \n          \n                     .setMaxRetryDelay(Duration.ofSeconds(45L)) \n        \n\n        \n          \n                     .setRetryDelayMultiplier(1.5) \n        \n\n        \n          \n                     .setRpcTimeoutMultiplier(1.5) \n        \n\n        \n          \n                     .setTotalTimeout(Duration.ofHours(48L)) \n        \n\n        \n          \n                     .build(); \n        \n\n        \n          \n             databaseAdminStubSettingsBuilder \n        \n\n        \n          \n                 .createDatabaseOperationSettings() \n        \n\n        \n          \n                 .setPollingAlgorithm(longRunningPollingAlgorithm) \n        \n\n        \n          \n                 .setInitialCallSettings( \n        \n\n        \n          \n                     UnaryCallSettings \n        \n\n        \n          \n                         .<CreateDatabaseRequest, OperationSnapshot>newUnaryCallSettingsBuilder() \n        \n\n        \n          \n                         .setRetrySettings(longRunningRetrySettings) \n        \n\n        \n          \n                         .build()); \n        \n\n        \n          \n             databaseAdminStubSettingsBuilder \n        \n\n        \n          \n                 .createBackupOperationSettings() \n        \n\n        \n          \n                 .setPollingAlgorithm(longRunningPollingAlgorithm) \n        \n\n        \n          \n                 .setInitialCallSettings( \n        \n\n        \n          \n                     UnaryCallSettings \n        \n\n        \n          \n                         .<CreateBackupRequest, OperationSnapshot>newUnaryCallSettingsBuilder() \n        \n\n        \n          \n                         .setRetrySettings(longRunningRetrySettings) \n        \n\n        \n          \n                         .build()); \n        \n\n        \n          \n             databaseAdminStubSettingsBuilder \n        \n\n        \n          \n                 .restoreDatabaseOperationSettings() \n        \n\n        \n          \n                 .setPollingAlgorithm(longRunningPollingAlgorithm) \n        \n\n        \n          \n                 .setInitialCallSettings( \n        \n\n        \n          \n                     UnaryCallSettings \n        \n\n        \n          \n                         .<RestoreDatabaseRequest, OperationSnapshot>newUnaryCallSettingsBuilder() \n        \n\n        \n          \n                         .setRetrySettings(longRunningRetrySettings) \n        \n\n        \n          \n                         .build()); \n        \n\n        \n          \n             databaseAdminStubSettingsBuilder \n        \n\n        \n          \n                 .deleteBackupSettings() \n        \n\n        \n          \n                 .setRetrySettings(longRunningRetrySettings); \n        \n\n        \n          \n             databaseAdminStubSettingsBuilder \n        \n\n        \n          \n                 .updateBackupSettings() \n        \n\n        \n          \n                 .setRetrySettings(longRunningRetrySettings); \n        \n\n        \n          \n           }", "author": "olavloite", "createdAt": "2020-04-08T09:59:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQwMDg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1MDY1MA==", "url": "https://github.com/googleapis/java-spanner/pull/141#discussion_r405850650", "bodyText": "So does this mean that the Java client library has its own retrying settings which are different from the gapic config file?", "author": "hengfengli", "createdAt": "2020-04-08T22:27:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQwMDg2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "605b67204f76dffc5de4568a6aae63058feb7ac7", "chunk": "diff --git a/google-cloud-spanner/src/main/java/com/google/cloud/spanner/spi/v1/GapicSpannerRpc.java b/google-cloud-spanner/src/main/java/com/google/cloud/spanner/spi/v1/GapicSpannerRpc.java\nindex de838467..2719724b 100644\n--- a/google-cloud-spanner/src/main/java/com/google/cloud/spanner/spi/v1/GapicSpannerRpc.java\n+++ b/google-cloud-spanner/src/main/java/com/google/cloud/spanner/spi/v1/GapicSpannerRpc.java\n\n@@ -790,7 +812,6 @@ public class GapicSpannerRpc implements SpannerRpc {\n             .build();\n     OperationFutureCallable<CreateBackupRequest, Backup, CreateBackupMetadata> callable =\n         new OperationFutureCallable<CreateBackupRequest, Backup, CreateBackupMetadata>(\n-            CreateBackupMetadata.class,\n             databaseAdminStub.createBackupOperationCallable(),\n             request,\n             instanceName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1MzE5Mw==", "url": "https://github.com/googleapis/java-spanner/pull/141#discussion_r405853193", "bodyText": "Why do we need to manually specify the retryable codes here? In the gapic config file (https://github.com/googleapis/googleapis/blob/d741cd976975c745d0199987aff0e908b8352992/google/spanner/admin/database/v1/spanner_admin_database_grpc_service_config.json#L58-L67), updateBackup will retry DEADLINE_EXCEEDED and UNAVAILABLE. Shouldn't this code be auto-generated?\nI guess Java gapic code generator is using a different config file: https://github.com/googleapis/googleapis/blob/master/google/spanner/admin/database/v1/spanner_admin_database_gapic.yaml#L83-L86.", "author": "hengfengli", "createdAt": "2020-04-08T22:34:09Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SpannerOptions.java", "diffHunk": "@@ -291,7 +292,8 @@ private Builder() {\n           .setRetrySettings(longRunningRetrySettings);\n       databaseAdminStubSettingsBuilder\n           .updateBackupSettings()\n-          .setRetrySettings(longRunningRetrySettings);\n+          .setRetrySettings(longRunningRetrySettings)\n+          .setRetryableCodes(StatusCode.Code.DEADLINE_EXCEEDED, StatusCode.Code.UNAVAILABLE);", "originalCommit": "771ae9037fa3b503c76c49264ec7d093dc64b169", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1NDAyNw==", "url": "https://github.com/googleapis/java-spanner/pull/141#discussion_r405854027", "bodyText": "Just curious: why do we manually set retrying settings instead of using the default values from the gapic config file?", "author": "hengfengli", "createdAt": "2020-04-08T22:36:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1MzE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwNDE4OA==", "url": "https://github.com/googleapis/java-spanner/pull/141#discussion_r406004188", "bodyText": "I had a lot of problems / transient errors using the default values when working on the backups feature. So I set the values manually to try to find settings that did work, so that we can set them back to the default config.\nSo the Java client should definitely not continue to use custom retry settings. Once we have verified that these settings work well, we should set these as the default in the config file.", "author": "olavloite", "createdAt": "2020-04-09T07:20:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1MzE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwNzE1MQ==", "url": "https://github.com/googleapis/java-spanner/pull/141#discussion_r406007151", "bodyText": "And yes, the Java client (and I think also the other clients, but I'm not 100% sure) use the retry settings in https://github.com/googleapis/googleapis/blob/master/google/spanner/admin/database/v1/spanner_admin_database_gapic.yaml. So that means for example that the default config for UpdateBackup is non-idempotent.", "author": "olavloite", "createdAt": "2020-04-09T07:26:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg1MzE5Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "5bbb6fc64ffadb79a2d17bfb6a1c933f979db3b2", "url": "https://github.com/googleapis/java-spanner/commit/5bbb6fc64ffadb79a2d17bfb6a1c933f979db3b2", "message": "fix: retry non-idempotent long-running RPCs\n\nRPCs returning a long-running operation, such as CreateDatabase,\nCreateBackup and RestoreDatabase, are non-idempotent and cannot be\nretried automatically by gax. This means that these RPCs sometimes fail\nwith transient errors, such as UNAVAILABLE or DEADLINE_EXCEEDED. This\nchange introduces automatic retries of these RPCs using the following\nlogic:\n1. Execute the RPC and wait for the operation to be returned.\n2. If a transient error occurs while waiting for the operation, the\n   client library queries the backend for the corresponding operation.\n   If the operation is found, the resumes the tracking of the existing\n   operation and returns that to the user.\n3. If no corresponding operation is found in step 2, the client library\n   retries the RPC from step 1.\n\nFixes https://github.com/GoogleCloudPlatform/java-docs-samples/issues/2571", "committedDate": "2020-04-10T16:22:02Z", "type": "commit"}, {"oid": "e329a1bbe8762506f53a55d44834b29c8e070deb", "url": "https://github.com/googleapis/java-spanner/commit/e329a1bbe8762506f53a55d44834b29c8e070deb", "message": "fix: remove unnecessary changes", "committedDate": "2020-04-10T16:22:02Z", "type": "commit"}, {"oid": "cd96869a2ea1003d889a2747d6fcf70d25de95ca", "url": "https://github.com/googleapis/java-spanner/commit/cd96869a2ea1003d889a2747d6fcf70d25de95ca", "message": "tests: retry restore if it fails on max pending restores", "committedDate": "2020-04-10T16:22:02Z", "type": "commit"}, {"oid": "1e9c4a6de7c268b3dd5b6b59e384e826d4605994", "url": "https://github.com/googleapis/java-spanner/commit/1e9c4a6de7c268b3dd5b6b59e384e826d4605994", "message": "fix: fix retry condition test", "committedDate": "2020-04-10T16:22:02Z", "type": "commit"}, {"oid": "605b67204f76dffc5de4568a6aae63058feb7ac7", "url": "https://github.com/googleapis/java-spanner/commit/605b67204f76dffc5de4568a6aae63058feb7ac7", "message": "fix: use create time of database for retries", "committedDate": "2020-04-10T16:22:02Z", "type": "commit"}, {"oid": "605b67204f76dffc5de4568a6aae63058feb7ac7", "url": "https://github.com/googleapis/java-spanner/commit/605b67204f76dffc5de4568a6aae63058feb7ac7", "message": "fix: use create time of database for retries", "committedDate": "2020-04-10T16:22:02Z", "type": "forcePushed"}]}