{"pr_number": 118, "pr_title": "feat: new sample - Table: Column Based Time Partitioning", "pr_createdAt": "2020-01-21T21:46:22Z", "pr_url": "https://github.com/googleapis/java-bigquery/pull/118", "timeline": [{"oid": "f96fb0cd2524aef050f120a039f7002f5d2fd467", "url": "https://github.com/googleapis/java-bigquery/commit/f96fb0cd2524aef050f120a039f7002f5d2fd467", "message": "feat: new sample - Table: Column Based Time Partitioning", "committedDate": "2020-01-21T21:45:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM2Mjg1NQ==", "url": "https://github.com/googleapis/java-bigquery/pull/118#discussion_r369362855", "bodyText": "The schema should probably be defined as part of the main sample - it's not required for testing.", "author": "kurtisvg", "createdAt": "2020-01-22T04:12:48Z", "path": "samples/src/main/java/com/example/bigquery/CreatePartitionedTable.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_create_table_partitioned]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import com.google.cloud.bigquery.StandardTableDefinition;\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.TableInfo;\n+import com.google.cloud.bigquery.TimePartitioning;\n+\n+public class CreatePartitionedTable {\n+\n+  public static void runCreatePartitionedTable() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String tableName = \"MY_TABLE_NAME\";\n+    Schema schema =", "originalCommit": "f96fb0cd2524aef050f120a039f7002f5d2fd467", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "98ec46190afa1ceafa55ea22f69557dc29de31cf", "chunk": "diff --git a/samples/src/main/java/com/example/bigquery/CreatePartitionedTable.java b/samples/src/main/java/com/example/bigquery/CreatePartitionedTable.java\nindex 0d6e366c..21dcdbf1 100644\n--- a/samples/src/main/java/com/example/bigquery/CreatePartitionedTable.java\n+++ b/samples/src/main/java/com/example/bigquery/CreatePartitionedTable.java\n\n@@ -34,15 +34,10 @@ public class CreatePartitionedTable {\n     // TODO(developer): Replace these variables before running the sample.\n     String datasetName = \"MY_DATASET_NAME\";\n     String tableName = \"MY_TABLE_NAME\";\n-    Schema schema =\n-        Schema.of(\n-            Field.of(\"stringField\", StandardSQLTypeName.STRING),\n-            Field.of(\"booleanField\", StandardSQLTypeName.BOOL));\n-    Field.of(\"dateField\", StandardSQLTypeName.DATE);\n-    createPartitionedTable(datasetName, tableName, schema);\n+    createPartitionedTable(datasetName, tableName);\n   }\n \n-  public static void createPartitionedTable(String datasetName, String tableName, Schema schema) {\n+  public static void createPartitionedTable(String datasetName, String tableName) {\n     try {\n       // Initialize client that will be used to send requests. This client only needs to be created\n       // once, and can be reused for multiple requests.\n"}}, {"oid": "98ec46190afa1ceafa55ea22f69557dc29de31cf", "url": "https://github.com/googleapis/java-bigquery/commit/98ec46190afa1ceafa55ea22f69557dc29de31cf", "message": "update based on comments", "committedDate": "2020-01-22T16:13:02Z", "type": "commit"}]}