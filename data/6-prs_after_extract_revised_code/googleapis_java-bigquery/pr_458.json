{"pr_number": 458, "pr_title": "docs(samples): add create range partition table", "pr_createdAt": "2020-06-17T11:47:17Z", "pr_url": "https://github.com/googleapis/java-bigquery/pull/458", "timeline": [{"oid": "5f41085689a45420f23471dfa5c8a23d6bf1c412", "url": "https://github.com/googleapis/java-bigquery/commit/5f41085689a45420f23471dfa5c8a23d6bf1c412", "message": "docs(samples): add create range partition table", "committedDate": "2020-06-17T08:03:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMTcxMQ==", "url": "https://github.com/googleapis/java-bigquery/pull/458#discussion_r441621711", "bodyText": "this needs to go above import statements so that ppl know what are needed", "author": "stephaniewang526", "createdAt": "2020-06-17T15:10:27Z", "path": "samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.RangePartitioning;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import com.google.cloud.bigquery.StandardTableDefinition;\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.TableInfo;\n+\n+// [START bigquery_create_table_range_partitioned]", "originalCommit": "5f41085689a45420f23471dfa5c8a23d6bf1c412", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "747dbea78bcbb1d587102e41c376c193962e2ac3", "chunk": "diff --git a/samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java b/samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java\nindex 884c9b6..57abdff 100644\n--- a/samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java\n+++ b/samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java\n\n@@ -16,6 +16,7 @@\n \n package com.example.bigquery;\n \n+// [START bigquery_create_table_range_partitioned]\n import com.google.cloud.bigquery.BigQuery;\n import com.google.cloud.bigquery.BigQueryException;\n import com.google.cloud.bigquery.BigQueryOptions;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMjcyNA==", "url": "https://github.com/googleapis/java-bigquery/pull/458#discussion_r441622724", "bodyText": "can we add a simple one-liner on what this sample does? something like \"//Sample to create a range partitioned table\". An example in this sample https://github.com/googleapis/java-bigquery/blob/master/samples/snippets/src/main/java/com/example/bigquery/LoadCsvFromGcs.java", "author": "stephaniewang526", "createdAt": "2020-06-17T15:11:40Z", "path": "samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.RangePartitioning;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import com.google.cloud.bigquery.StandardTableDefinition;\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.TableInfo;\n+", "originalCommit": "5f41085689a45420f23471dfa5c8a23d6bf1c412", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "747dbea78bcbb1d587102e41c376c193962e2ac3", "chunk": "diff --git a/samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java b/samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java\nindex 884c9b6..57abdff 100644\n--- a/samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java\n+++ b/samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java\n\n@@ -16,6 +16,7 @@\n \n package com.example.bigquery;\n \n+// [START bigquery_create_table_range_partitioned]\n import com.google.cloud.bigquery.BigQuery;\n import com.google.cloud.bigquery.BigQueryException;\n import com.google.cloud.bigquery.BigQueryOptions;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNDY3OQ==", "url": "https://github.com/googleapis/java-bigquery/pull/458#discussion_r441624679", "bodyText": "We've decided to just call requireEnv method here to eliminate one other method called. please see this sample for details - \n  \n    \n      java-bigquery/samples/snippets/src/test/java/com/example/bigquery/LoadCsvFromGcsIT.java\n    \n    \n         Line 39\n      in\n      16738be\n    \n    \n    \n    \n\n        \n          \n           private static final String BIGQUERY_DATASET_NAME = requireEnvVar(\"BIGQUERY_DATASET_NAME\");", "author": "stephaniewang526", "createdAt": "2020-06-17T15:14:06Z", "path": "samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class CreateRangePartitionedTableIT {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");", "originalCommit": "5f41085689a45420f23471dfa5c8a23d6bf1c412", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "747dbea78bcbb1d587102e41c376c193962e2ac3", "chunk": "diff --git a/samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java b/samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java\nindex f52c987..a074978 100644\n--- a/samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java\n+++ b/samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java\n\n@@ -24,21 +24,26 @@ import com.google.cloud.bigquery.Schema;\n import com.google.cloud.bigquery.StandardSQLTypeName;\n import java.io.ByteArrayOutputStream;\n import java.io.PrintStream;\n+import java.util.UUID;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.BeforeClass;\n import org.junit.Test;\n \n public class CreateRangePartitionedTableIT {\n+\n+  private String tableName;\n   private ByteArrayOutputStream bout;\n   private PrintStream out;\n \n-  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");\n+  private static final String BIGQUERY_DATASET_NAME = requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n \n-  private static void requireEnvVar(String varName) {\n+  private static String requireEnvVar(String varName) {\n+    String value = System.getenv(varName);\n     assertNotNull(\n         \"Environment variable \" + varName + \" is required to perform these tests.\",\n         System.getenv(varName));\n+    return value;\n   }\n \n   @BeforeClass\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNTAyNg==", "url": "https://github.com/googleapis/java-bigquery/pull/458#discussion_r441625026", "bodyText": "let's put this in teardown() - see sample \n  \n    \n      java-bigquery/samples/snippets/src/test/java/com/example/bigquery/LoadCsvFromGcsIT.java\n    \n    \n         Line 78\n      in\n      16738be\n    \n    \n    \n    \n\n        \n          \n           DeleteTable.deleteTable(BIGQUERY_DATASET_NAME, tableName);", "author": "stephaniewang526", "createdAt": "2020-06-17T15:14:36Z", "path": "samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class CreateRangePartitionedTableIT {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void testCreateRangePartitionedTable() {\n+    String tableName = \"RANGE_PARTITIONED_TABLE\";\n+    Schema schema =\n+        Schema.of(\n+            Field.of(\"integerField\", StandardSQLTypeName.INT64),\n+            Field.of(\"stringField\", StandardSQLTypeName.STRING),\n+            Field.of(\"booleanField\", StandardSQLTypeName.BOOL),\n+            Field.of(\"dateField\", StandardSQLTypeName.DATE));\n+\n+    CreateRangePartitionedTable.createRangePartitionedTable(\n+        BIGQUERY_DATASET_NAME, tableName, schema);\n+\n+    assertThat(bout.toString()).contains(\"Range partitioned table created successfully\");\n+\n+    // Clean up\n+    DeleteTable.deleteTable(BIGQUERY_DATASET_NAME, tableName);", "originalCommit": "5f41085689a45420f23471dfa5c8a23d6bf1c412", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "747dbea78bcbb1d587102e41c376c193962e2ac3", "chunk": "diff --git a/samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java b/samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java\nindex f52c987..a074978 100644\n--- a/samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java\n+++ b/samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java\n\n@@ -24,21 +24,26 @@ import com.google.cloud.bigquery.Schema;\n import com.google.cloud.bigquery.StandardSQLTypeName;\n import java.io.ByteArrayOutputStream;\n import java.io.PrintStream;\n+import java.util.UUID;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.BeforeClass;\n import org.junit.Test;\n \n public class CreateRangePartitionedTableIT {\n+\n+  private String tableName;\n   private ByteArrayOutputStream bout;\n   private PrintStream out;\n \n-  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");\n+  private static final String BIGQUERY_DATASET_NAME = requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n \n-  private static void requireEnvVar(String varName) {\n+  private static String requireEnvVar(String varName) {\n+    String value = System.getenv(varName);\n     assertNotNull(\n         \"Environment variable \" + varName + \" is required to perform these tests.\",\n         System.getenv(varName));\n+    return value;\n   }\n \n   @BeforeClass\n"}}, {"oid": "747dbea78bcbb1d587102e41c376c193962e2ac3", "url": "https://github.com/googleapis/java-bigquery/commit/747dbea78bcbb1d587102e41c376c193962e2ac3", "message": "docs(samples): address feedback", "committedDate": "2020-06-17T15:44:02Z", "type": "commit"}]}