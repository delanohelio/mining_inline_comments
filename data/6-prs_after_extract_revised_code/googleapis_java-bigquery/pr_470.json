{"pr_number": 470, "pr_title": "docs(samples): add create job", "pr_createdAt": "2020-06-19T10:29:42Z", "pr_url": "https://github.com/googleapis/java-bigquery/pull/470", "timeline": [{"oid": "561bf382ce1d62044022553b7dc29070c2d07114", "url": "https://github.com/googleapis/java-bigquery/commit/561bf382ce1d62044022553b7dc29070c2d07114", "message": "docs(samples): add create job", "committedDate": "2020-06-19T09:22:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzOTYwMw==", "url": "https://github.com/googleapis/java-bigquery/pull/470#discussion_r442839603", "bodyText": "please add description here", "author": "stephaniewang526", "createdAt": "2020-06-19T13:27:00Z", "path": "samples/snippets/src/main/java/com/example/bigquery/CreateJob.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_create_job]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Job;\n+import com.google.cloud.bigquery.JobId;\n+import com.google.cloud.bigquery.JobInfo;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.UUID;\n+", "originalCommit": "561bf382ce1d62044022553b7dc29070c2d07114", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ed2c5b4d4a72350281133974f4417d761c672ca", "chunk": "diff --git a/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java b/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\nindex 5dea31f..24dd190 100644\n--- a/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\n+++ b/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\n\n@@ -27,16 +27,12 @@ import com.google.cloud.bigquery.QueryJobConfiguration;\n import com.google.common.collect.ImmutableMap;\n import java.util.UUID;\n \n+// Sample to create a job\n public class CreateJob {\n \n   public static void runCreateJob() {\n     // TODO(developer): Replace these variables before running the sample.\n-    String projectId = \"MY_PROJECT_ID\";\n-    String datasetName = \"MY_DATASET_NAME\";\n-    String tableName = \"MY_TABLE_NAME\";\n-    // i.e. SELECT country_name from `bigquery-public-data.utility_us.country_code_iso`\n-    String query =\n-        \"SELECT country_name from `\" + projectId + \".\" + datasetName + \".\" + tableName + \"`\";\n+    String query = \"SELECT country_name from `bigquery-public-data.utility_us.country_code_iso`\";\n     createJob(query);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzOTk5Mw==", "url": "https://github.com/googleapis/java-bigquery/pull/470#discussion_r442839993", "bodyText": "i think we can just use the raw string like you commented out here so we don't have to create all these projectId, datasetName, tableName local vars", "author": "stephaniewang526", "createdAt": "2020-06-19T13:27:42Z", "path": "samples/snippets/src/main/java/com/example/bigquery/CreateJob.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_create_job]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Job;\n+import com.google.cloud.bigquery.JobId;\n+import com.google.cloud.bigquery.JobInfo;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.UUID;\n+\n+public class CreateJob {\n+\n+  public static void runCreateJob() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"MY_PROJECT_ID\";\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String tableName = \"MY_TABLE_NAME\";\n+    // i.e. SELECT country_name from `bigquery-public-data.utility_us.country_code_iso`\n+    String query =\n+        \"SELECT country_name from `\" + projectId + \".\" + datasetName + \".\" + tableName + \"`\";", "originalCommit": "561bf382ce1d62044022553b7dc29070c2d07114", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ed2c5b4d4a72350281133974f4417d761c672ca", "chunk": "diff --git a/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java b/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\nindex 5dea31f..24dd190 100644\n--- a/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\n+++ b/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\n\n@@ -27,16 +27,12 @@ import com.google.cloud.bigquery.QueryJobConfiguration;\n import com.google.common.collect.ImmutableMap;\n import java.util.UUID;\n \n+// Sample to create a job\n public class CreateJob {\n \n   public static void runCreateJob() {\n     // TODO(developer): Replace these variables before running the sample.\n-    String projectId = \"MY_PROJECT_ID\";\n-    String datasetName = \"MY_DATASET_NAME\";\n-    String tableName = \"MY_TABLE_NAME\";\n-    // i.e. SELECT country_name from `bigquery-public-data.utility_us.country_code_iso`\n-    String query =\n-        \"SELECT country_name from `\" + projectId + \".\" + datasetName + \".\" + tableName + \"`\";\n+    String query = \"SELECT country_name from `bigquery-public-data.utility_us.country_code_iso`\";\n     createJob(query);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg0MTQ1MQ==", "url": "https://github.com/googleapis/java-bigquery/pull/470#discussion_r442841451", "bodyText": "could you follow the job format similar to here \n  \n    \n      java-bigquery/samples/snippets/src/main/java/com/example/bigquery/LoadLocalFile.java\n    \n    \n         Line 70\n      in\n      0ffbac3\n    \n    \n    \n    \n\n        \n          \n           Job job = bigquery.getJob(jobId); \n        \n    \n  \n\n?", "author": "stephaniewang526", "createdAt": "2020-06-19T13:30:30Z", "path": "samples/snippets/src/main/java/com/example/bigquery/CreateJob.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_create_job]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Job;\n+import com.google.cloud.bigquery.JobId;\n+import com.google.cloud.bigquery.JobInfo;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.UUID;\n+\n+public class CreateJob {\n+\n+  public static void runCreateJob() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"MY_PROJECT_ID\";\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String tableName = \"MY_TABLE_NAME\";\n+    // i.e. SELECT country_name from `bigquery-public-data.utility_us.country_code_iso`\n+    String query =\n+        \"SELECT country_name from `\" + projectId + \".\" + datasetName + \".\" + tableName + \"`\";\n+    createJob(query);\n+  }\n+\n+  public static void createJob(String query) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      // Specify a job configuration to set optional job resource properties.\n+      QueryJobConfiguration queryConfig =\n+          QueryJobConfiguration.newBuilder(query)\n+              .setLabels(ImmutableMap.of(\"example-label\", \"example-value\"))\n+              .build();\n+\n+      // The client libraries automatically generate a job ID.\n+      // Override the generated ID with either the job_id_prefix or job_id parameters.\n+      String jobId = \"code_sample_\" + UUID.randomUUID().toString().substring(0, 8);\n+      Job job = bigquery.create(JobInfo.of(JobId.of(jobId), queryConfig));\n+      job = job.waitFor();", "originalCommit": "561bf382ce1d62044022553b7dc29070c2d07114", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ed2c5b4d4a72350281133974f4417d761c672ca", "chunk": "diff --git a/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java b/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\nindex 5dea31f..24dd190 100644\n--- a/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\n+++ b/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\n\n@@ -27,16 +27,12 @@ import com.google.cloud.bigquery.QueryJobConfiguration;\n import com.google.common.collect.ImmutableMap;\n import java.util.UUID;\n \n+// Sample to create a job\n public class CreateJob {\n \n   public static void runCreateJob() {\n     // TODO(developer): Replace these variables before running the sample.\n-    String projectId = \"MY_PROJECT_ID\";\n-    String datasetName = \"MY_DATASET_NAME\";\n-    String tableName = \"MY_TABLE_NAME\";\n-    // i.e. SELECT country_name from `bigquery-public-data.utility_us.country_code_iso`\n-    String query =\n-        \"SELECT country_name from `\" + projectId + \".\" + datasetName + \".\" + tableName + \"`\";\n+    String query = \"SELECT country_name from `bigquery-public-data.utility_us.country_code_iso`\";\n     createJob(query);\n   }\n \n"}}, {"oid": "0ed2c5b4d4a72350281133974f4417d761c672ca", "url": "https://github.com/googleapis/java-bigquery/commit/0ed2c5b4d4a72350281133974f4417d761c672ca", "message": "docs(samples): address feedback", "committedDate": "2020-06-19T14:01:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMTczMg==", "url": "https://github.com/googleapis/java-bigquery/pull/470#discussion_r442901732", "bodyText": "i believe jobId is optional right? we don't need to create our own. So I think we can link user to the documentation that explains this.", "author": "stephaniewang526", "createdAt": "2020-06-19T15:21:13Z", "path": "samples/snippets/src/main/java/com/example/bigquery/CreateJob.java", "diffHunk": "@@ -52,17 +48,21 @@ public static void createJob(String query) {\n               .setLabels(ImmutableMap.of(\"example-label\", \"example-value\"))\n               .build();\n \n-      // The client libraries automatically generate a job ID.\n-      // Override the generated ID with either the job_id_prefix or job_id parameters.\n-      String jobId = \"code_sample_\" + UUID.randomUUID().toString().substring(0, 8);\n-      Job job = bigquery.create(JobInfo.of(JobId.of(jobId), queryConfig));\n-      job = job.waitFor();\n-      if (job.isDone()) {\n+      // The location and JobName must be specified; other fields can be auto-detected.\n+      String jobName = \"jobId_\" + UUID.randomUUID().toString();\n+      JobId jobId = JobId.newBuilder().setLocation(\"us\").setJob(jobName).build();\n+\n+      // Create a job with job ID\n+      bigquery.create(JobInfo.of(jobId, queryConfig));", "originalCommit": "0ed2c5b4d4a72350281133974f4417d761c672ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c80dd44c89af5635e79aa906ab371d90c614131", "chunk": "diff --git a/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java b/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\nindex 24dd190..aadf8c8 100644\n--- a/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\n+++ b/samples/snippets/src/main/java/com/example/bigquery/CreateJob.java\n\n@@ -48,7 +48,8 @@ public class CreateJob {\n               .setLabels(ImmutableMap.of(\"example-label\", \"example-value\"))\n               .build();\n \n-      // The location and JobName must be specified; other fields can be auto-detected.\n+      // The location and job name are optional,\n+      // if both are not specified then client will auto-create.\n       String jobName = \"jobId_\" + UUID.randomUUID().toString();\n       JobId jobId = JobId.newBuilder().setLocation(\"us\").setJob(jobName).build();\n \n"}}, {"oid": "8c80dd44c89af5635e79aa906ab371d90c614131", "url": "https://github.com/googleapis/java-bigquery/commit/8c80dd44c89af5635e79aa906ab371d90c614131", "message": "docs(samples): update comment", "committedDate": "2020-06-19T15:44:18Z", "type": "commit"}]}