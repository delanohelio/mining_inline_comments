{"pr_number": 1021, "pr_title": "feat(ProjectTodo): Remove ProjectTodo and UI changes for Obligation and ProjectTodo ", "pr_createdAt": "2020-10-15T10:45:44Z", "pr_url": "https://github.com/eclipse/sw360/pull/1021", "timeline": [{"oid": "cb8902187ac84f536de2f32d62dac2e6a57654cf", "url": "https://github.com/eclipse/sw360/commit/cb8902187ac84f536de2f32d62dac2e6a57654cf", "message": "feat(ProjectTodo): Renamed type to obligationType ,Changed required licenseIds to optional , Added optional ObligationLevel obligationLevel in ObligationStatusInfo\n\nSigned-off-by: Jaideep Palit <jaideep.palit@siemens.com>", "committedDate": "2020-10-15T10:26:34Z", "type": "commit"}, {"oid": "45b5ecfdac48a05718e7cefa454a6a9496a6864b", "url": "https://github.com/eclipse/sw360/commit/45b5ecfdac48a05718e7cefa454a6a9496a6864b", "message": "feat(ProjectTodo): Remove ProjectTodo and UI changes for Obligation and ProjectTodo\n\nSigned-off-by: Jaideep Palit <jaideep.palit@siemens.com>", "committedDate": "2020-10-15T12:13:07Z", "type": "forcePushed"}, {"oid": "6752f728d65d12eb0c0d5d6b9cdb47fe4531a051", "url": "https://github.com/eclipse/sw360/commit/6752f728d65d12eb0c0d5d6b9cdb47fe4531a051", "message": "feat(ProjectTodo): Remove ProjectTodo and UI changes for Obligation and ProjectTodo\n\nSigned-off-by: Jaideep Palit <jaideep.palit@siemens.com>", "committedDate": "2020-10-16T08:41:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI4MjIwMw==", "url": "https://github.com/eclipse/sw360/pull/1021#discussion_r506282203", "bodyText": "Please consider to remove commented methods from this file", "author": "smrutis1", "createdAt": "2020-10-16T10:44:35Z", "path": "backend/src/src-licenseinfo/src/main/java/org/eclipse/sw360/licenseinfo/outputGenerators/DocxGenerator.java", "diffHunk": "@@ -577,7 +576,7 @@ private void printSecondTableOnwards(XWPFDocument document, XmlCursor cursor, Ma\n             tableRow.getCell(4);\n \n         }\n-\n+/*", "originalCommit": "6752f728d65d12eb0c0d5d6b9cdb47fe4531a051", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7b9b73a74b694d5807143b7319cf18d728ef6ae0", "chunk": "diff --git a/backend/src/src-licenseinfo/src/main/java/org/eclipse/sw360/licenseinfo/outputGenerators/DocxGenerator.java b/backend/src/src-licenseinfo/src/main/java/org/eclipse/sw360/licenseinfo/outputGenerators/DocxGenerator.java\nindex 607655a6..b660038b 100644\n--- a/backend/src/src-licenseinfo/src/main/java/org/eclipse/sw360/licenseinfo/outputGenerators/DocxGenerator.java\n+++ b/backend/src/src-licenseinfo/src/main/java/org/eclipse/sw360/licenseinfo/outputGenerators/DocxGenerator.java\n\n@@ -576,7 +577,7 @@ public class DocxGenerator extends OutputGenerator<byte[]> {\n             tableRow.getCell(4);\n \n         }\n-/*\n+\n         SW360Utils.getComponentObligations(project).entrySet().stream().forEachOrdered(oblig -> {\n             currentRow[0] = currentRow[0] + 1;\n             XWPFTableRow crow = table.insertNewTableRow(currentRow[0]);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI4MzUxOA==", "url": "https://github.com/eclipse/sw360/pull/1021#discussion_r506283518", "bodyText": "Only request.setAttribute(\"inProjectDetailsContext\", xxxx); statement seems to only difference in conditions", "author": "smrutis1", "createdAt": "2020-10-16T10:46:18Z", "path": "frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java", "diffHunk": "@@ -238,6 +241,20 @@ public void serveResource(ResourceRequest request, ResourceResponse response) th\n             JSONObject dataForChangeLogs = changeLogsPortletUtilsPortletUtils.serveResourceForChangeLogs(request,\n                     response, action);\n             writeJSON(request, response, dataForChangeLogs);\n+        } else if (PortalConstants.LOAD_OBLIGATIONS_VIEW.equals(action)", "originalCommit": "6752f728d65d12eb0c0d5d6b9cdb47fe4531a051", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7b9b73a74b694d5807143b7319cf18d728ef6ae0", "chunk": "diff --git a/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java b/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\nindex 6704c91a..4303fc1a 100644\n--- a/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\n+++ b/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\n\n@@ -241,20 +238,6 @@ public class ProjectPortlet extends FossologyAwarePortlet {\n             JSONObject dataForChangeLogs = changeLogsPortletUtilsPortletUtils.serveResourceForChangeLogs(request,\n                     response, action);\n             writeJSON(request, response, dataForChangeLogs);\n-        } else if (PortalConstants.LOAD_OBLIGATIONS_VIEW.equals(action)\n-                && PortalConstants.IS_PROJECT_OBLIGATIONS_ENABLED) {\n-            request.setAttribute(OBLIGATION_DATA, loadLinkedObligations(request));\n-            request.setAttribute(\"inProjectDetailsContext\", true);\n-            request.setAttribute(\"isObligationPresent\", true);\n-            include(\"/html/projects/includes/projects/linkedObligations.jsp\", request, response,\n-                    PortletRequest.RESOURCE_PHASE);\n-        } else if (PortalConstants.LOAD_OBLIGATIONS_EDIT.equals(action)\n-                && PortalConstants.IS_PROJECT_OBLIGATIONS_ENABLED) {\n-            request.setAttribute(OBLIGATION_DATA, loadLinkedObligations(request));\n-            request.setAttribute(\"inProjectDetailsContext\", false);\n-            request.setAttribute(\"isObligationPresent\", true);\n-            include(\"/html/projects/includes/projects/linkedObligations.jsp\", request, response,\n-                    PortletRequest.RESOURCE_PHASE);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI4ODgxMg==", "url": "https://github.com/eclipse/sw360/pull/1021#discussion_r506288812", "bodyText": "getProjectObligationToDisplay(-,-), getOrganisationObligationToDisplay(-,-), getComponentObligationToDisplay(-,-)  - These methods contains mostly duplicated codes. Would be good if can be moved to a single method", "author": "smrutis1", "createdAt": "2020-10-16T10:52:37Z", "path": "libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/common/SW360Utils.java", "diffHunk": "@@ -699,4 +588,95 @@ public static Integer parseStringToNumber(String input) {\n             return 0;\n         }\n     }\n+\n+    public static Map<String, ObligationStatusInfo> getProjectObligationToDisplay(", "originalCommit": "6752f728d65d12eb0c0d5d6b9cdb47fe4531a051", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7b9b73a74b694d5807143b7319cf18d728ef6ae0", "chunk": "diff --git a/libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/common/SW360Utils.java b/libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/common/SW360Utils.java\nindex c43721ac..a5a030a7 100644\n--- a/libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/common/SW360Utils.java\n+++ b/libraries/lib-datahandler/src/main/java/org/eclipse/sw360/datahandler/common/SW360Utils.java\n\n@@ -588,95 +699,4 @@ public class SW360Utils {\n             return 0;\n         }\n     }\n-\n-    public static Map<String, ObligationStatusInfo> getProjectObligationToDisplay(\n-            Map<String, ObligationStatusInfo> obligationStatusMap, List<Obligation> obligations) {\n-        Map<String, ObligationStatusInfo> projectObligationAlreadyPresent = obligationStatusMap.entrySet().stream()\n-                .filter(Objects::nonNull).filter(e -> Objects.nonNull(e.getValue()))\n-                .filter(e -> Objects.nonNull(e.getValue().getObligationLevel()))\n-                .filter(e -> e.getValue().getObligationLevel().equals(ObligationLevel.PROJECT_OBLIGATION))\n-                .collect(Collectors.toMap(e -> e.getKey(), e -> e.getValue().setText(e.getKey()),\n-                        (oldValue, newValue) -> oldValue));\n-        projectObligationAlreadyPresent.entrySet().stream().forEach(e -> obligationStatusMap.remove(e.getKey()));\n-\n-        Map<String, ObligationStatusInfo> mapOfProjectObligations = obligations.stream().filter(Objects::nonNull)\n-                .filter(o -> o.isValidForProject()).filter(o -> Objects.nonNull(o.getObligationLevel()))\n-                .filter(o -> o.getObligationLevel().equals(ObligationLevel.PROJECT_OBLIGATION))\n-                .collect(Collectors.toMap(\n-                        o -> CommonUtils.isNotNullEmptyOrWhitespace(o.getTitle()) ? o.getTitle() : o.getText(), o -> {\n-                            if (projectObligationAlreadyPresent.containsKey(o.getText())) {\n-                                return projectObligationAlreadyPresent.remove(o.getText());\n-                            } else {\n-                                return new ObligationStatusInfo().setComment(o.getComments())\n-                                        .setObligationLevel(ObligationLevel.PROJECT_OBLIGATION)\n-                                        .setObligationType(o.getObligationType()).setText(o.getText());\n-                            }\n-                        }, (oldValue, newValue) -> oldValue));\n-\n-        projectObligationAlreadyPresent.entrySet().stream()\n-                .forEach(e -> mapOfProjectObligations.put(e.getKey(), e.getValue()));\n-\n-        return mapOfProjectObligations;\n-    }\n-\n-    public static Map<String, ObligationStatusInfo> getComponentObligationToDisplay(\n-            Map<String, ObligationStatusInfo> obligationStatusMap, List<Obligation> obligations) {\n-        Map<String, ObligationStatusInfo> componentObligationAlreadyPresent = obligationStatusMap.entrySet().stream()\n-                .filter(Objects::nonNull).filter(e -> Objects.nonNull(e.getValue()))\n-                .filter(e -> Objects.nonNull(e.getValue().getObligationLevel()))\n-                .filter(e -> e.getValue().getObligationLevel().equals(ObligationLevel.COMPONENT_OBLIGATION))\n-                .collect(Collectors.toMap(e -> e.getKey(), e -> e.getValue().setText(e.getKey()),\n-                        (oldValue, newValue) -> oldValue));\n-        componentObligationAlreadyPresent.entrySet().stream().forEach(e -> obligationStatusMap.remove(e.getKey()));\n-\n-        Map<String, ObligationStatusInfo> mapOfCompObligations = obligations.stream().filter(Objects::nonNull)\n-                .filter(o -> o.isValidForProject()).filter(o -> Objects.nonNull(o.getObligationLevel()))\n-                .filter(o -> o.getObligationLevel().equals(ObligationLevel.COMPONENT_OBLIGATION))\n-                .collect(Collectors.toMap(\n-                        o -> CommonUtils.isNotNullEmptyOrWhitespace(o.getTitle()) ? o.getTitle() : o.getText(), o -> {\n-                            if (componentObligationAlreadyPresent.containsKey(o.getText())) {\n-                                return componentObligationAlreadyPresent.remove(o.getText());\n-                            } else {\n-                                return new ObligationStatusInfo().setComment(o.getComments())\n-                                        .setObligationLevel(ObligationLevel.COMPONENT_OBLIGATION)\n-                                        .setObligationType(o.getObligationType())\n-                                        .setReleaseIdToAcceptedCLI(new HashMap()).setText(o.getText());\n-                            }\n-                        }, (oldValue, newValue) -> oldValue));\n-\n-        componentObligationAlreadyPresent.entrySet().stream()\n-                .forEach(e -> mapOfCompObligations.put(e.getKey(), e.getValue()));\n-\n-        return mapOfCompObligations;\n-    }\n-\n-    public static Map<String, ObligationStatusInfo> getOrganisationObligationToDisplay(\n-            Map<String, ObligationStatusInfo> obligationStatusMap, List<Obligation> obligations) {\n-        Map<String, ObligationStatusInfo> orgObligationAlreadyPresent = obligationStatusMap.entrySet().stream()\n-                .filter(Objects::nonNull).filter(e -> Objects.nonNull(e.getValue()))\n-                .filter(e -> Objects.nonNull(e.getValue().getObligationLevel()))\n-                .filter(e -> e.getValue().getObligationLevel().equals(ObligationLevel.ORGANISATION_OBLIGATION))\n-                .collect(Collectors.toMap(e -> e.getKey(), e -> e.getValue().setText(e.getKey()),\n-                        (oldValue, newValue) -> oldValue));\n-        orgObligationAlreadyPresent.entrySet().stream().forEach(e -> obligationStatusMap.remove(e.getKey()));\n-\n-        Map<String, ObligationStatusInfo> mapOfOrgObligations = obligations.stream().filter(Objects::nonNull)\n-                .filter(o -> o.isValidForProject()).filter(o -> Objects.nonNull(o.getObligationLevel()))\n-                .filter(o -> o.getObligationLevel().equals(ObligationLevel.ORGANISATION_OBLIGATION))\n-                .collect(Collectors.toMap(\n-                        o -> CommonUtils.isNotNullEmptyOrWhitespace(o.getTitle()) ? o.getTitle() : o.getText(), o -> {\n-                            if (orgObligationAlreadyPresent.containsKey(o.getText())) {\n-                                return orgObligationAlreadyPresent.remove(o.getText());\n-                            } else {\n-                                return new ObligationStatusInfo().setComment(o.getComments())\n-                                        .setObligationLevel(ObligationLevel.ORGANISATION_OBLIGATION)\n-                                        .setObligationType(o.getObligationType())\n-                                        .setReleaseIdToAcceptedCLI(new HashMap()).setText(o.getText());\n-                            }\n-                        }, (oldValue, newValue) -> oldValue));\n-\n-        orgObligationAlreadyPresent.entrySet().stream().forEach(e -> mapOfOrgObligations.put(e.getKey(), e.getValue()));\n-\n-        return mapOfOrgObligations;\n-    }\n }\n"}}, {"oid": "7b9b73a74b694d5807143b7319cf18d728ef6ae0", "url": "https://github.com/eclipse/sw360/commit/7b9b73a74b694d5807143b7319cf18d728ef6ae0", "message": "feat(projecttodo): Migration Scripts\n\nSigned-off-by: Smruti Prakash Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-10-16T11:08:57Z", "type": "commit"}, {"oid": "4cdd1fb1e05ed21bae8dd2ab22c40ade3eda476f", "url": "https://github.com/eclipse/sw360/commit/4cdd1fb1e05ed21bae8dd2ab22c40ade3eda476f", "message": "feat(ProjectTodo): Remove ProjectTodo and UI changes for Obligation and ProjectTodo\n\nSigned-off-by: Jaideep Palit <jaideep.palit@siemens.com>", "committedDate": "2020-10-16T11:09:06Z", "type": "forcePushed"}, {"oid": "99b3f81692e987b34826919ce4d3408426b71699", "url": "https://github.com/eclipse/sw360/commit/99b3f81692e987b34826919ce4d3408426b71699", "message": "feat(ProjectTodo): Remove ProjectTodo and UI changes for Obligation and ProjectTodo\n\nSigned-off-by: Jaideep Palit <jaideep.palit@siemens.com>", "committedDate": "2020-10-16T11:30:18Z", "type": "commit"}, {"oid": "99b3f81692e987b34826919ce4d3408426b71699", "url": "https://github.com/eclipse/sw360/commit/99b3f81692e987b34826919ce4d3408426b71699", "message": "feat(ProjectTodo): Remove ProjectTodo and UI changes for Obligation and ProjectTodo\n\nSigned-off-by: Jaideep Palit <jaideep.palit@siemens.com>", "committedDate": "2020-10-16T11:30:18Z", "type": "forcePushed"}]}