{"pr_number": 890, "pr_title": "feat(ExternalIds):Support multi-externalId Values of same externalId key in Project, Component, and Release page", "pr_createdAt": "2020-06-19T02:24:01Z", "pr_url": "https://github.com/eclipse/sw360/pull/890", "timeline": [{"oid": "0aefcf6d40a7e69238da5dcdc76e33e0a095ed7a", "url": "https://github.com/eclipse/sw360/commit/0aefcf6d40a7e69238da5dcdc76e33e0a095ed7a", "message": "feat(ExternalIds):Support multi-externalId Values of same externalId key in Project, Component, and Release page\n\nSigned-off-by: He, Albert <albert.he@sap.com>", "committedDate": "2020-06-15T09:30:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwOTcyOA==", "url": "https://github.com/eclipse/sw360/pull/890#discussion_r451309728", "bodyText": "Creating an object mapper is a rather expensive operation; so this should not be done for each element in the map. The object creation should at least be moved to the beginning of the method.\nAs the ObjectMapper class is thread-safe, in this case it would also be an option to have a static ObjectMapper field in PortletUtils that is always reused.", "author": "oheger-bosch", "createdAt": "2020-07-08T06:24:37Z", "path": "frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/common/PortletUtils.java", "diffHunk": "@@ -369,6 +371,27 @@ public static VerificationState getVerificationState(VulnerabilityDTO vul){\n         return customMap;\n     }\n \n+    public static Map<String,String> getMapWithJoinedValueFromRequest(PortletRequest request, String key, String value) {\n+        Map<String, Set<String>> customMap = getCustomMapFromRequest(request, key, value);\n+        return customMap.entrySet().stream()\n+                .collect(Collectors.toMap(Map.Entry::getKey,\n+                        e -> {\n+                            try {\n+                                if(!isNotEmpty(e.getValue()) && e.getValue().size() == 1) {\n+                                    return e.getValue().stream()\n+                                            .findFirst()\n+                                            .orElse(\"\");\n+                                }\n+                                ObjectMapper mapper = new ObjectMapper();", "originalCommit": "0aefcf6d40a7e69238da5dcdc76e33e0a095ed7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM3Njk2Mw==", "url": "https://github.com/eclipse/sw360/pull/890#discussion_r451376963", "bodyText": "Thanks a lot, @oheger-bosch\nI have refactored the code.", "author": "AlbertHjy", "createdAt": "2020-07-08T08:35:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwOTcyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk2MDg2Mw==", "url": "https://github.com/eclipse/sw360/pull/890#discussion_r451960863", "bodyText": "@albert-hjy, thanks for the update. This looks better now performance-wise. I am, however, a bit worried that the lazy initialization approach is not thread-safe. As the utils class is called during request execution, there will be multiple threads involved, and we should take care that this is safe.\nThe easiest solution is certainly to get rid off the lazy initialization, make the ObjectMapper field final, and create the mapper directly.\nIf you prefer lazy initialization, then I would suggest using the Lazy initialization holder class idiom for static fields.\nPlease also refer to J. Bloch, \"Effective Java\", 3rd edition, item 83 \"Use lazy initialization judiciously\"", "author": "oheger-bosch", "createdAt": "2020-07-09T04:45:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwOTcyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA5NzkwMQ==", "url": "https://github.com/eclipse/sw360/pull/890#discussion_r452097901", "bodyText": "@oheger-bosch , thanks a lot. Agree that it's unnecessary to use lazy initialization here. I have changed ObjectMapper field final.", "author": "AlbertHjy", "createdAt": "2020-07-09T09:47:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwOTcyOA=="}], "type": "inlineReview", "revised_code": {"commit": "9a59c0db9d4207318e3b4986f565c340979fc83d", "chunk": "diff --git a/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/common/PortletUtils.java b/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/common/PortletUtils.java\nindex 8f0fa135..a0425936 100644\n--- a/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/common/PortletUtils.java\n+++ b/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/common/PortletUtils.java\n\n@@ -382,8 +383,7 @@ public class PortletUtils {\n                                             .findFirst()\n                                             .orElse(\"\");\n                                 }\n-                                ObjectMapper mapper = new ObjectMapper();\n-                                return mapper.writeValueAsString(e.getValue());\n+                                return getObjectMapper().writeValueAsString(e.getValue());\n                             } catch (JsonProcessingException ex) {\n                                 return e.getValue().stream()\n                                         .findFirst()\n"}}, {"oid": "9a59c0db9d4207318e3b4986f565c340979fc83d", "url": "https://github.com/eclipse/sw360/commit/9a59c0db9d4207318e3b4986f565c340979fc83d", "message": "feat(ExternalIds): Code refactoring\n\nSigned-off-by: He, Albert <albert.he@sap.com>", "committedDate": "2020-07-08T06:43:36Z", "type": "commit"}, {"oid": "aa7b890c32f3d4fc409631447ca4d70b137d0060", "url": "https://github.com/eclipse/sw360/commit/aa7b890c32f3d4fc409631447ca4d70b137d0060", "message": "feat(ExternalIds): Make the PortletUtils.objectMapper field final to make it thread-safe\n\nSigned-off-by: He, Albert <albert.he@sap.com>", "committedDate": "2020-07-09T09:43:30Z", "type": "commit"}, {"oid": "bb2f29501e7044d9af297d5a93768cce979f2989", "url": "https://github.com/eclipse/sw360/commit/bb2f29501e7044d9af297d5a93768cce979f2989", "message": "feat(ExternalIds): 1. Handle EscapeXml for external id value, 2. Fix \"Upon update of existing project or Component or Release without any change in External IDs\"\n\nSigned-off-by: He, Albert <albert.he@sap.com>", "committedDate": "2020-07-17T12:51:04Z", "type": "commit"}, {"oid": "a9cd81a9be122ae6a8616c50de4cf01bd68a9057", "url": "https://github.com/eclipse/sw360/commit/a9cd81a9be122ae6a8616c50de4cf01bd68a9057", "message": "Rebase from master", "committedDate": "2020-07-20T00:06:45Z", "type": "commit"}, {"oid": "0049dd3b6e46cf051594a4020f277713f305ed42", "url": "https://github.com/eclipse/sw360/commit/0049dd3b6e46cf051594a4020f277713f305ed42", "message": "feat(ExternalIds): Add byExternalIds views migration scripts, and upgrade to new version 11.0.0-SNAPSHOT\n\nSigned-off-by: He, Albert <albert.he@sap.com>", "committedDate": "2020-07-20T01:06:04Z", "type": "commit"}, {"oid": "753d3889a24e0d9e0e2f6dc92853d0ec3673f1c2", "url": "https://github.com/eclipse/sw360/commit/753d3889a24e0d9e0e2f6dc92853d0ec3673f1c2", "message": "feat(ExternalIds): Add comments to Component, Release and Project rest APIs\n\nSigned-off-by: He, Albert <albert.he@sap.com>", "committedDate": "2020-07-20T06:15:56Z", "type": "commit"}, {"oid": "2442e1f221b93f37016b22374cff4d64bdf43276", "url": "https://github.com/eclipse/sw360/commit/2442e1f221b93f37016b22374cff4d64bdf43276", "message": "feat(ExternalIds): Change file permission and fix typo of special character\n\nSigned-off-by: He, Albert <albert.he@sap.com>", "committedDate": "2020-07-20T13:07:05Z", "type": "commit"}, {"oid": "30ce4db178c93c10dcf415cd0c0f9b6f9f60ddd7", "url": "https://github.com/eclipse/sw360/commit/30ce4db178c93c10dcf415cd0c0f9b6f9f60ddd7", "message": "feat(ExternalIds): Change file permission.\n\nSigned-off-by: He, Albert <albert.he@sap.com>", "committedDate": "2020-07-20T13:23:11Z", "type": "commit"}]}