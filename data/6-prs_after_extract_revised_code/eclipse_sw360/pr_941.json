{"pr_number": 941, "pr_title": "Feature(rest)(thrift): introduction of healthcheck", "pr_createdAt": "2020-08-07T07:00:35Z", "pr_url": "https://github.com/eclipse/sw360/pull/941", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEyNTMyNw==", "url": "https://github.com/eclipse/sw360/pull/941#discussion_r472125327", "bodyText": "Since here it is creating a child class of HashSet, adding DB ,finally creating unmodifiable set.\nIt can be achieved by ImmutableSet\n    public static final Set<String> DATABASES_TO_CHECK = ImmutableSet.of(DatabaseSettings.COUCH_DB_ATTACHMENTS,\n    \t\tDatabaseSettings.COUCH_DB_DATABASE,\n    \t\tDatabaseSettings.COUCH_DB_USERS);", "author": "JaideepPalit", "createdAt": "2020-08-18T12:02:20Z", "path": "backend/src/src-health/src/main/java/org/eclipse/sw360/health/db/HealthDatabaseHandler.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright Bosch.IO 2020.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.sw360.health.db;\n+\n+import org.eclipse.sw360.datahandler.common.DatabaseSettings;\n+import org.eclipse.sw360.datahandler.couchdb.DatabaseInstance;\n+import org.eclipse.sw360.datahandler.thrift.health.Health;\n+import org.eclipse.sw360.datahandler.thrift.health.Status;\n+import org.ektorp.http.HttpClient;\n+\n+import java.net.MalformedURLException;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.function.Supplier;\n+\n+public class HealthDatabaseHandler {\n+\n+    private final DatabaseInstance db;\n+\n+    public static final Set<String> DATABASES_TO_CHECK = Collections.unmodifiableSet(new HashSet<String>() {\n+        {\n+            add(DatabaseSettings.COUCH_DB_ATTACHMENTS);\n+            add(DatabaseSettings.COUCH_DB_DATABASE);\n+            add(DatabaseSettings.COUCH_DB_USERS);\n+        }\n+    });", "originalCommit": "0e33f6c47bdd41c968b04e0cf24206b5e07c5126", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1937616a7426e9ad4e84dcaecb25977deca0725e", "chunk": "diff --git a/backend/src/src-health/src/main/java/org/eclipse/sw360/health/db/HealthDatabaseHandler.java b/backend/src/src-health/src/main/java/org/eclipse/sw360/health/db/HealthDatabaseHandler.java\ndeleted file mode 100644\nindex 797c1e60..00000000\n--- a/backend/src/src-health/src/main/java/org/eclipse/sw360/health/db/HealthDatabaseHandler.java\n+++ /dev/null\n\n@@ -1,62 +0,0 @@\n-/*\n- * Copyright Bosch.IO 2020.\n- *\n- * This program and the accompanying materials are made\n- * available under the terms of the Eclipse Public License 2.0\n- * which is available at https://www.eclipse.org/legal/epl-2.0/\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.eclipse.sw360.health.db;\n-\n-import org.eclipse.sw360.datahandler.common.DatabaseSettings;\n-import org.eclipse.sw360.datahandler.couchdb.DatabaseInstance;\n-import org.eclipse.sw360.datahandler.thrift.health.Health;\n-import org.eclipse.sw360.datahandler.thrift.health.Status;\n-import org.ektorp.http.HttpClient;\n-\n-import java.net.MalformedURLException;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Set;\n-import java.util.function.Supplier;\n-\n-public class HealthDatabaseHandler {\n-\n-    private final DatabaseInstance db;\n-\n-    public static final Set<String> DATABASES_TO_CHECK = Collections.unmodifiableSet(new HashSet<String>() {\n-        {\n-            add(DatabaseSettings.COUCH_DB_ATTACHMENTS);\n-            add(DatabaseSettings.COUCH_DB_DATABASE);\n-            add(DatabaseSettings.COUCH_DB_USERS);\n-        }\n-    });\n-\n-    public HealthDatabaseHandler(Supplier<HttpClient> httpClient) throws MalformedURLException {\n-        db = new DatabaseInstance(httpClient.get());\n-    }\n-\n-    public Health getHealth() {\n-        final Health health = new Health().setDetails(new HashMap<>());\n-\n-        for (String database : DATABASES_TO_CHECK) {\n-            try {\n-                if (!db.checkIfDbExists(database)) {\n-                    health.getDetails().put(database, String.format(\"The database '%s' does not exist.\", database));\n-                }\n-            } catch (Exception e) {\n-                health.getDetails().put(database, e.getMessage());\n-            }\n-        }\n-\n-        if (health.getDetails().isEmpty()) {\n-            return health.setStatus(Status.UP);\n-        } else {\n-            return health.getDetails().size() == DATABASES_TO_CHECK.size() ?\n-                    health.setStatus(Status.DOWN) :\n-                    health.setStatus(Status.ERROR);\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEyNzI3OQ==", "url": "https://github.com/eclipse/sw360/pull/941#discussion_r472127279", "bodyText": "Would it be possible to have narrower level of Exception.\nBecause Exception is very broad and include NullPointerException ... as well.", "author": "JaideepPalit", "createdAt": "2020-08-18T12:06:07Z", "path": "backend/src/src-health/src/main/java/org/eclipse/sw360/health/db/HealthDatabaseHandler.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright Bosch.IO 2020.\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.sw360.health.db;\n+\n+import org.eclipse.sw360.datahandler.common.DatabaseSettings;\n+import org.eclipse.sw360.datahandler.couchdb.DatabaseInstance;\n+import org.eclipse.sw360.datahandler.thrift.health.Health;\n+import org.eclipse.sw360.datahandler.thrift.health.Status;\n+import org.ektorp.http.HttpClient;\n+\n+import java.net.MalformedURLException;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.function.Supplier;\n+\n+public class HealthDatabaseHandler {\n+\n+    private final DatabaseInstance db;\n+\n+    public static final Set<String> DATABASES_TO_CHECK = Collections.unmodifiableSet(new HashSet<String>() {\n+        {\n+            add(DatabaseSettings.COUCH_DB_ATTACHMENTS);\n+            add(DatabaseSettings.COUCH_DB_DATABASE);\n+            add(DatabaseSettings.COUCH_DB_USERS);\n+        }\n+    });\n+\n+    public HealthDatabaseHandler(Supplier<HttpClient> httpClient) throws MalformedURLException {\n+        db = new DatabaseInstance(httpClient.get());\n+    }\n+\n+    public Health getHealth() {\n+        final Health health = new Health().setDetails(new HashMap<>());\n+\n+        for (String database : DATABASES_TO_CHECK) {\n+            try {\n+                if (!db.checkIfDbExists(database)) {\n+                    health.getDetails().put(database, String.format(\"The database '%s' does not exist.\", database));\n+                }\n+            } catch (Exception e) {", "originalCommit": "0e33f6c47bdd41c968b04e0cf24206b5e07c5126", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1937616a7426e9ad4e84dcaecb25977deca0725e", "chunk": "diff --git a/backend/src/src-health/src/main/java/org/eclipse/sw360/health/db/HealthDatabaseHandler.java b/backend/src/src-health/src/main/java/org/eclipse/sw360/health/db/HealthDatabaseHandler.java\ndeleted file mode 100644\nindex 797c1e60..00000000\n--- a/backend/src/src-health/src/main/java/org/eclipse/sw360/health/db/HealthDatabaseHandler.java\n+++ /dev/null\n\n@@ -1,62 +0,0 @@\n-/*\n- * Copyright Bosch.IO 2020.\n- *\n- * This program and the accompanying materials are made\n- * available under the terms of the Eclipse Public License 2.0\n- * which is available at https://www.eclipse.org/legal/epl-2.0/\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-package org.eclipse.sw360.health.db;\n-\n-import org.eclipse.sw360.datahandler.common.DatabaseSettings;\n-import org.eclipse.sw360.datahandler.couchdb.DatabaseInstance;\n-import org.eclipse.sw360.datahandler.thrift.health.Health;\n-import org.eclipse.sw360.datahandler.thrift.health.Status;\n-import org.ektorp.http.HttpClient;\n-\n-import java.net.MalformedURLException;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Set;\n-import java.util.function.Supplier;\n-\n-public class HealthDatabaseHandler {\n-\n-    private final DatabaseInstance db;\n-\n-    public static final Set<String> DATABASES_TO_CHECK = Collections.unmodifiableSet(new HashSet<String>() {\n-        {\n-            add(DatabaseSettings.COUCH_DB_ATTACHMENTS);\n-            add(DatabaseSettings.COUCH_DB_DATABASE);\n-            add(DatabaseSettings.COUCH_DB_USERS);\n-        }\n-    });\n-\n-    public HealthDatabaseHandler(Supplier<HttpClient> httpClient) throws MalformedURLException {\n-        db = new DatabaseInstance(httpClient.get());\n-    }\n-\n-    public Health getHealth() {\n-        final Health health = new Health().setDetails(new HashMap<>());\n-\n-        for (String database : DATABASES_TO_CHECK) {\n-            try {\n-                if (!db.checkIfDbExists(database)) {\n-                    health.getDetails().put(database, String.format(\"The database '%s' does not exist.\", database));\n-                }\n-            } catch (Exception e) {\n-                health.getDetails().put(database, e.getMessage());\n-            }\n-        }\n-\n-        if (health.getDetails().isEmpty()) {\n-            return health.setStatus(Status.UP);\n-        } else {\n-            return health.getDetails().size() == DATABASES_TO_CHECK.size() ?\n-                    health.setStatus(Status.DOWN) :\n-                    health.setStatus(Status.ERROR);\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNDI5Mg==", "url": "https://github.com/eclipse/sw360/pull/941#discussion_r472134292", "bodyText": "It would be good to have aSingleton here.\nSame for other places like in testcases.", "author": "JaideepPalit", "createdAt": "2020-08-18T12:19:31Z", "path": "rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/SW360RestHealthIndicator.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright Bosch.IO GmbH 2020\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+package org.eclipse.sw360.rest.resourceserver;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import org.apache.thrift.TException;\n+import org.eclipse.sw360.datahandler.common.DatabaseSettings;\n+import org.eclipse.sw360.datahandler.couchdb.DatabaseInstance;\n+import org.eclipse.sw360.datahandler.thrift.ThriftClients;\n+import org.eclipse.sw360.datahandler.thrift.health.HealthService;\n+import org.eclipse.sw360.datahandler.thrift.health.Status;\n+import org.springframework.boot.actuate.health.Health;\n+import org.springframework.boot.actuate.health.HealthIndicator;\n+import org.springframework.stereotype.Component;\n+\n+import java.net.MalformedURLException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Component\n+public class SW360RestHealthIndicator implements HealthIndicator {\n+    @Override\n+    public Health health() {\n+        List<Exception> exceptions = new ArrayList<>();\n+        RestState restState = check(exceptions);\n+        final String rest_state_detail = \"Rest State\";\n+        if (!restState.isUp()) {\n+            Health.Builder builderWithDetails = Health.down()\n+                    .withDetail(rest_state_detail, restState);\n+            for (Exception exception : exceptions) {\n+                builderWithDetails = builderWithDetails.withException(exception);\n+            }\n+            return builderWithDetails\n+                    .build();\n+        }\n+        return Health.up()\n+                .withDetail(rest_state_detail, restState)\n+                .build();\n+    }\n+\n+    private RestState check(List<Exception> exception) {\n+        RestState restState = new RestState();\n+        try {\n+            restState.isDbReachable = isDbReachable(exception);\n+        } catch (MalformedURLException e) {\n+            restState.isDbReachable = false;\n+            exception.add(e);\n+        }\n+        restState.isThriftReachable = isThriftReachable(exception);\n+        return restState;\n+    }\n+\n+    private boolean isDbReachable(List<Exception> exception) throws MalformedURLException {\n+        DatabaseInstance databaseInstance = makeDatabaseInstance();\n+        try {\n+            return databaseInstance.checkIfDbExists(DatabaseSettings.COUCH_DB_ATTACHMENTS);\n+        } catch (Exception e) {\n+            exception.add(e);\n+            return false;\n+        }\n+    }\n+\n+    private boolean isThriftReachable(List<Exception> exception) {\n+        HealthService.Iface healthClient = makeHealthClient();", "originalCommit": "0e33f6c47bdd41c968b04e0cf24206b5e07c5126", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYwMTczNQ==", "url": "https://github.com/eclipse/sw360/pull/941#discussion_r475601735", "bodyText": "I am doing it the way it is done in the rest of the code, except that I extracted the call new ThriftClients().makeHealthClient() into a separate function.\nWould you like me to not do it in a separate method?", "author": "neubs-bsi", "createdAt": "2020-08-24T13:32:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNDI5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjIyNDg3MQ==", "url": "https://github.com/eclipse/sw360/pull/941#discussion_r476224871", "bodyText": "The code is fine.\nI was trying to say, since thrift client wont change, maybe we can create a single HealthService.Iface object and reuse it.\nInstead of creating a new one with every request.\n    private static HealthService.Iface healthService;\n    protected HealthService.Iface makeHealthClient() {\n        if(healthService==null) {\n            healthService = new ThriftClients().makeHealthClient();\n        }\n        return healthService;\n    }", "author": "JaideepPalit", "createdAt": "2020-08-25T07:09:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNDI5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzExOTkxMg==", "url": "https://github.com/eclipse/sw360/pull/941#discussion_r477119912", "bodyText": "I was under the impression that this is not possible due to Thrift not being threadsafe.\nSince the calls are made via Spring we can't control the threads. Hence the client could be corrupted.\nSince I am not sure what exactly thrift does under the hood to its client in a thread I would opt for the safest option, which is to declare a new one for each thread.", "author": "neubs-bsi", "createdAt": "2020-08-26T08:18:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNDI5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1937616a7426e9ad4e84dcaecb25977deca0725e", "chunk": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/SW360RestHealthIndicator.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/SW360RestHealthIndicator.java\ndeleted file mode 100644\nindex 4588f1e0..00000000\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/SW360RestHealthIndicator.java\n+++ /dev/null\n\n@@ -1,107 +0,0 @@\n-/*\n- * Copyright Bosch.IO GmbH 2020\n- *\n- * This program and the accompanying materials are made\n- * available under the terms of the Eclipse Public License 2.0\n- * which is available at https://www.eclipse.org/legal/epl-2.0/\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-\n-package org.eclipse.sw360.rest.resourceserver;\n-\n-import com.fasterxml.jackson.annotation.JsonInclude;\n-import org.apache.thrift.TException;\n-import org.eclipse.sw360.datahandler.common.DatabaseSettings;\n-import org.eclipse.sw360.datahandler.couchdb.DatabaseInstance;\n-import org.eclipse.sw360.datahandler.thrift.ThriftClients;\n-import org.eclipse.sw360.datahandler.thrift.health.HealthService;\n-import org.eclipse.sw360.datahandler.thrift.health.Status;\n-import org.springframework.boot.actuate.health.Health;\n-import org.springframework.boot.actuate.health.HealthIndicator;\n-import org.springframework.stereotype.Component;\n-\n-import java.net.MalformedURLException;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-@Component\n-public class SW360RestHealthIndicator implements HealthIndicator {\n-    @Override\n-    public Health health() {\n-        List<Exception> exceptions = new ArrayList<>();\n-        RestState restState = check(exceptions);\n-        final String rest_state_detail = \"Rest State\";\n-        if (!restState.isUp()) {\n-            Health.Builder builderWithDetails = Health.down()\n-                    .withDetail(rest_state_detail, restState);\n-            for (Exception exception : exceptions) {\n-                builderWithDetails = builderWithDetails.withException(exception);\n-            }\n-            return builderWithDetails\n-                    .build();\n-        }\n-        return Health.up()\n-                .withDetail(rest_state_detail, restState)\n-                .build();\n-    }\n-\n-    private RestState check(List<Exception> exception) {\n-        RestState restState = new RestState();\n-        try {\n-            restState.isDbReachable = isDbReachable(exception);\n-        } catch (MalformedURLException e) {\n-            restState.isDbReachable = false;\n-            exception.add(e);\n-        }\n-        restState.isThriftReachable = isThriftReachable(exception);\n-        return restState;\n-    }\n-\n-    private boolean isDbReachable(List<Exception> exception) throws MalformedURLException {\n-        DatabaseInstance databaseInstance = makeDatabaseInstance();\n-        try {\n-            return databaseInstance.checkIfDbExists(DatabaseSettings.COUCH_DB_ATTACHMENTS);\n-        } catch (Exception e) {\n-            exception.add(e);\n-            return false;\n-        }\n-    }\n-\n-    private boolean isThriftReachable(List<Exception> exception) {\n-        HealthService.Iface healthClient = makeHealthClient();\n-        try {\n-            final org.eclipse.sw360.datahandler.thrift.health.Health health = healthClient.getHealth();\n-            if (health.getStatus().equals(Status.UP)) {\n-                return true;\n-            } else {\n-                exception.add(\n-                        new Exception(health.getStatus().toString(),\n-                                new Throwable(health.getDetails().toString())));\n-                return false;\n-            }\n-        } catch (TException e) {\n-            exception.add(e);\n-            return false;\n-        }\n-    }\n-\n-    protected HealthService.Iface makeHealthClient() {\n-        return new ThriftClients().makeHealthClient();\n-    }\n-\n-    protected DatabaseInstance makeDatabaseInstance() throws MalformedURLException {\n-        return new DatabaseInstance(DatabaseSettings.getConfiguredHttpClient().get());\n-    }\n-\n-    static class RestState {\n-        @JsonInclude\n-        public boolean isDbReachable;\n-\n-        @JsonInclude\n-        public boolean isThriftReachable;\n-        boolean isUp() {\n-            return isDbReachable && isThriftReachable;\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0MzMxOQ==", "url": "https://github.com/eclipse/sw360/pull/941#discussion_r472143319", "bodyText": "It would be good to use CustomException class like Sw360Exception", "author": "JaideepPalit", "createdAt": "2020-08-18T12:34:54Z", "path": "rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/SW360RestHealthIndicator.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright Bosch.IO GmbH 2020\n+ *\n+ * This program and the accompanying materials are made\n+ * available under the terms of the Eclipse Public License 2.0\n+ * which is available at https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+package org.eclipse.sw360.rest.resourceserver;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import org.apache.thrift.TException;\n+import org.eclipse.sw360.datahandler.common.DatabaseSettings;\n+import org.eclipse.sw360.datahandler.couchdb.DatabaseInstance;\n+import org.eclipse.sw360.datahandler.thrift.ThriftClients;\n+import org.eclipse.sw360.datahandler.thrift.health.HealthService;\n+import org.eclipse.sw360.datahandler.thrift.health.Status;\n+import org.springframework.boot.actuate.health.Health;\n+import org.springframework.boot.actuate.health.HealthIndicator;\n+import org.springframework.stereotype.Component;\n+\n+import java.net.MalformedURLException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Component\n+public class SW360RestHealthIndicator implements HealthIndicator {\n+    @Override\n+    public Health health() {\n+        List<Exception> exceptions = new ArrayList<>();\n+        RestState restState = check(exceptions);\n+        final String rest_state_detail = \"Rest State\";\n+        if (!restState.isUp()) {\n+            Health.Builder builderWithDetails = Health.down()\n+                    .withDetail(rest_state_detail, restState);\n+            for (Exception exception : exceptions) {\n+                builderWithDetails = builderWithDetails.withException(exception);\n+            }\n+            return builderWithDetails\n+                    .build();\n+        }\n+        return Health.up()\n+                .withDetail(rest_state_detail, restState)\n+                .build();\n+    }\n+\n+    private RestState check(List<Exception> exception) {\n+        RestState restState = new RestState();\n+        try {\n+            restState.isDbReachable = isDbReachable(exception);\n+        } catch (MalformedURLException e) {\n+            restState.isDbReachable = false;\n+            exception.add(e);\n+        }\n+        restState.isThriftReachable = isThriftReachable(exception);\n+        return restState;\n+    }\n+\n+    private boolean isDbReachable(List<Exception> exception) throws MalformedURLException {\n+        DatabaseInstance databaseInstance = makeDatabaseInstance();\n+        try {\n+            return databaseInstance.checkIfDbExists(DatabaseSettings.COUCH_DB_ATTACHMENTS);\n+        } catch (Exception e) {\n+            exception.add(e);\n+            return false;\n+        }\n+    }\n+\n+    private boolean isThriftReachable(List<Exception> exception) {\n+        HealthService.Iface healthClient = makeHealthClient();\n+        try {\n+            final org.eclipse.sw360.datahandler.thrift.health.Health health = healthClient.getHealth();\n+            if (health.getStatus().equals(Status.UP)) {\n+                return true;\n+            } else {\n+                exception.add(\n+                        new Exception(health.getStatus().toString(),", "originalCommit": "0e33f6c47bdd41c968b04e0cf24206b5e07c5126", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM0ODcyMA==", "url": "https://github.com/eclipse/sw360/pull/941#discussion_r477348720", "bodyText": "The Exception here is a formality that is needed because in this version of the spring boot actuator it does not take throwables in its exception status. The actual exception will unfortunately be wrapped within this exception already.\nI don't think making this a custom exception adds information to the exception, which should be the goal of custom exceptions.", "author": "neubs-bsi", "createdAt": "2020-08-26T14:32:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0MzMxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "1937616a7426e9ad4e84dcaecb25977deca0725e", "chunk": "diff --git a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/SW360RestHealthIndicator.java b/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/SW360RestHealthIndicator.java\ndeleted file mode 100644\nindex 4588f1e0..00000000\n--- a/rest/resource-server/src/main/java/org/eclipse/sw360/rest/resourceserver/SW360RestHealthIndicator.java\n+++ /dev/null\n\n@@ -1,107 +0,0 @@\n-/*\n- * Copyright Bosch.IO GmbH 2020\n- *\n- * This program and the accompanying materials are made\n- * available under the terms of the Eclipse Public License 2.0\n- * which is available at https://www.eclipse.org/legal/epl-2.0/\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- */\n-\n-package org.eclipse.sw360.rest.resourceserver;\n-\n-import com.fasterxml.jackson.annotation.JsonInclude;\n-import org.apache.thrift.TException;\n-import org.eclipse.sw360.datahandler.common.DatabaseSettings;\n-import org.eclipse.sw360.datahandler.couchdb.DatabaseInstance;\n-import org.eclipse.sw360.datahandler.thrift.ThriftClients;\n-import org.eclipse.sw360.datahandler.thrift.health.HealthService;\n-import org.eclipse.sw360.datahandler.thrift.health.Status;\n-import org.springframework.boot.actuate.health.Health;\n-import org.springframework.boot.actuate.health.HealthIndicator;\n-import org.springframework.stereotype.Component;\n-\n-import java.net.MalformedURLException;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-@Component\n-public class SW360RestHealthIndicator implements HealthIndicator {\n-    @Override\n-    public Health health() {\n-        List<Exception> exceptions = new ArrayList<>();\n-        RestState restState = check(exceptions);\n-        final String rest_state_detail = \"Rest State\";\n-        if (!restState.isUp()) {\n-            Health.Builder builderWithDetails = Health.down()\n-                    .withDetail(rest_state_detail, restState);\n-            for (Exception exception : exceptions) {\n-                builderWithDetails = builderWithDetails.withException(exception);\n-            }\n-            return builderWithDetails\n-                    .build();\n-        }\n-        return Health.up()\n-                .withDetail(rest_state_detail, restState)\n-                .build();\n-    }\n-\n-    private RestState check(List<Exception> exception) {\n-        RestState restState = new RestState();\n-        try {\n-            restState.isDbReachable = isDbReachable(exception);\n-        } catch (MalformedURLException e) {\n-            restState.isDbReachable = false;\n-            exception.add(e);\n-        }\n-        restState.isThriftReachable = isThriftReachable(exception);\n-        return restState;\n-    }\n-\n-    private boolean isDbReachable(List<Exception> exception) throws MalformedURLException {\n-        DatabaseInstance databaseInstance = makeDatabaseInstance();\n-        try {\n-            return databaseInstance.checkIfDbExists(DatabaseSettings.COUCH_DB_ATTACHMENTS);\n-        } catch (Exception e) {\n-            exception.add(e);\n-            return false;\n-        }\n-    }\n-\n-    private boolean isThriftReachable(List<Exception> exception) {\n-        HealthService.Iface healthClient = makeHealthClient();\n-        try {\n-            final org.eclipse.sw360.datahandler.thrift.health.Health health = healthClient.getHealth();\n-            if (health.getStatus().equals(Status.UP)) {\n-                return true;\n-            } else {\n-                exception.add(\n-                        new Exception(health.getStatus().toString(),\n-                                new Throwable(health.getDetails().toString())));\n-                return false;\n-            }\n-        } catch (TException e) {\n-            exception.add(e);\n-            return false;\n-        }\n-    }\n-\n-    protected HealthService.Iface makeHealthClient() {\n-        return new ThriftClients().makeHealthClient();\n-    }\n-\n-    protected DatabaseInstance makeDatabaseInstance() throws MalformedURLException {\n-        return new DatabaseInstance(DatabaseSettings.getConfiguredHttpClient().get());\n-    }\n-\n-    static class RestState {\n-        @JsonInclude\n-        public boolean isDbReachable;\n-\n-        @JsonInclude\n-        public boolean isThriftReachable;\n-        boolean isUp() {\n-            return isDbReachable && isThriftReachable;\n-        }\n-    }\n-}\n"}}, {"oid": "1937616a7426e9ad4e84dcaecb25977deca0725e", "url": "https://github.com/eclipse/sw360/commit/1937616a7426e9ad4e84dcaecb25977deca0725e", "message": "feat(rest): introduce health endpoint\n\nIssue: #896\n\nInclude spring-boot-starter-actuator for a health endpoint\n\nThis introduces a possibility to get simple health\ninformation by calling <rest-api-url>/health.\n\nThe configurations to application.yml to ensure all\nhealth information is displayed.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:56:14Z", "type": "commit"}, {"oid": "44a31e8a6091875961f8d9d0f66f3e781d035359", "url": "https://github.com/eclipse/sw360/commit/44a31e8a6091875961f8d9d0f66f3e781d035359", "message": "feat(rest): introduce db check as a health indicator.\n\nIssue: #896\n\nWith a health indicator a rest state is introduced that has two\nstates that need to be checked.\nThe DB check ensures that a connection to the attachment database is\nsuccessfull. The Thrift Check is still in progress.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:56:14Z", "type": "commit"}, {"oid": "7eae42525ac1b0ce90faa4e3b24a8c8fadf4bf21", "url": "https://github.com/eclipse/sw360/commit/7eae42525ac1b0ce90faa4e3b24a8c8fadf4bf21", "message": "Feat(thrift): Add health to thrift type definitions\n\nIssue: #896\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:56:14Z", "type": "commit"}, {"oid": "9e1cbf084481c1b1f3fcc364abd5e9c5dd435fe3", "url": "https://github.com/eclipse/sw360/commit/9e1cbf084481c1b1f3fcc364abd5e9c5dd435fe3", "message": "feat(thrift):Add handler and servlet of health to backend src\n\nIssue: #896\n\nThis includes the database handler, which checks if all\nnecessary db's exist.\n\nTests for the handler are included\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:56:14Z", "type": "commit"}, {"oid": "ac64bf8b2634f222f5e01ec0ebaa4cc9f3804ed9", "url": "https://github.com/eclipse/sw360/commit/ac64bf8b2634f222f5e01ec0ebaa4cc9f3804ed9", "message": "feat(rest): add new thrift client to health indicator\n\nIssue: #896\n\nThis includes adding a make method to the thrift clients.\nNow the rest health indicator can check the state of the\nthrift health client.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "182944a9697f0031bcb0c4cacc07b376e7281b1c", "url": "https://github.com/eclipse/sw360/commit/182944a9697f0031bcb0c4cacc07b376e7281b1c", "message": "feat(thirft): Include html content for thrift.\n\nIssue: #896\n\nFor the start return a basic welcome page.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "15ed38117e31a2b2d4d07f14ca52fcd5d14cbc71", "url": "https://github.com/eclipse/sw360/commit/15ed38117e31a2b2d4d07f14ca52fcd5d14cbc71", "message": "test(rest): Add tests for SW360RestHealthIndicator\n\nIssue: #896\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "351728115f5645e29fd9e9cc15c176cbb51d62a4", "url": "https://github.com/eclipse/sw360/commit/351728115f5645e29fd9e9cc15c176cbb51d62a4", "message": "refactor(rest): resthealthindicator\n\nIssue: #896\n\nSuperflous code was removed and simplified.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "83983defbdedc54dd79ac5b2769ecea73057de58", "url": "https://github.com/eclipse/sw360/commit/83983defbdedc54dd79ac5b2769ecea73057de58", "message": "fix(rest): Working rest health call\n\nIssue: #896\n\nThe state in this commit represent a state in which a successful\nup call can be made to the rest api and both the database and\nthe thrift are checked for health.\n\nTests are extended to test thrift health.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "6433ffdb5338642a42f82b1d372649feb58bc783", "url": "https://github.com/eclipse/sw360/commit/6433ffdb5338642a42f82b1d372649feb58bc783", "message": "fix(rest): Add dirty context to resource health indicator test\n\nIssue: #896\n\nSince per SpringBootTest class the context gets loaded only\nonce, the result of previous test somehow seem to modify the\napplication context. This solution was used:\nhttps://stackoverflow.com/a/13288671/6466630\n\nIt is not a problem of the cache. Introducing a\nNoOpCacheManager which should simply take cache items\nwithout storing them, did not solve the problem.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "4d336e07affd2fdb0c702a7c0299bc8e45979d54", "url": "https://github.com/eclipse/sw360/commit/4d336e07affd2fdb0c702a7c0299bc8e45979d54", "message": "refactor(rest): Clean up application context.\n\nIssue: #896\n\nAdded description for the context-path as a help for people\nusing the application yaml as a template for their own\nSW360 instance.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "27b5aab0e1d934233eed1623861cd52e755ac838", "url": "https://github.com/eclipse/sw360/commit/27b5aab0e1d934233eed1623861cd52e755ac838", "message": "fix(thrift): make set unmodifiable\n\nIssue: #896\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "24f8fac50d9d80b0c3e94cbb1bf293a492d72098", "url": "https://github.com/eclipse/sw360/commit/24f8fac50d9d80b0c3e94cbb1bf293a492d72098", "message": "fix(rest): make throwable local variable\n\nIssue: #896\n\nThis avoids a potential memory leak, since field was\nnot emptied after a loop.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "36a29194f997d6ab7398fe0d20a409b2379f40b3", "url": "https://github.com/eclipse/sw360/commit/36a29194f997d6ab7398fe0d20a409b2379f40b3", "message": "refactor(rest): refactor check variables to be final static\n\nIssue: #896\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "62b6c43648b5c131963f624428b488a20f5580f1", "url": "https://github.com/eclipse/sw360/commit/62b6c43648b5c131963f624428b488a20f5580f1", "message": "fix(rest): variables in health indicator now thread safe\n\nIssue: #896\n\nthis also removes the lazy initialization.\nBefore the variables had a setter method which made them\nnon-thread-safe.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "592774bd17efe0eb58be6513ed0ba50205ff267f", "url": "https://github.com/eclipse/sw360/commit/592774bd17efe0eb58be6513ed0ba50205ff267f", "message": "refactor(rest): move management flag to test properties\n\nIssue: #896\n\nWith this the tests can still be done to check if all the\ninformation would be delivered if so desired, but they are\nnot in the main application.yaml where they might expose\nadditional security risks.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "435495691602e113b7313f7e571447e0f704cade", "url": "https://github.com/eclipse/sw360/commit/435495691602e113b7313f7e571447e0f704cade", "message": "refactor(rest): change throwable list to list of exceptions\n\nIssue: #896\n\nThis way, there is no need to create a new exception containing\nthe throwable.\n\nIn a newer spring boot version it would be possible to directly\ngive throwables.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "a47f5d668a1290ca7d91b376a09cb115a2b57a95", "url": "https://github.com/eclipse/sw360/commit/a47f5d668a1290ca7d91b376a09cb115a2b57a95", "message": "fix(test): add missing db mock to failing rest health test\n\nIssue: closes #896\n\ndue to existing test db, without a mock this test does not\nreturn a status 503 since it finds a db.\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-24T06:59:50Z", "type": "commit"}, {"oid": "3a0c8ecc75b717831352090e163b2263bffff6cf", "url": "https://github.com/eclipse/sw360/commit/3a0c8ecc75b717831352090e163b2263bffff6cf", "message": "Refactor(health): changes to include review comments\n\nrefactor(health): add proper indentation\n\nrefactor(rest): remove compile from actuator scope\n\nrefactor(health): change to immutableset\n\nRefactor(health): exception was specified for db exists check\n\nrefactor(rest): delete left comments\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-26T14:35:07Z", "type": "commit"}, {"oid": "3a0c8ecc75b717831352090e163b2263bffff6cf", "url": "https://github.com/eclipse/sw360/commit/3a0c8ecc75b717831352090e163b2263bffff6cf", "message": "Refactor(health): changes to include review comments\n\nrefactor(health): add proper indentation\n\nrefactor(rest): remove compile from actuator scope\n\nrefactor(health): change to immutableset\n\nRefactor(health): exception was specified for db exists check\n\nrefactor(rest): delete left comments\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-08-26T14:35:07Z", "type": "forcePushed"}, {"oid": "4daaf265ba4adbbba5244553b2d5f9fafa211372", "url": "https://github.com/eclipse/sw360/commit/4daaf265ba4adbbba5244553b2d5f9fafa211372", "message": "doc(health): added documentation for health\n\nRelates to #896\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-09-03T08:22:22Z", "type": "commit"}, {"oid": "4daaf265ba4adbbba5244553b2d5f9fafa211372", "url": "https://github.com/eclipse/sw360/commit/4daaf265ba4adbbba5244553b2d5f9fafa211372", "message": "doc(health): added documentation for health\n\nRelates to #896\n\nSigned-off-by: Stephanie Neubauer <Stephanie.Neubauer@bosch.io>", "committedDate": "2020-09-03T08:22:22Z", "type": "forcePushed"}]}