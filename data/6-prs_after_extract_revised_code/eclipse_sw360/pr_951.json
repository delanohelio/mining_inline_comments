{"pr_number": 951, "pr_title": "fix(ui): Fixed download license disclosure error upon selection of missing attchmnt", "pr_createdAt": "2020-08-12T07:56:25Z", "pr_url": "https://github.com/eclipse/sw360/pull/951", "timeline": [{"oid": "7f47dc9bc30b9bca1904b0ef498882dd2a7b4538", "url": "https://github.com/eclipse/sw360/commit/7f47dc9bc30b9bca1904b0ef498882dd2a7b4538", "message": "fix(ui): Fixed download license disclosure error upon selection of corrupted attachment\n\nIssue: #950\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-08-19T06:42:48Z", "type": "forcePushed"}, {"oid": "ce286ec9bb032c48e7ab349eecbbde78d5ac1b7c", "url": "https://github.com/eclipse/sw360/commit/ce286ec9bb032c48e7ab349eecbbde78d5ac1b7c", "message": "fix(ui): Fixed download license disclosure error upon selection of corrupted attachment\n\nIssue: #950\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-08-19T07:27:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzMDcwNg==", "url": "https://github.com/eclipse/sw360/pull/951#discussion_r473630706", "bodyText": "Define yes as a constant and reuse in Line 451 as well", "author": "JaideepPalit", "createdAt": "2020-08-20T06:06:36Z", "path": "frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java", "diffHunk": "@@ -1223,13 +1277,27 @@ private void prepareLicenseInfo(RenderRequest request, RenderResponse response)\n \n                 storePathsMapInRequest(request, mappedProjectLinks);\n                 storeAttachmentUsageCountInRequest(request, mappedProjectLinks, UsageData.licenseInfo(new LicenseInfoUsage(Sets.newHashSet())));\n+                if (showAttchmntSessionError != null && \"yes\".equals(showAttchmntSessionError)) {", "originalCommit": "ce286ec9bb032c48e7ab349eecbbde78d5ac1b7c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2f26c113731f321e08bc43e1be48fedb88a3c2ad", "chunk": "diff --git a/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java b/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\nindex 90977afb..803cacdd 100644\n--- a/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\n+++ b/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\n\n@@ -1277,12 +1281,12 @@ public class ProjectPortlet extends FossologyAwarePortlet {\n \n                 storePathsMapInRequest(request, mappedProjectLinks);\n                 storeAttachmentUsageCountInRequest(request, mappedProjectLinks, UsageData.licenseInfo(new LicenseInfoUsage(Sets.newHashSet())));\n-                if (showAttchmntSessionError != null && \"yes\".equals(showAttchmntSessionError)) {\n+                if (YES.equals(showAttchmntSessionError)) {\n                     request.setAttribute(PortalConstants.SHOW_ATTACHMENT_MISSING_ERROR, true);\n                     addCustomErrorMessageForMissingAttchmnt(ATTCHMENTS_ERROR_MSG + attachmentNames, request, response);\n                 }\n                 if (null != outputGenerator) {\n-                    request.setAttribute(\"licInfoSelectedOutputFormat\", outputGenerator);\n+                    request.setAttribute(\"lcInfoSelectedOutputFormat\", outputGenerator);\n                 }\n             } catch (TException e) {\n                 log.error(\"Error fetching project from backend!\", e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzMTk2NQ==", "url": "https://github.com/eclipse/sw360/pull/951#discussion_r473631965", "bodyText": "Since thriftClient wont be changing between request. It would be good to have a method which return a singleton thrift client wherever possible.", "author": "JaideepPalit", "createdAt": "2020-08-20T06:08:26Z", "path": "frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java", "diffHunk": "@@ -529,6 +544,41 @@ private void downloadLicenseInfo(ResourceRequest request, ResourceResponse respo\n         }\n     }\n \n+    private void downloadEmptyLicenseInfo(ResourceRequest request, ResourceResponse response, Project project, User user, String outputGenerator) throws TException, IOException {\n+        final LicenseInfoService.Iface licenseInfoClient = thriftClients.makeLicenseInfoClient();\n+        LicenseInfoFile licenseInfoFile = licenseInfoClient.getLicenseInfoFile(project, user, outputGenerator,\n+                Collections.emptyMap(), Collections.emptyMap(), \"\");\n+        sendLicenseInfoResponse(request, response, project, licenseInfoFile);\n+    }\n+\n+    private void verifyIfAttachmentsExists(ResourceRequest request, ResourceResponse response) throws IOException {\n+        String attachmentIdToFnames[] = request.getParameterValues(PortalConstants.ATTACHMENT_ID_TO_FILENAMES);\n+        AttachmentService.Iface attachmentClient = thriftClients.makeAttachmentClient();", "originalCommit": "ce286ec9bb032c48e7ab349eecbbde78d5ac1b7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxMjUwMQ==", "url": "https://github.com/eclipse/sw360/pull/951#discussion_r479912501", "bodyText": "I hope it's not in the context of this PR. would look good to do it in a independent PR as it might touch many files.?", "author": "smrutis1", "createdAt": "2020-08-31T06:06:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzMTk2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a33dd7426f209bcb8dccd37565a87fbed6ec9b7c", "chunk": "diff --git a/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java b/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\nindex 90977afb..26bd1ad6 100644\n--- a/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\n+++ b/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\n\n@@ -552,20 +539,54 @@ public class ProjectPortlet extends FossologyAwarePortlet {\n     }\n \n     private void verifyIfAttachmentsExists(ResourceRequest request, ResourceResponse response) throws IOException {\n-        String attachmentIdToFnames[] = request.getParameterValues(PortalConstants.ATTACHMENT_ID_TO_FILENAMES);\n+        String[] fileNameToAttchmntId = request.getParameterValues(PortalConstants.ATTACHMENT_ID_TO_FILENAMES);\n+        String[] selectedAttachmentsWithFullPaths = request\n+                .getParameterValues(PortalConstants.SELECTED_ATTACHMENTS_WITH_FULL_PATH);\n+        final String projectId = request.getParameter(PROJECT_ID);\n+\n+        Map<String, String> attchmntIdToFilename = Arrays.stream(fileNameToAttchmntId).map(elem -> elem.split(\":\"))\n+                .filter(elem -> elem.length == 2).collect(Collectors.toMap(elem -> elem[1], elem -> elem[0]));\n+\n         AttachmentService.Iface attachmentClient = thriftClients.makeAttachmentClient();\n         JSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n         Set<String> attachmntNames = new HashSet<String>();\n \n+        User user = UserCacheHolder.getUserFromRequest(request);\n+        ProjectService.Iface projClient = thriftClients.makeProjectClient();\n+        Project project = null;\n+        try {\n+            project = projClient.getProjectById(projectId, user);\n+        } catch (TException e) {\n+            log.error(\"Error getting project with id \" + projectId + \" and generator \", e);\n+            response.setProperty(ResourceResponse.HTTP_STATUS_CODE,\n+                    Integer.toString(HttpServletResponse.SC_INTERNAL_SERVER_ERROR));\n+            return;\n+        }\n+\n+        final String selectedProjectRelation = request.getParameter(PortalConstants.SELECTED_PROJECT_RELATIONS);\n+        List<String> selectedProjectRelationStrAsList = selectedProjectRelation == null ? Lists.newArrayList()\n+                : Arrays.asList(selectedProjectRelation.split(\",\"));\n+\n+        Set<ProjectRelationship> listOfSelectedProjectRelationships = selectedProjectRelationStrAsList.stream()\n+                .map(rel -> ThriftEnumUtils.stringToEnum(rel, ProjectRelationship.class)).filter(Objects::nonNull)\n+                .collect(Collectors.toSet());\n+\n+        Set<String> selectedAttachmentIdsWithPath = filterAttachmentSelectionOnProjectRelation(\n+                listOfSelectedProjectRelationships, selectedAttachmentsWithFullPaths, user, project);\n+\n+        Set<String> attachmentIds = selectedAttachmentIdsWithPath.stream().map(fullpath -> {\n+            String[] pathParts = fullpath.split(\":\");\n+            String attachmentId = pathParts[pathParts.length - 1];\n+            return attachmentId;\n+        }).collect(Collectors.toSet());\n+\n         try {\n-            for (String attchmntIdToFname : attachmentIdToFnames) {\n-                String attchmntName = attchmntIdToFname.split(\":\")[0];\n-                String attchmntId = attchmntIdToFname.split(\":\")[1];\n+            for (String attchmntId : attachmentIds) {\n                 try {\n                     attachmentClient.getAttachmentContent(attchmntId);\n                 } catch (SW360Exception sw360Exp) {\n                     if (sw360Exp.getErrorCode() == 404) {\n-                        attachmntNames.add(attchmntName);\n+                        attachmntNames.add(attchmntIdToFilename.get(attchmntId));\n                         log.error(\"Error: attachment not found\", sw360Exp);\n                     }\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzMjQxMQ==", "url": "https://github.com/eclipse/sw360/pull/951#discussion_r473632411", "bodyText": "Some typo in error msg", "author": "JaideepPalit", "createdAt": "2020-08-20T06:09:04Z", "path": "frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java", "diffHunk": "@@ -118,6 +120,7 @@\n     private static final String LICENSE_NAME_WITH_TEXT_ERROR = \"error\";\n     private static final String LICENSE_NAME_WITH_TEXT_FILE = \"file\";\n     private static final String CYCLIC_LINKED_PROJECT = \"Project cannot be created/updated due to cyclic linked project present. Cyclic Hierarchy : \";\n+    private static final String ATTCHMENTS_ERROR_MSG = \"Warning!! Attchments could not be opened-->\";", "originalCommit": "ce286ec9bb032c48e7ab349eecbbde78d5ac1b7c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2f26c113731f321e08bc43e1be48fedb88a3c2ad", "chunk": "diff --git a/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java b/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\nindex 90977afb..803cacdd 100644\n--- a/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\n+++ b/frontend/sw360-portlet/src/main/java/org/eclipse/sw360/portal/portlets/projects/ProjectPortlet.java\n\n@@ -120,7 +124,7 @@ public class ProjectPortlet extends FossologyAwarePortlet {\n     private static final String LICENSE_NAME_WITH_TEXT_ERROR = \"error\";\n     private static final String LICENSE_NAME_WITH_TEXT_FILE = \"file\";\n     private static final String CYCLIC_LINKED_PROJECT = \"Project cannot be created/updated due to cyclic linked project present. Cyclic Hierarchy : \";\n-    private static final String ATTCHMENTS_ERROR_MSG = \"Warning!! Attchments could not be opened-->\";\n+    private static final String ATTCHMENTS_ERROR_MSG = \"Warning!! Attachments could not be opened-->\";\n \n     // Project view datatables, index of columns\n     private static final int PROJECT_NO_SORT = -1;\n"}}, {"oid": "2f26c113731f321e08bc43e1be48fedb88a3c2ad", "url": "https://github.com/eclipse/sw360/commit/2f26c113731f321e08bc43e1be48fedb88a3c2ad", "message": "fix(ui): Fixed download license disclosure error upon selection of corrupted attachment\n\nIssue: #950\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-08-31T06:00:41Z", "type": "forcePushed"}, {"oid": "c3016e70d858176044761a09f76e312faee15dbf", "url": "https://github.com/eclipse/sw360/commit/c3016e70d858176044761a09f76e312faee15dbf", "message": "fix(ui): Fixed download license disclosure error upon selection of corrupted attachment\n\nIssue: #950\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-08-31T12:57:04Z", "type": "forcePushed"}, {"oid": "a33dd7426f209bcb8dccd37565a87fbed6ec9b7c", "url": "https://github.com/eclipse/sw360/commit/a33dd7426f209bcb8dccd37565a87fbed6ec9b7c", "message": "fix(ui): Fixed download license disclosure error upon selection of corrupted attachment\n\nIssue: #950\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-09-06T07:08:07Z", "type": "forcePushed"}, {"oid": "6b484677af2e168e1dfa2d89bd3500d50fa08003", "url": "https://github.com/eclipse/sw360/commit/6b484677af2e168e1dfa2d89bd3500d50fa08003", "message": "fix(ui): Fixed download license disclosure error upon selection of corrupted attachment\n\nIssue: #950\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-09-07T05:49:01Z", "type": "commit"}, {"oid": "6b484677af2e168e1dfa2d89bd3500d50fa08003", "url": "https://github.com/eclipse/sw360/commit/6b484677af2e168e1dfa2d89bd3500d50fa08003", "message": "fix(ui): Fixed download license disclosure error upon selection of corrupted attachment\n\nIssue: #950\n\nSigned-off-by: Smruti Sahoo <smruti.sahoo@siemens.com>", "committedDate": "2020-09-07T05:49:01Z", "type": "forcePushed"}]}