{"pr_number": 7436, "pr_title": "Note Editor - Fix Tab Order", "pr_createdAt": "2020-10-22T10:36:23Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/7436", "timeline": [{"oid": "e5d6206c7ea82b44423ca8275c3ffa0d7c036829", "url": "https://github.com/ankidroid/Anki-Android/commit/e5d6206c7ea82b44423ca8275c3ffa0d7c036829", "message": "Note Editor - Fix Tab Order\n\nAPI 26 introduces navigation clusters which means the layout works out the box\n\nhttps://developer.android.com/about/versions/oreo/android-8.0#kbnc\n\nFixes 7433", "committedDate": "2020-10-22T03:27:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTUzMw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7436#discussion_r510265533", "bodyText": "Interesting - I wonder how API31 / S will go for us :-)", "author": "mikehardy", "createdAt": "2020-10-22T15:42:28Z", "path": "AnkiDroid/src/androidTest/java/com/ichi2/anki/NoteEditorTest.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ *  Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it under\n+ *  the terms of the GNU General Public License as published by the Free Software\n+ *  Foundation; either version 3 of the License, or (at your option) any later\n+ *  version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ *  PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License along with\n+ *  this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki;\n+\n+import android.app.Activity;\n+import android.content.ComponentName;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.Build;\n+import android.view.KeyEvent;\n+import android.view.inputmethod.BaseInputConnection;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import androidx.annotation.NonNull;\n+import androidx.lifecycle.Lifecycle;\n+import androidx.test.core.app.ActivityScenario;\n+import androidx.test.ext.junit.rules.ActivityScenarioRule;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import static android.Manifest.permission.WRITE_EXTERNAL_STORAGE;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.not;\n+import static org.junit.Assume.assumeThat;\n+\n+@RunWith(androidx.test.ext.junit.runners.AndroidJUnit4.class)\n+public class NoteEditorTest {\n+\n+    @Rule public ActivityScenarioRule<NoteEditor> activityRule = new ActivityScenarioRule<>(getStartActivityIntent());\n+    @Rule public GrantPermissionRule mRuntimePermissionRule = GrantPermissionRule.grant(WRITE_EXTERNAL_STORAGE);\n+\n+    @NonNull\n+    private Intent getStartActivityIntent() {\n+        Intent intent = new Intent(getTargetContext(), NoteEditor.class);\n+        intent.setComponent(new ComponentName(getTargetContext(), NoteEditor.class));\n+        intent.putExtra(NoteEditor.EXTRA_CALLER, NoteEditor.CALLER_DECKPICKER);\n+        return intent;\n+    }\n+\n+    @Test\n+    public void testTabOrder() throws Throwable {\n+        // TODO: Look into these assumptions and see if they can be diagnosed - both work on my emulators.\n+        // If we fix them, we might be able to use instrumentation.sendKeyDownUpSync\n+        /*\n+        java.lang.AssertionError: Activity never becomes requested state \"[DESTROYED]\" (last lifecycle transition = \"PAUSED\")\n+        at androidx.test.core.app.ActivityScenario.waitForActivityToBecomeAnyOf(ActivityScenario.java:301)\n+         */\n+        assumeThat(\"Test fails on Travis API 25\", Build.VERSION.SDK_INT, not(is(25)));\n+        /*\n+        java.lang.AssertionError:\n+        Expected: is \"a\"\n+         */\n+        assumeThat(\"Test fails on Travis API 30\", Build.VERSION.SDK_INT, not(is(30)));", "originalCommit": "e5d6206c7ea82b44423ca8275c3ffa0d7c036829", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}