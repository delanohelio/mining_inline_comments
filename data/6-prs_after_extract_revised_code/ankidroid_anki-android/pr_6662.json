{"pr_number": 6662, "pr_title": "Handle Exception from FileProvider in crop", "pr_createdAt": "2020-07-11T16:21:07Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6662", "timeline": [{"oid": "2a5210731873ca37cc20cea3f01b37fcd1c1eae0", "url": "https://github.com/ankidroid/Anki-Android/commit/2a5210731873ca37cc20cea3f01b37fcd1c1eae0", "message": "Handle Exception from FileProvider in crop\n\nNot a fan of system APIs throwing RuntimeExceptions, they catch\nme out like this too frequently", "committedDate": "2020-07-11T16:20:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NDIwOA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6662#discussion_r453264208", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Timber.w(\"getUriForFile failed on %s - attempting fallback\", file);\n          \n          \n            \n                        Timber.w(e, \"getUriForFile failed on %s - attempting fallback\", file);", "author": "david-allison-1", "createdAt": "2020-07-12T04:06:49Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicImageFieldController.java", "diffHunk": "@@ -654,13 +654,15 @@ private void handleCropResult() {\n      */\n     private Uri getUriForFile(File file) {\n         Timber.d(\"getUriForFile() %s\", file);\n-        Uri uri;\n-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n-            uri = FileProvider.getUriForFile(mActivity, mActivity.getApplicationContext().getPackageName() + \".apkgfileprovider\", file);\n-        } else {\n-            uri = Uri.fromFile(file);\n+        try {\n+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n+                return FileProvider.getUriForFile(mActivity, mActivity.getApplicationContext().getPackageName() + \".apkgfileprovider\", file);\n+            }\n+        } catch (Exception e) {\n+            Timber.w(\"getUriForFile failed on %s - attempting fallback\", file);", "originalCommit": "2a5210731873ca37cc20cea3f01b37fcd1c1eae0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNDIwNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6662#discussion_r453324207", "bodyText": "@david-allison-1 are you thinking sendExceptionReport with some info if it happens? That's what I infer by \"telemetry\", and it might help", "author": "mikehardy", "createdAt": "2020-07-12T14:35:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NDIwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyNDgzMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6662#discussion_r453324832", "bodyText": "I added one semi-speculatively as a second commit along with the forgotten root exception to Timber, in a second commit", "author": "mikehardy", "createdAt": "2020-07-12T14:40:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NDIwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMzMDg4NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6662#discussion_r453330884", "bodyText": "and an exception report doesn't seem appropriate here if there's a valid fallback\n\nI don't think an exception report is the right mode of reporting here unless we can specify a \"only send if always send is checked\" - maybe that's the solution\nWe don't want to send an exception report if the operation succeeds due to corrective action as that's bad UX", "author": "david-allison-1", "createdAt": "2020-07-12T15:31:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NDIwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMzMDkzOA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6662#discussion_r453330938", "bodyText": "But, I don't think this should block the review regardless.", "author": "david-allison-1", "createdAt": "2020-07-12T15:31:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NDIwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk1NDM2Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6662#discussion_r453954367", "bodyText": "Good thinking, I re-pushed the second commit with a new \"only send the report if the user is set to autoaccept\" style, what do you think?", "author": "mikehardy", "createdAt": "2020-07-13T21:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI2NDIwOA=="}], "type": "inlineReview", "revised_code": {"commit": "47d25e2f007102c077caeb6a1fad95981e5d4af3", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicImageFieldController.java b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicImageFieldController.java\nindex dd5dbe2516..c18fa39f9c 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicImageFieldController.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/multimediacard/fields/BasicImageFieldController.java\n\n@@ -659,7 +659,8 @@ public class BasicImageFieldController extends FieldControllerBase implements IF\n                 return FileProvider.getUriForFile(mActivity, mActivity.getApplicationContext().getPackageName() + \".apkgfileprovider\", file);\n             }\n         } catch (Exception e) {\n-            Timber.w(\"getUriForFile failed on %s - attempting fallback\", file);\n+            AnkiDroidApp.sendExceptionReport(e, \"BasicImageFieldController\", \"Unexpected getUriForFile failure on \" + file);\n+            Timber.w(e, \"getUriForFile failed on %s - attempting fallback\", file);\n         }\n \n         return Uri.fromFile(file);\n"}}, {"oid": "47d25e2f007102c077caeb6a1fad95981e5d4af3", "url": "https://github.com/ankidroid/Anki-Android/commit/47d25e2f007102c077caeb6a1fad95981e5d4af3", "message": "Add telemetry to getUriForFile failures\n\nwe are not sure exactly how often this is happening or why, this\ntelemetry is diagnostic", "committedDate": "2020-07-12T14:42:01Z", "type": "forcePushed"}, {"oid": "330038b3fd72ad1c8e632a989dbf95005ae86690", "url": "https://github.com/ankidroid/Anki-Android/commit/330038b3fd72ad1c8e632a989dbf95005ae86690", "message": "Add telemetry to getUriForFile failures\n\nWe are not sure exactly how often this is happening or why, this\ntelemetry is diagnostic and only engages if user is set to auto-send\nreports so the UX isn't bad", "committedDate": "2020-07-13T21:47:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMyOTE1Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6662#discussion_r454329152", "bodyText": "nit: onlyAlwaysOn doesn't seem necessary. There's no reason to pass false.\nMaybe send[Silent/Unintrusive]ExceptionReport?", "author": "david-allison-1", "createdAt": "2020-07-14T12:45:33Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -342,6 +342,15 @@ public static void sendExceptionReport(Throwable e, String origin, String additi\n     }\n \n \n+    public static void sendExceptionReportConditionally(Throwable e, String origin, String additionalInfo, boolean onlyAlwaysOn) {", "originalCommit": "330038b3fd72ad1c8e632a989dbf95005ae86690", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5ODE3Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6662#discussion_r454398173", "bodyText": "I like that - when I began the API addition I was thinking I'd do the typical extra-optional-argument / chain others to it type deal then I as I thought about it since it touched Preferences and the others didn't, this one might be heavier so it should probably chain back to the existing API. Basically I waffled on it so it's chaining back and got a crap name. I'm going to reshape it to be the more standard pattern of API chaining into the one with more arguments and the new argument will be onlyIfSilent and get a good javadoc", "author": "mikehardy", "createdAt": "2020-07-14T14:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMyOTE1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a5b6597b8c0ca8ec015e5477be89e53d2239a7cf", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java b/AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java\nindex 22be27b898..639f603dfa 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java\n\n@@ -335,20 +335,24 @@ public class AnkiDroidApp extends MultiDexApplication {\n \n \n     public static void sendExceptionReport(Throwable e, String origin, String additionalInfo) {\n-        UsageAnalytics.sendAnalyticsException(e, false);\n-        ACRA.getErrorReporter().putCustomData(\"origin\", origin);\n-        ACRA.getErrorReporter().putCustomData(\"additionalInfo\", additionalInfo);\n-        ACRA.getErrorReporter().handleException(e);\n+        sendExceptionReport(e, origin, additionalInfo, false);\n     }\n \n \n-    public static void sendExceptionReportConditionally(Throwable e, String origin, String additionalInfo, boolean onlyAlwaysOn) {\n-        boolean alwaysAccept = getSharedPrefs(getInstance().getApplicationContext()).getBoolean(ACRA.PREF_ALWAYS_ACCEPT, false);\n-        if (onlyAlwaysOn && !alwaysAccept) {\n-            Timber.i(\"sendExceptionReportConditionally skipping report send, ACRA not set to always\");\n-            return;\n+    public static void sendExceptionReport(Throwable e, String origin, String additionalInfo, boolean onlyIfSilent) {\n+        UsageAnalytics.sendAnalyticsException(e, false);\n+\n+        if (onlyIfSilent) {\n+            boolean alwaysAccept = getSharedPrefs(getInstance().getApplicationContext()).getBoolean(ACRA.PREF_ALWAYS_ACCEPT, false);\n+            if (!alwaysAccept) {\n+                Timber.i(\"sendExceptionReport - onlyIfSilent true, but ACRA is not 'always accept'. Skipping report send.\");\n+                return;\n+            }\n         }\n-        sendExceptionReport(e, origin, additionalInfo);\n+\n+        ACRA.getErrorReporter().putCustomData(\"origin\", origin);\n+        ACRA.getErrorReporter().putCustomData(\"additionalInfo\", additionalInfo);\n+        ACRA.getErrorReporter().handleException(e);\n     }\n \n     /**\n"}}, {"oid": "a5b6597b8c0ca8ec015e5477be89e53d2239a7cf", "url": "https://github.com/ankidroid/Anki-Android/commit/a5b6597b8c0ca8ec015e5477be89e53d2239a7cf", "message": "Add telemetry to getUriForFile failures\n\nWe are not sure exactly how often this is happening or why, this\ntelemetry is diagnostic and only engages if user is set to auto-send\nreports so the UX isn't bad", "committedDate": "2020-07-14T15:20:55Z", "type": "commit"}, {"oid": "a5b6597b8c0ca8ec015e5477be89e53d2239a7cf", "url": "https://github.com/ankidroid/Anki-Android/commit/a5b6597b8c0ca8ec015e5477be89e53d2239a7cf", "message": "Add telemetry to getUriForFile failures\n\nWe are not sure exactly how often this is happening or why, this\ntelemetry is diagnostic and only engages if user is set to auto-send\nreports so the UX isn't bad", "committedDate": "2020-07-14T15:20:55Z", "type": "forcePushed"}]}