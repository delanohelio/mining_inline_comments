{"pr_number": 7592, "pr_title": "Import simplified", "pr_createdAt": "2020-11-01T01:35:16Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/7592", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NDM3OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515654379", "bodyText": "You don't need n. here", "author": "david-allison-1", "createdAt": "2020-11-01T18:22:10Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -217,7 +229,7 @@ private void _importNotes() {\n         int dupes = 0;\n         ArrayList<String> dupesIgnored = new ArrayList<>();\n         mDst.getDb().getDatabase().beginTransaction();\n-        try (Cursor cur = mSrc.getDb().getDatabase().query(\"select * from notes\", null)) {\n+        try (Cursor cur = mSrc.getDb().getDatabase().query(\"select n.id, n.guid, n.mid, n.mod, n.tags, n.flds, n.sfld, n.csum, n.flags, n.data  from notes n\", null)) {", "originalCommit": "ef146fae50fca42eed94ce8dd0187d954c770dcc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5NTYzNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515695635", "bodyText": "Removed", "author": "Arthur-Milchior", "createdAt": "2020-11-02T00:39:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NDM3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3374077c1da1e06edd372cb1c8ccc0f2df96fa1e", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex c8646eb962..f5a906b564 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -229,7 +235,7 @@ public class Anki2Importer extends Importer {\n         int dupes = 0;\n         ArrayList<String> dupesIgnored = new ArrayList<>();\n         mDst.getDb().getDatabase().beginTransaction();\n-        try (Cursor cur = mSrc.getDb().getDatabase().query(\"select n.id, n.guid, n.mid, n.mod, n.tags, n.flds, n.sfld, n.csum, n.flags, n.data  from notes n\", null)) {\n+        try (Cursor cur = mSrc.getDb().getDatabase().query(\"select id, guid, mid, mod, tags, flds, sfld, csum, flags, data  from notes\", null)) {\n             // Counters for progress updates\n             int total = cur.getCount();\n             boolean largeCollection = total > 200;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NDQ3NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515654475", "bodyText": "is private static final int GUID = 1; still used?", "author": "david-allison-1", "createdAt": "2020-11-01T18:23:30Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -71,7 +73,17 @@\n     private final boolean mAllowUpdate;\n     private boolean mDupeOnSchemaChange;\n \n-    private Map<String, Object[]> mNotes;\n+    private static class NoteTriple {", "originalCommit": "ef146fae50fca42eed94ce8dd0187d954c770dcc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5NTY1NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515695655", "bodyText": "Not", "author": "Arthur-Milchior", "createdAt": "2020-11-02T00:39:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NDQ3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "47624e718804198f11318052b2e24bacfdb027be", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex c8646eb962..1b3ed5c0c4 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -77,10 +83,10 @@ public class Anki2Importer extends Importer {\n         public final long mNid;\n         public final long mMid;\n         public final long mMod;\n-        public NoteTriple(long nid, long mid, long mod) {\n+        public NoteTriple(long nid, long mod, long mid) {\n             mNid = nid;\n-            mMid = mid;\n             mMod = mod;\n+            mMid = mid;\n         }\n     }\n     private Map<String, NoteTriple> mNotes;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NDkzMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515654932", "bodyText": "Use a char here - should be much faster (needs testing)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                    flds.replace(\"\\u001f\", \",\")));\n          \n          \n            \n                                                    flds.replace('\\u001f', ',')));", "author": "david-allison-1", "createdAt": "2020-11-01T18:27:19Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -226,48 +238,55 @@ private void _importNotes() {\n \n             while (cur.moveToNext()) {\n                 // turn the db result into a mutable list\n-                Object[] note = new Object[]{cur.getLong(0), cur.getString(1), cur.getLong(2),\n-                        cur.getLong(3), cur.getInt(4), cur.getString(5), cur.getString(6),\n-                        cur.getString(7), cur.getLong(8), cur.getInt(9), cur.getString(10)};\n-                boolean shouldAdd = _uniquifyNote(note);\n+                long id = cur.getLong(0);\n+                String guid = cur.getString(1);\n+                long mid = cur.getLong(2);\n+                long mod = cur.getLong(3);\n+                String tags = cur.getString(4);\n+                String flds = cur.getString(5);\n+                String sfld = cur.getString(6);\n+                long csum = cur.getLong(7);\n+                int flag = cur.getInt(8);\n+                String data = cur.getString(9);\n+\n+                Pair<Boolean, Long> shouldAddAndNewMid = _uniquifyNote(guid, mid);\n+                boolean shouldAdd = shouldAddAndNewMid.first;\n+                mid = shouldAddAndNewMid.second;\n                 if (shouldAdd) {\n                     // ensure id is unique\n-                    while (existing.contains(note[0])) {\n-                        note[0] = ((Long) note[0]) + 999;\n+                    while (existing.contains(id)) {\n+                        id += 999;\n                     }\n-                    existing.add((Long) note[0]);\n+                    existing.add(id);\n                     // bump usn\n-                    note[4] = usn;\n                     // update media references in case of dupes\n-                    note[6] = _mungeMedia((Long) note[MID], (String) note[6]);\n-                    add.add(note);\n-                    dirty.add((Long) note[0]);\n+                    flds = _mungeMedia(mid, flds);\n+                    add.add(new Object[]{id, guid, mid, mod, usn, tags, flds, sfld, csum, flag, data});\n+                    dirty.add(id);\n                     // note we have the added guid\n-                    mNotes.put((String) note[GUID], new Object[]{note[0], note[3], note[MID]});\n+                    mNotes.put(guid, new NoteTriple(id, mod, mid));\n                 } else {\n                     // a duplicate or changed schema - safe to update?\n                     dupes += 1;\n                     if (mAllowUpdate) {\n-                        Object[] n = mNotes.get(note[GUID]);\n-                        //todo: oldNid could be Long instead of long.\n-                        long oldNid = (Long) n[0];\n-                        long oldMod = (Long) n[1];\n-                        @NonNull Long oldMid = (Long) n[2];\n+                        NoteTriple n = mNotes.get(guid);\n+                        long oldNid = n.mNid;\n+                        long oldMod = n.mMod;\n+                        long oldMid = n.mMid;\n                         // will update if incoming note more recent\n-                        if (oldMod < (Long) note[MOD]) {\n+                        if (oldMod < mod) {\n                             // safe if note types identical\n-                            if (Utils.equals(oldMid, note[MID])) {\n+                            if (Utils.equals(oldMid, mid)) {\n                                 // incoming note should use existing id\n-                                note[0] = oldNid;\n-                                note[4] = usn;\n-                                note[6] = _mungeMedia((Long) note[MID], (String) note[6]);\n-                                update.add(note);\n-                                dirty.add((Long) note[0]);\n+                                id = oldNid;\n+                                flds = _mungeMedia(mid, flds);\n+                                update.add(new Object[]{id, guid, mid, mod, usn, tags, flds, sfld, csum, flag, data});\n+                                dirty.add(id);\n                             } else {\n                                 dupesIgnored.add(String.format(\"%s: %s\",\n                                         mCol.getModels().get(oldMid).getString(\"name\"),\n-                                        ((String) note[6]).replace(\"\\u001f\", \",\")));\n-                                mIgnoredGuids.put((String) note[GUID], true);\n+                                        flds.replace(\"\\u001f\", \",\")));", "originalCommit": "ef146fae50fca42eed94ce8dd0187d954c770dcc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5NTY3OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515695678", "bodyText": "#7598", "author": "Arthur-Milchior", "createdAt": "2020-11-02T00:39:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NDkzMg=="}], "type": "inlineReview", "revised_code": {"commit": "27c70cd85eb7e289f319607b3ddda376f422739c", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex c8646eb962..52ce00a52e 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -238,7 +244,7 @@ public class Anki2Importer extends Importer {\n \n             while (cur.moveToNext()) {\n                 // turn the db result into a mutable list\n-                long id = cur.getLong(0);\n+                long nid = cur.getLong(0);\n                 String guid = cur.getString(1);\n                 long mid = cur.getLong(2);\n                 long mod = cur.getLong(3);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NDk4Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515654983", "bodyText": "I'd prefer nid here, but implementer's choice", "author": "david-allison-1", "createdAt": "2020-11-01T18:27:49Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -226,48 +238,55 @@ private void _importNotes() {\n \n             while (cur.moveToNext()) {\n                 // turn the db result into a mutable list\n-                Object[] note = new Object[]{cur.getLong(0), cur.getString(1), cur.getLong(2),\n-                        cur.getLong(3), cur.getInt(4), cur.getString(5), cur.getString(6),\n-                        cur.getString(7), cur.getLong(8), cur.getInt(9), cur.getString(10)};\n-                boolean shouldAdd = _uniquifyNote(note);\n+                long id = cur.getLong(0);", "originalCommit": "ef146fae50fca42eed94ce8dd0187d954c770dcc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3NDU0NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515674544", "bodyText": "I prefered to use the database column\u2019s name out of consistency", "author": "Arthur-Milchior", "createdAt": "2020-11-01T21:31:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NDk4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5NTY5NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515695695", "bodyText": "changed to nid actually.", "author": "Arthur-Milchior", "createdAt": "2020-11-02T00:40:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NDk4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "27c70cd85eb7e289f319607b3ddda376f422739c", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex c8646eb962..52ce00a52e 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -238,7 +244,7 @@ public class Anki2Importer extends Importer {\n \n             while (cur.moveToNext()) {\n                 // turn the db result into a mutable list\n-                long id = cur.getLong(0);\n+                long nid = cur.getLong(0);\n                 String guid = cur.getString(1);\n                 long mid = cur.getLong(2);\n                 long mod = cur.getLong(3);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTE1Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515655156", "bodyText": "Reviewer note: note[4] = usn; is missing, but this is OK as we use the correct value", "author": "david-allison-1", "createdAt": "2020-11-01T18:29:31Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -226,48 +238,55 @@ private void _importNotes() {\n \n             while (cur.moveToNext()) {\n                 // turn the db result into a mutable list\n-                Object[] note = new Object[]{cur.getLong(0), cur.getString(1), cur.getLong(2),\n-                        cur.getLong(3), cur.getInt(4), cur.getString(5), cur.getString(6),\n-                        cur.getString(7), cur.getLong(8), cur.getInt(9), cur.getString(10)};\n-                boolean shouldAdd = _uniquifyNote(note);\n+                long id = cur.getLong(0);\n+                String guid = cur.getString(1);\n+                long mid = cur.getLong(2);\n+                long mod = cur.getLong(3);\n+                String tags = cur.getString(4);\n+                String flds = cur.getString(5);\n+                String sfld = cur.getString(6);\n+                long csum = cur.getLong(7);\n+                int flag = cur.getInt(8);\n+                String data = cur.getString(9);\n+\n+                Pair<Boolean, Long> shouldAddAndNewMid = _uniquifyNote(guid, mid);\n+                boolean shouldAdd = shouldAddAndNewMid.first;\n+                mid = shouldAddAndNewMid.second;\n                 if (shouldAdd) {\n                     // ensure id is unique\n-                    while (existing.contains(note[0])) {\n-                        note[0] = ((Long) note[0]) + 999;\n+                    while (existing.contains(id)) {\n+                        id += 999;\n                     }\n-                    existing.add((Long) note[0]);\n+                    existing.add(id);\n                     // bump usn\n-                    note[4] = usn;\n                     // update media references in case of dupes\n-                    note[6] = _mungeMedia((Long) note[MID], (String) note[6]);\n-                    add.add(note);\n-                    dirty.add((Long) note[0]);\n+                    flds = _mungeMedia(mid, flds);\n+                    add.add(new Object[]{id, guid, mid, mod, usn, tags, flds, sfld, csum, flag, data});\n+                    dirty.add(id);\n                     // note we have the added guid\n-                    mNotes.put((String) note[GUID], new Object[]{note[0], note[3], note[MID]});\n+                    mNotes.put(guid, new NoteTriple(id, mod, mid));\n                 } else {\n                     // a duplicate or changed schema - safe to update?\n                     dupes += 1;\n                     if (mAllowUpdate) {\n-                        Object[] n = mNotes.get(note[GUID]);\n-                        //todo: oldNid could be Long instead of long.\n-                        long oldNid = (Long) n[0];\n-                        long oldMod = (Long) n[1];\n-                        @NonNull Long oldMid = (Long) n[2];\n+                        NoteTriple n = mNotes.get(guid);\n+                        long oldNid = n.mNid;\n+                        long oldMod = n.mMod;\n+                        long oldMid = n.mMid;\n                         // will update if incoming note more recent\n-                        if (oldMod < (Long) note[MOD]) {\n+                        if (oldMod < mod) {\n                             // safe if note types identical\n-                            if (Utils.equals(oldMid, note[MID])) {\n+                            if (Utils.equals(oldMid, mid)) {\n                                 // incoming note should use existing id\n-                                note[0] = oldNid;\n-                                note[4] = usn;\n-                                note[6] = _mungeMedia((Long) note[MID], (String) note[6]);\n-                                update.add(note);\n-                                dirty.add((Long) note[0]);\n+                                id = oldNid;\n+                                flds = _mungeMedia(mid, flds);", "originalCommit": "ef146fae50fca42eed94ce8dd0187d954c770dcc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "27c70cd85eb7e289f319607b3ddda376f422739c", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex c8646eb962..52ce00a52e 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -238,7 +244,7 @@ public class Anki2Importer extends Importer {\n \n             while (cur.moveToNext()) {\n                 // turn the db result into a mutable list\n-                long id = cur.getLong(0);\n+                long nid = cur.getLong(0);\n                 String guid = cur.getString(1);\n                 long mid = cur.getLong(2);\n                 long mod = cur.getLong(3);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTQ3MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515655471", "bodyText": "much nicer!", "author": "david-allison-1", "createdAt": "2020-11-01T18:32:01Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -532,7 +548,7 @@ private void _importCards() {\n         try {\n             mDst.getDb().getDatabase().beginTransaction();\n             cur = mSrc.getDb().getDatabase().query(\n-                    \"select f.guid, f.mid, c.* from cards c, notes f \" +\n+                    \"select f.guid, c.id, c.did, c.ord, c.type, c.queue, c.due, c.ivl, c.factor, c.reps, c.lapses, c.left, c.odue, c.odid, c.flags, c.data from cards c, notes f \" +", "originalCommit": "ef146fae50fca42eed94ce8dd0187d954c770dcc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5NTc1NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515695754", "bodyText": "I do agree", "author": "Arthur-Milchior", "createdAt": "2020-11-02T00:40:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTQ3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "0d85154ba8ac29c7fd5ee9da8051c11ae6d11124", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex c8646eb962..7922ce70ac 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -545,11 +542,10 @@ public class Anki2Importer extends Importer {\n         final int thresExecRevlog = 1000;\n         int usn = mDst.usn();\n         long aheadBy = mSrc.getSched().getToday() - mDst.getSched().getToday();\n-        try {\n-            mDst.getDb().getDatabase().beginTransaction();\n-            cur = mSrc.getDb().getDatabase().query(\n+        mDst.getDb().getDatabase().beginTransaction();\n+        try (Cursor cur = mSrc.getDb().getDatabase().query(\n                     \"select f.guid, c.id, c.did, c.ord, c.type, c.queue, c.due, c.ivl, c.factor, c.reps, c.lapses, c.left, c.odue, c.odid, c.flags, c.data from cards c, notes f \" +\n-                    \"where c.nid = f.id\", null);\n+                    \"where c.nid = f.id\", null)) {\n \n             // Counters for progress updates\n             int total = cur.getCount();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTUyMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515655520", "bodyText": "What's a scid?", "author": "david-allison-1", "createdAt": "2020-11-01T18:32:24Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -542,74 +558,78 @@ private void _importCards() {\n             int i = 0;\n \n             while (cur.moveToNext()) {\n-                Object[] card = new Object[] { cur.getString(0), cur.getLong(1), cur.getLong(2),\n-                        cur.getLong(3), cur.getLong(4), cur.getInt(5), cur.getLong(6), cur.getInt(7),\n-                        cur.getInt(8), cur.getInt(9), cur.getLong(10), cur.getLong(11), cur.getLong(12),\n-                        cur.getInt(13), cur.getInt(14), cur.getInt(15), cur.getLong(16),\n-                        cur.getLong(17), cur.getInt(18), cur.getString(19) };\n-                String guid = (String) card[0];\n+                String guid = cur.getString(0);\n+                long scid = cur.getLong(1);", "originalCommit": "ef146fae50fca42eed94ce8dd0187d954c770dcc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3NzU0Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515677546", "bodyText": "The variable was named scid before and upstream, so I kept this name even if I don't understand it. I can change it", "author": "Arthur-Milchior", "createdAt": "2020-11-01T21:59:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTUyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5NTgwMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515695802", "bodyText": "My bad. scid was Source Card id, and as the name state, it should not have changed. So I separate it in scid and cid", "author": "Arthur-Milchior", "createdAt": "2020-11-02T00:40:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTUyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkxNDUxNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515914516", "bodyText": "a comment might be useful", "author": "david-allison-1", "createdAt": "2020-11-02T11:39:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTUyMA=="}], "type": "inlineReview", "revised_code": {"commit": "27c70cd85eb7e289f319607b3ddda376f422739c", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex c8646eb962..52ce00a52e 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -559,7 +565,7 @@ public class Anki2Importer extends Importer {\n \n             while (cur.moveToNext()) {\n                 String guid = cur.getString(0);\n-                long scid = cur.getLong(1);\n+                long cid = scid = cur.getLong(1);\n                 long did = cur.getLong(2);\n                 int ord = cur.getInt(3);\n                 @Consts.CARD_TYPE int type = cur.getInt(4);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTU2MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515655561", "bodyText": "Use the constants", "author": "david-allison-1", "createdAt": "2020-11-01T18:32:56Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -542,74 +558,78 @@ private void _importCards() {\n             int i = 0;\n \n             while (cur.moveToNext()) {\n-                Object[] card = new Object[] { cur.getString(0), cur.getLong(1), cur.getLong(2),\n-                        cur.getLong(3), cur.getLong(4), cur.getInt(5), cur.getLong(6), cur.getInt(7),\n-                        cur.getInt(8), cur.getInt(9), cur.getLong(10), cur.getLong(11), cur.getLong(12),\n-                        cur.getInt(13), cur.getInt(14), cur.getInt(15), cur.getLong(16),\n-                        cur.getLong(17), cur.getInt(18), cur.getString(19) };\n-                String guid = (String) card[0];\n+                String guid = cur.getString(0);\n+                long scid = cur.getLong(1);\n+                long did = cur.getLong(2);\n+                int ord = cur.getInt(3);\n+                @Consts.CARD_TYPE int type = cur.getInt(4);\n+                @Consts.CARD_QUEUE int queue = cur.getInt(5);\n+                long due = cur.getLong(6);\n+                long ivl = cur.getLong(7);\n+                long factor = cur.getLong(8);\n+                int reps = cur.getInt(9);\n+                int lapses = cur.getInt(10);\n+                int left = cur.getInt(11);\n+                long odue = cur.getLong(12);\n+                long odid = cur.getLong(13);\n+                int flags = cur.getInt(14);\n+                String data = cur.getString(15);\n+\n                 if (mIgnoredGuids.containsKey(guid)) {\n                     continue;\n                 }\n                 // does the card's note exist in dst col?\n                 if (!mNotes.containsKey(guid)) {\n                     continue;\n                 }\n-                Object[] dnid = mNotes.get(guid);\n+                NoteTriple dnid = mNotes.get(guid);\n                 // does the card already exist in the dst col?\n-                int ord = (Integer) card[5];\n                 if (mCards.containsKey(guid) && mCards.get(guid).containsKey(ord)) {\n                     // fixme: in future, could update if newer mod time\n                     continue;\n                 }\n-                // doesn't exist. strip off note info, and save src id for later\n-                Object[] oc = card;\n-                card = new Object[oc.length - 2];\n-                System.arraycopy(oc, 2, card, 0, card.length);\n-                long scid = (Long) card[0];\n                 // ensure the card id is unique\n-                while (existing.containsKey(card[0])) {\n-                    card[0] = (Long) card[0] + 999;\n+                while (existing.containsKey(scid)) {\n+                    scid += 999;\n                 }\n-                existing.put((Long) card[0], true);\n+                existing.put(scid, true);\n                 // update cid, nid, etc\n-                card[1] = mNotes.get(guid)[0];\n-                card[2] = _did((Long) card[2]);\n-                card[4] = mCol.getTime().intTime();\n-                card[5] = usn;\n+                long nid = mNotes.get(guid).mNid;\n+                did = _did(did);\n+                long mod = mCol.getTime().intTime();\n                 // review cards have a due date relative to collection\n-                if ((Integer) card[7] == 2 || (Integer) card[7] == 3 || (Integer) card[6] == 2) {\n-                    card[8] = (Long) card[8] - aheadBy;\n+                if (queue == 2 || queue == 3 || type == 2) {", "originalCommit": "ef146fae50fca42eed94ce8dd0187d954c770dcc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3NDY0Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515674642", "bodyText": "Done in another PR that can be merged first", "author": "Arthur-Milchior", "createdAt": "2020-11-01T21:33:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3NTcwOA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515675708", "bodyText": "#7590", "author": "Arthur-Milchior", "createdAt": "2020-11-01T21:43:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTU2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "27c70cd85eb7e289f319607b3ddda376f422739c", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex c8646eb962..52ce00a52e 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -559,7 +565,7 @@ public class Anki2Importer extends Importer {\n \n             while (cur.moveToNext()) {\n                 String guid = cur.getString(0);\n-                long scid = cur.getLong(1);\n+                long cid = scid = cur.getLong(1);\n                 long did = cur.getLong(2);\n                 int ord = cur.getInt(3);\n                 @Consts.CARD_TYPE int type = cur.getInt(4);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTU3Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515655573", "bodyText": "ditto", "author": "david-allison-1", "createdAt": "2020-11-01T18:33:09Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -542,74 +558,78 @@ private void _importCards() {\n             int i = 0;\n \n             while (cur.moveToNext()) {\n-                Object[] card = new Object[] { cur.getString(0), cur.getLong(1), cur.getLong(2),\n-                        cur.getLong(3), cur.getLong(4), cur.getInt(5), cur.getLong(6), cur.getInt(7),\n-                        cur.getInt(8), cur.getInt(9), cur.getLong(10), cur.getLong(11), cur.getLong(12),\n-                        cur.getInt(13), cur.getInt(14), cur.getInt(15), cur.getLong(16),\n-                        cur.getLong(17), cur.getInt(18), cur.getString(19) };\n-                String guid = (String) card[0];\n+                String guid = cur.getString(0);\n+                long scid = cur.getLong(1);\n+                long did = cur.getLong(2);\n+                int ord = cur.getInt(3);\n+                @Consts.CARD_TYPE int type = cur.getInt(4);\n+                @Consts.CARD_QUEUE int queue = cur.getInt(5);\n+                long due = cur.getLong(6);\n+                long ivl = cur.getLong(7);\n+                long factor = cur.getLong(8);\n+                int reps = cur.getInt(9);\n+                int lapses = cur.getInt(10);\n+                int left = cur.getInt(11);\n+                long odue = cur.getLong(12);\n+                long odid = cur.getLong(13);\n+                int flags = cur.getInt(14);\n+                String data = cur.getString(15);\n+\n                 if (mIgnoredGuids.containsKey(guid)) {\n                     continue;\n                 }\n                 // does the card's note exist in dst col?\n                 if (!mNotes.containsKey(guid)) {\n                     continue;\n                 }\n-                Object[] dnid = mNotes.get(guid);\n+                NoteTriple dnid = mNotes.get(guid);\n                 // does the card already exist in the dst col?\n-                int ord = (Integer) card[5];\n                 if (mCards.containsKey(guid) && mCards.get(guid).containsKey(ord)) {\n                     // fixme: in future, could update if newer mod time\n                     continue;\n                 }\n-                // doesn't exist. strip off note info, and save src id for later\n-                Object[] oc = card;\n-                card = new Object[oc.length - 2];\n-                System.arraycopy(oc, 2, card, 0, card.length);\n-                long scid = (Long) card[0];\n                 // ensure the card id is unique\n-                while (existing.containsKey(card[0])) {\n-                    card[0] = (Long) card[0] + 999;\n+                while (existing.containsKey(scid)) {\n+                    scid += 999;\n                 }\n-                existing.put((Long) card[0], true);\n+                existing.put(scid, true);\n                 // update cid, nid, etc\n-                card[1] = mNotes.get(guid)[0];\n-                card[2] = _did((Long) card[2]);\n-                card[4] = mCol.getTime().intTime();\n-                card[5] = usn;\n+                long nid = mNotes.get(guid).mNid;\n+                did = _did(did);\n+                long mod = mCol.getTime().intTime();\n                 // review cards have a due date relative to collection\n-                if ((Integer) card[7] == 2 || (Integer) card[7] == 3 || (Integer) card[6] == 2) {\n-                    card[8] = (Long) card[8] - aheadBy;\n+                if (queue == 2 || queue == 3 || type == 2) {\n+                    due -= aheadBy;\n                 }\n                 // odue needs updating too\n-                if ((Long) card[14] != 0) {\n-                    card[14] = (Long) card[14] - aheadBy;\n+                if (odue != 0) {\n+                    odue -= aheadBy;\n                 }\n                 // if odid true, convert card from filtered to normal\n-                if ((Long) card[15] != 0) {\n+                if (odid != 0) {\n                     // odid\n-                    card[15] = 0;\n+                    odid = 0;\n                     // odue\n-                    card[8] = card[14];\n-                    card[14] = 0;\n+                    due = odue;\n+                    odue = 0;\n                     // queue\n-                    if ((Integer) card[6] == 1) { // type\n-                        card[7] = 0;\n+                    if (type == 1) { // type", "originalCommit": "ef146fae50fca42eed94ce8dd0187d954c770dcc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "27c70cd85eb7e289f319607b3ddda376f422739c", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex c8646eb962..52ce00a52e 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -559,7 +565,7 @@ public class Anki2Importer extends Importer {\n \n             while (cur.moveToNext()) {\n                 String guid = cur.getString(0);\n-                long scid = cur.getLong(1);\n+                long cid = scid = cur.getLong(1);\n                 long did = cur.getLong(2);\n                 int ord = cur.getInt(3);\n                 @Consts.CARD_TYPE int type = cur.getInt(4);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTU4NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515655584", "bodyText": "ditto", "author": "david-allison-1", "createdAt": "2020-11-01T18:33:15Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -542,74 +558,78 @@ private void _importCards() {\n             int i = 0;\n \n             while (cur.moveToNext()) {\n-                Object[] card = new Object[] { cur.getString(0), cur.getLong(1), cur.getLong(2),\n-                        cur.getLong(3), cur.getLong(4), cur.getInt(5), cur.getLong(6), cur.getInt(7),\n-                        cur.getInt(8), cur.getInt(9), cur.getLong(10), cur.getLong(11), cur.getLong(12),\n-                        cur.getInt(13), cur.getInt(14), cur.getInt(15), cur.getLong(16),\n-                        cur.getLong(17), cur.getInt(18), cur.getString(19) };\n-                String guid = (String) card[0];\n+                String guid = cur.getString(0);\n+                long scid = cur.getLong(1);\n+                long did = cur.getLong(2);\n+                int ord = cur.getInt(3);\n+                @Consts.CARD_TYPE int type = cur.getInt(4);\n+                @Consts.CARD_QUEUE int queue = cur.getInt(5);\n+                long due = cur.getLong(6);\n+                long ivl = cur.getLong(7);\n+                long factor = cur.getLong(8);\n+                int reps = cur.getInt(9);\n+                int lapses = cur.getInt(10);\n+                int left = cur.getInt(11);\n+                long odue = cur.getLong(12);\n+                long odid = cur.getLong(13);\n+                int flags = cur.getInt(14);\n+                String data = cur.getString(15);\n+\n                 if (mIgnoredGuids.containsKey(guid)) {\n                     continue;\n                 }\n                 // does the card's note exist in dst col?\n                 if (!mNotes.containsKey(guid)) {\n                     continue;\n                 }\n-                Object[] dnid = mNotes.get(guid);\n+                NoteTriple dnid = mNotes.get(guid);\n                 // does the card already exist in the dst col?\n-                int ord = (Integer) card[5];\n                 if (mCards.containsKey(guid) && mCards.get(guid).containsKey(ord)) {\n                     // fixme: in future, could update if newer mod time\n                     continue;\n                 }\n-                // doesn't exist. strip off note info, and save src id for later\n-                Object[] oc = card;\n-                card = new Object[oc.length - 2];\n-                System.arraycopy(oc, 2, card, 0, card.length);\n-                long scid = (Long) card[0];\n                 // ensure the card id is unique\n-                while (existing.containsKey(card[0])) {\n-                    card[0] = (Long) card[0] + 999;\n+                while (existing.containsKey(scid)) {\n+                    scid += 999;\n                 }\n-                existing.put((Long) card[0], true);\n+                existing.put(scid, true);\n                 // update cid, nid, etc\n-                card[1] = mNotes.get(guid)[0];\n-                card[2] = _did((Long) card[2]);\n-                card[4] = mCol.getTime().intTime();\n-                card[5] = usn;\n+                long nid = mNotes.get(guid).mNid;\n+                did = _did(did);\n+                long mod = mCol.getTime().intTime();\n                 // review cards have a due date relative to collection\n-                if ((Integer) card[7] == 2 || (Integer) card[7] == 3 || (Integer) card[6] == 2) {\n-                    card[8] = (Long) card[8] - aheadBy;\n+                if (queue == 2 || queue == 3 || type == 2) {\n+                    due -= aheadBy;\n                 }\n                 // odue needs updating too\n-                if ((Long) card[14] != 0) {\n-                    card[14] = (Long) card[14] - aheadBy;\n+                if (odue != 0) {\n+                    odue -= aheadBy;\n                 }\n                 // if odid true, convert card from filtered to normal\n-                if ((Long) card[15] != 0) {\n+                if (odid != 0) {\n                     // odid\n-                    card[15] = 0;\n+                    odid = 0;\n                     // odue\n-                    card[8] = card[14];\n-                    card[14] = 0;\n+                    due = odue;\n+                    odue = 0;\n                     // queue\n-                    if ((Integer) card[6] == 1) { // type\n-                        card[7] = 0;\n+                    if (type == 1) { // type\n+                        queue = 0;\n                     } else {\n-                        card[7] = card[6];\n+                        queue = type;\n                     }\n                     // type\n-                    if ((Integer) card[6] == 1) {\n-                        card[6] = 0;\n+                    if (type == 1) {", "originalCommit": "ef146fae50fca42eed94ce8dd0187d954c770dcc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "27c70cd85eb7e289f319607b3ddda376f422739c", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex c8646eb962..52ce00a52e 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -559,7 +565,7 @@ public class Anki2Importer extends Importer {\n \n             while (cur.moveToNext()) {\n                 String guid = cur.getString(0);\n-                long scid = cur.getLong(1);\n+                long cid = scid = cur.getLong(1);\n                 long did = cur.getLong(2);\n                 int ord = cur.getInt(3);\n                 @Consts.CARD_TYPE int type = cur.getInt(4);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTc0Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515655747", "bodyText": "Needs second review - looks correct, but there's a lot going on here.", "author": "david-allison-1", "createdAt": "2020-11-01T18:34:35Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -542,74 +558,78 @@ private void _importCards() {\n             int i = 0;\n \n             while (cur.moveToNext()) {\n-                Object[] card = new Object[] { cur.getString(0), cur.getLong(1), cur.getLong(2),\n-                        cur.getLong(3), cur.getLong(4), cur.getInt(5), cur.getLong(6), cur.getInt(7),\n-                        cur.getInt(8), cur.getInt(9), cur.getLong(10), cur.getLong(11), cur.getLong(12),\n-                        cur.getInt(13), cur.getInt(14), cur.getInt(15), cur.getLong(16),\n-                        cur.getLong(17), cur.getInt(18), cur.getString(19) };\n-                String guid = (String) card[0];\n+                String guid = cur.getString(0);\n+                long scid = cur.getLong(1);\n+                long did = cur.getLong(2);\n+                int ord = cur.getInt(3);\n+                @Consts.CARD_TYPE int type = cur.getInt(4);\n+                @Consts.CARD_QUEUE int queue = cur.getInt(5);\n+                long due = cur.getLong(6);\n+                long ivl = cur.getLong(7);\n+                long factor = cur.getLong(8);\n+                int reps = cur.getInt(9);\n+                int lapses = cur.getInt(10);\n+                int left = cur.getInt(11);\n+                long odue = cur.getLong(12);\n+                long odid = cur.getLong(13);\n+                int flags = cur.getInt(14);\n+                String data = cur.getString(15);\n+\n                 if (mIgnoredGuids.containsKey(guid)) {\n                     continue;\n                 }\n                 // does the card's note exist in dst col?\n                 if (!mNotes.containsKey(guid)) {\n                     continue;\n                 }\n-                Object[] dnid = mNotes.get(guid);\n+                NoteTriple dnid = mNotes.get(guid);\n                 // does the card already exist in the dst col?\n-                int ord = (Integer) card[5];\n                 if (mCards.containsKey(guid) && mCards.get(guid).containsKey(ord)) {\n                     // fixme: in future, could update if newer mod time\n                     continue;\n                 }\n-                // doesn't exist. strip off note info, and save src id for later\n-                Object[] oc = card;\n-                card = new Object[oc.length - 2];\n-                System.arraycopy(oc, 2, card, 0, card.length);\n-                long scid = (Long) card[0];\n                 // ensure the card id is unique\n-                while (existing.containsKey(card[0])) {\n-                    card[0] = (Long) card[0] + 999;\n+                while (existing.containsKey(scid)) {\n+                    scid += 999;\n                 }\n-                existing.put((Long) card[0], true);\n+                existing.put(scid, true);\n                 // update cid, nid, etc\n-                card[1] = mNotes.get(guid)[0];\n-                card[2] = _did((Long) card[2]);\n-                card[4] = mCol.getTime().intTime();\n-                card[5] = usn;\n+                long nid = mNotes.get(guid).mNid;\n+                did = _did(did);\n+                long mod = mCol.getTime().intTime();\n                 // review cards have a due date relative to collection\n-                if ((Integer) card[7] == 2 || (Integer) card[7] == 3 || (Integer) card[6] == 2) {\n-                    card[8] = (Long) card[8] - aheadBy;\n+                if (queue == 2 || queue == 3 || type == 2) {\n+                    due -= aheadBy;\n                 }\n                 // odue needs updating too\n-                if ((Long) card[14] != 0) {\n-                    card[14] = (Long) card[14] - aheadBy;\n+                if (odue != 0) {\n+                    odue -= aheadBy;\n                 }\n                 // if odid true, convert card from filtered to normal\n-                if ((Long) card[15] != 0) {\n+                if (odid != 0) {\n                     // odid\n-                    card[15] = 0;\n+                    odid = 0;\n                     // odue\n-                    card[8] = card[14];\n-                    card[14] = 0;\n+                    due = odue;\n+                    odue = 0;\n                     // queue\n-                    if ((Integer) card[6] == 1) { // type\n-                        card[7] = 0;\n+                    if (type == 1) { // type\n+                        queue = 0;\n                     } else {\n-                        card[7] = card[6];\n+                        queue = type;\n                     }\n                     // type\n-                    if ((Integer) card[6] == 1) {\n-                        card[6] = 0;\n+                    if (type == 1) {\n+                        type = 0;\n                     }\n                 }\n-                cards.add(card);\n+                cards.add(new Object[]{scid, nid, did, ord, mod, usn, type, queue, due, ivl, factor, reps, lapses, left, odue, odid, flags, data});", "originalCommit": "ef146fae50fca42eed94ce8dd0187d954c770dcc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3NDc5OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515674799", "bodyText": "You may prefer to look commit by commit, where it should be easier to see why it\u2019s correct", "author": "Arthur-Milchior", "createdAt": "2020-11-01T21:34:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTc0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5NTkwNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515695907", "bodyText": "@mikehardy , I guess it'll be for you.\nYou may be happy, I provided stats to explain time gain here", "author": "Arthur-Milchior", "createdAt": "2020-11-02T00:41:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1NTc0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "27c70cd85eb7e289f319607b3ddda376f422739c", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex c8646eb962..52ce00a52e 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -559,7 +565,7 @@ public class Anki2Importer extends Importer {\n \n             while (cur.moveToNext()) {\n                 String guid = cur.getString(0);\n-                long scid = cur.getLong(1);\n+                long cid = scid = cur.getLong(1);\n                 long did = cur.getLong(2);\n                 int ord = cur.getInt(3);\n                 @Consts.CARD_TYPE int type = cur.getInt(4);\n"}}, {"oid": "27c70cd85eb7e289f319607b3ddda376f422739c", "url": "https://github.com/ankidroid/Anki-Android/commit/27c70cd85eb7e289f319607b3ddda376f422739c", "message": "NF: object to save note data", "committedDate": "2020-11-02T00:38:57Z", "type": "forcePushed"}, {"oid": "3374077c1da1e06edd372cb1c8ccc0f2df96fa1e", "url": "https://github.com/ankidroid/Anki-Android/commit/3374077c1da1e06edd372cb1c8ccc0f2df96fa1e", "message": "NF: object to save note data", "committedDate": "2020-11-02T00:39:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcxMDM3Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515710373", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            g                    mNotes.put(guid, new NoteTriple(nid, mod, mid));\n          \n          \n            \n                                 mNotes.put(guid, new NoteTriple(nid, mod, mid));", "author": "david-allison-1", "createdAt": "2020-11-02T02:17:10Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -233,48 +244,55 @@ private void _importNotes() {\n \n             while (cur.moveToNext()) {\n                 // turn the db result into a mutable list\n-                Object[] note = new Object[]{cur.getLong(0), cur.getString(1), cur.getLong(2),\n-                        cur.getLong(3), cur.getInt(4), cur.getString(5), cur.getString(6),\n-                        cur.getString(7), cur.getLong(8), cur.getInt(9), cur.getString(10)};\n-                boolean shouldAdd = _uniquifyNote(note);\n+                long nid = cur.getLong(0);\n+                String guid = cur.getString(1);\n+                long mid = cur.getLong(2);\n+                long mod = cur.getLong(3);\n+                String tags = cur.getString(4);\n+                String flds = cur.getString(5);\n+                String sfld = cur.getString(6);\n+                long csum = cur.getLong(7);\n+                int flag = cur.getInt(8);\n+                String data = cur.getString(9);\n+\n+                Pair<Boolean, Long> shouldAddAndNewMid = _uniquifyNote(guid, mid);\n+                boolean shouldAdd = shouldAddAndNewMid.first;\n+                mid = shouldAddAndNewMid.second;\n                 if (shouldAdd) {\n-                    // ensure id is unique\n-                    while (existing.contains(note[0])) {\n-                        note[0] = ((Long) note[0]) + 999;\n+                    // ensure nid is unique\n+                    while (existing.contains(nid)) {\n+                        nid += 999;\n                     }\n-                    existing.add((Long) note[0]);\n+                    existing.add(nid);\n                     // bump usn\n-                    note[4] = usn;\n                     // update media references in case of dupes\n-                    note[6] = _mungeMedia((Long) note[MID], (String) note[6]);\n-                    add.add(note);\n-                    dirty.add((Long) note[0]);\n+                    flds = _mungeMedia(mid, flds);\n+                    add.add(new Object[]{nid, guid, mid, mod, usn, tags, flds, sfld, csum, flag, data});\n+                    dirty.add(nid);\n                     // note we have the added guid\n-                    mNotes.put((String) note[GUID], new Object[]{note[0], note[3], note[MID]});\n+g                    mNotes.put(guid, new NoteTriple(nid, mod, mid));", "originalCommit": "3374077c1da1e06edd372cb1c8ccc0f2df96fa1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "264763ca0659a2b7b04dee352af9f0f35d2c0c5e", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex f5a906b564..453661604c 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -270,7 +270,7 @@ public class Anki2Importer extends Importer {\n                     add.add(new Object[]{nid, guid, mid, mod, usn, tags, flds, sfld, csum, flag, data});\n                     dirty.add(nid);\n                     // note we have the added guid\n-g                    mNotes.put(guid, new NoteTriple(nid, mod, mid));\n+                    mNotes.put(guid, new NoteTriple(nid, mod, mid));\n                 } else {\n                     // a duplicate or changed schema - safe to update?\n                     dupes += 1;\n"}}, {"oid": "264763ca0659a2b7b04dee352af9f0f35d2c0c5e", "url": "https://github.com/ankidroid/Anki-Android/commit/264763ca0659a2b7b04dee352af9f0f35d2c0c5e", "message": "NF: object to save note data", "committedDate": "2020-11-02T03:23:32Z", "type": "forcePushed"}, {"oid": "25276abc73022a0968211e55eec9e91f6155c3e5", "url": "https://github.com/ankidroid/Anki-Android/commit/25276abc73022a0968211e55eec9e91f6155c3e5", "message": "NF: object to save note data", "committedDate": "2020-11-02T05:28:45Z", "type": "forcePushed"}, {"oid": "47624e718804198f11318052b2e24bacfdb027be", "url": "https://github.com/ankidroid/Anki-Android/commit/47624e718804198f11318052b2e24bacfdb027be", "message": "NF: Long -> long", "committedDate": "2020-11-02T09:27:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg0Nzk3Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515847973", "bodyText": "Are these two used?", "author": "david-allison-1", "createdAt": "2020-11-02T09:42:22Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java", "diffHunk": "@@ -68,7 +70,6 @@\n         \"PMD.SwitchStmtsShouldHaveDefault\",\"PMD.CollapsibleIfStatements\",\"PMD.EmptyIfStmt\"})\n public class Anki2Importer extends Importer {\n \n-    private static final int GUID = 1;\n     private static final int MID = 2;", "originalCommit": "47624e718804198f11318052b2e24bacfdb027be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkwMzAzNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515903037", "bodyText": "Removed", "author": "Arthur-Milchior", "createdAt": "2020-11-02T11:16:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg0Nzk3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "a414ae9914b734a8c03216b67a401f93388c57da", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\nindex 1b3ed5c0c4..2bd5a421c8 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/importer/Anki2Importer.java\n\n@@ -70,9 +70,6 @@ import static com.ichi2.libanki.Consts.QUEUE_TYPE_REV;\n         \"PMD.SwitchStmtsShouldHaveDefault\",\"PMD.CollapsibleIfStatements\",\"PMD.EmptyIfStmt\"})\n public class Anki2Importer extends Importer {\n \n-    private static final int MID = 2;\n-    private static final int MOD = 3;\n-\n     private static final int MEDIAPICKLIMIT = 1024;\n \n     private final String mDeckPrefix;\n"}}, {"oid": "a414ae9914b734a8c03216b67a401f93388c57da", "url": "https://github.com/ankidroid/Anki-Android/commit/a414ae9914b734a8c03216b67a401f93388c57da", "message": "NF: Long -> long", "committedDate": "2020-11-02T11:16:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkxNDI3OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515914278", "bodyText": "?", "author": "david-allison-1", "createdAt": "2020-11-02T11:38:54Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "diffHunk": "@@ -435,7 +435,7 @@ public static String ids2str(JSONArray ids) {\n                         str.append(ids.getLong(i)).append(\",\");\n                     }\n                 } catch (JSONException e) {\n-                    Timber.e(e, \"ids2str :: JSONException\");\n+                    Timber.e(e, \"MIids2str :: JSONException\");", "originalCommit": "a414ae9914b734a8c03216b67a401f93388c57da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkyMTE2OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r515921169", "bodyText": "No idea how I added those lines", "author": "Arthur-Milchior", "createdAt": "2020-11-02T11:52:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkxNDI3OA=="}], "type": "inlineReview", "revised_code": {"commit": "7f03c669f4a732abe75c4bbe2400dd392b5c7354", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java\nindex 115042ceaf..1cc46b960e 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java\n\n@@ -435,7 +435,7 @@ public class Utils {\n                         str.append(ids.getLong(i)).append(\",\");\n                     }\n                 } catch (JSONException e) {\n-                    Timber.e(e, \"MIids2str :: JSONException\");\n+                    Timber.e(e, \"ids2str :: JSONException\");\n                 }\n             }\n         }\n"}}, {"oid": "7f03c669f4a732abe75c4bbe2400dd392b5c7354", "url": "https://github.com/ankidroid/Anki-Android/commit/7f03c669f4a732abe75c4bbe2400dd392b5c7354", "message": "NF: Long -> long", "committedDate": "2020-11-02T11:54:02Z", "type": "forcePushed"}, {"oid": "0d85154ba8ac29c7fd5ee9da8051c11ae6d11124", "url": "https://github.com/ankidroid/Anki-Android/commit/0d85154ba8ac29c7fd5ee9da8051c11ae6d11124", "message": "NF: Long -> long", "committedDate": "2020-11-03T18:07:00Z", "type": "forcePushed"}, {"oid": "250693315826fd22f4326a8afe97e675d4d91390", "url": "https://github.com/ankidroid/Anki-Android/commit/250693315826fd22f4326a8afe97e675d4d91390", "message": "NF: Long -> long", "committedDate": "2020-11-07T03:44:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTEwMDU0MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r519100541", "bodyText": "This is limited to API 24", "author": "david-allison-1", "createdAt": "2020-11-07T05:02:30Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java", "diffHunk": "@@ -706,21 +706,26 @@ public static void unzipAllFiles(ZipFile zipFile, String targetDirectory) throws\n \n     }\n \n+\n+    /**\n+     * @param zipFile A zip file\n+     * @param targetDirectory Directory in which to unzip some of the zipped field\n+     * @param zipEntries files of the zip folder to unzip\n+     * @param zipEntryToFilenameMap Renaming rules from name in zip file to name in the device\n+     * @throws IOException if the directory can't be created\n+     */\n     public static void unzipFiles(ZipFile zipFile, String targetDirectory, @NonNull String[] zipEntries,\n                                   @Nullable Map<String, String> zipEntryToFilenameMap) throws IOException {\n         File dir = new File(targetDirectory);\n         if (!dir.exists() && !dir.mkdirs()) {\n             throw new IOException(\"Failed to create target directory: \" + targetDirectory);\n         }\n-        if (zipEntryToFilenameMap == null) {\n-            zipEntryToFilenameMap = new HashMap<>();\n-        }\n         for (String requestedEntry : zipEntries) {\n             ZipArchiveEntry ze = zipFile.getEntry(requestedEntry);\n             if (ze != null) {\n                 String name = ze.getName();\n-                if (zipEntryToFilenameMap.containsKey(name)) {\n-                    name = zipEntryToFilenameMap.get(name);\n+                if (zipEntryToFilenameMap != null) {\n+                    name = zipEntryToFilenameMap.getOrDefault(name, name);", "originalCommit": "250693315826fd22f4326a8afe97e675d4d91390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTEwMjUyNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7592#discussion_r519102526", "bodyText": "Removed", "author": "Arthur-Milchior", "createdAt": "2020-11-07T05:12:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTEwMDU0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4ba8c42c44edda1ac1d39993f4fc6ea522a13a58", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java\nindex be1b7b5f52..f427533f15 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Utils.java\n\n@@ -720,12 +720,15 @@ public class Utils {\n         if (!dir.exists() && !dir.mkdirs()) {\n             throw new IOException(\"Failed to create target directory: \" + targetDirectory);\n         }\n+        if (zipEntryToFilenameMap == null) {\n+            zipEntryToFilenameMap = new HashMap<>();\n+        }\n         for (String requestedEntry : zipEntries) {\n             ZipArchiveEntry ze = zipFile.getEntry(requestedEntry);\n             if (ze != null) {\n                 String name = ze.getName();\n-                if (zipEntryToFilenameMap != null) {\n-                    name = zipEntryToFilenameMap.getOrDefault(name, name);\n+                if (zipEntryToFilenameMap.containsKey(name)) {\n+                    name = zipEntryToFilenameMap.get(name);\n                 }\n                 File destFile = new File(dir, name);\n                 if (!isInside(destFile, dir)) {\n"}}, {"oid": "4ba8c42c44edda1ac1d39993f4fc6ea522a13a58", "url": "https://github.com/ankidroid/Anki-Android/commit/4ba8c42c44edda1ac1d39993f4fc6ea522a13a58", "message": "NF: Long -> long", "committedDate": "2020-11-07T05:09:37Z", "type": "forcePushed"}, {"oid": "ce1841c6ef44d0b69b20971cdb35fd4845c09297", "url": "https://github.com/ankidroid/Anki-Android/commit/ce1841c6ef44d0b69b20971cdb35fd4845c09297", "message": "NF: _uniquifyNote more specific", "committedDate": "2020-11-09T17:01:48Z", "type": "commit"}, {"oid": "3808142218b14d3272d7fcdba6badd4e3f5252a5", "url": "https://github.com/ankidroid/Anki-Android/commit/3808142218b14d3272d7fcdba6badd4e3f5252a5", "message": "NF: import with named variable and correct type", "committedDate": "2020-11-09T17:01:56Z", "type": "commit"}, {"oid": "78ede2cbaa61b227e6cb686b20027d87940f9744", "url": "https://github.com/ankidroid/Anki-Android/commit/78ede2cbaa61b227e6cb686b20027d87940f9744", "message": "NF: query only needed values", "committedDate": "2020-11-09T17:01:56Z", "type": "commit"}, {"oid": "6f4cea1c4ae5c1183e4e3a324a233a13fac709c3", "url": "https://github.com/ankidroid/Anki-Android/commit/6f4cea1c4ae5c1183e4e3a324a233a13fac709c3", "message": "NF: object to save note data", "committedDate": "2020-11-09T17:01:56Z", "type": "commit"}, {"oid": "01c296e5f5f18f78b4e8335220c747469c2e71d9", "url": "https://github.com/ankidroid/Anki-Android/commit/01c296e5f5f18f78b4e8335220c747469c2e71d9", "message": "NF: unzipFiles commented", "committedDate": "2020-11-09T17:01:56Z", "type": "commit"}, {"oid": "71f74a25f62f785f55c684983a7b77716835def6", "url": "https://github.com/ankidroid/Anki-Android/commit/71f74a25f62f785f55c684983a7b77716835def6", "message": "NF: Long -> long", "committedDate": "2020-11-09T17:01:56Z", "type": "commit"}, {"oid": "71f74a25f62f785f55c684983a7b77716835def6", "url": "https://github.com/ankidroid/Anki-Android/commit/71f74a25f62f785f55c684983a7b77716835def6", "message": "NF: Long -> long", "committedDate": "2020-11-09T17:01:56Z", "type": "forcePushed"}]}