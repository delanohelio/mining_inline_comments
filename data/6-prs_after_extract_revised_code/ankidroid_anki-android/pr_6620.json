{"pr_number": 6620, "pr_title": "Synchronize deck name", "pr_createdAt": "2020-07-05T00:37:28Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6620", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxODQ5MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449818491", "bodyText": "Nit: better as a static factory method rather than a constructor.\nTry to avoid work in a constructor if at all possible.", "author": "david-allison-1", "createdAt": "2020-07-05T00:56:56Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -139,9 +139,65 @@\n     private Collection mCol;\n     private HashMap<Long, JSONObject> mDecks;\n     private HashMap<Long, JSONObject> mDconf;\n-    private HashMap<String, JSONObject> mNameMap;\n+    // Never access mNameMap directly. Uses byName\n+    private NameMap mNameMap;\n     private boolean mChanged;\n \n+    private class NameMap {\n+        private final HashMap<String, JSONObject> mNameMap;\n+\n+        public NameMap(java.util.Collection<JSONObject> decks) {", "originalCommit": "107920014b450b75a27010b52378e39001de350d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxOTc1Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449819757", "bodyText": "I know you have already talk about static factory, but I still don't get the point. Would you have a link", "author": "Arthur-Milchior", "createdAt": "2020-07-05T01:20:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxODQ5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyNDUzNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449824537", "bodyText": "https://blog.thecodewhisperer.com/permalink/your-constructors-are-completely-irrational\nhttp://misko.hevery.com/code-reviewers-guide/flaw-constructor-does-real-work/", "author": "david-allison-1", "createdAt": "2020-07-05T02:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgxODQ5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "1a4fc22d4180fcb52dae7a209e2ca1febeb97e15", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java\nindex 1c75123a0f..137107af66 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java\n\n@@ -139,65 +139,9 @@ public class Decks {\n     private Collection mCol;\n     private HashMap<Long, JSONObject> mDecks;\n     private HashMap<Long, JSONObject> mDconf;\n-    // Never access mNameMap directly. Uses byName\n-    private NameMap mNameMap;\n+    private HashMap<String, JSONObject> mNameMap;\n     private boolean mChanged;\n \n-    private class NameMap {\n-        private final HashMap<String, JSONObject> mNameMap;\n-\n-        public NameMap(java.util.Collection<JSONObject> decks) {\n-            mNameMap = new HashMap<>();\n-            for (JSONObject deck: decks) {\n-                add(deck.getString(\"name\"), deck);\n-            }\n-        }\n-\n-        public synchronized JSONObject get(String name) {\n-            String normalized = normalizeName(name);\n-            JSONObject deck = mNameMap.get(normalized);\n-            if (deck == null) {\n-                return null;\n-            }\n-            String foundName = deck.getString(\"name\");\n-            if (!equalName(name, foundName)) {\n-                AnkiDroidApp.sendExceptionReport(\"We looked for deck \\\"\" + name + \"\\\" and instead got deck \\\"\" + foundName + \"\\\".\", \"Decks - byName\");\n-            }\n-            return deck;\n-        }\n-\n-        private synchronized void add(String name, JSONObject g) {\n-            mNameMap.put(name, g);\n-            // Normalized name is also added because it's required to use it in by name.\n-            // Non normalized is kept for Parent\n-            mNameMap.put(normalizeName(name), g);\n-        }\n-\n-\n-        /**\n-           Remove name from nameMap if it is equal to expectedDeck.\n-\n-           It is possible that another deck has been given name `name`,\n-           in which case we don't want to remove it from nameMap.\n-\n-           E.g. if A is renamed to A::B and A::B already existed and get\n-           renamed to A::B::B, then we don't want to remove A::B from\n-           nameMap when A::B is renamed to A::B::B, since A::B is\n-           potentially the correct value.\n-        */\n-        private synchronized void remove(String name, JSONObject expectedDeck) {\n-            String[] names = new String[] {name, normalizeName(name)};\n-            for (String name_: names) {\n-                JSONObject currentDeck = byName(name_);\n-                if (currentDeck != null && currentDeck.getLong(\"id\") == expectedDeck.getLong(\"id\")) {\n-                    /* Remove name from mapping only if it still maps to\n-                     * expectedDeck. I.e. no other deck had been given this\n-                     * name yet. */\n-                    mNameMap.remove(name_);\n-                }\n-            }\n-        }\n-    }\n \n     /**\n      * Registry save/load\n"}}, {"oid": "052a9ecb34cae7269aa77918ae5050aa2b49c792", "url": "https://github.com/ankidroid/Anki-Android/commit/052a9ecb34cae7269aa77918ae5050aa2b49c792", "message": "NF: NameMap as a separate class\n\nThis should ensure nobody won't make the same error as last commit", "committedDate": "2020-07-05T03:20:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTczMw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449859733", "bodyText": "Nit: It'd be useful to either comment that the casing changes here (the deck in TEST_DECKS has the same casing as this string), or pick a deck name where it's immediately obvious that the casing is changed", "author": "david-allison-1", "createdAt": "2020-07-05T10:13:29Z", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.ichi2.libanki;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.libanki.sched.AbstractSched;\n+import com.ichi2.utils.Assert;\n+import com.ichi2.utils.JSONObject;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.List;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class DecksTest extends RobolectricTest {\n+    public static final String[] TEST_DECKS = {\n+            \"scxipjiyozczaaczoawo\",\n+            \"cmxieunwoogyxsctnJmv::abcdefgh::ZYXW\",\n+            \"cmxieunwoogyxsctNjmv::INSBGDS\",\n+    };\n+\n+    @Test\n+    public void ensureDeckList() {\n+        Decks decks = getCol().getDecks();\n+        //decks.load(\"{\\\"2\\\":{\\\"name\\\":\\\"A\\\", \\\"id\\\":2}, \\\"3\\\":{\\\"name\\\":\\\"a::B\\\", \\\"id\\\":2}}\", \"{}\");\n+        for (String deckName: TEST_DECKS) {\n+            addDeck(deckName);\n+        }\n+        JSONObject brokenDeck = decks.byName(\"cmxieunwoogyxsctNjmv::INSBGDS\");\n+        Asserts.notNull(brokenDeck,\"We should get deck with given name\");\n+        brokenDeck.put(\"name\", \"cmxieunwoogyxSctNjmv::INSBGDS\");", "originalCommit": "052a9ecb34cae7269aa77918ae5050aa2b49c792", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3MjI4Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449872282", "bodyText": "ok", "author": "Arthur-Milchior", "createdAt": "2020-07-05T12:30:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTczMw=="}], "type": "inlineReview", "revised_code": {"commit": "1a4fc22d4180fcb52dae7a209e2ca1febeb97e15", "chunk": "diff --git a/AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java b/AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java\nindex daf23a4ea9..5121032e0e 100644\n--- a/AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java\n+++ b/AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java\n\n@@ -15,22 +15,23 @@ import androidx.test.ext.junit.runners.AndroidJUnit4;\n \n @RunWith(AndroidJUnit4.class)\n public class DecksTest extends RobolectricTest {\n+    // Used in other class to populate decks.\n     public static final String[] TEST_DECKS = {\n             \"scxipjiyozczaaczoawo\",\n-            \"cmxieunwoogyxsctnJmv::abcdefgh::ZYXW\",\n-            \"cmxieunwoogyxsctNjmv::INSBGDS\",\n+            \"cmxieunwoogyxsctnjmv::abcdefgh::ZYXW\",\n+            \"cmxieunwoogyxsctnjmv::INSBGDS\",\n     };\n \n     @Test\n     public void ensureDeckList() {\n         Decks decks = getCol().getDecks();\n-        //decks.load(\"{\\\"2\\\":{\\\"name\\\":\\\"A\\\", \\\"id\\\":2}, \\\"3\\\":{\\\"name\\\":\\\"a::B\\\", \\\"id\\\":2}}\", \"{}\");\n         for (String deckName: TEST_DECKS) {\n             addDeck(deckName);\n         }\n-        JSONObject brokenDeck = decks.byName(\"cmxieunwoogyxsctNjmv::INSBGDS\");\n+        JSONObject brokenDeck = decks.byName(\"cmxieunwoogyxsctnjmv::INSBGDS\");\n         Asserts.notNull(brokenDeck,\"We should get deck with given name\");\n-        brokenDeck.put(\"name\", \"cmxieunwoogyxSctNjmv::INSBGDS\");\n+        // Changing the case. That could exists in an old collection or during sync.\n+        brokenDeck.put(\"name\", \"CMXIEUNWOOGYXSCTNJMV::INSBGDS\");\n         decks.save(brokenDeck);\n \n         decks.childMap();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTc5OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449859799", "bodyText": "Could you comment that this is used by external consumers", "author": "david-allison-1", "createdAt": "2020-07-05T10:14:31Z", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.ichi2.libanki;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.libanki.sched.AbstractSched;\n+import com.ichi2.utils.Assert;\n+import com.ichi2.utils.JSONObject;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.List;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class DecksTest extends RobolectricTest {\n+    public static final String[] TEST_DECKS = {", "originalCommit": "052a9ecb34cae7269aa77918ae5050aa2b49c792", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3MDAzMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449870030", "bodyText": "What is external consumer ?", "author": "Arthur-Milchior", "createdAt": "2020-07-05T12:06:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTc5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3MDY0MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449870641", "bodyText": "Something outside the class", "author": "david-allison-1", "createdAt": "2020-07-05T12:12:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTc5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg3MjI5Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6620#discussion_r449872292", "bodyText": "ok", "author": "Arthur-Milchior", "createdAt": "2020-07-05T12:30:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTc5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "1a4fc22d4180fcb52dae7a209e2ca1febeb97e15", "chunk": "diff --git a/AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java b/AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java\nindex daf23a4ea9..5121032e0e 100644\n--- a/AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java\n+++ b/AnkiDroid/src/test/java/com/ichi2/libanki/DecksTest.java\n\n@@ -15,22 +15,23 @@ import androidx.test.ext.junit.runners.AndroidJUnit4;\n \n @RunWith(AndroidJUnit4.class)\n public class DecksTest extends RobolectricTest {\n+    // Used in other class to populate decks.\n     public static final String[] TEST_DECKS = {\n             \"scxipjiyozczaaczoawo\",\n-            \"cmxieunwoogyxsctnJmv::abcdefgh::ZYXW\",\n-            \"cmxieunwoogyxsctNjmv::INSBGDS\",\n+            \"cmxieunwoogyxsctnjmv::abcdefgh::ZYXW\",\n+            \"cmxieunwoogyxsctnjmv::INSBGDS\",\n     };\n \n     @Test\n     public void ensureDeckList() {\n         Decks decks = getCol().getDecks();\n-        //decks.load(\"{\\\"2\\\":{\\\"name\\\":\\\"A\\\", \\\"id\\\":2}, \\\"3\\\":{\\\"name\\\":\\\"a::B\\\", \\\"id\\\":2}}\", \"{}\");\n         for (String deckName: TEST_DECKS) {\n             addDeck(deckName);\n         }\n-        JSONObject brokenDeck = decks.byName(\"cmxieunwoogyxsctNjmv::INSBGDS\");\n+        JSONObject brokenDeck = decks.byName(\"cmxieunwoogyxsctnjmv::INSBGDS\");\n         Asserts.notNull(brokenDeck,\"We should get deck with given name\");\n-        brokenDeck.put(\"name\", \"cmxieunwoogyxSctNjmv::INSBGDS\");\n+        // Changing the case. That could exists in an old collection or during sync.\n+        brokenDeck.put(\"name\", \"CMXIEUNWOOGYXSCTNJMV::INSBGDS\");\n         decks.save(brokenDeck);\n \n         decks.childMap();\n"}}, {"oid": "1a4fc22d4180fcb52dae7a209e2ca1febeb97e15", "url": "https://github.com/ankidroid/Anki-Android/commit/1a4fc22d4180fcb52dae7a209e2ca1febeb97e15", "message": "Broken test", "committedDate": "2020-07-05T12:30:20Z", "type": "commit"}, {"oid": "c028064ef409d5c81c114f97fa431454ace0f411", "url": "https://github.com/ankidroid/Anki-Android/commit/c028064ef409d5c81c114f97fa431454ace0f411", "message": "Probably correct #6613\n\nmNameMap should never be accessed directly. That was a real mistake of\nmine. We first need to normalize name. This is particularly important\nbecause \"a\" may well be the parent of \"A::b\".", "committedDate": "2020-07-05T12:30:20Z", "type": "commit"}, {"oid": "157c22154c3d19a7dd59499a7cd2a062700fcadf", "url": "https://github.com/ankidroid/Anki-Android/commit/157c22154c3d19a7dd59499a7cd2a062700fcadf", "message": "NF: NameMap as a separate class\n\nThis should ensure nobody won't make the same error as last commit", "committedDate": "2020-07-05T12:49:57Z", "type": "forcePushed"}, {"oid": "351cf9f3786556c08425eb3a4302055a7914468a", "url": "https://github.com/ankidroid/Anki-Android/commit/351cf9f3786556c08425eb3a4302055a7914468a", "message": "NF: NameMap as a separate class\n\nThis should ensure nobody won't make the same error as last commit", "committedDate": "2020-07-05T12:58:15Z", "type": "commit"}, {"oid": "351cf9f3786556c08425eb3a4302055a7914468a", "url": "https://github.com/ankidroid/Anki-Android/commit/351cf9f3786556c08425eb3a4302055a7914468a", "message": "NF: NameMap as a separate class\n\nThis should ensure nobody won't make the same error as last commit", "committedDate": "2020-07-05T12:58:15Z", "type": "forcePushed"}]}