{"pr_number": 6227, "pr_title": "Trying to remove blink during review", "pr_createdAt": "2020-05-20T06:14:01Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6227", "timeline": [{"oid": "ddd80f11f1482e45b4436b6d18551f3db61f6cad", "url": "https://github.com/ankidroid/Anki-Android/commit/ddd80f11f1482e45b4436b6d18551f3db61f6cad", "message": "Don't re-enable undo icon\n\nIt may be useful to disable it. But it already get re-enabled by\nsetCustomButtons so there is no reason to re-enable it.\n\nThis is particularly important because otherwise the button may be\nactivated while actually the undo action is blocked", "committedDate": "2020-05-20T06:53:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNjgzOA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6227#discussion_r427906838", "bodyText": "nit: UNBLOCKED would read better than NONE", "author": "david-allison-1", "createdAt": "2020-05-20T10:31:35Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java", "diffHunk": "@@ -2244,7 +2243,7 @@ private boolean typeAnswer() {\n \n \n     private void unblockControls() {\n-        mControlBlocked = false;\n+        mControlBlocked = ControlBlock.NONE;", "originalCommit": "ddd80f11f1482e45b4436b6d18551f3db61f6cad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "116d5f1d3f08303552f1176754f3ef4a65563d47", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java\nindex 2f6d554fe..4ad98a173 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/AbstractFlashcardViewer.java\n\n@@ -2243,7 +2242,7 @@ public abstract class AbstractFlashcardViewer extends NavigationDrawerActivity i\n \n \n     private void unblockControls() {\n-        mControlBlocked = ControlBlock.NONE;\n+        mControlBlocked = false;\n         mCardFrame.setEnabled(true);\n         mFlipCardLayout.setEnabled(true);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNzQxMw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6227#discussion_r427907413", "bodyText": "getControlBlocked() != ControlBlock.NONE is duplicated, could it be extracted into a method", "author": "david-allison-1", "createdAt": "2020-05-20T10:32:44Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java", "diffHunk": "@@ -786,7 +784,7 @@ public void onWindowFocusChanged(boolean hasFocus) {\n      * @return true if there is another card of same note that could be dismissed\n      */\n     private boolean suspendNoteAvailable() {\n-        if (mCurrentCard == null || getControlBlocked()) {\n+        if (mCurrentCard == null || getControlBlocked() != ControlBlock.NONE) {", "originalCommit": "ddd80f11f1482e45b4436b6d18551f3db61f6cad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "116d5f1d3f08303552f1176754f3ef4a65563d47", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex 35cdec88d..39d0249c4 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n\n@@ -784,7 +786,7 @@ public class Reviewer extends AbstractFlashcardViewer {\n      * @return true if there is another card of same note that could be dismissed\n      */\n     private boolean suspendNoteAvailable() {\n-        if (mCurrentCard == null || getControlBlocked() != ControlBlock.NONE) {\n+        if (mCurrentCard == null || getControlBlocked()) {\n             return false;\n         }\n         // whether there exists a sibling not buried.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNzczMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6227#discussion_r427907732", "bodyText": "Could a short comment be added explaining the intention", "author": "david-allison-1", "createdAt": "2020-05-20T10:33:22Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java", "diffHunk": "@@ -73,16 +73,17 @@ public void setCustomButtons(Menu menu) {\n                 MenuItem item = menu.findItem(itemId);\n                 item.setShowAsAction(mCustomButtons.get(itemId));\n                 Drawable icon = item.getIcon();\n-                if (mReviewerUi.getControlBlocked()) {\n-                    item.setEnabled(false);\n-                    if (icon != null) {\n+                if (icon != null) {\n+                    if (mReviewerUi.getControlBlocked() == ReviewerUi.ControlBlock.SLOW) {\n                         icon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n+                    } else {", "originalCommit": "ddd80f11f1482e45b4436b6d18551f3db61f6cad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "116d5f1d3f08303552f1176754f3ef4a65563d47", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\nindex 2ab154de4..3366ab485 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\n\n@@ -73,17 +73,16 @@ public class ActionButtonStatus {\n                 MenuItem item = menu.findItem(itemId);\n                 item.setShowAsAction(mCustomButtons.get(itemId));\n                 Drawable icon = item.getIcon();\n-                if (icon != null) {\n-                    if (mReviewerUi.getControlBlocked() == ReviewerUi.ControlBlock.SLOW) {\n+                if (mReviewerUi.getControlBlocked()) {\n+                    item.setEnabled(false);\n+                    if (icon != null) {\n                         icon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n-                    } else {\n-                        icon.setAlpha(Themes.ALPHA_ICON_ENABLED_LIGHT);\n                     }\n-                }\n-                if (mReviewerUi.getControlBlocked() != ReviewerUi.ControlBlock.NONE) {\n-                    item.setEnabled(false);\n                 } else {\n                     item.setEnabled(true);\n+                    if (icon != null) {\n+                        icon.setAlpha(Themes.ALPHA_ICON_ENABLED_LIGHT);\n+                    }\n                 }\n             } else {\n                 menu.findItem(itemId).setVisible(false);\n"}}, {"oid": "116d5f1d3f08303552f1176754f3ef4a65563d47", "url": "https://github.com/ankidroid/Anki-Android/commit/116d5f1d3f08303552f1176754f3ef4a65563d47", "message": "NF: make TaskListener final", "committedDate": "2020-05-20T16:22:47Z", "type": "commit"}, {"oid": "d29def83e67fbd0eb62dde39adbfb4faa82594ff", "url": "https://github.com/ankidroid/Anki-Android/commit/d29def83e67fbd0eb62dde39adbfb4faa82594ff", "message": "NF: remove blockControls from undo\n\nThis is useless, since mAnswerCardHandler starts by doing blockControls", "committedDate": "2020-05-20T16:22:49Z", "type": "commit"}, {"oid": "0e5ffaaf8d234199344663edc4940948fbeec23a", "url": "https://github.com/ankidroid/Anki-Android/commit/0e5ffaaf8d234199344663edc4940948fbeec23a", "message": "Trying to remove blink during review\n\nThere are three ways to block buttons. Not blocking (i.e. buttons are\nactivated), quick blocking and slow blocking. Buttons are grayed only\nif we expect the blocking to be slow. I.e. when we need to recompute\nthe queue because the user decided to undo/bury/suspend or just loaded\nthe deck. Otherwise, we expect the next card to load quickly, and so\ncan block the buttons without graying them. This will ensure that the\nbuttons does not blink.\n\nNote that loading the next card can sometime be slow, so it's still\nnot a perfect solution. This is a counter proposition to\nhttps://github.com/ankidroid/Anki-Android/pull/6224", "committedDate": "2020-05-20T16:37:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE4MTcyNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6227#discussion_r428181726", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    /** Buttons are functionals*/\n          \n          \n            \n                    /** Buttons are non-functional */", "author": "mikehardy", "createdAt": "2020-05-20T17:22:26Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerUi.java", "diffHunk": "@@ -17,5 +17,19 @@\n package com.ichi2.anki.reviewer;\n \n public interface ReviewerUi {\n-    boolean getControlBlocked();\n+    /** How to block UI buttons. */\n+    enum ControlBlock {\n+        /** Buttons are functionals*/", "originalCommit": "0e5ffaaf8d234199344663edc4940948fbeec23a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyMjY1MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6227#discussion_r428222651", "bodyText": "Nope. If the buttons are unblocked, then they are functional.", "author": "Arthur-Milchior", "createdAt": "2020-05-20T18:31:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE4MTcyNg=="}], "type": "inlineReview", "revised_code": {"commit": "afc4c50075a756366d24d947a075f2938efe9717", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerUi.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerUi.java\nindex 05c05ec5a..9e606e343 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerUi.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerUi.java\n\n@@ -17,19 +17,5 @@\n package com.ichi2.anki.reviewer;\n \n public interface ReviewerUi {\n-    /** How to block UI buttons. */\n-    enum ControlBlock {\n-        /** Buttons are functionals*/\n-        UNBLOCKED,\n-        /**Don't record click; as it's ambiguous whether it would apply to next or previous card.\n-         * We expect the next card load quickly, so no need to give visual feedback to user,\n-         * which would be considered as flickering. */\n-        QUICK,\n-        /**Don't record click; as it's ambiguous whether it would apply to next or previous card.\n-         * We expect the next card may take time to load, as scheduler needs to recompute its queues;\n-         * so we show the button get deactivated. */\n-        SLOW\n-    }\n-    ControlBlock getControlBlocked();\n     boolean isControlBlocked();\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3OTI1Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6227#discussion_r428179253", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                We use an heuristic to decide whether the next card will appear quickly or slowly.\n          \n          \n            \n                                We use a heuristic to decide whether the next card will appear quickly or slowly.", "author": "david-allison-1", "createdAt": "2020-05-20T17:18:13Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java", "diffHunk": "@@ -73,14 +73,23 @@ public void setCustomButtons(Menu menu) {\n                 MenuItem item = menu.findItem(itemId);\n                 item.setShowAsAction(mCustomButtons.get(itemId));\n                 Drawable icon = item.getIcon();\n-                if (mReviewerUi.getControlBlocked()) {\n+                if (mReviewerUi.isControlBlocked()) {\n                     item.setEnabled(false);\n-                    if (icon != null) {\n-                        icon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n-                    }\n                 } else {\n                     item.setEnabled(true);\n-                    if (icon != null) {\n+                }\n+                if (icon != null) {\n+                    /* Ideially, we want to give feedback to users that buttons are disabled.\n+                    However, some actions are expected to be so quick that the visual feedback is useless\n+                    and is only seen as a flickering.\n+\n+                    We use an heuristic to decide whether the next card will appear quickly or slowly.", "originalCommit": "0e5ffaaf8d234199344663edc4940948fbeec23a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "afc4c50075a756366d24d947a075f2938efe9717", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\nindex 53f28bafb..13601296f 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\n\n@@ -75,21 +75,12 @@ public class ActionButtonStatus {\n                 Drawable icon = item.getIcon();\n                 if (mReviewerUi.isControlBlocked()) {\n                     item.setEnabled(false);\n+                    if (icon != null) {\n+                        icon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n+                    }\n                 } else {\n                     item.setEnabled(true);\n-                }\n-                if (icon != null) {\n-                    /* Ideially, we want to give feedback to users that buttons are disabled.\n-                    However, some actions are expected to be so quick that the visual feedback is useless\n-                    and is only seen as a flickering.\n-\n-                    We use an heuristic to decide whether the next card will appear quickly or slowly.\n-                    We change the color only if the buttons are blocked and we expect the next card to\n-                    take time to arrive.\n-                    */\n-                    if (mReviewerUi.getControlBlocked() == ReviewerUi.ControlBlock.SLOW) {\n-                        icon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n-                    } else {\n+                    if (icon != null) {\n                         icon.setAlpha(Themes.ALPHA_ICON_ENABLED_LIGHT);\n                     }\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3OTQzOA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6227#discussion_r428179438", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    /** Buttons are functionals*/\n          \n          \n            \n                    /** Buttons are functional */", "author": "david-allison-1", "createdAt": "2020-05-20T17:18:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerUi.java", "diffHunk": "@@ -17,5 +17,19 @@\n package com.ichi2.anki.reviewer;\n \n public interface ReviewerUi {\n-    boolean getControlBlocked();\n+    /** How to block UI buttons. */\n+    enum ControlBlock {\n+        /** Buttons are functionals*/", "originalCommit": "0e5ffaaf8d234199344663edc4940948fbeec23a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "afc4c50075a756366d24d947a075f2938efe9717", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerUi.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerUi.java\nindex 05c05ec5a..9e606e343 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerUi.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ReviewerUi.java\n\n@@ -17,19 +17,5 @@\n package com.ichi2.anki.reviewer;\n \n public interface ReviewerUi {\n-    /** How to block UI buttons. */\n-    enum ControlBlock {\n-        /** Buttons are functionals*/\n-        UNBLOCKED,\n-        /**Don't record click; as it's ambiguous whether it would apply to next or previous card.\n-         * We expect the next card load quickly, so no need to give visual feedback to user,\n-         * which would be considered as flickering. */\n-        QUICK,\n-        /**Don't record click; as it's ambiguous whether it would apply to next or previous card.\n-         * We expect the next card may take time to load, as scheduler needs to recompute its queues;\n-         * so we show the button get deactivated. */\n-        SLOW\n-    }\n-    ControlBlock getControlBlocked();\n     boolean isControlBlocked();\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE4MTE3NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6227#discussion_r428181174", "bodyText": "I don't think this needs to exist as it's the same as the base class", "author": "david-allison-1", "createdAt": "2020-05-20T17:21:28Z", "path": "AnkiDroid/src/test/java/com/ichi2/anki/ReviewerKeyboardInputTest.java", "diffHunk": "@@ -267,15 +268,20 @@ private void assertGamepadButtonAnswers(int keycodeButton, int ease) {\n         private Collection.DismissType mDismissType;\n         private boolean mUndoCalled;\n         private boolean mReplayAudioCalled;\n-        private boolean mControlsAreBlocked = false;\n+        private ControlBlock mControlsAreBlocked = ControlBlock.UNBLOCKED;\n         private boolean mUndoAvailable;\n \n \n         @Override\n-        public boolean getControlBlocked() {\n+        public ControlBlock getControlBlocked() {\n             return mControlsAreBlocked;\n         }\n \n+        @Override\n+        public boolean isControlBlocked() {\n+            return getControlBlocked() != ControlBlock.UNBLOCKED;", "originalCommit": "0e5ffaaf8d234199344663edc4940948fbeec23a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "afc4c50075a756366d24d947a075f2938efe9717", "chunk": "diff --git a/AnkiDroid/src/test/java/com/ichi2/anki/ReviewerKeyboardInputTest.java b/AnkiDroid/src/test/java/com/ichi2/anki/ReviewerKeyboardInputTest.java\nindex 98696f7a5..010d0a62f 100644\n--- a/AnkiDroid/src/test/java/com/ichi2/anki/ReviewerKeyboardInputTest.java\n+++ b/AnkiDroid/src/test/java/com/ichi2/anki/ReviewerKeyboardInputTest.java\n\n@@ -268,18 +267,13 @@ public class ReviewerKeyboardInputTest {\n         private Collection.DismissType mDismissType;\n         private boolean mUndoCalled;\n         private boolean mReplayAudioCalled;\n-        private ControlBlock mControlsAreBlocked = ControlBlock.UNBLOCKED;\n+        private boolean mControlsAreBlocked = false;\n         private boolean mUndoAvailable;\n \n \n-        @Override\n-        public ControlBlock getControlBlocked() {\n-            return mControlsAreBlocked;\n-        }\n-\n         @Override\n         public boolean isControlBlocked() {\n-            return getControlBlocked() != ControlBlock.UNBLOCKED;\n+            return mControlsAreBlocked;\n         }\n \n         @CheckResult\n"}}, {"oid": "afc4c50075a756366d24d947a075f2938efe9717", "url": "https://github.com/ankidroid/Anki-Android/commit/afc4c50075a756366d24d947a075f2938efe9717", "message": "NF: getControlBlocked -> isControlBlocked", "committedDate": "2020-05-20T18:34:50Z", "type": "commit"}, {"oid": "f2f2d6c871814eefcabf0ac0c8923ac76d2eb9f3", "url": "https://github.com/ankidroid/Anki-Android/commit/f2f2d6c871814eefcabf0ac0c8923ac76d2eb9f3", "message": "NF: split a if in two parts", "committedDate": "2020-05-20T18:41:10Z", "type": "commit"}, {"oid": "126a778409f919bb3929e510a224bfb44c08532e", "url": "https://github.com/ankidroid/Anki-Android/commit/126a778409f919bb3929e510a224bfb44c08532e", "message": "NF: replace if by using the value directly", "committedDate": "2020-05-20T18:41:27Z", "type": "commit"}, {"oid": "c3f511220dd0a7e6a6c0d95fe82c7d743453eb13", "url": "https://github.com/ankidroid/Anki-Android/commit/c3f511220dd0a7e6a6c0d95fe82c7d743453eb13", "message": "Trying to remove blink during review\n\nThere are three ways to block buttons. Not blocking (i.e. buttons are\nactivated), quick blocking and slow blocking. Buttons are grayed only\nif we expect the blocking to be slow. I.e. when we need to recompute\nthe queue because the user decided to undo/bury/suspend or just loaded\nthe deck. Otherwise, we expect the next card to load quickly, and so\ncan block the buttons without graying them. This will ensure that the\nbuttons does not blink.\n\nNote that loading the next card can sometime be slow, so it's still\nnot a perfect solution. This is a counter proposition to\nhttps://github.com/ankidroid/Anki-Android/pull/6224", "committedDate": "2020-05-20T18:42:59Z", "type": "forcePushed"}, {"oid": "2135aabda2d88ac63bd47ff7bfb8429fd5ae8cda", "url": "https://github.com/ankidroid/Anki-Android/commit/2135aabda2d88ac63bd47ff7bfb8429fd5ae8cda", "message": "Trying to remove blink during review\n\nThere are three ways to block buttons. Not blocking (i.e. buttons are\nactivated), quick blocking and slow blocking. Buttons are grayed only\nif we expect the blocking to be slow. I.e. when we need to recompute\nthe queue because the user decided to undo/bury/suspend or just loaded\nthe deck. Otherwise, we expect the next card to load quickly, and so\ncan block the buttons without graying them. This will ensure that the\nbuttons does not blink.\n\nNote that loading the next card can sometime be slow, so it's still\nnot a perfect solution. This is a counter proposition to\nhttps://github.com/ankidroid/Anki-Android/pull/6224", "committedDate": "2020-05-20T18:52:48Z", "type": "commit"}, {"oid": "2135aabda2d88ac63bd47ff7bfb8429fd5ae8cda", "url": "https://github.com/ankidroid/Anki-Android/commit/2135aabda2d88ac63bd47ff7bfb8429fd5ae8cda", "message": "Trying to remove blink during review\n\nThere are three ways to block buttons. Not blocking (i.e. buttons are\nactivated), quick blocking and slow blocking. Buttons are grayed only\nif we expect the blocking to be slow. I.e. when we need to recompute\nthe queue because the user decided to undo/bury/suspend or just loaded\nthe deck. Otherwise, we expect the next card to load quickly, and so\ncan block the buttons without graying them. This will ensure that the\nbuttons does not blink.\n\nNote that loading the next card can sometime be slow, so it's still\nnot a perfect solution. This is a counter proposition to\nhttps://github.com/ankidroid/Anki-Android/pull/6224", "committedDate": "2020-05-20T18:52:48Z", "type": "forcePushed"}]}