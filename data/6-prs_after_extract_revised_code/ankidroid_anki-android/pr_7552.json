{"pr_number": 7552, "pr_title": "NF: remove linter warning SimpleDateFormat", "pr_createdAt": "2020-10-28T20:58:42Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/7552", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3NzU2Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7552#discussion_r513777562", "bodyText": "As far as I know, this class is unused and we might as well remove it.", "author": "david-allison-1", "createdAt": "2020-10-28T21:39:07Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/CardStats.java", "diffHunk": "@@ -16,7 +16,7 @@\n \n     public static String report(Context context, Card c, Collection col) {", "originalCommit": "334586a5745e1b3faa9ad3311fbf3cbea492b64d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc4Njc3Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/7552#discussion_r513786776", "bodyText": "Fine by me.", "author": "Arthur-Milchior", "createdAt": "2020-10-28T21:58:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc3NzU2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "25a572da4b7ac7395228cd49abf663693215215f", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/CardStats.java b/AnkiDroid/src/main/java/com/ichi2/libanki/CardStats.java\ndeleted file mode 100644\nindex 9d53d8a68c..0000000000\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/CardStats.java\n+++ /dev/null\n\n@@ -1,128 +0,0 @@\n-package com.ichi2.libanki;\n-\n-import android.content.Context;\n-import android.content.res.Resources;\n-\n-import com.ichi2.anki.R;\n-\n-import java.text.DateFormat;\n-import java.text.SimpleDateFormat;\n-import java.util.Calendar;\n-\n-import static com.ichi2.libanki.stats.Stats.SECONDS_PER_DAY;\n-\n-@SuppressWarnings(\"PMD.ExcessiveMethodLength\")\n-public class CardStats {\n-\n-    public static String report(Context context, Card c, Collection col) {\n-        Calendar cal = col.getTime().calendar();\n-        DateFormat df = DateFormat.getDateInstance();\n-\n-        Resources res = context.getResources();\n-        StringBuilder builder = new StringBuilder();\n-        builder.append(\"<html><body ><table><colgroup><col span=\\\"1\\\" style=\\\"width: 40%;\\\"></col><col span=\\\"1\\\" style=\\\"width: 60%;\\\"></col></colgroup><tr><td valign=\\\"top\\\">\");\n-        builder.append(res.getString(R.string.card_details_question));\n-        builder.append(\"</td><td>\");\n-        builder.append(c._getQA(false).get(\"q\"));\n-        builder.append(\"</td></tr><tr><td valign=\\\"top\\\">\");\n-        builder.append(res.getString(R.string.card_details_answer));\n-        builder.append(\"</td><td>\");\n-        builder.append(Utils.stripHTML(c._getQA(false).get(\"a\")));\n-        builder.append(\"</td></tr><tr><td valign=\\\"top\\\">\");\n-\n-        long next = 0;\n-        if (c.getType() == Consts.CARD_TYPE_LRN || c.getType() == Consts.CARD_TYPE_REV) {\n-            if (c.getODid() != 0 || c.getQueue() < 0) {\n-                next = 0;\n-            } else {\n-                if (c.getQueue() == Consts.QUEUE_TYPE_REV || c.getQueue() == Consts.QUEUE_TYPE_DAY_LEARN_RELEARN) {\n-                    next = col.getTime().intTimeMS() + ((c.getDue() - col.getSched().getToday()) * SECONDS_PER_DAY * 1000);\n-                } else {\n-                    next = c.getDue();\n-                }\n-            }\n-            if (next != 0) {\n-                cal.setTimeInMillis(next);\n-                builder.append(res.getString(R.string.card_details_due));\n-                builder.append(\"</td><td>\");\n-                builder.append(df.format(cal.getTime()));\n-                builder.append(\"</td></tr><tr><td valign=\\\"top\\\">\");\n-            }\n-\n-        }\n-\n-//      builder.append(\"</td></tr><tr><td>\");\n-\n-////        builder.append(res.getString(R.string.card_details_interval));\n-//      builder.append(\"</td><td>\");\n-////        if (mInterval == 0) {\n-////            builder.append(\"-\");\n-////        } else {\n-////            builder.append(Utils.getReadableInterval(context, mInterval));\n-////        }\n-\n-\n-//      builder.append(\"</td></tr><tr><td>\");\n-////        builder.append(res.getString(R.string.card_details_ease));\n-//      builder.append(\"</td><td>\");\n-//      double ease = Math.round(mFactor * 100);\n-//      builder.append(ease / 100);\n-\n-//      builder.append(\"</td></tr><tr><td>\");\n-////        builder.append(res.getString(R.string.card_details_average_time));\n-//      builder.append(\"</td><td>\");\n-////        if (mYesCount + mNoCount == 0) {\n-////            builder.append(\"-\");\n-////        } else {\n-////            builder.append(Utils.doubleToTime(mAverageTime));\n-////        }\n-\n-//      builder.append(\"</td></tr><tr><td>\");\n-////        builder.append(res.getString(R.string.card_details_total_time));\n-//      builder.append(\"</td><td>\");\n-////        builder.append(Utils.doubleToTime(mReviewTime));\n-\n-//      builder.append(\"</td></tr><tr><td>\");\n-////        builder.append(res.getString(R.string.card_details_yes_count));\n-//      builder.append(\"</td><td>\");\n-////        builder.append(mYesCount);\n-\n-//      builder.append(\"</td></tr><tr><td>\");\n-////        builder.append(res.getString(R.string.card_details_no_count));\n-//      builder.append(\"</td><td>\");\n-////        builder.append(mNoCount);\n-\n-//      builder.append(\"</td></tr><tr><td>\");\n-////        builder.append(res.getString(R.string.card_details_added));\n-//      builder.append(\"</td><td>\");\n-////        builder.append(DateFormat.getDateFormat(context).format(\n-////                (long) (mCreated - mDeck.getUtcOffset()) * 1000l));\n-\n-//      builder.append(\"</td></tr><tr><td>\");\n-////        builder.append(res.getString(R.string.card_details_changed));\n-//      builder.append(\"</td><td>\");\n-////        builder.append(DateFormat.getDateFormat(context).format(\n-////                (long) (mModified - mDeck.getUtcOffset()) * 1000l));\n-\n-//      builder.append(\"</td></tr><tr><td>\");\n-////        builder.append(res.getString(R.string.card_details_tags));\n-//      builder.append(\"</td><td>\");\n-////        String tags = Arrays.toString(mDeck\n-////                .allUserTags(\"WHERE id = \" + mFactId));\n-////        builder.append(tags.substring(1, tags.length() - 1));\n-\n-//      builder.append(\"</td></tr><tr><td>\");\n-////        builder.append(res.getString(R.string.card_details_model));\n-//      builder.append(\"</td><td>\");\n-////        Model model = Model.getModel(mDeck, mCardModelId, false);\n-////        builder.append(model.getName());\n-\n-//      builder.append(\"</td></tr><tr><td>\");\n-////        builder.append(res.getString(R.string.card_details_card_model));\n-//      builder.append(\"</td><td>\");\n-////        builder.append(model.getCardModel(mCardModelId).getName());\n-        builder.append(\"</table></html></body>\");\n-        return builder.toString();\n-    }\n-\n-}\n"}}, {"oid": "25a572da4b7ac7395228cd49abf663693215215f", "url": "https://github.com/ankidroid/Anki-Android/commit/25a572da4b7ac7395228cd49abf663693215215f", "message": "NF: remove linter warning SimpleDateFormat\n\nEither we should uses local, or we should explicite the local", "committedDate": "2020-11-14T15:41:39Z", "type": "commit"}, {"oid": "25a572da4b7ac7395228cd49abf663693215215f", "url": "https://github.com/ankidroid/Anki-Android/commit/25a572da4b7ac7395228cd49abf663693215215f", "message": "NF: remove linter warning SimpleDateFormat\n\nEither we should uses local, or we should explicite the local", "committedDate": "2020-11-14T15:41:39Z", "type": "forcePushed"}]}