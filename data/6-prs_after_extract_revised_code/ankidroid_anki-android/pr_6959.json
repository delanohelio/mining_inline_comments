{"pr_number": 6959, "pr_title": "Bug: Undo and card in learning.", "pr_createdAt": "2020-08-24T01:03:26Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6959", "timeline": [{"oid": "ecd110d879d5c2c7e9861a8593b66dbd2d78b72b", "url": "https://github.com/ankidroid/Anki-Android/commit/ecd110d879d5c2c7e9861a8593b66dbd2d78b72b", "message": "Remove mCardNotToFetch/mCardToDecrement when card answered\n\nIf the queue is reset while a card is in reviewer, this card should be taken into account. But if the card is answered,\nno need to keep track of it anymore. This should be NF as long as pre fetching occurs between undo and `getCard`", "committedDate": "2020-08-24T01:00:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ2MDA4Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6959#discussion_r475460087", "bodyText": "Could you modify the ported tests to run twice, once using this undo, one one using the regular col.undo()", "author": "david-allison-1", "createdAt": "2020-08-24T09:25:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -1125,6 +1126,33 @@ private TaskData doInBackgroundDismissNotes(TaskData param) {\n         return copies;\n     }\n \n+    @VisibleForTesting\n+    public static Card nonTaskUndo(Collection col) {", "originalCommit": "ecd110d879d5c2c7e9861a8593b66dbd2d78b72b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxMDcwMQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6959#discussion_r475510701", "bodyText": "I can. But in my opinion, if there is a change to do, it would be col.undo() to actually do the entire part of the background task, dealing with the consequence of undoing such as telling the scheduler that queues and counts are not correct anymore.\nBecause, even if col.undo() is called from the content provider, that does not mean the scheduler has correct value, and currently the scheduler is not reset.\nI didn't change it because I was asked to avoid refactor that moves code and anyway I don't have a good intuition of who uses the content provider and whether they already deal with this fact themselves (assuming anyone actually undo from the content provider)", "author": "Arthur-Milchior", "createdAt": "2020-08-24T10:39:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ2MDA4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxMzI2MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6959#discussion_r475513261", "bodyText": "That would be a natural fit for #6959 by the way.\nI really believe that it's uselessly complex that \"undo\" deal with a method in background task, a method in collection before finally reaching the Undoable object. Especially since the job of the collection method is only to remove the Undo element from the queue, and the actual undoing is split between the CollectionTask method and the Undoable method for no reason I can imagine (it's not like we actually need a part of the undo to occur before the stack is changed and another part of undo to occur after the stack is changed)", "author": "Arthur-Milchior", "createdAt": "2020-08-24T10:45:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ2MDA4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9de9ebf44f898774f403843f6290954f495de343", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\nindex f0a7bc83ee..4f12131186 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n\n@@ -1149,7 +1167,6 @@ public class CollectionTask extends BaseAsyncTask<TaskData, TaskData, TaskData>\n             newCard.startTimer();\n             col.reset();\n             sched.deferReset(newCard);\n-            sched.setCurrentCard(newCard);\n         }\n         return newCard;\n     }\n"}}, {"oid": "4c1688c6a32daf25ee626c540c018fc40efded35", "url": "https://github.com/ankidroid/Anki-Android/commit/4c1688c6a32daf25ee626c540c018fc40efded35", "message": "Remove mCardNotToFetch/mCardToDecrement when card answered\n\nIf the queue is reset while a card is in reviewer, this card should be taken into account. But if the card is answered,\nno need to keep track of it anymore. This should be NF as long as pre fetching occurs between undo and `getCard`", "committedDate": "2020-08-24T17:55:27Z", "type": "forcePushed"}, {"oid": "faf02503807cd7ce28fd81e58b8eb9b8c7029848", "url": "https://github.com/ankidroid/Anki-Android/commit/faf02503807cd7ce28fd81e58b8eb9b8c7029848", "message": "Remove mCardNotToFetch/mCardToDecrement when card answered\n\nIf the queue is reset while a card is in reviewer, this card should be taken into account. But if the card is answered,\nno need to keep track of it anymore. This should be NF as long as pre fetching occurs between undo and `getCard`", "committedDate": "2020-08-24T18:08:47Z", "type": "forcePushed"}, {"oid": "36df2bbf01c1c39dc4529a1f246ad45ca72f4393", "url": "https://github.com/ankidroid/Anki-Android/commit/36df2bbf01c1c39dc4529a1f246ad45ca72f4393", "message": "Remove mCardNotToFetch/mCardToDecrement when card answered\n\nIf the queue is reset while a card is in reviewer, this card should be taken into account. But if the card is answered,\nno need to keep track of it anymore. This should be NF as long as pre fetching occurs between undo and `getCard`", "committedDate": "2020-08-24T18:11:53Z", "type": "forcePushed"}, {"oid": "f601ae3859dc7c776fa356fd0ccab4c60340a003", "url": "https://github.com/ankidroid/Anki-Android/commit/f601ae3859dc7c776fa356fd0ccab4c60340a003", "message": "Remove mCardNotToFetch/mCardToDecrement when card answered\n\nIf the queue is reset while a card is in reviewer, this card should be taken into account. But if the card is answered,\nno need to keep track of it anymore. This should be NF as long as pre fetching occurs between undo and `getCard`", "committedDate": "2020-08-24T18:24:44Z", "type": "forcePushed"}, {"oid": "9e4d1bd745e5ad2093662a8143e9533bea70ba58", "url": "https://github.com/ankidroid/Anki-Android/commit/9e4d1bd745e5ad2093662a8143e9533bea70ba58", "message": "NF: split undo for testing", "committedDate": "2020-08-28T22:57:26Z", "type": "commit"}, {"oid": "f172b1b0fef56ad51d1ee7172a49c34bf2001358", "url": "https://github.com/ankidroid/Anki-Android/commit/f172b1b0fef56ad51d1ee7172a49c34bf2001358", "message": "NF: uses undo in test instead of background task", "committedDate": "2020-08-29T01:24:13Z", "type": "commit"}, {"oid": "9de9ebf44f898774f403843f6290954f495de343", "url": "https://github.com/ankidroid/Anki-Android/commit/9de9ebf44f898774f403843f6290954f495de343", "message": "NF: uses queue correctly", "committedDate": "2020-08-29T01:24:13Z", "type": "forcePushed"}, {"oid": "52c1f5ca03cbd175af253eccac2eb0d0960fc114", "url": "https://github.com/ankidroid/Anki-Android/commit/52c1f5ca03cbd175af253eccac2eb0d0960fc114", "message": "NF: tests use col reset instead of sched reset\n\nReset of sched should never been called directly. The scheduler decides whethen it is needed", "committedDate": "2020-08-29T14:03:22Z", "type": "commit"}, {"oid": "c81684efd079a2c1226226a959fd7c3036540682", "url": "https://github.com/ankidroid/Anki-Android/commit/c81684efd079a2c1226226a959fd7c3036540682", "message": "NF: regression test", "committedDate": "2020-08-29T14:05:53Z", "type": "commit"}, {"oid": "dbbe58958eaa90c6deb7103fc53323fff89ec89f", "url": "https://github.com/ankidroid/Anki-Android/commit/dbbe58958eaa90c6deb7103fc53323fff89ec89f", "message": "Going back to a simple mCurrentCard\n\nNow that the resetCount and resetQueue are separated that's quite simpler. And according to the test, it's also the good\nway.\n\nThe idea is that: either there is a card in reviewer or there is not. Nothing else to take into account.\n\nIf there is no card in reviewer, do as usual, as upstream.\n\nIf there is a card in reviewer, do not count it, discard it when prefetching the queues. That is, simulate the part\nbetween getCard and answerCard.\n\nBut, instead of discarding it, just ensure that the resetCounts does not count it at all. This way, if\nresetNew/Lrn/RevCount occurs because of queue filling, it'll still have good value, which is the part I missed", "committedDate": "2020-08-29T14:05:53Z", "type": "commit"}, {"oid": "a9ee54b159fe1117262f0e9650761befa83eefdb", "url": "https://github.com/ankidroid/Anki-Android/commit/a9ee54b159fe1117262f0e9650761befa83eefdb", "message": "NF: getGoodNewButton", "committedDate": "2020-08-29T14:05:53Z", "type": "commit"}, {"oid": "88ec93ff1f5288d7847f1b65f5d8c622e8e4a5a2", "url": "https://github.com/ankidroid/Anki-Android/commit/88ec93ff1f5288d7847f1b65f5d8c622e8e4a5a2", "message": "NF: uses queue correctly", "committedDate": "2020-08-29T14:05:53Z", "type": "commit"}, {"oid": "88ec93ff1f5288d7847f1b65f5d8c622e8e4a5a2", "url": "https://github.com/ankidroid/Anki-Android/commit/88ec93ff1f5288d7847f1b65f5d8c622e8e4a5a2", "message": "NF: uses queue correctly", "committedDate": "2020-08-29T14:05:53Z", "type": "forcePushed"}]}