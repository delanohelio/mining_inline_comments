{"pr_number": 6547, "pr_title": "NF: _groupChildrenMain simplification", "pr_createdAt": "2020-06-24T11:49:07Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6547", "timeline": [{"oid": "5bfb934c5f52099df8e237211419b33ac15e3f2a", "url": "https://github.com/ankidroid/Anki-Android/commit/5bfb934c5f52099df8e237211419b33ac15e3f2a", "message": "NF: _groupChildrenMain simplificitation\n\nThis use the fact that _groupChildrenMain is called only after the\ndeck collection is checked, so there is no duplicate and each nested\ndeck has a parent.\n\nCurrently what occurs is that, if you have the list of deck [\"A\",\n\"A::B\", \"A::C\", \"A::C::D\", \"E\"], the function will first process the\nsublist [\"A\", \"A::B\", \"A::C\", \"A::C::D\"] and then the sublist\n[\"E\"] (this is because it looks only as the first component of the\nname)\n\nThen, in the first sublist, it will look for the parent \"A\" and the\nchildren [\"A::B\", \"A::C\", \"A::C::D\"], by looking at which deck has\ndepth 0... that is useles, because, thanks to the sorting, we know the\nparent exists and is the first element of the list. Therefore, I\nremoving the condition dealing with the first element of the list and\nuse the fact that I know that it is the first element.\n\nBy itself it should be a really really small improvement. However, it\nallows to simplify the code and eventually to add great improvement\ninto it.", "committedDate": "2020-06-24T11:42:45Z", "type": "commit"}, {"oid": "cdb7f416c674ca2ec7703ab6082f414cbd1c6b82", "url": "https://github.com/ankidroid/Anki-Android/commit/cdb7f416c674ca2ec7703ab6082f414cbd1c6b82", "message": "Regression Test: multiple children at same level\n\nadding two decks with multiple children has at the same level. This\nshould have detected https://github.com/ankidroid/Anki-Android/issues/6544", "committedDate": "2020-06-24T11:44:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg0MDE2OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6547#discussion_r444840169", "bodyText": "Confirming: does this break the test when used in association with the previous pull request?", "author": "david-allison-1", "createdAt": "2020-06-24T11:55:05Z", "path": "AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java", "diffHunk": "@@ -88,6 +88,7 @@\n             \"pdsqoelhmemmmbwjunnu\",\n             \"scxipjiyozczaaczoawo\",\n             \"cmxieunwoogyxsctnjmv::abcdefgh::ZYXW\",\n+            \"cmxieunwoogyxsctnjmv::INSBGDS\",", "originalCommit": "cdb7f416c674ca2ec7703ab6082f414cbd1c6b82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg0ODIyMw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6547#discussion_r444848223", "bodyText": "I've not run test on the buggy version. I'll do it later, I'm not on my computer right now.\nIn particular, I'd need to check whether our test run deckDueTree. I know they run deckDueList; however, if they don't cover deckDueTree then they would not detect this bug anyway.", "author": "Arthur-Milchior", "createdAt": "2020-06-24T12:11:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg0MDE2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5MzY0Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6547#discussion_r445093646", "bodyText": "No, it does not break. I imagine it is because it is tested in AnkiDroid/src/test/java/com/ichi2/libanki/sched/SchedTest.java and this test does not seems to use the list of decks I created in contentProviderTest", "author": "Arthur-Milchior", "createdAt": "2020-06-24T18:36:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg0MDE2OQ=="}], "type": "inlineReview", "revised_code": null}]}