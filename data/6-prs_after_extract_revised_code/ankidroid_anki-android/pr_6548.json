{"pr_number": 6548, "pr_title": "Test detecting #6544", "pr_createdAt": "2020-06-24T19:07:51Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6548", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEyNjM3OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6548#discussion_r445126379", "bodyText": "The only thing missing (in what looks like a good test sequence otherwise) is an assertion that the results match your expectations. So you might have a second test structure next to the TEST_DECKS definition that is TEST_DECKS_DUE_TREE, and then you would have some assertions that what you got from calling getCol().getSched().deckDueTree() matches your expected results. There examples of matchers being used in the src/main/test code all over and the API we're using mostly is http://hamcrest.org/JavaHamcrest/ so maybe since I don't see a reflective deep-object-comparator there you would make a few assertions about the shape of the deck due tree when it came back, like how many entries, at what level etc, or you could write a quick 'DeckDueTree' comparator and ask Hamcrest to use it", "author": "mikehardy", "createdAt": "2020-06-24T19:37:54Z", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/sched/SchedTest.java", "diffHunk": "@@ -124,6 +125,15 @@ private void selectNewDeck() {\n         getCol().getDecks().select(did);\n     }\n \n+    @Test\n+    public void ensureDeckTree() {\n+        for (String deckName: TEST_DECKS) {\n+            addDeck(deckName);\n+        }\n+        getCol().getSched().deckDueTree();", "originalCommit": "a849661b5bc957d2e7c7484dcc15307e20754fb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE4NDc4Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6548#discussion_r445184787", "bodyText": "The main problem I have is that I don't know what I can expect to already exists. Should I expect that there are no deck but the default one ?\u00a0Or can other test lead to deck ?\nEven without assertion, that would have catch my error, since the error was that an exception was thrown\nI can create methods to do comparison. It would not be hard to create a method which check whether one tree is equal/included in another tree, at least when looking at name. Should I put this method in the class DeckDueTreeNode or in the test ?", "author": "Arthur-Milchior", "createdAt": "2020-06-24T21:34:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEyNjM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgyODE5NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6548#discussion_r445828194", "bodyText": "In robolectric testing nothing exists. You get an empty database before each test. There is a small-but-growing library of utility methods in RobolectricTest that allow you to create data hierarchies fairly easily though you may need to make one. In that way you have completely control. You will know exactly what state you start from, then you run your code, then you check your finish state\nIt does not appear there is a comparator for DeckDueTreeNode yet, I would just put a quick comparator in the test code. To do it in a general way implies likely implementing equals (which transitively implies overriding hashcode https://stackoverflow.com/a/8180483/9910298 ) and would bring in a separate need to add tests etc to make sure that code itself was correct in case .equals (which is generally available on java's base Object) is used anywhere", "author": "mikehardy", "createdAt": "2020-06-25T20:46:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEyNjM3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "a757f3a7bcbc1f78dbc70975c49a0463ddaf935f", "chunk": "diff --git a/AnkiDroid/src/test/java/com/ichi2/libanki/sched/SchedTest.java b/AnkiDroid/src/test/java/com/ichi2/libanki/sched/SchedTest.java\nindex dddca2ae5..8b24a74df 100644\n--- a/AnkiDroid/src/test/java/com/ichi2/libanki/sched/SchedTest.java\n+++ b/AnkiDroid/src/test/java/com/ichi2/libanki/sched/SchedTest.java\n\n@@ -131,6 +132,10 @@ public class SchedTest extends RobolectricTest {\n             addDeck(deckName);\n         }\n         getCol().getSched().deckDueTree();\n+        AbstractSched sched = getCol().getSched();\n+        List<AbstractSched.DeckDueTreeNode> tree = sched.deckDueTree();\n+        Assert.assertEquals(\"Tree has not the expected structure\", SchedV2Test.expectedTree(sched, false), tree);\n+\n     }\n \n \n"}}, {"oid": "a757f3a7bcbc1f78dbc70975c49a0463ddaf935f", "url": "https://github.com/ankidroid/Anki-Android/commit/a757f3a7bcbc1f78dbc70975c49a0463ddaf935f", "message": "Test detecting #6544\n\nThis test fails with the PR that was wrong. It is correct currently.\n\nI fear that it is not proper unit test style, but I really don't\nunderstand what is going on here, so I'd be happy to get\ncorrection. In particular, how to have the same set of decks in both\nkind of test.", "committedDate": "2020-07-03T18:15:58Z", "type": "commit"}, {"oid": "a757f3a7bcbc1f78dbc70975c49a0463ddaf935f", "url": "https://github.com/ankidroid/Anki-Android/commit/a757f3a7bcbc1f78dbc70975c49a0463ddaf935f", "message": "Test detecting #6544\n\nThis test fails with the PR that was wrong. It is correct currently.\n\nI fear that it is not proper unit test style, but I really don't\nunderstand what is going on here, so I'd be happy to get\ncorrection. In particular, how to have the same set of decks in both\nkind of test.", "committedDate": "2020-07-03T18:15:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4OTk4Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6548#discussion_r449789986", "bodyText": "The only thing I can see now is that it is very dangerous in Java to override equals without overriding hashCode - they have conjoined invariants that they need to meet:\nhttps://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#hashCode()\n\nNote that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.\n\nA possible implementation for hashCode here might be (in pseudocode):\nif object not instanceof DeckDueTreeNode return object.hashCode\nreturn getFullDeckName.hashCode() + mRevCount + mLrnCount + mNewCount + (int) (mChildren.hashCode ^ (mChildren.hashCode >>> 32))\nThe last bit, how to merge in a hashCode from a sub-object is from this table of reasonable ways to combine hashCodes: https://stackoverflow.com/a/14608883/9910298", "author": "mikehardy", "createdAt": "2020-07-04T17:18:28Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -325,6 +340,27 @@ public void setChildren(@NonNull List<DeckDueTreeNode> children, boolean addRev)\n                 }\n             }\n         }\n+\n+\n+        /**\n+         * Whether both elements have the same structure and numbers.\n+         * @param object\n+         * @return\n+         */\n+        @Override\n+        public boolean equals(Object object) {", "originalCommit": "a757f3a7bcbc1f78dbc70975c49a0463ddaf935f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5MTIwMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6548#discussion_r449791202", "bodyText": "Nice catch. code added", "author": "Arthur-Milchior", "createdAt": "2020-07-04T17:35:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4OTk4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f5df07fb10b163e21d097dde7262a64ca2006edc", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java\nindex 95bf636c7..25e658558 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java\n\n@@ -341,6 +341,12 @@ public abstract class AbstractSched {\n             }\n         }\n \n+        @Override\n+        public int hashCode() {\n+            int childrenHash = mChildren.hashCode();\n+            return getFullDeckName().hashCode() + mRevCount + mLrnCount + mNewCount + (int) (childrenHash ^ (childrenHash >>> 32));\n+        }\n+\n \n         /**\n          * Whether both elements have the same structure and numbers.\n"}}, {"oid": "f5df07fb10b163e21d097dde7262a64ca2006edc", "url": "https://github.com/ankidroid/Anki-Android/commit/f5df07fb10b163e21d097dde7262a64ca2006edc", "message": "NF: Adding hashCode to DeckDueTreeNode\n\nCode by Mike Hardy", "committedDate": "2020-07-04T17:35:41Z", "type": "commit"}, {"oid": "f5df07fb10b163e21d097dde7262a64ca2006edc", "url": "https://github.com/ankidroid/Anki-Android/commit/f5df07fb10b163e21d097dde7262a64ca2006edc", "message": "NF: Adding hashCode to DeckDueTreeNode\n\nCode by Mike Hardy", "committedDate": "2020-07-04T17:35:41Z", "type": "forcePushed"}]}