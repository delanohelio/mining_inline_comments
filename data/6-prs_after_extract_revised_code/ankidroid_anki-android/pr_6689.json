{"pr_number": 6689, "pr_title": "JSON class simple", "pr_createdAt": "2020-07-17T14:59:37Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6689", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMjY3NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458202674", "bodyText": "Note: comment removed", "author": "david-allison-1", "createdAt": "2020-07-21T15:49:08Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -137,10 +137,7 @@\n     public abstract void sortCards(long[] cids, int start, int step, boolean shuffle, boolean shift);\n     public abstract void randomizeCards(long did);\n     public abstract void orderCards(long did);\n-    public abstract void resortConf(JSONObject conf);\n-    /**\n-     * for post-import\n-     */", "originalCommit": "8eebe544524d91bd3fbf88be894b4846638ce526", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxODE0MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458218140", "bodyText": "Thanks. Added back", "author": "Arthur-Milchior", "createdAt": "2020-07-21T16:10:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMjY3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2MjkyNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458262926", "bodyText": "It got moved to the wrong method I feel?", "author": "david-allison-1", "createdAt": "2020-07-21T17:20:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMjY3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMTUxMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458321510", "bodyText": "@Arthur-Milchior - just confirming the follow-up comment was seen", "author": "david-allison-1", "createdAt": "2020-07-21T19:00:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMjY3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyOTUwNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458329506", "bodyText": "Corrected.", "author": "Arthur-Milchior", "createdAt": "2020-07-21T19:15:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMjY3NA=="}], "type": "inlineReview", "revised_code": {"commit": "8178cf35d73b3d132c532c9c45f5435c9c9383cc", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java\nindex fcbba1c4b..0203737e5 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java\n\n@@ -137,6 +138,9 @@ public abstract class AbstractSched {\n     public abstract void sortCards(long[] cids, int start, int step, boolean shuffle, boolean shift);\n     public abstract void randomizeCards(long did);\n     public abstract void orderCards(long did);\n+    /**\n+     * for post-import\n+     */\n     public abstract void resortConf(DeckConfig conf);\n     public abstract void maybeRandomizeDeck();\n     public abstract void maybeRandomizeDeck(Long did);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMzk0Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458203942", "bodyText": "Wasn't this in another PR?", "author": "david-allison-1", "createdAt": "2020-07-21T15:50:49Z", "path": "AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java", "diffHunk": "@@ -136,7 +136,7 @@ public JSONObject(String source) {\n \n     public JSONObject(JSONObject copyFrom) {\n         this();\n-        for (String key: this) {\n+        for (String key: copyFrom) {", "originalCommit": "8eebe544524d91bd3fbf88be894b4846638ce526", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxMTg4MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458211881", "bodyText": "Yes. The current PR was based upon the last PR. I forgot to rebase onto master when the other PR was accepted, my bad", "author": "Arthur-Milchior", "createdAt": "2020-07-21T16:01:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwMzk0Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNDgzOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458204839", "bodyText": "Needs a better explanation that this clones into the provided object, and not the other way around. Maybe with the method name as well", "author": "david-allison-1", "createdAt": "2020-07-21T15:52:03Z", "path": "AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java", "diffHunk": "@@ -328,6 +328,12 @@ public JSONObject optJSONObject(String name) {\n \n     public JSONObject deepClone() {\n         JSONObject clone = new JSONObject();\n+        deepClone(clone);\n+        return clone;\n+    }\n+\n+    /** deep clone in clone. This allow to have a copy in a subtype of JSONObject. */\n+    protected void deepClone(JSONObject clone) {", "originalCommit": "8eebe544524d91bd3fbf88be894b4846638ce526", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIxNjk1NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458216955", "bodyText": "Done.\ndeepCloneInto  allows to do j.deepCloneInto(t) to state that j gets cloned into t.\nIdeally,\u00a0I would just want to pass a class T as parameter, and create a new T() inside deepClone but it seems to be impossible :(", "author": "Arthur-Milchior", "createdAt": "2020-07-21T16:09:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNDgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MTU1Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458241552", "bodyText": "It's such a shame that it's not possible - generic erasure strikes again. Could be done if you accept a Class<T>, but it doesn't seem worth it", "author": "david-allison-1", "createdAt": "2020-07-21T16:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNDgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NTg5Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458245897", "bodyText": "I don't know how to do it. But anyway, I believe that the most important part is having better typing across the code. This can always be improved later since this method is not used appart in the class inheriting directly from JSONObject", "author": "Arthur-Milchior", "createdAt": "2020-07-21T16:53:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwNDgzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "8178cf35d73b3d132c532c9c45f5435c9c9383cc", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java b/AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java\nindex 67ba2a1b3..188cc94e5 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/utils/JSONObject.java\n\n@@ -328,12 +328,19 @@ public class JSONObject extends org.json.JSONObject implements Iterable<String>\n \n     public JSONObject deepClone() {\n         JSONObject clone = new JSONObject();\n-        deepClone(clone);\n+        deepClonedInto(clone);\n         return clone;\n     }\n \n-    /** deep clone in clone. This allow to have a copy in a subtype of JSONObject. */\n-    protected void deepClone(JSONObject clone) {\n+    /** deep clone this into clone.\n+\n+        Given a subtype `T` of JSONObject, and a JSONObject `j`, we could do\n+        ```\n+        T t = new T();\n+        j.deepClonedInto(t);\n+        ```\n+        in order to obtain a deep clone of `j` of type ```T```. */\n+    protected void deepClonedInto(<? extends JSONObject> clone) {\n         for (String key: this) {\n             if (get(key) instanceof JSONObject) {\n                 clone.put(key, getJSONObject(key).deepClone());\n"}}, {"oid": "8062562bba3fe23e2ff909d862b7ecc7a956769f", "url": "https://github.com/ankidroid/Anki-Android/commit/8062562bba3fe23e2ff909d862b7ecc7a956769f", "message": "NF: Model type", "committedDate": "2020-07-21T16:00:59Z", "type": "forcePushed"}, {"oid": "8178cf35d73b3d132c532c9c45f5435c9c9383cc", "url": "https://github.com/ankidroid/Anki-Android/commit/8178cf35d73b3d132c532c9c45f5435c9c9383cc", "message": "NF: Model type", "committedDate": "2020-07-21T16:10:26Z", "type": "forcePushed"}, {"oid": "7d1c4308aa0f9ad89c5e4728e8b857568fc29a50", "url": "https://github.com/ankidroid/Anki-Android/commit/7d1c4308aa0f9ad89c5e4728e8b857568fc29a50", "message": "NF: Model type", "committedDate": "2020-07-21T16:22:48Z", "type": "forcePushed"}, {"oid": "04de5a8a755a651b9d6fbaf7bcfbfa2a0d3c46ea", "url": "https://github.com/ankidroid/Anki-Android/commit/04de5a8a755a651b9d6fbaf7bcfbfa2a0d3c46ea", "message": "NF: add deepCloneIn in JSONObject", "committedDate": "2020-07-21T16:23:20Z", "type": "commit"}, {"oid": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e", "url": "https://github.com/ankidroid/Anki-Android/commit/079e6a0d5a96de1d3d7af34b9673e7089f28b15e", "message": "NF: Model type", "committedDate": "2020-07-21T16:23:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MDkzMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458250932", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    JSONObject deck = (Deck) data[0];\n          \n          \n            \n                    Deck deck = (Deck) data[0];", "author": "david-allison-1", "createdAt": "2020-07-21T17:01:06Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -1398,12 +1401,12 @@ private TaskData doInBackgroundConfSetSubdecks(TaskData... params) {\n         Timber.d(\"doInBackgroundConfSetSubdecks\");\n         Collection col = CollectionHelper.getInstance().getCol(mContext);\n         Object[] data = params[0].getObjArray();\n-        JSONObject deck = (JSONObject) data[0];\n-        JSONObject conf = (JSONObject) data[1];\n+        JSONObject deck = (Deck) data[0];", "originalCommit": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwMjMxNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458302317", "bodyText": "Thanks", "author": "Arthur-Milchior", "createdAt": "2020-07-21T18:26:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MDkzMg=="}], "type": "inlineReview", "revised_code": {"commit": "ac638295a36ce67301daaea0c8e7a18d229476c3", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\nindex 8cde6aa6d..f437325c4 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n\n@@ -1401,7 +1401,7 @@ public class CollectionTask extends BaseAsyncTask<CollectionTask.TaskData, Colle\n         Timber.d(\"doInBackgroundConfSetSubdecks\");\n         Collection col = CollectionHelper.getInstance().getCol(mContext);\n         Object[] data = params[0].getObjArray();\n-        JSONObject deck = (Deck) data[0];\n+        Deck deck = (Deck) data[0];\n         DeckConfig conf = (DeckConfig) data[1];\n         try {\n             TreeMap<String, Long> children = col.getDecks().children(deck.getLong(\"id\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MzE0Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458253146", "bodyText": "Not a change in this PR - but this line looks suspect (possibly an attempted fix for the corrupt dynamic decks)?", "author": "david-allison-1", "createdAt": "2020-07-21T17:04:50Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -679,30 +677,30 @@ public String _ensureParents(String name) {\n     /**\n      * A list of all deck config.\n      */\n-    public ArrayList<JSONObject> allConf() {\n+    public ArrayList<DeckConfig> allConf() {\n         return new ArrayList<>(mDconf.values());\n     }\n \n \n-    public JSONObject confForDid(long did) {\n-        JSONObject deck = get(did, false);\n+    public DeckConfig confForDid(long did) {\n+        Deck deck = get(did, false);\n         assert deck != null;\n         if (deck.has(\"conf\")) {\n-            JSONObject conf = getConf(deck.getLong(\"conf\"));\n+            DeckConfig conf = getConf(deck.getLong(\"conf\"));\n             conf.put(\"dyn\", 0);", "originalCommit": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "86dcebc0ceb8b8d266694d864f64dc028f50b82d", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java\nindex e5e30465e..65a77d7f8 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java\n\n@@ -683,7 +683,7 @@ public class Decks {\n \n \n     public DeckConfig confForDid(long did) {\n-        Deck deck = get(did, false);\n+        JSONObject deck = get(did, false);\n         assert deck != null;\n         if (deck.has(\"conf\")) {\n             DeckConfig conf = getConf(deck.getLong(\"conf\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1NzgxOA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458257818", "bodyText": "This looks good - flagging for second review that new JSONObject and new Model both perform a copy, and don't refer to the same object", "author": "david-allison-1", "createdAt": "2020-07-21T17:12:15Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Models.java", "diffHunk": "@@ -300,10 +300,10 @@ public JSONObject byName(String name) {\n     /** Create a new model, save it in the registry, and return it. */\n \t// Called `new` in Anki's code. New is a reserved word in java,\n \t// not in python. Thus the method has to be renamed.\n-    public JSONObject newModel(String name) {\n+    public Model newModel(String name) {\n         // caller should call save() after modifying\n-        JSONObject m;\n-        m = new JSONObject(defaultModel);\n+        Model m;\n+        m = new Model(defaultModel);", "originalCommit": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwMDA4NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458300084", "bodyText": "Indeed, the both perform copy", "author": "Arthur-Milchior", "createdAt": "2020-07-21T18:22:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1NzgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "86dcebc0ceb8b8d266694d864f64dc028f50b82d", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java\nindex 4d521aedf..b7627d031 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java\n\n@@ -300,10 +300,10 @@ public class Models {\n     /** Create a new model, save it in the registry, and return it. */\n \t// Called `new` in Anki's code. New is a reserved word in java,\n \t// not in python. Thus the method has to be renamed.\n-    public Model newModel(String name) {\n+    public JSONObject newModel(String name) {\n         // caller should call save() after modifying\n-        Model m;\n-        m = new Model(defaultModel);\n+        JSONObject m;\n+        m = new JSONObject(defaultModel);\n         m.put(\"name\", name);\n         m.put(\"mod\", Utils.intTime());\n         m.put(\"flds\", new JSONArray());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2MTU0OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458261549", "bodyText": "This is actually different functionality - wrap vs deepClone. This looks OK, but flagging as you wrote the deepClone code", "author": "david-allison-1", "createdAt": "2020-07-21T17:18:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Models.java", "diffHunk": "@@ -412,9 +412,8 @@ public int tmplUseCount(JSONObject m, int ord) {\n      */\n \n     /** Copy, save and return. */\n-    public JSONObject copy(JSONObject m) {\n-        JSONObject m2 = null;\n-        m2 = m.deepClone();\n+    public Model copy(Model m) {\n+        Model m2 = new Model(m);", "originalCommit": "079e6a0d5a96de1d3d7af34b9673e7089f28b15e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwMTIxNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6689#discussion_r458301216", "bodyText": "Thanks for catching it, it would have been a mistake", "author": "Arthur-Milchior", "createdAt": "2020-07-21T18:24:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2MTU0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ac638295a36ce67301daaea0c8e7a18d229476c3", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java\nindex 4d521aedf..370f79c80 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Models.java\n\n@@ -413,7 +413,7 @@ public class Models {\n \n     /** Copy, save and return. */\n     public Model copy(Model m) {\n-        Model m2 = new Model(m);\n+        Model m2 = m.deepClone();        \n         m2.put(\"name\", m2.getString(\"name\") + \" copy\");\n         add(m2);\n         return m2;\n"}}, {"oid": "ac638295a36ce67301daaea0c8e7a18d229476c3", "url": "https://github.com/ankidroid/Anki-Android/commit/ac638295a36ce67301daaea0c8e7a18d229476c3", "message": "NF: Model type", "committedDate": "2020-07-21T18:25:27Z", "type": "forcePushed"}, {"oid": "86dcebc0ceb8b8d266694d864f64dc028f50b82d", "url": "https://github.com/ankidroid/Anki-Android/commit/86dcebc0ceb8b8d266694d864f64dc028f50b82d", "message": "NF: DConf type", "committedDate": "2020-07-21T19:14:55Z", "type": "commit"}, {"oid": "50f5c4c358d1980a5adb0e3103b7fb535773429f", "url": "https://github.com/ankidroid/Anki-Android/commit/50f5c4c358d1980a5adb0e3103b7fb535773429f", "message": "NF: Deck type", "committedDate": "2020-07-21T19:14:56Z", "type": "commit"}, {"oid": "3a9b92b43af634f6ddc0c766e47042ba2d9325d4", "url": "https://github.com/ankidroid/Anki-Android/commit/3a9b92b43af634f6ddc0c766e47042ba2d9325d4", "message": "NF: Model type", "committedDate": "2020-07-21T19:14:56Z", "type": "commit"}, {"oid": "3a9b92b43af634f6ddc0c766e47042ba2d9325d4", "url": "https://github.com/ankidroid/Anki-Android/commit/3a9b92b43af634f6ddc0c766e47042ba2d9325d4", "message": "NF: Model type", "committedDate": "2020-07-21T19:14:56Z", "type": "forcePushed"}]}