{"pr_number": 6586, "pr_title": "NF: cache the result of \"parent\"", "pr_createdAt": "2020-06-29T23:01:23Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6586", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM1NjY1Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6586#discussion_r447356652", "bodyText": "Needs an s prefix to match our naming conventions", "author": "david-allison-1", "createdAt": "2020-06-30T01:38:43Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -1105,15 +1105,20 @@ public static boolean equalName(String name1, String name2) {\n     * ***********************************************************\n     */\n \n+    private static HashMap<String, String> parentCache = new HashMap();", "originalCommit": "7836869d20b9c3f36b8c8fe9b84dacdc6abf2f9e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d344083d288680d3a823ce9f86299592ad8585fb", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java\nindex 6422be023..0c603cda8 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java\n\n@@ -1105,20 +1105,20 @@ public class Decks {\n     * ***********************************************************\n     */\n \n-    private static HashMap<String, String> parentCache = new HashMap();\n+    private static HashMap<String, String> sParentCache = new HashMap();\n     public static String parent(String deckName) {\n         // method parent, from sched's method deckDueList in python\n-        if (!parentCache.containsKey(deckName)) {\n+        if (!sParentCache.containsKey(deckName)) {\n             List<String> parts = Arrays.asList(path(deckName));\n             if (parts.size() < 2) {\n-                parentCache.put(deckName, null);\n+                sParentCache.put(deckName, null);\n             } else {\n                 parts = parts.subList(0, parts.size() - 1);\n                 String parentName = TextUtils.join(\"::\", parts);\n-                parentCache.put(deckName, parentName);\n+                sParentCache.put(deckName, parentName);\n             }\n         }\n-        return parentCache.get(deckName);\n+        return sParentCache.get(deckName);\n     }\n \n     public String getActualDescription() {\n"}}, {"oid": "d344083d288680d3a823ce9f86299592ad8585fb", "url": "https://github.com/ankidroid/Anki-Android/commit/d344083d288680d3a823ce9f86299592ad8585fb", "message": "NF: cache the result of \"parent\"\n\nThis require to recreate string from an array of string, it is\nuselessly long, and caching it should win fraction of seconds when\ncreating deckDueList and checking the set of decks, by allowing to\naccess parents faster", "committedDate": "2020-06-30T02:02:34Z", "type": "forcePushed"}, {"oid": "c8497edd45f42e2375d2910482c892fe4fc9294c", "url": "https://github.com/ankidroid/Anki-Android/commit/c8497edd45f42e2375d2910482c892fe4fc9294c", "message": "NF: cache the result of \"parent\"\n\nThis require to recreate string from an array of string, it is\nuselessly long, and caching it should win fraction of seconds when\ncreating deckDueList and checking the set of decks, by allowing to\naccess parents faster", "committedDate": "2020-07-01T15:50:56Z", "type": "commit"}, {"oid": "c8497edd45f42e2375d2910482c892fe4fc9294c", "url": "https://github.com/ankidroid/Anki-Android/commit/c8497edd45f42e2375d2910482c892fe4fc9294c", "message": "NF: cache the result of \"parent\"\n\nThis require to recreate string from an array of string, it is\nuselessly long, and caching it should win fraction of seconds when\ncreating deckDueList and checking the set of decks, by allowing to\naccess parents faster", "committedDate": "2020-07-01T15:50:56Z", "type": "forcePushed"}]}