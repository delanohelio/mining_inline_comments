{"pr_number": 7260, "pr_title": "NF: remove useless continue", "pr_createdAt": "2020-09-23T03:27:17Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/7260", "timeline": [{"oid": "d31c3404bac0d7fe16b411aafab623d275cdab5f", "url": "https://github.com/ankidroid/Anki-Android/commit/d31c3404bac0d7fe16b411aafab623d275cdab5f", "message": "NF: remove useless continue\n\nThen exchange if/else", "committedDate": "2020-09-23T12:34:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzMTI4MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7260#discussion_r493631281", "bodyText": "if (\"_meta\".equals(i.getName())) {\n    // ignore previously-retrieved meta\n    continue;\n}\nString name = meta.getString(i.getName());\n...", "author": "david-allison-1", "createdAt": "2020-09-23T14:18:51Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Media.java", "diffHunk": "@@ -932,10 +932,7 @@ public int addFilesFromZip(ZipFile z) throws IOException {\n             // then loop through all files\n             int cnt = 0;\n             for (ZipEntry i : Collections.list(z.entries())) {\n-                if (\"_meta\".equals(i.getName())) {\n-                    // ignore previously-retrieved meta\n-                    continue;\n-                } else {\n+                if (!\"_meta\".equals(i.getName())) {", "originalCommit": "d31c3404bac0d7fe16b411aafab623d275cdab5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzNDY4Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7260#discussion_r493634682", "bodyText": "Modified the above suggestion", "author": "david-allison-1", "createdAt": "2020-09-23T14:23:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzMTI4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e3a40cd94bab4b4fa1f8476dc9bad71760e996e6", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java\nindex efaf40ced1..5db936a02f 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java\n\n@@ -925,28 +925,30 @@ public class Media {\n      * This method closes the file before it returns.\n      */\n     public int addFilesFromZip(ZipFile z) throws IOException {\n-    try {\n+        try {\n             List<Object[]> media = new ArrayList<>();\n             // get meta info first\n             JSONObject meta = new JSONObject(Utils.convertStreamToString(z.getInputStream(z.getEntry(\"_meta\"))));\n             // then loop through all files\n             int cnt = 0;\n             for (ZipEntry i : Collections.list(z.entries())) {\n-                if (!\"_meta\".equals(i.getName())) {\n-                    String name = meta.getString(i.getName());\n-                    // normalize name for platform\n-                    name = Utils.nfcNormalized(name);\n-                    // save file\n-                    String destPath = dir().concat(File.separator).concat(name);\n-                    try (InputStream zipInputStream = z.getInputStream(i)) {\n-                        Utils.writeToFile(zipInputStream, destPath);\n-                    }\n-                    String csum = Utils.fileChecksum(destPath);\n-                    // update db\n-                    media.add(new Object[] {name, csum, _mtime(destPath), 0});\n-                    cnt += 1;\n+                String name = i.getName();\n+                if (\"_meta\".equals(name)) {\n+                     // ignore previously-retrieved meta\n+                    continue;\n+                }\n+                String name = meta.getString(name);\n+                // normalize name for platform\n+                name = Utils.nfcNormalized(name);\n+                // save file\n+                String destPath = dir().concat(File.separator).concat(name);\n+                try (InputStream zipInputStream = z.getInputStream(i)) {\n+                    Utils.writeToFile(zipInputStream, destPath);\n                 }\n-                // else ignore previously-retrieved meta\n+                String csum = Utils.fileChecksum(destPath);\n+                // update db\n+                media.add(new Object[] {name, csum, _mtime(destPath), 0});\n+                cnt += 1;\n             }\n             if (media.size() > 0) {\n                 mDb.executeMany(\"insert or replace into media values (?,?,?,?)\", media);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzMTQxNA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7260#discussion_r493631414", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // else ignore previously-retrieved meta", "author": "david-allison-1", "createdAt": "2020-09-23T14:19:01Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Media.java", "diffHunk": "@@ -949,6 +946,7 @@ public int addFilesFromZip(ZipFile z) throws IOException {\n                     media.add(new Object[] {name, csum, _mtime(destPath), 0});\n                     cnt += 1;\n                 }\n+                // else ignore previously-retrieved meta", "originalCommit": "d31c3404bac0d7fe16b411aafab623d275cdab5f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzMzMyOA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7260#discussion_r493633328", "bodyText": "That may not be the best comment, but I believe it may still explain why if the condition holds, we ignore the meta", "author": "Arthur-Milchior", "createdAt": "2020-09-23T14:21:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzMTQxNA=="}], "type": "inlineReview", "revised_code": {"commit": "e3a40cd94bab4b4fa1f8476dc9bad71760e996e6", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java\nindex efaf40ced1..5db936a02f 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Media.java\n\n@@ -925,28 +925,30 @@ public class Media {\n      * This method closes the file before it returns.\n      */\n     public int addFilesFromZip(ZipFile z) throws IOException {\n-    try {\n+        try {\n             List<Object[]> media = new ArrayList<>();\n             // get meta info first\n             JSONObject meta = new JSONObject(Utils.convertStreamToString(z.getInputStream(z.getEntry(\"_meta\"))));\n             // then loop through all files\n             int cnt = 0;\n             for (ZipEntry i : Collections.list(z.entries())) {\n-                if (!\"_meta\".equals(i.getName())) {\n-                    String name = meta.getString(i.getName());\n-                    // normalize name for platform\n-                    name = Utils.nfcNormalized(name);\n-                    // save file\n-                    String destPath = dir().concat(File.separator).concat(name);\n-                    try (InputStream zipInputStream = z.getInputStream(i)) {\n-                        Utils.writeToFile(zipInputStream, destPath);\n-                    }\n-                    String csum = Utils.fileChecksum(destPath);\n-                    // update db\n-                    media.add(new Object[] {name, csum, _mtime(destPath), 0});\n-                    cnt += 1;\n+                String name = i.getName();\n+                if (\"_meta\".equals(name)) {\n+                     // ignore previously-retrieved meta\n+                    continue;\n+                }\n+                String name = meta.getString(name);\n+                // normalize name for platform\n+                name = Utils.nfcNormalized(name);\n+                // save file\n+                String destPath = dir().concat(File.separator).concat(name);\n+                try (InputStream zipInputStream = z.getInputStream(i)) {\n+                    Utils.writeToFile(zipInputStream, destPath);\n                 }\n-                // else ignore previously-retrieved meta\n+                String csum = Utils.fileChecksum(destPath);\n+                // update db\n+                media.add(new Object[] {name, csum, _mtime(destPath), 0});\n+                cnt += 1;\n             }\n             if (media.size() > 0) {\n                 mDb.executeMany(\"insert or replace into media values (?,?,?,?)\", media);\n"}}, {"oid": "e3a40cd94bab4b4fa1f8476dc9bad71760e996e6", "url": "https://github.com/ankidroid/Anki-Android/commit/e3a40cd94bab4b4fa1f8476dc9bad71760e996e6", "message": "NF: remove useless continue\n\nThen exchange if/else", "committedDate": "2020-09-23T14:27:11Z", "type": "forcePushed"}, {"oid": "11e9953397162ec990524619005f6e7dad6cf5de", "url": "https://github.com/ankidroid/Anki-Android/commit/11e9953397162ec990524619005f6e7dad6cf5de", "message": "NF: remove useless continue\n\nThen exchange if/else", "committedDate": "2020-09-23T14:29:20Z", "type": "commit"}, {"oid": "11e9953397162ec990524619005f6e7dad6cf5de", "url": "https://github.com/ankidroid/Anki-Android/commit/11e9953397162ec990524619005f6e7dad6cf5de", "message": "NF: remove useless continue\n\nThen exchange if/else", "committedDate": "2020-09-23T14:29:20Z", "type": "forcePushed"}]}