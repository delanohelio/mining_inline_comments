{"pr_number": 5967, "pr_title": "schedv1 prepared queries", "pr_createdAt": "2020-04-10T12:38:21Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/5967", "timeline": [{"oid": "86989067049d50520b4657b8c61449c030682b17", "url": "https://github.com/ankidroid/Anki-Android/commit/86989067049d50520b4657b8c61449c030682b17", "message": "schedv1 prepared queries", "committedDate": "2020-04-10T12:41:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzOTQyMQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406839421", "bodyText": "out of curiosity - these strings that are built as a bunch of ids to be used in an 'IN' query, can those not be used as an argument in a prepared statement? because if they can't then the statement preparation won't have an effect as this will change the database's view of what the statement is and mean caching is ineffective. There are few examples but it's the same general question", "author": "mikehardy", "createdAt": "2020-04-10T16:40:17Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java", "diffHunk": "@@ -1231,9 +1242,9 @@ private Card _getRevCard() {\n \n \n     public int totalRevForCurrentDeck() {\n-        return mCol.getDb().queryScalar(String.format(Locale.US,\n-        \t\t\"SELECT count() FROM cards WHERE id IN (SELECT id FROM cards WHERE did IN %s AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= %d LIMIT %s)\",\n-        \t\tUtils.ids2str(mCol.getDecks().active()), mToday, mReportLimit));\n+        return mCol.getDb().queryScalar(\n+        \t\t\"SELECT count() FROM cards WHERE id IN (SELECT id FROM cards WHERE did IN \" + Utils.ids2str(mCol.getDecks().active()) + \"  AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= ? LIMIT ?)\",", "originalCommit": "86989067049d50520b4657b8c61449c030682b17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NDY3NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406844674", "bodyText": "For what I've understood, \"?\" can only be replaced by scalars. Integers, strings... but not more complex type.\nHowever, i can't find anything on sqlite official documentation that confirm or deny it. So I expect to test it by running the code on my smartphone and seeing whether it raise an exception or not. However, I wanted feedback on the work already done before considering doing more, in order to avoid loosing time.\nNote that even if I can't prepare more this statement, those changes are far from being useless. Indeed, each time you need to refill the queue, each time you call reset in the scheduler, you'll have the exact same list of active deck, so the second time the query is executed, it'll be recognized as the same query.", "author": "Arthur-Milchior", "createdAt": "2020-04-10T16:52:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzOTQyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "7408bc537af199558fe8f28cf3ac2758c10d3331", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java\nsimilarity index 69%\nrename from AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java\nrename to AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java\nindex b7eabc8d80..8e435e8b4b 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java\n\n@@ -1231,40 +829,25 @@ public class Sched extends AbstractSched {\n     }\n \n \n-    private Card _getRevCard() {\n-        if (_fillRev()) {\n-            mRevCount -= 1;\n-            return mCol.getCard(mRevQueue.remove());\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-\n-    public int totalRevForCurrentDeck() {\n-        return mCol.getDb().queryScalar(\n-        \t\t\"SELECT count() FROM cards WHERE id IN (SELECT id FROM cards WHERE did IN \" + Utils.ids2str(mCol.getDecks().active()) + \"  AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= ? LIMIT ?)\",\n-        \t\tnew Object[]{mToday, mReportLimit});\n-    }\n-\n-\n     /**\n      * Answering a review card **************************************************\n      * *********************************************\n      */\n \n-    private void _answerRevCard(Card card, int ease) {\n+    @Override\n+    protected void _answerRevCard(Card card, int ease) {\n         int delay = 0;\n         if (ease == Consts.BUTTON_ONE) {\n             delay = _rescheduleLapse(card);\n         } else {\n             _rescheduleRev(card, ease);\n         }\n-        _logRev(card, ease, delay);\n+        _logRev(card, ease, delay, Consts.REVLOG_REV);\n     }\n \n \n-    private int _rescheduleLapse(Card card) {\n+    @Override\n+    protected int _rescheduleLapse(Card card) {\n         JSONObject conf;\n         conf = _lapseConf(card);\n         card.setLastIvl(card.getIvl());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDE4OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406840188", "bodyText": "is _deckLimit() constant here? or should it be a prepared statement '?' argument as well?", "author": "mikehardy", "createdAt": "2020-04-10T16:42:05Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java", "diffHunk": "@@ -1802,8 +1813,9 @@ public String _nextDueMsg(Context context) {\n     public boolean revDue() {\n         return mCol.getDb()\n                 .queryScalar(\n-                        \"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= \" + mToday\n-                                + \" LIMIT 1\") != 0;\n+                        \"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= ?\"", "originalCommit": "86989067049d50520b4657b8c61449c030682b17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MjY1Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406842657", "bodyText": "It's not. It was a mistake of mine. Honestly, that's a nightmare to do correctly. I proof read before doing the PR, but it will definitively needs help to check everything is done correctly.", "author": "Arthur-Milchior", "createdAt": "2020-04-10T16:47:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDE4OA=="}], "type": "inlineReview", "revised_code": {"commit": "7408bc537af199558fe8f28cf3ac2758c10d3331", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java\nsimilarity index 69%\nrename from AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java\nrename to AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java\nindex b7eabc8d80..8e435e8b4b 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Sched.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java\n\n@@ -1781,50 +1308,7 @@ public class Sched extends AbstractSched {\n     }\n \n \n-    public String _nextDueMsg(Context context) {\n-        StringBuilder sb = new StringBuilder();\n-        if (revDue()) {\n-            sb.append(\"\\n\\n\");\n-            sb.append(context.getString(R.string.studyoptions_congrats_more_rev));\n-        }\n-        if (newDue()) {\n-            sb.append(\"\\n\\n\");\n-            sb.append(context.getString(R.string.studyoptions_congrats_more_new));\n-        }\n-        if (haveBuried()) {\n-            String now;\n-            if (mHaveCustomStudy) {\n-                now = \" \" + context.getString(R.string.sched_unbury_action);\n-            } else {\n-                now = \"\";\n-            }\n-            sb.append(\"\\n\\n\");\n-            sb.append(\"\" + context.getString(R.string.sched_has_buried) + now);\n-        }\n-        if (mHaveCustomStudy && mCol.getDecks().current().getInt(\"dyn\") == 0) {\n-            sb.append(\"\\n\\n\");\n-            sb.append(context.getString(R.string.studyoptions_congrats_custom));\n-        }\n-        return sb.toString();\n-    }\n-\n-\n-    /** true if there are any rev cards due. */\n-    public boolean revDue() {\n-        return mCol.getDb()\n-                .queryScalar(\n-                        \"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= ?\"\n-                        + \" LIMIT 1\",\n-                        new Object[] {mToday}) != 0;\n-    }\n-\n-\n-    /** true if there are any new cards due. */\n-    public boolean newDue() {\n-        return mCol.getDb().queryScalar(\"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_NEW + \" LIMIT 1\") != 0;\n-    }\n-\n-\n+    @Override\n     public boolean haveBuried() {\n         return haveBuried(mCol.getDecks().active());\n     }\n"}}, {"oid": "7408bc537af199558fe8f28cf3ac2758c10d3331", "url": "https://github.com/ankidroid/Anki-Android/commit/7408bc537af199558fe8f28cf3ac2758c10d3331", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted", "committedDate": "2020-04-10T20:58:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1NTM3OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406955379", "bodyText": "Does requery support named parameters? If we do, we can reduce this to just sending did which would be a little more clear. Something along the lines of https://stackoverflow.com/a/27235389", "author": "david-allison-1", "createdAt": "2020-04-10T21:40:12Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Decks.java", "diffHunk": "@@ -314,7 +314,7 @@ public void rem(long did, boolean cardsToo, boolean childrenToo) {\n             if (cardsToo) {\n                 // don't use cids(), as we want cards in cram decks too\n                 ArrayList<Long> cids = mCol.getDb().queryColumn(Long.class,\n-                                                                \"SELECT id FROM cards WHERE did = \" + did + \" OR odid = \" + did, 0);\n+                                                                \"SELECT id FROM cards WHERE did = ? OR odid = ?\", 0, new Object[] {did, did});", "originalCommit": "7408bc537af199558fe8f28cf3ac2758c10d3331", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4NzI4Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406987287", "bodyText": "I've not seem anything related to named parameter in the library, otherwise I'd be happy to use it.", "author": "Arthur-Milchior", "createdAt": "2020-04-10T23:55:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1NTM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5MzU3OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406993578", "bodyText": "Looks like it's unsupported, that's a shame.\nrequery/requery#793", "author": "david-allison-1", "createdAt": "2020-04-11T00:36:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1NTM3OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1NjMyNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406956327", "bodyText": "I know we follow Anki downstream here, but mId != 0 ? mId : 0 makes very little sense in a strongly typed language.\nRef: https://github.com/ankitects/anki/blob/862e2b48f06dadf414d171d2cfdc4ac3ad79e7da/pylib/anki/notes.py#L195", "author": "david-allison-1", "createdAt": "2020-04-10T21:42:56Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -284,8 +284,8 @@ public Integer dupeOrEmpty() {\n         // find any matching csums and compare\n         for (String flds : mCol.getDb().queryColumn(\n                 String.class,\n-                \"SELECT flds FROM notes WHERE csum = \" + csum + \" AND id != \" + (mId != 0 ? mId : 0) + \" AND mid = \"\n-                        + mMid, 0)) {\n+                \"SELECT flds FROM notes WHERE csum = ? AND id != ? AND mid = ?\",", "originalCommit": "7408bc537af199558fe8f28cf3ac2758c10d3331", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4NzY0OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406987648", "bodyText": "I agree it makes no sens. However, I tried to make a change which is as small as possible.  Which is hard to write with a straight face given it touchs hundreds of line. But my point here is that I prefer that, at least in this commit, the only changes are done by moving parameters, and not actually by improving them.", "author": "Arthur-Milchior", "createdAt": "2020-04-10T23:57:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1NjMyNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1ODcyMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406958720", "bodyText": "Flagging the missing null, assume this is intentional.", "author": "david-allison-1", "createdAt": "2020-04-10T21:51:06Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "diffHunk": "@@ -778,8 +785,9 @@ protected boolean _fillRev() {\n                             .getDb()\n                             .getDatabase()\n                             .query(\n-                                    \"SELECT id FROM cards WHERE did = \" + did + \" AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= \" + mToday\n-                                            + \" LIMIT \" + lim, null);\n+                                    \"SELECT id FROM cards WHERE did = ? AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= ?\"", "originalCommit": "7408bc537af199558fe8f28cf3ac2758c10d3331", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4Nzg4OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406987888", "bodyText": "Yeah.\nThe null represented the fact that there was no bindings. It was there instead of the array of object. I assume the point used to be that it allows typing to work, or something like that. So anyway, it's normal that it disappears", "author": "Arthur-Milchior", "createdAt": "2020-04-10T23:58:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1ODcyMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NDQ1MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406964451", "bodyText": "\u26a0\ufe0f The parameter seems wrong", "author": "david-allison-1", "createdAt": "2020-04-10T22:11:29Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -1901,14 +1910,15 @@ public String _nextDueMsg(Context context) {\n     public boolean revDue() {\n         return mCol.getDb()\n                 .queryScalar(\n-                        \"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= \" + mToday\n-                                + \" LIMIT 1\") != 0;\n+                        \"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_REV + \" AND due <= ?\"\n+                                + \" LIMIT 1\",\n+                        new Object[] {mToday}) != 0;\n     }\n \n \n     /** true if there are any new cards due. */\n     public boolean newDue() {\n-        return mCol.getDb().queryScalar(\"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_NEW + \" LIMIT 1\") != 0;\n+        return mCol.getDb().queryScalar(\"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_NEW + \" LIMIT 1\", new Object[] {_deckLimit()}) != 0;", "originalCommit": "7408bc537af199558fe8f28cf3ac2758c10d3331", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4Nzk1Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406987952", "bodyText": "Yeah, thanks", "author": "Arthur-Milchior", "createdAt": "2020-04-10T23:59:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NDQ1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5MDM3NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406990374", "bodyText": "Corrected by a push force normally", "author": "Arthur-Milchior", "createdAt": "2020-04-11T00:14:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NDQ1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "d5c91c50eadf1ab069289ad672898093b6a7cba6", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java\nindex c0c28150d2..cb310bbd06 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java\n\n@@ -1918,7 +1918,7 @@ public class SchedV2 extends AbstractSched {\n \n     /** true if there are any new cards due. */\n     public boolean newDue() {\n-        return mCol.getDb().queryScalar(\"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_NEW + \" LIMIT 1\", new Object[] {_deckLimit()}) != 0;\n+        return mCol.getDb().queryScalar(\"SELECT 1 FROM cards WHERE did IN \" + _deckLimit() + \" AND queue = \" + Consts.QUEUE_TYPE_NEW + \" LIMIT 1\") != 0;\n     }\n \n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NDk5Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406964992", "bodyText": "(nit) I know we're copying from the original, but it'd be nice to space out the due<=?", "author": "david-allison-1", "createdAt": "2020-04-10T22:13:35Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -2146,9 +2159,10 @@ protected void _burySiblings(Card card) {\n         // loop through and remove from queues\n         Cursor cur = null;\n         try {\n-            cur = mCol.getDb().getDatabase().query(String.format(Locale.US,\n-                    \"select id, queue from cards where nid=%d and id!=%d \"+\n-                    \"and (queue=\" + Consts.QUEUE_TYPE_NEW + \" or (queue=\" + Consts.QUEUE_TYPE_REV + \" and due<=%d))\", card.getNid(), card.getId(), mToday), null);\n+            cur = mCol.getDb().getDatabase().query(\n+                    \"select id, queue from cards where nid=? and id!=? \"+\n+                    \"and (queue=\" + Consts.QUEUE_TYPE_NEW + \" or (queue=\" + Consts.QUEUE_TYPE_REV + \" and due<=?))\",", "originalCommit": "7408bc537af199558fe8f28cf3ac2758c10d3331", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4ODI1MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406988251", "bodyText": "I'd really prefer to limit this change to be as small as possible in this commit. However, I'd be happy to see a bunch of other commit improving readability.\nIf Mike tells me to add spaces, I'll do it", "author": "Arthur-Milchior", "createdAt": "2020-04-11T00:00:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NDk5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxMzQ3Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r407013477", "bodyText": "small changes are beautiful :-). Can always add commits or separate PRs later", "author": "mikehardy", "createdAt": "2020-04-11T03:56:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NDk5Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NjEwNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406966106", "bodyText": "I'll ask whether queryColumn is the correct abstraction here. We seem to only be using it to pass in 0, querySingleColumn would be more descriptive, and would reduce the surface for bugs.", "author": "david-allison-1", "createdAt": "2020-04-10T22:18:02Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -2294,13 +2311,15 @@ public void sortCards(long[] cids, int start, int step, boolean shuffle, boolean\n \n \n     public void randomizeCards(long did) {\n-        List<Long> cids = mCol.getDb().queryColumn(Long.class, \"select id from cards where did = \" + did, 0);\n+        List<Long> cids = mCol.getDb().queryColumn(Long.class, \"select id from cards where did = ?\", 0,", "originalCommit": "7408bc537af199558fe8f28cf3ac2758c10d3331", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4ODM4MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406988381", "bodyText": "Similar remark, you're theoretically right, but not for this commit. At least not if we want to keep it readable. It'll clearly be great in another commit", "author": "Arthur-Milchior", "createdAt": "2020-04-11T00:01:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NjEwNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2Njc4OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5967#discussion_r406966788", "bodyText": "similar nit: spacing on +ivl", "author": "david-allison-1", "createdAt": "2020-04-10T22:20:47Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -2353,9 +2373,11 @@ private void _removeAllFromLearning() {\n     private void _removeAllFromLearning(int schedVer) {\n         // remove review cards from relearning\n         if (schedVer == 1) {\n-            mCol.getDb().execute(String.format(Locale.US,\"update cards set due = odue, queue = \" + Consts.QUEUE_TYPE_REV + \", type = \" + Consts.CARD_TYPE_REV + \", mod = %d, usn = %d, odue = 0 where queue in (\" + Consts.QUEUE_TYPE_LRN + \",\" + Consts.QUEUE_TYPE_DAY_LEARN_RELEARN + \") and type in (\" + Consts.CARD_TYPE_REV + \",\" + Consts.CARD_TYPE_RELEARNING + \")\", Utils.intTime(), mCol.usn()));\n+            mCol.getDb().execute(\"update cards set due = odue, queue = \" + Consts.QUEUE_TYPE_REV + \", type = \" + Consts.CARD_TYPE_REV + \", mod = ?, usn = ?, odue = 0 where queue in (\" + Consts.QUEUE_TYPE_LRN + \",\" + Consts.QUEUE_TYPE_DAY_LEARN_RELEARN + \") and type in (\" + Consts.CARD_TYPE_REV + \",\" + Consts.CARD_TYPE_RELEARNING + \")\",\n+                                 new Object[] {Utils.intTime(), mCol.usn()});\n         } else {\n-            mCol.getDb().execute(String.format(Locale.US,\"update cards set due = %d+ivl, queue = \" + Consts.QUEUE_TYPE_REV + \", type = \" + Consts.CARD_TYPE_REV + \", mod = %d, usn = %d, odue = 0 where queue in (\" + Consts.QUEUE_TYPE_LRN + \",\" + Consts.QUEUE_TYPE_DAY_LEARN_RELEARN + \") and type in (\" + Consts.CARD_TYPE_REV + \",\" + Consts.CARD_TYPE_RELEARNING + \")\", mToday, Utils.intTime(), mCol.usn()));\n+            mCol.getDb().execute(\"update cards set due = ?+ivl, queue = \" + Consts.QUEUE_TYPE_REV + \", type = \" + Consts.CARD_TYPE_REV + \", mod = ?, usn = ?, odue = 0 where queue in (\" + Consts.QUEUE_TYPE_LRN + \",\" + Consts.QUEUE_TYPE_DAY_LEARN_RELEARN + \") and type in (\" + Consts.CARD_TYPE_REV + \",\" + Consts.CARD_TYPE_RELEARNING + \")\",", "originalCommit": "7408bc537af199558fe8f28cf3ac2758c10d3331", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "d5c91c50eadf1ab069289ad672898093b6a7cba6", "url": "https://github.com/ankidroid/Anki-Android/commit/d5c91c50eadf1ab069289ad672898093b6a7cba6", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted", "committedDate": "2020-04-10T23:59:27Z", "type": "forcePushed"}, {"oid": "c76148d070f49cecb8ce247cd7ea2e6159d95bfb", "url": "https://github.com/ankidroid/Anki-Android/commit/c76148d070f49cecb8ce247cd7ea2e6159d95bfb", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted", "committedDate": "2020-04-11T18:14:45Z", "type": "forcePushed"}, {"oid": "763632c5a9cee3cf6298e483ed1f8e774a71a9b4", "url": "https://github.com/ankidroid/Anki-Android/commit/763632c5a9cee3cf6298e483ed1f8e774a71a9b4", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted", "committedDate": "2020-04-11T18:25:13Z", "type": "forcePushed"}, {"oid": "8c2f254d8c958e517c7e60db88ad228028837aef", "url": "https://github.com/ankidroid/Anki-Android/commit/8c2f254d8c958e517c7e60db88ad228028837aef", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted", "committedDate": "2020-04-11T20:28:15Z", "type": "commit"}, {"oid": "8c2f254d8c958e517c7e60db88ad228028837aef", "url": "https://github.com/ankidroid/Anki-Android/commit/8c2f254d8c958e517c7e60db88ad228028837aef", "message": "Prepared queries\n\nIn order to improve speed of code, preparred queries are better than\ncreating queries where values change. So here they are.\n\nIt also adds a few methods in libanki/DB.java in order to allow more\npreparred queries.\n\nQueries with IN are not entirely preparred. This is because ? can only\nbe replaced by constant I believe. I'll test and push in another\ncommit. Note that preparring partly those queries is still\ninteresting. Indeed, sometime the query won't change the \"IN ....\"\npart and only change some other part. This way, preparation won't be wasted", "committedDate": "2020-04-11T20:28:15Z", "type": "forcePushed"}]}