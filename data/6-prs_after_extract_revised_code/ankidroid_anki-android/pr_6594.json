{"pr_number": 6594, "pr_title": "Counts reset if required", "pr_createdAt": "2020-06-30T20:30:12Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6594", "timeline": [{"oid": "ff50cde4fe74a4b9e9db6d9ccd8a24a1f85f3530", "url": "https://github.com/ankidroid/Anki-Android/commit/ff50cde4fe74a4b9e9db6d9ccd8a24a1f85f3530", "message": "Regression for #6587\n\nTest by David, I only add it to my PR for some reason", "committedDate": "2020-06-30T23:46:25Z", "type": "forcePushed"}, {"oid": "90020b19391875826460d63eeecc1be01b361e49", "url": "https://github.com/ankidroid/Anki-Android/commit/90020b19391875826460d63eeecc1be01b361e49", "message": "Unit test for 6587", "committedDate": "2020-06-30T23:52:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0NzQyMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#discussion_r448047420", "bodyText": "Love the multi-scheduler running @david-allison-1 !", "author": "mikehardy", "createdAt": "2020-07-01T00:14:49Z", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.libanki.sched;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.anki.exception.ConfirmModSchemaException;\n+import com.ichi2.async.CollectionTask;\n+import com.ichi2.libanki.Card;\n+import com.ichi2.libanki.Consts;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.ParameterizedRobolectricTestRunner;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameter;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameters;\n+\n+import java.util.Arrays;\n+\n+import static com.ichi2.anki.AbstractFlashcardViewer.EASE_3;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.not;\n+\n+// Note: These tests can't be run individually but can from the class-level\n+// gradlew AnkiDroid:testDebug --tests \"com.ichi2.libanki.sched.AbstractSchedTest.*\"\n+@RunWith(ParameterizedRobolectricTestRunner.class)", "originalCommit": "90020b19391875826460d63eeecc1be01b361e49", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f42a70f6e7a42d1a3fe56b36750fef593f93f0d", "chunk": "diff --git a/AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java b/AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java\nindex 0a00acc34..faa5cb451 100644\n--- a/AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java\n+++ b/AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java\n\n@@ -70,6 +70,7 @@ public class AbstractSchedTest extends RobolectricTest {\n         sched.reset();\n \n         Card cardBeforeUndo = sched.getCard();\n+        sched.setCurrentCard(cardBeforeUndo);\n         int[] countsBeforeUndo = sched.counts();\n         // Not shown in the UI, but there is a state where the card has been removed from the queue, but not answered\n         // where the counts are decremented.\n"}}, {"oid": "9f42a70f6e7a42d1a3fe56b36750fef593f93f0d", "url": "https://github.com/ankidroid/Anki-Android/commit/9f42a70f6e7a42d1a3fe56b36750fef593f93f0d", "message": "Counts reset if required\n\nThis should solve\nhttps://github.com/ankidroid/Anki-Android/issues/6587 while still\ndoing resets only when they are required.\n\nThanks to David for finding the cause of the bug so quickly.", "committedDate": "2020-07-01T00:46:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1Nzg5NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#discussion_r448057894", "bodyText": "Does this block wait until the task is completed?", "author": "david-allison-1", "createdAt": "2020-07-01T00:55:30Z", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.libanki.sched;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.anki.exception.ConfirmModSchemaException;\n+import com.ichi2.async.CollectionTask;\n+import com.ichi2.libanki.Card;\n+import com.ichi2.libanki.Consts;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.ParameterizedRobolectricTestRunner;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameter;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameters;\n+\n+import java.util.Arrays;\n+\n+import static com.ichi2.anki.AbstractFlashcardViewer.EASE_3;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.not;\n+\n+// Note: These tests can't be run individually but can from the class-level\n+// gradlew AnkiDroid:testDebug --tests \"com.ichi2.libanki.sched.AbstractSchedTest.*\"\n+@RunWith(ParameterizedRobolectricTestRunner.class)\n+public class AbstractSchedTest extends RobolectricTest {\n+\n+    @Parameter\n+    public int schedVersion;\n+\n+    @Parameters(name = \"SchedV{0}\")\n+    public static java.util.Collection<Object[]> initParameters() {\n+        // This does one run with schedVersion injected as 1, and one run as 2\n+        return Arrays.asList(new Object[][] { { 1 }, { 2 } });\n+    }\n+\n+    @Before\n+    @Override\n+    public void setUp() {\n+        super.setUp();\n+        try {\n+            getCol().changeSchedulerVer(schedVersion);\n+        } catch (ConfirmModSchemaException e) {\n+            throw new RuntimeException(\"Could not change schedVer\", e);\n+        }\n+    }\n+\n+    @Test\n+    public void testUndoResetsCardCountsToCorrectValue() throws InterruptedException {\n+        // #6587\n+        addNoteUsingBasicModel(\"Hello\", \"World\");\n+\n+        AbstractSched sched = getCol().getSched();\n+        sched.reset();\n+\n+        Card cardBeforeUndo = sched.getCard();\n+        sched.setCurrentCard(cardBeforeUndo);\n+        int[] countsBeforeUndo = sched.counts();\n+        // Not shown in the UI, but there is a state where the card has been removed from the queue, but not answered\n+        // where the counts are decremented.\n+        assertThat(countsBeforeUndo, is(new int[] { 0, 0, 0 }));\n+\n+        sched.answerCard(cardBeforeUndo, EASE_3);\n+\n+        CollectionTask.launchCollectionTask(CollectionTask.TASK_TYPE_UNDO,", "originalCommit": "9f42a70f6e7a42d1a3fe56b36750fef593f93f0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1OTU2OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#discussion_r448059568", "bodyText": "The actual test is done when the task is completed. Don't know whether it is your question", "author": "Arthur-Milchior", "createdAt": "2020-07-01T01:02:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1Nzg5NA=="}], "type": "inlineReview", "revised_code": {"commit": "9faed4b3a7df8be414e01ce2a20488195a9bfd3b", "chunk": "diff --git a/AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java b/AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java\ndeleted file mode 100644\nindex faa5cb451..000000000\n--- a/AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java\n+++ /dev/null\n\n@@ -1,110 +0,0 @@\n-/*\n- Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n-\n- This program is free software; you can redistribute it and/or modify it under\n- the terms of the GNU General Public License as published by the Free Software\n- Foundation; either version 3 of the License, or (at your option) any later\n- version.\n-\n- This program is distributed in the hope that it will be useful, but WITHOUT ANY\n- WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n- PARTICULAR PURPOSE. See the GNU General Public License for more details.\n-\n- You should have received a copy of the GNU General Public License along with\n- this program.  If not, see <http://www.gnu.org/licenses/>.\n- */\n-\n-package com.ichi2.libanki.sched;\n-\n-import com.ichi2.anki.RobolectricTest;\n-import com.ichi2.anki.exception.ConfirmModSchemaException;\n-import com.ichi2.async.CollectionTask;\n-import com.ichi2.libanki.Card;\n-import com.ichi2.libanki.Consts;\n-\n-import org.junit.Before;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.robolectric.ParameterizedRobolectricTestRunner;\n-import org.robolectric.ParameterizedRobolectricTestRunner.Parameter;\n-import org.robolectric.ParameterizedRobolectricTestRunner.Parameters;\n-\n-import java.util.Arrays;\n-\n-import static com.ichi2.anki.AbstractFlashcardViewer.EASE_3;\n-import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.hamcrest.Matchers.is;\n-import static org.hamcrest.Matchers.not;\n-\n-// Note: These tests can't be run individually but can from the class-level\n-// gradlew AnkiDroid:testDebug --tests \"com.ichi2.libanki.sched.AbstractSchedTest.*\"\n-@RunWith(ParameterizedRobolectricTestRunner.class)\n-public class AbstractSchedTest extends RobolectricTest {\n-\n-    @Parameter\n-    public int schedVersion;\n-\n-    @Parameters(name = \"SchedV{0}\")\n-    public static java.util.Collection<Object[]> initParameters() {\n-        // This does one run with schedVersion injected as 1, and one run as 2\n-        return Arrays.asList(new Object[][] { { 1 }, { 2 } });\n-    }\n-\n-    @Before\n-    @Override\n-    public void setUp() {\n-        super.setUp();\n-        try {\n-            getCol().changeSchedulerVer(schedVersion);\n-        } catch (ConfirmModSchemaException e) {\n-            throw new RuntimeException(\"Could not change schedVer\", e);\n-        }\n-    }\n-\n-    @Test\n-    public void testUndoResetsCardCountsToCorrectValue() throws InterruptedException {\n-        // #6587\n-        addNoteUsingBasicModel(\"Hello\", \"World\");\n-\n-        AbstractSched sched = getCol().getSched();\n-        sched.reset();\n-\n-        Card cardBeforeUndo = sched.getCard();\n-        sched.setCurrentCard(cardBeforeUndo);\n-        int[] countsBeforeUndo = sched.counts();\n-        // Not shown in the UI, but there is a state where the card has been removed from the queue, but not answered\n-        // where the counts are decremented.\n-        assertThat(countsBeforeUndo, is(new int[] { 0, 0, 0 }));\n-\n-        sched.answerCard(cardBeforeUndo, EASE_3);\n-\n-        CollectionTask.launchCollectionTask(CollectionTask.TASK_TYPE_UNDO,\n-                new CollectionTask.Listener() {\n-                    @Override\n-                    public void onPreExecute(CollectionTask task) {\n-\n-                    }\n-\n-\n-                    @Override\n-                    public void onPostExecute(CollectionTask task, CollectionTask.TaskData result) {\n-                        int[] countsAfterUndo = sched.counts();\n-                        assertThat(\"Counts after an undo should be the same as before an undo\", countsAfterUndo, is(countsBeforeUndo));\n-\n-                    }\n-\n-\n-                    @Override\n-                    public void onProgressUpdate(CollectionTask task, CollectionTask.TaskData... values) {\n-                        Card undoneCard = (Card)values[0].getCard();\n-                        sched.setCurrentCard(undoneCard);\n-                    }\n-\n-\n-                    @Override\n-                    public void onCancelled() {\n-\n-                    }\n-                });\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1ODIxMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#discussion_r448058210", "bodyText": "Why is this not done in the background in the task?", "author": "david-allison-1", "createdAt": "2020-07-01T00:56:43Z", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.libanki.sched;\n+\n+import com.ichi2.anki.RobolectricTest;\n+import com.ichi2.anki.exception.ConfirmModSchemaException;\n+import com.ichi2.async.CollectionTask;\n+import com.ichi2.libanki.Card;\n+import com.ichi2.libanki.Consts;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.ParameterizedRobolectricTestRunner;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameter;\n+import org.robolectric.ParameterizedRobolectricTestRunner.Parameters;\n+\n+import java.util.Arrays;\n+\n+import static com.ichi2.anki.AbstractFlashcardViewer.EASE_3;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.not;\n+\n+// Note: These tests can't be run individually but can from the class-level\n+// gradlew AnkiDroid:testDebug --tests \"com.ichi2.libanki.sched.AbstractSchedTest.*\"\n+@RunWith(ParameterizedRobolectricTestRunner.class)\n+public class AbstractSchedTest extends RobolectricTest {\n+\n+    @Parameter\n+    public int schedVersion;\n+\n+    @Parameters(name = \"SchedV{0}\")\n+    public static java.util.Collection<Object[]> initParameters() {\n+        // This does one run with schedVersion injected as 1, and one run as 2\n+        return Arrays.asList(new Object[][] { { 1 }, { 2 } });\n+    }\n+\n+    @Before\n+    @Override\n+    public void setUp() {\n+        super.setUp();\n+        try {\n+            getCol().changeSchedulerVer(schedVersion);\n+        } catch (ConfirmModSchemaException e) {\n+            throw new RuntimeException(\"Could not change schedVer\", e);\n+        }\n+    }\n+\n+    @Test\n+    public void testUndoResetsCardCountsToCorrectValue() throws InterruptedException {\n+        // #6587\n+        addNoteUsingBasicModel(\"Hello\", \"World\");\n+\n+        AbstractSched sched = getCol().getSched();\n+        sched.reset();\n+\n+        Card cardBeforeUndo = sched.getCard();\n+        sched.setCurrentCard(cardBeforeUndo);\n+        int[] countsBeforeUndo = sched.counts();\n+        // Not shown in the UI, but there is a state where the card has been removed from the queue, but not answered\n+        // where the counts are decremented.\n+        assertThat(countsBeforeUndo, is(new int[] { 0, 0, 0 }));\n+\n+        sched.answerCard(cardBeforeUndo, EASE_3);\n+\n+        CollectionTask.launchCollectionTask(CollectionTask.TASK_TYPE_UNDO,\n+                new CollectionTask.Listener() {\n+                    @Override\n+                    public void onPreExecute(CollectionTask task) {\n+\n+                    }\n+\n+\n+                    @Override\n+                    public void onPostExecute(CollectionTask task, CollectionTask.TaskData result) {\n+                        int[] countsAfterUndo = sched.counts();\n+                        assertThat(\"Counts after an undo should be the same as before an undo\", countsAfterUndo, is(countsBeforeUndo));\n+\n+                    }\n+\n+\n+                    @Override\n+                    public void onProgressUpdate(CollectionTask task, CollectionTask.TaskData... values) {\n+                        Card undoneCard = (Card)values[0].getCard();\n+                        sched.setCurrentCard(undoneCard);", "originalCommit": "9f42a70f6e7a42d1a3fe56b36750fef593f93f0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1OTI2Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6594#discussion_r448059262", "bodyText": "This is simulating the reviewer. The reviewer does this in onProgessUpdate.", "author": "Arthur-Milchior", "createdAt": "2020-07-01T01:00:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1ODIxMA=="}], "type": "inlineReview", "revised_code": {"commit": "9faed4b3a7df8be414e01ce2a20488195a9bfd3b", "chunk": "diff --git a/AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java b/AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java\ndeleted file mode 100644\nindex faa5cb451..000000000\n--- a/AnkiDroid/src/test/java/com/ichi2/libanki/sched/AbstractSchedTest.java\n+++ /dev/null\n\n@@ -1,110 +0,0 @@\n-/*\n- Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n-\n- This program is free software; you can redistribute it and/or modify it under\n- the terms of the GNU General Public License as published by the Free Software\n- Foundation; either version 3 of the License, or (at your option) any later\n- version.\n-\n- This program is distributed in the hope that it will be useful, but WITHOUT ANY\n- WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n- PARTICULAR PURPOSE. See the GNU General Public License for more details.\n-\n- You should have received a copy of the GNU General Public License along with\n- this program.  If not, see <http://www.gnu.org/licenses/>.\n- */\n-\n-package com.ichi2.libanki.sched;\n-\n-import com.ichi2.anki.RobolectricTest;\n-import com.ichi2.anki.exception.ConfirmModSchemaException;\n-import com.ichi2.async.CollectionTask;\n-import com.ichi2.libanki.Card;\n-import com.ichi2.libanki.Consts;\n-\n-import org.junit.Before;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.robolectric.ParameterizedRobolectricTestRunner;\n-import org.robolectric.ParameterizedRobolectricTestRunner.Parameter;\n-import org.robolectric.ParameterizedRobolectricTestRunner.Parameters;\n-\n-import java.util.Arrays;\n-\n-import static com.ichi2.anki.AbstractFlashcardViewer.EASE_3;\n-import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.hamcrest.Matchers.is;\n-import static org.hamcrest.Matchers.not;\n-\n-// Note: These tests can't be run individually but can from the class-level\n-// gradlew AnkiDroid:testDebug --tests \"com.ichi2.libanki.sched.AbstractSchedTest.*\"\n-@RunWith(ParameterizedRobolectricTestRunner.class)\n-public class AbstractSchedTest extends RobolectricTest {\n-\n-    @Parameter\n-    public int schedVersion;\n-\n-    @Parameters(name = \"SchedV{0}\")\n-    public static java.util.Collection<Object[]> initParameters() {\n-        // This does one run with schedVersion injected as 1, and one run as 2\n-        return Arrays.asList(new Object[][] { { 1 }, { 2 } });\n-    }\n-\n-    @Before\n-    @Override\n-    public void setUp() {\n-        super.setUp();\n-        try {\n-            getCol().changeSchedulerVer(schedVersion);\n-        } catch (ConfirmModSchemaException e) {\n-            throw new RuntimeException(\"Could not change schedVer\", e);\n-        }\n-    }\n-\n-    @Test\n-    public void testUndoResetsCardCountsToCorrectValue() throws InterruptedException {\n-        // #6587\n-        addNoteUsingBasicModel(\"Hello\", \"World\");\n-\n-        AbstractSched sched = getCol().getSched();\n-        sched.reset();\n-\n-        Card cardBeforeUndo = sched.getCard();\n-        sched.setCurrentCard(cardBeforeUndo);\n-        int[] countsBeforeUndo = sched.counts();\n-        // Not shown in the UI, but there is a state where the card has been removed from the queue, but not answered\n-        // where the counts are decremented.\n-        assertThat(countsBeforeUndo, is(new int[] { 0, 0, 0 }));\n-\n-        sched.answerCard(cardBeforeUndo, EASE_3);\n-\n-        CollectionTask.launchCollectionTask(CollectionTask.TASK_TYPE_UNDO,\n-                new CollectionTask.Listener() {\n-                    @Override\n-                    public void onPreExecute(CollectionTask task) {\n-\n-                    }\n-\n-\n-                    @Override\n-                    public void onPostExecute(CollectionTask task, CollectionTask.TaskData result) {\n-                        int[] countsAfterUndo = sched.counts();\n-                        assertThat(\"Counts after an undo should be the same as before an undo\", countsAfterUndo, is(countsBeforeUndo));\n-\n-                    }\n-\n-\n-                    @Override\n-                    public void onProgressUpdate(CollectionTask task, CollectionTask.TaskData... values) {\n-                        Card undoneCard = (Card)values[0].getCard();\n-                        sched.setCurrentCard(undoneCard);\n-                    }\n-\n-\n-                    @Override\n-                    public void onCancelled() {\n-\n-                    }\n-                });\n-    }\n-}\n"}}, {"oid": "f336ece83b299012ddf484a5074c90cc1158d05b", "url": "https://github.com/ankidroid/Anki-Android/commit/f336ece83b299012ddf484a5074c90cc1158d05b", "message": "Counts reset if required\n\nThis should solve\nhttps://github.com/ankidroid/Anki-Android/issues/6587 while still\ndoing resets only when they are required.\n\nThanks to David for finding the cause of the bug so quickly.", "committedDate": "2020-07-01T01:57:17Z", "type": "forcePushed"}, {"oid": "9faed4b3a7df8be414e01ce2a20488195a9bfd3b", "url": "https://github.com/ankidroid/Anki-Android/commit/9faed4b3a7df8be414e01ce2a20488195a9bfd3b", "message": "Undo: decrement count AFTER reset", "committedDate": "2020-07-01T03:15:39Z", "type": "commit"}, {"oid": "86fa6789a504486588bdf7feb8ff0515b5a7785b", "url": "https://github.com/ankidroid/Anki-Android/commit/86fa6789a504486588bdf7feb8ff0515b5a7785b", "message": "Unit test for 6587", "committedDate": "2020-07-01T03:15:51Z", "type": "commit"}, {"oid": "a8d9a14243014f9d71a3c5fcf736926ae2cc0a5c", "url": "https://github.com/ankidroid/Anki-Android/commit/a8d9a14243014f9d71a3c5fcf736926ae2cc0a5c", "message": "Counts reset if required\n\nThis should solve\nhttps://github.com/ankidroid/Anki-Android/issues/6587 while still\ndoing resets only when they are required.\n\nThanks to David for finding the cause of the bug so quickly.", "committedDate": "2020-07-01T03:22:32Z", "type": "commit"}, {"oid": "a8d9a14243014f9d71a3c5fcf736926ae2cc0a5c", "url": "https://github.com/ankidroid/Anki-Android/commit/a8d9a14243014f9d71a3c5fcf736926ae2cc0a5c", "message": "Counts reset if required\n\nThis should solve\nhttps://github.com/ankidroid/Anki-Android/issues/6587 while still\ndoing resets only when they are required.\n\nThanks to David for finding the cause of the bug so quickly.", "committedDate": "2020-07-01T03:22:32Z", "type": "forcePushed"}]}