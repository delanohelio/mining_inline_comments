{"pr_number": 6571, "pr_title": "Reminder becomes quicker", "pr_createdAt": "2020-06-28T22:42:48Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6571", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwNzkwNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446707905", "bodyText": "Can we exit early if this isn't true?", "author": "david-allison-1", "createdAt": "2020-06-28T22:47:13Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -31,67 +31,78 @@\n import com.ichi2.anki.IntentHandler;\n import com.ichi2.anki.NotificationChannels;\n import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection;\n+import com.ichi2.libanki.sched.AbstractSched;\n import com.ichi2.libanki.sched.Sched;\n+import com.ichi2.utils.JSONObject;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n \n public class ReminderService extends BroadcastReceiver {\n \n+    public static final String EXTRA_DECK_OPTION_ID = \"EXTRA_DECK_OPTION_ID\";\n     public static final String EXTRA_DECK_ID = \"EXTRA_DECK_ID\";\n \n     @Override\n     public void onReceive(Context context, Intent intent) {\n \n-        final long deckId = intent.getLongExtra(EXTRA_DECK_ID, 0);\n+        final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n \n-        if (CollectionHelper.getInstance().getCol(context).getDecks().get(deckId, false) == null) {\n+        if (CollectionHelper.getInstance().getCol(context).getDecks().getConf(dConfId) == null) {\n             final AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n \n             final PendingIntent reminderIntent = PendingIntent.getBroadcast(\n                     context,\n-                    (int) deckId,\n-                    new Intent(context, ReminderService.class).putExtra(EXTRA_DECK_ID, deckId),\n+                    (int) dConfId,\n+                    new Intent(context, ReminderService.class).putExtra(EXTRA_DECK_OPTION_ID, dConfId),\n                     0\n             );\n \n             alarmManager.cancel(reminderIntent);\n         }\n \n-        Sched.DeckDueTreeNode deckDue = getDeckDue(context, deckId, true);\n+        List<Sched.DeckDueTreeNode> decksDue = getDeckOptionDue(context, dConfId, true);\n \n-        if (null == deckDue) {\n+        if (null == decksDue) {\n             return;\n         }\n \n-        final int total = deckDue.getRevCount() + deckDue.getLrnCount() + deckDue.getNewCount();\n+        for (Sched.DeckDueTreeNode deckDue: decksDue) {\n+            long deckId = deckDue.getDid();\n+            final int total = deckDue.getRevCount() + deckDue.getLrnCount() + deckDue.getNewCount();\n \n-        if (total <= 0) {\n-            return;\n-        }\n+            if (total <= 0) {\n+                continue;\n+            }\n \n-        final NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);\n-\n-        if (notificationManager.areNotificationsEnabled()) {\n-            final Notification notification =\n-                    new NotificationCompat.Builder(context,\n-                            NotificationChannels.getId(NotificationChannels.Channel.DECK_REMINDERS))\n-                    .setCategory(NotificationCompat.CATEGORY_REMINDER)\n-                    .setContentTitle(context.getString(R.string.reminder_title))\n-                    .setContentText(context.getResources().getQuantityString(\n-                            R.plurals.reminder_text,\n-                            total,\n-                            CollectionHelper.getInstance().getCol(context).getDecks().name(deckId),\n-                            total\n-                    ))\n-                    .setSmallIcon(R.drawable.ic_stat_notify)\n-                    .setColor(ContextCompat.getColor(context, R.color.material_light_blue_700))\n-                    .setContentIntent(PendingIntent.getActivity(\n-                            context,\n-                            (int) deckId,\n-                            getReviewDeckIntent(context, deckId),\n-                            PendingIntent.FLAG_UPDATE_CURRENT\n-                    ))\n-                    .setAutoCancel(true)\n-                    .build();\n-            notificationManager.notify((int) deckId, notification);\n+            final NotificationManagerCompat notificationManager = NotificationManagerCompat.from(context);\n+\n+            Timber.v(\"Notify: study deck %s\", deckDue.getFullDeckName());\n+            if (notificationManager.areNotificationsEnabled()) {", "originalCommit": "e6915cca49db1e5573bfe5dee6417df1c744ad4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcxMzkzMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446713930", "bodyText": "Yes. That was actually true even before this PR", "author": "Arthur-Milchior", "createdAt": "2020-06-28T23:47:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwNzkwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0MzE5NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r447043194", "bodyText": "Done in another commit", "author": "Arthur-Milchior", "createdAt": "2020-06-29T15:07:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwNzkwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "fffaec6685c55b56100b766dbc0ee9d9921adfd5", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\nindex 8dcdbf77c..fb61a75bc 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n\n@@ -44,10 +45,34 @@ public class ReminderService extends BroadcastReceiver {\n     public static final String EXTRA_DECK_OPTION_ID = \"EXTRA_DECK_OPTION_ID\";\n     public static final String EXTRA_DECK_ID = \"EXTRA_DECK_ID\";\n \n+\n+    /** Cancelling all deck reminder. We used to use them, now we have deck option reminders. */\n+    private void cancelDeckReminder(Context context, Intent intent) {\n+        // 0 Is not a valid deck id.\n+        final long deckId = intent.getLongExtra(EXTRA_DECK_ID, 0);\n+        if (deckId != 0) {\n+            final AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n+\n+            final PendingIntent reminderIntent = PendingIntent.getBroadcast(\n+                    context,\n+                    (int) deckId,\n+                    new Intent(context, ReminderService.class).putExtra(EXTRA_DECK_OPTION_ID, deckId),\n+                    0\n+            );\n+\n+            alarmManager.cancel(reminderIntent);\n+        }\n+    }\n+\n     @Override\n     public void onReceive(Context context, Intent intent) {\n+        cancelDeckReminder(context, intent);\n \n+        // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n+        if (dConfId == 0) {\n+            return;\n+        }\n \n         if (CollectionHelper.getInstance().getCol(context).getDecks().getConf(dConfId) == null) {\n             final AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODEwNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446708105", "bodyText": "rare race condition here: col.getDecks().get(node.getDid()) could be deleted, in this case, we check the default deck multiple times.", "author": "david-allison-1", "createdAt": "2020-06-28T22:49:49Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -103,20 +114,23 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true\n-    private Sched.DeckDueTreeNode getDeckDue(Context context, long deckId, boolean recur) {\n+    private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n \n+        Collection col = CollectionHelper.getInstance().getCol(context);\n         // Avoid crashes if the deck is deleted while we are working\n-        if (CollectionHelper.getInstance().getCol(context).getDecks().get(deckId, false) == null) {\n-            Timber.d(\"Deck %s deleted while ReminderService was working. Ignoring\", deckId);\n+        if (col.getDecks().getConf(dConfId) == null) {\n+            Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n             return null;\n         }\n \n+        List<Sched.DeckDueTreeNode> decks = new ArrayList<>();\n         try {\n             for (Sched.DeckDueTreeNode node : CollectionHelper.getInstance().getCol(context).getSched().deckDueTree()) {\n-                if (node.getDid() == deckId) {\n-                    return node;\n+                if (col.getDecks().get(node.getDid()).optLong(\"conf\") == dConfId) {", "originalCommit": "e6915cca49db1e5573bfe5dee6417df1c744ad4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcxNDE0Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446714147", "bodyText": "Nice catch", "author": "Arthur-Milchior", "createdAt": "2020-06-28T23:49:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODEwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "fffaec6685c55b56100b766dbc0ee9d9921adfd5", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\nindex 8dcdbf77c..fb61a75bc 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n\n@@ -114,6 +140,7 @@ public class ReminderService extends BroadcastReceiver {\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true\n+    @Nullable\n     private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n \n         Collection col = CollectionHelper.getInstance().getCol(context);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODM4MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446708381", "bodyText": "@Nullable. But, should we return an empty list here?", "author": "david-allison-1", "createdAt": "2020-06-28T22:52:23Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -103,20 +114,23 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true\n-    private Sched.DeckDueTreeNode getDeckDue(Context context, long deckId, boolean recur) {\n+    private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {", "originalCommit": "e6915cca49db1e5573bfe5dee6417df1c744ad4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcxNDQ2NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446714465", "bodyText": "Before and after this PR it is null only if there is an exception after two tries, with one second between both try. I believe that it's nice that \"null\" and empty list have distinct meaning, i.e. error and no element founds.\nI see no reason to change the return value in case of error here, the current choice in master seems good to me", "author": "Arthur-Milchior", "createdAt": "2020-06-28T23:51:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODM4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "fffaec6685c55b56100b766dbc0ee9d9921adfd5", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\nindex 8dcdbf77c..fb61a75bc 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n\n@@ -114,6 +140,7 @@ public class ReminderService extends BroadcastReceiver {\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true\n+    @Nullable\n     private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n \n         Collection col = CollectionHelper.getInstance().getCol(context);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODU5NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446708595", "bodyText": "Can we return early if we don't have the intended extra.", "author": "david-allison-1", "createdAt": "2020-06-28T22:54:40Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -31,67 +31,78 @@\n import com.ichi2.anki.IntentHandler;\n import com.ichi2.anki.NotificationChannels;\n import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection;\n+import com.ichi2.libanki.sched.AbstractSched;\n import com.ichi2.libanki.sched.Sched;\n+import com.ichi2.utils.JSONObject;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n \n public class ReminderService extends BroadcastReceiver {\n \n+    public static final String EXTRA_DECK_OPTION_ID = \"EXTRA_DECK_OPTION_ID\";\n     public static final String EXTRA_DECK_ID = \"EXTRA_DECK_ID\";\n \n     @Override\n     public void onReceive(Context context, Intent intent) {\n \n-        final long deckId = intent.getLongExtra(EXTRA_DECK_ID, 0);\n+        final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);", "originalCommit": "e6915cca49db1e5573bfe5dee6417df1c744ad4d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcxNDg2OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446714868", "bodyText": "We probably can, as long as we check that there is no ETRXA_dECK_ID either", "author": "Arthur-Milchior", "createdAt": "2020-06-28T23:55:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcxNTEyMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446715120", "bodyText": "See Mike's comment below - maybe will happen on an upgrade path", "author": "david-allison-1", "createdAt": "2020-06-28T23:57:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0ODgyNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446948827", "bodyText": "Looking at this again, I presume we'd want to cancel the alarm if it's invalid", "author": "david-allison-1", "createdAt": "2020-06-29T12:55:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0MzAwOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r447043009", "bodyText": "I believe that is exactly what is happening below. If we can't find the deck option, the intent is created again and then the alarm manager get told that this intent is cancelled", "author": "Arthur-Milchior", "createdAt": "2020-06-29T15:06:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODU5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEyNzg3NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r447127874", "bodyText": "I'm gold-plating here, but there's a slight concern that we don't cancel intents that we weren't expecting.\nLooks good to go then", "author": "david-allison-1", "createdAt": "2020-06-29T17:15:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODU5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "fffaec6685c55b56100b766dbc0ee9d9921adfd5", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\nindex 8dcdbf77c..fb61a75bc 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n\n@@ -44,10 +45,34 @@ public class ReminderService extends BroadcastReceiver {\n     public static final String EXTRA_DECK_OPTION_ID = \"EXTRA_DECK_OPTION_ID\";\n     public static final String EXTRA_DECK_ID = \"EXTRA_DECK_ID\";\n \n+\n+    /** Cancelling all deck reminder. We used to use them, now we have deck option reminders. */\n+    private void cancelDeckReminder(Context context, Intent intent) {\n+        // 0 Is not a valid deck id.\n+        final long deckId = intent.getLongExtra(EXTRA_DECK_ID, 0);\n+        if (deckId != 0) {\n+            final AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n+\n+            final PendingIntent reminderIntent = PendingIntent.getBroadcast(\n+                    context,\n+                    (int) deckId,\n+                    new Intent(context, ReminderService.class).putExtra(EXTRA_DECK_OPTION_ID, deckId),\n+                    0\n+            );\n+\n+            alarmManager.cancel(reminderIntent);\n+        }\n+    }\n+\n     @Override\n     public void onReceive(Context context, Intent intent) {\n+        cancelDeckReminder(context, intent);\n \n+        // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n+        if (dConfId == 0) {\n+            return;\n+        }\n \n         if (CollectionHelper.getInstance().getCol(context).getDecks().getConf(dConfId) == null) {\n             final AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n"}}, {"oid": "fffaec6685c55b56100b766dbc0ee9d9921adfd5", "url": "https://github.com/ankidroid/Anki-Android/commit/fffaec6685c55b56100b766dbc0ee9d9921adfd5", "message": "early return if no extra EXTRA_DECK_OPTION_ID", "committedDate": "2020-06-29T00:05:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0NTY3OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446945678", "bodyText": "Can be inverted to reduce nesting", "author": "david-allison-1", "createdAt": "2020-06-29T12:50:42Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -31,67 +32,103 @@\n import com.ichi2.anki.IntentHandler;\n import com.ichi2.anki.NotificationChannels;\n import com.ichi2.anki.R;\n+import com.ichi2.libanki.Collection;\n+import com.ichi2.libanki.sched.AbstractSched;\n import com.ichi2.libanki.sched.Sched;\n+import com.ichi2.utils.JSONObject;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n \n public class ReminderService extends BroadcastReceiver {\n \n+    public static final String EXTRA_DECK_OPTION_ID = \"EXTRA_DECK_OPTION_ID\";\n     public static final String EXTRA_DECK_ID = \"EXTRA_DECK_ID\";\n \n-    @Override\n-    public void onReceive(Context context, Intent intent) {\n \n+    /** Cancelling all deck reminder. We used to use them, now we have deck option reminders. */\n+    private void cancelDeckReminder(Context context, Intent intent) {\n+        // 0 Is not a valid deck id.\n         final long deckId = intent.getLongExtra(EXTRA_DECK_ID, 0);\n-\n-        if (CollectionHelper.getInstance().getCol(context).getDecks().get(deckId, false) == null) {\n+        if (deckId != 0) {", "originalCommit": "fffaec6685c55b56100b766dbc0ee9d9921adfd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NDE2Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r447044162", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-06-29T15:08:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0NTY3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NDc0MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r447044741", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-06-29T15:09:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0NTY3OA=="}], "type": "inlineReview", "revised_code": {"commit": "6bc68e6df17c96b2171abb3183365b951ec97e9b", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\nindex fb61a75bc..1897b82a3 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n\n@@ -45,34 +45,10 @@ public class ReminderService extends BroadcastReceiver {\n     public static final String EXTRA_DECK_OPTION_ID = \"EXTRA_DECK_OPTION_ID\";\n     public static final String EXTRA_DECK_ID = \"EXTRA_DECK_ID\";\n \n-\n-    /** Cancelling all deck reminder. We used to use them, now we have deck option reminders. */\n-    private void cancelDeckReminder(Context context, Intent intent) {\n-        // 0 Is not a valid deck id.\n-        final long deckId = intent.getLongExtra(EXTRA_DECK_ID, 0);\n-        if (deckId != 0) {\n-            final AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n-\n-            final PendingIntent reminderIntent = PendingIntent.getBroadcast(\n-                    context,\n-                    (int) deckId,\n-                    new Intent(context, ReminderService.class).putExtra(EXTRA_DECK_OPTION_ID, deckId),\n-                    0\n-            );\n-\n-            alarmManager.cancel(reminderIntent);\n-        }\n-    }\n-\n     @Override\n     public void onReceive(Context context, Intent intent) {\n-        cancelDeckReminder(context, intent);\n \n-        // 0 is not a valid dconf id.\n         final long dConfId = intent.getLongExtra(EXTRA_DECK_OPTION_ID, 0);\n-        if (dConfId == 0) {\n-            return;\n-        }\n \n         if (CollectionHelper.getInstance().getCol(context).getDecks().getConf(dConfId) == null) {\n             final AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0Nzg4NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446947884", "bodyText": "Could you add a comment to note that this also explicitly excludes dynamic decks", "author": "david-allison-1", "createdAt": "2020-06-29T12:54:07Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -103,20 +140,25 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true\n-    private Sched.DeckDueTreeNode getDeckDue(Context context, long deckId, boolean recur) {\n+    @Nullable\n+    private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n \n+        Collection col = CollectionHelper.getInstance().getCol(context);\n         // Avoid crashes if the deck is deleted while we are working\n-        if (CollectionHelper.getInstance().getCol(context).getDecks().get(deckId, false) == null) {\n-            Timber.d(\"Deck %s deleted while ReminderService was working. Ignoring\", deckId);\n+        if (col.getDecks().getConf(dConfId) == null) {\n+            Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n             return null;\n         }\n \n+        List<Sched.DeckDueTreeNode> decks = new ArrayList<>();\n         try {\n             for (Sched.DeckDueTreeNode node : CollectionHelper.getInstance().getCol(context).getSched().deckDueTree()) {\n-                if (node.getDid() == deckId) {\n-                    return node;\n+                JSONObject deck = col.getDecks().get(node.getDid(), false);\n+                if (deck != null && deck.optLong(\"conf\") == dConfId) {", "originalCommit": "fffaec6685c55b56100b766dbc0ee9d9921adfd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NTYxNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r447045617", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-06-29T15:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0Nzg4NA=="}], "type": "inlineReview", "revised_code": {"commit": "6bc68e6df17c96b2171abb3183365b951ec97e9b", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\nindex fb61a75bc..1897b82a3 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n\n@@ -139,12 +114,13 @@ public class ReminderService extends BroadcastReceiver {\n     }\n \n \n-    // getDeckDue information, will recur one time to workaround collection close if recur is true\n+    // getDeckOptionDue information, will recur one time to workaround collection close if recur is true\n     @Nullable\n     private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n \n         Collection col = CollectionHelper.getInstance().getCol(context);\n-        // Avoid crashes if the deck is deleted while we are working\n+        // Avoid crashes if the deck option group is deleted while we\n+        // are working\n         if (col.getDecks().getConf(dConfId) == null) {\n             Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n             return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0ODE4OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446948189", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Avoid crashes if the deck is deleted while we are working\n          \n          \n            \n                    // Avoid crashes if the options group is deleted while we are working", "author": "david-allison-1", "createdAt": "2020-06-29T12:54:37Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -103,20 +140,25 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true\n-    private Sched.DeckDueTreeNode getDeckDue(Context context, long deckId, boolean recur) {\n+    @Nullable\n+    private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n \n+        Collection col = CollectionHelper.getInstance().getCol(context);\n         // Avoid crashes if the deck is deleted while we are working", "originalCommit": "fffaec6685c55b56100b766dbc0ee9d9921adfd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NTgyNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r447045825", "bodyText": "Nice catch. Really sorry, I have trouble remembering to check comments", "author": "Arthur-Milchior", "createdAt": "2020-06-29T15:10:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0ODE4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "6bc68e6df17c96b2171abb3183365b951ec97e9b", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\nindex fb61a75bc..1897b82a3 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n\n@@ -139,12 +114,13 @@ public class ReminderService extends BroadcastReceiver {\n     }\n \n \n-    // getDeckDue information, will recur one time to workaround collection close if recur is true\n+    // getDeckOptionDue information, will recur one time to workaround collection close if recur is true\n     @Nullable\n     private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n \n         Collection col = CollectionHelper.getInstance().getCol(context);\n-        // Avoid crashes if the deck is deleted while we are working\n+        // Avoid crashes if the deck option group is deleted while we\n+        // are working\n         if (col.getDecks().getConf(dConfId) == null) {\n             Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n             return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0ODQzMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r446948432", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // getDeckDue information, will recur one time to workaround collection close if recur is true\n          \n          \n            \n                // getDeckOptionDue information, will recur one time to workaround collection close if recur is true", "author": "david-allison-1", "createdAt": "2020-06-29T12:55:00Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java", "diffHunk": "@@ -103,20 +140,25 @@ public static Intent getReviewDeckIntent(@NonNull Context context, long deckId)\n \n \n     // getDeckDue information, will recur one time to workaround collection close if recur is true", "originalCommit": "fffaec6685c55b56100b766dbc0ee9d9921adfd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NjA1OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6571#discussion_r447046058", "bodyText": "Done. And one other comment corrected too", "author": "Arthur-Milchior", "createdAt": "2020-06-29T15:11:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0ODQzMg=="}], "type": "inlineReview", "revised_code": {"commit": "6bc68e6df17c96b2171abb3183365b951ec97e9b", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\nindex fb61a75bc..1897b82a3 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/services/ReminderService.java\n\n@@ -139,12 +114,13 @@ public class ReminderService extends BroadcastReceiver {\n     }\n \n \n-    // getDeckDue information, will recur one time to workaround collection close if recur is true\n+    // getDeckOptionDue information, will recur one time to workaround collection close if recur is true\n     @Nullable\n     private List<Sched.DeckDueTreeNode> getDeckOptionDue(Context context, long dConfId, boolean recur) {\n \n         Collection col = CollectionHelper.getInstance().getCol(context);\n-        // Avoid crashes if the deck is deleted while we are working\n+        // Avoid crashes if the deck option group is deleted while we\n+        // are working\n         if (col.getDecks().getConf(dConfId) == null) {\n             Timber.d(\"Deck option %s deleted while ReminderService was working. Ignoring\", dConfId);\n             return null;\n"}}, {"oid": "6bc68e6df17c96b2171abb3183365b951ec97e9b", "url": "https://github.com/ankidroid/Anki-Android/commit/6bc68e6df17c96b2171abb3183365b951ec97e9b", "message": "NF: one intent by deck option\n\nWe still use deck intent to let the user decide which deck to\nreview. However, the remainder receive a deck option instead of a\ndeck, so that it does all work simultaneously for each deck with the\nsame deck option\n\nTODO: do a single reminder if multiple elements have same hours", "committedDate": "2020-06-29T15:12:50Z", "type": "commit"}, {"oid": "fc22ccff577b5527fec45001c3d855f53b19cdc8", "url": "https://github.com/ankidroid/Anki-Android/commit/fc22ccff577b5527fec45001c3d855f53b19cdc8", "message": "NF: exit early from reminder if notifications not enabled", "committedDate": "2020-06-29T15:12:50Z", "type": "commit"}, {"oid": "a0dafa1ad2019a246512b30062db054bcc80c9c6", "url": "https://github.com/ankidroid/Anki-Android/commit/a0dafa1ad2019a246512b30062db054bcc80c9c6", "message": "Cancel deck reminder\n\nSince we don't want to deal with them anymore, let us clean the\nreminders and ensure they are removed from the system", "committedDate": "2020-06-29T15:12:50Z", "type": "commit"}, {"oid": "7485b9353628c8546f51e1be93f848fa634e95a0", "url": "https://github.com/ankidroid/Anki-Android/commit/7485b9353628c8546f51e1be93f848fa634e95a0", "message": "early return if no extra EXTRA_DECK_OPTION_ID", "committedDate": "2020-06-29T15:12:50Z", "type": "commit"}, {"oid": "7485b9353628c8546f51e1be93f848fa634e95a0", "url": "https://github.com/ankidroid/Anki-Android/commit/7485b9353628c8546f51e1be93f848fa634e95a0", "message": "early return if no extra EXTRA_DECK_OPTION_ID", "committedDate": "2020-06-29T15:12:50Z", "type": "forcePushed"}]}