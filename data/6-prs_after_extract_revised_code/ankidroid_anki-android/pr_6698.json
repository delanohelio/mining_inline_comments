{"pr_number": 6698, "pr_title": "Optimize obtaining card metadata from Note", "pr_createdAt": "2020-07-19T04:35:02Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6698", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NzYyMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456897622", "bodyText": "cardCount or numberOfCards would be better here: nb is ambiguous", "author": "david-allison-1", "createdAt": "2020-07-19T11:37:36Z", "path": "AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java", "diffHunk": "@@ -246,7 +246,7 @@ public void testInsertAndRemoveNote() {\n         JSONObject model = col.getModels().get(mModelId);\n         assertNotNull(\"Check model\", model);\n         int expectedNumCards = model.getJSONArray(\"tmpls\").length();\n-        assertEquals(\"Check that correct number of cards generated\", expectedNumCards, addedNote.cards().size());\n+        assertEquals(\"Check that correct number of cards generated\", expectedNumCards, addedNote.nbCards());", "originalCommit": "b30fab79133957b1c005e699bc46530f8729b871", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTk2OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456911969", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-07-19T13:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NzYyMg=="}], "type": "inlineReview", "revised_code": {"commit": "b7145b7560a94d9040d7623574fbc3d10a1700e7", "chunk": "diff --git a/AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java b/AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java\nindex 0ae3e7f7e1..b4836ca69c 100644\n--- a/AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java\n+++ b/AnkiDroid/src/androidTest/java/com/ichi2/anki/tests/ContentProviderTest.java\n\n@@ -246,7 +246,7 @@ public class ContentProviderTest extends InstrumentedTest {\n         JSONObject model = col.getModels().get(mModelId);\n         assertNotNull(\"Check model\", model);\n         int expectedNumCards = model.getJSONArray(\"tmpls\").length();\n-        assertEquals(\"Check that correct number of cards generated\", expectedNumCards, addedNote.nbCards());\n+        assertEquals(\"Check that correct number of cards generated\", expectedNumCards, addedNote.numberOfCards());\n         // Now delete the note\n         cr.delete(newNoteUri, null, null);\n         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NzcyNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456897725", "bodyText": "You don't need an order by here.", "author": "david-allison-1", "createdAt": "2020-07-19T11:38:47Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});", "originalCommit": "b30fab79133957b1c005e699bc46530f8729b871", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTU2NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456911565", "bodyText": "Nice catch. I copied/pasted", "author": "Arthur-Milchior", "createdAt": "2020-07-19T13:53:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5NzcyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b7145b7560a94d9040d7623574fbc3d10a1700e7", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\nindex 2efa9cbf6d..631908ffe0 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n\n@@ -151,22 +151,19 @@ public class Note implements Cloneable {\n     }\n \n \n-    public int nbCards() {\n-        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    public int numberOfCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ?\", new Object[]{mId});\n     }\n \n-    public ArrayList<Long> cids() {\n+    public List<Long> cids() {\n         return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n                 new Object[]{mId});\n     }\n \n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try {\n-            for (long cid : cids()) {\n-                cards.add(mCol.getCard(cid));\n-            }\n-        } catch (Exception e) {\n+        for (long cid : cids()) {\n+            cards.add(mCol.getCard(cid));\n         }\n         return cards;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5Nzk1NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456897954", "bodyText": "Comment this as being inefficient", "author": "david-allison-1", "createdAt": "2020-07-19T11:40:50Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {\n+        return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n+                new Object[]{mId});\n+    }\n+\n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try (Cursor cur = mCol.getDb().getDatabase()\n-                .query(\"SELECT id FROM cards WHERE nid = \" + mId + \" ORDER BY ord\", null)) {\n-            while (cur.moveToNext()) {\n-                cards.add(mCol.getCard(cur.getLong(0)));\n+        try {\n+            for (long cid : cids()) {\n+                cards.add(mCol.getCard(cid));", "originalCommit": "b30fab79133957b1c005e699bc46530f8729b871", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTY5OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456911699", "bodyText": "why inneficient ?\u00a0It seems to be essentially the same thing than the previous code. It loops over a list, I don't see what can be done to do it more efficiently without creating a function loadAListOfCard", "author": "Arthur-Milchior", "createdAt": "2020-07-19T13:54:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5Nzk1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMjE1Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456912152", "bodyText": "Previous code was also inefficient - database access in a loop", "author": "david-allison-1", "createdAt": "2020-07-19T13:58:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5Nzk1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMzQ5Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456913492", "bodyText": "Commented. If it is not up to your taste,\u00a0I'll let you rewrite a message about ineficiency", "author": "Arthur-Milchior", "createdAt": "2020-07-19T14:10:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5Nzk1NA=="}], "type": "inlineReview", "revised_code": {"commit": "b7145b7560a94d9040d7623574fbc3d10a1700e7", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\nindex 2efa9cbf6d..631908ffe0 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n\n@@ -151,22 +151,19 @@ public class Note implements Cloneable {\n     }\n \n \n-    public int nbCards() {\n-        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    public int numberOfCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ?\", new Object[]{mId});\n     }\n \n-    public ArrayList<Long> cids() {\n+    public List<Long> cids() {\n         return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n                 new Object[]{mId});\n     }\n \n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try {\n-            for (long cid : cids()) {\n-                cards.add(mCol.getCard(cid));\n-            }\n-        } catch (Exception e) {\n+        for (long cid : cids()) {\n+            cards.add(mCol.getCard(cid));\n         }\n         return cards;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODE5Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456898197", "bodyText": "The try with resources previously expanded to a try...finally:\npseudojava:\nCursor cur = null;\ntry {\n    cur = mCol.getDb().getDatabase().query(\"SELECT id FROM cards WHERE nid = \" + mId + \" ORDER BY ord\", null);\n} finally {\n   if (cur != null) {\n      cur.destroy();\n   }\n}\nThere's no catch in the block, and one shouldn't be added here as it swallows the exception.", "author": "david-allison-1", "createdAt": "2020-07-19T11:43:17Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {\n+        return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n+                new Object[]{mId});\n+    }\n+\n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try (Cursor cur = mCol.getDb().getDatabase()\n-                .query(\"SELECT id FROM cards WHERE nid = \" + mId + \" ORDER BY ord\", null)) {\n-            while (cur.moveToNext()) {\n-                cards.add(mCol.getCard(cur.getLong(0)));\n+        try {\n+            for (long cid : cids()) {\n+                cards.add(mCol.getCard(cid));\n             }\n+        } catch (Exception e) {", "originalCommit": "b30fab79133957b1c005e699bc46530f8729b871", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMDg4MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456910880", "bodyText": "Oh, thanks, I thought it was meant to catch an exception. I'll correct", "author": "Arthur-Milchior", "createdAt": "2020-07-19T13:46:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODE5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTg1MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456911850", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-07-19T13:55:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODE5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b7145b7560a94d9040d7623574fbc3d10a1700e7", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\nindex 2efa9cbf6d..631908ffe0 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n\n@@ -151,22 +151,19 @@ public class Note implements Cloneable {\n     }\n \n \n-    public int nbCards() {\n-        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    public int numberOfCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ?\", new Object[]{mId});\n     }\n \n-    public ArrayList<Long> cids() {\n+    public List<Long> cids() {\n         return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n                 new Object[]{mId});\n     }\n \n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try {\n-            for (long cid : cids()) {\n-                cards.add(mCol.getCard(cid));\n-            }\n-        } catch (Exception e) {\n+        for (long cid : cids()) {\n+            cards.add(mCol.getCard(cid));\n         }\n         return cards;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODM5NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456898394", "bodyText": "Likely not worth it, but firstCid() could be optimised", "author": "david-allison-1", "createdAt": "2020-07-19T11:44:59Z", "path": "AnkiDroid/src/test/java/com/ichi2/anki/CardBrowserTest.java", "diffHunk": "@@ -246,7 +246,7 @@ public void flagValueIsShownOnCard() {\n         Note n = addNoteUsingBasicModel(\"1\", \"back\");\n         flagCardForNote(n, 1);\n \n-        long cardId = n.cards().get(0).getId();\n+        long cardId = n.cids().get(0);", "originalCommit": "b30fab79133957b1c005e699bc46530f8729b871", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMDkxNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456910917", "bodyText": "I did check and it's used only once, so I\u00a0don't believe it's worth it.", "author": "Arthur-Milchior", "createdAt": "2020-07-19T13:46:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODM5NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODYzMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456898630", "bodyText": "Optional: we might want to stay consistent with cards()\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ArrayList<Long> cids() {\n          \n          \n            \n                public List<Long> cids() {", "author": "david-allison-1", "createdAt": "2020-07-19T11:46:38Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -151,17 +151,32 @@ public String joinedFields() {\n     }\n \n \n+    public int nbCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    }\n+\n+    public ArrayList<Long> cids() {", "originalCommit": "b30fab79133957b1c005e699bc46530f8729b871", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjkxMTg3Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6698#discussion_r456911877", "bodyText": "Done", "author": "Arthur-Milchior", "createdAt": "2020-07-19T13:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5ODYzMA=="}], "type": "inlineReview", "revised_code": {"commit": "b7145b7560a94d9040d7623574fbc3d10a1700e7", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\nindex 2efa9cbf6d..631908ffe0 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n\n@@ -151,22 +151,19 @@ public class Note implements Cloneable {\n     }\n \n \n-    public int nbCards() {\n-        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ? ORDER BY ord\", new Object[]{mId});\n+    public int numberOfCards() {\n+        return (int) mCol.getDb().queryLongScalar(\"SELECT count() FROM cards WHERE nid = ?\", new Object[]{mId});\n     }\n \n-    public ArrayList<Long> cids() {\n+    public List<Long> cids() {\n         return mCol.getDb().queryColumn(Long.class, \"SELECT id FROM cards WHERE nid = ? ORDER BY ord\", 0,\n                 new Object[]{mId});\n     }\n \n     public ArrayList<Card> cards() {\n         ArrayList<Card> cards = new ArrayList<>();\n-        try {\n-            for (long cid : cids()) {\n-                cards.add(mCol.getCard(cid));\n-            }\n-        } catch (Exception e) {\n+        for (long cid : cids()) {\n+            cards.add(mCol.getCard(cid));\n         }\n         return cards;\n     }\n"}}, {"oid": "b7145b7560a94d9040d7623574fbc3d10a1700e7", "url": "https://github.com/ankidroid/Anki-Android/commit/b7145b7560a94d9040d7623574fbc3d10a1700e7", "message": "NF: Note.firstCard\n\nIt often occurs that only the first card is required, so let's return it directly.", "committedDate": "2020-07-19T13:56:04Z", "type": "forcePushed"}, {"oid": "c0b7d5d7e9731d3da3b82063723a801a908f9a23", "url": "https://github.com/ankidroid/Anki-Android/commit/c0b7d5d7e9731d3da3b82063723a801a908f9a23", "message": "NF: Note.firstCard\n\nIt often occurs that only the first card is required, so let's return it directly.", "committedDate": "2020-07-19T14:02:55Z", "type": "forcePushed"}, {"oid": "1b04ff3ed7953b75d2a0d670f37621ff2b9f91be", "url": "https://github.com/ankidroid/Anki-Android/commit/1b04ff3ed7953b75d2a0d670f37621ff2b9f91be", "message": "NF: Note.cids\n\nAvoid loading cards when it's useless", "committedDate": "2020-07-19T14:09:42Z", "type": "commit"}, {"oid": "cacbe5d19397326f1bc57019079628a02830de67", "url": "https://github.com/ankidroid/Anki-Android/commit/cacbe5d19397326f1bc57019079628a02830de67", "message": "NF: factorize cids", "committedDate": "2020-07-19T14:09:42Z", "type": "commit"}, {"oid": "ec4a610f39a2a23c2211acc5b9e585aaa9050e77", "url": "https://github.com/ankidroid/Anki-Android/commit/ec4a610f39a2a23c2211acc5b9e585aaa9050e77", "message": "NF: numberOfCards\n\nRequested often. Better make it a method", "committedDate": "2020-07-19T14:09:42Z", "type": "commit"}, {"oid": "5cff0699fb0de025267264f5875ca70a9f3dea10", "url": "https://github.com/ankidroid/Anki-Android/commit/5cff0699fb0de025267264f5875ca70a9f3dea10", "message": "NF: Note.firstCard\n\nIt often occurs that only the first card is required, so let's return it directly.", "committedDate": "2020-07-19T14:09:42Z", "type": "commit"}, {"oid": "5cff0699fb0de025267264f5875ca70a9f3dea10", "url": "https://github.com/ankidroid/Anki-Android/commit/5cff0699fb0de025267264f5875ca70a9f3dea10", "message": "NF: Note.firstCard\n\nIt often occurs that only the first card is required, so let's return it directly.", "committedDate": "2020-07-19T14:09:42Z", "type": "forcePushed"}]}