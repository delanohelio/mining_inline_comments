{"pr_number": 6682, "pr_title": "Dependency updates 20200716", "pr_createdAt": "2020-07-16T19:15:11Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6682", "timeline": [{"oid": "38c945cedf66e8d196fa894ef0b0066fd0911990", "url": "https://github.com/ankidroid/Anki-Android/commit/38c945cedf66e8d196fa894ef0b0066fd0911990", "message": "Bump sqlite-android from 3.31.0 to 3.32.2\n\nBumps [sqlite-android](https://github.com/requery/sqlite-android) from 3.31.0 to 3.32.2.\n- [Release notes](https://github.com/requery/sqlite-android/releases)\n- [Changelog](https://github.com/requery/sqlite-android/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/requery/sqlite-android/commits)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>", "committedDate": "2020-07-15T21:11:31Z", "type": "commit"}, {"oid": "d1d55bb5c0f374219db46ef45bdb36eb77f911d1", "url": "https://github.com/ankidroid/Anki-Android/commit/d1d55bb5c0f374219db46ef45bdb36eb77f911d1", "message": "Bump gradle from 4.0.0 to 4.0.1\n\nBumps gradle from 4.0.0 to 4.0.1.\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>", "committedDate": "2020-07-15T21:11:31Z", "type": "commit"}, {"oid": "f8548a78dfc88cf0af55d868b998d2ef129d5d27", "url": "https://github.com/ankidroid/Anki-Android/commit/f8548a78dfc88cf0af55d868b998d2ef129d5d27", "message": "Ignore jetbrains-annotations transitive dep from timber\n\nhttps://github.com/JakeWharton/timber/pull/398\n\nhttps://docs.gradle.org/current/dsl/org.gradle.api.artifacts.ResolutionStrategy.html", "committedDate": "2020-07-15T22:19:36Z", "type": "commit"}, {"oid": "bb742f2cc32143aa2c5972d97e2d22f1b9a828a1", "url": "https://github.com/ankidroid/Anki-Android/commit/bb742f2cc32143aa2c5972d97e2d22f1b9a828a1", "message": "Mockito.mockStatic can take over from PowerMock now\n\nThe mockito dependency upgrade is actually a big feature switch, so\nthe previous usage of PowerMock can be removed and mockito can do all\nof our static mocking", "committedDate": "2020-07-16T19:28:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0NTMwNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6682#discussion_r456045306", "bodyText": "Optional: AnkiAssert.doesNotThrow", "author": "david-allison-1", "createdAt": "2020-07-16T20:03:39Z", "path": "AnkiDroid/src/test/java/com/ichi2/anki/ProductionCrashReportingTreeTest.java", "diffHunk": "@@ -55,20 +54,30 @@ public void setUp() {\n     @Test\n     public void testProductionDebugVerboseIgnored() {\n \n-        // set up the platform log so that if anyone calls these 2 methods at all, it throws\n-        Mockito.when(Log.v(anyString(), anyString(), any()))\n-                .thenThrow(new RuntimeException(\"Verbose logging should have been ignored\"));\n-        Mockito.when(Log.d(anyString(), anyString(), any()))\n-                .thenThrow(new RuntimeException(\"Debug logging should be ignored\"));\n-\n-        // now call our wrapper - if it hits the platform logger it will throw\n-        try {\n-            Timber.v(\"verbose\");\n-            Timber.d(\"debug\");\n-        } catch (Exception e) {\n-            Assert.fail(\"we were unable to log without exception?\");\n+        try (MockedStatic<Log> ignored = mockStatic(Log.class)) {\n+            // set up the platform log so that if anyone calls these 2 methods at all, it throws\n+            when(Log.v(anyString(), anyString(), any()))\n+                    .thenThrow(new RuntimeException(\"Verbose logging should have been ignored\"));\n+            when(Log.d(anyString(), anyString(), any()))\n+                    .thenThrow(new RuntimeException(\"Debug logging should be ignored\"));\n+            when(Log.i(anyString(), anyString(), any()))\n+                    .thenThrow(new RuntimeException(\"Info logging should throw!\"));\n+\n+            // now call our wrapper - if it hits the platform logger it will throw\n+            try {", "originalCommit": "bb742f2cc32143aa2c5972d97e2d22f1b9a828a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA2MTc5MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6682#discussion_r456061791", "bodyText": "Yes! when I saw the codacy report saying I need to assert I vaguely remembered this facility but not enough to implement. I'd like it to become regular practice so I altered to use it in both cases", "author": "mikehardy", "createdAt": "2020-07-16T20:35:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0NTMwNg=="}], "type": "inlineReview", "revised_code": {"commit": "61106bacfbd061f15564d9ca7340010007213f48", "chunk": "diff --git a/AnkiDroid/src/test/java/com/ichi2/anki/ProductionCrashReportingTreeTest.java b/AnkiDroid/src/test/java/com/ichi2/anki/ProductionCrashReportingTreeTest.java\nindex f51d919ac..7aec8bdf8 100644\n--- a/AnkiDroid/src/test/java/com/ichi2/anki/ProductionCrashReportingTreeTest.java\n+++ b/AnkiDroid/src/test/java/com/ichi2/anki/ProductionCrashReportingTreeTest.java\n\n@@ -64,12 +67,8 @@ public class ProductionCrashReportingTreeTest {\n                     .thenThrow(new RuntimeException(\"Info logging should throw!\"));\n \n             // now call our wrapper - if it hits the platform logger it will throw\n-            try {\n-                Timber.v(\"verbose\");\n-                Timber.d(\"debug\");\n-            } catch (Exception e) {\n-                Assert.fail(\"we were unable to log without exception?\");\n-            }\n+            AnkiAssert.assertDoesNotThrow(() -> Timber.v(\"verbose\"));\n+            AnkiAssert.assertDoesNotThrow(() -> Timber.d(\"debug\"));\n \n             try {\n                 Timber.i(\"info\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0NTUwMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6682#discussion_r456045502", "bodyText": "Optional: Consider moving to AnkiAssert", "author": "david-allison-1", "createdAt": "2020-07-16T20:04:01Z", "path": "AnkiDroid/src/test/java/com/ichi2/anki/ProductionCrashReportingTreeTest.java", "diffHunk": "@@ -55,20 +54,30 @@ public void setUp() {\n     @Test\n     public void testProductionDebugVerboseIgnored() {\n \n-        // set up the platform log so that if anyone calls these 2 methods at all, it throws\n-        Mockito.when(Log.v(anyString(), anyString(), any()))\n-                .thenThrow(new RuntimeException(\"Verbose logging should have been ignored\"));\n-        Mockito.when(Log.d(anyString(), anyString(), any()))\n-                .thenThrow(new RuntimeException(\"Debug logging should be ignored\"));\n-\n-        // now call our wrapper - if it hits the platform logger it will throw\n-        try {\n-            Timber.v(\"verbose\");\n-            Timber.d(\"debug\");\n-        } catch (Exception e) {\n-            Assert.fail(\"we were unable to log without exception?\");\n+        try (MockedStatic<Log> ignored = mockStatic(Log.class)) {\n+            // set up the platform log so that if anyone calls these 2 methods at all, it throws\n+            when(Log.v(anyString(), anyString(), any()))\n+                    .thenThrow(new RuntimeException(\"Verbose logging should have been ignored\"));\n+            when(Log.d(anyString(), anyString(), any()))\n+                    .thenThrow(new RuntimeException(\"Debug logging should be ignored\"));\n+            when(Log.i(anyString(), anyString(), any()))\n+                    .thenThrow(new RuntimeException(\"Info logging should throw!\"));\n+\n+            // now call our wrapper - if it hits the platform logger it will throw\n+            try {\n+                Timber.v(\"verbose\");\n+                Timber.d(\"debug\");\n+            } catch (Exception e) {\n+                Assert.fail(\"we were unable to log without exception?\");\n+            }\n+\n+            try {", "originalCommit": "bb742f2cc32143aa2c5972d97e2d22f1b9a828a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "61106bacfbd061f15564d9ca7340010007213f48", "chunk": "diff --git a/AnkiDroid/src/test/java/com/ichi2/anki/ProductionCrashReportingTreeTest.java b/AnkiDroid/src/test/java/com/ichi2/anki/ProductionCrashReportingTreeTest.java\nindex f51d919ac..7aec8bdf8 100644\n--- a/AnkiDroid/src/test/java/com/ichi2/anki/ProductionCrashReportingTreeTest.java\n+++ b/AnkiDroid/src/test/java/com/ichi2/anki/ProductionCrashReportingTreeTest.java\n\n@@ -64,12 +67,8 @@ public class ProductionCrashReportingTreeTest {\n                     .thenThrow(new RuntimeException(\"Info logging should throw!\"));\n \n             // now call our wrapper - if it hits the platform logger it will throw\n-            try {\n-                Timber.v(\"verbose\");\n-                Timber.d(\"debug\");\n-            } catch (Exception e) {\n-                Assert.fail(\"we were unable to log without exception?\");\n-            }\n+            AnkiAssert.assertDoesNotThrow(() -> Timber.v(\"verbose\"));\n+            AnkiAssert.assertDoesNotThrow(() -> Timber.d(\"debug\"));\n \n             try {\n                 Timber.i(\"info\");\n"}}, {"oid": "61106bacfbd061f15564d9ca7340010007213f48", "url": "https://github.com/ankidroid/Anki-Android/commit/61106bacfbd061f15564d9ca7340010007213f48", "message": "Mockito.mockStatic can take over from PowerMock now\n\nThe mockito dependency upgrade is actually a big feature switch, so\nthe previous usage of PowerMock can be removed and mockito can do all\nof our static mocking", "committedDate": "2020-07-16T20:33:29Z", "type": "commit"}, {"oid": "61106bacfbd061f15564d9ca7340010007213f48", "url": "https://github.com/ankidroid/Anki-Android/commit/61106bacfbd061f15564d9ca7340010007213f48", "message": "Mockito.mockStatic can take over from PowerMock now\n\nThe mockito dependency upgrade is actually a big feature switch, so\nthe previous usage of PowerMock can be removed and mockito can do all\nof our static mocking", "committedDate": "2020-07-16T20:33:29Z", "type": "forcePushed"}]}