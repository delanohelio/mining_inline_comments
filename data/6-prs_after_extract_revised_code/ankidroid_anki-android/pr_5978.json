{"pr_number": 5978, "pr_title": "Extract and modify: GetNextClozeIndex", "pr_createdAt": "2020-04-11T20:56:27Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/5978", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEyODAyNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/5978#discussion_r407128027", "bodyText": "why not have the comment actually be javadoc? I actually like javadoc", "author": "mikehardy", "createdAt": "2020-04-12T00:42:52Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -389,4 +391,27 @@ public boolean equals(Object o) {\n     public int hashCode() {\n         return (int) (mId ^ (mId >>> 32));\n     }\n+\n+\n+    public static class ClozeUtils {\n+        private static final Pattern mClozeRegexPattern = Pattern.compile(\"\\\\{\\\\{c(\\\\d+)::\");\n+\n+        public static int getNextClozeIndex(Iterable<String> fieldValues) {\n+            // Search in all fields of the current note for the cloze reference with the highest value", "originalCommit": "d0ea2325f062dce80403a6a6949d64de78526576", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a6078569067ef34264144b3dd698cbcc9d4016f7", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\nindex 5e45db7e7..22c992133 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n\n@@ -396,9 +396,13 @@ public class Note implements Cloneable {\n     public static class ClozeUtils {\n         private static final Pattern mClozeRegexPattern = Pattern.compile(\"\\\\{\\\\{c(\\\\d+)::\");\n \n+        /*\n+        Returns the next index that a cloze should be inserted at, given a list of fields.\n+        Per the manual, cloze references are the name of the delimiters for cloze deletions e.g. {{c1::text}}\n+        The next index is index after the highest existing cloze deletion, gaps are not considered.\n+         */\n         public static int getNextClozeIndex(Iterable<String> fieldValues) {\n-            // Search in all fields of the current note for the cloze reference with the highest value\n-            // Per the manual, cloze references are the name of the delimiters for cloze deletions e.g. {{c1::text}}\n+\n             int highestClozeId = 0;\n             // Begin looping through the fields\n             for (String fieldLiteral : fieldValues) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEyODE5NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5978#discussion_r407128195", "bodyText": "this would be more interesting if they were out of order, I'm sure it works based on the code but as long as I\"m nit-picking on javadoc up above and you're in here anyway, maybe swap c2 and c1 for grins", "author": "mikehardy", "createdAt": "2020-04-12T00:45:06Z", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/NoteTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.ichi2.libanki;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static com.ichi2.libanki.Note.ClozeUtils.getNextClozeIndex;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class NoteTest {\n+    @Test\n+    public void noFieldDataReturnsFirstClozeIndex() {\n+        int expected = getNextClozeIndex(Collections.emptyList());\n+\n+        assertThat(\"No data should return a cloze index of 1 the next.\", expected, is(1));\n+    }\n+\n+    @Test\n+    public void negativeFieldIsIgnored() {\n+        String fieldValue = \"{{c-1::foo}}\";\n+        int actual = getNextClozeIndex(Collections.singletonList(fieldValue));\n+\n+        assertThat(\"The next consecutive value should be returned.\", actual, is(1));\n+    }\n+\n+    @Test\n+    public void singleFieldReturnsNextValue() {\n+        String fieldValue = \"{{c1::foo}}{{c2::bar}}\";", "originalCommit": "d0ea2325f062dce80403a6a6949d64de78526576", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a6078569067ef34264144b3dd698cbcc9d4016f7", "chunk": "diff --git a/AnkiDroid/src/test/java/com/ichi2/libanki/NoteTest.java b/AnkiDroid/src/test/java/com/ichi2/libanki/NoteTest.java\nindex 6a70c942b..93054b458 100644\n--- a/AnkiDroid/src/test/java/com/ichi2/libanki/NoteTest.java\n+++ b/AnkiDroid/src/test/java/com/ichi2/libanki/NoteTest.java\n\n@@ -32,7 +32,7 @@ public class NoteTest {\n \n     @Test\n     public void singleFieldReturnsNextValue() {\n-        String fieldValue = \"{{c1::foo}}{{c2::bar}}\";\n+        String fieldValue = \"{{c2::bar}}{{c1::foo}}\";\n         int actual = getNextClozeIndex(Collections.singletonList(fieldValue));\n \n         assertThat(\"The next consecutive value should be returned.\", actual, is(3));\n"}}, {"oid": "a6078569067ef34264144b3dd698cbcc9d4016f7", "url": "https://github.com/ankidroid/Anki-Android/commit/a6078569067ef34264144b3dd698cbcc9d4016f7", "message": "Extract and modify: getNextClozeIndex\n\nI want to access this functionality from the Visual Editor without a\nreference to FieldEditText.\n\nThis also likely improves performance, taking the Regex.Compile from an\ninstance variable into a static.", "committedDate": "2020-04-12T07:13:23Z", "type": "commit"}, {"oid": "a6078569067ef34264144b3dd698cbcc9d4016f7", "url": "https://github.com/ankidroid/Anki-Android/commit/a6078569067ef34264144b3dd698cbcc9d4016f7", "message": "Extract and modify: getNextClozeIndex\n\nI want to access this functionality from the Visual Editor without a\nreference to FieldEditText.\n\nThis also likely improves performance, taking the Regex.Compile from an\ninstance variable into a static.", "committedDate": "2020-04-12T07:13:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIwNDI1Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/5978#discussion_r407204253", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    /*\n          \n          \n            \n                    Returns the next index that a cloze should be inserted at, given a list of fields.\n          \n          \n            \n                    Per the manual, cloze references are the name of the delimiters for cloze deletions e.g. {{c1::text}}\n          \n          \n            \n                    The next index is index after the highest existing cloze deletion, gaps are not considered.\n          \n          \n            \n                     */\n          \n          \n            \n                    /**\n          \n          \n            \n                     * Calculate the next number that should be used if inserting a new cloze deletion.\n          \n          \n            \n                     * Per the manual the next number should be greater than any existing cloze deletion\n          \n          \n            \n                     * even if there are gaps in the sequence, and regardless of existing cloze ordering\n          \n          \n            \n                     *\n          \n          \n            \n                     * @param fieldValues Iterable of field values that may contain existing cloze deletions\n          \n          \n            \n                     * @return the next index that a cloze should be inserted at\n          \n          \n            \n                     */\n          \n      \n    \n    \n  \n\nThat's javadoc - it un-muddles the param and return by pulling them out in a specific format, and starts with a double-asterisk", "author": "mikehardy", "createdAt": "2020-04-12T14:15:09Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -389,4 +391,31 @@ public boolean equals(Object o) {\n     public int hashCode() {\n         return (int) (mId ^ (mId >>> 32));\n     }\n+\n+\n+    public static class ClozeUtils {\n+        private static final Pattern mClozeRegexPattern = Pattern.compile(\"\\\\{\\\\{c(\\\\d+)::\");\n+\n+        /*\n+        Returns the next index that a cloze should be inserted at, given a list of fields.\n+        Per the manual, cloze references are the name of the delimiters for cloze deletions e.g. {{c1::text}}\n+        The next index is index after the highest existing cloze deletion, gaps are not considered.\n+         */", "originalCommit": "a6078569067ef34264144b3dd698cbcc9d4016f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIwNTM5NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5978#discussion_r407205395", "bodyText": "Wasn't aware. Thanks! LGTM", "author": "david-allison-1", "createdAt": "2020-04-12T14:23:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIwNDI1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "941a437a2c41fed809014e0fa10671a4ef1a22ba", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\nindex 22c992133..a1c51f95c 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Note.java\n\n@@ -396,10 +396,13 @@ public class Note implements Cloneable {\n     public static class ClozeUtils {\n         private static final Pattern mClozeRegexPattern = Pattern.compile(\"\\\\{\\\\{c(\\\\d+)::\");\n \n-        /*\n-        Returns the next index that a cloze should be inserted at, given a list of fields.\n-        Per the manual, cloze references are the name of the delimiters for cloze deletions e.g. {{c1::text}}\n-        The next index is index after the highest existing cloze deletion, gaps are not considered.\n+        /**\n+         * Calculate the next number that should be used if inserting a new cloze deletion.\n+         * Per the manual the next number should be greater than any existing cloze deletion\n+         * even if there are gaps in the sequence, and regardless of existing cloze ordering\n+         *\n+         * @param fieldValues Iterable of field values that may contain existing cloze deletions\n+         * @return the next index that a cloze should be inserted at\n          */\n         public static int getNextClozeIndex(Iterable<String> fieldValues) {\n \n"}}, {"oid": "941a437a2c41fed809014e0fa10671a4ef1a22ba", "url": "https://github.com/ankidroid/Anki-Android/commit/941a437a2c41fed809014e0fa10671a4ef1a22ba", "message": "NF: Fix Javadoc\n\nCo-Authored-By: Mike Hardy <github@mikehardy.net>", "committedDate": "2020-04-12T14:24:05Z", "type": "commit"}]}