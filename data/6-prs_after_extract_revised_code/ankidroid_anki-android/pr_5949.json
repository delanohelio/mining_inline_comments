{"pr_number": 5949, "pr_title": "Add integrity check: ensureCardsHaveHomeDeck", "pr_createdAt": "2020-04-07T19:54:50Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/5949", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyMjk2OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5949#discussion_r405122968", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Timber.i(\"Found %d decks with no home deck\", cardIds.size());\n          \n          \n            \n                    Timber.i(\"Found %d cards with no home deck\", cardIds.size());", "author": "mikehardy", "createdAt": "2020-04-07T21:25:57Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -1604,11 +1604,66 @@ public long fixIntegrity(DeckTask.ProgressCallback progressCallback) {\n         file = new File(mPath);\n         long newSize = file.length();\n         // if any problems were found, force a full sync\n-        if (problems.size() > 0) {\n+        if (result.hasProblems()) {\n             modSchemaNoCheck();\n         }\n-        logProblems(problems);\n-        return (oldSize - newSize) / 1024;\n+        logProblems(result.getProblems());\n+        return (result.getOldSize() - newSize) / 1024;\n+    }\n+\n+\n+    private List<String> ensureCardsHaveHomeDeck(Runnable notifyProgress, CheckDatabaseResult result) {\n+        // #5932 - a card may not have a home deck if:\n+        // * It is in a dynamic deck, and has odid = 0.\n+        // * It is in a dynamic deck, and the odid refers to a dynamic deck.\n+        notifyProgress.run();\n+        //Both of these cases can be fixed by setting the odid to 1.\n+\n+        //get the deck Ids to query\n+        Long[] dynDeckIds = getDecks().allDynamicDeckIds();\n+        //make it mutable\n+        List<Long> dynIdsAndZero = new ArrayList<>(Arrays.asList(dynDeckIds));\n+        dynIdsAndZero.add(0L);\n+\n+        ArrayList<Long> cardIds = mDb.queryColumn(Long.class, \"select id from cards where did in \" +\n+                Utils.ids2str(dynDeckIds) +\n+                \"and odid in \" +\n+                Utils.ids2str(dynIdsAndZero)\n+                , 0);\n+\n+        notifyProgress.run();\n+\n+        if (cardIds.isEmpty()) {\n+            return Collections.emptyList();\n+        }\n+\n+        //PERF: in debug, 3 seconds for 87 cards.\n+        //So, roughly 30 for 1000 cards\n+        Timber.i(\"Found %d decks with no home deck\", cardIds.size());", "originalCommit": "9c232d775250a6a1869d429da3c8eee06fffd1b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3b81f633ca727b483d4ee6f2c389076d9d59b31a", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\nindex ae39629b9..0a55f05d4 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n\n@@ -1639,7 +1595,7 @@ public class Collection {\n \n         //PERF: in debug, 3 seconds for 87 cards.\n         //So, roughly 30 for 1000 cards\n-        Timber.i(\"Found %d decks with no home deck\", cardIds.size());\n+        Timber.i(\"Found %d cards with no home deck\", cardIds.size());\n         int fixed = 0;\n         for (long cardId : cardIds) {\n             try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDI5Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/5949#discussion_r405124293", "bodyText": "By that PERF comment do you mean it took 3 seconds to execute the query above, where you attempt to get the list of the cards? If that is true, I wonder if you ordered the query opposite so it reduced by odid in dynIdsAndZero it would be smaller - thinking being that in the intersection of the two sets the odid clause should be a smaller initial set thus making for faster execution of the did clause. Pure speculation without numbers, and I may be misattributing the PERf comment. I don't want fixIntegrity to take 30s for each 1000 cards though, it would be orders of magnitude slower than it is now if I understand that correctly?", "author": "mikehardy", "createdAt": "2020-04-07T21:28:37Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -1604,11 +1604,66 @@ public long fixIntegrity(DeckTask.ProgressCallback progressCallback) {\n         file = new File(mPath);\n         long newSize = file.length();\n         // if any problems were found, force a full sync\n-        if (problems.size() > 0) {\n+        if (result.hasProblems()) {\n             modSchemaNoCheck();\n         }\n-        logProblems(problems);\n-        return (oldSize - newSize) / 1024;\n+        logProblems(result.getProblems());\n+        return (result.getOldSize() - newSize) / 1024;\n+    }\n+\n+\n+    private List<String> ensureCardsHaveHomeDeck(Runnable notifyProgress, CheckDatabaseResult result) {\n+        // #5932 - a card may not have a home deck if:\n+        // * It is in a dynamic deck, and has odid = 0.\n+        // * It is in a dynamic deck, and the odid refers to a dynamic deck.\n+        notifyProgress.run();\n+        //Both of these cases can be fixed by setting the odid to 1.\n+\n+        //get the deck Ids to query\n+        Long[] dynDeckIds = getDecks().allDynamicDeckIds();\n+        //make it mutable\n+        List<Long> dynIdsAndZero = new ArrayList<>(Arrays.asList(dynDeckIds));\n+        dynIdsAndZero.add(0L);\n+\n+        ArrayList<Long> cardIds = mDb.queryColumn(Long.class, \"select id from cards where did in \" +\n+                Utils.ids2str(dynDeckIds) +\n+                \"and odid in \" +\n+                Utils.ids2str(dynIdsAndZero)\n+                , 0);\n+\n+        notifyProgress.run();\n+\n+        if (cardIds.isEmpty()) {\n+            return Collections.emptyList();\n+        }\n+\n+        //PERF: in debug, 3 seconds for 87 cards.", "originalCommit": "9c232d775250a6a1869d429da3c8eee06fffd1b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzMzAwMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/5949#discussion_r405133002", "bodyText": "Search is instantaneous, we only hit the PERF case when errors are found as we're performing the modifications individually, rather than batching with SQL. I'll elaborate more in a parent comment, but I think we should rethink the approach and just do purely deck-based", "author": "david-allison-1", "createdAt": "2020-04-07T21:46:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzNDAxOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5949#discussion_r405134019", "bodyText": "Ah - that makes more sense. So if there are 1000 (!!) cards with errors it would take 30 seconds, as a one-off. That doesn't bother me as I think that would be a massive number of homeless cards (nearly unimaginable), for a small number of people, once. But I'll wait for re-thought approach", "author": "mikehardy", "createdAt": "2020-04-07T21:49:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDI5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "3b81f633ca727b483d4ee6f2c389076d9d59b31a", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\nindex ae39629b9..0a55f05d4 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n\n@@ -1639,7 +1595,7 @@ public class Collection {\n \n         //PERF: in debug, 3 seconds for 87 cards.\n         //So, roughly 30 for 1000 cards\n-        Timber.i(\"Found %d decks with no home deck\", cardIds.size());\n+        Timber.i(\"Found %d cards with no home deck\", cardIds.size());\n         int fixed = 0;\n         for (long cardId : cardIds) {\n             try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDYyMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/5949#discussion_r405124622", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String message = String.format(Locale.US, \"Fixed %d decks with no home deck\", fixed);\n          \n          \n            \n                    String message = String.format(Locale.US, \"Fixed %d cards with no home deck\", fixed);", "author": "mikehardy", "createdAt": "2020-04-07T21:29:12Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -1604,11 +1604,66 @@ public long fixIntegrity(DeckTask.ProgressCallback progressCallback) {\n         file = new File(mPath);\n         long newSize = file.length();\n         // if any problems were found, force a full sync\n-        if (problems.size() > 0) {\n+        if (result.hasProblems()) {\n             modSchemaNoCheck();\n         }\n-        logProblems(problems);\n-        return (oldSize - newSize) / 1024;\n+        logProblems(result.getProblems());\n+        return (result.getOldSize() - newSize) / 1024;\n+    }\n+\n+\n+    private List<String> ensureCardsHaveHomeDeck(Runnable notifyProgress, CheckDatabaseResult result) {\n+        // #5932 - a card may not have a home deck if:\n+        // * It is in a dynamic deck, and has odid = 0.\n+        // * It is in a dynamic deck, and the odid refers to a dynamic deck.\n+        notifyProgress.run();\n+        //Both of these cases can be fixed by setting the odid to 1.\n+\n+        //get the deck Ids to query\n+        Long[] dynDeckIds = getDecks().allDynamicDeckIds();\n+        //make it mutable\n+        List<Long> dynIdsAndZero = new ArrayList<>(Arrays.asList(dynDeckIds));\n+        dynIdsAndZero.add(0L);\n+\n+        ArrayList<Long> cardIds = mDb.queryColumn(Long.class, \"select id from cards where did in \" +\n+                Utils.ids2str(dynDeckIds) +\n+                \"and odid in \" +\n+                Utils.ids2str(dynIdsAndZero)\n+                , 0);\n+\n+        notifyProgress.run();\n+\n+        if (cardIds.isEmpty()) {\n+            return Collections.emptyList();\n+        }\n+\n+        //PERF: in debug, 3 seconds for 87 cards.\n+        //So, roughly 30 for 1000 cards\n+        Timber.i(\"Found %d decks with no home deck\", cardIds.size());\n+        int fixed = 0;\n+        for (long cardId : cardIds) {\n+            try {\n+                Card c = getCard(cardId);\n+                c.setDid(Consts.DEFAULT_DECK_ID);\n+                c.setODid(0L);\n+                c.note().addTag(mContext.getString(R.string.missing_home_deck_tag));\n+\n+                c.note().flush();\n+                c.flush();\n+                fixed++;\n+            } catch (Exception e) {\n+                Timber.e(e, \"Failed to fix card '%d'\", cardId);\n+            }\n+        }\n+\n+        result.setCardsWithFixedHomeDeckCount(fixed);\n+\n+        if (fixed == 0) {\n+            return Collections.emptyList();\n+        }\n+        Timber.d(\"Completed\");\n+        String message = String.format(Locale.US, \"Fixed %d decks with no home deck\", fixed);", "originalCommit": "9c232d775250a6a1869d429da3c8eee06fffd1b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3b81f633ca727b483d4ee6f2c389076d9d59b31a", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\nindex ae39629b9..0a55f05d4 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n\n@@ -1639,7 +1595,7 @@ public class Collection {\n \n         //PERF: in debug, 3 seconds for 87 cards.\n         //So, roughly 30 for 1000 cards\n-        Timber.i(\"Found %d decks with no home deck\", cardIds.size());\n+        Timber.i(\"Found %d cards with no home deck\", cardIds.size());\n         int fixed = 0;\n         for (long cardId : cardIds) {\n             try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MDMzMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/5949#discussion_r405860330", "bodyText": "this (int) worries me, but I hope it's not a realistic problem.", "author": "david-allison-1", "createdAt": "2020-04-08T22:53:35Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java", "diffHunk": "@@ -2386,4 +2352,49 @@ public void onPostExecute(TaskData result) {\n             }\n         });\n     }\n+\n+\n+    private class CheckDatabaseListener extends DeckTask.TaskListener {\n+        @Override\n+        public void onPreExecute() {\n+            mProgressDialog = StyledProgressDialog.show(DeckPicker.this, AnkiDroidApp.getAppResources().getString(R.string.app_name),\n+                    getResources().getString(R.string.check_db_message), false);\n+        }\n+\n+\n+        @Override\n+        public void onPostExecute(TaskData result) {\n+            if (mProgressDialog != null && mProgressDialog.isShowing()) {\n+                mProgressDialog.dismiss();\n+            }\n+            if (result != null && result.getBoolean() && result.getObjArray() != null && result.getObjArray().length > 0) {\n+                String msg;\n+                Collection.CheckDatabaseResult databaseResult = (Collection.CheckDatabaseResult) result.getObjArray()[0];\n+\n+                int count = databaseResult.getCardsWithFixedHomeDeckCount();\n+                if (count != 0) {\n+                    String message = getResources().getString(R.string.integrity_check_fixed_no_home_deck, count);\n+                    UIUtils.showThemedToast(DeckPicker.this,  message, false);\n+                }\n+\n+                long shrunkInMb = Math.round(databaseResult.getSizeChangeInKb() / 1024.0);\n+                if (shrunkInMb > 0.0) {\n+                    msg = String.format(Locale.getDefault(),\n+                    getResources().getString(R.string.check_db_acknowledge_shrunk), (int) shrunkInMb);", "originalCommit": "ab42db81fd471627980d7e9688391a1df6db0265", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e89d721a255d770bd6b74c448006e62e1ba7a62", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java b/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java\nindex 82d57c238..8e7e5947c 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/DeckPicker.java\n\n@@ -2352,49 +2416,4 @@ public class DeckPicker extends NavigationDrawerActivity implements\n             }\n         });\n     }\n-\n-\n-    private class CheckDatabaseListener extends DeckTask.TaskListener {\n-        @Override\n-        public void onPreExecute() {\n-            mProgressDialog = StyledProgressDialog.show(DeckPicker.this, AnkiDroidApp.getAppResources().getString(R.string.app_name),\n-                    getResources().getString(R.string.check_db_message), false);\n-        }\n-\n-\n-        @Override\n-        public void onPostExecute(TaskData result) {\n-            if (mProgressDialog != null && mProgressDialog.isShowing()) {\n-                mProgressDialog.dismiss();\n-            }\n-            if (result != null && result.getBoolean() && result.getObjArray() != null && result.getObjArray().length > 0) {\n-                String msg;\n-                Collection.CheckDatabaseResult databaseResult = (Collection.CheckDatabaseResult) result.getObjArray()[0];\n-\n-                int count = databaseResult.getCardsWithFixedHomeDeckCount();\n-                if (count != 0) {\n-                    String message = getResources().getString(R.string.integrity_check_fixed_no_home_deck, count);\n-                    UIUtils.showThemedToast(DeckPicker.this,  message, false);\n-                }\n-\n-                long shrunkInMb = Math.round(databaseResult.getSizeChangeInKb() / 1024.0);\n-                if (shrunkInMb > 0.0) {\n-                    msg = String.format(Locale.getDefault(),\n-                    getResources().getString(R.string.check_db_acknowledge_shrunk), (int) shrunkInMb);\n-                } else {\n-                    msg = getResources().getString(R.string.check_db_acknowledge);\n-                }\n-                // Show result of database check and restart the app\n-                showSimpleMessageDialog(msg, true);\n-            } else {\n-                handleDbError();\n-            }\n-        }\n-\n-\n-        @Override\n-        public void onProgressUpdate(TaskData... values) {\n-            mProgressDialog.setContent(values[0].getString());\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2MTM1OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5949#discussion_r405861359", "bodyText": "No longer used, but nice to have", "author": "david-allison-1", "createdAt": "2020-04-08T22:56:26Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Consts.java", "diffHunk": "@@ -102,4 +102,6 @@\n     public static final int REVLOG_CRAM = 3;\n \n     // The labels defined in consts.py are in AnkiDroid's resources files.\n+\n+    public static final long DEFAULT_DECK_ID = 1;", "originalCommit": "ab42db81fd471627980d7e9688391a1df6db0265", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNTMzMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/5949#discussion_r407215332", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Both of these cases can be fixed by setting the odid to 1.\n          \n          \n            \n                    // Both of these cases can be fixed by moving the decks to a known-good deck\n          \n          \n            \n                    // This fix will create a 'Recovered Cards' deck at top of deck list and move\n          \n          \n            \n                    // all cards in dynamic decks with no original deck id to this new deck\n          \n      \n    \n    \n  \n\nThat's a suggestion, but really it would be better as a javadoc at the top of the method", "author": "mikehardy", "createdAt": "2020-04-12T15:40:14Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -1603,12 +1603,67 @@ public long fixIntegrity(DeckTask.ProgressCallback progressCallback) {\n         }\n         file = new File(mPath);\n         long newSize = file.length();\n+        result.setNewSize(newSize);\n         // if any problems were found, force a full sync\n-        if (problems.size() > 0) {\n+        if (result.hasProblems()) {\n             modSchemaNoCheck();\n         }\n-        logProblems(problems);\n-        return (oldSize - newSize) / 1024;\n+        logProblems(result.getProblems());\n+        return result;\n+    }\n+\n+\n+    private List<String> ensureCardsHaveHomeDeck(Runnable notifyProgress, CheckDatabaseResult result) {\n+        Timber.d(\"ensureCardsHaveHomeDeck()\");\n+        // #5932 - a card may not have a home deck if:\n+        // * It is in a dynamic deck, and has odid = 0.\n+        // * It is in a dynamic deck, and the odid refers to a dynamic deck.\n+        notifyProgress.run();\n+        //Both of these cases can be fixed by setting the odid to 1.", "originalCommit": "16ec68078b15b8a594dc00fe21dc21557f5166c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0e89d721a255d770bd6b74c448006e62e1ba7a62", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\nindex fa83e853e..3526605b1 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n\n@@ -1603,18 +1559,16 @@ public class Collection {\n         }\n         file = new File(mPath);\n         long newSize = file.length();\n-        result.setNewSize(newSize);\n         // if any problems were found, force a full sync\n         if (result.hasProblems()) {\n             modSchemaNoCheck();\n         }\n         logProblems(result.getProblems());\n-        return result;\n+        return (result.getOldSize() - newSize) / 1024;\n     }\n \n \n     private List<String> ensureCardsHaveHomeDeck(Runnable notifyProgress, CheckDatabaseResult result) {\n-        Timber.d(\"ensureCardsHaveHomeDeck()\");\n         // #5932 - a card may not have a home deck if:\n         // * It is in a dynamic deck, and has odid = 0.\n         // * It is in a dynamic deck, and the odid refers to a dynamic deck.\n"}}, {"oid": "0e89d721a255d770bd6b74c448006e62e1ba7a62", "url": "https://github.com/ankidroid/Anki-Android/commit/0e89d721a255d770bd6b74c448006e62e1ba7a62", "message": "Add integrity check: ensureCardsHaveHomeDeck\n\nThis fixes any occurrences of #5932 which have already occurred.\n\nAnd leaves a variable free to perform a notification with", "committedDate": "2020-04-20T15:27:03Z", "type": "commit"}, {"oid": "3b81f633ca727b483d4ee6f2c389076d9d59b31a", "url": "https://github.com/ankidroid/Anki-Android/commit/3b81f633ca727b483d4ee6f2c389076d9d59b31a", "message": "Update AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n\nCo-Authored-By: Mike Hardy <github@mikehardy.net>", "committedDate": "2020-04-20T15:27:04Z", "type": "commit"}, {"oid": "fc5154043a9d7bff068d8415ac7c4b223afda417", "url": "https://github.com/ankidroid/Anki-Android/commit/fc5154043a9d7bff068d8415ac7c4b223afda417", "message": "Update AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n\nCo-Authored-By: Mike Hardy <github@mikehardy.net>", "committedDate": "2020-04-20T15:27:04Z", "type": "commit"}, {"oid": "457e19770b279aaec77b1884d92e46da691b9bd0", "url": "https://github.com/ankidroid/Anki-Android/commit/457e19770b279aaec77b1884d92e46da691b9bd0", "message": "Update AnkiDroid/src/main/res/values/03-dialogs.xml\n\nCo-Authored-By: Mike Hardy <github@mikehardy.net>", "committedDate": "2020-04-20T15:27:04Z", "type": "commit"}, {"oid": "f3446536bc44fd189e3f0eb48bfab05220ada824", "url": "https://github.com/ankidroid/Anki-Android/commit/f3446536bc44fd189e3f0eb48bfab05220ada824", "message": "Modified check to be database - only\n\nIt was too slow to perform the work individually, use the database to\nbatch it.\n\nWe move from tagging to creating a new deck and moving the cards there.", "committedDate": "2020-04-20T15:27:05Z", "type": "commit"}, {"oid": "c7e11b8ff2d038387763cd0b4cd022ca909aee69", "url": "https://github.com/ankidroid/Anki-Android/commit/c7e11b8ff2d038387763cd0b4cd022ca909aee69", "message": "Add broken UI code", "committedDate": "2020-04-20T15:27:05Z", "type": "commit"}, {"oid": "56020ceabc0f720e4e5653e95547cdd40f00259b", "url": "https://github.com/ankidroid/Anki-Android/commit/56020ceabc0f720e4e5653e95547cdd40f00259b", "message": "NF: Remove unused constant", "committedDate": "2020-04-20T15:27:06Z", "type": "commit"}, {"oid": "c48d63ff3b26f0cdfc5ba4ba1a2e9a77c72f9b6b", "url": "https://github.com/ankidroid/Anki-Android/commit/c48d63ff3b26f0cdfc5ba4ba1a2e9a77c72f9b6b", "message": "Ensure changes are marked as syncable", "committedDate": "2020-04-20T15:27:06Z", "type": "commit"}, {"oid": "c097f834bfcaaf9bc460e21813557b082ac9a98f", "url": "https://github.com/ankidroid/Anki-Android/commit/c097f834bfcaaf9bc460e21813557b082ac9a98f", "message": "NF: Extract CheckDatabaseListener", "committedDate": "2020-04-20T15:36:26Z", "type": "commit"}, {"oid": "86a4a23d8b80457367ca4ada59f44797d2278db5", "url": "https://github.com/ankidroid/Anki-Android/commit/86a4a23d8b80457367ca4ada59f44797d2278db5", "message": "NF: Improve text for \"fixed home deck\"", "committedDate": "2020-04-20T15:36:33Z", "type": "commit"}, {"oid": "c12b596d4d05383270578d1ffac40a9a377e1029", "url": "https://github.com/ankidroid/Anki-Android/commit/c12b596d4d05383270578d1ffac40a9a377e1029", "message": "Added Toast from fixIntegrity\n\nWe needed to display this on the UI thread, which meant feeding back the\nresult to the caller", "committedDate": "2020-04-20T15:43:18Z", "type": "commit"}, {"oid": "1b61ac83a12c7efaa0689c0911cf4ece31bbef26", "url": "https://github.com/ankidroid/Anki-Android/commit/1b61ac83a12c7efaa0689c0911cf4ece31bbef26", "message": "Improve accuracy of getSizeChangeInKb\n\nWe no longer need to return -1 to signify failure, so we can improve the\nprecision of the variable", "committedDate": "2020-04-20T15:43:23Z", "type": "commit"}, {"oid": "42230175a4c52cead06edd48d0a1073453ca57bd", "url": "https://github.com/ankidroid/Anki-Android/commit/42230175a4c52cead06edd48d0a1073453ca57bd", "message": "Fix bug in representation of size reduction.\n\nWe were showing kB when we do bytes / 1024 / 1024", "committedDate": "2020-04-20T15:43:23Z", "type": "commit"}, {"oid": "b4ef50ec5d4cd69fa1e5166ceebc68a6e3fd8610", "url": "https://github.com/ankidroid/Anki-Android/commit/b4ef50ec5d4cd69fa1e5166ceebc68a6e3fd8610", "message": "NF: Remove excess logging", "committedDate": "2020-04-20T15:43:24Z", "type": "commit"}, {"oid": "7128e0f1b7eb0921c10bb3b8ed8e8c62bdf7ac3b", "url": "https://github.com/ankidroid/Anki-Android/commit/7128e0f1b7eb0921c10bb3b8ed8e8c62bdf7ac3b", "message": "NF: Improve string resource name", "committedDate": "2020-04-20T15:43:24Z", "type": "commit"}, {"oid": "ce508698ac58d7f8decaff6cd0d5620e41e1d02f", "url": "https://github.com/ankidroid/Anki-Android/commit/ce508698ac58d7f8decaff6cd0d5620e41e1d02f", "message": "NF: Improve Comment & move to JavaDoc", "committedDate": "2020-04-20T15:43:24Z", "type": "commit"}, {"oid": "ce508698ac58d7f8decaff6cd0d5620e41e1d02f", "url": "https://github.com/ankidroid/Anki-Android/commit/ce508698ac58d7f8decaff6cd0d5620e41e1d02f", "message": "NF: Improve Comment & move to JavaDoc", "committedDate": "2020-04-20T15:43:24Z", "type": "forcePushed"}]}