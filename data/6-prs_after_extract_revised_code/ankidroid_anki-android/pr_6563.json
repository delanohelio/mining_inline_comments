{"pr_number": 6563, "pr_title": "Factorize main children", "pr_createdAt": "2020-06-26T22:01:17Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6563", "timeline": [{"oid": "de06f77d3ccfb244af7b3847fa4a7ec77b44574c", "url": "https://github.com/ankidroid/Anki-Android/commit/de06f77d3ccfb244af7b3847fa4a7ec77b44574c", "message": "NF: _groupChildrenMain saves children in node.children", "committedDate": "2020-06-26T21:38:31Z", "type": "commit"}, {"oid": "cd73afb631c469f6ced60f4b777362f9567e8a13", "url": "https://github.com/ankidroid/Anki-Android/commit/cd73afb631c469f6ced60f4b777362f9567e8a13", "message": "NF: simplifies _groupChildrenMain\n\nInstead of using external variables, we directly put values in the\nnode and keep the node", "committedDate": "2020-06-26T21:55:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1MzY4OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6563#discussion_r446453688", "bodyText": "The fact that we're still keeping the class as mutable is concerning, especially as we're weakening the invariants over it.\nAre you eventually planning on moving the mutable state into a factory method?", "author": "david-allison-1", "createdAt": "2020-06-26T23:45:45Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/AbstractSched.java", "diffHunk": "@@ -184,7 +188,8 @@\n         private int mRevCount;\n         private int mLrnCount;\n         private int mNewCount;\n-        private List<DeckDueTreeNode> mChildren = new ArrayList<>();\n+        @Nullable\n+        private List<DeckDueTreeNode> mChildren = null;", "originalCommit": "cd73afb631c469f6ced60f4b777362f9567e8a13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ2MDI2OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6563#discussion_r446460268", "bodyText": "On the long term, it will become the protobuf object \"DeckTreeNode\" and \"DeckDueTreeNode\" when this will have moved to rust.\nMy goal is mostly to ensure a quick loading while waiting for rust to be here. I understand this requires a lot of work, but I'm not really looking forward doing a perfect class since I expect it to be thrown away.\nRegardless: I'm not sure what you mean by \"mutable class\". Do you mean that you fill bad that they are setters ? Before my sequence of PR, they were only public members, so I fell like there is already a progress as far as object oriented code goes.\nI do not see the point of factory method here; maybe because I did far more functional programming that object oriented programming. If it may help the answer, my goal is still to create multiple classes, one with numbers, one without numbers.\u00a0You can see it in the big PR. However,\u00a0it was made clear to me that smaller PR are preferred in order to ensure that they are readable, so I did a small PR here.", "author": "Arthur-Milchior", "createdAt": "2020-06-27T00:26:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1MzY4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ2NTg4OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6563#discussion_r446465889", "bodyText": "My thoughts are that initialisation is done outside the class. setChildren() is effectively init, but is done later than object construction, which leaves the object in a partially constructed state.\nA factory method encapsulates this partially constructed state inside the class, so you can break invariants internally in the method to allow for mutation during construction, but the invariants will hold once the factory method has completed", "author": "david-allison-1", "createdAt": "2020-06-27T01:11:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1MzY4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ2ODM3OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6563#discussion_r446468378", "bodyText": "So, if I understand correctly, you prefer the previous version of the code, where the deck node is discarded and a new deck node is created, instead of the version in which we keep using the same deck node and add the children once they are computed ?\nIn any case, we will always have nodes without children, because that's what \"DeckDueList\" create, a list of deck node without any information related to the tree. But if you prefer, it's okay to me to delete the node without children and create a new one.", "author": "Arthur-Milchior", "createdAt": "2020-06-27T01:36:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1MzY4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ2ODU1NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6563#discussion_r446468554", "bodyText": "You may be happy to learn that in the rust code, there is already a method which create the deck tree, and return it without numbers, so that this current code will be deleted eventually", "author": "Arthur-Milchior", "createdAt": "2020-06-27T01:37:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1MzY4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY2MDkwOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6563#discussion_r446660909", "bodyText": "I would like to note that current code upstream create the node and then add its children\nhttps://github.com/ankitects/anki/blob/master/rslib/src/decks/tree.rs#L41\ni don't believe it to be extremely relevant as current code use an extremely different process than previous code.\nThey now compute the deck tree without number, then add number latters. This makes far more sens according to me, would not be hard to port to java; would be extremely more efficient (because it allows to use a single query to the database instead of doing three query by deck), but pointless if we eventually uses rust directly.\nThe only trouble I'd have porting it to java is that current code upstream removed the method DeckDueList, and we use this method a lot in tests and in the remainder. I don't know why honestly, does not seems to have any interest, it would actually be far more efficient to just use the deck manager. But that's not what is currently done", "author": "Arthur-Milchior", "createdAt": "2020-06-28T14:56:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1MzY4OA=="}], "type": "inlineReview", "revised_code": null}]}