{"pr_number": 7615, "pr_title": "NF: uses parametrized query where possible", "pr_createdAt": "2020-11-04T10:36:17Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/7615", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2MzI1Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517763253", "bodyText": "Not for this PR, but a further improvement:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    try (Cursor cursor = mCol.getDb().getDatabase().query(\"SELECT * FROM cards WHERE id = ?\", new Object[]{mId})) {\n          \n          \n            \n                    try (Cursor cursor = mCol.getDb().query(\"SELECT * FROM cards WHERE id = ?\", mId)) {", "author": "david-allison-1", "createdAt": "2020-11-05T02:55:31Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Card.java", "diffHunk": "@@ -148,7 +148,7 @@ public Card(Collection col, Long id) {\n \n \n     public void load() {\n-        try (Cursor cursor = mCol.getDb().getDatabase().query(\"SELECT * FROM cards WHERE id = \" + mId, null)) {\n+        try (Cursor cursor = mCol.getDb().getDatabase().query(\"SELECT * FROM cards WHERE id = ?\", new Object[]{mId})) {", "originalCommit": "bd54e7a383696fc3e268eab56cfadd18540764c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4b5db42c7d5e0773bd118aec8af0d1e7662f6382", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Card.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Card.java\nindex 746685d4d..8b5f60466 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Card.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Card.java\n\n@@ -148,7 +148,7 @@ public class Card implements Cloneable {\n \n \n     public void load() {\n-        try (Cursor cursor = mCol.getDb().getDatabase().query(\"SELECT * FROM cards WHERE id = ?\", new Object[]{mId})) {\n+        try (Cursor cursor = mCol.getDb().query(\"SELECT * FROM cards WHERE id = ?\", mId)) {\n             if (!cursor.moveToFirst()) {\n                 throw new WrongId(mId, \"card\");\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2Mzk2NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517763964", "bodyText": "Can you manually confirm that this is correct - we don't use .update() often", "author": "david-allison-1", "createdAt": "2020-11-05T02:58:09Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Card.java", "diffHunk": "@@ -241,7 +241,7 @@ public void flushSched() {\n         values.put(\"odid\", mODid);\n         values.put(\"did\", mDid);\n         // TODO: The update DB call sets mod=true. Verify if this is intended.\n-        mCol.getDb().update(\"cards\", values, \"id = \" + mId, null);\n+        mCol.getDb().update(\"cards\", values, \"id = ?\", new String[] {Long.toString(mId)});", "originalCommit": "bd54e7a383696fc3e268eab56cfadd18540764c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc4NTg3Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517785876", "bodyText": "According to doc, this last argument represents values for the ?\nThere seems to be no reason to prefer update to execute, or reciprocally. It seems they both do similar thing. It's hard to actually state whether one is better since those are name of interface functions.", "author": "Arthur-Milchior", "createdAt": "2020-11-05T04:29:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2Mzk2NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NDE5Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517764193", "bodyText": "execute accepts Object...", "author": "david-allison-1", "createdAt": "2020-11-05T02:59:04Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -1595,14 +1595,14 @@ public CheckDatabaseResult fixIntegrity(CollectionTask.ProgressCallback progress\n         getDecks().flush();\n \n         mDb.execute(\"update cards \" +\n-                        \"set did = \" + nextDeckId + \", \" +\n+                        \"set did = ?, \" +\n                         \"odid = 0,\" +\n-                        \"mod = \" +  getTime().intTime() + \", \" +\n-                        \"usn = \" + usn() + \" \" +\n+                        \"mod = ?, \" +\n+                        \"usn = ? \" +\n                         \"where did in \" +\n                         Utils.ids2str(dynDeckIds) +\n                         \"and odid in \" +\n-                        Utils.ids2str(dynIdsAndZero));\n+                        Utils.ids2str(dynIdsAndZero), new Object[] {nextDeckId, getTime().intTime(), usn()});", "originalCommit": "bd54e7a383696fc3e268eab56cfadd18540764c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc4NjM0MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517786341", "bodyText": "Oh right,", "author": "Arthur-Milchior", "createdAt": "2020-11-05T04:30:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NDE5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7c1602886892d097bb442a7f7248233df2656d57", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\nindex 359a94e98..3deb7c6db 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n\n@@ -1602,7 +1602,7 @@ public class Collection {\n                         \"where did in \" +\n                         Utils.ids2str(dynDeckIds) +\n                         \"and odid in \" +\n-                        Utils.ids2str(dynIdsAndZero), new Object[] {nextDeckId, getTime().intTime(), usn()});\n+                        Utils.ids2str(dynIdsAndZero), nextDeckId, getTime().intTime(), usn());\n \n \n         result.setCardsWithFixedHomeDeckCount(cardIds.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NDI3Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517764273", "bodyText": "ditto", "author": "david-allison-1", "createdAt": "2020-11-05T02:59:15Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -1673,8 +1673,7 @@ public CheckDatabaseResult fixIntegrity(CollectionTask.ProgressCallback progress\n         notifyProgress.run();\n         if (ids.size() > 0) {\n             problems.add(\"Reviews had incorrect due date.\");\n-            mDb.execute(\"UPDATE cards SET due = \" + mSched.getToday() + \", ivl = 1, mod = \" +  getTime().intTime() +\n-                    \", usn = \" + usn() + \" WHERE id IN \" + Utils.ids2str(Utils.collection2Array(ids)));\n+            mDb.execute(\"UPDATE cards SET due = ?, ivl = 1, mod = ?, usn = ? WHERE id IN \" + Utils.ids2str(Utils.collection2Array(ids)), new Object[]{mSched.getToday(), getTime().intTime(), usn()});", "originalCommit": "bd54e7a383696fc3e268eab56cfadd18540764c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7c1602886892d097bb442a7f7248233df2656d57", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\nindex 359a94e98..3deb7c6db 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n\n@@ -1673,7 +1673,7 @@ public class Collection {\n         notifyProgress.run();\n         if (ids.size() > 0) {\n             problems.add(\"Reviews had incorrect due date.\");\n-            mDb.execute(\"UPDATE cards SET due = ?, ivl = 1, mod = ?, usn = ? WHERE id IN \" + Utils.ids2str(Utils.collection2Array(ids)), new Object[]{mSched.getToday(), getTime().intTime(), usn()});\n+            mDb.execute(\"UPDATE cards SET due = ?, ivl = 1, mod = ?, usn = ? WHERE id IN \" + Utils.ids2str(Utils.collection2Array(ids)), mSched.getToday(), getTime().intTime(), usn());\n         }\n         return problems;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NDMxNA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517764314", "bodyText": "ditto", "author": "david-allison-1", "createdAt": "2020-11-05T02:59:23Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java", "diffHunk": "@@ -1693,8 +1692,7 @@ public CheckDatabaseResult fixIntegrity(CollectionTask.ProgressCallback progress\n         Timber.d(\"fixNewCardDuePositionOverflow\");\n         // new cards can't have a due position > 32 bits\n         notifyProgress.run();\n-        mDb.execute(\"UPDATE cards SET due = 1000000, mod = \" + getTime().intTime() + \", usn = \" + usn()\n-                + \" WHERE due > 1000000 AND type = \" + Consts.CARD_TYPE_NEW);\n+        mDb.execute(\"UPDATE cards SET due = 1000000, mod = ?, usn = ? WHERE due > 1000000 AND type = \" + Consts.CARD_TYPE_NEW, new Object[]{getTime().intTime(), usn()});", "originalCommit": "bd54e7a383696fc3e268eab56cfadd18540764c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7c1602886892d097bb442a7f7248233df2656d57", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\nindex 359a94e98..3deb7c6db 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Collection.java\n\n@@ -1692,7 +1692,7 @@ public class Collection {\n         Timber.d(\"fixNewCardDuePositionOverflow\");\n         // new cards can't have a due position > 32 bits\n         notifyProgress.run();\n-        mDb.execute(\"UPDATE cards SET due = 1000000, mod = ?, usn = ? WHERE due > 1000000 AND type = \" + Consts.CARD_TYPE_NEW, new Object[]{getTime().intTime(), usn()});\n+        mDb.execute(\"UPDATE cards SET due = 1000000, mod = ?, usn = ? WHERE due > 1000000 AND type = \" + Consts.CARD_TYPE_NEW, getTime().intTime(), usn());\n         return Collections.emptyList();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NDM3Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517764373", "bodyText": "unnecessary change", "author": "david-allison-1", "createdAt": "2020-11-05T02:59:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java", "diffHunk": "@@ -481,6 +481,7 @@ private String _findCardState(String val) {\n         } else if (\"due\".equals(val)) {\n             return \"(c.queue in (\" + Consts.QUEUE_TYPE_REV + \",\" + Consts.QUEUE_TYPE_DAY_LEARN_RELEARN + \") and c.due <= \" + mCol.getSched().getToday() +\n                     \") or (c.queue = \" + Consts.QUEUE_TYPE_LRN + \" and c.due <= \" + mCol.getSched().getDayCutoff() + \")\";\n+", "originalCommit": "bd54e7a383696fc3e268eab56cfadd18540764c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7c1602886892d097bb442a7f7248233df2656d57", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\nindex bdae414c4..7dd2a47f2 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n\n@@ -481,7 +481,6 @@ public class Finder {\n         } else if (\"due\".equals(val)) {\n             return \"(c.queue in (\" + Consts.QUEUE_TYPE_REV + \",\" + Consts.QUEUE_TYPE_DAY_LEARN_RELEARN + \") and c.due <= \" + mCol.getSched().getToday() +\n                     \") or (c.queue = \" + Consts.QUEUE_TYPE_LRN + \" and c.due <= \" + mCol.getSched().getDayCutoff() + \")\";\n-\n         } else {\n             return null;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NTE0NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517765144", "bodyText": "Add a comment - the code was easier to understand before", "author": "david-allison-1", "createdAt": "2020-11-05T03:02:31Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java", "diffHunk": "@@ -1868,14 +1868,20 @@ public void emptyDyn(long did) {\n     // Overriden: other queue in V1\n     public void emptyDyn(long did, String lim) {\n         if (lim == null) {\n-            lim = \"did = \" + did;\n-        }\n-        mCol.log(mCol.getDb().queryLongList(\"select id from cards where \" + lim));\n+            mCol.log(mCol.getDb().queryLongList(\"select id from cards where did = ?\", did));", "originalCommit": "bd54e7a383696fc3e268eab56cfadd18540764c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc4OTc2Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517789766", "bodyText": "Done differently, in a hopefully simpler way", "author": "Arthur-Milchior", "createdAt": "2020-11-05T04:45:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NTE0NA=="}], "type": "inlineReview", "revised_code": {"commit": "7c1602886892d097bb442a7f7248233df2656d57", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java\nindex 5d422062c..043cfb49b 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/SchedV2.java\n\n@@ -1861,32 +1861,29 @@ public class SchedV2 extends AbstractSched {\n \n \n     public void emptyDyn(long did) {\n-        emptyDyn(did, null);\n+        mCol.log(mCol.getDb().queryLongList(\"select id from cards where did = ?\", did));\n+\n+        mCol.getDb().execute(\n+                \"update cards set did = odid, \" + _restoreQueueSnippet() +\n+                        \", due = (case when odue>0 then odue else due end), odue = 0, odid = 0, usn = ? where did = ?\",\n+                mCol.usn(), did);\n     }\n \n \n     // Overriden: other queue in V1\n-    public void emptyDyn(long did, String lim) {\n-        if (lim == null) {\n-            mCol.log(mCol.getDb().queryLongList(\"select id from cards where did = ?\", did));\n-\n-            mCol.getDb().execute(\n-                    \"update cards set did = odid, \" + _restoreQueueSnippet() +\n-                            \", due = (case when odue>0 then odue else due end), odue = 0, odid = 0, usn = ? where did = ?\",\n-                    mCol.usn(), did);\n-        } else {\n-            mCol.log(mCol.getDb().queryLongList(\"select id from cards where \" + lim));\n+    public void emptyDyn(String lim) {\n+        // Both codes are similar, except that in the first one the condition is stated in `lim` while in the second one, the condition is the cards from deck did.\n+        mCol.log(mCol.getDb().queryLongList(\"select id from cards where \" + lim));\n \n-            mCol.getDb().execute(\n-                    \"update cards set did = odid, \" + _restoreQueueSnippet() +\n-                            \", due = (case when odue>0 then odue else due end), odue = 0, odid = 0, usn = ? where \" + lim,\n-                    mCol.usn());\n-        }\n+        mCol.getDb().execute(\n+                \"update cards set did = odid, \" + _restoreQueueSnippet() +\n+                        \", due = (case when odue>0 then odue else due end), odue = 0, odid = 0, usn = ? where \" + lim,\n+                mCol.usn());\n     }\n \n \n     public void remFromDyn(long[] cids) {\n-        emptyDyn(0, \"id IN \" + Utils.ids2str(cids) + \" AND odid\");\n+        emptyDyn(\"id IN \" + Utils.ids2str(cids) + \" AND odid\");\n     }\n \n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NTMwOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517765309", "bodyText": "Consider reverting this - it makes the code harder to reason about.", "author": "david-allison-1", "createdAt": "2020-11-05T03:03:17Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/stats/Stats.java", "diffHunk": "@@ -435,8 +435,10 @@ private boolean calculateDue(AxisType type) {\n \n         String lim = \"\";// AND due - \" + mCol.getSched().getToday() + \" >= \" + start; // leave this out in order to show\n         // card too which were due the days before\n+        Object[] bindArgs = new Object[] {};", "originalCommit": "bd54e7a383696fc3e268eab56cfadd18540764c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5MTAwMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517791000", "bodyText": "Ok", "author": "Arthur-Milchior", "createdAt": "2020-11-05T04:50:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc2NTMwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "7c1602886892d097bb442a7f7248233df2656d57", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/stats/Stats.java b/AnkiDroid/src/main/java/com/ichi2/libanki/stats/Stats.java\nindex 67fdbacad..835283b1d 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/stats/Stats.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/stats/Stats.java\n\n@@ -435,10 +435,8 @@ public class Stats {\n \n         String lim = \"\";// AND due - \" + mCol.getSched().getToday() + \" >= \" + start; // leave this out in order to show\n         // card too which were due the days before\n-        Object[] bindArgs = new Object[] {};\n         if (end != -1) {\n-            lim += \" AND day <= ?\";\n-            bindArgs = new Object[]{end};\n+            lim += \" AND day <= \" + end;\n         }\n \n         ArrayList<int[]> dues = new ArrayList<>();\n"}}, {"oid": "7c1602886892d097bb442a7f7248233df2656d57", "url": "https://github.com/ankidroid/Anki-Android/commit/7c1602886892d097bb442a7f7248233df2656d57", "message": "NF: uses parametrized query where possible\n\nThey were found using\n```sql\n= ?\" ?\\+\n```", "committedDate": "2020-11-05T04:47:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5OTYxMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517799612", "bodyText": "IMO, This is adding too much complexity - I'd be tempted to move it back, unless emptyDyn() is on a critical path.", "author": "david-allison-1", "createdAt": "2020-11-05T05:24:54Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java", "diffHunk": "@@ -930,16 +930,24 @@ public void rebuildDyn(long did) {\n \n \n     @Override\n-    public void emptyDyn(long did, String lim) {\n-        if (lim == null) {\n-            lim = \"did = \" + did;\n-        }\n+    public void emptyDyn(String lim) {\n+        mCol.log(mCol.getDb().queryLongList(\"select id from cards where \" + lim));", "originalCommit": "7c1602886892d097bb442a7f7248233df2656d57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwMzQ0Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517803442", "bodyText": "No. Deleting an empty filtered deck is clearly not a critical path. I'll remove", "author": "Arthur-Milchior", "createdAt": "2020-11-05T05:39:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5OTYxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwNDk3Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517804976", "bodyText": "On second though, i'm surprised. I'd find this one quite easier to understand, since both functions have a single parameter tehy use, instead of checking whether a value is null, if only in this case uses the other one", "author": "Arthur-Milchior", "createdAt": "2020-11-05T05:44:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5OTYxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcwMjQwOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r518702409", "bodyText": "Done, even if I I'd still prefer the other version", "author": "Arthur-Milchior", "createdAt": "2020-11-06T11:50:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5OTYxMg=="}], "type": "inlineReview", "revised_code": {"commit": "1b4665f1773ad2e94bc874270836ac1405bc3ffe", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java\nindex e86eab95d..55443e71d 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/sched/Sched.java\n\n@@ -930,24 +928,16 @@ public class Sched extends SchedV2 {\n \n \n     @Override\n-    public void emptyDyn(String lim) {\n-        mCol.log(mCol.getDb().queryLongList(\"select id from cards where \" + lim));\n-        // move out of cram queue\n-        mCol.getDb().execute(\n-                \"update cards set did = odid, queue = (case when type = \" + Consts.CARD_TYPE_LRN + \" then \" + Consts.QUEUE_TYPE_NEW + \" \" +\n-                        \"else type end), type = (case when type = \" + Consts.CARD_TYPE_LRN + \" then \" + Consts.CARD_TYPE_NEW + \" else type end), \" +\n-                        \"due = odue, odue = 0, odid = 0, usn = ? where \" + lim,\n-                mCol.usn());\n-    }\n-\n-    public void emptyDyn(long did) {\n-        String lim = \"did = \" + did;\n+    public void emptyDyn(long did, String lim) {\n+        if (lim == null) {\n+            lim = \"did = \" + did;\n+        }\n         mCol.log(mCol.getDb().queryLongList(\"select id from cards where \" + lim));\n         // move out of cram queue\n         mCol.getDb().execute(\n                 \"update cards set did = odid, queue = (case when type = \" + Consts.CARD_TYPE_LRN + \" then \" + Consts.QUEUE_TYPE_NEW + \" \" +\n-                        \"else type end), type = (case when type = \" + Consts.CARD_TYPE_LRN + \" then \" + Consts.CARD_TYPE_NEW + \" else type end), \" +\n-                        \"due = odue, odue = 0, odid = 0, usn = ? where \" + lim,\n+                \"else type end), type = (case when type = \" + Consts.CARD_TYPE_LRN + \" then \" + Consts.CARD_TYPE_NEW + \" else type end), \" +\n+                \"due = odue, odue = 0, odid = 0, usn = ? where \" + lim,\n                 mCol.usn());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwMDI0MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517800240", "bodyText": "Better as the original", "author": "david-allison-1", "createdAt": "2020-11-05T05:27:09Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java", "diffHunk": "@@ -108,7 +108,7 @@ public Finder(Collection col) {\n         boolean rev = res2.second;\n         String sql = _query(preds, order);\n         Timber.v(\"Search query '%s' is compiled as '%s'.\", query, sql);\n-        try (Cursor cur = mCol.getDb().getDatabase().query(sql, args)) {\n+        try (Cursor cur = mCol.getDb().query(sql, (Object[]) args)) {", "originalCommit": "cbe51804a298353ba455478cfa549ac711afadd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwNTM4Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517805382", "bodyText": "ok", "author": "Arthur-Milchior", "createdAt": "2020-11-05T05:46:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwMDI0MA=="}], "type": "inlineReview", "revised_code": {"commit": "4b5db42c7d5e0773bd118aec8af0d1e7662f6382", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\nindex 784edb735..9ac3c3947 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n\n@@ -108,7 +108,7 @@ public class Finder {\n         boolean rev = res2.second;\n         String sql = _query(preds, order);\n         Timber.v(\"Search query '%s' is compiled as '%s'.\", query, sql);\n-        try (Cursor cur = mCol.getDb().query(sql, (Object[]) args)) {\n+        try (Cursor cur = mCol.getDb().getDatabase().query(sql, args)) {\n             while (cur.moveToNext()) {\n                 if (task != null && task.isCancelled()) {\n                     return new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwMDI2OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517800269", "bodyText": "ditto", "author": "david-allison-1", "createdAt": "2020-11-05T05:27:15Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java", "diffHunk": "@@ -141,7 +141,7 @@ public Finder(Collection col) {\n             preds = \"(\" + preds + \")\";\n         }\n         String sql = \"select distinct(n.id) from cards c, notes n where c.nid=n.id and \" + preds;\n-        try (Cursor cur = mCol.getDb().getDatabase().query(sql, args)) {\n+        try (Cursor cur = mCol.getDb().query(sql, (Object[]) args)) {", "originalCommit": "cbe51804a298353ba455478cfa549ac711afadd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwNTQ5Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517805497", "bodyText": "Ok", "author": "Arthur-Milchior", "createdAt": "2020-11-05T05:46:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwMDI2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "4b5db42c7d5e0773bd118aec8af0d1e7662f6382", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\nindex 784edb735..9ac3c3947 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n\n@@ -141,7 +141,7 @@ public class Finder {\n             preds = \"(\" + preds + \")\";\n         }\n         String sql = \"select distinct(n.id) from cards c, notes n where c.nid=n.id and \" + preds;\n-        try (Cursor cur = mCol.getDb().query(sql, (Object[]) args)) {\n+        try (Cursor cur = mCol.getDb().getDatabase().query(sql, args)) {\n             while (cur.moveToNext()) {\n                 res.add(cur.getLong(0));\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwMDM1Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517800352", "bodyText": "Is new Object[] needed here?", "author": "david-allison-1", "createdAt": "2020-11-05T05:27:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java", "diffHunk": "@@ -761,10 +761,10 @@ private String _findField(String field, String val) {\n             return null;\n         }\n         LinkedList<Long> nids = new LinkedList<>();\n-        try (Cursor cur = mCol.getDb().getDatabase().query(\n+        try (Cursor cur = mCol.getDb().query(\n                 \"select id, mid, flds from notes where mid in \" +\n                         Utils.ids2str(new LinkedList<>(mods.keySet())) +\n-                        \" and flds like ? escape '\\\\'\", new String[] {\"%\" + sqlVal + \"%\"})) {\n+                        \" and flds like ? escape '\\\\'\", new Object[] {\"%\" + sqlVal + \"%\"})) {", "originalCommit": "cbe51804a298353ba455478cfa549ac711afadd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwNjAyNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/7615#discussion_r517806027", "bodyText": "Oh actually, the array can be removed here", "author": "Arthur-Milchior", "createdAt": "2020-11-05T05:48:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgwMDM1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "4b5db42c7d5e0773bd118aec8af0d1e7662f6382", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\nindex 784edb735..9ac3c3947 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n\n@@ -764,7 +764,7 @@ public class Finder {\n         try (Cursor cur = mCol.getDb().query(\n                 \"select id, mid, flds from notes where mid in \" +\n                         Utils.ids2str(new LinkedList<>(mods.keySet())) +\n-                        \" and flds like ? escape '\\\\'\", new Object[] {\"%\" + sqlVal + \"%\"})) {\n+                        \" and flds like ? escape '\\\\'\",  \"%\" + sqlVal + \"%\")) {\n             /*\n              * Here we use the sqlVal expression, that is required for LIKE syntax in sqllite.\n              * There is no problem with special characters, because only % and _ are special\n"}}, {"oid": "4b5db42c7d5e0773bd118aec8af0d1e7662f6382", "url": "https://github.com/ankidroid/Anki-Android/commit/4b5db42c7d5e0773bd118aec8af0d1e7662f6382", "message": "NF: query query", "committedDate": "2020-11-05T05:47:32Z", "type": "forcePushed"}, {"oid": "1b4665f1773ad2e94bc874270836ac1405bc3ffe", "url": "https://github.com/ankidroid/Anki-Android/commit/1b4665f1773ad2e94bc874270836ac1405bc3ffe", "message": "NF: query query", "committedDate": "2020-11-06T11:49:35Z", "type": "forcePushed"}, {"oid": "aaa576289554a7e0ee1337db25c1e8c15d1716aa", "url": "https://github.com/ankidroid/Anki-Android/commit/aaa576289554a7e0ee1337db25c1e8c15d1716aa", "message": "NF: uses parametrized query where possible\n\nThey were found using\n```sql\n= ?\" ?\\+\n```", "committedDate": "2020-11-06T11:54:52Z", "type": "commit"}, {"oid": "5c07069088ded103325b068e8d44dd6d04e07d5c", "url": "https://github.com/ankidroid/Anki-Android/commit/5c07069088ded103325b068e8d44dd6d04e07d5c", "message": "NF: query query", "committedDate": "2020-11-06T11:54:56Z", "type": "commit"}, {"oid": "5c07069088ded103325b068e8d44dd6d04e07d5c", "url": "https://github.com/ankidroid/Anki-Android/commit/5c07069088ded103325b068e8d44dd6d04e07d5c", "message": "NF: query query", "committedDate": "2020-11-06T11:54:56Z", "type": "forcePushed"}]}