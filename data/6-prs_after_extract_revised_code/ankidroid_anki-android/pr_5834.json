{"pr_number": 5834, "pr_title": "Persist Whiteboard Visible State", "pr_createdAt": "2020-03-19T09:17:56Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/5834", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA0OTU5Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/5834#discussion_r395049596", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(columnCount <= 0) {\n          \n          \n            \n                    if (columnCount <= 0) {", "author": "mikehardy", "createdAt": "2020-03-19T14:05:00Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/MetaDB.java", "diffHunk": "@@ -81,38 +81,49 @@ private static SQLiteDatabase upgradeDB(SQLiteDatabase mMetaDb, int databaseVers\n         // Create tables if not exist\n         mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS languages (\" + \" _id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n                 + \"did INTEGER NOT NULL, ord INTEGER, \" + \"qa INTEGER, \" + \"language TEXT)\");\n-        mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS whiteboardState (\" + \"_id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n-                + \"did INTEGER NOT NULL, \" + \"state INTEGER)\");\n         mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS customDictionary (\" + \"_id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n                 + \"did INTEGER NOT NULL, \" + \"dictionary INTEGER)\");\n         mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS smallWidgetStatus (\" + \"id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n                 + \"due INTEGER NOT NULL, eta INTEGER NOT NULL)\");\n-        // Use pragma to get info about widgetStatus.\n-        Cursor c = null;\n-        try {\n-             c = mMetaDb.rawQuery(\"PRAGMA table_info(widgetStatus)\", null);\n-            int columnNumber = c.getCount();\n-            if (columnNumber > 0) {\n-                if (columnNumber < 7) {\n-                    mMetaDb.execSQL(\"ALTER TABLE widgetStatus \" + \"ADD COLUMN eta INTEGER NOT NULL DEFAULT '0'\");\n-                    mMetaDb.execSQL(\"ALTER TABLE widgetStatus \" + \"ADD COLUMN time INTEGER NOT NULL DEFAULT '0'\");\n-                }\n-            } else {\n-                mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS widgetStatus (\" + \"deckId INTEGER NOT NULL PRIMARY KEY, \"\n-                        + \"deckName TEXT NOT NULL, \" + \"newCards INTEGER NOT NULL, \" + \"lrnCards INTEGER NOT NULL, \"\n-                        + \"dueCards INTEGER NOT NULL, \" + \"progress INTEGER NOT NULL, \" + \"eta INTEGER NOT NULL)\");\n-            }\n-            mMetaDb.setVersion(databaseVersion);\n-            Timber.i(\"MetaDB:: Upgrading Internal Database finished. New version: %d\", databaseVersion);\n-            return mMetaDb;\n-        } finally {\n-            if (c != null) {\n-                c.close();\n-            }\n+        updateWidgetStatus(mMetaDb);\n+        updateWhiteboardState(mMetaDb);\n+        mMetaDb.setVersion(databaseVersion);\n+        Timber.i(\"MetaDB:: Upgrading Internal Database finished. New version: %d\", databaseVersion);\n+        return mMetaDb;\n+    }\n+\n+\n+    private static void updateWhiteboardState(SQLiteDatabase mMetaDb) {\n+        int columnCount  = DatabaseUtil.getTableColumnCount(mMetaDb, \"whiteboardState\");\n+\n+        if(columnCount <= 0) {", "originalCommit": "408cd9bc413aee931698109b98f0b2098dbaa91b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "37c8c62b520265c5d28c93c02d432af1e36ce326", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/MetaDB.java b/AnkiDroid/src/main/java/com/ichi2/anki/MetaDB.java\nindex 09bd99c89..4f4a45154 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/MetaDB.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/MetaDB.java\n\n@@ -81,36 +81,13 @@ public class MetaDB {\n         // Create tables if not exist\n         mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS languages (\" + \" _id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n                 + \"did INTEGER NOT NULL, ord INTEGER, \" + \"qa INTEGER, \" + \"language TEXT)\");\n+        mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS whiteboardState (\" + \"_id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n+                + \"did INTEGER NOT NULL, \" + \"state INTEGER)\");\n         mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS customDictionary (\" + \"_id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n                 + \"did INTEGER NOT NULL, \" + \"dictionary INTEGER)\");\n         mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS smallWidgetStatus (\" + \"id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n                 + \"due INTEGER NOT NULL, eta INTEGER NOT NULL)\");\n-        updateWidgetStatus(mMetaDb);\n-        updateWhiteboardState(mMetaDb);\n-        mMetaDb.setVersion(databaseVersion);\n-        Timber.i(\"MetaDB:: Upgrading Internal Database finished. New version: %d\", databaseVersion);\n-        return mMetaDb;\n-    }\n-\n-\n-    private static void updateWhiteboardState(SQLiteDatabase mMetaDb) {\n-        int columnCount  = DatabaseUtil.getTableColumnCount(mMetaDb, \"whiteboardState\");\n-\n-        if(columnCount <= 0) {\n-            mMetaDb.execSQL(\"CREATE TABLE IF NOT EXISTS whiteboardState (_id INTEGER PRIMARY KEY AUTOINCREMENT, \"\n-                    + \"did INTEGER NOT NULL, state INTEGER, visible INTEGER)\");\n-            return;\n-        }\n-\n-        if (columnCount < 4) {\n-            //Default to 1\n-            mMetaDb.execSQL(\"ALTER TABLE whiteboardState ADD COLUMN visible INTEGER NOT NULL DEFAULT '1'\");\n-            Timber.i(\"Added 'visible' column to whiteboardState\");\n-        }\n-    }\n-\n-\n-    private static void updateWidgetStatus(SQLiteDatabase mMetaDb) {\n+        // Use pragma to get info about widgetStatus.\n         int columnCount = DatabaseUtil.getTableColumnCount(mMetaDb, \"widgetStatus\");\n         if (columnCount > 0) {\n             if (columnCount < 7) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1MjA4OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5834#discussion_r395052089", "bodyText": "I believe this onCollectionLoaded callback is async yes? (I should know offhand but always have to re-trace this stuff and I'm reviewing quickly at the moment) I believe it is - if this is on the main/UI thread it could be a pain for folks, we try not to touch storage ever on the main/UI thread, thus all the AsyncTask infrastructure", "author": "mikehardy", "createdAt": "2020-03-19T14:08:23Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java", "diffHunk": "@@ -169,8 +169,10 @@ protected void onCollectionLoaded(Collection col) {\n \n         mPrefWhiteboard = MetaDB.getWhiteboardState(this, getParentDid());\n         if (mPrefWhiteboard) {\n+            //DEFECT: Slight inefficiency here, as we set the database using these methods", "originalCommit": "408cd9bc413aee931698109b98f0b2098dbaa91b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA3MjEyMQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5834#discussion_r395072121", "bodyText": "We already do it in both the unchanged lines above and below, this adds two more calls. onCollectionLoaded is a very rare event, so I'm not too worried about adding a few ms here.\nBut, I'll move this into a testable unit, and will get it fixed. Probably in the next day or two. Happy to block on this for now.", "author": "david-allison-1", "createdAt": "2020-03-19T14:34:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1MjA4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "37c8c62b520265c5d28c93c02d432af1e36ce326", "chunk": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex 5f60806ac..1c97a0320 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n\n@@ -169,10 +169,8 @@ public class Reviewer extends AbstractFlashcardViewer {\n \n         mPrefWhiteboard = MetaDB.getWhiteboardState(this, getParentDid());\n         if (mPrefWhiteboard) {\n-            //DEFECT: Slight inefficiency here, as we set the database using these methods\n-            boolean whiteboardVisibility = MetaDB.getWhiteboardVisibility(this, getParentDid());\n             setWhiteboardEnabledState(true);\n-            setWhiteboardVisibility(whiteboardVisibility);\n+            setWhiteboardVisibility(true);\n         }\n \n         col.getSched().reset();     // Reset schedule incase card had previous been loaded\n"}}, {"oid": "37c8c62b520265c5d28c93c02d432af1e36ce326", "url": "https://github.com/ankidroid/Anki-Android/commit/37c8c62b520265c5d28c93c02d432af1e36ce326", "message": "Extract: getTableColumnCount", "committedDate": "2020-03-22T12:50:46Z", "type": "commit"}, {"oid": "12f6cedbc9aad1550b2f47fb848dfa41ea12b2a0", "url": "https://github.com/ankidroid/Anki-Android/commit/12f6cedbc9aad1550b2f47fb848dfa41ea12b2a0", "message": "Extract: getScalarBoolean", "committedDate": "2020-03-22T12:51:47Z", "type": "commit"}, {"oid": "d7386636ce00a8ab4d7fb4cff652a0b4da980209", "url": "https://github.com/ankidroid/Anki-Android/commit/d7386636ce00a8ab4d7fb4cff652a0b4da980209", "message": "Extract: updateWidgetStatus", "committedDate": "2020-03-22T12:53:15Z", "type": "commit"}, {"oid": "4442e4293f4818e0b3366aeabe2e1d73d400af4b", "url": "https://github.com/ankidroid/Anki-Android/commit/4442e4293f4818e0b3366aeabe2e1d73d400af4b", "message": "#5065 - Persist Whiteboard Visible State\n\nPreviously, the whiteboard visible state depended on the enabled state\n\nThis caused problems when switching from Night Mode.\n\nNow, the preferences are separate, with visible depending on the status\nof enabled.", "committedDate": "2020-03-22T12:58:06Z", "type": "commit"}, {"oid": "4442e4293f4818e0b3366aeabe2e1d73d400af4b", "url": "https://github.com/ankidroid/Anki-Android/commit/4442e4293f4818e0b3366aeabe2e1d73d400af4b", "message": "#5065 - Persist Whiteboard Visible State\n\nPreviously, the whiteboard visible state depended on the enabled state\n\nThis caused problems when switching from Night Mode.\n\nNow, the preferences are separate, with visible depending on the status\nof enabled.", "committedDate": "2020-03-22T12:58:06Z", "type": "forcePushed"}]}