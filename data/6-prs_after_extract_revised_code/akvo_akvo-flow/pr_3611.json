{"pr_number": 3611, "pr_title": "[#3608] Download datapoints", "pr_createdAt": "2020-07-01T15:09:40Z", "pr_url": "https://github.com/akvo/akvo-flow/pull/3611", "timeline": [{"oid": "c9f3c52cae273ec38e0631560bc2737f448b1c21", "url": "https://github.com/akvo/akvo-flow/commit/c9f3c52cae273ec38e0631560bc2737f448b1c21", "message": "[#3608] Add utility method to SurveyAssignment DAO\n\n* Enable retrieval of survey assignments by filtering both on survey and device IDs\n* Remove ununsed utility method", "committedDate": "2020-06-25T19:28:38Z", "type": "commit"}, {"oid": "9ca2d562d96ad698e61289369e2c3d4d1bd20425", "url": "https://github.com/akvo/akvo-flow/commit/9ca2d562d96ad698e61289369e2c3d4d1bd20425", "message": "[#3608] Fix query parameter for SurveyAssignment entities", "committedDate": "2020-06-26T09:33:43Z", "type": "commit"}, {"oid": "4fcf4914f88683856e0dfd75df5f13da792d35d9", "url": "https://github.com/akvo/akvo-flow/commit/4fcf4914f88683856e0dfd75df5f13da792d35d9", "message": "[#3608] Refactor existing datapoint retrieval logic", "committedDate": "2020-06-26T17:09:27Z", "type": "commit"}, {"oid": "3f724fcc64df1ea1be564082af4c8595c70bd444", "url": "https://github.com/akvo/akvo-flow/commit/3f724fcc64df1ea1be564082af4c8595c70bd444", "message": "[#3608] Add support for lastUpdateTime query parameter\n\n* When retrieving datapoints on the device, we can now pass in the lastUpdateTime parameter to filter out which datapoints will be returned to the device.\n* We also limit the number of datapoints returned to 30. This means the device will have to repeatedly query the backend for datapoints using the lastUpdateTime parameter as a cursor\n* Also added corresponding test cases", "committedDate": "2020-06-29T13:00:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcyNjA5NA==", "url": "https://github.com/akvo/akvo-flow/pull/3611#discussion_r448726094", "bodyText": "We're changing the status code from HTTP 404 to HTTP 403. If we don't find the device or the datapoint list is empty, we keep using HTTP 404. Why this case is different?", "author": "iperdomo", "createdAt": "2020-07-02T03:20:43Z", "path": "GAE/src/org/akvo/flow/api/app/DataPointServlet.java", "diffHunk": "@@ -77,63 +80,89 @@ protected RestRequest convertRequest() throws Exception {\n     protected RestResponse handleRequest(RestRequest req) throws Exception {\n         DataPointRequest dpReq = (DataPointRequest) req;\n         RestResponse res = new RestResponse();\n-        if (dpReq.getSurveyId() != null) {\n-            //Find the device (if any)\n-            DeviceDAO deviceDao = new DeviceDAO();\n-            Device device = deviceDao.getDevice(dpReq.getAndroidId(), null, null);\n-            if (device != null) {\n-                log.info(\"Found device id: \" + device.getKey().getId());\n-                log.fine(\"Found device: \" + device);\n-                List<SurveyedLocale> dpList = getDataPointList(dpReq.getSurveyId(), device.getKey().getId());\n-                if (dpList == null) {\n-                    res.setCode(String.valueOf(HttpServletResponse.SC_NOT_FOUND));\n-                    res.setMessage(\"No assignment was found\");\n-                    return res;\n-                }\n-                res = convertToResponse(dpList, dpReq.getSurveyId());\n-                return res;\n-            }\n-            res.setCode(String.valueOf(HttpServletResponse.SC_NOT_FOUND));\n-            res.setMessage(\"Unknown device\");\n-        } else {\n+        if (dpReq.getSurveyId() == null) {\n             res.setCode(String.valueOf(HttpServletResponse.SC_FORBIDDEN));", "originalCommit": "3f724fcc64df1ea1be564082af4c8595c70bd444", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgzNzI3MA==", "url": "https://github.com/akvo/akvo-flow/pull/3611#discussion_r448837270", "bodyText": "The 403 was always there in the else branch so I have just made it more explicit. I am not sure how the older versions process the returned status so I did not want to change it. Otherwise I actually wanted to return a 401 if there is no surveyId", "author": "muloem", "createdAt": "2020-07-02T08:31:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcyNjA5NA=="}], "type": "inlineReview", "revised_code": {"commit": "4d3e5cd3537f7a88b513bdc5df32bf323ee7f079", "chunk": "diff --git a/GAE/src/org/akvo/flow/api/app/DataPointServlet.java b/GAE/src/org/akvo/flow/api/app/DataPointServlet.java\nindex f6350185d..9a969a785 100644\n--- a/GAE/src/org/akvo/flow/api/app/DataPointServlet.java\n+++ b/GAE/src/org/akvo/flow/api/app/DataPointServlet.java\n\n@@ -97,7 +96,7 @@ public class DataPointServlet extends AbstractRestApiServlet {\n         log.fine(\"Found device: \" + device);\n \n \n-        final List<SurveyedLocale> dpList = getDataPointList(dpReq.getSurveyId(), device.getKey().getId(), dpReq.getLastUpdateTime());\n+        final List<SurveyedLocale> dpList = getDataPointList(dpReq.getSurveyId(), device.getKey().getId(), dpReq.getLastUpdateTime(), dpReq.getCursor());\n \n         if (dpList.isEmpty()) {\n             res.setCode(String.valueOf(HttpServletResponse.SC_NOT_FOUND));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODczMjgwMQ==", "url": "https://github.com/akvo/akvo-flow/pull/3611#discussion_r448732801", "bodyText": "I don't think we should filter by lastUpdatedDateTime, but if we need to. We can create a few datapoints \"in the future\" directly instead of dealing with Thread.sleep ? \ud83e\udd14", "author": "iperdomo", "createdAt": "2020-07-02T03:50:33Z", "path": "GAE/test/org/akvo/flow/api/app/DataPointServletTest.java", "diffHunk": "@@ -219,6 +220,44 @@ public void noAssignmentTest() {\n         final Long surveyId = randomId();\n         final DataPointServlet servlet = new DataPointServlet();\n         final List<SurveyedLocale> foundDataPoints = servlet.getDataPointList(surveyId, randomId());\n-        assertNull(foundDataPoints);\n+        assertTrue(foundDataPoints.isEmpty());\n+    }\n+\n+    @Test\n+    public void testRetrieveDataPointsByLastUpdateTime() throws InterruptedException {\n+        final Long surveyId = randomId();\n+        final List<SurveyedLocale> oldDataPoints = createDataPoints(surveyId, 5);\n+        final Date lastUpdateTime = new Date();\n+        Thread.sleep(1500); // only datapoints created after this point should be retrieved", "originalCommit": "3f724fcc64df1ea1be564082af4c8595c70bd444", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4d3e5cd3537f7a88b513bdc5df32bf323ee7f079", "chunk": "diff --git a/GAE/test/org/akvo/flow/api/app/DataPointServletTest.java b/GAE/test/org/akvo/flow/api/app/DataPointServletTest.java\nindex 7f98c298a..7fa6ba561 100644\n--- a/GAE/test/org/akvo/flow/api/app/DataPointServletTest.java\n+++ b/GAE/test/org/akvo/flow/api/app/DataPointServletTest.java\n\n@@ -224,40 +228,23 @@ public class DataPointServletTest {\n     }\n \n     @Test\n-    public void testRetrieveDataPointsByLastUpdateTime() throws InterruptedException {\n+    public void testRetrieveDataPointsWithCursor() {\n         final Long surveyId = randomId();\n-        final List<SurveyedLocale> oldDataPoints = createDataPoints(surveyId, 5);\n-        final Date lastUpdateTime = new Date();\n-        Thread.sleep(1500); // only datapoints created after this point should be retrieved\n-        final List<SurveyedLocale> newDataPoints = createDataPoints(surveyId, 10);\n-\n+        final List<SurveyedLocale> dataPoints = createDataPoints(surveyId, 35);\n         final Long assignmentId = randomId();\n         final Long deviceId = randomId();\n+        final List<Long> deviceIds = Arrays.asList(deviceId);\n+        final List<Long> formIds = Arrays.asList(randomId());\n \n+        createAssignment(surveyId, deviceIds, formIds);\n         createDataPointAssignment(assignmentId, deviceId, ALL_DATA_POINTS, surveyId);\n \n         final DataPointServlet servlet = new DataPointServlet();\n-        final List<SurveyedLocale> foundDataPoints = servlet.getDataPointList(surveyId, deviceId, lastUpdateTime);\n-        assertEquals(10, foundDataPoints.size());\n-\n-        final Set<Long> newDataPointIds = getEntityIds(newDataPoints);\n-        final Set<Long> foundDataPointIds = getEntityIds(foundDataPoints);\n-        assertEquals(newDataPointIds, foundDataPointIds);\n-    }\n-\n-    @Test\n-    public void testRetrieveLimitedNumberOfDataPoints() throws InterruptedException {\n-        final Long surveyId = randomId();\n-        final Date lastUpdateTime = new Date();\n-        Thread.sleep(500); // only datapoints created after this point should be retrieved\n-        final List<SurveyedLocale> dataPoints = createDataPoints(surveyId, 32);\n-        final Long assignmentId = randomId();\n-        final Long deviceId = randomId();\n+        final List<SurveyedLocale> firstBatchDataPoints = servlet.getDataPointList(surveyId, deviceId, null);\n+        String cursor = BaseDAO.getCursor(firstBatchDataPoints);\n+        final List<SurveyedLocale> secondBatchDataPoints = servlet.getDataPointList(surveyId, deviceId, null, cursor);\n \n-        createDataPointAssignment(assignmentId, deviceId, ALL_DATA_POINTS, surveyId);\n-\n-        final DataPointServlet servlet = new DataPointServlet();\n-        final List<SurveyedLocale> foundDataPoints = servlet.getDataPointList(surveyId, deviceId, lastUpdateTime);\n-        assertEquals(30, foundDataPoints.size());\n+        assertEquals(30, firstBatchDataPoints.size());\n+        assertEquals(5, secondBatchDataPoints.size());\n     }\n }\n"}}, {"oid": "4d3e5cd3537f7a88b513bdc5df32bf323ee7f079", "url": "https://github.com/akvo/akvo-flow/commit/4d3e5cd3537f7a88b513bdc5df32bf323ee7f079", "message": "[#3608] Limit results returned by the datapoints endpoint to a max of 30\n\n* Modify the endpoint to return a maximum of 30 datapoints.  This applies to the old assignments setup where no datapoints were specifically assigned, and the new assignments setup where its possible to specify that all datapoints are assigned to a device\n\n* Add utility methods to the SurveyedLocaleDAO to retrieve datapoints based on a supplied cursor if its available\n\n* Remove broken tests that were using lastUpdateTime parameter when retrieving datapoints", "committedDate": "2020-07-03T16:26:55Z", "type": "commit"}, {"oid": "2dc6d566045a4f094825244ec307189ba3a53fa9", "url": "https://github.com/akvo/akvo-flow/commit/2dc6d566045a4f094825244ec307189ba3a53fa9", "message": "[#3608] Enable extended stack traces in unit testing output\n\n* By default the value is set to false.  If for some reason you would like to see the extended stack trace while testing you need to temporarily switch this to true.", "committedDate": "2020-07-03T16:30:53Z", "type": "commit"}, {"oid": "eaae5382f3a56e20218e6439659d19480823a9d0", "url": "https://github.com/akvo/akvo-flow/commit/eaae5382f3a56e20218e6439659d19480823a9d0", "message": "[#3608] Remove the `lastUpdateTime` parameter from datapoints endpoint", "committedDate": "2020-07-03T16:57:19Z", "type": "commit"}, {"oid": "cc4814a463cfe0e57092afe86471c0937449008c", "url": "https://github.com/akvo/akvo-flow/commit/cc4814a463cfe0e57092afe86471c0937449008c", "message": "[#3608] Return a cursor along with the datapoints", "committedDate": "2020-07-07T14:10:26Z", "type": "commit"}]}