{"pr_number": 1600, "pr_title": "JBTM-3273 -> Implemented code review comments", "pr_createdAt": "2020-04-16T11:08:18Z", "pr_url": "https://github.com/jbosstm/narayana/pull/1600", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3MzcyOA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409573728", "bodyText": "I think an AtomicBoolean should be sufficient.", "author": "mmusgrov", "createdAt": "2020-04-16T13:52:59Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/recovery/RecoveryRequired.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package com.arjuna.ats.jta.recovery;\n+\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n+\n+public class RecoveryRequired {\n+\n+    private static ReentrantReadWriteLock lock = new ReentrantReadWriteLock();", "originalCommit": "258c410930811626a1e973f5cc02908d327af481", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxODYyNA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409618624", "bodyText": "I will remove this class and add the AtomicBoolean to XARecoveryModule.java", "author": "mayankkunwar", "createdAt": "2020-04-16T14:49:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3MzcyOA=="}], "type": "inlineReview", "revised_code": {"commit": "8cd324bedff4d14c2b1fe08a63ca185637c7d524", "chunk": "diff --git a/ArjunaJTA/jta/classes/com/arjuna/ats/jta/recovery/RecoveryRequired.java b/ArjunaJTA/jta/classes/com/arjuna/ats/jta/recovery/RecoveryRequired.java\ndeleted file mode 100644\nindex b250d3fe0..000000000\n--- a/ArjunaJTA/jta/classes/com/arjuna/ats/jta/recovery/RecoveryRequired.java\n+++ /dev/null\n\n@@ -1,24 +0,0 @@\n-package com.arjuna.ats.jta.recovery;\n-\n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-\n-public class RecoveryRequired {\n-\n-    private static ReentrantReadWriteLock lock = new ReentrantReadWriteLock();\n-    private static boolean recoveryProblems;\n-\n-    public static boolean isRecoveryProblems() {\n-        lock.readLock().lock();\n-        try {\n-            return recoveryProblems;\n-        } finally {\n-            lock.readLock().unlock();\n-        }\n-    }\n-\n-    public static void setRecoveryProblems(boolean recoveryProblems) {\n-        lock.writeLock().lock();\n-        RecoveryRequired.recoveryProblems = recoveryProblems;\n-        lock.writeLock().unlock();\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3ODA0NA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409578044", "bodyText": "We can avoid the new RecoveryRequired class and just add an AtomicBoolean to this class instead.", "author": "mmusgrov", "createdAt": "2020-04-16T13:58:35Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -59,14 +59,8 @@\n import com.arjuna.ats.internal.arjuna.common.UidHelper;\n import com.arjuna.ats.internal.jta.resources.arjunacore.XAResourceRecord;\n import com.arjuna.ats.jta.common.jtaPropertyManager;\n-import com.arjuna.ats.jta.logging.RecoveryRequired;\n import com.arjuna.ats.jta.logging.jtaLogger;\n-import com.arjuna.ats.jta.recovery.SerializableXAResourceDeserializer;\n-import com.arjuna.ats.jta.recovery.XARecoveryResource;\n-import com.arjuna.ats.jta.recovery.XARecoveryResourceManager;\n-import com.arjuna.ats.jta.recovery.XAResourceOrphanFilter;\n-import com.arjuna.ats.jta.recovery.XAResourceRecovery;\n-import com.arjuna.ats.jta.recovery.XAResourceRecoveryHelper;\n+import com.arjuna.ats.jta.recovery.*;", "originalCommit": "258c410930811626a1e973f5cc02908d327af481", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMjE1Mw==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409602153", "bodyText": "We have a checkstyle plugin which is skipped by default because we have a lot of old files, that we don't want to change, which would fail the compilation. But on new code we do encourage/advise that it should follow our checkstyle rules.\nTo see if your code follows our style guide you have two options:\n\n\nEnable the checkstyle plugin via the pom file, or\n\n\nReference the rule file from your IDE settings (for Intelij that would be Settings -> Other Settings -> Checkstyle) and we use the wildfly rule set.", "author": "mmusgrov", "createdAt": "2020-04-16T14:28:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3ODA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNjU4NA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409616584", "bodyText": "We can avoid the new RecoveryRequired class and just add an AtomicBoolean to this class instead.\n\nOkay, I will remove the new RecoveryRequired class and add AtomicBoolean", "author": "mayankkunwar", "createdAt": "2020-04-16T14:47:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3ODA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNzU1OQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409617559", "bodyText": "We have a checkstyle plugin which is skipped by default because we have a lot of old files, that we don't want to change, which would fail the compilation. But on new code we do encourage/advise that it should follow our checkstyle rules.\nTo see if your code follows our style guide you have two options:\n\nEnable the checkstyle plugin via the pom file, or\nReference the rule file from your IDE settings (for Intelij that would be Settings -> Other Settings -> Checkstyle) and we use the wildfly rule set.\n\n\nMaybe checkstyle changes can be done on separate PR?", "author": "mayankkunwar", "createdAt": "2020-04-16T14:48:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3ODA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxNzUxMA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410217510", "bodyText": "The checkstyle issue I commented on was introduced as part of this PR so a separate PR would not make sense.\nI admit that having to manually run the checkstyle plugin is not optimal. But I do not see an alternative to the reason I gave:\n\nWe have a checkstyle plugin which is skipped by default because we have a lot of old files, that we don't want to change, which would fail the compilation. But on new code we do encourage/advise that it should follow our checkstyle rules.\n\n@ochaloup We have had this problem of  skipping the checkstyle plugin on two PRs this week, it mainly affects new/occasional contributors. Do you have any thoughts on how we could improve it (other than fixing all of the historical code).", "author": "mmusgrov", "createdAt": "2020-04-17T13:21:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3ODA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MDAzOQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410240039", "bodyText": "I see that your latest push has fixed the checkstyle problem I reported.\nBut I will not mark the conversation as resolved yet since I have an outstanding question for Ondra.", "author": "mmusgrov", "createdAt": "2020-04-17T13:56:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3ODA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzMTQxNQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r411931415", "bodyText": "Sorry for not reacting this sooner I wanted but I haven't got to this. I can see the discussion was moved to chat. I replied there.", "author": "ochaloup", "createdAt": "2020-04-21T07:15:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3ODA0NA=="}], "type": "inlineReview", "revised_code": {"commit": "8cd324bedff4d14c2b1fe08a63ca185637c7d524", "chunk": "diff --git a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\nindex d0e639c18..f83d763a1 100644\n--- a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n+++ b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n\n@@ -60,7 +61,12 @@ import com.arjuna.ats.internal.arjuna.common.UidHelper;\n import com.arjuna.ats.internal.jta.resources.arjunacore.XAResourceRecord;\n import com.arjuna.ats.jta.common.jtaPropertyManager;\n import com.arjuna.ats.jta.logging.jtaLogger;\n-import com.arjuna.ats.jta.recovery.*;\n+import com.arjuna.ats.jta.recovery.SerializableXAResourceDeserializer;\n+import com.arjuna.ats.jta.recovery.XARecoveryResource;\n+import com.arjuna.ats.jta.recovery.XARecoveryResourceManager;\n+import com.arjuna.ats.jta.recovery.XAResourceOrphanFilter;\n+import com.arjuna.ats.jta.recovery.XAResourceRecovery;\n+import com.arjuna.ats.jta.recovery.XAResourceRecoveryHelper;\n import com.arjuna.ats.jta.utils.XAHelper;\n import com.arjuna.ats.jta.utils.XARecoveryResourceHelper;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU5NjgzOQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409596839", "bodyText": "Where is this used?", "author": "mmusgrov", "createdAt": "2020-04-16T14:22:26Z", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java", "diffHunk": "@@ -28,8 +28,8 @@\n import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;\n import com.arjuna.ats.jta.common.jtaPropertyManager;\n import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple;\n-import com.arjuna.ats.jta.logging.RecoveryRequired;\n import com.arjuna.ats.jta.logging.jtaLogger;\n+import com.arjuna.ats.jta.recovery.RecoveryRequired;", "originalCommit": "258c410930811626a1e973f5cc02908d327af481", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxODcxNA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409618714", "bodyText": "line no. 84", "author": "mayankkunwar", "createdAt": "2020-04-16T14:49:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU5NjgzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxOTc4Nw==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410219787", "bodyText": "Line 84 reads\n       } finally {", "author": "mmusgrov", "createdAt": "2020-04-17T13:25:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU5NjgzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "8cd324bedff4d14c2b1fe08a63ca185637c7d524", "chunk": "diff --git a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java\nindex 66de58bfc..97bc132a6 100644\n--- a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java\n+++ b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java\n\n@@ -29,7 +29,6 @@ import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;\n import com.arjuna.ats.jta.common.jtaPropertyManager;\n import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple;\n import com.arjuna.ats.jta.logging.jtaLogger;\n-import com.arjuna.ats.jta.recovery.RecoveryRequired;\n import org.junit.Test;\n \n import java.util.ArrayList;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMzMwMA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409603300", "bodyText": "Where is this used?", "author": "mmusgrov", "createdAt": "2020-04-16T14:30:21Z", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java", "diffHunk": "@@ -27,8 +27,8 @@\n import com.arjuna.ats.arjuna.tools.RecoveryMonitor;\n import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;\n import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple;\n-import com.arjuna.ats.jta.logging.RecoveryRequired;\n import com.arjuna.ats.jta.logging.jtaLogger;\n+import com.arjuna.ats.jta.recovery.RecoveryRequired;", "originalCommit": "258c410930811626a1e973f5cc02908d327af481", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxODgyNQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409618825", "bodyText": "line no. 126", "author": "mayankkunwar", "createdAt": "2020-04-16T14:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMzMwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyMTQwNQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410221405", "bodyText": "Line 126 reads as follows:\n            assertFalse(!xaRecoveryModule.isPeriodicWorkSuccessful());", "author": "mmusgrov", "createdAt": "2020-04-17T13:27:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMzMwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0OTc2Nw==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410249767", "bodyText": "Your latest push has resolved this so I will mark it as resolved.", "author": "mmusgrov", "createdAt": "2020-04-17T14:11:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMzMwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1NDY4NQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410254685", "bodyText": "Now I have deleted RecoveryRequired class and introduced new class variable, so line 126 is using some other class instance xaRecoveryModule to access recovery status.", "author": "mayankkunwar", "createdAt": "2020-04-17T14:19:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMzMwMA=="}], "type": "inlineReview", "revised_code": {"commit": "8cd324bedff4d14c2b1fe08a63ca185637c7d524", "chunk": "diff --git a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java\nindex fe0d04ec6..62113ed6f 100644\n--- a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java\n+++ b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java\n\n@@ -28,7 +28,6 @@ import com.arjuna.ats.arjuna.tools.RecoveryMonitor;\n import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;\n import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple;\n import com.arjuna.ats.jta.logging.jtaLogger;\n-import com.arjuna.ats.jta.recovery.RecoveryRequired;\n import org.junit.Test;\n \n import javax.transaction.xa.XAException;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMzQzNQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409603435", "bodyText": "Where is this used?", "author": "mmusgrov", "createdAt": "2020-04-16T14:30:30Z", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java", "diffHunk": "@@ -28,8 +28,8 @@\n import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;\n import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple;\n import com.arjuna.ats.jta.common.jtaPropertyManager;\n-import com.arjuna.ats.jta.logging.RecoveryRequired;\n import com.arjuna.ats.jta.logging.jtaLogger;\n+import com.arjuna.ats.jta.recovery.RecoveryRequired;", "originalCommit": "258c410930811626a1e973f5cc02908d327af481", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxODkwMw==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409618903", "bodyText": "line no. 95", "author": "mayankkunwar", "createdAt": "2020-04-16T14:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMzQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyMjU3MQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410222571", "bodyText": "Line 95 is a blank line.", "author": "mmusgrov", "createdAt": "2020-04-17T13:29:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMzQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MDQyNg==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410240426", "bodyText": "I see that your latest push has fixed this so marking as resolved.", "author": "mmusgrov", "createdAt": "2020-04-17T13:57:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMzQzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "8cd324bedff4d14c2b1fe08a63ca185637c7d524", "chunk": "diff --git a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java\nindex 11d728f7c..43ff3abf0 100644\n--- a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java\n+++ b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java\n\n@@ -29,7 +29,6 @@ import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;\n import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple;\n import com.arjuna.ats.jta.common.jtaPropertyManager;\n import com.arjuna.ats.jta.logging.jtaLogger;\n-import com.arjuna.ats.jta.recovery.RecoveryRequired;\n import org.junit.AfterClass;\n import org.junit.BeforeClass;\n import org.junit.Test;\n"}}, {"oid": "8cd324bedff4d14c2b1fe08a63ca185637c7d524", "url": "https://github.com/jbosstm/narayana/commit/8cd324bedff4d14c2b1fe08a63ca185637c7d524", "message": "JBTM-3273 -> Implemented code review comments", "committedDate": "2020-04-16T15:11:01Z", "type": "forcePushed"}, {"oid": "824af4910d4d0e94a432c6dcecc5b69106567c72", "url": "https://github.com/jbosstm/narayana/commit/824af4910d4d0e94a432c6dcecc5b69106567c72", "message": "JBTM-3273 -> Implemented code review comments", "committedDate": "2020-04-16T15:22:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5NTMwMw==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409695303", "bodyText": "why this needs to be static? I'm asking this question as I'm interested if there is some reasons behind this decision.\nI assume the approach should be to not use the static when it's not particularly needed. The API which the behaviour exposing to outer world - aka API that was used is the call to XARecoveryModule.isPeriodcWorkSuccesful.\nThis one is then consumed by WorkerService (https://github.com/jbosstm/narayana/blob/5.10.4.Final/ArjunaCore/arjuna/classes/com/arjuna/ats/internal/arjuna/recovery/WorkerService.java#L114) to inform about issue on recovery process when verbose output is demanded.", "author": "ochaloup", "createdAt": "2020-04-16T16:36:40Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -78,6 +78,16 @@\n \n public class XARecoveryModule implements ExtendedRecoveryModule\n {\n+\tprivate static AtomicBoolean recoveryProblems = new AtomicBoolean(false);", "originalCommit": "824af4910d4d0e94a432c6dcecc5b69106567c72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5MTgyNA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409991824", "bodyText": "Oh! sorry, I missed to see that XARecoveryModule.isPeriodcWorkSuccesful is already available, in order to expose the recovery state. I will remove static keyword. Thanks", "author": "mayankkunwar", "createdAt": "2020-04-17T04:53:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5NTMwMw=="}], "type": "inlineReview", "revised_code": {"commit": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "chunk": "diff --git a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\nindex f83d763a1..4e6647b46 100644\n--- a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n+++ b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n\n@@ -78,14 +78,14 @@ import org.jboss.tm.XAResourceWrapper;\n \n public class XARecoveryModule implements ExtendedRecoveryModule\n {\n-\tprivate static AtomicBoolean recoveryProblems = new AtomicBoolean(false);\n+\tprivate AtomicBoolean recoveryProblems = new AtomicBoolean(false);\n \n-\tpublic static boolean isRecoveryProblems() {\n-\t\treturn recoveryProblems.get();\n+\tboolean isRecoveryProblems() {\n+\t\treturn this.recoveryProblems.get();\n \t}\n \n-\tpublic static void setRecoveryProblems(final boolean recoveryProblems) {\n-\t\tXARecoveryModule.recoveryProblems.set(recoveryProblems);\n+\tvoid setRecoveryProblems(final boolean recoveryProblems) {\n+\t\tthis.recoveryProblems.set(recoveryProblems);\n \t}\n \n \tpublic XARecoveryModule()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5NTU4Ng==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409695586", "bodyText": "if there is no particular reason to make anything public then it should be private (or package-private in case)", "author": "ochaloup", "createdAt": "2020-04-16T16:37:08Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -78,6 +78,16 @@\n \n public class XARecoveryModule implements ExtendedRecoveryModule\n {\n+\tprivate static AtomicBoolean recoveryProblems = new AtomicBoolean(false);\n+\n+\tpublic static boolean isRecoveryProblems() {", "originalCommit": "824af4910d4d0e94a432c6dcecc5b69106567c72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5MTgwNQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409991805", "bodyText": "I will remove public access modifier.", "author": "mayankkunwar", "createdAt": "2020-04-17T04:53:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5NTU4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "chunk": "diff --git a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\nindex f83d763a1..4e6647b46 100644\n--- a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n+++ b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n\n@@ -78,14 +78,14 @@ import org.jboss.tm.XAResourceWrapper;\n \n public class XARecoveryModule implements ExtendedRecoveryModule\n {\n-\tprivate static AtomicBoolean recoveryProblems = new AtomicBoolean(false);\n+\tprivate AtomicBoolean recoveryProblems = new AtomicBoolean(false);\n \n-\tpublic static boolean isRecoveryProblems() {\n-\t\treturn recoveryProblems.get();\n+\tboolean isRecoveryProblems() {\n+\t\treturn this.recoveryProblems.get();\n \t}\n \n-\tpublic static void setRecoveryProblems(final boolean recoveryProblems) {\n-\t\tXARecoveryModule.recoveryProblems.set(recoveryProblems);\n+\tvoid setRecoveryProblems(final boolean recoveryProblems) {\n+\t\tthis.recoveryProblems.set(recoveryProblems);\n \t}\n \n \tpublic XARecoveryModule()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5NzQ3OQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409697479", "bodyText": "We don't need this comment anymore. If you couple the functionality of the recovery problem reporting into the one place which is  the XARecoveryModule here then it's the responsibility of the person updating that class to consider it.\nFrom my perspective there is no need to expose this responsibility to somebody adding a warn log message.", "author": "ochaloup", "createdAt": "2020-04-16T16:39:56Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java", "diffHunk": "@@ -45,6 +45,9 @@\n /**\n  * i18n log messages for the jta module.\n  *\n+ * For jtaI18NLogger, if any method, prefixed with <b>\"warn_recovery\"</b> is called then,", "originalCommit": "824af4910d4d0e94a432c6dcecc5b69106567c72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5MTc3OA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409991778", "bodyText": "okay", "author": "mayankkunwar", "createdAt": "2020-04-17T04:53:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5NzQ3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "chunk": "diff --git a/ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java b/ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java\nindex a0930ffed..3fc4facd1 100644\n--- a/ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java\n+++ b/ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java\n\n@@ -45,9 +45,6 @@ import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;\n /**\n  * i18n log messages for the jta module.\n  *\n- * For jtaI18NLogger, if any method, prefixed with <b>\"warn_recovery\"</b> is called then,\n- * <b>XARecoveryModule</b> class variable i.e. \"recoveryProblem\" should be set as <b>true</b>.\n- *\n  * @author Jonathan Halliday (jonathan.halliday@redhat.com) 2010-06\n  */\n @MessageLogger(projectCode = \"ARJUNA\")\n"}}, {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "url": "https://github.com/jbosstm/narayana/commit/bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "message": "JBTM-3273 -> Implemented code review comments", "committedDate": "2020-04-17T05:05:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MjcyOQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410242729", "bodyText": "We have a policy of only making changes that are relevant to the issue being fixed. This change seems unrelated.", "author": "mmusgrov", "createdAt": "2020-04-17T14:00:43Z", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java", "diffHunk": "@@ -66,8 +65,8 @@ public void testRecoveryMonitorWithFailure() throws Exception {\n         recoveryEnvironmentBean.setRecoveryListener(true); // configure the RecoveryMonitor\n \n         RecoveryManager manager = RecoveryManager.manager(RecoveryManager.DIRECT_MANAGEMENT);\n-\n-        manager.addModule(new XARecoveryModule()); // we only need to test the XARecoveryModule", "originalCommit": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1NzQ4NQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410257485", "bodyText": "Actually, change is related because as I have introduce new class variable in XARecoveryModule class to maintain recovery state, therefore in order to access the value of recovery state in test, I needed XARecoveryModule reference.", "author": "mayankkunwar", "createdAt": "2020-04-17T14:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MjcyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3NjI2OQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410276269", "bodyText": "Ah okay, apologies for not checking", "author": "mmusgrov", "createdAt": "2020-04-17T14:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MjcyOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0Mjg5OQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410242899", "bodyText": "Same comment here (the change is unrelated to the issue)", "author": "mmusgrov", "createdAt": "2020-04-17T14:01:01Z", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java", "diffHunk": "@@ -109,7 +108,8 @@ public void start(Xid xid, int i) throws XAException {\n \n         RecoveryManager manager = RecoveryManager.manager(RecoveryManager.DIRECT_MANAGEMENT);\n \n-        manager.addModule(new XARecoveryModule()); // we only need to test the XARecoveryModule", "originalCommit": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1NzkzNA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410257934", "bodyText": "same comment as above (changes are related to this issue)", "author": "mayankkunwar", "createdAt": "2020-04-17T14:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0Mjg5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3NjM5NA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410276394", "bodyText": "Thanks", "author": "mmusgrov", "createdAt": "2020-04-17T14:53:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0Mjg5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3NzM1Mw==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410277353", "bodyText": "Apologies for not checking. Thanks", "author": "mmusgrov", "createdAt": "2020-04-17T14:54:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0Mjg5OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MzU3MQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410243571", "bodyText": "assertTrue(xaRecoveryModule.isPeriodicWorkSuccessful());\navoids the double negative.", "author": "mmusgrov", "createdAt": "2020-04-17T14:02:01Z", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java", "diffHunk": "@@ -123,7 +123,7 @@ public void start(Xid xid, int i) throws XAException {\n             // check the output of the scan\n             assertEquals(\"DONE\", RecoveryMonitor.getResponse());\n             assertEquals(\"DONE\", RecoveryMonitor.getSystemOutput());\n-            assertFalse(RecoveryRequired.isRecoveryProblems());\n+            assertFalse(!xaRecoveryModule.isPeriodicWorkSuccessful());", "originalCommit": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1ODEwMA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410258100", "bodyText": "okay", "author": "mayankkunwar", "createdAt": "2020-04-17T14:24:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MzU3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e9d7c537997b225c169755aa3fee9c8301b4b58f", "chunk": "diff --git a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java\nindex 51ec53ada..420cea446 100644\n--- a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java\n+++ b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java\n\n@@ -123,7 +123,7 @@ public class RecoveryMonitorTest2 {\n             // check the output of the scan\n             assertEquals(\"DONE\", RecoveryMonitor.getResponse());\n             assertEquals(\"DONE\", RecoveryMonitor.getSystemOutput());\n-            assertFalse(!xaRecoveryModule.isPeriodicWorkSuccessful());\n+            assertTrue(xaRecoveryModule.isPeriodicWorkSuccessful());\n         } finally {\n             manager.terminate();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NDIzNA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410244234", "bodyText": "Same comment here (the change is unrelated to the issue)", "author": "mmusgrov", "createdAt": "2020-04-17T14:03:08Z", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java", "diffHunk": "@@ -66,7 +66,8 @@ public static void beforeClass() throws Exception {\n \n         manager = RecoveryManager.manager(RecoveryManager.DIRECT_MANAGEMENT);\n \n-        manager.addModule(new XARecoveryModule()); // we only need to test the XARecoveryModule", "originalCommit": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1ODMyMw==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410258323", "bodyText": "Changes are related(as explained in above comments)", "author": "mayankkunwar", "createdAt": "2020-04-17T14:25:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NDIzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3NzYwNA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410277604", "bodyText": "Thanks", "author": "mmusgrov", "createdAt": "2020-04-17T14:55:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NDIzNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NjAwNQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410246005", "bodyText": "assertFalse(xaRecoveryModule.isPeriodicWorkSuccessful());\nis easier to read", "author": "mmusgrov", "createdAt": "2020-04-17T14:05:52Z", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java", "diffHunk": "@@ -81,7 +80,7 @@ public void testRecoveryMonitorWithFailure() throws Exception {\n             // check the output of the scan\n             assertEquals(\"ERROR\", RecoveryMonitor.getResponse());\n             assertEquals(\"ERROR\", RecoveryMonitor.getSystemOutput());\n-            assertTrue(RecoveryRequired.isRecoveryProblems());\n+            assertTrue(!xaRecoveryModule.isPeriodicWorkSuccessful());", "originalCommit": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1ODU5Ng==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410258596", "bodyText": "okay", "author": "mayankkunwar", "createdAt": "2020-04-17T14:25:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NjAwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e9d7c537997b225c169755aa3fee9c8301b4b58f", "chunk": "diff --git a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java\nindex fce3e4641..7665905e2 100644\n--- a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java\n+++ b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java\n\n@@ -80,7 +81,7 @@ public class RecoveryMonitorTest {\n             // check the output of the scan\n             assertEquals(\"ERROR\", RecoveryMonitor.getResponse());\n             assertEquals(\"ERROR\", RecoveryMonitor.getSystemOutput());\n-            assertTrue(!xaRecoveryModule.isPeriodicWorkSuccessful());\n+            assertFalse(xaRecoveryModule.isPeriodicWorkSuccessful());\n         } finally {\n             manager.terminate();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NjIwOQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410246209", "bodyText": "Same comment here", "author": "mmusgrov", "createdAt": "2020-04-17T14:06:11Z", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java", "diffHunk": "@@ -123,7 +123,7 @@ public void start(Xid xid, int i) throws XAException {\n             // check the output of the scan\n             assertEquals(\"DONE\", RecoveryMonitor.getResponse());\n             assertEquals(\"DONE\", RecoveryMonitor.getSystemOutput());\n-            assertFalse(RecoveryRequired.isRecoveryProblems());\n+            assertFalse(!xaRecoveryModule.isPeriodicWorkSuccessful());", "originalCommit": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1ODcxNQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410258715", "bodyText": "okay", "author": "mayankkunwar", "createdAt": "2020-04-17T14:25:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NjIwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e9d7c537997b225c169755aa3fee9c8301b4b58f", "chunk": "diff --git a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java\nindex 51ec53ada..420cea446 100644\n--- a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java\n+++ b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java\n\n@@ -123,7 +123,7 @@ public class RecoveryMonitorTest2 {\n             // check the output of the scan\n             assertEquals(\"DONE\", RecoveryMonitor.getResponse());\n             assertEquals(\"DONE\", RecoveryMonitor.getSystemOutput());\n-            assertFalse(!xaRecoveryModule.isPeriodicWorkSuccessful());\n+            assertTrue(xaRecoveryModule.isPeriodicWorkSuccessful());\n         } finally {\n             manager.terminate();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NjY1Nw==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410246657", "bodyText": "assertFalse ... is easier to read", "author": "mmusgrov", "createdAt": "2020-04-17T14:06:53Z", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java", "diffHunk": "@@ -92,7 +93,7 @@ public void testRecoveryMonitorWithFailure() throws Exception {\n \n         manager.scan();\n \n-        assertTrue(RecoveryRequired.isRecoveryProblems());\n+        assertTrue(!xaRecoveryModule.isPeriodicWorkSuccessful());", "originalCommit": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1ODc3Nw==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410258777", "bodyText": "okay", "author": "mayankkunwar", "createdAt": "2020-04-17T14:25:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NjY1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e9d7c537997b225c169755aa3fee9c8301b4b58f", "chunk": "diff --git a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java\nindex f760e6e2d..6bd8d5a94 100644\n--- a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java\n+++ b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java\n\n@@ -93,7 +93,7 @@ public class RecoveryScanTest {\n \n         manager.scan();\n \n-        assertTrue(!xaRecoveryModule.isPeriodicWorkSuccessful());\n+        assertFalse(xaRecoveryModule.isPeriodicWorkSuccessful());\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0Njg2NA==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410246864", "bodyText": "assertTrue avoids the double negative", "author": "mmusgrov", "createdAt": "2020-04-17T14:07:17Z", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java", "diffHunk": "@@ -157,7 +158,7 @@ public void start(Xid xid, int i) throws XAException {\n \n         manager.scan();\n \n-        assertFalse(RecoveryRequired.isRecoveryProblems());\n+        assertFalse(!xaRecoveryModule.isPeriodicWorkSuccessful());", "originalCommit": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI1ODg5MQ==", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410258891", "bodyText": "okay", "author": "mayankkunwar", "createdAt": "2020-04-17T14:26:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0Njg2NA=="}], "type": "inlineReview", "revised_code": {"commit": "e9d7c537997b225c169755aa3fee9c8301b4b58f", "chunk": "diff --git a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java\nindex f760e6e2d..6bd8d5a94 100644\n--- a/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java\n+++ b/ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java\n\n@@ -158,7 +158,7 @@ public class RecoveryScanTest {\n \n         manager.scan();\n \n-        assertFalse(!xaRecoveryModule.isPeriodicWorkSuccessful());\n+        assertTrue(xaRecoveryModule.isPeriodicWorkSuccessful());\n     }\n \n     @Test\n"}}, {"oid": "e9d7c537997b225c169755aa3fee9c8301b4b58f", "url": "https://github.com/jbosstm/narayana/commit/e9d7c537997b225c169755aa3fee9c8301b4b58f", "message": "JBTM-3273 -> Implemented code review comments", "committedDate": "2020-04-17T14:29:45Z", "type": "commit"}, {"oid": "e9d7c537997b225c169755aa3fee9c8301b4b58f", "url": "https://github.com/jbosstm/narayana/commit/e9d7c537997b225c169755aa3fee9c8301b4b58f", "message": "JBTM-3273 -> Implemented code review comments", "committedDate": "2020-04-17T14:29:45Z", "type": "forcePushed"}]}