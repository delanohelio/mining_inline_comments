{"pr_number": 1747, "pr_title": "[JBTM-3383] Improve ARJUNA016009: Caught::java.lang.NullPointerException log message", "pr_createdAt": "2020-12-15T14:59:43Z", "pr_url": "https://github.com/jbosstm/narayana/pull/1747", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NDUxNw==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r543464517", "bodyText": "Please, we are used to use the Logger - https://github.com/jbosstm/narayana/blob/master/ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java#L50 to report the WARN and ERROR messages. We expect that e.g. the messages could be translated and tracked by id. Could you please make the message being defined there?", "author": "ochaloup", "createdAt": "2020-12-15T15:52:14Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {\n+                                if (jtaLogger.logger.isDebugEnabled()) {\n+                                    jtaLogger.logger.debug(\"Recovered: \"\n+                                        + getXidLogInfo(xid));\n+                                }\n+                            } else {\n+                                it.remove();\n+                                jtaLogger.logger.warn(\"Failed to recover: Returned global transaction identifier is null. \"", "originalCommit": "12e18e8309d1003149ef0e6e0822abb26afd4933", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0NjI5Ng==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r545446296", "bodyText": "Resolved", "author": "ivassile", "createdAt": "2020-12-17T22:31:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NDUxNw=="}], "type": "inlineReview", "revised_code": {"commit": "94a95172b1e8ad29dbf44e1b1b86cef5ae2b2625", "chunk": "diff --git a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\nindex 6b9bf8831..518405d1a 100644\n--- a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n+++ b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n\n@@ -746,19 +746,18 @@ public class XARecoveryModule implements ExtendedRecoveryModule\n                         Xid xid = it.next();\n                         if (xid != null) {\n                             byte[] globalTransactionId = xid.getGlobalTransactionId();\n-                            if (globalTransactionId != null) {\n+                            byte[] branchQualifier = xid.getBranchQualifier();\n+                            if (globalTransactionId != null && branchQualifier != null) {\n                                 if (jtaLogger.logger.isDebugEnabled()) {\n-                                    jtaLogger.logger.debug(\"Recovered: \"\n-                                        + getXidLogInfo(xid));\n+                                    jtaLogger.logger.debug(\"Recovered: \" + getXidLogInfo(xid));\n                                 }\n                             } else {\n                                 it.remove();\n-                                jtaLogger.logger.warn(\"Failed to recover: Returned global transaction identifier is null. \"\n-                                    + xares.toString() + getXidLogInfo(xid));\n+                                jtaLogger.i18NLogger.warn_recovery_transaction_id_and_branch_qualifier_are_null(xares.toString() + getXidLogInfo(xid));\n                             }   \n                         }                                  \n                     }\n-                    trans = transList.toArray(new Xid[transList.size()]);\n+                    trans = transList.toArray(new Xid[0]);\n                 }\n             }\n \t\t\tcatch (XAException e)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NzMyMw==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r543467323", "bodyText": "It could be better to use zero size array for toArray (toArray(new T[0])), see https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion", "author": "ochaloup", "createdAt": "2020-12-15T15:55:36Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {\n+                                if (jtaLogger.logger.isDebugEnabled()) {\n+                                    jtaLogger.logger.debug(\"Recovered: \"\n+                                        + getXidLogInfo(xid));\n+                                }\n+                            } else {\n+                                it.remove();\n+                                jtaLogger.logger.warn(\"Failed to recover: Returned global transaction identifier is null. \"\n+                                    + xares.toString() + getXidLogInfo(xid));\n+                            }   \n+                        }                                  \n+                    }\n+                    trans = transList.toArray(new Xid[transList.size()]);", "originalCommit": "12e18e8309d1003149ef0e6e0822abb26afd4933", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0NjM4OQ==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r545446389", "bodyText": "Resolved", "author": "ivassile", "createdAt": "2020-12-17T22:31:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NzMyMw=="}], "type": "inlineReview", "revised_code": {"commit": "94a95172b1e8ad29dbf44e1b1b86cef5ae2b2625", "chunk": "diff --git a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\nindex 6b9bf8831..518405d1a 100644\n--- a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n+++ b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n\n@@ -746,19 +746,18 @@ public class XARecoveryModule implements ExtendedRecoveryModule\n                         Xid xid = it.next();\n                         if (xid != null) {\n                             byte[] globalTransactionId = xid.getGlobalTransactionId();\n-                            if (globalTransactionId != null) {\n+                            byte[] branchQualifier = xid.getBranchQualifier();\n+                            if (globalTransactionId != null && branchQualifier != null) {\n                                 if (jtaLogger.logger.isDebugEnabled()) {\n-                                    jtaLogger.logger.debug(\"Recovered: \"\n-                                        + getXidLogInfo(xid));\n+                                    jtaLogger.logger.debug(\"Recovered: \" + getXidLogInfo(xid));\n                                 }\n                             } else {\n                                 it.remove();\n-                                jtaLogger.logger.warn(\"Failed to recover: Returned global transaction identifier is null. \"\n-                                    + xares.toString() + getXidLogInfo(xid));\n+                                jtaLogger.i18NLogger.warn_recovery_transaction_id_and_branch_qualifier_are_null(xares.toString() + getXidLogInfo(xid));\n                             }   \n                         }                                  \n                     }\n-                    trans = transList.toArray(new Xid[transList.size()]);\n+                    trans = transList.toArray(new Xid[0]);\n                 }\n             }\n \t\t\tcatch (XAException e)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MTk0OA==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r543471948", "bodyText": "A topic for discussion - would make sense to check for null the format and branch as well? Is there some experience that e.g. Oracle could not be filling the other parts of Xid and leaving them null?", "author": "ochaloup", "createdAt": "2020-12-15T16:00:56Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {", "originalCommit": "12e18e8309d1003149ef0e6e0822abb26afd4933", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0Nzc2Ng==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r545447766", "bodyText": "I added check for branch == null.", "author": "ivassile", "createdAt": "2020-12-17T22:34:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MTk0OA=="}], "type": "inlineReview", "revised_code": {"commit": "94a95172b1e8ad29dbf44e1b1b86cef5ae2b2625", "chunk": "diff --git a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\nindex 6b9bf8831..518405d1a 100644\n--- a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n+++ b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n\n@@ -746,19 +746,18 @@ public class XARecoveryModule implements ExtendedRecoveryModule\n                         Xid xid = it.next();\n                         if (xid != null) {\n                             byte[] globalTransactionId = xid.getGlobalTransactionId();\n-                            if (globalTransactionId != null) {\n+                            byte[] branchQualifier = xid.getBranchQualifier();\n+                            if (globalTransactionId != null && branchQualifier != null) {\n                                 if (jtaLogger.logger.isDebugEnabled()) {\n-                                    jtaLogger.logger.debug(\"Recovered: \"\n-                                        + getXidLogInfo(xid));\n+                                    jtaLogger.logger.debug(\"Recovered: \" + getXidLogInfo(xid));\n                                 }\n                             } else {\n                                 it.remove();\n-                                jtaLogger.logger.warn(\"Failed to recover: Returned global transaction identifier is null. \"\n-                                    + xares.toString() + getXidLogInfo(xid));\n+                                jtaLogger.i18NLogger.warn_recovery_transaction_id_and_branch_qualifier_are_null(xares.toString() + getXidLogInfo(xid));\n                             }   \n                         }                                  \n                     }\n-                    trans = transList.toArray(new Xid[transList.size()]);\n+                    trans = transList.toArray(new Xid[0]);\n                 }\n             }\n \t\t\tcatch (XAException e)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MjYzNQ==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r543472635", "bodyText": "A code style thing (not necessary to be addressed) - maybe the debug call message could be whole at single line.", "author": "ochaloup", "createdAt": "2020-12-15T16:01:46Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {\n+                                if (jtaLogger.logger.isDebugEnabled()) {\n+                                    jtaLogger.logger.debug(\"Recovered: \"", "originalCommit": "12e18e8309d1003149ef0e6e0822abb26afd4933", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0Njk3Nw==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r545446977", "bodyText": "Resolved", "author": "ivassile", "createdAt": "2020-12-17T22:32:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MjYzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "94a95172b1e8ad29dbf44e1b1b86cef5ae2b2625", "chunk": "diff --git a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\nindex 6b9bf8831..518405d1a 100644\n--- a/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n+++ b/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java\n\n@@ -746,19 +746,18 @@ public class XARecoveryModule implements ExtendedRecoveryModule\n                         Xid xid = it.next();\n                         if (xid != null) {\n                             byte[] globalTransactionId = xid.getGlobalTransactionId();\n-                            if (globalTransactionId != null) {\n+                            byte[] branchQualifier = xid.getBranchQualifier();\n+                            if (globalTransactionId != null && branchQualifier != null) {\n                                 if (jtaLogger.logger.isDebugEnabled()) {\n-                                    jtaLogger.logger.debug(\"Recovered: \"\n-                                        + getXidLogInfo(xid));\n+                                    jtaLogger.logger.debug(\"Recovered: \" + getXidLogInfo(xid));\n                                 }\n                             } else {\n                                 it.remove();\n-                                jtaLogger.logger.warn(\"Failed to recover: Returned global transaction identifier is null. \"\n-                                    + xares.toString() + getXidLogInfo(xid));\n+                                jtaLogger.i18NLogger.warn_recovery_transaction_id_and_branch_qualifier_are_null(xares.toString() + getXidLogInfo(xid));\n                             }   \n                         }                                  \n                     }\n-                    trans = transList.toArray(new Xid[transList.size()]);\n+                    trans = transList.toArray(new Xid[0]);\n                 }\n             }\n \t\t\tcatch (XAException e)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MzQ3NA==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r543473474", "bodyText": "If there is the check for globalTransactionId and branchQualifier in this printing, it could be good to check the format for null as well here.", "author": "ochaloup", "createdAt": "2020-12-15T16:02:46Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -1223,6 +1221,40 @@ private void saveContactedJndiName(final String jndiName) {\n             contactedJndiNames.add(jndiName);\n         }\n     }\n+    \n+    private String getXidLogInfo (Xid xid) {\n+        StringBuilder stringBuilder = new StringBuilder();\n+        \n+        if (xid != null) {\n+            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+            byte[] branchQualifier = xid.getBranchQualifier();\n+            stringBuilder.append(\"< \");\n+            stringBuilder.append(xid.getFormatId());", "originalCommit": "12e18e8309d1003149ef0e6e0822abb26afd4933", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0NzE3Mg==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r545447172", "bodyText": "xid.getFormatId() is int", "author": "ivassile", "createdAt": "2020-12-17T22:33:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MzQ3NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "94a95172b1e8ad29dbf44e1b1b86cef5ae2b2625", "url": "https://github.com/jbosstm/narayana/commit/94a95172b1e8ad29dbf44e1b1b86cef5ae2b2625", "message": "[JBTM-3383] Improve ARJUNA016009: Caught::\njava.lang.NullPointerException log message", "committedDate": "2020-12-17T22:26:27Z", "type": "forcePushed"}, {"oid": "99675ea90ea009911e4e6a0dc35f9fd425603ebb", "url": "https://github.com/jbosstm/narayana/commit/99675ea90ea009911e4e6a0dc35f9fd425603ebb", "message": "[JBTM-3383] Improve ARJUNA016009: Caught::\njava.lang.NullPointerException log message", "committedDate": "2021-01-08T02:26:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzkyOTI4MA==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r553929280", "bodyText": "Would not be good to rename the arg0 to something more readable, e.g. xaResourceAsString?", "author": "ochaloup", "createdAt": "2021-01-08T12:59:11Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java", "diffHunk": "@@ -600,6 +600,14 @@\n     @Message(id = 16148, value = \"Cannot work further as the argument Xid is null.\", format = MESSAGE_FORMAT)\n     String get_error_xid_is_null();\n \n+    @Message(id = 16149, value = \"Returned global transaction identifier and branch qualifier are null but format id is not -1. {0}\", format = MESSAGE_FORMAT)\n+    @LogMessage(level = WARN)\n+    public void warn_recovery_transaction_id_and_branch_qualifier_are_null_wrong_format_id(String arg0);", "originalCommit": "99675ea90ea009911e4e6a0dc35f9fd425603ebb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzk4ODgzNw==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r553988837", "bodyText": "Corrected", "author": "ivassile", "createdAt": "2021-01-08T14:52:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzkyOTI4MA=="}], "type": "inlineReview", "revised_code": {"commit": "f7770c81fed1906388a62e335e17e46a2e58da76", "chunk": "diff --git a/ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java b/ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java\nindex c1f0bb839..1d16ef481 100644\n--- a/ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java\n+++ b/ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java\n\n@@ -602,11 +602,11 @@ public interface jtaI18NLogger {\n \n     @Message(id = 16149, value = \"Returned global transaction identifier and branch qualifier are null but format id is not -1. {0}\", format = MESSAGE_FORMAT)\n     @LogMessage(level = WARN)\n-    public void warn_recovery_transaction_id_and_branch_qualifier_are_null_wrong_format_id(String arg0);\n+    public void warn_recovery_transaction_id_and_branch_qualifier_are_null_wrong_format_id(String xaResourceAsString);\n \n     @Message(id = 16150, value = \"Returned global transaction identifier or branch qualifier is null. {0}\", format = MESSAGE_FORMAT)\n     @LogMessage(level = INFO)\n-    public void info_recovery_transaction_id_or_branch_qualifier_is_null(String arg0);\n+    public void info_recovery_transaction_id_or_branch_qualifier_is_null(String xaResourceAsString);\n \n     /*\n         Allocate new messages directly above this notice.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzkyOTg4MQ==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r553929881", "bodyText": "It seems a strange indent is used here.", "author": "ochaloup", "createdAt": "2021-01-08T13:00:32Z", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/xa/XidImple.java", "diffHunk": "@@ -186,15 +187,17 @@ public final void copy(Xid xid) {\n \n \t\t\t\tbyte[] gtx = xid.getGlobalTransactionId();\n \t\t\t\tbyte[] bql = xid.getBranchQualifier();\n+\t\t\t\tfinal int gtxlength = (gtx == null ? 0 : gtx.length);\n \t\t\t\tfinal int bqlength = (bql == null ? 0 : bql.length);\n \n-\t\t\t\t_theXid.gtrid_length = gtx.length;\n+\t\t\t\t_theXid.gtrid_length = gtxlength;\n \t\t\t\t_theXid.bqual_length = bqlength;\n \n-\t\t\t\tSystem.arraycopy(gtx, 0, _theXid.data, 0, gtx.length);\n+\t\t\t\tif (gtxlength > 0) {\n+\t\t              System.arraycopy(gtx, 0, _theXid.data, 0, gtxlength);  ", "originalCommit": "99675ea90ea009911e4e6a0dc35f9fd425603ebb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzk4ODk5MQ==", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r553988991", "bodyText": "Corrected", "author": "ivassile", "createdAt": "2021-01-08T14:53:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzkyOTg4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f7770c81fed1906388a62e335e17e46a2e58da76", "chunk": "diff --git a/ArjunaJTA/jta/classes/com/arjuna/ats/jta/xa/XidImple.java b/ArjunaJTA/jta/classes/com/arjuna/ats/jta/xa/XidImple.java\nindex c20cc895b..c29d909a0 100644\n--- a/ArjunaJTA/jta/classes/com/arjuna/ats/jta/xa/XidImple.java\n+++ b/ArjunaJTA/jta/classes/com/arjuna/ats/jta/xa/XidImple.java\n\n@@ -194,7 +194,7 @@ public class XidImple implements javax.transaction.xa.Xid, Serializable {\n \t\t\t\t_theXid.bqual_length = bqlength;\n \n \t\t\t\tif (gtxlength > 0) {\n-\t\t              System.arraycopy(gtx, 0, _theXid.data, 0, gtxlength);  \n+                    System.arraycopy(gtx, 0, _theXid.data, 0, gtxlength);  \n \t\t\t\t}\n \t\t\t\tif (bqlength > 0) {\n \t\t\t\t\tSystem.arraycopy(bql, 0, _theXid.data, gtxlength, bqlength);\n"}}, {"oid": "f7770c81fed1906388a62e335e17e46a2e58da76", "url": "https://github.com/jbosstm/narayana/commit/f7770c81fed1906388a62e335e17e46a2e58da76", "message": "[JBTM-3383] Improve ARJUNA016009: Caught::\njava.lang.NullPointerException log message", "committedDate": "2021-01-08T14:43:58Z", "type": "forcePushed"}, {"oid": "a266f528fadf9be989a3699bf27c04f023646369", "url": "https://github.com/jbosstm/narayana/commit/a266f528fadf9be989a3699bf27c04f023646369", "message": "[JBTM-3383] Improve ARJUNA016009: Caught::\njava.lang.NullPointerException log message", "committedDate": "2021-01-08T14:51:29Z", "type": "forcePushed"}, {"oid": "7ea9cc5ade99807c42ca3f308ce166600550a829", "url": "https://github.com/jbosstm/narayana/commit/7ea9cc5ade99807c42ca3f308ce166600550a829", "message": "[JBTM-3383] Improve ARJUNA016009: Caught::\njava.lang.NullPointerException log message", "committedDate": "2021-01-12T14:41:56Z", "type": "commit"}, {"oid": "7ea9cc5ade99807c42ca3f308ce166600550a829", "url": "https://github.com/jbosstm/narayana/commit/7ea9cc5ade99807c42ca3f308ce166600550a829", "message": "[JBTM-3383] Improve ARJUNA016009: Caught::\njava.lang.NullPointerException log message", "committedDate": "2021-01-12T14:41:56Z", "type": "forcePushed"}]}