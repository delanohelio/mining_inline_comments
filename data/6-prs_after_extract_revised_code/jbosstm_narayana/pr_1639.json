{"pr_number": 1639, "pr_title": "[JBTM-3337] assert empty property on startup", "pr_createdAt": "2020-06-24T12:25:55Z", "pr_url": "https://github.com/jbosstm/narayana/pull/1639", "timeline": [{"oid": "e3aae956e78b134b4019ae39ea6c18b2650739e2", "url": "https://github.com/jbosstm/narayana/commit/e3aae956e78b134b4019ae39ea6c18b2650739e2", "message": "[JBTM-3337] loaded property should be checked on emptiness", "committedDate": "2020-06-24T12:26:56Z", "type": "commit"}, {"oid": "e3aae956e78b134b4019ae39ea6c18b2650739e2", "url": "https://github.com/jbosstm/narayana/commit/e3aae956e78b134b4019ae39ea6c18b2650739e2", "message": "[JBTM-3337] loaded property should be checked on emptiness", "committedDate": "2020-06-24T12:26:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg3NzM2OQ==", "url": "https://github.com/jbosstm/narayana/pull/1639#discussion_r446877369", "bodyText": "I assume it does not make sense to allow empty keys. Does it also fail just with empty keys (or just null ones), i.e. did you add the empty key check for thoroughness?", "author": "mmusgrov", "createdAt": "2020-06-29T09:02:20Z", "path": "common/classes/com/arjuna/common/util/propertyservice/AbstractPropertiesFactory.java", "diffHunk": "@@ -121,6 +121,7 @@ private Properties applySystemProperties(Properties inputProperties) {\n         Enumeration enumeration = System.getProperties().propertyNames();\n         while(enumeration.hasMoreElements()) {\n             String key = (String)enumeration.nextElement();\n+            if (key == null || key.isEmpty()) continue;", "originalCommit": "e3aae956e78b134b4019ae39ea6c18b2650739e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA2ODAwMg==", "url": "https://github.com/jbosstm/narayana/pull/1639#discussion_r447068002", "bodyText": "@mmusgrov the setter fails with the null and empty. In fact I added the null check for thoroughness. I was not able to create a test which provides null key.", "author": "ochaloup", "createdAt": "2020-06-29T15:41:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg3NzM2OQ=="}], "type": "inlineReview", "revised_code": null}]}