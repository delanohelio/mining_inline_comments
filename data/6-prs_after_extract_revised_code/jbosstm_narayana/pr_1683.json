{"pr_number": 1683, "pr_title": "[JBTM-3368] provide error messages in the HTTP responses", "pr_createdAt": "2020-10-06T11:53:01Z", "pr_url": "https://github.com/jbosstm/narayana/pull/1683", "timeline": [{"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497", "url": "https://github.com/jbosstm/narayana/commit/263af1c535e7b3dd5869180a1e447bd31e66b497", "message": "[JBTM-3368] provide error messages in the HTTP responses", "committedDate": "2020-10-06T12:26:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NDQxNA==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500874414", "bodyText": "we should rename this \"status\" variable :)", "author": "xstefank", "createdAt": "2020-10-07T09:36:56Z", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -529,7 +531,7 @@ public boolean isActive(URI lraId) {\n                 .header(\"Accept\", MediaType.APPLICATION_JSON)\n                 .get();\n \n-        if (status.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n+        if (status.getStatus() == NOT_FOUND.getStatusCode()) {", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcyNjUyNQ==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501726525", "bodyText": "I changed to \"lra\" as I can't find any better name. In case, please, suggest me some better.", "author": "ochaloup", "createdAt": "2020-10-08T13:37:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NDQxNA=="}], "type": "inlineReview", "revised_code": {"commit": "7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "chunk": "diff --git a/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java b/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\nindex a4b75271a..abcae2d14 100644\n--- a/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\n+++ b/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\n\n@@ -526,15 +526,15 @@ public class NarayanaLRAClient implements Closeable {\n     then we can remove this method (the tracking issue is https://github.com/eclipse/microprofile-lra/issues/242)\n     */\n     public boolean isActive(URI lraId) {\n-        ResponseHolder status = new RequestBuilder(lraId)\n+        ResponseHolder lra = new RequestBuilder(lraId)\n                 .request()\n                 .header(\"Accept\", MediaType.APPLICATION_JSON)\n                 .get();\n \n-        if (status.getStatus() == NOT_FOUND.getStatusCode()) {\n+        if (lra.getStatus() == NOT_FOUND.getStatusCode()) {\n             return false;\n         } else {\n-            String info = status.getResponseString();\n+            String info = lra.getResponseString();\n             String[] props = info.replaceAll(\"\\\"\", \"\").replaceAll(\"}\", \"\").split(\",\");\n             Map<String, String> nvps = new HashMap<>();\n             for (String nv : props) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NTYzNQ==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500875635", "bodyText": "If we are to include the message for 404 not found, it should mention that the requested LRA id was not found. This is too general for a particular case.", "author": "xstefank", "createdAt": "2020-10-07T09:38:57Z", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -581,10 +583,11 @@ public LRAStatus getStatus(URI uri) throws WebApplicationException {\n             return null;\n         }\n \n-        if (response.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n+        if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n             String responseContent = response.readEntity();\n-            throw new NotFoundException(\"Failed to get status of LRA id \" + lraId\n-                    + (responseContent != null ? \": \" + responseContent : \"\"));\n+            String errorMsg = \"Failed to get status of LRA id \" + lraId", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcyODYzNg==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501728636", "bodyText": "I tried to make this better.", "author": "ochaloup", "createdAt": "2020-10-08T13:39:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NTYzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "chunk": "diff --git a/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java b/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\nindex a4b75271a..abcae2d14 100644\n--- a/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\n+++ b/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\n\n@@ -585,7 +585,7 @@ public class NarayanaLRAClient implements Closeable {\n \n         if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n             String responseContent = response.readEntity();\n-            String errorMsg = \"Failed to get status of LRA id \" + lraId\n+            String errorMsg = \"The requested LRA it '\" + lraId + \"' was not found and the status can't be obtained\"\n                     + (responseContent != null ? \": \" + responseContent : \"\");\n             throw new NotFoundException(errorMsg, Response.status(NOT_FOUND).entity(errorMsg).build());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3Njg0OA==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500876848", "bodyText": "this can go to i18NLogger", "author": "xstefank", "createdAt": "2020-10-07T09:40:49Z", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -706,11 +709,14 @@ private URI enlistCompensator(URI uri, long timelimit, String linkHeader, String\n \n         if (response.getStatus() == Response.Status.PRECONDITION_FAILED.getStatusCode()) {\n                 LRALogger.i18NLogger.error_tooLateToJoin(lraId, response.toString());\n-            throw new WebApplicationException(lraId + \": Too late to join with this LRA \", PRECONDITION_FAILED);\n-        } else if (response.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n-            LRALogger.logger.infof(\"Failed enlisting to LRA '%s', coordinator '%s' responded with status '%s'\",\n-                    lraId, base, Response.Status.NOT_FOUND.getStatusCode());\n-            throw new WebApplicationException(uri.toASCIIString(), Response.Status.GONE);\n+                String errorMsg = lraId + \": Too late to join with this LRA \";\n+            throw new WebApplicationException(errorMsg,\n+                    Response.status(PRECONDITION_FAILED).entity(errorMsg).build());\n+        } else if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n+            LRALogger.logger.infof(\"Failed enlisting to LRA '%s', coordinator '%s' responded with status '%d (%s)'. Returning '%d (%s)'.\",", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc0OTAxNA==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501749014", "bodyText": "we normally used WARN and ERROR levels to be part of the i18NLogger messages but I assume this is a good idea to use it here as well", "author": "ochaloup", "createdAt": "2020-10-08T14:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3Njg0OA=="}], "type": "inlineReview", "revised_code": {"commit": "7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "chunk": "diff --git a/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java b/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\nindex a4b75271a..abcae2d14 100644\n--- a/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\n+++ b/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\n\n@@ -713,7 +713,7 @@ public class NarayanaLRAClient implements Closeable {\n             throw new WebApplicationException(errorMsg,\n                     Response.status(PRECONDITION_FAILED).entity(errorMsg).build());\n         } else if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n-            LRALogger.logger.infof(\"Failed enlisting to LRA '%s', coordinator '%s' responded with status '%d (%s)'. Returning '%d (%s)'.\",\n+            LRALogger.i18NLogger.info_failedToEnlistingLRANotFound(\n                     lraId, base, NOT_FOUND.getStatusCode(), NOT_FOUND.getReasonPhrase(), GONE.getStatusCode(), GONE.getReasonPhrase());\n             throw new WebApplicationException(uri.toASCIIString(),\n                     Response.status(GONE).entity(uri.toASCIIString()).build());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3ODIwMA==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500878200", "bodyText": "also maybe better to add this to i18NLogger?", "author": "xstefank", "createdAt": "2020-10-07T09:43:04Z", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -739,16 +745,18 @@ private void endLRA(URI lra, boolean confirm) throws WebApplicationException {\n         try {\n             response = getTarget().path(confirmUrl).request().put();\n \n-            if (isUnexpectedResponseStatus(response, Response.Status.OK, Response.Status.ACCEPTED, Response.Status.NOT_FOUND)) {\n+            if (isUnexpectedResponseStatus(response, Response.Status.OK, Response.Status.ACCEPTED, NOT_FOUND)) {\n                 LRALogger.i18NLogger.error_lraTerminationUnexpectedStatus(response.getStatus(), response.toString());\n                 throwGenericLRAException(lra, INTERNAL_SERVER_ERROR.getStatusCode(),\n                         \"LRA finished with an unexpected status code: \" + response.getStatus());\n             }\n \n-            if (response.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n-                LRALogger.logger.infof(\"Could not %s LRA '%s': coordinator '%s' responded with status '%s'\",\n-                        confirm ? \"close\" : \"compensate\", lra, base, Response.Status.NOT_FOUND.getReasonPhrase());\n-                throw new NotFoundException(lra.toASCIIString());\n+            if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n+                String errorMsg = String.format(\"Could not %s LRA '%s': coordinator '%s' responded with status '%s'\",\n+                        confirm ? \"close\" : \"compensate\", lra, base, NOT_FOUND.getReasonPhrase());\n+                LRALogger.logger.info(errorMsg);", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1NDI1MQ==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501754251", "bodyText": "+1", "author": "ochaloup", "createdAt": "2020-10-08T14:13:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3ODIwMA=="}], "type": "inlineReview", "revised_code": {"commit": "7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "chunk": "diff --git a/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java b/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\nindex a4b75271a..abcae2d14 100644\n--- a/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\n+++ b/rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java\n\n@@ -752,7 +752,7 @@ public class NarayanaLRAClient implements Closeable {\n             }\n \n             if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n-                String errorMsg = String.format(\"Could not %s LRA '%s': coordinator '%s' responded with status '%s'\",\n+                String errorMsg = LRALogger.i18NLogger.get_couldNotCompleteCompensateOnReturnedStatus(\n                         confirm ? \"close\" : \"compensate\", lra, base, NOT_FOUND.getReasonPhrase());\n                 LRALogger.logger.info(errorMsg);\n                 throw new NotFoundException(errorMsg,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4MDIxNw==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500880217", "bodyText": "missing closing '", "author": "xstefank", "createdAt": "2020-10-07T09:46:16Z", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -289,9 +290,10 @@ public Response getNestedLRAStatus(@PathParam(\"NestedLraId\")String nestedLraId)\n \n         if (status == null || lra.getLRAStatus() == null) {\n             LRALogger.i18NLogger.error_cannotGetStatusOfNestedLraURI(nestedLraId, lra.getId());\n-            throw new WebApplicationException(Response.status(Response.Status.PRECONDITION_FAILED)\n-                    .entity(String.format(\"LRA is in the wrong state for operation '%s': %s\",\n-                            \"getNestedLRAStatus\", \"The LRA is still  active\")).build());\n+            String errMsg = String.format(\"LRA (parent: %s, nested:%s) is in the wrong state for operation \" +\n+                    \"'getNestedLRAStatus: The LRA is still active\", nestedLraId, lra.getId());", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1NTEwNg==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501755106", "bodyText": "+1", "author": "ochaloup", "createdAt": "2020-10-08T14:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4MDIxNw=="}], "type": "inlineReview", "revised_code": {"commit": "7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "chunk": "diff --git a/rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java b/rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java\nindex b92f93987..8f72a5dda 100644\n--- a/rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java\n+++ b/rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java\n\n@@ -290,8 +290,8 @@ public class Coordinator {\n \n         if (status == null || lra.getLRAStatus() == null) {\n             LRALogger.i18NLogger.error_cannotGetStatusOfNestedLraURI(nestedLraId, lra.getId());\n-            String errMsg = String.format(\"LRA (parent: %s, nested:%s) is in the wrong state for operation \" +\n-                    \"'getNestedLRAStatus: The LRA is still active\", nestedLraId, lra.getId());\n+            String errMsg = String.format(\"LRA (parent: %s, nested: %s) is in the wrong state for operation \" +\n+                    \"'getNestedLRAStatus': The LRA is still active.\", nestedLraId, lra.getId());\n             throw new WebApplicationException(errMsg,\n                     Response.status(Response.Status.PRECONDITION_FAILED).entity(errMsg).build());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4MTE2Mw==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500881163", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String errorMsg = lraId + \": Ivalid format of LRA id URL format to convert to URI \" + e.getMessage();\n          \n          \n            \n                        String errorMsg = lraId + \": Invalid format of LRA id URL format to convert to URI \" + e.getMessage();", "author": "xstefank", "createdAt": "2020-10-07T09:47:49Z", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -564,15 +566,19 @@ private URI toURI(String lraId, String message) {\n                 url = new URL(String.format(\"%s%s/%s\", context.getBaseUri(), COORDINATOR_PATH_NAME, lraId));\n             } catch (MalformedURLException e1) {\n                 LRALogger.i18NLogger.error_invalidStringFormatOfUrl(lraId, e1);\n-                throw new WebApplicationException(message, e1, BAD_REQUEST);\n+                String errorMsg = lraId + \": Illegal LRA id format \" + e1.getMessage();\n+                throw new WebApplicationException(errorMsg, e1,\n+                        Response.status(BAD_REQUEST).entity(errorMsg).build());\n             }\n         }\n \n         try {\n             return url.toURI();\n         } catch (URISyntaxException e) {\n             LRALogger.i18NLogger.error_invalidStringFormatOfUrl(lraId, e);\n-            throw new WebApplicationException(message, e, BAD_REQUEST);\n+            String errorMsg = lraId + \": Ivalid format of LRA id URL format to convert to URI \" + e.getMessage();", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "chunk": "diff --git a/rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java b/rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java\nindex b92f93987..8f72a5dda 100644\n--- a/rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java\n+++ b/rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java\n\n@@ -576,7 +576,7 @@ public class Coordinator {\n             return url.toURI();\n         } catch (URISyntaxException e) {\n             LRALogger.i18NLogger.error_invalidStringFormatOfUrl(lraId, e);\n-            String errorMsg = lraId + \": Ivalid format of LRA id URL format to convert to URI \" + e.getMessage();\n+            String errorMsg = lraId + \": Invalid format of LRA id URL format to convert to URI \" + e.getMessage();\n             throw new WebApplicationException(errorMsg, e,\n                     Response.status(BAD_REQUEST).entity(errorMsg).build());\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4NTc1OQ==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500885759", "bodyText": "I just wonder whether this is a Response design to redundantly repeat the status in the included response and it doesn't provide a simpler API to include the errorMsg. If not, then this is ok to go.", "author": "xstefank", "createdAt": "2020-10-07T09:55:12Z", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -252,7 +256,9 @@ public synchronized URI startLRA(String baseUri, URI parentLRA, String clientId,\n \n             lra.abort();\n \n-            throw new InternalServerErrorException(\"Could not start LRA: \" + ActionStatus.stringForm(status));\n+            String errorMsg = \"Could not start LRA: \" + ActionStatus.stringForm(status);\n+            throw new InternalServerErrorException(errorMsg,\n+                    Response.status(INTERNAL_SERVER_ERROR).entity(errorMsg).build());", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1NzI0MA==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501757240", "bodyText": "That's how I understand it. I was checking if I can do this better but I haven't found it. Any WebApplicationException takes the Response as parameter in constructor and run validity checker where it checks if the status of the response is the same as it's expected by the name of the exception. I can't find another way now.", "author": "ochaloup", "createdAt": "2020-10-08T14:17:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4NTc1OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkxNTE5Mg==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500915192", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found with \" + e.getMessage());\n          \n          \n            \n                                lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found exception with \" + e.getMessage());\n          \n      \n    \n    \n  \n\nseems a little out of context without this word", "author": "xstefank", "createdAt": "2020-10-07T10:46:51Z", "path": "rts/lra/narayana-lra/src/main/java/io/narayana/lra/filter/ServerLRAFilter.java", "diffHunk": "@@ -331,6 +331,7 @@ public void filter(ContainerRequestContext containerRequestContext) {\n                             toURI(terminateURIs.get(STATUS)),\n                             null);\n                 } catch (NotFoundException e) {\n+                    lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found with \" + e.getMessage());", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "chunk": "diff --git a/rts/lra/narayana-lra/src/main/java/io/narayana/lra/filter/ServerLRAFilter.java b/rts/lra/narayana-lra/src/main/java/io/narayana/lra/filter/ServerLRAFilter.java\nindex e9656a834..b69c63c4e 100644\n--- a/rts/lra/narayana-lra/src/main/java/io/narayana/lra/filter/ServerLRAFilter.java\n+++ b/rts/lra/narayana-lra/src/main/java/io/narayana/lra/filter/ServerLRAFilter.java\n\n@@ -331,7 +331,7 @@ public class ServerLRAFilter implements ContainerRequestFilter, ContainerRespons\n                             toURI(terminateURIs.get(STATUS)),\n                             null);\n                 } catch (NotFoundException e) {\n-                    lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found with \" + e.getMessage());\n+                    lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found exception with \" + e.getMessage());\n                     throw e;\n                 } catch (WebApplicationException e) {\n                     lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: aborting with \" + e.getMessage());\n"}}, {"oid": "7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "url": "https://github.com/jbosstm/narayana/commit/7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "message": "[JBTM-3368] provide error messages in the HTTP responses", "committedDate": "2020-10-08T14:22:25Z", "type": "forcePushed"}, {"oid": "34383c282341981ce21e033390e6aa7a4c1a9e6d", "url": "https://github.com/jbosstm/narayana/commit/34383c282341981ce21e033390e6aa7a4c1a9e6d", "message": "[JBTM-3368] provide error messages in the HTTP responses", "committedDate": "2020-10-19T08:30:48Z", "type": "commit"}, {"oid": "34383c282341981ce21e033390e6aa7a4c1a9e6d", "url": "https://github.com/jbosstm/narayana/commit/34383c282341981ce21e033390e6aa7a4c1a9e6d", "message": "[JBTM-3368] provide error messages in the HTTP responses", "committedDate": "2020-10-19T08:30:48Z", "type": "forcePushed"}]}