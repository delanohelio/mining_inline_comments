{"pr_number": 3295, "pr_title": "feat: Java REGAPIC Pagination implementation", "pr_createdAt": "2020-10-13T06:15:04Z", "pr_url": "https://github.com/googleapis/gapic-generator/pull/3295", "timeline": [{"oid": "61036ae3fe06bbddee81b7694c88e0858bfce36b", "url": "https://github.com/googleapis/gapic-generator/commit/61036ae3fe06bbddee81b7694c88e0858bfce36b", "message": "feat: Java REGAPIC Pagination implementation", "committedDate": "2020-10-13T06:12:35Z", "type": "commit"}, {"oid": "660b6a95cf44d0e97526dd8b08077ab32d3c4a28", "url": "https://github.com/googleapis/gapic-generator/commit/660b6a95cf44d0e97526dd8b08077ab32d3c4a28", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-10-13T06:15:57Z", "type": "commit"}, {"oid": "f837a026b96f235e3de71de25e06868ef09fadc8", "url": "https://github.com/googleapis/gapic-generator/commit/f837a026b96f235e3de71de25e06868ef09fadc8", "message": "Merge branch 'master' into master", "committedDate": "2020-10-13T23:46:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMDc5Mw==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r504320793", "bodyText": "Add a brief motivating comment for startsWith(\"1.\")?", "author": "miraleung", "createdAt": "2020-10-13T23:47:41Z", "path": "src/main/java/com/google/api/codegen/config/GapicProductConfig.java", "diffHunk": "@@ -100,6 +100,12 @@\n   @Nullable\n   public abstract String getConfigSchemaVersion();\n \n+  public boolean isDiscogapic() {\n+    return (getTransportProtocol() == TransportProtocol.HTTP\n+        && getConfigSchemaVersion() != null\n+        && getConfigSchemaVersion().startsWith(\"1.\"));", "originalCommit": "f837a026b96f235e3de71de25e06868ef09fadc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY4OTY1Nw==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r509689657", "bodyText": "Both DIREGAPIC and DISCOGAPIC have TransportProtocol as HTTP, but discogapic is always gapic yaml v1, while DIREGAPIC is always gapic yaml v2 or no gapic yaml at all. This is the most reliable way to distinguish between the two without introducing a new \"transport protocol\". Also discogapic and diregapic share significant portion of logic, that is why I'm reusing TransportProtocol.HTTP in DIREGAPIC..", "author": "vam-google", "createdAt": "2020-10-21T20:55:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMDc5Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMTM3NA==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r504321374", "bodyText": "Add a brief comment that only the first map or repeated (list) field is used? This may not be obvious to folks who have not read the design doc.", "author": "miraleung", "createdAt": "2020-10-13T23:49:47Z", "path": "src/main/java/com/google/api/codegen/transformer/TestCaseTransformer.java", "diffHunk": "@@ -384,7 +384,11 @@ private InitCodeContext createResponseInitCodeContext(\n       FieldModel field = config.getResourcesField();\n       InitCodeNode initCodeNode;\n       if (field.isRepeated()) {\n-        initCodeNode = InitCodeNode.createSingletonList(config.getResourcesFieldName());\n+        if (field.isMap()) {", "originalCommit": "f837a026b96f235e3de71de25e06868ef09fadc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MzcyOA==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r510483728", "bodyText": "+1", "author": "vchudnov-g", "createdAt": "2020-10-22T22:02:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMTM3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk4NDQwMQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r510984401", "bodyText": "(If you look at the PR in conversation view, you may not see [I don't, for sure] that I am +1 Mira's PR comment, where she suggests a code comment. If you go the file view, you'll see the whole comment thread. The GH review system has its issues....)", "author": "vchudnov-g", "createdAt": "2020-10-23T15:59:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMTM3NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMTU2Ng==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r504321566", "bodyText": "Do we need something similar for !type.isMap() && type.isRepeated()?", "author": "miraleung", "createdAt": "2020-10-13T23:50:19Z", "path": "src/main/java/com/google/api/codegen/transformer/java/JavaModelTypeNameConverter.java", "diffHunk": "@@ -146,6 +146,9 @@ private TypeName getTypeNameForElementType(TypeRef type, boolean shouldBoxPrimit\n     }\n     switch (type.getKind()) {\n       case TYPE_MESSAGE:\n+        if (type.isMap() && type.isMessage() && type.isRepeated()) {\n+          return getMapTypeName(type);", "originalCommit": "f837a026b96f235e3de71de25e06868ef09fadc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkwODI4Nw==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r509908287", "bodyText": "Actually if isMap() == true  then isMessage() == true and isRepeated() == true automatically (just checked the implementation of those method in api-compiler). Removed the other 2 conditions from the if statement as they are 100% redundant.", "author": "vam-google", "createdAt": "2020-10-22T06:26:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMTU2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "88b31b4cf979bc40785ca69033e40457cca36fd2", "chunk": "diff --git a/src/main/java/com/google/api/codegen/transformer/java/JavaModelTypeNameConverter.java b/src/main/java/com/google/api/codegen/transformer/java/JavaModelTypeNameConverter.java\nindex b469edb6c..ad5b30560 100644\n--- a/src/main/java/com/google/api/codegen/transformer/java/JavaModelTypeNameConverter.java\n+++ b/src/main/java/com/google/api/codegen/transformer/java/JavaModelTypeNameConverter.java\n\n@@ -146,7 +146,7 @@ public class JavaModelTypeNameConverter extends ModelTypeNameConverter {\n     }\n     switch (type.getKind()) {\n       case TYPE_MESSAGE:\n-        if (type.isMap() && type.isMessage() && type.isRepeated()) {\n+        if (type.isMap()) {\n           return getMapTypeName(type);\n         }\n         return getTypeName(type.getMessageType());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMjAxNg==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r504322016", "bodyText": "Nit: Did you mean IsEntrySet? When a reader sees \"as,\" they may expect this method to convert resourcesField into an entry set.\nConsider adding a comment with a sample resourceTypeName value.", "author": "miraleung", "createdAt": "2020-10-13T23:51:49Z", "path": "src/main/java/com/google/api/codegen/viewmodel/PageStreamingDescriptorClassView.java", "diffHunk": "@@ -45,6 +45,10 @@\n \n   public abstract boolean resourcesFieldIsMap();\n \n+  public boolean resourcesFieldAsEntrySet() {\n+    return resourceTypeName() != null && resourceTypeName().contains(\"<\");", "originalCommit": "f837a026b96f235e3de71de25e06868ef09fadc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkwOTI4NQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r509909285", "bodyText": "Agree, no idea why I called that resourceFieldAsEntrySet instead of resourceFieldIsEntrySet. Renamed.", "author": "vam-google", "createdAt": "2020-10-22T06:29:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMjAxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4NTQ3NQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r510485475", "bodyText": "This still says As", "author": "vchudnov-g", "createdAt": "2020-10-22T22:06:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMjAxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5MjAzMw==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r510492033", "bodyText": "Opps, forgot to push =) Thanks!", "author": "vam-google", "createdAt": "2020-10-22T22:23:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMjAxNg=="}], "type": "inlineReview", "revised_code": {"commit": "7ef6c071ec7486d603d20b6b6482432e8ec83259", "chunk": "diff --git a/src/main/java/com/google/api/codegen/viewmodel/PageStreamingDescriptorClassView.java b/src/main/java/com/google/api/codegen/viewmodel/PageStreamingDescriptorClassView.java\nindex ee5694418..050a51dcc 100644\n--- a/src/main/java/com/google/api/codegen/viewmodel/PageStreamingDescriptorClassView.java\n+++ b/src/main/java/com/google/api/codegen/viewmodel/PageStreamingDescriptorClassView.java\n\n@@ -45,7 +45,7 @@ public abstract class PageStreamingDescriptorClassView {\n \n   public abstract boolean resourcesFieldIsMap();\n \n-  public boolean resourcesFieldAsEntrySet() {\n+  public boolean resourcesFieldIsEntrySet() {\n     return resourceTypeName() != null && resourceTypeName().contains(\"<\");\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg1NTQyNQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r504855425", "bodyText": "Thanks for having this function! It will make understanding the code easier.", "author": "vchudnov-g", "createdAt": "2020-10-14T17:36:57Z", "path": "src/main/java/com/google/api/codegen/config/GapicProductConfig.java", "diffHunk": "@@ -100,6 +100,12 @@\n   @Nullable\n   public abstract String getConfigSchemaVersion();\n \n+  public boolean isDiscogapic() {", "originalCommit": "f837a026b96f235e3de71de25e06868ef09fadc8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NTcyNg==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r504865726", "bodyText": "As per the open discussion in the design doc, let's decide whether we want the generators aware of \"diregapic mode\", which is essentially what you're doing here. The assumption so far has been generators would not be aware of the provenance of the protos, and that's something I still want to keep if possible (though I'm certainly open to counter-arguments).\nIn the meantime, in the interest of being able to generate testing clients soon, please add (just inside the outermost if) something like TODO: Conform to design doc spec, once approved, for using non-standard paging fields,", "author": "vchudnov-g", "createdAt": "2020-10-14T17:54:17Z", "path": "src/main/java/com/google/api/codegen/config/PageStreamingConfig.java", "diffHunk": "@@ -237,10 +240,16 @@ static PageStreamingConfig createPageStreamingConfig(\n \n     // Toggle pagination based on presence of paging params.\n     // See https://cloud.google.com/apis/design/design_patterns for API pagination pattern.\n-    ProtoField tokenField = methodModel.getInputField(ProtoPagingParameters.nameForPageToken());\n-    ProtoField pageSizeField = methodModel.getInputField(ProtoPagingParameters.nameForPageSize());\n+    ProtoPagingParameters pagingParams = new ProtoPagingParameters();\n+    ProtoField tokenField = methodModel.getInputField(pagingParams.getNameForPageToken());\n+    ProtoField pageSizeField = methodModel.getInputField(pagingParams.getNameForPageSize());\n+    if (pageSizeField == null) {\n+      if (language == TargetLanguage.JAVA && transportProtocol == TransportProtocol.HTTP) {", "originalCommit": "f837a026b96f235e3de71de25e06868ef09fadc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgxNDMxMw==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r508814313", "bodyText": "The generators cannot not know which client they generated. The number of places where it is needed is limited, but is still present. It is easy for me to remove this check, but I'm afraid of breaking some of the existing clients OnePlatform clients", "author": "vam-google", "createdAt": "2020-10-20T20:22:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NTcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MjUzNw==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r510482537", "bodyText": "(qq: \"where it is needed\" -> what does \"it\" refer to? this check?)\nWe shouldn't have this check in the final product unless it turns out we really need it (eg breaking the current clients---which I don't think we will since the cascading rules you formulated should prevent that). When we remove the check, yes, it makes sense to regenerate existing clients to make sure there are no changes, or, if there are, that they be additive.\nFor now, for this MValpha, I'm fine keeping this check as long as we include a TODO flagging it prominently wherever it appears.", "author": "vchudnov-g", "createdAt": "2020-10-22T21:59:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NTcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk3OTE0OA==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r510979148", "bodyText": "Thanks for the TODO, but please make it a bit stronger. (I'm concerned about people copying this as a reference implementation when we may decide something else in the design doc).\nHow about TODO: Conform to design doc spec, once approved, for using non-standard paging fields (such as max_results for page_size)?", "author": "vchudnov-g", "createdAt": "2020-10-23T15:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NTcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0OTg5OQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r511149899", "bodyText": "Added.\nI noticed you almost always ask for reformulating my original comments/todos. I don't have a strong opinion about wording of these things. For those comments which you have strong opinion about please consider providing the exact wording you want it to be in the original review comment, this will let us save some review cycles.", "author": "vam-google", "createdAt": "2020-10-23T20:51:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NTcyNg=="}], "type": "inlineReview", "revised_code": {"commit": "7ef6c071ec7486d603d20b6b6482432e8ec83259", "chunk": "diff --git a/src/main/java/com/google/api/codegen/config/PageStreamingConfig.java b/src/main/java/com/google/api/codegen/config/PageStreamingConfig.java\nindex 2bc88a0c4..8f25aed83 100644\n--- a/src/main/java/com/google/api/codegen/config/PageStreamingConfig.java\n+++ b/src/main/java/com/google/api/codegen/config/PageStreamingConfig.java\n\n@@ -244,6 +244,8 @@ public abstract class PageStreamingConfig {\n     ProtoField tokenField = methodModel.getInputField(pagingParams.getNameForPageToken());\n     ProtoField pageSizeField = methodModel.getInputField(pagingParams.getNameForPageSize());\n     if (pageSizeField == null) {\n+      // TODO: recognizing max_results field as a page size field is transport specific but it may\n+      //       change in the future.\n       if (language == TargetLanguage.JAVA && transportProtocol == TransportProtocol.HTTP) {\n         pageSizeField = methodModel.getInputField(pagingParams.getNameForMaxResults());\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NzU1Mw==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r504867553", "bodyText": "Wouldn't we want PARAMETER_MAX_RESULTS in here as well? (I might be miunderstanding how this is used)", "author": "vchudnov-g", "createdAt": "2020-10-14T17:57:15Z", "path": "src/main/java/com/google/api/codegen/configgen/ProtoPagingParameters.java", "diffHunk": "@@ -21,10 +21,11 @@\n public class ProtoPagingParameters implements PagingParameters {\n   private static final String PARAMETER_PAGE_TOKEN = \"page_token\";\n   private static final String PARAMETER_NEXT_PAGE_TOKEN = \"next_page_token\";\n-  private static final String PARAMETER_MAX_RESULTS = \"page_size\";\n+  private static final String PARAMETER_PAGE_SIZE = \"page_size\";\n+  private static final String PARAMETER_MAX_RESULTS = \"max_results\";\n \n   private static final ImmutableList<String> IGNORED_PARAMETERS =\n-      ImmutableList.of(PARAMETER_PAGE_TOKEN, PARAMETER_MAX_RESULTS);\n+      ImmutableList.of(PARAMETER_PAGE_TOKEN, PARAMETER_PAGE_SIZE);", "originalCommit": "f837a026b96f235e3de71de25e06868ef09fadc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgxODc4Nw==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r508818787", "bodyText": "This logic is used only in gapic config generation, i.e. in basically dead code not used anywhere now. We can add it there but it will not affect anything (I just did not want to touch dead code if not necessary).", "author": "vam-google", "createdAt": "2020-10-20T20:29:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NzU1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MzU2OQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r510483569", "bodyText": "Oh, OK. Right, we're in configgen. But you are changing/adding PARAMETER_PAGE_SIZE and PARAMETER_MAX_RESULTS, so then it's not really dead?", "author": "vchudnov-g", "createdAt": "2020-10-22T22:01:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NzU1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ5MTM1Ng==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r510491356", "bodyText": "This was just a queer coincidence. the java constant for the \"page_size\" string literal was called PARAMETER_MAX_RESULTS. So to add \"max_results\" parameter and that code to keep making sense I had to rename the old constant to PARAMETER_PAGE_SIZE first =)", "author": "vam-google", "createdAt": "2020-10-22T22:21:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NzU1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk4MjU3Mw==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r510982573", "bodyText": "Yeah, that part I saw. But my point is that those PARAMETER_* are being used elsewhere, so they're not dead code. But you're saying IGNORED_PARAMETERS is dead code, yet you changed the parameter name without adding the new parameter. So it seems to me that for consistency, you would add the new parameter here, since it would also be ignored if we were generating a config file. I would either add it or add a comment saying it would be added if it mattered....\nBut this is totally minor and not a blocker.", "author": "vchudnov-g", "createdAt": "2020-10-23T15:56:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NzU1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MDQ1MQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r511150451", "bodyText": "It is dead code but it may be still used in discogapic (i'm not sure if it is, but discogapic depends on gapic yaml generation). I did not want to touch that if not necessary. Discogapic is essentially dead code at this point.", "author": "vam-google", "createdAt": "2020-10-23T20:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NzU1Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3NDIzMQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r504874231", "bodyText": "The structure in the previous file led me to conclude that isMap \u21d2 isRepeated. Is that true (making the last condition redundant)?", "author": "vchudnov-g", "createdAt": "2020-10-14T18:08:58Z", "path": "src/main/java/com/google/api/codegen/transformer/java/JavaModelTypeNameConverter.java", "diffHunk": "@@ -146,6 +146,9 @@ private TypeName getTypeNameForElementType(TypeRef type, boolean shouldBoxPrimit\n     }\n     switch (type.getKind()) {\n       case TYPE_MESSAGE:\n+        if (type.isMap() && type.isMessage() && type.isRepeated()) {", "originalCommit": "f837a026b96f235e3de71de25e06868ef09fadc8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgxOTA3NQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r508819075", "bodyText": "Probably, but I was not sure, so made it as rigorous as possible.", "author": "vam-google", "createdAt": "2020-10-20T20:29:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3NDIzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkxOTcyMQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r509919721", "bodyText": "I confirmed by checking the implementation of the isMessage() and isRepeated() and isMap() method that if isMap() is true than the other two are guaranteed to be true as well. Removed the other method calls since they are redundant.", "author": "vam-google", "createdAt": "2020-10-22T06:53:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3NDIzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "88b31b4cf979bc40785ca69033e40457cca36fd2", "chunk": "diff --git a/src/main/java/com/google/api/codegen/transformer/java/JavaModelTypeNameConverter.java b/src/main/java/com/google/api/codegen/transformer/java/JavaModelTypeNameConverter.java\nindex b469edb6c..ad5b30560 100644\n--- a/src/main/java/com/google/api/codegen/transformer/java/JavaModelTypeNameConverter.java\n+++ b/src/main/java/com/google/api/codegen/transformer/java/JavaModelTypeNameConverter.java\n\n@@ -146,7 +146,7 @@ public class JavaModelTypeNameConverter extends ModelTypeNameConverter {\n     }\n     switch (type.getKind()) {\n       case TYPE_MESSAGE:\n-        if (type.isMap() && type.isMessage() && type.isRepeated()) {\n+        if (type.isMap()) {\n           return getMapTypeName(type);\n         }\n         return getTypeName(type.getMessageType());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3NDY3Mg==", "url": "https://github.com/googleapis/gapic-generator/pull/3295#discussion_r504874672", "bodyText": "Love this! Much clearer ;-)\nYou can remove the comment in the previous line now, because the code is self-explanatory now (and the comment is now confusing).", "author": "vchudnov-g", "createdAt": "2020-10-14T18:09:42Z", "path": "src/main/java/com/google/api/codegen/transformer/java/JavaSurfaceTransformer.java", "diffHunk": "@@ -933,7 +933,7 @@ private void addRpcStubImports(InterfaceContext context) {\n         typeTable.saveNicknameFor(\"com.google.api.pathtemplate.PathTemplate\");\n         String configSchemaVersion = context.getProductConfig().getConfigSchemaVersion();\n         // Discogapic always uses gapic yaml of version 1.0\n-        if (configSchemaVersion != null && configSchemaVersion.startsWith(\"1.\")) {\n+        if (context.getProductConfig().isDiscogapic()) {", "originalCommit": "f837a026b96f235e3de71de25e06868ef09fadc8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88b31b4cf979bc40785ca69033e40457cca36fd2", "chunk": "diff --git a/src/main/java/com/google/api/codegen/transformer/java/JavaSurfaceTransformer.java b/src/main/java/com/google/api/codegen/transformer/java/JavaSurfaceTransformer.java\nindex 69f73e7ef..5d6755971 100644\n--- a/src/main/java/com/google/api/codegen/transformer/java/JavaSurfaceTransformer.java\n+++ b/src/main/java/com/google/api/codegen/transformer/java/JavaSurfaceTransformer.java\n\n@@ -931,8 +931,7 @@ public class JavaSurfaceTransformer {\n         typeTable.saveNicknameFor(\"com.google.api.client.http.HttpMethods\");\n         typeTable.saveNicknameFor(\"com.google.api.core.InternalApi\");\n         typeTable.saveNicknameFor(\"com.google.api.pathtemplate.PathTemplate\");\n-        String configSchemaVersion = context.getProductConfig().getConfigSchemaVersion();\n-        // Discogapic always uses gapic yaml of version 1.0\n+\n         if (context.getProductConfig().isDiscogapic()) {\n           typeTable.saveNicknameFor(\"com.google.api.gax.httpjson.ApiMessageHttpRequestFormatter\");\n           typeTable.saveNicknameFor(\"com.google.api.gax.httpjson.ApiMessageHttpResponseParser\");\n"}}, {"oid": "88b31b4cf979bc40785ca69033e40457cca36fd2", "url": "https://github.com/googleapis/gapic-generator/commit/88b31b4cf979bc40785ca69033e40457cca36fd2", "message": "Address PR feedback", "committedDate": "2020-10-22T07:24:08Z", "type": "commit"}, {"oid": "c767e724e9857363bacf58032e484ab1728bedec", "url": "https://github.com/googleapis/gapic-generator/commit/c767e724e9857363bacf58032e484ab1728bedec", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-10-22T07:27:54Z", "type": "commit"}, {"oid": "1f3b59a271efdeb45f0f619c5d4d0950bb61d8cb", "url": "https://github.com/googleapis/gapic-generator/commit/1f3b59a271efdeb45f0f619c5d4d0950bb61d8cb", "message": "Merge branch 'master' of github.com:vam-google/gapic-generator", "committedDate": "2020-10-22T07:32:31Z", "type": "commit"}, {"oid": "7ef6c071ec7486d603d20b6b6482432e8ec83259", "url": "https://github.com/googleapis/gapic-generator/commit/7ef6c071ec7486d603d20b6b6482432e8ec83259", "message": "Address PR feedback", "committedDate": "2020-10-23T00:35:29Z", "type": "commit"}, {"oid": "30a563b5be44a0548926c324258a14f15f1c3a08", "url": "https://github.com/googleapis/gapic-generator/commit/30a563b5be44a0548926c324258a14f15f1c3a08", "message": "Address PR feedback", "committedDate": "2020-10-23T20:48:07Z", "type": "commit"}]}