{"pr_number": 3163, "pr_title": "feat: support '*' in resource definition", "pr_createdAt": "2020-04-07T01:23:46Z", "pr_url": "https://github.com/googleapis/gapic-generator/pull/3163", "timeline": [{"oid": "cc9fc1b84371b6601643f3425fccd796b4ad92f3", "url": "https://github.com/googleapis/gapic-generator/commit/cc9fc1b84371b6601643f3425fccd796b4ad92f3", "message": "any resource name in resource definition annotation", "committedDate": "2020-04-07T01:20:41Z", "type": "commit"}, {"oid": "74feb00d6b94ff04fed06c784bfcd826529246b3", "url": "https://github.com/googleapis/gapic-generator/commit/74feb00d6b94ff04fed06c784bfcd826529246b3", "message": "remove comments", "committedDate": "2020-04-07T01:24:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI4NTkxOA==", "url": "https://github.com/googleapis/gapic-generator/pull/3163#discussion_r405285918", "bodyText": "I think it might be clearer to move the earlier put call to an else block - so that every branch of this switch statement calls fieldEntityMap.put exactly once. (You could even extract this to a method which just returns \"the value to put in the map\" so you only have a single fieldEntityMap.put call.)", "author": "jskeet", "createdAt": "2020-04-08T06:27:22Z", "path": "src/main/java/com/google/api/codegen/config/ResourceNameMessageConfigs.java", "diffHunk": "@@ -134,36 +140,40 @@ private static void loadFieldEntityPairFromResourceReferenceAnnotation(\n           \"Only one of child_type and type should be set: %s\",\n           field);\n \n-      if (!childType.isEmpty()) {\n-        List<ResourceDescriptorConfig> parents =\n-            childParentResourceMap.getOrDefault(childType, Collections.emptyList());\n-        for (ResourceDescriptorConfig parentResourceDescriptor : parents) {\n-          String derivedEntityName = parentResourceDescriptor.getDerivedEntityName();\n-          ResourceNameConfig parentResource = resourceNameConfigs.get(derivedEntityName);\n-          Preconditions.checkArgument(\n-              parentResource != null, \"Referencing non-existing parent resource: %s\", childType);\n-          fieldEntityMap.put(field.getSimpleName(), parentResource.getEntityId());\n-        }\n+      if (type.equals(\"*\") || childType.equals(\"*\")) {\n+        fieldEntityMap.put(field.getSimpleName(), \"*\");\n         continue;\n       }\n \n-      if (type.equals(\"*\")) {\n-        fieldEntityMap.put(field.getSimpleName(), \"*\");\n-        continue;\n+      List<ResourceDescriptorConfig> referencedResources;\n+      if (!childType.isEmpty()) {\n+        referencedResources = childParentResourceMap.get(childType);\n+      } else {\n+        referencedResources = Collections.singletonList(descriptorConfigMap.get(type));\n       }\n \n-      String unqualifiedResourceType = ResourceDescriptorConfig.getUnqualifiedTypeName(type);\n-      ResourceNameConfig resourceNameConfig =\n-          resourceNameConfigs.get(unqualifiedResourceType + \"Oneof\");\n-      if (resourceNameConfig != null\n-          && resourceNameConfig.getResourceNameType() == ResourceNameType.ONEOF) {\n-        fieldEntityMap.put(field.getSimpleName(), unqualifiedResourceType + \"Oneof\");\n-        continue;\n+      for (ResourceDescriptorConfig descriptor : referencedResources) {\n+        String unqualifiedName = descriptor.getDerivedEntityName();\n+        ResourceNameConfig resource = resourceNameConfigs.get(unqualifiedName);\n+\n+        switch (resource.getResourceNameType()) {\n+          case ANY:\n+            fieldEntityMap.put(field.getSimpleName(), \"*\");\n+            break;\n+          case SINGLE:\n+            fieldEntityMap.put(field.getSimpleName(), unqualifiedName);\n+            break;\n+          case ONEOF:\n+            fieldEntityMap.put(field.getSimpleName(), unqualifiedName);\n+            if (((ResourceNameOneofConfig) resource).hasAnyResourceNamePattern()) {\n+              fieldEntityMap.put(field.getSimpleName(), \"*\");", "originalCommit": "74feb00d6b94ff04fed06c784bfcd826529246b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcwODMxNA==", "url": "https://github.com/googleapis/gapic-generator/pull/3163#discussion_r405708314", "bodyText": "I might be missing your point Jon, but the former put needs to be executed regardless of whether the resource has a * pattern, so I can't move it to the else block.", "author": "yihanzhen", "createdAt": "2020-04-08T17:55:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI4NTkxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcxMzY3MA==", "url": "https://github.com/googleapis/gapic-generator/pull/3163#discussion_r405713670", "bodyText": "You've currently got (pseudo-code)\nput (key, value1)\nif (condition)\n  put (key, value2)\n\nI'm suggesting that's better as:\nif (condition)\n  put (key, value2)\nelse\n  put (key, value1)\n\nSo it's easy to see that in every path, the key is put exactly once. What's the benefit of putting unqualifiedName as the value and then putting \"*\" as the value? That's just overwriting it, right?", "author": "jskeet", "createdAt": "2020-04-08T18:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI4NTkxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczODE1Nw==", "url": "https://github.com/googleapis/gapic-generator/pull/3163#discussion_r405738157", "bodyText": "Ahh I see the confusion here. fieldEntityMap is a Multimap- it supports duplicate keys.\nhttps://github.com/googleapis/gapic-generator/pull/3163/files/74feb00d6b94ff04fed06c784bfcd826529246b3#diff-a0f27b8e4c41d2ebf887482b72314a58R82", "author": "yihanzhen", "createdAt": "2020-04-08T18:45:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI4NTkxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc0MDU3NQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3163#discussion_r405740575", "bodyText": "Ah, that would definitely explain it. Thanks for clarifying.", "author": "jskeet", "createdAt": "2020-04-08T18:49:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI4NTkxOA=="}], "type": "inlineReview", "revised_code": null}]}