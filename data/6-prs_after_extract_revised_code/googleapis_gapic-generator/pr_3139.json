{"pr_number": 3139, "pr_title": "buildgen: update go_gapic_library for microgen", "pr_createdAt": "2020-03-12T22:47:09Z", "pr_url": "https://github.com/googleapis/gapic-generator/pull/3139", "timeline": [{"oid": "e8f6f7dd19edb6c03a422b2eed66593c2604b397", "url": "https://github.com/googleapis/gapic-generator/commit/e8f6f7dd19edb6c03a422b2eed66593c2604b397", "message": "fix google java format", "committedDate": "2020-03-13T23:45:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1MTYyNQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r393951625", "bodyText": "this change looks suspicious, do you really need part after semicolon? The other go rules (those which come in rules_go) never require it.", "author": "vam-google", "createdAt": "2020-03-17T20:32:02Z", "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java", "diffHunk": "@@ -73,7 +79,7 @@\n     tokens.put(\n         \"java_gapic_test_deps\", joinSetWithIndentationNl(mapJavaGapicTestDeps(actualImports)));\n \n-    tokens.put(\"go_gapic_importpath\", bp.getLangGapicPackages().get(\"go\").split(\";\")[0]);\n+    tokens.put(\"go_gapic_importpath\", bp.getLangGapicPackages().get(\"go\"));", "originalCommit": "c68dadff4529ce9629f8552cf97fcd535324d234", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4Mjg2Nw==", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r395782867", "bodyText": "This is an outdated diff you are commenting on. The \"splitting\" code is still there.", "author": "noahdietz", "createdAt": "2020-03-20T17:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk1MTYyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f1c47714eecda97b82c275ccb5aeef3624064399", "chunk": "diff --git a/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java b/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java\nindex 969c33142..b3c12c5a8 100644\n--- a/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java\n+++ b/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java\n\n@@ -79,7 +79,9 @@ class BazelBuildFileView {\n     tokens.put(\n         \"java_gapic_test_deps\", joinSetWithIndentationNl(mapJavaGapicTestDeps(actualImports)));\n \n-    tokens.put(\"go_gapic_importpath\", bp.getLangGapicPackages().get(\"go\"));\n+    String goImportPath = bp.getLangGapicPackages().get(\"go\");\n+    tokens.put(\"go_gapic_importpath\", goImportPath);\n+    tokens.put(\"go_gapic_importpath_pkg\", assembleGoGapicImportPath(bp.getProtoPackage(), goImportPath));\n     tokens.put(\"go_gapic_deps\", joinSetWithIndentationNl(mapGoGapicDeps(actualImports)));\n   }\n \n"}}, {"oid": "1ecbadd350bf7a23301d060d880e47070a74642c", "url": "https://github.com/googleapis/gapic-generator/commit/1ecbadd350bf7a23301d060d880e47070a74642c", "message": "buildgen: update go_gapic_library for microgen", "committedDate": "2020-03-23T20:33:38Z", "type": "commit"}, {"oid": "e21e732e2ab6309c5e897160b3172fd77a82d58e", "url": "https://github.com/googleapis/gapic-generator/commit/e21e732e2ab6309c5e897160b3172fd77a82d58e", "message": "add newline to json", "committedDate": "2020-03-23T20:33:38Z", "type": "commit"}, {"oid": "d4d6f605dfd6efbf09a055ce689056a8083c9d05", "url": "https://github.com/googleapis/gapic-generator/commit/d4d6f605dfd6efbf09a055ce689056a8083c9d05", "message": "fix missing variable type", "committedDate": "2020-03-23T20:33:38Z", "type": "commit"}, {"oid": "bec276a0bb23f1bdd43a0d25e180466594573f78", "url": "https://github.com/googleapis/gapic-generator/commit/bec276a0bb23f1bdd43a0d25e180466594573f78", "message": "fix baseline", "committedDate": "2020-03-23T20:33:38Z", "type": "commit"}, {"oid": "f1c47714eecda97b82c275ccb5aeef3624064399", "url": "https://github.com/googleapis/gapic-generator/commit/f1c47714eecda97b82c275ccb5aeef3624064399", "message": "add pkg to importpath for go_gapic_library", "committedDate": "2020-03-23T20:33:38Z", "type": "commit"}, {"oid": "77b1ef352327df24bb736683b86a1285f062c588", "url": "https://github.com/googleapis/gapic-generator/commit/77b1ef352327df24bb736683b86a1285f062c588", "message": "fix google java format", "committedDate": "2020-03-23T20:33:38Z", "type": "commit"}, {"oid": "1e6ff888a3a56076867d6d24c67f3b42fdf6af47", "url": "https://github.com/googleapis/gapic-generator/commit/1e6ff888a3a56076867d6d24c67f3b42fdf6af47", "message": "remove unnecessary helper for go pkg name", "committedDate": "2020-03-23T20:33:38Z", "type": "commit"}, {"oid": "1f6c7dd406a459ff570b51324cf65c08f60e55c8", "url": "https://github.com/googleapis/gapic-generator/commit/1f6c7dd406a459ff570b51324cf65c08f60e55c8", "message": "replace semicolon split on go pkg name", "committedDate": "2020-03-23T20:33:38Z", "type": "commit"}, {"oid": "50e1743e324979acdb7c4290c2a454cdb33d0983", "url": "https://github.com/googleapis/gapic-generator/commit/50e1743e324979acdb7c4290c2a454cdb33d0983", "message": "infer Go importpath based on API artifacts", "committedDate": "2020-03-23T21:29:09Z", "type": "commit"}, {"oid": "50e1743e324979acdb7c4290c2a454cdb33d0983", "url": "https://github.com/googleapis/gapic-generator/commit/50e1743e324979acdb7c4290c2a454cdb33d0983", "message": "infer Go importpath based on API artifacts", "committedDate": "2020-03-23T21:29:09Z", "type": "forcePushed"}, {"oid": "ece2f93db07dcc12747c21cef8b477c4b32a4b36", "url": "https://github.com/googleapis/gapic-generator/commit/ece2f93db07dcc12747c21cef8b477c4b32a4b36", "message": "googleJavaFormat", "committedDate": "2020-03-23T21:29:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4MTE0NQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r396781145", "bodyText": "Look like you are searching for an exact string match. If this is the case, then there is no need to use regexps. This thing already depends heavily on them and uses them in cases where they are not supposed to be used... If we can simplify it, then we probably should.", "author": "vam-google", "createdAt": "2020-03-23T21:57:17Z", "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/ApiDir.java", "diffHunk": "@@ -10,20 +10,32 @@\n       Pattern.compile(\"(?m)^type\\\\s*:\\\\s*google.api.Service\\\\s*$\");\n   private static Pattern SERVICE_YAML_NAME_VERSION =\n       Pattern.compile(\"_(?<version>[a-zA-Z]+\\\\d+[\\\\w]*)\\\\.yaml\");\n+  private static Pattern CLOUD_AUTH_SCOPE =\n+      Pattern.compile(\"https\\\\:\\\\/\\\\/www\\\\.googleapis\\\\.com\\\\/auth\\\\/cloud-platform\");", "originalCommit": "ece2f93db07dcc12747c21cef8b477c4b32a4b36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc5Nzk0OQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r396797949", "bodyText": "I switched it to a String contains check. Is that OK?", "author": "noahdietz", "createdAt": "2020-03-23T22:36:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4MTE0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f0da4ef51d24054a65042dd4ce73b1dfc6f24358", "chunk": "diff --git a/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/ApiDir.java b/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/ApiDir.java\nindex 2b7fd1bdb..5086a84b2 100644\n--- a/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/ApiDir.java\n+++ b/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/ApiDir.java\n\n@@ -10,8 +10,7 @@ class ApiDir {\n       Pattern.compile(\"(?m)^type\\\\s*:\\\\s*google.api.Service\\\\s*$\");\n   private static Pattern SERVICE_YAML_NAME_VERSION =\n       Pattern.compile(\"_(?<version>[a-zA-Z]+\\\\d+[\\\\w]*)\\\\.yaml\");\n-  private static Pattern CLOUD_AUTH_SCOPE =\n-      Pattern.compile(\"https\\\\:\\\\/\\\\/www\\\\.googleapis\\\\.com\\\\/auth\\\\/cloud-platform\");\n+  private static String CLOUD_AUTH_SCOPE = \"https://www.googleapis.com/auth/cloud-platform\";\n \n   private final Map<String, String> serviceYamlPaths = new TreeMap<>();\n   private final Map<String, Boolean> cloudScopes = new TreeMap<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4MTg0OQ==", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r396781849", "bodyText": "I guess this constructor is getting really big. If possible, please consider moving this in a private method (it is go-specific stuff, so putting it in separate method should be ok).", "author": "vam-google", "createdAt": "2020-03-23T21:58:45Z", "path": "rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java", "diffHunk": "@@ -73,7 +79,29 @@\n     tokens.put(\n         \"java_gapic_test_deps\", joinSetWithIndentationNl(mapJavaGapicTestDeps(actualImports)));\n \n-    tokens.put(\"go_gapic_importpath\", bp.getLangGapicPackages().get(\"go\").split(\";\")[0]);\n+    // Construct GAPIC import path & package name based on go_package proto option\n+    String goPkg = bp.getLangProtoPackages().get(\"go\");", "originalCommit": "ece2f93db07dcc12747c21cef8b477c4b32a4b36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc5Nzk5Nw==", "url": "https://github.com/googleapis/gapic-generator/pull/3139#discussion_r396797997", "bodyText": "Done!", "author": "noahdietz", "createdAt": "2020-03-23T22:36:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4MTg0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f0da4ef51d24054a65042dd4ce73b1dfc6f24358", "chunk": "diff --git a/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java b/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java\nindex 06670d6d3..4adc1d6db 100644\n--- a/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java\n+++ b/rules_gapic/bazel/src/main/java/com/google/api/codegen/bazel/BazelBuildFileView.java\n\n@@ -80,12 +80,21 @@ class BazelBuildFileView {\n         \"java_gapic_test_deps\", joinSetWithIndentationNl(mapJavaGapicTestDeps(actualImports)));\n \n     // Construct GAPIC import path & package name based on go_package proto option\n-    String goPkg = bp.getLangProtoPackages().get(\"go\");\n+    String goImport =\n+        assembleGoImportPath(\n+            bp.getCloudScope(), bp.getProtoPackage(), bp.getLangProtoPackages().get(\"go\"));\n+\n+    tokens.put(\"go_gapic_importpath\", goImport);\n+    tokens.put(\"go_gapic_test_importpath\", goImport.split(\";\")[0]);\n+    tokens.put(\"go_gapic_deps\", joinSetWithIndentationNl(mapGoGapicDeps(actualImports)));\n+  }\n+\n+  private String assembleGoImportPath(boolean isCloud, String protoPkg, String goPkg) {\n     goPkg = goPkg.replaceFirst(\"google\\\\.golang\\\\.org\\\\/genproto\\\\/googleapis\\\\/\", \"\");\n     goPkg = goPkg.replaceFirst(\"cloud\\\\/\", \"\");\n \n     String goImport = \"\";\n-    if (bp.getCloudScope()) {\n+    if (isCloud) {\n       goImport = \"cloud.google.com/go/\";\n       goPkg = goPkg.replaceFirst(\"v(.+);\", \"apiv$1;\");\n     } else {\n"}}, {"oid": "f0da4ef51d24054a65042dd4ce73b1dfc6f24358", "url": "https://github.com/googleapis/gapic-generator/commit/f0da4ef51d24054a65042dd4ce73b1dfc6f24358", "message": "fix comments", "committedDate": "2020-03-23T22:35:53Z", "type": "commit"}]}