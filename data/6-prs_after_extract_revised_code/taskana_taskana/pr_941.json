{"pr_number": 941, "pr_title": "TSK-1137 Endpoint to cancel claim task for REST-API", "pr_createdAt": "2020-02-21T09:53:57Z", "pr_url": "https://github.com/Taskana/taskana/pull/941", "timeline": [{"oid": "aa1294a0229f99dfcd094b6c71dc2eb54aae03ce", "url": "https://github.com/Taskana/taskana/commit/aa1294a0229f99dfcd094b6c71dc2eb54aae03ce", "message": "TSK-1137 Endpoint to cancel claim task for REST-API\n\n-Added endpoint\n-Added tests\n-updated REST documentation\n-removed unnecessary delete documentation from unrelated test in TaskControllerRestDocumentation", "committedDate": "2020-02-21T09:48:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUwOTU0OQ==", "url": "https://github.com/Taskana/taskana/pull/941#discussion_r382509549", "bodyText": "why is this called \"temp\" ?", "author": "benjamineckstein", "createdAt": "2020-02-21T10:33:24Z", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/doc/api/TaskControllerRestDocumentation.java", "diffHunk": "@@ -614,13 +614,42 @@ void claimTaskDocTest() throws Exception {\n         .andDo(\n             MockMvcRestDocumentation.document(\n                 \"ClaimTaskDocTest\", responseFields(taskFieldDescriptors)));\n+  }\n+\n+  @Test\n+  void cancelClaimTaskDocTest() throws Exception {\n+\n+    MvcResult result =\n+        this.mockMvc\n+            .perform(\n+                RestDocumentationRequestBuilders.post(restHelper.toUrl(Mapping.URL_TASKS))\n+                    .contentType(\"application/hal+json\")\n+                    .content(\n+                        \"{\\\"classificationSummaryResource\\\":{\\\"key\\\":\\\"L11010\\\"},\"\n+                            + \"\\\"workbasketSummaryResource\\\":\"\n+                            + \"{\\\"workbasketId\\\":\\\"WBI:100000000000000000000000000000000004\\\"},\"\n+                            + \"\\\"primaryObjRef\\\":{\\\"company\\\":\\\"MyCompany1\\\",\"\n+                            + \"\\\"system\\\":\\\"MySystem1\\\",\\\"systemInstance\\\":\\\"MyInstance1\\\",\"\n+                            + \"\\\"type\\\":\\\"MyType1\\\",\\\"value\\\":\\\"00000001\\\"}}\")\n+                    .header(\"Authorization\", \"Basic dGVhbWxlYWRfMTp0ZWFtbGVhZF8x\"))\n+            .andExpect(MockMvcResultMatchers.status().isCreated())\n+            .andDo(MockMvcRestDocumentation.document(\"temp\"))", "originalCommit": "aa1294a0229f99dfcd094b6c71dc2eb54aae03ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUxMTE1MQ==", "url": "https://github.com/Taskana/taskana/pull/941#discussion_r382511151", "bodyText": "method could be static and then imported statically ... same goes for the other getHeaderMethods. Maybe worth a small refactoring? :)", "author": "benjamineckstein", "createdAt": "2020-02-21T10:36:57Z", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskControllerIntTest.java", "diffHunk": "@@ -650,7 +720,7 @@ void testUpdateTaskOwnerOfReadyTaskSucceeds() {\n         template.exchange(\n             taskUrlString,\n             HttpMethod.GET,\n-            new HttpEntity<>(getHeadersForUser_1_2()),\n+            new HttpEntity<>(restHelper.getHeadersUser_1_2()),", "originalCommit": "aa1294a0229f99dfcd094b6c71dc2eb54aae03ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}