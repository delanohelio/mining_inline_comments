{"pr_number": 886, "pr_title": "TSK-1024: Add tests for ldapclient", "pr_createdAt": "2020-01-29T15:33:22Z", "pr_url": "https://github.com/Taskana/taskana/pull/886", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ2NDY4Nw==", "url": "https://github.com/Taskana/taskana/pull/886#discussion_r372464687", "bodyText": "nice! I didn't know that Pattern.quote exists. awesome :)", "author": "mustaphazorgati", "createdAt": "2020-01-29T15:48:15Z", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/ldap/LdapClient.java", "diffHunk": "@@ -182,16 +185,22 @@ public AccessIdResource searchGroupByDn(final String name) {\n       throw new SystemException(\n           \"LdapClient was called but is not active due to missing configuration: \" + message);\n     }\n-\n+    // Obviously Spring LdapTemplate does have a inconsistency and always adds the base name to the\n+    // given DN.\n+    // https://stackoverflow.com/questions/55285743/spring-ldaptemplate-how-to-lookup-fully-qualified-dn-with-configured-base-dn\n+    // Therefore we have to remove the base name from the dn before performing the lookup\n+    // (?i) --> case insensitive replacement\n+    String nameWithoutBaseDn = name.replaceAll(\"(?i)\" + Pattern.quote(\",\" + baseDn), \"\");", "originalCommit": "2646d66349bb6d0ef0c64f62b77d27b6d938afda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "458ff713e4d638711c302d4e20a19b9e0a56bad0", "chunk": "diff --git a/rest/taskana-rest-spring/src/main/java/pro/taskana/ldap/LdapClient.java b/rest/taskana-rest-spring/src/main/java/pro/taskana/ldap/LdapClient.java\nindex 51aa85f4b..7728b5720 100644\n--- a/rest/taskana-rest-spring/src/main/java/pro/taskana/ldap/LdapClient.java\n+++ b/rest/taskana-rest-spring/src/main/java/pro/taskana/ldap/LdapClient.java\n\n@@ -189,22 +190,29 @@ public class LdapClient {\n     // given DN.\n     // https://stackoverflow.com/questions/55285743/spring-ldaptemplate-how-to-lookup-fully-qualified-dn-with-configured-base-dn\n     // Therefore we have to remove the base name from the dn before performing the lookup\n-    // (?i) --> case insensitive replacement\n-    String nameWithoutBaseDn = name.replaceAll(\"(?i)\" + Pattern.quote(\",\" + baseDn), \"\");\n+    String nameWithoutBaseDn = getNameWithoutBaseDn(name);\n     LOGGER.debug(\n         \"Removes baseDN {} from given DN. New DN to be used: {}\", baseDn, nameWithoutBaseDn);\n-    String[] groupAttributesToReturn;\n-    if (CN.equals(groupNameAttribute)) {\n-      groupAttributesToReturn = new String[] {CN};\n-    } else {\n-      groupAttributesToReturn = new String[] {getGroupNameAttribute(), CN};\n-    }\n     final AccessIdResource accessId =\n-        ldapTemplate.lookup(nameWithoutBaseDn, groupAttributesToReturn, new GroupContextMapper());\n+        ldapTemplate.lookup(\n+            nameWithoutBaseDn, getLookUpGoupAttributesToReturn(), new GroupContextMapper());\n     LOGGER.debug(\"Exit from searchGroupByDn. Retrieved the following group: {}\", accessId);\n     return accessId;\n   }\n \n+  String getNameWithoutBaseDn(String name) {\n+    // (?i) --> case insensitive replacement\n+    return name.replaceAll(\"(?i)\" + Pattern.quote(\",\" + baseDn), \"\");\n+  }\n+\n+  String[] getLookUpGoupAttributesToReturn() {\n+    if (CN.equals(groupNameAttribute)) {\n+      return new String[] {CN};\n+    } else {\n+      return new String[] {getGroupNameAttribute(), CN};\n+    }\n+  }\n+\n   public List<AccessIdResource> searchGroupsofUsersIsMember(final String name)\n       throws InvalidArgumentException {\n     LOGGER.debug(\"entry to searchGroupsofUsersIsMember(name = {}).\", name);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ2NTIxNA==", "url": "https://github.com/Taskana/taskana/pull/886#discussion_r372465214", "bodyText": "can we please use the @ExtendWith(MockitoExtension.class) annotation?", "author": "mustaphazorgati", "createdAt": "2020-01-29T15:49:05Z", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/ldap/LdapClientTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package pro.taskana.ldap;\n+\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+import org.springframework.core.env.Environment;\n+import org.springframework.ldap.core.LdapTemplate;\n+\n+class LdapClientTest {\n+\n+  @Mock Environment environment;\n+\n+  @Mock LdapTemplate ldapTemplate;\n+\n+  @InjectMocks LdapClient cut;\n+\n+  @Test\n+  void testLdap() {\n+\n+    MockitoAnnotations.initMocks(this);", "originalCommit": "2646d66349bb6d0ef0c64f62b77d27b6d938afda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ2NTI5MQ==", "url": "https://github.com/Taskana/taskana/pull/886#discussion_r372465291", "bodyText": "like we always do :)", "author": "mustaphazorgati", "createdAt": "2020-01-29T15:49:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ2NTIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ3Nzk3NQ==", "url": "https://github.com/Taskana/taskana/pull/886#discussion_r372477975", "bodyText": "@benjamineckstein this is still not done :)", "author": "mustaphazorgati", "createdAt": "2020-01-29T16:09:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ2NTIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ5OTUyMA==", "url": "https://github.com/Taskana/taskana/pull/886#discussion_r372499520", "bodyText": "done", "author": "benjamineckstein", "createdAt": "2020-01-29T16:43:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ2NTIxNA=="}], "type": "inlineReview", "revised_code": {"commit": "d7e73b5e504442ad92aea7e2317d57e61196c99f", "chunk": "diff --git a/rest/taskana-rest-spring/src/test/java/pro/taskana/ldap/LdapClientTest.java b/rest/taskana-rest-spring/src/test/java/pro/taskana/ldap/LdapClientTest.java\nindex faafbf807..afaf4d8a7 100644\n--- a/rest/taskana-rest-spring/src/test/java/pro/taskana/ldap/LdapClientTest.java\n+++ b/rest/taskana-rest-spring/src/test/java/pro/taskana/ldap/LdapClientTest.java\n\n@@ -1,15 +1,19 @@\n package pro.taskana.ldap;\n \n-import static org.mockito.Mockito.when;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.lenient;\n+import static org.mockito.Mockito.verify;\n \n+import java.util.stream.Stream;\n import org.junit.jupiter.api.Test;\n import org.mockito.InjectMocks;\n import org.mockito.Mock;\n-import org.mockito.Mockito;\n-import org.mockito.MockitoAnnotations;\n+import org.mockito.junit.jupiter.MockitoSettings;\n import org.springframework.core.env.Environment;\n import org.springframework.ldap.core.LdapTemplate;\n \n+@MockitoSettings\n class LdapClientTest {\n \n   @Mock Environment environment;\n"}}, {"oid": "d7e73b5e504442ad92aea7e2317d57e61196c99f", "url": "https://github.com/Taskana/taskana/commit/d7e73b5e504442ad92aea7e2317d57e61196c99f", "message": "TSK-1024: Add tests for ldapclient", "committedDate": "2020-01-29T16:42:00Z", "type": "commit"}, {"oid": "323bdd74db6c64d204682db5bf644907950d9032", "url": "https://github.com/Taskana/taskana/commit/323bdd74db6c64d204682db5bf644907950d9032", "message": "TSK-1024: removed lenient() and replaced MockitoSettings annotation", "committedDate": "2020-01-29T19:29:24Z", "type": "commit"}, {"oid": "458ff713e4d638711c302d4e20a19b9e0a56bad0", "url": "https://github.com/Taskana/taskana/commit/458ff713e4d638711c302d4e20a19b9e0a56bad0", "message": "TSK-1024: Refactor and clean up LdapClient changes", "committedDate": "2020-01-30T08:09:29Z", "type": "commit"}]}