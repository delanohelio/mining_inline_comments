{"pr_number": 1131, "pr_title": "TSK-1283: replaced usernames with - instead of _", "pr_createdAt": "2020-06-16T14:08:26Z", "pr_url": "https://github.com/Taskana/taskana/pull/1131", "timeline": [{"oid": "482d4c72b30240739e2b5506e23991ffb81e2734", "url": "https://github.com/Taskana/taskana/commit/482d4c72b30240739e2b5506e23991ffb81e2734", "message": "TSK-1283: replaced usernames with - instead of _", "committedDate": "2020-06-19T12:20:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MDEzMQ==", "url": "https://github.com/Taskana/taskana/pull/1131#discussion_r442950131", "bodyText": "Where did this test go?", "author": "mustaphazorgati", "createdAt": "2020-06-19T16:57:45Z", "path": "lib/taskana-core/src/test/java/acceptance/classification/DeleteClassificationAccTest.java", "diffHunk": "@@ -39,15 +39,6 @@ void testDeleteClassificationInDomain()\n     assertThat(classification.getDomain()).isEqualTo(\"\");\n   }\n \n-  @WithAccessId(\n-      user = \"teamlead_1\",\n-      groups = {\"group-1\", \"group-2\"})\n-  @Test\n-  void testDeleteClassificationInDomainUserIsNotAuthorized() {\n-    ThrowingCallable call = () -> classificationService.deleteClassification(\"L140101\", \"DOMAIN_A\");\n-    assertThatThrownBy(call).isInstanceOf(NotAuthorizedException.class);\n-  }\n-", "originalCommit": "482d4c72b30240739e2b5506e23991ffb81e2734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQxNzgxMA==", "url": "https://github.com/Taskana/taskana/pull/1131#discussion_r443417810", "bodyText": "This was a duplicate in my opinion.", "author": "holgerhagen", "createdAt": "2020-06-22T09:05:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MDEzMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MDM1MA==", "url": "https://github.com/Taskana/taskana/pull/1131#discussion_r442950350", "bodyText": "What happened here?", "author": "mustaphazorgati", "createdAt": "2020-06-19T16:58:19Z", "path": "lib/taskana-core/src/test/java/acceptance/classification/UpdateClassificationAccTest.java", "diffHunk": "@@ -80,28 +80,9 @@ void testUpdateClassification()\n   }\n \n   @Test\n-  void testUpdateClassificationFails() throws ClassificationNotFoundException {\n-    String newName = \"updated Name\";\n-    String newEntryPoint = \"updated EntryPoint\";\n+  void should_ThrowException_When_UserIsNotAuthorized() throws ClassificationNotFoundException {\n     Classification classification = classificationService.getClassification(\"T2100\", \"DOMAIN_A\");\n-\n-    classification.setApplicationEntryPoint(newEntryPoint);\n-    classification.setCategory(\"PROCESS\");\n     classification.setCustom1(\"newCustom1\");\n-    classification.setCustom2(\"newCustom2\");\n-    classification.setCustom3(\"newCustom3\");\n-    classification.setCustom4(\"newCustom4\");\n-    classification.setCustom5(\"newCustom5\");\n-    classification.setCustom6(\"newCustom6\");\n-    classification.setCustom7(\"newCustom7\");\n-    classification.setCustom8(\"newCustom8\");\n-    classification.setDescription(\"newDescription\");\n-    classification.setIsValidInDomain(false);\n-    classification.setName(newName);\n-    classification.setParentId(\"T2000\");\n-    classification.setPriority(1000);\n-    classification.setServiceLevel(\"P2DT3H4M\");\n-", "originalCommit": "482d4c72b30240739e2b5506e23991ffb81e2734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQxNzU0Mg==", "url": "https://github.com/Taskana/taskana/pull/1131#discussion_r443417542", "bodyText": "No reason to set all this stuff just to see that the user is unauthorized.", "author": "holgerhagen", "createdAt": "2020-06-22T09:04:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MDM1MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1Njc0MA==", "url": "https://github.com/Taskana/taskana/pull/1131#discussion_r442956740", "bodyText": "I like this a lot \ud83d\udc4d", "author": "mustaphazorgati", "createdAt": "2020-06-19T17:13:16Z", "path": "lib/taskana-core/src/test/java/acceptance/task/CompleteTaskAccTest.java", "diffHunk": "@@ -126,35 +126,50 @@ void testForceCompleteNotClaimed()\n     assertThat(completedTask.getCompleted()).isEqualTo(completedTask.getModified());\n   }\n \n-  @WithAccessId(user = \"user-1-1\", groups = \"group-1\")\n+  @WithAccessId(user = \"user-1-1\")\n   @Test\n-  void testCompleteTaskThrowsErrors() {\n+  void should_ThrowException_When_TaskIsNotFound() {\n     ThrowingCallable call =\n         () -> {\n           TASK_SERVICE.completeTask(\"TKI:0000000000000000000000000000000000xx\");\n         };\n     assertThatThrownBy(call).isInstanceOf(TaskNotFoundException.class);\n+  }\n \n-    call =\n-        () -> {\n-          TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000004\");\n-        };\n+  @WithAccessId(user = \"user-1-1\")\n+  @Test\n+  void should_ThrowException_When_UserIsNotAuthorizedOnTask() {\n+    ThrowingCallable call =\n+        call =\n+            () -> {\n+              TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000004\");\n+            };\n     assertThatThrownBy(call).isInstanceOf(NotAuthorizedException.class);\n+  }\n \n-    call =\n-        () -> {\n-          TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000025\");\n-        };\n+  @WithAccessId(user = \"user-1-2\")\n+  @Test\n+  void should_ThrowException_When_TaskIsInStateReady() {\n+    ThrowingCallable call =\n+        call =\n+            () -> {\n+              TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000025\");\n+            };\n     assertThatThrownBy(call).isInstanceOf(InvalidStateException.class);\n+  }\n \n-    call =\n-        () -> {\n-          TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000027\");\n-        };\n+  @WithAccessId(user = \"user-1-2\")\n+  @Test\n+  void should_ThrowException_When_TaskCallerIsNotTheOwner() {\n+    ThrowingCallable call =\n+        call =\n+            () -> {\n+              TASK_SERVICE.completeTask(\"TKI:000000000000000000000000000000000026\");\n+            };\n     assertThatThrownBy(call).isInstanceOf(InvalidOwnerException.class);\n   }", "originalCommit": "482d4c72b30240739e2b5506e23991ffb81e2734", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2MjMwNQ==", "url": "https://github.com/Taskana/taskana/pull/1131#discussion_r442962305", "bodyText": "Is this really necessary?", "author": "mustaphazorgati", "createdAt": "2020-06-19T17:25:52Z", "path": "lib/taskana-core/src/test/java/acceptance/workbasket/UpdateWorkbasketAuthorizationsAccTest.java", "diffHunk": "@@ -155,7 +151,7 @@ void testUpdatedAccessItemLeadsToNotAuthorizedException()\n \n     String wbKey = \"USER-2-1\";\n     String wbDomain = \"DOMAIN_A\";\n-    final String groupName = \"group-2\";\n+    final String groupName = GROUP_2_DN;", "originalCommit": "482d4c72b30240739e2b5506e23991ffb81e2734", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "ad1a68151d9d061216dbeefa5954c65d13908bad", "url": "https://github.com/Taskana/taskana/commit/ad1a68151d9d061216dbeefa5954c65d13908bad", "message": "TSK-1283: general refactoring + made accessIds lowercase", "committedDate": "2020-06-22T13:52:40Z", "type": "commit"}]}