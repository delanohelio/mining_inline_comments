{"pr_number": 1142, "pr_title": "TSK-1301: Cleaned up ldap properties in order to allow users to defin\u2026", "pr_createdAt": "2020-06-23T11:01:39Z", "pr_url": "https://github.com/Taskana/taskana/pull/1142", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyNjA4Nw==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r444226087", "bodyText": "We should be able to delete this ComponentScan annotation since this class already resides in the pro.taskana.simplehistory.rest package and the integrated @componentscan annotation (without arguments) in @SpringBootApplication should tell Spring to scan the current package and all of its sub-packages", "author": "gitgoodjhe", "createdAt": "2020-06-23T13:32:30Z", "path": "history/taskana-simplehistory-rest-spring-example/src/main/java/pro/taskana/simplehistory/rest/ExampleRestApplication.java", "diffHunk": "@@ -19,7 +19,7 @@\n \n /** Example Application showing the implementation of taskana-rest-spring. */\n @SpringBootApplication\n-@ComponentScan(basePackages = \"pro.taskana.simplehistory.rest\")\n+@ComponentScan(\"pro.taskana.simplehistory.rest\")", "originalCommit": "d2be6e8ec66249d888ed8185fac694a3906c0730", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI1NDA1MA==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r445254050", "bodyText": "done", "author": "mustaphazorgati", "createdAt": "2020-06-25T01:11:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyNjA4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "ab949aa2b067ee9ed20b22f05459099add7a282d", "chunk": "diff --git a/history/taskana-simplehistory-rest-spring-example/src/main/java/pro/taskana/simplehistory/rest/ExampleRestApplication.java b/history/taskana-simplehistory-rest-spring-example/src/main/java/pro/taskana/simplehistory/rest/ExampleRestApplication.java\nindex 3f5328607..aac662680 100644\n--- a/history/taskana-simplehistory-rest-spring-example/src/main/java/pro/taskana/simplehistory/rest/ExampleRestApplication.java\n+++ b/history/taskana-simplehistory-rest-spring-example/src/main/java/pro/taskana/simplehistory/rest/ExampleRestApplication.java\n\n@@ -19,8 +17,6 @@ import pro.taskana.simplehistory.rest.sampledata.SampleDataGenerator;\n \n /** Example Application showing the implementation of taskana-rest-spring. */\n @SpringBootApplication\n-@ComponentScan(\"pro.taskana.simplehistory.rest\")\n-@Import({TaskHistoryRestConfiguration.class, WebMvcConfig.class})\n public class ExampleRestApplication {\n \n   @Value(\"${taskana.schemaName:TASKANA}\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyODQ4OQ==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r444228489", "bodyText": "Should be deletable due to the class residing in the above pro.taskana.rest package", "author": "gitgoodjhe", "createdAt": "2020-06-23T13:35:45Z", "path": "history/taskana-simplehistory-rest-spring/src/test/java/pro/taskana/rest/ExampleDocumentationApplication.java", "diffHunk": "@@ -21,7 +21,7 @@\n \n /** Example Application to create the documentation. */\n @SpringBootApplication\n-@ComponentScan(basePackages = \"pro.taskana.rest.simplehistory\")\n+@ComponentScan(\"pro.taskana.rest.simplehistory\")", "originalCommit": "d2be6e8ec66249d888ed8185fac694a3906c0730", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI1NDMxNQ==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r445254315", "bodyText": "done", "author": "mustaphazorgati", "createdAt": "2020-06-25T01:12:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyODQ4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ab949aa2b067ee9ed20b22f05459099add7a282d", "chunk": "diff --git a/history/taskana-simplehistory-rest-spring/src/test/java/pro/taskana/rest/ExampleDocumentationApplication.java b/history/taskana-simplehistory-rest-spring/src/test/java/pro/taskana/rest/ExampleDocumentationApplication.java\nindex ace880dbb..f88aa7b14 100644\n--- a/history/taskana-simplehistory-rest-spring/src/test/java/pro/taskana/rest/ExampleDocumentationApplication.java\n+++ b/history/taskana-simplehistory-rest-spring/src/test/java/pro/taskana/rest/ExampleDocumentationApplication.java\n\n@@ -21,7 +20,6 @@ import pro.taskana.simplehistory.rest.sampledata.SampleDataGenerator;\n \n /** Example Application to create the documentation. */\n @SpringBootApplication\n-@ComponentScan(\"pro.taskana.rest.simplehistory\")\n @Import({TaskHistoryRestConfiguration.class})\n public class ExampleDocumentationApplication {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyOTgwNA==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r444229804", "bodyText": "Only the @componentscan annotation without arguments should be fine since this class already resides in the pro.taskana package", "author": "gitgoodjhe", "createdAt": "2020-06-23T13:37:31Z", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/RestConfiguration.java", "diffHunk": "@@ -15,19 +16,21 @@\n \n import pro.taskana.classification.api.ClassificationService;\n import pro.taskana.common.api.TaskanaEngine;\n-import pro.taskana.common.rest.ldap.LdapClient;\n import pro.taskana.monitor.api.MonitorService;\n import pro.taskana.task.api.TaskService;\n import pro.taskana.workbasket.api.WorkbasketService;\n \n /** Configuration for REST service. */\n @Configuration\n-@ComponentScan\n+@ComponentScan(\"pro.taskana\")", "originalCommit": "d2be6e8ec66249d888ed8185fac694a3906c0730", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI1NDQ3OA==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r445254478", "bodyText": "I moved this class to pro.taskana.common.rest. Because of this this has to stay", "author": "mustaphazorgati", "createdAt": "2020-06-25T01:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyOTgwNA=="}], "type": "inlineReview", "revised_code": {"commit": "ab949aa2b067ee9ed20b22f05459099add7a282d", "chunk": "diff --git a/rest/taskana-rest-spring/src/main/java/pro/taskana/RestConfiguration.java b/rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/RestConfiguration.java\nsimilarity index 91%\nrename from rest/taskana-rest-spring/src/main/java/pro/taskana/RestConfiguration.java\nrename to rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/RestConfiguration.java\nindex eed44ec4d..2c3c461f3 100644\n--- a/rest/taskana-rest-spring/src/main/java/pro/taskana/RestConfiguration.java\n+++ b/rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/RestConfiguration.java\n\n@@ -1,19 +1,19 @@\n-package pro.taskana;\n+package pro.taskana.common.rest;\n \n import com.fasterxml.jackson.databind.cfg.HandlerInstantiator;\n import java.sql.SQLException;\n import javax.sql.DataSource;\n import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.beans.factory.config.ConfigurableBeanFactory;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.Scope;\n import org.springframework.http.converter.json.SpringHandlerInstantiator;\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n \n+import pro.taskana.SpringTaskanaEngineConfiguration;\n+import pro.taskana.TaskanaEngineConfiguration;\n import pro.taskana.classification.api.ClassificationService;\n import pro.taskana.common.api.TaskanaEngine;\n import pro.taskana.monitor.api.MonitorService;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzNjMzNA==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r444236334", "bodyText": "All Beans should be created as singletons as a default, not sure if this annotation is really necessary", "author": "gitgoodjhe", "createdAt": "2020-06-23T13:46:33Z", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/RestConfiguration.java", "diffHunk": "@@ -57,14 +60,16 @@ public TaskanaEngine getTaskanaEngine(TaskanaEngineConfiguration taskanaEngineCo\n \n   @Bean\n   @Scope(ConfigurableBeanFactory.SCOPE_SINGLETON)", "originalCommit": "d2be6e8ec66249d888ed8185fac694a3906c0730", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3NTMyMA==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r444675320", "bodyText": "https://docs.spring.io/spring/docs/3.0.0.M3/reference/html/ch04s04.html\nYou're right. Will be removed", "author": "mustaphazorgati", "createdAt": "2020-06-24T06:37:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzNjMzNA=="}], "type": "inlineReview", "revised_code": {"commit": "ab949aa2b067ee9ed20b22f05459099add7a282d", "chunk": "diff --git a/rest/taskana-rest-spring/src/main/java/pro/taskana/RestConfiguration.java b/rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/RestConfiguration.java\nsimilarity index 91%\nrename from rest/taskana-rest-spring/src/main/java/pro/taskana/RestConfiguration.java\nrename to rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/RestConfiguration.java\nindex eed44ec4d..2c3c461f3 100644\n--- a/rest/taskana-rest-spring/src/main/java/pro/taskana/RestConfiguration.java\n+++ b/rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/RestConfiguration.java\n\n@@ -53,13 +53,11 @@ public class RestConfiguration {\n   }\n \n   @Bean\n-  @Scope(ConfigurableBeanFactory.SCOPE_SINGLETON)\n   public TaskanaEngine getTaskanaEngine(TaskanaEngineConfiguration taskanaEngineConfiguration) {\n     return taskanaEngineConfiguration.buildTaskanaEngine();\n   }\n \n   @Bean\n-  @Scope(ConfigurableBeanFactory.SCOPE_SINGLETON)\n   @ConditionalOnMissingBean(TaskanaEngineConfiguration.class)\n   public TaskanaEngineConfiguration taskanaEngineConfiguration(DataSource dataSource)\n       throws SQLException {\n"}}, {"oid": "ab949aa2b067ee9ed20b22f05459099add7a282d", "url": "https://github.com/Taskana/taskana/commit/ab949aa2b067ee9ed20b22f05459099add7a282d", "message": "TSK-1301: Cleaned up ldap properties in order to allow users to define custom LdapTemplate bean", "committedDate": "2020-06-25T01:16:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMDQ5NA==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r445530494", "bodyText": "Just fyi: As of Spring 4.3, you no longer need to specify an explicit injection annotation in a single-constructor scenario. (meaning the @Autowired could be deleted here)", "author": "gitgoodjhe", "createdAt": "2020-06-25T12:47:45Z", "path": "rest/taskana-rest-spring/src/main/java/pro/taskana/common/rest/ldap/LdapClient.java", "diffHunk": "@@ -34,26 +33,22 @@\n @Component\n public class LdapClient {\n \n-  static final String MISSING_CONFIGURATION_S =\n-      \"LdapClient was called but is not active due to missing configuration: %s \";\n-\n   private static final Logger LOGGER = LoggerFactory.getLogger(LdapClient.class);\n-\n   private static final String CN = \"cn\";\n \n+  private final Environment env;\n+  private final LdapTemplate ldapTemplate;\n   private boolean active = false;\n-\n-  @Autowired private Environment env;\n-\n-  @Autowired(required = false)\n-  private LdapTemplate ldapTemplate;\n-\n   private int minSearchForLength;\n-\n   private int maxNumberOfReturnedAccessIds;\n-\n   private String message;\n \n+  @Autowired", "originalCommit": "ab949aa2b067ee9ed20b22f05459099add7a282d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMDY0OA==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r445530648", "bodyText": "Just fyi: As of Spring 4.3, you no longer need to specify an explicit injection annotation in a single-constructor scenario. (meaning the @Autowired could be deleted here)", "author": "gitgoodjhe", "createdAt": "2020-06-25T12:47:59Z", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/TestConfiguration.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package pro.taskana;\n+\n+import javax.sql.DataSource;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.DependsOn;\n+import org.springframework.jdbc.datasource.DataSourceTransactionManager;\n+import org.springframework.transaction.PlatformTransactionManager;\n+\n+import pro.taskana.sampledata.SampleDataGenerator;\n+\n+@SpringBootApplication\n+@DependsOn(\"getTaskanaEngine\") // wait for schema to be created BEFORE inserting test data\n+public class TestConfiguration {\n+\n+  @Autowired", "originalCommit": "ab949aa2b067ee9ed20b22f05459099add7a282d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMDgzOQ==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r445530839", "bodyText": "Just fyi: As of Spring 4.3, you no longer need to specify an explicit injection annotation in a single-constructor scenario. (meaning the @Autowired could be deleted here)", "author": "gitgoodjhe", "createdAt": "2020-06-25T12:48:19Z", "path": "rest/taskana-rest-spring-example-boot/src/main/java/pro/taskana/rest/ExampleRestApplication.java", "diffHunk": "@@ -1,49 +1,30 @@\n package pro.taskana.rest;\n \n-import javax.annotation.PostConstruct;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.boot.SpringApplication;\n-import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n import org.springframework.context.annotation.ComponentScan;\n-import org.springframework.context.annotation.Import;\n import org.springframework.scheduling.annotation.EnableScheduling;\n \n-import pro.taskana.RestConfiguration;\n-import pro.taskana.jobs.TransactionalJobsConfiguration;\n import pro.taskana.sampledata.SampleDataGenerator;\n \n-/** Example Application showing the implementation of taskana-rest-spring. */\n-@SpringBootApplication\n+/** Example Application showing a minimal implementation of the taskana REST service. */\n @EnableScheduling\n-@ComponentScan(basePackages = \"pro.taskana\")\n-@SuppressWarnings(\"checkstyle:Indentation\")\n-@Import({\n-  ExampleRestConfiguration.class,\n-  TransactionalJobsConfiguration.class,\n-  RestConfiguration.class,\n-  WebMvcConfig.class\n-})\n+@EnableAutoConfiguration\n+@ComponentScan(\"pro.taskana\")\n public class ExampleRestApplication {\n \n-  private final SampleDataGenerator sampleDataGenerator;\n-\n-  @Value(\"${generateSampleData:true}\")\n-  public boolean generateSampleData;\n-\n   @Autowired", "originalCommit": "ab949aa2b067ee9ed20b22f05459099add7a282d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUzMTA3Mg==", "url": "https://github.com/Taskana/taskana/pull/1142#discussion_r445531072", "bodyText": "Just fyi: As of Spring 4.3, you no longer need to specify an explicit injection annotation in a single-constructor scenario. (meaning the @Autowired could be deleted here)", "author": "gitgoodjhe", "createdAt": "2020-06-25T12:48:46Z", "path": "rest/taskana-rest-spring-example-common/src/test/java/pro/taskana/CommonTestConfiguration.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package pro.taskana;\n+\n+import javax.sql.DataSource;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.DependsOn;\n+import org.springframework.jdbc.datasource.DataSourceTransactionManager;\n+import org.springframework.transaction.PlatformTransactionManager;\n+\n+import pro.taskana.sampledata.SampleDataGenerator;\n+\n+@SpringBootApplication\n+@DependsOn(\"getTaskanaEngine\") // wait for schema to be created BEFORE inserting test data\n+public class CommonTestConfiguration {\n+\n+  @Autowired", "originalCommit": "ab949aa2b067ee9ed20b22f05459099add7a282d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}