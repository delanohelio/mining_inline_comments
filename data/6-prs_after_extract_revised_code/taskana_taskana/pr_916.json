{"pr_number": 916, "pr_title": "TSK-1106 Make ClassificationSummaryResource attributes private", "pr_createdAt": "2020-02-11T14:13:49Z", "pr_url": "https://github.com/Taskana/taskana/pull/916", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY3NzYwMA==", "url": "https://github.com/Taskana/taskana/pull/916#discussion_r377677600", "bodyText": "Pls get rid of this", "author": "gitgoodjhe", "createdAt": "2020-02-11T14:44:13Z", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java", "diffHunk": "@@ -1,11 +1,8 @@\n package pro.taskana.rest;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertTrue;\n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.jupiter.api.Assertions.assertThrows;", "originalCommit": "b5061c79baf19a623d2c42e12623980139dd79c7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c032a507901fb95a82a324e9d8b32341323951b", "chunk": "diff --git a/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java b/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java\nindex 0f66ea84e..7a6b10d7d 100644\n--- a/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java\n+++ b/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java\n\n@@ -1,9 +1,8 @@\n package pro.taskana.rest;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n \n-import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.core.ParameterizedTypeReference;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4OTU0Ng==", "url": "https://github.com/Taskana/taskana/pull/916#discussion_r377689546", "bodyText": "We can substitute these Assertions.assertThrows cases with assertJ as follows:\nassertThatThrownBy(\n\n    () -> template.exchange(\n        restHelper.toUrl(Mapping.URL_CLASSIFICATIONS),\n        HttpMethod.POST,\n        new HttpEntity<>(newClassification, restHelper.getHeaders()),\n        ParameterizedTypeReference.forType(ClassificationResource.class)))\n    .isInstanceOf(HttpClientErrorException.class)\n    .extracting(ex ->((HttpClientErrorException) ex ).getStatusCode())\n      .isEqualTo(HttpStatus.BAD_REQUEST);", "author": "gitgoodjhe", "createdAt": "2020-02-11T15:01:37Z", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java", "diffHunk": "@@ -235,13 +234,13 @@ void testReturn400IfCreateClassificationWithIncompatibleParentIdAndKey() throws\n                     new HttpEntity<>(newClassification, restHelper.getHeaders()),\n                     ParameterizedTypeReference.forType(ClassificationResource.class)));\n \n-    assertNotNull(e);\n-    assertEquals(HttpStatus.BAD_REQUEST, e.getStatusCode());\n+    assertThat(e).isNotNull();", "originalCommit": "b5061c79baf19a623d2c42e12623980139dd79c7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c032a507901fb95a82a324e9d8b32341323951b", "chunk": "diff --git a/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java b/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java\nindex 0f66ea84e..7a6b10d7d 100644\n--- a/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java\n+++ b/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java\n\n@@ -224,18 +235,16 @@ class ClassificationControllerIntTest {\n             + \"\\\"type\\\":\\\"TASK\\\",\\\"parentId\\\":\\\"CLI:200000000000000000000000000000000015\\\",\"\n             + \"\\\"parentKey\\\":\\\"T2000\\\"}\";\n \n-    HttpClientErrorException e =\n-        Assertions.assertThrows(\n-            HttpClientErrorException.class,\n-            () ->\n-                template.exchange(\n-                    restHelper.toUrl(Mapping.URL_CLASSIFICATIONS),\n-                    HttpMethod.POST,\n-                    new HttpEntity<>(newClassification, restHelper.getHeaders()),\n-                    ParameterizedTypeReference.forType(ClassificationResource.class)));\n-\n-    assertThat(e).isNotNull();\n-    assertThat(HttpStatus.BAD_REQUEST).isEqualTo(e.getStatusCode());\n+    assertThatThrownBy(\n+      () ->\n+          template.exchange(\n+              restHelper.toUrl(Mapping.URL_CLASSIFICATIONS),\n+              HttpMethod.POST,\n+              new HttpEntity<>(newClassification, restHelper.getHeaders()),\n+              ParameterizedTypeReference.forType(ClassificationResource.class)))\n+        .isInstanceOf(HttpClientErrorException.class)\n+        .extracting(ex -> ((HttpClientErrorException) ex).getStatusCode())\n+        .isEqualTo(HttpStatus.BAD_REQUEST);\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4OTk2Nw==", "url": "https://github.com/Taskana/taskana/pull/916#discussion_r377689967", "bodyText": "see above", "author": "gitgoodjhe", "createdAt": "2020-02-11T15:02:15Z", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java", "diffHunk": "@@ -257,28 +256,28 @@ void testCreateClassificationWithClassificationIdReturnsError400() throws IOExce\n                     new HttpEntity<>(newClassification, restHelper.getHeaders()),\n                     ParameterizedTypeReference.forType(ClassificationResource.class)));\n \n-    assertNotNull(e);\n-    assertEquals(HttpStatus.BAD_REQUEST, e.getStatusCode());\n+    assertThat(e).isNotNull();", "originalCommit": "b5061c79baf19a623d2c42e12623980139dd79c7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c032a507901fb95a82a324e9d8b32341323951b", "chunk": "diff --git a/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java b/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java\nindex 0f66ea84e..7a6b10d7d 100644\n--- a/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java\n+++ b/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/ClassificationControllerIntTest.java\n\n@@ -246,18 +255,16 @@ class ClassificationControllerIntTest {\n             + \"\\\"domain\\\":\\\"DOMAIN_A\\\",\\\"key\\\":\\\"NEW_CLASS\\\",\"\n             + \"\\\"name\\\":\\\"new classification\\\",\\\"type\\\":\\\"TASK\\\"}\";\n \n-    HttpClientErrorException e =\n-        Assertions.assertThrows(\n-            HttpClientErrorException.class,\n-            () ->\n-                template.exchange(\n-                    restHelper.toUrl(Mapping.URL_CLASSIFICATIONS),\n-                    HttpMethod.POST,\n-                    new HttpEntity<>(newClassification, restHelper.getHeaders()),\n-                    ParameterizedTypeReference.forType(ClassificationResource.class)));\n-\n-    assertThat(e).isNotNull();\n-    assertThat(HttpStatus.BAD_REQUEST).isEqualTo(e.getStatusCode());\n+    assertThatThrownBy(\n+      () ->\n+          template.exchange(\n+              restHelper.toUrl(Mapping.URL_CLASSIFICATIONS),\n+              HttpMethod.POST,\n+              new HttpEntity<>(newClassification, restHelper.getHeaders()),\n+              ParameterizedTypeReference.forType(ClassificationResource.class)))\n+        .isInstanceOf(HttpClientErrorException.class)\n+        .extracting(ex -> ((HttpClientErrorException) ex).getStatusCode())\n+        .isEqualTo(HttpStatus.BAD_REQUEST);\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY5MTA4NA==", "url": "https://github.com/Taskana/taskana/pull/916#discussion_r377691084", "bodyText": "is this a formatter issue? same for the following identation differences", "author": "gitgoodjhe", "createdAt": "2020-02-11T15:04:04Z", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskControllerIntTest.java", "diffHunk": "@@ -251,21 +252,22 @@ void testGetAllTasksByWorkbasketIdWithinSingleIndefiniteDueTimeInterval() {\n     assertThat(response.getBody().getContent()).hasSize(6);\n   }\n \n+  @SuppressWarnings(\"checkstyle:Indentation\")\n   @Test\n   void testGetAllTasksByWorkbasketIdWithInvalidDueParamsCombination() {\n     assertThatThrownBy(\n-        () ->\n-          template.exchange(\n-            restHelper.toUrl(Mapping.URL_TASKS)\n-                + \"?workbasket-id=WBI:100000000000000000000000000000000001\"\n-                + \"&due=2020-01-22T09:44:47.453Z,,\"\n-                + \"2020-01-19T07:44:47.453Z,2020-01-19T19:44:47.453Z,\"\n-                + \",2020-01-18T09:44:47.453Z\"\n-                + \"&due-from=2020-01-19T07:44:47.453Z\"\n-                + \"&sort-by=planned\",\n-            HttpMethod.GET,\n-            restHelper.defaultRequest(),\n-            ParameterizedTypeReference.forType(TaskSummaryListResource.class)))\n+            () ->\n+                template.exchange(\n+                    restHelper.toUrl(Mapping.URL_TASKS)\n+                        + \"?workbasket-id=WBI:100000000000000000000000000000000001\"\n+                        + \"&due=2020-01-22T09:44:47.453Z,,\"\n+                        + \"2020-01-19T07:44:47.453Z,2020-01-19T19:44:47.453Z,\"\n+                        + \",2020-01-18T09:44:47.453Z\"\n+                        + \"&due-from=2020-01-19T07:44:47.453Z\"\n+                        + \"&sort-by=planned\",\n+                    HttpMethod.GET,\n+                    restHelper.defaultRequest(),\n+                    ParameterizedTypeReference.forType(TaskSummaryListResource.class)))", "originalCommit": "b5061c79baf19a623d2c42e12623980139dd79c7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c032a507901fb95a82a324e9d8b32341323951b", "chunk": "diff --git a/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskControllerIntTest.java b/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskControllerIntTest.java\nindex 2a05aa7ac..e40d4756a 100644\n--- a/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskControllerIntTest.java\n+++ b/rest/taskana-rest-spring/src/test/java/pro/taskana/rest/TaskControllerIntTest.java\n\n@@ -252,22 +251,21 @@ class TaskControllerIntTest {\n     assertThat(response.getBody().getContent()).hasSize(6);\n   }\n \n-  @SuppressWarnings(\"checkstyle:Indentation\")\n   @Test\n   void testGetAllTasksByWorkbasketIdWithInvalidDueParamsCombination() {\n     assertThatThrownBy(\n-            () ->\n-                template.exchange(\n-                    restHelper.toUrl(Mapping.URL_TASKS)\n-                        + \"?workbasket-id=WBI:100000000000000000000000000000000001\"\n-                        + \"&due=2020-01-22T09:44:47.453Z,,\"\n-                        + \"2020-01-19T07:44:47.453Z,2020-01-19T19:44:47.453Z,\"\n-                        + \",2020-01-18T09:44:47.453Z\"\n-                        + \"&due-from=2020-01-19T07:44:47.453Z\"\n-                        + \"&sort-by=planned\",\n-                    HttpMethod.GET,\n-                    restHelper.defaultRequest(),\n-                    ParameterizedTypeReference.forType(TaskSummaryListResource.class)))\n+        () ->\n+            template.exchange(\n+                restHelper.toUrl(Mapping.URL_TASKS)\n+                    + \"?workbasket-id=WBI:100000000000000000000000000000000001\"\n+                    + \"&due=2020-01-22T09:44:47.453Z,,\"\n+                    + \"2020-01-19T07:44:47.453Z,2020-01-19T19:44:47.453Z,\"\n+                    + \",2020-01-18T09:44:47.453Z\"\n+                    + \"&due-from=2020-01-19T07:44:47.453Z\"\n+                    + \"&sort-by=planned\",\n+                HttpMethod.GET,\n+                restHelper.defaultRequest(),\n+                ParameterizedTypeReference.forType(TaskSummaryListResource.class)))\n         .isInstanceOf(HttpClientErrorException.class)\n         .hasMessageContaining(\"400\");\n   }\n"}}, {"oid": "9c032a507901fb95a82a324e9d8b32341323951b", "url": "https://github.com/Taskana/taskana/commit/9c032a507901fb95a82a324e9d8b32341323951b", "message": "TSK-1106 Make ClassificationSummaryResource attributes private\n\nTSK-1106 Converted tests to AssertJ\n\nTSK-1106 Converted assertThrows to AssertJ\n\nTSK-1106 Removed suppress checkstyle for lambdas", "committedDate": "2020-02-12T11:13:53Z", "type": "commit"}]}