{"pr_number": 887, "pr_title": "TSK-1062: removed rawtype from MapTypeHandler", "pr_createdAt": "2020-01-29T19:39:03Z", "pr_url": "https://github.com/Taskana/taskana/pull/887", "timeline": [{"oid": "fb47534d055d4475b9b1290b70f2b865e208e5e8", "url": "https://github.com/Taskana/taskana/commit/fb47534d055d4475b9b1290b70f2b865e208e5e8", "message": "TSK-1062: removed rawtype from MapTypeHandler", "committedDate": "2020-01-29T19:37:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyOTI0NA==", "url": "https://github.com/Taskana/taskana/pull/887#discussion_r372829244", "bodyText": "Can we use optional here?\nI always aim to minimize nulls ;)", "author": "benjamineckstein", "createdAt": "2020-01-30T09:06:53Z", "path": "lib/taskana-core/src/main/java/pro/taskana/impl/persistence/MapTypeHandler.java", "diffHunk": "@@ -54,15 +55,16 @@ public Map getNullableResult(ResultSet rs, int columnIndex) throws SQLException\n   }\n \n   @Override\n-  public Map getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {\n+  public Map<String, Object> getNullableResult(CallableStatement cs, int columnIndex)", "originalCommit": "fb47534d055d4475b9b1290b70f2b865e208e5e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1MjE2Mw==", "url": "https://github.com/Taskana/taskana/pull/887#discussion_r373052163", "bodyText": "unfortunately we can't. We are extending the Mybatis TypeHandler class and are bound to its signature", "author": "mustaphazorgati", "createdAt": "2020-01-30T16:24:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyOTI0NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyOTg4Mw==", "url": "https://github.com/Taskana/taskana/pull/887#discussion_r372829883", "bodyText": "depending on map size ... this could be time consuming. is this a problem?", "author": "benjamineckstein", "createdAt": "2020-01-30T09:08:23Z", "path": "lib/taskana-core/src/main/java/pro/taskana/impl/persistence/MapTypeHandler.java", "diffHunk": "@@ -17,16 +17,16 @@\n  *\n  * @author EH\n  */\n-@SuppressWarnings(\"rawtypes\")\n-public class MapTypeHandler extends BaseTypeHandler<Map> {\n+public class MapTypeHandler extends BaseTypeHandler<Map<String, Object>> {\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(MapTypeHandler.class);\n \n   @Override\n-  public void setNonNullParameter(PreparedStatement ps, int i, Map parameter, JdbcType jdbcType)\n+  public void setNonNullParameter(\n+      PreparedStatement ps, int i, Map<String, Object> parameter, JdbcType jdbcType)\n       throws SQLException {\n     if (parameter != null && parameter.size() > 0) {\n-      LOGGER.debug(\"Input-Map before serializing: \", parameter);\n+      LOGGER.debug(\"Input-Map before serializing: {}\", parameter);", "originalCommit": "fb47534d055d4475b9b1290b70f2b865e208e5e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1MTM1Mg==", "url": "https://github.com/Taskana/taskana/pull/887#discussion_r373051352", "bodyText": "it's debug. Not production relevant.\n+ As soon as we get slf4j 2.0 we will use the lambda method and thus this will be no issue", "author": "mustaphazorgati", "createdAt": "2020-01-30T16:23:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyOTg4Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgzMDE4OA==", "url": "https://github.com/Taskana/taskana/pull/887#discussion_r372830188", "bodyText": "every suppressWarning that we can prevent / refactor is a win !! good job ;)", "author": "benjamineckstein", "createdAt": "2020-01-30T09:09:08Z", "path": "lib/taskana-core/src/main/java/pro/taskana/impl/persistence/MapTypeHandler.java", "diffHunk": "@@ -17,16 +17,16 @@\n  *\n  * @author EH\n  */\n-@SuppressWarnings(\"rawtypes\")", "originalCommit": "fb47534d055d4475b9b1290b70f2b865e208e5e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}