{"pr_number": 938, "pr_title": "TSK-1135 Removed JUnit 4 dependency in taskana-simplehistory-spring-test", "pr_createdAt": "2020-02-20T09:19:21Z", "pr_url": "https://github.com/Taskana/taskana/pull/938", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4NjgxNQ==", "url": "https://github.com/Taskana/taskana/pull/938#discussion_r381886815", "bodyText": "Maybe we can add a fitting message to the fail like \"Invalid filter is used\" instead of an empty string. Also I'm not sure if we need this at all, can't we just use the assertThatThrownBy-pattern that we used in other cases? Pls consult with @benjamineckstein", "author": "gitgoodjhe", "createdAt": "2020-02-20T09:43:35Z", "path": "history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java", "diffHunk": "@@ -129,10 +126,10 @@ public void testThrowsExceptionIfInvalidFilterIsUsed() {\n           HttpMethod.GET,\n           request,\n           ParameterizedTypeReference.forType(TaskHistoryEventListResource.class));\n-      fail();\n+      fail(\"\");", "originalCommit": "fdd46d539cdcf595b246540b3092feb8f6bf8a52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNTkzOA==", "url": "https://github.com/Taskana/taskana/pull/938#discussion_r381905938", "bodyText": "Yes, we should.", "author": "mustaphazorgati", "createdAt": "2020-02-20T10:17:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4NjgxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "4e7b077b11db00fe8ec644cd2cebf9399f7ce677", "chunk": "diff --git a/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java b/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java\nindex cb188ce52..9828d9fec 100644\n--- a/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java\n+++ b/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java\n\n@@ -120,34 +120,34 @@ public class TaskHistoryEventControllerIntTest {\n \n   @Test\n   public void testThrowsExceptionIfInvalidFilterIsUsed() {\n-    try {\n-      template.exchange(\n-          server + port + \"/api/v1/task-history-event?invalid=BPI:01\",\n-          HttpMethod.GET,\n-          request,\n-          ParameterizedTypeReference.forType(TaskHistoryEventListResource.class));\n-      fail(\"\");\n-    } catch (HttpClientErrorException e) {\n-      assertThat(e.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);\n-      assertThat(e.getResponseBodyAsString().contains(\"[invalid]\")).isTrue();\n-    }\n+    assertThatThrownBy(\n+        () ->\n+            template.exchange(\n+                server + port + \"/api/v1/task-history-event?invalid=BPI:01\",\n+                HttpMethod.GET,\n+                request,\n+                ParameterizedTypeReference.forType(TaskHistoryEventListResource.class)))\n+        .isInstanceOf(HttpClientErrorException.class)\n+        .hasMessageContaining(\"[invalid]\")\n+        .extracting(ex -> ((HttpClientErrorException) ex).getStatusCode())\n+        .isEqualTo(HttpStatus.BAD_REQUEST);\n   }\n \n   @Test\n   public void testGetHistoryEventOfDate() {\n     String currentTime = LocalDateTime.now().toString();\n-\n-    try {\n-      template.exchange(\n-          server + port + \"/api/v1/task-history-event?created=\" + currentTime,\n-          HttpMethod.GET,\n-          request,\n-          ParameterizedTypeReference.forType(TaskHistoryEventListResource.class));\n-      fail(\"\");\n-    } catch (HttpClientErrorException e) {\n-      assertThat(e.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);\n-      assertThat(e.getResponseBodyAsString().contains(currentTime)).isTrue();\n-    }\n+    final String finalCurrentTime = currentTime;\n+    assertThatThrownBy(\n+        () ->\n+            template.exchange(\n+                server + port + \"/api/v1/task-history-event?created=\" + finalCurrentTime,\n+                HttpMethod.GET,\n+                request,\n+                ParameterizedTypeReference.forType(TaskHistoryEventListResource.class)))\n+        .isInstanceOf(HttpClientErrorException.class)\n+        .hasMessageContaining(currentTime)\n+        .extracting(ex -> ((HttpClientErrorException) ex).getStatusCode())\n+        .isEqualTo(HttpStatus.BAD_REQUEST);\n \n     // correct Format 'yyyy-MM-dd'\n     currentTime = currentTime.substring(0, 10);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4ODY0MA==", "url": "https://github.com/Taskana/taskana/pull/938#discussion_r381888640", "bodyText": "Maybe we should name this beforeEach to be consitent with the annotation change", "author": "gitgoodjhe", "createdAt": "2020-02-20T09:46:45Z", "path": "history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java", "diffHunk": "@@ -64,7 +61,7 @@\n \n   @Autowired private DataSource dataSource;\n \n-  @Before\n+  @BeforeEach\n   public void before() {", "originalCommit": "fdd46d539cdcf595b246540b3092feb8f6bf8a52", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4e7b077b11db00fe8ec644cd2cebf9399f7ce677", "chunk": "diff --git a/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java b/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java\nindex cb188ce52..9828d9fec 100644\n--- a/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java\n+++ b/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java\n\n@@ -62,7 +62,7 @@ public class TaskHistoryEventControllerIntTest {\n   @Autowired private DataSource dataSource;\n \n   @BeforeEach\n-  public void before() {\n+  public void beforeEach() {\n     template = getRestTemplate();\n     SampleDataGenerator sampleDataGenerator;\n     try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5MDIzMg==", "url": "https://github.com/Taskana/taskana/pull/938#discussion_r381890232", "bodyText": "see above", "author": "gitgoodjhe", "createdAt": "2020-02-20T09:49:31Z", "path": "history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java", "diffHunk": "@@ -146,10 +143,10 @@ public void testGetHistoryEventOfDate() {\n           HttpMethod.GET,\n           request,\n           ParameterizedTypeReference.forType(TaskHistoryEventListResource.class));\n-      fail();\n+      fail(\"\");", "originalCommit": "fdd46d539cdcf595b246540b3092feb8f6bf8a52", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4e7b077b11db00fe8ec644cd2cebf9399f7ce677", "chunk": "diff --git a/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java b/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java\nindex cb188ce52..9828d9fec 100644\n--- a/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java\n+++ b/history/taskana-simplehistory-spring-test/src/test/java/pro/taskana/TaskHistoryEventControllerIntTest.java\n\n@@ -120,34 +120,34 @@ public class TaskHistoryEventControllerIntTest {\n \n   @Test\n   public void testThrowsExceptionIfInvalidFilterIsUsed() {\n-    try {\n-      template.exchange(\n-          server + port + \"/api/v1/task-history-event?invalid=BPI:01\",\n-          HttpMethod.GET,\n-          request,\n-          ParameterizedTypeReference.forType(TaskHistoryEventListResource.class));\n-      fail(\"\");\n-    } catch (HttpClientErrorException e) {\n-      assertThat(e.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);\n-      assertThat(e.getResponseBodyAsString().contains(\"[invalid]\")).isTrue();\n-    }\n+    assertThatThrownBy(\n+        () ->\n+            template.exchange(\n+                server + port + \"/api/v1/task-history-event?invalid=BPI:01\",\n+                HttpMethod.GET,\n+                request,\n+                ParameterizedTypeReference.forType(TaskHistoryEventListResource.class)))\n+        .isInstanceOf(HttpClientErrorException.class)\n+        .hasMessageContaining(\"[invalid]\")\n+        .extracting(ex -> ((HttpClientErrorException) ex).getStatusCode())\n+        .isEqualTo(HttpStatus.BAD_REQUEST);\n   }\n \n   @Test\n   public void testGetHistoryEventOfDate() {\n     String currentTime = LocalDateTime.now().toString();\n-\n-    try {\n-      template.exchange(\n-          server + port + \"/api/v1/task-history-event?created=\" + currentTime,\n-          HttpMethod.GET,\n-          request,\n-          ParameterizedTypeReference.forType(TaskHistoryEventListResource.class));\n-      fail(\"\");\n-    } catch (HttpClientErrorException e) {\n-      assertThat(e.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);\n-      assertThat(e.getResponseBodyAsString().contains(currentTime)).isTrue();\n-    }\n+    final String finalCurrentTime = currentTime;\n+    assertThatThrownBy(\n+        () ->\n+            template.exchange(\n+                server + port + \"/api/v1/task-history-event?created=\" + finalCurrentTime,\n+                HttpMethod.GET,\n+                request,\n+                ParameterizedTypeReference.forType(TaskHistoryEventListResource.class)))\n+        .isInstanceOf(HttpClientErrorException.class)\n+        .hasMessageContaining(currentTime)\n+        .extracting(ex -> ((HttpClientErrorException) ex).getStatusCode())\n+        .isEqualTo(HttpStatus.BAD_REQUEST);\n \n     // correct Format 'yyyy-MM-dd'\n     currentTime = currentTime.substring(0, 10);\n"}}, {"oid": "4e7b077b11db00fe8ec644cd2cebf9399f7ce677", "url": "https://github.com/Taskana/taskana/commit/4e7b077b11db00fe8ec644cd2cebf9399f7ce677", "message": "TSK-1135 Removed JUnit 4 dependency in taskana-simplehistory-spring-test\n\nTSK-1135 Changed tests to assertThatThrownBy tests", "committedDate": "2020-02-20T12:16:24Z", "type": "commit"}]}