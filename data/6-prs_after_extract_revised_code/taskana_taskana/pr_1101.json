{"pr_number": 1101, "pr_title": "TSK-1280: Sort options for task comments in REST-API", "pr_createdAt": "2020-06-04T12:42:26Z", "pr_url": "https://github.com/Taskana/taskana/pull/1101", "timeline": [{"oid": "2585b3d0e4576029caea46af0d1446ea18198b1f", "url": "https://github.com/Taskana/taskana/commit/2585b3d0e4576029caea46af0d1446ea18198b1f", "message": "TSK-1280: Sort options for task comments in REST-API", "committedDate": "2020-06-04T12:25:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2MDg1NA==", "url": "https://github.com/Taskana/taskana/pull/1101#discussion_r435560854", "bodyText": "fyi: This can be replaces with isSorted()", "author": "mustaphazorgati", "createdAt": "2020-06-04T21:23:22Z", "path": "rest/taskana-rest-spring/src/test/java/pro/taskana/task/rest/TaskCommentControllerIntTest.java", "diffHunk": "@@ -83,6 +88,85 @@ void should_FailToReturnTaskComments_When_TaskIstNotVisible() {\n         .isEqualTo(HttpStatus.FORBIDDEN);\n   }\n \n+  @Test\n+  void should_ReturnSortedAndOrederedTaskCommentsSortedByModified_When_UsingSortAndOrderParams() {\n+\n+    String url =\n+        restHelper.toUrl(Mapping.URL_TASK_GET_POST_COMMENTS,\n+            \"TKI:000000000000000000000000000000000000\");\n+\n+    ResponseEntity<TaskanaPagedModel<TaskCommentRepresentationModel>>\n+        getTaskCommentsSortedByModifiedOrderedByDescendingResponse = template.exchange(\n+        url + \"?sort-by=modified&order=desc\",\n+        HttpMethod.GET,\n+        new HttpEntity<String>(restHelper.getHeadersAdmin()),\n+        TASK_COMMENT_PAGE_MODEL_TYPE);\n+\n+    assertThat(getTaskCommentsSortedByModifiedOrderedByDescendingResponse.getBody().getContent())\n+        .hasSize(3)\n+        .extracting(TaskCommentRepresentationModel::getModified)\n+        .isSortedAccordingTo(Comparator.reverseOrder());\n+\n+    ResponseEntity<TaskanaPagedModel<TaskCommentRepresentationModel>>\n+        getTaskCommentsSortedByModifiedOrderedByAscendingResponse = template.exchange(\n+        url + \"?sort-by=modified\",\n+        HttpMethod.GET,\n+        new HttpEntity<String>(restHelper.getHeadersAdmin()),\n+        TASK_COMMENT_PAGE_MODEL_TYPE);\n+\n+    assertThat(getTaskCommentsSortedByModifiedOrderedByAscendingResponse.getBody().getContent())\n+        .hasSize(3)\n+        .extracting(TaskCommentRepresentationModel::getModified)\n+        .isSortedAccordingTo(Comparator.naturalOrder());", "originalCommit": "2585b3d0e4576029caea46af0d1446ea18198b1f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}