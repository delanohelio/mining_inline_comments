{"pr_number": 759, "pr_title": "Added PowerSummaryTest - (Task #746)", "pr_createdAt": "2020-10-06T15:13:43Z", "pr_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759", "timeline": [{"oid": "8a394b8b33f495f6d71750b6187656f8aa6215d8", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8a394b8b33f495f6d71750b6187656f8aa6215d8", "message": "Added PowerSummaryTest - (Task #746)\n\nCreated a Power Summary above two Power Equipments. Compared the\nexpected values with test values.\nAdded PowerSummaryTest to AllTests\n\n---\nTask #746: SWTBot Test Cases for Power Summary", "committedDate": "2020-10-06T14:40:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NDQxNw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500794417", "bodyText": "We also had to a new concept in another test case and decided to add it in ASwtBotTestCase instead of the concrete test case. Not sure if it makes sense for this concept, because I don't know if there are other UseCases we could run SWT tests for with this concept.", "author": "JAmmermann-DLR", "createdAt": "2020-10-07T07:28:55Z", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");", "originalCommit": "8a394b8b33f495f6d71750b6187656f8aa6215d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg0MTM5OA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500841398", "bodyText": "I would rather put the core concepts ( tests / core / ps ) into ATestCase but not this concept as it is really about some domain content... And what benefit would we have if it would be in the ATestCase?", "author": "franzTobiasDLR", "createdAt": "2020-10-07T08:45:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NDQxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkwMzgzOA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500903838", "bodyText": "Ok then we leave it there", "author": "JAmmermann-DLR", "createdAt": "2020-10-07T10:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NDQxNw=="}], "type": "inlineReview", "revised_code": {"commit": "4b93c79111c8439f7c8b97639a697145280de774", "chunk": "diff --git a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\nindex 7c2bbadef..5af291e81 100644\n--- a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n+++ b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n\n@@ -80,11 +80,11 @@ public class PowerSummaryTest extends ASwtBotTestCase {\n \t\t\n \t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n \t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n-\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\tsave();\n \t\t\n \t\tpowerSummary = addElement(PowerSummary.class, conceptPower, configurationTree);\n \t\topenEditor(powerSummary);\n-\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\tsave();\n \t}\n \t\n \t@Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NTc0Mw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500795743", "bodyText": "Can we remove the empty Strings?", "author": "JAmmermann-DLR", "createdAt": "2020-10-07T07:31:12Z", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");", "originalCommit": "8a394b8b33f495f6d71750b6187656f8aa6215d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg0MTY2OQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500841669", "bodyText": "Well, it's the simplest way that I know how to convert the double values to strings...", "author": "franzTobiasDLR", "createdAt": "2020-10-07T08:45:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NTc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkwNDI3MQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500904271", "bodyText": "Sorry, you are right", "author": "JAmmermann-DLR", "createdAt": "2020-10-07T10:26:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NTc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1NzYyOA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r501257628", "bodyText": "I actually agree that using + \"\" to convert to String isnt the nicest way.\nI would suggest String.valueOf(AOCS_POWER).  It may be a little bit longer in terms of number of characters, but this makes it really clear for the reader whats being done.", "author": "SaMuellerDLR", "createdAt": "2020-10-07T19:28:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NTc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ1Njg3Mg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r501456872", "bodyText": "Good idea", "author": "Anna-Lena-DLR", "createdAt": "2020-10-08T05:29:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NTc0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "4b93c79111c8439f7c8b97639a697145280de774", "chunk": "diff --git a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\nindex 7c2bbadef..5af291e81 100644\n--- a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n+++ b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n\n@@ -80,11 +80,11 @@ public class PowerSummaryTest extends ASwtBotTestCase {\n \t\t\n \t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n \t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n-\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\tsave();\n \t\t\n \t\tpowerSummary = addElement(PowerSummary.class, conceptPower, configurationTree);\n \t\topenEditor(powerSummary);\n-\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\tsave();\n \t}\n \t\n \t@Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NTkyNg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500795926", "bodyText": "Also remove empty Strings", "author": "JAmmermann-DLR", "createdAt": "2020-10-07T07:31:34Z", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");\n+\n+\t\telementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration2, \"DataHandling\");\n+\t\t\n+\t\tpowerEquipment2 = addElement(PowerEquipment.class, conceptPower, elementConfiguration2);\n+\t\topenEditor(powerEquipment2);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");", "originalCommit": "8a394b8b33f495f6d71750b6187656f8aa6215d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4b93c79111c8439f7c8b97639a697145280de774", "chunk": "diff --git a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\nindex 7c2bbadef..5af291e81 100644\n--- a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n+++ b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n\n@@ -80,11 +80,11 @@ public class PowerSummaryTest extends ASwtBotTestCase {\n \t\t\n \t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n \t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n-\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\tsave();\n \t\t\n \t\tpowerSummary = addElement(PowerSummary.class, conceptPower, configurationTree);\n \t\topenEditor(powerSummary);\n-\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\tsave();\n \t}\n \t\n \t@Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5Njk0Nw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500796947", "bodyText": "I think we have a save function in ASwtBotTestCase we could call instead?", "author": "JAmmermann-DLR", "createdAt": "2020-10-07T07:33:26Z", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");\n+\n+\t\telementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration2, \"DataHandling\");\n+\t\t\n+\t\tpowerEquipment2 = addElement(PowerEquipment.class, conceptPower, elementConfiguration2);\n+\t\topenEditor(powerEquipment2);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n+\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());", "originalCommit": "8a394b8b33f495f6d71750b6187656f8aa6215d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4b93c79111c8439f7c8b97639a697145280de774", "chunk": "diff --git a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\nindex 7c2bbadef..5af291e81 100644\n--- a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n+++ b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n\n@@ -80,11 +80,11 @@ public class PowerSummaryTest extends ASwtBotTestCase {\n \t\t\n \t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n \t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n-\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\tsave();\n \t\t\n \t\tpowerSummary = addElement(PowerSummary.class, conceptPower, configurationTree);\n \t\topenEditor(powerSummary);\n-\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\tsave();\n \t}\n \t\n \t@Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NzA2Nw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500797067", "bodyText": "Same as above", "author": "JAmmermann-DLR", "createdAt": "2020-10-07T07:33:37Z", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");\n+\n+\t\telementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration2, \"DataHandling\");\n+\t\t\n+\t\tpowerEquipment2 = addElement(PowerEquipment.class, conceptPower, elementConfiguration2);\n+\t\topenEditor(powerEquipment2);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n+\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\t\n+\t\tpowerSummary = addElement(PowerSummary.class, conceptPower, configurationTree);\n+\t\topenEditor(powerSummary);\n+\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());", "originalCommit": "8a394b8b33f495f6d71750b6187656f8aa6215d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4b93c79111c8439f7c8b97639a697145280de774", "chunk": "diff --git a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\nindex 7c2bbadef..5af291e81 100644\n--- a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n+++ b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n\n@@ -80,11 +80,11 @@ public class PowerSummaryTest extends ASwtBotTestCase {\n \t\t\n \t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n \t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n-\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\tsave();\n \t\t\n \t\tpowerSummary = addElement(PowerSummary.class, conceptPower, configurationTree);\n \t\topenEditor(powerSummary);\n-\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\tsave();\n \t}\n \t\n \t@Test\n"}}, {"oid": "4b93c79111c8439f7c8b97639a697145280de774", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4b93c79111c8439f7c8b97639a697145280de774", "message": "Use save() from ASwtBotTestCase - (Task #746)\n\n\n\n---\nTask #746: SWTBot Test Cases for Power Summary", "committedDate": "2020-10-07T09:15:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI2MDQxMw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r501260413", "bodyText": "If we open the powerSummary I think we can use the SWTBot API to do the assertion with something like this:\nassertText(expectedMinPower, bot.textWithLabel(PowerSummary.PROPERTY_MINPOWER));\n(or something similar)\nIn general it looks a bit weird that the before part opens the PowerSummary editor and then this test case opens the configuration tree editor.", "author": "SaMuellerDLR", "createdAt": "2020-10-07T19:33:08Z", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");\n+\n+\t\telementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration2, \"DataHandling\");\n+\t\t\n+\t\tpowerEquipment2 = addElement(PowerEquipment.class, conceptPower, elementConfiguration2);\n+\t\topenEditor(powerEquipment2);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n+\t\tsave();\n+\t\t\n+\t\tpowerSummary = addElement(PowerSummary.class, conceptPower, configurationTree);\n+\t\topenEditor(powerSummary);\n+\t\tsave();\n+\t}\n+\t\n+\t@Test\n+\tpublic void calculationsForPowerSummaryTest() {\n+\t\topenEditor(configurationTree);\n+\t\tSWTBotTable allPropertyTable = getSWTBotTable(configurationTree, \"Section for: PowerSummary\");\n+\t\tString minPower = allPropertyTable.getTableItem(0).getText(2);\n+\t\tfinal String expectedMinPower = AOCS_POWER + DATA_HANDLING_POWER + \"00 [W]\";\n+\t\tassertEquals(expectedMinPower, minPower);", "originalCommit": "4b93c79111c8439f7c8b97639a697145280de774", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ2MDMwNA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r501460304", "bodyText": "Ah ok, I thought that I was supposed to test, if the power summary in the configuration tree editor is showing the correct numbers.", "author": "Anna-Lena-DLR", "createdAt": "2020-10-08T05:41:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI2MDQxMw=="}], "type": "inlineReview", "revised_code": {"commit": "81cf685f635deec0a78b981f6435ef6862808aa9", "chunk": "diff --git a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\nindex 5af291e81..a34c780d8 100644\n--- a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n+++ b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n\n@@ -40,17 +40,15 @@ public class PowerSummaryTest extends ASwtBotTestCase {\n \n \tprivate SWTBotTreeItem powerEquipment1;\n \tprivate SWTBotTreeItem powerEquipment2;\n-\tprivate SWTBotTreeItem powerSummary;\n \n \tprivate Concept conceptPower;\n-\n \t\n \t@Before\n \tpublic void before() throws Exception {\n \t\tsuper.before();\n \t\t//create necessary items for the test\n \t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n-\t\t\n+\n \t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n \n \t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI2MTQwNw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r501261407", "bodyText": "Why do we need this save here?\nWould it not be sufficient to save at the end of the test setup?", "author": "SaMuellerDLR", "createdAt": "2020-10-07T19:34:58Z", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");\n+\n+\t\telementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration2, \"DataHandling\");\n+\t\t\n+\t\tpowerEquipment2 = addElement(PowerEquipment.class, conceptPower, elementConfiguration2);\n+\t\topenEditor(powerEquipment2);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n+\t\tsave();", "originalCommit": "4b93c79111c8439f7c8b97639a697145280de774", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ1ODk2NA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r501458964", "bodyText": "You're right", "author": "Anna-Lena-DLR", "createdAt": "2020-10-08T05:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI2MTQwNw=="}], "type": "inlineReview", "revised_code": {"commit": "81cf685f635deec0a78b981f6435ef6862808aa9", "chunk": "diff --git a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\nindex 5af291e81..a34c780d8 100644\n--- a/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n+++ b/de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java\n\n@@ -40,17 +40,15 @@ public class PowerSummaryTest extends ASwtBotTestCase {\n \n \tprivate SWTBotTreeItem powerEquipment1;\n \tprivate SWTBotTreeItem powerEquipment2;\n-\tprivate SWTBotTreeItem powerSummary;\n \n \tprivate Concept conceptPower;\n-\n \t\n \t@Before\n \tpublic void before() throws Exception {\n \t\tsuper.before();\n \t\t//create necessary items for the test\n \t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n-\t\t\n+\n \t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n \n \t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n"}}, {"oid": "81cf685f635deec0a78b981f6435ef6862808aa9", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/81cf685f635deec0a78b981f6435ef6862808aa9", "message": "Use final variables for table columns - (Task #746)\n\n& get rid of unnecessary code\n\n---\nTask #746: SWTBot Test Cases for Power Summary", "committedDate": "2020-10-09T07:49:31Z", "type": "commit"}]}