{"pr_number": 742, "pr_title": "Transform SEIs from/to JSON", "pr_createdAt": "2020-09-30T13:41:08Z", "pr_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742", "timeline": [{"oid": "40064b104c3e06b61d802c5e1755cd38bbfd57f6", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/40064b104c3e06b61d802c5e1755cd38bbfd57f6", "message": "Add TestStructuralElementInstanceTest - (Task #725)\n\n- Add methods and annotations to ABeanStructuralElementInstance\n- Refactor ATypeInstanceAdapter to work on IUuids\n- Add ABeanCategoryAssignmentAdapter and\nNotAbstractBeanCategoryAssignment classes\n- Add test resources\n\n---\nTask #725: Transform SEIs, Concepts and Disciplines from/to JSON", "committedDate": "2020-09-18T09:40:31Z", "type": "commit"}, {"oid": "72ca43ddf42732687b6b9f44673e1f81251255ec", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/72ca43ddf42732687b6b9f44673e1f81251255ec", "message": "Also un-/marshall parent SEI - (Task #725)\n\n- Add an adapter for SEIs\n- Add the adapter to the JAXBUtility\n- Remove old test case and resource\n- Update test case, also check idempotence\n\n---\nTask #725: Transform SEIs, Concepts and Disciplines from/to JSON", "committedDate": "2020-09-24T11:04:53Z", "type": "commit"}, {"oid": "36c889589573d51c3bf4dae1926fff34536e546e", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/36c889589573d51c3bf4dae1926fff34536e546e", "message": "Rename TypeInstanceAdapter to IUuidAdapter - (Task #725)\n\nBecause it now works on IUuids so it can be reused for the SEIs.\n\n---\nTask #725: Transform SEIs, Concepts and Disciplines from/to JSON", "committedDate": "2020-09-24T11:23:13Z", "type": "commit"}, {"oid": "4c30069ff9cd5205737d380cb14b3ca60d04d983", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4c30069ff9cd5205737d380cb14b3ca60d04d983", "message": "Add new methods to IBeanStructuralElementInstance - (Task #725)\n\n---\nTask #725: Transform SEIs, Concepts and Disciplines from/to JSON", "committedDate": "2020-09-24T11:42:56Z", "type": "commit"}, {"oid": "8d9d0398a114467c55fd6e3c6e250087bf530057", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8d9d0398a114467c55fd6e3c6e250087bf530057", "message": "Add test cases for the new Adapters - (Task #725)\n\n- Add test cases for ABeanStructuralElementAdapter and\nACategoryAssignmentAdapter\n- Add them to all tests\n- Minor changes in ABeanCateogryAssignmentAdapter\n\n---\nTask #725: Transform SEIs, Concepts and Disciplines from/to JSON", "committedDate": "2020-09-28T09:11:45Z", "type": "commit"}, {"oid": "7c4360202b1d37cc5dfde3485bf612b81f8a459d", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/7c4360202b1d37cc5dfde3485bf612b81f8a459d", "message": "Add test case for NotAbstractBeanCategoryAssignment - (Task #725)\n\n---\nTask #725: Transform SEIs, Concepts and Disciplines from/to JSON", "committedDate": "2020-09-28T09:29:19Z", "type": "commit"}, {"oid": "20fcbce2ff5e1e815f239d7bc9838d69ee5c5f0b", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/20fcbce2ff5e1e815f239d7bc9838d69ee5c5f0b", "message": "Remove adapter test redundancy - (Task #725)\n\n- Add AUuidAdapterTest and use it in IUuidAdapterTest,\nABeanObjectAdapterTest and ABeanStructuralElementInstanceTest\n\n---\nTask #725: Transform SEIs, Concepts and Disciplines from/to JSON", "committedDate": "2020-09-28T10:58:08Z", "type": "commit"}, {"oid": "d6a1d6018dd8e52365336147f6a21195b16dba7f", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d6a1d6018dd8e52365336147f6a21195b16dba7f", "message": "Merge branch 'development' into feature/task_725-Transform_SEIs,_Conce", "committedDate": "2020-09-30T13:01:36Z", "type": "commit"}, {"oid": "cac87caf321fd9ea3f775272878fe736680a7745", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/cac87caf321fd9ea3f775272878fe736680a7745", "message": "Use BeanCategoryAssignment in ABeanSEI - (Task #725)\n\nSo we don't have to use an adapter for the ABeanCategoryAssignment, and\ncan delete:\n- ABeanCategoryAssignmentAdapter and test case\n- NotAbstractBeanCategoryAssignment and test case\n\n---\nTask #725: Transform SEIs from/to JSON", "committedDate": "2020-09-30T13:25:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNDI2NQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r499524265", "bodyText": "Why do we need the prop order? I thought the XmlID tag makes the structuralElementInstance property first in line?", "author": "SaMuellerDLR", "createdAt": "2020-10-05T11:20:11Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -38,6 +52,10 @@\n  * @author fisc_ph\r\n  *\r\n  */\r\n+@XmlAccessorType(XmlAccessType.NONE)\r\n+@XmlRootElement\r\n+// Ensure that the sei (by uuid) gets unmarshalled first\r\n+@XmlType(propOrder = {\"structuralElementInstance\", \"name\", \"parentSeiBean\", \"categoryAssignments\", \"children\", \"superSeis\"})\r", "originalCommit": "cac87caf321fd9ea3f775272878fe736680a7745", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA4MTQwNQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r500081405", "bodyText": "Good question, I know for a fact that it doesn't work if I delete that line atm. But I will investigate it.", "author": "JAmmermann-DLR", "createdAt": "2020-10-06T08:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNDI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAzMTU2OA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501031568", "bodyText": "Ok so I looked into it and the documentation says nothing about changing the order if using @XmlID, instead it can be used together with @XmlIDREF to model reference and containment.\nSo for testing I uncommented the Annotation in ABeanObject and it didn't have any effect. The reason that it gets unmarshalled first in ABeanObject actually is the naming of the method: \"getATypeInstance\" which is handled as \"aTypeInstance\" field and so is first alphabetically ordered. So we could either rename the method or use the propOrder (for which all properties have to be listed). FYI: the only available order are alphabetically or unordered, so this won't help either.", "author": "JAmmermann-DLR", "createdAt": "2020-10-07T13:54:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNDI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MTc3MA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501571770", "bodyText": "So i removed the @XmlID annotations", "author": "JAmmermann-DLR", "createdAt": "2020-10-08T09:20:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNDI2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\nindex 0afb1b870..54ae9df20 100644\n--- a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n+++ b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n\n@@ -55,7 +54,7 @@ import de.dlr.sc.virsat.model.ecore.VirSatEcoreUtil;\n @XmlAccessorType(XmlAccessType.NONE)\n @XmlRootElement\n // Ensure that the sei (by uuid) gets unmarshalled first\n-@XmlType(propOrder = {\"structuralElementInstance\", \"name\", \"parentSeiBean\", \"categoryAssignments\", \"children\", \"superSeis\"})\n+@XmlType(propOrder = {\"structuralElementInstance\", \"name\", \"parent\", \"categoryAssignments\", \"children\", \"superSeis\"})\n public abstract class ABeanStructuralElementInstance implements IBeanStructuralElementInstance {\n \n \tprotected StructuralElementInstance sei;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNzM0NQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r499527345", "bodyText": "There seems to be some inconsistency between using the abstract classes and the generic classes.\nE.g. the getChildren uses the abstract class for seis and the getCategoryAssignments uses the generic class.", "author": "SaMuellerDLR", "createdAt": "2020-10-05T11:25:58Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +131,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r", "originalCommit": "cac87caf321fd9ea3f775272878fe736680a7745", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MTk2Mg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501571962", "bodyText": "I added comments, why we do this", "author": "JAmmermann-DLR", "createdAt": "2020-10-08T09:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNzM0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3MjQxNg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508372416", "bodyText": "I don't see the comments.", "author": "PhilMFischer", "createdAt": "2020-10-20T10:03:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNzM0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "57fd5e5ecd9ca565bb86a20780fc1518a405d76a", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\nindex 0afb1b870..c7b5e4a1a 100644\n--- a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n+++ b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n\n@@ -133,7 +130,7 @@ public abstract class ABeanStructuralElementInstance implements IBeanStructuralE\n \t\n \t@Override\n \tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\n-\t\tArrayList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\n+\t\tList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\n \t\t\n \t\tfor (CategoryAssignment ca : sei.getCategoryAssignments()) {\n \t\t\tBeanCategoryAssignment bean = new BeanCategoryAssignment();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyODExNA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r499528114", "bodyText": "Maybe just getParent / setParent ?", "author": "SaMuellerDLR", "createdAt": "2020-10-05T11:27:21Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -191,6 +283,8 @@ public String getUuid() {\n \t}\r\n \r\n \t@Override\r\n+\t@XmlElement(name = \"parent\")\r\n+\t@XmlJavaTypeAdapter(ABeanStructuralElementInstanceAdapter.class)\r\n \tpublic BeanStructuralElementInstance getParentSeiBean() {\r", "originalCommit": "cac87caf321fd9ea3f775272878fe736680a7745", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MjA2Mg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501572062", "bodyText": "Yes I renamed it", "author": "JAmmermann-DLR", "createdAt": "2020-10-08T09:20:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyODExNA=="}], "type": "inlineReview", "revised_code": {"commit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\nindex 0afb1b870..54ae9df20 100644\n--- a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n+++ b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n\n@@ -285,7 +283,7 @@ public abstract class ABeanStructuralElementInstance implements IBeanStructuralE\n \t@Override\n \t@XmlElement(name = \"parent\")\n \t@XmlJavaTypeAdapter(ABeanStructuralElementInstanceAdapter.class)\n-\tpublic BeanStructuralElementInstance getParentSeiBean() {\n+\tpublic BeanStructuralElementInstance getParent() {\n \t\tStructuralElementInstance parentSei = VirSatEcoreUtil.getEContainerOfClass(sei, StructuralElementInstance.class);\n \t\tif (parentSei != null) {\n \t\t\treturn new BeanStructuralElementInstance(parentSei);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyODgyMg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r499528822", "bodyText": "Using the abstract bean class in the interface declaration seems weird to me... Maybe we can consistently use the IBeanStructuralElementInstance everywhere?", "author": "SaMuellerDLR", "createdAt": "2020-10-05T11:28:37Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/IBeanStructuralElementInstance.java", "diffHunk": "@@ -104,6 +105,18 @@\n \t */\r\n \t<SEI_TYPE extends IBeanStructuralElementInstance> List<SEI_TYPE> getChildren(Class<SEI_TYPE> beanSeiClazz);\r\n \t\r\n+\t/**\r\n+\t * This method hands back all child Bean wrapped StructuralElementInstances of the abstract type ABeanStructuralElementInstance\r\n+\t * @return all children which could be found in the current Bean SEI\r\n+\t */\r\n+\tList<ABeanStructuralElementInstance> getChildren();\r", "originalCommit": "cac87caf321fd9ea3f775272878fe736680a7745", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MjI0Mg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501572242", "bodyText": "As we talked about, we can't easily", "author": "JAmmermann-DLR", "createdAt": "2020-10-08T09:20:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyODgyMg=="}], "type": "inlineReview", "revised_code": {"commit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/IBeanStructuralElementInstance.java b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/IBeanStructuralElementInstance.java\nindex d88ed9382..cc94c2ddd 100644\n--- a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/IBeanStructuralElementInstance.java\n+++ b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/IBeanStructuralElementInstance.java\n\n@@ -106,13 +106,17 @@ public interface IBeanStructuralElementInstance extends IBeanUuid, IBeanDelete,\n \t<SEI_TYPE extends IBeanStructuralElementInstance> List<SEI_TYPE> getChildren(Class<SEI_TYPE> beanSeiClazz);\n \t\n \t/**\n-\t * This method hands back all child Bean wrapped StructuralElementInstances of the abstract type ABeanStructuralElementInstance\n+\t * This method hands back all child Bean wrapped StructuralElementInstances of the abstract type ABeanStructuralElementInstance.\n+\t * The abstract type is used, because un-/marshalling can't handle the multiple inheritance\n+\t * in the interface.\n \t * @return all children which could be found in the current Bean SEI\n \t */\n \tList<ABeanStructuralElementInstance> getChildren();\n \t\n \t/**\n-\t * Set method to set all children via ABeanStructuralElementInstance\n+\t * Set method to set all children via ABeanStructuralElementInstance.\n+\t * The abstract type is used, because un-/marshalling can't handle the multiple inheritance\n+\t * in the interface.\n \t * @param newBeanSeis a List of ABeanStructuralElementInstance wrapping StructuralElementInstances\n \t */\n \tvoid setChildren(List<ABeanStructuralElementInstance> newBeanSeis);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyOTE0Mg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r499529142", "bodyText": "WTF since when are there inline codecov warnings :D:D:D:D\nSo apprantly this is not tested.", "author": "SaMuellerDLR", "createdAt": "2020-10-05T11:29:16Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.dvlm.json;\n+\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+\n+import de.dlr.sc.virsat.model.concept.types.structural.ABeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.concept.types.structural.BeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\n+\n+/**\n+ * Adapter for a referenced ABeanStructuralElementInstance from/to a UUID\n+ * that uses the IUuidAdapter\n+ */\n+public class ABeanStructuralElementInstanceAdapter extends XmlAdapter<String, ABeanStructuralElementInstance> {\n+\n+\tprivate ResourceSet resourceSet;\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter() { };\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter(ResourceSet resourceSet) {\n+\t\tthis.resourceSet = resourceSet;\n+\t}\n+\t\n+\t@Override\n+\tpublic String marshal(ABeanStructuralElementInstance v) throws Exception {\n+\t\tif (v == null) {\n+\t\t\treturn null;\n+\t\t} else {\n+\t\t\treturn v.getUuid();\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic ABeanStructuralElementInstance unmarshal(String uuid) throws Exception {\n+\t\tif (resourceSet == null) {\n+\t\t\tthrow new NullPointerException(\"No resource set for unmarshalling set in the adapter\");", "originalCommit": "cac87caf321fd9ea3f775272878fe736680a7745", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MjU5Nw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501572597", "bodyText": "Thats cool, should be tested now", "author": "JAmmermann-DLR", "createdAt": "2020-10-08T09:21:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyOTE0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "839c1b55ff0c2c2fe715c0bb652a4dc4d0955cbe", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java\nindex 3138fc5a7..c37c23f24 100644\n--- a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java\n+++ b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java\n\n@@ -42,10 +42,6 @@ public class ABeanStructuralElementInstanceAdapter extends XmlAdapter<String, AB\n \t\n \t@Override\n \tpublic ABeanStructuralElementInstance unmarshal(String uuid) throws Exception {\n-\t\tif (resourceSet == null) {\n-\t\t\tthrow new NullPointerException(\"No resource set for unmarshalling set in the adapter\");\n-\t\t}\n-\t\t\n \t\t// Get the sei from the uuid\n \t\tIUuidAdapter typeInstanceAdapter = new IUuidAdapter(resourceSet);\n \t\tStructuralElementInstance sei = (StructuralElementInstance) typeInstanceAdapter.unmarshal(uuid);\n"}}, {"oid": "28316f1a4b511fa56c619ec9eed71781e5122f19", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/28316f1a4b511fa56c619ec9eed71781e5122f19", "message": "Fix test structure in AUuidAdapterTest - (Task #725)\n\nThe adapters have to be instantiated in the child classes.\n\n---\nTask #725: Transform SEIs from/to JSON", "committedDate": "2020-10-08T07:55:09Z", "type": "commit"}, {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "message": "Changes due to review - (Task #725)\n\n- Removed @XmlID Annotations\n- Renamed setParentSeiBean to setParent\n- Added comments to explain why we use abstract and generic classes.\n\n---\nTask #725: Transform SEIs from/to JSON", "committedDate": "2020-10-08T09:17:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NjA2MQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508366061", "bodyText": "Please wwrite some comment to mention what the intention of the test is.", "author": "PhilMFischer", "createdAt": "2020-10-20T09:53:26Z", "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "diffHunk": "@@ -13,32 +13,25 @@\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertThrows;\n \n-import org.eclipse.emf.ecore.resource.Resource;\n-import org.eclipse.emf.ecore.resource.ResourceSet;\n-import org.eclipse.emf.ecore.resource.impl.ResourceImpl;\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;\n import org.junit.Before;\n-import org.junit.Test;\n \n import de.dlr.sc.virsat.model.concept.types.ABeanObject;\n import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyString;\n import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.PropertydefinitionsFactory;\n import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesFactory;\n import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ValuePropertyInstance;\n-import de.dlr.sc.virsat.model.dvlm.types.impl.VirSatUuid;\n ", "originalCommit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQxMjIyNw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508412227", "bodyText": "Sure", "author": "JAmmermann-DLR", "createdAt": "2020-10-20T11:09:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NjA2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "839c1b55ff0c2c2fe715c0bb652a4dc4d0955cbe", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java b/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java\nindex d65f8a360..b85d8bd96 100644\n--- a/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java\n+++ b/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java\n\n@@ -24,6 +24,10 @@ import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.Propertydefini\n import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesFactory;\n import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ValuePropertyInstance;\n \n+/**\n+ * Tests that the ABeanObjectAdapter un-/marshalls\n+ * a ABeanObject as expected\n+ */\n public class ABeanObjectAdapterTest extends AUuidAdapterTest {\n \n \tprivate ValuePropertyInstance vpi;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NzI1NA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508367254", "bodyText": "They are the same because they are compared by their internal type instance?", "author": "PhilMFischer", "createdAt": "2020-10-20T09:55:10Z", "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "diffHunk": "@@ -47,43 +40,53 @@ public void setUp() throws Exception {\n \t\t\n \t\tbean = new BeanPropertyString(vpi);\n \t\t\n-\t\tadapter = new ABeanObjectAdapter(resourceSet);\n+\t\tadapter = new ABeanObjectAdapter(resourceSet);\t\t\n \t}\n-\n-\t@Test\n-\tpublic void testMarshalABeanObject() throws Exception {\n-\t\tString uuid = adapter.marshal(null);\n+\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+\t@Override\n+\tpublic void testMarshallNull() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(null);\n \t\tassertNull(\"No bean returns null\", uuid);\n-\t\t\n-\t\tuuid = adapter.marshal(bean);\n+\t}\n+\n+\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+\t@Override\n+\tpublic void testMarhall() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\tassertEquals(\"The right uuid was returned\", UUID.toString(), uuid);\n \t\t\n \t\tvpi.setUuid(null);\n \t\tassertThrows(\"The type instance should have a uuid\",\n \t\t\tNullPointerException.class, () -> {\n-\t\t\t\tadapter.marshal(bean);\n+\t\t\t\t((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\t\t}\n \t\t);\n+\t\t\n+\t}\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\t@Override\n+\tpublic void testUnmarhall() throws Exception {\n+\t\t@SuppressWarnings(\"rawtypes\")\n+\t\tABeanObject unmarshalledBean = ((XmlAdapter<String, ABeanObject>) adapter).unmarshal(UUID.toString());\n+\t\tassertEquals(\"The right bean was returned\", bean, (BeanPropertyString) unmarshalledBean);", "originalCommit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQxNTM0MQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508415341", "bodyText": "Yes indeed", "author": "JAmmermann-DLR", "createdAt": "2020-10-20T11:14:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NzI1NA=="}], "type": "inlineReview", "revised_code": {"commit": "839c1b55ff0c2c2fe715c0bb652a4dc4d0955cbe", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java b/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java\nindex d65f8a360..b85d8bd96 100644\n--- a/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java\n+++ b/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java\n\n@@ -74,17 +78,17 @@ public class ABeanObjectAdapterTest extends AUuidAdapterTest {\n \t\n \t@Override\n \tpublic void testUnmarshallNull() {\n-\t\tadapterNoRs = new ABeanObjectAdapter();\n+\t\tadapterWithoutResourceSet = new ABeanObjectAdapter();\n \t\tsuper.testUnmarshallNull();\n \t}\n \n \t@SuppressWarnings(\"unchecked\")\n \t@Override\n \tpublic void testUnmarshallEmptyRs() {\n-\t\tadapterNoEmptyRs = new ABeanObjectAdapter(new ResourceSetImpl());\n+\t\tadapterWithEmptyResourceSet = new ABeanObjectAdapter(new ResourceSetImpl());\n \t\tassertThrows(\"No mapping found\",\n \t\t\tIllegalArgumentException.class, () -> {\n-\t\t\t\t((XmlAdapter<String, ABeanObjectAdapter>) adapterNoEmptyRs).unmarshal(UUID.toString());\n+\t\t\t\t((XmlAdapter<String, ABeanObjectAdapter>) adapterWithEmptyResourceSet).unmarshal(UUID.toString());\n \t\t\t}\n \t\t);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NzYzOA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508367638", "bodyText": "What does the adapterNoRs stand for?", "author": "PhilMFischer", "createdAt": "2020-10-20T09:55:46Z", "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "diffHunk": "@@ -47,43 +40,53 @@ public void setUp() throws Exception {\n \t\t\n \t\tbean = new BeanPropertyString(vpi);\n \t\t\n-\t\tadapter = new ABeanObjectAdapter(resourceSet);\n+\t\tadapter = new ABeanObjectAdapter(resourceSet);\t\t\n \t}\n-\n-\t@Test\n-\tpublic void testMarshalABeanObject() throws Exception {\n-\t\tString uuid = adapter.marshal(null);\n+\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+\t@Override\n+\tpublic void testMarshallNull() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(null);\n \t\tassertNull(\"No bean returns null\", uuid);\n-\t\t\n-\t\tuuid = adapter.marshal(bean);\n+\t}\n+\n+\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+\t@Override\n+\tpublic void testMarhall() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\tassertEquals(\"The right uuid was returned\", UUID.toString(), uuid);\n \t\t\n \t\tvpi.setUuid(null);\n \t\tassertThrows(\"The type instance should have a uuid\",\n \t\t\tNullPointerException.class, () -> {\n-\t\t\t\tadapter.marshal(bean);\n+\t\t\t\t((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\t\t}\n \t\t);\n+\t\t\n+\t}\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\t@Override\n+\tpublic void testUnmarhall() throws Exception {\n+\t\t@SuppressWarnings(\"rawtypes\")\n+\t\tABeanObject unmarshalledBean = ((XmlAdapter<String, ABeanObject>) adapter).unmarshal(UUID.toString());\n+\t\tassertEquals(\"The right bean was returned\", bean, (BeanPropertyString) unmarshalledBean);\n \t}\n \t\n-\t@Test\n-\tpublic void testUnmarshalString() throws Exception {\n-\t\tTypeInstanceAdapter adapterNoRs = new TypeInstanceAdapter();\n-\t\tassertThrows(\"A resource set should be set\",\n-\t\t\tNullPointerException.class, () -> {\n-\t\t\t\tadapterNoRs.unmarshal(null);\n-\t\t\t}\n-\t\t);\n-\t\t\n+\t@Override\n+\tpublic void testUnmarshallNull() {\n+\t\tadapterNoRs = new ABeanObjectAdapter();", "originalCommit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQxNjk2NQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508416965", "bodyText": "It means an adapter that is initilized without a resource set. I will rename it to adapterWithoutResourceSet to make it clear", "author": "JAmmermann-DLR", "createdAt": "2020-10-20T11:17:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NzYzOA=="}], "type": "inlineReview", "revised_code": {"commit": "839c1b55ff0c2c2fe715c0bb652a4dc4d0955cbe", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java b/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java\nindex d65f8a360..b85d8bd96 100644\n--- a/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java\n+++ b/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java\n\n@@ -74,17 +78,17 @@ public class ABeanObjectAdapterTest extends AUuidAdapterTest {\n \t\n \t@Override\n \tpublic void testUnmarshallNull() {\n-\t\tadapterNoRs = new ABeanObjectAdapter();\n+\t\tadapterWithoutResourceSet = new ABeanObjectAdapter();\n \t\tsuper.testUnmarshallNull();\n \t}\n \n \t@SuppressWarnings(\"unchecked\")\n \t@Override\n \tpublic void testUnmarshallEmptyRs() {\n-\t\tadapterNoEmptyRs = new ABeanObjectAdapter(new ResourceSetImpl());\n+\t\tadapterWithEmptyResourceSet = new ABeanObjectAdapter(new ResourceSetImpl());\n \t\tassertThrows(\"No mapping found\",\n \t\t\tIllegalArgumentException.class, () -> {\n-\t\t\t\t((XmlAdapter<String, ABeanObjectAdapter>) adapterNoEmptyRs).unmarshal(UUID.toString());\n+\t\t\t\t((XmlAdapter<String, ABeanObjectAdapter>) adapterWithEmptyResourceSet).unmarshal(UUID.toString());\n \t\t\t}\n \t\t);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3MDYyMA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508370620", "bodyText": "Rs NoRs stands for Adapter with ResourceSet and Adapter without?", "author": "PhilMFischer", "createdAt": "2020-10-20T10:00:12Z", "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/AUuidAdapterTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.dvlm.json;\n+\n+import static org.junit.Assert.assertThrows;\n+\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n+import org.eclipse.emf.ecore.resource.Resource;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.emf.ecore.resource.impl.ResourceImpl;\n+import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.dvlm.types.impl.VirSatUuid;\n+\n+public abstract class AUuidAdapterTest {\n+\n+\tprotected XmlAdapter<?, ?> adapter;\n+\tprotected static final VirSatUuid UUID = new VirSatUuid();\n+\tprotected Resource resourceImpl;\n+\tprotected ResourceSet resourceSet;\n+\tprotected XmlAdapter<?, ?> adapterNoRs;", "originalCommit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQxNzEwNg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508417106", "bodyText": "See above", "author": "JAmmermann-DLR", "createdAt": "2020-10-20T11:17:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3MDYyMA=="}], "type": "inlineReview", "revised_code": {"commit": "839c1b55ff0c2c2fe715c0bb652a4dc4d0955cbe", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/AUuidAdapterTest.java b/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/AUuidAdapterTest.java\nindex a1ea36720..979bb7b57 100644\n--- a/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/AUuidAdapterTest.java\n+++ b/de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/AUuidAdapterTest.java\n\n@@ -28,8 +28,8 @@ public abstract class AUuidAdapterTest {\n \tprotected static final VirSatUuid UUID = new VirSatUuid();\n \tprotected Resource resourceImpl;\n \tprotected ResourceSet resourceSet;\n-\tprotected XmlAdapter<?, ?> adapterNoRs;\n-\tprotected XmlAdapter<?, ?> adapterNoEmptyRs;\n+\tprotected XmlAdapter<?, ?> adapterWithoutResourceSet;\n+\tprotected XmlAdapter<?, ?> adapterWithEmptyResourceSet;\n \t\n \t@Before\n \tpublic void setUp() throws Exception {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3Mzk0MA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508373940", "bodyText": "We should be aware, that the list we are handing back, does not allow to directly add a CA to the SEI, since it is realy just a pure List of CAs. I think it is ok in case that we are clear on the API contract.\nDo we want to have it like this, since operations such as Bean.getCategoryAssignments().add(CA) will not add a CA to the Bean.", "author": "PhilMFischer", "createdAt": "2020-10-20T10:05:28Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +129,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r\n+\t\tArrayList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\r\n+\t\t\r\n+\t\tfor (CategoryAssignment ca : sei.getCategoryAssignments()) {\r\n+\t\t\tBeanCategoryAssignment bean = new BeanCategoryAssignment();\r\n+\t\t\tbean.setTypeInstance(ca);\r\n+\t\t\tbeans.add(bean);\r\n+\t\t}\r\n+\t\t\r\n+\t\treturn beans;\r", "originalCommit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4MDEyMg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508380122", "bodyText": "After discussion with @SaMuellerDLR we think the returned list should be wrapped to an unmodifiable collection if posible. This would be in line with the contract of all the other metods to get all CAs which are internalley calling the BeanStructuralElementInstanceHelper.", "author": "PhilMFischer", "createdAt": "2020-10-20T10:15:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3Mzk0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQzMzgwNQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508433805", "bodyText": "That makes sense I will wrapp it into an unmodifiable collection\nOk so I looked into it and I saw that I also had to break the contract in the other getters (cast the unmodifiable list to an array list). The reason is the following: When unmarshalling JAXB internally calls the getter and then calls add to the list. This doesn't work if the list is unmodifiable. I actually don't see a way to unmarshall these lists without breaking the contract. I think I also had some discussion with @SaMuellerDLR in which we didn't find a solution.\nThis JAXB behavior has already caused a lot problems and the current solution only works because the underlying EList ignore duplicates.", "author": "JAmmermann-DLR", "createdAt": "2020-10-20T11:47:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3Mzk0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA5NDU3OQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r509094579", "bodyText": "Now JAXB doesn't use the functions of the interface, but instead some private functions shadowing the behavior. This way the original functions can return unmodifiable lists.", "author": "JAmmermann-DLR", "createdAt": "2020-10-21T08:38:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3Mzk0MA=="}], "type": "inlineReview", "revised_code": {"commit": "57fd5e5ecd9ca565bb86a20780fc1518a405d76a", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\nindex 54ae9df20..c7b5e4a1a 100644\n--- a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n+++ b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n\n@@ -131,7 +130,7 @@ public abstract class ABeanStructuralElementInstance implements IBeanStructuralE\n \t\n \t@Override\n \tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\n-\t\tArrayList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\n+\t\tList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\n \t\t\n \t\tfor (CategoryAssignment ca : sei.getCategoryAssignments()) {\n \t\t\tBeanCategoryAssignment bean = new BeanCategoryAssignment();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4NTc0NQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508385745", "bodyText": "Is it neccessary to use EList, would List work as well?", "author": "PhilMFischer", "createdAt": "2020-10-20T10:24:44Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -131,6 +179,27 @@ public void remove(IBeanStructuralElementInstance bsei) {\n \t\treturn bseiHelper.getAllSubBeanSeis(sei, beanSeiClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<ABeanStructuralElementInstance> getChildren() {\r\n+\t\tBeanStructuralElementInstanceHelper bseiHelper = new BeanStructuralElementInstanceHelper();\r\n+\t\treturn new ArrayList<ABeanStructuralElementInstance>(bseiHelper.getAllSubBeanSeis(sei, ABeanStructuralElementInstance.class));\r\n+\t}\r\n+\t\r\n+\t@Override\r\n+\t@XmlElement\r\n+\tpublic void setChildren(List<ABeanStructuralElementInstance> newBeanSeis) {\r\n+\t\tEList<StructuralElementInstance> currentChildren = sei.getChildren();\r", "originalCommit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyNTU1OA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508425558", "bodyText": "I will change it to List", "author": "JAmmermann-DLR", "createdAt": "2020-10-20T11:32:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4NTc0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "57fd5e5ecd9ca565bb86a20780fc1518a405d76a", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\nindex 54ae9df20..c7b5e4a1a 100644\n--- a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n+++ b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n\n@@ -188,7 +187,7 @@ public abstract class ABeanStructuralElementInstance implements IBeanStructuralE\n \t@Override\n \t@XmlElement\n \tpublic void setChildren(List<ABeanStructuralElementInstance> newBeanSeis) {\n-\t\tEList<StructuralElementInstance> currentChildren = sei.getChildren();\n+\t\tList<StructuralElementInstance> currentChildren = sei.getChildren();\n \t\t\n \t\tList<StructuralElementInstance> newChildren = new ArrayList<StructuralElementInstance>();\n \t\tfor (ABeanStructuralElementInstance beanSei : newBeanSeis) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4NzgyMQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508387821", "bodyText": "Isn't it possible to directly use the BeanCategoryAssignmentHelper by calling getAllBeanCategories(sei, ABeanCategoryAssignment.class) here?", "author": "PhilMFischer", "createdAt": "2020-10-20T10:28:12Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +129,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r\n+\t\tArrayList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\r\n+\t\t\r\n+\t\tfor (CategoryAssignment ca : sei.getCategoryAssignments()) {\r", "originalCommit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQzMzI2Ng==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508433266", "bodyText": "I don't see the advantage, because we use BeanCategoryAssignment here and not ABeanCategoryAssignment. Or do you want to change the contract to ABeanCategoryAssignment? If I remember correctly we use BeanCategoryAssignment  because there were some problems in the set method when using the abstract class instead.", "author": "JAmmermann-DLR", "createdAt": "2020-10-20T11:46:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4NzgyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "57fd5e5ecd9ca565bb86a20780fc1518a405d76a", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\nindex 54ae9df20..c7b5e4a1a 100644\n--- a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n+++ b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n\n@@ -131,7 +130,7 @@ public abstract class ABeanStructuralElementInstance implements IBeanStructuralE\n \t\n \t@Override\n \tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\n-\t\tArrayList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\n+\t\tList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\n \t\t\n \t\tfor (CategoryAssignment ca : sei.getCategoryAssignments()) {\n \t\t\tBeanCategoryAssignment bean = new BeanCategoryAssignment();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4Nzk4OQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508387989", "bodyText": "Is EList realy needed?", "author": "PhilMFischer", "createdAt": "2020-10-20T10:28:30Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -173,6 +242,27 @@ public void removeSuperSei(IBeanStructuralElementInstance bsei) {\n \t\treturn bseiHelper.getSuperBeanSeis(sei, beanSeiClazz);\r\n \t}\r\n \r\n+    @Override\r\n+ \tpublic List<ABeanStructuralElementInstance> getSuperSeis() {\r\n+ \t\tBeanStructuralElementInstanceHelper bseiHelper = new BeanStructuralElementInstanceHelper();\r\n+ \t\treturn new ArrayList<ABeanStructuralElementInstance>(bseiHelper.getSuperBeanSeis(sei, ABeanStructuralElementInstance.class));\r\n+ \t}\r\n+ \t\r\n+    @Override\r\n+ \t@XmlElement\r\n+ \tpublic void setSuperSeis(List<ABeanStructuralElementInstance> newBeanSeis) {\r\n+ \t\tEList<StructuralElementInstance> currentSuperSeis = sei.getSuperSeis();\r", "originalCommit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyNTYwNA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508425604", "bodyText": "I will change it to List", "author": "JAmmermann-DLR", "createdAt": "2020-10-20T11:32:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4Nzk4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "57fd5e5ecd9ca565bb86a20780fc1518a405d76a", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\nindex 54ae9df20..c7b5e4a1a 100644\n--- a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n+++ b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java\n\n@@ -230,45 +229,45 @@ public abstract class ABeanStructuralElementInstance implements IBeanStructuralE\n \tpublic Command removeSuperSei(EditingDomain ed, IBeanStructuralElementInstance bsei) {\n \t\treturn RemoveCommand.create(ed, sei, InheritancePackage.Literals.IINHERITS_FROM__SUPER_SEIS, bsei.getStructuralElementInstance());\n \t}\n-\n+\t\n \t@Override\n \tpublic void removeSuperSei(IBeanStructuralElementInstance bsei) {\n \t\tsei.getSuperSeis().remove(bsei.getStructuralElementInstance());\n \t}\n \t\n \t@Override\n-    public <SEI_TYPE extends IBeanStructuralElementInstance> List<SEI_TYPE> getSuperSeis(Class<SEI_TYPE> beanSeiClazz) {\n+\tpublic <SEI_TYPE extends IBeanStructuralElementInstance> List<SEI_TYPE> getSuperSeis(Class<SEI_TYPE> beanSeiClazz) {\n \t\tBeanStructuralElementInstanceHelper bseiHelper = new BeanStructuralElementInstanceHelper();\n \t\treturn bseiHelper.getSuperBeanSeis(sei, beanSeiClazz);\n \t}\n-\n-    @Override\n- \tpublic List<ABeanStructuralElementInstance> getSuperSeis() {\n- \t\tBeanStructuralElementInstanceHelper bseiHelper = new BeanStructuralElementInstanceHelper();\n- \t\treturn new ArrayList<ABeanStructuralElementInstance>(bseiHelper.getSuperBeanSeis(sei, ABeanStructuralElementInstance.class));\n- \t}\n- \t\n-    @Override\n- \t@XmlElement\n- \tpublic void setSuperSeis(List<ABeanStructuralElementInstance> newBeanSeis) {\n- \t\tEList<StructuralElementInstance> currentSuperSeis = sei.getSuperSeis();\n- \t\t\n- \t\tList<StructuralElementInstance> newSuperSeis = new ArrayList<StructuralElementInstance>();\n- \t\tfor (ABeanStructuralElementInstance beanSei : newBeanSeis) {\n- \t\t\tStructuralElementInstance sei = beanSei.getStructuralElementInstance();\n- \t\t\tnewSuperSeis.add(sei);\n- \t\t}\n- \t\t\n- \t\tcurrentSuperSeis.clear();\n- \t\tcurrentSuperSeis.addAll(newSuperSeis);\n- \t}\n-\n+\t\n \t@Override\n-    public <SEI_TYPE extends IBeanStructuralElementInstance> Set<SEI_TYPE> getAllSuperSeis(Class<SEI_TYPE> beanSeiClazz) {\n+\tpublic List<ABeanStructuralElementInstance> getSuperSeis() {\n+\t\tBeanStructuralElementInstanceHelper bseiHelper = new BeanStructuralElementInstanceHelper();\n+\t\treturn new ArrayList<ABeanStructuralElementInstance>(bseiHelper.getSuperBeanSeis(sei, ABeanStructuralElementInstance.class));\n+\t}\n+\t\n+\t@Override\n+\t@XmlElement\n+\tpublic void setSuperSeis(List<ABeanStructuralElementInstance> newBeanSeis) {\n+\t\tList<StructuralElementInstance> currentSuperSeis = sei.getSuperSeis();\n+\t\t\n+\t\tList<StructuralElementInstance> newSuperSeis = new ArrayList<StructuralElementInstance>();\n+\t\tfor (ABeanStructuralElementInstance beanSei : newBeanSeis) {\n+\t\t\tStructuralElementInstance sei = beanSei.getStructuralElementInstance();\n+\t\t\tnewSuperSeis.add(sei);\n+\t\t}\n+\t\t\n+\t\tcurrentSuperSeis.clear();\n+\t\tcurrentSuperSeis.addAll(newSuperSeis);\n+\t}\n+\t\n+\t@Override\n+\tpublic <SEI_TYPE extends IBeanStructuralElementInstance> Set<SEI_TYPE> getAllSuperSeis(Class<SEI_TYPE> beanSeiClazz) {\n \t\tBeanStructuralElementInstanceHelper bseiHelper = new BeanStructuralElementInstanceHelper();\n \t\treturn bseiHelper.getAllSuperBeanSeis(sei, beanSeiClazz);\n \t}\n-    \n+\t\n \t@Override\n \tpublic String getUuid() {\n \t\treturn sei.getUuid().toString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM5MDQzNw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508390437", "bodyText": "SInce it is instantiating the IUuidAdadapter the null check on the resourceSet above could be removed, it will be done in the IUuidAdapter anyway, doesn't it?", "author": "PhilMFischer", "createdAt": "2020-10-20T10:32:40Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.dvlm.json;\n+\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+\n+import de.dlr.sc.virsat.model.concept.types.structural.ABeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.concept.types.structural.BeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\n+\n+/**\n+ * Adapter for a referenced ABeanStructuralElementInstance from/to a UUID\n+ * that uses the IUuidAdapter\n+ */\n+public class ABeanStructuralElementInstanceAdapter extends XmlAdapter<String, ABeanStructuralElementInstance> {\n+\n+\tprivate ResourceSet resourceSet;\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter() { };\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter(ResourceSet resourceSet) {\n+\t\tthis.resourceSet = resourceSet;\n+\t}\n+\t\n+\t@Override\n+\tpublic String marshal(ABeanStructuralElementInstance v) throws Exception {\n+\t\tif (v == null) {\n+\t\t\treturn null;\n+\t\t} else {\n+\t\t\treturn v.getUuid();\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic ABeanStructuralElementInstance unmarshal(String uuid) throws Exception {\n+\t\tif (resourceSet == null) {\n+\t\t\tthrow new NullPointerException(\"No resource set for unmarshalling set in the adapter\");\n+\t\t}\n+\t\t\n+\t\t// Get the sei from the uuid\n+\t\tIUuidAdapter typeInstanceAdapter = new IUuidAdapter(resourceSet);", "originalCommit": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyMDg1MQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508420851", "bodyText": "You are right, i will also remove it in ABeanObjectAdapter", "author": "JAmmermann-DLR", "createdAt": "2020-10-20T11:24:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM5MDQzNw=="}], "type": "inlineReview", "revised_code": {"commit": "839c1b55ff0c2c2fe715c0bb652a4dc4d0955cbe", "chunk": "diff --git a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java\nindex 3138fc5a7..c37c23f24 100644\n--- a/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java\n+++ b/de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java\n\n@@ -42,10 +42,6 @@ public class ABeanStructuralElementInstanceAdapter extends XmlAdapter<String, AB\n \t\n \t@Override\n \tpublic ABeanStructuralElementInstance unmarshal(String uuid) throws Exception {\n-\t\tif (resourceSet == null) {\n-\t\t\tthrow new NullPointerException(\"No resource set for unmarshalling set in the adapter\");\n-\t\t}\n-\t\t\n \t\t// Get the sei from the uuid\n \t\tIUuidAdapter typeInstanceAdapter = new IUuidAdapter(resourceSet);\n \t\tStructuralElementInstance sei = (StructuralElementInstance) typeInstanceAdapter.unmarshal(uuid);\n"}}, {"oid": "839c1b55ff0c2c2fe715c0bb652a4dc4d0955cbe", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/839c1b55ff0c2c2fe715c0bb652a4dc4d0955cbe", "message": "Change adapters due to review - (Task #725)\n\n- Remove unnecessary null checks\n- Refactor unclear variable names\n\n---\nTask #725: Transform SEIs from/to JSON", "committedDate": "2020-10-20T11:26:35Z", "type": "commit"}, {"oid": "57fd5e5ecd9ca565bb86a20780fc1518a405d76a", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/57fd5e5ecd9ca565bb86a20780fc1518a405d76a", "message": "Rename ELists to Lists - (Task #725)\n\n---\nTask #725: Transform SEIs from/to JSON", "committedDate": "2020-10-20T12:19:14Z", "type": "commit"}, {"oid": "0aa85f3005c1e4ef1f96ca3b88d38a8c27f47c35", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/0aa85f3005c1e4ef1f96ca3b88d38a8c27f47c35", "message": "Make Lists unmodifiable again - (Task #725)\n\nNow the contract of the interface is not broken.\n- Added shadow functions that are used by JAXB instead, this allows the\noriginal functions to return unmodifiable lists\n- Moved function to getCAs into the BeanCategoryAssignmentHelper\n\n---\nTask #725: Transform SEIs from/to JSON", "committedDate": "2020-10-21T08:36:20Z", "type": "commit"}, {"oid": "a3ee162f7d05090e1b70824e0a0fef2846395c3b", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/a3ee162f7d05090e1b70824e0a0fef2846395c3b", "message": "Merge branch 'development' into feature/task_725-Transform_SEIs,_Conce", "committedDate": "2020-10-21T08:55:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE2NDIwOQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r509164209", "bodyText": "Please provide a test case for this refactored method.", "author": "PhilMFischer", "createdAt": "2020-10-21T10:23:31Z", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/util/BeanCategoryAssignmentHelper.java", "diffHunk": "@@ -118,6 +119,23 @@\n \t\treturn Collections.unmodifiableList(caBeans);\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * Call this method to hand back the CategoryAssignment wrapped in a BeanCategoryAssignment\r\n+\t * @param caContainer The container where the Category Assignments reside. Usually a StructuralElementInstance\r\n+\t * @return a List of CategoryAssignments which are wrapped into the generic BeanCategoryAssignment\r\n+\t */\r\n+\tpublic List<BeanCategoryAssignment> getAllBeanCategories(ICategoryAssignmentContainer caContainer) {\r", "originalCommit": "a3ee162f7d05090e1b70824e0a0fef2846395c3b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "757b6a39e8eecac676336d1351da4a9b152e90ad", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/757b6a39e8eecac676336d1351da4a9b152e90ad", "message": "Add missing test case to BeanCategoryAssignmentHelperTest - (Task #725)\n\n---\nTask #725: Transform SEIs from/to JSON", "committedDate": "2020-10-22T09:00:27Z", "type": "commit"}]}