{"pr_number": 433, "pr_title": "Improve coding style in excel-Plugins", "pr_createdAt": "2020-01-21T07:28:22Z", "pr_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433", "timeline": [{"oid": "f56a4f80e027b42c20e03f8c3201a2be875189d6", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f56a4f80e027b42c20e03f8c3201a2be875189d6", "message": "Added blank lines - (Task #411)\n\nadded some blank lines in excel und excel.test\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-08T14:20:48Z", "type": "commit"}, {"oid": "8ae2388025e915802834a4fb64ced5c8e88505f6", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8ae2388025e915802834a4fb64ced5c8e88505f6", "message": "Improved coding style in statemachines.excel- (Task #411)\n\nAdded some blank lines\nRemoved spaces\nRenamed 1 letter variables\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-09T10:13:40Z", "type": "commit"}, {"oid": "58356f52f2e0a8cc186d213f61f22219f6cf813f", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/58356f52f2e0a8cc186d213f61f22219f6cf813f", "message": "Improved coding style in funcelectrial.excel - (Task #411)\n\nAdded some blank lines\nRemoved spaces\nRenamed variables\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-09T14:01:03Z", "type": "commit"}, {"oid": "fbfc4cc296d1bb76a98243ed00ceb5b8471ee8f8", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/fbfc4cc296d1bb76a98243ed00ceb5b8471ee8f8", "message": "Improved coding style in .excel - (Task #411)\n\nAdded some blank lines\nRemoved spaces\nRenamed variables\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-09T14:48:12Z", "type": "commit"}, {"oid": "7f2617a807be68ffa9f14e069a921e4b13083369", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/7f2617a807be68ffa9f14e069a921e4b13083369", "message": "Improved coding style in excel.ui - (Task #411)\n\nAdded some blank lines\nRemoved spaces\n\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-16T08:17:44Z", "type": "commit"}, {"oid": "16a2a599daa84b42ca1f565488c00243b3f40faa", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/16a2a599daa84b42ca1f565488c00243b3f40faa", "message": "Changed control flow - (Task #411)\n\nreplaced two try-catch with one\nAdded a variable to show the difference\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-16T12:52:42Z", "type": "commit"}, {"oid": "567ddb352cfff7a7061865c9e421d0143b6857d4", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/567ddb352cfff7a7061865c9e421d0143b6857d4", "message": "Merge remote-tracking branch 'origin/development' into feature/task_411-Improve_coding_style", "committedDate": "2020-01-16T13:00:27Z", "type": "commit"}, {"oid": "be1bb6367ae388ca1f397d136c9571f36b206294", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/be1bb6367ae388ca1f397d136c9571f36b206294", "message": "# WARNING: head commit changed in the meantime\n\nChanged to e.getMessage() - (Task #411)\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-17T08:34:29Z", "type": "commit"}, {"oid": "2d5b5a22273304128248be884cdbcb1c4490645f", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/2d5b5a22273304128248be884cdbcb1c4490645f", "message": "Changed name of variable - (Task #411)\n\nPut your Message here.\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-21T07:27:11Z", "type": "commit"}, {"oid": "8f65427d6cba7481845f824d9a32e34c88c71d11", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8f65427d6cba7481845f824d9a32e34c88c71d11", "message": "Merge remote-tracking branch 'origin/development' into feature/task_411-Improve_coding_style", "committedDate": "2020-01-21T09:58:36Z", "type": "commit"}, {"oid": "f536a6ecee5eedf66ea0de7cff34670a39bc9f99", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f536a6ecee5eedf66ea0de7cff34670a39bc9f99", "message": "Merged development into this branch - (Task #411)\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-21T11:54:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwODIwNg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r371108206", "bodyText": "We could make this into URL url = new URL(\"platform:/plugin/\" + FRAGMENT_ID + resourcePath);", "author": "SaMuellerDLR", "createdAt": "2020-01-27T08:26:30Z", "path": "de.dlr.sc.virsat.excel.test/src/de/dlr/sc/virsat/excel/test/ExcelTestActivator.java", "diffHunk": "@@ -39,7 +37,6 @@ public static InputStream getResourceContentAsString(String resourcePath) throws\n \t\tURL url;\r", "originalCommit": "f536a6ecee5eedf66ea0de7cff34670a39bc9f99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1cd339fa093b6fd32c3fd4c6299ae2839aff1209", "chunk": "diff --git a/de.dlr.sc.virsat.excel.test/src/de/dlr/sc/virsat/excel/test/ExcelTestActivator.java b/de.dlr.sc.virsat.excel.test/src/de/dlr/sc/virsat/excel/test/ExcelTestActivator.java\nindex 0967818e4..1669e1e8e 100644\n--- a/de.dlr.sc.virsat.excel.test/src/de/dlr/sc/virsat/excel/test/ExcelTestActivator.java\n+++ b/de.dlr.sc.virsat.excel.test/src/de/dlr/sc/virsat/excel/test/ExcelTestActivator.java\n\n@@ -34,8 +34,7 @@ public class ExcelTestActivator {\n \t * @throws IOException throws\n \t */\n \tpublic static InputStream getResourceContentAsString(String resourcePath) throws IOException {\n-\t\tURL url;\n-\t\turl = new URL(\"platform:/plugin/\" + FRAGMENT_ID + resourcePath);\n+\t\tURL url = new URL(\"platform:/plugin/\" + FRAGMENT_ID + resourcePath);\n \t\tInputStream inputStream = url.openConnection().getInputStream();\n \t\treturn inputStream;\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEyODE4MA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r371128180", "bodyText": "We use _ for separating single words in constant names. So NUMBEROFINTERFACES should be NUMBER_OF_INTERFACES.", "author": "SaMuellerDLR", "createdAt": "2020-01-27T09:16:16Z", "path": "de.dlr.sc.virsat.model.extension.funcelectrical.test/src/de/dlr/sc/virsat/model/extension/funcelectrical/excel/importer/FuncElecImporterTest.java", "diffHunk": "@@ -31,51 +31,48 @@\n \r\n /**\r\n  * Test Case for Importing from Excel\r\n- * \r\n- * @author bell_er\r\n- *\r\n  */\r\n public class FuncElecImporterTest extends ExcelTestCase {\r\n \r\n \t@Before\r\n \tpublic void setUp() throws CoreException {\r\n \t\tsuper.setUp();\r\n \t\tiface.getTypeInstance().setUuid(new VirSatUuid(\"dc928367-36b7-479c-8aaf-38291f394902\"));\r\n-\t\tec.add(iface2);\r\n+\t\telementConf.add(iface2);\r\n \t}\r\n \r\n \t@Test\r\n \tpublic void testImportInterfaceTypeCollection() throws IOException {\r\n-\t\tInputStream is = Activator.getResourceContentAsString(\"/resources/ImportInterfaceTypeCollectionTest.xlsx\");\r\n-\t\tXSSFWorkbook wb = new XSSFWorkbook(is);\r\n+\t\tInputStream iStream = Activator.getResourceContentAsString(\"/resources/ImportInterfaceTypeCollectionTest.xlsx\");\r\n+\t\tXSSFWorkbook wb = new XSSFWorkbook(iStream);\r\n+\r\n+\t\tFuncElecImporter feImporter = new FuncElecImporter();\r\n \r\n-\t\tFuncElecImporter ei = new FuncElecImporter();\r\n-\t\t\r\n-\t\tList<Fault> faults = ei.validate(itc.getStructuralElementInstance(), wb);\r\n+\t\tList<Fault> faults = feImporter.validate(ifaceTypeCollection.getStructuralElementInstance(), wb);\r\n \t\tassertTrue(\"Succesfully called the validator\", faults.isEmpty());\r\n-\t\t\r\n-\t\tei.importExcel(itc.getStructuralElementInstance(), repository, wb);\r\n-\t\tassertEquals(THREE, itc.getStructuralElementInstance().getCategoryAssignments().size());\r\n-\t\tassertEquals(\"FILL\", itc.getStructuralElementInstance().getCategoryAssignments().get(0).getName());\r\n-\t\tassertEquals(\"HILL\", itc.getStructuralElementInstance().getCategoryAssignments().get(1).getName());\r\n-\t\tassertEquals(\"PILL\", itc.getStructuralElementInstance().getCategoryAssignments().get(2).getName());\r\n+\r\n+\t\tfeImporter.importExcel(ifaceTypeCollection.getStructuralElementInstance(), repository, wb);\r\n+\t\tassertEquals(NUMBEROFINTERFACES, ifaceTypeCollection.getStructuralElementInstance().getCategoryAssignments().size());\r\n+\t\tassertEquals(\"FILL\", ifaceTypeCollection.getStructuralElementInstance().getCategoryAssignments().get(0).getName());\r\n+\t\tassertEquals(\"HILL\", ifaceTypeCollection.getStructuralElementInstance().getCategoryAssignments().get(1).getName());\r\n+\t\tassertEquals(\"PILL\", ifaceTypeCollection.getStructuralElementInstance().getCategoryAssignments().get(2).getName());\r\n \t}\r\n \r\n \t@Test\r\n \tpublic void testImportInterfaceEnds() throws IOException {\r\n-\t\tInputStream is = Activator.getResourceContentAsString(\"/resources/ImportElementDefinitionTest.xlsx\");\r\n-\t\tXSSFWorkbook wb = new XSSFWorkbook(is);\r\n+\t\tInputStream iStream = Activator.getResourceContentAsString(\"/resources/ImportElementDefinitionTest.xlsx\");\r\n+\t\tXSSFWorkbook wb = new XSSFWorkbook(iStream);\r\n+\r\n+\t\trepository.getRootEntities().add(ifaceTypeCollection.getStructuralElementInstance());\r\n+\t\tFuncElecImporter feImporter = new FuncElecImporter();\r\n \r\n-\t\trepository.getRootEntities().add(itc.getStructuralElementInstance());\r\n-\t\tFuncElecImporter ei = new FuncElecImporter();\r\n-\t\t\r\n-\t\tList<Fault> faults = ei.validate(ed.getStructuralElementInstance(), wb);\r\n+\t\tList<Fault> faults = feImporter.validate(elementDef.getStructuralElementInstance(), wb);\r\n \t\tassertTrue(\"Succesfully called the validator\", faults.isEmpty());\r\n-\t\t\r\n-\t\tei.importExcel(ed.getStructuralElementInstance(), repository, wb);\r\n+\r\n+\t\tfeImporter.importExcel(elementDef.getStructuralElementInstance(), repository, wb);\r\n \t\tBeanCategoryAssignmentHelper bCaHelper = new BeanCategoryAssignmentHelper();\r\n-\t\tList<InterfaceEnd> seiInterfaceEnds = bCaHelper.getAllBeanCategories(ed.getStructuralElementInstance(), InterfaceEnd.class);\r\n-\t\tassertEquals(THREE, ed.getStructuralElementInstance().getCategoryAssignments().size());\r\n+\t\tList<InterfaceEnd> seiInterfaceEnds = bCaHelper.getAllBeanCategories(elementDef.getStructuralElementInstance(), InterfaceEnd.class);\r\n+\t\tassertEquals(NUMBEROFINTERFACES, elementDef.getStructuralElementInstance().getCategoryAssignments().size());\r", "originalCommit": "f536a6ecee5eedf66ea0de7cff34670a39bc9f99", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1cd339fa093b6fd32c3fd4c6299ae2839aff1209", "chunk": "diff --git a/de.dlr.sc.virsat.model.extension.funcelectrical.test/src/de/dlr/sc/virsat/model/extension/funcelectrical/excel/importer/FuncElecImporterTest.java b/de.dlr.sc.virsat.model.extension.funcelectrical.test/src/de/dlr/sc/virsat/model/extension/funcelectrical/excel/importer/FuncElecImporterTest.java\nindex 794c869a8..0fd66f1b1 100644\n--- a/de.dlr.sc.virsat.model.extension.funcelectrical.test/src/de/dlr/sc/virsat/model/extension/funcelectrical/excel/importer/FuncElecImporterTest.java\n+++ b/de.dlr.sc.virsat.model.extension.funcelectrical.test/src/de/dlr/sc/virsat/model/extension/funcelectrical/excel/importer/FuncElecImporterTest.java\n\n@@ -52,7 +52,7 @@ public class FuncElecImporterTest extends ExcelTestCase {\n \t\tassertTrue(\"Succesfully called the validator\", faults.isEmpty());\n \n \t\tfeImporter.importExcel(ifaceTypeCollection.getStructuralElementInstance(), repository, wb);\n-\t\tassertEquals(NUMBEROFINTERFACES, ifaceTypeCollection.getStructuralElementInstance().getCategoryAssignments().size());\n+\t\tassertEquals(NUMBER_OF_INTERFACES, ifaceTypeCollection.getStructuralElementInstance().getCategoryAssignments().size());\n \t\tassertEquals(\"FILL\", ifaceTypeCollection.getStructuralElementInstance().getCategoryAssignments().get(0).getName());\n \t\tassertEquals(\"HILL\", ifaceTypeCollection.getStructuralElementInstance().getCategoryAssignments().get(1).getName());\n \t\tassertEquals(\"PILL\", ifaceTypeCollection.getStructuralElementInstance().getCategoryAssignments().get(2).getName());\n"}}, {"oid": "1cd339fa093b6fd32c3fd4c6299ae2839aff1209", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/1cd339fa093b6fd32c3fd4c6299ae2839aff1209", "message": "Requested Changes - (Task #411)\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-28T15:42:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0MjUwNg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r372242506", "bodyText": "Tabs/spaces inconsistency. I think we decided on using spaces a while time ago, so let's at least not change it back to tabs.", "author": "andriikovalov-dlr", "createdAt": "2020-01-29T08:22:17Z", "path": "de.dlr.sc.virsat.excel.ui/src/de/dlr/sc/virsat/excel/ui/wizards/ExportPage.java", "diffHunk": "@@ -188,18 +181,18 @@ private void createTemplateUI() {\n \t\tcomposite1.setLayout(new GridLayout(ROWS, false));\r\n \t\tGridData data = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL);\r\n \t\tcomposite1.setLayoutData(data);\r\n-\t\t\r\n+\r\n \t\tlabel2 = new Label(composite1, SWT.SHADOW_IN);\r\n \t\tlabel2.setText(\"Select the template \");\r\n \t\tnew Label(composite1, SWT.NONE);\r\n \t\tnew Label(composite1, SWT.NONE);\r\n-\t\t\r\n+\r\n \t\tlabel1 = new Label(composite1, SWT.NONE);\r\n-\t\tlabel1.setText(\"Template\");\t\t\r\n-\t\t\r\n-        // destination name entry field\r\n+\t\tlabel1.setText(\"Template\");\r\n+\r\n+\t\t// destination name entry field\r\n \t\ttemplateField = new Combo(composite1, SWT.SINGLE | SWT.BORDER);\r\n-        data = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL);\r\n+\t\tdata = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL);\r", "originalCommit": "1cd339fa093b6fd32c3fd4c6299ae2839aff1209", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzNzM0Nw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r372337347", "bodyText": "done", "author": "ALEhmerDLR", "createdAt": "2020-01-29T11:48:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0MjUwNg=="}], "type": "inlineReview", "revised_code": {"commit": "f9e25c027735ef5534f663bfc7a51ccffb9fafd9", "chunk": "diff --git a/de.dlr.sc.virsat.excel.ui/src/de/dlr/sc/virsat/excel/ui/wizards/ExportPage.java b/de.dlr.sc.virsat.excel.ui/src/de/dlr/sc/virsat/excel/ui/wizards/ExportPage.java\nindex 90f9a0507..ceb48a444 100644\n--- a/de.dlr.sc.virsat.excel.ui/src/de/dlr/sc/virsat/excel/ui/wizards/ExportPage.java\n+++ b/de.dlr.sc.virsat.excel.ui/src/de/dlr/sc/virsat/excel/ui/wizards/ExportPage.java\n\n@@ -190,9 +190,9 @@ public class ExportPage extends WizardPage {\n \t\tlabel1 = new Label(composite1, SWT.NONE);\n \t\tlabel1.setText(\"Template\");\n \n-\t\t// destination name entry field\n+        // destination name entry field\n \t\ttemplateField = new Combo(composite1, SWT.SINGLE | SWT.BORDER);\n-\t\tdata = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL);\n+        data = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL);\n         final int widthHint = 250;\n         data.widthHint = widthHint;\n         templateField.setLayoutData(data);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0NjE3Mw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r372246173", "bodyText": "I think we will get the error message printed anyways because we are passing the exception.", "author": "andriikovalov-dlr", "createdAt": "2020-01-29T08:31:29Z", "path": "de.dlr.sc.virsat.model.extension.funcelectrical/src/de/dlr/sc/virsat/model/extension/funcelectrical/excel/exporter/FuncElecExporter.java", "diffHunk": "@@ -42,69 +42,60 @@\n import de.dlr.sc.virsat.model.extension.ps.model.ElementOccurence;\r\n import de.dlr.sc.virsat.model.extension.ps.model.ElementRealization;\r\n \r\n-\r\n-\r\n-\r\n /**\r\n  * Class for exporting excel\r\n- * @author bell_er\r\n- *\r\n  */\r\n public class FuncElecExporter implements IExport {\r\n \tprivate final String defaultTemplatePath = \"/resources/ExcelExportTemplate.xlsx\";\r\n \tprivate ExcelExportHelper helper;\r\n \r\n-\tpublic static final String[] EXPORTABLE_SEIS = { \r\n+\tpublic static final String[] EXPORTABLE_SEIS = {\r\n \t\t\tElementDefinition.class.getSimpleName(),\r\n-\t\t\tElementConfiguration.class.getSimpleName(), \r\n-\t\t\tInterfaceTypeCollection.class.getSimpleName(), \r\n+\t\t\tElementConfiguration.class.getSimpleName(),\r\n+\t\t\tInterfaceTypeCollection.class.getSimpleName(),\r\n \t\t\tElementRealization.class.getSimpleName(),\r\n \t\t\tElementOccurence.class.getSimpleName()\r\n \t};\r\n+\r\n \t@Override\r\n \tpublic void export(EObject eObject, String path, boolean useDefaultTemplate, String templatePath) {\r\n \t\tStructuralElementInstance parentSc = (StructuralElementInstance) eObject;\r\n-\t\tArrayList <StructuralElementInstance> allSei = new ArrayList<StructuralElementInstance>();\r\n-\t\tallSei.add(parentSc);\r\n-\t\tallSei.addAll(parentSc.getDeepChildren());\r\n-\t\tfor (StructuralElementInstance sc : allSei) {\r\n-\t\t\tString selectedSEIType = sc.getType().getName();\r\n+\t\tArrayList <StructuralElementInstance> seiList = new ArrayList<StructuralElementInstance>();\r\n+\t\tseiList.add(parentSc);\r\n+\t\tseiList.addAll(parentSc.getDeepChildren());\r\n+\t\tfor (StructuralElementInstance sei : seiList) {\r\n+\t\t\tString selectedSEIType = sei.getType().getName();\r\n \t\t\tif (Stream.of(EXPORTABLE_SEIS).anyMatch(exportable -> exportable.equals(selectedSEIType))) {\r\n-\t\t\t\tInputStream is = null;\r\n+\t\t\t\tInputStream iStream = null;\r\n \t\t\t\ttry {\r\n \t\t\t\t\tif (useDefaultTemplate) {\r\n-\t\t\t\t\t\tis = Activator.getResourceContentAsString(defaultTemplatePath);\r\n+\t\t\t\t\t\tiStream = Activator.getResourceContentAsString(defaultTemplatePath);\r\n \t\t\t\t\t} else {\r\n-\t\t\t\t\t\tis = Activator.getResourceContentAsString(templatePath);\r\n+\t\t\t\t\t\tiStream = Activator.getResourceContentAsString(templatePath);\r\n \t\t\t\t\t}\r\n-\t\t\t\t} catch (IOException e) {\r\n-\t\t\t\t\tActivator.getDefault().getLog().log(new Status(Status.WARNING, Activator.getPluginId(), \"Could not locate the template file\"));\r\n-\t\t\t\t}\r\n-\t\t\t\texport(sc, is);\r\n-\r\n-\t\t\t\tFile file = new File(path + \"/\" + sc.getFullQualifiedInstanceName() + \".xlsx\");\r\n-\t\t\t\ttry {\r\n+\t\t\t\t\texport(sei, iStream);\r\n+\t\t\t\t\tFile file = new File(path + \"/\" + sei.getFullQualifiedInstanceName() + \".xlsx\");\r\n \t\t\t\t\tFileOutputStream out = new FileOutputStream(file);\r\n \t\t\t\t\thelper.getWb().write(out);\r\n \t\t\t\t} catch (IOException e) {\r\n-\t\t\t\t\tStatus status = new Status(Status.ERROR, Activator.getPluginId(), \"Failed to perform an export operation! \", e);\r\n+\t\t\t\t\tStatus status = new Status(Status.ERROR, Activator.getPluginId(), \"Failed to perform an export operation! \\n\" + e.getMessage(), e);\r", "originalCommit": "1cd339fa093b6fd32c3fd4c6299ae2839aff1209", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0OTAzOQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r372249039", "bodyText": "Let's maybe rename it to elementDefinition instead of aBeanSei?", "author": "andriikovalov-dlr", "createdAt": "2020-01-29T08:38:34Z", "path": "de.dlr.sc.virsat.model.extension.statemachines.test/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/ExcelImporterTest.java", "diffHunk": "@@ -37,37 +37,33 @@\n import de.dlr.sc.virsat.model.extension.statemachines.model.StateMachine;\r\n import de.dlr.sc.virsat.model.extension.statemachines.model.Transition;\r\n \r\n-\r\n-\r\n-\r\n /**\r\n  * Test Case for Importing from Excel\r\n- * @author bell_er\r\n- *\r\n  */\r\n public class ExcelImporterTest {\r\n \tprivate static final String CONCEPT_ID_MACHINES = \"de.dlr.sc.virsat.model.extension.statemachines\";\r\n \r\n-\tprivate static final int FIVE = 5;\r\n-\tprivate static final int FOUR = 4;\r\n-\tprivate static final int EXPECTEDSTATECOUNT = 4;\r\n-\tprivate static final int EXPECTEDTRANSITIONCOUNT = 4;\r\n-\t\r\n-\tABeanStructuralElementInstance ed;\r\n+\tprivate static final int STATE_NOT_EXISTING = 6;\r\n+\tprivate static final int STATE_WITHOUT_UUID = 5;\r\n+\tprivate static final int STATE_WITHOUT_NAME = 3;\r\n+\tprivate static final int EXPECTED_STATECOUNT = 4;\r\n+\tprivate static final int EXPECTED_TRANSITIONCOUNT = 4;\r\n+\r\n+\tABeanStructuralElementInstance aBeanSei;\r", "originalCommit": "1cd339fa093b6fd32c3fd4c6299ae2839aff1209", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzNzQyMw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r372337423", "bodyText": "done", "author": "ALEhmerDLR", "createdAt": "2020-01-29T11:48:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0OTAzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "f9e25c027735ef5534f663bfc7a51ccffb9fafd9", "chunk": "diff --git a/de.dlr.sc.virsat.model.extension.statemachines.test/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/ExcelImporterTest.java b/de.dlr.sc.virsat.model.extension.statemachines.test/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/ExcelImporterTest.java\nindex ad1f0721a..519f42517 100644\n--- a/de.dlr.sc.virsat.model.extension.statemachines.test/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/ExcelImporterTest.java\n+++ b/de.dlr.sc.virsat.model.extension.statemachines.test/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/ExcelImporterTest.java\n\n@@ -49,7 +49,7 @@ public class ExcelImporterTest {\n \tprivate static final int EXPECTED_STATECOUNT = 4;\n \tprivate static final int EXPECTED_TRANSITIONCOUNT = 4;\n \n-\tABeanStructuralElementInstance aBeanSei;\n+\tABeanStructuralElementInstance elementDefinition;\n \n \tConcept conceptStateMachines;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1MDAzOQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r372250039", "bodyText": "I think the error message will be printed anyways, so we can remove it from our message.", "author": "andriikovalov-dlr", "createdAt": "2020-01-29T08:41:13Z", "path": "de.dlr.sc.virsat.model.extension.statemachines/src/de/dlr/sc/virsat/model/extension/statemachines/excel/exporter/StateMachineExporter.java", "diffHunk": "@@ -34,57 +34,45 @@\n import de.dlr.sc.virsat.model.extension.statemachines.model.StateMachine;\r\n import de.dlr.sc.virsat.model.extension.statemachines.model.Transition;\r\n \r\n-\r\n-\r\n-\r\n /**\r\n  * Class for exporting excel\r\n- * @author bell_er\r\n- *\r\n  */\r\n public class StateMachineExporter extends ExcelExportHelper implements IExport {\r\n-\t\r\n+\r\n \tCategoryAssignment exportCa;\r\n-\t\r\n+\r\n \t@Override\r\n \tpublic void export(EObject eObject, String path, boolean useDefaultTemplate, String templatePath) {\r\n-\t\tif (eObject instanceof CategoryAssignment) {\t\t\r\n+\t\tif (eObject instanceof CategoryAssignment) {\r\n \t\t\tCategoryAssignment ca = (CategoryAssignment) eObject;\r\n \t\t\tfinal String defaultTemplatePath = \"/resources/StateMachineExportTemplate.xlsx\";\r\n \t\t\t// find the export template\r\n \t\t\ttry {\r\n-\t\t\t\tInputStream is = null;\r\n+\t\t\t\tInputStream iStream = null;\r\n \t\t\t\tif (useDefaultTemplate) {\r\n-\t\t\t\t\tis = Activator.getResourceContentAsString(defaultTemplatePath);\r\n+\t\t\t\t\tiStream = Activator.getResourceContentAsString(defaultTemplatePath);\r\n \t\t\t\t} else {\r\n-\t\t\t\t\tis = new FileInputStream(templatePath);\r\n+\t\t\t\t\tiStream = new FileInputStream(templatePath);\r\n \t\t\t\t}\r\n-\t\t\t\twb = new XSSFWorkbook(is);\r\n-\t\t\t} catch (IOException e) {\r\n-\t\t\t\tStatus status = new Status(Status.ERROR, Activator.getPluginId(), \"Failed to find the Template!\", e);\r\n-\t\t\t\tActivator.getDefault().getLog().log(status);\r\n-\t\t\t}\r\n-\t\t\t\r\n-\t\t\texportData(ca);\r\n-\t\t\tString newPath = path + \"/\" + ca.getFullQualifiedInstanceName() + \".xlsx\";\r\n-\t\t\t// and write the results\t\r\n-\t\t\tFile file = new File(newPath);\r\n-\t\t\ttry {\r\n+\t\t\t\twb = new XSSFWorkbook(iStream);\r\n+\t\t\t\texportData(ca);\r\n+\t\t\t\tString newPath = path + \"/\" + ca.getFullQualifiedInstanceName() + \".xlsx\";\r\n+\t\t\t\t// and write the results\r\n+\t\t\t\tFile file = new File(newPath);\r\n+\t\t\t\t// find the export destination\r\n \t\t\t\tFileOutputStream out = new FileOutputStream(file);\r\n \t\t\t\twb.write(out);\r\n \t\t\t} catch (IOException e) {\r\n-\t\t\t\tStatus status = new Status(Status.ERROR, Activator.getPluginId(), \"Failed to perform an export operation!\", e);\r\n+\t\t\t\tStatus status = new Status(Status.ERROR, Activator.getPluginId(), \"Failed to perform an export operation! \\n\" + e.getMessage(), e);\r", "originalCommit": "1cd339fa093b6fd32c3fd4c6299ae2839aff1209", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0NDA5Mg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r372344092", "bodyText": "There are two different Errors and I wanted to show the User where the problem is in the Dialogbox.", "author": "ALEhmerDLR", "createdAt": "2020-01-29T12:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1MDAzOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1MDgzNg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r372250836", "bodyText": "Looks like there is a wrong line ending here, let's fix it", "author": "andriikovalov-dlr", "createdAt": "2020-01-29T08:43:12Z", "path": "de.dlr.sc.virsat.model.extension.statemachines/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/SMImporter.java", "diffHunk": "@@ -28,59 +28,51 @@\n import de.dlr.sc.virsat.model.extension.statemachines.model.StateMachine;\r\n import de.dlr.sc.virsat.model.extension.statemachines.model.Transition;\r\n \r\n-\r\n-\r\n-\r\n /**\r\n  * Class for Importing Excel files.\r\n- * \r\n- * @author bell_er\r\n- *\r\n  */\r\n public class SMImporter implements IImport {\r\n \tprivate XSSFWorkbook wb;\r\n-\tprivate StateMachine sm;\r\n+\tprivate StateMachine stateMaschine;\r\n \tprivate Concept concept;\r\n-\t\r\n+\r\n \t@Override\r\n \tpublic void importExcel(EObject eObject, Repository repository, XSSFWorkbook wb) {\r\n \t\tinit(eObject, repository, wb);\r\n \t\timportStates();\r\n \t\timportTransitions();\r\n \t}\r\n-\t\r\n+\r\n \t/**\r\n-\t * imports the transitions \r\n-\t * \r\n-\t * @author  Bell_er\r\n+\t * imports the transitions\r\n \t */\r\tprivate void importTransitions() {\r", "originalCommit": "1cd339fa093b6fd32c3fd4c6299ae2839aff1209", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzODA4NQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r372338085", "bodyText": "hopefully done", "author": "ALEhmerDLR", "createdAt": "2020-01-29T11:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI1MDgzNg=="}], "type": "inlineReview", "revised_code": {"commit": "f9e25c027735ef5534f663bfc7a51ccffb9fafd9", "chunk": "diff --git a/de.dlr.sc.virsat.model.extension.statemachines/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/SMImporter.java b/de.dlr.sc.virsat.model.extension.statemachines/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/SMImporter.java\nindex 17ccb45ee..7fc7395bf 100644\n--- a/de.dlr.sc.virsat.model.extension.statemachines/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/SMImporter.java\n+++ b/de.dlr.sc.virsat.model.extension.statemachines/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/SMImporter.java\n\n@@ -45,7 +45,8 @@ public class SMImporter implements IImport {\n \n \t/**\n \t * imports the transitions\n-\t */\n\tprivate void importTransitions() {\n+\t */\n+\tprivate void importTransitions() {\n \t\tfinal Sheet sheet = wb.getSheet(AExcelIo.TEMPLATE_SHEETNAME_TRANSITIONS);\n \n \t\tif (sheet == null) {\n"}}, {"oid": "f9e25c027735ef5534f663bfc7a51ccffb9fafd9", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f9e25c027735ef5534f663bfc7a51ccffb9fafd9", "message": "Resolved some comments- (Task #411)\n\nPut your Message here.\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-29T11:48:19Z", "type": "commit"}, {"oid": "75ecfc955504aa5712ff10db4bbbc2a3a221c618", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/75ecfc955504aa5712ff10db4bbbc2a3a221c618", "message": "Renamed and sorted Faults - (Task #411)\n\nPut your Message here.\n\n---\nTask #411: Improve coding style in excel plugins", "committedDate": "2020-01-29T13:38:12Z", "type": "commit"}, {"oid": "7b519ba1ec1cbc3f5d70fd6e85d229c8c2deb9ae", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/7b519ba1ec1cbc3f5d70fd6e85d229c8c2deb9ae", "message": "Merge remote-tracking branch 'origin/development' into feature/task_411-Improve_coding_style", "committedDate": "2020-02-03T12:07:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY1MTE0NA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r374651144", "bodyText": "Inconsistent whitespace", "author": "andriikovalov-dlr", "createdAt": "2020-02-04T12:49:32Z", "path": "de.dlr.sc.virsat.model.extension.statemachines.test/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/ExcelImporterTest.java", "diffHunk": "@@ -60,9 +60,9 @@ public void setUp() throws Exception {\n \r\n \t\tUserRegistry.getInstance().setSuperUser(true);\r\n \r\n-\t\tconceptStateMachines = ConceptXmiLoader.loadConceptFromPlugin(CONCEPT_ID_MACHINES + \"/concept/concept.xmi\");\r\n+\t    conceptStateMachines = ConceptXmiLoader.loadConceptFromPlugin(CONCEPT_ID_MACHINES + \"/concept/concept.xmi\");\r\n \r\n-\t\tstateMaschine = new StateMachine(conceptStateMachines);\r\n+\t    stateMaschine = new StateMachine(conceptStateMachines);\r", "originalCommit": "7b519ba1ec1cbc3f5d70fd6e85d229c8c2deb9ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "08547e60bad0f02bc99db11e0d7589a52fca4dfb", "chunk": "diff --git a/de.dlr.sc.virsat.model.extension.statemachines.test/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/ExcelImporterTest.java b/de.dlr.sc.virsat.model.extension.statemachines.test/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/ExcelImporterTest.java\nindex 519f42517..2a8d7afb0 100644\n--- a/de.dlr.sc.virsat.model.extension.statemachines.test/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/ExcelImporterTest.java\n+++ b/de.dlr.sc.virsat.model.extension.statemachines.test/src/de/dlr/sc/virsat/model/extension/statemachines/excel/importer/ExcelImporterTest.java\n\n@@ -60,9 +60,9 @@ public class ExcelImporterTest {\n \n \t\tUserRegistry.getInstance().setSuperUser(true);\n \n-\t    conceptStateMachines = ConceptXmiLoader.loadConceptFromPlugin(CONCEPT_ID_MACHINES + \"/concept/concept.xmi\");\n+\t\tconceptStateMachines = ConceptXmiLoader.loadConceptFromPlugin(CONCEPT_ID_MACHINES + \"/concept/concept.xmi\");\n \n-\t    stateMaschine = new StateMachine(conceptStateMachines);\n+\t\tstateMaschine = new StateMachine(conceptStateMachines);\n \n \t\tState state1 = new State(conceptStateMachines);\n \t\tstate1.setName(\"state1\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY1MTUyMg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/433#discussion_r374651522", "bodyText": "The whole file is a whitespace mess. Let's maybe reformat everything in this file to tabs for now?", "author": "andriikovalov-dlr", "createdAt": "2020-02-04T12:50:31Z", "path": "de.dlr.sc.virsat.excel.ui/src/de/dlr/sc/virsat/excel/ui/wizards/ExportPage.java", "diffHunk": "@@ -190,9 +190,9 @@ private void createTemplateUI() {\n \t\tlabel1 = new Label(composite1, SWT.NONE);\r\n \t\tlabel1.setText(\"Template\");\r\n \r\n-\t\t// destination name entry field\r\n+        // destination name entry field\r", "originalCommit": "7b519ba1ec1cbc3f5d70fd6e85d229c8c2deb9ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "08547e60bad0f02bc99db11e0d7589a52fca4dfb", "chunk": "diff --git a/de.dlr.sc.virsat.excel.ui/src/de/dlr/sc/virsat/excel/ui/wizards/ExportPage.java b/de.dlr.sc.virsat.excel.ui/src/de/dlr/sc/virsat/excel/ui/wizards/ExportPage.java\nindex ceb48a444..41a6461fd 100644\n--- a/de.dlr.sc.virsat.excel.ui/src/de/dlr/sc/virsat/excel/ui/wizards/ExportPage.java\n+++ b/de.dlr.sc.virsat.excel.ui/src/de/dlr/sc/virsat/excel/ui/wizards/ExportPage.java\n\n@@ -190,31 +190,31 @@ public class ExportPage extends WizardPage {\n \t\tlabel1 = new Label(composite1, SWT.NONE);\n \t\tlabel1.setText(\"Template\");\n \n-        // destination name entry field\n+\t\t// destination name entry field\n \t\ttemplateField = new Combo(composite1, SWT.SINGLE | SWT.BORDER);\n-        data = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL);\n-        final int widthHint = 250;\n-        data.widthHint = widthHint;\n-        templateField.setLayoutData(data);\n-\n-        String defaultTemplate = wizardSettings.get(DEFAULT_TEMPLATE_KEY);\n-        if (defaultTemplate != null) {\n-        \ttemplateField.setText(defaultTemplate);\n-        \ttemplate = true;\n-        }\n-\n-        // destination browse button\n-        final Button destinationBrowseButton = new Button(composite1, SWT.PUSH);\n-        destinationBrowseButton.setText(BUTTON_TEXT);\n-        destinationBrowseButton.addListener(SWT.Selection, new Listener() {\n-        \t\n+\t\tdata = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL);\n+\t\tfinal int widthHint = 250;\n+\t\tdata.widthHint = widthHint;\n+\t\ttemplateField.setLayoutData(data);\n+\n+\t\tString defaultTemplate = wizardSettings.get(DEFAULT_TEMPLATE_KEY);\n+\t\tif (defaultTemplate != null) {\n+\t\t\ttemplateField.setText(defaultTemplate);\n+\t\t\ttemplate = true;\n+\t\t}\n+\n+\t\t// destination browse button\n+\t\tfinal Button destinationBrowseButton = new Button(composite1, SWT.PUSH);\n+\t\tdestinationBrowseButton.setText(BUTTON_TEXT);\n+\t\tdestinationBrowseButton.addListener(SWT.Selection, new Listener() {\n+\n \t\t\t@Override\n \t\t\tpublic void handleEvent(Event event) {\n \t\t\t\tFileDialog dialog = new FileDialog(getContainer().getShell(), SWT.OPEN | SWT.SHEET);\n \t\t\t\tdialog.setText(DIALOG_TEXT);\n \t\t\t\tdialog.setFilterExtensions(DIALOG_EXTENSIONS);\n \n-\t\t        if (destinationField.getText().equals(\"\")) {\n+\t\t\t\tif (destinationField.getText().equals(\"\")) {\n \t\t\t\t\tdialog.setFileName(DIALOG_DEFAULT_FILE_NAME);\n \t\t\t\t}\n \n"}}, {"oid": "08547e60bad0f02bc99db11e0d7589a52fca4dfb", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/08547e60bad0f02bc99db11e0d7589a52fca4dfb", "message": "Changed the requested Files - (Task #413)\n\n---\nTask #413: Remove dead variables in excel export / import classes and\ntest classes", "committedDate": "2020-02-04T13:01:34Z", "type": "commit"}]}