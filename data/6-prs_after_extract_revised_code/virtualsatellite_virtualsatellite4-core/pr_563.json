{"pr_number": 563, "pr_title": "Improve editing domain's handling of Non-DVLM Models ", "pr_createdAt": "2020-04-05T12:56:12Z", "pr_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/563", "timeline": [{"oid": "7fd3a99159bf1743af6d51dee69f7ab6894ec332", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/7fd3a99159bf1743af6d51dee69f7ab6894ec332", "message": "Add save all option to only save DVLM resources from builders\n\n- Add a option to only save DVLM resources in the editing domain\n- Add option in transactional builders to uses this new saveAll option\nif the builder only works with DVLM resources\n- Update inheritance and equation builder to only save DVLM resources", "committedDate": "2020-04-05T12:51:12Z", "type": "commit"}, {"oid": "efe073ef1deb5a1032a6ec5e7689d88a9dcc6309", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/efe073ef1deb5a1032a6ec5e7689d88a9dcc6309", "message": "Make default behavior to not save non-DVLM resources - (Task #562)", "committedDate": "2020-04-06T06:48:57Z", "type": "commit"}, {"oid": "a610e5b705d9c3f48ef5351fa19054edc98d724e", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/a610e5b705d9c3f48ef5351fa19054edc98d724e", "message": "Add documentation for new saveAll option - (Task #562)", "committedDate": "2020-04-06T06:58:58Z", "type": "commit"}, {"oid": "625fff01372ebe69047206a60974aac21e4b95ec", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/625fff01372ebe69047206a60974aac21e4b95ec", "message": "Add handling of non-dvlm changes - (Task #562)", "committedDate": "2020-04-09T16:30:55Z", "type": "commit"}, {"oid": "6bf5cc0cc10787bfb185bc608cf46e3ca584b047", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/6bf5cc0cc10787bfb185bc608cf46e3ca584b047", "message": "Some minor refactorings - (Task #562)", "committedDate": "2020-04-09T16:49:06Z", "type": "commit"}, {"oid": "d7e6f739a778a8635f352d00cb54c9bd005fffb8", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d7e6f739a778a8635f352d00cb54c9bd005fffb8", "message": "Merge remote-tracking branch 'origin/development' into feature/task_562-Inconsistency_builders_save_non_dvlm", "committedDate": "2020-04-11T22:29:17Z", "type": "commit"}, {"oid": "9cdcb9af5ddd69bf76992017481e67b24cd5873b", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/9cdcb9af5ddd69bf76992017481e67b24cd5873b", "message": "Add test for handling of external models - (Task #562)", "committedDate": "2020-04-13T23:28:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgyMjQ4OA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/563#discussion_r408822488", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\tif (!dvlmResourcesOnly || (dvlmResourcesOnly && fileIsDVLMResource)) {\n          \n          \n            \n            \t\t\t\t\t\tif (fileIsDVLMResource || !dvlmResourcesOnly) {", "author": "andriikovalov-dlr", "createdAt": "2020-04-15T13:00:42Z", "path": "de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomain.java", "diffHunk": "@@ -357,9 +356,12 @@ public void saveAll(boolean supressRemoveDanglingReferences) {\n \t\t\t\tthis.writeExclusive(() -> {\r\n \t\t\t\t\tList<Resource> resources = new ArrayList<Resource>(virSatResourceSet.getResources());\r\n \t\t\t\t\tfor (Resource resource : resources) {\r\n-\t\t\t\t\t\tsaveResource(resource, supressRemoveDanglingReferences);\r\n-\t\t\t\t\t\tvirSatResourceSet.updateDiagnostic(resource);\r\n-\t\t\t\t\t\tvirSatResourceSet.notifyDiagnosticListeners(resource);\r\n+\t\t\t\t\t\tboolean fileIsDVLMResource = VirSatProjectCommons.FILENAME_EXTENSION.equalsIgnoreCase(resource.getURI().fileExtension());\r\n+\t\t\t\t\t\tif (!dvlmResourcesOnly || (dvlmResourcesOnly && fileIsDVLMResource)) {\r", "originalCommit": "9cdcb9af5ddd69bf76992017481e67b24cd5873b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b56459fa23815fb4d74f8818390f19ffcb0603ea", "chunk": "diff --git a/de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomain.java b/de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomain.java\nindex 4f1b59ca3..bcf971d85 100644\n--- a/de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomain.java\n+++ b/de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomain.java\n\n@@ -357,7 +357,7 @@ public class VirSatTransactionalEditingDomain extends TransactionalEditingDomain\n \t\t\t\t\tList<Resource> resources = new ArrayList<Resource>(virSatResourceSet.getResources());\n \t\t\t\t\tfor (Resource resource : resources) {\n \t\t\t\t\t\tboolean fileIsDVLMResource = VirSatProjectCommons.FILENAME_EXTENSION.equalsIgnoreCase(resource.getURI().fileExtension());\n-\t\t\t\t\t\tif (!dvlmResourcesOnly || (dvlmResourcesOnly && fileIsDVLMResource)) {\n+\t\t\t\t\t\tif (fileIsDVLMResource || !dvlmResourcesOnly) {\n \t\t\t\t\t\t\tsaveResource(resource, supressRemoveDanglingReferences);\n \t\t\t\t\t\t\tvirSatResourceSet.updateDiagnostic(resource);\n \t\t\t\t\t\t\tvirSatResourceSet.notifyDiagnosticListeners(resource);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk2MjA1OA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/563#discussion_r408962058", "bodyText": "Let's move repetitive code into a method like doExternalChange()", "author": "andriikovalov-dlr", "createdAt": "2020-04-15T16:09:06Z", "path": "de.dlr.sc.virsat.model.extension.tests.test/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomainNonDVLMTest.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.project.editingDomain;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import org.eclipse.core.resources.IFile;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.emf.ecore.resource.Resource;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.emf.transaction.RecordingCommand;\n+import org.eclipse.emf.transaction.TransactionalEditingDomain;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\n+import de.dlr.sc.virsat.model.extension.tests.model.TestStructuralElement;\n+import de.dlr.sc.virsat.model.extension.tests.test.ATestConceptTestCase;\n+import de.dlr.sc.virsat.model.external.tests.Container;\n+import de.dlr.sc.virsat.model.external.tests.ExternalTestType;\n+import de.dlr.sc.virsat.model.external.tests.TestsFactory;\n+import de.dlr.sc.virsat.project.resources.command.CreateSeiResourceAndFileCommand;\n+\n+public class VirSatTransactionalEditingDomainNonDVLMTest extends ATestConceptTestCase {\n+\t\n+\tprivate static final String EXTERNAL_RESOURCE_NAME = \"test/ExternalModel.etests\";\n+\tprivate Resource externalModelResourceVirSatDomain;\n+\tprivate Container containerVirsatContext;\n+\tprivate IFile modelFile;\n+\t\n+\t\n+\t@Before\n+\tpublic void setUpModel() throws CoreException, IOException {\n+\t\tsuper.setUp();\n+\t\t\n+\t\t// Setup VirSat project context to also respect external changes\n+\t\taddEditingDomainAndRepository(true);\n+\t\texecuteAsCommand(() -> loadConceptAndInstallToRepository(CONCEPT_ID_CORE));\n+\t\texecuteAsCommand(() -> loadTestConcept());\n+\t\tTestStructuralElement tsei = new TestStructuralElement(testConcept);\n+\t\tStructuralElementInstance sei = tsei.getStructuralElementInstance();\n+\t\texecuteAsCommand(() -> repository.getRootEntities().add(sei));\n+\t\teditingDomain.getCommandStack().execute(new CreateSeiResourceAndFileCommand(rs, sei));\n+\t\t\n+\t\t// Create external model resource\n+\t\tmodelFile = testProject.getFile(EXTERNAL_RESOURCE_NAME);\n+\t\texternalModelResourceVirSatDomain = rs.safeGetResource(modelFile, true);\n+\t\t\n+\t\t// Create external model content\n+\t\tcontainerVirsatContext = TestsFactory.eINSTANCE.createContainer();\n+\t\texecuteAsCommand(() -> externalModelResourceVirSatDomain.getContents().add(containerVirsatContext));\n+\t\texternalModelResourceVirSatDomain.save(Collections.emptyMap());\n+\t}\n+\t\n+\t@Test\n+\tpublic void testSaveAll() throws IOException {\n+\t\t// Do some external changes\n+\t\tTransactionalEditingDomain externalEditingDomain = TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain();", "originalCommit": "9cdcb9af5ddd69bf76992017481e67b24cd5873b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "69f18e1038050720e8ffdc20b11b7e82cb01858c", "chunk": "diff --git a/de.dlr.sc.virsat.model.extension.tests.test/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomainNonDVLMTest.java b/de.dlr.sc.virsat.model.extension.tests.test/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomainNonDVLMTest.java\nindex 0cd3a0df2..709fe89d4 100644\n--- a/de.dlr.sc.virsat.model.extension.tests.test/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomainNonDVLMTest.java\n+++ b/de.dlr.sc.virsat.model.extension.tests.test/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomainNonDVLMTest.java\n\n@@ -67,43 +67,17 @@ public class VirSatTransactionalEditingDomainNonDVLMTest extends ATestConceptTes\n \t@Test\n \tpublic void testSaveAll() throws IOException {\n \t\t// Do some external changes\n-\t\tTransactionalEditingDomain externalEditingDomain = TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain();\n-\t\tResourceSet externalResourceSet = externalEditingDomain.getResourceSet();\n-\t\tResource externalResourceHandle = externalResourceSet.getResource(externalModelResourceVirSatDomain.getURI(), true);\n-\t\tContainer newContainerHandle = (Container) externalResourceHandle.getContents().get(0);\n-\t\tExternalTestType type = TestsFactory.eINSTANCE.createExternalTestType();\n-\t\texternalEditingDomain.getCommandStack().execute(new RecordingCommand(externalEditingDomain) {\n-\t\t\t\n-\t\t\t@Override\n-\t\t\tprotected void doExecute() {\n-\t\t\t\tnewContainerHandle.setObjects(type);\n-\t\t\t}\n-\t\t});\n+\t\tContainer newExternalModelContainer = doExternalModelChange();\n \t\t\n-\t\tassertNull(\"Change should be done in external editing domain\", containerVirsatContext.getObjects());\n-\t\texternalResourceHandle.save(Collections.emptyMap());\n+\t\t// Save model from Virtual Satellite to check that its save does not overwrite the external change\n \t\teditingDomain.saveAll();\n-\t\tassertNotNull(\"External change should not be overwritten\", newContainerHandle.getObjects());\n+\t\tassertNotNull(\"External change should not be overwritten\", newExternalModelContainer.getObjects());\n \t}\n \t\n \t@Test\n \tpublic void testReloadModel() throws IOException, CoreException {\n \t\t// Do some external changes\n-\t\tTransactionalEditingDomain externalEditingDomain = TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain();\n-\t\tResourceSet externalResourceSet = externalEditingDomain.getResourceSet();\n-\t\tResource externalResourceHandle = externalResourceSet.getResource(externalModelResourceVirSatDomain.getURI(), true);\n-\t\tContainer newContainerHandle = (Container) externalResourceHandle.getContents().get(0);\n-\t\tExternalTestType type = TestsFactory.eINSTANCE.createExternalTestType();\n-\t\texternalEditingDomain.getCommandStack().execute(new RecordingCommand(externalEditingDomain) {\n-\t\t\t\n-\t\t\t@Override\n-\t\t\tprotected void doExecute() {\n-\t\t\t\tnewContainerHandle.setObjects(type);\n-\t\t\t}\n-\t\t});\n-\t\t\n-\t\tassertNull(\"Change should be done in external editing domain\", containerVirsatContext.getObjects());\n-\t\texternalResourceHandle.save(Collections.emptyMap());\n+\t\tdoExternalModelChange();\n \t\teditingDomain.saveAll();\n \n \t\t// Check reload of changes\n"}}, {"oid": "b56459fa23815fb4d74f8818390f19ffcb0603ea", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/b56459fa23815fb4d74f8818390f19ffcb0603ea", "message": "Update de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomain.java\n\nCo-Authored-By: andriikovalov-dlr <48556822+andriikovalov-dlr@users.noreply.github.com>", "committedDate": "2020-04-16T10:06:06Z", "type": "commit"}, {"oid": "69f18e1038050720e8ffdc20b11b7e82cb01858c", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/69f18e1038050720e8ffdc20b11b7e82cb01858c", "message": "Move external change to dedicated model - (Task #562)", "committedDate": "2020-04-16T11:44:19Z", "type": "commit"}]}