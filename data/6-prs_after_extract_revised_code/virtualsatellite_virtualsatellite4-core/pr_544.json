{"pr_number": 544, "pr_title": "Persistence Layer for Rest API server", "pr_createdAt": "2020-03-28T01:37:58Z", "pr_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544", "timeline": [{"oid": "1a36c7878292c4680cbe9c2e8b2512126f0dfd2a", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/1a36c7878292c4680cbe9c2e8b2512126f0dfd2a", "message": "Planned classes for repositoriy persistence (Task #537)\n\n[skip ci]", "committedDate": "2020-03-24T15:24:58Z", "type": "commit"}, {"oid": "3c7117fe503c82d8326db5361e835c2bb7b12549", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/3c7117fe503c82d8326db5361e835c2bb7b12549", "message": "Add basic RepoRegistry - (Task #537)", "committedDate": "2020-03-25T00:01:22Z", "type": "commit"}, {"oid": "d99a0901a9ad1f4d5804ac1734f109fe46f5ea83", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d99a0901a9ad1f4d5804ac1734f109fe46f5ea83", "message": "Add loading of repo properties - (Task #537)", "committedDate": "2020-03-25T00:41:40Z", "type": "commit"}, {"oid": "f3769923dbeb77851d2d428d213ac6de2cdb77ae", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f3769923dbeb77851d2d428d213ac6de2cdb77ae", "message": "Changed repository in ServerRepository to virsat repository (Task #537)\n\n[skip ci]", "committedDate": "2020-03-25T10:48:14Z", "type": "commit"}, {"oid": "c7ff78da1c16f8cf723a2df5a4a65bffa34aeb6d", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c7ff78da1c16f8cf723a2df5a4a65bffa34aeb6d", "message": "Convenience method for getting server property (Task #537)\n\n[skip ci]", "committedDate": "2020-03-25T10:51:17Z", "type": "commit"}, {"oid": "3c5fee7d75dbbcaf6938377aab67ed6b78de7c5c", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/3c5fee7d75dbbcaf6938377aab67ed6b78de7c5c", "message": "Added enum for version control system (Task #537)\n\n[skip ci]", "committedDate": "2020-03-25T13:04:11Z", "type": "commit"}, {"oid": "ce0aa48ae91c1399453e07a8ea443985fcb670dd", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ce0aa48ae91c1399453e07a8ea443985fcb670dd", "message": "Individual property getters in ServerConfiguration (Task #537)\n\n[skip ci]", "committedDate": "2020-03-25T13:25:19Z", "type": "commit"}, {"oid": "d2b3d49bdfdee51b4b5535ae6de12bbc3fec9240", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d2b3d49bdfdee51b4b5535ae6de12bbc3fec9240", "message": "Add save method to repo config - (Task #537)", "committedDate": "2020-03-25T13:50:08Z", "type": "commit"}, {"oid": "c1e363b12364818a4fec1ffc899606f0d5b82b1e", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c1e363b12364818a4fec1ffc899606f0d5b82b1e", "message": "Merge branch 'feature/task_537-Persistence-for-server-repositories' of https://github.com/virtualsatellite/VirtualSatellite4-Core.git into feature/task_537-Persistence-for-server-repositories", "committedDate": "2020-03-25T13:50:29Z", "type": "commit"}, {"oid": "c70db56f2d2bf60300cee725ce8933ad584ef660", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c70db56f2d2bf60300cee725ce8933ad584ef660", "message": "Ignore generated test file - (Task #537)", "committedDate": "2020-03-25T13:54:20Z", "type": "commit"}, {"oid": "64093464d38d7b864a5a27d81f4256ec969e4f56", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/64093464d38d7b864a5a27d81f4256ec969e4f56", "message": "Adding Project Name to Repo Config - (Task #537)\n\n- Added field to hold user specified project name\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-25T13:55:48Z", "type": "commit"}, {"oid": "f4541b5d98e2a4207855ddeda5ccb90d30a23d4d", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f4541b5d98e2a4207855ddeda5ccb90d30a23d4d", "message": "Merge branch 'feature/task_537-Persistence-for-server-repositories' of https://github.com/virtualsatellite/VirtualSatellite4-Core.git into feature/task_537-Persistence-for-server-repositories", "committedDate": "2020-03-25T13:56:05Z", "type": "commit"}, {"oid": "6daa91001293f775e205a1f51b24a40c7bd875de", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/6daa91001293f775e205a1f51b24a40c7bd875de", "message": "Changed code for creating a new project - (Task #537)\n\n- Moved code from wizzard to project commons\n- Improved progress reporting in project creation\n- Non UI code needed for creating new projects in RepoConfiguration\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-25T13:57:39Z", "type": "commit"}, {"oid": "2748b743a5d162d0662f52b9ea4a7052d4e714c7", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/2748b743a5d162d0662f52b9ea4a7052d4e714c7", "message": "Removed workspace from ServerConfiguration (Task #537)\n\nIt is better to set it in standard eclipse way\n\n[skip ci]", "committedDate": "2020-03-25T14:06:29Z", "type": "commit"}, {"oid": "30ad84f48ce241d8e95643665c7610522c79baf9", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/30ad84f48ce241d8e95643665c7610522c79baf9", "message": "Changed RepositoryConfiguration backend from string to enum (Task #537)\n\n[skip ci]", "committedDate": "2020-03-25T14:48:30Z", "type": "commit"}, {"oid": "d78108746d012d5a54def3b61edd081675288e50", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d78108746d012d5a54def3b61edd081675288e50", "message": "Started Implementation on Repository Server - (Task #537)\n\n- Added Implementation\n- Added Skeleton for test cases\n- Added dependency to project plugin\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-25T14:56:28Z", "type": "commit"}, {"oid": "d8e373c1495fb93775653594eb6a69eab4c69878", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d8e373c1495fb93775653594eb6a69eab4c69878", "message": "Merged Manifest File - (Task #537)\n\n- Merged dependencies\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-25T14:58:03Z", "type": "commit"}, {"oid": "0abd4cb15366a5cf6c0744867cd529b0157479e2", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/0abd4cb15366a5cf6c0744867cd529b0157479e2", "message": "Fixed test Case with Git Enum - (Task #537)\n\nPut your Message here.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-25T15:00:51Z", "type": "commit"}, {"oid": "a73c3b71887409a4c85064a9f5164327a30d8bdf", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/a73c3b71887409a4c85064a9f5164327a30d8bdf", "message": "Add save to server configurations - (Task #537)", "committedDate": "2020-03-25T15:30:38Z", "type": "commit"}, {"oid": "534713c50123c892f6e1ac37728e70ef3df834f4", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/534713c50123c892f6e1ac37728e70ef3df834f4", "message": "Add new test class to all tests - (Task #537)", "committedDate": "2020-03-25T15:31:02Z", "type": "commit"}, {"oid": "5cabf68c97da1a31ef7f84ed85177fee9c709b0d", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/5cabf68c97da1a31ef7f84ed85177fee9c709b0d", "message": "Getter for repositoryConfiguration ServerRepository (Task #537)\n\n[skip ci]", "committedDate": "2020-03-25T15:52:07Z", "type": "commit"}, {"oid": "7c1fc7aa6272a6603aecf4e74771e49abe270a82", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/7c1fc7aa6272a6603aecf4e74771e49abe270a82", "message": "Merge branch 'feature/task_537-Persistence-for-server-repositories' of\nhttps://github.com/virtualsatellite/VirtualSatellite4-Core.git into\nfeature/task_537-Persistence-for-server-repositories\n\nConflicts:\n\tde.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/RepositoryConfigurationTest.java\n\tde.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/configuration/RepositoryConfiguration.java\n\tde.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/configuration/ServerConfiguration.java", "committedDate": "2020-03-25T16:14:40Z", "type": "commit"}, {"oid": "04b6e96dac3fe7e76693ecb489f974c9000d5804", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/04b6e96dac3fe7e76693ecb489f974c9000d5804", "message": "Merge branch 'feature/task_537-Persistence-for-server-repositories' of https://github.com/virtualsatellite/VirtualSatellite4-Core.git into feature/task_537-Persistence-for-server-repositories", "committedDate": "2020-03-25T16:18:26Z", "type": "commit"}, {"oid": "90a8c9ad40c95e4d4e3bdcd9cbf6b499b7b3aa47", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/90a8c9ad40c95e4d4e3bdcd9cbf6b499b7b3aa47", "message": "Test for ServerRepoHelper (Task #537)\n\n[skip ci]", "committedDate": "2020-03-25T16:21:40Z", "type": "commit"}, {"oid": "6f37805b387e055bea0c35fd1a357c65e80a2b4e", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/6f37805b387e055bea0c35fd1a357c65e80a2b4e", "message": "Merge branch 'feature/task_537-Persistence-for-server-repositories' of\nhttps://github.com/virtualsatellite/VirtualSatellite4-Core.git into\nfeature/task_537-Persistence-for-server-repositories\n\nConflicts:\n\tde.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/test/AllTests.java", "committedDate": "2020-03-25T16:38:11Z", "type": "commit"}, {"oid": "5ece10bcb3d7f26eb9ce7fee74d6dc54b61ae6cb", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/5ece10bcb3d7f26eb9ce7fee74d6dc54b61ae6cb", "message": "ServerRepoHelper initializes RepoRegistry (Task #537)", "committedDate": "2020-03-25T17:18:54Z", "type": "commit"}, {"oid": "4390e1cfeb2a5f36bb351f513eccc721e9e4dd32", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4390e1cfeb2a5f36bb351f513eccc721e9e4dd32", "message": "ServerRepoHelper writes RepositoryConfiguration to file (Task #537)", "committedDate": "2020-03-26T10:19:05Z", "type": "commit"}, {"oid": "8cd98b05cfbb06be6c9d2cdc29e667ccc1572ba3", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8cd98b05cfbb06be6c9d2cdc29e667ccc1572ba3", "message": "Removed redundant method in ServerRepoHelper (Task #537)", "committedDate": "2020-03-26T10:49:20Z", "type": "commit"}, {"oid": "a3251b085ba6614494b088abeab6224230e4e3b3", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/a3251b085ba6614494b088abeab6224230e4e3b3", "message": "Initializing projects on server startup (Task #537)", "committedDate": "2020-03-26T10:49:49Z", "type": "commit"}, {"oid": "4e21b4ca446457a9e3c2e7b6192bd27bb0da836a", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4e21b4ca446457a9e3c2e7b6192bd27bb0da836a", "message": "Adding test cases for ServerRepository - (Task #537)\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-26T11:13:35Z", "type": "commit"}, {"oid": "8e80c937582749cc84fb7932329a17e45e6dcb53", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8e80c937582749cc84fb7932329a17e45e6dcb53", "message": "Merge branch 'feature/task_537-Persistence-for-server-repositories' of https://github.com/virtualsatellite/VirtualSatellite4-Core.git into feature/task_537-Persistence-for-server-repositories", "committedDate": "2020-03-26T11:13:47Z", "type": "commit"}, {"oid": "bd09900f9cb8d1d3046eca83b38252f1a20a4eb8", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/bd09900f9cb8d1d3046eca83b38252f1a20a4eb8", "message": "Merge remote-tracking branch 'origin/development' into feature/task_537-Persistence-for-server-repositories", "committedDate": "2020-03-26T11:59:04Z", "type": "commit"}, {"oid": "e5433fa166f36d53ebf159a6d7690bf17bcfb389", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e5433fa166f36d53ebf159a6d7690bf17bcfb389", "message": "Fixing location of test.properties file - (Task #537)\n\n- Moving test file for test case into workspace of executed test\nenvironment.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-26T12:06:30Z", "type": "commit"}, {"oid": "6542050983e26cf4b68ebf2bfb186b15b67d5818", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/6542050983e26cf4b68ebf2bfb186b15b67d5818", "message": "Added project test dependency - (Task #537)\n\n- Added project.test dependency to fragment if server.test\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-26T12:08:10Z", "type": "commit"}, {"oid": "364fe8bf16e6249d28b12421b5563a8c5479afdc", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/364fe8bf16e6249d28b12421b5563a8c5479afdc", "message": "Merge remote-tracking branch 'origin/development' into feature/task_537-Persistence-for-server-repositories", "committedDate": "2020-03-27T06:29:14Z", "type": "commit"}, {"oid": "58e9401f333ab8d82835369ede0f59dccd22e020", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/58e9401f333ab8d82835369ede0f59dccd22e020", "message": "Changing Version Control Backend Checkout - (Task #537)\n\n- Path to local repo and the path of the project to load, are not\nnecessarily the same. Added new parameter for the path to the locally\ncheckout repo additionally to the project descriptor.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T06:42:28Z", "type": "commit"}, {"oid": "c981852c4210f93c4d959b4bed21b4941b1325bc", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c981852c4210f93c4d959b4bed21b4941b1325bc", "message": "Added Parameter to RepositoryConfiguration - (Task #537)\n\n- Added property for localPath in Repository pointing to the project\n- Typed remoteUri and File to specific objects rather than pure strings.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T07:27:14Z", "type": "commit"}, {"oid": "dfdaf6cb3e499685f2c143aa0998d1bf340c8d5d", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/dfdaf6cb3e499685f2c143aa0998d1bf340c8d5d", "message": "Added Atomic Exception for handling lambdas - (Task #537)\n\n- Added AtomicException for handling exceptions thrown over the scope of\nlambdas.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T10:20:37Z", "type": "commit"}, {"oid": "8fac7bb21cd6d10dcaa4f148b9a1d8b13575a600", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8fac7bb21cd6d10dcaa4f148b9a1d8b13575a600", "message": "Refactored ServerRepository - (Task #537)\n\n- Refactored methods for checking out project\n- Refactored methods syncing the project\n- Refactored method to remove the project/repository\n\n- Tests still need to be written\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T11:04:26Z", "type": "commit"}, {"oid": "bcd9d42c29bd1bac65cd9bd6462ea4ad53b8f582", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/bcd9d42c29bd1bac65cd9bd6462ea4ad53b8f582", "message": "Externalized logic for backend creation - (Task #540)\n\n- Moved the logic for backend creation into a in the team plugin. This\nway we have access to all the svn and git dependencies without needing\nto add them to the server plugin.\n\n---\nTask #540: Add REST Endpoint for Management of Repositories", "committedDate": "2020-03-27T11:23:05Z", "type": "commit"}, {"oid": "e43c98f4411b027bc8e1393b174e262b15adc639", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e43c98f4411b027bc8e1393b174e262b15adc639", "message": "Inserted credentials into SVN remote location - (Task #537)\n\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T11:36:40Z", "type": "commit"}, {"oid": "24f32642a8fe5f7e4b024ce93b59985967854cd6", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/24f32642a8fe5f7e4b024ce93b59985967854cd6", "message": "Implementing test cases - (Task #537)\n\n- Test Cases for ServerRepository\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T11:40:13Z", "type": "commit"}, {"oid": "10a885a675d07f503dfc076ffdeef264c960fa7c", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/10a885a675d07f503dfc076ffdeef264c960fa7c", "message": "Merging with latest changes on authentication - (Task #537)\n\n\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T11:45:21Z", "type": "commit"}, {"oid": "58b011c792ba02f3da1f29160effde32e5c0f3ca", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/58b011c792ba02f3da1f29160effde32e5c0f3ca", "message": "Improving test cases - (Task #537)\n\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T12:06:42Z", "type": "commit"}, {"oid": "bde66eef17f1bd7bd8e445e0ea5fe46ab432dc24", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/bde66eef17f1bd7bd8e445e0ea5fe46ab432dc24", "message": "ISsue with Repository Mapping - (Task #537)\n\nPut your Message here.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T12:30:11Z", "type": "commit"}, {"oid": "9f648c18842d0dc73fef0c9fb4cb1bb338c2cf03", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/9f648c18842d0dc73fef0c9fb4cb1bb338c2cf03", "message": "SVN Password & Username are now properly stored and tested - (Task #537)\n\n- Added test case for testing the svn backend creation\n- Properly storing the username and password now\n- Refactored SVN repo creation to a serparate operation for better\nreusability in test cases\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T13:07:42Z", "type": "commit"}, {"oid": "4075496853a0abbde26923d3049e9587348abb3d", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4075496853a0abbde26923d3049e9587348abb3d", "message": "Merge branch 'feature/task_537-Persistence-for-server-repositories' of https://github.com/virtualsatellite/VirtualSatellite4-Core into feature/task_537-Persistency_for_serve", "committedDate": "2020-03-27T13:08:13Z", "type": "commit"}, {"oid": "7c7ccf5a712b8caa0cf085f60cb2ce4277249389", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/7c7ccf5a712b8caa0cf085f60cb2ce4277249389", "message": "Checking if remote repo exists - (Task #537)\n\n- Implemented check in the update functionality of the git backend to\nsee if a remote exists for pulling.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T14:28:41Z", "type": "commit"}, {"oid": "600babe1041cf8caca7377ece4eadb0a90ce48fe", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/600babe1041cf8caca7377ece4eadb0a90ce48fe", "message": "Adding new method to backend - (Task #537)\n\n- Added method for connecting project\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T15:00:54Z", "type": "commit"}, {"oid": "e63e53c631b40281e9596504993dffc271525610", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e63e53c631b40281e9596504993dffc271525610", "message": "Merge - (Task #537)\n\nPut your Message here.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T15:29:32Z", "type": "commit"}, {"oid": "ebecb17f58afcdacf64f9e5171eacd9677fc006c", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ebecb17f58afcdacf64f9e5171eacd9677fc006c", "message": "Changed SVN backend checkout to return new project - (Task #537)\n\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T15:30:54Z", "type": "commit"}, {"oid": "d1029f058c11afe0a66419f542f10c9f68c93655", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d1029f058c11afe0a66419f542f10c9f68c93655", "message": "Added project repositories property to ServerConfiguration (Task #537)", "committedDate": "2020-03-27T16:54:44Z", "type": "commit"}, {"oid": "8b36da87b81a27e578e2dfc51d2906988d3de79d", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8b36da87b81a27e578e2dfc51d2906988d3de79d", "message": "Reverted changes on RepoCOnfiguration - (Task #537)\n\n- Also moved place of creation for projects on checkout.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T17:00:40Z", "type": "commit"}, {"oid": "95f8726bdf97d1264adcdcfea9b847370141480e", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/95f8726bdf97d1264adcdcfea9b847370141480e", "message": "Merging and Fixing - (Task #537)\n\n- Fixed checkout in both svn and git backend\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T17:19:07Z", "type": "commit"}, {"oid": "c02fdb992668a201c90c1566a400c73cd32f9973", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c02fdb992668a201c90c1566a400c73cd32f9973", "message": "Added comments - (Task #537)\n\nPut your Message here.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T17:36:03Z", "type": "commit"}, {"oid": "55daa11f9992609241f02beb24ba60da11d8f725", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/55daa11f9992609241f02beb24ba60da11d8f725", "message": "Added method to checkout or update project - (Task #537)\n\n- Added method to update or checkout repository depending on if it\nexists or not.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T22:41:11Z", "type": "commit"}, {"oid": "9b1025da2c7d356f33dd177f26d6539839405a85", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/9b1025da2c7d356f33dd177f26d6539839405a85", "message": "Improved Versioning Backend Test - (Task #537)\n\n- Improved Checkout test to now checkout project into a subfolder for\nlocal repos, rather than checking it out into the repoHome root\nlocation.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T22:50:26Z", "type": "commit"}, {"oid": "57b3a2b360a0912834ed9646f0574840d688b2a8", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/57b3a2b360a0912834ed9646f0574840d688b2a8", "message": "Implemented method for updateOrCheckout - (Task #537)\n\n- Added test case\n- Improved commit messages\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T23:41:22Z", "type": "commit"}, {"oid": "c1aa79bdbc5c7e5e846ce9b2ccd81eb332b96dd7", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c1aa79bdbc5c7e5e846ce9b2ccd81eb332b96dd7", "message": "Updated test case for retrieveEd... - (Task #537)\n\n- generally improved the test case\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-27T23:47:42Z", "type": "commit"}, {"oid": "c05276983da78c8c40c737ee6fe14d204832b68f", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c05276983da78c8c40c737ee6fe14d204832b68f", "message": "implemented test case checking out 2 projects - (Task #537)\n\n- Added test case to checkout two projects from one repository\n- Minor fixes to Server Repository to improve sub folder generation\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-28T00:44:22Z", "type": "commit"}, {"oid": "d15b3d16e64debbe4bcb21a91438c5ead5b569bb", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d15b3d16e64debbe4bcb21a91438c5ead5b569bb", "message": "Removing unneeded commits in git - (Task #537)\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-28T00:52:22Z", "type": "commit"}, {"oid": "4abe6006c1c12ab2e66c59081b9d9650a0bb9e95", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4abe6006c1c12ab2e66c59081b9d9650a0bb9e95", "message": "Fixed all testcases - (Task #537)\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-28T01:03:51Z", "type": "commit"}, {"oid": "911a3abaef25f691e9346c455363fc07f2c70d0b", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/911a3abaef25f691e9346c455363fc07f2c70d0b", "message": "Fixing test for maven tycho - (Task #537)\n\n- added better cleanup for RepoHelperTest on registry singleton instance\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-28T01:21:46Z", "type": "commit"}, {"oid": "9b7d4735eb8c454063235866128778181f433f5f", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/9b7d4735eb8c454063235866128778181f433f5f", "message": "Fixed checkstyle - (Task #537)\n\n- Removed unnecessary import\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-28T01:35:19Z", "type": "commit"}, {"oid": "8b1bd355f9a3f62d4a6b0e8fd191cb315331e61c", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8b1bd355f9a3f62d4a6b0e8fd191cb315331e61c", "message": "FIxed incomplete assertion - (Task #537)\n\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-30T06:16:19Z", "type": "commit"}, {"oid": "0ed429a37bbb6a4daa9c099f99fa5187647da827", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/0ed429a37bbb6a4daa9c099f99fa5187647da827", "message": "Merge branch 'development' into feature/task_537-Persistency_for_serve\n\nConflicts:\n\tde.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/git/VirSatGitVersionControlBackend.java\n\tde.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/svn/VirSatSvnVersionControlBackend.java", "committedDate": "2020-03-30T07:13:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxODg3Mw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400018873", "bodyText": "Why do we throw IOException and an explicit FileNotFoundException if we only catch the IOException in initRepoRegistry()?", "author": "JAmmermann-DLR", "createdAt": "2020-03-30T08:39:41Z", "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import java.io.File;\r\n+import java.io.FileNotFoundException;\r\n+import java.io.IOException;\r\n+import java.io.OutputStream;\r\n+import java.io.UncheckedIOException;\r\n+import java.net.URISyntaxException;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.Path;\r\n+import java.nio.file.Paths;\r\n+import java.util.stream.Stream;\r\n+\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.server.configuration.ServerConfiguration;\r\n+\r\n+/**\r\n+ * Helper class to save, load and register server repository configurations\r\n+ */\r\n+public class ServerRepoHelper {\r\n+\r\n+\tprivate ServerRepoHelper() { }\r\n+\t\r\n+\t/**\r\n+\t * Adds all known project configs to RepoRegistry\r\n+\t * @throws IOException \r\n+\t */\r\n+\tpublic static void initRepoRegistry() throws IOException {\r\n+\t\ttry (Stream<Path> paths = Files.walk(Paths.get(ServerConfiguration.getRepositoryConfigurationsDir()))) {\r\n+\t\t\tpaths\r\n+\t\t\t\t.filter(Files::isRegularFile)\r\n+\t\t\t\t.forEach(t -> {\r\n+\t\t\t\t\ttry {\r\n+\t\t\t\t\t\tregisterRepositoryConfiguration(t);\r\n+\t\t\t\t\t} catch (IOException e) {\r\n+\t\t\t\t\t\tthrow new UncheckedIOException(e);\r\n+\t\t\t\t\t} catch (URISyntaxException e) {\r\n+\t\t\t\t\t\tthrow new RuntimeException(e);\r\n+\t\t\t\t\t}\r\n+\t\t\t\t});\r\n+\t\t} \r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Creates RepositoryConfiguration for the given configuration file, creates a corresponding ServerRepository\r\n+\t * and registers it in the RepoRegistry\r\n+\t * @param repositoryConfigurationFile properties file for a repository\r\n+\t * @throws IOException \r\n+\t * @throws FileNotFoundException \r\n+\t * @throws URISyntaxException \r\n+\t */\r\n+\tprivate static void registerRepositoryConfiguration(Path repositoryConfigurationFile) throws FileNotFoundException, IOException, URISyntaxException {\r", "originalCommit": "0ed429a37bbb6a4daa9c099f99fa5187647da827", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA2MjQxMg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400062412", "bodyText": "Well spotted. Removed the Exception as suggested.", "author": "PhilMFischer", "createdAt": "2020-03-30T09:48:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxODg3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "4ccdf323a846f1e782de00e3e58b64a02c531b02", "chunk": "diff --git a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java\nindex 0545b2716..918c2f0ac 100644\n--- a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java\n+++ b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java\n\n@@ -58,7 +58,7 @@ public class ServerRepoHelper {\n \t * @throws FileNotFoundException \n \t * @throws URISyntaxException \n \t */\n-\tprivate static void registerRepositoryConfiguration(Path repositoryConfigurationFile) throws FileNotFoundException, IOException, URISyntaxException {\n+\tprivate static void registerRepositoryConfiguration(Path repositoryConfigurationFile) throws IOException, URISyntaxException {\n \t\tRepositoryConfiguration config = new RepositoryConfiguration(Files.newInputStream(repositoryConfigurationFile));\n \t\t\n \t\tServerRepository serverRepository = new ServerRepository(new File(ServerConfiguration.getProjectRepositoriesDir()), config);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAyMzk2Mg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400023962", "bodyText": "The VersionControlSystem should be SVN here and also asserted below\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tcreateTempRepoConfigFile(configsDir, svnProjectName, VersionControlSystem.GIT);\n          \n          \n            \n            \t\tcreateTempRepoConfigFile(configsDir, svnProjectName, VersionControlSystem.SVN);", "author": "JAmmermann-DLR", "createdAt": "2020-03-30T08:47:38Z", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+import static org.junit.Assert.assertFalse;\r\n+import static org.junit.Assert.assertTrue;\r\n+\r\n+import java.io.FileNotFoundException;\r\n+import java.io.IOException;\r\n+import java.net.URISyntaxException;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.Path;\r\n+\r\n+import org.junit.After;\r\n+import org.junit.Before;\r\n+import org.junit.Test;\r\n+\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.server.configuration.ServerConfiguration;\r\n+import de.dlr.sc.virsat.team.VersionControlSystem;\r\n+\r\n+public class ServerRepoHelperTest {\r\n+\r\n+\tprivate Path configsDir;\r\n+\t\r\n+\t@Before\r\n+\tpublic void setUp() throws IOException {\r\n+\t\t// Create temporary dir for repo config files\r\n+\t\tconfigsDir = Files.createTempDirectory(\"test_repo_configs\");\r\n+\t\t\r\n+\t\t// Overwrite path to repo config files\r\n+\t\tServerConfiguration.getProperties().setProperty(ServerConfiguration.REPOSITORY_CONFIGURATIONS_DIR_KEY, configsDir.toString());\r\n+\r\n+\t\tRepoRegistry.getInstance().getRepositories().clear();\r\n+\t}\r\n+\t\r\n+\t@After\r\n+\tpublic void tearDown() {\r\n+\t\tRepoRegistry.getInstance().getRepositories().clear();\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testLoadRepositoryConfigurations() throws IOException {\r\n+\t\tString svnProjectName = \"GitProject1\";\r\n+\t\tString gitProjectName = \"GitProject2\";\r\n+\t\tcreateTempRepoConfigFile(configsDir, svnProjectName, VersionControlSystem.GIT);\r", "originalCommit": "0ed429a37bbb6a4daa9c099f99fa5187647da827", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0MjExOA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400242118", "bodyText": "Fixed, a remote SVN repo had to be created first, otherwise the instantiation of an SVN Repo and Server will fail.", "author": "PhilMFischer", "createdAt": "2020-03-30T14:35:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAyMzk2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "chunk": "diff --git a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\nindex 0c3520fb5..4b5d91574 100644\n--- a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\n+++ b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n  *\n  * This program and the accompanying materials are made available under the\n  * terms of the Eclipse Public License 2.0 which is available at\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAyNDM3Mg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400024372", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tassertEquals(VersionControlSystem.GIT, repoRegistry.getRepository(svnProjectName).getRepositoryConfiguration().getBackend());\n          \n          \n            \n            \t\tassertEquals(VersionControlSystem.SVN, repoRegistry.getRepository(svnProjectName).getRepositoryConfiguration().getBackend());", "author": "JAmmermann-DLR", "createdAt": "2020-03-30T08:48:16Z", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+import static org.junit.Assert.assertFalse;\r\n+import static org.junit.Assert.assertTrue;\r\n+\r\n+import java.io.FileNotFoundException;\r\n+import java.io.IOException;\r\n+import java.net.URISyntaxException;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.Path;\r\n+\r\n+import org.junit.After;\r\n+import org.junit.Before;\r\n+import org.junit.Test;\r\n+\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.server.configuration.ServerConfiguration;\r\n+import de.dlr.sc.virsat.team.VersionControlSystem;\r\n+\r\n+public class ServerRepoHelperTest {\r\n+\r\n+\tprivate Path configsDir;\r\n+\t\r\n+\t@Before\r\n+\tpublic void setUp() throws IOException {\r\n+\t\t// Create temporary dir for repo config files\r\n+\t\tconfigsDir = Files.createTempDirectory(\"test_repo_configs\");\r\n+\t\t\r\n+\t\t// Overwrite path to repo config files\r\n+\t\tServerConfiguration.getProperties().setProperty(ServerConfiguration.REPOSITORY_CONFIGURATIONS_DIR_KEY, configsDir.toString());\r\n+\r\n+\t\tRepoRegistry.getInstance().getRepositories().clear();\r\n+\t}\r\n+\t\r\n+\t@After\r\n+\tpublic void tearDown() {\r\n+\t\tRepoRegistry.getInstance().getRepositories().clear();\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testLoadRepositoryConfigurations() throws IOException {\r\n+\t\tString svnProjectName = \"GitProject1\";\r\n+\t\tString gitProjectName = \"GitProject2\";\r\n+\t\tcreateTempRepoConfigFile(configsDir, svnProjectName, VersionControlSystem.GIT);\r\n+\t\tcreateTempRepoConfigFile(configsDir, gitProjectName, VersionControlSystem.GIT);\r\n+\r\n+\t\tRepoRegistry repoRegistry = RepoRegistry.getInstance();\r\n+\t\tassertTrue(\"Repo registry is empty initially\", repoRegistry.getRepositories().isEmpty());\r\n+\r\n+\t\tServerRepoHelper.initRepoRegistry();\r\n+\t\t\r\n+\t\tassertEquals(2, repoRegistry.getRepositories().size());\r\n+\t\tassertEquals(VersionControlSystem.GIT, repoRegistry.getRepository(svnProjectName).getRepositoryConfiguration().getBackend());\r", "originalCommit": "0ed429a37bbb6a4daa9c099f99fa5187647da827", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0MjIxNQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400242215", "bodyText": "See above.", "author": "PhilMFischer", "createdAt": "2020-03-30T14:35:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAyNDM3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "chunk": "diff --git a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\nindex 0c3520fb5..4b5d91574 100644\n--- a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\n+++ b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\n\n@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n  *\n  * This program and the accompanying materials are made available under the\n  * terms of the Eclipse Public License 2.0 which is available at\n"}}, {"oid": "4ccdf323a846f1e782de00e3e58b64a02c531b02", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4ccdf323a846f1e782de00e3e58b64a02c531b02", "message": "Changes due to review - (Task #537)\n\n- removed redundant exception in throw statement of method\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-30T09:50:29Z", "type": "commit"}, {"oid": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/fb78b625d11b87faa36a9db57f0d32c1126f37b3", "message": "Minor fixes due to review - (Task #537)\n\n- Had to add a remote repo to also test ramping up a SVN backend in the\nrepo registry tests.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-30T10:26:52Z", "type": "commit"}, {"oid": "e7227e1bc568a402e10e4aa8cd2cd4f56ac41191", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e7227e1bc568a402e10e4aa8cd2cd4f56ac41191", "message": "Fixed dependency to CreateSvnServerOperation - (Task #537)\n\n- Tycho cannot resolve fragments as Eclispe IDE does, therefore classes\nwhich are reused in another test fragment need to be placed in a package\nwhich does not exist in the host and this package needs to be implicitly\nimported to the using fragment.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-30T16:11:35Z", "type": "commit"}, {"oid": "4b8479f479a8c7186a6093ca01be355be177815e", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4b8479f479a8c7186a6093ca01be355be177815e", "message": "Fix location of test resource - (Task #537)\n\nMoving test reosurce from plugin path to runtime workspace\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-30T16:15:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAyNDc5Mw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400024793", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t@Before\n          \n          \n            \n            \tpublic void setUp() throws Exception {\n          \n          \n            \n            \t}\n          \n          \n            \n            \n          \n          \n            \n            \t@After\n          \n          \n            \n            \tpublic void tearDown() throws Exception {\n          \n          \n            \n            \t}", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T08:48:54Z", "path": "de.dlr.sc.virsat.commons.test/src/de/dlr/sc/virsat/commons/exception/AtomicExceptionTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.commons.exception;\n+\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class AtomicExceptionTest {\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t}\n+\n+\t@After\n+\tpublic void tearDown() throws Exception {\n+\t}\n+", "originalCommit": "0ed429a37bbb6a4daa9c099f99fa5187647da827", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d6849eb18502544bec57a5fa9c9d6c7cad423d7", "chunk": "diff --git a/de.dlr.sc.virsat.commons.test/src/de/dlr/sc/virsat/commons/exception/AtomicExceptionTest.java b/de.dlr.sc.virsat.commons.test/src/de/dlr/sc/virsat/commons/exception/AtomicExceptionTest.java\nindex 7c46e8dc9..bf963bbab 100644\n--- a/de.dlr.sc.virsat.commons.test/src/de/dlr/sc/virsat/commons/exception/AtomicExceptionTest.java\n+++ b/de.dlr.sc.virsat.commons.test/src/de/dlr/sc/virsat/commons/exception/AtomicExceptionTest.java\n\n@@ -16,14 +16,6 @@ import org.junit.Test;\n \n public class AtomicExceptionTest {\n \n-\t@Before\n-\tpublic void setUp() throws Exception {\n-\t}\n-\n-\t@After\n-\tpublic void tearDown() throws Exception {\n-\t}\n-\n \t@Test\n \tpublic void testThrowIfSet() throws Exception {\n \t\tAtomicException<Exception> ae = new AtomicException<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5ODk0Mw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400098943", "bodyText": "Let's use File.createTempFile() for this", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T10:51:38Z", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/RepositoryConfigurationTest.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.configuration;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+import static org.junit.Assert.assertTrue;\r\n+\r\n+import java.io.ByteArrayInputStream;\r\n+import java.io.File;\r\n+import java.io.FileInputStream;\r\n+import java.io.FileOutputStream;\r\n+import java.io.IOException;\r\n+import java.io.InputStream;\r\n+import java.io.OutputStream;\r\n+import java.net.URISyntaxException;\r\n+import java.nio.charset.StandardCharsets;\r\n+\r\n+import org.apache.commons.io.IOUtils;\r\n+import org.eclipse.core.resources.ResourcesPlugin;\r\n+import org.junit.Test;\r\n+\r\n+import de.dlr.sc.virsat.team.VersionControlSystem;\r\n+\r\n+public class RepositoryConfigurationTest {\r\n+\t\r\n+\t//Test data\r\n+\tprivate static final String TEST_PATH = \"local/In/Repo\";\r\n+\tprivate static final String TEST_REMOTE = \"gitlab.dlr.de/fancy-project\";\r\n+\tprivate static final String TEST_USER = \"TestUser\";\r\n+\tprivate static final String TEST_PASSWORD = \"TestPassword\";\r\n+\tprivate static final String TEST_PROJECT = \"TestProject\";\r\n+\tprivate static final String TEST_BACKEND = \"GIT\";\r\n+\t\r\n+\t@Test\r\n+\tpublic void testLoadProperties() throws IOException, URISyntaxException {\r\n+\t\t\r\n+\t\tString testConfigFileString = RepositoryConfiguration.REMOTE_URL_KEY + \":\" + TEST_REMOTE + \"\\n\" \r\n+\t\t\t\t+ RepositoryConfiguration.PROJECT_NAME_KEY + \":\" + TEST_PROJECT + \"\\n\" \r\n+\t\t\t\t+ RepositoryConfiguration.BACKEND_KEY + \":\" + TEST_BACKEND + \"\\n\" \r\n+\t\t\t\t+ RepositoryConfiguration.FUNCTIONAL_ACCOUNT_NAME_KEY + \":\" + TEST_USER + \"\\n\" \r\n+\t\t\t\t+ RepositoryConfiguration.LOCAL_PATH_KEY + \":\" + TEST_PATH + \"\\n\" \r\n+\t\t\t\t+ RepositoryConfiguration.FUNCTIONAL_ACCOUNT_PASSWORD_KEY + \":\" + TEST_PASSWORD;\r\n+\t\tInputStream inputStream = new ByteArrayInputStream(testConfigFileString.getBytes(StandardCharsets.UTF_8));\r\n+\t\t\r\n+\t\t// Check that all values are loaded\r\n+\t\tRepositoryConfiguration configuration = new RepositoryConfiguration(inputStream);\r\n+\t\tassertEquals(\"Remote loaded\", TEST_REMOTE, configuration.getRemoteUri());\r\n+\t\tassertEquals(\"Backend loaded\", VersionControlSystem.GIT, configuration.getBackend());\r\n+\t\tassertEquals(\"Users loaded\", TEST_USER, configuration.getFunctionalAccountName());\r\n+\t\tassertEquals(\"Password loaded\",\tTEST_PASSWORD, configuration.getFunctionalAccountPassword());\r\n+\t\tassertEquals(\"Project loaded\",\tTEST_PROJECT, configuration.getProjectName());\r\n+\t\tassertEquals(\"Path loaded\", TEST_PATH, configuration.getLocalPath());\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testSaveProperties() throws IOException, URISyntaxException {\r\n+\t\t\r\n+\t\tFile wsRootFile = ResourcesPlugin.getWorkspace().getRoot().getRawLocation().toFile();\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc0OTc0Mg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400749742", "bodyText": "Hmm yes sounds like an idea.", "author": "PhilMFischer", "createdAt": "2020-03-31T08:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5ODk0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "6f513d19c132debdc47ca506819e45ac36dbcbbc", "chunk": "diff --git a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/RepositoryConfigurationTest.java b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/RepositoryConfigurationTest.java\nindex 036b1f19e..eec19f041 100644\n--- a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/RepositoryConfigurationTest.java\n+++ b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/RepositoryConfigurationTest.java\n\n@@ -21,9 +21,8 @@ import java.io.InputStream;\n import java.io.OutputStream;\n import java.net.URISyntaxException;\n import java.nio.charset.StandardCharsets;\n-\n+import java.nio.file.Files;\n import org.apache.commons.io.IOUtils;\n-import org.eclipse.core.resources.ResourcesPlugin;\n import org.junit.Test;\n \n import de.dlr.sc.virsat.team.VersionControlSystem;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwOTg0Ng==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400109846", "bodyText": "Let's use a temporary file for this", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T11:11:40Z", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/ServerConfigurationTest.java", "diffHunk": "@@ -41,7 +50,24 @@ public void testLoadProperties() throws IOException {\n \t\t\r\n \t\tServerConfiguration.loadProperties(inputStream);\r\n \t\tProperties properties = ServerConfiguration.getProperties();\r\n-\t\tassertEquals(1, properties.size());\r\n+\t\tassertFalse(properties.isEmpty());\r\n \t\tassertEquals(testValue, properties.getProperty(testKey));\r\n \t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testSaveProperties() throws IOException {\r\n+\t\t\r\n+\t\tfinal String TEST_FILE_NAME = \"test.properties\";\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc1MDI3MQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400750271", "bodyText": "Agreee", "author": "PhilMFischer", "createdAt": "2020-03-31T08:57:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwOTg0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4b8479f479a8c7186a6093ca01be355be177815e", "chunk": "diff --git a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/ServerConfigurationTest.java b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/ServerConfigurationTest.java\nindex c4f283c16..fb449cd49 100644\n--- a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/ServerConfigurationTest.java\n+++ b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/ServerConfigurationTest.java\n\n@@ -58,15 +59,18 @@ public class ServerConfigurationTest {\n \tpublic void testSaveProperties() throws IOException {\n \t\t\n \t\tfinal String TEST_FILE_NAME = \"test.properties\";\n-\t\tOutputStream outputStream = new FileOutputStream(new File(TEST_FILE_NAME));\n+\t\t\n+\t\tFile wsRootFile = ResourcesPlugin.getWorkspace().getRoot().getRawLocation().toFile();\n+\t\t\n+\t\tOutputStream outputStream = new FileOutputStream(new File(wsRootFile, TEST_FILE_NAME));\n \t\tServerConfiguration.setRepositoryConfigurationsDir(REPOSITORY_CONFIGURATIONS_DIR);\n \t\tServerConfiguration.saveProperties(outputStream);\n \t\t\n-\t\tInputStream inputStream = new FileInputStream(new File(TEST_FILE_NAME));\n+\t\tInputStream inputStream = new FileInputStream(new File(wsRootFile, TEST_FILE_NAME));\n \t\tString stringFromInputStream = IOUtils.toString(inputStream, \"UTF-8\");\n \t\tassertTrue(\"Contains value\", stringFromInputStream.contains(REPOSITORY_CONFIGURATIONS_DIR));\n \t\t\n-\t\tInputStream loadStream = new FileInputStream(new File(TEST_FILE_NAME));\n+\t\tInputStream loadStream = new FileInputStream(new File(wsRootFile, TEST_FILE_NAME));\n \t\tServerConfiguration.loadProperties(loadStream);\n \t\tassertEquals(\"Remote loaded\", REPOSITORY_CONFIGURATIONS_DIR, ServerConfiguration.getRepositoryConfigurationsDir());\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExMTAyNA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400111024", "bodyText": "Let's maybe move this constant directly into the test where we use it? I don't think it's useful as a class field.", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T11:13:51Z", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/ServerConfigurationTest.java", "diffHunk": "@@ -11,24 +11,33 @@\n \r\n import static org.junit.Assert.assertEquals;\r\n import static org.junit.Assert.assertFalse;\r\n+import static org.junit.Assert.assertTrue;\r\n \r\n import java.io.ByteArrayInputStream;\r\n+import java.io.File;\r\n+import java.io.FileInputStream;\r\n+import java.io.FileOutputStream;\r\n import java.io.IOException;\r\n import java.io.InputStream;\r\n+import java.io.OutputStream;\r\n import java.nio.charset.StandardCharsets;\r\n import java.util.Properties;\r\n \r\n+import org.apache.commons.io.IOUtils;\r\n import org.junit.Test;\r\n \r\n import de.dlr.sc.virsat.server.Activator;\r\n \r\n public class ServerConfigurationTest {\r\n+\t\r\n+\tpublic static final String REPOSITORY_CONFIGURATIONS_DIR = \"some/dir\";\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc1ODUwNw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400758507", "bodyText": "Done", "author": "PhilMFischer", "createdAt": "2020-03-31T09:11:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExMTAyNA=="}], "type": "inlineReview", "revised_code": {"commit": "4b8479f479a8c7186a6093ca01be355be177815e", "chunk": "diff --git a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/ServerConfigurationTest.java b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/ServerConfigurationTest.java\nindex c4f283c16..fb449cd49 100644\n--- a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/ServerConfigurationTest.java\n+++ b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/ServerConfigurationTest.java\n\n@@ -24,6 +24,7 @@ import java.nio.charset.StandardCharsets;\n import java.util.Properties;\n \n import org.apache.commons.io.IOUtils;\n+import org.eclipse.core.resources.ResourcesPlugin;\n import org.junit.Test;\n \n import de.dlr.sc.virsat.server.Activator;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyMTg1Ng==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400121856", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void testListAddGet() throws URISyntaxException {\n          \n          \n            \n            \tpublic void testGetRepositories() throws URISyntaxException {", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T11:34:51Z", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import java.io.File;\r\n+import java.net.URISyntaxException;\r\n+\r\n+import org.junit.Assert;\r\n+import org.junit.Test;\r\n+\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.team.VersionControlSystem;\r\n+\r\n+public class RepoRegistryTest {\r\n+\t\r\n+\tprivate static final String REPO_NAME = \"TestRepository\";\r\n+\t\r\n+\t@Test\r\n+\tpublic void testBasicAddGet() throws URISyntaxException {\r\n+\t\t\r\n+\t\t//Create basic test repsoitory \r\n+\t\tfinal ServerRepository TEST_REPO = new ServerRepository(new File(\"\"), new RepositoryConfiguration(\"\", \"\", \"\", VersionControlSystem.GIT, \"\", \"\"));\r\n+\t\t\r\n+\t\tRepoRegistry.getInstance().addRepository(REPO_NAME, TEST_REPO);\r\n+\t\t\r\n+\t\tServerRepository returnedFromRegistry = RepoRegistry.getInstance().getRepository(REPO_NAME);\r\n+\t\t\r\n+\t\tAssert.assertEquals(\"Object should be the same as the one added\", TEST_REPO, returnedFromRegistry);\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testListAddGet() throws URISyntaxException {\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bd09c87c3b177b872635c7ca426fababe597ce3e", "chunk": "diff --git a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java\nindex d69d20cb1..68954a65b 100644\n--- a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java\n+++ b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java\n\n@@ -36,7 +36,8 @@ public class RepoRegistryTest {\n \t}\n \t\n \t@Test\n-\tpublic void testListAddGet() throws URISyntaxException {\n+\tpublic void testGetRepositories() throws URISyntaxException {\n+\n \t\t\n \t\t//Create basic test repsoitory \n \t\tfinal ServerRepository TEST_REPO = new ServerRepository(new File(\"\"), new RepositoryConfiguration(\"\", \"\", \"\", VersionControlSystem.GIT, \"\", \"\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyMjQ3Mw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400122473", "bodyText": "Let's also assert size=1", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T11:36:03Z", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import java.io.File;\r\n+import java.net.URISyntaxException;\r\n+\r\n+import org.junit.Assert;\r\n+import org.junit.Test;\r\n+\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.team.VersionControlSystem;\r\n+\r\n+public class RepoRegistryTest {\r\n+\t\r\n+\tprivate static final String REPO_NAME = \"TestRepository\";\r\n+\t\r\n+\t@Test\r\n+\tpublic void testBasicAddGet() throws URISyntaxException {\r\n+\t\t\r\n+\t\t//Create basic test repsoitory \r\n+\t\tfinal ServerRepository TEST_REPO = new ServerRepository(new File(\"\"), new RepositoryConfiguration(\"\", \"\", \"\", VersionControlSystem.GIT, \"\", \"\"));\r\n+\t\t\r\n+\t\tRepoRegistry.getInstance().addRepository(REPO_NAME, TEST_REPO);\r\n+\t\t\r\n+\t\tServerRepository returnedFromRegistry = RepoRegistry.getInstance().getRepository(REPO_NAME);\r\n+\t\t\r\n+\t\tAssert.assertEquals(\"Object should be the same as the one added\", TEST_REPO, returnedFromRegistry);\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testListAddGet() throws URISyntaxException {\r\n+\t\t\r\n+\t\t//Create basic test repsoitory \r\n+\t\tfinal ServerRepository TEST_REPO = new ServerRepository(new File(\"\"), new RepositoryConfiguration(\"\", \"\", \"\", VersionControlSystem.GIT, \"\", \"\"));\r\n+\t\t\r\n+\t\tRepoRegistry.getInstance().getRepositories().put(REPO_NAME, TEST_REPO);\r\n+\t\t\r\n+\t\tServerRepository returnedFromRegistry = RepoRegistry.getInstance().getRepositories().get(REPO_NAME);\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2NDExNQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400764115", "bodyText": "Done", "author": "PhilMFischer", "createdAt": "2020-03-31T09:19:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyMjQ3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "bd09c87c3b177b872635c7ca426fababe597ce3e", "chunk": "diff --git a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java\nindex d69d20cb1..68954a65b 100644\n--- a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java\n+++ b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java\n\n@@ -36,7 +36,8 @@ public class RepoRegistryTest {\n \t}\n \t\n \t@Test\n-\tpublic void testListAddGet() throws URISyntaxException {\n+\tpublic void testGetRepositories() throws URISyntaxException {\n+\n \t\t\n \t\t//Create basic test repsoitory \n \t\tfinal ServerRepository TEST_REPO = new ServerRepository(new File(\"\"), new RepositoryConfiguration(\"\", \"\", \"\", VersionControlSystem.GIT, \"\", \"\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyMjg2OA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400122868", "bodyText": "Let's assert repositories empty", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T11:36:46Z", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import java.io.File;\r\n+import java.net.URISyntaxException;\r\n+\r\n+import org.junit.Assert;\r\n+import org.junit.Test;\r\n+\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.team.VersionControlSystem;\r\n+\r\n+public class RepoRegistryTest {\r\n+\t\r\n+\tprivate static final String REPO_NAME = \"TestRepository\";\r\n+\t\r\n+\t@Test\r\n+\tpublic void testBasicAddGet() throws URISyntaxException {\r\n+\t\t\r\n+\t\t//Create basic test repsoitory \r\n+\t\tfinal ServerRepository TEST_REPO = new ServerRepository(new File(\"\"), new RepositoryConfiguration(\"\", \"\", \"\", VersionControlSystem.GIT, \"\", \"\"));\r\n+\t\t\r\n+\t\tRepoRegistry.getInstance().addRepository(REPO_NAME, TEST_REPO);\r\n+\t\t\r\n+\t\tServerRepository returnedFromRegistry = RepoRegistry.getInstance().getRepository(REPO_NAME);\r\n+\t\t\r\n+\t\tAssert.assertEquals(\"Object should be the same as the one added\", TEST_REPO, returnedFromRegistry);\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testListAddGet() throws URISyntaxException {\r\n+\t\t\r\n+\t\t//Create basic test repsoitory \r\n+\t\tfinal ServerRepository TEST_REPO = new ServerRepository(new File(\"\"), new RepositoryConfiguration(\"\", \"\", \"\", VersionControlSystem.GIT, \"\", \"\"));\r\n+\t\t\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2NDIyOA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400764228", "bodyText": "Done", "author": "PhilMFischer", "createdAt": "2020-03-31T09:20:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyMjg2OA=="}], "type": "inlineReview", "revised_code": {"commit": "bd09c87c3b177b872635c7ca426fababe597ce3e", "chunk": "diff --git a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java\nindex d69d20cb1..68954a65b 100644\n--- a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java\n+++ b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java\n\n@@ -36,7 +36,8 @@ public class RepoRegistryTest {\n \t}\n \t\n \t@Test\n-\tpublic void testListAddGet() throws URISyntaxException {\n+\tpublic void testGetRepositories() throws URISyntaxException {\n+\n \t\t\n \t\t//Create basic test repsoitory \n \t\tfinal ServerRepository TEST_REPO = new ServerRepository(new File(\"\"), new RepositoryConfiguration(\"\", \"\", \"\", VersionControlSystem.GIT, \"\", \"\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzMTAxMA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400131010", "bodyText": "Let's use a proper setter", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T11:52:00Z", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+import static org.junit.Assert.assertFalse;\r\n+import static org.junit.Assert.assertTrue;\r\n+\r\n+import java.io.FileNotFoundException;\r\n+import java.io.IOException;\r\n+import java.net.URI;\r\n+import java.net.URISyntaxException;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.Path;\r\n+\r\n+import org.apache.commons.io.FileUtils;\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.NullProgressMonitor;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.team.svn.core.utility.SVNUtility;\r\n+import org.junit.After;\r\n+import org.junit.Before;\r\n+import org.junit.Test;\r\n+\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.server.configuration.ServerConfiguration;\r\n+import de.dlr.sc.virsat.team.Activator;\r\n+import de.dlr.sc.virsat.team.VersionControlSystem;\r\n+import de.dlr.sc.virsat.team.svn.CreateSvnServerOperation;\r\n+\r\n+public class ServerRepoHelperTest {\r\n+\r\n+\tprivate Path configsDir;\r\n+\tprivate Path svnPathRepoRemote;\r\n+\tprivate URI svnUriToRemoteRepoPath;\r\n+\t\r\n+\t@Before\r\n+\tpublic void setUp() throws IOException, CoreException {\r\n+\t\t// Create temporary dir for repo config files\r\n+\t\tconfigsDir = Files.createTempDirectory(\"test_repo_configs\");\r\n+\t\t\r\n+\t\t// Overwrite path to repo config files\r\n+\t\tServerConfiguration.getProperties().setProperty(ServerConfiguration.REPOSITORY_CONFIGURATIONS_DIR_KEY, configsDir.toString());\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2NTQ1NA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400765454", "bodyText": "I agree, wasn't it you coding that?", "author": "PhilMFischer", "createdAt": "2020-03-31T09:22:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzMTAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3MDAxOA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400770018", "bodyText": "Yes it was :) I think we made getters and setters later", "author": "andriikovalov-dlr", "createdAt": "2020-03-31T09:29:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzMTAxMA=="}], "type": "inlineReview", "revised_code": {"commit": "e7227e1bc568a402e10e4aa8cd2cd4f56ac41191", "chunk": "diff --git a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\nindex 4b5d91574..86b241f7f 100644\n--- a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\n+++ b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\n\n@@ -33,7 +33,7 @@ import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\n import de.dlr.sc.virsat.server.configuration.ServerConfiguration;\n import de.dlr.sc.virsat.team.Activator;\n import de.dlr.sc.virsat.team.VersionControlSystem;\n-import de.dlr.sc.virsat.team.svn.CreateSvnServerOperation;\n+import de.dlr.sc.virsat.team.test.CreateSvnServerOperation;\n \n public class ServerRepoHelperTest {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI1NzA1OA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400257058", "bodyText": "I suggest we just use two git projects and get rid of all this SVN setup because it's not relevant for this test", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T14:54:41Z", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+import static org.junit.Assert.assertFalse;\r\n+import static org.junit.Assert.assertTrue;\r\n+\r\n+import java.io.FileNotFoundException;\r\n+import java.io.IOException;\r\n+import java.net.URI;\r\n+import java.net.URISyntaxException;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.Path;\r\n+\r\n+import org.apache.commons.io.FileUtils;\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.NullProgressMonitor;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.team.svn.core.utility.SVNUtility;\r\n+import org.junit.After;\r\n+import org.junit.Before;\r\n+import org.junit.Test;\r\n+\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.server.configuration.ServerConfiguration;\r\n+import de.dlr.sc.virsat.team.Activator;\r\n+import de.dlr.sc.virsat.team.VersionControlSystem;\r\n+import de.dlr.sc.virsat.team.svn.CreateSvnServerOperation;\r\n+\r\n+public class ServerRepoHelperTest {\r\n+\r\n+\tprivate Path configsDir;\r\n+\tprivate Path svnPathRepoRemote;\r\n+\tprivate URI svnUriToRemoteRepoPath;\r\n+\t\r\n+\t@Before\r\n+\tpublic void setUp() throws IOException, CoreException {\r\n+\t\t// Create temporary dir for repo config files\r\n+\t\tconfigsDir = Files.createTempDirectory(\"test_repo_configs\");\r\n+\t\t\r\n+\t\t// Overwrite path to repo config files\r\n+\t\tServerConfiguration.getProperties().setProperty(ServerConfiguration.REPOSITORY_CONFIGURATIONS_DIR_KEY, configsDir.toString());\r\n+\r\n+\t\tRepoRegistry.getInstance().getRepositories().clear();\r\n+\t\t\r\n+\t\tsvnPathRepoRemote = Files.createTempDirectory(\"VirtualSatelliteSvnRemote_\");\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2NjA5Mw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400766093", "bodyText": "I did, got complaints from @JAmmermann-DLR . Anyway test coverage is now increase, so we leave it with svn.", "author": "PhilMFischer", "createdAt": "2020-03-31T09:23:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI1NzA1OA=="}], "type": "inlineReview", "revised_code": {"commit": "e7227e1bc568a402e10e4aa8cd2cd4f56ac41191", "chunk": "diff --git a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\nindex 4b5d91574..86b241f7f 100644\n--- a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\n+++ b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepoHelperTest.java\n\n@@ -33,7 +33,7 @@ import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\n import de.dlr.sc.virsat.server.configuration.ServerConfiguration;\n import de.dlr.sc.virsat.team.Activator;\n import de.dlr.sc.virsat.team.VersionControlSystem;\n-import de.dlr.sc.virsat.team.svn.CreateSvnServerOperation;\n+import de.dlr.sc.virsat.team.test.CreateSvnServerOperation;\n \n public class ServerRepoHelperTest {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2MzU0OQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400263549", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\t}", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T15:03:01Z", "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/VirSatServerApplication.java", "diffHunk": "@@ -46,7 +78,8 @@ public void stop() {\n \t\t} catch (Exception e) {\r\n \t\t\tSystem.out.println(\"Failed to shutdown Jetty instance\");\r\n \t\t\te.printStackTrace();\r\n-\t\t}\t\t\r\n+\t\t}\r\n+\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2NzE5OA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400767198", "bodyText": "Can't find it in the code.", "author": "PhilMFischer", "createdAt": "2020-03-31T09:24:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2MzU0OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2NDkzNg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400264936", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @throws URISyntaxException", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T15:04:47Z", "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/configuration/RepositoryConfiguration.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.configuration;\r\n+\r\n+import java.io.FileNotFoundException;\r\n+import java.io.IOException;\r\n+import java.io.InputStream;\r\n+import java.io.OutputStream;\r\n+import java.util.Properties;\r\n+\r\n+import de.dlr.sc.virsat.team.VersionControlSystem;\r\n+\r\n+\r\n+public class RepositoryConfiguration {\r\n+\r\n+\t// Infrastructure\r\n+\tprivate Properties properties = new Properties();\r\n+\t\r\n+\t// Properties key\r\n+\tpublic static final String PROJECT_NAME_KEY = \"project.name\";\r\n+\tpublic static final String BACKEND_KEY = \"repository.backend\";\r\n+\tpublic static final String LOCAL_PATH_KEY = \"repository.localPath\";\r\n+\tpublic static final String REMOTE_URL_KEY = \"repository.remoteURI\";\r\n+\tpublic static final String FUNCTIONAL_ACCOUNT_NAME_KEY = \"repository.credentials.username\";\r\n+\tpublic static final String FUNCTIONAL_ACCOUNT_PASSWORD_KEY = \"repository.credentials.password\";\r\n+\t\r\n+\t/**\r\n+\t * Sets up a property file describing a project repository relation\r\n+\t * @param projectName Name of the project\r\n+\t * @param relativePath of the project in the local repository\r\n+\t * @param remoteUri remote Uri pointing to the remote repository\r\n+\t * @param backend Backend to be used for the repository, usually GIT or SVN\r\n+\t * @param functionalAccountName a user for the functional account to communicate with the backend\r\n+\t * @param functionalAccountPassword a password for the functional account\r\n+\t */\r\n+\tpublic RepositoryConfiguration(\r\n+\t\t\tString projectName,\r\n+\t\t\tString localPath,\r\n+\t\t\tString remoteUri,\r\n+\t\t\tVersionControlSystem backend,\r\n+\t\t\tString functionalAccountName,\r\n+\t\t\tString functionalAccountPassword) {\r\n+\t\tsetProjectName(projectName);\r\n+\t\tsetLocalPath(localPath);\r\n+\t\tsetRemoteUri(remoteUri);\r\n+\t\tsetBackend(backend);\r\n+\t\tsetFunctionalAccountName(functionalAccountName);\r\n+\t\tsetFunctionalAccountPassword(functionalAccountPassword);\r\n+\t}\r\n+\t\r\n+\tpublic RepositoryConfiguration(RepositoryConfiguration repositoryConfiguration) {\r\n+\t\tupdate(repositoryConfiguration);\r\n+\t}\r\n+\t\r\n+\tpublic RepositoryConfiguration(InputStream repoConfInputStream) throws FileNotFoundException, IOException {\r\n+\t\tloadProperties(repoConfInputStream);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Method to update a repository configuration with new values\r\n+\t * @param repositoryBackend the repositoryConfiguration to be used to update the current one\r\n+\t * @throws URISyntaxException\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c12bb3dbf62c03485a0a76518bf25611452e7803", "chunk": "diff --git a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/configuration/RepositoryConfiguration.java b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/configuration/RepositoryConfiguration.java\nindex dd1288328..04ffdad1d 100644\n--- a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/configuration/RepositoryConfiguration.java\n+++ b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/configuration/RepositoryConfiguration.java\n\n@@ -66,7 +66,6 @@ public class RepositoryConfiguration {\n \t/**\n \t * Method to update a repository configuration with new values\n \t * @param repositoryBackend the repositoryConfiguration to be used to update the current one\n-\t * @throws URISyntaxException\n \t */\n \tpublic void update(RepositoryConfiguration repositoryBackend) {\n \t\tsetProjectName(repositoryBackend.getProjectName());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2ODQzNg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400268436", "bodyText": "URI exception probably not thrown anymore", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T15:09:15Z", "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import java.io.File;\r\n+import java.io.FileNotFoundException;\r\n+import java.io.IOException;\r\n+import java.io.OutputStream;\r\n+import java.io.UncheckedIOException;\r\n+import java.net.URISyntaxException;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.Path;\r\n+import java.nio.file.Paths;\r\n+import java.util.stream.Stream;\r\n+\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.server.configuration.ServerConfiguration;\r\n+\r\n+/**\r\n+ * Helper class to save, load and register server repository configurations\r\n+ */\r\n+public class ServerRepoHelper {\r\n+\r\n+\tprivate ServerRepoHelper() { }\r\n+\t\r\n+\t/**\r\n+\t * Adds all known project configs to RepoRegistry\r\n+\t * @throws IOException \r\n+\t */\r\n+\tpublic static void initRepoRegistry() throws IOException {\r\n+\t\ttry (Stream<Path> paths = Files.walk(Paths.get(ServerConfiguration.getRepositoryConfigurationsDir()))) {\r\n+\t\t\tpaths\r\n+\t\t\t\t.filter(Files::isRegularFile)\r\n+\t\t\t\t.forEach(t -> {\r\n+\t\t\t\t\ttry {\r\n+\t\t\t\t\t\tregisterRepositoryConfiguration(t);\r\n+\t\t\t\t\t} catch (IOException e) {\r\n+\t\t\t\t\t\tthrow new UncheckedIOException(e);\r\n+\t\t\t\t\t} catch (URISyntaxException e) {\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NjQ1OQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400776459", "bodyText": "URI Exception is needed, but removed the try with resource.", "author": "PhilMFischer", "createdAt": "2020-03-31T09:39:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2ODQzNg=="}], "type": "inlineReview", "revised_code": {"commit": "dc08f0bd2aeb98b57969b59ea37d7f1459223d60", "chunk": "diff --git a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java\nindex 918c2f0ac..6d2ee5733 100644\n--- a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java\n+++ b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java\n\n@@ -10,7 +10,6 @@\n package de.dlr.sc.virsat.server.repository;\n \n import java.io.File;\n-import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.OutputStream;\n import java.io.UncheckedIOException;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2ODY3Nw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400268677", "bodyText": "URI exception probably not thrown anymore", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T15:09:33Z", "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import java.io.File;\r\n+import java.io.FileNotFoundException;\r\n+import java.io.IOException;\r\n+import java.io.OutputStream;\r\n+import java.io.UncheckedIOException;\r\n+import java.net.URISyntaxException;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.Path;\r\n+import java.nio.file.Paths;\r\n+import java.util.stream.Stream;\r\n+\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.server.configuration.ServerConfiguration;\r\n+\r\n+/**\r\n+ * Helper class to save, load and register server repository configurations\r\n+ */\r\n+public class ServerRepoHelper {\r\n+\r\n+\tprivate ServerRepoHelper() { }\r\n+\t\r\n+\t/**\r\n+\t * Adds all known project configs to RepoRegistry\r\n+\t * @throws IOException \r\n+\t */\r\n+\tpublic static void initRepoRegistry() throws IOException {\r\n+\t\ttry (Stream<Path> paths = Files.walk(Paths.get(ServerConfiguration.getRepositoryConfigurationsDir()))) {\r\n+\t\t\tpaths\r\n+\t\t\t\t.filter(Files::isRegularFile)\r\n+\t\t\t\t.forEach(t -> {\r\n+\t\t\t\t\ttry {\r\n+\t\t\t\t\t\tregisterRepositoryConfiguration(t);\r\n+\t\t\t\t\t} catch (IOException e) {\r\n+\t\t\t\t\t\tthrow new UncheckedIOException(e);\r\n+\t\t\t\t\t} catch (URISyntaxException e) {\r\n+\t\t\t\t\t\tthrow new RuntimeException(e);\r\n+\t\t\t\t\t}\r\n+\t\t\t\t});\r\n+\t\t} \r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Creates RepositoryConfiguration for the given configuration file, creates a corresponding ServerRepository\r\n+\t * and registers it in the RepoRegistry\r\n+\t * @param repositoryConfigurationFile properties file for a repository\r\n+\t * @throws IOException \r\n+\t * @throws FileNotFoundException \r\n+\t * @throws URISyntaxException \r\n+\t */\r\n+\tprivate static void registerRepositoryConfiguration(Path repositoryConfigurationFile) throws IOException, URISyntaxException {\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NzY2MQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400777661", "bodyText": "checked is thrown", "author": "PhilMFischer", "createdAt": "2020-03-31T09:41:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI2ODY3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "dc08f0bd2aeb98b57969b59ea37d7f1459223d60", "chunk": "diff --git a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java\nindex 918c2f0ac..6d2ee5733 100644\n--- a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java\n+++ b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepoHelper.java\n\n@@ -10,7 +10,6 @@\n package de.dlr.sc.virsat.server.repository;\n \n import java.io.File;\n-import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.OutputStream;\n import java.io.UncheckedIOException;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMwNTE2OA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400305168", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This class is a helper class to enabled testing svn repositories\n          \n          \n            \n             * This class is a helper class to enable testing svn repositories", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T15:56:39Z", "path": "de.dlr.sc.virsat.team.test/src/de/dlr/sc/virsat/team/svn/CreateSvnServerOperation.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.team.svn;\r\n+\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.IProgressMonitor;\r\n+import org.eclipse.team.svn.core.SVNMessages;\r\n+import org.eclipse.team.svn.core.connector.ISVNManager;\r\n+import org.eclipse.team.svn.core.extension.CoreExtensionsManager;\r\n+import org.eclipse.team.svn.core.operation.AbstractActionOperation;\r\n+import org.eclipse.team.svn.core.operation.SVNProgressMonitor;\r\n+\r\n+/**\r\n+ * This class is a helper class to enabled testing svn repositories\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e7227e1bc568a402e10e4aa8cd2cd4f56ac41191", "chunk": "diff --git a/de.dlr.sc.virsat.team.test/src/de/dlr/sc/virsat/team/svn/CreateSvnServerOperation.java b/de.dlr.sc.virsat.team.test/src/de/dlr/sc/virsat/team/test/CreateSvnServerOperation.java\nsimilarity index 95%\nrename from de.dlr.sc.virsat.team.test/src/de/dlr/sc/virsat/team/svn/CreateSvnServerOperation.java\nrename to de.dlr.sc.virsat.team.test/src/de/dlr/sc/virsat/team/test/CreateSvnServerOperation.java\nindex 82a899466..42bb005ea 100644\n--- a/de.dlr.sc.virsat.team.test/src/de/dlr/sc/virsat/team/svn/CreateSvnServerOperation.java\n+++ b/de.dlr.sc.virsat.team.test/src/de/dlr/sc/virsat/team/test/CreateSvnServerOperation.java\n\n@@ -7,7 +7,7 @@\n  *\n  * SPDX-License-Identifier: EPL-2.0\n  *******************************************************************************/\n-package de.dlr.sc.virsat.team.svn;\n+package de.dlr.sc.virsat.team.test;\n \n import org.eclipse.core.runtime.CoreException;\n import org.eclipse.core.runtime.IProgressMonitor;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMwNTY4OQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400305689", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @param pathRepoLoacl the local path in which to checkout the project.\n          \n          \n            \n            \t * @param pathRepoLocal the local path in which to checkout the project.", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T15:57:19Z", "path": "de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java", "diffHunk": "@@ -35,11 +34,14 @@\n \t/**\r\n \t * Creates a local checkout of a project from the version control system\r\n \t * @param projectDescription the project metadata\r\n+\t * @param pathRepoLoacl the local path in which to checkout the project.\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "feda272de18bd52febc20868d101276497efae5e", "chunk": "diff --git a/de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java b/de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java\nindex d8f21b12f..7642ff4a3 100644\n--- a/de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java\n+++ b/de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java\n\n@@ -35,7 +35,7 @@ public interface IVirSatVersionControlBackend {\n \t * Creates a local checkout of a project from the version control system\n \t * @param projectDescription the project metadata\n \t * @param pathRepoLoacl the local path in which to checkout the project.\n-\t *  .git or .svn folders should be create within. This folder is usually not your \n+\t *  .git or .svn folders should be created within. This folder is usually not your \n \t *  repository home such as the git home folder.\n \t * @param remoteUri the uri of the version control system\n \t * @param monitor an update monitor\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMwNjAwOA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400306008", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t *  .git or .svn folders should be create within. This folder is usually not your \n          \n          \n            \n            \t *  .git or .svn folders should be created within. This folder is usually not your", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T15:57:46Z", "path": "de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java", "diffHunk": "@@ -35,11 +34,14 @@\n \t/**\r\n \t * Creates a local checkout of a project from the version control system\r\n \t * @param projectDescription the project metadata\r\n+\t * @param pathRepoLoacl the local path in which to checkout the project.\r\n+\t *  .git or .svn folders should be create within. This folder is usually not your \r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "feda272de18bd52febc20868d101276497efae5e", "chunk": "diff --git a/de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java b/de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java\nindex d8f21b12f..7642ff4a3 100644\n--- a/de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java\n+++ b/de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java\n\n@@ -35,7 +35,7 @@ public interface IVirSatVersionControlBackend {\n \t * Creates a local checkout of a project from the version control system\n \t * @param projectDescription the project metadata\n \t * @param pathRepoLoacl the local path in which to checkout the project.\n-\t *  .git or .svn folders should be create within. This folder is usually not your \n+\t *  .git or .svn folders should be created within. This folder is usually not your \n \t *  repository home such as the git home folder.\n \t * @param remoteUri the uri of the version control system\n \t * @param monitor an update monitor\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMxNzY2NQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400317665", "bodyText": "Why do we need this field?", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T16:13:55Z", "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepository.java", "diffHunk": "@@ -0,0 +1,246 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import java.io.File;\r\n+import java.io.IOException;\r\n+import java.net.URI;\r\n+import java.net.URISyntaxException;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.Path;\r\n+import java.util.Arrays;\r\n+import java.util.Comparator;\r\n+import java.util.Objects;\r\n+\r\n+import org.eclipse.core.resources.IProject;\r\n+import org.eclipse.core.resources.IProjectDescription;\r\n+import org.eclipse.core.resources.IWorkspace;\r\n+import org.eclipse.core.resources.IWorkspaceRoot;\r\n+import org.eclipse.core.resources.IWorkspaceRunnable;\r\n+import org.eclipse.core.resources.ResourcesPlugin;\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.NullProgressMonitor;\r\n+\r\n+import de.dlr.sc.virsat.commons.exception.AtomicException;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+import de.dlr.sc.virsat.project.resources.VirSatResourceSet;\r\n+import de.dlr.sc.virsat.project.structure.VirSatProjectCommons;\r\n+import de.dlr.sc.virsat.project.structure.nature.VirSatProjectNature;\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.team.IVirSatVersionControlBackend;\r\n+import de.dlr.sc.virsat.team.VersionControlBackendProvider;\r\n+\r\n+/**\r\n+ * Entry point to the eclipse project.\r\n+ * The class maps a project to a repository of either SVN or GIT.\r\n+ * It also offers functionality to checkout a project or commit to it.\r\n+ */\r\n+public class ServerRepository {\r\n+\t\r\n+\tprivate RepositoryConfiguration repositoryConfiguration;\r\n+\tprivate IProject project;\r\n+\tprivate VirSatResourceSet resourceSet;\r\n+\tprivate VirSatTransactionalEditingDomain ed;\r\n+\tprivate IVirSatVersionControlBackend versionControlBackEnd;\r\n+\t@SuppressWarnings(\"unused\")\r\n+\tprivate File localRepositoryHome;\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc5MDIwMQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400790201", "bodyText": "Removed it, there was an initial idea, but not needed anymore.", "author": "PhilMFischer", "createdAt": "2020-03-31T10:01:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMxNzY2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ab924d70132b7bc42b26ebd37213d71baaf699c9", "chunk": "diff --git a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepository.java b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepository.java\nindex 86a38fa50..e4cdfa177 100644\n--- a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepository.java\n+++ b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepository.java\n\n@@ -50,8 +50,6 @@ public class ServerRepository {\n \tprivate VirSatResourceSet resourceSet;\n \tprivate VirSatTransactionalEditingDomain ed;\n \tprivate IVirSatVersionControlBackend versionControlBackEnd;\n-\t@SuppressWarnings(\"unused\")\n-\tprivate File localRepositoryHome;\n \tprivate File localRepository;\n \t\n \tprotected static final String PREFIX_LOCAL_REPO_NAME = \"repo_\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNDI1OQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400324259", "bodyText": "Let's maybe move this constant inside of the method where it's used?", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T16:23:32Z", "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepository.java", "diffHunk": "@@ -0,0 +1,246 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.server.repository;\r\n+\r\n+import java.io.File;\r\n+import java.io.IOException;\r\n+import java.net.URI;\r\n+import java.net.URISyntaxException;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.Path;\r\n+import java.util.Arrays;\r\n+import java.util.Comparator;\r\n+import java.util.Objects;\r\n+\r\n+import org.eclipse.core.resources.IProject;\r\n+import org.eclipse.core.resources.IProjectDescription;\r\n+import org.eclipse.core.resources.IWorkspace;\r\n+import org.eclipse.core.resources.IWorkspaceRoot;\r\n+import org.eclipse.core.resources.IWorkspaceRunnable;\r\n+import org.eclipse.core.resources.ResourcesPlugin;\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.NullProgressMonitor;\r\n+\r\n+import de.dlr.sc.virsat.commons.exception.AtomicException;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+import de.dlr.sc.virsat.project.resources.VirSatResourceSet;\r\n+import de.dlr.sc.virsat.project.structure.VirSatProjectCommons;\r\n+import de.dlr.sc.virsat.project.structure.nature.VirSatProjectNature;\r\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\r\n+import de.dlr.sc.virsat.team.IVirSatVersionControlBackend;\r\n+import de.dlr.sc.virsat.team.VersionControlBackendProvider;\r\n+\r\n+/**\r\n+ * Entry point to the eclipse project.\r\n+ * The class maps a project to a repository of either SVN or GIT.\r\n+ * It also offers functionality to checkout a project or commit to it.\r\n+ */\r\n+public class ServerRepository {\r\n+\t\r\n+\tprivate RepositoryConfiguration repositoryConfiguration;\r\n+\tprivate IProject project;\r\n+\tprivate VirSatResourceSet resourceSet;\r\n+\tprivate VirSatTransactionalEditingDomain ed;\r\n+\tprivate IVirSatVersionControlBackend versionControlBackEnd;\r\n+\t@SuppressWarnings(\"unused\")\r\n+\tprivate File localRepositoryHome;\r\n+\tprivate File localRepository;\r\n+\t\r\n+\tprotected static final String PREFIX_LOCAL_REPO_NAME = \"repo_\";\r\n+\t/**\r\n+\t * Constructor for a Server Repository.\r\n+\t * @param localRepositoryHome The repository home in which mostly all projects checkout to.\r\n+\t *  The actual checkout will happen into a sub folder with the name of the project. \r\n+\t * @param repositoryConfiguration a Repository configuration carrying all important information such as username password remote uri etc.\r\n+\t * @throws URISyntaxException Make sure the URI is well formed.\r\n+\t */\r\n+\tpublic ServerRepository(File localRepositoryHome, RepositoryConfiguration repositoryConfiguration) throws URISyntaxException {\r\n+\t\tthis.repositoryConfiguration = repositoryConfiguration;\r\n+\t\tthis.localRepositoryHome = localRepositoryHome;\r\n+\t\tthis.localRepository = new File(localRepositoryHome, PREFIX_LOCAL_REPO_NAME + repositoryConfiguration.getProjectName());\r\n+\t\t\r\n+\t\t//checkout the project to workspace\r\n+\t\tString userName = Objects.toString(repositoryConfiguration.getFunctionalAccountName(), \"\");\r\n+\t\tString userPass = Objects.toString(repositoryConfiguration.getFunctionalAccountPassword(), \"\");\r\n+\t\r\n+\t\tVersionControlBackendProvider backendProvider = new VersionControlBackendProvider(\r\n+\t\t\t\trepositoryConfiguration.getBackend(), \r\n+\t\t\t\tnew URI(repositoryConfiguration.getRemoteUri()), \r\n+\t\t\t\tuserName, userPass);\r\n+\t\tversionControlBackEnd = backendProvider.createBackendImplementation();\r\n+\t}\r\n+\t\r\n+\tpublic RepositoryConfiguration getRepositoryConfiguration() {\r\n+\t\treturn repositoryConfiguration;\r\n+\t}\r\n+\r\n+\tpublic File getLocalRepositoryPath() {\r\n+\t\treturn localRepository;\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Method to create a project description which makes sure that\r\n+\t * the location is set to the correct path within the repository home.\r\n+\t * @return returns the well constructed project description\r\n+\t */\r\n+\tpublic IProjectDescription getProjectDescription() {\r\n+\t\tString projectName = repositoryConfiguration.getProjectName();\t\t\r\n+\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();\r\n+\t\tIProjectDescription projectDescription = workspace.newProjectDescription(projectName);\r\n+\t\t\r\n+\t\tString relativeLocalProjectPath = repositoryConfiguration.getLocalPath();\r\n+\t\tFile localRepositoryPath = getLocalRepositoryPath();\r\n+\t\tFile projectInLocalRepositoryPath = new File(localRepositoryPath, relativeLocalProjectPath);\r\n+\t\tprojectDescription.setLocationURI(projectInLocalRepositoryPath.toURI());\r\n+\t\t\r\n+\t\treturn projectDescription;\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Call this method to checkout a repository. The method will also\r\n+\t * take care of transforming the project into a proper virtual satellite\r\n+\t * project if it is not yet one. This means if checking out from an empty repository\r\n+\t * a new project will be created which is completly set up and can be shared\r\n+\t * with the next commit.\r\n+\t * @throws Exception\r\n+\t */\r\n+\tpublic void checkoutRepository() throws Exception {\r\n+\t\tAtomicException<Exception> atomicException = new AtomicException<>();\r\n+\t\t\r\n+\t\trunInWorkspace((progress) -> {\r\n+\t\t\ttry {\r\n+\t\t\t\t\r\n+\t\t\t\tIProjectDescription projectDescription = getProjectDescription();\r\n+\t\t\t\tFile localRepositoryPath = getLocalRepositoryPath();\r\n+\t\t\t\t\t\t\t\t\r\n+\t\t\t\tproject = versionControlBackEnd.checkout(\r\n+\t\t\t\t\t\tprojectDescription,\r\n+\t\t\t\t\t\tlocalRepositoryPath,\r\n+\t\t\t\t\t\trepositoryConfiguration.getRemoteUri().toString(),\r\n+\t\t\t\t\t\tnew NullProgressMonitor()\r\n+\t\t\t\t);\r\n+\t\t\t\r\n+\t\t\t\tcreateVirSatProjectIfNeeded();\r\n+\t\t\t\t\r\n+\t\t\t\tretrieveEdAndResurceSetFromConfiguration();\r\n+\t\t\t} catch (Exception e) {\r\n+\t\t\t\tatomicException.set(e);\r\n+\t\t\t}\r\n+\t\t});\t\r\n+\t\t\r\n+\t\tatomicException.throwIfSet();\r\n+\t}\r\n+\t\r\n+\tprotected void createVirSatProjectIfNeeded() throws CoreException {\r\n+\t\tboolean hasVirSatNature = Arrays.asList(project.getDescription().getNatureIds()).contains(VirSatProjectNature.NATURE_ID);\r\n+\t\tif (!hasVirSatNature) {\r\n+\t\t\tVirSatProjectCommons.createNewProjectRunnable(project).run(new NullProgressMonitor());\r\n+\t\t}\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Removes a repository and the project in the workspace as well\r\n+\t * @throws CoreException\r\n+\t * @throws IOException\r\n+\t */\r\n+\tpublic void removeRepository() throws CoreException, IOException {\r\n+\t\tAtomicException<IOException> atomicException = new AtomicException<>();\r\n+\t\t\r\n+\t\trunInWorkspace((progress) -> {\r\n+\t\t\ttry {\r\n+\t\t\t\tretrieveProjectFromConfiguration();\r\n+\t\t\t\tproject.delete(true, true, progress);\r\n+\r\n+\t\t\t\tPath localRepositoryPath = getLocalRepositoryPath().toPath();\r\n+\t\t\t\tFiles.walk(localRepositoryPath).sorted(Comparator.reverseOrder()).map(Path::toFile).forEach(File::delete);\r\n+\r\n+\t\t\t\tproject = null;\r\n+\t\t\t\tresourceSet = null;\r\n+\t\t\t\ted = null;\r\n+\r\n+\t\t\t} catch (IOException e) {\r\n+\t\t\t\tatomicException.set(e);\r\n+\t\t\t}\r\n+\t\t});\r\n+\t\t\r\n+\t\tatomicException.throwIfSet();\r\n+\t}\r\n+\t\r\n+\tpublic static final String SERVER_REPOSITORY_COMMIT_PUSH_MESSAGE = \"Server Local Commit Before Push: \";\r", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc5MDkxNA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400790914", "bodyText": "I don't agree. Having this message public allows others to access and search for this message in their code.", "author": "PhilMFischer", "createdAt": "2020-03-31T10:02:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyNDI1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ab924d70132b7bc42b26ebd37213d71baaf699c9", "chunk": "diff --git a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepository.java b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepository.java\nindex 86a38fa50..e4cdfa177 100644\n--- a/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepository.java\n+++ b/de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/repository/ServerRepository.java\n\n@@ -50,8 +50,6 @@ public class ServerRepository {\n \tprivate VirSatResourceSet resourceSet;\n \tprivate VirSatTransactionalEditingDomain ed;\n \tprivate IVirSatVersionControlBackend versionControlBackEnd;\n-\t@SuppressWarnings(\"unused\")\n-\tprivate File localRepositoryHome;\n \tprivate File localRepository;\n \t\n \tprotected static final String PREFIX_LOCAL_REPO_NAME = \"repo_\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1MjQ4MA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/544#discussion_r400352480", "bodyText": "Commit message contains empty string?", "author": "andriikovalov-dlr", "createdAt": "2020-03-30T17:05:44Z", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepositoryTest.java", "diffHunk": "@@ -0,0 +1,241 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.server.repository;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.hasSize;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+import java.io.ByteArrayInputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.resources.ResourcesPlugin;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.core.runtime.Status;\n+import org.eclipse.jgit.api.Git;\n+import org.eclipse.jgit.api.errors.GitAPIException;\n+import org.eclipse.jgit.revwalk.RevCommit;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.project.structure.VirSatProjectCommons;\n+import de.dlr.sc.virsat.project.test.AProjectTestCase;\n+import de.dlr.sc.virsat.server.configuration.RepositoryConfiguration;\n+import de.dlr.sc.virsat.team.Activator;\n+import de.dlr.sc.virsat.team.VersionControlSystem;\n+\n+public class ServerRepositoryTest extends AProjectTestCase {\n+\n+\tprivate RepositoryConfiguration testRepoConfig;\n+\tprivate Path pathRepoRemote;\n+\tprivate File localRepoHome;\n+\t\n+\tprivate static final String TEST_PROJECT_NAME = \"LokalVirSatProject\";\n+\t\n+\t@Before\n+\tpublic void setUp() throws CoreException {\n+\t\tsuper.setUp();\n+\t\ttry {\n+\t\t\tpathRepoRemote = Files.createTempDirectory(\"VirtualSatelliteGitRemote_\");\n+\t\t\tlocalRepoHome = Files.createTempDirectory(\"VirtualSatelliteLocalRepoHome_\").toFile();\n+\t\t\tFile fileGitRemoteRepo = pathRepoRemote.toFile();\n+\t\t\tGit.init().setDirectory(fileGitRemoteRepo).setBare(true).call();\n+\t\t} catch (IOException | IllegalStateException | GitAPIException e) {\n+\t\t\tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(),\n+\t\t\t\t\t\"Error during repository setup\", e));\n+\t\t}\n+\t\t\n+\t\ttestRepoConfig = new RepositoryConfiguration(\n+\t\t\t\tTEST_PROJECT_NAME,\n+\t\t\t\t\"\",\n+\t\t\t\tpathRepoRemote.toUri().toString(),\n+\t\t\t\tVersionControlSystem.GIT,\n+\t\t\t\t\"\",\n+\t\t\t\t\"\"\n+\t\t); \n+\t}\n+\n+\t@After\n+\tpublic void tearDown() throws CoreException {\n+\t\ttry {\n+\t\t\tFiles.walk(pathRepoRemote).sorted(Comparator.reverseOrder()).map(Path::toFile).forEach(File::delete);\n+\t\t\tFiles.walk(localRepoHome.toPath()).sorted(Comparator.reverseOrder()).map(Path::toFile).forEach(File::delete);\n+\t\t\tResourcesPlugin.getWorkspace().getRoot().getProject(TEST_PROJECT_NAME).delete(true,  true, null);\n+\t\t} catch (IOException e) {\n+\t\t\tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(),\n+\t\t\t\t\t\"Error during temp remote directory creation\", e));\n+\t\t}\n+\t\tsuper.tearDown();\n+\t}\n+\n+\t@Test\n+\tpublic void testCheckoutRepository() throws Exception {\n+\t\tServerRepository testServerRepository = new ServerRepository(localRepoHome, testRepoConfig);\n+\t\t\n+\t\ttestServerRepository.checkoutRepository();\n+\t\t\n+\t\tFile localRepositoryFolder = testServerRepository.getLocalRepositoryPath();\n+\t\tFile localRepositoryGitFolder = new File(localRepositoryFolder, \".git/\");\n+\t\t\n+\t\tassertTrue(\"Local Repository Got Checked out\", localRepositoryGitFolder.exists());\n+\t\t\n+\t\tIProject checkedOutProject = ResourcesPlugin.getWorkspace().getRoot().getProject(testRepoConfig.getProjectName());\n+\t\tassertTrue(\"The checked Out Project exists\", checkedOutProject.exists());\n+\t}\n+\t\n+\t@Test\n+\tpublic void testCheckoutTwoProjectsFromOneRepository() throws Exception {\n+\t\t// Create two configurations with two Projects but both in their specific subfolder\n+\t\t// and the same remote repository\n+\t\tfinal String TEST_PROJECT_A = \"testProjectA\";\n+\t\tfinal String TEST_PROJECT_B = \"testProjectB\";\n+\t\tRepositoryConfiguration testRepoConfigA = testRepoConfig;\n+\t\tRepositoryConfiguration testRepoConfigB = new RepositoryConfiguration(testRepoConfig);\n+\t\ttestRepoConfigA.setProjectName(TEST_PROJECT_A);\n+\t\ttestRepoConfigB.setProjectName(TEST_PROJECT_B);\n+\t\ttestRepoConfigA.setLocalPath(TEST_PROJECT_A);\n+\t\ttestRepoConfigB.setLocalPath(TEST_PROJECT_B);\n+\t\n+\t\tServerRepository testServerRepositoryA = new ServerRepository(localRepoHome, testRepoConfigA);\n+\t\tServerRepository testServerRepositoryB = new ServerRepository(localRepoHome, testRepoConfigB);\n+\t\t\n+\t\ttestServerRepositoryA.checkoutRepository();\n+\t\t\n+\t\t// Make sure there is no .git file in the repo local home\n+\t\tassertFalse(\"there is no .git in repo home\", new File(localRepoHome, \".git/\").exists());\n+\t\t\n+\t\t// make sure that the parent to the project folder has the .git\n+\t\tFile testProjectPathA = testServerRepositoryA.getProject().getRawLocation().toFile();\n+\t\tFile testProjectRepoA = testProjectPathA.getParentFile();\n+\t\tassertFalse(\"there is no .git in project\", new File(testProjectPathA, \".git/\").exists());\n+\t\tassertTrue(\"there is .git in repo\", new File(testProjectRepoA, \".git/\").exists());\n+\t\t\n+\t\t// Checkin projectA to make sure there are two projects when actually checking out B\n+\t\ttestServerRepositoryA.syncRepository();\n+\t\t\n+\t\ttestServerRepositoryB.checkoutRepository();\n+\t\tFile testProjectPathB = testServerRepositoryB.getProject().getRawLocation().toFile();\n+\t\tFile testProjectRepoB = testProjectPathB.getParentFile();\n+\t\tassertNotEquals(\"Path of Project A is different from Project B\", testProjectPathA, testProjectPathB);\n+\t\tassertFalse(\"there is no .git in project\", new File(testProjectPathB, \".git/\").exists());\n+\t\tassertTrue(\"there is .git in repo\", new File(testProjectRepoB, \".git/\").exists());\n+\t\t\n+\t\t// Files of ProjectA will also exist in repo of ProjectB\n+\t\tassertTrue(\"ProjectA got checked out in ProjectB\", new File(testProjectRepoB, TEST_PROJECT_A).exists());\n+\t\t\n+\t\t// now sync project B to send changes to the server, check that they are not yet in A, sync a and show project B appears there\n+\t\ttestServerRepositoryB.syncRepository();\n+\t\tassertFalse(\"ProjectB is not yet in ProjectA\", new File(testProjectRepoA, TEST_PROJECT_B).exists());\n+\t\t\n+\t\ttestServerRepositoryA.syncRepository();\n+\t\tassertTrue(\"ProjectB is now in ProjectA\", new File(testProjectRepoA, TEST_PROJECT_B).exists());\n+\t}\n+\t\n+\t@Test\n+\tpublic void testRetrieveEdAndResurceSetFromConfiguration() throws URISyntaxException, CoreException {\n+\t\tServerRepository testServerRepository = new ServerRepository(localRepoHome, testRepoConfig);\n+\t\t\n+\t\tassertNull(\"No project retrieved yet\", testServerRepository.getProject());\n+\t\ttestServerRepository.retrieveProjectFromConfiguration();\n+\t\tassertNotNull(\"Project Exists\", testServerRepository.getProject());\n+\t\t\n+\t\ttestServerRepository.retrieveEdAndResurceSetFromConfiguration();\n+\t\t\n+\t\tassertNotNull(\"EditingDomain got set\", testServerRepository.getEd());\n+\t\tassertNotNull(\"ResourceSet got set\", testServerRepository.getResourceSet());\n+\t}\n+\t\n+\t@Test \n+\tpublic void testCreateVirSatProjectIfNeeded() throws CoreException, URISyntaxException {\n+\t\tServerRepository testServerRepository = new ServerRepository(localRepoHome, testRepoConfig);\n+\t\ttestServerRepository.retrieveProjectFromConfiguration();\n+\t\tIProject createdProject = testServerRepository.getProject();\n+\t\t\n+\t\tassertFalse(\"Project is not yet created\", createdProject.exists());\n+\t\tcreatedProject.create(null);\n+\t\tcreatedProject.open(null);\n+\t\t\n+\t\tassertFalse(\"Project is not yet a virsat project\", VirSatProjectCommons.getAllVirSatProjects(ResourcesPlugin.getWorkspace()).contains(createdProject));\n+\t\t\n+\t\ttestServerRepository.createVirSatProjectIfNeeded();\n+\t\n+\t\tassertTrue(\"Project is a virsat project now\", VirSatProjectCommons.getAllVirSatProjects(ResourcesPlugin.getWorkspace()).contains(createdProject));\n+\t}\n+\t\n+\t@Test\n+\tpublic void testSyncProject() throws Exception {\n+\t\tServerRepository testServerRepository = new ServerRepository(localRepoHome, testRepoConfig);\n+\t\ttestServerRepository.checkoutRepository();\n+\n+\t\tIProject createdProject = testServerRepository.getProject();\t\t\n+\t\tassertTrue(\"Project is a virsat project now\", VirSatProjectCommons.getAllVirSatProjects(ResourcesPlugin.getWorkspace()).contains(createdProject));\n+\n+\t\ttestServerRepository.syncRepository();\n+\t\t\n+\t\tboolean logEntriesExist = Git.open(pathRepoRemote.toFile()).log().call().iterator().hasNext();\n+\t\tassertTrue(\"There are logs now\", logEntriesExist);\n+\t\n+\t\tRevCommit logAfterSync = Git.open(pathRepoRemote.toFile()).log().call().iterator().next();\n+\t\t\n+\t\tassertThat(\"remote repo does not yet have a commit as expected\", logAfterSync.getFullMessage(), containsString(\"\"));", "originalCommit": "fb78b625d11b87faa36a9db57f0d32c1126f37b3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab924d70132b7bc42b26ebd37213d71baaf699c9", "chunk": "diff --git a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepositoryTest.java b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepositoryTest.java\nindex 3f2cfc313..6c5055854 100644\n--- a/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepositoryTest.java\n+++ b/de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/ServerRepositoryTest.java\n\n@@ -62,17 +62,23 @@ public class ServerRepositoryTest extends AProjectTestCase {\n \t\t\tFile fileGitRemoteRepo = pathRepoRemote.toFile();\n \t\t\tGit.init().setDirectory(fileGitRemoteRepo).setBare(true).call();\n \t\t} catch (IOException | IllegalStateException | GitAPIException e) {\n-\t\t\tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(),\n-\t\t\t\t\t\"Error during repository setup\", e));\n+\t\t\tActivator.getDefault().getLog().log(\n+\t\t\t\tnew Status(\n+\t\t\t\t\tStatus.ERROR,\n+\t\t\t\t\tActivator.getPluginId(),\n+\t\t\t\t\t\"Error during repository setup\",\n+\t\t\t\t\te\n+\t\t\t\t)\n+\t\t\t);\n \t\t}\n \t\t\n \t\ttestRepoConfig = new RepositoryConfiguration(\n-\t\t\t\tTEST_PROJECT_NAME,\n-\t\t\t\t\"\",\n-\t\t\t\tpathRepoRemote.toUri().toString(),\n-\t\t\t\tVersionControlSystem.GIT,\n-\t\t\t\t\"\",\n-\t\t\t\t\"\"\n+\t\t\tTEST_PROJECT_NAME,\n+\t\t\t\"\",\n+\t\t\tpathRepoRemote.toUri().toString(),\n+\t\t\tVersionControlSystem.GIT,\n+\t\t\t\"\",\n+\t\t\t\"\"\n \t\t); \n \t}\n \n"}}, {"oid": "dc08f0bd2aeb98b57969b59ea37d7f1459223d60", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/dc08f0bd2aeb98b57969b59ea37d7f1459223d60", "message": "Removed unused import - (Task #537)\n\n- Removed unused import that was somehow not marked as unused in eclipse\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-30T18:16:21Z", "type": "commit"}, {"oid": "62292d3cd7e3185e70f9be99e2cba327d75ee128", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/62292d3cd7e3185e70f9be99e2cba327d75ee128", "message": "Removed bad import - (Task #537)\n\n- Warning on travis about uneeded import\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-31T06:51:04Z", "type": "commit"}, {"oid": "8cad9b06bf1e1a6bc2fbed4c2728d1350e65f5be", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8cad9b06bf1e1a6bc2fbed4c2728d1350e65f5be", "message": "Merge branch 'feature/task_537-Persistence-for-server-repositories' of https://github.com/virtualsatellite/VirtualSatellite4-Core.git into feature/task_537-Persistence-for-server-repositories", "committedDate": "2020-03-31T06:51:18Z", "type": "commit"}, {"oid": "0d6849eb18502544bec57a5fa9c9d6c7cad423d7", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/0d6849eb18502544bec57a5fa9c9d6c7cad423d7", "message": "Update de.dlr.sc.virsat.commons.test/src/de/dlr/sc/virsat/commons/exception/AtomicExceptionTest.java\n\nCo-Authored-By: andriikovalov-dlr <48556822+andriikovalov-dlr@users.noreply.github.com>", "committedDate": "2020-03-31T08:54:06Z", "type": "commit"}, {"oid": "bd09c87c3b177b872635c7ca426fababe597ce3e", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/bd09c87c3b177b872635c7ca426fababe597ce3e", "message": "Update de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/repository/RepoRegistryTest.java\n\nCo-Authored-By: andriikovalov-dlr <48556822+andriikovalov-dlr@users.noreply.github.com>", "committedDate": "2020-03-31T08:57:57Z", "type": "commit"}, {"oid": "feda272de18bd52febc20868d101276497efae5e", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/feda272de18bd52febc20868d101276497efae5e", "message": "Update de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java\n\nCo-Authored-By: andriikovalov-dlr <48556822+andriikovalov-dlr@users.noreply.github.com>", "committedDate": "2020-03-31T08:58:17Z", "type": "commit"}, {"oid": "9e3c7db66053394ccabc087ccad347f582258a21", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/9e3c7db66053394ccabc087ccad347f582258a21", "message": "Update de.dlr.sc.virsat.team/src/de/dlr/sc/virsat/team/IVirSatVersionControlBackend.java\n\nCo-Authored-By: andriikovalov-dlr <48556822+andriikovalov-dlr@users.noreply.github.com>", "committedDate": "2020-03-31T08:58:35Z", "type": "commit"}, {"oid": "6f513d19c132debdc47ca506819e45ac36dbcbbc", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/6f513d19c132debdc47ca506819e45ac36dbcbbc", "message": "Changed from WS to temp file in test - (Task #537)\n\n- Creating .properties file in temporary folder instead of the eclipse\nruntime workspace.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-31T09:08:05Z", "type": "commit"}, {"oid": "1d505063b0ea6807982ca3df791b0d55f270e9fb", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/1d505063b0ea6807982ca3df791b0d55f270e9fb", "message": "Converted line delimiters to windows style - (Task #537)\n\n- fixed line delimiters in server properties\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-31T09:10:09Z", "type": "commit"}, {"oid": "16f7d37627b8218b2a8502789efa4cf62815becd", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/16f7d37627b8218b2a8502789efa4cf62815becd", "message": "Improved Test Case for Repo Registry - (Task #537)\n\n- Added further asserts as stated in Review\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-31T09:19:40Z", "type": "commit"}, {"oid": "4aea14112296648f166ed4a348147c28508e3752", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4aea14112296648f166ed4a348147c28508e3752", "message": "Fixes due to review - (Task #537)\n\n- Using setter of ServerCOnfiguration rather than writing the\nproperties.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-31T09:21:55Z", "type": "commit"}, {"oid": "c12bb3dbf62c03485a0a76518bf25611452e7803", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c12bb3dbf62c03485a0a76518bf25611452e7803", "message": "Update de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/configuration/RepositoryConfiguration.java\n\nCo-Authored-By: andriikovalov-dlr <48556822+andriikovalov-dlr@users.noreply.github.com>", "committedDate": "2020-03-31T09:25:33Z", "type": "commit"}, {"oid": "7408411832d136494531aba171c2392ba6164f71", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/7408411832d136494531aba171c2392ba6164f71", "message": "Removed try with resource from Helper - (Task #537)\n\n- Removed try with resource since it does not need to close files.\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-31T09:39:16Z", "type": "commit"}, {"oid": "c264cec1000a7b4065582a00971c729757beb843", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c264cec1000a7b4065582a00971c729757beb843", "message": "Merge branch 'feature/task_537-Persistence-for-server-repositories' of https://github.com/virtualsatellite/VirtualSatellite4-Core.git into feature/task_537-Persistence-for-server-repositories", "committedDate": "2020-03-31T09:42:15Z", "type": "commit"}, {"oid": "ab924d70132b7bc42b26ebd37213d71baaf699c9", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ab924d70132b7bc42b26ebd37213d71baaf699c9", "message": "MInor changes due to review - (Task #537)\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-31T10:06:33Z", "type": "commit"}, {"oid": "49057da3039e8758c3711b3640b530c221892183", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/49057da3039e8758c3711b3640b530c221892183", "message": "Fixed commit message assertion in ServerRepositoryTest (Task #537)", "committedDate": "2020-03-31T11:12:29Z", "type": "commit"}, {"oid": "9c5cf0883e715ef5d693d8ec70f986587aecacdf", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/9c5cf0883e715ef5d693d8ec70f986587aecacdf", "message": "Moved a constant to the top of the class (Task #537)", "committedDate": "2020-03-31T11:14:00Z", "type": "commit"}, {"oid": "658b782e1bbac06b1f4e3eb3b305c35f32d0ba91", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/658b782e1bbac06b1f4e3eb3b305c35f32d0ba91", "message": "Fixing import warnings  - (Task #537)\n\n- Removed non needed imports for AtomicExceptionTest\n\n---\nTask #537: Persistency for server project repositories", "committedDate": "2020-03-31T11:48:14Z", "type": "commit"}, {"oid": "8e7b85daac330cdb9619975ab08f9eab9d0f29f9", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8e7b85daac330cdb9619975ab08f9eab9d0f29f9", "message": "Merge branch 'feature/task_537-Persistence-for-server-repositories' of https://github.com/virtualsatellite/VirtualSatellite4-Core.git into feature/task_537-Persistence-for-server-repositories", "committedDate": "2020-03-31T11:48:49Z", "type": "commit"}]}