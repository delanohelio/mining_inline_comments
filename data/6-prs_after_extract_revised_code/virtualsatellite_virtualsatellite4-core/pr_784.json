{"pr_number": 784, "pr_title": "Update requirements concept to support basic verification", "pr_createdAt": "2020-10-12T09:57:50Z", "pr_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/784", "timeline": [{"oid": "771d4f22c512bdd13c546126f96e7f2efc763fe2", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/771d4f22c512bdd13c546126f96e7f2efc763fe2", "message": "Add concept basics for requirements verification - (Task #783)", "committedDate": "2020-10-12T09:53:27Z", "type": "commit"}, {"oid": "70e18bc4b5f71e51aeef36153ca1e8529ef7a8e1", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/70e18bc4b5f71e51aeef36153ca1e8529ef7a8e1", "message": "Update existing editors to new requirements concept - (Task #783)", "committedDate": "2020-10-12T09:53:57Z", "type": "commit"}, {"oid": "9e18e447119c0bcec33b84ab3e49c106e51ae3d3", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/9e18e447119c0bcec33b84ab3e49c106e51ae3d3", "message": "Merge remote-tracking branch 'origin/development' into feature/test_783-Requirements_verification", "committedDate": "2020-10-12T09:54:33Z", "type": "commit"}, {"oid": "165c2b6f9f3b105ba3b544677c1d743071de8abe", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/165c2b6f9f3b105ba3b544677c1d743071de8abe", "message": "Add icons for requirements verification elements - (Task #783)", "committedDate": "2020-10-12T11:02:14Z", "type": "commit"}, {"oid": "d1ae3431312714177eeb69ae8b37fabc2bdd33ad", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d1ae3431312714177eeb69ae8b37fabc2bdd33ad", "message": "Removed empty methods - (Task #783)", "committedDate": "2020-10-12T11:06:02Z", "type": "commit"}, {"oid": "e494ebb0d3fe590c43b4b66c68d500e92aa2168c", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e494ebb0d3fe590c43b4b66c68d500e92aa2168c", "message": "Fix spot bus error - (Task #783)", "committedDate": "2020-10-12T11:08:28Z", "type": "commit"}, {"oid": "f68efd6ba5bbaa530782a658929903b248ac003f", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f68efd6ba5bbaa530782a658929903b248ac003f", "message": "Fix resizing of table columns", "committedDate": "2020-10-12T12:01:02Z", "type": "commit"}, {"oid": "65dc54e8d2adb6f2c37b421c177be94c96fcf566", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/65dc54e8d2adb6f2c37b421c177be94c96fcf566", "message": "Remove old classes - (Task #783)", "committedDate": "2020-10-12T12:06:55Z", "type": "commit"}, {"oid": "93450e439c83c70ebd27911090ecc7babf38a93b", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/93450e439c83c70ebd27911090ecc7babf38a93b", "message": "Add null check to migration of concepts - (Task #783)", "committedDate": "2020-10-12T14:09:06Z", "type": "commit"}, {"oid": "f023f17e16afd0ba655c1d9697c572cf14658532", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f023f17e16afd0ba655c1d9697c572cf14658532", "message": "Add test for setter method - (Task #783)", "committedDate": "2020-10-12T15:53:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2NjMzNg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/784#discussion_r503466336", "bodyText": "The 2 probably could use a constant rather than just the comment.", "author": "SaMuellerDLR", "createdAt": "2020-10-12T18:30:28Z", "path": "de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/UiSnippetCustomRequirementsAttributeTable.java", "diffHunk": "@@ -167,6 +166,7 @@ protected void createTableColumns(EditingDomain editingDomain) {\n \r\n \t\t\t// Add necessary table columns\r\n \t\t\tfor (int i = 0; i < maxNumberAttributes; i++) {\r\n+\t\t\t\tint tableIndexColumn = i + 2; // status + verification column\r", "originalCommit": "f023f17e16afd0ba655c1d9697c572cf14658532", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c013533bb7e316d1b45f95a64b1d00d06cbf68b", "chunk": "diff --git a/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/UiSnippetCustomRequirementsAttributeTable.java b/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/UiSnippetCustomRequirementsAttributeTable.java\nindex 7381f542e..4d1c131ab 100644\n--- a/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/UiSnippetCustomRequirementsAttributeTable.java\n+++ b/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/UiSnippetCustomRequirementsAttributeTable.java\n\n@@ -166,7 +167,7 @@ public abstract class UiSnippetCustomRequirementsAttributeTable extends AUiSnipp\n \n \t\t\t// Add necessary table columns\n \t\t\tfor (int i = 0; i < maxNumberAttributes; i++) {\n-\t\t\t\tint tableIndexColumn = i + 2; // status + verification column\n+\t\t\t\tint tableIndexColumn = i + FIXED_COLUMNS_NUMBER; \n \t\t\t\tStringBuilder columnName = new StringBuilder();\n \t\t\t\tfor (RequirementType requirementType : requirementTypes) {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4MjQ1Nw==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/784#discussion_r503482457", "bodyText": "There seems to be quite a bit of if branching going on in this method.\nCould we maybe move this if block into the above if?\nThen we could also move the caType declaration inside and could drop the caType != null in the if.", "author": "SaMuellerDLR", "createdAt": "2020-10-12T19:08:27Z", "path": "de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/celleditor/DefaultVerificationTypeReferenceCellEditingSupport.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.celleditor;\r\n+\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import org.eclipse.jface.viewers.ColumnViewer;\r\n+\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.ReferenceProperty;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ComposedPropertyInstance;\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.DefaultVerification;\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.VerificationType;\r\n+import de.dlr.sc.virsat.uiengine.ui.cellEditor.aproperties.ReferencePropertyCellEditingSupport;\r\n+\r\n+/**\r\n+ * Class simply using bean setters for default verification type\r\n+ *\r\n+ */\r\n+public class DefaultVerificationTypeReferenceCellEditingSupport extends ReferencePropertyCellEditingSupport {\r\n+\r\n+\t/**\r\n+\t * @param editingDomain\r\n+\t * @param viewer\r\n+\t * @param property\r\n+\t */\r\n+\tpublic DefaultVerificationTypeReferenceCellEditingSupport(EditingDomain editingDomain, ColumnViewer viewer,\r\n+\t\t\tReferenceProperty property) {\r\n+\t\tsuper(editingDomain, viewer, property);\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tprotected Command createSetCommand(Object element, Object userInputValue) {\r\n+\t\tCategoryAssignment caDefaultVerification = null;\r\n+\t\tCategoryAssignment caType = null;\r\n+\t\tif (element instanceof CategoryAssignment) {\r\n+\t\t\tcaDefaultVerification = (CategoryAssignment) element;\r\n+\t\t} else if (element instanceof ComposedPropertyInstance) {\r\n+\t\t\tcaDefaultVerification = ((ComposedPropertyInstance) element).getTypeInstance();\r\n+\t\t} else {\r\n+\t\t\treturn super.createSetCommand(element, userInputValue);\r\n+\t\t}\r\n+\t\tif (userInputValue instanceof CategoryAssignment) {\r\n+\t\t\tcaType = (CategoryAssignment) userInputValue;\r\n+\t\t}\r\n+\t\tif (caDefaultVerification.getType().getFullQualifiedName().equals(DefaultVerification.FULL_QUALIFIED_CATEGORY_NAME)\r", "originalCommit": "f023f17e16afd0ba655c1d9697c572cf14658532", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MjA2Mg==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/784#discussion_r503572062", "bodyText": "Not really sure if it's better like this, because we now still have to check if caType is a CA and then also check if it is the right CA... all in one IF... but it's less branching now :D", "author": "franzTobiasDLR", "createdAt": "2020-10-12T22:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4MjQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyMzM3NQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/784#discussion_r503723375", "bodyText": "Hmm yeah, it looked nicer in my head.\nIn the future we should maybe consider making a helper function in CategoryAssignmentHelper to check if an object is a ca & has the correct type given by a fqn.\nI believe we probably have to check both in a lot of places.", "author": "SaMuellerDLR", "createdAt": "2020-10-13T07:25:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4MjQ1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "4c013533bb7e316d1b45f95a64b1d00d06cbf68b", "chunk": "diff --git a/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/celleditor/DefaultVerificationTypeReferenceCellEditingSupport.java b/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/celleditor/DefaultVerificationTypeReferenceCellEditingSupport.java\nindex 7b2903663..a08dff3cd 100644\n--- a/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/celleditor/DefaultVerificationTypeReferenceCellEditingSupport.java\n+++ b/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/celleditor/DefaultVerificationTypeReferenceCellEditingSupport.java\n\n@@ -38,8 +38,8 @@ public class DefaultVerificationTypeReferenceCellEditingSupport extends Referenc\n \n \t@Override\n \tprotected Command createSetCommand(Object element, Object userInputValue) {\n+\t\t// Checking the element\n \t\tCategoryAssignment caDefaultVerification = null;\n-\t\tCategoryAssignment caType = null;\n \t\tif (element instanceof CategoryAssignment) {\n \t\t\tcaDefaultVerification = (CategoryAssignment) element;\n \t\t} else if (element instanceof ComposedPropertyInstance) {\n"}}, {"oid": "4c013533bb7e316d1b45f95a64b1d00d06cbf68b", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4c013533bb7e316d1b45f95a64b1d00d06cbf68b", "message": "Review input - (Task #783)", "committedDate": "2020-10-12T22:47:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc1Mjg0NQ==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/784#discussion_r504752845", "bodyText": "Apparently wrong javadoc", "author": "andriikovalov-dlr", "createdAt": "2020-10-14T15:04:03Z", "path": "de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/provider/RequirementsAttributeLabelProvider.java", "diffHunk": "@@ -207,23 +207,17 @@ protected void cleanUpAttribue(AttributeValue att) {\n \t * @param req the requirement for which a trace label is created\r", "originalCommit": "4c013533bb7e316d1b45f95a64b1d00d06cbf68b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "180755b1b1f141d46da5d9f7f3a8ab0192190c7b", "chunk": "diff --git a/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/provider/RequirementsAttributeLabelProvider.java b/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/provider/RequirementsAttributeLabelProvider.java\nindex 3e27d224e..b41ee79e6 100644\n--- a/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/provider/RequirementsAttributeLabelProvider.java\n+++ b/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/provider/RequirementsAttributeLabelProvider.java\n\n@@ -202,10 +202,10 @@ public class RequirementsAttributeLabelProvider extends VirSatTransactionalAdapt\n \t}\n \t\n \t/**\n-\t * Create a label for requirements traces customized to this table \n+\t * Create a label for requirements verification methods customized to this table \n \t * \n-\t * @param req the requirement for which a trace label is created\n-\t * @return the trace label\n+\t * @param req the requirement for which a verification method label is created\n+\t * @return the label\n \t */\n \tprotected String getVerificationLabel(Requirement req) {\n \t\tif (req.getVerification().isEmpty()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3NjMyOA==", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/784#discussion_r504776328", "bodyText": "Outdated javadoc?", "author": "andriikovalov-dlr", "createdAt": "2020-10-14T15:34:34Z", "path": "de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/celleditor/ExisitenceVerificationTargetEditingSupport.java", "diffHunk": "@@ -21,21 +21,20 @@\n import org.eclipse.ui.PlatformUI;\r\n import org.eclipse.ui.forms.widgets.FormToolkit;\r\n \r\n-import de.dlr.sc.virsat.model.dvlm.categories.ATypeInstance;\r\n import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\r\n import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.AProperty;\r\n import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.APropertyInstance;\r\n import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ComposedPropertyInstance;\r\n-import de.dlr.sc.virsat.model.extension.requirements.model.Requirement;\r\n-import de.dlr.sc.virsat.model.extension.requirements.ui.snippet.dialog.RequirementsTraceEditingDialog;\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.ExistenceVerification;\r\n+import de.dlr.sc.virsat.model.extension.requirements.ui.snippet.dialog.ExistenceVerificationTargetEditingDialog;\r\n import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n import de.dlr.sc.virsat.uiengine.ui.cellEditor.aproperties.APropertyCellEditingSupport;\r\n \r\n /**\r\n  * Implements a customized editing support for requirement trace elements\r", "originalCommit": "4c013533bb7e316d1b45f95a64b1d00d06cbf68b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "180755b1b1f141d46da5d9f7f3a8ab0192190c7b", "chunk": "diff --git a/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/celleditor/ExisitenceVerificationTargetEditingSupport.java b/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/celleditor/ExisitenceVerificationTargetEditingSupport.java\nindex 9fcc706f3..934b7cb6a 100644\n--- a/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/celleditor/ExisitenceVerificationTargetEditingSupport.java\n+++ b/de.dlr.sc.virsat.model.extension.requirements.ui/src/de/dlr/sc/virsat/model/extension/requirements/ui/celleditor/ExisitenceVerificationTargetEditingSupport.java\n\n@@ -31,7 +31,7 @@ import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\n import de.dlr.sc.virsat.uiengine.ui.cellEditor.aproperties.APropertyCellEditingSupport;\n \n /**\n- * Implements a customized editing support for requirement trace elements\n+ * Implements a customized editing support for selecting the target of an existence editing support\n  * \n  */\n public class ExisitenceVerificationTargetEditingSupport extends APropertyCellEditingSupport {\n"}}, {"oid": "180755b1b1f141d46da5d9f7f3a8ab0192190c7b", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/180755b1b1f141d46da5d9f7f3a8ab0192190c7b", "message": "Imporve java doc", "committedDate": "2020-10-14T17:20:12Z", "type": "commit"}, {"oid": "ab1aac71cea8487a3144c1e6e0b514f4e930db1c", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ab1aac71cea8487a3144c1e6e0b514f4e930db1c", "message": "Make UI clearer - (Task #783)", "committedDate": "2020-10-14T21:53:03Z", "type": "commit"}, {"oid": "c8c26f9e383f8faeb2be90b1e0b5d64dcfe550ca", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c8c26f9e383f8faeb2be90b1e0b5d64dcfe550ca", "message": "Improve initalization of verification methods - (Task #783)", "committedDate": "2020-10-14T22:49:27Z", "type": "commit"}]}