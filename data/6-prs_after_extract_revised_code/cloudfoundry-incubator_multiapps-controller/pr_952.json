{"pr_number": 952, "pr_title": "Update service operations", "pr_createdAt": "2020-09-15T15:56:40Z", "pr_url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952", "timeline": [{"oid": "ccf3b9b1a04fc68b94fddbecd75bd1102378c802", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/ccf3b9b1a04fc68b94fddbecd75bd1102378c802", "message": "Update service operations", "committedDate": "2020-09-16T07:54:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1MDk4NA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r489250984", "bodyText": "URL variables take care of proper URL encoding, String.format doesn't.", "author": "nictas", "createdAt": "2020-09-16T08:17:53Z", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/clients/CFOptimizedEventGetter.java", "diffHunk": "@@ -9,7 +8,7 @@\n \n public class CFOptimizedEventGetter extends CustomControllerClient {\n \n-    private static final String FIND_EVENT_BY_TYPE_AND_TIMESTAMP_ENDPOINT = \"/v2/events?inline-relations-depth=1&results-per-page=100&q=type:{type}&q=timestamp>{timestamp}\";", "originalCommit": "ccf3b9b1a04fc68b94fddbecd75bd1102378c802", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "849c7314cb2a0f4312bae1090eb42189efba3ba7", "chunk": "diff --git a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/clients/CFOptimizedEventGetter.java b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/clients/CFOptimizedEventGetter.java\nindex 3a562d6e1..cb2f1834e 100644\n--- a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/clients/CFOptimizedEventGetter.java\n+++ b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/clients/CFOptimizedEventGetter.java\n\n@@ -8,12 +8,10 @@ import org.cloudfoundry.client.lib.CloudControllerClient;\n \n public class CFOptimizedEventGetter extends CustomControllerClient {\n \n-    private static final String FIND_EVENT_BY_TYPE_AND_TIMESTAMP_ENDPOINT = \"/v2/events?inline-relations-depth=1&results-per-page=100&q=type:%s&q=timestamp>%s\";\n-    private final CloudControllerClient client;\n+    private static final String FIND_EVENT_BY_TYPE_AND_TIMESTAMP_ENDPOINT = \"/v2/events?inline-relations-depth=1&results-per-page=100&q=type:{type}&q=timestamp>{timestamp}\";\n \n     public CFOptimizedEventGetter(CloudControllerClient client) {\n-        super(new RestTemplateFactory());\n-        this.client = client;\n+        super(client);\n     }\n \n     public List<String> findEvents(String type, String timestamp) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2MDU1OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r489260559", "bodyText": "lel, getService calls createService. :D", "author": "nictas", "createdAt": "2020-09-16T08:33:02Z", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java", "diffHunk": "@@ -37,38 +37,34 @@ public ServicesCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, Stri\n \n     public List<CloudServiceInstanceExtended> build(List<Resource> resourcesToProcess) {\n         return resourcesToProcess.stream()\n-                                 .map(this::getService)\n+                                 .map(this::createService)\n                                  .filter(Objects::nonNull)\n                                  .collect(Collectors.toList());\n     }\n \n-    protected CloudServiceInstanceExtended getService(Resource resource) {\n-        boolean isOptional = isOptional(resource);\n-        boolean shouldIgnoreUpdateErrors = (boolean) resource.getParameters()\n-                                                             .getOrDefault(SupportedParameters.IGNORE_UPDATE_ERRORS, false);\n-        return createService(resource, isOptional, shouldIgnoreUpdateErrors);", "originalCommit": "ccf3b9b1a04fc68b94fddbecd75bd1102378c802", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c3b1294ea2d65b339a2e67a8db027944edadf2bf", "chunk": "diff --git a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java\nindex 9cde2acba..b6bb086a2 100644\n--- a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java\n+++ b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java\n\n@@ -49,21 +49,23 @@ public class ServicesCloudModelBuilder {\n     protected CloudServiceInstanceExtended createService(Resource resource) {\n         boolean isOptional = isOptional(resource);\n         ResourceType serviceType = getResourceType(resource.getParameters());\n+        boolean shouldIgnoreUpdateErrors = (boolean) resource.getParameters()\t\n+                                                             .getOrDefault(SupportedParameters.IGNORE_UPDATE_ERRORS, false);\n \n         switch (serviceType) {\n             case MANAGED_SERVICE:\n-                return createManagedService(resource, isOptional);\n+                return createManagedService(resource, isOptional, shouldIgnoreUpdateErrors);\n             case EXISTING_SERVICE:\n-                return createExistingService(resource, isOptional);\n+                return createExistingService(resource, isOptional, shouldIgnoreUpdateErrors);\n             case USER_PROVIDED_SERVICE:\n-                return createUserProvidedService(resource, isOptional);\n+                return createUserProvidedService(resource, isOptional, shouldIgnoreUpdateErrors);\n             default:\n                 return null;\n         }\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    protected CloudServiceInstanceExtended createManagedService(Resource resource, boolean isOptional) {\n+    protected CloudServiceInstanceExtended createManagedService(Resource resource, boolean isOptional, boolean shouldIgnoreUpdateErrors) {\n         String serviceName = NameUtil.getServiceName(resource);\n         Map<String, Object> parameters = resource.getParameters();\n         SpecialResourceTypesRequiredParametersUtil.checkRequiredParameters(serviceName, ResourceType.MANAGED_SERVICE, parameters);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2MzE1MQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r489263151", "bodyText": "This seems like it should be moved to our CF Java client fork.", "author": "nictas", "createdAt": "2020-09-16T08:37:04Z", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/model/ServiceOperation.java", "diffHunk": "@@ -1,18 +1,13 @@\n package org.cloudfoundry.multiapps.controller.core.model;\n \n import java.text.MessageFormat;\n-import java.util.Map;\n+import java.util.Objects;\n \n-import org.apache.commons.collections4.MapUtils;\n+import org.cloudfoundry.client.v2.serviceinstances.LastOperation;\n import org.cloudfoundry.multiapps.controller.core.Messages;\n \n public class ServiceOperation {", "originalCommit": "ccf3b9b1a04fc68b94fddbecd75bd1102378c802", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI4MTk5MA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r497281990", "bodyText": "Done", "author": "radito3", "createdAt": "2020-09-30T06:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2MzE1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "748a1fddfba5daded9d3115cf6798fc0cf2a7ead", "chunk": "diff --git a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/model/ServiceOperation.java b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/model/ServiceOperation.java\ndeleted file mode 100644\nindex bc4002ae5..000000000\n--- a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/model/ServiceOperation.java\n+++ /dev/null\n\n@@ -1,112 +0,0 @@\n-package org.cloudfoundry.multiapps.controller.core.model;\n-\n-import java.text.MessageFormat;\n-import java.util.Objects;\n-\n-import org.cloudfoundry.client.v2.serviceinstances.LastOperation;\n-import org.cloudfoundry.multiapps.controller.core.Messages;\n-\n-public class ServiceOperation {\n-\n-    public enum Type {\n-\n-        CREATE, UPDATE, DELETE;\n-\n-        @Override\n-        public String toString() {\n-            return name().toLowerCase();\n-        }\n-\n-        public static Type fromString(String value) {\n-            for (Type type : Type.values()) {\n-                if (type.toString()\n-                        .equals(value)) {\n-                    return type;\n-                }\n-            }\n-            throw new IllegalArgumentException(MessageFormat.format(Messages.ILLEGAL_SERVICE_OPERATION_TYPE, value));\n-        }\n-\n-    }\n-\n-    public enum State {\n-\n-        SUCCEEDED(\"succeeded\"), FAILED(\"failed\"), IN_PROGRESS(\"in progress\");\n-\n-        private final String name;\n-\n-        State(String name) {\n-            this.name = name;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return name;\n-        }\n-\n-        public static State fromString(String value) {\n-            for (State state : State.values()) {\n-                if (state.toString()\n-                         .equals(value)) {\n-                    return state;\n-                }\n-            }\n-            throw new IllegalArgumentException(MessageFormat.format(Messages.ILLEGAL_SERVICE_OPERATION_STATE, value));\n-        }\n-\n-    }\n-\n-    private Type type;\n-    private String description;\n-    private State state;\n-\n-    ServiceOperation() {\n-        // Required by Jackson.\n-    }\n-\n-    public ServiceOperation(Type type, String description, State state) {\n-        this.type = type;\n-        this.description = description;\n-        this.state = state;\n-    }\n-\n-    public Type getType() {\n-        return type;\n-    }\n-\n-    public String getDescription() {\n-        return description;\n-    }\n-\n-    public State getState() {\n-        return state;\n-    }\n-\n-    public static ServiceOperation fromLastOperation(LastOperation lastOperation) {\n-        Type type = Type.fromString(lastOperation.getType());\n-        State state = State.fromString(lastOperation.getState());\n-        String description = lastOperation.getDescription();\n-        return new ServiceOperation(type, description, state);\n-    }\n-\n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o)\n-            return true;\n-        if (o == null || getClass() != o.getClass())\n-            return false;\n-        ServiceOperation that = (ServiceOperation) o;\n-        return type == that.type && state == that.state;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(type, state);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return String.format(\"%s %s\", type, state);\n-    }\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2Mzk0OA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r489263948", "bodyText": "Wait.. Where is this functionality gone?", "author": "nictas", "createdAt": "2020-09-16T08:37:50Z", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java", "diffHunk": "@@ -37,38 +37,34 @@ public ServicesCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, Stri\n \n     public List<CloudServiceInstanceExtended> build(List<Resource> resourcesToProcess) {\n         return resourcesToProcess.stream()\n-                                 .map(this::getService)\n+                                 .map(this::createService)\n                                  .filter(Objects::nonNull)\n                                  .collect(Collectors.toList());\n     }\n \n-    protected CloudServiceInstanceExtended getService(Resource resource) {\n-        boolean isOptional = isOptional(resource);\n-        boolean shouldIgnoreUpdateErrors = (boolean) resource.getParameters()\n-                                                             .getOrDefault(SupportedParameters.IGNORE_UPDATE_ERRORS, false);", "originalCommit": "ccf3b9b1a04fc68b94fddbecd75bd1102378c802", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c3b1294ea2d65b339a2e67a8db027944edadf2bf", "chunk": "diff --git a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java\nindex 9cde2acba..b6bb086a2 100644\n--- a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java\n+++ b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java\n\n@@ -49,21 +49,23 @@ public class ServicesCloudModelBuilder {\n     protected CloudServiceInstanceExtended createService(Resource resource) {\n         boolean isOptional = isOptional(resource);\n         ResourceType serviceType = getResourceType(resource.getParameters());\n+        boolean shouldIgnoreUpdateErrors = (boolean) resource.getParameters()\t\n+                                                             .getOrDefault(SupportedParameters.IGNORE_UPDATE_ERRORS, false);\n \n         switch (serviceType) {\n             case MANAGED_SERVICE:\n-                return createManagedService(resource, isOptional);\n+                return createManagedService(resource, isOptional, shouldIgnoreUpdateErrors);\n             case EXISTING_SERVICE:\n-                return createExistingService(resource, isOptional);\n+                return createExistingService(resource, isOptional, shouldIgnoreUpdateErrors);\n             case USER_PROVIDED_SERVICE:\n-                return createUserProvidedService(resource, isOptional);\n+                return createUserProvidedService(resource, isOptional, shouldIgnoreUpdateErrors);\n             default:\n                 return null;\n         }\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    protected CloudServiceInstanceExtended createManagedService(Resource resource, boolean isOptional) {\n+    protected CloudServiceInstanceExtended createManagedService(Resource resource, boolean isOptional, boolean shouldIgnoreUpdateErrors) {\n         String serviceName = NameUtil.getServiceName(resource);\n         Map<String, Object> parameters = resource.getParameters();\n         SpecialResourceTypesRequiredParametersUtil.checkRequiredParameters(serviceName, ResourceType.MANAGED_SERVICE, parameters);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI2NTgxMA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r489265810", "bodyText": "Can the type or state be null?", "author": "nictas", "createdAt": "2020-09-16T08:40:16Z", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DetermineServiceCreateUpdateServiceActionsStep.java", "diffHunk": "@@ -171,12 +165,12 @@ private void setServiceParameters(ProcessContext context, CloudServiceInstanceEx\n         return actions;\n     }\n \n-    private ServiceOperation getLastOperation(CloudControllerClient client, String spaceId, String serviceName) {\n-        Map<String, Object> existingServiceInstanceEntity = serviceInstanceGetter.getServiceInstanceEntity(client, serviceName, spaceId);\n-        if (existingServiceInstanceEntity != null) {\n-            return getLastOperation(existingServiceInstanceEntity);\n+    private ServiceOperation getLastOperation(CloudControllerClient client, String serviceName) {\n+        LastOperation lastOperation = client.getServiceLastOperation(serviceName);\n+        if (lastOperation == null || lastOperation.getType() == null || lastOperation.getState() == null) {", "originalCommit": "ccf3b9b1a04fc68b94fddbecd75bd1102378c802", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "748a1fddfba5daded9d3115cf6798fc0cf2a7ead", "chunk": "diff --git a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DetermineServiceCreateUpdateServiceActionsStep.java b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DetermineServiceCreateUpdateServiceActionsStep.java\nindex 91b226db5..4aea70a08 100644\n--- a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DetermineServiceCreateUpdateServiceActionsStep.java\n+++ b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DetermineServiceCreateUpdateServiceActionsStep.java\n\n@@ -165,14 +164,6 @@ public class DetermineServiceCreateUpdateServiceActionsStep extends SyncFlowable\n         return actions;\n     }\n \n-    private ServiceOperation getLastOperation(CloudControllerClient client, String serviceName) {\n-        LastOperation lastOperation = client.getServiceLastOperation(serviceName);\n-        if (lastOperation == null || lastOperation.getType() == null || lastOperation.getState() == null) {\n-            return null;\n-        }\n-        return ServiceOperation.fromLastOperation(lastOperation);\n-    }\n-\n     private SLException getServiceRecreationNeededException(CloudServiceInstanceExtended service, CloudServiceInstance existingService) {\n         return new SLException(Messages.ERROR_SERVICE_NEEDS_TO_BE_RECREATED_BUT_FLAG_NOT_SET,\n                                service.getResourceName(),\n"}}, {"oid": "849c7314cb2a0f4312bae1090eb42189efba3ba7", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/849c7314cb2a0f4312bae1090eb42189efba3ba7", "message": "Update service operations", "committedDate": "2020-09-23T07:17:23Z", "type": "forcePushed"}, {"oid": "c3b1294ea2d65b339a2e67a8db027944edadf2bf", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/c3b1294ea2d65b339a2e67a8db027944edadf2bf", "message": "Update service operations (unfinished)", "committedDate": "2020-09-23T09:07:48Z", "type": "forcePushed"}, {"oid": "44ce658a1994d1bdaaa36fb9b24e9db8b3740006", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/44ce658a1994d1bdaaa36fb9b24e9db8b3740006", "message": "Update service operations (unfinished)", "committedDate": "2020-09-23T14:13:29Z", "type": "forcePushed"}, {"oid": "f7f9ba8d7b9ef0f47b3a795c368f7b3666184353", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/f7f9ba8d7b9ef0f47b3a795c368f7b3666184353", "message": "Update service operations (unfinished)", "committedDate": "2020-09-24T07:17:11Z", "type": "forcePushed"}, {"oid": "748a1fddfba5daded9d3115cf6798fc0cf2a7ead", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/748a1fddfba5daded9d3115cf6798fc0cf2a7ead", "message": "Update service operations (unfinished)", "committedDate": "2020-09-24T13:31:51Z", "type": "forcePushed"}, {"oid": "51ae5f7df39f459ffeca425ec4c226488aee1191", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/51ae5f7df39f459ffeca425ec4c226488aee1191", "message": "Update service operations (unfinished)", "committedDate": "2020-09-25T13:51:22Z", "type": "forcePushed"}, {"oid": "82b3763622f2a09c0e5222a1727eb9ec3abdf7e7", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/82b3763622f2a09c0e5222a1727eb9ec3abdf7e7", "message": "Update service operations (unfinished)", "committedDate": "2020-09-28T11:54:37Z", "type": "forcePushed"}, {"oid": "1a0cfa673fa4a241265547d031e0f0c8031be561", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/1a0cfa673fa4a241265547d031e0f0c8031be561", "message": "Update service operations (unfinished)", "committedDate": "2020-09-30T08:37:38Z", "type": "forcePushed"}, {"oid": "8e989586f2708f2c6246b13ad6030fd32095c8ac", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/8e989586f2708f2c6246b13ad6030fd32095c8ac", "message": "Update service operations (unfinished)", "committedDate": "2020-09-30T08:52:55Z", "type": "forcePushed"}, {"oid": "6c2ed48228fbbc9aa600d5c1545864ebd92f5ab9", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/6c2ed48228fbbc9aa600d5c1545864ebd92f5ab9", "message": "Update service operations", "committedDate": "2020-09-30T13:11:18Z", "type": "forcePushed"}, {"oid": "7793cd06f3b3e6c00c85419e5a82ebdb64ab2ac1", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/7793cd06f3b3e6c00c85419e5a82ebdb64ab2ac1", "message": "Update service operations", "committedDate": "2020-09-30T13:30:19Z", "type": "forcePushed"}, {"oid": "063f0cd54a67118f35f5158fff8770c89414ba1f", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/063f0cd54a67118f35f5158fff8770c89414ba1f", "message": "Update service operations", "committedDate": "2020-09-30T14:03:43Z", "type": "forcePushed"}, {"oid": "a37aac88fbdd739e382530971b9c5bb2134ca981", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/a37aac88fbdd739e382530971b9c5bb2134ca981", "message": "Update service operations", "committedDate": "2020-09-30T14:25:36Z", "type": "forcePushed"}, {"oid": "bc14249c116d6e559e0578bd7f668603758a8087", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/bc14249c116d6e559e0578bd7f668603758a8087", "message": "Remove mta env detection variable", "committedDate": "2020-10-01T07:42:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5MzUwMg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498093502", "bodyText": "\"parameters\" are the input given to the service broker. \"credentials\" are the things provided by the service broker. For example, \"memory: 256\" would be a parameter, but \"host: postgresql.foo.com\" would be a credential (see here and here). This method should be called shouldSkipParametersUpdate.", "author": "nictas", "createdAt": "2020-10-01T09:04:59Z", "path": "multiapps-controller-client/src/main/java/org/cloudfoundry/multiapps/controller/client/lib/domain/CloudServiceInstanceExtended.java", "diffHunk": "@@ -28,9 +28,19 @@ public boolean isOptional() {\n     public boolean isManaged() {\n         return false;\n     }\n-\n+    \n+    @Value.Default\n+    public boolean shouldSkipCredentialsUpdate() {", "originalCommit": "bc14249c116d6e559e0578bd7f668603758a8087", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7cf434cb5dcd41d5cbe41154a4cf7de54fa275d3", "chunk": "diff --git a/multiapps-controller-client/src/main/java/org/cloudfoundry/multiapps/controller/client/lib/domain/CloudServiceInstanceExtended.java b/multiapps-controller-client/src/main/java/org/cloudfoundry/multiapps/controller/client/lib/domain/CloudServiceInstanceExtended.java\nindex 4a2f6148a..f5a1a3fec 100644\n--- a/multiapps-controller-client/src/main/java/org/cloudfoundry/multiapps/controller/client/lib/domain/CloudServiceInstanceExtended.java\n+++ b/multiapps-controller-client/src/main/java/org/cloudfoundry/multiapps/controller/client/lib/domain/CloudServiceInstanceExtended.java\n\n@@ -28,19 +28,9 @@ public abstract class CloudServiceInstanceExtended extends CloudServiceInstance\n     public boolean isManaged() {\n         return false;\n     }\n-    \n-    @Value.Default\n-    public boolean shouldSkipCredentialsUpdate() {\n-        return false;\n-    }\n-    \n-    @Value.Default\n-    public boolean shouldSkipPlanUpdate() {\n-        return false;\n-    }\n-    \n+\n     @Value.Default\n-    public boolean shouldSkipTagsUpdate() {\n+    public boolean shouldIgnoreUpdateErrors() {\n         return false;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NjM0Mw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498096343", "bodyText": "Rename urlPath to path for consistency with addPageOfResources.", "author": "nictas", "createdAt": "2020-10-01T09:10:00Z", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/clients/CustomControllerClient.java", "diffHunk": "@@ -15,61 +14,38 @@\n \n public abstract class CustomControllerClient {\n \n-    private final WebClientFactory webClientFactory;\n+    protected final CloudControllerClient client;\n+    private final WebClient webClient;\n \n-    protected CustomControllerClient(WebClientFactory webClientFactory) {\n-        this.webClientFactory = webClientFactory;\n+    protected CustomControllerClient(CloudControllerClient client) {\n+        this.client = client;\n+        this.webClient = new WebClientFactory().getWebClient(client);\n     }\n \n-    protected WebClient getWebClient(CloudControllerClient client) {\n-        return webClientFactory.getWebClient(client);\n-    }\n-\n-    protected List<Map<String, Object>> getAllResources(WebClient webClient, String controllerUrl, String urlPath) {\n-        return getAllResources(webClient, controllerUrl, urlPath, Collections.emptyMap());\n-    }\n-\n-    protected List<Map<String, Object>> getAllResources(WebClient webClient, String controllerUrl, String urlPath,\n-                                                        Map<String, Object> urlVariables) {\n+    protected List<Map<String, Object>> getAllResources(String urlPath, Object... urlVariables) {", "originalCommit": "bc14249c116d6e559e0578bd7f668603758a8087", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1OTIyMQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498759221", "bodyText": "Done", "author": "radito3", "createdAt": "2020-10-02T11:12:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5NjM0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7cf434cb5dcd41d5cbe41154a4cf7de54fa275d3", "chunk": "diff --git a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/clients/CustomControllerClient.java b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/clients/CustomControllerClient.java\nindex e5fbbd17f..20d9718ad 100644\n--- a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/clients/CustomControllerClient.java\n+++ b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/clients/CustomControllerClient.java\n\n@@ -14,38 +15,61 @@ import org.springframework.web.reactive.function.client.WebClient;\n \n public abstract class CustomControllerClient {\n \n-    protected final CloudControllerClient client;\n-    private final WebClient webClient;\n+    private final WebClientFactory webClientFactory;\n \n-    protected CustomControllerClient(CloudControllerClient client) {\n-        this.client = client;\n-        this.webClient = new WebClientFactory().getWebClient(client);\n+    protected CustomControllerClient(WebClientFactory webClientFactory) {\n+        this.webClientFactory = webClientFactory;\n     }\n \n-    protected List<Map<String, Object>> getAllResources(String urlPath, Object... urlVariables) {\n+    protected WebClient getWebClient(CloudControllerClient client) {\n+        return webClientFactory.getWebClient(client);\n+    }\n+\n+    protected List<Map<String, Object>> getAllResources(WebClient webClient, String controllerUrl, String urlPath) {\n+        return getAllResources(webClient, controllerUrl, urlPath, Collections.emptyMap());\n+    }\n+\n+    protected List<Map<String, Object>> getAllResources(WebClient webClient, String controllerUrl, String urlPath,\n+                                                        Map<String, Object> urlVariables) {\n         List<Map<String, Object>> allResources = new ArrayList<>();\n         String nextUrl = urlPath;\n         while (!StringUtils.isEmpty(nextUrl)) {\n-            nextUrl = addPageOfResources(nextUrl, allResources, urlVariables);\n+            nextUrl = addPageOfResources(webClient, controllerUrl, nextUrl, allResources, urlVariables);\n         }\n         return allResources;\n     }\n \n-    private String addPageOfResources(String path, List<Map<String, Object>> allResources, Object... urlVariables) {\n+    @SuppressWarnings(\"unchecked\")\n+    protected String addPageOfResources(WebClient webClient, String controllerUrl, String path, List<Map<String, Object>> allResources,\n+                                        Map<String, Object> urlVariables) {\n         String response = webClient.get()\n-                                   .uri(path, urlVariables)\n+                                   .uri(getUrl(controllerUrl, path), urlVariables)\n                                    .retrieve()\n                                    .bodyToMono(String.class)\n                                    .block();\n         Map<String, Object> responseMap = JsonUtil.convertJsonToMap(response);\n-        @SuppressWarnings(\"unchecked\")\n+        validateResponse(responseMap);\n         List<Map<String, Object>> newResources = (List<Map<String, Object>>) responseMap.get(\"resources\");\n-\n         if (!CollectionUtils.isEmpty(newResources)) {\n             allResources.addAll(newResources);\n         }\n-\n         String nextUrl = (String) responseMap.get(\"next_url\");\n-        return nextUrl == null ? null : URLDecoder.decode(nextUrl, StandardCharsets.UTF_8);\n+        return nextUrl == null ? null : decode(nextUrl);\n+    }\n+\n+    private String decode(String url) {\n+        try {\n+            return URLDecoder.decode(url, \"UTF-8\");\n+        } catch (UnsupportedEncodingException e) {\n+            throw new IllegalStateException(e.getMessage(), e);\n+        }\n+    }\n+\n+    protected void validateResponse(Map<String, Object> response) {\n     }\n+\n+    protected String getUrl(String controllerUrl, String path) {\n+        return controllerUrl + (path.startsWith(\"/\") ? path : \"/\" + path);\n+    }\n+\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5OTkyMg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498099922", "bodyText": "Shouldn't this be called CommonResourceParameters?", "author": "nictas", "createdAt": "2020-10-01T09:16:06Z", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java", "diffHunk": "@@ -143,5 +143,36 @@ protected String getInvalidServiceConfigTypeErrorMessage(String serviceName, Obj\n                                     Map.class.getSimpleName(), serviceParameters.getClass()\n                                                                                 .getSimpleName());\n     }\n+    \n+    protected static class CommonServiceProperties {", "originalCommit": "bc14249c116d6e559e0578bd7f668603758a8087", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc2MjE5NQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498762195", "bodyText": "Done", "author": "radito3", "createdAt": "2020-10-02T11:20:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA5OTkyMg=="}], "type": "inlineReview", "revised_code": {"commit": "7cf434cb5dcd41d5cbe41154a4cf7de54fa275d3", "chunk": "diff --git a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java\nindex a8b8e9fee..b96cc47f9 100644\n--- a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java\n+++ b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ServicesCloudModelBuilder.java\n\n@@ -143,36 +143,5 @@ public class ServicesCloudModelBuilder {\n                                     Map.class.getSimpleName(), serviceParameters.getClass()\n                                                                                 .getSimpleName());\n     }\n-    \n-    protected static class CommonServiceProperties {\n-        protected final Resource resource;\n-\n-        protected CommonServiceProperties(Resource resource) {\n-            this.resource = resource;\n-        }\n-        \n-        private String getServiceName() {\n-            return NameUtil.getServiceName(resource);\n-        }\n-        \n-        protected boolean isOptional() {\n-            return false;\n-        }\n-        \n-        private boolean shouldSkipCredentialsUpdate() {\n-            return (boolean) resource.getParameters()   \n-                                     .getOrDefault(SupportedParameters.SKIP_CREDENTIALS_UPDATE, false);\n-        }\n-        \n-        private boolean shouldSkipTagsUpdate() {\n-            return (boolean) resource.getParameters()   \n-                                     .getOrDefault(SupportedParameters.SKIP_TAGS_UPDATE, false);\n-        }\n-        \n-        private boolean shouldSkipPlanUpdate() {\n-            return (boolean) resource.getParameters()   \n-                                     .getOrDefault(SupportedParameters.SKIP_PLAN_UPDATE, false);\n-        }\n-    }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEwMDE4Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498100182", "bodyText": "Rename to skip-parameters-update.\nAlso, since this is a UX change, we should have a short 15-30 min meeting with the rest of the team, so that everyone has the chance to give feedback, share his concerns, etc. One thing to discuss is whether this parameter should be called skip-parameters-update or skip-service-instance-parameters-update, since the first might be a bit ambiguous, as it's a bit unclear whether it concerns resource or service instance parameters.", "author": "nictas", "createdAt": "2020-10-01T09:16:34Z", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/model/SupportedParameters.java", "diffHunk": "@@ -125,8 +125,10 @@\n     public static final String DEFAULT_CONTAINER_NAME = \"default-container-name\";\n     public static final String DEFAULT_XS_APP_NAME = \"default-xsappname\";\n     public static final String TYPE = \"type\";\n-    public static final String IGNORE_UPDATE_ERRORS = \"ignore-update-errors\";\n-\n+    public static final String SKIP_PLAN_UPDATE = \"skip-plan-update\";\n+    public static final String SKIP_CREDENTIALS_UPDATE = \"skip-credentials-update\";", "originalCommit": "bc14249c116d6e559e0578bd7f668603758a8087", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIwNTE0Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r500205142", "bodyText": "Changed to a map called skip-service-updates with 3 boolean fields: parameters, tags, plan as per the team's decision.", "author": "radito3", "createdAt": "2020-10-06T11:36:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEwMDE4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7cf434cb5dcd41d5cbe41154a4cf7de54fa275d3", "chunk": "diff --git a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/model/SupportedParameters.java b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/model/SupportedParameters.java\nindex 210fd8df2..4c3ea07ca 100644\n--- a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/model/SupportedParameters.java\n+++ b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/model/SupportedParameters.java\n\n@@ -125,10 +125,8 @@ public class SupportedParameters {\n     public static final String DEFAULT_CONTAINER_NAME = \"default-container-name\";\n     public static final String DEFAULT_XS_APP_NAME = \"default-xsappname\";\n     public static final String TYPE = \"type\";\n-    public static final String SKIP_PLAN_UPDATE = \"skip-plan-update\";\n-    public static final String SKIP_CREDENTIALS_UPDATE = \"skip-credentials-update\";\n-    public static final String SKIP_TAGS_UPDATE = \"skip-tags-update\";\n-    \n+    public static final String IGNORE_UPDATE_ERRORS = \"ignore-update-errors\";\n+\n     // Configuration reference (new syntax):\n     public static final String PROVIDER_NID = \"provider-nid\";\n     public static final String VERSION = \"version\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODExMjYwMQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498112601", "bodyText": "Should be renamed to UpdateServiceParametersStep.", "author": "nictas", "createdAt": "2020-10-01T09:36:53Z", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceCredentialsStep.java", "diffHunk": "@@ -19,28 +18,18 @@\n @Scope(BeanDefinition.SCOPE_PROTOTYPE)\n public class UpdateServiceCredentialsStep extends ServiceStep {", "originalCommit": "bc14249c116d6e559e0578bd7f668603758a8087", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc2MzAzMg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498763032", "bodyText": "Done", "author": "radito3", "createdAt": "2020-10-02T11:22:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODExMjYwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "7cf434cb5dcd41d5cbe41154a4cf7de54fa275d3", "chunk": "diff --git a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceCredentialsStep.java b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceCredentialsStep.java\nindex 8689cfb42..04202e401 100644\n--- a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceCredentialsStep.java\n+++ b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceCredentialsStep.java\n\n@@ -18,18 +19,28 @@ import org.springframework.context.annotation.Scope;\n @Scope(BeanDefinition.SCOPE_PROTOTYPE)\n public class UpdateServiceCredentialsStep extends ServiceStep {\n \n+    @Inject\n+    @Named(\"serviceUpdater\")\n+    protected ServiceUpdater serviceUpdater;\n+\n     @Override\n-    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient client,\n+    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient controllerClient,\n                                                        CloudServiceInstanceExtended service) {\n+        return updateServiceCredentials(controllerClient, service);\n+    }\n+\n+    private MethodExecution<String> updateServiceCredentials(CloudControllerClient client, CloudServiceInstanceExtended service) {\n         getStepLogger().info(Messages.UPDATING_SERVICE, service.getName());\n+        MethodExecution<String> methodExecution = updateService(client, service);\n+        getStepLogger().debug(Messages.SERVICE_UPDATED, service.getName());\n+        return methodExecution;\n+    }\n \n-        if (!service.shouldSkipCredentialsUpdate()) {\n-            CloudServiceInstance serviceInstance = client.getServiceInstance(service.getName());\n-            client.updateServiceParameters(serviceInstance);\n+    private MethodExecution<String> updateService(CloudControllerClient client, CloudServiceInstanceExtended service) {\n+        if (service.shouldIgnoreUpdateErrors()) {\n+            return serviceUpdater.updateServiceParametersQuietly(client, service.getName(), service.getCredentials());\n         }\n-        \n-        getStepLogger().debug(Messages.SERVICE_UPDATED, service.getName());\n-        return new MethodExecution<>(null, MethodExecution.ExecutionState.FINISHED);\n+        return serviceUpdater.updateServiceParameters(client, service.getName(), service.getCredentials());\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODExMzIwNg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498113206", "bodyText": "Warn if this is enabled.", "author": "nictas", "createdAt": "2020-10-01T09:37:50Z", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceCredentialsStep.java", "diffHunk": "@@ -19,28 +18,18 @@\n @Scope(BeanDefinition.SCOPE_PROTOTYPE)\n public class UpdateServiceCredentialsStep extends ServiceStep {\n \n-    @Inject\n-    @Named(\"serviceUpdater\")\n-    protected ServiceUpdater serviceUpdater;\n-\n     @Override\n-    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient controllerClient,\n+    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient client,\n                                                        CloudServiceInstanceExtended service) {\n-        return updateServiceCredentials(controllerClient, service);\n-    }\n-\n-    private MethodExecution<String> updateServiceCredentials(CloudControllerClient client, CloudServiceInstanceExtended service) {\n         getStepLogger().info(Messages.UPDATING_SERVICE, service.getName());\n-        MethodExecution<String> methodExecution = updateService(client, service);\n-        getStepLogger().debug(Messages.SERVICE_UPDATED, service.getName());\n-        return methodExecution;\n-    }\n \n-    private MethodExecution<String> updateService(CloudControllerClient client, CloudServiceInstanceExtended service) {\n-        if (service.shouldIgnoreUpdateErrors()) {\n-            return serviceUpdater.updateServiceParametersQuietly(client, service.getName(), service.getCredentials());\n+        if (!service.shouldSkipCredentialsUpdate()) {", "originalCommit": "bc14249c116d6e559e0578bd7f668603758a8087", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7cf434cb5dcd41d5cbe41154a4cf7de54fa275d3", "chunk": "diff --git a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceCredentialsStep.java b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceCredentialsStep.java\nindex 8689cfb42..04202e401 100644\n--- a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceCredentialsStep.java\n+++ b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceCredentialsStep.java\n\n@@ -18,18 +19,28 @@ import org.springframework.context.annotation.Scope;\n @Scope(BeanDefinition.SCOPE_PROTOTYPE)\n public class UpdateServiceCredentialsStep extends ServiceStep {\n \n+    @Inject\n+    @Named(\"serviceUpdater\")\n+    protected ServiceUpdater serviceUpdater;\n+\n     @Override\n-    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient client,\n+    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient controllerClient,\n                                                        CloudServiceInstanceExtended service) {\n+        return updateServiceCredentials(controllerClient, service);\n+    }\n+\n+    private MethodExecution<String> updateServiceCredentials(CloudControllerClient client, CloudServiceInstanceExtended service) {\n         getStepLogger().info(Messages.UPDATING_SERVICE, service.getName());\n+        MethodExecution<String> methodExecution = updateService(client, service);\n+        getStepLogger().debug(Messages.SERVICE_UPDATED, service.getName());\n+        return methodExecution;\n+    }\n \n-        if (!service.shouldSkipCredentialsUpdate()) {\n-            CloudServiceInstance serviceInstance = client.getServiceInstance(service.getName());\n-            client.updateServiceParameters(serviceInstance);\n+    private MethodExecution<String> updateService(CloudControllerClient client, CloudServiceInstanceExtended service) {\n+        if (service.shouldIgnoreUpdateErrors()) {\n+            return serviceUpdater.updateServiceParametersQuietly(client, service.getName(), service.getCredentials());\n         }\n-        \n-        getStepLogger().debug(Messages.SERVICE_UPDATED, service.getName());\n-        return new MethodExecution<>(null, MethodExecution.ExecutionState.FINISHED);\n+        return serviceUpdater.updateServiceParameters(client, service.getName(), service.getCredentials());\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODExMzI5MQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498113291", "bodyText": "Warn if this is enabled.", "author": "nictas", "createdAt": "2020-10-01T09:37:59Z", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServicePlanStep.java", "diffHunk": "@@ -18,18 +18,17 @@\n public class UpdateServicePlanStep extends ServiceStep {\n \n     @Override\n-    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient controllerClient,\n+    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient client,\n                                                        CloudServiceInstanceExtended service) {\n-        return updateServicePlan(controllerClient, service);\n-    }\n+        getStepLogger().debug(\"Updating service plan for service {0} with new plan: {1}\", service.getName(), service.getPlan());\n \n-    private MethodExecution<String> updateServicePlan(CloudControllerClient controllerClient, CloudServiceInstanceExtended service) {\n-        getStepLogger().debug(MessageFormat.format(\"Updating service plan of a service {0} with new plan: {1}\", service.getName(),\n-                                                   service.getPlan()));\n-        if (service.shouldIgnoreUpdateErrors()) {\n-            return getServiceUpdater().updateServicePlanQuietly(controllerClient, service.getName(), service.getPlan());\n+        if (!service.shouldSkipPlanUpdate()) {", "originalCommit": "bc14249c116d6e559e0578bd7f668603758a8087", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7cf434cb5dcd41d5cbe41154a4cf7de54fa275d3", "chunk": "diff --git a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServicePlanStep.java b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServicePlanStep.java\nindex 648329e04..90bf2dd38 100644\n--- a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServicePlanStep.java\n+++ b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServicePlanStep.java\n\n@@ -18,17 +18,18 @@ import org.springframework.context.annotation.Scope;\n public class UpdateServicePlanStep extends ServiceStep {\n \n     @Override\n-    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient client,\n+    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient controllerClient,\n                                                        CloudServiceInstanceExtended service) {\n-        getStepLogger().debug(\"Updating service plan for service {0} with new plan: {1}\", service.getName(), service.getPlan());\n+        return updateServicePlan(controllerClient, service);\n+    }\n \n-        if (!service.shouldSkipPlanUpdate()) {\n-            CloudServiceInstance serviceInstance = client.getServiceInstance(service.getName());\n-            client.updateServicePlan(serviceInstance);\n+    private MethodExecution<String> updateServicePlan(CloudControllerClient controllerClient, CloudServiceInstanceExtended service) {\n+        getStepLogger().debug(MessageFormat.format(\"Updating service plan of a service {0} with new plan: {1}\", service.getName(),\n+                                                   service.getPlan()));\n+        if (service.shouldIgnoreUpdateErrors()) {\n+            return getServiceUpdater().updateServicePlanQuietly(controllerClient, service.getName(), service.getPlan());\n         }\n-\n-        getStepLogger().debug(\"Service plan for service {0} updated\", service.getName());\n-        return new MethodExecution<>(null, MethodExecution.ExecutionState.FINISHED);\n+        return getServiceUpdater().updateServicePlan(controllerClient, service.getName(), service.getPlan());\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODExMzM5Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498113392", "bodyText": "Warn if this is enabled.", "author": "nictas", "createdAt": "2020-10-01T09:38:11Z", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceTagsStep.java", "diffHunk": "@@ -19,31 +19,17 @@\n public class UpdateServiceTagsStep extends ServiceStep {\n \n     @Override\n-    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient controllerClient,\n+    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient client,\n                                                        CloudServiceInstanceExtended service) {\n-        return updateServiceTags(controllerClient, service);\n-    }\n-\n-    private MethodExecution<String> updateServiceTags(CloudControllerClient controllerClient, CloudServiceInstanceExtended service) {\n-        // TODO: Remove the service.isUserProvided() check when user provided services support tags.\n-        // See the following issue for more info:\n-        // https://www.pivotaltracker.com/n/projects/966314/stories/105674948\n-        if (service.isUserProvided()) {\n-            return new MethodExecution<>(null, ExecutionState.FINISHED);\n-        }\n         getStepLogger().info(Messages.UPDATING_SERVICE_TAGS, service.getName());\n \n-        MethodExecution<String> methodExecution = updateService(controllerClient, service);\n+        if (!service.shouldSkipTagsUpdate()) {", "originalCommit": "bc14249c116d6e559e0578bd7f668603758a8087", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7cf434cb5dcd41d5cbe41154a4cf7de54fa275d3", "chunk": "diff --git a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceTagsStep.java b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceTagsStep.java\nindex a7a0817bf..2f3487d1a 100644\n--- a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceTagsStep.java\n+++ b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceTagsStep.java\n\n@@ -19,17 +19,31 @@ import org.springframework.context.annotation.Scope;\n public class UpdateServiceTagsStep extends ServiceStep {\n \n     @Override\n-    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient client,\n+    protected MethodExecution<String> executeOperation(ProcessContext context, CloudControllerClient controllerClient,\n                                                        CloudServiceInstanceExtended service) {\n-        getStepLogger().info(Messages.UPDATING_SERVICE_TAGS, service.getName());\n+        return updateServiceTags(controllerClient, service);\n+    }\n \n-        if (!service.shouldSkipTagsUpdate()) {\n-            CloudServiceInstance serviceInstance = client.getServiceInstance(service.getName());\n-            client.updateServiceTags(serviceInstance);\n+    private MethodExecution<String> updateServiceTags(CloudControllerClient controllerClient, CloudServiceInstanceExtended service) {\n+        // TODO: Remove the service.isUserProvided() check when user provided services support tags.\n+        // See the following issue for more info:\n+        // https://www.pivotaltracker.com/n/projects/966314/stories/105674948\n+        if (service.isUserProvided()) {\n+            return new MethodExecution<>(null, ExecutionState.FINISHED);\n         }\n+        getStepLogger().info(Messages.UPDATING_SERVICE_TAGS, service.getName());\n+\n+        MethodExecution<String> methodExecution = updateService(controllerClient, service);\n \n         getStepLogger().debug(Messages.SERVICE_TAGS_UPDATED, service.getName());\n-        return new MethodExecution<>(null, MethodExecution.ExecutionState.FINISHED);\n+        return methodExecution;\n+    }\n+\n+    private MethodExecution<String> updateService(CloudControllerClient client, CloudServiceInstanceExtended service) {\n+        if (service.shouldIgnoreUpdateErrors()) {\n+            return getServiceUpdater().updateServiceTagsQuietly(client, service.getName(), service.getTags());\n+        }\n+        return getServiceUpdater().updateServiceTags(client, service.getName(), service.getTags());\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODExMzc3MA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/952#discussion_r498113770", "bodyText": "This provides a more detailed exception message.", "author": "nictas", "createdAt": "2020-10-01T09:38:52Z", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UploadAppStep.java", "diffHunk": "@@ -151,10 +154,7 @@ private CloudPackage asyncUploadFiles(ProcessContext context, CloudControllerCli\n             try {\n                 ApplicationArchiveContext applicationArchiveContext = createApplicationArchiveContext(appArchiveStream, fileName, maxSize);\n                 filePath = extractFromMtar(applicationArchiveContext);\n-                return upload(context, client, app, filePath);\n-            } catch (IOException e) {\n-                FileUtils.cleanUp(filePath, LOGGER);\n-                throw new SLException(e, Messages.ERROR_RETRIEVING_MTA_MODULE_CONTENT, fileName);", "originalCommit": "bc14249c116d6e559e0578bd7f668603758a8087", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7cf434cb5dcd41d5cbe41154a4cf7de54fa275d3", "chunk": "diff --git a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UploadAppStep.java b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UploadAppStep.java\nindex d46ebd142..cf2c48b3a 100644\n--- a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UploadAppStep.java\n+++ b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UploadAppStep.java\n\n@@ -157,7 +158,7 @@ public class UploadAppStep extends TimeoutAsyncFlowableStep {\n                 return upload(context, app, filePath);\n             } catch (Exception e) {\n                 FileUtils.cleanUp(filePath, LOGGER);\n-                throw e;\n+                throw new SLException(e, Messages.ERROR_RETRIEVING_MTA_MODULE_CONTENT, fileName);\n             }\n         });\n     }\n"}}, {"oid": "7cf434cb5dcd41d5cbe41154a4cf7de54fa275d3", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/7cf434cb5dcd41d5cbe41154a4cf7de54fa275d3", "message": "Adopt cloudfoundry client 1.31", "committedDate": "2020-10-02T08:13:10Z", "type": "forcePushed"}, {"oid": "adf656f73ee2a40a2292b22b74ed27e56c27c0d7", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/adf656f73ee2a40a2292b22b74ed27e56c27c0d7", "message": "Update service operations", "committedDate": "2020-10-02T11:33:22Z", "type": "forcePushed"}, {"oid": "d72e135f208ad8f3437d04ab1ede2ea88ac9d9be", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/d72e135f208ad8f3437d04ab1ede2ea88ac9d9be", "message": "Update service operations", "committedDate": "2020-10-05T13:27:35Z", "type": "forcePushed"}, {"oid": "fcd793cf8c80b923c375a0bc72705f62abff1980", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/fcd793cf8c80b923c375a0bc72705f62abff1980", "message": "Update service operations", "committedDate": "2020-10-05T13:38:07Z", "type": "forcePushed"}, {"oid": "b3c6404bd870a7ff9e68b8b3434a80e27093b672", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/b3c6404bd870a7ff9e68b8b3434a80e27093b672", "message": "Update service operations", "committedDate": "2020-10-06T11:53:56Z", "type": "forcePushed"}, {"oid": "f1c50043bfd607ec077bb573605e5e80ac14880d", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/f1c50043bfd607ec077bb573605e5e80ac14880d", "message": "Delete unused process variable for env metadata", "committedDate": "2020-10-07T08:19:35Z", "type": "commit"}, {"oid": "46accd4dfb52081d4c222344f51b09079d59e379", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/46accd4dfb52081d4c222344f51b09079d59e379", "message": "Update service operations", "committedDate": "2020-10-07T08:24:04Z", "type": "forcePushed"}, {"oid": "70fc502c206f2666998544688955aadb07ca5497", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/70fc502c206f2666998544688955aadb07ca5497", "message": "Refactoring", "committedDate": "2020-10-07T13:30:25Z", "type": "forcePushed"}, {"oid": "9873220174c1de0c23ca04c9e8734f8cad13d49a", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/9873220174c1de0c23ca04c9e8734f8cad13d49a", "message": "Update service operations\n\nLMCROSSITXSADEPLOY-2177", "committedDate": "2020-10-07T16:40:38Z", "type": "commit"}, {"oid": "9013f8db024c477549bbf82b0f45b15ac2b481ec", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/9013f8db024c477549bbf82b0f45b15ac2b481ec", "message": "Refactoring", "committedDate": "2020-10-07T16:40:39Z", "type": "commit"}, {"oid": "9013f8db024c477549bbf82b0f45b15ac2b481ec", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/9013f8db024c477549bbf82b0f45b15ac2b481ec", "message": "Refactoring", "committedDate": "2020-10-07T16:40:39Z", "type": "forcePushed"}]}