{"pr_number": 994, "pr_title": "Refactor data termination", "pr_createdAt": "2020-11-16T14:43:29Z", "pr_url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994", "timeline": [{"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/d682552588fd2cabe186d08749ef1169e0a69bf5", "message": "Refactor data termination\n\nList blobs only once and check the whole list of deleted spaces to match\nspecified filter. Add temporary cleaners of orphaned data which will not\nbe deleted from Data Termination cleaner\n\nJIRA:LMCROSSITXSADEPLOY-2248", "committedDate": "2020-11-16T14:39:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2NTc5Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524965792", "bodyText": "Could be replaced by this one-liner: int deletedFiles = IntStream.of(batchResult).sum();", "author": "radoslav-d", "createdAt": "2020-11-17T08:25:36Z", "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "diffHunk": "@@ -226,14 +226,18 @@ protected SqlFileQueryProvider(String tableName, DataSourceDialect dataSourceDia\n \n     }\n \n-    public SqlQuery<Integer> getDeleteBySpaceQuery(String space) {\n+    public SqlQuery<Integer> getDeleteBySpacesQuery(List<String> spaces) {\n         return (Connection connection) -> {\n             PreparedStatement statement = null;\n             try {\n                 statement = connection.prepareStatement(getQuery(DELETE_FILES_BY_SPACE));\n-                statement.setString(1, space);\n-                int deletedFiles = statement.executeUpdate();\n-                logger.debug(MessageFormat.format(Messages.DELETED_0_FILES_WITH_SPACE_1, deletedFiles, space));\n+                addSpacesAsBatches(statement, spaces);\n+                int[] batchResults = statement.executeBatch();\n+                int deletedFiles = 0;\n+                for (int batchResult : batchResults) {\n+                    deletedFiles += batchResult;\n+                }", "originalCommit": "d682552588fd2cabe186d08749ef1169e0a69bf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "chunk": "diff --git a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\nindex dabda95af..5dc2e4b8a 100644\n--- a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\n+++ b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\n\n@@ -226,18 +227,16 @@ public abstract class SqlFileQueryProvider {\n \n     }\n \n-    public SqlQuery<Integer> getDeleteBySpacesQuery(List<String> spaces) {\n+    public SqlQuery<Integer> getDeleteBySpaceIdsQuery(List<String> spaceIds) {\n         return (Connection connection) -> {\n             PreparedStatement statement = null;\n             try {\n                 statement = connection.prepareStatement(getQuery(DELETE_FILES_BY_SPACE));\n-                addSpacesAsBatches(statement, spaces);\n+                addSpaceIdsAsBatches(statement, spaceIds);\n                 int[] batchResults = statement.executeBatch();\n-                int deletedFiles = 0;\n-                for (int batchResult : batchResults) {\n-                    deletedFiles += batchResult;\n-                }\n-                logger.debug(MessageFormat.format(Messages.DELETED_0_FILES_WITH_SPACES_1, deletedFiles, spaces));\n+                int deletedFiles = IntStream.of(batchResults)\n+                                            .sum();\n+                logger.debug(MessageFormat.format(Messages.DELETED_0_FILES_WITH_SPACEIDS_1, deletedFiles, spaceIds));\n                 return deletedFiles;\n             } finally {\n                 JdbcUtil.closeQuietly(statement);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2NzY1Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524967652", "bodyText": "really nice approach!", "author": "radoslav-d", "createdAt": "2020-11-17T08:28:45Z", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/OrphanedDataCleaner.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package org.cloudfoundry.multiapps.controller.process.jobs;\n+\n+import java.util.Date;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import org.cloudfoundry.multiapps.controller.core.auditlogging.AuditLoggingProvider;\n+import org.cloudfoundry.multiapps.controller.core.util.ApplicationConfiguration;\n+import org.cloudfoundry.multiapps.controller.core.util.SecurityUtil;\n+import org.cloudfoundry.multiapps.mta.model.AuditableConfiguration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.http.HttpStatus;\n+\n+import com.sap.cloudfoundry.client.facade.CloudControllerClient;\n+import com.sap.cloudfoundry.client.facade.CloudControllerClientImpl;\n+import com.sap.cloudfoundry.client.facade.CloudCredentials;\n+import com.sap.cloudfoundry.client.facade.CloudOperationException;\n+\n+public abstract class OrphanedDataCleaner<T extends AuditableConfiguration> implements Cleaner {", "originalCommit": "d682552588fd2cabe186d08749ef1169e0a69bf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0NjI3MA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524946270", "bodyText": "Do you agree that \"spaceIds\" sounds better than \"spaces\" since List spaces holds only ids?", "author": "IvanBorislavovDimitrov", "createdAt": "2020-11-17T07:56:55Z", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java", "diffHunk": "@@ -140,12 +146,16 @@ private void deleteUserOperationsOrphanData(String deleteEventSpaceId) {\n                         .delete();\n     }\n \n-    private void deleteSpaceLeftovers(String spaceId) {\n+    private void deleteSpacesLeftovers(List<String> spaces) {", "originalCommit": "d682552588fd2cabe186d08749ef1169e0a69bf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "chunk": "diff --git a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java\nindex 24d91bc07..404464f70 100644\n--- a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java\n+++ b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java\n\n@@ -146,11 +146,11 @@ public class DataTerminationService {\n                         .delete();\n     }\n \n-    private void deleteSpacesLeftovers(List<String> spaces) {\n+    private void deleteSpaceIdsLeftovers(List<String> spaceIds) {\n         try {\n-            fileService.deleteBySpaces(spaces);\n+            fileService.deleteBySpaceIds(spaceIds);\n         } catch (FileStorageException e) {\n-            throw new SLException(e, Messages.COULD_NOT_DELETE_SPACES_LEFTOVERS);\n+            throw new SLException(e, Messages.COULD_NOT_DELETE_SPACEIDS_LEFTOVERS);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0NjY4NA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524946684", "bodyText": "I know that this is an old code but can we rename to spaceEventsToBeDeleted, I think it sounds a bit better.", "author": "IvanBorislavovDimitrov", "createdAt": "2020-11-17T07:57:50Z", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java", "diffHunk": "@@ -53,10 +57,12 @@ public void deleteOrphanUserData() {\n         assertGlobalAuditorCredentialsExist();\n         List<String> deleteSpaceEventsToBeDeleted = getDeleteSpaceEvents();", "originalCommit": "d682552588fd2cabe186d08749ef1169e0a69bf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "chunk": "diff --git a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java\nindex 24d91bc07..404464f70 100644\n--- a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java\n+++ b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java\n\n@@ -55,14 +55,14 @@ public class DataTerminationService {\n \n     public void deleteOrphanUserData() {\n         assertGlobalAuditorCredentialsExist();\n-        List<String> deleteSpaceEventsToBeDeleted = getDeleteSpaceEvents();\n-        for (String spaceId : deleteSpaceEventsToBeDeleted) {\n+        List<String> spaceEventsToBeDeleted = getSpaceDeleteEvents();\n+        for (String spaceId : spaceEventsToBeDeleted) {\n             SAFE_EXECUTOR.execute(() -> deleteConfigurationSubscriptionOrphanData(spaceId));\n             SAFE_EXECUTOR.execute(() -> deleteConfigurationEntryOrphanData(spaceId));\n             SAFE_EXECUTOR.execute(() -> deleteUserOperationsOrphanData(spaceId));\n         }\n-        if (!deleteSpaceEventsToBeDeleted.isEmpty()) {\n-            SAFE_EXECUTOR.execute(() -> deleteSpacesLeftovers(deleteSpaceEventsToBeDeleted));\n+        if (!spaceEventsToBeDeleted.isEmpty()) {\n+            SAFE_EXECUTOR.execute(() -> deleteSpaceIdsLeftovers(spaceEventsToBeDeleted));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0Njk4Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524946982", "bodyText": "If you agree with the previous comment maybe rename this method to deleteBySpaceIds.", "author": "IvanBorislavovDimitrov", "createdAt": "2020-11-17T07:58:33Z", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java", "diffHunk": "@@ -140,12 +146,16 @@ private void deleteUserOperationsOrphanData(String deleteEventSpaceId) {\n                         .delete();\n     }\n \n-    private void deleteSpaceLeftovers(String spaceId) {\n+    private void deleteSpacesLeftovers(List<String> spaces) {\n         try {\n-            fileService.deleteBySpace(spaceId);\n+            fileService.deleteBySpaces(spaces);", "originalCommit": "d682552588fd2cabe186d08749ef1169e0a69bf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "chunk": "diff --git a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java\nindex 24d91bc07..404464f70 100644\n--- a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java\n+++ b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java\n\n@@ -146,11 +146,11 @@ public class DataTerminationService {\n                         .delete();\n     }\n \n-    private void deleteSpacesLeftovers(List<String> spaces) {\n+    private void deleteSpaceIdsLeftovers(List<String> spaceIds) {\n         try {\n-            fileService.deleteBySpaces(spaces);\n+            fileService.deleteBySpaceIds(spaceIds);\n         } catch (FileStorageException e) {\n-            throw new SLException(e, Messages.COULD_NOT_DELETE_SPACES_LEFTOVERS);\n+            throw new SLException(e, Messages.COULD_NOT_DELETE_SPACEIDS_LEFTOVERS);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk1OTQyOQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524959429", "bodyText": "Arrays.stream(batchResults).sum();", "author": "IvanBorislavovDimitrov", "createdAt": "2020-11-17T08:14:30Z", "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "diffHunk": "@@ -226,14 +226,18 @@ protected SqlFileQueryProvider(String tableName, DataSourceDialect dataSourceDia\n \n     }\n \n-    public SqlQuery<Integer> getDeleteBySpaceQuery(String space) {\n+    public SqlQuery<Integer> getDeleteBySpacesQuery(List<String> spaces) {\n         return (Connection connection) -> {\n             PreparedStatement statement = null;\n             try {\n                 statement = connection.prepareStatement(getQuery(DELETE_FILES_BY_SPACE));\n-                statement.setString(1, space);\n-                int deletedFiles = statement.executeUpdate();\n-                logger.debug(MessageFormat.format(Messages.DELETED_0_FILES_WITH_SPACE_1, deletedFiles, space));\n+                addSpacesAsBatches(statement, spaces);\n+                int[] batchResults = statement.executeBatch();\n+                int deletedFiles = 0;\n+                for (int batchResult : batchResults) {", "originalCommit": "d682552588fd2cabe186d08749ef1169e0a69bf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "chunk": "diff --git a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\nindex dabda95af..5dc2e4b8a 100644\n--- a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\n+++ b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\n\n@@ -226,18 +227,16 @@ public abstract class SqlFileQueryProvider {\n \n     }\n \n-    public SqlQuery<Integer> getDeleteBySpacesQuery(List<String> spaces) {\n+    public SqlQuery<Integer> getDeleteBySpaceIdsQuery(List<String> spaceIds) {\n         return (Connection connection) -> {\n             PreparedStatement statement = null;\n             try {\n                 statement = connection.prepareStatement(getQuery(DELETE_FILES_BY_SPACE));\n-                addSpacesAsBatches(statement, spaces);\n+                addSpaceIdsAsBatches(statement, spaceIds);\n                 int[] batchResults = statement.executeBatch();\n-                int deletedFiles = 0;\n-                for (int batchResult : batchResults) {\n-                    deletedFiles += batchResult;\n-                }\n-                logger.debug(MessageFormat.format(Messages.DELETED_0_FILES_WITH_SPACES_1, deletedFiles, spaces));\n+                int deletedFiles = IntStream.of(batchResults)\n+                                            .sum();\n+                logger.debug(MessageFormat.format(Messages.DELETED_0_FILES_WITH_SPACEIDS_1, deletedFiles, spaceIds));\n                 return deletedFiles;\n             } finally {\n                 JdbcUtil.closeQuietly(statement);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2Njk4MQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524966981", "bodyText": "If this method throws an exception, some files for spaces will not be deleted. Do you think it is worth wrapping it into a try-catch?", "author": "IvanBorislavovDimitrov", "createdAt": "2020-11-17T08:27:37Z", "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/FileSystemFileStorage.java", "diffHunk": "@@ -82,14 +82,9 @@ public void deleteFile(String id, String space) throws FileStorageException {\n     }\n \n     @Override\n-    public void deleteFilesBySpace(String space) throws FileStorageException {\n-        File spaceDirectory = getSpaceDirectory(space).toFile();\n-        try {\n-            if (spaceDirectory.exists()) {\n-                FileUtils.deleteDirectory(spaceDirectory);\n-            }\n-        } catch (IOException e) {\n-            throw new FileStorageException(MessageFormat.format(Messages.ERROR_DELETING_DIRECTORY, spaceDirectory), e);\n+    public void deleteFilesBySpaces(List<String> spaces) throws FileStorageException {\n+        for (String space : spaces) {\n+            deleteFilesBySpace(space);", "originalCommit": "d682552588fd2cabe186d08749ef1169e0a69bf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "chunk": "diff --git a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/FileSystemFileStorage.java b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/FileSystemFileStorage.java\nindex 9af484f76..b6d454f21 100644\n--- a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/FileSystemFileStorage.java\n+++ b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/FileSystemFileStorage.java\n\n@@ -82,9 +82,17 @@ public class FileSystemFileStorage implements FileStorage {\n     }\n \n     @Override\n-    public void deleteFilesBySpaces(List<String> spaces) throws FileStorageException {\n-        for (String space : spaces) {\n-            deleteFilesBySpace(space);\n+    public void deleteFilesBySpaceIds(List<String> spaceIds) throws FileStorageException {\n+        List<String> exceptionMessages = new ArrayList<>();\n+        for (String spaceId : spaceIds) {\n+            try {\n+                deleteFilesBySpaceId(spaceId);\n+            } catch (FileStorageException e) {\n+                exceptionMessages.add(e.getMessage());\n+            }\n+        }\n+        if (!exceptionMessages.isEmpty()) {\n+            throw new FileStorageException(MessageFormat.format(Messages.ERROR_DELETING_DIRECTORIES, exceptionMessages));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2Nzk1NQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524967955", "bodyText": "Make it final", "author": "IvanBorislavovDimitrov", "createdAt": "2020-11-17T08:29:19Z", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.cloudfoundry.multiapps.controller.process.jobs;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.core.util.ApplicationConfiguration;\n+import org.cloudfoundry.multiapps.controller.persistence.model.ConfigurationEntry;\n+import org.cloudfoundry.multiapps.controller.persistence.services.ConfigurationEntryService;\n+import org.springframework.core.annotation.Order;\n+\n+@Named()\n+@Order(40)\n+public class ConfigurationEntriesCleaner extends OrphanedDataCleaner<ConfigurationEntry> {\n+\n+    private ConfigurationEntryService configurationEntryService;", "originalCommit": "d682552588fd2cabe186d08749ef1169e0a69bf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "chunk": "diff --git a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java\nindex 8956e3026..1caca9cfa 100644\n--- a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java\n+++ b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java\n\n@@ -14,7 +14,7 @@ import org.springframework.core.annotation.Order;\n @Order(40)\n public class ConfigurationEntriesCleaner extends OrphanedDataCleaner<ConfigurationEntry> {\n \n-    private ConfigurationEntryService configurationEntryService;\n+    private final ConfigurationEntryService configurationEntryService;\n \n     @Inject\n     public ConfigurationEntriesCleaner(ApplicationConfiguration applicationConfiguration,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2ODE0MQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524968141", "bodyText": "Can you extract these messages in constants?", "author": "IvanBorislavovDimitrov", "createdAt": "2020-11-17T08:29:35Z", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.cloudfoundry.multiapps.controller.process.jobs;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.core.util.ApplicationConfiguration;\n+import org.cloudfoundry.multiapps.controller.persistence.model.ConfigurationEntry;\n+import org.cloudfoundry.multiapps.controller.persistence.services.ConfigurationEntryService;\n+import org.springframework.core.annotation.Order;\n+\n+@Named()\n+@Order(40)\n+public class ConfigurationEntriesCleaner extends OrphanedDataCleaner<ConfigurationEntry> {\n+\n+    private ConfigurationEntryService configurationEntryService;\n+\n+    @Inject\n+    public ConfigurationEntriesCleaner(ApplicationConfiguration applicationConfiguration,\n+                                       ConfigurationEntryService configurationEntryService) {\n+        super(applicationConfiguration);\n+        this.configurationEntryService = configurationEntryService;\n+    }\n+\n+    @Override\n+    protected String getStartCleanupLogMessage() {\n+        return \"Deleting orphaned configuration entries...\";", "originalCommit": "d682552588fd2cabe186d08749ef1169e0a69bf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "chunk": "diff --git a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java\nindex 8956e3026..1caca9cfa 100644\n--- a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java\n+++ b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java\n\n@@ -14,7 +14,7 @@ import org.springframework.core.annotation.Order;\n @Order(40)\n public class ConfigurationEntriesCleaner extends OrphanedDataCleaner<ConfigurationEntry> {\n \n-    private ConfigurationEntryService configurationEntryService;\n+    private final ConfigurationEntryService configurationEntryService;\n \n     @Inject\n     public ConfigurationEntriesCleaner(ApplicationConfiguration applicationConfiguration,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2ODc4Ng==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524968786", "bodyText": "Constants?", "author": "IvanBorislavovDimitrov", "createdAt": "2020-11-17T08:30:32Z", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.cloudfoundry.multiapps.controller.process.jobs;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.core.util.ApplicationConfiguration;\n+import org.cloudfoundry.multiapps.controller.persistence.model.ConfigurationSubscription;\n+import org.cloudfoundry.multiapps.controller.persistence.services.ConfigurationSubscriptionService;\n+import org.springframework.core.annotation.Order;\n+\n+@Named()\n+@Order(40)\n+public class ConfigurationSubscriptionCleaner extends OrphanedDataCleaner<ConfigurationSubscription> {\n+\n+    private ConfigurationSubscriptionService configurationSubscriptionService;\n+\n+    @Inject\n+    public ConfigurationSubscriptionCleaner(ApplicationConfiguration applicationConfiguration,\n+                                            ConfigurationSubscriptionService configurationSubscriptionService) {\n+        super(applicationConfiguration);\n+        this.configurationSubscriptionService = configurationSubscriptionService;\n+    }\n+\n+    @Override\n+    protected String getStartCleanupLogMessage() {\n+        return \"Deleting orphaned configuration subscriptions...\";", "originalCommit": "d682552588fd2cabe186d08749ef1169e0a69bf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "chunk": "diff --git a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java\nindex cf006141b..dbcb3cb3c 100644\n--- a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java\n+++ b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java\n\n@@ -14,7 +14,7 @@ import org.springframework.core.annotation.Order;\n @Order(40)\n public class ConfigurationSubscriptionCleaner extends OrphanedDataCleaner<ConfigurationSubscription> {\n \n-    private ConfigurationSubscriptionService configurationSubscriptionService;\n+    private final ConfigurationSubscriptionService configurationSubscriptionService;\n \n     @Inject\n     public ConfigurationSubscriptionCleaner(ApplicationConfiguration applicationConfiguration,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2ODg1MA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524968850", "bodyText": "final?", "author": "IvanBorislavovDimitrov", "createdAt": "2020-11-17T08:30:38Z", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.cloudfoundry.multiapps.controller.process.jobs;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.core.util.ApplicationConfiguration;\n+import org.cloudfoundry.multiapps.controller.persistence.model.ConfigurationSubscription;\n+import org.cloudfoundry.multiapps.controller.persistence.services.ConfigurationSubscriptionService;\n+import org.springframework.core.annotation.Order;\n+\n+@Named()\n+@Order(40)\n+public class ConfigurationSubscriptionCleaner extends OrphanedDataCleaner<ConfigurationSubscription> {\n+\n+    private ConfigurationSubscriptionService configurationSubscriptionService;", "originalCommit": "d682552588fd2cabe186d08749ef1169e0a69bf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "chunk": "diff --git a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java\nindex cf006141b..dbcb3cb3c 100644\n--- a/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java\n+++ b/multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java\n\n@@ -14,7 +14,7 @@ import org.springframework.core.annotation.Order;\n @Order(40)\n public class ConfigurationSubscriptionCleaner extends OrphanedDataCleaner<ConfigurationSubscription> {\n \n-    private ConfigurationSubscriptionService configurationSubscriptionService;\n+    private final ConfigurationSubscriptionService configurationSubscriptionService;\n \n     @Inject\n     public ConfigurationSubscriptionCleaner(ApplicationConfiguration applicationConfiguration,\n"}}, {"oid": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "message": "Refactor", "committedDate": "2020-11-17T16:41:13Z", "type": "commit"}]}