{"pr_number": 927, "pr_title": "Replace DynatraceMeterRegistry to JMXmeterRegistry", "pr_createdAt": "2020-08-11T15:45:05Z", "pr_url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/927", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA3NTY5NA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/927#discussion_r469075694", "bodyText": "Do we need this now?", "author": "nictas", "createdAt": "2020-08-12T07:57:47Z", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/MicrometerConfiguration.java", "diffHunk": "@@ -76,42 +49,20 @@ public Duration step() {\n                 return Duration.ofSeconds(stepInSeconds);\n             }\n \n-            @Override\n-            public int batchSize() {\n-                if (batchSize == null) {\n-                    return DynatraceConfig.super.batchSize();\n-                }\n-                return batchSize;\n-            }\n-\n             @Override\n             @Nullable\n             public String get(String k) {\n                 return null;\n             }\n         };\n-        DynatraceMeterRegistry registry = new DynatraceMeterRegistry(dynatraceConfig, Clock.SYSTEM);\n+        JmxMeterRegistry registry = new JmxMeterRegistry(jmxConfig, Clock.SYSTEM);\n         registry.config()\n                 .meterFilter(MeterFilter.acceptNameStartsWith(CLIENT_CONNECTIONS_METRICS_PREFIX))\n                 .meterFilter(MeterFilter.deny());\n         Metrics.globalRegistry.add(registry);\n         return registry;\n     }\n \n-    private String getDynatraceToken(DynatraceServiceInfo serviceInfo) {\n-        if(serviceInfo == null) {\n-            return null;\n-        }\n-        return serviceInfo.getMicrometerToken();\n-    }\n-\n-    private String getDynatraceUrl(DynatraceServiceInfo serviceInfo) {\n-        if (serviceInfo == null) {\n-            return null;\n-        }\n-        return serviceInfo.getMicrometerUrl();\n-    }\n-\n     private DynatraceServiceInfo getDynatraceServiceInfo() {", "originalCommit": "edc956a3cc9505c2a8c3e45da3cab9193de067f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA5Mzk5OA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/927#discussion_r469093998", "bodyText": "It is not mandatory to check if DynatraceServiceInfo exists before registering JmxMeterRegistry.\nHowever, it we check that we can optimize the things as not registering the registry at all.\nIn this way we will avoid unecesarry preparation of our own metrics and send them to micrometer", "author": "boyan-velinov", "createdAt": "2020-08-12T08:29:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA3NTY5NA=="}], "type": "inlineReview", "revised_code": {"commit": "fa550d011949f564cd65a979694008823ed5ae0d", "chunk": "diff --git a/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/MicrometerConfiguration.java b/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/MicrometerConfiguration.java\nindex ca686a6ae..28d10a72d 100644\n--- a/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/MicrometerConfiguration.java\n+++ b/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/MicrometerConfiguration.java\n\n@@ -63,20 +61,17 @@ public class MicrometerConfiguration {\n         return registry;\n     }\n \n-    private DynatraceServiceInfo getDynatraceServiceInfo() {\n-        String serviceName = DynatraceServiceInfoCreator.DEFAULT_DYNATRACE_SERVICE_ID;\n+    private boolean dynatraceExist() {\n         try {\n             CloudFactory cloudFactory = new CloudFactory();\n             Cloud cloud = cloudFactory.getCloud();\n-            ServiceInfo serviceInfo = cloud.getServiceInfo(serviceName);\n-            if (serviceInfo instanceof DynatraceServiceInfo) {\n-                return (DynatraceServiceInfo) serviceInfo;\n-            }\n-            LOGGER.warn(\"Service instance did not match allowed name and type.\");\n-        } catch (CloudException e) {\n-            LOGGER.warn(MessageFormat.format(\"Failed to detect service info for service \\\"{0}\\\"!\", serviceName), e);\n+            cloud.getServiceInfo(DYNATRACE_SERVICE_NAME);\n+            LOGGER.info(\"Dynatrace service instance found\");\n+            return true;\n+        } catch (Exception e) {\n+            LOGGER.warn(MessageFormat.format(\"Failed to detect service info for service \\\"{0}\\\"!\", DYNATRACE_SERVICE_NAME), e);\n         }\n-        return null;\n+        return false;\n     }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA3NTgyOA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/927#discussion_r469075828", "bodyText": "This should no longer be needed, right?", "author": "nictas", "createdAt": "2020-08-12T07:58:03Z", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/MicrometerConfiguration.java", "diffHunk": "@@ -32,41 +32,14 @@\n \n     @Inject\n     @Bean\n-    public DynatraceMeterRegistry dynatraceMeterRegistry(ApplicationConfiguration appConfig) {\n+    public JmxMeterRegistry jmxMeterRegistry(ApplicationConfiguration appConfig) {\n         DynatraceServiceInfo serviceInfo = getDynatraceServiceInfo();", "originalCommit": "edc956a3cc9505c2a8c3e45da3cab9193de067f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA4MjUzMg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/927#discussion_r469082532", "bodyText": "DynatraceMeterRegistry  is removed. ReactorNetty use directly Metrics.globalRegistry that propagates meters in all registered registries.", "author": "boyan-velinov", "createdAt": "2020-08-12T08:10:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA3NTgyOA=="}], "type": "inlineReview", "revised_code": {"commit": "fa550d011949f564cd65a979694008823ed5ae0d", "chunk": "diff --git a/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/MicrometerConfiguration.java b/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/MicrometerConfiguration.java\nindex ca686a6ae..28d10a72d 100644\n--- a/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/MicrometerConfiguration.java\n+++ b/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/MicrometerConfiguration.java\n\n@@ -28,13 +24,15 @@ import io.micrometer.jmx.JmxMeterRegistry;\n public class MicrometerConfiguration {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(MicrometerConfiguration.class);\n+    public static final String DYNATRACE_SERVICE_NAME = \"deploy-service-dynatrace\";\n     private static final String CLIENT_CONNECTIONS_METRICS_PREFIX = \"reactor.netty.connection.provider.cloudfoundry-client.\";\n \n     @Inject\n     @Bean\n     public JmxMeterRegistry jmxMeterRegistry(ApplicationConfiguration appConfig) {\n-        DynatraceServiceInfo serviceInfo = getDynatraceServiceInfo();\n-        if (serviceInfo == null) {\n+        // Skip creation of registry when Dynatrace is not bound\n+        if (!dynatraceExist()) {\n+            LOGGER.info(\"Skipping registering JmxMeterRegistry\");\n             return null;\n         }\n         Integer stepInSeconds = appConfig.getMicrometerStepInSeconds();\n"}}, {"oid": "296b756253f2d63b0a2e471ee097317a78b8ed8a", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/296b756253f2d63b0a2e471ee097317a78b8ed8a", "message": "Replace DynatraceMeterRegistry to JMXmeterRegistry\n\nJira: LMCROSSITXSADEPLOY-2178", "committedDate": "2020-08-12T09:10:02Z", "type": "forcePushed"}, {"oid": "fa550d011949f564cd65a979694008823ed5ae0d", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/fa550d011949f564cd65a979694008823ed5ae0d", "message": "Replace DynatraceMeterRegistry to JMXmeterRegistry\n\nJira: LMCROSSITXSADEPLOY-2178", "committedDate": "2020-08-12T15:13:59Z", "type": "commit"}, {"oid": "fa550d011949f564cd65a979694008823ed5ae0d", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/fa550d011949f564cd65a979694008823ed5ae0d", "message": "Replace DynatraceMeterRegistry to JMXmeterRegistry\n\nJira: LMCROSSITXSADEPLOY-2178", "committedDate": "2020-08-12T15:13:59Z", "type": "forcePushed"}]}