{"pr_number": 990, "pr_title": "Add functionality to upload files without temp file", "pr_createdAt": "2020-11-09T09:48:13Z", "pr_url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990", "timeline": [{"oid": "ff0e9cb3e1cc8bbb234a258aaa85ac617c8fbcf9", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/ff0e9cb3e1cc8bbb234a258aaa85ac617c8fbcf9", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-11-27T15:40:50Z", "type": "forcePushed"}, {"oid": "67eebcf325c68f08058bdb3e480e186605fe7789", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/67eebcf325c68f08058bdb3e480e186605fe7789", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-11-27T15:48:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIxNzQwOA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534217408", "bodyText": "The name is a bit misleading. I initially thought that the query wouldn't set the content, but it does. Rename it to something like `INSERT_FILE_ATTRIBUTES_AND_CONTENT_WITHOUT_DIGEST.", "author": "nictas", "createdAt": "2020-12-02T14:39:19Z", "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "diffHunk": "@@ -24,9 +27,13 @@\n import org.cloudfoundry.multiapps.controller.persistence.util.JdbcUtil;\n import org.slf4j.Logger;\n \n+import javax.xml.bind.DatatypeConverter;\n+\n public abstract class SqlFileQueryProvider {\n \n     private static final String INSERT_FILE_ATTRIBUTES_AND_CONTENT = \"INSERT INTO %s (FILE_ID, SPACE, FILE_NAME, NAMESPACE, FILE_SIZE, DIGEST, DIGEST_ALGORITHM, MODIFIED, %s) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\";\n+    private static final String INSERT_FILE_ATTRIBUTES_NO_DIGEST_AND_CONTENT = \"INSERT INTO %s (FILE_ID, SPACE, FILE_NAME, NAMESPACE, FILE_SIZE, DIGEST_ALGORITHM, MODIFIED, %s) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";", "originalCommit": "67eebcf325c68f08058bdb3e480e186605fe7789", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9701a21b7d72cc8124301adca36fba782398a55f", "chunk": "diff --git a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\nindex c61251693..7e65003e1 100644\n--- a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\n+++ b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\n\n@@ -32,7 +32,7 @@ import javax.xml.bind.DatatypeConverter;\n public abstract class SqlFileQueryProvider {\n \n     private static final String INSERT_FILE_ATTRIBUTES_AND_CONTENT = \"INSERT INTO %s (FILE_ID, SPACE, FILE_NAME, NAMESPACE, FILE_SIZE, DIGEST, DIGEST_ALGORITHM, MODIFIED, %s) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\";\n-    private static final String INSERT_FILE_ATTRIBUTES_NO_DIGEST_AND_CONTENT = \"INSERT INTO %s (FILE_ID, SPACE, FILE_NAME, NAMESPACE, FILE_SIZE, DIGEST_ALGORITHM, MODIFIED, %s) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";\n+    private static final String INSERT_FILE_ATTRIBUTES_AND_CONTENT_WITHOUT_DIGEST = \"INSERT INTO %s (FILE_ID, SPACE, FILE_NAME, NAMESPACE, FILE_SIZE, DIGEST_ALGORITHM, MODIFIED, %s) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";\n     private static final String UPDATE_FILE_DIGEST = \"UPDATE %s SET DIGEST = ? WHERE FILE_ID = ?\";\n     private static final String INSERT_FILE_ATTRIBUTES = \"INSERT INTO %s (FILE_ID, SPACE, FILE_NAME, NAMESPACE, FILE_SIZE, DIGEST, DIGEST_ALGORITHM, MODIFIED) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";\n     private static final String SELECT_ALL_FILES = \"SELECT FILE_ID, SPACE, DIGEST, DIGEST_ALGORITHM, MODIFIED, FILE_NAME, NAMESPACE, FILE_SIZE FROM %s\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyMzQwNw==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534223407", "bodyText": "The name/signature of the method doesn't indicate in any way that the result will be the digest of the input stream.", "author": "nictas", "createdAt": "2020-12-02T14:46:50Z", "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "diffHunk": "@@ -73,6 +80,41 @@ protected SqlFileQueryProvider(String tableName, DataSourceDialect dataSourceDia\n         };\n     }\n \n+    public SqlQuery<String> getStoreFileWithoutDigestQuery(FileEntry entryWithoutDigest, InputStream content) {", "originalCommit": "67eebcf325c68f08058bdb3e480e186605fe7789", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9701a21b7d72cc8124301adca36fba782398a55f", "chunk": "diff --git a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\nindex c61251693..7e65003e1 100644\n--- a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\n+++ b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\n\n@@ -80,7 +80,7 @@ public abstract class SqlFileQueryProvider {\n         };\n     }\n \n-    public SqlQuery<String> getStoreFileWithoutDigestQuery(FileEntry entryWithoutDigest, InputStream content) {\n+    public SqlQuery<String> getStoreFileAndComputeDigestQuery(FileEntry entryWithoutDigest, InputStream content) {\n         return (Connection connection) -> {\n             PreparedStatement statement = null;\n             try (DigestInputStream dis = new DigestInputStream(content, MessageDigest.getInstance(Constants.DIGEST_ALGORITHM))) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyNzMzMQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534227331", "bodyText": "I'm not the biggest fan of this re-throw. The exceptions don't have anything to do with SQL, so it's a bit of a hack to wrap them in an SQLException. I'd be a bit more OK if the wrapper exception was an IllegalStateException.", "author": "nictas", "createdAt": "2020-12-02T14:51:41Z", "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "diffHunk": "@@ -73,6 +80,41 @@ protected SqlFileQueryProvider(String tableName, DataSourceDialect dataSourceDia\n         };\n     }\n \n+    public SqlQuery<String> getStoreFileWithoutDigestQuery(FileEntry entryWithoutDigest, InputStream content) {\n+        return (Connection connection) -> {\n+            PreparedStatement statement = null;\n+            try (DigestInputStream dis = new DigestInputStream(content, MessageDigest.getInstance(Constants.DIGEST_ALGORITHM))) {\n+                statement = connection.prepareStatement(getInsertWithContentWithoutDigestQuery());\n+                statement.setString(1, entryWithoutDigest.getId());\n+                statement.setString(2, entryWithoutDigest.getSpace());\n+                statement.setString(3, entryWithoutDigest.getName());\n+                setOrNull(statement, 4, entryWithoutDigest.getNamespace());\n+                getDataSourceDialect().setBigInteger(statement, 5, entryWithoutDigest.getSize());\n+                statement.setString(6, Constants.DIGEST_ALGORITHM);\n+                statement.setTimestamp(7, new Timestamp(entryWithoutDigest.getModified()\n+                                                                          .getTime()));\n+                setContentBinaryStream(statement, 8, dis);\n+                statement.executeUpdate();\n+                return DatatypeConverter.printHexBinary(dis.getMessageDigest()\n+                                                           .digest());\n+            } catch (NoSuchAlgorithmException | IOException e) {\n+                throw new SQLException(e);", "originalCommit": "67eebcf325c68f08058bdb3e480e186605fe7789", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9701a21b7d72cc8124301adca36fba782398a55f", "chunk": "diff --git a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\nindex c61251693..7e65003e1 100644\n--- a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\n+++ b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java\n\n@@ -80,7 +80,7 @@ public abstract class SqlFileQueryProvider {\n         };\n     }\n \n-    public SqlQuery<String> getStoreFileWithoutDigestQuery(FileEntry entryWithoutDigest, InputStream content) {\n+    public SqlQuery<String> getStoreFileAndComputeDigestQuery(FileEntry entryWithoutDigest, InputStream content) {\n         return (Connection connection) -> {\n             PreparedStatement statement = null;\n             try (DigestInputStream dis = new DigestInputStream(content, MessageDigest.getInstance(Constants.DIGEST_ALGORITHM))) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzNzY2NA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534237664", "bodyText": "Is this in the same transaction and if not, can this be a problem? For example, having two people upload the same file in parallel. The first stores the content in the database successfully, but before updating the digest, the second person tries to retrieve the list of files to check whether he can skip the upload. He sees the file entry, tries to use the digest and fails with a nil pointer dereference, because it is nil.", "author": "nictas", "createdAt": "2020-12-02T15:04:09Z", "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/DatabaseFileService.java", "diffHunk": "@@ -65,17 +65,17 @@ public int deleteFilesEntriesWithoutContent() throws FileStorageException {\n     }\n \n     @Override\n-    protected void storeFile(FileEntry fileEntry, FileInfo fileinfo) throws FileStorageException {\n-        try (InputStream fileStream = fileinfo.getInputStream()) {\n-            storeFileWithContent(fileEntry, fileStream);\n-        } catch (IOException e) {\n-            logger.debug(e.getMessage(), e);\n-        }\n-    }\n-\n-    private boolean storeFileWithContent(FileEntry fileEntry, InputStream fileStream) throws FileStorageException {\n+    protected FileEntry storeFile(FileEntry fileEntry, InputStream fileStream) throws FileStorageException {\n         try {\n-            return getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileQuery(fileEntry, fileStream));\n+            if (fileEntry.getDigest() != null) {\n+                getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileQuery(fileEntry, fileStream));\n+                return fileEntry;\n+            }\n+            String digest = getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileWithoutDigestQuery(fileEntry, fileStream));\n+            getSqlQueryExecutor().execute(getSqlFileQueryProvider().getUpdateFileDigestQuery(fileEntry, digest));", "originalCommit": "67eebcf325c68f08058bdb3e480e186605fe7789", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0MzkwMQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r536043901", "bodyText": "You're right. It's currently not in a single transaction but I will change it to be.", "author": "radito3", "createdAt": "2020-12-04T11:50:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzNzY2NA=="}], "type": "inlineReview", "revised_code": {"commit": "9701a21b7d72cc8124301adca36fba782398a55f", "chunk": "diff --git a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/DatabaseFileService.java b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/DatabaseFileService.java\nindex 83791d878..283b2a3ee 100644\n--- a/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/DatabaseFileService.java\n+++ b/multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/DatabaseFileService.java\n\n@@ -71,8 +71,8 @@ public class DatabaseFileService extends FileService {\n                 getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileQuery(fileEntry, fileStream));\n                 return fileEntry;\n             }\n-            String digest = getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileWithoutDigestQuery(fileEntry, fileStream));\n-            getSqlQueryExecutor().execute(getSqlFileQueryProvider().getUpdateFileDigestQuery(fileEntry, digest));\n+            String digest = getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileAndComputeDigestQuery(fileEntry,\n+                                                                                                                      fileStream));\n             return ImmutableFileEntry.copyOf(fileEntry)\n                                      .withDigest(digest)\n                                      .withDigestAlgorithm(Constants.DIGEST_ALGORITHM);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk4NDE2Ng==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534984166", "bodyText": "What if some moron passes a non-integer here? Will this be handled gracefully by our exception handlers?", "author": "nictas", "createdAt": "2020-12-03T09:13:08Z", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java", "diffHunk": "@@ -87,7 +87,13 @@\n             }\n \n             try (InputStream in = item.openStream()) {\n-                FileEntry entry = fileService.addFile(spaceGuid, namespace, item.getName(), in);\n+                FileEntry entry;\n+                if (request.getHeader(\"X-File-Size\") != null) {\n+                    entry = fileService.addFile(spaceGuid, namespace, item.getName(), in,\n+                                                Long.parseLong(request.getHeader(\"X-File-Size\")));", "originalCommit": "67eebcf325c68f08058bdb3e480e186605fe7789", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9701a21b7d72cc8124301adca36fba782398a55f", "chunk": "diff --git a/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java b/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java\nindex f7f142b6a..1675d8b96 100644\n--- a/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java\n+++ b/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java\n\n@@ -88,9 +89,9 @@ public class FilesApiServiceImpl implements FilesApiService {\n \n             try (InputStream in = item.openStream()) {\n                 FileEntry entry;\n-                if (request.getHeader(\"X-File-Size\") != null) {\n-                    entry = fileService.addFile(spaceGuid, namespace, item.getName(), in,\n-                                                Long.parseLong(request.getHeader(\"X-File-Size\")));\n+                String fileSizeHeader = request.getHeader(\"X-File-Size\");\n+                if (!StringUtils.isEmpty(fileSizeHeader) && StringUtils.isNumeric(fileSizeHeader)) {\n+                    entry = fileService.addFile(spaceGuid, namespace, item.getName(), in, Long.parseLong(fileSizeHeader));\n                 } else {\n                     entry = fileService.addFile(spaceGuid, namespace, item.getName(), in);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyMDcwNQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534920705", "bodyText": "StringUtils.isEmpty ?\n\"\".equals(..) ?\nWill look better", "author": "IvanBorislavovDimitrov", "createdAt": "2020-12-03T08:34:24Z", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationConfiguration.java", "diffHunk": "@@ -575,7 +572,7 @@ public Integer getServiceHandlingMaxParallelThreads() {\n \n     private URL getControllerUrlFromEnvironment() {\n         String controllerUrlString = environment.getString(\"CF_API\");\n-        if(controllerUrlString == null || controllerUrlString.isEmpty()){\n+        if (controllerUrlString == null || controllerUrlString.isEmpty()) {", "originalCommit": "67eebcf325c68f08058bdb3e480e186605fe7789", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9701a21b7d72cc8124301adca36fba782398a55f", "chunk": "diff --git a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationConfiguration.java b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationConfiguration.java\nindex 9811792e9..ecce7c9fa 100644\n--- a/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationConfiguration.java\n+++ b/multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationConfiguration.java\n\n@@ -572,7 +573,7 @@ public class ApplicationConfiguration {\n \n     private URL getControllerUrlFromEnvironment() {\n         String controllerUrlString = environment.getString(\"CF_API\");\n-        if (controllerUrlString == null || controllerUrlString.isEmpty()) {\n+        if (StringUtils.isEmpty(controllerUrlString)) {\n             Map<String, Object> vcapApplicationMap = getVcapApplication();\n             controllerUrlString = getControllerUrl(vcapApplicationMap);\n         }\n"}}, {"oid": "9701a21b7d72cc8124301adca36fba782398a55f", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/9701a21b7d72cc8124301adca36fba782398a55f", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-12-04T16:57:14Z", "type": "forcePushed"}, {"oid": "9e48835a9834e2126e5e153d1b8f85a7e9392aea", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/9e48835a9834e2126e5e153d1b8f85a7e9392aea", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-12-04T17:02:36Z", "type": "forcePushed"}, {"oid": "8dbbadc319d00799e82c058bec69b1fc7da1ad2b", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/8dbbadc319d00799e82c058bec69b1fc7da1ad2b", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-12-11T14:02:19Z", "type": "forcePushed"}, {"oid": "733116ba7a775ea62c1bcfe675a5b77d355d5717", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/733116ba7a775ea62c1bcfe675a5b77d355d5717", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-12-11T14:16:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2OTA1Mg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r542169052", "bodyText": "You could extract this and the following 3 lines of code in a separate method called getFileSizeHeaderValue and let it return a Long instead of a String.", "author": "nictas", "createdAt": "2020-12-14T07:39:07Z", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java", "diffHunk": "@@ -87,7 +88,16 @@\n             }\n \n             try (InputStream in = item.openStream()) {\n-                FileEntry entry = fileService.addFile(spaceGuid, namespace, item.getName(), in);\n+                FileEntry entry;\n+                String fileSizeHeader = request.getHeader(\"X-File-Size\");", "originalCommit": "733116ba7a775ea62c1bcfe675a5b77d355d5717", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "335dd4da11f697be7b3554ff094e979c18842d59", "chunk": "diff --git a/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java b/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java\nindex 8c7afdc2b..5b64987b4 100644\n--- a/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java\n+++ b/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java\n\n@@ -89,12 +89,9 @@ public class FilesApiServiceImpl implements FilesApiService {\n \n             try (InputStream in = item.openStream()) {\n                 FileEntry entry;\n-                String fileSizeHeader = request.getHeader(\"X-File-Size\");\n-                if (!StringUtils.isEmpty(fileSizeHeader) && !StringUtils.isNumeric(fileSizeHeader)) {\n-                    throw new SLException(\"Invalid \\\"X-File-Size\\\" header: \" + fileSizeHeader);\n-                }\n-                if (!StringUtils.isEmpty(fileSizeHeader)) {\n-                    entry = fileService.addFile(spaceGuid, namespace, item.getName(), in, Long.parseLong(fileSizeHeader));\n+                long fileSize = getFileSizeHeaderValue(request);\n+                if (fileSize != -1) {\n+                    entry = fileService.addFile(spaceGuid, namespace, item.getName(), in, fileSize);\n                 } else {\n                     entry = fileService.addFile(spaceGuid, namespace, item.getName(), in);\n                 }\n"}}, {"oid": "335dd4da11f697be7b3554ff094e979c18842d59", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/335dd4da11f697be7b3554ff094e979c18842d59", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-12-14T10:29:44Z", "type": "forcePushed"}, {"oid": "d88a4fa8d565adffb1b1c7afa8b8b55dc976a43a", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/d88a4fa8d565adffb1b1c7afa8b8b55dc976a43a", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-12-14T10:39:33Z", "type": "forcePushed"}, {"oid": "6f5ad1d9bb84c82b4effb4530698113fda8fb85b", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/6f5ad1d9bb84c82b4effb4530698113fda8fb85b", "message": "Use Set.of() in ApplicationConfiguration", "committedDate": "2020-12-14T14:20:39Z", "type": "commit"}, {"oid": "f6409805e2f755d66ab810519112a023e783beb5", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/f6409805e2f755d66ab810519112a023e783beb5", "message": "Refactoring in ProcessMtaArchiveStep", "committedDate": "2020-12-14T14:20:39Z", "type": "commit"}, {"oid": "9e310ded1d21761d5573b498469c9c93200a7a88", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/9e310ded1d21761d5573b498469c9c93200a7a88", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-12-14T14:20:40Z", "type": "forcePushed"}, {"oid": "d48f9a2307c7e9eb73e426274d8358615fc6f773", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/d48f9a2307c7e9eb73e426274d8358615fc6f773", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-12-14T15:56:59Z", "type": "forcePushed"}, {"oid": "a66cf8cbb097a32b384928242a201edfc3f922da", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/a66cf8cbb097a32b384928242a201edfc3f922da", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-12-15T07:59:53Z", "type": "commit"}, {"oid": "a66cf8cbb097a32b384928242a201edfc3f922da", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/a66cf8cbb097a32b384928242a201edfc3f922da", "message": "Add option to upload files without temp file\n\nLMCROSSITXSADEPLOY-1737", "committedDate": "2020-12-15T07:59:53Z", "type": "forcePushed"}]}