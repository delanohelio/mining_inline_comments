{"pr_number": 906, "pr_title": "Fix status code Bad Gateway instead of Not Found for requests to non-\u2026", "pr_createdAt": "2020-07-17T09:15:03Z", "pr_url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/906", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMyNDI0MA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/906#discussion_r456324240", "bodyText": "filter(httpStatus -> httpStatus.value() != HttpStatus.TOO_MANY_REQUESTS.value())", "author": "radito3", "createdAt": "2020-07-17T09:18:14Z", "path": "com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java", "diffHunk": "@@ -44,11 +44,36 @@ public void testHandleException(Exception exception, RestResponse expectedRespon\n             Arguments.of(new ResponseStatusException(HttpStatus.NOT_FOUND, \"Not found\"), new RestResponse(404, \"Not found\")),\n             Arguments.of(new ResponseStatusException(HttpStatus.BAD_REQUEST, \"Bad request\"), new RestResponse(400, \"Bad request\")),\n             Arguments.of(new ResponseStatusException(HttpStatus.INTERNAL_SERVER_ERROR, \"Something went wrong\"), new RestResponse(500, \"Something went wrong\")),\n-            Arguments.of(new CloudOperationException(HttpStatus.TOO_MANY_REQUESTS, HttpStatus.TOO_MANY_REQUESTS.getReasonPhrase(), \"Rate limit exceeded\"), new RestResponse(502, \"429 Too Many Requests: Rate limit exceeded\")),\n+            Arguments.of(new CloudOperationException(HttpStatus.TOO_MANY_REQUESTS, HttpStatus.TOO_MANY_REQUESTS.getReasonPhrase(), \"Rate limit exceeded\"), new RestResponse(429, \"429 Too Many Requests: Rate limit exceeded\")),\n             Arguments.of(new SQLException(), new RestResponse(500, Messages.TEMPORARY_PROBLEM_WITH_PERSISTENCE_LAYER)),\n             Arguments.of(new PersistenceException(), new RestResponse(500, Messages.TEMPORARY_PROBLEM_WITH_PERSISTENCE_LAYER))\n         // @formatter:on\n         );\n     }\n \n+    @ParameterizedTest\n+    @MethodSource\n+    public void testHandleExceptionForCloudOperationExceptionWithAllHttpStatuses(HttpStatus httpStatus) {\n+        ResponseEntity<String> response = exceptionMapper.handleException(new CloudOperationException(httpStatus,\n+                                                                                                      httpStatus.getReasonPhrase()));\n+        StringBuilder expectedMessage = new StringBuilder();\n+        expectedMessage.append(httpStatus.value());\n+        expectedMessage.append(\" \");\n+        expectedMessage.append(httpStatus.getReasonPhrase());\n+        RestResponse expectedResponse = new RestResponse(httpStatus.value(), expectedMessage.toString());\n+\n+        assertEquals(expectedResponse.getStatus(), response.getStatusCodeValue());\n+        assertEquals(expectedResponse.getEntity(), response.getBody());\n+    }\n+\n+    public static Stream<HttpStatus> testHandleExceptionForCloudOperationExceptionWithAllHttpStatuses() {\n+        return Stream.of(HttpStatus.values())\n+                     .filter(httpStatus -> {", "originalCommit": "ea1e36ef48d5ea23f8334688d236c478f5d9f22f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c1b738afaf3c6a737eed00d32c84f380dd258be6", "chunk": "diff --git a/com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java b/com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java\nindex c8c83b444..62100dd43 100644\n--- a/com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java\n+++ b/com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java\n\n@@ -68,12 +68,7 @@ public class CFExceptionMapperTest {\n \n     public static Stream<HttpStatus> testHandleExceptionForCloudOperationExceptionWithAllHttpStatuses() {\n         return Stream.of(HttpStatus.values())\n-                     .filter(httpStatus -> {\n-                         if (httpStatus.value() == HttpStatus.TOO_MANY_REQUESTS.value()) {\n-                             return false;\n-                         }\n-                         return true;\n-                     });\n+                     .filter(httpStatus -> httpStatus.value() != HttpStatus.TOO_MANY_REQUESTS.value());\n     }\n \n }\n"}}, {"oid": "a1583339a0531d1b77ddedd0cfc7407efb356f18", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/a1583339a0531d1b77ddedd0cfc7407efb356f18", "message": "Fix status code Bad Gateway instead of Not Found for requests to non-existent spaces\n\n-- CFExceptionMapper now returns the true status code of CloudOperationException instead of always Bad Gateway\n-- Adds tests for the changes", "committedDate": "2020-07-17T09:22:49Z", "type": "forcePushed"}, {"oid": "c1b738afaf3c6a737eed00d32c84f380dd258be6", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/c1b738afaf3c6a737eed00d32c84f380dd258be6", "message": "Fix status code Bad Gateway instead of Not Found for requests to non-existent spaces\n\n-- CFExceptionMapper now returns the true status code of CloudOperationException instead of always Bad Gateway\n-- Adds tests for the changes", "committedDate": "2020-07-17T09:31:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM1MTQ4NA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/906#discussion_r456351484", "bodyText": "You're filtering out 429, because there's already a test for it, but there's no problem in having this small overlap between the tests. Remove this .filter.", "author": "nictas", "createdAt": "2020-07-17T10:11:39Z", "path": "com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java", "diffHunk": "@@ -44,11 +44,31 @@ public void testHandleException(Exception exception, RestResponse expectedRespon\n             Arguments.of(new ResponseStatusException(HttpStatus.NOT_FOUND, \"Not found\"), new RestResponse(404, \"Not found\")),\n             Arguments.of(new ResponseStatusException(HttpStatus.BAD_REQUEST, \"Bad request\"), new RestResponse(400, \"Bad request\")),\n             Arguments.of(new ResponseStatusException(HttpStatus.INTERNAL_SERVER_ERROR, \"Something went wrong\"), new RestResponse(500, \"Something went wrong\")),\n-            Arguments.of(new CloudOperationException(HttpStatus.TOO_MANY_REQUESTS, HttpStatus.TOO_MANY_REQUESTS.getReasonPhrase(), \"Rate limit exceeded\"), new RestResponse(502, \"429 Too Many Requests: Rate limit exceeded\")),\n+            Arguments.of(new CloudOperationException(HttpStatus.TOO_MANY_REQUESTS, HttpStatus.TOO_MANY_REQUESTS.getReasonPhrase(), \"Rate limit exceeded\"), new RestResponse(429, \"429 Too Many Requests: Rate limit exceeded\")),\n             Arguments.of(new SQLException(), new RestResponse(500, Messages.TEMPORARY_PROBLEM_WITH_PERSISTENCE_LAYER)),\n             Arguments.of(new PersistenceException(), new RestResponse(500, Messages.TEMPORARY_PROBLEM_WITH_PERSISTENCE_LAYER))\n         // @formatter:on\n         );\n     }\n \n+    @ParameterizedTest\n+    @MethodSource\n+    public void testHandleExceptionForCloudOperationExceptionWithAllHttpStatuses(HttpStatus httpStatus) {\n+        ResponseEntity<String> response = exceptionMapper.handleException(new CloudOperationException(httpStatus,\n+                                                                                                      httpStatus.getReasonPhrase()));\n+        StringBuilder expectedMessage = new StringBuilder();\n+        expectedMessage.append(httpStatus.value());\n+        expectedMessage.append(\" \");\n+        expectedMessage.append(httpStatus.getReasonPhrase());\n+        RestResponse expectedResponse = new RestResponse(httpStatus.value(), expectedMessage.toString());\n+\n+        assertEquals(expectedResponse.getStatus(), response.getStatusCodeValue());\n+        assertEquals(expectedResponse.getEntity(), response.getBody());\n+    }\n+\n+    public static Stream<HttpStatus> testHandleExceptionForCloudOperationExceptionWithAllHttpStatuses() {\n+        return Stream.of(HttpStatus.values())\n+                     .filter(httpStatus -> httpStatus.value() != HttpStatus.TOO_MANY_REQUESTS.value());", "originalCommit": "c1b738afaf3c6a737eed00d32c84f380dd258be6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6c3a91b2e3527840b5235fbf7e8b3227e58762bf", "chunk": "diff --git a/com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java b/com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java\nindex 62100dd43..c536f590c 100644\n--- a/com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java\n+++ b/com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java\n\n@@ -67,8 +67,7 @@ public class CFExceptionMapperTest {\n     }\n \n     public static Stream<HttpStatus> testHandleExceptionForCloudOperationExceptionWithAllHttpStatuses() {\n-        return Stream.of(HttpStatus.values())\n-                     .filter(httpStatus -> httpStatus.value() != HttpStatus.TOO_MANY_REQUESTS.value());\n+        return Stream.of(HttpStatus.values());\n     }\n \n }\n"}}, {"oid": "6c3a91b2e3527840b5235fbf7e8b3227e58762bf", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/6c3a91b2e3527840b5235fbf7e8b3227e58762bf", "message": "Fix status code Bad Gateway instead of Not Found for requests to non-existent spaces\n\n-- CFExceptionMapper now returns the true status code of CloudOperationException instead of always Bad Gateway\n-- Adds tests for the changes", "committedDate": "2020-07-17T10:34:55Z", "type": "commit"}, {"oid": "6c3a91b2e3527840b5235fbf7e8b3227e58762bf", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/6c3a91b2e3527840b5235fbf7e8b3227e58762bf", "message": "Fix status code Bad Gateway instead of Not Found for requests to non-existent spaces\n\n-- CFExceptionMapper now returns the true status code of CloudOperationException instead of always Bad Gateway\n-- Adds tests for the changes", "committedDate": "2020-07-17T10:34:55Z", "type": "forcePushed"}]}