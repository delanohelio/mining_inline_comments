{"pr_number": 754, "pr_title": "Log process time overview", "pr_createdAt": "2020-02-11T12:38:10Z", "pr_url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/754", "timeline": [{"oid": "2908df80c57e344c444fcfbd72bf91b544e45163", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/2908df80c57e344c444fcfbd72bf91b544e45163", "message": "Log process time overview", "committedDate": "2020-02-11T12:40:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MjQxNg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/754#discussion_r378082416", "bodyText": "Do we need to report the delay at this point in the process?", "author": "nictas", "createdAt": "2020-02-12T07:42:21Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/CreateOrUpdateServiceEndListener.java", "diffHunk": "@@ -35,5 +50,8 @@ public void notify(DelegateExecution context) {\n         superExecutionId = superExecutionResult.getSuperExecutionId();\n \n         runtimeService.setVariable(superExecutionId, exportedVariableName, isServiceUpdated);\n+\n+        ProcessTime processTime = processTimeCalculator.calculate(context.getProcessInstanceId());", "originalCommit": "2908df80c57e344c444fcfbd72bf91b544e45163", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50ab3315a082b61d64f053b8d39ddd9b77b150a5", "chunk": "diff --git a/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/CreateOrUpdateServiceEndListener.java b/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/CreateOrUpdateServiceEndListener.java\nindex ddad80804..7cbf5e142 100644\n--- a/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/CreateOrUpdateServiceEndListener.java\n+++ b/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/CreateOrUpdateServiceEndListener.java\n\n@@ -51,7 +36,5 @@ public class CreateOrUpdateServiceEndListener implements ExecutionListener {\n \n         runtimeService.setVariable(superExecutionId, exportedVariableName, isServiceUpdated);\n \n-        ProcessTime processTime = processTimeCalculator.calculate(context.getProcessInstanceId());\n-        ProcessTimeLogger.logProcessTime(LOGGER, processTime, StepsUtil.getCorrelationId(context), context.getProcessInstanceId());\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MjQ2OA==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/754#discussion_r378082468", "bodyText": "Do we need to report the delay at this point in the process?", "author": "nictas", "createdAt": "2020-02-12T07:42:29Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/DeployAppSubProcessEndListener.java", "diffHunk": "@@ -1,32 +1,43 @@\n package com.sap.cloud.lm.sl.cf.process.listeners;\n \n+import javax.inject.Inject;\n import javax.inject.Named;\n \n import org.cloudfoundry.client.lib.domain.CloudServiceBroker;\n import org.flowable.engine.delegate.DelegateExecution;\n+import org.flowable.engine.delegate.ExecutionListener;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import com.sap.cloud.lm.sl.cf.process.Constants;\n import com.sap.cloud.lm.sl.cf.process.steps.StepsUtil;\n+import com.sap.cloud.lm.sl.cf.process.util.ProcessTimeCalculator;\n+import com.sap.cloud.lm.sl.cf.process.util.ProcessTimeCalculator.ProcessTime;\n+import com.sap.cloud.lm.sl.cf.process.util.ProcessTimeCalculator.ProcessTimeLogger;\n \n @Named(\"deployAppSubProcessEndListener\")\n-public class DeployAppSubProcessEndListener extends AbstractProcessExecutionListener {\n+public class DeployAppSubProcessEndListener implements ExecutionListener {\n \n     private static final long serialVersionUID = 1L;\n     private static final Logger LOGGER = LoggerFactory.getLogger(DeployAppSubProcessEndListener.class);\n \n+    private ProcessTimeCalculator processTimeCalculator;\n+\n+    @Inject\n+    public DeployAppSubProcessEndListener(ProcessTimeCalculator processTimeCalculator) {\n+        this.processTimeCalculator = processTimeCalculator;\n+    }\n+\n     @Override\n-    protected void notifyInternal(DelegateExecution context) {\n+    public void notify(DelegateExecution context) {\n         CloudServiceBroker cloudServiceBrokerExtended = StepsUtil.getCreatedOrUpdatedServiceBroker(context);\n \n         if (cloudServiceBrokerExtended != null) {\n             StepsUtil.setVariableInParentProcess(context, Constants.VAR_APP_SERVICE_BROKER_VAR_PREFIX, cloudServiceBrokerExtended);\n         }\n-    }\n \n-    @Override\n-    protected Logger getLogger() {\n-        return LOGGER;\n+        ProcessTime processTime = processTimeCalculator.calculate(context.getProcessInstanceId());", "originalCommit": "2908df80c57e344c444fcfbd72bf91b544e45163", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50ab3315a082b61d64f053b8d39ddd9b77b150a5", "chunk": "diff --git a/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/DeployAppSubProcessEndListener.java b/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/DeployAppSubProcessEndListener.java\nindex 0a1e3829a..69dc6add1 100644\n--- a/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/DeployAppSubProcessEndListener.java\n+++ b/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/DeployAppSubProcessEndListener.java\n\n@@ -1,32 +1,18 @@\n package com.sap.cloud.lm.sl.cf.process.listeners;\n \n-import javax.inject.Inject;\n import javax.inject.Named;\n \n import org.cloudfoundry.client.lib.domain.CloudServiceBroker;\n import org.flowable.engine.delegate.DelegateExecution;\n import org.flowable.engine.delegate.ExecutionListener;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n import com.sap.cloud.lm.sl.cf.process.Constants;\n import com.sap.cloud.lm.sl.cf.process.steps.StepsUtil;\n-import com.sap.cloud.lm.sl.cf.process.util.ProcessTimeCalculator;\n-import com.sap.cloud.lm.sl.cf.process.util.ProcessTimeCalculator.ProcessTime;\n-import com.sap.cloud.lm.sl.cf.process.util.ProcessTimeCalculator.ProcessTimeLogger;\n \n @Named(\"deployAppSubProcessEndListener\")\n public class DeployAppSubProcessEndListener implements ExecutionListener {\n \n     private static final long serialVersionUID = 1L;\n-    private static final Logger LOGGER = LoggerFactory.getLogger(DeployAppSubProcessEndListener.class);\n-\n-    private ProcessTimeCalculator processTimeCalculator;\n-\n-    @Inject\n-    public DeployAppSubProcessEndListener(ProcessTimeCalculator processTimeCalculator) {\n-        this.processTimeCalculator = processTimeCalculator;\n-    }\n \n     @Override\n     public void notify(DelegateExecution context) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MjU2OQ==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/754#discussion_r378082569", "bodyText": "Do we need to report the delay at this point in the process?", "author": "nictas", "createdAt": "2020-02-12T07:42:48Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/ErrorProcessListener.java", "diffHunk": "@@ -59,6 +64,14 @@ private void handle(FlowableEngineEvent event, DeadLetterJobEntity entity) {\n                          event.getProcessDefinitionId(), entity.getExceptionStacktrace());\r\n             eventHandler.handle(event, entity.getExceptionMessage());\r\n         }\r\n+\r\n+        logProcessTime(event.getProcessInstanceId());\r\n+\r\n+    }\r\n+\r\n+    private void logProcessTime(String processInstanceId) {\r\n+        ProcessTime processTime = processTimeCalculator.calculate(processInstanceId);\r", "originalCommit": "2908df80c57e344c444fcfbd72bf91b544e45163", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50ab3315a082b61d64f053b8d39ddd9b77b150a5", "chunk": "diff --git a/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/ErrorProcessListener.java b/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/ErrorProcessListener.java\nindex f03c02119..dfe7e2357 100644\n--- a/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/ErrorProcessListener.java\n+++ b/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/ErrorProcessListener.java\n\n@@ -65,13 +60,6 @@ public class ErrorProcessListener extends AbstractFlowableEngineEventListener {\n             eventHandler.handle(event, entity.getExceptionMessage());\n         }\n \n-        logProcessTime(event.getProcessInstanceId());\n-\n-    }\n-\n-    private void logProcessTime(String processInstanceId) {\n-        ProcessTime processTime = processTimeCalculator.calculate(processInstanceId);\n-        ProcessTimeLogger.logProcessTime(LOGGER, processTime, processInstanceId);\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MzEwMg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/754#discussion_r378083102", "bodyText": "Why not make this private final and set it through a package-private constructor?", "author": "nictas", "createdAt": "2020-02-12T07:44:26Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.text.MessageFormat;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.function.Supplier;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.flowable.engine.history.HistoricActivityInstance;\n+import org.flowable.engine.history.HistoricProcessInstance;\n+import org.immutables.value.Value.Immutable;\n+import org.slf4j.Logger;\n+\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import com.sap.cloud.lm.sl.cf.process.flowable.FlowableFacade;\n+\n+@Named\n+public class ProcessTimeCalculator {\n+\n+    private static final String CALL_ACTIVITY_TYPE = \"callActivity\";\n+\n+    private FlowableFacade flowableFacade;\n+    protected Supplier<Long> currentTimeSupplier = System::currentTimeMillis;", "originalCommit": "2908df80c57e344c444fcfbd72bf91b544e45163", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50ab3315a082b61d64f053b8d39ddd9b77b150a5", "chunk": "diff --git a/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java b/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java\nindex 3096d2a32..cdbc50f6e 100644\n--- a/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java\n+++ b/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java\n\n@@ -5,9 +5,6 @@ import java.util.Date;\n import java.util.List;\n import java.util.function.Supplier;\n \n-import javax.inject.Inject;\n-import javax.inject.Named;\n-\n import org.flowable.engine.history.HistoricActivityInstance;\n import org.flowable.engine.history.HistoricProcessInstance;\n import org.immutables.value.Value.Immutable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5ODgwMg==", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/754#discussion_r378098802", "bodyText": "Shouldn't we also filter out timers?", "author": "nictas", "createdAt": "2020-02-12T08:26:08Z", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.text.MessageFormat;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.function.Supplier;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.flowable.engine.history.HistoricActivityInstance;\n+import org.flowable.engine.history.HistoricProcessInstance;\n+import org.immutables.value.Value.Immutable;\n+import org.slf4j.Logger;\n+\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import com.sap.cloud.lm.sl.cf.process.flowable.FlowableFacade;\n+\n+@Named\n+public class ProcessTimeCalculator {\n+\n+    private static final String CALL_ACTIVITY_TYPE = \"callActivity\";\n+\n+    private FlowableFacade flowableFacade;\n+    protected Supplier<Long> currentTimeSupplier = System::currentTimeMillis;\n+\n+    @Inject\n+    public ProcessTimeCalculator(FlowableFacade flowableFacade) {\n+        this.flowableFacade = flowableFacade;\n+    }\n+\n+    public ProcessTime calculate(String processInstanceId) {\n+        HistoricProcessInstance processInstance = flowableFacade.getHistoricProcessInstance(processInstanceId);\n+        long processDuration = calculateProcessDuration(processInstance);\n+        long allProcessStepsDuration = calculateAllProcessStepsDuration(processInstanceId);\n+\n+        return ImmutableProcessTime.builder()\n+                                   .processDuration(processDuration)\n+                                   .delayBetweenSteps(processDuration - allProcessStepsDuration)\n+                                   .build();\n+    }\n+\n+    private long calculateProcessDuration(HistoricProcessInstance processInstance) {\n+        Date processInstanceStartTime = processInstance.getStartTime();\n+        Date processInstanceEndTime = determineProcessInstanceEndTime(processInstance);\n+        return processInstanceEndTime.getTime() - processInstanceStartTime.getTime();\n+    }\n+\n+    private Date determineProcessInstanceEndTime(HistoricProcessInstance processInstance) {\n+        return processInstance.getEndTime() != null ? processInstance.getEndTime() : new Date(currentTimeSupplier.get());\n+    }\n+\n+    private long calculateAllProcessStepsDuration(String processInstanceId) {\n+        List<HistoricActivityInstance> processActivities = flowableFacade.getProcessEngine()\n+                                                                         .getHistoryService()\n+                                                                         .createHistoricActivityInstanceQuery()\n+                                                                         .processInstanceId(processInstanceId)\n+                                                                         .list();\n+        return processActivities.stream()\n+                                .filter(this::isNotCallActivity)", "originalCommit": "2908df80c57e344c444fcfbd72bf91b544e45163", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50ab3315a082b61d64f053b8d39ddd9b77b150a5", "chunk": "diff --git a/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java b/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java\nindex 3096d2a32..cdbc50f6e 100644\n--- a/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java\n+++ b/com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java\n\n@@ -5,9 +5,6 @@ import java.util.Date;\n import java.util.List;\n import java.util.function.Supplier;\n \n-import javax.inject.Inject;\n-import javax.inject.Named;\n-\n import org.flowable.engine.history.HistoricActivityInstance;\n import org.flowable.engine.history.HistoricProcessInstance;\n import org.immutables.value.Value.Immutable;\n"}}, {"oid": "50ab3315a082b61d64f053b8d39ddd9b77b150a5", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/50ab3315a082b61d64f053b8d39ddd9b77b150a5", "message": "Improvements", "committedDate": "2020-02-14T09:52:15Z", "type": "forcePushed"}, {"oid": "e664b5b982e8d0161696beff2bf67cd944ea8384", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/e664b5b982e8d0161696beff2bf67cd944ea8384", "message": "Improvements", "committedDate": "2020-02-14T09:56:03Z", "type": "forcePushed"}, {"oid": "13f941520c446125e43ecf61a9c4e84ace9a09f4", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/13f941520c446125e43ecf61a9c4e84ace9a09f4", "message": "Log process time overview", "committedDate": "2020-02-14T10:38:31Z", "type": "forcePushed"}, {"oid": "42ce9f6a508b741028c3476a067cfd25c4cdf3c3", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/42ce9f6a508b741028c3476a067cfd25c4cdf3c3", "message": "Log process time overview", "committedDate": "2020-02-14T10:46:29Z", "type": "commit"}, {"oid": "42ce9f6a508b741028c3476a067cfd25c4cdf3c3", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/42ce9f6a508b741028c3476a067cfd25c4cdf3c3", "message": "Log process time overview", "committedDate": "2020-02-14T10:46:29Z", "type": "forcePushed"}]}