{"pr_number": 1407, "pr_title": "add threshold for organizing imports with the asterisk (*) wildcard character", "pr_createdAt": "2020-04-09T20:38:27Z", "pr_url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1407", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0Mzc0NQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1407#discussion_r408043745", "bodyText": "java.sources.organizeImports.starThreshold", "author": "fbricon", "createdAt": "2020-04-14T10:49:02Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java", "diffHunk": "@@ -263,6 +264,30 @@\n \t */\n \tpublic static final String MEMBER_SORT_ORDER = \"java.memberSortOrder\"; //$NON-NLS-1$\n \n+\t/**\n+\t * A named preference that specifies the number of imports added before a\n+\t * star-import declaration is used.\n+\t * <p>\n+\t * Value is of type <code>Integer</code>: positive value specifying the number\n+\t * of non star-import is used\n+\t * </p>\n+\t */\n+\tpublic static final String IMPORTS_ONDEMANDTHRESHOLD = \"java.import.ondemandthreshold\"; //$NON-NLS-1$", "originalCommit": "cb6fccf0f5d3a3ae3507a9f14f2d0f958a2a22d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI0Mzk2Nw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1407#discussion_r408243967", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-04-14T15:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0Mzc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0Mzk3Nw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1407#discussion_r408043977", "bodyText": "java.sources.organizeImports.staticStarThreshold", "author": "fbricon", "createdAt": "2020-04-14T10:49:26Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java", "diffHunk": "@@ -263,6 +264,30 @@\n \t */\n \tpublic static final String MEMBER_SORT_ORDER = \"java.memberSortOrder\"; //$NON-NLS-1$\n \n+\t/**\n+\t * A named preference that specifies the number of imports added before a\n+\t * star-import declaration is used.\n+\t * <p>\n+\t * Value is of type <code>Integer</code>: positive value specifying the number\n+\t * of non star-import is used\n+\t * </p>\n+\t */\n+\tpublic static final String IMPORTS_ONDEMANDTHRESHOLD = \"java.import.ondemandthreshold\"; //$NON-NLS-1$\n+\n+\t/**\n+\t * A named preference that specifies the number of static imports added before a\n+\t * star-import declaration is used.\n+\t * <p>\n+\t * Value is of type <code>Integer</code>: positive value specifying the number\n+\t * of non star-import is used\n+\t * </p>\n+\t */\n+\tpublic static final String IMPORTS_STATIC_ONDEMANDTHRESHOLD = \"java.import.staticondemandthreshold\"; //$NON-NLS-1$", "originalCommit": "cb6fccf0f5d3a3ae3507a9f14f2d0f958a2a22d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI0NDIwNQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1407#discussion_r408244205", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-04-14T15:49:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0Mzk3Nw=="}], "type": "inlineReview"}, {"oid": "b25da0112525bdbde54c1cd0cbd295efe9323731", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/b25da0112525bdbde54c1cd0cbd295efe9323731", "message": "organize imports with the asterisk (*) wildcard character\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-04-14T15:45:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI3NjY1OA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1407#discussion_r408276658", "bodyText": "....  ???\nThe test fails on jenkins", "author": "fbricon", "createdAt": "2020-04-14T16:34:54Z", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2616,6 +2617,58 @@ public void testStaticImports2() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testStarImports() throws Exception {\n+\t\tList<String> favorites = new ArrayList<>();\n+\t\tfavorites.add(\"java.lang.Math.*\");\n+\t\tPreferences prefs = PreferenceManager.getPrefs(null);\n+\t\tList<String> oldFavorites = Arrays.asList(prefs.getJavaCompletionFavoriteMembers());\n+\t\tint onDemandThreshold = prefs.getImportOnDemandThreshold();\n+\t\tint staticOnDemandThreshold = prefs.getStaticImportOnDemandThreshold();\n+\t\tprefs.setJavaCompletionFavoriteMembers(favorites);\n+\t\tprefs.setImportOnDemandThreshold(2);\n+\t\tprefs.setStaticImportOnDemandThreshold(2);\n+\t\ttry {\n+\t\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n+\t\t\t//@formatter:off\n+\t\t\t\"package test1;\\n\" +\n+\t\t\t\"import static java.lang.Math.sqrt;\\n\" +\n+\t\t\t\"import java.util.List;\\n\" +\n+\t\t\t\"public class B {\\n\" +\n+\t\t\t\"....List<String> list = new ArrayL\\n\" +", "originalCommit": "b25da0112525bdbde54c1cd0cbd295efe9323731", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzMzA1Ng==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1407#discussion_r408333056", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-04-14T18:04:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI3NjY1OA=="}], "type": "inlineReview"}, {"oid": "714a5471538fe7bae7b852e7739d041b46756075", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/714a5471538fe7bae7b852e7739d041b46756075", "message": "organize imports with the asterisk (*) wildcard character\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-04-14T18:03:14Z", "type": "commit"}, {"oid": "714a5471538fe7bae7b852e7739d041b46756075", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/714a5471538fe7bae7b852e7739d041b46756075", "message": "organize imports with the asterisk (*) wildcard character\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-04-14T18:03:14Z", "type": "forcePushed"}]}