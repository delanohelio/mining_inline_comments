{"pr_number": 1507, "pr_title": "Add 'Introduce Parameter...' code action", "pr_createdAt": "2020-07-13T19:17:53Z", "pr_url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507", "timeline": [{"oid": "36012a47d8726b27c949477bb3d7457ae5a8abd6", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/36012a47d8726b27c949477bb3d7457ae5a8abd6", "message": "Add 'Introduce Parameter...' code action\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-07-14T01:48:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU0NDQyNg==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456544426", "bodyText": "Why is this needed? there's no need for clients to implement a UI mechanism behind, all should be able to use this feature without extra config", "author": "fbricon", "createdAt": "2020-07-17T16:23:07Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/ClientPreferences.java", "diffHunk": "@@ -209,6 +209,10 @@ public boolean isAdvancedExtractRefactoringSupported() {\n \t\treturn Boolean.parseBoolean(extendedClientCapabilities.getOrDefault(\"advancedExtractRefactoringSupport\", \"false\").toString());\n \t}\n \n+\tpublic boolean isAdvancedIntroduceParameterRefactoringSupported() {", "originalCommit": "36012a47d8726b27c949477bb3d7457ae5a8abd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU4NzU4MQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456587581", "bodyText": "We use this property to trigger the parameter rename, after the code action has been applied.", "author": "snjeza", "createdAt": "2020-07-17T17:49:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU0NDQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NzM0MA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456657340", "bodyText": "sorry I was actually testing the wrong thing. You're right, it works as expected", "author": "fbricon", "createdAt": "2020-07-17T20:23:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU0NDQyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU0NTIwNw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456545207", "bodyText": "that seems unnecessary", "author": "fbricon", "createdAt": "2020-07-17T16:24:45Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/text/correction/RefactorProposalUtility.java", "diffHunk": "@@ -663,6 +666,26 @@ public static CUCorrectionProposal getExtractMethodProposal(CodeActionParams par\n \t\treturn null;\n \t}\n \n+\tpublic static CUCorrectionProposal getIntroduceParameterRefactoringProposals(CodeActionParams params, IInvocationContext context, ASTNode coveringNode, boolean returnAsCommand, IProblemLocationCore[] problemLocations)\n+\t\t\tthrows CoreException {\n+\t\tfinal ICompilationUnit cu = context.getCompilationUnit();\n+\t\tfinal IntroduceParameterRefactoring introduceParameterRefactoring = new IntroduceParameterRefactoring(cu, context.getSelectionOffset(), context.getSelectionLength());\n+\t\tLinkedProposalModelCore linkedProposalModel = new LinkedProposalModelCore();\n+\t\tintroduceParameterRefactoring.setLinkedProposalModel(linkedProposalModel);\n+\t\tif (introduceParameterRefactoring.checkInitialConditions(new NullProgressMonitor()).isOK()) {\n+\t\t\tintroduceParameterRefactoring.setParameterName(introduceParameterRefactoring.guessedParameterName());\n+\t\t\tString label = RefactoringCoreMessages.IntroduceParameterRefactoring_name + \"...\";\n+\t\t\tint relevance = (problemLocations != null && problemLocations.length > 0) ? IProposalRelevance.EXTRACT_CONSTANT_ERROR : IProposalRelevance.EXTRACT_CONSTANT;\n+\t\t\tif (returnAsCommand) {", "originalCommit": "36012a47d8726b27c949477bb3d7457ae5a8abd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU4NzYyOA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456587628", "bodyText": "See the previous comment and some existing examples:\n\nhttps://github.com/eclipse/eclipse.jdt.ls/blob/master/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/text/correction/RefactorProposalUtility.java#L302\nhttps://github.com/eclipse/eclipse.jdt.ls/blob/master/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/text/correction/RefactorProposalUtility.java#L440", "author": "snjeza", "createdAt": "2020-07-17T17:49:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU0NTIwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1OTM0Nw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456659347", "bodyText": "do we need to keep jdt.ui ?", "author": "fbricon", "createdAt": "2020-07-17T20:28:31Z", "path": "org.eclipse.jdt.ls.core/plugin.xml", "diffHunk": "@@ -140,4 +140,10 @@\n \t     \torder=\"2000\"\n \t     \tclass=\"org.eclipse.jdt.ls.core.internal.managers.EclipseBuildSupport\" />\n    </extension>\n+   <extension\n+         point=\"org.eclipse.ltk.core.refactoring.refactoringContributions\">\n+      <contribution\n+            class=\"org.eclipse.jdt.ls.core.internal.corext.refactoring.ChangeMethodSignatureRefactoringContribution\"\n+            id=\"org.eclipse.jdt.ui.change.method.signature\"/>", "originalCommit": "36012a47d8726b27c949477bb3d7457ae5a8abd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY4MDUyOA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456680528", "bodyText": "No, we don't. I will use org.eclipse.jdt.ls.change.method.signature", "author": "snjeza", "createdAt": "2020-07-17T21:23:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1OTM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY4NTkwMw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456685903", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-07-17T21:40:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1OTM0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2MDU0Mw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456660543", "bodyText": "or return resultingCollections.add(proposal);?", "author": "fbricon", "createdAt": "2020-07-17T20:31:29Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/corrections/RefactorProcessor.java", "diffHunk": "@@ -153,12 +153,25 @@ public RefactorProcessor(PreferenceManager preferenceManager) {\n \n \t\t\t\tgetConvertForLoopProposal(context, coveringNode, proposals);\n \t\t\t\tgetAssignToVariableProposals(context, coveringNode, locations, proposals, params);\n+\t\t\t\tgetIntroduceParameterProposals(params, context, coveringNode, locations, proposals);\n \t\t\t}\n \t\t\treturn proposals;\n \t\t}\n \t\treturn Collections.emptyList();\n \t}\n \n+\tprivate boolean getIntroduceParameterProposals(CodeActionParams params, IInvocationContext context, ASTNode coveringNode, IProblemLocationCore[] locations, ArrayList<ChangeCorrectionProposal> resultingCollections) throws CoreException {\n+\t\tif (resultingCollections == null) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tCUCorrectionProposal proposal = RefactorProposalUtility.getIntroduceParameterRefactoringProposals(params, context, coveringNode, this.preferenceManager.getClientPreferences().isAdvancedIntroduceParameterRefactoringSupported(), locations);\n+\t\tif (proposal != null) {\n+\t\t\tresultingCollections.add(proposal);", "originalCommit": "36012a47d8726b27c949477bb3d7457ae5a8abd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY4MjUxOQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456682519", "bodyText": "getIntroduceParameterProposals must return boolean.", "author": "snjeza", "createdAt": "2020-07-17T21:29:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2MDU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY5ODU0MA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456698540", "bodyText": "yes and\nboolean java.util.Collection.add(E e)\n\nEnsures that this collection contains the specified element (optional operation). Returns true if this collection changed as a result of the call.", "author": "fbricon", "createdAt": "2020-07-17T22:23:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2MDU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY5OTUxNA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456699514", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-07-17T22:27:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2MDU0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2MTc4NA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456661784", "bodyText": "unnecessary change. only declare the variable when you need it. here is too early.", "author": "fbricon", "createdAt": "2020-07-17T20:34:36Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java", "diffHunk": "@@ -58,6 +61,7 @@ public static RefactorWorkspaceEdit getEditsForRefactor(GetRefactorEditParams pa\n \t\tIProblemLocationCore[] locations = CodeActionHandler.getProblemLocationCores(unit, params.context.getContext().getDiagnostics());\n \t\tboolean problemsAtLocation = locations.length != 0;\n \t\tString positionKey = DEFAULT_POSITION_KEY;\n+\t\tCommand additionalCommand = null;", "originalCommit": "36012a47d8726b27c949477bb3d7457ae5a8abd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY4NTc3NA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1507#discussion_r456685774", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-07-17T21:40:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2MTc4NA=="}], "type": "inlineReview"}, {"oid": "f312c4e12c807dbe54c683e7062bef92bfc7964b", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/f312c4e12c807dbe54c683e7062bef92bfc7964b", "message": "Add 'Introduce Parameter...' code action\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-07-17T21:39:02Z", "type": "forcePushed"}, {"oid": "4cc055da961bb5026d22371b01180dc6b25e412f", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/4cc055da961bb5026d22371b01180dc6b25e412f", "message": "Add 'Introduce Parameter...' code action\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-07-17T21:42:12Z", "type": "forcePushed"}, {"oid": "0faf44c67f107b5cade08080f8c802a1e76649cd", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/0faf44c67f107b5cade08080f8c802a1e76649cd", "message": "Add 'Introduce Parameter...' code action\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-07-17T22:26:44Z", "type": "commit"}, {"oid": "0faf44c67f107b5cade08080f8c802a1e76649cd", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/0faf44c67f107b5cade08080f8c802a1e76649cd", "message": "Add 'Introduce Parameter...' code action\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-07-17T22:26:44Z", "type": "forcePushed"}]}