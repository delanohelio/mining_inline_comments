{"pr_number": 1490, "pr_title": "jdt.ls should store gradle wrapper checksums at build time", "pr_createdAt": "2020-06-23T16:28:34Z", "pr_url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490", "timeline": [{"oid": "9623dacb62b6208c011e4021a2584ea44531bf92", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/9623dacb62b6208c011e4021a2584ea44531bf92", "message": "jdt.ls should store gradle wrapper checksums at build time\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-26T02:02:48Z", "type": "forcePushed"}, {"oid": "d0f42c0b730cccb6cb29130589d7747a167da0d3", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/d0f42c0b730cccb6cb29130589d7747a167da0d3", "message": "jdt.ls should store gradle wrapper checksums at build time\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-26T02:20:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2NTYzMA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r446165630", "bodyText": "<plugin>\n\t\t\t\t<groupId>org.codehaus.gmaven</groupId>\n\t\t\t\t<artifactId>groovy-maven-plugin</artifactId>\n\t\t\t\t<version>2.1.1</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<?m2e execute onConfiguration?>\n\t\t\t\t\t\t<phase>generate-resources</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>execute</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<source>\n\t\t\t\t\t\t\t\timport groovy.json.JsonSlurper\n\t\t\t\t\t\t\t\timport groovy.json.JsonOutput\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tdef versionUrl = new URL(\"https://services.gradle.org/versions/all\")\n\t\t\t\t\t\t\t\tdef versionStr = versionUrl.text;\n\t\t\t\t\t\t\t\tdef versionsFile = new File(\"${basedir}/gradle/checksums/versions.json\")\n\t\t\t\t\t\t\t\tversionsFile.parentFile.mkdirs() //just in case\n\t\t\t\t\t\t\t\tversionsFile.write(versionStr)\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tdef versions = new JsonSlurper().parseText(versionStr);\n\t\t\t\t\t\t\t\tclass Checksum { String wrapperChecksumUrl; String sha256 }\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tdef checksums = []\n\t\t\t\t\t\t\t\tversions.each {\n\t\t\t\t\t\t\t\t\tif (it.wrapperChecksumUrl) {\n\t\t\t\t\t\t\t\t\t\tdef sha256url = new URL(it.wrapperChecksumUrl)\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tdef sha256 = sha256url.text\n\t\t\t\t\t\t\t\t\t\t\tdef checksum = new Checksum(wrapperChecksumUrl: it.wrapperChecksumUrl, sha256: sha256);\n\t\t\t\t\t\t\t\t\t\t\tchecksums.add(checksum)\n\t\t\t\t\t\t\t\t\t\t} catch(Exception e) {\n\t\t\t\t\t\t\t\t\t\t\t// ignore \n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdef json = JsonOutput.toJson(checksums)\n\t\t\t\t\t\t\t\tdef checksumsFile = new File(\"${basedir}/gradle/checksums/checksums.json\")\n\t\t\t\t\t\t\t\tchecksumsFile.write(JsonOutput.prettyPrint(json))\n\t\t\t\t\t\t\t</source>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>", "author": "fbricon", "createdAt": "2020-06-26T12:54:25Z", "path": "org.eclipse.jdt.ls.core/pom.xml", "diffHunk": "@@ -30,6 +30,47 @@\n \t\t\t\t\t</artifactItems>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.codehaus.gmaven</groupId>\n+\t\t\t\t<artifactId>groovy-maven-plugin</artifactId>\n+\t\t\t\t<version>2.1.1</version>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<phase>generate-resources</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>execute</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t<source>\n+\t\t\t\t\t\t\t\timport groovy.json.JsonSlurper;\n+\t\t\t\t\t\t\t\timport groovy.json.JsonOutput;\n+\t\t\t\t\t\t\t\tURL versionUrl = new URL('https://services.gradle.org/versions/all');\n+\t\t\t\t\t\t\t\tString versionStr = versionUrl.text;\n+\t\t\t\t\t\t\t\tFile outFile = new File(\"${basedir}/gradle/checksums/versions.json\");\n+\t\t\t\t\t\t\t\toutFile.write(versionStr);\n+\t\t\t\t\t\t\t\tList versions = new JsonSlurper().parseText(versionStr);\n+\t\t\t\t\t\t\t\tclass Checksum { String wrapperChecksumUrl; String sha256 };\n+\t\t\t\t\t\t\t\tList checksums = [];\n+\t\t\t\t\t\t\t\tfor (version in versions) {\n+\t\t\t\t\t\t\t\t\tif (version.wrapperChecksumUrl != null) {\n+\t\t\t\t\t\t\t\t\t\tdef sha256url = new URL(version.wrapperChecksumUrl);\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tdef sha256 = sha256url.text;\n+\t\t\t\t\t\t\t\t\t\t\tdef checksum = new Checksum(wrapperChecksumUrl: version.wrapperChecksumUrl, sha256: sha256);\n+\t\t\t\t\t\t\t\t\t\t\tchecksums.add(checksum);\n+\t\t\t\t\t\t\t\t\t\t} catch(Exception e) {\n+\t\t\t\t\t\t\t\t\t\t\t// ignore \n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\toutFile = new File(\"${basedir}/gradle/checksums/checksums.json\");\n+\t\t\t\t\t\t\t\tdef json = JsonOutput.toJson(checksums);\n+\t\t\t\t\t\t\t\toutFile.write(JsonOutput.prettyPrint(json));\n+\t\t\t\t\t\t\t</source>\n+\t\t\t\t\t\t</configuration>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>", "originalCommit": "d0f42c0b730cccb6cb29130589d7747a167da0d3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI4ODA2MA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r446288060", "bodyText": "Done.", "author": "snjeza", "createdAt": "2020-06-26T16:32:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2NTYzMA=="}], "type": "inlineReview"}, {"oid": "7c037817c3fa2bd0edb42814b5710d7413f3cb6c", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/7c037817c3fa2bd0edb42814b5710d7413f3cb6c", "message": "jdt.ls should store gradle wrapper checksums at build time\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-06-26T16:30:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk1MzIwNQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r446953205", "bodyText": "always true since that's what you're iterating over", "author": "fbricon", "createdAt": "2020-06-29T13:02:26Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/internal/gradle/checksums/WrapperValidator.java", "diffHunk": "@@ -114,6 +130,9 @@ public String apply(Map<String, String> input) {\n \t\t\t\t\tFile cacheDir = getSha256CacheFile();\n \t\t\t\t\tfor (String wrapperChecksumUrl : wrapperChecksumUrls) {\n \t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tif (wrapperChecksumUrls.contains(wrapperChecksumUrl)) {", "originalCommit": "7c037817c3fa2bd0edb42814b5710d7413f3cb6c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxMDM4Mw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r448310383", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-07-01T11:52:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk1MzIwNQ=="}], "type": "inlineReview"}, {"oid": "842e1acf3c41846d09b31c3340358638bd904598", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/842e1acf3c41846d09b31c3340358638bd904598", "message": "jdt.ls should store gradle wrapper checksums at build time\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-07-01T11:51:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxNjYwOQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r448316609", "bodyText": "println e.message", "author": "fbricon", "createdAt": "2020-07-01T12:05:22Z", "path": "org.eclipse.jdt.ls.core/pom.xml", "diffHunk": "@@ -30,6 +30,52 @@\n \t\t\t\t\t</artifactItems>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.codehaus.gmaven</groupId>\n+\t\t\t\t<artifactId>groovy-maven-plugin</artifactId>\n+\t\t\t\t<version>2.1.1</version>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<?m2e execute onConfiguration?>\n+\t\t\t\t\t\t<phase>generate-resources</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>execute</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t<source>\n+\t\t\t\t\t\t\t\timport groovy.json.JsonSlurper\n+\t\t\t\t\t\t\t\timport groovy.json.JsonOutput\n+\n+\t\t\t\t\t\t\t\tdef versionUrl = new URL(\"https://services.gradle.org/versions/all\")\n+\t\t\t\t\t\t\t\tdef versionStr = versionUrl.text;\n+\t\t\t\t\t\t\t\tdef versionsFile = new File(\"${basedir}/gradle/checksums/versions.json\")\n+\t\t\t\t\t\t\t\tversionsFile.parentFile.mkdirs() //just in case\n+\t\t\t\t\t\t\t\tversionsFile.write(versionStr)\n+\n+\t\t\t\t\t\t\t\tdef versions = new JsonSlurper().parseText(versionStr);\n+\t\t\t\t\t\t\t\tclass Checksum { String wrapperChecksumUrl; String sha256 }\n+\n+\t\t\t\t\t\t\t\tdef checksums = []\n+\t\t\t\t\t\t\t\tversions.each {\n+\t\t\t\t\t\t\t\t\tif (it.wrapperChecksumUrl) {\n+\t\t\t\t\t\t\t\t\t\tdef sha256url = new URL(it.wrapperChecksumUrl)\n+\t\t\t\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\t\t\t\tdef sha256 = sha256url.text\n+\t\t\t\t\t\t\t\t\t\t\tdef checksum = new Checksum(wrapperChecksumUrl: it.wrapperChecksumUrl, sha256: sha256);\n+\t\t\t\t\t\t\t\t\t\t\tchecksums.add(checksum)\n+\t\t\t\t\t\t\t\t\t\t} catch(Exception e) {\n+\t\t\t\t\t\t\t\t\t\t\t// ignore ", "originalCommit": "842e1acf3c41846d09b31c3340358638bd904598", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMjE4Nw==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r448322187", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-07-01T12:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxNjYwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxNzUwMg==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r448317502", "bodyText": "loadInternalChecksums", "author": "fbricon", "createdAt": "2020-07-01T12:07:14Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/internal/gradle/checksums/WrapperValidator.java", "diffHunk": "@@ -159,6 +180,55 @@ public String apply(Map<String, String> input) {\n \t\t}\n \t}\n \n+\tprivate void getInternalChecksums() {", "originalCommit": "842e1acf3c41846d09b31c3340358638bd904598", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMjMwOA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r448322308", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-07-01T12:16:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxNzUwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxNzgzOQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r448317839", "bodyText": "updateGradleVersionsFile", "author": "fbricon", "createdAt": "2020-07-01T12:07:56Z", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/internal/gradle/checksums/WrapperValidator.java", "diffHunk": "@@ -159,6 +180,55 @@ public String apply(Map<String, String> input) {\n \t\t}\n \t}\n \n+\tprivate void getInternalChecksums() {\n+\t\tBundle bundle = Platform.getBundle(IConstants.PLUGIN_ID);\n+\t\tURL url = FileLocator.find(bundle, new org.eclipse.core.runtime.Path(GRADLE_CHECKSUMS));\n+\t\tif (url != null) {\n+\t\t\ttry (InputStream inputStream = url.openStream(); InputStreamReader inputStreamReader = new InputStreamReader(inputStream); Reader reader = new BufferedReader(inputStreamReader)) {\n+\t\t\t\tJsonElement jsonElement = new JsonParser().parse(reader);\n+\t\t\t\tif (jsonElement instanceof JsonArray) {\n+\t\t\t\t\tJsonArray array = (JsonArray) jsonElement;\n+\t\t\t\t\tfor (JsonElement json : array) {\n+\t\t\t\t\t\tString sha256 = json.getAsJsonObject().get(\"sha256\").getAsString();\n+\t\t\t\t\t\tString wrapperChecksumUrl = json.getAsJsonObject().get(\"wrapperChecksumUrl\").getAsString();\n+\t\t\t\t\t\tif (sha256 != null) {\n+\t\t\t\t\t\t\tallowed.add(sha256);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tif (wrapperChecksumUrl != null) {\n+\t\t\t\t\t\t\twrapperChecksumUrls.add(wrapperChecksumUrl);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tJavaLanguageServerPlugin.logException(e.getMessage(), e);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate void updateVersions() {", "originalCommit": "842e1acf3c41846d09b31c3340358638bd904598", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMjM5OQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r448322399", "bodyText": "Fixed.", "author": "snjeza", "createdAt": "2020-07-01T12:17:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMxNzgzOQ=="}], "type": "inlineReview"}, {"oid": "44c88a7e02edb306940a6694646fa6c905b299f9", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/44c88a7e02edb306940a6694646fa6c905b299f9", "message": "jdt.ls should store gradle wrapper checksums at build time\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-07-01T12:12:52Z", "type": "forcePushed"}, {"oid": "fc4f608a0a1bb6d5ef969d8fe572ce736f84fb10", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/fc4f608a0a1bb6d5ef969d8fe572ce736f84fb10", "message": "jdt.ls should store gradle wrapper checksums at build time\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-07-01T12:16:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzMDMzMQ==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r448330331", "bodyText": "println \"Fetching ${it.wrapperChecksumUrl}\"", "author": "fbricon", "createdAt": "2020-07-01T12:32:02Z", "path": "org.eclipse.jdt.ls.core/pom.xml", "diffHunk": "@@ -30,6 +30,52 @@\n \t\t\t\t\t</artifactItems>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.codehaus.gmaven</groupId>\n+\t\t\t\t<artifactId>groovy-maven-plugin</artifactId>\n+\t\t\t\t<version>2.1.1</version>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<?m2e execute onConfiguration?>\n+\t\t\t\t\t\t<phase>generate-resources</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>execute</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t<source>\n+\t\t\t\t\t\t\t\timport groovy.json.JsonSlurper\n+\t\t\t\t\t\t\t\timport groovy.json.JsonOutput\n+\n+\t\t\t\t\t\t\t\tdef versionUrl = new URL(\"https://services.gradle.org/versions/all\")\n+\t\t\t\t\t\t\t\tdef versionStr = versionUrl.text;\n+\t\t\t\t\t\t\t\tdef versionsFile = new File(\"${basedir}/gradle/checksums/versions.json\")\n+\t\t\t\t\t\t\t\tversionsFile.parentFile.mkdirs() //just in case\n+\t\t\t\t\t\t\t\tversionsFile.write(versionStr)\n+\n+\t\t\t\t\t\t\t\tdef versions = new JsonSlurper().parseText(versionStr);\n+\t\t\t\t\t\t\t\tclass Checksum { String wrapperChecksumUrl; String sha256 }\n+\n+\t\t\t\t\t\t\t\tdef checksums = []\n+\t\t\t\t\t\t\t\tversions.each {\n+\t\t\t\t\t\t\t\t\tif (it.wrapperChecksumUrl) {\n+\t\t\t\t\t\t\t\t\t\tdef sha256url = new URL(it.wrapperChecksumUrl)\n+\t\t\t\t\t\t\t\t\t\ttry {", "originalCommit": "fc4f608a0a1bb6d5ef969d8fe572ce736f84fb10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzNTg0OA==", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1490#discussion_r448335848", "bodyText": "Done.", "author": "snjeza", "createdAt": "2020-07-01T12:42:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzMDMzMQ=="}], "type": "inlineReview"}, {"oid": "34d2213765c8586fb46986e44130aa94b8aa9ce2", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/34d2213765c8586fb46986e44130aa94b8aa9ce2", "message": "jdt.ls should store gradle wrapper checksums at build time\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-07-01T12:41:46Z", "type": "commit"}, {"oid": "34d2213765c8586fb46986e44130aa94b8aa9ce2", "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/34d2213765c8586fb46986e44130aa94b8aa9ce2", "message": "jdt.ls should store gradle wrapper checksums at build time\n\nSigned-off-by: Snjezana Peco <snjezana.peco@redhat.com>", "committedDate": "2020-07-01T12:41:46Z", "type": "forcePushed"}]}