{"pr_number": 787, "pr_title": "Fix tests in apache/zooscalability and rebase from apache/master", "pr_createdAt": "2020-02-20T21:36:38Z", "pr_url": "https://github.com/apache/helix/pull/787", "timeline": [{"oid": "cc5b3579103db3c8e48b6e6a08707b9f394d646e", "url": "https://github.com/apache/helix/commit/cc5b3579103db3c8e48b6e6a08707b9f394d646e", "message": "Fix the flaky test (#749)\n\nFix the unstable TestZkWatch\r\n\r\nThe root cause of the instability is due to the incorrect condition notify time: it should notify other threads after zkClient finishes the unsubscribing the listener", "committedDate": "2020-02-20T21:31:33Z", "type": "commit"}, {"oid": "21193d3be5d1492cb8d765db2e5ccdc9548ed197", "url": "https://github.com/apache/helix/commit/21193d3be5d1492cb8d765db2e5ccdc9548ed197", "message": "Fix ConcurrentModification exception in Workflow Garbage Collection (#741)\n\nIn workflow Garbage collection, there is possibility that we encounter\r\nConcurrentMod exception while looping through the workflow contexts.\r\nThis commit fixes this issue by adding a try-catch.", "committedDate": "2020-02-20T21:31:33Z", "type": "commit"}, {"oid": "5a8e83f4511b14537e31d483b43d4443d8ebef74", "url": "https://github.com/apache/helix/commit/5a8e83f4511b14537e31d483b43d4443d8ebef74", "message": "Fix failing tests for metadata store directory service", "committedDate": "2020-02-20T21:31:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3NjU0NA==", "url": "https://github.com/apache/helix/pull/787#discussion_r382276544", "bodyText": "If we are catching concurrent modification exception, I think it is better to just catch this exception, instead of the general Exception.", "author": "huizhilu", "createdAt": "2020-02-20T21:48:45Z", "path": "helix-core/src/main/java/org/apache/helix/task/TaskUtil.java", "diffHunk": "@@ -1043,23 +1043,40 @@ public static void purgeExpiredJobs(String workflow, WorkflowConfig workflowConf\n    * @param dataProvider\n    * @param manager\n    */\n-  public static void workflowGarbageCollection(WorkflowControllerDataProvider dataProvider,\n+  public static void workflowGarbageCollection(final WorkflowControllerDataProvider dataProvider,\n       final HelixManager manager) {\n     // Garbage collections for conditions where workflow context exists but config is missing.\n-    Map<String, ZNRecord> contexts = dataProvider.getContexts();\n-    HelixDataAccessor accessor = manager.getHelixDataAccessor();\n-    HelixPropertyStore<ZNRecord> propertyStore = manager.getHelixPropertyStore();\n \n+    Set<String> existingContexts;\n+    /*\n+     * Here try-catch is used to avoid concurrent modification exception while doing deep copy.\n+     * Map.keySet() can produce concurrent modification exception.\n+     * Reason: If the map is modified while an iteration over the set is in progress, concurrent\n+     * modification exception will be thrown.\n+     */\n+    try {\n+      existingContexts = new HashSet<>(dataProvider.getContexts().keySet());\n+    } catch (Exception e) {", "originalCommit": "5a8e83f4511b14537e31d483b43d4443d8ebef74", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3ODA5NA==", "url": "https://github.com/apache/helix/pull/787#discussion_r382278094", "bodyText": "Please create a separate issue tracking that item. In my opinion, catching ConcurrentModificationException is awkward and I personally prefer catching a general Exception.", "author": "narendly", "createdAt": "2020-02-20T21:52:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3NjU0NA=="}], "type": "inlineReview"}]}