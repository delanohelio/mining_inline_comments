{"pr_number": 2015, "pr_title": "Repeatable directives support", "pr_createdAt": "2020-08-29T07:29:57Z", "pr_url": "https://github.com/graphql-java/graphql-java/pull/2015", "timeline": [{"oid": "7a5f652af3fecc87c61c10e25dc895f5fc6ef081", "url": "https://github.com/graphql-java/graphql-java/commit/7a5f652af3fecc87c61c10e25dc895f5fc6ef081", "message": "Repeatable directives support\n\nStill much to do", "committedDate": "2020-08-29T07:25:30Z", "type": "commit"}, {"oid": "1a524c39e32efb90a77a3887266982f3f4efc7e3", "url": "https://github.com/graphql-java/graphql-java/commit/1a524c39e32efb90a77a3887266982f3f4efc7e3", "message": "Repeatable directives support\n\nIntrospection and better grammar plus GraphlXX runtime types", "committedDate": "2020-08-29T08:38:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYyNjgyOA==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r479626828", "bodyText": "Should never had had this repeated code but rather inherit it", "author": "bbakerman", "createdAt": "2020-08-29T08:44:08Z", "path": "src/main/java/graphql/language/InlineFragment.java", "diffHunk": "@@ -68,14 +67,6 @@ public TypeName getTypeCondition() {\n         return new ArrayList<>(directives);\n     }\n \n-    public Map<String, Directive> getDirectivesByName() {\n-        return directivesByName(directives);\n-    }\n-\n-    public Directive getDirective(String directiveName) {\n-        return getDirectivesByName().get(directiveName);\n-    }\n-", "originalCommit": "1a524c39e32efb90a77a3887266982f3f4efc7e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYyNjg4Ng==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r479626886", "bodyText": "Should never had had this code", "author": "bbakerman", "createdAt": "2020-08-29T08:44:54Z", "path": "src/main/java/graphql/schema/GraphQLEnumValueDefinition.java", "diffHunk": "@@ -119,16 +119,6 @@ public String getDeprecationReason() {\n         return new ArrayList<>(directives);\n     }\n \n-    @Override\n-    public Map<String, GraphQLDirective> getDirectivesByName() {\n-        return DirectivesUtil.directivesByName(directives);\n-    }\n-\n-    @Override\n-    public GraphQLDirective getDirective(String directiveName) {\n-        return getDirectivesByName().get(directiveName);\n-    }\n-", "originalCommit": "1a524c39e32efb90a77a3887266982f3f4efc7e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "466de8a7896ecb52b03e02f30dd544314982ad50", "url": "https://github.com/graphql-java/graphql-java/commit/466de8a7896ecb52b03e02f30dd544314982ad50", "message": "fixed test", "committedDate": "2020-08-29T08:49:06Z", "type": "commit"}, {"oid": "d49f54f097a4951e9e44cab1b9a9c9d44fd94ab5", "url": "https://github.com/graphql-java/graphql-java/commit/d49f54f097a4951e9e44cab1b9a9c9d44fd94ab5", "message": "Better documentation and more tests", "committedDate": "2020-08-30T07:04:17Z", "type": "commit"}, {"oid": "b11d16ff0f26aa1e7c3683f9724c6654c2b637ab", "url": "https://github.com/graphql-java/graphql-java/commit/b11d16ff0f26aa1e7c3683f9724c6654c2b637ab", "message": "Now has runtime types included", "committedDate": "2020-08-30T10:19:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgxNTkxOA==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r479815918", "bodyText": "This method pattern is repeated in GraphqlDirectiveContainer as well - same names - same pattern - different types", "author": "bbakerman", "createdAt": "2020-08-30T21:09:15Z", "path": "src/main/java/graphql/language/DirectivesContainer.java", "diffHunk": "@@ -6,34 +6,67 @@\n import java.util.List;\n import java.util.Map;\n \n-import static graphql.language.NodeUtil.directivesByName;\n+import static graphql.language.NodeUtil.allDirectivesByName;\n+import static graphql.language.NodeUtil.nonRepeatableDirectivesByName;\n+import static graphql.language.NodeUtil.nonRepeatedDirectiveByNameWithAssert;\n+import static java.util.Collections.emptyList;\n \n /**\n- * Represents a language node that can contain Directives.\n+ * Represents a language node that can contain Directives.  Directives can be repeatable and (by default) non repeatable.\n+ * <p>\n+ * There are access methods here that get the two different types.\n+ *\n+ * @see graphql.language.DirectiveDefinition\n+ * @see DirectiveDefinition#isRepeatable()\n  */\n @PublicApi\n public interface DirectivesContainer<T extends DirectivesContainer> extends Node<T> {", "originalCommit": "b11d16ff0f26aa1e7c3683f9724c6654c2b637ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc337e6755c8060eba207e86eda7213b4fe16045", "url": "https://github.com/graphql-java/graphql-java/commit/fc337e6755c8060eba207e86eda7213b4fe16045", "message": "Fixing up tests", "committedDate": "2020-08-31T01:33:52Z", "type": "commit"}, {"oid": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc", "url": "https://github.com/graphql-java/graphql-java/commit/c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc", "message": "SchemaPrinter and AstPrinter support", "committedDate": "2020-08-31T23:07:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk0MDM2Mw==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r480940363", "bodyText": "it is false by default :-)", "author": "andimarek", "createdAt": "2020-09-01T07:54:12Z", "path": "src/main/java/graphql/language/DirectiveDefinition.java", "diffHunk": "@@ -140,6 +153,7 @@ public DirectiveDefinition transform(Consumer<Builder> builderConsumer) {\n         private SourceLocation sourceLocation;\n         private List<Comment> comments = new ArrayList<>();\n         private String name;\n+        private boolean repeatable = false;", "originalCommit": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2Mjg2MQ==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r484162861", "bodyText": "just making it clear! I know java defaults but hey - a readder will see this and know as well", "author": "bbakerman", "createdAt": "2020-09-07T03:15:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk0MDM2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxNTEwMA==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r482215100", "bodyText": "nonRepeatableDirectivesByName will travel directives three times. The code below seem to be faster:\n    public static Map<String, GraphQLDirective> nonRepeatableDirectivesByName(List<GraphQLDirective> directives) {\n        // filter the repeatable directives\n        List<GraphQLDirective> singletonDirectives = directives.stream()\n                .filter(d -> !d.isRepeatable()).collect(Collectors.toList());\n        \n        return FpKit.getByName(singletonDirectives, GraphQLDirective::getName);\n    }", "author": "dugenkui03", "createdAt": "2020-09-02T16:47:10Z", "path": "src/main/java/graphql/DirectivesUtil.java", "diffHunk": "@@ -7,20 +7,94 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import static graphql.Assert.assertNotNull;\n+import static java.util.Collections.emptyList;\n \n @Internal\n public class DirectivesUtil {\n \n-    public static Map<String, GraphQLDirective> directivesByName(List<GraphQLDirective> directiveList) {\n-        return FpKit.getByName(directiveList, GraphQLDirective::getName, FpKit.mergeFirst());\n+\n+    public static Map<String, GraphQLDirective> nonRepeatableDirectivesByName(List<GraphQLDirective> directives) {", "originalCommit": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIyNTkzOQ==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r482225939", "bodyText": "Do you think this is an more efficient way to implement enforceAdd:\n    public static List<GraphQLDirective> enforceAdd(List<GraphQLDirective> targetList, GraphQLDirective newDirective) {\n        assertNotNull(targetList, () -> \"directive list can't be null\");\n        assertNotNull(newDirective, () -> \"directive can't be null\");\n\n        // check whether the newDirective is repeatable in advance, to avoid needless operations\n        if(newDirective.isNonRepeatable()){\n            Map<String, List<GraphQLDirective>> map = allDirectivesByName(targetList);\n            assertNonRepeatable(newDirective, map);\n        }\n        targetList.add(newDirective);\n        return targetList;\n    }", "author": "dugenkui03", "createdAt": "2020-09-02T17:04:07Z", "path": "src/main/java/graphql/DirectivesUtil.java", "diffHunk": "@@ -7,20 +7,94 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import static graphql.Assert.assertNotNull;\n+import static java.util.Collections.emptyList;\n \n @Internal\n public class DirectivesUtil {\n \n-    public static Map<String, GraphQLDirective> directivesByName(List<GraphQLDirective> directiveList) {\n-        return FpKit.getByName(directiveList, GraphQLDirective::getName, FpKit.mergeFirst());\n+\n+    public static Map<String, GraphQLDirective> nonRepeatableDirectivesByName(List<GraphQLDirective> directives) {\n+        Map<String, List<GraphQLDirective>> map = allDirectivesByName(directives);\n+        List<GraphQLDirective> singletonDirectives = map.entrySet().stream()\n+                // only those that have 1 non repeated entry\n+                .filter(e -> e.getKey() != null && isAllNonRepeatable(e.getValue()))\n+                .flatMap(e -> e.getValue().stream()).collect(Collectors.toList());\n+        return FpKit.getByName(singletonDirectives, GraphQLDirective::getName);\n+    }\n+\n+    public static Map<String, List<GraphQLDirective>> allDirectivesByName(List<GraphQLDirective> directives) {\n+        return FpKit.groupingBy(directives, GraphQLDirective::getName);\n+    }\n+\n+    public static GraphQLDirective nonRepeatedDirectiveByNameWithAssert(Map<String, List<GraphQLDirective>> directives, String directiveName) {\n+        List<GraphQLDirective> directiveList = directives.get(directiveName);\n+        if (directiveList == null || directiveList.isEmpty()) {\n+            return null;\n+        }\n+        Assert.assertTrue(isAllNonRepeatable(directiveList), () -> String.format(\"'%s' is a repeatable directive and you have used a non repeatable access method\", directiveName));\n+        return directiveList.get(0);\n     }\n \n-    public static Optional<GraphQLArgument> directiveWithArg(List<GraphQLDirective> directiveList, String directiveName, String argumentName) {\n-        GraphQLDirective directive = directivesByName(directiveList).get(directiveName);\n+    public static Optional<GraphQLArgument> directiveWithArg(List<GraphQLDirective> directives, String directiveName, String argumentName) {\n+        GraphQLDirective directive = nonRepeatableDirectivesByName(directives).get(directiveName);\n         GraphQLArgument argument = null;\n         if (directive != null) {\n             argument = directive.getArgument(argumentName);\n         }\n         return Optional.ofNullable(argument);\n     }\n+\n+    public static boolean isAllNonRepeatable(List<GraphQLDirective> directives) {\n+        if (directives == null || directives.isEmpty()) {\n+            return false;\n+        }\n+        for (GraphQLDirective graphQLDirective : directives) {\n+            if (graphQLDirective.isRepeatable()) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    public static List<GraphQLDirective> enforceAdd(List<GraphQLDirective> targetList, GraphQLDirective newDirective) {", "originalCommit": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI0NzQwNQ==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r482247405", "bodyText": "repeatable directive may used in Field one times, size() == 1 is not a prefect way to determain wether a directive is repeatable.", "author": "dugenkui03", "createdAt": "2020-09-02T17:34:30Z", "path": "src/main/java/graphql/language/NodeUtil.java", "diffHunk": "@@ -28,9 +30,26 @@ public static boolean isEqualTo(String thisStr, String thatStr) {\n         return true;\n     }\n \n+    public static Map<String, List<Directive>> allDirectivesByName(List<Directive> directives) {\n+        return FpKit.groupingBy(directives, Directive::getName);\n+    }\n+\n+    public static Map<String, Directive> nonRepeatableDirectivesByName(List<Directive> directives) {\n+        Map<String, List<Directive>> map = allDirectivesByName(directives);\n+        List<Directive> singletonDirectives = map.entrySet().stream()\n+                // only those that have 1 non repeated entry\n+                .filter(e -> e.getKey() != null && e.getValue().size() == 1)", "originalCommit": "c9a9d07c7f22da3aa6ea1b1c6db2c907959a76fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1NzYzNQ==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516957635", "bodyText": "@bbakerman so this method return only the directives used once?", "author": "andimarek", "createdAt": "2020-11-03T21:11:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI0NzQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk3MzMwOQ==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516973309", "bodyText": "I have killed this method and its one usage", "author": "bbakerman", "createdAt": "2020-11-03T21:44:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI0NzQwNQ=="}], "type": "inlineReview"}, {"oid": "b73c100f26b1cbee9754cb070254a89221800557", "url": "https://github.com/graphql-java/graphql-java/commit/b73c100f26b1cbee9754cb070254a89221800557", "message": "Merge remote-tracking branch 'origin/master' into repeatable-directives-support\n\n# Conflicts:\n#\tsrc/main/java/graphql/DirectivesUtil.java\n#\tsrc/main/java/graphql/execution/ConditionalNodes.java\n#\tsrc/main/java/graphql/language/DirectiveDefinition.java\n#\tsrc/main/java/graphql/language/DirectivesContainer.java\n#\tsrc/main/java/graphql/language/InlineFragment.java\n#\tsrc/main/java/graphql/language/NodeUtil.java\n#\tsrc/main/java/graphql/language/SchemaDefinition.java\n#\tsrc/main/java/graphql/schema/GraphQLDirectiveContainer.java\n#\tsrc/main/java/graphql/schema/GraphQLEnumValueDefinition.java", "committedDate": "2020-09-14T03:04:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE2OTEzNg==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r509169136", "bodyText": "This is some some rubbish left over testing - this is NOT needed", "author": "bbakerman", "createdAt": "2020-10-21T10:31:51Z", "path": "build.gradle", "diffHunk": "@@ -75,6 +76,8 @@ dependencies {\n \n     testCompile 'org.openjdk.jmh:jmh-core:1.21'\n     testCompile 'org.openjdk.jmh:jmh-generator-annprocess:1.21'\n+\n+    testCompile 'is.tagomor.woothee:woothee-java:1.11.0'", "originalCommit": "b73c100f26b1cbee9754cb070254a89221800557", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5adf520e8f421018d5163d561b9da9270c2e878c", "url": "https://github.com/graphql-java/graphql-java/commit/5adf520e8f421018d5163d561b9da9270c2e878c", "message": "Merge remote-tracking branch 'origin/master' into repeatable-directives-support\n\n# Conflicts:\n#\tbuild.gradle\n#\tsrc/main/java/graphql/schema/idl/SchemaGenerator.java\n#\tsrc/main/java/graphql/schema/idl/SchemaGeneratorHelper.java\n\nnot currently working", "committedDate": "2020-10-21T21:13:03Z", "type": "commit"}, {"oid": "f81fe14a5e5a70fa05f54ac5e433d7258077be97", "url": "https://github.com/graphql-java/graphql-java/commit/f81fe14a5e5a70fa05f54ac5e433d7258077be97", "message": "Fixing builds after bad merge", "committedDate": "2020-10-25T04:04:31Z", "type": "commit"}, {"oid": "e9deb31fae7cd576ee112befd991050fc7f45438", "url": "https://github.com/graphql-java/graphql-java/commit/e9deb31fae7cd576ee112befd991050fc7f45438", "message": "PR feedback", "committedDate": "2020-10-25T04:37:17Z", "type": "commit"}, {"oid": "af3d66783b78e03a059b57aaf88171852b6d9739", "url": "https://github.com/graphql-java/graphql-java/commit/af3d66783b78e03a059b57aaf88171852b6d9739", "message": "Removed the getDirectiveByName on AST area", "committedDate": "2020-11-03T21:01:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1NTc0NQ==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516955745", "bodyText": "what is this fix here? did we have this wrong before?", "author": "andimarek", "createdAt": "2020-11-03T21:07:10Z", "path": "src/main/java/graphql/introspection/Introspection.java", "diffHunk": "@@ -430,13 +430,17 @@ private static String print(Object value, GraphQLInputType type) {\n             .name(\"__Directive\")\n             .field(newFieldDefinition()\n                     .name(\"name\")\n-                    .type(GraphQLString))\n+                    .description(\"The __Directive type represents a Directive that a server supports.\")\n+                    .type(nonNull(GraphQLString)))\n             .field(newFieldDefinition()\n                     .name(\"description\")\n                     .type(GraphQLString))\n+            .field(newFieldDefinition()\n+                    .name(\"isRepeatable\")\n+                    .type(nonNull(GraphQLBoolean)))\n             .field(newFieldDefinition()\n                     .name(\"locations\")\n-                    .type(list(nonNull(__DirectiveLocation))))\n+                    .type(nonNull(list(__DirectiveLocation))))", "originalCommit": "af3d66783b78e03a059b57aaf88171852b6d9739", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2NTI3Nw==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516965277", "bodyText": "let me check - this came from other code that I started this branch from - a PR from @dugenkui03  I think.", "author": "bbakerman", "createdAt": "2020-11-03T21:27:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1NTc0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk3NDg0MA==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516974840", "bodyText": "The spec is not explicit\n\nlocations returns a List of __DirectiveLocation representing the valid locations this directive may be placed.\n\nSo I will make it\n.field(newFieldDefinition()\n                    .name(\"locations\")\n                    .type(nonNull(list(nonNull(__DirectiveLocation)))))", "author": "bbakerman", "createdAt": "2020-11-03T21:48:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1NTc0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzcyMDkxNw==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r523720917", "bodyText": "The spec is explicit (see https://spec.graphql.org/draft/#sec-Schema-Introspection):\ntype __Directive {\n  name: String!\n  description: String\n  locations: [__DirectiveLocation!]!\n  args: [__InputValue!]!\n  isRepeatable: Boolean!\n}", "author": "andimarek", "createdAt": "2020-11-15T07:37:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1NTc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk2MTY0Mw==", "url": "https://github.com/graphql-java/graphql-java/pull/2015#discussion_r516961643", "bodyText": "we should have a test which actually prints multiple directives on a Node", "author": "andimarek", "createdAt": "2020-11-03T21:19:33Z", "path": "src/test/groovy/graphql/language/AstPrinterTest.groovy", "diffHunk": "@@ -605,11 +601,41 @@ extend input Input @directive {\n                 .build()\n \n         when:\n-        def result = astPrinter.printAst(interfaceType)\n+        def result = AstPrinter.printAstCompact(interfaceType)\n \n         then:\n         result == \"extend interface Resource implements Node & Extra {}\"\n \n     }\n \n+    def \"directive definitions can be printed\"() {", "originalCommit": "af3d66783b78e03a059b57aaf88171852b6d9739", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fed532182d76c6354c27409bfa2ccd90a6af0e6b", "url": "https://github.com/graphql-java/graphql-java/commit/fed532182d76c6354c27409bfa2ccd90a6af0e6b", "message": "Merge remote-tracking branch 'origin/master' into repeatable-directives-support\n\n# Conflicts:\n#\tsrc/main/java/graphql/schema/idl/SchemaGeneratorHelper.java\n#\tsrc/main/java/graphql/schema/idl/SchemaTypeChecker.java", "committedDate": "2020-11-03T21:23:50Z", "type": "commit"}, {"oid": "cb1bd847ceed231a37e067af497d5697e8fa8373", "url": "https://github.com/graphql-java/graphql-java/commit/cb1bd847ceed231a37e067af497d5697e8fa8373", "message": "Killed nonRepeatableDirectivesByName", "committedDate": "2020-11-03T21:44:41Z", "type": "commit"}, {"oid": "99c3be26e79a75b0f837640f194dd332b913871b", "url": "https://github.com/graphql-java/graphql-java/commit/99c3be26e79a75b0f837640f194dd332b913871b", "message": "Killed nonRepeatableDirectivesByName", "committedDate": "2020-11-03T21:48:26Z", "type": "commit"}, {"oid": "483d4473577190020b6ef4b287fbd250ca82efd8", "url": "https://github.com/graphql-java/graphql-java/commit/483d4473577190020b6ef4b287fbd250ca82efd8", "message": "Merge remote-tracking branch 'origin/master' into repeatable-directives-support\n\n# Conflicts:\n#\tsrc/main/java/graphql/language/Directive.java\n#\tsrc/main/java/graphql/language/DirectiveDefinition.java\n#\tsrc/main/java/graphql/language/InlineFragment.java\n#\tsrc/main/java/graphql/language/SchemaDefinition.java\n#\tsrc/main/java/graphql/schema/GraphQLArgument.java\n#\tsrc/main/java/graphql/schema/GraphQLDirective.java\n#\tsrc/main/java/graphql/schema/GraphQLEnumType.java\n#\tsrc/main/java/graphql/schema/GraphQLFieldDefinition.java\n#\tsrc/main/java/graphql/schema/GraphQLInputObjectField.java\n#\tsrc/main/java/graphql/schema/GraphQLInputObjectType.java\n#\tsrc/main/java/graphql/schema/GraphQLObjectType.java\n#\tsrc/main/java/graphql/schema/GraphQLScalarType.java\n#\tsrc/main/java/graphql/schema/GraphQLSchema.java\n#\tsrc/main/java/graphql/schema/GraphQLUnionType.java", "committedDate": "2020-11-10T10:29:57Z", "type": "commit"}, {"oid": "cf753b9da66f6e54e6bfffee8ac7df704d2c53b6", "url": "https://github.com/graphql-java/graphql-java/commit/cf753b9da66f6e54e6bfffee8ac7df704d2c53b6", "message": "Merge remote-tracking branch 'origin/master' into repeatable-directives-support", "committedDate": "2020-11-12T21:25:40Z", "type": "commit"}, {"oid": "27597deb44ddea8adb6db8647a87e91c433059e7", "url": "https://github.com/graphql-java/graphql-java/commit/27597deb44ddea8adb6db8647a87e91c433059e7", "message": "Added extra tests for printing repeatable directives", "committedDate": "2020-11-12T22:44:20Z", "type": "commit"}, {"oid": "6d534628997c0188b50c8a6c34bf29d5dabaaf40", "url": "https://github.com/graphql-java/graphql-java/commit/6d534628997c0188b50c8a6c34bf29d5dabaaf40", "message": "Moved to a directive holder", "committedDate": "2020-11-13T10:35:32Z", "type": "commit"}, {"oid": "ec7fa8a275674fd46948c4c3061ff08b3e1d379e", "url": "https://github.com/graphql-java/graphql-java/commit/ec7fa8a275674fd46948c4c3061ff08b3e1d379e", "message": "Merge remote-tracking branch 'origin/master' into repeatable-directives-support\n\n# Conflicts:\n#\tsrc/main/java/graphql/schema/GraphQLUnionType.java\n#\tsrc/main/java/graphql/schema/idl/SchemaGeneratorHelper.java", "committedDate": "2020-11-15T23:44:32Z", "type": "commit"}]}