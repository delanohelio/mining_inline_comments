{"pr_number": 1783, "pr_title": "Removing the single instance of NullValue ", "pr_createdAt": "2020-02-05T23:06:38Z", "pr_url": "https://github.com/graphql-java/graphql-java/pull/1783", "timeline": [{"oid": "42962cd9b6729d29e61026d9db34c74cf6c92060", "url": "https://github.com/graphql-java/graphql-java/commit/42962cd9b6729d29e61026d9db34c74cf6c92060", "message": "Removing NullValue single instace", "committedDate": "2020-02-05T23:19:19Z", "type": "commit"}, {"oid": "42962cd9b6729d29e61026d9db34c74cf6c92060", "url": "https://github.com/graphql-java/graphql-java/commit/42962cd9b6729d29e61026d9db34c74cf6c92060", "message": "Removing NullValue single instace", "committedDate": "2020-02-05T23:19:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU2NTU1Ng==", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r375565556", "bodyText": "please make sure that source location is also set", "author": "andimarek", "createdAt": "2020-02-05T23:25:56Z", "path": "src/test/groovy/graphql/parser/ParserTest.groovy", "diffHunk": "@@ -516,17 +516,18 @@ class ParserTest extends Specification {\n     }\n \n \n-    def \"parses null value\"() {\n+    def \"parses null values\"() {\n         given:\n-        def input = \"{ foo(bar: null) }\"\n+        def input = \"{ foo(bar: null, bell : null) }\"\n \n         when:\n         def document = new Parser().parseDocument(input)\n         def operation = document.definitions[0] as OperationDefinition\n         def selection = operation.selectionSet.selections[0] as Field\n \n         then:\n-        selection.arguments[0].value == NullValue.Null\n+        assert selection.arguments[0].value instanceof NullValue", "originalCommit": "42962cd9b6729d29e61026d9db34c74cf6c92060", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU2NzIxMQ==", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r375567211", "bodyText": "The constant has been deleted - see changes to NullValue file.\nWhat do you mean by source location is set?", "author": "simeonleatherland", "createdAt": "2020-02-05T23:30:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU2NTU1Ng=="}], "type": "inlineReview"}, {"oid": "baaac04cf2e340386ac12c63ad594aa6d0cb177f", "url": "https://github.com/graphql-java/graphql-java/commit/baaac04cf2e340386ac12c63ad594aa6d0cb177f", "message": "Adding Check for source location to be as expected", "committedDate": "2020-02-06T00:55:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNDc4OA==", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r375604788", "bodyText": "I don't thing this is correct: we need to record the source location, ?", "author": "andimarek", "createdAt": "2020-02-06T01:52:24Z", "path": "src/main/java/graphql/parser/GraphqlAntlrToLanguage.java", "diffHunk": "@@ -716,7 +716,7 @@ protected Value createValue(GraphqlParser.ValueContext ctx) {\n             addCommonData(booleanValue, ctx);\n             return booleanValue.build();\n         } else if (ctx.NullValue() != null) {\n-            return Null;\n+            return NullValue.newNullValue().build();", "originalCommit": "baaac04cf2e340386ac12c63ad594aa6d0cb177f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNDk1MQ==", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r375604951", "bodyText": "don't use assert: spock just takes a == b\nalso: this is the right test, yes, but not sure how this works, see the other comment above", "author": "andimarek", "createdAt": "2020-02-06T01:53:07Z", "path": "src/test/groovy/graphql/parser/ParserTest.groovy", "diffHunk": "@@ -516,17 +516,21 @@ class ParserTest extends Specification {\n     }\n \n \n-    def \"parses null value\"() {\n+    def \"parses null values\"() {\n         given:\n-        def input = \"{ foo(bar: null) }\"\n+        def input = \"{ foo(bar: null, bell : null) }\"\n \n         when:\n         def document = new Parser().parseDocument(input)\n         def operation = document.definitions[0] as OperationDefinition\n         def selection = operation.selectionSet.selections[0] as Field\n \n         then:\n-        selection.arguments[0].value == NullValue.Null\n+        assert selection.arguments[0].value instanceof NullValue\n+        assert selection.arguments[1].value instanceof NullValue\n+\n+        assert selection.arguments[0].sourceLocation.toString() == \"SourceLocation{line=1, column=7}\"", "originalCommit": "baaac04cf2e340386ac12c63ad594aa6d0cb177f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyNjc2MA==", "url": "https://github.com/graphql-java/graphql-java/pull/1783#discussion_r376826760", "bodyText": "Spock will fail a test when any statement in the then: block is non true\nSo selection.arguments[0].value instanceof NullValue is a valid statement - no need for assert\nAssert is needed if you create a common method that you call in a test eg\n\nwhen:\n     someCommonMethos(value)\n\ndef someCommonMethod(value) {\n    assert value != null\n    assert value instanceof Foo\n    return true\n}", "author": "bbakerman", "createdAt": "2020-02-09T23:31:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNDk1MQ=="}], "type": "inlineReview"}, {"oid": "1d3e5740abf53c8579527b1711b87d9f0f197ab9", "url": "https://github.com/graphql-java/graphql-java/commit/1d3e5740abf53c8579527b1711b87d9f0f197ab9", "message": "Updating Tests and adding context to the null value", "committedDate": "2020-02-10T04:42:59Z", "type": "commit"}]}