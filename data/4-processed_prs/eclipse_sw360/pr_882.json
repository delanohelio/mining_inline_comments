{"pr_number": 882, "pr_title": "feat(SplitComponentUI): Split Component data like releases and attachments from Source Component to Target Component", "pr_createdAt": "2020-06-10T06:26:35Z", "pr_url": "https://github.com/eclipse/sw360/pull/882", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMjM4MA==", "url": "https://github.com/eclipse/sw360/pull/882#discussion_r439932380", "bodyText": "add assert() methods:\nassertNotNull(component);\nassertId(component.getId());\nassertUser(user);", "author": "akapti", "createdAt": "2020-06-15T05:07:24Z", "path": "backend/src/src-components/src/main/java/org/eclipse/sw360/components/ComponentHandler.java", "diffHunk": "@@ -504,4 +504,9 @@ public RequestSummary importBomFromAttachmentContent(User user, String attachmen\n         assertUser(user);\n         return handler.importBomFromAttachmentContent(user, attachmentContentId);\n     }\n+\n+    @Override\n+    public RequestStatus splitComponent(Component srcComponent, Component targetComponent, User user) throws TException {\n+        return handler.splitComponent(srcComponent, targetComponent, user);", "originalCommit": "23c3205b30698cba4dc3f32e4423399ed7632ea3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAwMDk4Mg==", "url": "https://github.com/eclipse/sw360/pull/882#discussion_r442000982", "bodyText": "Changes done.", "author": "JaideepPalit", "createdAt": "2020-06-18T06:42:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMjM4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4NTQxNQ==", "url": "https://github.com/eclipse/sw360/pull/882#discussion_r440785415", "bodyText": "Use StringBuilder for concatenation,", "author": "akapti", "createdAt": "2020-06-16T11:40:56Z", "path": "backend/src-common/src/main/java/org/eclipse/sw360/datahandler/db/ComponentDatabaseHandler.java", "diffHunk": "@@ -2055,4 +2123,53 @@ private void removeLeadingTrailingWhitespace(Component component) {\n \n         component.setOperatingSystems(DatabaseHandlerUtil.trimSetOfString(component.getOperatingSystems()));\n     }\n+\n+    private boolean moveAttachmentFromSrcComponentToTargetComponent(Component srcComponent, Component targetComponent,\n+            Component srcComponentFromDB, Component targetComponentFromDB) {\n+        Set<String> srcComponentAttachmentIdsAfter = nullToEmptySet(srcComponent.getAttachments()).stream()\n+                .map(Attachment::getAttachmentContentId).collect(Collectors.toSet());\n+        Set<String> targetComponentAttachmentIdsAfter = nullToEmptySet(targetComponent.getAttachments()).stream()\n+                .map(Attachment::getAttachmentContentId).collect(Collectors.toSet());\n+        Map<String, Attachment> srcComponentAttachmentsMapBefore = nullToEmptySet(srcComponentFromDB.getAttachments())\n+                .stream().collect(Collectors.toMap(Attachment::getAttachmentContentId, Function.identity()));\n+\n+        Set<Attachment> targetComponentAttachmentBefore = nullToEmptySet(targetComponentFromDB.getAttachments());\n+        Set<String> targetComponentAttachmentIdsBefore = targetComponentAttachmentBefore.stream()\n+                .map(Attachment::getAttachmentContentId).collect(Collectors.toSet());\n+\n+        targetComponentAttachmentIdsAfter.removeAll(targetComponentAttachmentIdsBefore);\n+        if (CommonUtils.isNotEmpty(targetComponentAttachmentIdsAfter)) {\n+            targetComponentAttachmentIdsAfter.stream().forEach(movedAttachmentId -> targetComponentAttachmentBefore\n+                    .add(srcComponentAttachmentsMapBefore.get(movedAttachmentId)));\n+            targetComponentFromDB.setAttachments(targetComponentAttachmentBefore);\n+\n+            Set<Attachment> srcComponentAttachmentFinal = srcComponentAttachmentsMapBefore.values().stream()\n+                    .filter(attachment -> srcComponentAttachmentIdsAfter.contains(attachment.getAttachmentContentId()))\n+                    .collect(Collectors.toSet());\n+            srcComponentFromDB.setAttachments(srcComponentAttachmentFinal);\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    private void updateReleaseAfterComponentSplit(Component srcComponentFromDB, Component targetComponentFromDB,\n+            Set<String> srcComponentReleaseIdsMovedFromSrc, Set<String> targetComponentReleaseIdsBefore, User user) throws SW360Exception {\n+        List<Release> targetComponentReleases = getReleasesForClearingStateSummary(targetComponentReleaseIdsBefore);\n+        List<Release> srcComponentReleasesMoved = getReleasesForClearingStateSummary(srcComponentReleaseIdsMovedFromSrc);\n+        Set<String> targetComponentReleaseVersions = targetComponentReleases.stream().map(Release::getVersion)\n+                .collect(Collectors.toSet());\n+\n+        List<Release> releasesToUpdate = srcComponentReleasesMoved.stream().map(r -> {\n+            Release releaseBefore = r.deepCopy();\n+            if (targetComponentReleaseVersions.contains(r.getVersion())) {\n+                r.setVersion(r.getVersion() + \"_conflict (\" + r.getId() + \")\");", "originalCommit": "23c3205b30698cba4dc3f32e4423399ed7632ea3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAwMTA2OA==", "url": "https://github.com/eclipse/sw360/pull/882#discussion_r442001068", "bodyText": "Changes done.", "author": "JaideepPalit", "createdAt": "2020-06-18T06:42:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4NTQxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzOTIwNQ==", "url": "https://github.com/eclipse/sw360/pull/882#discussion_r440839205", "bodyText": "Please add a :  to the error message.\nthis is how it looks currently", "author": "akapti", "createdAt": "2020-06-16T13:14:33Z", "path": "frontend/sw360-portlet/src/main/resources/META-INF/resources/html/components/splitComponent.jsp", "diffHunk": "@@ -0,0 +1,337 @@\n+<%--\n+  ~ Copyright Siemens AG, 2017, 2019. Part of the SW360 Portal Project.\n+  ~\n+  ~ This program and the accompanying materials are made\n+  ~ available under the terms of the Eclipse Public License 2.0\n+  ~ which is available at https://www.eclipse.org/legal/epl-2.0/\n+  ~\n+  ~ SPDX-License-Identifier: EPL-2.0\n+--%>\n+<%@ page import=\"org.eclipse.sw360.datahandler.thrift.users.User\" %>\n+<%@ page import=\"org.eclipse.sw360.datahandler.thrift.components.ComponentType\" %>\n+<%@ page import=\"org.eclipse.sw360.datahandler.common.ThriftEnumUtils\" %>\n+\n+<%@include file=\"/html/init.jsp\" %>\n+<%-- the following is needed by liferay to display error messages--%>\n+<%@include file=\"/html/utils/includes/errorKeyToMessage.jspf\"%>\n+\n+<portlet:defineObjects/>\n+<liferay-theme:defineObjects/>\n+\n+<portlet:actionURL var=\"componentSplitWizardStepUrl\" name=\"componentSplitWizardStep\"/>\n+\n+<div id=\"componentSplitWizard\" class=\"container\" data-step-id=\"0\" data-component-source-id=\"${component.id}\">\n+    <div class=\"row portlet-toolbar\">\n+        <div class=\"col portlet-title text-truncate\" title=\"<liferay-ui:message key=\"split.into\" /> ${sw360:printComponentName(component)}\">\n+            <liferay-ui:message key=\"split.into\" /> ${sw360:printComponentName(component)}\n+        </div>\n+    </div>\n+    <div class=\"row\">\n+        <div class=\"col\">\n+            <div class=\"wizardHeader\">\n+                <ul>\n+                    <li class=\"active\"><liferay-ui:message key=\"choose.target\" /><br /><small><liferay-ui:message key=\"choose.a.component.into.which.current.one.should.be.split\" /></small></li>\n+                    <li><liferay-ui:message key=\"split.data\" /><br /><small><liferay-ui:message key=\"split.data.from.current.component.to.target.component\" /></small></li>\n+                    <li><liferay-ui:message key=\"confirm\" /><br /><small><liferay-ui:message key=\"check.the.split.version.and.confirm\" /></small></li>\n+                </ul>\n+            </div>\n+        </div>\n+    </div>\n+    <div class=\"row\">\n+        <div class=\"col\">\n+            <div class=\"merge wizardBody\">\n+                <div class=\"step active\" data-step-id=\"1\">\n+                    <div class=\"spinner spinner-with-text\">\n+                        <div class=\"spinner-border\" role=\"status\">\n+                            <span class=\"sr-only\"><liferay-ui:message key=\"loading.data.for.step.1.please.wait\" /></span>\n+                        </div>\n+                        <liferay-ui:message key=\"loading.data.for.step.1.please.wait\" />\n+                    </div>\n+                </div>\n+                <div class=\"step\" data-step-id=\"2\">\n+                    <div class=\"spinner spinner-with-text\">\n+                        <div class=\"spinner-border\" role=\"status\">\n+                            <span class=\"sr-only\"><liferay-ui:message key=\"loading.data.for.step.2.please.wait\" /></span>\n+                        </div>\n+                        <liferay-ui:message key=\"loading.data.for.step.2.please.wait\" />\n+                    </div>\n+                </div>\n+                <div class=\"step\" data-step-id=\"3\">\n+                    <div class=\"spinner spinner-with-text\">\n+                        <div class=\"spinner-border\" role=\"status\">\n+                            <span class=\"sr-only\"><liferay-ui:message key=\"loading.data.for.step.3.please.wait\" /></span>\n+                        </div>\n+                        <liferay-ui:message key=\"loading.data.for.step.3.please.wait\" />\n+                    </div>\n+                </div>\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<%--for javascript library loading --%>\n+<%@ include file=\"/html/utils/includes/requirejs.jspf\" %>\n+<script>\n+    require(['jquery', 'bridges/datatables', 'modules/mergeWizard' ], function($, datatables, wizard) {\n+        var mergeWizardStepUrl = '<%=componentSplitWizardStepUrl%>',\n+            postParamsPrefix = '<portlet:namespace/>',\n+            $wizardRoot = $('#componentSplitWizard');\n+            wizard({\n+                wizardRoot: $wizardRoot,\n+                postUrl: mergeWizardStepUrl,\n+                postParamsPrefix: postParamsPrefix,\n+                loadErrorHook: errorHook,\n+                steps: [\n+                    {\n+                        renderHook: renderChooseComponent,\n+                        submitHook: submitChosenComponent,\n+                        errorHook: errorHook\n+                    },\n+                    {\n+                        renderHook: renderSplitComponent,\n+                        submitHook: submitSplitComponent,\n+                        errorHook: errorHook\n+                    },\n+                    {\n+                        renderHook: renderConfirmSplitComponent,\n+                        submitHook: submitConfirmedSplitComponent,\n+                        errorHook: errorHook\n+                    }\n+            ],\n+            finishCb: function($stepElement, data) {\n+                if (data && data.error) {\n+                    let $error = $('<div/>', {\n+                        'class': 'alert alert-danger mt-3'\n+                    });\n+                    let $idList = $('<ul>');\n+\n+                    $error.append($('<p/>').append($('<b/>').text('<liferay-ui:message key=\"could.not.merge.components\" /> ' + data.error)));\n+                    $error.append($('<p/>').text('<liferay-ui:message key=\"this.error.can.lead.to.inconsistencies.in.the.database.please.inform.the.administrator.with.the.following.information\" />'));\n+                    $error.append($('<p>').append($idList));\n+                    \n+                    let componentSourceId = $stepElement.data('componentSourceId');\n+                    $idList.append($('<li>').text('<liferay-ui:message key=\"source.component\" />: ' + componentSourceId));\n+                    $idList.append($('<li>').text('<liferay-ui:message key=\"target.component\" />: ' + $wizardRoot.data('componentTargetId')));\n+                    $stepElement.data('componentSelection').releases.forEach( function(release) {\n+                        if(release.componentId == componentSourceId) {\n+                            $idList.append($('<li>').text('<liferay-ui:message key=\"release\" />: ' + release.id));\n+                        }\n+                    });\n+\n+                    $stepElement.html('').append($error);\n+                    return false;\n+                } else if(data && data.redirectUrl) {\n+                    window.location.href = data.redirectUrl;\n+                    return true;\n+                } else {\n+                    window.history.back();\n+                    return true;\n+                }\n+            }\n+        });\n+\n+        function renderChooseComponent($stepElement, data) {\n+            $stepElement.html('' +\n+                    '<div class=\"stepFeedback\"></div>' +\n+                    '<form>' +\n+                    '    <table id=\"componentTargetsTable\" class=\"table table-bordered\" title=\"<liferay-ui:message key=\"source.component\" />\">' +\n+                    '        <colgroup>' +\n+                    '            <col style=\"width: 1.7rem;\" />' +\n+                    '            <col style=\"width: 50%;\" />' +\n+                    '            <col style=\"width: 30%;\" />' +\n+                    '            <col style=\"width: 15%;\" />' +\n+                    '        </colgroup>' +\n+                    '        <thead>' +\n+                    '            <tr>' +\n+                    '                <th></th>' +\n+                    '                <th><liferay-ui:message key=\"component.name\" /></th>' +\n+                    '                <th><liferay-ui:message key=\"created.by\" /></th>' +\n+                    '                <th><liferay-ui:message key=\"releases\" /></th>' +\n+                    '            </tr>' +\n+                    '        </thead>' +\n+                    '        <tbody>' +\n+                    '        </tbody>' +\n+                    '    </table>' +\n+                    '</form>'\n+                    );\n+\n+            var table = datatables.create($stepElement.find('#componentTargetsTable'), {\n+                data: data.components,\n+                columns: [\n+                    { data: \"id\", render: $.fn.dataTable.render.inputRadio('componentChooser') },\n+                    { data: \"name\" },\n+                    { data: \"createdBy\" },\n+                    { data: \"releases\" }\n+                ],\n+                language: {\n+                    url: \"<liferay-ui:message key=\"datatables.lang\" />\",\n+                    loadingRecords: \"<liferay-ui:message key=\"loading\" />\"\n+                },\n+                order: [ [ 1, 'asc' ] ],\n+                select: 'single'\n+            }, undefined, [0], true);\n+\n+            $(\"#componentTargetsTable\").on('init.dt', function() {\n+                datatables.enableCheckboxForSelection(table, 0);\n+            });\n+        }\n+\n+        function submitChosenComponent($stepElement) {\n+            var checkedList = $stepElement.find('input:checked');\n+            if (checkedList.length !== 1 || $(checkedList.get(0)).val() ===  $wizardRoot.data('componentTargetId')) {\n+                $stepElement.find('.stepFeedback').html('<div class=\"alert alert-danger\"><liferay-ui:message key=\"please.choose.exactly.one.component.which.is.not.the.component.itself\" /></div>');\n+                $('html, body').stop().animate({ scrollTop: 0 }, 300, 'swing');\n+                setTimeout(function() {\n+                    $stepElement.find('.stepFeedback').html('');\n+                }, 5000);\n+                return false;\n+            }\n+            $stepElement.data('componentTargetId', $(checkedList.get(0)).val());\n+            $stepElement.data('componentSourceId', $wizardRoot.data('componentSourceId'));\n+        }\n+\n+        function renderSplitComponent($stepElement, data) {\n+            let releases, midElement = '<input class=\"btn btn-secondary\" type=\"button\" value=\"&Longrightarrow;\" />';\n+            $stepElement.html('<div class=\"stepFeedback\"></div>');\n+            $stepElement.append(wizard.createCategoryLine('<liferay-ui:message key=\"general\" />'));\n+            $stepElement.append(wizard.createSingleSplitLine('<liferay-ui:message key=\"name\" />', data.componentSource.name, data.componentTarget.name));\n+            $stepElement.append(wizard.createSingleSplitLine('<liferay-ui:message key=\"created.on\" />', data.componentSource.createdOn, data.componentTarget.createdOn));\n+            $stepElement.append(wizard.createSingleSplitLine('<liferay-ui:message key=\"created.by\" />', data.componentSource.createdBy, data.componentTarget.createdBy));\n+\n+            $stepElement.append(wizard.createCategoryLine('<liferay-ui:message key=\"releases\" />'));\n+            $stepElement.append(wizard.createMultiSplitLine('Releases', data.componentSource.releases, data.componentTarget.releases, function(release) {\n+                if (!release) {\n+                    return '';\n+                }\n+                return (release.name || '-no-name-') + ' ' + (release.version || '-no-version-');\n+            }, midElement));\n+\n+            $stepElement.append(wizard.createCategoryLine('<liferay-ui:message key=\"attachments\" />'));\n+            $stepElement.append(wizard.createMultiSplitLine('<liferay-ui:message key=\"attachments\" />', data.componentSource.attachments, data.componentTarget.attachments, function(attachment) {\n+                if (!attachment) {\n+                    return '';\n+                }\n+                return (attachment.filename || '-no-filename-') + ' (' + (attachment.attachementType || '-no-type-') + ')';\n+            }, midElement));\n+\n+            $wizardRoot.find('fieldset div.mid input').each(function(index, element) {\n+                $(element).off('click.merge');\n+                $(element).on('click.merge', function(event) {\n+                let propName = $(element).parent().parent().parent().attr('id'),\n+                    rowIndex = $(element).parent().data('rowIndex'),\n+                    $fieldset = $('#' + propName),\n+                    targetNode = $('.right[data-row-index=\"' + rowIndex + '\"]', $fieldset);\n+                    sourceNode = $('.left[data-row-index=\"' + rowIndex + '\"]', $fieldset);\n+                    buttonNode = $('.mid[data-row-index=\"' + rowIndex + '\"] input', $fieldset);\n+                if($(event.currentTarget).hasClass('undo')) {\n+                    $row.removeClass('modified');\n+                    buttonNode.removeClass('undo');\n+                    targetNode.removeData('newVal');\n+                    targetNode.find('span:first').html($row.data('detailFormatter')(targetNode.data('origVal')));\n+                    sourceNode.find('span:first').html($row.data('detailFormatter')(sourceNode.data('origVal')));\n+                    sourceNode.data('newVal', sourceNode.data('origVal'));\n+                    buttonNode.val($('<div/>').html('&Longrightarrow;').text());\n+                } else {\n+                    $row = sourceNode.parent();\n+                    $row.addClass('modified');\n+                    buttonNode.val($('<div/>').html('&#8631;').text());\n+                    buttonNode.addClass('undo');\n+                    targetNode.data('newVal', sourceNode.data('origVal'));\n+                    sourceNode.data('newVal', '');\n+                    targetNode.find('span:first').html($row.data('detailFormatter')(sourceNode.data('origVal')));\n+                    sourceNode.find('span:first').html(\"\");\n+                }\n+               });\n+            });\n+\n+            $wizardRoot.data('componentSource', data.componentSource);\n+            $wizardRoot.data('componentTarget', data.componentTarget);\n+        }\n+\n+        function submitSplitComponent($stepElement) {\n+            let srcComponent = {},\n+                srcReleases = [],\n+                srcAttachments = [],\n+                targetComponent = {},\n+                targetReleases = [],\n+                targetAttachments = [];\n+    \n+            srcComponent.id = $wizardRoot.data('componentSourceId');\n+            srcComponent.name = wizard.getFinalSingleValue('<liferay-ui:message key=\"name\" />');\n+            srcComponent.createdOn = wizard.getFinalSingleValue('<liferay-ui:message key=\"created.on\" />');\n+            srcComponent.createdBy = wizard.getFinalSingleValue('<liferay-ui:message key=\"created.by\" />');\n+            srcReleases = wizard.getFinalMultiValue('Releases');\n+            srcComponent.releases = [];\n+            $.each(srcReleases, function(index, value) {\n+                srcComponent.releases.push(JSON.parse('{ \"id\": \"' + value.id + '\", \"name\": \"' + value.name + '\", \"version\": \"' + value.version + '\", \"componentId\": \"' + value.componentId + '\"}'));\n+            });\n+            srcAttachments = wizard.getFinalMultiValue('<liferay-ui:message key=\"attachments\" />');\n+            srcComponent.attachments = [];\n+            $.each(srcAttachments, function(index, value) {\n+                srcComponent.attachments.push(JSON.parse('{ \"attachmentContentId\": \"' + value.attachmentContentId + '\", \"filename\": \"' + value.filename + '\"}'));\n+            });\n+    \n+            targetComponent.id = $wizardRoot.data('componentTarget').id;\n+            targetComponent.name = wizard.getFinalSingleValueTarget('<liferay-ui:message key=\"name\" />');\n+            targetComponent.createdOn = wizard.getFinalSingleValueTarget('<liferay-ui:message key=\"created.on\" />');\n+            targetComponent.createdBy = wizard.getFinalSingleValueTarget('<liferay-ui:message key=\"created.by\" />');\n+            targetReleases = wizard.getFinalMultiValueTarget('Releases');\n+            targetComponent.releases = [];\n+            $.each(targetReleases, function(index, value) {\n+                targetComponent.releases.push(JSON.parse('{ \"id\": \"' + value.id + '\", \"name\": \"' + value.name + '\", \"version\": \"' + value.version + '\", \"componentId\": \"' + value.componentId + '\"}'));\n+            });\n+            targetAttachments = wizard.getFinalMultiValueTarget('<liferay-ui:message key=\"attachments\" />');\n+            targetComponent.attachments = [];\n+            $.each(targetAttachments, function(index, value) {\n+                targetComponent.attachments.push(JSON.parse('{ \"attachmentContentId\": \"' + value.attachmentContentId + '\", \"filename\": \"' + value.filename + '\"}'));\n+            })\n+\n+            $stepElement.data('targetComponent', targetComponent);\n+            $stepElement.data('srcComponent', srcComponent);\n+        }\n+\n+        function renderConfirmSplitComponent($stepElement, data) {\n+            $stepElement.data('targetComponent', data.targetComponent);\n+            $stepElement.data('srcComponent', data.srcComponent);\n+            $stepElement.html('<div class=\"stepFeedback\"></div>');\n+            $stepElement.append(wizard.createCategoryLine('<liferay-ui:message key=\"general\" />'));\n+            $stepElement.append(wizard.createSingleSplitLine('<liferay-ui:message key=\"name\" />', data.srcComponent.name, data.targetComponent.name));\n+            $stepElement.append(wizard.createSingleSplitLine('<liferay-ui:message key=\"created.on\" />', data.srcComponent.createdOn, data.targetComponent.createdOn));\n+            $stepElement.append(\n+                    wizard.createSingleSplitLine('<liferay-ui:message key=\"created.by\" />', data.srcComponent.createdBy, data.targetComponent.createdBy),\n+            );\n+            $stepElement.append(wizard.createCategoryLine('<liferay-ui:message key=\"releases\" />'));\n+            $stepElement.append(wizard.createMultiSplitLine('Releases', data.srcComponent.releases, data.targetComponent.releases, function(release) {\n+                if (!release) {\n+                    return '';\n+                }\n+                return (release.name || '-no-name-') + ' ' + (release.version || '-no-version-');\n+            }, ''));\n+            $stepElement.append(wizard.createCategoryLine('<liferay-ui:message key=\"attachments\" />'));\n+            $stepElement.append(wizard.createMultiSplitLine('<liferay-ui:message key=\"attachments\" />', data.srcComponent.attachments, data.targetComponent.attachments, function(attachment) {\n+                if (!attachment) {\n+                    return '';\n+                }\n+                return (attachment.filename || '-no-filename-') + ' (' + (attachment.attachementType || '-no-type-') + ')';\n+            }, ''));\n+        }\n+\n+        function submitConfirmedSplitComponent($stepElement) {\n+            /* componentSourceId still as data at stepElement */\n+            /* componentSelection still as data at stepElement */\n+        }\n+\n+        function errorHook($stepElement, textStatus, error) {\n+            if($stepElement.find('.stepFeedback').length === 0) {\n+                // initial loading\n+                $stepElement.html('<div class=\"stepFeedback\"></div>');\n+            }\n+\n+            $stepElement.find('.stepFeedback').html('<div class=\"alert alert-danger\"><liferay-ui:message key=\"an.error.happened.while.communicating.with.the.server\" />' + textStatus + error + '</div>');", "originalCommit": "23c3205b30698cba4dc3f32e4423399ed7632ea3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjAwMTAzMw==", "url": "https://github.com/eclipse/sw360/pull/882#discussion_r442001033", "bodyText": "Changes done.", "author": "JaideepPalit", "createdAt": "2020-06-18T06:42:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzOTIwNQ=="}], "type": "inlineReview"}, {"oid": "8528ecfe69ade5dba0f793013fbb5d1bfea4e941", "url": "https://github.com/eclipse/sw360/commit/8528ecfe69ade5dba0f793013fbb5d1bfea4e941", "message": "feat(SplitComponentUI): Move Component data like releases and attachments from Source Component to Target Component\n\nSigned-off-by: Jaideep Palit <jaideep.palit@siemens.com>", "committedDate": "2020-06-18T06:39:04Z", "type": "commit"}, {"oid": "8528ecfe69ade5dba0f793013fbb5d1bfea4e941", "url": "https://github.com/eclipse/sw360/commit/8528ecfe69ade5dba0f793013fbb5d1bfea4e941", "message": "feat(SplitComponentUI): Move Component data like releases and attachments from Source Component to Target Component\n\nSigned-off-by: Jaideep Palit <jaideep.palit@siemens.com>", "committedDate": "2020-06-18T06:39:04Z", "type": "forcePushed"}]}