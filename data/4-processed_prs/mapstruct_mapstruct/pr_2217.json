{"pr_number": 2217, "pr_title": "#2213: primitive arrays should be directly mapped", "pr_createdAt": "2020-10-03T08:37:25Z", "pr_url": "https://github.com/mapstruct/mapstruct/pull/2217", "timeline": [{"oid": "98893d3e6d6f3357d4cf37f8dc75a27392b128da", "url": "https://github.com/mapstruct/mapstruct/commit/98893d3e6d6f3357d4cf37f8dc75a27392b128da", "message": "#2213: primitive arrays should be directly mapped (we are cloning them anyways)\n\nAdditionally fix problem when annotations `ElementType.TYPE_USE` not handled correctly for javac", "committedDate": "2020-10-03T08:36:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MjU2OA==", "url": "https://github.com/mapstruct/mapstruct/pull/2217#discussion_r499142568", "bodyText": "I'm not in favor of getting the name via the mirror.toString() at all. Can we go via the element somehow? I see somewhat up is the same construction.. (line 263)..\nIf not.. go ahead and merge.. I think I even investigated this before in the exact same spot \ud83d\ude04", "author": "sjaakd", "createdAt": "2020-10-03T12:10:02Z", "path": "processor/src/main/java/org/mapstruct/ap/internal/model/common/TypeFactory.java", "diffHunk": "@@ -274,7 +274,9 @@ else if (componentTypeMirror.getKind().isPrimitive()) {\n         else {\n             isEnumType = false;\n             isInterface = false;\n-            name = mirror.toString();\n+            // When the component type is primitive and is annotated with ElementType.TYPE_USE then\n+            // the typeMirror#toString returns (@CustomAnnotation :: byte) for the javac compiler\n+            name = mirror.getKind().isPrimitive() ? NativeTypes.getName( mirror.getKind() ) : mirror.toString();", "originalCommit": "98893d3e6d6f3357d4cf37f8dc75a27392b128da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1NDUzMg==", "url": "https://github.com/mapstruct/mapstruct/pull/2217#discussion_r499154532", "bodyText": "We do that when the type is a declared type. Otherwise there is no element, there is only a TypeKind and we do use it then the type is primitive. Not sure if we can do more here.\n\nI think I even investigated this before in the exact same spot \ud83d\ude04\n\nWe did this together for #1558", "author": "filiphr", "createdAt": "2020-10-03T14:53:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MjU2OA=="}], "type": "inlineReview"}]}