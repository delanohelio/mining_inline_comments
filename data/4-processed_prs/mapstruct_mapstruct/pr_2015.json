{"pr_number": 2015, "pr_title": "695b enum alternative ", "pr_createdAt": "2020-02-01T22:57:02Z", "pr_url": "https://github.com/mapstruct/mapstruct/pull/2015", "timeline": [{"oid": "58a2aacecd0a6a750691f46e75ca18a899c91afe", "url": "https://github.com/mapstruct/mapstruct/commit/58a2aacecd0a6a750691f46e75ca18a899c91afe", "message": "#695 API design, user control over the mapping process", "committedDate": "2020-01-28T19:01:37Z", "type": "commit"}, {"oid": "94ceb425cbfe83c4c2072bd960415687cb760565", "url": "https://github.com/mapstruct/mapstruct/commit/94ceb425cbfe83c4c2072bd960415687cb760565", "message": "#695 basic implementation", "committedDate": "2020-01-29T20:30:18Z", "type": "commit"}, {"oid": "6ad866823efd2b8f591b0b92b547adea783c5fb6", "url": "https://github.com/mapstruct/mapstruct/commit/6ad866823efd2b8f591b0b92b547adea783c5fb6", "message": "#695 adding documentation (and new insights due to)", "committedDate": "2020-01-29T21:15:58Z", "type": "commit"}, {"oid": "5fedfae2eccf1a37fbfa02537bf7b3b63e9afce8", "url": "https://github.com/mapstruct/mapstruct/commit/5fedfae2eccf1a37fbfa02537bf7b3b63e9afce8", "message": "#695 Adding unit test and bug fixes", "committedDate": "2020-01-30T23:02:23Z", "type": "commit"}, {"oid": "63d2e2e416a567c5ad259f42cf7b9cc78208f4ae", "url": "https://github.com/mapstruct/mapstruct/commit/63d2e2e416a567c5ad259f42cf7b9cc78208f4ae", "message": "#695 Rework comments", "committedDate": "2020-02-01T09:52:37Z", "type": "commit"}, {"oid": "510e360392d074f80a651fb34725d93b2933d806", "url": "https://github.com/mapstruct/mapstruct/commit/510e360392d074f80a651fb34725d93b2933d806", "message": "#695 Rework issue", "committedDate": "2020-02-01T15:18:27Z", "type": "commit"}, {"oid": "8f150808242e49e3ca731e35035a8ecd7a615843", "url": "https://github.com/mapstruct/mapstruct/commit/8f150808242e49e3ca731e35035a8ecd7a615843", "message": "#695 enum alternative", "committedDate": "2020-02-01T22:56:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwNzQ4NQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2015#discussion_r373807485", "bodyText": "Maybe it would be good to reference the enums here. That way it would be clear from the documentation which one does what. What do you think?", "author": "filiphr", "createdAt": "2020-02-01T23:06:27Z", "path": "documentation/src/main/asciidoc/chapter-5-data-type-conversions.asciidoc", "diffHunk": "@@ -145,15 +145,29 @@ That way it is possible to map arbitrary deep object graphs. When mapping from e\n \n When generating the implementation of a mapping method, MapStruct will apply the following routine for each attribute pair in the source and target object:\n \n-* If source and target attribute have the same type, the value will be simply copied from source to target. If the attribute is a collection (e.g. a `List`) a copy of the collection will be set into the target attribute.\n-* If source and target attribute type differ, check whether there is another mapping method which has the type of the source attribute as parameter type and the type of the target attribute as return type. If such a method exists it will be invoked in the generated mapping implementation.\n-* If no such method exists MapStruct will look whether a built-in conversion for the source and target type of the attribute exists. If this is the case, the generated mapping code will apply this conversion.\n-* If no such method was found MapStruct will try to generate an automatic sub-mapping method that will do the mapping between the source and target attributes.\n-* If MapStruct could not create a name based mapping method an error will be raised at build time, indicating the non-mappable attribute and its path.\n+. If source and target attribute have the same type, the value will be simply copied *direct* from source to target. If the attribute is a collection (e.g. a `List`) a copy of the collection will be set into the target attribute.", "originalCommit": "8f150808242e49e3ca731e35035a8ecd7a615843", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgyOTQ5OA==", "url": "https://github.com/mapstruct/mapstruct/pull/2015#discussion_r373829498", "bodyText": "done..", "author": "sjaakd", "createdAt": "2020-02-02T08:45:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwNzQ4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwNzc4MQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2015#discussion_r373807781", "bodyText": "Maybe add some javadoc here?", "author": "filiphr", "createdAt": "2020-02-01T23:14:14Z", "path": "core/src/main/java/org/mapstruct/control/MappingControl.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright MapStruct Authors.\n+ *\n+ * Licensed under the Apache License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.mapstruct.control;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Repeatable;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.CLASS)\n+@Repeatable(MappingControls.class)\n+@Target( ElementType.ANNOTATION_TYPE )\n+@MappingControl( MappingControl.Use.DIRECT )\n+@MappingControl( MappingControl.Use.BUILT_IN_CONVERSION )\n+@MappingControl( MappingControl.Use.MAPPING_METHOD )\n+@MappingControl( MappingControl.Use.COMPLEX_MAPPING )\n+public @interface MappingControl {", "originalCommit": "8f150808242e49e3ca731e35035a8ecd7a615843", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgyOTQ3OQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2015#discussion_r373829479", "bodyText": "example and java doc added", "author": "sjaakd", "createdAt": "2020-02-02T08:45:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwNzc4MQ=="}], "type": "inlineReview"}, {"oid": "c5c5515b19600180b3ea89b3b656d9ad8151f36b", "url": "https://github.com/mapstruct/mapstruct/commit/c5c5515b19600180b3ea89b3b656d9ad8151f36b", "message": "#695 enum alternative, rework comments", "committedDate": "2020-02-02T08:45:25Z", "type": "commit"}]}