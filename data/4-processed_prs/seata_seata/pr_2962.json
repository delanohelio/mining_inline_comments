{"pr_number": 2962, "pr_title": "optimize: @GlobalTransactional and @GlobalLock can now customize lock retry config", "pr_createdAt": "2020-08-03T03:08:05Z", "pr_url": "https://github.com/seata/seata/pull/2962", "timeline": [{"oid": "123ed6a523f3e286f55e18293c72fa652a68fc98", "url": "https://github.com/seata/seata/commit/123ed6a523f3e286f55e18293c72fa652a68fc98", "message": "optimize: @GlobalTransactional and @GlobalLock can now customize lock retry config (#2943)", "committedDate": "2020-07-31T09:51:41Z", "type": "commit"}, {"oid": "72c6841ba68982dacb3cc84acf2a6816931d17c9", "url": "https://github.com/seata/seata/commit/72c6841ba68982dacb3cc84acf2a6816931d17c9", "message": "optimize: @GlobalTransactional and @GlobalLock can now customize lock retry config (#2943)", "committedDate": "2020-07-31T10:22:45Z", "type": "commit"}, {"oid": "48fba473e9fb684b0d46f2af38409da4070ee083", "url": "https://github.com/seata/seata/commit/48fba473e9fb684b0d46f2af38409da4070ee083", "message": "Merge remote-tracking branch 'origin/develop' into develop\n\n# Conflicts:\n#\tcore/src/main/java/io/seata/core/context/GlobalLockConfigHolder.java\n#\tcore/src/main/java/io/seata/core/model/GlobalLockConfig.java", "committedDate": "2020-07-31T10:24:04Z", "type": "commit"}, {"oid": "be3b2213dadb8adc77300dcc6851f7d9342f1efe", "url": "https://github.com/seata/seata/commit/be3b2213dadb8adc77300dcc6851f7d9342f1efe", "message": "fix: adjust TransactionInfoTest", "committedDate": "2020-08-03T02:31:17Z", "type": "commit"}, {"oid": "297f9785236dadf88609636df85827161874efb5", "url": "https://github.com/seata/seata/commit/297f9785236dadf88609636df85827161874efb5", "message": "fix: adjust TransactionInfoTest", "committedDate": "2020-08-03T02:35:15Z", "type": "commit"}, {"oid": "12a43a425027c38d28e12190e1efb09cac05a67b", "url": "https://github.com/seata/seata/commit/12a43a425027c38d28e12190e1efb09cac05a67b", "message": "Merge remote-tracking branch 'origin/develop' into develop", "committedDate": "2020-08-03T02:44:08Z", "type": "commit"}, {"oid": "46387e52cbcf9172dd61a68ad47cdfddb7fc1d15", "url": "https://github.com/seata/seata/commit/46387e52cbcf9172dd61a68ad47cdfddb7fc1d15", "message": "fix: style check", "committedDate": "2020-08-03T03:06:04Z", "type": "commit"}, {"oid": "0a7fe1537c052e486fb1dccf0a0cb9f2db6407ec", "url": "https://github.com/seata/seata/commit/0a7fe1537c052e486fb1dccf0a0cb9f2db6407ec", "message": "Merge branch 'develop' into develop", "committedDate": "2020-08-03T03:10:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIwMjU4MQ==", "url": "https://github.com/seata/seata/pull/2962#discussion_r464202581", "bodyText": "\u6211\u89c9\u5f97\u52a0\u4e0aelse retryInternal=ConfigurationFactory.getInstance().getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_INTERVAL, DEFAULT_CLIENT_LOCK_RETRY_INTERVAL);\n\u53ef\u4ee5\u5728\u6709\u672c\u5730\u7684\u9501\u91cd\u8bd5\u65f6\uff0c\u65e0\u5e8f\u518d\u53bb\u52a0\u8f7d\u914d\u7f6e\u4e2d\u5fc3\u4e2d\u7684\u914d\u7f6e", "author": "a364176773", "createdAt": "2020-08-03T05:35:29Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/LockRetryController.java", "diffHunk": "@@ -32,13 +34,31 @@\n     private static int LOCK_RETRY_TIMES =\n         ConfigurationFactory.getInstance().getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_TIMES, DEFAULT_CLIENT_LOCK_RETRY_TIMES);\n \n-    private int lockRetryInternal = LOCK_RETRY_INTERNAL;\n-    private int lockRetryTimes = LOCK_RETRY_TIMES;\n+    private int lockRetryInternal;\n+    private int lockRetryTimes;\n \n     /**\n      * Instantiates a new Lock retry controller.\n      */\n     public LockRetryController() {\n+        int retryInternal = LOCK_RETRY_INTERNAL;\n+        int retryTimes = LOCK_RETRY_TIMES;\n+\n+        GlobalLockConfig config = GlobalLockConfigHolder.getCurrentGlobalLockConfig();\n+        if (config != null) {\n+            int configInternal = config.getLockRetryInternal();\n+            if (configInternal > 0) {\n+                retryInternal = configInternal;\n+            }", "originalCommit": "0a7fe1537c052e486fb1dccf0a0cb9f2db6407ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIwNjY3OQ==", "url": "https://github.com/seata/seata/pull/2962#discussion_r464206679", "bodyText": "\u6709\u9053\u7406\uff0c\u6211\u4f18\u5316\u4e00\u4e0b", "author": "selfishlover", "createdAt": "2020-08-03T05:52:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIwMjU4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIwMjczMA==", "url": "https://github.com/seata/seata/pull/2962#discussion_r464202730", "bodyText": "\u540c\u4e0a\uff0c\u6539\u52a8\u540eLOCK_RETRY_TIMES\u548cLOCK_RETRY_TIMES \u4f3c\u4e4e\u5c31\u53ef\u4ee5\u5220\u9664", "author": "a364176773", "createdAt": "2020-08-03T05:36:06Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/LockRetryController.java", "diffHunk": "@@ -32,13 +34,31 @@\n     private static int LOCK_RETRY_TIMES =\n         ConfigurationFactory.getInstance().getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_TIMES, DEFAULT_CLIENT_LOCK_RETRY_TIMES);\n \n-    private int lockRetryInternal = LOCK_RETRY_INTERNAL;\n-    private int lockRetryTimes = LOCK_RETRY_TIMES;\n+    private int lockRetryInternal;\n+    private int lockRetryTimes;\n \n     /**\n      * Instantiates a new Lock retry controller.\n      */\n     public LockRetryController() {\n+        int retryInternal = LOCK_RETRY_INTERNAL;\n+        int retryTimes = LOCK_RETRY_TIMES;\n+\n+        GlobalLockConfig config = GlobalLockConfigHolder.getCurrentGlobalLockConfig();\n+        if (config != null) {\n+            int configInternal = config.getLockRetryInternal();\n+            if (configInternal > 0) {\n+                retryInternal = configInternal;\n+            }\n+\n+            int configTimes = config.getLockRetryTimes();\n+            if (configTimes >= 0) {\n+                retryTimes = configTimes;\n+            }", "originalCommit": "0a7fe1537c052e486fb1dccf0a0cb9f2db6407ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7f9aa27783d3fdd6bca82955c731afdb20d1b74a", "url": "https://github.com/seata/seata/commit/7f9aa27783d3fdd6bca82955c731afdb20d1b74a", "message": "optimize: LockRetryController no need to access config center when customized config is available", "committedDate": "2020-08-03T07:05:32Z", "type": "commit"}, {"oid": "ebfc6de45da6541e8bd5d84d60e5cd1525d4cf1d", "url": "https://github.com/seata/seata/commit/ebfc6de45da6541e8bd5d84d60e5cd1525d4cf1d", "message": "Merge branch 'develop' into develop", "committedDate": "2020-08-04T06:16:18Z", "type": "commit"}, {"oid": "2c7fdbaeaad00fee4afc248eef6df7aab660c641", "url": "https://github.com/seata/seata/commit/2c7fdbaeaad00fee4afc248eef6df7aab660c641", "message": "Merge branch 'develop' into develop", "committedDate": "2020-08-06T05:44:09Z", "type": "commit"}, {"oid": "ab7368d3cfb3e38c55362b9c91324b888e461513", "url": "https://github.com/seata/seata/commit/ab7368d3cfb3e38c55362b9c91324b888e461513", "message": "Merge branch 'develop' into develop", "committedDate": "2020-08-10T10:18:40Z", "type": "commit"}, {"oid": "ce935754071de3033eac8c11c825027256a5b475", "url": "https://github.com/seata/seata/commit/ce935754071de3033eac8c11c825027256a5b475", "message": "Merge branch 'develop' into develop", "committedDate": "2020-08-14T03:51:18Z", "type": "commit"}, {"oid": "93f7bcea0793464a8bf031761a63bd36b1618a61", "url": "https://github.com/seata/seata/commit/93f7bcea0793464a8bf031761a63bd36b1618a61", "message": "Merge branch 'develop' into develop", "committedDate": "2020-08-18T01:31:21Z", "type": "commit"}, {"oid": "fbf66604451831d3da4bfa305051bfd4356f8fc7", "url": "https://github.com/seata/seata/commit/fbf66604451831d3da4bfa305051bfd4356f8fc7", "message": "Merge branch 'develop' into develop", "committedDate": "2020-08-19T01:45:38Z", "type": "commit"}, {"oid": "a90881fb5c78f055fd5d8062585e63b1dca3b3a6", "url": "https://github.com/seata/seata/commit/a90881fb5c78f055fd5d8062585e63b1dca3b3a6", "message": "Merge branch 'develop' into develop", "committedDate": "2020-09-01T14:52:41Z", "type": "commit"}, {"oid": "44ef995c05bc4600d706920433522f61bd1b65aa", "url": "https://github.com/seata/seata/commit/44ef995c05bc4600d706920433522f61bd1b65aa", "message": "Merge branch 'develop' into develop", "committedDate": "2020-09-04T03:37:28Z", "type": "commit"}, {"oid": "27e8f58860eeaa170fab79ed56c9c0cab9932c88", "url": "https://github.com/seata/seata/commit/27e8f58860eeaa170fab79ed56c9c0cab9932c88", "message": "Merge branch 'develop' into develop", "committedDate": "2020-09-14T15:20:01Z", "type": "commit"}, {"oid": "383b7c9b107d1d89d683c4f5cdf9cbce59847ef0", "url": "https://github.com/seata/seata/commit/383b7c9b107d1d89d683c4f5cdf9cbce59847ef0", "message": "Merge branch 'develop' into develop", "committedDate": "2020-09-15T02:16:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDc4Mg==", "url": "https://github.com/seata/seata/pull/2962#discussion_r488364782", "bodyText": "Why remove the try catch?", "author": "l81893521", "createdAt": "2020-09-15T03:44:34Z", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "diffHunk": "@@ -147,21 +149,27 @@ public Object invoke(final MethodInvocation methodInvocation) throws Throwable {\n                 if (globalTransactionalAnnotation != null) {\n                     return handleGlobalTransaction(methodInvocation, globalTransactionalAnnotation);\n                 } else if (globalLockAnnotation != null) {\n-                    return handleGlobalLock(methodInvocation);\n+                    return handleGlobalLock(methodInvocation, globalLockAnnotation);\n                 }\n             }\n         }\n         return methodInvocation.proceed();\n     }\n \n-    private Object handleGlobalLock(final MethodInvocation methodInvocation) throws Exception {\n-        return globalLockTemplate.execute(() -> {\n-            try {\n+    private Object handleGlobalLock(final MethodInvocation methodInvocation,\n+        final GlobalLock globalLockAnno) throws Throwable {\n+        return globalLockTemplate.execute(new GlobalLockExecutor() {\n+            @Override\n+            public Object execute() throws Throwable {", "originalCommit": "383b7c9b107d1d89d683c4f5cdf9cbce59847ef0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM3MjU3MQ==", "url": "https://github.com/seata/seata/pull/2962#discussion_r488372571", "bodyText": "Because the old try-catch in fact do nothing, just to wrap a throwable as a RuntimeException, so that it can match the outer method signature(throws Exception~). Here i simplify the method signature(throws Throwable), thus it can save the catch and wrap process. Just like its \"brother\" method(handleGlobalTransaction).", "author": "selfishlover", "createdAt": "2020-09-15T04:15:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDc4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzMjU2MA==", "url": "https://github.com/seata/seata/pull/2962#discussion_r488432560", "bodyText": "ok", "author": "l81893521", "createdAt": "2020-09-15T07:02:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDc4Mg=="}], "type": "inlineReview"}, {"oid": "09a5c5152256fceedd3bb05f0a392475ee985412", "url": "https://github.com/seata/seata/commit/09a5c5152256fceedd3bb05f0a392475ee985412", "message": "Merge branch 'develop' into develop", "committedDate": "2020-09-15T05:34:16Z", "type": "commit"}, {"oid": "289b6d7b29a0ae59c763915f1ebf58d3ca8ef212", "url": "https://github.com/seata/seata/commit/289b6d7b29a0ae59c763915f1ebf58d3ca8ef212", "message": "optimize: add junit test for GlobalLockConfigHolder", "committedDate": "2020-09-15T06:07:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzNjQ4Ng==", "url": "https://github.com/seata/seata/pull/2962#discussion_r488436486", "bodyText": "Keep this constants. Returns it in the get methods, if there is no customized config.", "author": "wangliang181230", "createdAt": "2020-09-15T07:10:28Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/LockRetryController.java", "diffHunk": "@@ -27,18 +30,17 @@\n  * @author sharajava\n  */\n public class LockRetryController {\n-    private static int LOCK_RETRY_INTERNAL =\n-        ConfigurationFactory.getInstance().getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_INTERVAL, DEFAULT_CLIENT_LOCK_RETRY_INTERVAL);\n-    private static int LOCK_RETRY_TIMES =\n-        ConfigurationFactory.getInstance().getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_TIMES, DEFAULT_CLIENT_LOCK_RETRY_TIMES);", "originalCommit": "289b6d7b29a0ae59c763915f1ebf58d3ca8ef212", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzNzkwNw==", "url": "https://github.com/seata/seata/pull/2962#discussion_r488437907", "bodyText": "Recovery LOCK_RETRY_INTERNAL, and returns LOCK_RETRY_INTERNAL.", "author": "wangliang181230", "createdAt": "2020-09-15T07:13:09Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/LockRetryController.java", "diffHunk": "@@ -57,4 +59,32 @@ public void sleep(Exception e) throws LockWaitTimeoutException {\n         } catch (InterruptedException ignore) {\n         }\n     }\n+\n+    private int getLockRetryInternal() {\n+        // get customized config first\n+        GlobalLockConfig config = GlobalLockConfigHolder.getCurrentGlobalLockConfig();\n+        if (config != null) {\n+            int configInternal = config.getLockRetryInternal();\n+            if (configInternal > 0) {\n+                return configInternal;\n+            }\n+        }\n+        // if there is no customized config, use global config instead\n+        Configuration configuration = ConfigurationFactory.getInstance();\n+        return configuration.getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_INTERVAL, DEFAULT_CLIENT_LOCK_RETRY_INTERVAL);", "originalCommit": "289b6d7b29a0ae59c763915f1ebf58d3ca8ef212", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzODA0MA==", "url": "https://github.com/seata/seata/pull/2962#discussion_r488438040", "bodyText": "Recovery LOCK_RETRY_TIMES, and returns LOCK_RETRY_TIMES.", "author": "wangliang181230", "createdAt": "2020-09-15T07:13:23Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/LockRetryController.java", "diffHunk": "@@ -57,4 +59,32 @@ public void sleep(Exception e) throws LockWaitTimeoutException {\n         } catch (InterruptedException ignore) {\n         }\n     }\n+\n+    private int getLockRetryInternal() {\n+        // get customized config first\n+        GlobalLockConfig config = GlobalLockConfigHolder.getCurrentGlobalLockConfig();\n+        if (config != null) {\n+            int configInternal = config.getLockRetryInternal();\n+            if (configInternal > 0) {\n+                return configInternal;\n+            }\n+        }\n+        // if there is no customized config, use global config instead\n+        Configuration configuration = ConfigurationFactory.getInstance();\n+        return configuration.getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_INTERVAL, DEFAULT_CLIENT_LOCK_RETRY_INTERVAL);\n+    }\n+\n+    private int getLockRetryTimes() {\n+        // get customized config first\n+        GlobalLockConfig config = GlobalLockConfigHolder.getCurrentGlobalLockConfig();\n+        if (config != null) {\n+            int configTimes = config.getLockRetryTimes();\n+            if (configTimes >= 0) {\n+                return configTimes;\n+            }\n+        }\n+        // if there is no customized config, use global config instead\n+        Configuration configuration = ConfigurationFactory.getInstance();\n+        return configuration.getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_TIMES, DEFAULT_CLIENT_LOCK_RETRY_TIMES);", "originalCommit": "289b6d7b29a0ae59c763915f1ebf58d3ca8ef212", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "01470ac006e2e8ee6a1524a0001bec0f20a82e23", "url": "https://github.com/seata/seata/commit/01470ac006e2e8ee6a1524a0001bec0f20a82e23", "message": "optimize: faster implement for LockRetryController to access global config(using ConfigurationChangeListener)", "committedDate": "2020-09-16T03:31:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE0MjY1OQ==", "url": "https://github.com/seata/seata/pull/2962#discussion_r489142659", "bodyText": "volatile", "author": "wangliang181230", "createdAt": "2020-09-16T03:41:10Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/LockRetryController.java", "diffHunk": "@@ -84,7 +87,50 @@ private int getLockRetryTimes() {\n             }\n         }\n         // if there is no customized config, use global config instead\n-        Configuration configuration = ConfigurationFactory.getInstance();\n-        return configuration.getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_TIMES, DEFAULT_CLIENT_LOCK_RETRY_TIMES);\n+        return globalConfig.getGlobalLockRetryTimes();\n+    }\n+\n+    static class GlobalConfig implements ConfigurationChangeListener {\n+\n+        private int globalLockRetryInternal;\n+\n+        private int globalLockRetryTimes;", "originalCommit": "01470ac006e2e8ee6a1524a0001bec0f20a82e23", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE0MjgxOA==", "url": "https://github.com/seata/seata/pull/2962#discussion_r489142818", "bodyText": "use the static method NumberUtils.toInt", "author": "wangliang181230", "createdAt": "2020-09-16T03:41:52Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/LockRetryController.java", "diffHunk": "@@ -84,7 +87,50 @@ private int getLockRetryTimes() {\n             }\n         }\n         // if there is no customized config, use global config instead\n-        Configuration configuration = ConfigurationFactory.getInstance();\n-        return configuration.getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_TIMES, DEFAULT_CLIENT_LOCK_RETRY_TIMES);\n+        return globalConfig.getGlobalLockRetryTimes();\n+    }\n+\n+    static class GlobalConfig implements ConfigurationChangeListener {\n+\n+        private int globalLockRetryInternal;\n+\n+        private int globalLockRetryTimes;\n+\n+        private final int defaultRetryInternal = DefaultValues.DEFAULT_CLIENT_LOCK_RETRY_INTERVAL;\n+        private final int defaultRetryTimes = DefaultValues.DEFAULT_CLIENT_LOCK_RETRY_TIMES;\n+\n+        public GlobalConfig() {\n+            Configuration configuration = ConfigurationFactory.getInstance();\n+            globalLockRetryInternal = configuration.getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_INTERVAL, defaultRetryInternal);\n+            globalLockRetryTimes = configuration.getInt(ConfigurationKeys.CLIENT_LOCK_RETRY_TIMES, defaultRetryTimes);\n+        }\n+\n+        @Override\n+        public void onChangeEvent(ConfigurationChangeEvent event) {\n+            String dataId = event.getDataId();\n+            String newValue = event.getNewValue();\n+            if (ConfigurationKeys.CLIENT_LOCK_RETRY_INTERVAL.equals(dataId)) {\n+                globalLockRetryInternal = parseInt(newValue, defaultRetryInternal);\n+            }\n+            if (ConfigurationKeys.CLIENT_LOCK_RETRY_TIMES.equals(dataId)) {\n+                globalLockRetryTimes = parseInt(newValue, defaultRetryTimes);\n+            }\n+        }\n+\n+        private int parseInt(String value, int fallback) {", "originalCommit": "01470ac006e2e8ee6a1524a0001bec0f20a82e23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE1MzgwOA==", "url": "https://github.com/seata/seata/pull/2962#discussion_r489153808", "bodyText": "ok, i see it.", "author": "selfishlover", "createdAt": "2020-09-16T04:26:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE0MjgxOA=="}], "type": "inlineReview"}, {"oid": "4ea0701d89a16dec82d6a0de6fca6a71403f9e5d", "url": "https://github.com/seata/seata/commit/4ea0701d89a16dec82d6a0de6fca6a71403f9e5d", "message": "optimize: fix style", "committedDate": "2020-09-16T04:14:06Z", "type": "commit"}, {"oid": "064c27304b3a9ce3b34c8d7a4f05faa78d199671", "url": "https://github.com/seata/seata/commit/064c27304b3a9ce3b34c8d7a4f05faa78d199671", "message": "optimize: add volatile flag and use NumberUtils method instead of \"repeating it\" myself", "committedDate": "2020-09-16T04:24:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE1NjczMg==", "url": "https://github.com/seata/seata/pull/2962#discussion_r489156732", "bodyText": "\u5e38\u91cf\u7684\u53d8\u91cf\u540d\u7528\u5927\u5199\u5c31\u597d\uff0c\u4e0d\u8981\u628afinal\u62ff\u6389\u3002", "author": "wangliang181230", "createdAt": "2020-09-16T04:38:07Z", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/LockRetryController.java", "diffHunk": "@@ -28,7 +32,7 @@\n  */\n public class LockRetryController {\n \n-    private static final GlobalConfig globalConfig = new GlobalConfig();\n+    private static GlobalConfig globalConfig = new GlobalConfig();", "originalCommit": "4ea0701d89a16dec82d6a0de6fca6a71403f9e5d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2NDE0Ng==", "url": "https://github.com/seata/seata/pull/2962#discussion_r489164146", "bodyText": "\u95ee\u9898\u4e0d\u5927\uff0c\u53cd\u6b63\u522b\u7684\u5730\u65b9\u4e5f\u6539\u4e0d\u4e86\u5b83", "author": "selfishlover", "createdAt": "2020-09-16T05:01:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE1NjczMg=="}], "type": "inlineReview"}, {"oid": "fa10f27264dea8925f0e1699299f26e06dc0d857", "url": "https://github.com/seata/seata/commit/fa10f27264dea8925f0e1699299f26e06dc0d857", "message": "Merge branch 'develop' into develop", "committedDate": "2020-09-28T09:58:34Z", "type": "commit"}, {"oid": "ba8b789169e623d87adda478643dd6a6f319b1e1", "url": "https://github.com/seata/seata/commit/ba8b789169e623d87adda478643dd6a6f319b1e1", "message": "Merge remote-tracking branch 'upstream/develop' into develop\n\n# Conflicts:\n#\tspring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java\n#\ttm/src/main/java/io/seata/tm/api/TransactionalTemplate.java", "committedDate": "2020-10-12T06:57:33Z", "type": "commit"}, {"oid": "3ca7af7deaf9b4de656512d26050ae216be7bc1b", "url": "https://github.com/seata/seata/commit/3ca7af7deaf9b4de656512d26050ae216be7bc1b", "message": "optimize: fix merge conflict", "committedDate": "2020-10-12T07:16:01Z", "type": "commit"}, {"oid": "4791b2244257da9ddc15684bad36d5799043fdb5", "url": "https://github.com/seata/seata/commit/4791b2244257da9ddc15684bad36d5799043fdb5", "message": "optimize: adjust LockRetryController instantiate time", "committedDate": "2020-10-12T08:55:42Z", "type": "commit"}, {"oid": "8bb3078a812517ab89ce77ad73fb08285215e27d", "url": "https://github.com/seata/seata/commit/8bb3078a812517ab89ce77ad73fb08285215e27d", "message": "optimize: add final", "committedDate": "2020-10-12T09:08:42Z", "type": "commit"}, {"oid": "851ea24a06564a9e2765c9738914b14ede1bee1e", "url": "https://github.com/seata/seata/commit/851ea24a06564a9e2765c9738914b14ede1bee1e", "message": "optimize: FIX style", "committedDate": "2020-10-12T09:12:34Z", "type": "commit"}, {"oid": "f5cbe053e120d3eb3e9772df3db51409a2be282c", "url": "https://github.com/seata/seata/commit/f5cbe053e120d3eb3e9772df3db51409a2be282c", "message": "optimize: FIX style", "committedDate": "2020-10-12T09:23:53Z", "type": "commit"}, {"oid": "07f39dfbd4b7bccd28bf45787ad136964fbfcf43", "url": "https://github.com/seata/seata/commit/07f39dfbd4b7bccd28bf45787ad136964fbfcf43", "message": "optimize: FIX git account", "committedDate": "2020-10-12T10:11:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI3OTkyOA==", "url": "https://github.com/seata/seata/pull/2962#discussion_r519279928", "bodyText": "lockRetryInternal  \u662f\u4e0d\u662f\u5e94\u8be5\u53eb\u505a lockRetryInterval \u3002  \u662f\u62fc\u9519\u4e86\uff0c \u8fd8\u662f\u672c\u6765\u5c31\u662f\u8fd9\u4e2a\u610f\u601d?", "author": "ls9527", "createdAt": "2020-11-08T07:56:14Z", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactional.java", "diffHunk": "@@ -83,4 +83,20 @@\n      * @return\n      */\n     Propagation propagation() default Propagation.REQUIRED;\n+\n+    /**\n+     * customized global lock retry internal(unit: ms)\n+     * you may use this to override global config of \"client.rm.lock.retryInterval\"\n+     * note: 0 or negative number will take no effect(which mean fall back to global config)\n+     * @return\n+     */\n+    int lockRetryInternal() default 0;", "originalCommit": "07f39dfbd4b7bccd28bf45787ad136964fbfcf43", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}