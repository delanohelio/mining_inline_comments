{"pr_number": 3371, "pr_title": "optimize: add applicationId for metric", "pr_createdAt": "2020-12-14T06:43:07Z", "pr_url": "https://github.com/seata/seata/pull/3371", "timeline": [{"oid": "53350f4d241eee509f4f1804ffa1a8d9ef3c1d86", "url": "https://github.com/seata/seata/commit/53350f4d241eee509f4f1804ffa1a8d9ef3c1d86", "message": "fix #3370 add appId in metric", "committedDate": "2020-12-14T06:41:32Z", "type": "commit"}, {"oid": "a51ecaf3f77ad775599c62bde2ee7454452bfbeb", "url": "https://github.com/seata/seata/commit/a51ecaf3f77ad775599c62bde2ee7454452bfbeb", "message": "fix #3370 fix metric tests", "committedDate": "2020-12-14T07:05:13Z", "type": "commit"}, {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94", "url": "https://github.com/seata/seata/commit/28c81ab1291c8ad3c155ca40f0231aa8fe2afa94", "message": "fix #3371 code format", "committedDate": "2020-12-14T07:13:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxNzY3Ng==", "url": "https://github.com/seata/seata/pull/3371#discussion_r542317676", "bodyText": "may applicationId better?", "author": "zhengyangyong", "createdAt": "2020-12-14T11:37:15Z", "path": "core/src/main/java/io/seata/core/event/GlobalTransactionEvent.java", "diffHunk": "@@ -44,6 +44,8 @@\n      */\n     private final String name;\n \n+    private String appId;", "originalCommit": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxODY5Mw==", "url": "https://github.com/seata/seata/pull/3371#discussion_r542318693", "bodyText": "may applicationId better?", "author": "zhengyangyong", "createdAt": "2020-12-14T11:38:58Z", "path": "metrics/seata-metrics-api/src/main/java/io/seata/metrics/IdConstants.java", "diffHunk": "@@ -23,6 +23,8 @@\n public interface IdConstants {\n     String SEATA_TRANSACTION = \"seata.transaction\";\n \n+    String APP_ID_KEY = \"appId\";", "originalCommit": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA5Mjc2OA==", "url": "https://github.com/seata/seata/pull/3371#discussion_r551092768", "bodyText": "\u5df2\u6539\u6210applicationId", "author": "spilledyear", "createdAt": "2021-01-04T02:34:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxODY5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxOTIwOQ==", "url": "https://github.com/seata/seata/pull/3371#discussion_r542319209", "bodyText": "why we need an empty app id ,default value ?", "author": "zhengyangyong", "createdAt": "2020-12-14T11:39:52Z", "path": "server/src/main/java/io/seata/server/metrics/MetricsSubscriber.java", "diffHunk": "@@ -35,6 +38,8 @@\n \n     private final Map<GlobalStatus, Consumer<GlobalTransactionEvent>> consumers;\n \n+    private static final String EMPTY_APP_ID = \"EMPTY_APP\";", "originalCommit": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAxMTAwMA==", "url": "https://github.com/seata/seata/pull/3371#discussion_r543011000", "bodyText": "\u5c31\u662f\u60f3\u7ed9\u4e2a\u9ed8\u8ba4\u503c", "author": "spilledyear", "createdAt": "2020-12-15T03:07:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxOTIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEyNjQ4MQ==", "url": "https://github.com/seata/seata/pull/3371#discussion_r551126481", "bodyText": "\u5728Prometheus\u4e2d\uff0cMetrics\u662f\u4e00\u4e2a\u591a\u7ef4\u6982\u5ff5\uff0cnull\u548c\"EMPTY_APP\"\uff08\u9ed8\u8ba4\u503c\uff09\u8868\u73b0\u51fa\u6765\u7684\u542b\u4e49\u662f\u4e0d\u4e00\u6837\u7684\uff1a\n\n\u5982\u679c\u6709\u4e00\u4e2aAPP\u7684ID\u5c31\u53eb\"EMPTY_APP\"\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u5462\uff1f\u90a3\u4e48\u5c31\u51b2\u7a81\u4e86\uff1b\nMetrics\u7ec8\u7a76\u4f1a\u88ab\u6c47\u805a\u5728\u4e00\u4e2a\u4e0a\u5c42\u7684\u76d1\u63a7\u7cfb\u7edf\u4e2d\uff0c\u522b\u7684\u7cfb\u7edf\u4e2d\u7684null\u4e0d\u4e00\u5b9a\u89e3\u91ca\u4e3a\u7b49\u4ef7\u4e8e\"EMPTY_APP\"\uff0c\u4e5f\u8bb8\u4ed6\u4eec\u505a\u7684\u4e0d\u597d\u53ef\u80fd\u53eb\u201cDEFAULT_APP\u201d\u53e6\u5f53\u522b\u8bba\uff0c\u4f46\u662fnull\u662f\u6ca1\u6709\u4e8c\u4e49\u6027\u7684\u3002", "author": "zhengyangyong", "createdAt": "2021-01-04T05:40:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxOTIwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDQ1Mw==", "url": "https://github.com/seata/seata/pull/3371#discussion_r542320453", "bodyText": "if there is no app id ,maybe there is no need to generate this tag (app id tag)", "author": "zhengyangyong", "createdAt": "2020-12-14T11:42:05Z", "path": "server/src/main/java/io/seata/server/metrics/MetricsSubscriber.java", "diffHunk": "@@ -49,44 +54,59 @@ public MetricsSubscriber(Registry registry) {\n     }\n \n     private void processGlobalStatusBegin(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).increase(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n     }\n \n     private void processGlobalStatusCommitted(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n-        registry.getCounter(MeterIdConstants.COUNTER_COMMITTED).increase(1);\n-        registry.getSummary(MeterIdConstants.SUMMARY_COMMITTED).increase(1);\n-        registry.getTimer(MeterIdConstants.TIMER_COMMITTED).record(event.getEndTime() - event.getBeginTime(),\n-            TimeUnit.MILLISECONDS);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getSummary(MeterIdConstants.SUMMARY_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getTimer(MeterIdConstants.TIMER_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .record(event.getEndTime() - event.getBeginTime(), TimeUnit.MILLISECONDS);\n     }\n \n     private void processGlobalStatusRollbacked(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n-        registry.getCounter(MeterIdConstants.COUNTER_ROLLBACKED).increase(1);\n-        registry.getSummary(MeterIdConstants.SUMMARY_ROLLBACKED).increase(1);\n-        registry.getTimer(MeterIdConstants.TIMER_ROLLBACK).record(event.getEndTime() - event.getBeginTime(),\n-            TimeUnit.MILLISECONDS);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ROLLBACKED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getSummary(MeterIdConstants.SUMMARY_ROLLBACKED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getTimer(MeterIdConstants.TIMER_ROLLBACK.withTag(APP_ID_KEY, event.getAppId()))\n+                .record(event.getEndTime() - event.getBeginTime(), TimeUnit.MILLISECONDS);\n     }\n \n     private void processGlobalStatusCommitFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusRollbackFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusTimeoutRollbacked(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusTimeoutRollbackFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     @Subscribe\n     public void recordGlobalTransactionEventForMetrics(GlobalTransactionEvent event) {\n         if (registry != null && consumers.containsKey(event.getStatus())) {\n+            if (StringUtils.isEmpty(event.getAppId())) {\n+                event.setAppId(EMPTY_APP_ID);", "originalCommit": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAxMTQ2NA==", "url": "https://github.com/seata/seata/pull/3371#discussion_r543011464", "bodyText": "\u4e3a\u4ec0\u4e48\u4e0d\u662f \u6ca1\u6709appId, \u5c31\u4f7f\u7528\u9ed8\u8ba4\u7684appId\u5462\uff1f\u62c5\u5fc3\u6027\u80fd\u5417\uff1f", "author": "spilledyear", "createdAt": "2020-12-15T03:08:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDQ1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDcyOA==", "url": "https://github.com/seata/seata/pull/3371#discussion_r542320728", "bodyText": "same above,if there is no app id ,maybe there is no need to generate this tag (app id tag)", "author": "zhengyangyong", "createdAt": "2020-12-14T11:42:30Z", "path": "server/src/test/java/io/seata/server/coordinator/DefaultCoordinatorMetricsTest.java", "diffHunk": "@@ -63,7 +63,7 @@ public void test() throws IOException, TransactionException, InterruptedExceptio\n \n             Assertions.assertEquals(1, measurements.size());\n             Assertions.assertEquals(1,\n-                    measurements.get(\"seata.transaction(meter=counter,role=tc,status=active)\").getValue(), 0);\n+                    measurements.get(\"seata.transaction(appId=EMPTY_APP,meter=counter,role=tc,status=active)\").getValue(), 0);", "originalCommit": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d7fa4a365b638425064255a29a1a8823c1be60d9", "url": "https://github.com/seata/seata/commit/d7fa4a365b638425064255a29a1a8823c1be60d9", "message": "Merge remote-tracking branch 'ups/develop' into metric-appid", "committedDate": "2021-01-03T04:27:07Z", "type": "commit"}, {"oid": "ff8b62533619896c3a7fe55c91e7d5fbd48da8af", "url": "https://github.com/seata/seata/commit/ff8b62533619896c3a7fe55c91e7d5fbd48da8af", "message": "feature #3371: rename appId to applicationId", "committedDate": "2021-01-04T02:41:28Z", "type": "commit"}, {"oid": "8e0a2e3367d69444042f95566758ea318eda5309", "url": "https://github.com/seata/seata/commit/8e0a2e3367d69444042f95566758ea318eda5309", "message": "feature #3371: remove default value for applicationId", "committedDate": "2021-01-04T07:08:49Z", "type": "commit"}, {"oid": "6505fcc580d004681e5ba2b362aa91e96c6be0f1", "url": "https://github.com/seata/seata/commit/6505fcc580d004681e5ba2b362aa91e96c6be0f1", "message": "Merge remote-tracking branch 'ups/develop' into metric-appid", "committedDate": "2021-01-10T04:42:58Z", "type": "commit"}, {"oid": "462ea633d4c06ff0318166c134f7b12d7c272566", "url": "https://github.com/seata/seata/commit/462ea633d4c06ff0318166c134f7b12d7c272566", "message": "feature #3371: remove unused import", "committedDate": "2021-01-10T07:29:34Z", "type": "commit"}]}