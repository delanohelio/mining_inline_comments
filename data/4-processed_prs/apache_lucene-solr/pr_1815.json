{"pr_number": 1815, "pr_title": "SOLR-14151: Bug fixes", "pr_createdAt": "2020-09-01T07:43:53Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1815", "timeline": [{"oid": "7067efe5cda51f6a730369a563718e398abe8ab2", "url": "https://github.com/apache/lucene-solr/commit/7067efe5cda51f6a730369a563718e398abe8ab2", "message": "SOLR-14151: Bug fix . all tests pass", "committedDate": "2020-09-01T07:35:28Z", "type": "commit"}, {"oid": "fc02c9488b92d2beba1aacdc5c45bcb4d60262e7", "url": "https://github.com/apache/lucene-solr/commit/fc02c9488b92d2beba1aacdc5c45bcb4d60262e7", "message": "SOLR-14151: ununsed import", "committedDate": "2020-09-01T07:36:57Z", "type": "commit"}, {"oid": "f502a2f71dc8209d9edf6f4d74bcdf7fd2e80659", "url": "https://github.com/apache/lucene-solr/commit/f502a2f71dc8209d9edf6f4d74bcdf7fd2e80659", "message": "SOLR-14151: ununsed import", "committedDate": "2020-09-01T07:40:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIzODk1NA==", "url": "https://github.com/apache/lucene-solr/pull/1815#discussion_r483238954", "bodyText": "mind putting the space after the if (here and in the rest of your changes)? that's the standard across the rest of the code AFAIK", "author": "tflobbe", "createdAt": "2020-09-03T20:33:56Z", "path": "solr/core/src/java/org/apache/solr/core/SolrCores.java", "diffHunk": "@@ -282,15 +283,19 @@ protected SolrCore remove(String name) {\n       return ret;\n     }\n   }\n+  SolrCore  getCoreFromAnyList(String name, boolean incRefCount) {\n+    return getCoreFromAnyList(name, incRefCount, null);\n+  }\n \n   /* If you don't increment the reference count, someone could close the core before you use it. */\n-  SolrCore  getCoreFromAnyList(String name, boolean incRefCount) {\n+  SolrCore  getCoreFromAnyList(String name, boolean incRefCount, UUID coreId) {\n     synchronized (modifyLock) {\n       SolrCore core = cores.get(name);\n \n       if (core == null && getTransientCacheHandler() != null) {\n         core = getTransientCacheHandler().getCore(name);\n       }\n+      if(core != null && coreId != null && coreId != core.uniqueId) return null;", "originalCommit": "f502a2f71dc8209d9edf6f4d74bcdf7fd2e80659", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI0MTQxOQ==", "url": "https://github.com/apache/lucene-solr/pull/1815#discussion_r483241419", "bodyText": "Why is this method added? you don't seem to be doing any async reloads.", "author": "tflobbe", "createdAt": "2020-09-03T20:39:20Z", "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -1582,6 +1582,13 @@ private CoreDescriptor reloadCoreDescriptor(CoreDescriptor oldDesc) {\n   public void reload(String name) {\n     reload(name, null);\n   }\n+  public void reload(String name, UUID coreId, boolean async) {\n+    if(async) {\n+      runAsync(() -> reload(name, coreId));\n+    } else {\n+      reload(name, coreId);\n+    }\n+  }", "originalCommit": "f502a2f71dc8209d9edf6f4d74bcdf7fd2e80659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU2MjU1OQ==", "url": "https://github.com/apache/lucene-solr/pull/1815#discussion_r483562559", "bodyText": "It's a generic method. I thought I would use it. But there are bugs in our core reloading. So, if I use asyn reload, some tests  fail", "author": "noblepaul", "createdAt": "2020-09-04T11:39:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI0MTQxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI1MTk0Mg==", "url": "https://github.com/apache/lucene-solr/pull/1815#discussion_r483251942", "bodyText": "Does this mean that every call to configSet.getIndexSchema() will create a new schema object (if shared schema is not enabled)?", "author": "tflobbe", "createdAt": "2020-09-03T21:01:28Z", "path": "solr/core/src/java/org/apache/solr/core/ConfigSetService.java", "diffHunk": "@@ -81,8 +81,7 @@ public final ConfigSet loadConfigSet(CoreDescriptor dcore) {\n               ) ? false: true;\n \n       SolrConfig solrConfig = createSolrConfig(dcore, coreLoader, trusted);\n-      IndexSchema indexSchema = createIndexSchema(dcore, solrConfig, false);\n-      return new ConfigSet(configSetName(dcore), solrConfig, force -> indexSchema, properties, trusted);\n+      return new ConfigSet(configSetName(dcore), solrConfig, force -> createIndexSchema(dcore, solrConfig, force), properties, trusted);", "originalCommit": "f502a2f71dc8209d9edf6f4d74bcdf7fd2e80659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU2MTkxOQ==", "url": "https://github.com/apache/lucene-solr/pull/1815#discussion_r483561919", "bodyText": "Yes.", "author": "noblepaul", "createdAt": "2020-09-04T11:38:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI1MTk0Mg=="}], "type": "inlineReview"}]}