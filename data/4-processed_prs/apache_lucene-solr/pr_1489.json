{"pr_number": 1489, "pr_title": "Lucene-9336: RegEx querying - add support for Java\u2019s predefined character classes like \\d for digits", "pr_createdAt": "2020-05-06T10:38:38Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1489", "timeline": [{"oid": "161affefb79c96fa87aa337a06826490e9462e49", "url": "https://github.com/apache/lucene-solr/commit/161affefb79c96fa87aa337a06826490e9462e49", "message": "Add support for Java\u2019s predefined character classes like \\d for digits", "committedDate": "2020-05-06T11:14:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYzMzI0OA==", "url": "https://github.com/apache/lucene-solr/pull/1489#discussion_r422633248", "bodyText": "I think these tests should be in TestRegExp rather than in TestRegexpQuery?", "author": "romseygeek", "createdAt": "2020-05-10T11:45:24Z", "path": "lucene/core/src/test/org/apache/lucene/search/TestRegexpQuery.java", "diffHunk": "@@ -115,6 +145,128 @@ public Automaton getAutomaton(String name) {\n     assertEquals(1, searcher.search(query, 5).totalHits.value);\n   }\n   \n+  public void testCoreJavaParity() {", "originalCommit": "f7bacdad4b204d393eba15525897cb40be0836d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5OTU2Mw==", "url": "https://github.com/apache/lucene-solr/pull/1489#discussion_r423999563", "bodyText": "Can you add the javadocs for this in the class definition ?", "author": "jimczi", "createdAt": "2020-05-12T20:03:00Z", "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "diffHunk": "@@ -1101,10 +1116,51 @@ final RegExp parseCharClasses() throws IllegalArgumentException {\n   }\n   \n   final RegExp parseCharClass() throws IllegalArgumentException {\n+    RegExp predefinedExp = matchPredefinedCharacterClass();\n+    if (predefinedExp != null) {\n+      return predefinedExp;\n+    }\n+        \n     int c = parseCharExp();\n     if (match('-')) return makeCharRange(c, parseCharExp());\n     else return makeChar(c);\n   }\n+\n+  RegExp expandPredefined() {\n+    //See https://docs.oracle.com/javase/tutorial/essential/regex/pre_char_classes.html", "originalCommit": "693ae6ce762877f28097e5c2cc89fcb4053a5ba4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMDA5Nw==", "url": "https://github.com/apache/lucene-solr/pull/1489#discussion_r424000097", "bodyText": "Maybe rename to REGEXP_PRE_CLASS ?", "author": "jimczi", "createdAt": "2020-05-12T20:04:00Z", "path": "lucene/core/src/java/org/apache/lucene/util/automaton/RegExp.java", "diffHunk": "@@ -317,7 +317,8 @@\n public class RegExp {\n   \n   enum Kind {\n-    REGEXP_UNION, REGEXP_CONCATENATION, REGEXP_INTERSECTION, REGEXP_OPTIONAL, REGEXP_REPEAT, REGEXP_REPEAT_MIN, REGEXP_REPEAT_MINMAX, REGEXP_COMPLEMENT, REGEXP_CHAR, REGEXP_CHAR_RANGE, REGEXP_ANYCHAR, REGEXP_EMPTY, REGEXP_STRING, REGEXP_ANYSTRING, REGEXP_AUTOMATON, REGEXP_INTERVAL\n+    REGEXP_UNION, REGEXP_CONCATENATION, REGEXP_INTERSECTION, REGEXP_OPTIONAL, REGEXP_REPEAT, REGEXP_REPEAT_MIN, REGEXP_REPEAT_MINMAX, REGEXP_COMPLEMENT, REGEXP_CHAR, REGEXP_CHAR_RANGE, REGEXP_ANYCHAR, REGEXP_EMPTY, REGEXP_STRING, REGEXP_ANYSTRING, REGEXP_AUTOMATON, REGEXP_INTERVAL,\n+    REGEXP_SHORTHAND", "originalCommit": "693ae6ce762877f28097e5c2cc89fcb4053a5ba4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "97618754e50e2deacfd88cc25a1de3a0d152a1a9", "url": "https://github.com/apache/lucene-solr/commit/97618754e50e2deacfd88cc25a1de3a0d152a1a9", "message": "Added javadocs, renamed Kind type", "committedDate": "2020-05-13T15:10:04Z", "type": "forcePushed"}, {"oid": "4064c0987eb1bf34a89fb5a16d7e824f3d432cdc", "url": "https://github.com/apache/lucene-solr/commit/4064c0987eb1bf34a89fb5a16d7e824f3d432cdc", "message": "Add support for Java\u2019s predefined character classes like \\d for digits", "committedDate": "2020-05-14T08:45:18Z", "type": "commit"}, {"oid": "3e9206f09a5d9d52cf31428dbf44a6d1f78b4d4e", "url": "https://github.com/apache/lucene-solr/commit/3e9206f09a5d9d52cf31428dbf44a6d1f78b4d4e", "message": "Added randomised test for parity with Java\u2019s Pattern class.", "committedDate": "2020-05-14T08:45:18Z", "type": "commit"}, {"oid": "78db0e6e22cf51b7364bfb8922cf959220e5a252", "url": "https://github.com/apache/lucene-solr/commit/78db0e6e22cf51b7364bfb8922cf959220e5a252", "message": "Moved testCoreJavaParity from TestRegExpQuery to TestRegExp", "committedDate": "2020-05-14T08:45:18Z", "type": "commit"}, {"oid": "2145755870663667ae95e51f2eade5cea1994fd5", "url": "https://github.com/apache/lucene-solr/commit/2145755870663667ae95e51f2eade5cea1994fd5", "message": "Added javadocs, renamed Kind type", "committedDate": "2020-05-14T08:45:18Z", "type": "commit"}, {"oid": "2145755870663667ae95e51f2eade5cea1994fd5", "url": "https://github.com/apache/lucene-solr/commit/2145755870663667ae95e51f2eade5cea1994fd5", "message": "Added javadocs, renamed Kind type", "committedDate": "2020-05-14T08:45:18Z", "type": "forcePushed"}]}