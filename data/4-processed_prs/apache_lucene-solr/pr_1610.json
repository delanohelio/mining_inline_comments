{"pr_number": 1610, "pr_title": "LUCENE-9384: Backport for field sort optimization", "pr_createdAt": "2020-06-24T15:37:54Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1610", "timeline": [{"oid": "466d3db77149374fb232a7b5f882eee051ca7c90", "url": "https://github.com/apache/lucene-solr/commit/466d3db77149374fb232a7b5f882eee051ca7c90", "message": "LUCENE-9384: Backport for field sort optimization\n\nBackport for: LUCENE-9280: Collectors to skip noncompetitive documents (#1351)\n\nSimilar how scorers can update their iterators to skip non-competitive\ndocuments, collectors and comparators should also provide and update\niterators that allow them to skip non-competive documents.\n\nTo enable sort optimization for numeric sort fields,\nthe following needs to be done:\n1) the field should be indexed with both doc_values and points, that\nmust have the same field name and same data\n2) SortField#setCanSkipNonCompetitiveDocs must be set\n3) totalHitsThreshold should not be set to max value.", "committedDate": "2020-06-24T14:25:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ2MDQ3NA==", "url": "https://github.com/apache/lucene-solr/pull/1610#discussion_r445460474", "bodyText": "I wonder if we should make the option less ambiguous by naming it something like setCanUsePoints or something along those lines ? I am afraid that this could be misleading if we set this option on a sort field that use the _score or a keyword field for instance. We should maybe at least validate that the field is not null ?", "author": "jimczi", "createdAt": "2020-06-25T10:27:12Z", "path": "lucene/core/src/java/org/apache/lucene/search/SortField.java", "diffHunk": "@@ -394,6 +399,21 @@ public String toString() {\n     return buffer.toString();\n   }\n \n+\n+  /**\n+   * For numeric sort fields, setting this field, indicates that\n+   * the same numeric data has been indexed with two fields: doc values and points and\n+   * that these fields have the same name.\n+   * This allows to use sort optimization and skip non-competitive documents.\n+   */\n+  public void setSkipNonCompetitiveDocs() {", "originalCommit": "466d3db77149374fb232a7b5f882eee051ca7c90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTczNzAyMQ==", "url": "https://github.com/apache/lucene-solr/pull/1610#discussion_r445737021", "bodyText": "How about setCanUsePointsForSort? I am also fine with setCanUsePoints.", "author": "mayya-sharipova", "createdAt": "2020-06-25T17:55:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ2MDQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzNDg4NA==", "url": "https://github.com/apache/lucene-solr/pull/1610#discussion_r450234884", "bodyText": "@jpountz  Do you have suggestions how we should expose sort optimization in 8.x? Are you ok with a proposal to have  a method for SortField::setCanUsePointsForSort that when set true indicates that the same data is used for indexing points and docValues?", "author": "mayya-sharipova", "createdAt": "2020-07-06T13:51:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ2MDQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5OTgwNw==", "url": "https://github.com/apache/lucene-solr/pull/1610#discussion_r454999807", "bodyText": "IMO setCanUsePoints is good enough since this is a \"SortField\" so it should be obvious that this is for sorting?", "author": "jpountz", "createdAt": "2020-07-15T12:04:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ2MDQ3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAwOTE5Ng==", "url": "https://github.com/apache/lucene-solr/pull/1610#discussion_r455009196", "bodyText": "I wonder if we should actually take it into account for equals/hashcode as this could disable index sorting optimizations, which check for equality of the index-time and search-time SortField instances.", "author": "jpountz", "createdAt": "2020-07-15T12:21:54Z", "path": "lucene/core/src/java/org/apache/lucene/search/SortField.java", "diffHunk": "@@ -408,6 +428,7 @@ public boolean equals(Object o) {\n       && other.reverse == this.reverse\n       && Objects.equals(this.comparatorSource, other.comparatorSource)\n       && Objects.equals(this.missingValue, other.missingValue)\n+      && other.skipNonCompetitiveDocs == this.skipNonCompetitiveDocs", "originalCommit": "466d3db77149374fb232a7b5f882eee051ca7c90", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyMTE0OQ==", "url": "https://github.com/apache/lucene-solr/pull/1610#discussion_r455321149", "bodyText": "@jpountz Thank you for your feedback. Alternatively we can add setCanUsePoints parameter to Sort object instead of SortField?  What do you think?", "author": "mayya-sharipova", "createdAt": "2020-07-15T20:26:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAwOTE5Ng=="}], "type": "inlineReview"}, {"oid": "6158872bc2c0442d6ff64e40db463be266873959", "url": "https://github.com/apache/lucene-solr/commit/6158872bc2c0442d6ff64e40db463be266873959", "message": "Address feedback", "committedDate": "2020-07-23T13:14:47Z", "type": "commit"}, {"oid": "6158872bc2c0442d6ff64e40db463be266873959", "url": "https://github.com/apache/lucene-solr/commit/6158872bc2c0442d6ff64e40db463be266873959", "message": "Address feedback", "committedDate": "2020-07-23T13:14:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1NjA4OQ==", "url": "https://github.com/apache/lucene-solr/pull/1610#discussion_r463156089", "bodyText": "Can you add a comment to say that we're not taking it into account on purpose? I foresee that someone will file a PR to add it after running a code analysis tool that would complain that not all fields are taken into account for equals otherwise.", "author": "jpountz", "createdAt": "2020-07-30T17:27:04Z", "path": "lucene/core/src/java/org/apache/lucene/search/SortField.java", "diffHunk": "@@ -428,7 +428,6 @@ public boolean equals(Object o) {\n       && other.reverse == this.reverse\n       && Objects.equals(this.comparatorSource, other.comparatorSource)\n       && Objects.equals(this.missingValue, other.missingValue)\n-      && other.skipNonCompetitiveDocs == this.skipNonCompetitiveDocs", "originalCommit": "6158872bc2c0442d6ff64e40db463be266873959", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b7b4e5f855c674fbf4e99d3ba1be6035a58532fd", "url": "https://github.com/apache/lucene-solr/commit/b7b4e5f855c674fbf4e99d3ba1be6035a58532fd", "message": "Explain why canUsePoints is not part of equal", "committedDate": "2020-07-31T18:09:47Z", "type": "commit"}]}