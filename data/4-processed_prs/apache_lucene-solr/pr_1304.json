{"pr_number": 1304, "pr_title": "LUCENE-9242: generate javadocs by calling Ant javadoc task", "pr_createdAt": "2020-03-01T19:47:13Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1304", "timeline": [{"oid": "c331bff511afbbd8f17ac4442181eaf4a11de84b", "url": "https://github.com/apache/lucene-solr/commit/c331bff511afbbd8f17ac4442181eaf4a11de84b", "message": "LUCENE-9242: generate javadocs by calling Ant javadoc task", "committedDate": "2020-03-01T19:40:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3MjM2Nw==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386872367", "bodyText": "ext should be moved under plugins.withType so that these properties are only defined for projects which actually use them.", "author": "dweiss", "createdAt": "2020-03-03T08:50:58Z", "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {", "originalCommit": "c331bff511afbbd8f17ac4442181eaf4a11de84b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjEyMA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389316120", "bodyText": "moved ext{...} under plugins.withType().", "author": "mocobeta", "createdAt": "2020-03-07T22:15:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3MjM2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3MzE5MA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386873190", "bodyText": "I really don't like the idea of common build output folders. Keeping build isolated to each project makes the reasoning of what ends up where so much easier.", "author": "dweiss", "createdAt": "2020-03-03T08:52:33Z", "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")", "originalCommit": "c331bff511afbbd8f17ac4442181eaf4a11de84b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxODk4MA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389318980", "bodyText": "yes we will be able to fix this problem in a follow-up issue...", "author": "mocobeta", "createdAt": "2020-03-07T23:09:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3MzE5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NDA5Ng==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386874096", "bodyText": "move srcDirs into doFirst; the difference is when this code is evaluated (in case something changes sourceSets during evaluation doFirst closure would have a different view).", "author": "dweiss", "createdAt": "2020-03-03T08:54:20Z", "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }", "originalCommit": "c331bff511afbbd8f17ac4442181eaf4a11de84b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjIyNA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389316224", "bodyText": "moved def srcDirs = ... into doFirst.", "author": "mocobeta", "createdAt": "2020-03-07T22:16:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NDA5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NDUwNA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386874504", "bodyText": "change to renderJavadoc?", "author": "dweiss", "createdAt": "2020-03-03T08:55:07Z", "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }\n+\n+    task invokeJavadoc {", "originalCommit": "c331bff511afbbd8f17ac4442181eaf4a11de84b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjQyOQ==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389316429", "bodyText": "changed the name to renderJavadoc.", "author": "mocobeta", "createdAt": "2020-03-07T22:20:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NDUwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NTQ3NA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386875474", "bodyText": "Adding inputs as modifiable properties is not the right way to do it I think. A task has 'ext' properties just like projects do. You can define something like this inside the task definition:\next {\nlinksource = 'no'\nlinkJUnit = false\n...\n}\nand then modify these properties where appropriate by just using their names (linksource = 'true' etc.). Inputs is basically hints for the cache (and you could still add these ext properties as inputs but you'd need to do it in doFirst to wait until all the evaluation has completed).", "author": "dweiss", "createdAt": "2020-03-03T08:56:49Z", "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }\n+\n+    task invokeJavadoc {\n+      description \"Generates Javadoc API documentation for the main source code. This invokes Ant Javadoc Task.\"\n+      group \"documentation\"\n+\n+      dependsOn sourceSets.main.compileClasspath\n+\n+      inputs.property(\"linksource\", \"no\")", "originalCommit": "c331bff511afbbd8f17ac4442181eaf4a11de84b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjY0NQ==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389316645", "bodyText": "removed the inputs properties and defined them as the task ext properties.", "author": "mocobeta", "createdAt": "2020-03-07T22:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NTQ3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NTkzNQ==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386875935", "bodyText": "I think this may suffer from the same evaluation-ordering problem as above. This could be a provider (I believe):\ninputs.files { sourceSets.main.java.asFileTree } then the value is evaluated lazily.", "author": "dweiss", "createdAt": "2020-03-03T08:57:43Z", "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }\n+\n+    task invokeJavadoc {\n+      description \"Generates Javadoc API documentation for the main source code. This invokes Ant Javadoc Task.\"\n+      group \"documentation\"\n+\n+      dependsOn sourceSets.main.compileClasspath\n+\n+      inputs.property(\"linksource\", \"no\")\n+      inputs.property(\"linkJUnit\", false)\n+      inputs.property(\"linkHref\", [])\n+\n+      inputs.files sourceSets.main.java.asFileTree", "originalCommit": "c331bff511afbbd8f17ac4442181eaf4a11de84b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjY3Mg==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389316672", "bodyText": "changed to inputs.files { sourceSets.main.java.asFileTree }", "author": "mocobeta", "createdAt": "2020-03-07T22:24:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3NTkzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3ODAxMQ==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386878011", "bodyText": "This could also be task-per sourceset as in ecj-lint snippet... It also makes me wonder why would each source set render a different javadoc output and when is this practical... Do we even have projects that have multiple primary sourceSets?", "author": "dweiss", "createdAt": "2020-03-03T09:01:31Z", "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }\n+\n+    task invokeJavadoc {\n+      description \"Generates Javadoc API documentation for the main source code. This invokes Ant Javadoc Task.\"\n+      group \"documentation\"\n+\n+      dependsOn sourceSets.main.compileClasspath\n+\n+      inputs.property(\"linksource\", \"no\")\n+      inputs.property(\"linkJUnit\", false)\n+      inputs.property(\"linkHref\", [])\n+\n+      inputs.files sourceSets.main.java.asFileTree\n+      outputs.dir project.javadocRoot\n+\n+      doFirst {\n+        srcDirs.each { srcDir ->", "originalCommit": "c331bff511afbbd8f17ac4442181eaf4a11de84b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNzQzOA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389317438", "bodyText": "Instead of repeatly invoking ant.javadoc, I added (possibly multiple) packagesets to the javadoc task. For now, all projects have only one main source directory, so only one packageset element will be created by this code.\nsrcDirs.collect { srcDir ->\n    packageset(dir: srcDir)\n}\n\nDoes this change make sense?", "author": "mocobeta", "createdAt": "2020-03-07T22:39:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3ODAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY3NzM2NA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389677364", "bodyText": "I don't know if it makes more sense but I like it. :)", "author": "dweiss", "createdAt": "2020-03-09T13:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3ODAxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTA0NA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r386881044", "bodyText": "These relative paths should ideally go through project names and transform into relative paths. So that in case we change project paths it'd fail early and not silently point at a wrong folder?\n[\":lucene:memory\", \":lucene:highlighter\", ...].collect { prjPath -> \"../\" + project(prjPath).name }", "author": "dweiss", "createdAt": "2020-03-03T09:07:08Z", "path": "gradle/invoke-javadoc.gradle", "diffHunk": "@@ -0,0 +1,335 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// invoke javadoc tool\n+\n+allprojects {\n+\n+  ext {\n+    javadocRoot = project.path.startsWith(':lucene') ? project(':lucene').file(\"build/docs\") : project(':solr').file(\"build/docs\")\n+    javadocDestDir = \"${javadocRoot}/${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    def libName = project.path.startsWith(\":lucene\") ? \"Lucene\" : \"Solr\"\n+    def title = \"${libName} ${project.version} ${project.name} API\".toString()\n+    def srcDirs = sourceSets.main.java.srcDirs.findAll { dir -> dir.exists() }\n+\n+    task invokeJavadoc {\n+      description \"Generates Javadoc API documentation for the main source code. This invokes Ant Javadoc Task.\"\n+      group \"documentation\"\n+\n+      dependsOn sourceSets.main.compileClasspath\n+\n+      inputs.property(\"linksource\", \"no\")\n+      inputs.property(\"linkJUnit\", false)\n+      inputs.property(\"linkHref\", [])\n+\n+      inputs.files sourceSets.main.java.asFileTree\n+      outputs.dir project.javadocRoot\n+\n+      doFirst {\n+        srcDirs.each { srcDir ->\n+          ant.javadoc(\n+              overview: file(\"${srcDir}/overview.html\"),\n+              packagenames: \"org.apache.lucene.*,org.apache.solr.*\",\n+              destDir: project.javadocDestDir,\n+              access: \"protected\",\n+              encoding: \"UTF-8\",\n+              charset: \"UTF-8\",\n+              docencoding: \"UTF-8\",\n+              noindex: \"true\",\n+              includenosourcepackages: \"true\",\n+              author: \"true\",\n+              version: \"true\",\n+              linksource: inputs.properties.linksource,\n+              use: \"true\",\n+              failonerror: \"true\",\n+              locale: \"en_US\",\n+              windowtitle: title,\n+              doctitle: title,\n+              maxmemory: \"512m\",\n+              classpath: sourceSets.main.compileClasspath.asPath,\n+              bottom: \"<i>Copyright &copy; 2000-${buildYear} Apache Software Foundation. All Rights Reserved.</i>\"\n+          ) {\n+            packageset(dir: srcDir)\n+\n+            tag(name: \"lucene.experimental\", description: \"WARNING: This API is experimental and might change in incompatible ways in the next release.\")\n+            tag(name: \"lucene.internal\", description: \"NOTE: This API is for internal purposes only and might change in incompatible ways in the next release.\")\n+            tag(name: \"lucene.spi\", description: \"SPI Name (Note: This is case-insensitive. e.g., if the name is 'htmlStrip', 'htmlstrip' can be used when looking up the service):\", scope: \"types\")\n+\n+            // resolve links to JavaSE and JUnit API\n+            link(offline: \"true\", href: \"https://docs.oracle.com/en/java/javase/11/docs/api/\", packageListLoc: project(\":lucene\").file(\"tools/javadoc/java11/\").toString())\n+            if (inputs.properties.get(\"linkJUnit\")) {\n+              link(offline: \"true\", href: \"https://junit.org/junit4/javadoc/4.12/\", packageListLoc: project(\":lucene\").file(\"tools/javadoc/junit\").toString())\n+            }\n+            // resolve inter-module links if 'linkHref' property is specified\n+            inputs.properties.get(\"linkHref\").each { href ->\n+              link(href: href)\n+            }\n+\n+            arg(line: \"--release 11\")\n+            arg(line: \"-Xdoclint:all,-missing\")\n+\n+            // force locale to be \"en_US\" (fix for: https://bugs.openjdk.java.net/browse/JDK-8222793)\n+            arg(line: \"-J-Duser.language=en -J-Duser.country=US\")\n+          }\n+        }\n+\n+        // append some special table css, prettify css\n+        ant.concat(destfile: \"${javadocDestDir}/stylesheet.css\", append: \"true\", fixlastline: \"true\", encoding: \"UTF-8\") {\n+          filelist(dir: project(\":lucene\").file(\"tools/javadoc\"), files: \"table_padding.css\")\n+          filelist(dir: project(\":lucene\").file(\"tools/prettify\"), files: \"prettify.css\")\n+        }\n+        // append prettify to scripts\n+        ant.concat(destfile: \"${javadocDestDir}/script.js\", append: \"true\", fixlastline: \"true\", encoding: \"UTF-8\") {\n+          filelist(dir: project(':lucene').file(\"tools/prettify\"), files: \"prettify.js inject-javadocs.js\")\n+        }\n+        ant.fixcrlf(srcdir: javadocDestDir, includes: \"stylesheet.css script.js\", eol: \"lf\", fixlast: \"true\", encoding: \"UTF-8\")\n+      }\n+    }\n+  }\n+}\n+\n+configure(subprojects.findAll { it.path.startsWith(':lucene') && it.path != ':lucene:core' }) {\n+\n+  plugins.withType(JavaPlugin) {\n+    invokeJavadoc {\n+      dependsOn ':lucene:core:invokeJavadoc'\n+\n+      inputs.property('linkHref', inputs.properties.linkHref + [ '../core' ])\n+\n+      doLast {\n+        // fix for Java 11 Javadoc tool that cannot handle split packages between modules correctly (by removing all the packages which are part of lucene-core)\n+        // problem description: [https://issues.apache.org/jira/browse/LUCENE-8738?focusedCommentId=16818106&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16818106]\n+        ant.local(name: \"element-list-regex\") // contains a regex for all package names which are in lucene-core's javadoc\n+        ant.loadfile(property: \"element-list-regex\", srcFile: \"${project.javadocRoot}/core/element-list\", encoding: \"utf-8\") {\n+          filterchain {\n+            tokenfilter(delimoutput: \"|\") {\n+              replacestring(from: \".\", to: \"\\\\.\")\n+            }\n+          }\n+        }\n+        ant.replaceregexp(\n+            encoding: \"UTF-8\",\n+            file: \"${project.javadocDestDir}/element-list\",\n+            byline: \"true\",\n+            match: \"^(\\${element-list-regex})\\$\",\n+            replace: \"\")\n+\n+        //println(\"dest dir = ${project.javadocDestDir}\")\n+        //println(\"linksource = ${inputs.properties.linksource}\")\n+        //println(\"link href = ${inputs.properties.linkHref}\")\n+      }\n+    }\n+  }\n+}\n+\n+configure(subprojects.findAll { it.path.startsWith(':lucene:analysis') }) {\n+  ext {\n+    javadocDestDir = \"${javadocRoot}/analyzers-${project.name}\"\n+  }\n+\n+  plugins.withType(JavaPlugin) {\n+    invokeJavadoc {\n+      if (project.path != ':lucene:analysis:common') {\n+        dependsOn ':lucene:analysis:common:invokeJavadoc'\n+        inputs.property('linkHref', inputs.properties.linkHref + [ '../analyzers-common' ])\n+      }\n+    }\n+  }\n+}\n+\n+configure(project(':lucene:benchmark')) {\n+  plugins.withType(JavaPlugin) {\n+    invokeJavadoc {\n+      [':lucene:memory',\n+       ':lucene:highlighter',\n+       ':lucene:analysis:common',\n+       ':lucene:queryparser',\n+       ':lucene:facet',\n+       ':lucene:spatial-extras'].collect { path ->\n+        dependsOn \"${path}:invokeJavadoc\"\n+      }\n+      inputs.property('linkHref', inputs.properties.linkHref + [ '../memory', '../highlighter', '../analyzers-common', '../queryparser', '../facet', '../spatial-extras' ])", "originalCommit": "c331bff511afbbd8f17ac4442181eaf4a11de84b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxODQyMQ==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389318421", "bodyText": "The relative paths are not necessarily inferred from their project name.\n\n\":lucene:analysis:icu\" => docs/analyzers-icu\n\":solr:solrj\" => docs/solr-solrj\n\":solr:contrib:extraction\" => docs/solr-cell (!)\n...\n\nHow can we properly map the projects and javadoc output directories (without messing up the task definitions any further)...?", "author": "mocobeta", "createdAt": "2020-03-07T22:58:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY4MDM2NA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389680364", "bodyText": "This code is emulating ant - hence the folder name difference (I created gradle project structure with focus on clarity, not conformance to ant). You could set up a map of project paths to those \"ant\" folder names and then look up the corresponding path from project but I'm fine if you don't want to spend any more time on it.", "author": "dweiss", "createdAt": "2020-03-09T13:43:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzNDg4Ng==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r391034886", "bodyText": "I'd like to leave it as it is for now, because it's still not clear to me where/how the map should be placed.\nOne thing I noticed is, we might also need this map (project to javadoc folder name - in other words, ant project name) when publishing the docs to apache.org web site, not just for resolving internal links?\ne.g.)\nhttps://lucene.apache.org/core/8_4_0/analyzers-icu/index.html\nhttps://lucene.apache.org/solr/8_4_1/solr-solrj/index.html", "author": "mocobeta", "createdAt": "2020-03-11T14:59:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1NDM1Mw==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r391154353", "bodyText": "I don't think we should try to emulate ant here, Tomoko. Ideally, I'd rather have the documentation follow gradle project path here. So \".../core/[ver]/analysis/icu/index.html\", for example. The fewer exceptions and hand-written mappings the easier it is to change things later on.", "author": "dweiss", "createdAt": "2020-03-11T17:48:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUwNDMwNg==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r391504306", "bodyText": "Ideally, I'd rather have the documentation follow gradle project path here. So \".../core/[ver]/analysis/icu/index.html\", for example.\n\nI agree with that it makes things easy and i myself would love to throw away the convention come from Ant for simplicity.\nBut changing folder structure on lucene.apahce.org would be a bit big change for devs, maybe it's required to gain an agreement with others...?", "author": "mocobeta", "createdAt": "2020-03-12T09:47:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyMzk3OQ==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r391523979", "bodyText": "I think this change should follow dropping ant build entirely from master. Then things become simpler to manage. These links are prefixed with version number anyway so I don't think there is harm in the docs structure changing for /9_0_0/....", "author": "dweiss", "createdAt": "2020-03-12T10:22:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU0NzMxMw==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r391547313", "bodyText": "Ok I will create another patch to make the folder structure follow the gradle project path, instead of ant one.", "author": "mocobeta", "createdAt": "2020-03-12T11:05:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTA0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU1MjUzMQ==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r391552531", "bodyText": "You can also create a placeholder issue for such a change, Tomoko. I don't think we can introduce it until we drop ant anyway (?).", "author": "dweiss", "createdAt": "2020-03-12T11:16:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTA0NA=="}], "type": "inlineReview"}, {"oid": "9b4769b471fe7567e64c8969d216f5109c47b72f", "url": "https://github.com/apache/lucene-solr/commit/9b4769b471fe7567e64c8969d216f5109c47b72f", "message": "refactor scripts, rename the task", "committedDate": "2020-03-07T22:13:27Z", "type": "commit"}, {"oid": "84dab6fa6f04faa5d6d065f43e6cabb1a2d61e92", "url": "https://github.com/apache/lucene-solr/commit/84dab6fa6f04faa5d6d065f43e6cabb1a2d61e92", "message": "fix wrong operators", "committedDate": "2020-03-08T06:50:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY3NDEwNA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r389674104", "bodyText": "Remove the commented bit maybe?", "author": "dweiss", "createdAt": "2020-03-09T13:37:59Z", "path": "gradle/validation/missing-docs-check.gradle", "diffHunk": "@@ -34,8 +34,9 @@ allprojects {\n         ':lucene:spatial3d',\n     ]\n \n-    task checkMissingDocsDefault(type: CheckMissingDocsTask, dependsOn: 'javadoc') {\n-      dirs += [ project.javadoc.destinationDir ]\n+    task checkMissingDocsDefault(type: CheckMissingDocsTask, dependsOn: 'renderJavadoc') {\n+      //dirs += [ project.javadoc.destinationDir ]", "originalCommit": "84dab6fa6f04faa5d6d065f43e6cabb1a2d61e92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMzU5NA==", "url": "https://github.com/apache/lucene-solr/pull/1304#discussion_r391003594", "bodyText": "Yes, it was removed. Thank you.", "author": "mocobeta", "createdAt": "2020-03-11T14:18:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY3NDEwNA=="}], "type": "inlineReview"}, {"oid": "15516935c0390bfa81c6bcc0830c3048bdb09c96", "url": "https://github.com/apache/lucene-solr/commit/15516935c0390bfa81c6bcc0830c3048bdb09c96", "message": "remove unused line.", "committedDate": "2020-03-11T14:17:30Z", "type": "commit"}, {"oid": "d6041339df8082d1eb5d379f514334b14a7861a5", "url": "https://github.com/apache/lucene-solr/commit/d6041339df8082d1eb5d379f514334b14a7861a5", "message": "enable check missing docs task for precommit", "committedDate": "2020-03-11T15:05:51Z", "type": "commit"}, {"oid": "bd20e493ce89b9d0eab1d46b5d19b04de773159f", "url": "https://github.com/apache/lucene-solr/commit/bd20e493ce89b9d0eab1d46b5d19b04de773159f", "message": "clean up unused code", "committedDate": "2020-03-11T15:07:59Z", "type": "commit"}]}