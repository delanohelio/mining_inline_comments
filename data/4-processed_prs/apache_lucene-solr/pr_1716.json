{"pr_number": 1716, "pr_title": "SOLR-14706: Fix support for default autoscaling policy", "pr_createdAt": "2020-08-04T15:41:07Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1716", "timeline": [{"oid": "cf2b30bcb19e6b97310af76cf6d48488d52f2122", "url": "https://github.com/apache/lucene-solr/commit/cf2b30bcb19e6b97310af76cf6d48488d52f2122", "message": "SOLR-14706: Fix support for default autoscaling policy", "committedDate": "2020-08-04T15:31:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE0NjU5OQ==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r465146599", "bodyText": "I brought this back in from the revert because it looks like an improvement that was unrelated to the default policy.\nI'm happy to remove it if y'all think I should.", "author": "HoustonPutman", "createdAt": "2020-08-04T15:42:17Z", "path": "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.java", "diffHunk": "@@ -686,7 +686,7 @@ boolean isShardAbsent() {\n       for (Row r : session.matrix) {\n         computedValueEvaluator.node = r.node;\n         SealedClause sealedClause = getSealedClause(computedValueEvaluator);\n-        if (!sealedClause.getGlobalTag().isPass(r)) {\n+        if (r.isLive() && !sealedClause.getGlobalTag().isPass(r)) {", "originalCommit": "cf2b30bcb19e6b97310af76cf6d48488d52f2122", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "af7c31321199ef583601836fdcd0b149425d8eb2", "url": "https://github.com/apache/lucene-solr/commit/af7c31321199ef583601836fdcd0b149425d8eb2", "message": "Adding info to upgrade notes.", "committedDate": "2020-08-04T19:32:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTU4Mg==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r465461582", "bodyText": "The other caveat is probably that they shouldn't run this command if they have been actively using autoscaling cluster policies before they upgraded to 8.6.0", "author": "gus-asf", "createdAt": "2020-08-05T04:15:16Z", "path": "solr/solr-ref-guide/src/solr-upgrade-notes.adoc", "diffHunk": "@@ -34,17 +34,24 @@ Detailed steps for upgrading a Solr cluster are in the section <<upgrading-a-sol\n \n If you are upgrading from 7.x, see the section <<Upgrading from 7.x Releases>> below.\n \n-=== Solr 8.6.1\n+=== Solr 8.6.1 (Upgrading from 8.6.0 only)\n \n *Autoscaling*\n \n * As mentioned in the 8.6 upgrade notes, a default autoscaling policy was provided starting in 8.6.0.\n This default autoscaling policy resulted in increasingly slow collection creation calls in large clusters (50+ collections).\n +\n In 8.6.1 the default autoscaling policy has been removed, and clouds will not use autoscaling unless a policy has explicitly been created.\n-In order to fix the performance degradations introduced in 8.6.0, merely upgrade to 8.6.1.\n+If your cloud has been upgraded to 8.6.0 and you wish to fix this performance degredations, upgrade to 8.6.1 and remove the default cluster policy via the following command.\n+Replace `localhost:8983` with your Solr endpoint.\n++\n+```\n+curl -X POST -H 'Content-type:application/json'  -d '{set-cluster-policy : []}' http://localhost:8983/api/cluster/autoscaling", "originalCommit": "af7c31321199ef583601836fdcd0b149425d8eb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgwNjY1NA==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r465806654", "bodyText": "I tried to make this more clear. Let me know if you think my wording is off", "author": "HoustonPutman", "createdAt": "2020-08-05T15:20:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTU4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3NTQ2MQ==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r465875461", "bodyText": "Yeah that looks better :)", "author": "gus-asf", "createdAt": "2020-08-05T17:06:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2MTU4Mg=="}], "type": "inlineReview"}, {"oid": "e1606b63a17d7de4b7c838a7bb2b3446c05ded51", "url": "https://github.com/apache/lucene-solr/commit/e1606b63a17d7de4b7c838a7bb2b3446c05ded51", "message": "Updating wording of upgrade notes.", "committedDate": "2020-08-05T14:23:17Z", "type": "commit"}, {"oid": "effbbcac0fbae034e25fd8c1a6047f98f349a27d", "url": "https://github.com/apache/lucene-solr/commit/effbbcac0fbae034e25fd8c1a6047f98f349a27d", "message": "Adding back in old functionality and making error message better.", "committedDate": "2020-08-05T16:10:07Z", "type": "commit"}, {"oid": "9b7a3884ffb9ce3f244c1a08e9b5681f7e440705", "url": "https://github.com/apache/lucene-solr/commit/9b7a3884ffb9ce3f244c1a08e9b5681f7e440705", "message": "Adding missing import.", "committedDate": "2020-08-05T16:29:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3MTEwOQ==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r465871109", "bodyText": "from my very limited understanding of this code it appears that something like\n    if (globalTagName.isPresent()) {\n      validateGlobalTag(m, globalTagName.get());\n      globalTag = parse(globalTagName.get(), m);\n ...\nand \n...\n  private void validateGlobalTag(Map<String, Object> m, String tagName) {\n    if (m.size() > 2) {\n      if (!m.containsKey(\"strict\") || m.size() > 3) {\n        throw new RuntimeException(\"Only, 'strict' and one extra tag supported for the tag \" + tagName + \" in \" + toJSONString(m));\n      }\n    }\n  }\n\nwould be the real intention here... but it would be great if @sigram could confirm that.", "author": "gus-asf", "createdAt": "2020-08-05T16:58:53Z", "path": "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.java", "diffHunk": "@@ -117,10 +117,10 @@ private Clause(Map<String, Object> m) {\n     strict = Boolean.parseBoolean(String.valueOf(m.getOrDefault(\"strict\", \"true\")));\n     Optional<String> globalTagName = m.keySet().stream().filter(Policy.GLOBAL_ONLY_TAGS::contains).findFirst();\n     if (globalTagName.isPresent()) {\n-      globalTag = parse(globalTagName.get(), m);\n-      if (m.size() > 2) {\n-        throw new RuntimeException(\"Only one extra tag supported for the tag \" + globalTagName.get() + \" in \" + toJSONString(m));\n+      if (m.size() > 3) {", "originalCommit": "9b7a3884ffb9ce3f244c1a08e9b5681f7e440705", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNTM0OQ==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r466605349", "bodyText": "@gus-asf yes, that's the intent, though your pseudo-code is still incorrect - if there's no strict tag then m.size() > 2 is already an error. In other words, for global tags we expect exactly 2 keys (tag and operand), with optional third key strict.", "author": "sigram", "createdAt": "2020-08-06T18:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3MTEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1NzM0OA==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r466657348", "bodyText": "I think that's the logic Gus used. It's equivalent to:\nprivate void validateGlobalTag(Map<String, Object> m, String tagName) {\n    if (m.size() > 2) {\n      if (!(m.containsKey(\"strict\") && m.size() == 3)) {\n        throw new RuntimeException(\"Only, 'strict' and one extra tag supported for the tag \" + tagName + \" in \" + toJSONString(m));\n      }\n    }\n  }\nThis will error unless there are exactly 3 keys and once of them is strict.", "author": "HoustonPutman", "createdAt": "2020-08-06T20:07:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg3MTEwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NzIyMA==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r466597220", "bodyText": "Setting preferences to [] actually removes the default preferences that have always been implicitly present, so this changes the behavior as compared with 8.5 and earlier. We should only reset the cluster_policy to [].", "author": "sigram", "createdAt": "2020-08-06T18:12:19Z", "path": "solr/solr-ref-guide/src/solr-upgrade-notes.adoc", "diffHunk": "@@ -34,17 +34,29 @@ Detailed steps for upgrading a Solr cluster are in the section <<upgrading-a-sol\n \n If you are upgrading from 7.x, see the section <<Upgrading from 7.x Releases>> below.\n \n-=== Solr 8.6.1\n+=== Solr 8.6.1 (Upgrading from 8.6.0 only)\n+\n+See the https://cwiki.apache.org/confluence/display/SOLR/ReleaseNote861[8.6.1 Release Notes^]\n+for an overview of the fixes included in Solr 8.6.1.\n+\n+When upgrading to 8.6.1 users should be aware of the following major changes from 8.6.0.\n \n *Autoscaling*\n \n * As mentioned in the 8.6 upgrade notes, a default autoscaling policy was provided starting in 8.6.0.\n This default autoscaling policy resulted in increasingly slow collection creation calls in large clusters (50+ collections).\n +\n In 8.6.1 the default autoscaling policy has been removed, and clouds will not use autoscaling unless a policy has explicitly been created.\n-In order to fix the performance degradations introduced in 8.6.0, merely upgrade to 8.6.1.\n+If your cloud is running 8.6.0 and **not using an explicit autoscaling policy**, upgrade to 8.6.1 and remove the default cluster policy and preferences via the following command.\n+Replace `localhost:8983` with your Solr endpoint.\n++\n+```\n+curl -X POST -H 'Content-type:application/json'  -d '{set-cluster-policy : [], set-cluster-preferences : []}' http://localhost:8983/api/cluster/autoscaling", "originalCommit": "9b7a3884ffb9ce3f244c1a08e9b5681f7e440705", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0MzQ0Mg==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r466643442", "bodyText": "Hmmm, I'm a bit confused about that. So if I spin up a new cloud with 8.5, I don't see a cluster-preferences. It basically looks the same as a 8.6.1 cloud that has the above command run. So if we reverted the change of the defaulting patch, shouldn't a 8.5 cloud and 8.6.1 cloud with identical autoscaling.json ZNodes behave the same?", "author": "HoustonPutman", "createdAt": "2020-08-06T19:39:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NzIyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5OTEwMA==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r466599100", "bodyText": "This statement conflicts with the statement above. 8.5.x and 8.6.1 includes default preferences but not the default policy.", "author": "sigram", "createdAt": "2020-08-06T18:15:46Z", "path": "solr/solr-ref-guide/src/solr-upgrade-notes.adoc", "diffHunk": "@@ -72,7 +84,9 @@ More information about this new feature is available in the section <<common-que\n \n *Autoscaling*\n \n-* Solr now includes a default autoscaling policy.\n+* **NOTE: The default autoscaling policy has been removed as of 8.6.1**\n++\n+Solr now includes a default autoscaling policy.", "originalCommit": "9b7a3884ffb9ce3f244c1a08e9b5681f7e440705", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDI5OA==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r466670298", "bodyText": "Fresh install of 8.5.2 gives me:\n{\n  \"triggers\":{\n    \".auto_add_replicas\":{\n      \"name\":\".auto_add_replicas\",\n      \"event\":\"nodeLost\",\n      \"waitFor\":120,\n      \"enabled\":true,\n      \"actions\":[\n        {\n          \"name\":\"auto_add_replicas_plan\",\n          \"class\":\"solr.AutoAddReplicasPlanAction\"},\n        {\n          \"name\":\"execute_plan\",\n          \"class\":\"solr.ExecutePlanAction\"}]},\n    \".scheduled_maintenance\":{\n      \"name\":\".scheduled_maintenance\",\n      \"event\":\"scheduled\",\n      \"startTime\":\"NOW\",\n      \"every\":\"+1DAY\",\n      \"enabled\":true,\n      \"actions\":[\n        {\n          \"name\":\"inactive_shard_plan\",\n          \"class\":\"solr.InactiveShardPlanAction\"},\n        {\n          \"name\":\"inactive_markers_plan\",\n          \"class\":\"solr.InactiveMarkersPlanAction\"},\n        {\n          \"name\":\"execute_plan\",\n          \"class\":\"solr.ExecutePlanAction\"}]}},\n  \"listeners\":{\n    \".auto_add_replicas.system\":{\n      \"beforeAction\":[],\n      \"afterAction\":[],\n      \"stage\":[\n        \"STARTED\",\n        \"ABORTED\",\n        \"SUCCEEDED\",\n        \"FAILED\",\n        \"BEFORE_ACTION\",\n        \"AFTER_ACTION\",\n        \"IGNORED\"],\n      \"trigger\":\".auto_add_replicas\",\n      \"class\":\"org.apache.solr.cloud.autoscaling.SystemLogListener\"},\n    \".scheduled_maintenance.system\":{\n      \"beforeAction\":[],\n      \"afterAction\":[],\n      \"stage\":[\n        \"STARTED\",\n        \"ABORTED\",\n        \"SUCCEEDED\",\n        \"FAILED\",\n        \"BEFORE_ACTION\",\n        \"AFTER_ACTION\",\n        \"IGNORED\"],\n      \"trigger\":\".scheduled_maintenance\",\n      \"class\":\"org.apache.solr.cloud.autoscaling.SystemLogListener\"}},\n  \"properties\":{}}", "author": "gus-asf", "createdAt": "2020-08-06T20:33:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5OTEwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNTc3MA==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r466605770", "bodyText": "+1, this was a genuine bug in 8.5.", "author": "sigram", "createdAt": "2020-08-06T18:28:10Z", "path": "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.java", "diffHunk": "@@ -686,7 +686,7 @@ boolean isShardAbsent() {\n       for (Row r : session.matrix) {\n         computedValueEvaluator.node = r.node;\n         SealedClause sealedClause = getSealedClause(computedValueEvaluator);\n-        if (!sealedClause.getGlobalTag().isPass(r)) {\n+        if (r.isLive() && !sealedClause.getGlobalTag().isPass(r)) {", "originalCommit": "9b7a3884ffb9ce3f244c1a08e9b5681f7e440705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYwNjI1Ng==", "url": "https://github.com/apache/lucene-solr/pull/1716#discussion_r466606256", "bodyText": "+1, this fixed a genuine bug in < 8.6.0", "author": "sigram", "createdAt": "2020-08-06T18:29:04Z", "path": "solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.java", "diffHunk": "@@ -814,7 +814,9 @@ public void execute(SimScenario scenario) throws Exception {\n         values.put(key, val);\n       }\n       for (String node : nodes) {\n-        scenario.cluster.getSimNodeStateProvider().simSetNodeValues(node, values);\n+        Map<String, Object> newValues = new HashMap<>(scenario.cluster.getSimNodeStateProvider().simGetNodeValues(node));", "originalCommit": "9b7a3884ffb9ce3f244c1a08e9b5681f7e440705", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a63aec648a9a0fbc2aa5df64df19cefa8593a577", "url": "https://github.com/apache/lucene-solr/commit/a63aec648a9a0fbc2aa5df64df19cefa8593a577", "message": "Using Gus' logic.", "committedDate": "2020-08-07T16:07:53Z", "type": "commit"}, {"oid": "cb079fa90ecc04b980e0de245ffb4ca759d2be1b", "url": "https://github.com/apache/lucene-solr/commit/cb079fa90ecc04b980e0de245ffb4ca759d2be1b", "message": "Updating changes.txt", "committedDate": "2020-08-07T16:17:04Z", "type": "commit"}]}