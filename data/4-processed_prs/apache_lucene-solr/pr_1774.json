{"pr_number": 1774, "pr_title": "SOLR-14774: Create HealthCheckHandler in CoreContainer", "pr_createdAt": "2020-08-22T03:57:03Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1774", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExODMxMw==", "url": "https://github.com/apache/lucene-solr/pull/1774#discussion_r475118313", "bodyText": "why are we calling loader.newInstance directly instead of createHandler?", "author": "madrob", "createdAt": "2020-08-22T18:36:25Z", "path": "solr/core/src/java/org/apache/solr/core/CoreContainer.java", "diffHunk": "@@ -719,6 +719,7 @@ public void load() {\n     createHandler(ZK_PATH, ZookeeperInfoHandler.class.getName(), ZookeeperInfoHandler.class);\n     createHandler(ZK_STATUS_PATH, ZookeeperStatusHandler.class.getName(), ZookeeperStatusHandler.class);\n     collectionsHandler = createHandler(COLLECTIONS_HANDLER_PATH, cfg.getCollectionsHandlerClass(), CollectionsHandler.class);\n+    healthCheckHandler = loader.newInstance(cfg.getHealthCheckHandlerClass(), HealthCheckHandler.class, null, new Class<?>[]{CoreContainer.class}, new Object[]{this});", "originalCommit": "7ffaaf6c5466a874144f6b8b5b50fff9f543c284", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYyNDc5NA==", "url": "https://github.com/apache/lucene-solr/pull/1774#discussion_r475624794", "bodyText": "If the intent here to use loader.newInstance is for pluggable implementations, then this may not work with packages. Hence, this should be avoided.", "author": "chatman", "createdAt": "2020-08-24T13:53:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExODMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc1Njg0Ng==", "url": "https://github.com/apache/lucene-solr/pull/1774#discussion_r475756846", "bodyText": "why are we calling loader.newInstance directly instead of createHandler?\n\nI did this because createHandler also registers the handler to a path and initializes metrics. HealthCheckHandler currently is ran inside InfoHandler, so that's where the path is registered (and I guess the metrics are merged there). I didn't want to move to another path as part of this PR, don't know if that's needed. True that it looks a bit weird, but otherwise requires a bunch of changes to support compatibility.\n\nIf the intent here to use loader.newInstance is for pluggable implementations, then this may not work with packages. Hence, this should be avoided.\n\nI can handle that. I don't see any of the other top level handlers load from packages other than the built in (which is what loader.newInstance. What do you suggest?", "author": "tflobbe", "createdAt": "2020-08-24T16:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExODMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgwMjczOQ==", "url": "https://github.com/apache/lucene-solr/pull/1774#discussion_r475802739", "bodyText": "@chatman, looking a bit at the Packages code. Is the idea that we need to use PackageListeningClassLoader? That's not currently used in CoreContainer, and I only see it for loading schema plugins. Maybe I'm missing something. If none of the existing top level handlers can be loaded from packages, then we probably want to tackle that in a different Jira issue?", "author": "tflobbe", "createdAt": "2020-08-24T18:11:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExODMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQzODk2OQ==", "url": "https://github.com/apache/lucene-solr/pull/1774#discussion_r477438969", "bodyText": "... I did this because createHandler also registers the handler to a path and initializes metrics. HealthCheckHandler currently is ran inside InfoHandler, so that's where the path is registered (and I guess the metrics are merged there). ...\n\nI wonder if it would be helpful to have that as a comment in the code for future reference, the bit about not wishing to register to a path and initialise metrics.\nAs far as I can tell InfoHandler does not do any metric initialisation, so the health check handler would then be consistent with the other handlers whose path is registered in InfoHandler. Or maybe I'm missing how the metrics initialisation happens indirectly?", "author": "cpoerschke", "createdAt": "2020-08-26T16:40:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExODMxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYxNjM3MQ==", "url": "https://github.com/apache/lucene-solr/pull/1774#discussion_r477616371", "bodyText": "As far as I can tell InfoHandler does not do any metric initialisation,\n\nFrom what I can see, InfoHandler extends SolrMetricProducer, so a call to CoreContainer.createHandler  will initialize it (seems to be getting everything fromRequestHandlerBase\nbq. I wonder if it would be helpful to have that as a comment in the code for future reference, the bit about not wishing to register to a path and initialise metrics.\nWill do", "author": "tflobbe", "createdAt": "2020-08-26T22:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExODMxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU1Njc4Mw==", "url": "https://github.com/apache/lucene-solr/pull/1774#discussion_r475556783", "bodyText": "throw new IllegalStateException(\"HealthCheckHandler needs to be initialized before creating InfoHandler\");\n\nHow about also having a \"HealthCheckHandler then InfoHandler order matters because ...\" style comment in CoreContainer?", "author": "cpoerschke", "createdAt": "2020-08-24T12:16:57Z", "path": "solr/core/src/java/org/apache/solr/handler/admin/InfoHandler.java", "diffHunk": "@@ -50,7 +50,10 @@ public InfoHandler(final CoreContainer coreContainer) {\n     handlers.put(\"properties\", new PropertiesRequestHandler());\n     handlers.put(\"logging\", new LoggingHandler(coreContainer));\n     handlers.put(\"system\", new SystemInfoHandler(coreContainer));\n-    handlers.put(\"health\", new HealthCheckHandler(coreContainer));\n+    if (coreContainer.getHealthCheckHandler() == null) {\n+      throw new IllegalStateException(\"HealthCheckHandler needs to be initialized before creating InfoHandler\");", "originalCommit": "7ffaaf6c5466a874144f6b8b5b50fff9f543c284", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f253fabee825633f6768962d7d1c42eab1663a82", "url": "https://github.com/apache/lucene-solr/commit/f253fabee825633f6768962d7d1c42eab1663a82", "message": "Create HealthCheckHandler in CoreContainer\n\nThis allows users to plug-in different implementations of the handler (they must extend HealthCheckHandler)", "committedDate": "2020-08-28T21:46:14Z", "type": "commit"}, {"oid": "40753066375834f08e102e566eab848bd80f8599", "url": "https://github.com/apache/lucene-solr/commit/40753066375834f08e102e566eab848bd80f8599", "message": "Add comment about Handler ordering", "committedDate": "2020-08-28T21:46:14Z", "type": "commit"}, {"oid": "9b21bc1fdb3c60b00ca9601a31a8fbbe284ee7ad", "url": "https://github.com/apache/lucene-solr/commit/9b21bc1fdb3c60b00ca9601a31a8fbbe284ee7ad", "message": "Update ref guide", "committedDate": "2020-08-28T21:46:14Z", "type": "commit"}, {"oid": "02b32fcc50b4b45c653e040a027237f63e6f49b8", "url": "https://github.com/apache/lucene-solr/commit/02b32fcc50b4b45c653e040a027237f63e6f49b8", "message": "Improve comments", "committedDate": "2020-08-28T21:46:14Z", "type": "commit"}, {"oid": "1729322ca26fee4510d35f9a366d5c41b171bd9a", "url": "https://github.com/apache/lucene-solr/commit/1729322ca26fee4510d35f9a366d5c41b171bd9a", "message": "Add CHANGES entry", "committedDate": "2020-08-28T21:48:24Z", "type": "commit"}, {"oid": "1729322ca26fee4510d35f9a366d5c41b171bd9a", "url": "https://github.com/apache/lucene-solr/commit/1729322ca26fee4510d35f9a366d5c41b171bd9a", "message": "Add CHANGES entry", "committedDate": "2020-08-28T21:48:24Z", "type": "forcePushed"}]}