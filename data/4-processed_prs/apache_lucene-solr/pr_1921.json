{"pr_number": 1921, "pr_title": "SOLR-14829: Improve documentation for Request Handlers in RefGuide and solrconfig.xml", "pr_createdAt": "2020-09-26T04:09:39Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1921", "timeline": [{"oid": "96ec73763ffd63f02f9509e504d678234ad3c68f", "url": "https://github.com/apache/lucene-solr/commit/96ec73763ffd63f02f9509e504d678234ad3c68f", "message": "Basic information cleanup", "committedDate": "2020-09-25T01:11:06Z", "type": "commit"}, {"oid": "ac09c977d064c254d410ff151f8b8b7f97f7f268", "url": "https://github.com/apache/lucene-solr/commit/ac09c977d064c254d410ff151f8b8b7f97f7f268", "message": "Major refactoring - unfinished", "committedDate": "2020-09-25T12:52:03Z", "type": "commit"}, {"oid": "b85b19c0df30633d2b10e86b9e8b6a791421b2ec", "url": "https://github.com/apache/lucene-solr/commit/b85b19c0df30633d2b10e86b9e8b6a791421b2ec", "message": "Rephrase and text cleanup of already ordered sections", "committedDate": "2020-09-25T23:47:10Z", "type": "commit"}, {"oid": "9d4b6090e6c146bbd388fdf67be42e251f216a02", "url": "https://github.com/apache/lucene-solr/commit/9d4b6090e6c146bbd388fdf67be42e251f216a02", "message": "Default echoParams value is NONE, not explicit", "committedDate": "2020-09-26T00:49:11Z", "type": "commit"}, {"oid": "c06cae9af0ce385bae4a89e6adbf1880e9f36ef6", "url": "https://github.com/apache/lucene-solr/commit/c06cae9af0ce385bae4a89e6adbf1880e9f36ef6", "message": "Finalize Search Handler section and cross-references", "committedDate": "2020-09-26T01:54:07Z", "type": "commit"}, {"oid": "57949119828f688decf8362270d2e0c589dc1011", "url": "https://github.com/apache/lucene-solr/commit/57949119828f688decf8362270d2e0c589dc1011", "message": "Fix Update Request Processors section and cross-references", "committedDate": "2020-09-26T02:24:53Z", "type": "commit"}, {"oid": "f037ee8617b9abebf8c0f7b55b4e4ecbe080216a", "url": "https://github.com/apache/lucene-solr/commit/f037ee8617b9abebf8c0f7b55b4e4ecbe080216a", "message": "Add URP cross-reference to indexing document", "committedDate": "2020-09-26T02:30:54Z", "type": "commit"}, {"oid": "3ec62312ea91a7fbdaf57eea37826acc20e96121", "url": "https://github.com/apache/lucene-solr/commit/3ec62312ea91a7fbdaf57eea37826acc20e96121", "message": "Copy example explanation from solrconfig.xml", "committedDate": "2020-09-26T03:46:04Z", "type": "commit"}, {"oid": "7f159e6f8ea75a2a01015a24f994661aaaf23e6e", "url": "https://github.com/apache/lucene-solr/commit/7f159e6f8ea75a2a01015a24f994661aaaf23e6e", "message": "Fix solrconfig.xml documentation and links", "committedDate": "2020-09-26T03:53:43Z", "type": "commit"}, {"oid": "3cc3099c2f3c94c7c5caa028d289433b86027df8", "url": "https://github.com/apache/lucene-solr/commit/3cc3099c2f3c94c7c5caa028d289433b86027df8", "message": "Basic information cleanup", "committedDate": "2020-09-26T04:01:15Z", "type": "commit"}, {"oid": "223887b649b39a3ea1debe630d8bc928af9c4da3", "url": "https://github.com/apache/lucene-solr/commit/223887b649b39a3ea1debe630d8bc928af9c4da3", "message": "Major refactoring - unfinished", "committedDate": "2020-09-26T04:01:15Z", "type": "commit"}, {"oid": "04ad6e51d798fe70d04663889402763f4fc4bb9f", "url": "https://github.com/apache/lucene-solr/commit/04ad6e51d798fe70d04663889402763f4fc4bb9f", "message": "Rephrase and text cleanup of already ordered sections", "committedDate": "2020-09-26T04:01:15Z", "type": "commit"}, {"oid": "10bb287a4e6cb5cd0630a27cc52e92fe9100ad46", "url": "https://github.com/apache/lucene-solr/commit/10bb287a4e6cb5cd0630a27cc52e92fe9100ad46", "message": "Default echoParams value is NONE, not explicit", "committedDate": "2020-09-26T04:01:15Z", "type": "commit"}, {"oid": "0a9c3d8bf8122d9451ab3e6011860c890b604df4", "url": "https://github.com/apache/lucene-solr/commit/0a9c3d8bf8122d9451ab3e6011860c890b604df4", "message": "Finalize Search Handler section and cross-references", "committedDate": "2020-09-26T04:01:15Z", "type": "commit"}, {"oid": "45f8eead6041b1d96ed95cb1f28492f3de977a4e", "url": "https://github.com/apache/lucene-solr/commit/45f8eead6041b1d96ed95cb1f28492f3de977a4e", "message": "Fix Update Request Processors section and cross-references", "committedDate": "2020-09-26T04:01:15Z", "type": "commit"}, {"oid": "eb4b41d914579c168e2c56a5e969f27cf6ff986c", "url": "https://github.com/apache/lucene-solr/commit/eb4b41d914579c168e2c56a5e969f27cf6ff986c", "message": "Add URP cross-reference to indexing document", "committedDate": "2020-09-26T04:01:15Z", "type": "commit"}, {"oid": "d535eab59d9be260b9e18c34efe452df014183d0", "url": "https://github.com/apache/lucene-solr/commit/d535eab59d9be260b9e18c34efe452df014183d0", "message": "Copy example explanation from solrconfig.xml", "committedDate": "2020-09-26T04:01:15Z", "type": "commit"}, {"oid": "6c1cc1e761b2368b7fb7aa30bbd21d7c4e189a18", "url": "https://github.com/apache/lucene-solr/commit/6c1cc1e761b2368b7fb7aa30bbd21d7c4e189a18", "message": "Fix solrconfig.xml documentation and links", "committedDate": "2020-09-26T04:01:15Z", "type": "commit"}, {"oid": "12c655717574bf9fa3af50dfd764654c65615f0b", "url": "https://github.com/apache/lucene-solr/commit/12c655717574bf9fa3af50dfd764654c65615f0b", "message": "Merge branch 'solr-14829-components-info' of https://github.com/arafalov/lucene-solr into solr-14829-components-info", "committedDate": "2020-09-26T04:01:46Z", "type": "commit"}, {"oid": "f417fbb4c2fa2f70ee43bd11b1d894dd83abd1e5", "url": "https://github.com/apache/lucene-solr/commit/f417fbb4c2fa2f70ee43bd11b1d894dd83abd1e5", "message": "CHANGES entry", "committedDate": "2020-09-26T11:45:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4OTY0Ng==", "url": "https://github.com/apache/lucene-solr/pull/1921#discussion_r495489646", "bodyText": "Section headings should be in Headline Case (all main words capitalized)", "author": "ctargett", "createdAt": "2020-09-26T19:53:21Z", "path": "solr/solr-ref-guide/src/requesthandlers-and-searchcomponents-in-solrconfig.adoc", "diffHunk": "@@ -18,34 +18,84 @@\n \n After the `<query>` section of `solrconfig.xml`, request handlers and search components are configured.\n \n-A _request handler_ processes requests coming to Solr. These might be query requests or index update requests. You will likely need several of these defined, depending on how you want Solr to handle the various requests you will make.\n+A _request handler_ processes requests coming to Solr. These might be query requests, index update requests or specialized interactions such as <<ping.adoc#ping,ping>>.\n \n-A _search component_ is a feature of search, such as highlighting or faceting. The search component is defined in `solrconfig.xml` separate from the request handlers, and then registered with a request handler as needed.\n+Not all handlers are defined explicitly in `solrconfig.xml`, many essential ones are actually defined <<implicit-requesthandlers.adoc#implicit-requesthandlers,implicitly>>.\n \n-These are often referred to as \"requestHandler\" and \"searchComponent\", which is how they are defined in `solrconfig.xml`.\n+Additionally, handlers can be defined - or even overridden - in `configoverlay.json` by using <<config-api.adoc#config-api,Config API>>.\n+Finally, independent parameter sets can be also defined by <<request-parameters-api.adoc#request-parameters-api,Request Parameters API>>.\n+They will be stored in `params.json` file and referenced with <<#paramsets-and-useparams,useParams>>.\n \n-== Request Handlers\n+All of this multi-layered configuration, may be verified via  <<config-api.adoc#config-api,Config API>>.\n \n-Every request handler is defined with a name and a class. The name of the request handler is referenced with the request to Solr, typically as a path. For example, if Solr is installed at `\\http://localhost:8983/solr/` and you have a collection named \"gettingstarted\", you can make a request that looks like this:\n+Defining your own config handlers is often a useful way to provide defaults and advanced configuration to support business cases and simplify client API.\n+At the same time, using every single option explained in this guide, will most certainly cause some confusion about which parameter is actually used when.\n+\n+== Defining and calling Request Handlers\n+", "originalCommit": "f417fbb4c2fa2f70ee43bd11b1d894dd83abd1e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4OTg2NQ==", "url": "https://github.com/apache/lucene-solr/pull/1921#discussion_r495489865", "bodyText": "I think these should be capitalized. In the sub-sections here you did not capitalize \"defaults\" but you did \"Appends\" - it should be consistent, and even though those terms are the XML names we can also refer to the concepts of default and append, etc, as words and capitalize them in headings.", "author": "ctargett", "createdAt": "2020-09-26T19:55:38Z", "path": "solr/solr-ref-guide/src/requesthandlers-and-searchcomponents-in-solrconfig.adoc", "diffHunk": "@@ -18,34 +18,84 @@\n \n After the `<query>` section of `solrconfig.xml`, request handlers and search components are configured.\n \n-A _request handler_ processes requests coming to Solr. These might be query requests or index update requests. You will likely need several of these defined, depending on how you want Solr to handle the various requests you will make.\n+A _request handler_ processes requests coming to Solr. These might be query requests, index update requests or specialized interactions such as <<ping.adoc#ping,ping>>.\n \n-A _search component_ is a feature of search, such as highlighting or faceting. The search component is defined in `solrconfig.xml` separate from the request handlers, and then registered with a request handler as needed.\n+Not all handlers are defined explicitly in `solrconfig.xml`, many essential ones are actually defined <<implicit-requesthandlers.adoc#implicit-requesthandlers,implicitly>>.\n \n-These are often referred to as \"requestHandler\" and \"searchComponent\", which is how they are defined in `solrconfig.xml`.\n+Additionally, handlers can be defined - or even overridden - in `configoverlay.json` by using <<config-api.adoc#config-api,Config API>>.\n+Finally, independent parameter sets can be also defined by <<request-parameters-api.adoc#request-parameters-api,Request Parameters API>>.\n+They will be stored in `params.json` file and referenced with <<#paramsets-and-useparams,useParams>>.\n \n-== Request Handlers\n+All of this multi-layered configuration, may be verified via  <<config-api.adoc#config-api,Config API>>.\n \n-Every request handler is defined with a name and a class. The name of the request handler is referenced with the request to Solr, typically as a path. For example, if Solr is installed at `\\http://localhost:8983/solr/` and you have a collection named \"gettingstarted\", you can make a request that looks like this:\n+Defining your own config handlers is often a useful way to provide defaults and advanced configuration to support business cases and simplify client API.\n+At the same time, using every single option explained in this guide, will most certainly cause some confusion about which parameter is actually used when.\n+\n+== Defining and calling Request Handlers\n+\n+Every request handler is defined with a name and a class. The name of the request handler is referenced with the request to Solr, typically as a path.\n+For example, if Solr is installed at `\\http://localhost:8983/solr/`, and you have a collection named \"gettingstarted\", you can make a request that looks like this:\n \n [source,text]\n ----\n http://localhost:8983/solr/gettingstarted/select?q=solr\n ----\n \n-This query will be processed by the request handler with the name `/select`. We've only used the \"q\" parameter here, which includes our query term, a simple keyword of \"solr\". If the request handler has more parameters defined, those will be used with any query we send to this request handler unless they are over-ridden by the client (or user) in the query itself.\n+This query will be processed by the request handler with the name `/select`. We've only used the \"q\" parameter here, which includes our query term, a simple keyword of \"solr\".\n+If the request handler has more default parameters defined, those will be used with any query we send to that request handler unless they are overridden by the client (or user) in the query itself.\n+\n+If you have another request handler defined, you could send your request with that name.\n+For example, `/update` is an implicit request handler that handles index updates (i.e., sending new documents to the index).\n+By default, `/select` is a request handler that handles query requests and one expected by most examples and tools.\n+\n+Request handlers can also process requests for nested paths in their names,\n+for example, a request using `/myhandler/extrapath` may be processed by a request handler registered with the name `/myhandler`.\n+If a request handler is explicitly defined by the name `/myhandler/extrapath`, that would take precedence over the nested path.\n+This assumes you are using the request handler classes included with Solr; if you create your own request handler,\n+you should make sure it includes the ability to handle nested paths if you want to use them with your custom request handler.\n+\n+If a request handler is not expected to be used very often, it can be marked with `startup=\"lazy\"` to avoid loading until needed.\n+\n+[source,xml]\n+----\n+<requestHandler name=\"/spell\" class=\"solr.SearchHandler\" startup=\"lazy\">\n+ ...\n+</requestHandler>\n+----\n+\n+== Configuring request handlers\n+There are 3 ways to configure request handlers inside their definitions and another 3 ways to configure them somewhere else.\n \n-If you have another request handler defined, you would send your request with that name. For example, `/update` is a request handler that handles index updates (i.e., sending new documents to the index). By default, `/select` is a request handler that handles query requests.\n+=== Request parameters (GET and POST)\n+The easiest and most flexible way is to provide parameters with standard GET or POST requests.\n \n-Request handlers can also process requests for nested paths of their names, for example, a request using `/myhandler/extrapath` may be processed by a request handler registered with the name `/myhandler`. If a request handler is explicitly defined by the name `/myhandler/extrapath`, that would take precedence over the nested path. This assumes you are using the request handler classes included with Solr; if you create your own request handler, you should make sure it includes the ability to handle nested paths if you want to use them with your custom request handler.\n+Here is an example of sending parameters `id`, `fl`, and `wt` to `/select` Search Handler.\n+Notice the URL-encoded space (as +) for the values of `fl` parameter.\n \n-It is also possible to configure defaults for request handlers with a section called `initParams`. These defaults can be used when you want to have common properties that will be used by each separate handler. For example, if you intend to create several request handlers that will all request the same list of fields in the response, you can configure an `initParams` section with your list of fields. For more information about `initParams`, see the section <<initparams-in-solrconfig.adoc#initparams-in-solrconfig,InitParams in SolrConfig>>.\n+[source,text]\n+----\n+http://localhost:8983/solr/techproducts/select?q=id:SP2514N&fl=id+name&wt=xml\n+----\n \n-=== SearchHandlers\n+And here is an example of parameters being sent through the POST form to `/query` Search Handler using <<json-request-api.adoc#json-request-api,JSON Request API>>.\n+\n+[source,bash]\n+----\n+curl http://localhost:8983/solr/techproducts/query -d '\n+{\n+  \"query\" : \"memory\",\n+  \"filter\" : \"inStock:true\"\n+}'\n+----\n \n-The primary request handler defined with Solr by default is the \"SearchHandler\", which handles search queries. The request handler is defined, and then a list of defaults for the handler are defined with a `defaults` list.\n+Either way, the parameters are extracted and combined with other options explained below.\n \n-For example, in the default `solrconfig.xml`, the first request handler defined looks like this:\n+=== defaults, appends, and invariants", "originalCommit": "f417fbb4c2fa2f70ee43bd11b1d894dd83abd1e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d1a53e86806479015932bb9b874542c8f5b4c7fe", "url": "https://github.com/apache/lucene-solr/commit/d1a53e86806479015932bb9b874542c8f5b4c7fe", "message": "Fix capitalization in headings", "committedDate": "2020-09-26T23:15:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM2NjEzMw==", "url": "https://github.com/apache/lucene-solr/pull/1921#discussion_r496366133", "bodyText": "@gerlowskija this reminds me... (off topic of this PR), do you know where and why \"_\" parameter is added?  If it's for query identification purposes then it's duplicitous with the \"rid\" you added.  I'm having trouble searching for it.", "author": "dsmiley", "createdAt": "2020-09-29T04:08:20Z", "path": "solr/solr-ref-guide/src/common-query-parameters.adoc", "diffHunk": "@@ -307,11 +307,13 @@ The `echoParams` parameter controls what information about request parameters is\n \n The `echoParams` parameter accepts the following values:\n \n-* `explicit`: This is the default value. Only parameters included in the actual request, plus the `_` parameter (which is a 64-bit numeric timestamp) will be added to the `params` section of the response header.\n+* `explicit`: Only parameters included in the actual request, plus the `_` parameter (which is a 64-bit numeric timestamp) will be added to the `params` section of the response header.", "originalCommit": "d1a53e86806479015932bb9b874542c8f5b4c7fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMwNzA3MA==", "url": "https://github.com/apache/lucene-solr/pull/1921#discussion_r498307070", "bodyText": "No, I don't know anything about it.  This is the first I've heard of an underscore param.\nIt may be duplicitous with the 'rid' stuff I added recently, but that's not necessarily the case.  e.g. There's nothing here that suggests that a '_' value gets passed without change to shard-requests, afaict.  But it's worth following up on for sure, thanks for pointing it out @dsmiley\n\nI'm having trouble searching for it.\n\nNo kidding!  Whoever put this in didn't have searchability in mind, that's for sure haha.", "author": "gerlowskija", "createdAt": "2020-10-01T14:52:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM2NjEzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMxNDEzMQ==", "url": "https://github.com/apache/lucene-solr/pull/1921#discussion_r498314131", "bodyText": "I did not see the evidence of that parameter in 9.0 when I tried to reproduce some basic searches. But, I did not have time to do a full-dive to see when it was introduced or - perhaps - removed. So, I did not update that documentation section. It may be completely wrong as well (just as echoParams=explicit being default).", "author": "arafalov", "createdAt": "2020-10-01T15:01:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM2NjEzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgzMjM5Ng==", "url": "https://github.com/apache/lucene-solr/pull/1921#discussion_r498832396", "bodyText": "I did some digging and discovered that the admin UI will add this underscore.  See services.js which does this via Date.now() all over the place.  I don't know what purpose it has; git blame shows it was added with that whole UI refactor of it's day but perhaps it predated it?  AFAICT Solr isn't doing anything with it Solr side; I set multiple conditional debugger breakpoints across SolrParams subclasses but no where is \"_\" requested.  My suspicion is that it was added to foil HTTP cache attempts?\nI did some JIRA digging and found: https://issues.apache.org/jira/browse/SOLR-4311 which has a patch with the underscores but it was for version, not the timestamp.  Given the underscore's use to defeat bad caching in that scenario, if I keep digging, I'll probably find it.\nIn short, I don't think we should document this underscore param in the ref guide.  It's not a special param to Solr; it's an oddity of our current admin UI.", "author": "dsmiley", "createdAt": "2020-10-02T13:47:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM2NjEzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY0NzQ0MA==", "url": "https://github.com/apache/lucene-solr/pull/1921#discussion_r499647440", "bodyText": "@arafalov can you please remove the '_' reference here in the docs?  I think what it says about this is false; I suspect it was always false.", "author": "dsmiley", "createdAt": "2020-10-05T14:37:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM2NjEzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY1ODMwMA==", "url": "https://github.com/apache/lucene-solr/pull/1921#discussion_r499658300", "bodyText": "Will do. I was busy on the other project, but will finish this one very soon.", "author": "arafalov", "createdAt": "2020-10-05T14:51:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM2NjEzMw=="}], "type": "inlineReview"}, {"oid": "fb655e3b3da7832490fc8298fe2fb398e53d19c3", "url": "https://github.com/apache/lucene-solr/commit/fb655e3b3da7832490fc8298fe2fb398e53d19c3", "message": "Fix merge", "committedDate": "2020-10-06T23:43:01Z", "type": "commit"}, {"oid": "97d1f2fab99c349886c327812656c3db03d98cd4", "url": "https://github.com/apache/lucene-solr/commit/97d1f2fab99c349886c327812656c3db03d98cd4", "message": "Fix merge-2", "committedDate": "2020-10-06T23:49:13Z", "type": "commit"}, {"oid": "0738c993b01ac0303ee3479f957e0a22e8d361c7", "url": "https://github.com/apache/lucene-solr/commit/0738c993b01ac0303ee3479f957e0a22e8d361c7", "message": "Remove underscore (_) mention", "committedDate": "2020-10-06T23:54:13Z", "type": "commit"}]}