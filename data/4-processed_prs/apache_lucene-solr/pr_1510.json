{"pr_number": 1510, "pr_title": "SOLR-14473: Improve Overseer Javadoc", "pr_createdAt": "2020-05-11T23:22:06Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1510", "timeline": [{"oid": "867d28b2249f0eb694bb513baafe94f210196c63", "url": "https://github.com/apache/lucene-solr/commit/867d28b2249f0eb694bb513baafe94f210196c63", "message": "SOLR-14473: improve Overseer Javadoc", "committedDate": "2020-05-11T22:52:22Z", "type": "commit"}, {"oid": "8f22390251678293b2f729a5756396ac8c06d70e", "url": "https://github.com/apache/lucene-solr/commit/8f22390251678293b2f729a5756396ac8c06d70e", "message": "SOLR-14473 Overseer Javadoc update", "committedDate": "2020-05-11T23:17:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxMzM0OA==", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424613348", "bodyText": "Minor: \"a thread from a thread pool\" - might be better to specify which? And also to specify how many threads are typically available? (e.g. OverseerCollectionMessageHandlerThreadFactory with 5-10 threads)", "author": "megancarey", "createdAt": "2020-05-13T17:35:00Z", "path": "solr/core/src/java/org/apache/solr/cloud/Overseer.java", "diffHunk": "@@ -79,8 +79,60 @@\n import com.codahale.metrics.Timer;\n \n /**\n- * Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n- * collections, shards, replicas and setting various properties.\n+ * <p>Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n+ * collections, shards, replicas and setting various properties.</p>\n+ *\n+ * <p>The <b>Overseer</b> is a single elected node in the SolrCloud cluster that is in charge of interactions with\n+ * ZooKeeper that require global synchronization. It also hosts the Collection API implementation and the\n+ * Autoscaling framework.</p>\n+ *\n+ * <p>The Overseer deals with:</p>\n+ * <ul>\n+ *   <li>Cluster State updates, i.e. updating Collections' <code>state.json</code> files in ZooKeeper (or previously the\n+ *   <code>clusterstate.json</code>), see {@link ClusterStateUpdater},</li>\n+ *   <li>Collection API implementation, including Autoscaling replica placement computation, see\n+ *   {@link OverseerCollectionConfigSetProcessor} and {@link OverseerCollectionMessageHandler} (and the example below),</li>\n+ *   <li>Updating Config Sets, see {@link OverseerCollectionConfigSetProcessor} and {@link OverseerConfigSetMessageHandler},</li>\n+ *   <li>Autoscaling triggers, see {@link org.apache.solr.cloud.autoscaling.OverseerTriggerThread}.</li>\n+ * </ul>\n+ *\n+ * <p>The nodes in the cluster communicate with the Overseer over queues implemented in ZooKeeper. There are essentially\n+ * two queues:</p>\n+ * <ol>\n+ *   <li>The <b>state update queue</b>, through which nodes request the Overseer to update the <code>state.json</code> file of a\n+ *   Collection in ZooKeeper. This queue is in Zookeeper at <code>/overseer/queue</code>,</li>\n+ *   <li>A queue shared between <b>Collection API and Config Set API</b> requests. This queue is in Zookeeper at\n+ *   <code>/overseer/collection-queue-work</code>.</li>\n+ * </ol>\n+ *\n+ * <p>An example of the steps involved in the Overseer processing a Collection creation API call:</p>\n+ * <ol>\n+ *   <li>Client uses the Collection API with <code>CREATE</code> action and reaches a node of the cluster,</li>\n+ *   <li>The node (via {@link CollectionsHandler}) enqueues the request into the <code>/overseer/collection-queue-work</code>\n+ *   queue in ZooKeepeer,</li>\n+ *   <li>The {@link OverseerCollectionConfigSetProcessor} running on the Overseer node dequeues the message and using a\n+ *   thread from a thread pool hands it for processing to {@link OverseerCollectionMessageHandler},</li>", "originalCommit": "8f22390251678293b2f729a5756396ac8c06d70e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxNTc4OA==", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424615788", "bodyText": "Minor (and I know this could snowball): might be nice to add a note in OverseerTaskQueue. The doc for that class is pretty uninformative.", "author": "megancarey", "createdAt": "2020-05-13T17:39:13Z", "path": "solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue.java", "diffHunk": "@@ -51,9 +51,16 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * A ZK-based distributed queue. Optimized for single-consumer,\n+ * <p>A ZK-based distributed queue. Optimized for single-consumer,\n  * multiple-producer: if there are multiple consumers on the same ZK queue,\n- * the results should be correct but inefficient\n+ * the results should be correct but inefficient.</p>\n+ *\n+ * <p>This implementation (with help from subclass {@link OverseerTaskQueue}) is used for the", "originalCommit": "8f22390251678293b2f729a5756396ac8c06d70e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNjAwMA==", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r425336000", "bodyText": "There's already a link to this class from OverseerTaskQueue's javadoc. Leaving it as is.", "author": "murblanc", "createdAt": "2020-05-14T18:09:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxNTc4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxNzM1NA==", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424617354", "bodyText": "Minor: link to Overseer.ClusterStateUpdater instead of just naming the queue here", "author": "megancarey", "createdAt": "2020-05-13T17:41:53Z", "path": "solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java", "diffHunk": "@@ -70,6 +70,19 @@ public boolean isHigherOrEqual(LockLevel that) {\n     }\n   }\n \n+  /**\n+   * <p>(Mostly) Collection API actions that can be sent by nodes to the Overseer over the <code>/overseer/collection-queue-work</code>\n+   * ZooKeeper queue.</p>\n+   *\n+   * <p>Some of these actions are also used over the cluster state update queue at <code>/overseer/queue</code>, and really", "originalCommit": "8f22390251678293b2f729a5756396ac8c06d70e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNzY5NQ==", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r425337695", "bodyText": "Now that I try to change it, I remember I tried initially but there's no class visibility from here to Overseer. Sometimes I wish Javadocs were more permissive we are not linkers, we are humans.", "author": "murblanc", "createdAt": "2020-05-14T18:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxNzM1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4ODEwNQ==", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424688105", "bodyText": "While I agree with the point you're making, this reads a bit snarky or sarcastic. Maybe leave the suggested improvement as a TODO?", "author": "madrob", "createdAt": "2020-05-13T19:44:14Z", "path": "solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java", "diffHunk": "@@ -70,6 +70,19 @@ public boolean isHigherOrEqual(LockLevel that) {\n     }\n   }\n \n+  /**\n+   * <p>(Mostly) Collection API actions that can be sent by nodes to the Overseer over the <code>/overseer/collection-queue-work</code>\n+   * ZooKeeper queue.</p>\n+   *\n+   * <p>Some of these actions are also used over the cluster state update queue at <code>/overseer/queue</code>, and really", "originalCommit": "8f22390251678293b2f729a5756396ac8c06d70e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4OTU0OQ==", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424689549", "bodyText": "I don't think it's worth bringing up clusterstate.json here, it is very very old.", "author": "madrob", "createdAt": "2020-05-13T19:47:03Z", "path": "solr/core/src/java/org/apache/solr/cloud/Overseer.java", "diffHunk": "@@ -79,8 +79,60 @@\n import com.codahale.metrics.Timer;\n \n /**\n- * Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n- * collections, shards, replicas and setting various properties.\n+ * <p>Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n+ * collections, shards, replicas and setting various properties.</p>\n+ *\n+ * <p>The <b>Overseer</b> is a single elected node in the SolrCloud cluster that is in charge of interactions with\n+ * ZooKeeper that require global synchronization. It also hosts the Collection API implementation and the\n+ * Autoscaling framework.</p>\n+ *\n+ * <p>The Overseer deals with:</p>\n+ * <ul>\n+ *   <li>Cluster State updates, i.e. updating Collections' <code>state.json</code> files in ZooKeeper (or previously the\n+ *   <code>clusterstate.json</code>), see {@link ClusterStateUpdater},</li>", "originalCommit": "8f22390251678293b2f729a5756396ac8c06d70e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MjIzOQ==", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424692239", "bodyText": "I'm a little squeamish about linking out to an arbitrary Google Doc from our javadoc. Either the information should be here, or at worst an Apache hosted wiki page.", "author": "madrob", "createdAt": "2020-05-13T19:52:01Z", "path": "solr/core/src/java/org/apache/solr/cloud/Overseer.java", "diffHunk": "@@ -79,8 +79,60 @@\n import com.codahale.metrics.Timer;\n \n /**\n- * Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n- * collections, shards, replicas and setting various properties.\n+ * <p>Cluster leader. Responsible for processing state updates, node assignments, creating/deleting\n+ * collections, shards, replicas and setting various properties.</p>\n+ *\n+ * <p>The <b>Overseer</b> is a single elected node in the SolrCloud cluster that is in charge of interactions with\n+ * ZooKeeper that require global synchronization. It also hosts the Collection API implementation and the\n+ * Autoscaling framework.</p>\n+ *\n+ * <p>The Overseer deals with:</p>\n+ * <ul>\n+ *   <li>Cluster State updates, i.e. updating Collections' <code>state.json</code> files in ZooKeeper (or previously the\n+ *   <code>clusterstate.json</code>), see {@link ClusterStateUpdater},</li>\n+ *   <li>Collection API implementation, including Autoscaling replica placement computation, see\n+ *   {@link OverseerCollectionConfigSetProcessor} and {@link OverseerCollectionMessageHandler} (and the example below),</li>\n+ *   <li>Updating Config Sets, see {@link OverseerCollectionConfigSetProcessor} and {@link OverseerConfigSetMessageHandler},</li>\n+ *   <li>Autoscaling triggers, see {@link org.apache.solr.cloud.autoscaling.OverseerTriggerThread}.</li>\n+ * </ul>\n+ *\n+ * <p>The nodes in the cluster communicate with the Overseer over queues implemented in ZooKeeper. There are essentially\n+ * two queues:</p>\n+ * <ol>\n+ *   <li>The <b>state update queue</b>, through which nodes request the Overseer to update the <code>state.json</code> file of a\n+ *   Collection in ZooKeeper. This queue is in Zookeeper at <code>/overseer/queue</code>,</li>\n+ *   <li>A queue shared between <b>Collection API and Config Set API</b> requests. This queue is in Zookeeper at\n+ *   <code>/overseer/collection-queue-work</code>.</li>\n+ * </ol>\n+ *\n+ * <p>An example of the steps involved in the Overseer processing a Collection creation API call:</p>\n+ * <ol>\n+ *   <li>Client uses the Collection API with <code>CREATE</code> action and reaches a node of the cluster,</li>\n+ *   <li>The node (via {@link CollectionsHandler}) enqueues the request into the <code>/overseer/collection-queue-work</code>\n+ *   queue in ZooKeepeer,</li>\n+ *   <li>The {@link OverseerCollectionConfigSetProcessor} running on the Overseer node dequeues the message and using a\n+ *   thread from a thread pool hands it for processing to {@link OverseerCollectionMessageHandler},</li>\n+ *   <li>Command {@link org.apache.solr.cloud.api.collections.CreateCollectionCmd} then executes and does:\n+ *   <ol>\n+ *     <li>Update some state directly in ZooKeeper (creating collection znode),</li>\n+ *     <li>Compute replica placement on available nodes in the cluster,</li>\n+ *     <li>Enqueue a state change request for creating the <code>state.json</code> file for the collection in ZooKeeper.\n+ *     This is done by enqueuing a message in <code>/overseer/queue</code>,</li>\n+ *     <li>The command then waits for the update to be seen in ZooKeeper...</li>\n+ *   </ol></li>\n+ *   <li>The {@link ClusterStateUpdater} (also running on the Overseer node) dequeues the state change message and creates the\n+ *   <code>state.json</code> file in ZooKeeper for the Collection. All the work of the cluster state updater\n+ *   (creations, updates, deletes) is done sequentially for the whole cluster by a single thread.</li>\n+ *   <li>The {@link org.apache.solr.cloud.api.collections.CreateCollectionCmd} sees the state change in\n+ *   ZooKeeper and:\n+ *   <ol start=\"5\">\n+ *     <li>Builds and sends requests to each node to create the appropriate cores for all the replicas of all shards\n+ *     of the collection.</li>\n+ *   </ol></li>\n+ *   <li>The collection creation command has succeeded and the client receives a success return.</li>\n+ * </ol>\n+ *\n+ * See also <a href=\"https://docs.google.com/document/d/1KTHq3noZBVUQ7QNuBGEhujZ_duwTVpAsvN3Nz5anQUY/\">Overseer google doc</a>.", "originalCommit": "8f22390251678293b2f729a5756396ac8c06d70e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MjgzNQ==", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r424692835", "bodyText": "I think we can cordon this off behind @implNote and @implSpec Javadocs tags to improve the readability", "author": "madrob", "createdAt": "2020-05-13T19:53:04Z", "path": "solr/core/src/java/org/apache/solr/cloud/ZkDistributedQueue.java", "diffHunk": "@@ -51,9 +51,16 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * A ZK-based distributed queue. Optimized for single-consumer,\n+ * <p>A ZK-based distributed queue. Optimized for single-consumer,\n  * multiple-producer: if there are multiple consumers on the same ZK queue,\n- * the results should be correct but inefficient\n+ * the results should be correct but inefficient.</p>\n+ *\n+ * <p>This implementation (with help from subclass {@link OverseerTaskQueue}) is used for the\n+ * <code>/overseer/collection-queue-work</code> queue used for Collection and Config Set API calls to the Overseer.</p>\n+ *\n+ * <p>In order to enqueue a message into this queue, a {@link CreateMode#EPHEMERAL_SEQUENTIAL} response node is created", "originalCommit": "8f22390251678293b2f729a5756396ac8c06d70e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMjM0OQ==", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r425332349", "bodyText": "Thanks, didn't know about these tags.", "author": "murblanc", "createdAt": "2020-05-14T18:03:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MjgzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQxMjM4MQ==", "url": "https://github.com/apache/lucene-solr/pull/1510#discussion_r425412381", "bodyText": "I'm not the only one not to know about these tags: ant precommit doesn't know either...", "author": "murblanc", "createdAt": "2020-05-14T20:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MjgzNQ=="}], "type": "inlineReview"}, {"oid": "2fdb555d6b94465ba4583dc020970fef88a117e4", "url": "https://github.com/apache/lucene-solr/commit/2fdb555d6b94465ba4583dc020970fef88a117e4", "message": "SOLR-14473: integrate PR comments from Mike Drob and Megan Carey", "committedDate": "2020-05-14T21:15:41Z", "type": "commit"}]}