{"pr_number": 1954, "pr_title": "SOLR-14787 - Adding support to use inequalities to the payload check query parser.", "pr_createdAt": "2020-10-06T20:40:24Z", "pr_url": "https://github.com/apache/lucene-solr/pull/1954", "timeline": [{"oid": "ca29f1e490c5bca2abac004fdc8e915aab840603", "url": "https://github.com/apache/lucene-solr/commit/ca29f1e490c5bca2abac004fdc8e915aab840603", "message": "initial commit of payload inequality checking, one unit test case still fails.", "committedDate": "2020-10-06T20:27:25Z", "type": "commit"}, {"oid": "d6bc2b6c4ffd941c543d5f968083ef878042a0b0", "url": "https://github.com/apache/lucene-solr/commit/d6bc2b6c4ffd941c543d5f968083ef878042a0b0", "message": "pushing the failing test to the first one to help debug.  (seems to be case sensitive now?)", "committedDate": "2020-10-06T20:27:25Z", "type": "commit"}, {"oid": "d0e91107b44706b516a79b6c0cd6cde186942085", "url": "https://github.com/apache/lucene-solr/commit/d0e91107b44706b516a79b6c0cd6cde186942085", "message": "Eliminate need for threshold parameter, Allow op for multiple tokens, fix equals method so that it also accounts for the new op field.", "committedDate": "2020-10-08T14:17:28Z", "type": "commit"}, {"oid": "89c386b083b2d036681b6532614c46af6bfa5629", "url": "https://github.com/apache/lucene-solr/commit/89c386b083b2d036681b6532614c46af6bfa5629", "message": "work in progress to support multiple payload types and to separate the solr and lucene apis better.", "committedDate": "2020-10-26T16:55:52Z", "type": "commit"}, {"oid": "799ae49b6e5fe93b8dc71c39e7205dd702fb40dc", "url": "https://github.com/apache/lucene-solr/commit/799ae49b6e5fe93b8dc71c39e7205dd702fb40dc", "message": "setting utf8 as the encoding for a string decode.", "committedDate": "2020-10-26T17:40:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIwMTY3Ng==", "url": "https://github.com/apache/lucene-solr/pull/1954#discussion_r512201676", "bodyText": "NULL_DEREFERENCE:  object returned by org.apache.lucene.queries.payloads.PayloadMatcherFactory.payloadCheckerOpTypeMap.get(payloadType) could be null and is dereferenced at line 72.", "author": "sonatype-lift", "createdAt": "2020-10-26T19:05:14Z", "path": "lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadMatcherFactory.java", "diffHunk": "@@ -0,0 +1,243 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.lucene.queries.payloads;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.HashMap;\n+\n+import org.apache.lucene.queries.payloads.SpanPayloadCheckQuery.PayloadType;\n+import org.apache.lucene.util.BytesRef;\n+\n+/**\n+ * Creates a payload matcher object based on a payload type and an operation.\n+ * PayloadTypes of INT,FLOAT, or STRING are supported.  Inequality operations are supported.\n+ */\n+public class PayloadMatcherFactory {\n+\n+  private static final HashMap<PayloadType, HashMap<String, PayloadMatcher>> payloadCheckerOpTypeMap;\n+  static {\n+    payloadCheckerOpTypeMap= new HashMap<PayloadType, HashMap<String, PayloadMatcher>>();\n+    // ints\n+    HashMap<String, PayloadMatcher> intCheckers = new HashMap<String, PayloadMatcher>();\n+    intCheckers.put(\"lt\", new LTIntPayloadMatcher());\n+    intCheckers.put(\"lte\", new LTEIntPayloadMatcher());\n+    intCheckers.put(\"gt\", new GTIntPayloadMatcher());\n+    intCheckers.put(\"gte\", new GTEIntPayloadMatcher());\n+    HashMap<String, PayloadMatcher> floatCheckers = new HashMap<String, PayloadMatcher>();\n+    floatCheckers.put(\"lt\", new LTFloatPayloadMatcher());\n+    floatCheckers.put(\"lte\", new LTEFloatPayloadMatcher());\n+    floatCheckers.put(\"gt\", new GTFloatPayloadMatcher());\n+    floatCheckers.put(\"gte\", new GTEFloatPayloadMatcher());\n+    // strings\n+    HashMap<String, PayloadMatcher> stringCheckers = new HashMap<String, PayloadMatcher>();\n+    stringCheckers.put(\"lt\", new LTStringPayloadMatcher());\n+    stringCheckers.put(\"lte\", new LTEStringPayloadMatcher());\n+    stringCheckers.put(\"gt\", new GTStringPayloadMatcher());\n+    stringCheckers.put(\"gte\", new GTEStringPayloadMatcher());\n+    // load the matcher maps per payload type\n+    payloadCheckerOpTypeMap.put(PayloadType.INT, intCheckers);\n+    payloadCheckerOpTypeMap.put(PayloadType.FLOAT, floatCheckers);\n+    payloadCheckerOpTypeMap.put(PayloadType.STRING, stringCheckers);\n+  }\n+  \n+  /**\n+   * Return a payload matcher for use in the SpanPayloadCheckQuery that will decode the ByteRef from \n+   * a payload based on the payload type, and apply a matching inequality operations (eq,lt,lte,gt,and gte)\n+   * \n+   * @param payloadType the type of the payload to decode, STRING, INT, FLOAT\n+   * @param op and inequalit operation as the test (example: eq for equals, gt for greater than)\n+   * @return a payload matcher that decodes the payload and applies the operation inequality test.\n+   * \n+   */\n+  public static PayloadMatcher createMatcherForOpAndType(PayloadType payloadType, String op) {\n+    // special optimization, binary/byte comparison\n+    if (op == null || \"eq\".contentEquals(op)) {\n+      return new EQPayloadMatcher();\n+    }\n+    // otherwise, we need to pay attention to the payload type and operation\n+    return payloadCheckerOpTypeMap.get(payloadType).get(op);", "originalCommit": "799ae49b6e5fe93b8dc71c39e7205dd702fb40dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg2MzQwNw==", "url": "https://github.com/apache/lucene-solr/pull/1954#discussion_r552863407", "bodyText": "added a null test to default to unknown operations resulting in an equality comparison.", "author": "kwatters", "createdAt": "2021-01-06T17:58:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIwMTY3Ng=="}], "type": "inlineReview"}, {"oid": "db58daa21587b061508ff0246f51ba6cb772f091", "url": "https://github.com/apache/lucene-solr/commit/db58daa21587b061508ff0246f51ba6cb772f091", "message": "avoid a null pointer dereference", "committedDate": "2020-10-26T21:05:07Z", "type": "commit"}, {"oid": "5a87f73c697829f80238aa05f7c5459610e4bc93", "url": "https://github.com/apache/lucene-solr/commit/5a87f73c697829f80238aa05f7c5459610e4bc93", "message": "more docs for payloadType", "committedDate": "2020-10-26T21:22:15Z", "type": "commit"}, {"oid": "253e530912d4214db697cf88f61c54588b8c6e0f", "url": "https://github.com/apache/lucene-solr/commit/253e530912d4214db697cf88f61c54588b8c6e0f", "message": "updating lucene unit tests", "committedDate": "2020-10-27T19:42:56Z", "type": "commit"}, {"oid": "0ef293739fdf56c9327b47d4272b9b0e83a5e538", "url": "https://github.com/apache/lucene-solr/commit/0ef293739fdf56c9327b47d4272b9b0e83a5e538", "message": "wire the payload encoder type through", "committedDate": "2020-10-27T20:35:37Z", "type": "commit"}, {"oid": "6a9cb0af58cf1acd7d28988363de6553dfc00351", "url": "https://github.com/apache/lucene-solr/commit/6a9cb0af58cf1acd7d28988363de6553dfc00351", "message": "adding more test cases for ints and floats", "committedDate": "2020-11-23T19:19:12Z", "type": "commit"}, {"oid": "1297674de73d577089103ffe8ebf98e716329d69", "url": "https://github.com/apache/lucene-solr/commit/1297674de73d577089103ffe8ebf98e716329d69", "message": "adding some solr docs for the new payload check functionality", "committedDate": "2020-11-23T20:51:09Z", "type": "commit"}, {"oid": "b3053ba2c863cf908be05c64be6052d03963d21d", "url": "https://github.com/apache/lucene-solr/commit/b3053ba2c863cf908be05c64be6052d03963d21d", "message": "passing tests", "committedDate": "2020-11-23T20:55:04Z", "type": "commit"}, {"oid": "3ee2b0294e23f3951c482692788cc785bf4ef3ea", "url": "https://github.com/apache/lucene-solr/commit/3ee2b0294e23f3951c482692788cc785bf4ef3ea", "message": "obey payload string length", "committedDate": "2021-01-04T17:34:58Z", "type": "commit"}, {"oid": "7662722211b3dd7599bb2eaac683562cc2e55c40", "url": "https://github.com/apache/lucene-solr/commit/7662722211b3dd7599bb2eaac683562cc2e55c40", "message": "new test method", "committedDate": "2021-01-04T17:35:24Z", "type": "commit"}, {"oid": "b4fa12795d2e8e46d82c6fb76050566735a6b8bf", "url": "https://github.com/apache/lucene-solr/commit/b4fa12795d2e8e46d82c6fb76050566735a6b8bf", "message": "cleanup and lucene unit test for payload inequality checks", "committedDate": "2021-01-06T15:59:46Z", "type": "commit"}, {"oid": "d61dda38d662926d513cc686e9eaf6abc0b84941", "url": "https://github.com/apache/lucene-solr/commit/d61dda38d662926d513cc686e9eaf6abc0b84941", "message": "removing Arrays.copyOfRange because it's a forbidden api", "committedDate": "2021-01-06T16:21:23Z", "type": "commit"}, {"oid": "e1667327a569db6feb3c7c6e9228172eec1d28c9", "url": "https://github.com/apache/lucene-solr/commit/e1667327a569db6feb3c7c6e9228172eec1d28c9", "message": "Merge branch 'master' into SOLR-14787-master", "committedDate": "2021-01-06T16:41:17Z", "type": "commit"}, {"oid": "41e002cffff934b2dc7b00fae84cb4e7114b0a7d", "url": "https://github.com/apache/lucene-solr/commit/41e002cffff934b2dc7b00fae84cb4e7114b0a7d", "message": "formatting issue", "committedDate": "2021-01-06T16:54:06Z", "type": "commit"}, {"oid": "a8f646e995bcb00c80a0888afa25009c5a7342df", "url": "https://github.com/apache/lucene-solr/commit/a8f646e995bcb00c80a0888afa25009c5a7342df", "message": "more formatting", "committedDate": "2021-01-06T16:55:47Z", "type": "commit"}, {"oid": "e681a36d3f2a485efc190e3410d733407d82a945", "url": "https://github.com/apache/lucene-solr/commit/e681a36d3f2a485efc190e3410d733407d82a945", "message": "tidy", "committedDate": "2021-01-06T17:31:07Z", "type": "commit"}, {"oid": "3e844f00e58b2219083eda86e4c387b1fd40432d", "url": "https://github.com/apache/lucene-solr/commit/3e844f00e58b2219083eda86e4c387b1fd40432d", "message": "trimming up some changes", "committedDate": "2021-01-06T18:13:11Z", "type": "commit"}, {"oid": "260a59144183713a8d9d10bb5f61903038e0a67f", "url": "https://github.com/apache/lucene-solr/commit/260a59144183713a8d9d10bb5f61903038e0a67f", "message": "removing a TODO", "committedDate": "2021-01-06T18:15:31Z", "type": "commit"}, {"oid": "093a9a389a0106073470759e7351b788564840da", "url": "https://github.com/apache/lucene-solr/commit/093a9a389a0106073470759e7351b788564840da", "message": "last todo being removed", "committedDate": "2021-01-06T18:25:19Z", "type": "commit"}, {"oid": "b2ea15a45a3042246556d767778187f9d16c4459", "url": "https://github.com/apache/lucene-solr/commit/b2ea15a45a3042246556d767778187f9d16c4459", "message": "merge", "committedDate": "2021-02-17T15:27:37Z", "type": "commit"}, {"oid": "4b8b77093a6822f10911a005395baac97c04963a", "url": "https://github.com/apache/lucene-solr/commit/4b8b77093a6822f10911a005395baac97c04963a", "message": "update the plugin for the latest changes to the span payload check query", "committedDate": "2021-02-17T17:00:33Z", "type": "commit"}, {"oid": "3a10b25986cf924c5d1599a7174d0d6f32264cab", "url": "https://github.com/apache/lucene-solr/commit/3a10b25986cf924c5d1599a7174d0d6f32264cab", "message": "spotless apply", "committedDate": "2021-02-17T17:14:05Z", "type": "commit"}, {"oid": "be3767afd262a013dee817ac281c71a2ebf8ce4d", "url": "https://github.com/apache/lucene-solr/commit/be3767afd262a013dee817ac281c71a2ebf8ce4d", "message": "forbidden api fix", "committedDate": "2021-02-17T18:44:25Z", "type": "commit"}, {"oid": "fe35da6661b6b557393889c301f9ad517670b3cb", "url": "https://github.com/apache/lucene-solr/commit/fe35da6661b6b557393889c301f9ad517670b3cb", "message": "Merge remote-tracking branch 'upstream/master' into SOLR-14787-master", "committedDate": "2021-02-17T22:15:58Z", "type": "commit"}, {"oid": "bf3a9ab5fd7e6d7e01f0ecb526b8c6e031717597", "url": "https://github.com/apache/lucene-solr/commit/bf3a9ab5fd7e6d7e01f0ecb526b8c6e031717597", "message": "SOLR-14787 Expand docs for PayloadCheckQueryParser and coordinate better with the section heading.", "committedDate": "2021-02-20T22:30:46Z", "type": "commit"}, {"oid": "cba1c9696ab1f2200f36fe51cbfe55bd7b181aa1", "url": "https://github.com/apache/lucene-solr/commit/cba1c9696ab1f2200f36fe51cbfe55bd7b181aa1", "message": "SOLR-14787 Add a couple of tests off the happy path.", "committedDate": "2021-02-20T22:33:21Z", "type": "commit"}]}