{"pr_number": 4328, "pr_title": "task-NXP-27059-javadoc", "pr_createdAt": "2020-09-18T07:15:25Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/4328", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3MDAyOA==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r494070028", "bodyText": "There's a second 2.10.3 mention in the same pom, see d60f1ec", "author": "atchertchian", "createdAt": "2020-09-24T06:35:24Z", "path": "pom.xml", "diffHunk": "@@ -5402,7 +5402,7 @@\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-javadoc-plugin</artifactId>\n-          <version>2.10.3</version>\n+          <version>3.2.0</version>", "originalCommit": "64e0609d6f7d8c0bb6e10a8f82421497a079b3c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1NTEzOQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r494255139", "bodyText": "This one https://github.com/nuxeo/nuxeo/pull/4328/files#diff-600376dffeb79835ede4a0b285078036L6461?", "author": "kevinleturc", "createdAt": "2020-09-24T11:56:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3MDAyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1OTUxOA==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r494259518", "bodyText": "Indeed, i missed the change \ud83d\udc4d", "author": "atchertchian", "createdAt": "2020-09-24T12:04:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3MDAyOA=="}], "type": "inlineReview"}, {"oid": "287817238ce154704aac431aacf36860b7621a33", "url": "https://github.com/nuxeo/nuxeo/commit/287817238ce154704aac431aacf36860b7621a33", "message": "NXP-27059: Enable javadoc validation", "committedDate": "2020-11-16T14:58:40Z", "type": "forcePushed"}, {"oid": "3103a288ac16d0866d3f10ccbca03f0a7a87763e", "url": "https://github.com/nuxeo/nuxeo/commit/3103a288ac16d0866d3f10ccbca03f0a7a87763e", "message": "NXP-27059: Enable javadoc validation", "committedDate": "2020-11-17T11:10:38Z", "type": "forcePushed"}, {"oid": "0aa21f90cdebf85be68c3f7b254287d6a691dfea", "url": "https://github.com/nuxeo/nuxeo/commit/0aa21f90cdebf85be68c3f7b254287d6a691dfea", "message": "NXP-27059: Fix JavaDoc warnings/errors", "committedDate": "2020-11-17T16:20:54Z", "type": "forcePushed"}, {"oid": "58c79423dd7a22168178bd5ef09c00b8e03d77e6", "url": "https://github.com/nuxeo/nuxeo/commit/58c79423dd7a22168178bd5ef09c00b8e03d77e6", "message": "NXP-27059: Fix JavaDoc warnings/errors", "committedDate": "2020-11-18T10:51:34Z", "type": "forcePushed"}, {"oid": "18d8c2d359bbf257e3ca19ef6aa475c9dd571338", "url": "https://github.com/nuxeo/nuxeo/commit/18d8c2d359bbf257e3ca19ef6aa475c9dd571338", "message": "NXP-27059: Fix JavaDoc warnings/errors", "committedDate": "2020-11-18T15:57:37Z", "type": "forcePushed"}, {"oid": "916d664316e3b8c83172f4825d5b4eac680f17cd", "url": "https://github.com/nuxeo/nuxeo/commit/916d664316e3b8c83172f4825d5b4eac680f17cd", "message": "NXP-27059: Fix JavaDoc warnings/errors", "committedDate": "2020-11-19T10:21:04Z", "type": "forcePushed"}, {"oid": "201b21b06bb3cc325113c82cf785ebca60d2b507", "url": "https://github.com/nuxeo/nuxeo/commit/201b21b06bb3cc325113c82cf785ebca60d2b507", "message": "NXP-27059: Put Javadoc generation in CI", "committedDate": "2020-11-20T17:40:46Z", "type": "forcePushed"}, {"oid": "41d344d19e61cc4f3c78caf14c232bcc6afad788", "url": "https://github.com/nuxeo/nuxeo/commit/41d344d19e61cc4f3c78caf14c232bcc6afad788", "message": "NXP-27059: Put Javadoc generation in CI", "committedDate": "2020-11-20T17:43:27Z", "type": "forcePushed"}, {"oid": "4a760418075b9f3236fdada38346aec8f65416e0", "url": "https://github.com/nuxeo/nuxeo/commit/4a760418075b9f3236fdada38346aec8f65416e0", "message": "NXP-27059: Put Javadoc generation in CI", "committedDate": "2020-11-20T17:54:44Z", "type": "forcePushed"}, {"oid": "c3625ea49b1da3970245d94d5f5aec2b836e69ab", "url": "https://github.com/nuxeo/nuxeo/commit/c3625ea49b1da3970245d94d5f5aec2b836e69ab", "message": "NXP-27059: Put Javadoc generation in CI", "committedDate": "2020-11-23T09:08:08Z", "type": "forcePushed"}, {"oid": "0ae92d0cc0ec1fed9766cb90e17639c2a3bc432f", "url": "https://github.com/nuxeo/nuxeo/commit/0ae92d0cc0ec1fed9766cb90e17639c2a3bc432f", "message": "NXP-27059: Put Javadoc generation in CI", "committedDate": "2020-11-23T10:10:07Z", "type": "forcePushed"}, {"oid": "b8ea670c35e095d8959eb42ce4d8cf9fffb808f6", "url": "https://github.com/nuxeo/nuxeo/commit/b8ea670c35e095d8959eb42ce4d8cf9fffb808f6", "message": "NXP-27059: Update javadoc/source plugin versions", "committedDate": "2020-11-27T15:41:21Z", "type": "commit"}, {"oid": "f2955571755a8c88981739aeb1a28e4e8dc24177", "url": "https://github.com/nuxeo/nuxeo/commit/f2955571755a8c88981739aeb1a28e4e8dc24177", "message": "NXP-27059: Enable javadoc validation", "committedDate": "2020-11-27T15:41:21Z", "type": "commit"}, {"oid": "a3f7cd4653c6ab3ff130ee0d7ab63cd72275ab13", "url": "https://github.com/nuxeo/nuxeo/commit/a3f7cd4653c6ab3ff130ee0d7ab63cd72275ab13", "message": "NXP-27059: Add support for JavaDoc @apiNote, @implSpec and @implNote tags", "committedDate": "2020-11-27T15:41:21Z", "type": "commit"}, {"oid": "9641684d17c76ed1c4f26166d6bed158e7b8c9bf", "url": "https://github.com/nuxeo/nuxeo/commit/9641684d17c76ed1c4f26166d6bed158e7b8c9bf", "message": "NXP-27059: Fix JavaDoc warnings/errors", "committedDate": "2020-11-27T15:41:22Z", "type": "commit"}, {"oid": "2491ca452da913cdf3625db0621237aa35cfdfc0", "url": "https://github.com/nuxeo/nuxeo/commit/2491ca452da913cdf3625db0621237aa35cfdfc0", "message": "NXP-27059: Remove all reports from site phase", "committedDate": "2020-11-27T15:41:22Z", "type": "commit"}, {"oid": "05402b467d42b04a38156adea14662840f036b53", "url": "https://github.com/nuxeo/nuxeo/commit/05402b467d42b04a38156adea14662840f036b53", "message": "NXP-27059: Attach javadoc artifacts on master build", "committedDate": "2020-11-27T15:41:23Z", "type": "forcePushed"}, {"oid": "6dd4eb3dd8ba0327153a31ce45ed51f62cb4ed4d", "url": "https://github.com/nuxeo/nuxeo/commit/6dd4eb3dd8ba0327153a31ce45ed51f62cb4ed4d", "message": "NXP-27059: Attach javadoc artifacts on master build", "committedDate": "2020-11-27T16:01:03Z", "type": "forcePushed"}, {"oid": "b3dc1e92f1af682161e8c7d37063f9d0dcbda763", "url": "https://github.com/nuxeo/nuxeo/commit/b3dc1e92f1af682161e8c7d37063f9d0dcbda763", "message": "NXP-27059: Attach javadoc artifacts on master build", "committedDate": "2020-11-30T10:25:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY5Mzc1MA==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r532693750", "bodyText": "seem unneeded", "author": "ataillefer", "createdAt": "2020-11-30T15:44:01Z", "path": "ci/Jenkinsfiles/javadoc.groovy", "diffHunk": "@@ -0,0 +1,278 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Antoine Taillefer <ataillefer@nuxeo.com>\n+ *     Thomas Roger <troger@nuxeo.com>\n+ *     Kevin Leturc <kleturc@nuxeo.com>\n+ */\n+\n+repositoryUrl = 'https://github.com/nuxeo/nuxeo'\n+\n+properties([\n+  [$class: 'GithubProjectProperty', projectUrlStr: repositoryUrl],\n+  [$class: 'BuildDiscarderProperty', strategy: [$class: 'LogRotator', daysToKeepStr: '60', numToKeepStr: '60', artifactNumToKeepStr: '5']],\n+  disableConcurrentBuilds(),\n+])\n+\n+void setGitHubBuildStatus(String context, String message, String state) {\n+  if (env.DRY_RUN != \"true\") {\n+    step([\n+      $class: 'GitHubCommitStatusSetter',\n+      reposSource: [$class: 'ManuallyEnteredRepositorySource', url: repositoryUrl],\n+      contextSource: [$class: 'ManuallyEnteredCommitContextSource', context: context],\n+      statusResultSource: [$class: 'ConditionalStatusResultSource', results: [[$class: 'AnyBuildResult', message: message, state: state]]],\n+    ])\n+  }\n+}\n+\n+String getMavenArgs() {\n+  def args = '-B -nsu -Dnuxeo.skip.enforcer=true'\n+  if (!isPullRequest()) {\n+    args += ' -Prelease'\n+  }\n+  return args\n+}\n+\n+def isPullRequest() {\n+  return BRANCH_NAME =~ /PR-.*/\n+}\n+\n+String getVersion() {\n+  return isPullRequest() ? getPullRequestVersion() : getReleaseVersion()\n+}\n+\n+String getReleaseVersion() {\n+  String nuxeoVersion = readMavenPom().getVersion()\n+  String noSnapshot = nuxeoVersion.replace('-SNAPSHOT', '')\n+  String version = noSnapshot + '.0' // first version ever\n+\n+  // find the latest tag if any\n+  sh \"git fetch origin 'refs/tags/v${noSnapshot}*:refs/tags/v${noSnapshot}*'\"\n+  def tag = sh(returnStdout: true, script: \"git tag --sort=taggerdate --list 'v${noSnapshot}*' | tail -1 | tr -d '\\n'\")\n+  if (tag) {\n+    container('maven') {\n+      version = sh(returnStdout: true, script: \"semver bump patch ${tag} | tr -d '\\n'\")\n+    }\n+  }\n+  return version\n+}\n+\n+String getPullRequestVersion() {\n+  return \"${BRANCH_NAME}-\" + readMavenPom().getVersion()\n+}\n+\n+pipeline {\n+  agent {\n+    label 'jenkins-nuxeo-package-11'\n+  }\n+  options {\n+    timeout(time: 1, unit: 'HOURS')\n+  }\n+  environment {\n+    // force ${HOME}=/root - for an unexplained reason, ${HOME} is resolved as /home/jenkins though sh 'env' shows HOME=/root\n+    HOME = '/root'\n+    HELM_CHART_REPOSITORY_NAME = 'local-jenkins-x'\n+    HELM_CHART_REPOSITORY_URL = 'http://jenkins-x-chartmuseum:8080'\n+    HELM_CHART_NUXEO = 'nuxeo'\n+    NUXEO_JAVADOC_IMAGE_NAME = 'nuxeo-javadoc'", "originalCommit": "ba618721687ff7ba406308f188dc8b156992a407", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY5Mzg1MA==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r532693850", "bodyText": "seem unneeded", "author": "ataillefer", "createdAt": "2020-11-30T15:44:09Z", "path": "ci/Jenkinsfiles/javadoc.groovy", "diffHunk": "@@ -0,0 +1,278 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Antoine Taillefer <ataillefer@nuxeo.com>\n+ *     Thomas Roger <troger@nuxeo.com>\n+ *     Kevin Leturc <kleturc@nuxeo.com>\n+ */\n+\n+repositoryUrl = 'https://github.com/nuxeo/nuxeo'\n+\n+properties([\n+  [$class: 'GithubProjectProperty', projectUrlStr: repositoryUrl],\n+  [$class: 'BuildDiscarderProperty', strategy: [$class: 'LogRotator', daysToKeepStr: '60', numToKeepStr: '60', artifactNumToKeepStr: '5']],\n+  disableConcurrentBuilds(),\n+])\n+\n+void setGitHubBuildStatus(String context, String message, String state) {\n+  if (env.DRY_RUN != \"true\") {\n+    step([\n+      $class: 'GitHubCommitStatusSetter',\n+      reposSource: [$class: 'ManuallyEnteredRepositorySource', url: repositoryUrl],\n+      contextSource: [$class: 'ManuallyEnteredCommitContextSource', context: context],\n+      statusResultSource: [$class: 'ConditionalStatusResultSource', results: [[$class: 'AnyBuildResult', message: message, state: state]]],\n+    ])\n+  }\n+}\n+\n+String getMavenArgs() {\n+  def args = '-B -nsu -Dnuxeo.skip.enforcer=true'\n+  if (!isPullRequest()) {\n+    args += ' -Prelease'\n+  }\n+  return args\n+}\n+\n+def isPullRequest() {\n+  return BRANCH_NAME =~ /PR-.*/\n+}\n+\n+String getVersion() {\n+  return isPullRequest() ? getPullRequestVersion() : getReleaseVersion()\n+}\n+\n+String getReleaseVersion() {\n+  String nuxeoVersion = readMavenPom().getVersion()\n+  String noSnapshot = nuxeoVersion.replace('-SNAPSHOT', '')\n+  String version = noSnapshot + '.0' // first version ever\n+\n+  // find the latest tag if any\n+  sh \"git fetch origin 'refs/tags/v${noSnapshot}*:refs/tags/v${noSnapshot}*'\"\n+  def tag = sh(returnStdout: true, script: \"git tag --sort=taggerdate --list 'v${noSnapshot}*' | tail -1 | tr -d '\\n'\")\n+  if (tag) {\n+    container('maven') {\n+      version = sh(returnStdout: true, script: \"semver bump patch ${tag} | tr -d '\\n'\")\n+    }\n+  }\n+  return version\n+}\n+\n+String getPullRequestVersion() {\n+  return \"${BRANCH_NAME}-\" + readMavenPom().getVersion()\n+}\n+\n+pipeline {\n+  agent {\n+    label 'jenkins-nuxeo-package-11'\n+  }\n+  options {\n+    timeout(time: 1, unit: 'HOURS')\n+  }\n+  environment {\n+    // force ${HOME}=/root - for an unexplained reason, ${HOME} is resolved as /home/jenkins though sh 'env' shows HOME=/root\n+    HOME = '/root'\n+    HELM_CHART_REPOSITORY_NAME = 'local-jenkins-x'\n+    HELM_CHART_REPOSITORY_URL = 'http://jenkins-x-chartmuseum:8080'\n+    HELM_CHART_NUXEO = 'nuxeo'\n+    NUXEO_JAVADOC_IMAGE_NAME = 'nuxeo-javadoc'\n+    MAVEN_OPTS = \"$MAVEN_OPTS -Xms2g -Xmx3g -XX:+TieredCompilation -XX:TieredStopAtLevel=1\"\n+    MAVEN_ARGS = getMavenArgs()\n+    VERSION = getVersion()\n+    CHANGE_BRANCH = \"${env.CHANGE_BRANCH != null ? env.CHANGE_BRANCH : BRANCH_NAME}\"\n+    CHANGE_TARGET = \"${env.CHANGE_TARGET != null ? env.CHANGE_TARGET : BRANCH_NAME}\"", "originalCommit": "ba618721687ff7ba406308f188dc8b156992a407", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY5NTU2Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r532695567", "bodyText": "is this comment relevant here?", "author": "ataillefer", "createdAt": "2020-11-30T15:46:20Z", "path": "ci/docker/javadoc/Dockerfile", "diffHunk": "@@ -0,0 +1,9 @@\n+FROM nginx:1.18-alpine\n+\n+WORKDIR /usr/share/nginx/html/\n+\n+# Clean the default public folder\n+RUN rm -fr * .??*\n+\n+# finally, the \"public\" folder generated by Hugo in the previous stage is copied into the public fold of nginx", "originalCommit": "ba618721687ff7ba406308f188dc8b156992a407", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY0NTg2OA==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r533645868", "bodyText": "Not really, a bad copy/paste from report, thanks.", "author": "kevinleturc", "createdAt": "2020-12-01T18:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY5NTU2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY5NjUzNQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r532696535", "bodyText": "\"$BRANCH_NAME\"?", "author": "ataillefer", "createdAt": "2020-11-30T15:47:35Z", "path": "ci/helm/javadoc/values.yaml", "diffHunk": "@@ -0,0 +1,55 @@\n+expose:\n+  Annotations:\n+    helm.sh/hook: post-install,post-upgrade\n+    helm.sh/hook-delete-policy: hook-succeeded\n+  config:\n+    # add tls configuration\n+    domain: platform.dev.nuxeo.com\n+    exposer: Ingress\n+    http: true\n+    tlsacme: true\n+    tlsSecretName: platform-cluster-tls\n+    urltemplate: '{{.Namespace}}-{{.Service}}.{{.Domain}}' # ie: nuxeo-preview-master-javadoc\n+\n+cleanup:\n+  Args:\n+    - --cleanup\n+  Annotations:\n+    helm.sh/hook: pre-delete\n+    helm.sh/hook-delete-policy: hook-succeeded\n+\n+javadoc:\n+  podLabels:\n+    branch: \"master\"", "originalCommit": "ba618721687ff7ba406308f188dc8b156992a407", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzMjcyMg==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r532932722", "bodyText": "no need of JX \ud83d\udc4c", "author": "ataillefer", "createdAt": "2020-11-30T22:02:58Z", "path": "ci/Jenkinsfiles/javadoc.groovy", "diffHunk": "@@ -0,0 +1,278 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Antoine Taillefer <ataillefer@nuxeo.com>\n+ *     Thomas Roger <troger@nuxeo.com>\n+ *     Kevin Leturc <kleturc@nuxeo.com>\n+ */\n+\n+repositoryUrl = 'https://github.com/nuxeo/nuxeo'\n+\n+properties([\n+  [$class: 'GithubProjectProperty', projectUrlStr: repositoryUrl],\n+  [$class: 'BuildDiscarderProperty', strategy: [$class: 'LogRotator', daysToKeepStr: '60', numToKeepStr: '60', artifactNumToKeepStr: '5']],\n+  disableConcurrentBuilds(),\n+])\n+\n+void setGitHubBuildStatus(String context, String message, String state) {\n+  if (env.DRY_RUN != \"true\") {\n+    step([\n+      $class: 'GitHubCommitStatusSetter',\n+      reposSource: [$class: 'ManuallyEnteredRepositorySource', url: repositoryUrl],\n+      contextSource: [$class: 'ManuallyEnteredCommitContextSource', context: context],\n+      statusResultSource: [$class: 'ConditionalStatusResultSource', results: [[$class: 'AnyBuildResult', message: message, state: state]]],\n+    ])\n+  }\n+}\n+\n+String getMavenArgs() {\n+  def args = '-B -nsu -Dnuxeo.skip.enforcer=true'\n+  if (!isPullRequest()) {\n+    args += ' -Prelease'\n+  }\n+  return args\n+}\n+\n+def isPullRequest() {\n+  return BRANCH_NAME =~ /PR-.*/\n+}\n+\n+String getVersion() {\n+  return isPullRequest() ? getPullRequestVersion() : getReleaseVersion()\n+}\n+\n+String getReleaseVersion() {\n+  String nuxeoVersion = readMavenPom().getVersion()\n+  String noSnapshot = nuxeoVersion.replace('-SNAPSHOT', '')\n+  String version = noSnapshot + '.0' // first version ever\n+\n+  // find the latest tag if any\n+  sh \"git fetch origin 'refs/tags/v${noSnapshot}*:refs/tags/v${noSnapshot}*'\"\n+  def tag = sh(returnStdout: true, script: \"git tag --sort=taggerdate --list 'v${noSnapshot}*' | tail -1 | tr -d '\\n'\")\n+  if (tag) {\n+    container('maven') {\n+      version = sh(returnStdout: true, script: \"semver bump patch ${tag} | tr -d '\\n'\")\n+    }\n+  }\n+  return version\n+}\n+\n+String getPullRequestVersion() {\n+  return \"${BRANCH_NAME}-\" + readMavenPom().getVersion()\n+}\n+\n+pipeline {\n+  agent {\n+    label 'jenkins-nuxeo-package-11'\n+  }\n+  options {\n+    timeout(time: 1, unit: 'HOURS')\n+  }\n+  environment {\n+    // force ${HOME}=/root - for an unexplained reason, ${HOME} is resolved as /home/jenkins though sh 'env' shows HOME=/root\n+    HOME = '/root'\n+    HELM_CHART_REPOSITORY_NAME = 'local-jenkins-x'\n+    HELM_CHART_REPOSITORY_URL = 'http://jenkins-x-chartmuseum:8080'\n+    HELM_CHART_NUXEO = 'nuxeo'\n+    NUXEO_JAVADOC_IMAGE_NAME = 'nuxeo-javadoc'\n+    MAVEN_OPTS = \"$MAVEN_OPTS -Xms2g -Xmx3g -XX:+TieredCompilation -XX:TieredStopAtLevel=1\"\n+    MAVEN_ARGS = getMavenArgs()\n+    VERSION = getVersion()\n+    CHANGE_BRANCH = \"${env.CHANGE_BRANCH != null ? env.CHANGE_BRANCH : BRANCH_NAME}\"\n+    CHANGE_TARGET = \"${env.CHANGE_TARGET != null ? env.CHANGE_TARGET : BRANCH_NAME}\"\n+    // jx step helm install's --name and --namespace options require alphabetic chars to be lowercase\n+    PREVIEW_NAMESPACE = \"nuxeo-preview-${BRANCH_NAME.toLowerCase()}\"\n+  }\n+\n+  stages {\n+    stage('Set labels') {\n+      when {\n+        branch 'PR-*'\n+      }\n+      steps {\n+        container('maven') {\n+          echo \"\"\"\n+          ----------------------------------------\n+          Set Kubernetes resource labels\n+          ----------------------------------------\n+          \"\"\"\n+          echo \"Set label 'branch: ${BRANCH_NAME}' on pod ${NODE_NAME}\"\n+          sh \"\"\"\n+            kubectl label pods ${NODE_NAME} branch=${BRANCH_NAME}\n+          \"\"\"\n+          // set branch name in Helm chart values used for the unit tests\n+          sh \"\"\"\n+            for valuesFile in ci/helm/*.yaml; do\n+              envsubst < \\$valuesFile > \\$valuesFile~gen\n+            done\n+          \"\"\"\n+          // output pod description\n+          echo \"Describe pod ${NODE_NAME}\"\n+          sh \"\"\"\n+            kubectl describe pod ${NODE_NAME}\n+          \"\"\"\n+        }\n+      }\n+    }\n+\n+    stage('Update version') {\n+      when {\n+        branch 'PR-*'\n+      }\n+      steps {\n+        container('maven') {\n+          echo \"\"\"\n+          ----------------------------------------\n+          Update version\n+          ----------------------------------------\n+          New version: ${VERSION}\n+          \"\"\"\n+          sh \"\"\"\n+            # root POM\n+            mvn ${MAVEN_ARGS} -Pdistrib,docker versions:set -DnewVersion=${VERSION} -DgenerateBackupPoms=false\n+            perl -i -pe 's|<nuxeo.platform.version>.*?</nuxeo.platform.version>|<nuxeo.platform.version>${VERSION}</nuxeo.platform.version>|' pom.xml\n+            perl -i -pe 's|org.nuxeo.ecm.product.version=.*|org.nuxeo.ecm.product.version=${VERSION}|' server/nuxeo-nxr-server/src/main/resources/templates/nuxeo.defaults\n+          \"\"\"\n+        }\n+      }\n+    }\n+\n+    stage('Build Javadoc') {\n+      when {\n+        branch 'PR-*'\n+      }\n+      steps {\n+        setGitHubBuildStatus('javadoc/build', 'Build Javadoc', 'PENDING')\n+        container('maven') {\n+          echo \"\"\"\n+          ----------------------------------------\n+          Build Javadoc\n+          ----------------------------------------\"\"\"\n+          echo \"MAVEN_OPTS=$MAVEN_OPTS\"\n+          sh \"mvn ${MAVEN_ARGS} -V -T4C -Pjavadoc -DskipTests install\"\n+          sh \"mvn ${MAVEN_ARGS} -f server/pom.xml -Pjavadoc -DskipTests install\"\n+        }\n+      }\n+      post {\n+        success {\n+          setGitHubBuildStatus('javadoc/build', 'Build Javadoc', 'SUCCESS')\n+        }\n+        unsuccessful {\n+          setGitHubBuildStatus('javadoc/build', 'Build Javadoc', 'FAILURE')\n+        }\n+      }\n+    }\n+\n+    stage('Generate Nuxeo ECM Javadoc') {\n+      when {\n+        branch 'PR-*'\n+      }\n+      steps {\n+        setGitHubBuildStatus('javadoc/site', 'Generate Javadoc site', 'PENDING')\n+        container('maven') {\n+          echo \"\"\"\n+          ----------------------------------------\n+          Generate Nuxeo ECM Javadoc\n+          ----------------------------------------\"\"\"\n+          sh \"mvn ${MAVEN_ARGS} -Pjavadoc site\"\n+        }\n+      }\n+      post {\n+        success {\n+          setGitHubBuildStatus('javadoc/site', 'Generate Javadoc site', 'SUCCESS')\n+        }\n+        unsuccessful {\n+          setGitHubBuildStatus('javadoc/site', 'Generate Javadoc site', 'FAILURE')\n+        }\n+      }\n+    }\n+\n+    stage('Deploy Nuxeo ECM Javadoc') {\n+      when {\n+        branch 'PR-*'\n+        expression {\n+          return pullRequest.labels.contains('preview-javadoc')\n+        }\n+        not {\n+          environment name: 'DRY_RUN', value: 'true'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('javadoc/preview', 'Deploy Javadoc environment', 'PENDING')\n+        container('maven') {\n+          echo \"\"\"\n+          ----------------------------------------\n+          Build Nuxeo ECM Javadoc Docker Image ${VERSION}\n+          ----------------------------------------\n+          Image tag: ${VERSION}\"\"\"\n+          sh \"mv target/site/apidocs ci/docker/javadoc/apidocs\"\n+          dir('ci/docker/javadoc') {\n+            sh \"skaffold build -f skaffold.yaml\"\n+          }\n+\n+          echo \"\"\"\n+          ----------------------------------------\n+          Deploy Nuxeo ECM Javadoc Environment\n+          ----------------------------------------\n+          Image tag: ${VERSION}\n+          Namespace: ${PREVIEW_NAMESPACE}\"\"\"\n+          dir('ci/helm/javadoc') {\n+            script {\n+              // first substitute environment variables in chart values\n+              sh \"\"\"\n+                mv values.yaml values.yaml.tosubst\n+                envsubst < values.yaml.tosubst > values.yaml\n+              \"\"\"\n+              // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+              boolean nsExists = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0\n+              if (!nsExists) {\n+                sh \"kubectl create namespace ${PREVIEW_NAMESPACE}\"\n+              }\n+              sh \"kubectl --namespace platform get secret kubernetes-docker-cfg -ojsonpath='{.data.\\\\.dockerconfigjson}' | base64 --decode > /tmp/config.json\"\n+              sh \"\"\"kubectl create secret generic kubernetes-docker-cfg \\\n+                  --namespace=${PREVIEW_NAMESPACE} \\\n+                  --from-file=.dockerconfigjson=/tmp/config.json \\\n+                  --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\"\"\n+              // third build and deploy the chart\n+              sh \"\"\"\n+                jx step helm build --verbose\n+                jx step helm install --namespace ${PREVIEW_NAMESPACE} --name javadoc --verbose .\n+              \"\"\"\n+              host = sh(returnStdout: true, script: \"kubectl get ingress --namespace=${PREVIEW_NAMESPACE} javadoc -ojsonpath='{.items[*].spec.rules[*].host}'\")\n+              echo \"\"\"\n+              ----------------------------------------\n+              Javadoc Environment available at: https://${host}\n+              ----------------------------------------\"\"\"\n+              // comment the PR if it is the first time\n+              if (isPullRequest() && !nsExists) {\n+                pullRequest.comment(\"Preview Javadoc environment available [here](https://${url}).\")", "originalCommit": "ba618721687ff7ba406308f188dc8b156992a407", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY2MDUxMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r533660511", "bodyText": "Indeed \ud83d\ude42, you make me think that I don't handle the namespace cleanup. I'll have a look to do it without the jx command.", "author": "kevinleturc", "createdAt": "2020-12-01T19:18:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzMjcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMyOTYwNw==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r534329607", "bodyText": "In the end we're gonna need the jx preview command, but I will keep this block and disable comment on jx command.", "author": "kevinleturc", "createdAt": "2020-12-02T16:59:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzMjcyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzNDY3MA==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r532934670", "bodyText": "maybe use explicitly ~2.3.118 since it's the latest version", "author": "ataillefer", "createdAt": "2020-11-30T22:06:56Z", "path": "ci/helm/javadoc/requirements.yaml", "diffHunk": "@@ -0,0 +1,9 @@\n+dependencies:\n+  - alias: expose\n+    name: exposecontroller\n+    repository: http://chartmuseum.jenkins-x.io\n+    version: ~2.3.111", "originalCommit": "ba618721687ff7ba406308f188dc8b156992a407", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkzNDc0OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/4328#discussion_r532934749", "bodyText": "same remark as above", "author": "ataillefer", "createdAt": "2020-11-30T22:07:07Z", "path": "ci/helm/javadoc/requirements.yaml", "diffHunk": "@@ -0,0 +1,9 @@\n+dependencies:\n+  - alias: expose\n+    name: exposecontroller\n+    repository: http://chartmuseum.jenkins-x.io\n+    version: ~2.3.111\n+  - alias: cleanup\n+    name: exposecontroller\n+    repository: http://chartmuseum.jenkins-x.io\n+    version: ~2.3.111", "originalCommit": "ba618721687ff7ba406308f188dc8b156992a407", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e37bead57bd13cf3c69514acc96d0b0d1c3b08c1", "url": "https://github.com/nuxeo/nuxeo/commit/e37bead57bd13cf3c69514acc96d0b0d1c3b08c1", "message": "NXP-27059: Attach javadoc artifacts on master build", "committedDate": "2020-12-02T17:06:51Z", "type": "forcePushed"}, {"oid": "bef57e16b97e8098c26155a391e1634fcfbf12cd", "url": "https://github.com/nuxeo/nuxeo/commit/bef57e16b97e8098c26155a391e1634fcfbf12cd", "message": "NXP-27059: Attach javadoc artifacts on master build", "committedDate": "2020-12-03T08:38:58Z", "type": "forcePushed"}, {"oid": "1f28eb0420a1b00eb7bf943ba393ad85020b861f", "url": "https://github.com/nuxeo/nuxeo/commit/1f28eb0420a1b00eb7bf943ba393ad85020b861f", "message": "NXP-27059: Attach javadoc artifacts on master build", "committedDate": "2020-12-03T10:53:25Z", "type": "forcePushed"}, {"oid": "49e5e0dbf43bee288e225d044a267925c9f4a781", "url": "https://github.com/nuxeo/nuxeo/commit/49e5e0dbf43bee288e225d044a267925c9f4a781", "message": "NXP-27059: Adapt configuration for the javadoc site generation", "committedDate": "2020-12-04T14:49:42Z", "type": "commit"}, {"oid": "bfbd23690ba074667454da9a353b6d5d3c8a9291", "url": "https://github.com/nuxeo/nuxeo/commit/bfbd23690ba074667454da9a353b6d5d3c8a9291", "message": "NXP-27059: Build javadoc artifacts on master", "committedDate": "2020-12-04T14:49:44Z", "type": "forcePushed"}, {"oid": "9f23c2a34a02e340dca76dcf738ab918e77beee7", "url": "https://github.com/nuxeo/nuxeo/commit/9f23c2a34a02e340dca76dcf738ab918e77beee7", "message": "NXP-27059: Build javadoc artifacts on master", "committedDate": "2020-12-07T09:27:46Z", "type": "forcePushed"}, {"oid": "f8698291cd9e5660e26ee4370ee45fde0b079be4", "url": "https://github.com/nuxeo/nuxeo/commit/f8698291cd9e5660e26ee4370ee45fde0b079be4", "message": "NXP-27059: Build javadoc artifacts on master", "committedDate": "2020-12-07T09:31:15Z", "type": "forcePushed"}, {"oid": "ee746ba1a77e7df34fdf3356e90422756756e6c1", "url": "https://github.com/nuxeo/nuxeo/commit/ee746ba1a77e7df34fdf3356e90422756756e6c1", "message": "NXP-27059: Put Javadoc generation in CI", "committedDate": "2020-12-07T09:38:36Z", "type": "commit"}, {"oid": "bda83cd6ed59cd0f6d910d818a13f59ee9b4d925", "url": "https://github.com/nuxeo/nuxeo/commit/bda83cd6ed59cd0f6d910d818a13f59ee9b4d925", "message": "NXP-27059: Build javadoc artifacts on master", "committedDate": "2020-12-07T09:38:38Z", "type": "commit"}, {"oid": "bda83cd6ed59cd0f6d910d818a13f59ee9b4d925", "url": "https://github.com/nuxeo/nuxeo/commit/bda83cd6ed59cd0f6d910d818a13f59ee9b4d925", "message": "NXP-27059: Build javadoc artifacts on master", "committedDate": "2020-12-07T09:38:38Z", "type": "forcePushed"}]}