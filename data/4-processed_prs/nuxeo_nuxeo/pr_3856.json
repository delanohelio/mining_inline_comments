{"pr_number": 3856, "pr_title": "Feature nxp 27713 nuxeo staging preview", "pr_createdAt": "2020-03-24T09:04:13Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/3856", "timeline": [{"oid": "19feef6b3c2a6e4d1d2a54be0395bf8e56fa9f93", "url": "https://github.com/nuxeo/nuxeo/commit/19feef6b3c2a6e4d1d2a54be0395bf8e56fa9f93", "message": "TEMP", "committedDate": "2020-03-31T08:25:05Z", "type": "forcePushed"}, {"oid": "c67c15425175dd632716213334ceae20a414cd6f", "url": "https://github.com/nuxeo/nuxeo/commit/c67c15425175dd632716213334ceae20a414cd6f", "message": "TEMP", "committedDate": "2020-03-31T09:15:03Z", "type": "forcePushed"}, {"oid": "c67c15425175dd632716213334ceae20a414cd6f", "url": "https://github.com/nuxeo/nuxeo/commit/c67c15425175dd632716213334ceae20a414cd6f", "message": "TEMP", "committedDate": "2020-03-31T09:15:03Z", "type": "forcePushed"}, {"oid": "4ca8a6ff29f291be097cc762f1f86c60a570e883", "url": "https://github.com/nuxeo/nuxeo/commit/4ca8a6ff29f291be097cc762f1f86c60a570e883", "message": "TEMP", "committedDate": "2020-03-31T11:32:11Z", "type": "forcePushed"}, {"oid": "99a6ffe3091faa3308d9fe5c0a4ae6b324b5acb3", "url": "https://github.com/nuxeo/nuxeo/commit/99a6ffe3091faa3308d9fe5c0a4ae6b324b5acb3", "message": "WIP", "committedDate": "2020-03-31T14:41:30Z", "type": "forcePushed"}, {"oid": "2df68d2f90f732e1df17f075e33d67e05326e392", "url": "https://github.com/nuxeo/nuxeo/commit/2df68d2f90f732e1df17f075e33d67e05326e392", "message": "WIP", "committedDate": "2020-03-31T14:45:52Z", "type": "forcePushed"}, {"oid": "ee207c7b0e50787a37271309f158e268a216589f", "url": "https://github.com/nuxeo/nuxeo/commit/ee207c7b0e50787a37271309f158e268a216589f", "message": "WIP", "committedDate": "2020-03-31T14:54:52Z", "type": "forcePushed"}, {"oid": "01e3771a3d9f46292a7e246f70a7d7555a05d8f3", "url": "https://github.com/nuxeo/nuxeo/commit/01e3771a3d9f46292a7e246f70a7d7555a05d8f3", "message": "WIP", "committedDate": "2020-03-31T14:58:33Z", "type": "forcePushed"}, {"oid": "72f1c7e4f2df34c3cc6bf111fa76238b3eb28c10", "url": "https://github.com/nuxeo/nuxeo/commit/72f1c7e4f2df34c3cc6bf111fa76238b3eb28c10", "message": "WIP", "committedDate": "2020-03-31T15:09:27Z", "type": "forcePushed"}, {"oid": "2dd275781e529b9ffa7b15aa65a0b126b4ecaf7c", "url": "https://github.com/nuxeo/nuxeo/commit/2dd275781e529b9ffa7b15aa65a0b126b4ecaf7c", "message": "WIP", "committedDate": "2020-03-31T15:16:00Z", "type": "forcePushed"}, {"oid": "59b5d7c90562539198ef98023340aa330ec17f7f", "url": "https://github.com/nuxeo/nuxeo/commit/59b5d7c90562539198ef98023340aa330ec17f7f", "message": "WIP", "committedDate": "2020-03-31T15:19:46Z", "type": "forcePushed"}, {"oid": "a01147ec94824cdf6011ff9dbbdf452a8df5ac68", "url": "https://github.com/nuxeo/nuxeo/commit/a01147ec94824cdf6011ff9dbbdf452a8df5ac68", "message": "WIP", "committedDate": "2020-03-31T15:26:37Z", "type": "forcePushed"}, {"oid": "e9d3df8281d23979df84d8ca2719578d4bac4d1a", "url": "https://github.com/nuxeo/nuxeo/commit/e9d3df8281d23979df84d8ca2719578d4bac4d1a", "message": "WIP", "committedDate": "2020-03-31T15:29:53Z", "type": "forcePushed"}, {"oid": "e845518a6e0ba8aeac5d96f57d7202e73d255e5d", "url": "https://github.com/nuxeo/nuxeo/commit/e845518a6e0ba8aeac5d96f57d7202e73d255e5d", "message": "WIP", "committedDate": "2020-03-31T15:46:05Z", "type": "forcePushed"}, {"oid": "3b1d733ff09605f2b11d1e27586e898b4e4008fd", "url": "https://github.com/nuxeo/nuxeo/commit/3b1d733ff09605f2b11d1e27586e898b4e4008fd", "message": "WIP", "committedDate": "2020-03-31T15:49:47Z", "type": "forcePushed"}, {"oid": "460e6a0049dfbb90dd09d80101e76d7b57d71bab", "url": "https://github.com/nuxeo/nuxeo/commit/460e6a0049dfbb90dd09d80101e76d7b57d71bab", "message": "WIP", "committedDate": "2020-03-31T15:50:50Z", "type": "forcePushed"}, {"oid": "ecde52bf895a0ebc0ef76f5bb39527da0a2e3031", "url": "https://github.com/nuxeo/nuxeo/commit/ecde52bf895a0ebc0ef76f5bb39527da0a2e3031", "message": "WIP", "committedDate": "2020-03-31T16:01:19Z", "type": "forcePushed"}, {"oid": "8a853abd254d54358ca28406adba4ba38ecf1a44", "url": "https://github.com/nuxeo/nuxeo/commit/8a853abd254d54358ca28406adba4ba38ecf1a44", "message": "WIP", "committedDate": "2020-03-31T16:03:40Z", "type": "forcePushed"}, {"oid": "b9fa250fa55bfd7ca93a4f5e81114184e2698f09", "url": "https://github.com/nuxeo/nuxeo/commit/b9fa250fa55bfd7ca93a4f5e81114184e2698f09", "message": "WIP", "committedDate": "2020-03-31T16:04:18Z", "type": "forcePushed"}, {"oid": "34981e604168b187117c6bdcc2307b40c3821c3c", "url": "https://github.com/nuxeo/nuxeo/commit/34981e604168b187117c6bdcc2307b40c3821c3c", "message": "WIP", "committedDate": "2020-03-31T16:07:38Z", "type": "forcePushed"}, {"oid": "77c365d06e689b05d64ebbe0046167303e41fbfe", "url": "https://github.com/nuxeo/nuxeo/commit/77c365d06e689b05d64ebbe0046167303e41fbfe", "message": "WIPTEMP", "committedDate": "2020-03-31T16:12:07Z", "type": "forcePushed"}, {"oid": "5d7e1a9eab855dd21dba58289a52203737953980", "url": "https://github.com/nuxeo/nuxeo/commit/5d7e1a9eab855dd21dba58289a52203737953980", "message": "TEMP", "committedDate": "2020-03-31T16:23:12Z", "type": "forcePushed"}, {"oid": "ed31823b6f311cfb1ffb69411f358a4ff94dec00", "url": "https://github.com/nuxeo/nuxeo/commit/ed31823b6f311cfb1ffb69411f358a4ff94dec00", "message": "TEMP", "committedDate": "2020-03-31T16:31:42Z", "type": "forcePushed"}, {"oid": "08eedb8db7e5b13678b9640ded52b0aca1993da4", "url": "https://github.com/nuxeo/nuxeo/commit/08eedb8db7e5b13678b9640ded52b0aca1993da4", "message": "TEMP", "committedDate": "2020-03-31T17:05:04Z", "type": "forcePushed"}, {"oid": "643907d2a84a0d4fb000228c79b0988bd16ec66f", "url": "https://github.com/nuxeo/nuxeo/commit/643907d2a84a0d4fb000228c79b0988bd16ec66f", "message": "TEMP", "committedDate": "2020-03-31T17:12:00Z", "type": "forcePushed"}, {"oid": "20d169b7cc06156e5161530bb6fa6609eed6860d", "url": "https://github.com/nuxeo/nuxeo/commit/20d169b7cc06156e5161530bb6fa6609eed6860d", "message": "TEMP", "committedDate": "2020-03-31T17:17:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMTAxMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401411011", "bodyText": "This should go in the TEMP commit as it won't be needed once https://github.com/nuxeo/nuxeo-helm-chart/pull/8/files is merged and the nuxeo Helm chart is updated.\nIn fact, it would even not be needed in the TEMP commit by following 20d169b#r401406736.", "author": "ataillefer", "createdAt": "2020-04-01T07:34:12Z", "path": "ci/helm/preview/values.yaml", "diffHunk": "@@ -0,0 +1,77 @@\n+expose:\n+  Annotations:\n+    helm.sh/hook: post-install,post-upgrade\n+    helm.sh/hook-delete-policy: hook-succeeded\n+  config:\n+    # add tls configuration\n+    domain: platform.dev.nuxeo.com\n+    exposer: Ingress\n+    http: true\n+    tlsacme: true\n+    tlsSecretName: platform-cluster-tls\n+    urltemplate: '\"{{.Service}}-{{.Namespace}}.{{.Domain}}\"'\n+\n+cleanup:\n+  Args:\n+    - --cleanup\n+  Annotations:\n+    helm.sh/hook: pre-delete\n+    helm.sh/hook-delete-policy: hook-succeeded\n+\n+nuxeo:\n+  fullnameOverride: preview\n+  nuxeo:\n+    customParams: |-\n+      elasticsearch.restClient.socketTimeoutMs=300000\n+      elasticsearch.restClient.connectionTimeoutMs=300000\n+    podAnnotations:\n+      preview/scm.ref: $SCM_REF\n+    podLabels:\n+      branch: \"$BRANCH_NAME\"\n+      team: platform\n+      resource: pod\n+      usage: preview\n+    service:\n+      annotations:\n+        fabric8.io/ingress.annotations: |-\n+          nginx.ingress.kubernetes.io/proxy-body-size: 0\n+          nginx.ingress.kubernetes.io/server-snippet: ignore_invalid_headers off;\n+      labels:\n+        branch: \"$BRANCH_NAME\"\n+        team: platform\n+        resource: service\n+        usage: preview\n+    image:\n+      repository: $DOCKER_REGISTRY/nuxeo/nuxeo\n+      tag: $VERSION\n+      pullPolicy: IfNotPresent", "originalCommit": "a56c1daccaf38394bed76fb5471085cf33646b1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1MjU5Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401452592", "bodyText": "It is also not needed regarding:\npreview/scm.ref: $SCM_REF\nThis will make a change in the chart for each push and thus re-depoy the nuxe pod.", "author": "kevinleturc", "createdAt": "2020-04-01T08:47:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMTAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4NjAyOQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401486029", "bodyText": "removed the whole image value", "author": "NourNuxeo", "createdAt": "2020-04-01T09:41:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMTAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4NzE3Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401487177", "bodyText": "repository also? We may need it to point to docker registry.", "author": "kevinleturc", "createdAt": "2020-04-01T09:43:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMTAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUwNzk0OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401507949", "bodyText": "I think we need repository and version!\nOtherwise the default values in the nuxeo Helm chart are:\nrepository: docker.packages.nuxeo.com/nuxeo/nuxeo\ntag: latest\n\nAnd we want to pull the image previously built and pushed to the internal Docker registry.\nOr I missed something \ud83d\ude04.", "author": "ataillefer", "createdAt": "2020-04-01T10:17:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMTAxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUwODUyNg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401508526", "bodyText": "Back in place!", "author": "NourNuxeo", "createdAt": "2020-04-01T10:18:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMTAxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxNDk3Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401414973", "bodyText": "could be \"preview\" (lowercase, not a title) \ud83d\ude00", "author": "ataillefer", "createdAt": "2020-04-01T07:41:24Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,6 +638,72 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview', 'Deploy nuxeo Preview', 'PENDING')", "originalCommit": "a56c1daccaf38394bed76fb5471085cf33646b1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxNTIyOA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401415228", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0\n          \n          \n            \n                          boolean nsExists = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0", "author": "ataillefer", "createdAt": "2020-04-01T07:41:54Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,6 +638,72 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute environment variables in chart values\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0", "originalCommit": "a56c1daccaf38394bed76fb5471085cf33646b1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyMTQ0OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401421449", "bodyText": "Could you be more explicit?\nExplain that for the reference branches we cannot use jx preview otherwise the preview deployment would be garbage collected.", "author": "ataillefer", "createdAt": "2020-04-01T07:53:17Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,6 +638,72 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute environment variables in chart values\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExist) {\n+                noCommentOpt = '--no-comment'\n+              } else {\n+                sh \"kubectl create namespace ${PREVIEW_NAMESPACE}\"\n+              }\n+              sh \"kubectl create secret generic preview-docker-cfg --namespace=${PREVIEW_NAMESPACE} --from-file=.dockerconfigjson=/home/jenkins/.docker/config.json --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\n+              // third build and deploy the chart\n+              // reference branch have a different preview command. The -n name provided must be lowercase.", "originalCommit": "a56c1daccaf38394bed76fb5471085cf33646b1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ4MDc4OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401480789", "bodyText": "yes cf #3856 (comment)", "author": "NourNuxeo", "createdAt": "2020-04-01T09:32:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyMTQ0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyMjQ2Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401422462", "bodyText": "Out of curiosity, did you try to use helm install directly instead of jx step helm install?\nIt's worth giving it a try to rely as less as possible on the jx command, since we are already using a mix of pure helm and jx commands.", "author": "ataillefer", "createdAt": "2020-04-01T07:55:10Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,6 +638,72 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute environment variables in chart values\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExist) {\n+                noCommentOpt = '--no-comment'\n+              } else {\n+                sh \"kubectl create namespace ${PREVIEW_NAMESPACE}\"\n+              }\n+              sh \"kubectl create secret generic preview-docker-cfg --namespace=${PREVIEW_NAMESPACE} --from-file=.dockerconfigjson=/home/jenkins/.docker/config.json --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\n+              // third build and deploy the chart\n+              // reference branch have a different preview command. The -n name provided must be lowercase.\n+              previewCommand = \"jx step helm install --namespace ${PREVIEW_NAMESPACE} -n ${APP_NAME}-${PREVIEW_NAMESPACE.toLowerCase()} .\"", "originalCommit": "a56c1daccaf38394bed76fb5471085cf33646b1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMTI2OA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401431268", "bodyText": "Yes I tried it first for the reason you mention, not relying on jx when possible:\nhttps://jenkins.platform.dev.nuxeo.com/blue/organizations/jenkins/nuxeo%2Fnuxeo/detail/PR-3856/52/pipeline/\nMaybe it's easy to solve. I just tried jx step as a workaround as you suggested in case of and it worked and stuck with it.", "author": "NourNuxeo", "createdAt": "2020-04-01T08:10:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyMjQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0MzY4OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401443689", "bodyText": "OK great, stick with jx step helm install then.", "author": "ataillefer", "createdAt": "2020-04-01T08:32:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyMjQ2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyMzMyMg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401423322", "bodyText": "Same remark as a56c1da#r401422462: would helm build work?", "author": "ataillefer", "createdAt": "2020-04-01T07:56:40Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,6 +638,72 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute environment variables in chart values\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExist) {\n+                noCommentOpt = '--no-comment'\n+              } else {\n+                sh \"kubectl create namespace ${PREVIEW_NAMESPACE}\"\n+              }\n+              sh \"kubectl create secret generic preview-docker-cfg --namespace=${PREVIEW_NAMESPACE} --from-file=.dockerconfigjson=/home/jenkins/.docker/config.json --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\n+              // third build and deploy the chart\n+              // reference branch have a different preview command. The -n name provided must be lowercase.\n+              previewCommand = \"jx step helm install --namespace ${PREVIEW_NAMESPACE} -n ${APP_NAME}-${PREVIEW_NAMESPACE.toLowerCase()} .\"\n+              if (isPullRequest()) {\n+                // waiting for https://github.com/jenkins-x/jx/issues/5797 to be fixed in order to remove --source-url\n+                previewCommand = \"jx preview --namespace ${PREVIEW_NAMESPACE} --source-url=https://github.com/nuxeo/nuxeo ${noCommentOpt}\"\n+              }\n+              sh \"\"\"\n+                jx step helm build", "originalCommit": "a56c1daccaf38394bed76fb5471085cf33646b1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0MjYwMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401442601", "bodyText": "Maybe this would make the direct helm install work (cf #3856 (comment)), I'm gonna test it", "author": "NourNuxeo", "createdAt": "2020-04-01T08:30:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyMzMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0NDAxNQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401444015", "bodyText": "Don't think so, but yes you can give it a try.", "author": "ataillefer", "createdAt": "2020-04-01T08:32:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyMzMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1MTk3MA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401451970", "bodyText": "Indeed helm build doesn't exist jx stem helm build wraps some stuff that would need further investigation to see how to translate it in helm commands: https://github.com/jenkins-x/jx/blob/8fdc3a1182bc3ed6ae09728721b53ea4fa1d6234/pkg/cmd/step/helm/step_helm_build.go\nI'm sticking with jx step helm install as you suggest #3856 (comment)", "author": "NourNuxeo", "createdAt": "2020-04-01T08:46:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyMzMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ2NDQ2NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401464464", "bodyText": "\ud83d\udc4d\nYes, the equivalent is helm package.", "author": "ataillefer", "createdAt": "2020-04-01T09:06:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyMzMyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyNjA2OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401426069", "bodyText": "Usually, we tend to use either a ternary:\ndef previewCommand = isPullRequest() ?\n  \"jx preview ...\"\n  : \"jx step helm install...\"\n\nor the traditional form:\nif (isPullRequest()) {\n  ...\n} else {\n  ...\n}\n\nIt avoids assigning the variable twice and is easier to read.", "author": "ataillefer", "createdAt": "2020-04-01T08:01:34Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,6 +638,72 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute environment variables in chart values\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExist) {\n+                noCommentOpt = '--no-comment'\n+              } else {\n+                sh \"kubectl create namespace ${PREVIEW_NAMESPACE}\"\n+              }\n+              sh \"kubectl create secret generic preview-docker-cfg --namespace=${PREVIEW_NAMESPACE} --from-file=.dockerconfigjson=/home/jenkins/.docker/config.json --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\n+              // third build and deploy the chart\n+              // reference branch have a different preview command. The -n name provided must be lowercase.\n+              previewCommand = \"jx step helm install --namespace ${PREVIEW_NAMESPACE} -n ${APP_NAME}-${PREVIEW_NAMESPACE.toLowerCase()} .\"\n+              if (isPullRequest()) {", "originalCommit": "a56c1daccaf38394bed76fb5471085cf33646b1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ3MzE0NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401473144", "bodyText": "I went for the ternary to avoid declaring an empty string", "author": "NourNuxeo", "createdAt": "2020-04-01T09:21:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyNjA2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyNjYxMg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401426612", "bodyText": "I guess nuxeo-pr-3856 should be ${PREVIEW_NAMESPACE}?", "author": "ataillefer", "createdAt": "2020-04-01T08:02:35Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,6 +638,72 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute environment variables in chart values\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExist) {\n+                noCommentOpt = '--no-comment'\n+              } else {\n+                sh \"kubectl create namespace ${PREVIEW_NAMESPACE}\"\n+              }\n+              sh \"kubectl create secret generic preview-docker-cfg --namespace=${PREVIEW_NAMESPACE} --from-file=.dockerconfigjson=/home/jenkins/.docker/config.json --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\n+              // third build and deploy the chart\n+              // reference branch have a different preview command. The -n name provided must be lowercase.\n+              previewCommand = \"jx step helm install --namespace ${PREVIEW_NAMESPACE} -n ${APP_NAME}-${PREVIEW_NAMESPACE.toLowerCase()} .\"\n+              if (isPullRequest()) {\n+                // waiting for https://github.com/jenkins-x/jx/issues/5797 to be fixed in order to remove --source-url\n+                previewCommand = \"jx preview --namespace ${PREVIEW_NAMESPACE} --source-url=https://github.com/nuxeo/nuxeo ${noCommentOpt}\"\n+              }\n+              sh \"\"\"\n+                jx step helm build\n+                mkdir target && helm template . --output-dir target\n+                ${previewCommand}\n+              \"\"\"\n+              if (!isPullRequest()) {\n+                // When not using jx preview, we need to expose the nuxeo url by hand\n+                url = sh(returnStdout: true, script: \"jx get urls -n nuxeo-pr-3856 | grep -oP https://.* | tr -d '\\\\n'\")", "originalCommit": "a56c1daccaf38394bed76fb5471085cf33646b1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzMjQ2MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401432461", "bodyText": "indeed I thought I fixed this. ..as for the tgz...same thing must be induced by lots of add . amend && forcing", "author": "NourNuxeo", "createdAt": "2020-04-01T08:12:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyNjYxMg=="}], "type": "inlineReview"}, {"oid": "a531bb8df4bc641781dce278642649fd30ec36cd", "url": "https://github.com/nuxeo/nuxeo/commit/a531bb8df4bc641781dce278642649fd30ec36cd", "message": "fixup", "committedDate": "2020-04-01T08:35:11Z", "type": "forcePushed"}, {"oid": "4393cfe92cab5668f1c212831b986d9cd73b7ee8", "url": "https://github.com/nuxeo/nuxeo/commit/4393cfe92cab5668f1c212831b986d9cd73b7ee8", "message": "TEMP", "committedDate": "2020-04-01T09:53:55Z", "type": "forcePushed"}, {"oid": "669c7d3875d0c4f8b5ea56e46845aa624b2e8735", "url": "https://github.com/nuxeo/nuxeo/commit/669c7d3875d0c4f8b5ea56e46845aa624b2e8735", "message": "TEMP", "committedDate": "2020-04-01T10:05:51Z", "type": "forcePushed"}, {"oid": "ffb547b81c7eb26e82de52d6e1c9b2ee283afcfe", "url": "https://github.com/nuxeo/nuxeo/commit/ffb547b81c7eb26e82de52d6e1c9b2ee283afcfe", "message": "TEMP", "committedDate": "2020-04-01T10:19:29Z", "type": "forcePushed"}, {"oid": "329b5f679b5271ba9b1f69e61a8e91b7a010648b", "url": "https://github.com/nuxeo/nuxeo/commit/329b5f679b5271ba9b1f69e61a8e91b7a010648b", "message": "TEMP", "committedDate": "2020-04-01T10:26:48Z", "type": "forcePushed"}, {"oid": "4fa78fb6d1fa3646f20ed40327332896627174bb", "url": "https://github.com/nuxeo/nuxeo/commit/4fa78fb6d1fa3646f20ed40327332896627174bb", "message": "TEMP", "committedDate": "2020-04-01T12:24:08Z", "type": "forcePushed"}, {"oid": "8ec6472ec6700a04fc3dbc6d94b048aa7f6b6843", "url": "https://github.com/nuxeo/nuxeo/commit/8ec6472ec6700a04fc3dbc6d94b048aa7f6b6843", "message": "TEMP", "committedDate": "2020-04-01T12:28:51Z", "type": "forcePushed"}, {"oid": "291284bfa836200857b2fa1efa9d4647c6585256", "url": "https://github.com/nuxeo/nuxeo/commit/291284bfa836200857b2fa1efa9d4647c6585256", "message": "TEMP", "committedDate": "2020-04-01T12:44:48Z", "type": "forcePushed"}, {"oid": "d6d8311c1d7da8e32734a87c1f48b9a2fdfea23d", "url": "https://github.com/nuxeo/nuxeo/commit/d6d8311c1d7da8e32734a87c1f48b9a2fdfea23d", "message": "TEMP", "committedDate": "2020-04-01T12:59:26Z", "type": "forcePushed"}, {"oid": "af0a0e42f44f860f35f59d051ec54926543d6d92", "url": "https://github.com/nuxeo/nuxeo/commit/af0a0e42f44f860f35f59d051ec54926543d6d92", "message": "TEMP", "committedDate": "2020-04-01T15:11:40Z", "type": "forcePushed"}, {"oid": "4d503e266de485978417dbaba69e8e9809a5f7e9", "url": "https://github.com/nuxeo/nuxeo/commit/4d503e266de485978417dbaba69e8e9809a5f7e9", "message": "TEMP", "committedDate": "2020-04-01T15:13:24Z", "type": "forcePushed"}, {"oid": "54624609f93964821c58483185fa2f75d6a3ddbc", "url": "https://github.com/nuxeo/nuxeo/commit/54624609f93964821c58483185fa2f75d6a3ddbc", "message": "TEMP", "committedDate": "2020-04-01T15:15:32Z", "type": "forcePushed"}, {"oid": "6b0f35e10c977cf76ba70d04b718e30045f30469", "url": "https://github.com/nuxeo/nuxeo/commit/6b0f35e10c977cf76ba70d04b718e30045f30469", "message": "TEMP", "committedDate": "2020-04-01T15:50:52Z", "type": "forcePushed"}, {"oid": "7fb5089c590cdcd92b9e353f6cd3a16a0efe693c", "url": "https://github.com/nuxeo/nuxeo/commit/7fb5089c590cdcd92b9e353f6cd3a16a0efe693c", "message": "TEMP", "committedDate": "2020-04-01T16:06:27Z", "type": "forcePushed"}, {"oid": "164c8e73d0c711db8434fab1f55f9f135cbb48db", "url": "https://github.com/nuxeo/nuxeo/commit/164c8e73d0c711db8434fab1f55f9f135cbb48db", "message": "TEMP", "committedDate": "2020-04-01T16:39:03Z", "type": "forcePushed"}, {"oid": "d10c542de8d5ccfbc6ad5e71a59f7529250b3c02", "url": "https://github.com/nuxeo/nuxeo/commit/d10c542de8d5ccfbc6ad5e71a59f7529250b3c02", "message": "TEMP", "committedDate": "2020-04-01T17:07:45Z", "type": "forcePushed"}, {"oid": "d37c4616d7d8403725303a9c855f6ca04157e868", "url": "https://github.com/nuxeo/nuxeo/commit/d37c4616d7d8403725303a9c855f6ca04157e868", "message": "WIP", "committedDate": "2020-04-01T17:32:58Z", "type": "forcePushed"}, {"oid": "a4bf51d63b209e9ec9dc4fcb58c9d64b11194f3a", "url": "https://github.com/nuxeo/nuxeo/commit/a4bf51d63b209e9ec9dc4fcb58c9d64b11194f3a", "message": "WIP", "committedDate": "2020-04-01T18:49:34Z", "type": "forcePushed"}, {"oid": "f5b2b0b88a5499c49139a17f2a9830b189b06a8b", "url": "https://github.com/nuxeo/nuxeo/commit/f5b2b0b88a5499c49139a17f2a9830b189b06a8b", "message": "WIP", "committedDate": "2020-04-01T19:04:02Z", "type": "forcePushed"}, {"oid": "47df1cd401bef49444b5f27871950653e866f122", "url": "https://github.com/nuxeo/nuxeo/commit/47df1cd401bef49444b5f27871950653e866f122", "message": "WIP", "committedDate": "2020-04-02T09:16:24Z", "type": "forcePushed"}, {"oid": "73e6fba1b33ce424cc3e2e852f0973fb3ea6d783", "url": "https://github.com/nuxeo/nuxeo/commit/73e6fba1b33ce424cc3e2e852f0973fb3ea6d783", "message": "WIP", "committedDate": "2020-04-02T09:49:07Z", "type": "forcePushed"}, {"oid": "0c3210a1954cefaa2c91f2de07d74cb309ffdfb0", "url": "https://github.com/nuxeo/nuxeo/commit/0c3210a1954cefaa2c91f2de07d74cb309ffdfb0", "message": "WIP", "committedDate": "2020-04-02T10:25:22Z", "type": "forcePushed"}, {"oid": "577d8dc45216e0e8e774c6762ee0ee7c8f02abed", "url": "https://github.com/nuxeo/nuxeo/commit/577d8dc45216e0e8e774c6762ee0ee7c8f02abed", "message": "WIP", "committedDate": "2020-04-02T12:13:18Z", "type": "forcePushed"}, {"oid": "faa2b5dc67bd5e9f3817e43117a5ff2e3539cb44", "url": "https://github.com/nuxeo/nuxeo/commit/faa2b5dc67bd5e9f3817e43117a5ff2e3539cb44", "message": "WIP", "committedDate": "2020-04-02T12:32:46Z", "type": "forcePushed"}, {"oid": "03334de1d0057f680d6070fa634b71d0b3150256", "url": "https://github.com/nuxeo/nuxeo/commit/03334de1d0057f680d6070fa634b71d0b3150256", "message": "WIP", "committedDate": "2020-04-02T12:45:06Z", "type": "forcePushed"}, {"oid": "8ced0645ba5f2ed584020f69d1688a49c715836f", "url": "https://github.com/nuxeo/nuxeo/commit/8ced0645ba5f2ed584020f69d1688a49c715836f", "message": "TEMP", "committedDate": "2020-04-02T13:18:03Z", "type": "forcePushed"}, {"oid": "05eb1931bf37609bf9f2fc8f9aebd0a780a74f18", "url": "https://github.com/nuxeo/nuxeo/commit/05eb1931bf37609bf9f2fc8f9aebd0a780a74f18", "message": "TEMP", "committedDate": "2020-04-02T13:33:16Z", "type": "forcePushed"}, {"oid": "9f141d1c47a14fa521fbddf96318e9165472fa96", "url": "https://github.com/nuxeo/nuxeo/commit/9f141d1c47a14fa521fbddf96318e9165472fa96", "message": "TEMP", "committedDate": "2020-04-02T14:19:52Z", "type": "forcePushed"}, {"oid": "06f879eb31563fb2a7355cfca9f8c410b00a041e", "url": "https://github.com/nuxeo/nuxeo/commit/06f879eb31563fb2a7355cfca9f8c410b00a041e", "message": "FIXUP", "committedDate": "2020-04-02T17:58:54Z", "type": "forcePushed"}, {"oid": "ecc736df775259e75a34af60a103d4848cd3fbf5", "url": "https://github.com/nuxeo/nuxeo/commit/ecc736df775259e75a34af60a103d4848cd3fbf5", "message": "FIXUP", "committedDate": "2020-04-02T18:27:44Z", "type": "forcePushed"}, {"oid": "dc9019e23bfa7968c879549876e2f06b41fb0acf", "url": "https://github.com/nuxeo/nuxeo/commit/dc9019e23bfa7968c879549876e2f06b41fb0acf", "message": "FIXUP", "committedDate": "2020-04-02T18:42:03Z", "type": "forcePushed"}, {"oid": "192fbdcd369a76c582f5789538da6947fa9699cc", "url": "https://github.com/nuxeo/nuxeo/commit/192fbdcd369a76c582f5789538da6947fa9699cc", "message": "WIP", "committedDate": "2020-04-02T18:52:00Z", "type": "forcePushed"}, {"oid": "1383e553dcfd5cf81a231f94085ff07265b3a7e5", "url": "https://github.com/nuxeo/nuxeo/commit/1383e553dcfd5cf81a231f94085ff07265b3a7e5", "message": "WIP", "committedDate": "2020-04-02T19:03:30Z", "type": "forcePushed"}, {"oid": "ce6c33dadac24849c5f8d90844937d4e36a5cd99", "url": "https://github.com/nuxeo/nuxeo/commit/ce6c33dadac24849c5f8d90844937d4e36a5cd99", "message": "TEMP", "committedDate": "2020-04-02T19:34:01Z", "type": "forcePushed"}, {"oid": "6de38c3116089a63777635892b0594a4881c3fc2", "url": "https://github.com/nuxeo/nuxeo/commit/6de38c3116089a63777635892b0594a4881c3fc2", "message": "TEMP", "committedDate": "2020-04-02T19:40:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwMjI5NQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r402802295", "bodyText": "Since we're not using jx preview anymore, can we remove ORG and APP_NAME?", "author": "ataillefer", "createdAt": "2020-04-03T07:56:05Z", "path": "Jenkinsfile", "diffHunk": "@@ -284,6 +284,12 @@ pipeline {\n     CHANGE_BRANCH = \"${env.CHANGE_BRANCH != null ? env.CHANGE_BRANCH : BRANCH_NAME}\"\n     CHANGE_TARGET = \"${env.CHANGE_TARGET != null ? env.CHANGE_TARGET : BRANCH_NAME}\"\n     CONNECT_PREPROD_URL = 'https://nos-preprod-connect.nuxeocloud.com/nuxeo'\n+    // Required by the jx preview command: https://github.com/jenkins-x/jx/blob/8fdc3a1182bc3ed6ae09728721b53ea4fa1d6234/pkg/cmd/preview/preview.go#L1007\n+    ORG = \"nuxeo\"\n+    // Required by the jx preview command: https://github.com/jenkins-x/jx/blob/8fdc3a1182bc3ed6ae09728721b53ea4fa1d6234/pkg/cmd/preview/preview.go#L1015\n+    APP_NAME = \"nuxeo\"", "originalCommit": "f070a1efc87cfae8c4de2aae14aa8292d3a96ed2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQzNDE1Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r403434152", "bodyText": "In the end you got those out of the way :p", "author": "NourNuxeo", "createdAt": "2020-04-04T06:45:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwMjI5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwNDg4NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r402804884", "bodyText": "What do think of having \"nuxeo-preview-${BRANCH_NAME.toLowerCase()}\"?\nSo, once it's merged, we have nuxeo-preview-master as a namespace, clearer to identify than just nuxeo-master when looking at the long list of available namespaces in Kubernetes.", "author": "ataillefer", "createdAt": "2020-04-03T07:59:02Z", "path": "Jenkinsfile", "diffHunk": "@@ -284,6 +284,12 @@ pipeline {\n     CHANGE_BRANCH = \"${env.CHANGE_BRANCH != null ? env.CHANGE_BRANCH : BRANCH_NAME}\"\n     CHANGE_TARGET = \"${env.CHANGE_TARGET != null ? env.CHANGE_TARGET : BRANCH_NAME}\"\n     CONNECT_PREPROD_URL = 'https://nos-preprod-connect.nuxeocloud.com/nuxeo'\n+    // Required by the jx preview command: https://github.com/jenkins-x/jx/blob/8fdc3a1182bc3ed6ae09728721b53ea4fa1d6234/pkg/cmd/preview/preview.go#L1007\n+    ORG = \"nuxeo\"\n+    // Required by the jx preview command: https://github.com/jenkins-x/jx/blob/8fdc3a1182bc3ed6ae09728721b53ea4fa1d6234/pkg/cmd/preview/preview.go#L1015\n+    APP_NAME = \"nuxeo\"\n+    PREVIEW_NAMESPACE = \"$APP_NAME-${BRANCH_NAME.toLowerCase()}\"", "originalCommit": "f070a1efc87cfae8c4de2aae14aa8292d3a96ed2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwNjY5MA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r402806690", "bodyText": "I think this comment would be more suitable just before the definition of PREVIEW_NAMESPACE where the lowercase is applied, or eventually before  kubectl create namespace, because it is really this instruction that requires lowercase.", "author": "ataillefer", "createdAt": "2020-04-03T08:01:11Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,6 +638,67 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview', 'Deploy nuxeo preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute environment variables in chart values\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              boolean nsExists = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExists) {\n+                noCommentOpt = '--no-comment'\n+                // Previous preview deployment needs to be scaled to 0 to be replaced correctly\n+                sh \"kubectl -n ${PREVIEW_NAMESPACE} scale deployment preview --replicas=0\"\n+              } else {\n+                sh \"kubectl create namespace ${PREVIEW_NAMESPACE}\"\n+              }\n+              // third build and deploy the chart\n+              // To avoid jx gc cron job, reference branch previews are deployed by calling jx step helm install\n+              // The -n name provided must be lowercase", "originalCommit": "f070a1efc87cfae8c4de2aae14aa8292d3a96ed2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQzNDMyMg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r403434322", "bodyText": "I put it at the declaration. This is the only place where I call toLowerCase() now so I think it belongs there to explain the call", "author": "NourNuxeo", "createdAt": "2020-04-04T06:47:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwNjY5MA=="}], "type": "inlineReview"}, {"oid": "32c152233be61b4c91f63b651f3da9491113c925", "url": "https://github.com/nuxeo/nuxeo/commit/32c152233be61b4c91f63b651f3da9491113c925", "message": "TEMP", "committedDate": "2020-04-04T06:51:18Z", "type": "forcePushed"}, {"oid": "2986b3235109ae9f9369966ec4622387909e6827", "url": "https://github.com/nuxeo/nuxeo/commit/2986b3235109ae9f9369966ec4622387909e6827", "message": "TEMP", "committedDate": "2020-04-04T07:23:22Z", "type": "forcePushed"}, {"oid": "6f62dd4d388b2321bf644806f209e4a51ab77a44", "url": "https://github.com/nuxeo/nuxeo/commit/6f62dd4d388b2321bf644806f209e4a51ab77a44", "message": "TEMP", "committedDate": "2020-04-04T07:28:15Z", "type": "forcePushed"}, {"oid": "b03a91c37555e2538dee26c20c3ed6f6fe49880c", "url": "https://github.com/nuxeo/nuxeo/commit/b03a91c37555e2538dee26c20c3ed6f6fe49880c", "message": "TEMP", "committedDate": "2020-04-04T07:30:45Z", "type": "forcePushed"}, {"oid": "5443cce814413d0f54f29766521de59abffcc44d", "url": "https://github.com/nuxeo/nuxeo/commit/5443cce814413d0f54f29766521de59abffcc44d", "message": "TEMP", "committedDate": "2020-04-04T08:57:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2NzgyMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r403467821", "bodyText": "I believe that jx step helm install creates the namespace if it doesn't exist, so this might be useles..", "author": "ataillefer", "createdAt": "2020-04-04T13:02:26Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,8 +648,71 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      /*\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      */\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview', 'Deploy nuxeo preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute environment variables in chart values\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              boolean nsExists = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExists) {\n+                noCommentOpt = '--no-comment'\n+                // Previous preview deployment needs to be scaled to 0 to be replaced correctly\n+                sh \"kubectl -n ${PREVIEW_NAMESPACE} scale deployment nuxeo-preview --replicas=0\"\n+              } else {\n+                sh \"kubectl create namespace ${PREVIEW_NAMESPACE}\"", "originalCommit": "5443cce814413d0f54f29766521de59abffcc44d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxMDcwMg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r403510702", "bodyText": "indeed, so it did with my minikube", "author": "NourNuxeo", "createdAt": "2020-04-04T20:01:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2NzgyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2ODA2Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r403468062", "bodyText": "I would suggest to always use the - or the -- syntax for options, at least in the same command.\nSo: jx step helm install --namespace xxx --name yyy.", "author": "ataillefer", "createdAt": "2020-04-04T13:04:47Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,8 +648,71 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      /*\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      */\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview', 'Deploy nuxeo preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute environment variables in chart values\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              boolean nsExists = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExists) {\n+                noCommentOpt = '--no-comment'\n+                // Previous preview deployment needs to be scaled to 0 to be replaced correctly\n+                sh \"kubectl -n ${PREVIEW_NAMESPACE} scale deployment nuxeo-preview --replicas=0\"\n+              } else {\n+                sh \"kubectl create namespace ${PREVIEW_NAMESPACE}\"\n+              }\n+              // third build and deploy the chart\n+              // To avoid jx gc cron job, reference branch previews are deployed by calling jx step helm install\n+              sh \"\"\"\n+                jx step helm build\n+                mkdir target && helm template . --output-dir target\n+                jx step helm install --namespace ${PREVIEW_NAMESPACE} -n ${PREVIEW_NAMESPACE} .", "originalCommit": "5443cce814413d0f54f29766521de59abffcc44d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2ODMxMw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r403468313", "bodyText": "more precisely the --name and --namespace options", "author": "ataillefer", "createdAt": "2020-04-04T13:07:40Z", "path": "Jenkinsfile", "diffHunk": "@@ -279,11 +279,14 @@ pipeline {\n     PUBLIC_DOCKER_REGISTRY = 'docker.packages.nuxeo.com'\n     MAVEN_OPTS = \"$MAVEN_OPTS -Xms512m -Xmx3072m\"\n     MAVEN_ARGS = getMavenArgs()\n-    VERSION = getVersion()\n+    VERSION = \"11.x\"\n     DOCKER_TAG = getDockerTagFrom(\"${VERSION}\")\n     CHANGE_BRANCH = \"${env.CHANGE_BRANCH != null ? env.CHANGE_BRANCH : BRANCH_NAME}\"\n     CHANGE_TARGET = \"${env.CHANGE_TARGET != null ? env.CHANGE_TARGET : BRANCH_NAME}\"\n     CONNECT_PREPROD_URL = 'https://nos-preprod-connect.nuxeocloud.com/nuxeo'\n+    // jx step helm install's -n option requires the name provided to be lowercase", "originalCommit": "5443cce814413d0f54f29766521de59abffcc44d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2ca863d292185c4b2a4347da99c78eb1142905ef", "url": "https://github.com/nuxeo/nuxeo/commit/2ca863d292185c4b2a4347da99c78eb1142905ef", "message": "TEMP", "committedDate": "2020-04-04T20:03:16Z", "type": "forcePushed"}, {"oid": "52cbc7d1f29b10265cff91adcb154d4eb54e4d65", "url": "https://github.com/nuxeo/nuxeo/commit/52cbc7d1f29b10265cff91adcb154d4eb54e4d65", "message": "TEMP", "committedDate": "2020-04-06T13:39:24Z", "type": "forcePushed"}, {"oid": "83ef45fb19ad3b6cffc136ee22c38d4912d0466f", "url": "https://github.com/nuxeo/nuxeo/commit/83ef45fb19ad3b6cffc136ee22c38d4912d0466f", "message": "TEMP", "committedDate": "2020-04-06T14:21:13Z", "type": "forcePushed"}, {"oid": "e1fd8d9c2ee4dffa14ebfdd23526d11ed511292f", "url": "https://github.com/nuxeo/nuxeo/commit/e1fd8d9c2ee4dffa14ebfdd23526d11ed511292f", "message": "TEMP", "committedDate": "2020-04-06T18:11:56Z", "type": "forcePushed"}, {"oid": "f8432d29ef6c86c89e7596c9fcd71f403df39600", "url": "https://github.com/nuxeo/nuxeo/commit/f8432d29ef6c86c89e7596c9fcd71f403df39600", "message": "NXP-27713: deploy a preview env for reference branches", "committedDate": "2020-04-06T13:38:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxNDEzMw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r404314133", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                replicator.v1.mittwald.de/replicate-from: platform-staging/nexus-docker-cfg\n          \n          \n            \n                replicator.v1.mittwald.de/replicate-from: platform/nexus-docker-cfg", "author": "ataillefer", "createdAt": "2020-04-06T18:51:15Z", "path": "ci/helm/preview/templates/empty-docker-secret-for-kubernetes-replicator.yaml", "diffHunk": "@@ -0,0 +1,9 @@\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+  name: nexus-docker-cfg\n+  annotations:\n+    replicator.v1.mittwald.de/replicate-from: platform-staging/nexus-docker-cfg", "originalCommit": "f8432d29ef6c86c89e7596c9fcd71f403df39600", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5fa06cf79725c984b365e0fd9ebd09d8bbcce431", "url": "https://github.com/nuxeo/nuxeo/commit/5fa06cf79725c984b365e0fd9ebd09d8bbcce431", "message": "NXP-27713: deploy a preview env for reference branches", "committedDate": "2020-04-06T19:34:07Z", "type": "forcePushed"}, {"oid": "83964ce276df7e7bf6cbdda3c483e15dedff7384", "url": "https://github.com/nuxeo/nuxeo/commit/83964ce276df7e7bf6cbdda3c483e15dedff7384", "message": "NXP-27713: deploy a preview env for reference branches", "committedDate": "2020-04-06T20:23:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5NTM0Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r404795342", "bodyText": "noCommentOpt is unused?", "author": "kevinleturc", "createdAt": "2020-04-07T13:10:07Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,6 +635,63 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview', 'Deploy nuxeo preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute environment variables in chart values\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            script {\n+              boolean nsExists = sh(returnStatus: true, script: \"kubectl get namespace ${PREVIEW_NAMESPACE}\") == 0\n+              String noCommentOpt = '';", "originalCommit": "83964ce276df7e7bf6cbdda3c483e15dedff7384", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwNjc2Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r404806763", "bodyText": "indeed no need without jx preview", "author": "NourNuxeo", "createdAt": "2020-04-07T13:26:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5NTM0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5NjMxMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r404796310", "bodyText": "unused?", "author": "kevinleturc", "createdAt": "2020-04-07T13:11:35Z", "path": "ci/helm/preview/values.yaml", "diffHunk": "@@ -0,0 +1,71 @@\n+expose:\n+  Annotations:\n+    helm.sh/hook: post-install,post-upgrade\n+    helm.sh/hook-delete-policy: hook-succeeded\n+  config:\n+    # add tls configuration\n+    domain: platform.dev.nuxeo.com\n+    exposer: Ingress\n+    http: true\n+    tlsacme: true\n+    tlsSecretName: platform-cluster-tls\n+    urltemplate: '\"{{.Namespace}}.{{.Domain}}\"'\n+\n+cleanup:\n+  Args:\n+    - --cleanup\n+  Annotations:\n+    helm.sh/hook: pre-delete\n+    helm.sh/hook-delete-policy: hook-succeeded\n+\n+nuxeo:\n+  fullnameOverride: nuxeo-preview\n+  nuxeo:\n+    customParams: |-\n+      elasticsearch.restClient.socketTimeoutMs=300000\n+      elasticsearch.restClient.connectionTimeoutMs=300000\n+    podAnnotations:\n+      preview/scm.ref: $SCM_REF", "originalCommit": "83964ce276df7e7bf6cbdda3c483e15dedff7384", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5c95b57f21f4fdace355838e46cd8dc75230db3a", "url": "https://github.com/nuxeo/nuxeo/commit/5c95b57f21f4fdace355838e46cd8dc75230db3a", "message": "NXP-27713: deploy a preview env for reference branches", "committedDate": "2020-04-07T13:25:53Z", "type": "commit"}, {"oid": "5c95b57f21f4fdace355838e46cd8dc75230db3a", "url": "https://github.com/nuxeo/nuxeo/commit/5c95b57f21f4fdace355838e46cd8dc75230db3a", "message": "NXP-27713: deploy a preview env for reference branches", "committedDate": "2020-04-07T13:25:53Z", "type": "forcePushed"}, {"oid": "f690baabf871156ef918f2463bc61fa833ed3f3c", "url": "https://github.com/nuxeo/nuxeo/commit/f690baabf871156ef918f2463bc61fa833ed3f3c", "message": "TEMP", "committedDate": "2020-03-24T13:52:36Z", "type": "forcePushed"}, {"oid": "bee3c8ac4d3914bbc96a95d5cde9eff25599bb37", "url": "https://github.com/nuxeo/nuxeo/commit/bee3c8ac4d3914bbc96a95d5cde9eff25599bb37", "message": "TEMP", "committedDate": "2020-03-24T13:54:24Z", "type": "forcePushed"}, {"oid": "12e628c5e99ccfe8ad877766dcaedabf3a67e3e1", "url": "https://github.com/nuxeo/nuxeo/commit/12e628c5e99ccfe8ad877766dcaedabf3a67e3e1", "message": "TEMP", "committedDate": "2020-03-24T14:06:43Z", "type": "forcePushed"}, {"oid": "b8b657ed8b25dd6402ce6bbdc972858e72298a0e", "url": "https://github.com/nuxeo/nuxeo/commit/b8b657ed8b25dd6402ce6bbdc972858e72298a0e", "message": "TEMP 2", "committedDate": "2020-03-24T14:26:36Z", "type": "forcePushed"}, {"oid": "418916dd46d9e5edeb48cc30860a5a50ec9bb81c", "url": "https://github.com/nuxeo/nuxeo/commit/418916dd46d9e5edeb48cc30860a5a50ec9bb81c", "message": "TEMP 2", "committedDate": "2020-03-24T14:30:38Z", "type": "forcePushed"}, {"oid": "aef314da91235ae64604c7046a086bcd4c673de6", "url": "https://github.com/nuxeo/nuxeo/commit/aef314da91235ae64604c7046a086bcd4c673de6", "message": "TEMP 2", "committedDate": "2020-03-24T14:33:14Z", "type": "forcePushed"}, {"oid": "4c1b2b0893fe899a1d2bfabaf1c20e996cc872ce", "url": "https://github.com/nuxeo/nuxeo/commit/4c1b2b0893fe899a1d2bfabaf1c20e996cc872ce", "message": "TEMP 2", "committedDate": "2020-03-24T14:36:20Z", "type": "forcePushed"}, {"oid": "c7a7f21f777d04f013cee4848f8dbe0954ea9185", "url": "https://github.com/nuxeo/nuxeo/commit/c7a7f21f777d04f013cee4848f8dbe0954ea9185", "message": "TEMP 2", "committedDate": "2020-03-24T14:41:38Z", "type": "forcePushed"}, {"oid": "d877626ac43a36c9f15ea903fb5709ffcd7d399c", "url": "https://github.com/nuxeo/nuxeo/commit/d877626ac43a36c9f15ea903fb5709ffcd7d399c", "message": "TEMP 2", "committedDate": "2020-03-24T14:48:47Z", "type": "forcePushed"}, {"oid": "3a08dfc33e303074b39cd9e5a124a1dc0ec33650", "url": "https://github.com/nuxeo/nuxeo/commit/3a08dfc33e303074b39cd9e5a124a1dc0ec33650", "message": "fixup", "committedDate": "2020-03-24T15:48:30Z", "type": "forcePushed"}, {"oid": "e6590e7f90947d91864f5deef0e7dc851f8c3ce3", "url": "https://github.com/nuxeo/nuxeo/commit/e6590e7f90947d91864f5deef0e7dc851f8c3ce3", "message": "fixup", "committedDate": "2020-03-24T16:43:11Z", "type": "forcePushed"}, {"oid": "c0dbcca20f848670028d5997ef5cb800a5525f63", "url": "https://github.com/nuxeo/nuxeo/commit/c0dbcca20f848670028d5997ef5cb800a5525f63", "message": "fixup", "committedDate": "2020-03-24T16:50:06Z", "type": "forcePushed"}, {"oid": "34d9bfbadca39eacdfa116d7e658f8bde5d9ec4f", "url": "https://github.com/nuxeo/nuxeo/commit/34d9bfbadca39eacdfa116d7e658f8bde5d9ec4f", "message": "fixup", "committedDate": "2020-03-24T16:59:08Z", "type": "forcePushed"}, {"oid": "fc09624d63d61ff06893ab3ef107bcbafff527e9", "url": "https://github.com/nuxeo/nuxeo/commit/fc09624d63d61ff06893ab3ef107bcbafff527e9", "message": "TEMP", "committedDate": "2020-03-24T17:17:07Z", "type": "forcePushed"}, {"oid": "6296607bdb57c190951b85d001cdd986f88a35f2", "url": "https://github.com/nuxeo/nuxeo/commit/6296607bdb57c190951b85d001cdd986f88a35f2", "message": "TEMP2", "committedDate": "2020-03-24T17:38:34Z", "type": "forcePushed"}, {"oid": "234b12f2b7fd74360bb79222f158edd88faa8afb", "url": "https://github.com/nuxeo/nuxeo/commit/234b12f2b7fd74360bb79222f158edd88faa8afb", "message": "TEMP2", "committedDate": "2020-03-24T17:52:34Z", "type": "forcePushed"}, {"oid": "c93b42833a3b71885844588148c7719286f30e9e", "url": "https://github.com/nuxeo/nuxeo/commit/c93b42833a3b71885844588148c7719286f30e9e", "message": "TEMP2", "committedDate": "2020-03-24T18:47:11Z", "type": "forcePushed"}, {"oid": "b9251449c4b8da02be0e0ff416c2a379b0cf229f", "url": "https://github.com/nuxeo/nuxeo/commit/b9251449c4b8da02be0e0ff416c2a379b0cf229f", "message": "TEMP", "committedDate": "2020-03-24T20:40:24Z", "type": "forcePushed"}, {"oid": "4a8d8598dee8e3784225ff89c5ced0670427e6b5", "url": "https://github.com/nuxeo/nuxeo/commit/4a8d8598dee8e3784225ff89c5ced0670427e6b5", "message": "TEMP", "committedDate": "2020-03-24T21:48:02Z", "type": "forcePushed"}, {"oid": "c9842e949ba1209796e9c2582e46989ce3786a5e", "url": "https://github.com/nuxeo/nuxeo/commit/c9842e949ba1209796e9c2582e46989ce3786a5e", "message": "TEMP", "committedDate": "2020-03-24T21:56:37Z", "type": "forcePushed"}, {"oid": "4f24571e31d2ab3ab517cf870105d192ed369a1c", "url": "https://github.com/nuxeo/nuxeo/commit/4f24571e31d2ab3ab517cf870105d192ed369a1c", "message": "TEMP", "committedDate": "2020-03-24T22:06:23Z", "type": "forcePushed"}, {"oid": "2dcc3c544f3e299cf106199868684f081ddc197a", "url": "https://github.com/nuxeo/nuxeo/commit/2dcc3c544f3e299cf106199868684f081ddc197a", "message": "TEMP", "committedDate": "2020-03-24T22:21:08Z", "type": "forcePushed"}, {"oid": "588c5a27826aefc9a906cc5d90697897b66b113e", "url": "https://github.com/nuxeo/nuxeo/commit/588c5a27826aefc9a906cc5d90697897b66b113e", "message": "TEMP", "committedDate": "2020-03-25T08:13:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwNTg4Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r397705883", "bodyText": "Use the same when as other stages:\nwhen {\n        not {\n          branch 'PR-*'\n        }\n      }", "author": "troger", "createdAt": "2020-03-25T09:17:41Z", "path": "Jenkinsfile", "diffHunk": "@@ -631,6 +636,77 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        branch \"${REFERENCE_BRANCH}\"", "originalCommit": "ae9ec87d9038d4e3714d558dff94fa4b98367caf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwNjIyNQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r397706225", "bodyText": "No need for this var, either it's a PR, either it's a reference branch.", "author": "troger", "createdAt": "2020-03-25T09:18:12Z", "path": "Jenkinsfile", "diffHunk": "@@ -282,6 +282,11 @@ pipeline {\n     DOCKER_TAG = getDockerTagFrom(\"${VERSION}\")\n     CHANGE_BRANCH = \"${env.CHANGE_BRANCH != null ? env.CHANGE_BRANCH : BRANCH_NAME}\"\n     CHANGE_TARGET = \"${env.CHANGE_TARGET != null ? env.CHANGE_TARGET : BRANCH_NAME}\"\n+    ORG = \"nuxeo\"\n+    APP_NAME = \"nuxeo\"\n+    NAMESPACE = \"$APP_NAME-${BRANCH_NAME.toLowerCase()}\"\n+    REFERENCE_BRANCH = \"master\"", "originalCommit": "ae9ec87d9038d4e3714d558dff94fa4b98367caf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwNjg2Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r397706867", "bodyText": "Images are already built by another stage \"Build Docker images\", no need to build them again...", "author": "troger", "createdAt": "2020-03-25T09:19:12Z", "path": "Jenkinsfile", "diffHunk": "@@ -631,6 +636,77 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        branch \"${REFERENCE_BRANCH}\"\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('docker/nuxeo') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Build Nuxeo preview image", "originalCommit": "ae9ec87d9038d4e3714d558dff94fa4b98367caf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcwODg2Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r397708863", "bodyText": "All the preview folder should go in the already existing ci/helm/ folder, no need to create a new helm folder at the root.", "author": "troger", "createdAt": "2020-03-25T09:22:32Z", "path": "helm/preview/Chart.yaml", "diffHunk": "@@ -0,0 +1,5 @@\n+apiVersion: v1", "originalCommit": "ae9ec87d9038d4e3714d558dff94fa4b98367caf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "333d9aabbe5062f8a641e917bde158560c5cc655", "url": "https://github.com/nuxeo/nuxeo/commit/333d9aabbe5062f8a641e917bde158560c5cc655", "message": "TEMP2", "committedDate": "2020-03-25T14:20:06Z", "type": "forcePushed"}, {"oid": "1645929f906fba4a461f4a24e5be4255a55b773d", "url": "https://github.com/nuxeo/nuxeo/commit/1645929f906fba4a461f4a24e5be4255a55b773d", "message": "TEMP2", "committedDate": "2020-03-25T16:36:31Z", "type": "forcePushed"}, {"oid": "78431937f3530ac02fe7fd169cdf36de2d6c0aa4", "url": "https://github.com/nuxeo/nuxeo/commit/78431937f3530ac02fe7fd169cdf36de2d6c0aa4", "message": "TEMP2", "committedDate": "2020-03-25T17:13:28Z", "type": "forcePushed"}, {"oid": "22007f729b6dff23175bf76b0fae5eda855d519c", "url": "https://github.com/nuxeo/nuxeo/commit/22007f729b6dff23175bf76b0fae5eda855d519c", "message": "TEMP2", "committedDate": "2020-03-25T18:59:54Z", "type": "forcePushed"}, {"oid": "e791d186a44dc3c0ee5f6d378a2ad53a59ca8ea8", "url": "https://github.com/nuxeo/nuxeo/commit/e791d186a44dc3c0ee5f6d378a2ad53a59ca8ea8", "message": "TEMP2", "committedDate": "2020-03-26T09:36:37Z", "type": "forcePushed"}, {"oid": "c2ffc41fc2abd57eb4334132cb734468649ece15", "url": "https://github.com/nuxeo/nuxeo/commit/c2ffc41fc2abd57eb4334132cb734468649ece15", "message": "TEMP", "committedDate": "2020-03-25T13:16:56Z", "type": "forcePushed"}, {"oid": "dd26e58a8b98477759a840dabcfa777777aa81ea", "url": "https://github.com/nuxeo/nuxeo/commit/dd26e58a8b98477759a840dabcfa777777aa81ea", "message": "TEMP2", "committedDate": "2020-03-26T14:31:28Z", "type": "forcePushed"}, {"oid": "8aeca93345cc7f858b11a2020ddff85f9f93d671", "url": "https://github.com/nuxeo/nuxeo/commit/8aeca93345cc7f858b11a2020ddff85f9f93d671", "message": "TEMP", "committedDate": "2020-03-26T14:39:56Z", "type": "forcePushed"}, {"oid": "4523fe5c4eaeba224108ecba2c589129aed34073", "url": "https://github.com/nuxeo/nuxeo/commit/4523fe5c4eaeba224108ecba2c589129aed34073", "message": "TEMP2", "committedDate": "2020-03-26T16:29:22Z", "type": "forcePushed"}, {"oid": "8833f171416b1b797dda500d70a7178ea62fe90f", "url": "https://github.com/nuxeo/nuxeo/commit/8833f171416b1b797dda500d70a7178ea62fe90f", "message": "TEMP2", "committedDate": "2020-03-26T18:05:22Z", "type": "forcePushed"}, {"oid": "b53d7c61157e363fdcef8b95eb62c1dbb26ace77", "url": "https://github.com/nuxeo/nuxeo/commit/b53d7c61157e363fdcef8b95eb62c1dbb26ace77", "message": "TEMP2", "committedDate": "2020-03-26T18:07:07Z", "type": "forcePushed"}, {"oid": "7fb98e2b82dbf90eb6ab69b577e98a04a5277bfb", "url": "https://github.com/nuxeo/nuxeo/commit/7fb98e2b82dbf90eb6ab69b577e98a04a5277bfb", "message": "TEMP2", "committedDate": "2020-03-26T18:11:46Z", "type": "forcePushed"}, {"oid": "67d17114e7d6ccbbc0f2cd64da5898a728fa220a", "url": "https://github.com/nuxeo/nuxeo/commit/67d17114e7d6ccbbc0f2cd64da5898a728fa220a", "message": "TEMP2", "committedDate": "2020-03-26T18:17:25Z", "type": "forcePushed"}, {"oid": "1cf522575ee21be955a452f5ebdb3f1d7826df91", "url": "https://github.com/nuxeo/nuxeo/commit/1cf522575ee21be955a452f5ebdb3f1d7826df91", "message": "TEMP2", "committedDate": "2020-03-26T18:48:14Z", "type": "forcePushed"}, {"oid": "743faa5ffb22c3ce0c7a69e33916a58c84d9528b", "url": "https://github.com/nuxeo/nuxeo/commit/743faa5ffb22c3ce0c7a69e33916a58c84d9528b", "message": "TEMP2", "committedDate": "2020-03-26T20:30:44Z", "type": "forcePushed"}, {"oid": "ca0fd09a8cbeb7581f55a3b8ce3b3aff30c74a52", "url": "https://github.com/nuxeo/nuxeo/commit/ca0fd09a8cbeb7581f55a3b8ce3b3aff30c74a52", "message": "TEMP2", "committedDate": "2020-03-26T20:38:04Z", "type": "forcePushed"}, {"oid": "310c4550916b0b86aaf3dc92426ff266894262c2", "url": "https://github.com/nuxeo/nuxeo/commit/310c4550916b0b86aaf3dc92426ff266894262c2", "message": "TEMP2", "committedDate": "2020-03-26T20:42:50Z", "type": "forcePushed"}, {"oid": "bb230edbed628403194a68b800b3009e78c1db56", "url": "https://github.com/nuxeo/nuxeo/commit/bb230edbed628403194a68b800b3009e78c1db56", "message": "TEMP2", "committedDate": "2020-03-26T20:50:07Z", "type": "forcePushed"}, {"oid": "9b89a47016e0df06d86e32cf1950def62fb879ea", "url": "https://github.com/nuxeo/nuxeo/commit/9b89a47016e0df06d86e32cf1950def62fb879ea", "message": "TEMP2", "committedDate": "2020-03-26T21:35:39Z", "type": "forcePushed"}, {"oid": "2bdc8f9a49ac331492c31d886be250dd68e8df04", "url": "https://github.com/nuxeo/nuxeo/commit/2bdc8f9a49ac331492c31d886be250dd68e8df04", "message": "TEMP2", "committedDate": "2020-03-26T22:16:12Z", "type": "forcePushed"}, {"oid": "2a85da700025e0f200b6a503b6292472ad49de54", "url": "https://github.com/nuxeo/nuxeo/commit/2a85da700025e0f200b6a503b6292472ad49de54", "message": "TEMP2", "committedDate": "2020-03-27T09:52:00Z", "type": "forcePushed"}, {"oid": "0cbad6047732e4098dd65f5839c29ebc8fa83015", "url": "https://github.com/nuxeo/nuxeo/commit/0cbad6047732e4098dd65f5839c29ebc8fa83015", "message": "TEMP2", "committedDate": "2020-03-27T09:58:45Z", "type": "forcePushed"}, {"oid": "cdabae2bee3e2327a50b3f8efef2f01d732ea9a0", "url": "https://github.com/nuxeo/nuxeo/commit/cdabae2bee3e2327a50b3f8efef2f01d732ea9a0", "message": "TEMP2", "committedDate": "2020-03-27T10:09:44Z", "type": "forcePushed"}, {"oid": "cbb9e337418a52de6d1caec99fa133847e4ba430", "url": "https://github.com/nuxeo/nuxeo/commit/cbb9e337418a52de6d1caec99fa133847e4ba430", "message": "TEMP2", "committedDate": "2020-03-27T10:25:12Z", "type": "forcePushed"}, {"oid": "955979c5c8e156d5afee3c8ffb27385435e02900", "url": "https://github.com/nuxeo/nuxeo/commit/955979c5c8e156d5afee3c8ffb27385435e02900", "message": "TEMP2", "committedDate": "2020-03-27T10:40:45Z", "type": "forcePushed"}, {"oid": "7942af06b236a1b8c0a15b79ca3a22f06f5b9bd9", "url": "https://github.com/nuxeo/nuxeo/commit/7942af06b236a1b8c0a15b79ca3a22f06f5b9bd9", "message": "TEMP2", "committedDate": "2020-03-27T10:45:56Z", "type": "forcePushed"}, {"oid": "e86e648ff9f1b009a26e77a545ab70d3b9b3a928", "url": "https://github.com/nuxeo/nuxeo/commit/e86e648ff9f1b009a26e77a545ab70d3b9b3a928", "message": "TEMP2", "committedDate": "2020-03-27T11:08:45Z", "type": "forcePushed"}, {"oid": "4afd5b4f2efba82a6c3b8cda199e4a960bd578c7", "url": "https://github.com/nuxeo/nuxeo/commit/4afd5b4f2efba82a6c3b8cda199e4a960bd578c7", "message": "TEMP2", "committedDate": "2020-03-27T14:19:51Z", "type": "forcePushed"}, {"oid": "da2c7bcb572161d121f373894ed3f24573bb13d6", "url": "https://github.com/nuxeo/nuxeo/commit/da2c7bcb572161d121f373894ed3f24573bb13d6", "message": "TEMP2", "committedDate": "2020-03-27T17:45:02Z", "type": "forcePushed"}, {"oid": "f93950a44ba9469af30531a4caf63e7d4a65c8d9", "url": "https://github.com/nuxeo/nuxeo/commit/f93950a44ba9469af30531a4caf63e7d4a65c8d9", "message": "TEMP2", "committedDate": "2020-03-27T18:10:01Z", "type": "forcePushed"}, {"oid": "f61b4dbb40826b7a976ee0e5be050ec44d839176", "url": "https://github.com/nuxeo/nuxeo/commit/f61b4dbb40826b7a976ee0e5be050ec44d839176", "message": "TEMP2", "committedDate": "2020-03-27T18:22:43Z", "type": "forcePushed"}, {"oid": "d2c543d52a65040c0a4324cee5942e9b01a9db70", "url": "https://github.com/nuxeo/nuxeo/commit/d2c543d52a65040c0a4324cee5942e9b01a9db70", "message": "TEMP2", "committedDate": "2020-03-27T19:12:43Z", "type": "forcePushed"}, {"oid": "4bd36f08f88c702f39e445e8cd8cbda79a6296b4", "url": "https://github.com/nuxeo/nuxeo/commit/4bd36f08f88c702f39e445e8cd8cbda79a6296b4", "message": "TEMP2", "committedDate": "2020-03-27T19:27:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNzM1NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399507354", "bodyText": "unused", "author": "ataillefer", "createdAt": "2020-03-27T19:57:10Z", "path": "Jenkinsfile", "diffHunk": "@@ -284,6 +284,11 @@ pipeline {\n     CHANGE_BRANCH = \"${env.CHANGE_BRANCH != null ? env.CHANGE_BRANCH : BRANCH_NAME}\"\n     CHANGE_TARGET = \"${env.CHANGE_TARGET != null ? env.CHANGE_TARGET : BRANCH_NAME}\"\n     CONNECT_PREPROD_URL = 'https://nos-preprod-connect.nuxeocloud.com/nuxeo'\n+    ORG = \"nuxeo\"", "originalCommit": "eebd04cfd86e8456e986383fad8898991fc5f63d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNDY0NQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399534645", "bodyText": "This is mandatory", "author": "NourNuxeo", "createdAt": "2020-03-27T20:58:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNzM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2MTEwMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399661100", "bodyText": "why? where?", "author": "ataillefer", "createdAt": "2020-03-28T13:12:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNzM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2NzA2NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399667064", "bodyText": "https://jenkins.platform.dev.nuxeo.com/blue/organizations/jenkins/nuxeo%2Fnuxeo/detail/PR-3856/84/pipeline/\nin the last shell script before last line:\n[2020-03-27T20:56:08.654Z] error: no ORG environment variable found\n\nscript returned exit code 1\n\nI didn't search extensively about why exactly but it is also present in the arender Jenkinsfile", "author": "NourNuxeo", "createdAt": "2020-03-28T14:14:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNzM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3OTU3Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399679577", "bodyText": "I think it's important to understand why it is needed, because reading the Jenkinsfile, defining an environment variable without any obvious reference will lose the reader.\nThen, add a comment to explain why/where it is used.", "author": "ataillefer", "createdAt": "2020-03-28T16:14:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNzM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3OTc0OA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399679748", "bodyText": "It's indeed present in the ARender Jenkinsfile because it is actually used: https://github.com/nuxeo/nuxeo-arender-connector/blob/10/Jenkinsfile#L48.", "author": "ataillefer", "createdAt": "2020-03-28T16:16:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNzM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwNTEyNQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400105125", "bodyText": "This is a jx preview requirement as well as APP_NAME:\nhttps://github.com/jenkins-x/jx/blob/master/pkg/cmd/preview/preview.go#L1008-L1022\nI'll comment with this", "author": "NourNuxeo", "createdAt": "2020-03-30T11:02:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNzM1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNzY5OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399507699", "bodyText": "we don't need any package", "author": "ataillefer", "createdAt": "2020-03-27T19:57:54Z", "path": "helm/preview/values.yaml", "diffHunk": "@@ -0,0 +1,86 @@\n+expose:\n+  Annotations:\n+    helm.sh/hook: post-install,post-upgrade\n+    helm.sh/hook-delete-policy: hook-succeeded\n+  config:\n+    # add tls configuration\n+    domain: platform.dev.nuxeo.com\n+    exposer: Ingress\n+    http: true\n+    tlsacme: true\n+    tlsSecretName: platform-cluster-tls\n+    urltemplate: '\"{{.Service}}-{{.Namespace}}.{{.Domain}}\"'\n+\n+cleanup:\n+  Args:\n+    - --cleanup\n+  Annotations:\n+    helm.sh/hook: pre-delete\n+    helm.sh/hook-delete-policy: hook-succeeded\n+\n+nuxeo:\n+  fullnameOverride: preview\n+  nuxeo:\n+    podAnnotations:\n+      preview/scm.ref: ${SCM_REF}\n+    podLabels:\n+      branch: \"$BRANCH_NAME\"\n+      team: platform\n+      resource: pod\n+      usage: preview\n+    service:\n+      annotations:\n+        fabric8.io/ingress.annotations: |-\n+          nginx.ingress.kubernetes.io/proxy-body-size: 0\n+          nginx.ingress.kubernetes.io/server-snippet: ignore_invalid_headers off;\n+      labels:\n+        team: platform\n+        resource: service\n+        usage: preview\n+    image:\n+      repository: ${DOCKER_REGISTRY}/nuxeo/nuxeo\n+      tag: ${VERSION}\n+      pullPolicy: Always\n+    packages: nuxeo-web-ui nuxeo-dam", "originalCommit": "eebd04cfd86e8456e986383fad8898991fc5f63d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b8c18247f9889362f4c9059e1f7199dce55b8d7b", "url": "https://github.com/nuxeo/nuxeo/commit/b8c18247f9889362f4c9059e1f7199dce55b8d7b", "message": "TEMP", "committedDate": "2020-03-27T20:47:17Z", "type": "forcePushed"}, {"oid": "13b8581764b7d9b69bff9c7a48567813068ce687", "url": "https://github.com/nuxeo/nuxeo/commit/13b8581764b7d9b69bff9c7a48567813068ce687", "message": "TEMP", "committedDate": "2020-03-27T20:56:50Z", "type": "forcePushed"}, {"oid": "67ffae0e10509cec5e6116d2c087047184415ed2", "url": "https://github.com/nuxeo/nuxeo/commit/67ffae0e10509cec5e6116d2c087047184415ed2", "message": "NXP-27713: deploy a preview env for reference branches", "committedDate": "2020-03-27T21:39:49Z", "type": "forcePushed"}, {"oid": "2d627a61f1386cad149b6b013fcbc83d34551056", "url": "https://github.com/nuxeo/nuxeo/commit/2d627a61f1386cad149b6b013fcbc83d34551056", "message": "NXP-27713: deploy a preview env for reference branches", "committedDate": "2020-03-27T21:45:27Z", "type": "forcePushed"}, {"oid": "5c945a845c95bc7f99fdaf94a42ee379d3d3c8e5", "url": "https://github.com/nuxeo/nuxeo/commit/5c945a845c95bc7f99fdaf94a42ee379d3d3c8e5", "message": "TEMP", "committedDate": "2020-03-27T21:54:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjQ3NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399652474", "bodyText": "This should be in nuxeo-helm-chart repository.", "author": "kevinleturc", "createdAt": "2020-03-28T11:39:16Z", "path": "ci/helm/preview/values.yaml", "diffHunk": "@@ -0,0 +1,93 @@\n+expose:\n+  Annotations:\n+    helm.sh/hook: post-install,post-upgrade\n+    helm.sh/hook-delete-policy: hook-succeeded\n+  config:\n+    # add tls configuration\n+    domain: platform.dev.nuxeo.com\n+    exposer: Ingress\n+    http: true\n+    tlsacme: true\n+    tlsSecretName: platform-cluster-tls\n+    urltemplate: '\"{{.Service}}-{{.Namespace}}.{{.Domain}}\"'\n+\n+cleanup:\n+  Args:\n+    - --cleanup\n+  Annotations:\n+    helm.sh/hook: pre-delete\n+    helm.sh/hook-delete-policy: hook-succeeded\n+\n+nuxeo:\n+  fullnameOverride: preview\n+  nuxeo:\n+    customParams: |-\n+      elasticsearch.restClient.socketTimeoutMs=300000\n+      elasticsearch.restClient.connectionTimeoutMs=300000\n+    podAnnotations:\n+      preview/scm.ref: ${SCM_REF}\n+    podLabels:\n+      branch: \"$BRANCH_NAME\"\n+      team: platform\n+      resource: pod\n+      usage: preview\n+    service:\n+      annotations:\n+        fabric8.io/ingress.annotations: |-\n+          nginx.ingress.kubernetes.io/proxy-body-size: 0\n+          nginx.ingress.kubernetes.io/server-snippet: ignore_invalid_headers off;\n+      labels:\n+        team: platform\n+        resource: service\n+        usage: preview\n+    image:\n+      repository: ${DOCKER_REGISTRY}/nuxeo/nuxeo\n+      tag: ${VERSION}\n+      pullPolicy: Always\n+    packages: nuxeo-web-ui nuxeo-dam\n+    livenessProbe:\n+      initialDelaySeconds: 900\n+      periodSeconds: 20\n+      successThreshold: 1\n+      failureThreshold: 5\n+      timeoutSeconds: 10\n+    readinessProbe:\n+      periodSeconds: 20\n+      initialDelaySeconds: 600\n+      successThreshold: 1\n+      timeoutSeconds: 10\n+      failureThreshold: 5\n+    custom_envs:\n+    - name: NUXEO_CLID\n+      valueFrom:\n+        secretKeyRef:\n+          name: instance-clid\n+          key: instance.clid\n+    persistence:\n+      enabled: ${PERSISTENCE}\n+  mongodb:\n+    deploy: ${PERSISTENCE}\n+    persistence:\n+      enabled: ${PERSISTENCE}\n+    labels:\n+      branch: \"$BRANCH_NAME\"\n+      resource: deployment\n+      team: platform\n+      usage: preview\n+    podLabels:\n+      branch: \"$BRANCH_NAME\"\n+      resource: pod\n+      team: platform\n+      usage: preview\n+  elasticsearch:\n+    deploy: ${PERSISTENCE}\n+    master:\n+      persistence:\n+        enabled: ${PERSISTENCE}\n+    data:\n+      persistence:\n+        enabled: ${PERSISTENCE}\n+    cluster:\n+      env:\n+        EXPECTED_MASTER_NODES: 1\n+        RECOVER_AFTER_MASTER_NODES: 1", "originalCommit": "5c945a845c95bc7f99fdaf94a42ee379d3d3c8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1OTE5NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399659194", "bodyText": "Yes probably, it depends on if we want them all the time or just for the preview.\nBut in fact:\n\nWhat does these values correspond to? I cannot find the in the elasticsearch Helm chart: https://github.com/helm/charts/blob/master/stable/elasticsearch/values.yaml.\nWhy do we need them set this way?", "author": "ataillefer", "createdAt": "2020-03-28T12:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2MDQ4Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399660483", "bodyText": "In the context of this PR preview environment, we need them for the cluster to recover because it didn't find preview-elasticsearch-discovery service. The non-existence of the service is strange, it should exist at the same time than pod is created.\nThese environment values are used in the config map of elasticsearch chart: https://github.com/helm/charts/blob/master/stable/elasticsearch/templates/configmap.yaml\nWe can see that MINIMUM_MASTER_NODES, EXPECTED_MASTER_NODES  and RECOVER_AFTER_MASTER_NODES  all default to 2 whereas we set it to 1 in nuxeo helm chart: https://github.com/nuxeo/nuxeo-helm-chart/blob/master/nuxeo/values.yaml#L110\nI think it makes sense to also declare these two variables as we're lowering the number of required master nodes, what do you think?", "author": "kevinleturc", "createdAt": "2020-03-28T13:07:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2MTI1Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399661253", "bodyText": "Great! Yes, let's add them tot he nuxeo Helm chart.\nNXP-28618 can be used for the commit message.", "author": "ataillefer", "createdAt": "2020-03-28T13:14:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2OTcwNw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399669707", "bodyText": "Do I keep this patch in the preview chart then ?\nWouldn't hurt to have it while waiting for the newer version of nuxeo helm chart.", "author": "NourNuxeo", "createdAt": "2020-03-28T14:42:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3OTE4Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399679183", "bodyText": "You can do a PR on the nuxeo chart and reference this PR version in the requirements.\nThen when the chart is merged version: ~1.0.0 should fetch the latest release.", "author": "ataillefer", "createdAt": "2020-03-28T16:11:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwNjczNg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401406736", "bodyText": "For your information, as I said, instead of keeping the Helm chart changes here, you could have referenced the PR version of the nuxeo Helm chart built here: https://jenkins.platform.dev.nuxeo.com/job/nuxeo/job/nuxeo-helm-chart/view/change-requests/job/PR-8/3/console (look for nuxeo-1.0.5-PR-8-3.tgz).\nIn requirements.yaml, just use:\ndependencies:\n  - alias: nuxeo\n    name: nuxeo\n    version: 1.0.5-PR-8-3", "author": "ataillefer", "createdAt": "2020-04-01T07:25:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjQ3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUxNzIyNw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r401517227", "bodyText": "Done here https://jenkins.platform.dev.nuxeo.com/blue/organizations/jenkins/nuxeo%2Fnuxeo/detail/PR-3856/59/pipeline\nhttps://jenkins.platform.dev.nuxeo.com/job/nuxeo/job/nuxeo/job/PR-3856/59/artifact/ci/helm/preview/requirements.lock", "author": "NourNuxeo", "createdAt": "2020-04-01T10:34:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjQ3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjUwNw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399652507", "bodyText": "Whitespace.", "author": "kevinleturc", "createdAt": "2020-03-28T11:39:40Z", "path": "Jenkinsfile", "diffHunk": "@@ -303,393 +307,61 @@ pipeline {\n       }\n     }\n \n-    stage('Update version') {\n+    stage('Deploy Preview') {\n       steps {\n+        setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'PENDING')\n         container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Update version\n-          ----------------------------------------\n-          New version: ${VERSION}\n-          \"\"\"\n-          sh \"\"\"\n-            mvn ${MAVEN_ARGS} -Pdistrib,docker versions:set -DnewVersion=${VERSION} -DgenerateBackupPoms=false\n-            perl -i -pe 's|<nuxeo.platform.version>.*?</nuxeo.platform.version>|<nuxeo.platform.version>${VERSION}</nuxeo.platform.version>|' pom.xml\n-            perl -i -pe 's|org.nuxeo.ecm.product.version=.*|org.nuxeo.ecm.product.version=${VERSION}|' nuxeo-distribution/nuxeo-nxr-server/src/main/resources/templates/nuxeo.defaults\n-          \"\"\"\n-        }\n-      }\n-    }\n-\n-    stage('Git commit') {\n-      when {\n-        not {\n-          branch 'PR-*'\n-        }\n-      }\n-      steps {\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Git commit\n-          ----------------------------------------\n-          \"\"\"\n-          sh \"\"\"\n-            git add .\n-            git commit -m \"Release ${VERSION}\"\n-          \"\"\"\n-        }\n-      }\n-    }\n-\n-    stage('Compile') {\n-      steps {\n-        setGitHubBuildStatus('platform/compile', 'Compile', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Compile\n-          ----------------------------------------\"\"\"\n-          echo \"MAVEN_OPTS=$MAVEN_OPTS\"\n-          sh \"mvn ${MAVEN_ARGS} -V -T0.8C -DskipTests install\"\n-        }\n-      }\n-      post {\n-        success {\n-          setGitHubBuildStatus('platform/compile', 'Compile', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/compile', 'Compile', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Run common unit tests') {\n-      steps {\n-        setGitHubBuildStatus('platform/utests/common/dev', 'Unit tests - common', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Run common unit tests\n-          ----------------------------------------\"\"\"\n-          dir('nuxeo-common') {\n-            sh \"mvn ${MAVEN_ARGS} test\"\n-          }\n-        }\n-      }\n-      post {\n-        always {\n-          junit testResults: '**/target/surefire-reports/*.xml'\n-        }\n-        success {\n-          setGitHubBuildStatus('platform/utests/common/dev', 'Unit tests - common', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/utests/common/dev', 'Unit tests - common', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Run runtime unit tests') {\n-      steps {\n-        setGitHubBuildStatus('platform/utests/runtime/dev', 'Unit tests - runtime', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Run runtime unit tests\n-          ----------------------------------------\"\"\"\n-          dir('nuxeo-runtime') {\n-            sh \"mvn ${MAVEN_ARGS} test\"\n-          }\n-        }\n-      }\n-      post {\n-        always {\n-          junit testResults: '**/target/surefire-reports/*.xml'\n-        }\n-        success {\n-          setGitHubBuildStatus('platform/utests/runtime/dev', 'Unit tests - runtime', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/utests/runtime/dev', 'Unit tests - runtime', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Run unit tests') {\n-      steps {\n-        script {\n-          def stages = [:]\n-          for (env in testEnvironments) {\n-            stages[\"Run ${env} unit tests\"] = buildUnitTestStage(env);\n-          }\n-          parallel stages\n-        }\n-      }\n-    }\n-\n-    stage('Package') {\n-      steps {\n-        setGitHubBuildStatus('platform/package', 'Package', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Package\n-          ----------------------------------------\"\"\"\n-          sh \"mvn ${MAVEN_ARGS} -f nuxeo-distribution/pom.xml -DskipTests install\"\n-          sh \"mvn ${MAVEN_ARGS} -f packages/pom.xml -DskipTests install\"\n-        }\n-      }\n-      post {\n-        success {\n-          setGitHubBuildStatus('platform/package', 'Package', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/package', 'Package', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Run \"dev\" functional tests') {\n-      steps {\n-        setGitHubBuildStatus('platform/ftests/dev', 'Functional tests - dev environment', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Run \"dev\" functional tests\n-          ----------------------------------------\"\"\"\n-          script {\n-            try {\n-              runFunctionalTests('nuxeo-distribution/nuxeo-server-tests')\n-              runFunctionalTests('nuxeo-distribution/nuxeo-server-hotreload-tests')\n-              runFunctionalTests('nuxeo-distribution/nuxeo-server-gatling-tests')\n-              runFunctionalTests('ftests')\n-              setGitHubBuildStatus('platform/ftests/dev', 'Functional tests - dev environment', 'SUCCESS')\n-            } catch (err) {\n-              setGitHubBuildStatus('platform/ftests/dev', 'Functional tests - dev environment', 'FAILURE')\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute docker image names and versions\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              sh(returnStdout: true, script: 'jx -b ns | sed -r \"s/^Using namespace \\'([^\\']+)\\'.+\\\\$/\\\\1/\"')\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExist) {\n+                noCommentOpt = '--no-comment'\n+              } else {\n+                sh \"kubectl create namespace ${NAMESPACE}\"\n+              }\n+              sh \"kubectl create secret generic preview-docker-cfg --namespace=${NAMESPACE} --from-file=.dockerconfigjson=/home/jenkins/.docker/config.json --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\n+              // third build and deploy the chart\n+              // waiting for https://github.com/jenkins-x/jx/issues/5797 to be fixed in order to remove --source-url\n+              sh \"\"\"\n+                jx step helm build --verbose\n+                mkdir target && helm template . --output-dir target\n+                jx preview \\\n+                  --namespace ${NAMESPACE} \\\n+                  --verbose \\\n+                  --source-url=https://github.com/nuxeo/nuxeo \\\n+                  --preview-health-timeout 15m \\\n+                  ${noCommentOpt}\n+              \"\"\"\n             }\n           }\n         }\n       }\n       post {\n         always {\n-          junit testResults: '**/target/failsafe-reports/*.xml'\n-        }\n-      }\n-    }\n-\n-    stage('Build Docker images') {\n-      steps {\n-        setGitHubBuildStatus('platform/docker/build', 'Build Docker images', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Build Docker images\n-          ----------------------------------------\n-          Image tag: ${VERSION}\n-          \"\"\"\n-          echo \"Build and push Docker images to internal Docker registry ${DOCKER_REGISTRY}\"\n-          // Fetch Nuxeo distribution and Nuxeo Content Platform packages with Maven\n-          sh \"mvn ${MAVEN_ARGS} -f docker/pom.xml process-resources\"\n-          skaffoldBuildAll()\n-        }\n-      }\n-      post {\n-        success {\n-          setGitHubBuildStatus('platform/docker/build', 'Build Docker images', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/docker/build', 'Build Docker images', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Test Docker images') {\n-      steps {\n-        setGitHubBuildStatus('platform/docker/test', 'Test Docker images', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Test Docker images\n-          ----------------------------------------\n-          \"\"\"\n-          script {\n-            // builder image\n-            def image = \"${DOCKER_REGISTRY}/${dockerNamespace}/${BUILDER_IMAGE_NAME}:${VERSION}\"\n-            echo \"Test ${image}\"\n-            dockerPull(image)\n-            dockerRun(image, 'ls -l /distrib')\n-\n-            // base image\n-            image = \"${DOCKER_REGISTRY}/${dockerNamespace}/${BASE_IMAGE_NAME}:${VERSION}\"\n-            echo \"Test ${image}\"\n-            dockerPull(image)\n-            dockerRun(image, 'cat /etc/centos-release; java -version')\n-\n-            // nuxeo slim image\n-            image = \"${DOCKER_REGISTRY}/${dockerNamespace}/${SLIM_IMAGE_NAME}:${VERSION}\"\n-            echo \"Test ${image}\"\n-            dockerPull(image)\n-            echo 'Run image as root (0)'\n-            dockerRun(image, 'nuxeoctl start')\n-            echo 'Run image as an arbitrary user (800)'\n-            dockerRun(image, 'nuxeoctl start', '800')\n-\n-            // nuxeo image\n-            image = \"${DOCKER_REGISTRY}/${dockerNamespace}/${NUXEO_IMAGE_NAME}:${VERSION}\"\n-            echo \"Test ${image}\"\n-            dockerPull(image)\n-            echo 'Run image as root (0)'\n-            dockerRun(image, 'nuxeoctl start')\n-            echo 'Run image as an arbitrary user (800)'\n-            dockerRun(image, 'nuxeoctl start', '800')\n-          }\n+          archiveArtifacts allowEmptyArchive: true, artifacts: '**/requirements.lock, **/charts/*.tgz, **/target/**/*.yaml'\n         }\n-      }\n-      post {\n         success {\n-          setGitHubBuildStatus('platform/docker/test', 'Test Docker images', 'SUCCESS')\n+          setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'SUCCESS')\n         }\n         failure {\n-          setGitHubBuildStatus('platform/docker/test', 'Test Docker images', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Deploy Docker images') {\n-      when {\n-        not {\n-          branch 'PR-*'\n-        }\n-      }\n-      steps {\n-        setGitHubBuildStatus('platform/docker/deploy', 'Deploy Docker images', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Deploy Docker images\n-          ----------------------------------------\n-          Image tag: ${VERSION}\n-          \"\"\"\n-          echo \"Push Docker images to public Docker registry ${PUBLIC_DOCKER_REGISTRY}\"\n-          dockerDeploy(\"${SLIM_IMAGE_NAME}\")\n-          dockerDeploy(\"${NUXEO_IMAGE_NAME}\")\n-        }\n-      }\n-      post {\n-        success {\n-          setGitHubBuildStatus('platform/docker/deploy', 'Deploy Docker images', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/docker/deploy', 'Deploy Docker images', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Deploy Maven artifacts') {\n-      steps {\n-        setGitHubBuildStatus('platform/deploy', 'Deploy Maven artifacts', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Deploy Maven artifacts\n-          ----------------------------------------\"\"\"\n-          sh \"mvn ${MAVEN_ARGS} -Pdistrib -DskipTests deploy\"\n-        }\n-      }\n-      post {\n-        success {\n-          setGitHubBuildStatus('platform/deploy', 'Deploy Maven artifacts', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/deploy', 'Deploy Maven artifacts', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Upload Nuxeo Packages') {\n-      steps {\n-        setGitHubBuildStatus('platform/upload/packages', 'Upload Nuxeo Packages', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Upload Nuxeo Packages to ${CONNECT_PREPROD_URL}\n-          ----------------------------------------\"\"\"\n-          withCredentials([usernameColonPassword(credentialsId: 'connect-preprod', variable: 'CONNECT_PASS')]) {\n-            sh \"\"\"\n-              PACKAGES_TO_UPLOAD=\"packages/nuxeo-*-package/target/nuxeo-*-package-*.zip\"\n-              for file in \\$PACKAGES_TO_UPLOAD ; do\n-                curl -i -u \"$CONNECT_PASS\" -F package=@\\$(ls \\$file) \"$CONNECT_PREPROD_URL\"/site/marketplace/upload?batch=true ;\n-              done\n-            \"\"\"\n-          }\n-        }\n-      }\n-      post {\n-        success {\n-          setGitHubBuildStatus('platform/upload/packages', 'Upload Nuxeo Packages', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/upload/packages', 'Upload Nuxeo Packages', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Git tag and push') {\n-      when {\n-        not {\n-          branch 'PR-*'\n-        }\n-      }\n-      steps {\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Git tag and push\n-          ----------------------------------------\n-          \"\"\"\n-          sh \"\"\"\n-            #!/usr/bin/env bash -xe\n-            # create the Git credentials\n-            jx step git credentials\n-            git config credential.helper store\n-\n-            # Git tag\n-            jx step tag -v ${VERSION}\n-          \"\"\"\n-        }\n-      }\n-    }\n-\n-    stage('JSF pipeline') {\n-      when {\n-        expression {\n-          // only trigger JSF pipeline if the target branch is master or a maintenance branch\n-          return CHANGE_TARGET ==~ 'master|\\\\d+\\\\.\\\\d+'\n-        }\n-      }\n-      steps {\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Build JSF pipeline\n-          ----------------------------------------\n-          Parameters:\n-            NUXEO_BRANCH: ${CHANGE_BRANCH}\n-            NUXEO_COMMIT_SHA: ${GIT_COMMIT}\n-            NUXEO_VERSION: ${VERSION}\n-          \"\"\"\n-          build job: \"/nuxeo/nuxeo-jsf-ui-status/${CHANGE_TARGET}\",\n-            parameters: [\n-              string(name: 'NUXEO_BRANCH', value: \"${CHANGE_BRANCH}\"),\n-              string(name: 'NUXEO_COMMIT_SHA', value: \"${GIT_COMMIT}\"),\n-              string(name: 'NUXEO_VERSION', value: \"${VERSION}\"),\n-            ], propagate: false, wait: false\n+          setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'FAILURE')\n         }\n       }\n     }\n   }\n-\n+  ", "originalCommit": "5c945a845c95bc7f99fdaf94a42ee379d3d3c8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2NzE0Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399667142", "bodyText": "Yes, since it was in the TEMP commit I didn't mind. But it will be removed on the next push \ud83d\udc4d", "author": "NourNuxeo", "createdAt": "2020-03-28T14:15:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjUwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjY0Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399652647", "bodyText": "This was added in arender because nuxeo 10.10 hotfixes itself during boot. This is not the case with master, so:\n\nprobably not needed\ncan be lowered", "author": "kevinleturc", "createdAt": "2020-03-28T11:41:37Z", "path": "Jenkinsfile", "diffHunk": "@@ -303,393 +307,61 @@ pipeline {\n       }\n     }\n \n-    stage('Update version') {\n+    stage('Deploy Preview') {\n       steps {\n+        setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'PENDING')\n         container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Update version\n-          ----------------------------------------\n-          New version: ${VERSION}\n-          \"\"\"\n-          sh \"\"\"\n-            mvn ${MAVEN_ARGS} -Pdistrib,docker versions:set -DnewVersion=${VERSION} -DgenerateBackupPoms=false\n-            perl -i -pe 's|<nuxeo.platform.version>.*?</nuxeo.platform.version>|<nuxeo.platform.version>${VERSION}</nuxeo.platform.version>|' pom.xml\n-            perl -i -pe 's|org.nuxeo.ecm.product.version=.*|org.nuxeo.ecm.product.version=${VERSION}|' nuxeo-distribution/nuxeo-nxr-server/src/main/resources/templates/nuxeo.defaults\n-          \"\"\"\n-        }\n-      }\n-    }\n-\n-    stage('Git commit') {\n-      when {\n-        not {\n-          branch 'PR-*'\n-        }\n-      }\n-      steps {\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Git commit\n-          ----------------------------------------\n-          \"\"\"\n-          sh \"\"\"\n-            git add .\n-            git commit -m \"Release ${VERSION}\"\n-          \"\"\"\n-        }\n-      }\n-    }\n-\n-    stage('Compile') {\n-      steps {\n-        setGitHubBuildStatus('platform/compile', 'Compile', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Compile\n-          ----------------------------------------\"\"\"\n-          echo \"MAVEN_OPTS=$MAVEN_OPTS\"\n-          sh \"mvn ${MAVEN_ARGS} -V -T0.8C -DskipTests install\"\n-        }\n-      }\n-      post {\n-        success {\n-          setGitHubBuildStatus('platform/compile', 'Compile', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/compile', 'Compile', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Run common unit tests') {\n-      steps {\n-        setGitHubBuildStatus('platform/utests/common/dev', 'Unit tests - common', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Run common unit tests\n-          ----------------------------------------\"\"\"\n-          dir('nuxeo-common') {\n-            sh \"mvn ${MAVEN_ARGS} test\"\n-          }\n-        }\n-      }\n-      post {\n-        always {\n-          junit testResults: '**/target/surefire-reports/*.xml'\n-        }\n-        success {\n-          setGitHubBuildStatus('platform/utests/common/dev', 'Unit tests - common', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/utests/common/dev', 'Unit tests - common', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Run runtime unit tests') {\n-      steps {\n-        setGitHubBuildStatus('platform/utests/runtime/dev', 'Unit tests - runtime', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Run runtime unit tests\n-          ----------------------------------------\"\"\"\n-          dir('nuxeo-runtime') {\n-            sh \"mvn ${MAVEN_ARGS} test\"\n-          }\n-        }\n-      }\n-      post {\n-        always {\n-          junit testResults: '**/target/surefire-reports/*.xml'\n-        }\n-        success {\n-          setGitHubBuildStatus('platform/utests/runtime/dev', 'Unit tests - runtime', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/utests/runtime/dev', 'Unit tests - runtime', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Run unit tests') {\n-      steps {\n-        script {\n-          def stages = [:]\n-          for (env in testEnvironments) {\n-            stages[\"Run ${env} unit tests\"] = buildUnitTestStage(env);\n-          }\n-          parallel stages\n-        }\n-      }\n-    }\n-\n-    stage('Package') {\n-      steps {\n-        setGitHubBuildStatus('platform/package', 'Package', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Package\n-          ----------------------------------------\"\"\"\n-          sh \"mvn ${MAVEN_ARGS} -f nuxeo-distribution/pom.xml -DskipTests install\"\n-          sh \"mvn ${MAVEN_ARGS} -f packages/pom.xml -DskipTests install\"\n-        }\n-      }\n-      post {\n-        success {\n-          setGitHubBuildStatus('platform/package', 'Package', 'SUCCESS')\n-        }\n-        failure {\n-          setGitHubBuildStatus('platform/package', 'Package', 'FAILURE')\n-        }\n-      }\n-    }\n-\n-    stage('Run \"dev\" functional tests') {\n-      steps {\n-        setGitHubBuildStatus('platform/ftests/dev', 'Functional tests - dev environment', 'PENDING')\n-        container('maven') {\n-          echo \"\"\"\n-          ----------------------------------------\n-          Run \"dev\" functional tests\n-          ----------------------------------------\"\"\"\n-          script {\n-            try {\n-              runFunctionalTests('nuxeo-distribution/nuxeo-server-tests')\n-              runFunctionalTests('nuxeo-distribution/nuxeo-server-hotreload-tests')\n-              runFunctionalTests('nuxeo-distribution/nuxeo-server-gatling-tests')\n-              runFunctionalTests('ftests')\n-              setGitHubBuildStatus('platform/ftests/dev', 'Functional tests - dev environment', 'SUCCESS')\n-            } catch (err) {\n-              setGitHubBuildStatus('platform/ftests/dev', 'Functional tests - dev environment', 'FAILURE')\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute docker image names and versions\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              sh(returnStdout: true, script: 'jx -b ns | sed -r \"s/^Using namespace \\'([^\\']+)\\'.+\\\\$/\\\\1/\"')\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExist) {\n+                noCommentOpt = '--no-comment'\n+              } else {\n+                sh \"kubectl create namespace ${NAMESPACE}\"\n+              }\n+              sh \"kubectl create secret generic preview-docker-cfg --namespace=${NAMESPACE} --from-file=.dockerconfigjson=/home/jenkins/.docker/config.json --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\n+              // third build and deploy the chart\n+              // waiting for https://github.com/jenkins-x/jx/issues/5797 to be fixed in order to remove --source-url\n+              sh \"\"\"\n+                jx step helm build --verbose\n+                mkdir target && helm template . --output-dir target\n+                jx preview \\\n+                  --namespace ${NAMESPACE} \\\n+                  --verbose \\\n+                  --source-url=https://github.com/nuxeo/nuxeo \\\n+                  --preview-health-timeout 15m \\", "originalCommit": "5c945a845c95bc7f99fdaf94a42ee379d3d3c8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY2Nzg3OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399667879", "bodyText": "Actually the preview often takes 10-11 minutes before being available:\nhttps://jenkins.platform.dev.nuxeo.com/blue/organizations/jenkins/nuxeo%2Fnuxeo/detail/PR-3856/85/pipeline/", "author": "NourNuxeo", "createdAt": "2020-03-28T14:23:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY1MjY0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NTk2OA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399675968", "bodyText": "This may be linked to my other comment about preview-health-timeout, these values are for an environment deploying nuxeo 10.10. On master we probably don't need to wait 10min before checking readiness.\nI think we could try the default values coming from nuxeo helm chart.", "author": "kevinleturc", "createdAt": "2020-03-28T15:41:46Z", "path": "ci/helm/preview/values.yaml", "diffHunk": "@@ -0,0 +1,93 @@\n+expose:\n+  Annotations:\n+    helm.sh/hook: post-install,post-upgrade\n+    helm.sh/hook-delete-policy: hook-succeeded\n+  config:\n+    # add tls configuration\n+    domain: platform.dev.nuxeo.com\n+    exposer: Ingress\n+    http: true\n+    tlsacme: true\n+    tlsSecretName: platform-cluster-tls\n+    urltemplate: '\"{{.Service}}-{{.Namespace}}.{{.Domain}}\"'\n+\n+cleanup:\n+  Args:\n+    - --cleanup\n+  Annotations:\n+    helm.sh/hook: pre-delete\n+    helm.sh/hook-delete-policy: hook-succeeded\n+\n+nuxeo:\n+  fullnameOverride: preview\n+  nuxeo:\n+    customParams: |-\n+      elasticsearch.restClient.socketTimeoutMs=300000\n+      elasticsearch.restClient.connectionTimeoutMs=300000\n+    podAnnotations:\n+      preview/scm.ref: ${SCM_REF}\n+    podLabels:\n+      branch: \"$BRANCH_NAME\"\n+      team: platform\n+      resource: pod\n+      usage: preview\n+    service:\n+      annotations:\n+        fabric8.io/ingress.annotations: |-\n+          nginx.ingress.kubernetes.io/proxy-body-size: 0\n+          nginx.ingress.kubernetes.io/server-snippet: ignore_invalid_headers off;\n+      labels:\n+        team: platform\n+        resource: service\n+        usage: preview\n+    image:\n+      repository: ${DOCKER_REGISTRY}/nuxeo/nuxeo\n+      tag: ${VERSION}\n+      pullPolicy: Always\n+    packages: nuxeo-web-ui nuxeo-dam\n+    livenessProbe:\n+      initialDelaySeconds: 900\n+      periodSeconds: 20\n+      successThreshold: 1\n+      failureThreshold: 5\n+      timeoutSeconds: 10\n+    readinessProbe:\n+      periodSeconds: 20\n+      initialDelaySeconds: 600\n+      successThreshold: 1\n+      timeoutSeconds: 10\n+      failureThreshold: 5", "originalCommit": "5c945a845c95bc7f99fdaf94a42ee379d3d3c8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0NDE2NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400044164", "bodyText": "I lowered --preview-health-timeout to 5m\nSeems to be working fine.\nThen I realized this is the default value so I'll remove the whole jx preview option on next push", "author": "NourNuxeo", "createdAt": "2020-03-30T09:19:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NTk2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NTk4MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399675981", "bodyText": "To remove.", "author": "kevinleturc", "createdAt": "2020-03-28T15:41:59Z", "path": "ci/helm/preview/values.yaml", "diffHunk": "@@ -0,0 +1,93 @@\n+expose:\n+  Annotations:\n+    helm.sh/hook: post-install,post-upgrade\n+    helm.sh/hook-delete-policy: hook-succeeded\n+  config:\n+    # add tls configuration\n+    domain: platform.dev.nuxeo.com\n+    exposer: Ingress\n+    http: true\n+    tlsacme: true\n+    tlsSecretName: platform-cluster-tls\n+    urltemplate: '\"{{.Service}}-{{.Namespace}}.{{.Domain}}\"'\n+\n+cleanup:\n+  Args:\n+    - --cleanup\n+  Annotations:\n+    helm.sh/hook: pre-delete\n+    helm.sh/hook-delete-policy: hook-succeeded\n+\n+nuxeo:\n+  fullnameOverride: preview\n+  nuxeo:\n+    customParams: |-\n+      elasticsearch.restClient.socketTimeoutMs=300000\n+      elasticsearch.restClient.connectionTimeoutMs=300000\n+    podAnnotations:\n+      preview/scm.ref: ${SCM_REF}\n+    podLabels:\n+      branch: \"$BRANCH_NAME\"\n+      team: platform\n+      resource: pod\n+      usage: preview\n+    service:\n+      annotations:\n+        fabric8.io/ingress.annotations: |-\n+          nginx.ingress.kubernetes.io/proxy-body-size: 0\n+          nginx.ingress.kubernetes.io/server-snippet: ignore_invalid_headers off;\n+      labels:\n+        team: platform\n+        resource: service\n+        usage: preview\n+    image:\n+      repository: ${DOCKER_REGISTRY}/nuxeo/nuxeo\n+      tag: ${VERSION}\n+      pullPolicy: Always\n+    packages: nuxeo-web-ui nuxeo-dam", "originalCommit": "5c945a845c95bc7f99fdaf94a42ee379d3d3c8e5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NjAzNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399676034", "bodyText": "To add maybe?\nbranch: \"$BRANCH_NAME\"", "author": "kevinleturc", "createdAt": "2020-03-28T15:42:31Z", "path": "ci/helm/preview/values.yaml", "diffHunk": "@@ -0,0 +1,93 @@\n+expose:\n+  Annotations:\n+    helm.sh/hook: post-install,post-upgrade\n+    helm.sh/hook-delete-policy: hook-succeeded\n+  config:\n+    # add tls configuration\n+    domain: platform.dev.nuxeo.com\n+    exposer: Ingress\n+    http: true\n+    tlsacme: true\n+    tlsSecretName: platform-cluster-tls\n+    urltemplate: '\"{{.Service}}-{{.Namespace}}.{{.Domain}}\"'\n+\n+cleanup:\n+  Args:\n+    - --cleanup\n+  Annotations:\n+    helm.sh/hook: pre-delete\n+    helm.sh/hook-delete-policy: hook-succeeded\n+\n+nuxeo:\n+  fullnameOverride: preview\n+  nuxeo:\n+    customParams: |-\n+      elasticsearch.restClient.socketTimeoutMs=300000\n+      elasticsearch.restClient.connectionTimeoutMs=300000\n+    podAnnotations:\n+      preview/scm.ref: ${SCM_REF}\n+    podLabels:\n+      branch: \"$BRANCH_NAME\"\n+      team: platform\n+      resource: pod\n+      usage: preview\n+    service:\n+      annotations:\n+        fabric8.io/ingress.annotations: |-\n+          nginx.ingress.kubernetes.io/proxy-body-size: 0\n+          nginx.ingress.kubernetes.io/server-snippet: ignore_invalid_headers off;\n+      labels:\n+        team: platform", "originalCommit": "5c945a845c95bc7f99fdaf94a42ee379d3d3c8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3MzcxMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399973710", "bodyText": "yes, for consistency", "author": "ataillefer", "createdAt": "2020-03-30T07:17:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NjAzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2ODA0NQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399968045", "bodyText": "Maybe just nuxeo/preview? Shorter in the status list.\nI know it's like this in ARender, but WDYT @troger @kevinleturc ?", "author": "ataillefer", "createdAt": "2020-03-30T07:06:06Z", "path": "Jenkinsfile", "diffHunk": "@@ -303,393 +307,61 @@ pipeline {\n       }\n     }\n \n-    stage('Update version') {\n+    stage('Deploy Preview') {\n       steps {\n+        setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'PENDING')", "originalCommit": "5c945a845c95bc7f99fdaf94a42ee379d3d3c8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NzA2OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399987069", "bodyText": "Agree \ud83d\udc4d", "author": "troger", "createdAt": "2020-03-30T07:44:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2ODA0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4OTA4NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399989084", "bodyText": "Yes sure \ud83d\udc4d", "author": "kevinleturc", "createdAt": "2020-03-30T07:47:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2ODA0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2OTcwNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399969704", "bodyText": "I'd go with PREVIEW_NAMESPACE so it is explicit.\nWe're also using some namespaces for unit tests, for which the related env vars are prefixed by TEST_, see for instance https://github.com/nuxeo/nuxeo/blob/master/Jenkinsfile#L267.", "author": "ataillefer", "createdAt": "2020-03-30T07:09:30Z", "path": "Jenkinsfile", "diffHunk": "@@ -279,11 +279,15 @@ pipeline {\n     PUBLIC_DOCKER_REGISTRY = 'docker.packages.nuxeo.com'\n     MAVEN_OPTS = \"$MAVEN_OPTS -Xms512m -Xmx3072m\"\n     MAVEN_ARGS = getMavenArgs()\n-    VERSION = getVersion()\n+    VERSION = \"11.1-SNAPSHOT\"\n     DOCKER_TAG = getDockerTagFrom(\"${VERSION}\")\n     CHANGE_BRANCH = \"${env.CHANGE_BRANCH != null ? env.CHANGE_BRANCH : BRANCH_NAME}\"\n     CHANGE_TARGET = \"${env.CHANGE_TARGET != null ? env.CHANGE_TARGET : BRANCH_NAME}\"\n     CONNECT_PREPROD_URL = 'https://nos-preprod-connect.nuxeocloud.com/nuxeo'\n+    ORG = \"nuxeo\"\n+    APP_NAME = \"nuxeo\"\n+    NAMESPACE = \"$APP_NAME-${BRANCH_NAME.toLowerCase()}\"", "originalCommit": "5c945a845c95bc7f99fdaf94a42ee379d3d3c8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwNTM3Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400105372", "bodyText": "About ORG and APP_NAME cf ttps://github.com//pull/3856#discussion_r400105125\nAbout renaming NAMESPACE to TEST_NAMESPACE\nThere is a testNameSpace local variable in buildUnitTestStage.\nit's distinguishable but yet disturbing.\nI leave it to you to chose\nAbout the link not working (404), Copy pasting typo:\n#3856 (comment)", "author": "NourNuxeo", "createdAt": "2020-03-30T11:03:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2OTcwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE5Njk2MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400196961", "bodyText": "https://github.com//pull/3856#discussion_r400105125 leads to a 404.\nAPP_NAME is used yes, just don't see ORG.\nYes, please rename NAMESPACE to PREVIEW_NAMESPACE so we know it' the one used for preview.\nThere are plenty of namespaces involved: the one the pod is running in, the default one, the test ones, ...", "author": "ataillefer", "createdAt": "2020-03-30T13:37:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2OTcwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIwNjQ3NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400206474", "bodyText": "OK, about ORG, the explanation is that jx preview is requiring it here, though it isn't documented...\nAnd there's a closed issue though it wasn't really resolved: jenkins-x/jx#1992.", "author": "ataillefer", "createdAt": "2020-03-30T13:49:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2OTcwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3MjI1Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399972253", "bodyText": "For a smaller diff, you can simply use\n      when {\n        expression {\n          return false\n        }\n      }\n\nSee 2bd2ee9.", "author": "ataillefer", "createdAt": "2020-03-30T07:14:49Z", "path": "Jenkinsfile", "diffHunk": "@@ -307,370 +307,7 @@ pipeline {\n       }\n     }\n \n-    stage('Update version') {", "originalCommit": "5c945a845c95bc7f99fdaf94a42ee379d3d3c8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2OTYxMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400169610", "bodyText": "I did it inline since it's a temp modification that can't go unnoticed\n     when {expression {return false}}", "author": "NourNuxeo", "createdAt": "2020-03-30T12:57:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3MjI1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3NjM4MA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399976380", "bodyText": "I'm wondering if we need/want the chart tgz archives, since we have all the YAML files?\n@kevinleturc", "author": "ataillefer", "createdAt": "2020-03-30T07:23:33Z", "path": "Jenkinsfile", "diffHunk": "@@ -661,6 +665,65 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute docker image names and versions\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              sh(returnStdout: true, script: 'jx -b ns | sed -r \"s/^Using namespace \\'([^\\']+)\\'.+\\\\$/\\\\1/\"')\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExist) {\n+                noCommentOpt = '--no-comment'\n+              } else {\n+                sh \"kubectl create namespace ${NAMESPACE}\"\n+              }\n+              sh \"kubectl create secret generic preview-docker-cfg --namespace=${NAMESPACE} --from-file=.dockerconfigjson=/home/jenkins/.docker/config.json --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\n+              // third build and deploy the chart\n+              // waiting for https://github.com/jenkins-x/jx/issues/5797 to be fixed in order to remove --source-url\n+              sh \"\"\"\n+                jx step helm build --verbose\n+                mkdir target && helm template . --output-dir target\n+                jx preview \\\n+                  --namespace ${NAMESPACE} \\\n+                  --verbose \\\n+                  --source-url=https://github.com/nuxeo/nuxeo \\\n+                  --preview-health-timeout 15m \\\n+                  ${noCommentOpt}\n+              \"\"\"\n+            }\n+          }\n+        }\n+      }\n+      post {\n+        always {\n+          archiveArtifacts allowEmptyArchive: true, artifacts: '**/requirements.lock, **/charts/*.tgz, **/target/**/*.yaml'", "originalCommit": "2d627a61f1386cad149b6b013fcbc83d34551056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4ODMxOQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399988319", "bodyText": "IMO, no we don't.", "author": "troger", "createdAt": "2020-03-30T07:46:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3NjM4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwNjUxOA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400106518", "bodyText": "Once things are stable we don't but I would leave it commented so we can uncomment when wanting to debug (I've been checking those archives to understand stuff lately)", "author": "NourNuxeo", "createdAt": "2020-03-30T11:05:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3NjM4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE5ODE2MA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400198160", "bodyText": "OK if you think it can be useful, then clearly state in a comment that it can be uncommented for debugging purpose.\nBy the way, what  is in the archives that is not in the YAML archived files?", "author": "ataillefer", "createdAt": "2020-03-30T13:39:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3NjM4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc5OTE3NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400799174", "bodyText": "I removed the tgz. After all if someone wants to play with the yaml he will just have to helm dependency update on the downloaded yaml", "author": "NourNuxeo", "createdAt": "2020-03-31T10:16:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3NjM4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3OTA0Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399979046", "bodyText": "Can't we always use $VAR_NAME (without {...}) for environment variable substitution?", "author": "ataillefer", "createdAt": "2020-03-30T07:28:40Z", "path": "ci/helm/preview/values.yaml", "diffHunk": "@@ -0,0 +1,93 @@\n+expose:\n+  Annotations:\n+    helm.sh/hook: post-install,post-upgrade\n+    helm.sh/hook-delete-policy: hook-succeeded\n+  config:\n+    # add tls configuration\n+    domain: platform.dev.nuxeo.com\n+    exposer: Ingress\n+    http: true\n+    tlsacme: true\n+    tlsSecretName: platform-cluster-tls\n+    urltemplate: '\"{{.Service}}-{{.Namespace}}.{{.Domain}}\"'\n+\n+cleanup:\n+  Args:\n+    - --cleanup\n+  Annotations:\n+    helm.sh/hook: pre-delete\n+    helm.sh/hook-delete-policy: hook-succeeded\n+\n+nuxeo:\n+  fullnameOverride: preview\n+  nuxeo:\n+    customParams: |-\n+      elasticsearch.restClient.socketTimeoutMs=300000\n+      elasticsearch.restClient.connectionTimeoutMs=300000\n+    podAnnotations:\n+      preview/scm.ref: ${SCM_REF}", "originalCommit": "2d627a61f1386cad149b6b013fcbc83d34551056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MDk4OA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400040988", "bodyText": "I think we can because envsubst declares it takes both formats.", "author": "NourNuxeo", "createdAt": "2020-03-30T09:14:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3OTA0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4MDQzNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399980434", "bodyText": "The comment about Docker images is not relevant.\nIt should be limited to something generic like \"first substitute environment variables in chart values\".", "author": "ataillefer", "createdAt": "2020-03-30T07:31:18Z", "path": "Jenkinsfile", "diffHunk": "@@ -661,6 +665,65 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute docker image names and versions", "originalCommit": "2d627a61f1386cad149b6b013fcbc83d34551056", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4MzM5MA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399983390", "bodyText": "Is this line really useful?", "author": "ataillefer", "createdAt": "2020-03-30T07:37:14Z", "path": "Jenkinsfile", "diffHunk": "@@ -661,6 +665,65 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute docker image names and versions\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              sh(returnStdout: true, script: 'jx -b ns | sed -r \"s/^Using namespace \\'([^\\']+)\\'.+\\\\$/\\\\1/\"')", "originalCommit": "2d627a61f1386cad149b6b013fcbc83d34551056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzMjQ3Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400332473", "bodyText": "doesn't work anyway, this is what is litterally printed actually by jx:\nsh(returnStdout: true, script: 'jx -b ns | sed -r \"s/^Using namespace \\'([^\\']+)\\'.+\\\\$/\\\\1/\"')", "author": "NourNuxeo", "createdAt": "2020-03-30T16:35:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4MzM5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcxNjM1Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400716356", "bodyText": "Maybe because the result of the shell script isn't assigned to any variable.\nJust for information, if it were assigned to a variable, it would return the name of the current namespace, you can test it locally without the escaping characters:\n$ jx -b ns | sed -r \"s/^Using namespace '([^\\']+)'.+\\$/\\\\1/\"\nplatform", "author": "ataillefer", "createdAt": "2020-03-31T08:02:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4MzM5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwMTkxNw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400801917", "bodyText": "indeed platform in my case\nI should have echoed it", "author": "NourNuxeo", "createdAt": "2020-03-31T10:21:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4MzM5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NTAyNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399985024", "bodyText": "Do we want to refresh the issue or add a comment?", "author": "ataillefer", "createdAt": "2020-03-30T07:40:21Z", "path": "Jenkinsfile", "diffHunk": "@@ -661,6 +665,65 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute docker image names and versions\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              sh(returnStdout: true, script: 'jx -b ns | sed -r \"s/^Using namespace \\'([^\\']+)\\'.+\\\\$/\\\\1/\"')\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExist) {\n+                noCommentOpt = '--no-comment'\n+              } else {\n+                sh \"kubectl create namespace ${NAMESPACE}\"\n+              }\n+              sh \"kubectl create secret generic preview-docker-cfg --namespace=${NAMESPACE} --from-file=.dockerconfigjson=/home/jenkins/.docker/config.json --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\n+              // third build and deploy the chart\n+              // waiting for https://github.com/jenkins-x/jx/issues/5797 to be fixed in order to remove --source-url", "originalCommit": "2d627a61f1386cad149b6b013fcbc83d34551056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIzOTMwOA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400239308", "bodyText": "Thanks!", "author": "NourNuxeo", "createdAt": "2020-03-30T14:32:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NTAyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcxNzEzOQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400717139", "bodyText": "I've applied the /remove-lifecycle stale to jenkins-x/jx#5797 (comment).", "author": "ataillefer", "createdAt": "2020-03-31T08:03:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NTAyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NTQzMQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399985431", "bodyText": "Do we want to keep the verbose output?", "author": "ataillefer", "createdAt": "2020-03-30T07:41:12Z", "path": "Jenkinsfile", "diffHunk": "@@ -661,6 +665,65 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute docker image names and versions\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              sh(returnStdout: true, script: 'jx -b ns | sed -r \"s/^Using namespace \\'([^\\']+)\\'.+\\\\$/\\\\1/\"')\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExist) {\n+                noCommentOpt = '--no-comment'\n+              } else {\n+                sh \"kubectl create namespace ${NAMESPACE}\"\n+              }\n+              sh \"kubectl create secret generic preview-docker-cfg --namespace=${NAMESPACE} --from-file=.dockerconfigjson=/home/jenkins/.docker/config.json --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\n+              // third build and deploy the chart\n+              // waiting for https://github.com/jenkins-x/jx/issues/5797 to be fixed in order to remove --source-url\n+              sh \"\"\"\n+                jx step helm build --verbose", "originalCommit": "2d627a61f1386cad149b6b013fcbc83d34551056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0MTE0OA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400241148", "bodyText": "I woud suggest making a DEBUG env so we can control all the verbose and the making of the yaml archive in one go", "author": "NourNuxeo", "createdAt": "2020-03-30T14:34:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NTQzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NTk0Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399985947", "bodyText": "Do we want to keep the verbose output?", "author": "ataillefer", "createdAt": "2020-03-30T07:42:10Z", "path": "Jenkinsfile", "diffHunk": "@@ -661,6 +665,65 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'PENDING')\n+        container('maven') {\n+          dir('ci/helm/preview') {\n+            echo \"\"\"\n+            ----------------------------------------\n+            Deploy Preview environment\n+            ----------------------------------------\"\"\"\n+            // first substitute docker image names and versions\n+            sh \"\"\"\n+              mv values.yaml values.yaml.tosubst\n+              envsubst < values.yaml.tosubst > values.yaml\n+            \"\"\"\n+            // second create target namespace (if doesn't exist) and copy secrets to target namespace\n+            script {\n+              sh(returnStdout: true, script: 'jx -b ns | sed -r \"s/^Using namespace \\'([^\\']+)\\'.+\\\\$/\\\\1/\"')\n+              boolean nsExist = sh(returnStatus: true, script: \"kubectl get namespace ${NAMESPACE}\") == 0\n+              String noCommentOpt = '';\n+              if (nsExist) {\n+                noCommentOpt = '--no-comment'\n+              } else {\n+                sh \"kubectl create namespace ${NAMESPACE}\"\n+              }\n+              sh \"kubectl create secret generic preview-docker-cfg --namespace=${NAMESPACE} --from-file=.dockerconfigjson=/home/jenkins/.docker/config.json --type=kubernetes.io/dockerconfigjson --dry-run -o yaml | kubectl apply -f -\"\n+              // third build and deploy the chart\n+              // waiting for https://github.com/jenkins-x/jx/issues/5797 to be fixed in order to remove --source-url\n+              sh \"\"\"\n+                jx step helm build --verbose\n+                mkdir target && helm template . --output-dir target\n+                jx preview \\\n+                  --namespace ${NAMESPACE} \\\n+                  --verbose \\", "originalCommit": "2d627a61f1386cad149b6b013fcbc83d34551056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0MTUzMg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400241532", "bodyText": "#3856 (comment)", "author": "NourNuxeo", "createdAt": "2020-03-30T14:35:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4NTk0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4ODE4MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399988181", "bodyText": "What about nuxeo-preview to have it very clear in the pod list that it's a nuxeo preview (even if the pod are in a dedicated namespace)?", "author": "ataillefer", "createdAt": "2020-03-30T07:46:02Z", "path": "ci/helm/preview/values.yaml", "diffHunk": "@@ -0,0 +1,93 @@\n+expose:\n+  Annotations:\n+    helm.sh/hook: post-install,post-upgrade\n+    helm.sh/hook-delete-policy: hook-succeeded\n+  config:\n+    # add tls configuration\n+    domain: platform.dev.nuxeo.com\n+    exposer: Ingress\n+    http: true\n+    tlsacme: true\n+    tlsSecretName: platform-cluster-tls\n+    urltemplate: '\"{{.Service}}-{{.Namespace}}.{{.Domain}}\"'\n+\n+cleanup:\n+  Args:\n+    - --cleanup\n+  Annotations:\n+    helm.sh/hook: pre-delete\n+    helm.sh/hook-delete-policy: hook-succeeded\n+\n+nuxeo:\n+  fullnameOverride: preview", "originalCommit": "2d627a61f1386cad149b6b013fcbc83d34551056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0Mjc1MQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400242751", "bodyText": "I propose preview-nuxeo to stay consistent with the names of all the other pods.\nAnd It would ease autocomplete if you switch from a pod to another (no need to erase \"nuxeo-preview\" but just \"nuxeo\" then type \"elas...\" for example", "author": "NourNuxeo", "createdAt": "2020-03-30T14:36:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4ODE4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5MDE2Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r399990166", "bodyText": "VERSION should refer to a release version, so always unique, thus pullPolicy: Always should be useles.", "author": "ataillefer", "createdAt": "2020-03-30T07:49:44Z", "path": "ci/helm/preview/values.yaml", "diffHunk": "@@ -0,0 +1,93 @@\n+expose:\n+  Annotations:\n+    helm.sh/hook: post-install,post-upgrade\n+    helm.sh/hook-delete-policy: hook-succeeded\n+  config:\n+    # add tls configuration\n+    domain: platform.dev.nuxeo.com\n+    exposer: Ingress\n+    http: true\n+    tlsacme: true\n+    tlsSecretName: platform-cluster-tls\n+    urltemplate: '\"{{.Service}}-{{.Namespace}}.{{.Domain}}\"'\n+\n+cleanup:\n+  Args:\n+    - --cleanup\n+  Annotations:\n+    helm.sh/hook: pre-delete\n+    helm.sh/hook-delete-policy: hook-succeeded\n+\n+nuxeo:\n+  fullnameOverride: preview\n+  nuxeo:\n+    customParams: |-\n+      elasticsearch.restClient.socketTimeoutMs=300000\n+      elasticsearch.restClient.connectionTimeoutMs=300000\n+    podAnnotations:\n+      preview/scm.ref: ${SCM_REF}\n+    podLabels:\n+      branch: \"$BRANCH_NAME\"\n+      team: platform\n+      resource: pod\n+      usage: preview\n+    service:\n+      annotations:\n+        fabric8.io/ingress.annotations: |-\n+          nginx.ingress.kubernetes.io/proxy-body-size: 0\n+          nginx.ingress.kubernetes.io/server-snippet: ignore_invalid_headers off;\n+      labels:\n+        team: platform\n+        resource: service\n+        usage: preview\n+    image:\n+      repository: ${DOCKER_REGISTRY}/nuxeo/nuxeo\n+      tag: ${VERSION}\n+      pullPolicy: Always", "originalCommit": "2d627a61f1386cad149b6b013fcbc83d34551056", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI1MTcxMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400251710", "bodyText": "since this is the default value of the nuxeo helm chart we need to override it with IfNotPresent or Never\nI think IfNotPresent would be best", "author": "NourNuxeo", "createdAt": "2020-03-30T14:48:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5MDE2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcxOTcyMg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400719722", "bodyText": "Yes indeed.\nIn, fact, while we're relying on the latest tag in the nuxeo Helm chart, we could remove pullPolicy: Always from it, see https://kubernetes.io/fr/docs/concepts/containers/images/#mettre-%C3%A0-jour-des-images.\nBut we might want to use something else than latest in the future, since it is not recommended.", "author": "ataillefer", "createdAt": "2020-03-31T08:07:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5MDE2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc0NTExNQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400745115", "bodyText": "Thanks for the extra infos!", "author": "NourNuxeo", "createdAt": "2020-03-31T08:49:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5MDE2Ng=="}], "type": "inlineReview"}, {"oid": "ce639eae61835a8d758613d9335c0555f18c5b8c", "url": "https://github.com/nuxeo/nuxeo/commit/ce639eae61835a8d758613d9335c0555f18c5b8c", "message": "TEMP", "committedDate": "2020-03-30T08:48:42Z", "type": "forcePushed"}, {"oid": "3ec176bc31d3c7e8d4f2dde30b510cf80491214a", "url": "https://github.com/nuxeo/nuxeo/commit/3ec176bc31d3c7e8d4f2dde30b510cf80491214a", "message": "TEMP", "committedDate": "2020-03-30T08:50:26Z", "type": "forcePushed"}, {"oid": "a9a356082bb97d20d4e06629de4c2109730bae4a", "url": "https://github.com/nuxeo/nuxeo/commit/a9a356082bb97d20d4e06629de4c2109730bae4a", "message": "TEMP", "committedDate": "2020-03-30T09:06:24Z", "type": "forcePushed"}, {"oid": "ae0da673af97ad124e28826da6800ad0dd3bdfe9", "url": "https://github.com/nuxeo/nuxeo/commit/ae0da673af97ad124e28826da6800ad0dd3bdfe9", "message": "TEMP", "committedDate": "2020-03-30T09:07:27Z", "type": "forcePushed"}, {"oid": "b7b41dd040c1bf0c8985df233b37645380b9f474", "url": "https://github.com/nuxeo/nuxeo/commit/b7b41dd040c1bf0c8985df233b37645380b9f474", "message": "TEMP2", "committedDate": "2020-03-30T10:53:47Z", "type": "forcePushed"}, {"oid": "1c9d92a7de02be69f45bb4187c8d618ba25bb811", "url": "https://github.com/nuxeo/nuxeo/commit/1c9d92a7de02be69f45bb4187c8d618ba25bb811", "message": "fixup2", "committedDate": "2020-03-30T13:05:24Z", "type": "forcePushed"}, {"oid": "9ece69d2467e94536243b62fc0de5900c2d3b4c5", "url": "https://github.com/nuxeo/nuxeo/commit/9ece69d2467e94536243b62fc0de5900c2d3b4c5", "message": "fixup2", "committedDate": "2020-03-30T13:18:02Z", "type": "forcePushed"}, {"oid": "c9e04aa86c7872518476533353fbf9d03a151a2a", "url": "https://github.com/nuxeo/nuxeo/commit/c9e04aa86c7872518476533353fbf9d03a151a2a", "message": "fixup2", "committedDate": "2020-03-30T13:35:40Z", "type": "forcePushed"}, {"oid": "e285fff58100ac0b78388b5065d267de82b6c635", "url": "https://github.com/nuxeo/nuxeo/commit/e285fff58100ac0b78388b5065d267de82b6c635", "message": "fixup2", "committedDate": "2020-03-30T13:37:17Z", "type": "forcePushed"}, {"oid": "cc2f342a0d9bf9150fb39b1055c1f81a41316503", "url": "https://github.com/nuxeo/nuxeo/commit/cc2f342a0d9bf9150fb39b1055c1f81a41316503", "message": "TEMP", "committedDate": "2020-03-30T14:00:19Z", "type": "forcePushed"}, {"oid": "9cf95e3a5da3342b82f33945772f4c1cc33fac5e", "url": "https://github.com/nuxeo/nuxeo/commit/9cf95e3a5da3342b82f33945772f4c1cc33fac5e", "message": "TEMP", "committedDate": "2020-03-30T14:08:31Z", "type": "forcePushed"}, {"oid": "a3440709a7a25c133a0e77152bb72725236f6d7b", "url": "https://github.com/nuxeo/nuxeo/commit/a3440709a7a25c133a0e77152bb72725236f6d7b", "message": "TEMP", "committedDate": "2020-03-30T15:06:30Z", "type": "forcePushed"}, {"oid": "14f71fd04bd15c93a7cfae0f1f5f1732380cab0c", "url": "https://github.com/nuxeo/nuxeo/commit/14f71fd04bd15c93a7cfae0f1f5f1732380cab0c", "message": "TEMP", "committedDate": "2020-03-30T15:15:02Z", "type": "forcePushed"}, {"oid": "49ffe87a5c2bacc9a3cdf4fb4b29f052160d5439", "url": "https://github.com/nuxeo/nuxeo/commit/49ffe87a5c2bacc9a3cdf4fb4b29f052160d5439", "message": "TEMP", "committedDate": "2020-03-30T15:19:30Z", "type": "forcePushed"}, {"oid": "82e05e292517fc51f8e15a58afac75ae418eb314", "url": "https://github.com/nuxeo/nuxeo/commit/82e05e292517fc51f8e15a58afac75ae418eb314", "message": "TEMP", "committedDate": "2020-03-30T15:22:19Z", "type": "forcePushed"}, {"oid": "1ca12f3b09d2d8a075393c056fc99cbb1db93a67", "url": "https://github.com/nuxeo/nuxeo/commit/1ca12f3b09d2d8a075393c056fc99cbb1db93a67", "message": "TEMP", "committedDate": "2020-03-30T15:26:44Z", "type": "forcePushed"}, {"oid": "8d26231f70cd1ae5a85023f3d3a7e5ae08434fa3", "url": "https://github.com/nuxeo/nuxeo/commit/8d26231f70cd1ae5a85023f3d3a7e5ae08434fa3", "message": "TEMP", "committedDate": "2020-03-30T15:45:37Z", "type": "forcePushed"}, {"oid": "123ad8dad3dc523dfcef177b79eea2816bf06a42", "url": "https://github.com/nuxeo/nuxeo/commit/123ad8dad3dc523dfcef177b79eea2816bf06a42", "message": "TEMP", "committedDate": "2020-03-30T16:01:44Z", "type": "forcePushed"}, {"oid": "a519071478e08d0fafb0010ce4113269c444ff45", "url": "https://github.com/nuxeo/nuxeo/commit/a519071478e08d0fafb0010ce4113269c444ff45", "message": "TEMP", "committedDate": "2020-03-30T16:25:38Z", "type": "forcePushed"}, {"oid": "86667e5f50ca98ce5746690fc622c6a1ce106dad", "url": "https://github.com/nuxeo/nuxeo/commit/86667e5f50ca98ce5746690fc622c6a1ce106dad", "message": "TEMP", "committedDate": "2020-03-30T16:39:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcwOTk4OQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400709989", "bodyText": "extra spaces", "author": "ataillefer", "createdAt": "2020-03-31T07:51:24Z", "path": "Jenkinsfile", "diffHunk": "@@ -284,8 +288,15 @@ pipeline {\n     CHANGE_BRANCH = \"${env.CHANGE_BRANCH != null ? env.CHANGE_BRANCH : BRANCH_NAME}\"\n     CHANGE_TARGET = \"${env.CHANGE_TARGET != null ? env.CHANGE_TARGET : BRANCH_NAME}\"\n     CONNECT_PREPROD_URL = 'https://nos-preprod-connect.nuxeocloud.com/nuxeo'\n+    // Required by the jx preview command: https://github.com/jenkins-x/jx/blob/8fdc3a1182bc3ed6ae09728721b53ea4fa1d6234/pkg/cmd/preview/preview.go#L1007\n+    ORG = \"nuxeo\"\n+    // Required by the jx preview command: https://github.com/jenkins-x/jx/blob/8fdc3a1182bc3ed6ae09728721b53ea4fa1d6234/pkg/cmd/preview/preview.go#L1015\n+    APP_NAME = \"nuxeo\"\n+    TEST_NAMESPACE = \"$APP_NAME-${BRANCH_NAME.toLowerCase()}\"\n+    PERSISTENCE = !isPullRequest()\n+    DEBUG_OPTION = getDebugOption()\n   }\n-\n+  ", "originalCommit": "155ec563e2df40faa1251b96a8334f801d1d1bab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc0ODQ1Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400748456", "bodyText": "found some hand vs code settings to trim extra new lines and trailing spaces.", "author": "NourNuxeo", "createdAt": "2020-03-31T08:54:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcwOTk4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcxMDUwNg==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400710506", "bodyText": "You marked as resolved but kept nuxeo/preview/deploy, we're suggesting simply nuxeo/preview.", "author": "ataillefer", "createdAt": "2020-03-31T07:52:18Z", "path": "Jenkinsfile", "diffHunk": "@@ -632,6 +643,63 @@ pipeline {\n       }\n     }\n \n+    stage('Deploy Preview') {\n+      when {\n+        not {\n+          branch 'PR-*'\n+        }\n+      }\n+      steps {\n+        setGitHubBuildStatus('nuxeo/preview/deploy', 'Deploy nuxeo Preview', 'PENDING')", "originalCommit": "155ec563e2df40faa1251b96a8334f801d1d1bab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc0ODk2Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3856#discussion_r400748967", "bodyText": "Sorry about that. There must have been a manipulation error as I remember adjusting it. It happens i missed an occurence", "author": "NourNuxeo", "createdAt": "2020-03-31T08:55:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcxMDUwNg=="}], "type": "inlineReview"}]}