{"pr_number": 3772, "pr_title": "fix-NXP-28560-catch-enrichers-exceptions", "pr_createdAt": "2020-02-20T21:44:19Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/3772", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxNzY4Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382317686", "bodyText": "The writer is not used at all and can be removed, I guess this is old code from a previous attempt", "author": "efge", "createdAt": "2020-02-20T23:31:57Z", "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -56,8 +64,20 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n \n     @Override\n     public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n-        try {\n-            write(jg, enrichable.getEntity());\n+        try (Writer writer = new StringWriter()) {", "originalCommit": "bdaa1b387c2445910d009a74f5d919e17d058dc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxNzg0NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382317844", "bodyText": "Expand the comment to: Write to a temporary output in case of exception during write()", "author": "efge", "createdAt": "2020-02-20T23:32:29Z", "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -56,8 +64,20 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n \n     @Override\n     public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n-        try {\n-            write(jg, enrichable.getEntity());\n+        try (Writer writer = new StringWriter()) {\n+            try (TokenBuffer tb = new TokenBuffer(MAPPER, false)) {\n+                // Write to a temporary output", "originalCommit": "bdaa1b387c2445910d009a74f5d919e17d058dc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxODAwNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382318004", "bodyText": "Expand: Add the complete, well-formed content to the real output", "author": "efge", "createdAt": "2020-02-20T23:32:55Z", "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -56,8 +64,20 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n \n     @Override\n     public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n-        try {\n-            write(jg, enrichable.getEntity());\n+        try (Writer writer = new StringWriter()) {\n+            try (TokenBuffer tb = new TokenBuffer(MAPPER, false)) {\n+                // Write to a temporary output\n+                tb.writeStartObject();\n+                write(tb, enrichable.getEntity());\n+                tb.flush();\n+                // Add the content to the real output", "originalCommit": "bdaa1b387c2445910d009a74f5d919e17d058dc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxODgxMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382318810", "bodyText": "To better simulate a failure with incomplete content I would rather do jg.writeFieldName(\"justfieldname\"); jg.flush() so that we're sure the result is invalid.", "author": "efge", "createdAt": "2020-02-20T23:35:40Z", "path": "nuxeo-core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/FailingEnricher.java", "diffHunk": "@@ -43,6 +43,7 @@ public FailingEnricher() {\n \n     @Override\n     public void write(JsonGenerator jg, DocumentModel enriched) throws IOException {\n+        jg.writeStringField(\"shouldnot\", \"bethere\");", "originalCommit": "bdaa1b387c2445910d009a74f5d919e17d058dc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyMjQ1Mw==", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382322453", "bodyText": "I think it's worth checking that we're really at the end here after the loop, and if not at least log an error with the enricher name (code untested):\nif (parser.currentToken() != null) {\n    log.error(\"Enricher {} returned invalid output {}\", name, tb.toString());\n}", "author": "efge", "createdAt": "2020-02-20T23:44:11Z", "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -56,8 +64,20 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n \n     @Override\n     public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n-        try {\n-            write(jg, enrichable.getEntity());\n+        try (Writer writer = new StringWriter()) {\n+            try (TokenBuffer tb = new TokenBuffer(MAPPER, false)) {\n+                // Write to a temporary output\n+                tb.writeStartObject();\n+                write(tb, enrichable.getEntity());\n+                tb.flush();\n+                // Add the content to the real output\n+                try (JsonParser parser = tb.asParser()) {\n+                    parser.nextToken(); // ignoring START_OBJECT\n+                    while (parser.nextToken() == JsonToken.FIELD_NAME) {\n+                        jg.copyCurrentStructure(parser);\n+                    }", "originalCommit": "bdaa1b387c2445910d009a74f5d919e17d058dc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNTU0Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3772#discussion_r382325546", "bodyText": "In the log.info(\"enrichment failed\", e) a bit below, could you also add the enricher name in the message?", "author": "efge", "createdAt": "2020-02-20T23:53:33Z", "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/marshallers/json/enrichers/AbstractJsonEnricher.java", "diffHunk": "@@ -56,8 +64,20 @@ public boolean accept(Class<?> clazz, Type genericType, MediaType mediatype) {\n \n     @Override\n     public void write(Enriched<EntityType> enrichable, JsonGenerator jg) {\n-        try {\n-            write(jg, enrichable.getEntity());\n+        try (Writer writer = new StringWriter()) {\n+            try (TokenBuffer tb = new TokenBuffer(MAPPER, false)) {\n+                // Write to a temporary output\n+                tb.writeStartObject();\n+                write(tb, enrichable.getEntity());\n+                tb.flush();\n+                // Add the content to the real output\n+                try (JsonParser parser = tb.asParser()) {\n+                    parser.nextToken(); // ignoring START_OBJECT\n+                    while (parser.nextToken() == JsonToken.FIELD_NAME) {\n+                        jg.copyCurrentStructure(parser);\n+                    }\n+                }\n+            }", "originalCommit": "bdaa1b387c2445910d009a74f5d919e17d058dc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "131f17a5d476c96d984dd1e2469d8f5bb98ce953", "url": "https://github.com/nuxeo/nuxeo/commit/131f17a5d476c96d984dd1e2469d8f5bb98ce953", "message": "NXP-28560: fix catch AbstractJsonEnrichers Exception", "committedDate": "2020-02-21T11:00:56Z", "type": "commit"}, {"oid": "131f17a5d476c96d984dd1e2469d8f5bb98ce953", "url": "https://github.com/nuxeo/nuxeo/commit/131f17a5d476c96d984dd1e2469d8f5bb98ce953", "message": "NXP-28560: fix catch AbstractJsonEnrichers Exception", "committedDate": "2020-02-21T11:00:56Z", "type": "forcePushed"}]}