{"pr_number": 3342, "pr_title": "GH-3334: Add \"embedded reaper\" into CorrelationMH", "pr_createdAt": "2020-07-16T17:35:22Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3342", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0MjgxNg==", "url": "https://github.com/spring-projects/spring-integration/pull/3342#discussion_r456042816", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * When the {@link #expireTimeout} is more than 0, the groups which older then this timeout\n          \n          \n            \n             * is purged from the store on start up (or when {@link #purgeOrphanedGroups()} is called).\n          \n          \n            \n             * If {@link #expireDuration} is provide, the task is scheduled to perform\n          \n          \n            \n             * {@link #purgeOrphanedGroups()} periodically.\n          \n          \n            \n             * When the {@link #expireTimeout} is greater than 0, groups which are older than this timeout\n          \n          \n            \n             * are purged from the store on start up (or when {@link #purgeOrphanedGroups()} is called).\n          \n          \n            \n             * If {@link #expireDuration} is provides, the task is scheduled to perform\n          \n          \n            \n             * {@link #purgeOrphanedGroups()} periodically.", "author": "garyrussell", "createdAt": "2020-07-16T19:58:49Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler.java", "diffHunk": "@@ -82,6 +84,11 @@\n  * Use proper {@link CorrelationStrategy} for cases when same\n  * {@link org.springframework.integration.store.MessageStore} is used\n  * for multiple handlers to ensure uniqueness of message groups across handlers.\n+ * <p>\n+ * When the {@link #expireTimeout} is more than 0, the groups which older then this timeout\n+ * is purged from the store on start up (or when {@link #purgeOrphanedGroups()} is called).\n+ * If {@link #expireDuration} is provide, the task is scheduled to perform\n+ * {@link #purgeOrphanedGroups()} periodically.", "originalCommit": "1bb5419b4eeeb1f68a19872a9b10a8aa9ee5cf92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA0NDQ4Mw==", "url": "https://github.com/spring-projects/spring-integration/pull/3342#discussion_r456044483", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Used on startup and if {@link #expireDuration} is provided the task for {@link #purgeOrphanedGroups()}\n          \n          \n            \n            \t * is scheduled with that period.\n          \n          \n            \n            \t * The {@link #forceReleaseProcessor} is used to process those expired groups according\n          \n          \n            \n            \t * the \"force complete\" options.\n          \n          \n            \n            \t * Used on startup and when an {@link #expireDuration} is provided, the task for running\n          \n          \n            \n            \t * {@link #purgeOrphanedGroups()} is scheduled with that period.\n          \n          \n            \n            \t * The {@link #forceReleaseProcessor} is used to process those expired groups according\n          \n          \n            \n            \t * the \"force complete\" options. A group can be orphaned if a persistent message group\n          \n          \n            \n            \t * store is used and no new messages arrive for that group after a restart.", "author": "garyrussell", "createdAt": "2020-07-16T20:02:04Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler.java", "diffHunk": "@@ -310,6 +322,32 @@ public void setReleaseLockBeforeSend(boolean releaseLockBeforeSend) {\n \t\tthis.releaseLockBeforeSend = releaseLockBeforeSend;\n \t}\n \n+\t/**\n+\t * Configure a timeout in milliseconds for purging old orphaned groups from the store.\n+\t * Used on startup and if {@link #expireDuration} is provided the task for {@link #purgeOrphanedGroups()}\n+\t * is scheduled with that period.\n+\t * The {@link #forceReleaseProcessor} is used to process those expired groups according\n+\t * the \"force complete\" options.", "originalCommit": "1bb5419b4eeeb1f68a19872a9b10a8aa9ee5cf92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "08dc0a3f56f61a40b8f86f2b85f45c84b0b2a404", "url": "https://github.com/spring-projects/spring-integration/commit/08dc0a3f56f61a40b8f86f2b85f45c84b0b2a404", "message": "GH-3334: Add \"embedded reaper\" into CorrelationMH\n\nFixes https://github.com/spring-projects/spring-integration/issues/3334\n\n* Add `expireTimeout` property into `AbstractCorrelatingMessageHandler`\nto call newly introduced `purgeOrphanedGroups()` API for removing old\ngroups from the store\n* Add `expireDuration` to perform `purgeOrphanedGroups()` task periodically", "committedDate": "2020-07-17T18:40:34Z", "type": "commit"}, {"oid": "65198f0bcc897df709e32eca2ab6c40d600f0a72", "url": "https://github.com/spring-projects/spring-integration/commit/65198f0bcc897df709e32eca2ab6c40d600f0a72", "message": "* Add Java DSL and XML support for `expireTimeout` and `expireDuration` options\n* Document the new feature", "committedDate": "2020-07-17T19:40:35Z", "type": "forcePushed"}, {"oid": "2a458a755c5196d74bc11807d900d54ae0f26122", "url": "https://github.com/spring-projects/spring-integration/commit/2a458a755c5196d74bc11807d900d54ae0f26122", "message": "* Add Java DSL and XML support for `expireTimeout` and `expireDuration` options\n* Document the new feature", "committedDate": "2020-07-17T20:41:39Z", "type": "commit"}, {"oid": "2a458a755c5196d74bc11807d900d54ae0f26122", "url": "https://github.com/spring-projects/spring-integration/commit/2a458a755c5196d74bc11807d900d54ae0f26122", "message": "* Add Java DSL and XML support for `expireTimeout` and `expireDuration` options\n* Document the new feature", "committedDate": "2020-07-17T20:41:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5NDA3NA==", "url": "https://github.com/spring-projects/spring-integration/pull/3342#discussion_r457594074", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Configure a {@link Duration} (ini millis) how often to clean up old orphaned groups from the store.\n          \n          \n            \n            \t * Configure a {@link Duration} (in millis) how often to clean up old orphaned groups from the store.", "author": "garyrussell", "createdAt": "2020-07-20T18:01:36Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/aggregator/AbstractCorrelatingMessageHandler.java", "diffHunk": "@@ -337,6 +338,18 @@ public void setExpireTimeout(long expireTimeout) {\n \t\tthis.expireTimeout = expireTimeout;\n \t}\n \n+\t/**\n+\t * Configure a {@link Duration} (ini millis) how often to clean up old orphaned groups from the store.", "originalCommit": "2a458a755c5196d74bc11807d900d54ae0f26122", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYwMTA2MA==", "url": "https://github.com/spring-projects/spring-integration/pull/3342#discussion_r457601060", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Starting version 5.4, the aggregator (and resequencer) can be configured for so-called \"embedded reaper\".\n          \n          \n            \n            The `expireTimeout` (if greater than `0`) indicates how old groups in the store should be purged.\n          \n          \n            \n            The `purgeOrphanedGroups()` method is called on start up and together with the provided `expireDuration` periodically within a scheduled task.\n          \n          \n            \n            This method is also can be called externally at any time.\n          \n          \n            \n            The expiration logic is fully delegated into a `forceComplete(MessageGroup)` functionality according the provided expiration options mentioned above.\n          \n          \n            \n            Such a periodic purge functionality is useful when a message store is needed to be cleaned up from those old groups which are not going to be released any more with regular message arrival logic.\n          \n          \n            \n            In most cases this happens after an application start up.\n          \n          \n            \n            The functionality is similar to the `MessageGroupStoreReaper` with a scheduled task, but provides a convenient way to deal with old groups withing specific components.\n          \n          \n            \n            The `MessageGroupStore` is still have to be provided exclusively for the current correlation endpoint.\n          \n          \n            \n            Otherwise one aggregator may purge groups from another.\n          \n          \n            \n            Starting with version 5.4, the aggregator (and resequencer) can be configured to expire orphaned groups (groups in a persistent message store that might not otherwise be released).\n          \n          \n            \n            The `expireTimeout` (if greater than `0`) indicates that groups older than this value in the store should be purged.\n          \n          \n            \n            The `purgeOrphanedGroups()` method is called on start up and, together with the provided `expireDuration`, periodically within a scheduled task.\n          \n          \n            \n            This method is also can be called externally at any time.\n          \n          \n            \n            The expiration logic is fully delegated to the `forceComplete(MessageGroup)` functionality according to the provided expiration options mentioned above.\n          \n          \n            \n            Such a periodic purge functionality is useful when a message store is needed to be cleaned up from those old groups which are not going to be released any more with regular message arrival logic.\n          \n          \n            \n            In most cases this happens after an application restart, when using a persistent message group store.\n          \n          \n            \n            The functionality is similar to the `MessageGroupStoreReaper` with a scheduled task, but provides a convenient way to deal with old groups within specific components, when using group timeout instead of a reaper.\n          \n          \n            \n            The `MessageGroupStore` must be provided exclusively for the current correlation endpoint.\n          \n          \n            \n            Otherwise one aggregator may purge groups from another.\n          \n          \n            \n            With the aggregator, groups expired using this technique will either be discarded or released as a partial group, depending on the `expireGroupsUponCompletion` property.", "author": "garyrussell", "createdAt": "2020-07-20T18:14:15Z", "path": "src/reference/asciidoc/aggregator.adoc", "diffHunk": "@@ -535,6 +536,17 @@ Timed-out groups are either discarded or a partial release occurs (based on `sen\n \n Since version 5.0, empty groups are also scheduled for removal after `empty-group-min-timeout`.\n If `expireGroupsUponCompletion == false` and `minimumTimeoutForEmptyGroups > 0`, the task to remove the group is scheduled when normal or partial sequences release happens.\n+\n+Starting version 5.4, the aggregator (and resequencer) can be configured for so-called \"embedded reaper\".\n+The `expireTimeout` (if greater than `0`) indicates how old groups in the store should be purged.\n+The `purgeOrphanedGroups()` method is called on start up and together with the provided `expireDuration` periodically within a scheduled task.\n+This method is also can be called externally at any time.\n+The expiration logic is fully delegated into a `forceComplete(MessageGroup)` functionality according the provided expiration options mentioned above.\n+Such a periodic purge functionality is useful when a message store is needed to be cleaned up from those old groups which are not going to be released any more with regular message arrival logic.\n+In most cases this happens after an application start up.\n+The functionality is similar to the `MessageGroupStoreReaper` with a scheduled task, but provides a convenient way to deal with old groups withing specific components.\n+The `MessageGroupStore` is still have to be provided exclusively for the current correlation endpoint.\n+Otherwise one aggregator may purge groups from another.", "originalCommit": "2a458a755c5196d74bc11807d900d54ae0f26122", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYwMTkyNA==", "url": "https://github.com/spring-projects/spring-integration/pull/3342#discussion_r457601924", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The aggregator (and resequencer) has now an \"embedded reaper\" support functionality provided via an `expireTimeout` and `expireDuration` options.\n          \n          \n            \n            The aggregator (and resequencer) can now expire orphaned groups (groups in a persistent store where no new messages arrive after an application restart).", "author": "garyrussell", "createdAt": "2020-07-20T18:15:54Z", "path": "src/reference/asciidoc/whats-new.adoc", "diffHunk": "@@ -50,3 +50,6 @@ See <<./ip.adoc#ip-collaborating-adapters,Collaborating Channel Adapters>> and <\n \n The one-way messaging gateway (the `void` method return type) now sets a `nullChannel` explicitly into the `replyChannel` header to ignore any possible downstream replies.\n See <<./gateway.adoc#gateway-default-reply-channel,Setting the Default Reply Channel>> for more information.\n+\n+The aggregator (and resequencer) has now an \"embedded reaper\" support functionality provided via an `expireTimeout` and `expireDuration` options.", "originalCommit": "2a458a755c5196d74bc11807d900d54ae0f26122", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "37ec61b2bab543840006fc59e346afda1154e6bd", "url": "https://github.com/spring-projects/spring-integration/commit/37ec61b2bab543840006fc59e346afda1154e6bd", "message": "* Fix language in docs\n\nCo-authored-by: Gary Russell <grussell@vmware.com>", "committedDate": "2020-07-20T19:31:02Z", "type": "commit"}]}