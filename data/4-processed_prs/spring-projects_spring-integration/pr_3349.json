{"pr_number": 3349, "pr_title": "Add gauges for queue channel size", "pr_createdAt": "2020-07-28T15:41:46Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3349", "timeline": [{"oid": "558dea45ab3aedfa18acab495b5d755ad74a773c", "url": "https://github.com/spring-projects/spring-integration/commit/558dea45ab3aedfa18acab495b5d755ad74a773c", "message": "Add gauges for queue channel size\n\nThe `QueueChannel` provides a current size and remaining capacity metrics\n\n* Add Micrometer gauges into `QueueChannel` to expose the current values\nof the size and remaining capacity\n\n**Cherry-pick to 5.3.x, 5.2.x & 5.1.x**", "committedDate": "2020-07-28T15:41:21Z", "type": "commit"}, {"oid": "e14ef35f101d8189dc6af37e0fefb8bf371dc579", "url": "https://github.com/spring-projects/spring-integration/commit/e14ef35f101d8189dc6af37e0fefb8bf371dc579", "message": "* Revert `@SuppressWarnings(\"unchecked\")` for test\n* Document new gauges for queue channel", "committedDate": "2020-07-28T16:21:56Z", "type": "commit"}, {"oid": "101387132c2056b3a1b3af7fa32cd000330de165", "url": "https://github.com/spring-projects/spring-integration/commit/101387132c2056b3a1b3af7fa32cd000330de165", "message": "* Fix IntegrationManagementConfigurer for NPE on `metricsCaptor`", "committedDate": "2020-07-28T19:42:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg1NDAzNA==", "url": "https://github.com/spring-projects/spring-integration/pull/3349#discussion_r461854034", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t.description(\"The remaining.capacity of queue channel\")\n          \n          \n            \n            \t\t\t\t\t\t.description(\"The remaining capacity of the queue channel\")", "author": "micheljung", "createdAt": "2020-07-28T20:19:58Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/channel/QueueChannel.java", "diffHunk": "@@ -79,6 +87,26 @@ public QueueChannel() {\n \t\tthis(new LinkedBlockingQueue<>());\n \t}\n \n+\t@Override\n+\tpublic void registerMetricsCaptor(MetricsCaptor metricsCaptor) {\n+\t\tsuper.registerMetricsCaptor(metricsCaptor);\n+\t\tthis.sizeGauge =\n+\t\t\t\tmetricsCaptor.gaugeBuilder(\"spring.integration.channel.queue.size\", this,\n+\t\t\t\t\t\t(channel) -> getQueueSize())\n+\t\t\t\t\t\t.tag(\"name\", getComponentName() == null ? \"unknown\" : getComponentName())\n+\t\t\t\t\t\t.tag(\"type\", \"channel\")\n+\t\t\t\t\t\t.description(\"The size of queue channel\")\n+\t\t\t\t\t\t.build();\n+\n+\t\tthis.remainingCapacityGauge =\n+\t\t\t\tmetricsCaptor.gaugeBuilder(\"spring.integration.channel.queue.remaining.capacity\", this,\n+\t\t\t\t\t\t(channel) -> getRemainingCapacity())\n+\t\t\t\t\t\t.tag(\"name\", getComponentName() == null ? \"unknown\" : getComponentName())\n+\t\t\t\t\t\t.tag(\"type\", \"channel\")\n+\t\t\t\t\t\t.description(\"The remaining.capacity of queue channel\")", "originalCommit": "101387132c2056b3a1b3af7fa32cd000330de165", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg1NTMzMw==", "url": "https://github.com/spring-projects/spring-integration/pull/3349#discussion_r461855333", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t.description(\"The size of queue channel\")\n          \n          \n            \n            \t\t\t\t\t\t.description(\"The size of the queue channel\")", "author": "artembilan", "createdAt": "2020-07-28T20:22:31Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/channel/QueueChannel.java", "diffHunk": "@@ -79,6 +87,26 @@ public QueueChannel() {\n \t\tthis(new LinkedBlockingQueue<>());\n \t}\n \n+\t@Override\n+\tpublic void registerMetricsCaptor(MetricsCaptor metricsCaptor) {\n+\t\tsuper.registerMetricsCaptor(metricsCaptor);\n+\t\tthis.sizeGauge =\n+\t\t\t\tmetricsCaptor.gaugeBuilder(\"spring.integration.channel.queue.size\", this,\n+\t\t\t\t\t\t(channel) -> getQueueSize())\n+\t\t\t\t\t\t.tag(\"name\", getComponentName() == null ? \"unknown\" : getComponentName())\n+\t\t\t\t\t\t.tag(\"type\", \"channel\")\n+\t\t\t\t\t\t.description(\"The size of queue channel\")", "originalCommit": "101387132c2056b3a1b3af7fa32cd000330de165", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "79038289ab4bc2e0baaff68b8c98def825129a30", "url": "https://github.com/spring-projects/spring-integration/commit/79038289ab4bc2e0baaff68b8c98def825129a30", "message": "Fix wording in meter descriptions\n\nCo-authored-by: Michel Jung <michel.jung89@gmail.com>", "committedDate": "2020-07-28T20:23:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEyMTM5Mg==", "url": "https://github.com/spring-projects/spring-integration/pull/3349#discussion_r462121392", "bodyText": "@artembilan\nIsn't this misleading? In the 5.1.x branch this might be true but 5.2.8.RELEASE and 5.3.2.RELEASE don't have this feature.", "author": "micheljung", "createdAt": "2020-07-29T08:16:33Z", "path": "src/reference/asciidoc/metrics.adoc", "diffHunk": "@@ -165,6 +165,20 @@ It is possible to customize the names and tags of `Meters` created by integratio\n The https://github.com/spring-projects/spring-integration/blob/master/spring-integration-core/src/test/java/org/springframework/integration/support/management/micrometer/MicrometerCustomMetricsTests.java[MicrometerCustomMetricsTests] test case shows a simple example of how to do that.\n You can also further customize the meters by overloading the `build()` methods on builder subclasses.\n \n+Starting with version 5.1.13, the `QueueChannel` exposes Micrometer gauges for queue size and remaining capacity:", "originalCommit": "79038289ab4bc2e0baaff68b8c98def825129a30", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyMjQyNw==", "url": "https://github.com/spring-projects/spring-integration/pull/3349#discussion_r462322427", "bodyText": "Well, it even misleads you when you try to upgrade from 5.1.13 to those 5.2.8 or 5.3.2, because there is no that fix yet.\nSo, it was always about upgrading to the latest minor version of the particular point generation.", "author": "artembilan", "createdAt": "2020-07-29T14:02:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEyMTM5Mg=="}], "type": "inlineReview"}]}