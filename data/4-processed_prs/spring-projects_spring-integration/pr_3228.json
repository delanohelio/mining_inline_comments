{"pr_number": 3228, "pr_title": "Fix JsonToObjectTransformer for ClassNotFoundEx", "pr_createdAt": "2020-03-27T18:20:33Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3228", "timeline": [{"oid": "cacf2f3194d6301ee44debd317a30f225dfb09ac", "url": "https://github.com/spring-projects/spring-integration/commit/cacf2f3194d6301ee44debd317a30f225dfb09ac", "message": "Fix JsonToObjectTransformer for ClassNotFoundEx\n\nRelated to https://github.com/spring-projects/spring-integration/issues/3223\n\nThe `JsonToObjectTransformer` consults `JsonHeaders` first and tries to build\na `ResolvableType` from other type headers which may be just a string identifications.\nIn this case a `ClassNotFoundException` could be thrown if a `ResolvableType` cannot\nbe build against non-class identificators\n\n* Add `valueTypeExpression` option to the `JsonToObjectTransformer` to let to\nbuild a `ResolvableType` using any possible custom logic, e.g. resolving\ntarget classes from some registry using their ids from the mentioned headers\n\n**Cherry-pick to 5.2.x**", "committedDate": "2020-03-27T18:20:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3Mzg3MQ==", "url": "https://github.com/spring-projects/spring-integration/pull/3228#discussion_r399473871", "bodyText": "Since alone is ok; Starting needs with.", "author": "garyrussell", "createdAt": "2020-03-27T18:50:21Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/json/JsonToObjectTransformer.java", "diffHunk": "@@ -37,10 +41,12 @@\n  * factory to get an instance of Jackson JSON-processor\n  * if jackson-databind lib is present on the classpath. Any other {@linkplain JsonObjectMapper}\n  * implementation can be provided.\n- * <p>Since version 3.0, you can omit the target class and the target type can be\n+ * <p> Starting version 3.0, you can omit the target class and the target type can be", "originalCommit": "cacf2f3194d6301ee44debd317a30f225dfb09ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NDAxMg==", "url": "https://github.com/spring-projects/spring-integration/pull/3228#discussion_r399474012", "bodyText": "with", "author": "garyrussell", "createdAt": "2020-03-27T18:50:39Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/json/JsonToObjectTransformer.java", "diffHunk": "@@ -37,10 +41,12 @@\n  * factory to get an instance of Jackson JSON-processor\n  * if jackson-databind lib is present on the classpath. Any other {@linkplain JsonObjectMapper}\n  * implementation can be provided.\n- * <p>Since version 3.0, you can omit the target class and the target type can be\n+ * <p> Starting version 3.0, you can omit the target class and the target type can be\n  * determined by the {@link JsonHeaders} type entries - including the contents of a\n  * one-level container or map type.\n- * <p>The type headers can be classes or fully-qualified class names.\n+ * <p> The type headers can be classes or fully-qualified class names.\n+ * <p> Starting version 5.2.6, a SpEL expression option is provided to let to build a target", "originalCommit": "cacf2f3194d6301ee44debd317a30f225dfb09ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NjEwMA==", "url": "https://github.com/spring-projects/spring-integration/pull/3228#discussion_r399476100", "bodyText": "against the request message.", "author": "garyrussell", "createdAt": "2020-03-27T18:54:40Z", "path": "src/reference/asciidoc/transformer.adoc", "diffHunk": "@@ -449,6 +449,11 @@ Starting with version 5.2, the `JsonToObjectTransformer` can be configured with\n Also this component now consults request message headers first for the presence of the `JsonHeaders.RESOLVABLE_TYPE` or `JsonHeaders.TYPE_ID` and falls back to the configured type otherwise.\n The `ObjectToJsonTransformer` now also populates a `JsonHeaders.RESOLVABLE_TYPE` header based on the request message payload for any possible downstream scenarios.\n \n+Starting with version 5.2.6, the `JsonToObjectTransformer` can be supplied with a `valueTypeExpression` to resolve a `ResolvableType` for the payload to convert from JSON at runtime against request message.", "originalCommit": "cacf2f3194d6301ee44debd317a30f225dfb09ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NjQ5Mw==", "url": "https://github.com/spring-projects/spring-integration/pull/3228#discussion_r399476493", "bodyText": "from the request message", "author": "garyrussell", "createdAt": "2020-03-27T18:55:28Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/json/JsonToObjectTransformer.java", "diffHunk": "@@ -144,12 +191,31 @@ protected Object doTransform(Message<?> message) {\n \t}\n \n \t@Nullable\n-\tprivate ResolvableType obtainResolvableTypeFromHeadersIfAny(MessageHeaders headers) {\n+\tprivate ResolvableType obtainResolvableType(Message<?> message) {\n+\t\ttry {\n+\t\t\treturn this.valueTypeExpression.getValue(this.evaluationContext, message, ResolvableType.class);\n+\t\t}\n+\t\tcatch (Exception ex) {\n+\t\t\tif (ex.getCause() instanceof ClassNotFoundException) {\n+\t\t\t\tlogger.info(\"Cannot build a ResolvableType from a request message '\" + message +", "originalCommit": "cacf2f3194d6301ee44debd317a30f225dfb09ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "18ed8a6dc9747cdf5cb778e89e9a708b020dbf6e", "url": "https://github.com/spring-projects/spring-integration/commit/18ed8a6dc9747cdf5cb778e89e9a708b020dbf6e", "message": "* Fix English language mistakes", "committedDate": "2020-03-27T19:19:24Z", "type": "commit"}]}