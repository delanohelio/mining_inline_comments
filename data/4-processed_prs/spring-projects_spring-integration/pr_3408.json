{"pr_number": 3408, "pr_title": "Gateway: Propagate Error to the errorChannel", "pr_createdAt": "2020-10-21T16:29:58Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3408", "timeline": [{"oid": "5002feabd48477493e0d23d1eddf52cc845eea74", "url": "https://github.com/spring-projects/spring-integration/commit/5002feabd48477493e0d23d1eddf52cc845eea74", "message": "Gateway: Propagate Error to the errorChannel\n\nSee SO for more info:\nhttps://stackoverflow.com/questions/64456946/handle-exceptions-errors-other-than-messagingexception-ie-other-error-excepti\n\nIn the versions before `5.2.x` the `Error` was wrapped to the `MessagingException`\nin the `AbstractRequestHandlerAdvice` and this one was handled properly\non the gateway level with its `errorChannel` configured\n\n* Fix `MessagingGatewaySupport` to catch all the `Throwable` and try to send them as `ErrorMessage`\nto the `errorChannel`.\nOtherwise unwrap returned `MessagingException` and re-throw an `Error` as is to keep\nthe current behavior for non-handled exceptions\n\n**Cherry-pick to 5.3.x & 5.2.x**", "committedDate": "2020-10-21T16:29:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0MjA5MA==", "url": "https://github.com/spring-projects/spring-integration/pull/3408#discussion_r509442090", "bodyText": "Needs // NOSONAR (catch throwable).", "author": "garyrussell", "createdAt": "2020-10-21T16:46:30Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/gateway/MessagingGatewaySupport.java", "diffHunk": "@@ -528,7 +528,7 @@ private Object doSendAndReceive(Object object, boolean shouldConvert) {\n \t\t\t\tsample.stop(sendTimer());\n \t\t\t}\n \t\t}\n-\t\tcatch (Exception ex) {\n+\t\tcatch (Throwable ex) {", "originalCommit": "5002feabd48477493e0d23d1eddf52cc845eea74", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0Mzg2Mw==", "url": "https://github.com/spring-projects/spring-integration/pull/3408#discussion_r509443863", "bodyText": "Needs throw me; to retain existing behavior of throwing error flow exceptions to caller.\nIt's not clear why this try/catch is here at all; this is an Error on the error flow, not the original flow.", "author": "garyrussell", "createdAt": "2020-10-21T16:49:19Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/gateway/MessagingGatewaySupport.java", "diffHunk": "@@ -543,7 +543,14 @@ private Object doSendAndReceive(Object object, boolean shouldConvert) {\n \t\t\t\t\treply instanceof ErrorMessage\n \t\t\t\t\t\t\t? ((ErrorMessage) reply).getPayload()\n \t\t\t\t\t\t\t: (Throwable) reply;\n-\t\t\treturn handleSendAndReceiveError(object, requestMessage, error, shouldConvert);\n+\t\t\ttry {\n+\t\t\t\treturn handleSendAndReceiveError(object, requestMessage, error, shouldConvert);\n+\t\t\t}\n+\t\t\tcatch (MessagingException me) {\n+\t\t\t\tif (me.getCause() instanceof Error) { // NOSONAR\n+\t\t\t\t\tthrow (Error) me.getCause();\n+\t\t\t\t}", "originalCommit": "5002feabd48477493e0d23d1eddf52cc845eea74", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "de7196f504fc83480fe1302f5b160e9b8785d25b", "url": "https://github.com/spring-projects/spring-integration/commit/de7196f504fc83480fe1302f5b160e9b8785d25b", "message": "* Do not wrap `Error` into a `MessagingException`\nand re-throw as is if there is no `errorChannel`", "committedDate": "2020-10-21T18:00:12Z", "type": "commit"}]}