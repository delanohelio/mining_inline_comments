{"pr_number": 10369, "pr_title": "travel obf resource manager reader added", "pr_createdAt": "2020-12-09T12:56:31Z", "pr_url": "https://github.com/osmandapp/OsmAnd/pull/10369", "timeline": [{"oid": "16ae7b28c1699ccdecfba1d9283bfa3a63ff2f91", "url": "https://github.com/osmandapp/OsmAnd/commit/16ae7b28c1699ccdecfba1d9283bfa3a63ff2f91", "message": "travel obf resource manager reader added", "committedDate": "2020-12-09T12:55:35Z", "type": "commit"}, {"oid": "6babf25c399fac50d560ed87a5a501519df1c0bb", "url": "https://github.com/osmandapp/OsmAnd/commit/6babf25c399fac50d560ed87a5a501519df1c0bb", "message": "cleanup", "committedDate": "2020-12-09T13:30:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzNzE2OQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r539337169", "bodyText": "wiki? I thought it should be \"travel\"", "author": "MadWasp79", "createdAt": "2020-12-09T14:10:54Z", "path": "OsmAnd/src/net/osmand/plus/resources/ResourceManager.java", "diffHunk": "@@ -1132,12 +1134,29 @@ public synchronized void close(){\n \t\treturn readers.toArray(new BinaryMapIndexReader[0]);\n \t}\n \n+\tpublic BinaryMapIndexReader[] getTravelFiles() {\n+\t\tCollection<BinaryMapReaderResource> fileReaders = getFileReaders();\n+\t\tList<BinaryMapIndexReader> readers = new ArrayList<>(fileReaders.size());\n+\t\tfor (BinaryMapReaderResource res : fileReaders) {\n+\t\t\tif (!res.filename.toString().toLowerCase().contains(\"wiki\")) {", "originalCommit": "6babf25c399fac50d560ed87a5a501519df1c0bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f31ad60d471870a66b70f90a1f4c8224dd29bf32", "url": "https://github.com/osmandapp/OsmAnd/commit/f31ad60d471870a66b70f90a1f4c8224dd29bf32", "message": "travel constant fix", "committedDate": "2020-12-09T14:29:59Z", "type": "commit"}, {"oid": "2aac3e5fd89002c27169a5b819a391542c7ac5d7", "url": "https://github.com/osmandapp/OsmAnd/commit/2aac3e5fd89002c27169a5b819a391542c7ac5d7", "message": "formatting", "committedDate": "2020-12-09T15:15:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQwOTc1Ng==", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r539409756", "bodyText": "IndexConstants for constants", "author": "vshcherb", "createdAt": "2020-12-09T15:36:26Z", "path": "OsmAnd/src/net/osmand/plus/resources/ResourceManager.java", "diffHunk": "@@ -1132,6 +1134,24 @@ public synchronized void close(){\n \t\treturn readers.toArray(new BinaryMapIndexReader[0]);\n \t}\n \n+\tpublic BinaryMapIndexReader[] getTravelFiles() {\n+\t\tCollection<BinaryMapReaderResource> fileReaders = getFileReaders();\n+\t\tList<BinaryMapIndexReader> readers = new ArrayList<>(fileReaders.size());\n+\t\tfor (BinaryMapReaderResource res : fileReaders) {\n+\t\t\tif (!res.filename.toString().toLowerCase().contains(\"travel.obf\")) {", "originalCommit": "2aac3e5fd89002c27169a5b819a391542c7ac5d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQxMDc1OQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r539410759", "bodyText": "@alex-osm why is it needed", "author": "vshcherb", "createdAt": "2020-12-09T15:37:37Z", "path": "OsmAnd/src/net/osmand/plus/resources/ResourceManager.java", "diffHunk": "@@ -1132,6 +1134,24 @@ public synchronized void close(){\n \t\treturn readers.toArray(new BinaryMapIndexReader[0]);\n \t}\n \n+\tpublic BinaryMapIndexReader[] getTravelFiles() {\n+\t\tCollection<BinaryMapReaderResource> fileReaders = getFileReaders();\n+\t\tList<BinaryMapIndexReader> readers = new ArrayList<>(fileReaders.size());\n+\t\tfor (BinaryMapReaderResource res : fileReaders) {\n+\t\t\tif (!res.filename.toString().toLowerCase().contains(\"travel.obf\")) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\tBinaryMapIndexReader index = res.getReader(BinaryMapReaderResourceType.POI);\n+\t\t\tfor (BinaryIndexPart p : index.getIndexes()) {\n+\t\t\t\tif (p instanceof BinaryMapPoiReaderAdapter.PoiRegion) {", "originalCommit": "2aac3e5fd89002c27169a5b819a391542c7ac5d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2231387ca63057103b070de659f293fcf273c0cb", "url": "https://github.com/osmandapp/OsmAnd/commit/2231387ca63057103b070de659f293fcf273c0cb", "message": "cnflt resolved", "committedDate": "2020-12-10T13:24:10Z", "type": "commit"}, {"oid": "1dba3c4c62d1e78a3230a0569be8f137786634f4", "url": "https://github.com/osmandapp/OsmAnd/commit/1dba3c4c62d1e78a3230a0569be8f137786634f4", "message": "Merge branch 'master' of https://github.com/osmandapp/OsmAnd into issue_336_wikiwoyage_bigfix", "committedDate": "2020-12-10T13:40:44Z", "type": "commit"}, {"oid": "11aeaef2c5a2e80c734c20f62dce28d1765ddda5", "url": "https://github.com/osmandapp/OsmAnd/commit/11aeaef2c5a2e80c734c20f62dce28d1765ddda5", "message": "starting obf helper", "committedDate": "2020-12-10T14:42:09Z", "type": "commit"}, {"oid": "621a18f1e49be5c5e408630a2614bee387618c1d", "url": "https://github.com/osmandapp/OsmAnd/commit/621a18f1e49be5c5e408630a2614bee387618c1d", "message": "resourse manager travel repositories aded", "committedDate": "2020-12-15T08:53:46Z", "type": "commit"}, {"oid": "a1ecaacbe8c7af2e9b14104221ae143037e70f85", "url": "https://github.com/osmandapp/OsmAnd/commit/a1ecaacbe8c7af2e9b14104221ae143037e70f85", "message": "formatting changes", "committedDate": "2020-12-15T08:58:07Z", "type": "commit"}, {"oid": "203934cc1d94119313127a2d07bca3ed6018c165", "url": "https://github.com/osmandapp/OsmAnd/commit/203934cc1d94119313127a2d07bca3ed6018c165", "message": "travel reader added", "committedDate": "2020-12-15T09:26:42Z", "type": "commit"}, {"oid": "c7dddc3f23217b6460bf4586ad6131ec2564df0b", "url": "https://github.com/osmandapp/OsmAnd/commit/c7dddc3f23217b6460bf4586ad6131ec2564df0b", "message": "removed unused methods", "committedDate": "2020-12-15T13:19:45Z", "type": "commit"}, {"oid": "29a57dc562c6004bd632537c0c9742a3e7b45e87", "url": "https://github.com/osmandapp/OsmAnd/commit/29a57dc562c6004bd632537c0c9742a3e7b45e87", "message": "check db file exists added", "committedDate": "2020-12-15T13:22:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0OTc1Mw==", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r543349753", "bodyText": "null", "author": "vshcherb", "createdAt": "2020-12-15T13:41:44Z", "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "diffHunk": "@@ -0,0 +1,189 @@\n+package net.osmand.plus.wikivoyage.data;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import net.osmand.CollatorStringMatcher;\n+import net.osmand.GPXUtilities;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.ResultMatcher;\n+import net.osmand.binary.BinaryMapIndexReader;\n+import net.osmand.data.Amenity;\n+import net.osmand.data.MapObject;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.api.SQLiteAPI;\n+import net.osmand.util.Algorithms;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class TravelObfHelper implements TravelHelper {\n+\n+\tprivate static final Log LOG = PlatformUtil.getLog(TravelObfHelper.class);\n+\n+\tprivate static final int POPULAR_LIMIT = 25;\n+\n+\tprivate final OsmandApplication application;\n+\n+\tprivate TravelLocalDataHelper localDataHelper;\n+\n+\tprivate List<BinaryMapIndexReader> files;\n+\tprivate List<File> existingTravelBooks = new ArrayList<>();\n+\tprivate List<TravelArticle> popularArticles = new ArrayList<TravelArticle>();\n+\n+\n+\tpublic TravelObfHelper(OsmandApplication application) {\n+\t\tthis.application = application;\n+\t\tlocalDataHelper = new TravelLocalDataHelper(application);\n+\t}\n+\n+\tpublic TravelLocalDataHelper getBookmarksHelper() {\n+\t\treturn localDataHelper;\n+\t}\n+\n+\t@Override\n+\tpublic void initializeDataOnAppStartup() {\n+\n+\t}\n+\n+\t@Override\n+\tpublic boolean isAnyTravelBookPresent() {\n+\t\treturn checkIfObfFileExists(application);\n+\t}\n+\n+\n+\tpublic void initializeDataToDisplay() {\n+\t\tlocalDataHelper.refreshCachedData();\n+\t\tloadPopularArticles();\n+\t}\n+\n+\n+\t@NonNull\n+\tpublic List<WikivoyageSearchResult> search(final String searchQuery) {\n+\t\t// TODO remove\n+\t\t//this.files = application.getResourceManager().getTravelFiles();\n+\t\tList<WikivoyageSearchResult> res = new ArrayList<>();\n+//\t\tList<Amenity> searchObjects = new ArrayList<>();\n+//\t\tfor (BinaryMapIndexReader reader : files) {\n+//\t\t\ttry {\n+//\t\t\t\tBinaryMapIndexReader.SearchRequest<Amenity> searchRequest = BinaryMapIndexReader.\n+//\t\t\t\t\t\tbuildSearchPoiRequest(0, 0, searchQuery,\n+//\t\t\t\t\t\t\t\t0, Integer.MAX_VALUE, 0, Integer.MAX_VALUE, null);\n+//\n+//\t\t\t\tsearchObjects = reader.searchPoiByName(searchRequest);\n+//\t\t\t} catch (IOException e) {\n+//\t\t\t\tLOG.error(e);\n+//\t\t\t}\n+//\t\t}\n+//\t\tfor (MapObject obj : searchObjects) {\n+//\t\t\t//TODO map\n+//\t\t\tWikivoyageSearchResult r = new WikivoyageSearchResult();\n+//\t\t\tr.articleTitles = Collections.singletonList(obj.getName());\n+//\t\t\tr.langs = Collections.singletonList(obj.getName());\n+//\t\t\tr.imageTitle = (obj.getName());\n+//\t\t\tr.isPartOf = Collections.singletonList(obj.getName());\n+//\t\t\tr.routeId = \"routeid\";//obj.getId();\n+//\t\t\tres.add(r);\n+//\t\t}\n+\t\treturn res;\n+\t}\n+\n+\t@NonNull\n+\tpublic List<TravelArticle> getPopularArticles() {\n+\t\treturn popularArticles;\n+\t}\n+\n+\t@Override\n+\tpublic Map<WikivoyageSearchResult, List<WikivoyageSearchResult>> getNavigationMap(TravelArticle article) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic TravelArticle getArticleById(String routeId, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic TravelArticle getArticleByTitle(String title, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic String getArticleId(String title, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic ArrayList<String> getArticleLangs(String articleId) {\n+\t\treturn null;\n+\t}\n+\n+\t@NonNull\n+\tpublic List<TravelArticle> loadPopularArticles() {\n+\t\tpopularArticles = new ArrayList<>();\n+\t\treturn popularArticles;\n+\t}\n+\n+\tpublic String formatTravelBookName(File tb) {\n+\t\tif (tb == null) {\n+\t\t\treturn application.getString(R.string.shared_string_none);\n+\t\t}\n+\t\tString nm = tb.getName();\n+\t\treturn nm.substring(0, nm.indexOf('.')).replace('_', ' ');\n+\t}\n+\n+\tpublic String getGPXName(TravelArticle article) {\n+\t\treturn article.getTitle().replace('/', '_').replace('\\'', '_')\n+\t\t\t\t.replace('\\\"', '_') + IndexConstants.GPX_FILE_EXT;\n+\t}\n+\n+\tpublic File createGpxFile(TravelArticle article) {\n+\t\tfinal GPXUtilities.GPXFile gpx = article.getGpxFile();\n+\t\tFile file = application.getAppPath(IndexConstants.GPX_TRAVEL_DIR + getGPXName(article));\n+\t\tif (!file.exists()) {\n+\t\t\tGPXUtilities.writeGpxFile(file, gpx);\n+\t\t}\n+\t\treturn file;\n+\t}\n+\n+\t@Override\n+\tpublic String getSelectedTravelBookName() {\n+\t\t//TODO REPLACE\n+\t\treturn \"OBF TRAVEL BOOK\";", "originalCommit": "29a57dc562c6004bd632537c0c9742a3e7b45e87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1MDA4OA==", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r543350088", "bodyText": "Duplicate to checkIfObfFileExists", "author": "vshcherb", "createdAt": "2020-12-15T13:42:08Z", "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelDbHelper.java", "diffHunk": "@@ -114,6 +114,18 @@ public TravelDbHelper(OsmandApplication application) {\n \t\tlocalDataHelper = new TravelLocalDataHelper(application);\n \t}\n \n+\tpublic static boolean checkIfDbFileExists(OsmandApplication app) {", "originalCommit": "29a57dc562c6004bd632537c0c9742a3e7b45e87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1MDc5MQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r543350791", "bodyText": "ResourceManager", "author": "vshcherb", "createdAt": "2020-12-15T13:43:00Z", "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "diffHunk": "@@ -0,0 +1,189 @@\n+package net.osmand.plus.wikivoyage.data;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import net.osmand.CollatorStringMatcher;\n+import net.osmand.GPXUtilities;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.ResultMatcher;\n+import net.osmand.binary.BinaryMapIndexReader;\n+import net.osmand.data.Amenity;\n+import net.osmand.data.MapObject;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.api.SQLiteAPI;\n+import net.osmand.util.Algorithms;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class TravelObfHelper implements TravelHelper {\n+\n+\tprivate static final Log LOG = PlatformUtil.getLog(TravelObfHelper.class);\n+\n+\tprivate static final int POPULAR_LIMIT = 25;\n+\n+\tprivate final OsmandApplication application;\n+\n+\tprivate TravelLocalDataHelper localDataHelper;\n+\n+\tprivate List<BinaryMapIndexReader> files;", "originalCommit": "29a57dc562c6004bd632537c0c9742a3e7b45e87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1MDg4MA==", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r543350880", "bodyText": "Why it is needed?", "author": "vshcherb", "createdAt": "2020-12-15T13:43:11Z", "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "diffHunk": "@@ -0,0 +1,189 @@\n+package net.osmand.plus.wikivoyage.data;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import net.osmand.CollatorStringMatcher;\n+import net.osmand.GPXUtilities;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.ResultMatcher;\n+import net.osmand.binary.BinaryMapIndexReader;\n+import net.osmand.data.Amenity;\n+import net.osmand.data.MapObject;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.api.SQLiteAPI;\n+import net.osmand.util.Algorithms;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class TravelObfHelper implements TravelHelper {\n+\n+\tprivate static final Log LOG = PlatformUtil.getLog(TravelObfHelper.class);\n+\n+\tprivate static final int POPULAR_LIMIT = 25;\n+\n+\tprivate final OsmandApplication application;\n+\n+\tprivate TravelLocalDataHelper localDataHelper;\n+\n+\tprivate List<BinaryMapIndexReader> files;\n+\tprivate List<File> existingTravelBooks = new ArrayList<>();", "originalCommit": "29a57dc562c6004bd632537c0c9742a3e7b45e87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2b439a4c80677172be9bfa3ad59227a7e219ae9a", "url": "https://github.com/osmandapp/OsmAnd/commit/2b439a4c80677172be9bfa3ad59227a7e219ae9a", "message": "update travelobfhelper", "committedDate": "2020-12-15T13:45:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1MzQ5Nw==", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r543353497", "bodyText": "Delete not used class", "author": "vshcherb", "createdAt": "2020-12-15T13:46:46Z", "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "diffHunk": "@@ -0,0 +1,189 @@\n+package net.osmand.plus.wikivoyage.data;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import net.osmand.CollatorStringMatcher;\n+import net.osmand.GPXUtilities;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.ResultMatcher;\n+import net.osmand.binary.BinaryMapIndexReader;\n+import net.osmand.data.Amenity;\n+import net.osmand.data.MapObject;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.api.SQLiteAPI;\n+import net.osmand.util.Algorithms;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class TravelObfHelper implements TravelHelper {\n+\n+\tprivate static final Log LOG = PlatformUtil.getLog(TravelObfHelper.class);\n+\n+\tprivate static final int POPULAR_LIMIT = 25;\n+\n+\tprivate final OsmandApplication application;\n+\n+\tprivate TravelLocalDataHelper localDataHelper;\n+\n+\tprivate List<BinaryMapIndexReader> files;\n+\tprivate List<File> existingTravelBooks = new ArrayList<>();\n+\tprivate List<TravelArticle> popularArticles = new ArrayList<TravelArticle>();\n+\n+\n+\tpublic TravelObfHelper(OsmandApplication application) {\n+\t\tthis.application = application;\n+\t\tlocalDataHelper = new TravelLocalDataHelper(application);\n+\t}\n+\n+\tpublic TravelLocalDataHelper getBookmarksHelper() {\n+\t\treturn localDataHelper;\n+\t}\n+\n+\t@Override\n+\tpublic void initializeDataOnAppStartup() {\n+\n+\t}\n+\n+\t@Override\n+\tpublic boolean isAnyTravelBookPresent() {\n+\t\treturn checkIfObfFileExists(application);\n+\t}\n+\n+\n+\tpublic void initializeDataToDisplay() {\n+\t\tlocalDataHelper.refreshCachedData();\n+\t\tloadPopularArticles();\n+\t}\n+\n+\n+\t@NonNull\n+\tpublic List<WikivoyageSearchResult> search(final String searchQuery) {\n+\t\t// TODO remove\n+\t\t//this.files = application.getResourceManager().getTravelFiles();\n+\t\tList<WikivoyageSearchResult> res = new ArrayList<>();\n+//\t\tList<Amenity> searchObjects = new ArrayList<>();\n+//\t\tfor (BinaryMapIndexReader reader : files) {\n+//\t\t\ttry {\n+//\t\t\t\tBinaryMapIndexReader.SearchRequest<Amenity> searchRequest = BinaryMapIndexReader.\n+//\t\t\t\t\t\tbuildSearchPoiRequest(0, 0, searchQuery,\n+//\t\t\t\t\t\t\t\t0, Integer.MAX_VALUE, 0, Integer.MAX_VALUE, null);\n+//\n+//\t\t\t\tsearchObjects = reader.searchPoiByName(searchRequest);\n+//\t\t\t} catch (IOException e) {\n+//\t\t\t\tLOG.error(e);\n+//\t\t\t}\n+//\t\t}\n+//\t\tfor (MapObject obj : searchObjects) {\n+//\t\t\t//TODO map\n+//\t\t\tWikivoyageSearchResult r = new WikivoyageSearchResult();\n+//\t\t\tr.articleTitles = Collections.singletonList(obj.getName());\n+//\t\t\tr.langs = Collections.singletonList(obj.getName());\n+//\t\t\tr.imageTitle = (obj.getName());\n+//\t\t\tr.isPartOf = Collections.singletonList(obj.getName());\n+//\t\t\tr.routeId = \"routeid\";//obj.getId();\n+//\t\t\tres.add(r);\n+//\t\t}\n+\t\treturn res;\n+\t}\n+\n+\t@NonNull\n+\tpublic List<TravelArticle> getPopularArticles() {\n+\t\treturn popularArticles;\n+\t}\n+\n+\t@Override\n+\tpublic Map<WikivoyageSearchResult, List<WikivoyageSearchResult>> getNavigationMap(TravelArticle article) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic TravelArticle getArticleById(String routeId, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic TravelArticle getArticleByTitle(String title, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic String getArticleId(String title, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic ArrayList<String> getArticleLangs(String articleId) {\n+\t\treturn null;\n+\t}\n+\n+\t@NonNull\n+\tpublic List<TravelArticle> loadPopularArticles() {\n+\t\tpopularArticles = new ArrayList<>();\n+\t\treturn popularArticles;\n+\t}\n+\n+\tpublic String formatTravelBookName(File tb) {\n+\t\tif (tb == null) {\n+\t\t\treturn application.getString(R.string.shared_string_none);\n+\t\t}\n+\t\tString nm = tb.getName();\n+\t\treturn nm.substring(0, nm.indexOf('.')).replace('_', ' ');\n+\t}\n+\n+\tpublic String getGPXName(TravelArticle article) {\n+\t\treturn article.getTitle().replace('/', '_').replace('\\'', '_')\n+\t\t\t\t.replace('\\\"', '_') + IndexConstants.GPX_FILE_EXT;\n+\t}\n+\n+\tpublic File createGpxFile(TravelArticle article) {\n+\t\tfinal GPXUtilities.GPXFile gpx = article.getGpxFile();\n+\t\tFile file = application.getAppPath(IndexConstants.GPX_TRAVEL_DIR + getGPXName(article));\n+\t\tif (!file.exists()) {\n+\t\t\tGPXUtilities.writeGpxFile(file, gpx);\n+\t\t}\n+\t\treturn file;\n+\t}\n+\n+\t@Override\n+\tpublic String getSelectedTravelBookName() {\n+\t\t//TODO REPLACE\n+\t\treturn \"OBF TRAVEL BOOK\";\n+\t}\n+\n+\tpublic static boolean checkIfObfFileExists(OsmandApplication app) {\n+\t\tFile[] files = app.getAppPath(IndexConstants.WIKIVOYAGE_INDEX_DIR).listFiles();\n+\t\tif (files != null) {\n+\t\t\tfor (File f : files) {\n+\t\t\t\tif (f.getName().contains(IndexConstants.BINARY_TRAVEL_GUIDE_MAP_INDEX_EXT)) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t// might use in future\n+\tprotected static class PopularArticle {", "originalCommit": "29a57dc562c6004bd632537c0c9742a3e7b45e87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "89ad77ba0248bbe57bd188879f13bd53f5b580c7", "url": "https://github.com/osmandapp/OsmAnd/commit/89ad77ba0248bbe57bd188879f13bd53f5b580c7", "message": "travel obf helper updated", "committedDate": "2020-12-15T14:54:14Z", "type": "commit"}, {"oid": "358590cd6806172677f33ab15352d05e40fe6142", "url": "https://github.com/osmandapp/OsmAnd/commit/358590cd6806172677f33ab15352d05e40fe6142", "message": "small changes", "committedDate": "2020-12-15T15:12:25Z", "type": "commit"}, {"oid": "9b5982e3e6ca3ca960849396d77d0db71424d141", "url": "https://github.com/osmandapp/OsmAnd/commit/9b5982e3e6ca3ca960849396d77d0db71424d141", "message": "index name updated", "committedDate": "2020-12-15T15:23:44Z", "type": "commit"}, {"oid": "46c70865447b85e64236af52cd0834646dd8fbeb", "url": "https://github.com/osmandapp/OsmAnd/commit/46c70865447b85e64236af52cd0834646dd8fbeb", "message": "index name updated", "committedDate": "2020-12-15T15:25:19Z", "type": "commit"}]}