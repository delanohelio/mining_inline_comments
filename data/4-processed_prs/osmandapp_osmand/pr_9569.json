{"pr_number": 9569, "pr_title": "Plan route option part 1", "pr_createdAt": "2020-08-04T09:24:09Z", "pr_url": "https://github.com/osmandapp/OsmAnd/pull/9569", "timeline": [{"oid": "a433aad8f1c1308fd5329dcac25d2a47b417853f", "url": "https://github.com/osmandapp/OsmAnd/commit/a433aad8f1c1308fd5329dcac25d2a47b417853f", "message": "Fix getSelected and some UI issue", "committedDate": "2020-07-27T11:04:19Z", "type": "commit"}, {"oid": "f3f68d135b6902bb54b29f5d8639f39f49ae8c7f", "url": "https://github.com/osmandapp/OsmAnd/commit/f3f68d135b6902bb54b29f5d8639f39f49ae8c7f", "message": "Merge branch 'master' into plan_route_start", "committedDate": "2020-07-27T18:57:52Z", "type": "commit"}, {"oid": "17455a2b1e5c6899f697a9c665b0cfd8de091af4", "url": "https://github.com/osmandapp/OsmAnd/commit/17455a2b1e5c6899f697a9c665b0cfd8de091af4", "message": "Fix icon", "committedDate": "2020-07-28T07:04:12Z", "type": "commit"}, {"oid": "28f42b943b06eeca36ef6e3cc1c9af3e5f0c4d3e", "url": "https://github.com/osmandapp/OsmAnd/commit/28f42b943b06eeca36ef6e3cc1c9af3e5f0c4d3e", "message": "plan a route options UI", "committedDate": "2020-07-31T15:38:16Z", "type": "commit"}, {"oid": "6a41ecdc0578e013b33ef5fcdca872dd4c1d089b", "url": "https://github.com/osmandapp/OsmAnd/commit/6a41ecdc0578e013b33ef5fcdca872dd4c1d089b", "message": "Merge branch 'plan_route_start' into plan_route_options\n\n# Conflicts:\n#\tOsmAnd/src/net/osmand/plus/measurementtool/MeasurementToolFragment.java", "committedDate": "2020-07-31T15:51:35Z", "type": "commit"}, {"oid": "8d502c4357fef9225bc4112d61ede0e240a05732", "url": "https://github.com/osmandapp/OsmAnd/commit/8d502c4357fef9225bc4112d61ede0e240a05732", "message": "Fix add to track listener", "committedDate": "2020-08-01T11:17:36Z", "type": "commit"}, {"oid": "5a156eca6369928165d4931d3c1592a4db834560", "url": "https://github.com/osmandapp/OsmAnd/commit/5a156eca6369928165d4931d3c1592a4db834560", "message": "Merge branch 'master' into plan_route_options", "committedDate": "2020-08-03T12:54:07Z", "type": "commit"}, {"oid": "3361c19f135b4010ef12fc5c82eb367575df72c6", "url": "https://github.com/osmandapp/OsmAnd/commit/3361c19f135b4010ef12fc5c82eb367575df72c6", "message": "Merge branch 'fix_open_track' into plan_route_options", "committedDate": "2020-08-03T13:28:14Z", "type": "commit"}, {"oid": "07821d3e86653aefc0ddcdb5bfa578e0b455839b", "url": "https://github.com/osmandapp/OsmAnd/commit/07821d3e86653aefc0ddcdb5bfa578e0b455839b", "message": "Fix track renaming", "committedDate": "2020-08-03T13:47:01Z", "type": "commit"}, {"oid": "c034f7deabf02458f279fd4905970e7257aedefc", "url": "https://github.com/osmandapp/OsmAnd/commit/c034f7deabf02458f279fd4905970e7257aedefc", "message": "Merge remote-tracking branch 'origin/plan_route_options' into plan_route_options", "committedDate": "2020-08-03T16:07:28Z", "type": "commit"}, {"oid": "5be444ab879e4a3ee5adf2e4dfc8910ddf94f9af", "url": "https://github.com/osmandapp/OsmAnd/commit/5be444ab879e4a3ee5adf2e4dfc8910ddf94f9af", "message": "Fix plan a route file name and segment calculation", "committedDate": "2020-08-03T16:32:53Z", "type": "commit"}, {"oid": "72301ff5c91578cb8b30ee22708f3f58d18bbd69", "url": "https://github.com/osmandapp/OsmAnd/commit/72301ff5c91578cb8b30ee22708f3f58d18bbd69", "message": "Fix icon update", "committedDate": "2020-08-03T19:28:40Z", "type": "commit"}, {"oid": "49f68acc59c1686cdbd3bfd0efa90c0eac8d9215", "url": "https://github.com/osmandapp/OsmAnd/commit/49f68acc59c1686cdbd3bfd0efa90c0eac8d9215", "message": "Fix directions empty points and save new route", "committedDate": "2020-08-04T06:04:02Z", "type": "commit"}, {"oid": "b2118e686551279dfcdcbf55f178e9e6d695371d", "url": "https://github.com/osmandapp/OsmAnd/commit/b2118e686551279dfcdcbf55f178e9e6d695371d", "message": "Merge remote-tracking branch 'origin/plan_route_options' into plan_route_options", "committedDate": "2020-08-04T06:04:22Z", "type": "commit"}, {"oid": "a56edc2f7ab60d1735df4cd80fcfc77c79eaeabb", "url": "https://github.com/osmandapp/OsmAnd/commit/a56edc2f7ab60d1735df4cd80fcfc77c79eaeabb", "message": "Fix #9238", "committedDate": "2020-08-04T08:58:11Z", "type": "commit"}, {"oid": "0ffd9c08dbbcc903c056dbc08a1e97f408b2dc02", "url": "https://github.com/osmandapp/OsmAnd/commit/0ffd9c08dbbcc903c056dbc08a1e97f408b2dc02", "message": "Fix route between points undefined", "committedDate": "2020-08-04T09:10:19Z", "type": "commit"}, {"oid": "d1d3129996fe201afe9513492eff9fdf45401a56", "url": "https://github.com/osmandapp/OsmAnd/commit/d1d3129996fe201afe9513492eff9fdf45401a56", "message": "Merge remote-tracking branch 'origin/plan_route_options' into plan_route_options", "committedDate": "2020-08-04T09:10:44Z", "type": "commit"}, {"oid": "dbaa5b165822fd7786c2dff4635ecdc8c8fbf2db", "url": "https://github.com/osmandapp/OsmAnd/commit/dbaa5b165822fd7786c2dff4635ecdc8c8fbf2db", "message": "Merge branch 'master' into plan_route_options", "committedDate": "2020-08-04T09:12:05Z", "type": "commit"}, {"oid": "850d6d83c111bff099d15e1c457af4e87433bdd8", "url": "https://github.com/osmandapp/OsmAnd/commit/850d6d83c111bff099d15e1c457af4e87433bdd8", "message": "Fix add to track icon", "committedDate": "2020-08-04T09:13:12Z", "type": "commit"}, {"oid": "ba5e26cb9cc179d26f8f4991f9bffdf5c4016f40", "url": "https://github.com/osmandapp/OsmAnd/commit/ba5e26cb9cc179d26f8f4991f9bffdf5c4016f40", "message": "Clear UI", "committedDate": "2020-08-04T09:22:43Z", "type": "commit"}, {"oid": "8b58751667a190c14ee72d641885454f94449280", "url": "https://github.com/osmandapp/OsmAnd/commit/8b58751667a190c14ee72d641885454f94449280", "message": "Add WeakReference for activity inside snackbar", "committedDate": "2020-08-05T13:53:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1ODU4OA==", "url": "https://github.com/osmandapp/OsmAnd/pull/9569#discussion_r465758588", "bodyText": "initSelected > resetSelection", "author": "max-klaus", "createdAt": "2020-08-05T14:15:07Z", "path": "OsmAnd/src/net/osmand/plus/measurementtool/ProfileCard.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package net.osmand.plus.measurementtool;\n+\n+import android.graphics.drawable.Drawable;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.RadioButton;\n+import android.widget.TextView;\n+\n+import net.osmand.plus.R;\n+import net.osmand.plus.UiUtilities;\n+import net.osmand.plus.activities.MapActivity;\n+import net.osmand.plus.routepreparationmenu.cards.BaseCard;\n+import net.osmand.plus.settings.backend.ApplicationMode;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class ProfileCard extends BaseCard {\n+\n+\tpublic static final int INIT_MODE = 0;\n+\tApplicationMode selectedMode;\n+\n+\tpublic ProfileCard(MapActivity mapActivity) {\n+\t\tsuper(mapActivity);\n+\t}\n+\n+\tpublic ApplicationMode getSelectedMode() {\n+\t\treturn selectedMode;\n+\t}\n+\n+\t@Override\n+\tpublic int getCardLayoutId() {\n+\t\treturn R.layout.navigation_profiles_card;\n+\t}\n+\n+\t@Override\n+\tprotected void updateContent() {\n+\n+\t\tfinal List<ApplicationMode> modes = new ArrayList<>(ApplicationMode.values(app));\n+\t\tmodes.remove(ApplicationMode.DEFAULT);\n+\t\tfor (int i = 0; i < modes.size(); i++) {\n+\t\t\tApplicationMode mode = modes.get(i);\n+\t\t\tLinearLayout container = view.findViewById(R.id.content_container);\n+\t\t\tDrawable icon = app.getUIUtilities().getIcon(mode.getIconRes(), mode.getIconColorInfo().getColor(nightMode));\n+\t\t\tString title = mode.toHumanString();\n+\t\t\tView.OnClickListener onClickListener = new View.OnClickListener() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic void onClick(View v) {\n+\t\t\t\t\tRadioButton selectedProfile = v.findViewById(R.id.compound_button);\n+\t\t\t\t\tselectedMode = modes.get((Integer) v.getTag());\n+\t\t\t\t\tclearChecked();\n+\t\t\t\t\tselectedProfile.setChecked(true);\n+\t\t\t\t}\n+\n+\t\t\t\tprivate void clearChecked() {\n+\t\t\t\t\tfor (int i = 0; i < modes.size(); i++) {\n+\t\t\t\t\t\tRadioButton profile = view.findViewWithTag(i).findViewById(R.id.compound_button);\n+\t\t\t\t\t\tprofile.setChecked(false);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t};\n+\t\t\taddProfileView(container, onClickListener, i, icon, title);\n+\t\t}\n+\t\tinitSelected(modes);\n+\t}\n+\n+\tprivate void initSelected(List<ApplicationMode> modes) {", "originalCommit": "8b58751667a190c14ee72d641885454f94449280", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1OTA4OA==", "url": "https://github.com/osmandapp/OsmAnd/pull/9569#discussion_r465759088", "bodyText": "Drop INIT_MODE const", "author": "max-klaus", "createdAt": "2020-08-05T14:15:48Z", "path": "OsmAnd/src/net/osmand/plus/measurementtool/ProfileCard.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package net.osmand.plus.measurementtool;\n+\n+import android.graphics.drawable.Drawable;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.RadioButton;\n+import android.widget.TextView;\n+\n+import net.osmand.plus.R;\n+import net.osmand.plus.UiUtilities;\n+import net.osmand.plus.activities.MapActivity;\n+import net.osmand.plus.routepreparationmenu.cards.BaseCard;\n+import net.osmand.plus.settings.backend.ApplicationMode;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class ProfileCard extends BaseCard {\n+\n+\tpublic static final int INIT_MODE = 0;\n+\tApplicationMode selectedMode;\n+\n+\tpublic ProfileCard(MapActivity mapActivity) {\n+\t\tsuper(mapActivity);\n+\t}\n+\n+\tpublic ApplicationMode getSelectedMode() {\n+\t\treturn selectedMode;\n+\t}\n+\n+\t@Override\n+\tpublic int getCardLayoutId() {\n+\t\treturn R.layout.navigation_profiles_card;\n+\t}\n+\n+\t@Override\n+\tprotected void updateContent() {\n+\n+\t\tfinal List<ApplicationMode> modes = new ArrayList<>(ApplicationMode.values(app));\n+\t\tmodes.remove(ApplicationMode.DEFAULT);\n+\t\tfor (int i = 0; i < modes.size(); i++) {\n+\t\t\tApplicationMode mode = modes.get(i);\n+\t\t\tLinearLayout container = view.findViewById(R.id.content_container);\n+\t\t\tDrawable icon = app.getUIUtilities().getIcon(mode.getIconRes(), mode.getIconColorInfo().getColor(nightMode));\n+\t\t\tString title = mode.toHumanString();\n+\t\t\tView.OnClickListener onClickListener = new View.OnClickListener() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic void onClick(View v) {\n+\t\t\t\t\tRadioButton selectedProfile = v.findViewById(R.id.compound_button);\n+\t\t\t\t\tselectedMode = modes.get((Integer) v.getTag());\n+\t\t\t\t\tclearChecked();\n+\t\t\t\t\tselectedProfile.setChecked(true);\n+\t\t\t\t}\n+\n+\t\t\t\tprivate void clearChecked() {\n+\t\t\t\t\tfor (int i = 0; i < modes.size(); i++) {\n+\t\t\t\t\t\tRadioButton profile = view.findViewWithTag(i).findViewById(R.id.compound_button);\n+\t\t\t\t\t\tprofile.setChecked(false);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t};\n+\t\t\taddProfileView(container, onClickListener, i, icon, title);\n+\t\t}\n+\t\tinitSelected(modes);\n+\t}\n+\n+\tprivate void initSelected(List<ApplicationMode> modes) {\n+\t\tselectedMode = modes.get(INIT_MODE);", "originalCommit": "8b58751667a190c14ee72d641885454f94449280", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2MDExMQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/9569#discussion_r465760111", "bodyText": "Drop firstShow", "author": "max-klaus", "createdAt": "2020-08-05T14:17:09Z", "path": "OsmAnd/src/net/osmand/plus/measurementtool/MeasurementToolFragment.java", "diffHunk": "@@ -123,6 +126,7 @@\n \tprivate boolean progressBarVisible;\n \tprivate boolean pointsListOpened;\n \tprivate boolean planRouteMode = false;\n+\tprivate boolean firstShow = true;", "originalCommit": "8b58751667a190c14ee72d641885454f94449280", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc2ODQ0Nw==", "url": "https://github.com/osmandapp/OsmAnd/pull/9569#discussion_r465768447", "bodyText": "Move to UiUtilities", "author": "max-klaus", "createdAt": "2020-08-05T14:28:11Z", "path": "OsmAnd/src/net/osmand/plus/measurementtool/RouteBetweenPointsBottomSheetDialogFragment.java", "diffHunk": "@@ -0,0 +1,253 @@\n+package net.osmand.plus.measurementtool;\n+\n+import android.app.Dialog;\n+import android.graphics.Color;\n+import android.graphics.drawable.Drawable;\n+import android.graphics.drawable.GradientDrawable;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.Window;\n+import android.view.WindowManager;\n+import android.widget.FrameLayout;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.RadioButton;\n+import android.widget.TextView;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.content.ContextCompat;\n+import androidx.fragment.app.FragmentActivity;\n+import androidx.fragment.app.FragmentManager;\n+\n+import net.osmand.AndroidUtils;\n+import net.osmand.PlatformUtil;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.UiUtilities;\n+import net.osmand.plus.base.BottomSheetDialogFragment;\n+import net.osmand.plus.helpers.AndroidUiHelper;\n+import net.osmand.plus.measurementtool.MeasurementEditingContext.CalculationType;\n+import net.osmand.plus.settings.backend.ApplicationMode;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static net.osmand.plus.measurementtool.MeasurementEditingContext.CalculationType.NEXT_SEGMENT;\n+import static net.osmand.plus.measurementtool.MeasurementEditingContext.CalculationType.WHOLE_TRACK;\n+\n+public class RouteBetweenPointsBottomSheetDialogFragment extends BottomSheetDialogFragment {\n+\n+\tprivate static final Log LOG = PlatformUtil.getLog(RouteBetweenPointsBottomSheetDialogFragment.class);\n+\tpublic static final String TAG = RouteBetweenPointsBottomSheetDialogFragment.class.getSimpleName();\n+\tpublic static final int STRAIGHT_LINE_TAG = -1;\n+\n+\tprivate RouteBetweenPointsFragmentListener listener;\n+\tprivate boolean nightMode;\n+\tprivate boolean portrait;\n+\tprivate boolean snapToRoadEnabled;\n+\tprivate TextView segmentBtn;\n+\tprivate TextView wholeTrackBtn;\n+\tprivate TextView btnDescription;\n+\tprivate FrameLayout segmentBtnContainer;\n+\tprivate FrameLayout wholeTrackBtnContainer;\n+\tprivate CalculationType calculationType = WHOLE_TRACK;\n+\tprivate ApplicationMode snapToRoadAppMode;\n+\n+\tpublic void setListener(RouteBetweenPointsFragmentListener listener) {\n+\t\tthis.listener = listener;\n+\t}\n+\n+\t@Nullable\n+\t@Override\n+\tpublic View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+\t\tOsmandApplication app = requiredMyApplication();\n+\t\tnightMode = app.getDaynightHelper().isNightModeForMapControls();\n+\t\tFragmentActivity activity = requireActivity();\n+\t\tportrait = AndroidUiHelper.isOrientationPortrait(activity);\n+\t\tfinal View mainView = inflater.inflate(R.layout.fragment_route_between_points_bottom_sheet_dialog,\n+\t\t\t\tcontainer, false);\n+\t\tAndroidUtils.setBackground(activity, mainView, nightMode,\n+\t\t\t\tportrait ? R.drawable.bg_bottom_menu_light : R.drawable.bg_bottom_sheet_topsides_landscape_light,\n+\t\t\t\tportrait ? R.drawable.bg_bottom_menu_dark : R.drawable.bg_bottom_sheet_topsides_landscape_dark);\n+\n+\t\tView cancelButton = mainView.findViewById(R.id.dismiss_button);\n+\t\tUiUtilities.setupDialogButton(nightMode, cancelButton, UiUtilities.DialogButtonType.SECONDARY,\n+\t\t\t\tR.string.shared_string_close);\n+\t\tmainView.findViewById(R.id.dismiss_button).setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View view) {\n+\t\t\t\tdismiss();\n+\t\t\t}\n+\t\t});\n+\t\tsegmentBtnContainer = mainView.findViewById(R.id.next_segment_btn_container);\n+\t\tsegmentBtn = mainView.findViewById(R.id.next_segment_btn);\n+\t\twholeTrackBtnContainer = mainView.findViewById(R.id.whole_track_btn_container);\n+\t\twholeTrackBtn = mainView.findViewById(R.id.whole_track_btn);\n+\t\tbtnDescription = mainView.findViewById(R.id.button_description);\n+\n+\t\tLinearLayout navigationType = (LinearLayout) mainView.findViewById(R.id.navigation_types_container);\n+\t\tfinal List<ApplicationMode> modes = new ArrayList<>(ApplicationMode.values(app));\n+\t\tmodes.remove(ApplicationMode.DEFAULT);\n+\n+\t\tView.OnClickListener onClickListener = new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View view) {\n+\t\t\t\tsnapToRoadEnabled = false;\n+\t\t\t\tif (listener != null) {\n+\t\t\t\t\tApplicationMode mode = null;\n+\t\t\t\t\tif ((int) view.getTag() != STRAIGHT_LINE_TAG) {\n+\t\t\t\t\t\tmode = modes.get((int) view.getTag());\n+\t\t\t\t\t\tsnapToRoadEnabled = true;\n+\t\t\t\t\t}\n+\t\t\t\t\tlistener.onApplicationModeItemClick(mode);\n+\t\t\t\t}\n+\t\t\t\tdismiss();\n+\t\t\t}\n+\t\t};\n+\n+\t\tDrawable icon = app.getUIUtilities().getIcon(R.drawable.ic_action_split_interval, nightMode);\n+\t\taddProfileView(navigationType, onClickListener, STRAIGHT_LINE_TAG, icon,\n+\t\t\t\tapp.getText(R.string.routing_profile_straightline), snapToRoadAppMode == null);\n+\t\taddDelimiterView(navigationType);\n+\n+\t\tfor (int i = 0; i < modes.size(); i++) {\n+\t\t\tApplicationMode mode = modes.get(i);\n+\t\t\ticon = app.getUIUtilities().getIcon(mode.getIconRes(), mode.getIconColorInfo().getColor(nightMode));\n+\t\t\taddProfileView(navigationType, onClickListener, i, icon, mode.toHumanString(), mode.equals(snapToRoadAppMode));\n+\t\t}\n+\n+\t\tsegmentBtn.setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tupdateModeButtons(NEXT_SEGMENT);\n+\t\t\t}\n+\t\t});\n+\t\twholeTrackBtn.setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tupdateModeButtons(WHOLE_TRACK);\n+\t\t\t}\n+\t\t});\n+\t\tupdateModeButtons(calculationType);\n+\t\treturn mainView;\n+\t}\n+\n+\tprivate void addDelimiterView(LinearLayout container) {\n+\t\tView row = UiUtilities.getInflater(getContext(), nightMode).inflate(R.layout.divider, container, false);\n+\t\tView divider = row.findViewById(R.id.divider);\n+\t\tViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) divider.getLayoutParams();\n+\t\tparams.topMargin = container.getContext().getResources().getDimensionPixelSize(R.dimen.bottom_sheet_title_padding_bottom);\n+\t\tparams.bottomMargin = container.getContext().getResources().getDimensionPixelSize(R.dimen.bottom_sheet_title_padding_bottom);\n+\t\tcontainer.addView(row);\n+\t}\n+\n+\tprivate void updateModeButtons(CalculationType calculationType) {\n+\t\tOsmandApplication app = requiredMyApplication();\n+\t\tint activeColor = ContextCompat.getColor(app, nightMode\n+\t\t\t\t? R.color.active_color_primary_dark\n+\t\t\t\t: R.color.active_color_primary_light);\n+\t\tint textColor = ContextCompat.getColor(app, nightMode\n+\t\t\t\t? R.color.text_color_primary_dark\n+\t\t\t\t: R.color.text_color_primary_light);\n+\t\tint radius = AndroidUtils.dpToPx(app, 4);\n+\n+\t\tGradientDrawable background = new GradientDrawable();", "originalCommit": "8b58751667a190c14ee72d641885454f94449280", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3OTY3MA==", "url": "https://github.com/osmandapp/OsmAnd/pull/9569#discussion_r465779670", "bodyText": "Fix screen rotate", "author": "max-klaus", "createdAt": "2020-08-05T14:43:54Z", "path": "OsmAnd/src/net/osmand/plus/measurementtool/RouteBetweenPointsBottomSheetDialogFragment.java", "diffHunk": "@@ -0,0 +1,253 @@\n+package net.osmand.plus.measurementtool;\n+\n+import android.app.Dialog;\n+import android.graphics.Color;\n+import android.graphics.drawable.Drawable;\n+import android.graphics.drawable.GradientDrawable;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.Window;\n+import android.view.WindowManager;\n+import android.widget.FrameLayout;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.RadioButton;\n+import android.widget.TextView;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.content.ContextCompat;\n+import androidx.fragment.app.FragmentActivity;\n+import androidx.fragment.app.FragmentManager;\n+\n+import net.osmand.AndroidUtils;\n+import net.osmand.PlatformUtil;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.UiUtilities;\n+import net.osmand.plus.base.BottomSheetDialogFragment;\n+import net.osmand.plus.helpers.AndroidUiHelper;\n+import net.osmand.plus.measurementtool.MeasurementEditingContext.CalculationType;\n+import net.osmand.plus.settings.backend.ApplicationMode;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static net.osmand.plus.measurementtool.MeasurementEditingContext.CalculationType.NEXT_SEGMENT;\n+import static net.osmand.plus.measurementtool.MeasurementEditingContext.CalculationType.WHOLE_TRACK;\n+\n+public class RouteBetweenPointsBottomSheetDialogFragment extends BottomSheetDialogFragment {\n+\n+\tprivate static final Log LOG = PlatformUtil.getLog(RouteBetweenPointsBottomSheetDialogFragment.class);\n+\tpublic static final String TAG = RouteBetweenPointsBottomSheetDialogFragment.class.getSimpleName();\n+\tpublic static final int STRAIGHT_LINE_TAG = -1;\n+\n+\tprivate RouteBetweenPointsFragmentListener listener;\n+\tprivate boolean nightMode;\n+\tprivate boolean portrait;\n+\tprivate boolean snapToRoadEnabled;\n+\tprivate TextView segmentBtn;\n+\tprivate TextView wholeTrackBtn;\n+\tprivate TextView btnDescription;\n+\tprivate FrameLayout segmentBtnContainer;\n+\tprivate FrameLayout wholeTrackBtnContainer;\n+\tprivate CalculationType calculationType = WHOLE_TRACK;\n+\tprivate ApplicationMode snapToRoadAppMode;\n+\n+\tpublic void setListener(RouteBetweenPointsFragmentListener listener) {\n+\t\tthis.listener = listener;\n+\t}\n+\n+\t@Nullable\n+\t@Override\n+\tpublic View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+\t\tOsmandApplication app = requiredMyApplication();\n+\t\tnightMode = app.getDaynightHelper().isNightModeForMapControls();\n+\t\tFragmentActivity activity = requireActivity();\n+\t\tportrait = AndroidUiHelper.isOrientationPortrait(activity);\n+\t\tfinal View mainView = inflater.inflate(R.layout.fragment_route_between_points_bottom_sheet_dialog,\n+\t\t\t\tcontainer, false);\n+\t\tAndroidUtils.setBackground(activity, mainView, nightMode,\n+\t\t\t\tportrait ? R.drawable.bg_bottom_menu_light : R.drawable.bg_bottom_sheet_topsides_landscape_light,\n+\t\t\t\tportrait ? R.drawable.bg_bottom_menu_dark : R.drawable.bg_bottom_sheet_topsides_landscape_dark);\n+\n+\t\tView cancelButton = mainView.findViewById(R.id.dismiss_button);\n+\t\tUiUtilities.setupDialogButton(nightMode, cancelButton, UiUtilities.DialogButtonType.SECONDARY,\n+\t\t\t\tR.string.shared_string_close);\n+\t\tmainView.findViewById(R.id.dismiss_button).setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View view) {\n+\t\t\t\tdismiss();\n+\t\t\t}\n+\t\t});\n+\t\tsegmentBtnContainer = mainView.findViewById(R.id.next_segment_btn_container);\n+\t\tsegmentBtn = mainView.findViewById(R.id.next_segment_btn);\n+\t\twholeTrackBtnContainer = mainView.findViewById(R.id.whole_track_btn_container);\n+\t\twholeTrackBtn = mainView.findViewById(R.id.whole_track_btn);\n+\t\tbtnDescription = mainView.findViewById(R.id.button_description);\n+\n+\t\tLinearLayout navigationType = (LinearLayout) mainView.findViewById(R.id.navigation_types_container);\n+\t\tfinal List<ApplicationMode> modes = new ArrayList<>(ApplicationMode.values(app));\n+\t\tmodes.remove(ApplicationMode.DEFAULT);\n+\n+\t\tView.OnClickListener onClickListener = new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View view) {\n+\t\t\t\tsnapToRoadEnabled = false;\n+\t\t\t\tif (listener != null) {\n+\t\t\t\t\tApplicationMode mode = null;\n+\t\t\t\t\tif ((int) view.getTag() != STRAIGHT_LINE_TAG) {\n+\t\t\t\t\t\tmode = modes.get((int) view.getTag());\n+\t\t\t\t\t\tsnapToRoadEnabled = true;\n+\t\t\t\t\t}\n+\t\t\t\t\tlistener.onApplicationModeItemClick(mode);\n+\t\t\t\t}\n+\t\t\t\tdismiss();\n+\t\t\t}\n+\t\t};\n+\n+\t\tDrawable icon = app.getUIUtilities().getIcon(R.drawable.ic_action_split_interval, nightMode);\n+\t\taddProfileView(navigationType, onClickListener, STRAIGHT_LINE_TAG, icon,\n+\t\t\t\tapp.getText(R.string.routing_profile_straightline), snapToRoadAppMode == null);\n+\t\taddDelimiterView(navigationType);\n+\n+\t\tfor (int i = 0; i < modes.size(); i++) {\n+\t\t\tApplicationMode mode = modes.get(i);\n+\t\t\ticon = app.getUIUtilities().getIcon(mode.getIconRes(), mode.getIconColorInfo().getColor(nightMode));\n+\t\t\taddProfileView(navigationType, onClickListener, i, icon, mode.toHumanString(), mode.equals(snapToRoadAppMode));\n+\t\t}\n+\n+\t\tsegmentBtn.setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tupdateModeButtons(NEXT_SEGMENT);\n+\t\t\t}\n+\t\t});\n+\t\twholeTrackBtn.setOnClickListener(new View.OnClickListener() {\n+\t\t\t@Override\n+\t\t\tpublic void onClick(View v) {\n+\t\t\t\tupdateModeButtons(WHOLE_TRACK);\n+\t\t\t}\n+\t\t});\n+\t\tupdateModeButtons(calculationType);\n+\t\treturn mainView;\n+\t}\n+\n+\tprivate void addDelimiterView(LinearLayout container) {\n+\t\tView row = UiUtilities.getInflater(getContext(), nightMode).inflate(R.layout.divider, container, false);\n+\t\tView divider = row.findViewById(R.id.divider);\n+\t\tViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) divider.getLayoutParams();\n+\t\tparams.topMargin = container.getContext().getResources().getDimensionPixelSize(R.dimen.bottom_sheet_title_padding_bottom);\n+\t\tparams.bottomMargin = container.getContext().getResources().getDimensionPixelSize(R.dimen.bottom_sheet_title_padding_bottom);\n+\t\tcontainer.addView(row);\n+\t}\n+\n+\tprivate void updateModeButtons(CalculationType calculationType) {\n+\t\tOsmandApplication app = requiredMyApplication();\n+\t\tint activeColor = ContextCompat.getColor(app, nightMode\n+\t\t\t\t? R.color.active_color_primary_dark\n+\t\t\t\t: R.color.active_color_primary_light);\n+\t\tint textColor = ContextCompat.getColor(app, nightMode\n+\t\t\t\t? R.color.text_color_primary_dark\n+\t\t\t\t: R.color.text_color_primary_light);\n+\t\tint radius = AndroidUtils.dpToPx(app, 4);\n+\n+\t\tGradientDrawable background = new GradientDrawable();\n+\t\tbackground.setColor(UiUtilities.getColorWithAlpha(activeColor, 0.1f));\n+\t\tbackground.setStroke(AndroidUtils.dpToPx(app, 1), UiUtilities.getColorWithAlpha(activeColor, 0.5f));\n+\n+\t\tif (calculationType == NEXT_SEGMENT) {\n+\t\t\tbackground.setCornerRadii(new float[]{radius, radius, 0, 0, 0, 0, radius, radius});\n+\t\t\twholeTrackBtnContainer.setBackgroundColor(Color.TRANSPARENT);\n+\t\t\twholeTrackBtn.setTextColor(activeColor);\n+\t\t\tsegmentBtnContainer.setBackgroundDrawable(background);\n+\t\t\tsegmentBtn.setTextColor(textColor);\n+\t\t\tbtnDescription.setText(R.string.rourte_between_points_next_segment_button_desc);\n+\t\t} else {\n+\t\t\tbackground.setCornerRadii(new float[]{0, 0, radius, radius, radius, radius, 0, 0});\n+\t\t\twholeTrackBtnContainer.setBackgroundDrawable(background);\n+\t\t\twholeTrackBtn.setTextColor(textColor);\n+\t\t\tsegmentBtnContainer.setBackgroundColor(Color.TRANSPARENT);\n+\t\t\tsegmentBtn.setTextColor(activeColor);\n+\t\t\tbtnDescription.setText(R.string.rourte_between_points_whole_track_button_desc);\n+\t\t}\n+\t\tsetCalculationType(calculationType);\n+\t\tif (listener != null) {\n+\t\t\tlistener.onCalculationTypeChanges(calculationType);\n+\t\t}\n+\t}\n+\n+\tprivate void addProfileView(LinearLayout container, View.OnClickListener onClickListener, Object tag,\n+\t                            Drawable icon, CharSequence title, boolean check) {\n+\t\tView row = UiUtilities.getInflater(getContext(), nightMode)\n+\t\t\t\t.inflate(R.layout.bottom_sheet_item_with_radio_btn, container, false);\n+\t\t((RadioButton) row.findViewById(R.id.compound_button)).setChecked(check);\n+\t\tImageView imageView = row.findViewById(R.id.icon);\n+\t\timageView.setImageDrawable(icon);\n+\t\tViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) imageView.getLayoutParams();\n+\t\tparams.rightMargin = container.getContext().getResources().getDimensionPixelSize(R.dimen.bottom_sheet_icon_margin_large);\n+\t\t((TextView) row.findViewById(R.id.title)).setText(title);\n+\t\trow.setOnClickListener(onClickListener);\n+\t\trow.setTag(tag);\n+\t\tcontainer.addView(row);\n+\t}\n+\n+\t@Override\n+\tpublic void onStart() {\n+\t\tsuper.onStart();\n+\t\tif (!portrait) {\n+\t\t\tDialog dialog = getDialog();\n+\t\t\tif (dialog != null && dialog.getWindow() != null) {\n+\t\t\t\tWindow window = dialog.getWindow();\n+\t\t\t\tWindowManager.LayoutParams params = window.getAttributes();\n+\t\t\t\tparams.width = dialog.getContext().getResources().getDimensionPixelSize(R.dimen.landscape_bottom_sheet_dialog_fragment_width);\n+\t\t\t\twindow.setAttributes(params);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void onDestroyView() {\n+\t\tif (listener != null) {\n+\t\t\tlistener.onDestroyView(snapToRoadEnabled);\n+\t\t}\n+\t\tsuper.onDestroyView();\n+\t}\n+\n+\n+\tpublic void setRouteMode(ApplicationMode snapToRoadAppMode) {\n+\t\tthis.snapToRoadAppMode = snapToRoadAppMode;\n+\t}\n+\n+\tpublic void setCalculationType(CalculationType calculationType) {\n+\t\tthis.calculationType = calculationType;\n+\t}\n+\n+\tpublic static void showInstance(FragmentManager fm, RouteBetweenPointsFragmentListener listener,\n+\t                                CalculationType calculationType, ApplicationMode applicationMode) {\n+\t\ttry {\n+\t\t\tif (!fm.isStateSaved()) {\n+\t\t\t\tRouteBetweenPointsBottomSheetDialogFragment fragment = new RouteBetweenPointsBottomSheetDialogFragment();\n+\t\t\t\tfragment.setListener(listener);", "originalCommit": "8b58751667a190c14ee72d641885454f94449280", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3OTgzMw==", "url": "https://github.com/osmandapp/OsmAnd/pull/9569#discussion_r465779833", "bodyText": "Fix screen rotate", "author": "max-klaus", "createdAt": "2020-08-05T14:44:07Z", "path": "OsmAnd/src/net/osmand/plus/measurementtool/OptionsBottomSheetDialogFragment.java", "diffHunk": "@@ -164,6 +158,33 @@ public void onClick(View v) {\n \t\t\t\t.create();\n \t}\n \n+\t@Override\n+\tpublic void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n+\t\tsuper.onViewCreated(view, savedInstanceState);\n+\t\tImageView icon = view.findViewById(R.id.icon);\n+\t\tViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) icon.getLayoutParams();\n+\t\tparams.rightMargin = view.getContext().getResources().getDimensionPixelSize(R.dimen.bottom_sheet_icon_margin_large);\n+\t}\n+\n+\tpublic static void showInstance(@NonNull FragmentManager fm, boolean trackSnappedToRoad, boolean snapToRoad,\n+\t                                ApplicationMode routeAppMode, OptionsFragmentListener optionsFragmentListener) {\n+\t\ttry {\n+\t\t\tif (!fm.isStateSaved()) {\n+\t\t\t\tBundle args = new Bundle();\n+\t\t\t\targs.putBoolean(TRACK_SNAPPED_TO_ROAD_KEY, trackSnappedToRoad);\n+\t\t\t\targs.putBoolean(SNAP_TO_ROAD_ENABLED_KEY, snapToRoad);\n+\t\t\t\tOptionsBottomSheetDialogFragment fragment = new OptionsBottomSheetDialogFragment();\n+\t\t\t\tfragment.setArguments(args);\n+\t\t\t\tfragment.setRouteAppMode(routeAppMode);", "originalCommit": "8b58751667a190c14ee72d641885454f94449280", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fff9a415d5ca210113738bfca5bdc000f706f54a", "url": "https://github.com/osmandapp/OsmAnd/commit/fff9a415d5ca210113738bfca5bdc000f706f54a", "message": "Fix listeners", "committedDate": "2020-08-06T09:40:09Z", "type": "commit"}, {"oid": "04e7a8a0d7587fac05fd893407a93aaaeb53afc8", "url": "https://github.com/osmandapp/OsmAnd/commit/04e7a8a0d7587fac05fd893407a93aaaeb53afc8", "message": "Fix custom radio button", "committedDate": "2020-08-06T12:40:19Z", "type": "commit"}, {"oid": "2a72f09b579955792a7f5098da3d65e120141e33", "url": "https://github.com/osmandapp/OsmAnd/commit/2a72f09b579955792a7f5098da3d65e120141e33", "message": "Fix rotate", "committedDate": "2020-08-07T07:22:48Z", "type": "commit"}, {"oid": "e61bebebd3fd42b0dfa7cc894ccae243071210f7", "url": "https://github.com/osmandapp/OsmAnd/commit/e61bebebd3fd42b0dfa7cc894ccae243071210f7", "message": "Fix InitialMenuState", "committedDate": "2020-08-07T08:24:15Z", "type": "commit"}]}