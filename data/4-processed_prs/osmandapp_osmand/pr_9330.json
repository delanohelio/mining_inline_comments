{"pr_number": 9330, "pr_title": "Gpx track appearance", "pr_createdAt": "2020-06-26T08:38:19Z", "pr_url": "https://github.com/osmandapp/OsmAnd/pull/9330", "timeline": [{"oid": "dbfb379cc8a07a1f72f44535c80c6e80deb7d6a1", "url": "https://github.com/osmandapp/OsmAnd/commit/dbfb379cc8a07a1f72f44535c80c6e80deb7d6a1", "message": "Gpx width per file", "committedDate": "2020-07-07T09:28:43Z", "type": "commit"}, {"oid": "ddd66a9f84dce160f8e5fa1875b25cba5ea9d851", "url": "https://github.com/osmandapp/OsmAnd/commit/ddd66a9f84dce160f8e5fa1875b25cba5ea9d851", "message": "Fix track width draw cache", "committedDate": "2020-07-07T09:28:43Z", "type": "commit"}, {"oid": "5dc3a5a484d313bee354d5621b4b6f6b048fd816", "url": "https://github.com/osmandapp/OsmAnd/commit/5dc3a5a484d313bee354d5621b4b6f6b048fd816", "message": "Add support for custom gpx width", "committedDate": "2020-07-07T09:28:43Z", "type": "commit"}, {"oid": "08a8281a8ce84c34162f6bb6a9a310394b42778e", "url": "https://github.com/osmandapp/OsmAnd/commit/08a8281a8ce84c34162f6bb6a9a310394b42778e", "message": "Add show arrows and show start finish gpx params", "committedDate": "2020-07-07T09:28:43Z", "type": "commit"}, {"oid": "94919b25a5c51c583d8f0d19500b6018ad3d728c", "url": "https://github.com/osmandapp/OsmAnd/commit/94919b25a5c51c583d8f0d19500b6018ad3d728c", "message": "Fix merge conflicts", "committedDate": "2020-07-07T09:28:43Z", "type": "commit"}, {"oid": "a0c83cf8b527645ce98d562a276c1c0708649403", "url": "https://github.com/osmandapp/OsmAnd/commit/a0c83cf8b527645ce98d562a276c1c0708649403", "message": "Add track gradient scale types", "committedDate": "2020-07-07T09:28:43Z", "type": "commit"}, {"oid": "15e26432f8a87f1dddff7e599d4916dba6af127c", "url": "https://github.com/osmandapp/OsmAnd/commit/15e26432f8a87f1dddff7e599d4916dba6af127c", "message": "Add selected gradient scale type for track", "committedDate": "2020-07-07T09:28:43Z", "type": "commit"}, {"oid": "3bab88942a8d9fdb872e158c449b1fc1131a803d", "url": "https://github.com/osmandapp/OsmAnd/commit/3bab88942a8d9fdb872e158c449b1fc1131a803d", "message": "Fix track gradient scale color", "committedDate": "2020-07-07T09:28:43Z", "type": "commit"}, {"oid": "03951910fde453dad0873dc1a6821b3b631948a1", "url": "https://github.com/osmandapp/OsmAnd/commit/03951910fde453dad0873dc1a6821b3b631948a1", "message": "Add track start and finish icons to map layer", "committedDate": "2020-07-07T09:28:43Z", "type": "commit"}, {"oid": "5f60f452c0678813699f4e1d72c26c0bbf4a5b09", "url": "https://github.com/osmandapp/OsmAnd/commit/5f60f452c0678813699f4e1d72c26c0bbf4a5b09", "message": "Change gradient parameters names", "committedDate": "2020-07-07T09:28:43Z", "type": "commit"}, {"oid": "c18b5ba25c5b2ba9cf2b06d6db9c6571df42a844", "url": "https://github.com/osmandapp/OsmAnd/commit/c18b5ba25c5b2ba9cf2b06d6db9c6571df42a844", "message": "Fix gpx files import", "committedDate": "2020-07-07T09:28:43Z", "type": "commit"}, {"oid": "c18b5ba25c5b2ba9cf2b06d6db9c6571df42a844", "url": "https://github.com/osmandapp/OsmAnd/commit/c18b5ba25c5b2ba9cf2b06d6db9c6571df42a844", "message": "Fix gpx files import", "committedDate": "2020-07-07T09:28:43Z", "type": "forcePushed"}, {"oid": "2284de7055494e59606cb5e5eed1cf123bf3bcdd", "url": "https://github.com/osmandapp/OsmAnd/commit/2284de7055494e59606cb5e5eed1cf123bf3bcdd", "message": "Load gpx split type from file", "committedDate": "2020-07-07T11:15:48Z", "type": "commit"}, {"oid": "f178a292c1543ea0585d6c6f2f24d7778dc83f8a", "url": "https://github.com/osmandapp/OsmAnd/commit/f178a292c1543ea0585d6c6f2f24d7778dc83f8a", "message": "Merge branch 'master' into gpx_appearance", "committedDate": "2020-07-08T09:29:59Z", "type": "commit"}, {"oid": "4eabba3489cecc6129d35829114a294c2be66052", "url": "https://github.com/osmandapp/OsmAnd/commit/4eabba3489cecc6129d35829114a294c2be66052", "message": "Show track start finish icons by default", "committedDate": "2020-07-08T10:03:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwMTEzNA==", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453201134", "bodyText": "Why put null?", "author": "max-klaus", "createdAt": "2020-07-11T14:37:12Z", "path": "OsmAnd-java/src/main/java/net/osmand/GPXUtilities.java", "diffHunk": "@@ -1511,6 +1513,139 @@ public QuadRect getRect() {\n \t\t\t}\n \t\t\treturn new QuadRect(left, top, right, bottom);\n \t\t}\n+\n+\t\tpublic int getGradientScaleColor(GradientScaleType gradientScaleType, int defColor) {\n+\t\t\tString clrValue = null;\n+\t\t\tif (extensions != null) {\n+\t\t\t\tclrValue = extensions.get(gradientScaleType.getTypeName());\n+\t\t\t}\n+\t\t\treturn parseColor(clrValue, defColor);\n+\t\t}\n+\n+\t\tpublic void setGradientScaleColor(GradientScaleType gradientScaleType, int gradientScaleColor) {\n+\t\t\tgetExtensionsToWrite().put(gradientScaleType.getTypeName(), Algorithms.colorToString(gradientScaleColor));\n+\t\t}\n+\n+\t\tpublic GradientScaleType getGradientScaleType() {\n+\t\t\tif (extensions != null) {\n+\t\t\t\tString gradientScaleTypeName = extensions.get(\"gradient_scale_type\");\n+\t\t\t\tif (!Algorithms.isEmpty(gradientScaleTypeName)) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\treturn GradientScaleType.valueOf(gradientScaleTypeName);\n+\t\t\t\t\t} catch (IllegalArgumentException e) {\n+\t\t\t\t\t\tlog.error(\"Error reading gradientScaleType\", e);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tpublic void setGradientScaleType(GradientScaleType gradientScaleType) {\n+\t\t\tgetExtensionsToWrite().put(\"gradient_scale_type\", gradientScaleType != null ? gradientScaleType.name() : null);", "originalCommit": "4eabba3489cecc6129d35829114a294c2be66052", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwMTE1OQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453201159", "bodyText": "Why put null?", "author": "max-klaus", "createdAt": "2020-07-11T14:37:18Z", "path": "OsmAnd-java/src/main/java/net/osmand/GPXUtilities.java", "diffHunk": "@@ -1511,6 +1513,139 @@ public QuadRect getRect() {\n \t\t\t}\n \t\t\treturn new QuadRect(left, top, right, bottom);\n \t\t}\n+\n+\t\tpublic int getGradientScaleColor(GradientScaleType gradientScaleType, int defColor) {\n+\t\t\tString clrValue = null;\n+\t\t\tif (extensions != null) {\n+\t\t\t\tclrValue = extensions.get(gradientScaleType.getTypeName());\n+\t\t\t}\n+\t\t\treturn parseColor(clrValue, defColor);\n+\t\t}\n+\n+\t\tpublic void setGradientScaleColor(GradientScaleType gradientScaleType, int gradientScaleColor) {\n+\t\t\tgetExtensionsToWrite().put(gradientScaleType.getTypeName(), Algorithms.colorToString(gradientScaleColor));\n+\t\t}\n+\n+\t\tpublic GradientScaleType getGradientScaleType() {\n+\t\t\tif (extensions != null) {\n+\t\t\t\tString gradientScaleTypeName = extensions.get(\"gradient_scale_type\");\n+\t\t\t\tif (!Algorithms.isEmpty(gradientScaleTypeName)) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\treturn GradientScaleType.valueOf(gradientScaleTypeName);\n+\t\t\t\t\t} catch (IllegalArgumentException e) {\n+\t\t\t\t\t\tlog.error(\"Error reading gradientScaleType\", e);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tpublic void setGradientScaleType(GradientScaleType gradientScaleType) {\n+\t\t\tgetExtensionsToWrite().put(\"gradient_scale_type\", gradientScaleType != null ? gradientScaleType.name() : null);\n+\t\t}\n+\n+\t\tpublic GpxSplitType getSplitType() {\n+\t\t\tif (extensions != null) {\n+\t\t\t\tString gradientScaleTypeName = extensions.get(\"split_type\");\n+\t\t\t\tif (!Algorithms.isEmpty(gradientScaleTypeName)) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\treturn GpxSplitType.valueOf(gradientScaleTypeName);\n+\t\t\t\t\t} catch (IllegalArgumentException e) {\n+\t\t\t\t\t\tlog.error(\"Error reading GpxSplitType\", e);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tpublic void setSplitType(GpxSplitType gpxSplitType) {\n+\t\t\tgetExtensionsToWrite().put(\"split_type\", gpxSplitType != null ? gpxSplitType.name() : null);", "originalCommit": "4eabba3489cecc6129d35829114a294c2be66052", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwNTQxOQ==", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453205419", "bodyText": "Introduce new constructor public GpxDataItem(File file, GPXFile gpx) and drop all these setters.", "author": "max-klaus", "createdAt": "2020-07-11T15:25:46Z", "path": "OsmAnd/src/net/osmand/plus/helpers/ImportHelper.java", "diffHunk": "@@ -1018,7 +1019,18 @@ private String saveImport(final GPXFile gpxFile, final String fileName, final bo\n \t\t\t\t\tFile file = new File(gpxFile.path);\n \t\t\t\t\tif (!destinationExists) {\n \t\t\t\t\t\tGPXDatabase.GpxDataItem item = new GPXDatabase.GpxDataItem(file, gpxFile.getColor(0));\n+\t\t\t\t\t\titem.setWidth(gpxFile.getWidth(null));", "originalCommit": "4eabba3489cecc6129d35829114a294c2be66052", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwNjM3Nw==", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453206377", "bodyText": "7?", "author": "max-klaus", "createdAt": "2020-07-11T15:35:53Z", "path": "OsmAnd/src/net/osmand/plus/views/GPXLayer.java", "diffHunk": "@@ -213,36 +209,36 @@ public void onPrepareBufferImage(Canvas canvas, RotatedTileBox tileBox, DrawSett\n \t\t\t}\n \t\t\tdrawSelectedFilesSplits(canvas, tileBox, selectedGPXFiles, settings);\n \t\t\tdrawSelectedFilesPoints(canvas, tileBox, selectedGPXFiles);\n+\t\t\tdrawSelectedFilesStartEndPoints(canvas, tileBox, selectedGPXFiles);\n \t\t}\n \t\tif (textLayer != null && isTextVisible()) {\n \t\t\ttextLayer.putData(this, cache);\n \t\t}\n \n \t}\n \n-\tprivate int updatePaints(int color, boolean routePoints, boolean currentTrack, DrawSettings nightMode, RotatedTileBox tileBox) {\n+\tprivate int updatePaints(int color, String width, boolean routePoints, boolean currentTrack, DrawSettings drawSettings, RotatedTileBox tileBox) {\n \t\tRenderingRulesStorage rrs = view.getApplication().getRendererRegistry().getCurrentSelectedRenderer();\n-\t\tfinal boolean isNight = nightMode != null && nightMode.isNightMode();\n-\t\tint hsh = calculateHash(rrs, routePoints, isNight, tileBox.getMapDensity(), tileBox.getZoom(),\n-\t\t\tcurrentTrackColorPref.get(), currentTrackWidthPref.get());\n-\t\tif (hsh != cachedHash) {\n-\t\t\tcachedHash = hsh;\n+\t\tboolean nightMode = drawSettings != null && drawSettings.isNightMode();\n+\t\tint hash = calculateHash(rrs, cachedTrackWidth, routePoints, nightMode, tileBox.getMapDensity(), tileBox.getZoom(),\n+\t\t\t\tcurrentTrackColorPref.get(), currentTrackWidthPref.get());\n+\t\tif (hash != cachedHash) {\n+\t\t\tcachedHash = hash;\n \t\t\tcachedColor = ContextCompat.getColor(view.getApplication(), R.color.gpx_track);\n+\t\t\tdefaultTrackWidth = 7 * view.getDensity();", "originalCommit": "4eabba3489cecc6129d35829114a294c2be66052", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUwNDQzNw==", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453504437", "bodyText": "It was moved from here - https://github.com/osmandapp/Osmand/pull/9330/files#diff-3259c804faea84b62ab64ab1e0f87b01L277 for cases where track width parameter wasn't acquired from renderer or custom width has an invalid value.", "author": "Chumva", "createdAt": "2020-07-13T09:07:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwNjM3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwNjUyMA==", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453206520", "bodyText": "searchTrackWidth > fetchTrackWidth or acquireTrackWidth", "author": "max-klaus", "createdAt": "2020-07-11T15:37:42Z", "path": "OsmAnd/src/net/osmand/plus/views/GPXLayer.java", "diffHunk": "@@ -262,32 +258,60 @@ private int updatePaints(int color, boolean routePoints, boolean currentTrack, D\n \t\t\t\t\trc.setDensityValue((float) tileBox.getMapDensity());\n \t\t\t\t\tcachedColor = req.getIntPropertyValue(rrs.PROPS.R_COLOR);\n \t\t\t\t\tosmandRenderer.updatePaint(req, paint, 0, false, rc);\n-\t\t\t\t\tisPaint2 = osmandRenderer.updatePaint(req, paint2, 1, false, rc);\n-\t\t\t\t\tisPaint_1 = osmandRenderer.updatePaint(req, paint_1, -1, false, rc);\n-\t\t\t\t\tisShadowPaint = req.isSpecified(rrs.PROPS.R_SHADOW_RADIUS);\n-\t\t\t\t\tif (isShadowPaint) {\n-\t\t\t\t\t\tColorFilter cf = new PorterDuffColorFilter(req.getIntPropertyValue(rrs.PROPS.R_SHADOW_COLOR),\n-\t\t\t\t\t\t\t\tMode.SRC_IN);\n-\t\t\t\t\t\tshadowPaint.setColorFilter(cf);\n-\t\t\t\t\t\tshadowPaint.setStrokeWidth(paint.getStrokeWidth() + 2\n-\t\t\t\t\t\t\t\t* rc.getComplexValue(req, rrs.PROPS.R_SHADOW_RADIUS));\n+\n+\t\t\t\t\tif (req.isSpecified(rrs.PROPS.R_SHADOW_RADIUS)) {\n+\t\t\t\t\t\tint shadowColor = req.getIntPropertyValue(rrs.PROPS.R_SHADOW_COLOR);\n+\t\t\t\t\t\tfloat shadowRadius = rc.getComplexValue(req, rrs.PROPS.R_SHADOW_RADIUS);\n+\t\t\t\t\t\tshadowPaint.setColorFilter(new PorterDuffColorFilter(shadowColor, Mode.SRC_IN));\n+\t\t\t\t\t\tshadowPaint.setStrokeWidth(paint.getStrokeWidth() + 2 * shadowRadius);\n+\t\t\t\t\t}\n+\t\t\t\t\tfor (String key : cachedTrackWidth.keySet()) {\n+\t\t\t\t\t\tsearchTrackWidth(key, rrs, req, rc);\n \t\t\t\t\t}\n \t\t\t\t} else {\n-\t\t\t\t\tSystem.err.println(\"Rendering attribute gpx is not found !\");\n-\t\t\t\t\tpaint.setStrokeWidth(7 * view.getDensity());\n+\t\t\t\t\tlog.error(\"Rendering attribute gpx is not found !\");\n+\t\t\t\t\tfor (String key : cachedTrackWidth.keySet()) {\n+\t\t\t\t\t\tcachedTrackWidth.put(key, defaultTrackWidth);\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\tpaint.setColor(color == 0 ? cachedColor : color);\n+\t\tFloat strikeWidth = cachedTrackWidth.get(width);\n+\t\tif (strikeWidth != null) {\n+\t\t\tpaint.setStrokeWidth(strikeWidth);\n+\t\t}\n \t\treturn cachedColor;\n \t}\n \n+\tprivate void searchTrackWidth(String widthKey, RenderingRulesStorage rrs, RenderingRuleSearchRequest req, RenderingContext rc) {", "originalCommit": "4eabba3489cecc6129d35829114a294c2be66052", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b7c1fe6ba792e690db92e18fcf4dac68666865e8", "url": "https://github.com/osmandapp/OsmAnd/commit/b7c1fe6ba792e690db92e18fcf4dac68666865e8", "message": "Remove unnecessary setters from GpxDataItem", "committedDate": "2020-07-13T09:03:20Z", "type": "commit"}, {"oid": "4d81d797dbaca42228bcffa8badf00d4bd1a41f9", "url": "https://github.com/osmandapp/OsmAnd/commit/4d81d797dbaca42228bcffa8badf00d4bd1a41f9", "message": "Add constant for default width multiplier", "committedDate": "2020-07-13T09:11:10Z", "type": "commit"}, {"oid": "9de83eed83c0364cc3c33d44ab35a4bfbc3fe994", "url": "https://github.com/osmandapp/OsmAnd/commit/9de83eed83c0364cc3c33d44ab35a4bfbc3fe994", "message": "Merge branch 'master' into gpx_appearance", "committedDate": "2020-07-13T09:25:58Z", "type": "commit"}, {"oid": "7a18f2e5cada96d5e3819a5437bbdb3c673d5707", "url": "https://github.com/osmandapp/OsmAnd/commit/7a18f2e5cada96d5e3819a5437bbdb3c673d5707", "message": "Remove unnecessary annotations", "committedDate": "2020-07-13T09:29:56Z", "type": "commit"}]}