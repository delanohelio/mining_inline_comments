{"pr_number": 1364, "pr_title": "MINOR: propagate exception", "pr_createdAt": "2020-02-29T01:34:09Z", "pr_url": "https://github.com/confluentinc/schema-registry/pull/1364", "timeline": [{"oid": "76766a71269402eebb637ad29dcb4a953eee6d4f", "url": "https://github.com/confluentinc/schema-registry/commit/76766a71269402eebb637ad29dcb4a953eee6d4f", "message": "MINOR: propagate exception", "committedDate": "2020-02-29T01:33:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4ODgzMw==", "url": "https://github.com/confluentinc/schema-registry/pull/1364#discussion_r385988833", "bodyText": "Can we build the string just once here ?", "author": "dragosvictor", "createdAt": "2020-02-29T01:36:23Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -809,7 +809,7 @@ private void canonicalizeSchema(Schema schema) throws InvalidSchemaException {\n       parsedSchema.rawSchema();\n     } catch (Exception e) {\n       log.error(\"Invalid schema \" + schema);\n-      throw new InvalidSchemaException(\"Invalid schema \" + schema);\n+      throw new InvalidSchemaException(\"Invalid schema \" + schema, e);", "originalCommit": "76766a71269402eebb637ad29dcb4a953eee6d4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4OTE2NA==", "url": "https://github.com/confluentinc/schema-registry/pull/1364#discussion_r385989164", "bodyText": "Sure, good idea, thanks", "author": "rayokota", "createdAt": "2020-02-29T01:40:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4ODgzMw=="}], "type": "inlineReview"}, {"oid": "6c8a8bbeb3bd97de5878763fb500f5bafb31e2c9", "url": "https://github.com/confluentinc/schema-registry/commit/6c8a8bbeb3bd97de5878763fb500f5bafb31e2c9", "message": "Minor cleanup of err msgs", "committedDate": "2020-02-29T01:40:47Z", "type": "commit"}]}