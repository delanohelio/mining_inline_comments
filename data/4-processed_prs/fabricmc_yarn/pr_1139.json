{"pr_number": 1139, "pr_title": "A couple of additions to PointOfInterestStorage", "pr_createdAt": "2020-02-27T00:26:37Z", "pr_url": "https://github.com/FabricMC/yarn/pull/1139", "timeline": [{"oid": "6eb4c9eee15c7adaf84159caa7ffd6a092df4a4d", "url": "https://github.com/FabricMC/yarn/commit/6eb4c9eee15c7adaf84159caa7ffd6a092df4a4d", "message": "A couple of additions to PointOfInterestStorage", "committedDate": "2020-02-27T00:24:21Z", "type": "commit"}, {"oid": "8fa8f73e4caffd81a84a4ba9d039fb09a5e12d23", "url": "https://github.com/FabricMC/yarn/commit/8fa8f73e4caffd81a84a4ba9d039fb09a5e12d23", "message": "getX -> getInX", "committedDate": "2020-02-27T00:26:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg4MzQ1Mg==", "url": "https://github.com/FabricMC/yarn/pull/1139#discussion_r384883452", "bodyText": "I'd keep other methods named get as they can be distinguished by param types; for the square and circle one i'd name them getInManhattan getInEuclidean", "author": "liach", "createdAt": "2020-02-27T02:36:08Z", "path": "mappings/net/minecraft/world/poi/PointOfInterestStorage.mapping", "diffHunk": "@@ -62,6 +63,16 @@ CLASS net/minecraft/class_4153 net/minecraft/world/poi/PointOfInterestStorage\n \t\tARG 3 pos\n \t\tARG 4 radius\n \t\tARG 5 occupationStatus\n+\tMETHOD method_22383 getInSquare (Ljava/util/function/Predicate;Lnet/minecraft/class_2338;ILnet/minecraft/class_4153$class_4155;)Ljava/util/stream/Stream;", "originalCommit": "8fa8f73e4caffd81a84a4ba9d039fb09a5e12d23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1MTU0Ng==", "url": "https://github.com/FabricMC/yarn/pull/1139#discussion_r385151546", "bodyText": "I would rather name them in terms of the shape, rather than in terms of the distance type, as the method returns a stream of all POIs in the shape, not sorted by distance. (Also, manhattan is a diamond shape, not a square).\nI would also prefer the other methods to be more specific in the name, as you don't often call these methods directly, and having a million different overloads of \"get\" that search different areas is confusing to read.", "author": "Earthcomputer", "createdAt": "2020-02-27T14:14:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg4MzQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNDI4Nw==", "url": "https://github.com/FabricMC/yarn/pull/1139#discussion_r385504287", "bodyText": "I agree with @Earthcomputer. If the methods were taking ChunkPos and ChunkSectionPos as parameters, then I'd say we should let the parameters disambiguate them, but here the only difference is an int or a long for the position.\nI don't mind the names circle and square, but if you really want to name them by distance type, it would be Chebyshev distance for the square.", "author": "Runemoro", "createdAt": "2020-02-28T04:38:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg4MzQ1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNDUwMQ==", "url": "https://github.com/FabricMC/yarn/pull/1139#discussion_r385504501", "bodyText": "Why not getInSubchunk (you said it's called this in the tech community)", "author": "liach", "createdAt": "2020-02-28T04:39:17Z", "path": "mappings/net/minecraft/world/poi/PointOfInterestStorage.mapping", "diffHunk": "@@ -10,15 +11,15 @@ CLASS net/minecraft/class_4153 net/minecraft/world/poi/PointOfInterestStorage\n \t\tARG 2 predicate\n \tMETHOD method_19118 getDistanceFromNearestOccupied (Lnet/minecraft/class_4076;)I\n \t\tARG 1 pos\n-\tMETHOD method_19119 get (Ljava/util/function/Predicate;JLnet/minecraft/class_4153$class_4155;)Ljava/util/stream/Stream;\n+\tMETHOD method_19119 getInChunkSection (Ljava/util/function/Predicate;JLnet/minecraft/class_4153$class_4155;)Ljava/util/stream/Stream;", "originalCommit": "8fa8f73e4caffd81a84a4ba9d039fb09a5e12d23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNDc4Mw==", "url": "https://github.com/FabricMC/yarn/pull/1139#discussion_r385504783", "bodyText": "I think renaming section to subchunk should be done in another PR. But I disagree with that, since \"section\" is present in NBT tags, debug screen, exception/log messages, Minecraft wiki.", "author": "Runemoro", "createdAt": "2020-02-28T04:40:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNDUwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNTA2Ng==", "url": "https://github.com/FabricMC/yarn/pull/1139#discussion_r385505066", "bodyText": "I go by the standard currently set by the yarn that I'm merging into, not by some discussion in an issue that was opened 5 minutes ago.", "author": "Earthcomputer", "createdAt": "2020-02-28T04:42:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNDUwMQ=="}], "type": "inlineReview"}]}