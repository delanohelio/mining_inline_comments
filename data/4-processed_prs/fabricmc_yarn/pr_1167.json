{"pr_number": 1167, "pr_title": "Realms mapped", "pr_createdAt": "2020-03-09T19:05:28Z", "pr_url": "https://github.com/FabricMC/yarn/pull/1167", "timeline": [{"oid": "58917cf3d313e9c085f3b8b82f9cb566bfd23f27", "url": "https://github.com/FabricMC/yarn/commit/58917cf3d313e9c085f3b8b82f9cb566bfd23f27", "message": "Realms mapped\n\nNow only 4 inner classes left in that giant block state data generator, planning to use cloak\n\nSigned-off-by: liach <liach@users.noreply.github.com>", "committedDate": "2020-03-09T19:04:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwODg2OQ==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r389908869", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tCOMMENT New method added in 20w10a.\n          \n          \n            \n            \t\tCOMMENT @since 20w10a", "author": "falseresync", "createdAt": "2020-03-09T19:22:07Z", "path": "mappings/com/mojang/realmsclient/dto/RealmsServer.mapping", "diffHunk": "@@ -0,0 +1,69 @@\n+CLASS net/minecraft/class_4877 com/mojang/realmsclient/dto/RealmsServer\n+\tFIELD field_22599 id J\n+\tFIELD field_22600 remoteSubscriptionId Ljava/lang/String;\n+\tFIELD field_22601 name Ljava/lang/String;\n+\tFIELD field_22602 motd Ljava/lang/String;\n+\tFIELD field_22603 state Lnet/minecraft/class_4877$class_4320;\n+\tFIELD field_22604 owner Ljava/lang/String;\n+\tFIELD field_22605 ownerUUID Ljava/lang/String;\n+\tFIELD field_22606 players Ljava/util/List;\n+\tFIELD field_22607 slots Ljava/util/Map;\n+\tFIELD field_22608 expired Z\n+\tFIELD field_22609 expiredTrial Z\n+\tFIELD field_22610 daysLeft I\n+\tFIELD field_22611 worldType Lnet/minecraft/class_4877$class_4321;\n+\tFIELD field_22612 activeSlot I\n+\tFIELD field_22613 minigameName Ljava/lang/String;\n+\tFIELD field_22614 minigameId I\n+\tFIELD field_22615 minigameImage Ljava/lang/String;\n+\tFIELD field_22616 serverPing Lnet/minecraft/class_4880;\n+\tFIELD field_22617 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tMETHOD equals (Ljava/lang/Object;)Z\n+\t\tARG 1 obj\n+\tMETHOD method_25053 getDescription ()Ljava/lang/String;\n+\tMETHOD method_25054 getWorldName (I)Ljava/lang/String;\n+\t\tCOMMENT New method added in 20w10a.", "originalCommit": "58917cf3d313e9c085f3b8b82f9cb566bfd23f27", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwOTQ5NQ==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r389909495", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tCOMMENT <p>This is a new class in 20w10a.\n          \n          \n            \n            \tCOMMENT @since 20w10a", "author": "falseresync", "createdAt": "2020-03-09T19:23:24Z", "path": "mappings/net/minecraft/realms/CheckedGson.mapping", "diffHunk": "@@ -0,0 +1,11 @@\n+CLASS net/minecraft/class_4869 net/minecraft/realms/CheckedGson\n+\tCOMMENT Checks so that only intended pojos are passed to the GSON (handles\n+\tCOMMENT serialization after obfuscation).\n+\tCOMMENT\n+\tCOMMENT <p>This is a new class in 20w10a.", "originalCommit": "58917cf3d313e9c085f3b8b82f9cb566bfd23f27", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwOTg0OA==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r389909848", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tCOMMENT <p>This is a new class in 20w10a.\n          \n          \n            \n            \tCOMMENT @since 20w10a.", "author": "falseresync", "createdAt": "2020-03-09T19:24:06Z", "path": "mappings/net/minecraft/realms/RealmsSerializable.mapping", "diffHunk": "@@ -0,0 +1,7 @@\n+CLASS net/minecraft/class_4885 net/minecraft/realms/RealmsSerializable\n+\tCOMMENT A marker interface for Gson serializable pojos; the implementers make\n+\tCOMMENT sure that they have {@code SerializedName} annotation on all their\n+\tCOMMENT data fields so serialization works after obfuscation, and save/load of\n+\tCOMMENT such objects are controlled through another serializer.\n+\tCOMMENT\n+\tCOMMENT <p>This is a new class in 20w10a.", "originalCommit": "58917cf3d313e9c085f3b8b82f9cb566bfd23f27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMjU4Nw==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r389912587", "bodyText": "Im not sure we really need this info here. In theory you can get it from using the intermediary names.", "author": "modmuss50", "createdAt": "2020-03-09T19:29:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwOTg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMzI0OA==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r389913248", "bodyText": "Not really; I add this because this is not a renamed class or merged class (i.e. proxy merges) in 10a, but rather a completely new class", "author": "liach", "createdAt": "2020-03-09T19:30:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwOTg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxNjM2NQ==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r389916365", "bodyText": "It's still unneeded info", "author": "Earthcomputer", "createdAt": "2020-03-09T19:37:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwOTg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxODY1Nw==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r389918657", "bodyText": "So consider class_4900 and class_4885: 4900 is created because matcher failed to match 4900 with old Realms class (or the class is just recently obfuscated). It existed before; however, 4885 is totally new, like PiglinEntity or PiglinBrain classes. This javadoc is peripheral and may be changed side-effect-free in the future, shouldn't be a big problem if this @since is one (clearly it isn't)", "author": "liach", "createdAt": "2020-03-09T19:41:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwOTg0OA=="}], "type": "inlineReview"}, {"oid": "a9c56193547147b7ff97767440c9a832b8a76adb", "url": "https://github.com/FabricMC/yarn/commit/a9c56193547147b7ff97767440c9a832b8a76adb", "message": "Use @since jd tag\r\n\r\nthanks falseresync\n\nCo-Authored-By: Mikhail Oleynikov <falseresync@gmail.com>", "committedDate": "2020-03-09T19:27:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMzc3NQ==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r389913775", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tCOMMENT @since 20w10a.\n          \n          \n            \n            \tCOMMENT @since 20w10a", "author": "Juuxel", "createdAt": "2020-03-09T19:31:55Z", "path": "mappings/net/minecraft/realms/RealmsSerializable.mapping", "diffHunk": "@@ -0,0 +1,7 @@\n+CLASS net/minecraft/class_4885 net/minecraft/realms/RealmsSerializable\n+\tCOMMENT A marker interface for Gson serializable pojos; the implementers make\n+\tCOMMENT sure that they have {@code SerializedName} annotation on all their\n+\tCOMMENT data fields so serialization works after obfuscation, and save/load of\n+\tCOMMENT such objects are controlled through another serializer.\n+\tCOMMENT\n+\tCOMMENT @since 20w10a.", "originalCommit": "a9c56193547147b7ff97767440c9a832b8a76adb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMzk5OQ==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r389913999", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tFIELD field_22807 titl Ljava/lang/String;\n          \n          \n            \n            \tFIELD field_22807 title Ljava/lang/String;", "author": "Juuxel", "createdAt": "2020-03-09T19:32:24Z", "path": "mappings/net/minecraft/realms/DisconnectedRealmsScreen.mapping", "diffHunk": "@@ -0,0 +1,10 @@\n+CLASS net/minecraft/class_4899 net/minecraft/realms/DisconnectedRealmsScreen\n+\tFIELD field_22807 titl Ljava/lang/String;", "originalCommit": "a9c56193547147b7ff97767440c9a832b8a76adb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxNTE0OA==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r389915148", "bodyText": "right, there was a conflict from screen title and i forgot to fix it", "author": "liach", "createdAt": "2020-03-09T19:34:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMzk5OQ=="}], "type": "inlineReview"}, {"oid": "a4baf92c21a0cebecbc125aa2df590f2d08ec7aa", "url": "https://github.com/FabricMC/yarn/commit/a4baf92c21a0cebecbc125aa2df590f2d08ec7aa", "message": "Thanks juuz\n\nCo-Authored-By: Juuxel <6596629+Juuxel@users.noreply.github.com>", "committedDate": "2020-03-09T19:34:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyMDUwMQ==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r389920501", "bodyText": "fyi this method is named by me, as it's not present in 20w09a's RealmsServer", "author": "liach", "createdAt": "2020-03-09T19:45:11Z", "path": "mappings/com/mojang/realmsclient/dto/RealmsServer.mapping", "diffHunk": "@@ -0,0 +1,69 @@\n+CLASS net/minecraft/class_4877 com/mojang/realmsclient/dto/RealmsServer\n+\tFIELD field_22599 id J\n+\tFIELD field_22600 remoteSubscriptionId Ljava/lang/String;\n+\tFIELD field_22601 name Ljava/lang/String;\n+\tFIELD field_22602 motd Ljava/lang/String;\n+\tFIELD field_22603 state Lnet/minecraft/class_4877$class_4320;\n+\tFIELD field_22604 owner Ljava/lang/String;\n+\tFIELD field_22605 ownerUUID Ljava/lang/String;\n+\tFIELD field_22606 players Ljava/util/List;\n+\tFIELD field_22607 slots Ljava/util/Map;\n+\tFIELD field_22608 expired Z\n+\tFIELD field_22609 expiredTrial Z\n+\tFIELD field_22610 daysLeft I\n+\tFIELD field_22611 worldType Lnet/minecraft/class_4877$class_4321;\n+\tFIELD field_22612 activeSlot I\n+\tFIELD field_22613 minigameName Ljava/lang/String;\n+\tFIELD field_22614 minigameId I\n+\tFIELD field_22615 minigameImage Ljava/lang/String;\n+\tFIELD field_22616 serverPing Lnet/minecraft/class_4880;\n+\tFIELD field_22617 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tMETHOD equals (Ljava/lang/Object;)Z\n+\t\tARG 1 obj\n+\tMETHOD method_25053 getDescription ()Ljava/lang/String;\n+\tMETHOD method_25054 getWorldName (I)Ljava/lang/String;", "originalCommit": "a4baf92c21a0cebecbc125aa2df590f2d08ec7aa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4925e9ac15c1ca50e589422dcf9c30237da60301", "url": "https://github.com/FabricMC/yarn/commit/4925e9ac15c1ca50e589422dcf9c30237da60301", "message": "Remove since tags\n\nSigned-off-by: liach <liach@users.noreply.github.com>", "committedDate": "2020-03-09T19:47:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU4NzIwMA==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r390587200", "bodyText": "What is this comment useful for?", "author": "Runemoro", "createdAt": "2020-03-10T20:21:29Z", "path": "mappings/com/mojang/realmsclient/gui/LongRunningTask.mapping", "diffHunk": "@@ -10,3 +11,9 @@ CLASS net/minecraft/class_4358 com/mojang/realmsclient/gui/LongRunningTask\n \t\tARG 1 title\n \tMETHOD method_21070 init ()V\n \tMETHOD method_21071 abortTask ()V\n+\tMETHOD method_25287 pause (I)V\n+\t\tCOMMENT Moved from RealmsTasks in 20w10a.", "originalCommit": "4925e9ac15c1ca50e589422dcf9c30237da60301", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU5MzU0OQ==", "url": "https://github.com/FabricMC/yarn/pull/1167#discussion_r390593549", "bodyText": "So as to track names etc more easily.", "author": "liach", "createdAt": "2020-03-10T20:33:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU4NzIwMA=="}], "type": "inlineReview"}]}