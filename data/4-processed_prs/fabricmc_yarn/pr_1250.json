{"pr_number": 1250, "pr_title": "Tags", "pr_createdAt": "2020-04-02T18:00:22Z", "pr_url": "https://github.com/FabricMC/yarn/pull/1250", "timeline": [{"oid": "0ad419ae546cdbaf94bdfeb8140364f2c36ced20", "url": "https://github.com/FabricMC/yarn/commit/0ad419ae546cdbaf94bdfeb8140364f2c36ced20", "message": "Tags\n\nSigned-off-by: liach <liach@users.noreply.github.com>", "committedDate": "2020-04-02T18:00:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjUxNw==", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402512517", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tMETHOD method_26785 streamEntries ()Ljava/util/stream/Stream;\n          \n          \n            \n            \t\tMETHOD method_26785 entryStream ()Ljava/util/stream/Stream;\n          \n      \n    \n    \n  \n\nFits the suffix convention and goes with Map.entrySet()", "author": "Earthcomputer", "createdAt": "2020-04-02T18:07:47Z", "path": "mappings/net/minecraft/tag/Tag.mapping", "diffHunk": "@@ -14,9 +14,55 @@ CLASS net/minecraft/class_3494 net/minecraft/tag/Tag\n \t\tARG 1 entry\n \tMETHOD method_15142 getRandom (Ljava/util/Random;)Ljava/lang/Object;\n \t\tARG 1 random\n+\tMETHOD method_26777 of (Ljava/util/Set;)Lnet/minecraft/class_3494;\n+\t\tARG 0 set\n \tCLASS class_3495 Builder\n \t\tCOMMENT A builder class to ease the creation of tags. It can also be used as a\n \t\tCOMMENT mutable form of a tag.\n+\t\tFIELD field_23688 entries Ljava/util/Set;\n+\t\tMETHOD method_26778 create ()Lnet/minecraft/class_3494$class_3495;\n+\t\tMETHOD method_26779 add (Lnet/minecraft/class_3494$class_3496;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 entry\n+\t\tMETHOD method_26780 read (Lcom/google/gson/JsonObject;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 json\n+\t\tMETHOD method_26782 build (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional;\n+\t\t\tARG 1 tagGetter\n+\t\t\tARG 2 objectGetter\n+\t\tMETHOD method_26784 add (Lnet/minecraft/class_2960;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 id\n+\t\tMETHOD method_26785 streamEntries ()Ljava/util/stream/Stream;", "originalCommit": "0ad419ae546cdbaf94bdfeb8140364f2c36ced20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxNjk4NA==", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402516984", "bodyText": "stream is like an action than an object, so you are streaming the entries here", "author": "liach", "createdAt": "2020-04-02T18:15:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwMzQwNQ==", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402703405", "bodyText": "We currently have streamAround etc in BlockPos, what do you guys think?", "author": "liach", "createdAt": "2020-04-03T02:34:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjUxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0ODkxNQ==", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402748915", "bodyText": "I prefer liach's name, since it's really a command (\"stream it now!\") opposed to converting it to a stream object (\"can I have the stream?\")", "author": "Prospector", "createdAt": "2020-04-03T05:46:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjUxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjczNg==", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402512736", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tMETHOD method_26786 streamUnresolvedEntries (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream;\n          \n          \n            \n            \t\tMETHOD method_26786 unresolvedEntryStream (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream;", "author": "Earthcomputer", "createdAt": "2020-04-02T18:08:09Z", "path": "mappings/net/minecraft/tag/Tag.mapping", "diffHunk": "@@ -14,9 +14,55 @@ CLASS net/minecraft/class_3494 net/minecraft/tag/Tag\n \t\tARG 1 entry\n \tMETHOD method_15142 getRandom (Ljava/util/Random;)Ljava/lang/Object;\n \t\tARG 1 random\n+\tMETHOD method_26777 of (Ljava/util/Set;)Lnet/minecraft/class_3494;\n+\t\tARG 0 set\n \tCLASS class_3495 Builder\n \t\tCOMMENT A builder class to ease the creation of tags. It can also be used as a\n \t\tCOMMENT mutable form of a tag.\n+\t\tFIELD field_23688 entries Ljava/util/Set;\n+\t\tMETHOD method_26778 create ()Lnet/minecraft/class_3494$class_3495;\n+\t\tMETHOD method_26779 add (Lnet/minecraft/class_3494$class_3496;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 entry\n+\t\tMETHOD method_26780 read (Lcom/google/gson/JsonObject;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 json\n+\t\tMETHOD method_26782 build (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional;\n+\t\t\tARG 1 tagGetter\n+\t\t\tARG 2 objectGetter\n+\t\tMETHOD method_26784 add (Lnet/minecraft/class_2960;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 id\n+\t\tMETHOD method_26785 streamEntries ()Ljava/util/stream/Stream;\n+\t\tMETHOD method_26786 streamUnresolvedEntries (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream;", "originalCommit": "0ad419ae546cdbaf94bdfeb8140364f2c36ced20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxNzEzNQ==", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402517135", "bodyText": "Same, streaming unresolved entries", "author": "liach", "createdAt": "2020-04-02T18:15:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjczNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0OTAxMg==", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402749012", "bodyText": "Also prefer liach's here for same reason as above", "author": "Prospector", "createdAt": "2020-04-03T05:46:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjczNg=="}], "type": "inlineReview"}]}