{"pr_number": 1134, "pr_title": "minusDiv -> getLerpProgress + other improvements", "pr_createdAt": "2020-02-25T01:04:26Z", "pr_url": "https://github.com/FabricMC/yarn/pull/1134", "timeline": [{"oid": "f8d6efc532ef051386dbbfec2f681d6154e7b6af", "url": "https://github.com/FabricMC/yarn/commit/f8d6efc532ef051386dbbfec2f681d6154e7b6af", "message": "minusDiv -> inverseLerp", "committedDate": "2020-02-25T01:01:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYwOTU5Mw==", "url": "https://github.com/FabricMC/yarn/pull/1134#discussion_r383609593", "bodyText": "Maybe specify this is the lower bound (smaller)?", "author": "liach", "createdAt": "2020-02-25T01:21:40Z", "path": "mappings/net/minecraft/util/math/MathHelper.mapping", "diffHunk": "@@ -76,10 +76,15 @@ CLASS net/minecraft/class_3532 net/minecraft/util/math/MathHelper\n \t\tARG 0 hue\n \t\tARG 1 saturation\n \t\tARG 2 value\n-\tMETHOD method_15370 minusDiv (DDD)D\n-\t\tARG 0 numerator\n-\t\tARG 2 delta\n-\t\tARG 4 denominator\n+\tMETHOD method_15370 inverseLerp (DDD)D\n+\t\tCOMMENT Essentially does the inverse of the linear interpolation (lerp) function.\n+\t\tCOMMENT Returns the delta value needed to interpolate between {@code a} and {@code b}.\n+\t\tARG 0 value\n+\t\t\tCOMMENT The result of the lerp function\n+\t\tARG 2 a\n+\t\t\tCOMMENT The value interpolated from", "originalCommit": "f8d6efc532ef051386dbbfec2f681d6154e7b6af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxMDUzMA==", "url": "https://github.com/FabricMC/yarn/pull/1134#discussion_r383610530", "bodyText": "Maybe say given delta, a, b, inverseLerp(lerp(delta, a, b), a, b) == delta? I thought it's like lerping the inversed value at first sight.", "author": "liach", "createdAt": "2020-02-25T01:25:23Z", "path": "mappings/net/minecraft/util/math/MathHelper.mapping", "diffHunk": "@@ -76,10 +76,15 @@ CLASS net/minecraft/class_3532 net/minecraft/util/math/MathHelper\n \t\tARG 0 hue\n \t\tARG 1 saturation\n \t\tARG 2 value\n-\tMETHOD method_15370 minusDiv (DDD)D\n-\t\tARG 0 numerator\n-\t\tARG 2 delta\n-\t\tARG 4 denominator\n+\tMETHOD method_15370 inverseLerp (DDD)D\n+\t\tCOMMENT Essentially does the inverse of the linear interpolation (lerp) function.", "originalCommit": "f8d6efc532ef051386dbbfec2f681d6154e7b6af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "84e072226bd77500d66ead5978ce192ca6aeb91f", "url": "https://github.com/FabricMC/yarn/commit/84e072226bd77500d66ead5978ce192ca6aeb91f", "message": "Rename parameters and clarify javadoc", "committedDate": "2020-02-25T03:33:06Z", "type": "commit"}, {"oid": "78745342ead5807c655baf018aa7a238c0811c0f", "url": "https://github.com/FabricMC/yarn/commit/78745342ead5807c655baf018aa7a238c0811c0f", "message": "Fix javadoc to refer to new parameter names", "committedDate": "2020-02-25T03:35:10Z", "type": "commit"}, {"oid": "1e80702eafcb95dae2f3bddb642ba36b351e35b6", "url": "https://github.com/FabricMC/yarn/commit/1e80702eafcb95dae2f3bddb642ba36b351e35b6", "message": "Rename inverseLerp -> getLerpProgress and other improvements in MathHelper", "committedDate": "2020-02-25T12:23:22Z", "type": "commit"}, {"oid": "c46c9c5c754be128b893017f1823f50adafe1dc3", "url": "https://github.com/FabricMC/yarn/commit/c46c9c5c754be128b893017f1823f50adafe1dc3", "message": "randomUUID -> randomUuid", "committedDate": "2020-02-25T14:51:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkyODMyMg==", "url": "https://github.com/FabricMC/yarn/pull/1134#discussion_r383928322", "bodyText": "May be fWrapDegrees or wrapDegreesF (note your casing)", "author": "liach", "createdAt": "2020-02-25T14:53:40Z", "path": "mappings/net/minecraft/util/math/MathHelper.mapping", "diffHunk": "@@ -156,6 +195,7 @@ CLASS net/minecraft/class_3532 net/minecraft/util/math/MathHelper\n \t\tARG 0 start\n \t\tARG 1 end\n \t\tARG 2 delta\n+\tMETHOD method_22860 fwrapDegrees (D)F", "originalCommit": "c46c9c5c754be128b893017f1823f50adafe1dc3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzMDYxMg==", "url": "https://github.com/FabricMC/yarn/pull/1134#discussion_r383930612", "bodyText": "I was following the pattern of lfloor, it differs from wrapDegrees(D)D only in return type. Also, this is a deprecated method that people should probably use the other methods in favour of.", "author": "Earthcomputer", "createdAt": "2020-02-25T14:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkyODMyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0NzI0NA==", "url": "https://github.com/FabricMC/yarn/pull/1134#discussion_r384047244", "bodyText": "Not really, we have nextInt nextDouble, so floorLong etc should be more accurate and match the pattern better", "author": "liach", "createdAt": "2020-02-25T18:33:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkyODMyMg=="}], "type": "inlineReview"}]}