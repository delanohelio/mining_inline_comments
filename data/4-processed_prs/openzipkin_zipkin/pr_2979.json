{"pr_number": 2979, "pr_title": "Read config.json in zipkin-lens and use it to set default query lookb\u2026", "pr_createdAt": "2020-02-15T09:27:54Z", "pr_url": "https://github.com/openzipkin/zipkin/pull/2979", "timeline": [{"oid": "56abee1c44ad773759423fbf08958896c37b1a00", "url": "https://github.com/openzipkin/zipkin/commit/56abee1c44ad773759423fbf08958896c37b1a00", "message": "Read config.json in zipkin-lens and use it to set default query lookback.", "committedDate": "2020-02-15T09:29:18Z", "type": "commit"}, {"oid": "56abee1c44ad773759423fbf08958896c37b1a00", "url": "https://github.com/openzipkin/zipkin/commit/56abee1c44ad773759423fbf08958896c37b1a00", "message": "Read config.json in zipkin-lens and use it to set default query lookback.", "committedDate": "2020-02-15T09:29:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg4NTgzOQ==", "url": "https://github.com/openzipkin/zipkin/pull/2979#discussion_r379885839", "bodyText": "I am in suspense", "author": "codefromthecrypt", "createdAt": "2020-02-16T08:46:17Z", "path": "zipkin-lens/src/components/App/App.jsx", "diffHunk": "@@ -11,9 +11,10 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n-import React from 'react';\n+import React, { Suspense } from 'react';", "originalCommit": "56abee1c44ad773759423fbf08958896c37b1a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg4NTkyMA==", "url": "https://github.com/openzipkin/zipkin/pull/2979#discussion_r379885920", "bodyText": "lifespan 1?", "author": "codefromthecrypt", "createdAt": "2020-02-16T08:47:37Z", "path": "zipkin-lens/src/components/UiConfig/UiConfig.jsx", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2015-2020 The OpenZipkin Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+import useFetch from 'fetch-suspense';\n+import React from 'react';\n+\n+import { UI_CONFIG } from '../../constants/api';\n+\n+const ConfigContext = React.createContext();\n+\n+export const UiConfig = ({ children }) => {\n+  const response = useFetch(UI_CONFIG, { lifespan: 1 });", "originalCommit": "56abee1c44ad773759423fbf08958896c37b1a00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUwNTczNg==", "url": "https://github.com/openzipkin/zipkin/pull/2979#discussion_r380505736", "bodyText": "The library I tried using for fetching with suspense defaults to caching responses which we didn't need (hence lifetime of 1ms). But the library itself seemed sketchy (doesn't really follow the best practices for suspense), and many lines more than the simple wrapper I wrote instead so just got rid of it.", "author": "anuraaga", "createdAt": "2020-02-18T07:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg4NTkyMA=="}], "type": "inlineReview"}, {"oid": "93f130be8caeb902a2571b0ff7aa5aa34ddb6eea", "url": "https://github.com/openzipkin/zipkin/commit/93f130be8caeb902a2571b0ff7aa5aa34ddb6eea", "message": "Merge branch 'master' of github.com:openzipkin/zipkin into read-config-json", "committedDate": "2020-02-17T06:36:11Z", "type": "commit"}, {"oid": "27f22084c5f90af891625e40868a391c16ce1cdb", "url": "https://github.com/openzipkin/zipkin/commit/27f22084c5f90af891625e40868a391c16ce1cdb", "message": "[WIP] First fix existing tests", "committedDate": "2020-02-17T07:38:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0NjQ2MQ==", "url": "https://github.com/openzipkin/zipkin/pull/2979#discussion_r380046461", "bodyText": "heh react suspense is making you work hard for your.. no money", "author": "codefromthecrypt", "createdAt": "2020-02-17T08:45:47Z", "path": "zipkin-lens/src/util/fetch-resource.js", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2015-2020 The OpenZipkin Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+/**\n+ * Converts a promise to a resource as used in React Suspense nomenclature. A resource provides a", "originalCommit": "27f22084c5f90af891625e40868a391c16ce1cdb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9b1af8b5e9be885cfe5853c0a663a1c9d307abaf", "url": "https://github.com/openzipkin/zipkin/commit/9b1af8b5e9be885cfe5853c0a663a1c9d307abaf", "message": "More tests", "committedDate": "2020-02-18T07:49:02Z", "type": "commit"}, {"oid": "8e3b1451ff8056f7ed0ed7cd7739bca6e787b963", "url": "https://github.com/openzipkin/zipkin/commit/8e3b1451ff8056f7ed0ed7cd7739bca6e787b963", "message": "Lint", "committedDate": "2020-02-18T08:06:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUyNjQyMQ==", "url": "https://github.com/openzipkin/zipkin/pull/2979#discussion_r380526421", "bodyText": "cool!", "author": "codefromthecrypt", "createdAt": "2020-02-18T08:43:50Z", "path": "zipkin-lens/src/components/UiConfig/UiConfig.test.jsx", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2015-2020 The OpenZipkin Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+import { render } from '@testing-library/react';\n+import fetchMock from 'fetch-mock';\n+import React, { Suspense } from 'react';\n+\n+import { UI_CONFIG } from '../../constants/api';\n+\n+afterEach(() => {\n+  fetchMock.restore();\n+});\n+\n+beforeEach(() => {\n+  // We fetch the resource on module initialization for performance, but want to do that in every\n+  // test.\n+  jest.resetModules();\n+});\n+\n+const UiConfig = () => {\n+  const UiConfigModule = require('./UiConfig');\n+  const UiConfig = UiConfigModule.UiConfig;\n+  const UiConfigConsumer = UiConfigModule.UiConfigConsumer;\n+\n+  return (\n+    <Suspense fallback=\"Suspended\">\n+      <UiConfig>\n+        <UiConfigConsumer>\n+          {value => (\n+            <div>{JSON.stringify(value)}</div>\n+          )}\n+        </UiConfigConsumer>\n+      </UiConfig>\n+    </Suspense>\n+  );\n+};\n+\n+test('fetches config and suspends', async () => {\n+  const configPromise = new Promise(() => undefined);\n+  fetchMock.mock('*', configPromise);\n+\n+  const { getByText } = render(<UiConfig />);\n+  expect(getByText('Suspended')).toBeInTheDocument();\n+\n+  fetchMock.called(UI_CONFIG);\n+});\n+\n+test('provides config when resolved', async () => {\n+  const config = { defaultLookback: 100 };\n+  fetchMock.once('*', config);\n+\n+  const { getByText, rerender } = render(<UiConfig />);\n+  expect(getByText('Suspended')).toBeInTheDocument();\n+\n+  // We need to get off the processing loop to allow the promise to complete and resolve the\n+  // config.\n+  await new Promise(resolve => setTimeout(resolve, 1));\n+\n+  rerender(<UiConfig />);\n+  expect(getByText(JSON.stringify(config))).toBeInTheDocument();", "originalCommit": "8e3b1451ff8056f7ed0ed7cd7739bca6e787b963", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUyNjU2NQ==", "url": "https://github.com/openzipkin/zipkin/pull/2979#discussion_r380526565", "bodyText": "do you love our license header?", "author": "codefromthecrypt", "createdAt": "2020-02-18T08:44:08Z", "path": "zipkin-lens/src/components/UiConfig/index.js", "diffHunk": "@@ -0,0 +1,14 @@\n+/*\n+ * Copyright 2015-2020 The OpenZipkin Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+export * from './UiConfig';", "originalCommit": "8e3b1451ff8056f7ed0ed7cd7739bca6e787b963", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUyODgwNg==", "url": "https://github.com/openzipkin/zipkin/pull/2979#discussion_r380528806", "bodyText": "Nope. I think separating index.js and Component.jsx is not useful, but noticed the current webpack config doesn't seem to allow index.jsx. So will fix that in another PR :)", "author": "anuraaga", "createdAt": "2020-02-18T08:48:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUyNjU2NQ=="}], "type": "inlineReview"}]}