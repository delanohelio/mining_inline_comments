{"pr_number": 2956, "pr_title": "Fix orphaned spans bug", "pr_createdAt": "2020-01-08T05:56:52Z", "pr_url": "https://github.com/openzipkin/zipkin/pull/2956", "timeline": [{"oid": "d234fc0894afa05ba6d5861525311a38aa60e368", "url": "https://github.com/openzipkin/zipkin/commit/d234fc0894afa05ba6d5861525311a38aa60e368", "message": "Fix orphaned spans bug", "committedDate": "2020-01-08T05:33:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA3NTM4NQ==", "url": "https://github.com/openzipkin/zipkin/pull/2956#discussion_r364075385", "bodyText": "This logic is pretty complex, can you add some comments? In particular, this propagation of skip is confusing me.", "author": "anuraaga", "createdAt": "2020-01-08T06:04:52Z", "path": "zipkin-lens/src/components/TracePage/TraceSummary.jsx", "diffHunk": "@@ -80,19 +83,34 @@ const TraceSummary = React.memo(({ traceSummary }) => {\n   }, [isRootedTrace, rootSpanIndex, traceSummary.spans]);\n \n   const shownTree = useMemo(() => {\n-    const allHiddenSpanIds = {};\n-    rerootedTree.forEach((span) => {\n-      if (childrenHiddenSpanIds[span.parentId]) {\n-        allHiddenSpanIds[span.spanId] = true;\n+    let depth = 0;\n+    let skip = false;\n+\n+    return rerootedTree.reduce((acc, cur) => {\n+      if (cur.depth > depth && skip) {", "originalCommit": "d234fc0894afa05ba6d5861525311a38aa60e368", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1ODExMA==", "url": "https://github.com/openzipkin/zipkin/pull/2956#discussion_r364558110", "bodyText": "I simplified this logic.\nAs you said, skip is unnecessary... \ud83d\ude13", "author": "tacigar", "createdAt": "2020-01-09T04:48:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA3NTM4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA3NTQ1Mw==", "url": "https://github.com/openzipkin/zipkin/pull/2956#discussion_r364075453", "bodyText": "Let's use semantic names instead of acc, cur - I think it's shownTraces, trace?", "author": "anuraaga", "createdAt": "2020-01-08T06:05:15Z", "path": "zipkin-lens/src/components/TracePage/TraceSummary.jsx", "diffHunk": "@@ -80,19 +83,34 @@ const TraceSummary = React.memo(({ traceSummary }) => {\n   }, [isRootedTrace, rootSpanIndex, traceSummary.spans]);\n \n   const shownTree = useMemo(() => {\n-    const allHiddenSpanIds = {};\n-    rerootedTree.forEach((span) => {\n-      if (childrenHiddenSpanIds[span.parentId]) {\n-        allHiddenSpanIds[span.spanId] = true;\n+    let depth = 0;\n+    let skip = false;\n+\n+    return rerootedTree.reduce((acc, cur) => {", "originalCommit": "d234fc0894afa05ba6d5861525311a38aa60e368", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b1dd7a9ae56a29d64b46c4cc63044d14b2bb303c", "url": "https://github.com/openzipkin/zipkin/commit/b1dd7a9ae56a29d64b46c4cc63044d14b2bb303c", "message": "Simplify calculation of shownTree", "committedDate": "2020-01-09T04:00:28Z", "type": "commit"}]}