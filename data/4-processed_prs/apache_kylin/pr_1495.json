{"pr_number": 1495, "pr_title": "KYLIN-4829 Support to use thread-level SparkSession to execute query", "pr_createdAt": "2020-12-03T01:23:55Z", "pr_url": "https://github.com/apache/kylin/pull/1495", "timeline": [{"oid": "df4c95dc7b751453e4d40d8ccd68923b763787d4", "url": "https://github.com/apache/kylin/commit/df4c95dc7b751453e4d40d8ccd68923b763787d4", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query", "committedDate": "2020-12-03T02:53:26Z", "type": "forcePushed"}, {"oid": "355f74363844b527eae339191c1d1649b98a49c8", "url": "https://github.com/apache/kylin/commit/355f74363844b527eae339191c1d1649b98a49c8", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query", "committedDate": "2020-12-03T11:42:44Z", "type": "forcePushed"}, {"oid": "23219a7c22e6ee61bfcbe5c0448cb8c025aa4cd4", "url": "https://github.com/apache/kylin/commit/23219a7c22e6ee61bfcbe5c0448cb8c025aa4cd4", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query", "committedDate": "2020-12-03T12:28:40Z", "type": "forcePushed"}, {"oid": "3b3786c5c9602838cd4abd0a6d40574550ec8622", "url": "https://github.com/apache/kylin/commit/3b3786c5c9602838cd4abd0a6d40574550ec8622", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query", "committedDate": "2020-12-03T12:53:28Z", "type": "forcePushed"}, {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73", "url": "https://github.com/apache/kylin/commit/ed0649b140529bdfafea8cce846962b6ca9c3f73", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query", "committedDate": "2020-12-07T00:59:34Z", "type": "commit"}, {"oid": "ed0649b140529bdfafea8cce846962b6ca9c3f73", "url": "https://github.com/apache/kylin/commit/ed0649b140529bdfafea8cce846962b6ca9c3f73", "message": "KYLIN-4829 Support to use thread-level SparkSession to execute query", "committedDate": "2020-12-07T00:59:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI4NTY3Nw==", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538285677", "bodyText": "Are you plan to delete KylinSparkEnv ?", "author": "hit-lacus", "createdAt": "2020-12-08T11:58:18Z", "path": "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/sql/KylinSparkEnv.scala", "diffHunk": "@@ -25,96 +25,27 @@ object KylinSparkEnv extends Logging {\n \t@volatile\n \tprivate var spark: SparkSession = _", "originalCommit": "ed0649b140529bdfafea8cce846962b6ca9c3f73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQxMjQzMQ==", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538412431", "bodyText": "Yeah, will raise another pr to do this, it needs to refactor some modules", "author": "zzcclp", "createdAt": "2020-12-08T14:09:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI4NTY3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI5NTk0MQ==", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538295941", "bodyText": "Why change from  defaultParallelism to getTotalCore ?", "author": "hit-lacus", "createdAt": "2020-12-08T12:10:29Z", "path": "kylin-spark-project/kylin-spark-common/src/main/scala/org/apache/spark/sql/execution/datasource/ResetShufflePartition.scala", "diffHunk": "@@ -17,25 +17,26 @@\n  */\n package org.apache.spark.sql.execution.datasource\n \n-import org.apache.kylin.common.{KylinConfig, QueryContext, QueryContextFacade}\n+import org.apache.kylin.common.{KylinConfig, QueryContextFacade}\n import org.apache.spark.internal.Logging\n import org.apache.spark.sql.SparkSession\n+import org.apache.spark.utils.SparderUtils\n \n trait ResetShufflePartition extends Logging {\n+  val PARTITION_SPLIT_BYTES: Long = KylinConfig.getInstanceFromEnv.getQueryPartitionSplitSizeMB * 1024 * 1024 // 64MB\n \n   def setShufflePartitions(bytes: Long, sparkSession: SparkSession): Unit = {\n     QueryContextFacade.current().addAndGetSourceScanBytes(bytes)\n-    val defaultParallelism = sparkSession.sparkContext.defaultParallelism\n+    val defaultParallelism = SparderUtils.getTotalCore(sparkSession.sparkContext.getConf)", "originalCommit": "ed0649b140529bdfafea8cce846962b6ca9c3f73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQxNTc3Ng==", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538415776", "bodyText": "Make it the same algorithm as the code of 'ResultPlan.collectInternal'.", "author": "zzcclp", "createdAt": "2020-12-08T14:12:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI5NTk0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI5OTY0MA==", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538299640", "bodyText": "Looks like the original code is wrong, if sparkContext.defaultParallelism is 1, partitionsNum will always be 1.", "author": "hit-lacus", "createdAt": "2020-12-08T12:14:49Z", "path": "kylin-spark-project/kylin-spark-common/src/main/scala/org/apache/spark/sql/execution/datasource/ResetShufflePartition.scala", "diffHunk": "@@ -17,25 +17,26 @@\n  */\n package org.apache.spark.sql.execution.datasource\n \n-import org.apache.kylin.common.{KylinConfig, QueryContext, QueryContextFacade}\n+import org.apache.kylin.common.{KylinConfig, QueryContextFacade}\n import org.apache.spark.internal.Logging\n import org.apache.spark.sql.SparkSession\n+import org.apache.spark.utils.SparderUtils\n \n trait ResetShufflePartition extends Logging {\n+  val PARTITION_SPLIT_BYTES: Long = KylinConfig.getInstanceFromEnv.getQueryPartitionSplitSizeMB * 1024 * 1024 // 64MB\n \n   def setShufflePartitions(bytes: Long, sparkSession: SparkSession): Unit = {\n     QueryContextFacade.current().addAndGetSourceScanBytes(bytes)\n-    val defaultParallelism = sparkSession.sparkContext.defaultParallelism\n+    val defaultParallelism = SparderUtils.getTotalCore(sparkSession.sparkContext.getConf)\n     val kylinConfig = KylinConfig.getInstanceFromEnv\n     val partitionsNum = if (kylinConfig.getSparkSqlShufflePartitions != -1) {\n       kylinConfig.getSparkSqlShufflePartitions\n     } else {\n-      Math.min(QueryContextFacade.current().getSourceScanBytes / (", "originalCommit": "ed0649b140529bdfafea8cce846962b6ca9c3f73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQxODE1OA==", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538418158", "bodyText": "Using 'Math.min' is right, it makes sure that the max partition number is not larger than the total cores.", "author": "zzcclp", "createdAt": "2020-12-08T14:14:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI5OTY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMwNzE3NA==", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538307174", "bodyText": "You remove * 2, is it correct ?", "author": "hit-lacus", "createdAt": "2020-12-08T12:23:39Z", "path": "kylin-spark-project/kylin-spark-common/src/main/scala/org/apache/spark/sql/execution/datasource/ResetShufflePartition.scala", "diffHunk": "@@ -17,25 +17,26 @@\n  */\n package org.apache.spark.sql.execution.datasource\n \n-import org.apache.kylin.common.{KylinConfig, QueryContext, QueryContextFacade}\n+import org.apache.kylin.common.{KylinConfig, QueryContextFacade}\n import org.apache.spark.internal.Logging\n import org.apache.spark.sql.SparkSession\n+import org.apache.spark.utils.SparderUtils\n \n trait ResetShufflePartition extends Logging {\n+  val PARTITION_SPLIT_BYTES: Long = KylinConfig.getInstanceFromEnv.getQueryPartitionSplitSizeMB * 1024 * 1024 // 64MB\n \n   def setShufflePartitions(bytes: Long, sparkSession: SparkSession): Unit = {\n     QueryContextFacade.current().addAndGetSourceScanBytes(bytes)\n-    val defaultParallelism = sparkSession.sparkContext.defaultParallelism\n+    val defaultParallelism = SparderUtils.getTotalCore(sparkSession.sparkContext.getConf)\n     val kylinConfig = KylinConfig.getInstanceFromEnv\n     val partitionsNum = if (kylinConfig.getSparkSqlShufflePartitions != -1) {\n       kylinConfig.getSparkSqlShufflePartitions\n     } else {\n-      Math.min(QueryContextFacade.current().getSourceScanBytes / (\n-        KylinConfig.getInstanceFromEnv.getQueryPartitionSplitSizeMB * 1024 * 1024 * 2) + 1,", "originalCommit": "ed0649b140529bdfafea8cce846962b6ca9c3f73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQyMDcxMQ==", "url": "https://github.com/apache/kylin/pull/1495#discussion_r538420711", "bodyText": "'* 2' doesn't make sense. If users want to use larger partition split size, they can increase the value of 'kylin.query.spark-engine.partition-split-size-mb' .", "author": "zzcclp", "createdAt": "2020-12-08T14:16:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMwNzE3NA=="}], "type": "inlineReview"}]}