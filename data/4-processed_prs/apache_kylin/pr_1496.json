{"pr_number": 1496, "pr_title": "KYLIN-4817 Refine CubeMigrationCLI for kylin4", "pr_createdAt": "2020-12-04T01:13:52Z", "pr_url": "https://github.com/apache/kylin/pull/1496", "timeline": [{"oid": "e0cfed812a59399ebdd4283e384b2bce19719ed2", "url": "https://github.com/apache/kylin/commit/e0cfed812a59399ebdd4283e384b2bce19719ed2", "message": "KYLIN-4817 Refine CubeMigrationCLI for kylin4", "committedDate": "2020-12-03T15:11:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxNzY0Ng==", "url": "https://github.com/apache/kylin/pull/1496#discussion_r535817646", "bodyText": "Is there a File.separator between hdfsWorkDir and parquet", "author": "hit-lacus", "createdAt": "2020-12-04T03:55:20Z", "path": "kylin-spark-project/kylin-spark-common/src/main/java/org/apache/kylin/engine/spark/metadata/cube/PathManager.java", "diffHunk": "@@ -49,6 +49,12 @@ public static String getSegmentParquetStoragePath(CubeInstance cube, String segN\n         return hdfsWorkDir + \"parquet\" + File.separator + cube.getName() + File.separator + segName + \"_\" + identifier;\n     }\n \n+    public static String getSegmentParquetStoragePath(String hdfsWorkDir, String cubeName, CubeSegment segment) {\n+        String segmentName = segment.getName();\n+        String identifier = segment.getStorageLocationIdentifier();\n+        return hdfsWorkDir + \"parquet\" + File.separator + cubeName + File.separator + segmentName + \"_\" + identifier;", "originalCommit": "e0cfed812a59399ebdd4283e384b2bce19719ed2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgzNTk1NQ==", "url": "https://github.com/apache/kylin/pull/1496#discussion_r535835955", "bodyText": "Actually  the end of hdfsWorkDir already comes with a File.separator.", "author": "zhangayqian", "createdAt": "2020-12-04T04:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxNzY0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkzMTIwMw==", "url": "https://github.com/apache/kylin/pull/1496#discussion_r535931203", "bodyText": "OK", "author": "hit-lacus", "createdAt": "2020-12-04T08:47:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxNzY0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwNzczNQ==", "url": "https://github.com/apache/kylin/pull/1496#discussion_r536007735", "bodyText": "After remove HBase, looks like we do not need CubeMigrationCheckCLI any more.", "author": "hit-lacus", "createdAt": "2020-12-04T10:46:35Z", "path": "tool/src/main/java/org/apache/kylin/tool/CubeMigrationCLI.java", "diffHunk": "@@ -192,20 +184,12 @@ public void moveCube(KylinConfig srcCfg, KylinConfig dstCfg, String cubeName, St\n \n         if (realExecute) {\n             doOpts();\n-            if (migrateSegment) {\n-                checkMigrationSuccess(dstConfig, cubeName, true);\n-            }\n             updateMeta(dstConfig, projectName, cubeName, cube.getModel());\n         } else {\n             showOpts();\n         }\n     }\n \n-    public void checkMigrationSuccess(KylinConfig kylinConfig, String cubeName, Boolean ifFix) throws IOException {\n-        CubeMigrationCheckCLI checkCLI = new CubeMigrationCheckCLI(kylinConfig, ifFix);", "originalCommit": "e0cfed812a59399ebdd4283e384b2bce19719ed2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxMjUyMg==", "url": "https://github.com/apache/kylin/pull/1496#discussion_r536012522", "bodyText": "In which case columnInfo.length is not 3?", "author": "hit-lacus", "createdAt": "2020-12-04T10:53:59Z", "path": "tool/src/main/java/org/apache/kylin/tool/CubeMigrationCLI.java", "diffHunk": "@@ -326,22 +292,32 @@ protected void listCubeRelatedResources(CubeInstance cube, List<String> metaReso\n         metaResource.addAll(getCompatibleTablePath(tblRefs, prj, ResourceStore.TABLE_EXD_RESOURCE_ROOT));\n \n         if (doMigrateSegment) {\n+            for (DictionaryDesc dictionaryDesc : cubeDesc.getDictionaries()) {\n+                String[] columnInfo = dictionaryDesc.getColumnRef().getColumnWithTable().split(\"\\\\.\");\n+                String globalDictPath;\n+                if (columnInfo.length == 3) {", "originalCommit": "e0cfed812a59399ebdd4283e384b2bce19719ed2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}