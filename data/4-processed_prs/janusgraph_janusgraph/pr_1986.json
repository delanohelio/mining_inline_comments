{"pr_number": 1986, "pr_title": "Fix scroll leak in scroll handling.", "pr_createdAt": "2020-02-25T18:57:21Z", "pr_url": "https://github.com/JanusGraph/janusgraph/pull/1986", "timeline": [{"oid": "e519f12fd763ca1c93a1e9389ebe4786dd7842f4", "url": "https://github.com/JanusGraph/janusgraph/commit/e519f12fd763ca1c93a1e9389ebe4786dd7842f4", "message": "Add unit tests for ElasticSearchScroll\n\nSigned-off-by: Paul Kendall <pkendall64@gmail.com>", "committedDate": "2020-02-26T00:14:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwOTY5NQ==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r384209695", "bodyText": "Why did you change this to non blocking queue? What about thread safety?", "author": "porunov", "createdAt": "2020-02-26T00:26:42Z", "path": "janusgraph-es/src/main/java/org/janusgraph/diskstorage/es/ElasticSearchScroll.java", "diffHunk": "@@ -28,19 +28,28 @@\n  */\n public class ElasticSearchScroll implements Iterator<RawQuery.Result<String>> {\n \n-    private final BlockingQueue<RawQuery.Result<String>> queue;\n+    private final Queue<Result<String>> queue;\n     private boolean isFinished;\n     private final ElasticSearchClient client;\n     private final String scrollId;\n     private final int batchSize;\n \n     public ElasticSearchScroll(ElasticSearchClient client, ElasticSearchResponse initialResponse, int nbDocByQuery) {\n-        queue = new LinkedBlockingQueue<>();\n+        queue = new ArrayDeque<>();", "originalCommit": "e519f12fd763ca1c93a1e9389ebe4786dd7842f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIxMzIzMw==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r384213233", "bodyText": "I could undo this change as I have fixes the problem in a better way by calling hasNext in the next method to make sure that if a loop is just calling next that it reads all records.\nI don't believe that this is used from multiple threads though.", "author": "pkendall64", "createdAt": "2020-02-26T00:39:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwOTY5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIxNjAzNg==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r384216036", "bodyText": "Reverted this part of the commit", "author": "pkendall64", "createdAt": "2020-02-26T00:48:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwOTY5NQ=="}], "type": "inlineReview"}, {"oid": "d41ea169086dfe01dbc244fb5f03be8100e9fe8d", "url": "https://github.com/JanusGraph/janusgraph/commit/d41ea169086dfe01dbc244fb5f03be8100e9fe8d", "message": "Fix scroll leak in scroll handling.\nIf the entire scroll is read in the constructor the scroll was not deleted in ES.\nFix queue blocking when reading with next and not calling hasNext so that all data from subsequent pages is read.\nAdd unit tests for ElasticSearchScroll.\n\nFixes #1985\n\nSigned-off-by: Paul Kendall <pkendall64@gmail.com>", "committedDate": "2020-02-26T00:59:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NTcwNQ==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r384775705", "bodyText": "nit: 2020", "author": "farodin91", "createdAt": "2020-02-26T21:26:00Z", "path": "janusgraph-es/src/test/java/org/janusgraph/diskstorage/es/ElasticSearchScrollTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+// Copyright 2017 JanusGraph Authors", "originalCommit": "d41ea169086dfe01dbc244fb5f03be8100e9fe8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1NDAwOQ==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r384854009", "bodyText": "fixed", "author": "pkendall64", "createdAt": "2020-02-27T00:46:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NTcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5ODgyNA==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r385298824", "bodyText": "updated", "author": "pkendall64", "createdAt": "2020-02-27T18:41:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NTcwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NjU3OA==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r384776578", "bodyText": "nit: if you know where exception will be thrown use assertThrows.", "author": "farodin91", "createdAt": "2020-02-26T21:27:45Z", "path": "janusgraph-es/src/test/java/org/janusgraph/diskstorage/es/ElasticSearchScrollTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+// Copyright 2017 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.diskstorage.es;\n+\n+import io.vavr.collection.List;\n+import org.janusgraph.diskstorage.indexing.RawQuery;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.NoSuchElementException;\n+\n+import static org.easymock.EasyMock.mock;\n+import static org.easymock.EasyMock.replay;\n+import static org.easymock.EasyMock.verify;\n+import static org.easymock.EasyMock.expect;\n+\n+public class ElasticSearchScrollTest {\n+    @Test\n+    public void testShortResultSetDeletesScroll() throws IOException {\n+        String SCROLL_NAME = \"scroll-1\";\n+        ElasticSearchResponse response = new ElasticSearchResponse();\n+        response.setScrollId(SCROLL_NAME);\n+        response.setTotal(0);\n+        response.setResults(Collections.emptyList());\n+\n+        ElasticSearchClient client = mock(ElasticSearchClient.class);\n+        client.deleteScroll(SCROLL_NAME);\n+        replay(client);\n+\n+        new ElasticSearchScroll(client, response, 5);\n+\n+        verify(client);\n+    }\n+\n+    @Test\n+    public void testLongResultSetDoesNotDeleteScrollOnConstruction() throws IOException {\n+        List x = List.of(new RawQuery.Result<String>(\"\", 0.0),\n+            new RawQuery.Result<String>(\"\", 0.0),\n+            new RawQuery.Result<String>(\"\", 0.0),\n+            new RawQuery.Result<String>(\"\", 0.0),\n+            new RawQuery.Result<String>(\"\", 0.0));\n+        String SCROLL_NAME = \"scroll-2\";\n+        ElasticSearchResponse response = new ElasticSearchResponse();\n+        response.setScrollId(SCROLL_NAME);\n+        response.setTotal(x.size());\n+        response.setResults(x.asJava());\n+\n+        ElasticSearchClient client = mock(ElasticSearchClient.class);\n+        replay(client);\n+\n+        new ElasticSearchScroll(client, response, x.length());\n+\n+        verify(client);\n+    }\n+\n+    @Test\n+    public void testLongResultSetDeleteScrollOnLastShortPage() throws IOException {\n+        List x1 = List.of(new RawQuery.Result<String>(\"1\", 10.0),\n+            new RawQuery.Result<String>(\"2\", 10.0),\n+            new RawQuery.Result<String>(\"3\", 10.0),\n+            new RawQuery.Result<String>(\"4\", 10.0),\n+            new RawQuery.Result<String>(\"5\", 10.0));\n+\n+        List x2 = List.of(new RawQuery.Result<String>(\"6\", 10.0),\n+            new RawQuery.Result<String>(\"7\", 10.0));\n+\n+        String SCROLL_NAME = \"scroll-2\";\n+        ElasticSearchResponse r1 = new ElasticSearchResponse();\n+        r1.setScrollId(SCROLL_NAME);\n+        r1.setTotal(x1.size());\n+        r1.setResults(x1.asJava());\n+\n+        ElasticSearchResponse r2 = new ElasticSearchResponse();\n+        r2.setScrollId(SCROLL_NAME);\n+        r2.setTotal(x2.size());\n+        r2.setResults(x2.asJava());\n+\n+        ElasticSearchClient client = mock(ElasticSearchClient.class);\n+\n+        expect(client.search(SCROLL_NAME)).andReturn(r2);\n+        client.deleteScroll(SCROLL_NAME);\n+        replay(client);\n+\n+        ElasticSearchScroll scroll = new ElasticSearchScroll(client, r1, 5);\n+        for (int i=0 ; i<6 ; i++) {\n+            scroll.hasNext();\n+            scroll.next();\n+        }\n+\n+        verify(client);\n+    }\n+\n+    @Test(expected = NoSuchElementException.class)", "originalCommit": "d41ea169086dfe01dbc244fb5f03be8100e9fe8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1NDExNw==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r384854117", "bodyText": "fixed", "author": "pkendall64", "createdAt": "2020-02-27T00:47:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NjU3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5ODY3Ng==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r385298676", "bodyText": "done", "author": "pkendall64", "createdAt": "2020-02-27T18:41:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NjU3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NzA3Mg==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r384777072", "bodyText": "nit: this should be the junit5 test-method.", "author": "farodin91", "createdAt": "2020-02-26T21:28:37Z", "path": "janusgraph-es/src/test/java/org/janusgraph/diskstorage/es/ElasticSearchScrollTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+// Copyright 2017 JanusGraph Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package org.janusgraph.diskstorage.es;\n+\n+import io.vavr.collection.List;\n+import org.janusgraph.diskstorage.indexing.RawQuery;\n+import org.junit.Test;", "originalCommit": "d41ea169086dfe01dbc244fb5f03be8100e9fe8d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1NDA4MA==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r384854080", "bodyText": "fixed", "author": "pkendall64", "createdAt": "2020-02-27T00:47:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NzA3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5ODcyNQ==", "url": "https://github.com/JanusGraph/janusgraph/pull/1986#discussion_r385298725", "bodyText": "done", "author": "pkendall64", "createdAt": "2020-02-27T18:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc3NzA3Mg=="}], "type": "inlineReview"}, {"oid": "1b9013dc908a4ec7387cee763ff777583bbdc3b8", "url": "https://github.com/JanusGraph/janusgraph/commit/1b9013dc908a4ec7387cee763ff777583bbdc3b8", "message": "Fix scroll leak in scroll handling.\nIf the entire scroll is read in the constructor the scroll was not deleted in ES.\nFix queue blocking when reading with next and not calling hasNext so that all data from subsequent pages is read.\nAdd unit tests for ElasticSearchScroll.\n\nFixes #1985\n\nSigned-off-by: Paul Kendall <pkendall64@gmail.com>", "committedDate": "2020-02-27T00:44:57Z", "type": "forcePushed"}, {"oid": "12bd4c744f4ef112166edd8b9e4df213577ebdda", "url": "https://github.com/JanusGraph/janusgraph/commit/12bd4c744f4ef112166edd8b9e4df213577ebdda", "message": "Fix scroll leak in scroll handling.\nIf the entire scroll is read in the constructor the scroll was not deleted in ES.\nFix queue blocking when reading with next and not calling hasNext so that all data from subsequent pages is read.\nAdd unit tests for ElasticSearchScroll.\n\nFixes #1985\n\nSigned-off-by: Paul Kendall <pkendall64@gmail.com>", "committedDate": "2020-02-27T00:46:09Z", "type": "commit"}, {"oid": "12bd4c744f4ef112166edd8b9e4df213577ebdda", "url": "https://github.com/JanusGraph/janusgraph/commit/12bd4c744f4ef112166edd8b9e4df213577ebdda", "message": "Fix scroll leak in scroll handling.\nIf the entire scroll is read in the constructor the scroll was not deleted in ES.\nFix queue blocking when reading with next and not calling hasNext so that all data from subsequent pages is read.\nAdd unit tests for ElasticSearchScroll.\n\nFixes #1985\n\nSigned-off-by: Paul Kendall <pkendall64@gmail.com>", "committedDate": "2020-02-27T00:46:09Z", "type": "forcePushed"}]}