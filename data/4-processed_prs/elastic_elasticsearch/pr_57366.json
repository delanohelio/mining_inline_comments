{"pr_number": 57366, "pr_title": "[DOCS] EQL: Document get async EQL search API", "pr_createdAt": "2020-05-29T15:02:44Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57366", "timeline": [{"oid": "1e7270a1b27da8f43cdd5469849dee3693559b39", "url": "https://github.com/elastic/elasticsearch/commit/1e7270a1b27da8f43cdd5469849dee3693559b39", "message": "[DOCS] Document get async EQL search API", "committedDate": "2020-05-29T14:56:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0MDk5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/57366#discussion_r432740999", "bodyText": "I am not quite sure what you mean by \"block other requests\" here. It should only block the current request. Please let me know if you observed other behavior.", "author": "imotov", "createdAt": "2020-05-29T21:20:58Z", "path": "docs/reference/eql/get-async-eql-search-api.asciidoc", "diffHunk": "@@ -0,0 +1,83 @@\n+[role=\"xpack\"]\n+[testenv=\"basic\"]\n+\n+[[get-async-eql-search-api]]\n+=== Get async EQL search API\n+++++\n+<titleabbrev>Get async EQL search</titleabbrev>\n+++++\n+\n+dev::[]\n+\n+Returns the current status and available results for an <<eql-search-async,async\n+EQL search>> or a <<eql-search-store-sync-eql-search,stored synchronous EQL\n+search>>.\n+\n+[source,console]\n+----\n+GET /_eql/search/FkpMRkJGS1gzVDRlM3g4ZzMyRGlLbkEaTXlJZHdNT09TU2VTZVBoNDM3cFZMUToxMDM=\n+----\n+// TEST[skip: no access to search ID]\n+\n+[[get-async-eql-search-api-request]]\n+==== {api-request-title}\n+\n+`GET /_eql/search/<search_id>`\n+\n+[[get-async-eql-search-api-prereqs]]\n+==== {api-prereq-title}\n+\n+See <<eql-requirements,EQL requirements>>.\n+\n+[[get-async-eql-search-api-limitations]]\n+===== Limitations\n+\n+See <<eql-limitations,EQL limitations>>.\n+\n+[[get-async-eql-search-api-path-params]]\n+==== {api-path-parms-title}\n+\n+`<search_id>`::\n+(Required, string)\n+Identifier for the search.\n++\n+A search ID is provided in the <<eql-search-api,EQL search API>>'s response for\n+an <<eql-search-async,async search>>. A search ID is also provided if the\n+request's <<eql-search-api-keep-on-completion,`keep_on_completion`>> parameter\n+is `true`.\n+\n+[[get-async-eql-search-api-query-params]]\n+==== {api-query-parms-title}\n+\n+`keep_alive`::\n+(Optional, <<time-units,time value>>)\n+Period for which the search and its results are stored on the cluster. Defaults\n+to the `keep_alive` value set by the search's <<eql-search-api,EQL search\n+API>> request.\n++\n+If specified, this parameter sets a new `keep_alive` period for the search,\n+starting when the get async EQL search API request executes. This new period\n+overwrites the one specified in the EQL search API request.\n++\n+When this period expires, the search and its results are deleted, even if the\n+search is ongoing.\n+\n+`wait_for_completion_timeout`::\n+(Optional, <<time-units,time value>>)\n+Timeout duration to block other requests while waiting for the request to", "originalCommit": "1e7270a1b27da8f43cdd5469849dee3693559b39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0Nzk1MA==", "url": "https://github.com/elastic/elasticsearch/pull/57366#discussion_r432747950", "bodyText": "You're correct. Thanks for catching this. I've updated the definition with 30518af.", "author": "jrodewig", "createdAt": "2020-05-29T21:40:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0MDk5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0MTMyNg==", "url": "https://github.com/elastic/elasticsearch/pull/57366#discussion_r432741326", "bodyText": "We don't have this for now, but hopefully, we will have some partial results soon. So, it might make sense to leave it.", "author": "imotov", "createdAt": "2020-05-29T21:21:57Z", "path": "docs/reference/eql/search.asciidoc", "diffHunk": "@@ -492,6 +492,7 @@ API returns a response that includes:\n * An `is_partial` value of `true`, indicating the response does not contain\n   complete search results.\n * An `is_running` value of `true`, indicating the search is async and ongoing.\n+* Partial search results, if available, in the `hits` property.", "originalCommit": "1e7270a1b27da8f43cdd5469849dee3693559b39", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0ODEwMA==", "url": "https://github.com/elastic/elasticsearch/pull/57366#discussion_r432748100", "bodyText": "I'll leave this in for now. It'll be easy to remove later if wanted.", "author": "jrodewig", "createdAt": "2020-05-29T21:41:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0MTMyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc1MTMwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/57366#discussion_r432751301", "bodyText": "\ud83d\udc4d", "author": "imotov", "createdAt": "2020-05-29T21:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc0MTMyNg=="}], "type": "inlineReview"}, {"oid": "30518af594e34c761a4cb3bdfd0e38c7ced41c48", "url": "https://github.com/elastic/elasticsearch/commit/30518af594e34c761a4cb3bdfd0e38c7ced41c48", "message": "remove blocking reference", "committedDate": "2020-05-29T21:37:33Z", "type": "commit"}, {"oid": "056a7f73ca95753f6063d71a3dbedf2b4a75a1ce", "url": "https://github.com/elastic/elasticsearch/commit/056a7f73ca95753f6063d71a3dbedf2b4a75a1ce", "message": "minor reword", "committedDate": "2020-05-29T21:42:01Z", "type": "commit"}]}