{"pr_number": 53873, "pr_title": "Add heuristics to compute pre_filter_shard_size when unspecified", "pr_createdAt": "2020-03-20T14:13:27Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53873", "timeline": [{"oid": "0166989e599baba6cc06340adb58615742dde12a", "url": "https://github.com/elastic/elasticsearch/commit/0166989e599baba6cc06340adb58615742dde12a", "message": "Add better heuristic to compute pre_filter_shard_size when unspecified\n\nThis commit changes the pre_filter_shard_size default from 128 to unspecified.\nThis allows to apply heuristics based on the request and the target indices when deciding\nwhether the can match phase should run or not. When unspecified, this pr runs the can match phase\nautomatically if one of these conditions is met:\n  * The request targets more than 128 shards.\n  * The request contains read-only indices.\n  * The primary sort of the query targets an indexed field.\nUsers can opt-out from this behavior by setting the `pre_filter_shard_size` to a static value.\n\nCloses #39835", "committedDate": "2020-03-20T14:12:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4MDczOA==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r395680738", "bodyText": "s/it's/its  I believe we have the same in the msearch docs page too.", "author": "javanna", "createdAt": "2020-03-20T14:39:40Z", "path": "docs/reference/search/search.asciidoc", "diffHunk": "@@ -51,163 +51,167 @@ include::{docdir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n Defaults to `true`.\n \n `allow_partial_search_results`::\n-  (Optional, boolean) Indicates if an error should be returned if there is a \n+  (Optional, boolean) Indicates if an error should be returned if there is a\n   partial search failure or timeout. Defaults to `true`.\n \n `analyzer`::\n   (Optional, string) Defines the analyzer to use for the query string.\n-  \n+\n `analyze_wildcard`::\n-  (Optional, boolean) If `true`, wildcard and prefix queries will also be \n+  (Optional, boolean) If `true`, wildcard and prefix queries will also be\n   analyzed. Defaults to `false`.\n-  \n+\n `batched_reduce_size`::\n-  (Optional, integer) The number of shard results that should be reduced at once \n-  on the coordinating node. This value should be used as a protection mechanism \n-  to reduce the memory overhead per search request if the potential number of \n+  (Optional, integer) The number of shard results that should be reduced at once\n+  on the coordinating node. This value should be used as a protection mechanism\n+  to reduce the memory overhead per search request if the potential number of\n   shards in the request can be large. Defaults to `512`.\n-  \n+\n `ccs_minimize_roundtrips`::\n-  (Optional, boolean) Indicates whether network round-trips should be minimized \n+  (Optional, boolean) Indicates whether network round-trips should be minimized\n   as part of cross-cluster search requests execution. Defaults to `true`.\n-  \n+\n `default_operator`::\n-  (Optional, string) The default operator for query string query (AND or OR). \n+  (Optional, string) The default operator for query string query (AND or OR).\n   Defaults to `OR`.\n-  \n+\n `df`::\n-  (Optional, string) Defines the field to use as default where no field prefix \n+  (Optional, string) Defines the field to use as default where no field prefix\n   is given in the query string.\n-  \n+\n `docvalue_fields`::\n-  (Optional, string) A comma-separated list of fields to return as the docvalue \n+  (Optional, string) A comma-separated list of fields to return as the docvalue\n   representation of a field for each hit.\n-  \n+\n include::{docdir}/rest-api/common-parms.asciidoc[tag=expand-wildcards]\n +\n Defaults to `open`.\n-  \n+\n `explain`::\n-  (Optional, boolean) If `true`, returns detailed information about score \n+  (Optional, boolean) If `true`, returns detailed information about score\n   computation as part of a hit. Defaults to `false`.\n-  \n+\n `from`::\n   (Optional, integer) Defines the starting offset. Defaults to `0`.\n \n `ignore_throttled`::\n-  (Optional, boolean) If `true`, concrete, expanded or aliased indices will be \n+  (Optional, boolean) If `true`, concrete, expanded or aliased indices will be\n   ignored when throttled. Defaults to `false`.\n \n include::{docdir}/rest-api/common-parms.asciidoc[tag=index-ignore-unavailable]\n-  \n+\n `lenient`::\n-  (Optional, boolean) If `true`, format-based query failures (such as \n+  (Optional, boolean) If `true`, format-based query failures (such as\n   providing text to a numeric field) will be ignored. Defaults to `false`.\n-  \n+\n `max_concurrent_shard_requests`::\n-  (Optional, integer) Defines the number of concurrent shard requests per node \n-  this search executes concurrently. This value should be used to limit the \n-  impact of the search on the cluster in order to limit the number of concurrent \n+  (Optional, integer) Defines the number of concurrent shard requests per node\n+  this search executes concurrently. This value should be used to limit the\n+  impact of the search on the cluster in order to limit the number of concurrent\n   shard requests. Defaults to `5`.\n-  \n+\n `pre_filter_shard_size`::\n-  (Optional, integer) Defines a threshold that enforces a pre-filter roundtrip \n-  to prefilter search shards based on query rewriting if the number of shards \n-  the search request expands to exceeds the threshold. This filter roundtrip can \n-  limit the number of shards significantly if for instance a shard can not match \n-  any documents based on it's rewrite method ie. if date filters are mandatory \n-  to match but the shard bounds and the query are disjoint. Defaults to `128`.\n+  (Optional, integer) Defines a threshold that enforces a pre-filter roundtrip\n+  to prefilter search shards based on query rewriting if the number of shards\n+  the search request expands to exceeds the threshold. This filter roundtrip can\n+  limit the number of shards significantly if for instance a shard can not match\n+  any documents based on it's rewrite method ie. if date filters are mandatory", "originalCommit": "0166989e599baba6cc06340adb58615742dde12a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxODU5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r396418592", "bodyText": "dcf44bf", "author": "jimczi", "createdAt": "2020-03-23T12:37:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4MDczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4MTc2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r395681761", "bodyText": "s/it's/its here too", "author": "javanna", "createdAt": "2020-03-20T14:41:15Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/api/msearch.json", "diffHunk": "@@ -50,8 +50,7 @@\n       },\n       \"pre_filter_shard_size\":{\n         \"type\":\"number\",\n-        \"description\":\"A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\u00a0number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint.\",\n-        \"default\":128\n+        \"description\":\"A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\u00a0number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint.\"", "originalCommit": "0166989e599baba6cc06340adb58615742dde12a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxODY4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r396418687", "bodyText": "dcf44bf", "author": "jimczi", "createdAt": "2020-03-23T12:37:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4MTc2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4MzA1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r395683052", "bodyText": "s/it's/its here too  I do wonder if we should shorten these descriptions in the rest API spec", "author": "javanna", "createdAt": "2020-03-20T14:43:16Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/api/search.json", "diffHunk": "@@ -219,8 +219,7 @@\n       },\n       \"pre_filter_shard_size\":{\n         \"type\":\"number\",\n-        \"description\":\"A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\u00a0number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint.\",\n-        \"default\":128\n+        \"description\":\"A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the\u00a0number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on it's rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint.\"", "originalCommit": "0166989e599baba6cc06340adb58615742dde12a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxODYyMw==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r396418623", "bodyText": "dcf44bf", "author": "jimczi", "createdAt": "2020-03-23T12:37:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4MzA1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcwMTk1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r395701959", "bodyText": "thinking out loud: this could hit people who use CCS without minimizing roundtrips and experience latency, but given that we minimize roundtrips by default, it should be ok. and they can always increase the parameter manually should they see their CCS search slow down.", "author": "javanna", "createdAt": "2020-03-20T15:10:50Z", "path": "docs/reference/search/search.asciidoc", "diffHunk": "@@ -51,163 +51,167 @@ include::{docdir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n Defaults to `true`.\n \n `allow_partial_search_results`::\n-  (Optional, boolean) Indicates if an error should be returned if there is a \n+  (Optional, boolean) Indicates if an error should be returned if there is a\n   partial search failure or timeout. Defaults to `true`.\n \n `analyzer`::\n   (Optional, string) Defines the analyzer to use for the query string.\n-  \n+\n `analyze_wildcard`::\n-  (Optional, boolean) If `true`, wildcard and prefix queries will also be \n+  (Optional, boolean) If `true`, wildcard and prefix queries will also be\n   analyzed. Defaults to `false`.\n-  \n+\n `batched_reduce_size`::\n-  (Optional, integer) The number of shard results that should be reduced at once \n-  on the coordinating node. This value should be used as a protection mechanism \n-  to reduce the memory overhead per search request if the potential number of \n+  (Optional, integer) The number of shard results that should be reduced at once\n+  on the coordinating node. This value should be used as a protection mechanism\n+  to reduce the memory overhead per search request if the potential number of\n   shards in the request can be large. Defaults to `512`.\n-  \n+\n `ccs_minimize_roundtrips`::\n-  (Optional, boolean) Indicates whether network round-trips should be minimized \n+  (Optional, boolean) Indicates whether network round-trips should be minimized\n   as part of cross-cluster search requests execution. Defaults to `true`.\n-  \n+\n `default_operator`::\n-  (Optional, string) The default operator for query string query (AND or OR). \n+  (Optional, string) The default operator for query string query (AND or OR).\n   Defaults to `OR`.\n-  \n+\n `df`::\n-  (Optional, string) Defines the field to use as default where no field prefix \n+  (Optional, string) Defines the field to use as default where no field prefix\n   is given in the query string.\n-  \n+\n `docvalue_fields`::\n-  (Optional, string) A comma-separated list of fields to return as the docvalue \n+  (Optional, string) A comma-separated list of fields to return as the docvalue\n   representation of a field for each hit.\n-  \n+\n include::{docdir}/rest-api/common-parms.asciidoc[tag=expand-wildcards]\n +\n Defaults to `open`.\n-  \n+\n `explain`::\n-  (Optional, boolean) If `true`, returns detailed information about score \n+  (Optional, boolean) If `true`, returns detailed information about score\n   computation as part of a hit. Defaults to `false`.\n-  \n+\n `from`::\n   (Optional, integer) Defines the starting offset. Defaults to `0`.\n \n `ignore_throttled`::\n-  (Optional, boolean) If `true`, concrete, expanded or aliased indices will be \n+  (Optional, boolean) If `true`, concrete, expanded or aliased indices will be\n   ignored when throttled. Defaults to `false`.\n \n include::{docdir}/rest-api/common-parms.asciidoc[tag=index-ignore-unavailable]\n-  \n+\n `lenient`::\n-  (Optional, boolean) If `true`, format-based query failures (such as \n+  (Optional, boolean) If `true`, format-based query failures (such as\n   providing text to a numeric field) will be ignored. Defaults to `false`.\n-  \n+\n `max_concurrent_shard_requests`::\n-  (Optional, integer) Defines the number of concurrent shard requests per node \n-  this search executes concurrently. This value should be used to limit the \n-  impact of the search on the cluster in order to limit the number of concurrent \n+  (Optional, integer) Defines the number of concurrent shard requests per node\n+  this search executes concurrently. This value should be used to limit the\n+  impact of the search on the cluster in order to limit the number of concurrent\n   shard requests. Defaults to `5`.\n-  \n+\n `pre_filter_shard_size`::\n-  (Optional, integer) Defines a threshold that enforces a pre-filter roundtrip \n-  to prefilter search shards based on query rewriting if the number of shards \n-  the search request expands to exceeds the threshold. This filter roundtrip can \n-  limit the number of shards significantly if for instance a shard can not match \n-  any documents based on it's rewrite method ie. if date filters are mandatory \n-  to match but the shard bounds and the query are disjoint. Defaults to `128`.\n+  (Optional, integer) Defines a threshold that enforces a pre-filter roundtrip\n+  to prefilter search shards based on query rewriting if the number of shards\n+  the search request expands to exceeds the threshold. This filter roundtrip can\n+  limit the number of shards significantly if for instance a shard can not match\n+  any documents based on it's rewrite method ie. if date filters are mandatory\n+  to match but the shard bounds and the query are disjoint.\n+  When unspecified, the pre-filter phase is executed if any of these conditions is met:\n+    - The request targets more than `128` shards.\n+    - The request contains read-only indices.\n+    - The primary sort of the query targets an indexed field.", "originalCommit": "0166989e599baba6cc06340adb58615742dde12a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcwMjc3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r395702776", "bodyText": "shall we clarify: \"the request targets one or more read-only index\"?", "author": "javanna", "createdAt": "2020-03-20T15:12:05Z", "path": "docs/reference/search/search.asciidoc", "diffHunk": "@@ -51,163 +51,167 @@ include::{docdir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n Defaults to `true`.\n \n `allow_partial_search_results`::\n-  (Optional, boolean) Indicates if an error should be returned if there is a \n+  (Optional, boolean) Indicates if an error should be returned if there is a\n   partial search failure or timeout. Defaults to `true`.\n \n `analyzer`::\n   (Optional, string) Defines the analyzer to use for the query string.\n-  \n+\n `analyze_wildcard`::\n-  (Optional, boolean) If `true`, wildcard and prefix queries will also be \n+  (Optional, boolean) If `true`, wildcard and prefix queries will also be\n   analyzed. Defaults to `false`.\n-  \n+\n `batched_reduce_size`::\n-  (Optional, integer) The number of shard results that should be reduced at once \n-  on the coordinating node. This value should be used as a protection mechanism \n-  to reduce the memory overhead per search request if the potential number of \n+  (Optional, integer) The number of shard results that should be reduced at once\n+  on the coordinating node. This value should be used as a protection mechanism\n+  to reduce the memory overhead per search request if the potential number of\n   shards in the request can be large. Defaults to `512`.\n-  \n+\n `ccs_minimize_roundtrips`::\n-  (Optional, boolean) Indicates whether network round-trips should be minimized \n+  (Optional, boolean) Indicates whether network round-trips should be minimized\n   as part of cross-cluster search requests execution. Defaults to `true`.\n-  \n+\n `default_operator`::\n-  (Optional, string) The default operator for query string query (AND or OR). \n+  (Optional, string) The default operator for query string query (AND or OR).\n   Defaults to `OR`.\n-  \n+\n `df`::\n-  (Optional, string) Defines the field to use as default where no field prefix \n+  (Optional, string) Defines the field to use as default where no field prefix\n   is given in the query string.\n-  \n+\n `docvalue_fields`::\n-  (Optional, string) A comma-separated list of fields to return as the docvalue \n+  (Optional, string) A comma-separated list of fields to return as the docvalue\n   representation of a field for each hit.\n-  \n+\n include::{docdir}/rest-api/common-parms.asciidoc[tag=expand-wildcards]\n +\n Defaults to `open`.\n-  \n+\n `explain`::\n-  (Optional, boolean) If `true`, returns detailed information about score \n+  (Optional, boolean) If `true`, returns detailed information about score\n   computation as part of a hit. Defaults to `false`.\n-  \n+\n `from`::\n   (Optional, integer) Defines the starting offset. Defaults to `0`.\n \n `ignore_throttled`::\n-  (Optional, boolean) If `true`, concrete, expanded or aliased indices will be \n+  (Optional, boolean) If `true`, concrete, expanded or aliased indices will be\n   ignored when throttled. Defaults to `false`.\n \n include::{docdir}/rest-api/common-parms.asciidoc[tag=index-ignore-unavailable]\n-  \n+\n `lenient`::\n-  (Optional, boolean) If `true`, format-based query failures (such as \n+  (Optional, boolean) If `true`, format-based query failures (such as\n   providing text to a numeric field) will be ignored. Defaults to `false`.\n-  \n+\n `max_concurrent_shard_requests`::\n-  (Optional, integer) Defines the number of concurrent shard requests per node \n-  this search executes concurrently. This value should be used to limit the \n-  impact of the search on the cluster in order to limit the number of concurrent \n+  (Optional, integer) Defines the number of concurrent shard requests per node\n+  this search executes concurrently. This value should be used to limit the\n+  impact of the search on the cluster in order to limit the number of concurrent\n   shard requests. Defaults to `5`.\n-  \n+\n `pre_filter_shard_size`::\n-  (Optional, integer) Defines a threshold that enforces a pre-filter roundtrip \n-  to prefilter search shards based on query rewriting if the number of shards \n-  the search request expands to exceeds the threshold. This filter roundtrip can \n-  limit the number of shards significantly if for instance a shard can not match \n-  any documents based on it's rewrite method ie. if date filters are mandatory \n-  to match but the shard bounds and the query are disjoint. Defaults to `128`.\n+  (Optional, integer) Defines a threshold that enforces a pre-filter roundtrip\n+  to prefilter search shards based on query rewriting if the number of shards\n+  the search request expands to exceeds the threshold. This filter roundtrip can\n+  limit the number of shards significantly if for instance a shard can not match\n+  any documents based on it's rewrite method ie. if date filters are mandatory\n+  to match but the shard bounds and the query are disjoint.\n+  When unspecified, the pre-filter phase is executed if any of these conditions is met:\n+    - The request targets more than `128` shards.\n+    - The request contains read-only indices.", "originalCommit": "0166989e599baba6cc06340adb58615742dde12a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxODQ5NA==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r396418494", "bodyText": "++, dcf44bf", "author": "jimczi", "createdAt": "2020-03-23T12:37:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcwMjc3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcwNTc2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r395705763", "bodyText": "shall we leave the current behaviour for async search? I was under the impression that the default behaviour is now good enough also for async search and we may not need to force pre_filter_shard_size to 1 anymore. We talked about preventing users from setting such parameter manually in async search, and I think I need a refresher on these two scenarios:\n\nmay there be a scenario where the value must be 1 in the context of async search although these conditions are not met?\nMay it ever be necessary for users to increase it in the context of async search?\n\nWhatever the outcome of this, we need to think about whether we want to leave the pre_filter_shard_size section/explanation in the async search docs page.", "author": "javanna", "createdAt": "2020-03-20T15:16:20Z", "path": "docs/reference/search/search.asciidoc", "diffHunk": "@@ -51,163 +51,167 @@ include::{docdir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n Defaults to `true`.\n \n `allow_partial_search_results`::\n-  (Optional, boolean) Indicates if an error should be returned if there is a \n+  (Optional, boolean) Indicates if an error should be returned if there is a\n   partial search failure or timeout. Defaults to `true`.\n \n `analyzer`::\n   (Optional, string) Defines the analyzer to use for the query string.\n-  \n+\n `analyze_wildcard`::\n-  (Optional, boolean) If `true`, wildcard and prefix queries will also be \n+  (Optional, boolean) If `true`, wildcard and prefix queries will also be\n   analyzed. Defaults to `false`.\n-  \n+\n `batched_reduce_size`::\n-  (Optional, integer) The number of shard results that should be reduced at once \n-  on the coordinating node. This value should be used as a protection mechanism \n-  to reduce the memory overhead per search request if the potential number of \n+  (Optional, integer) The number of shard results that should be reduced at once\n+  on the coordinating node. This value should be used as a protection mechanism\n+  to reduce the memory overhead per search request if the potential number of\n   shards in the request can be large. Defaults to `512`.\n-  \n+\n `ccs_minimize_roundtrips`::\n-  (Optional, boolean) Indicates whether network round-trips should be minimized \n+  (Optional, boolean) Indicates whether network round-trips should be minimized\n   as part of cross-cluster search requests execution. Defaults to `true`.\n-  \n+\n `default_operator`::\n-  (Optional, string) The default operator for query string query (AND or OR). \n+  (Optional, string) The default operator for query string query (AND or OR).\n   Defaults to `OR`.\n-  \n+\n `df`::\n-  (Optional, string) Defines the field to use as default where no field prefix \n+  (Optional, string) Defines the field to use as default where no field prefix\n   is given in the query string.\n-  \n+\n `docvalue_fields`::\n-  (Optional, string) A comma-separated list of fields to return as the docvalue \n+  (Optional, string) A comma-separated list of fields to return as the docvalue\n   representation of a field for each hit.\n-  \n+\n include::{docdir}/rest-api/common-parms.asciidoc[tag=expand-wildcards]\n +\n Defaults to `open`.\n-  \n+\n `explain`::\n-  (Optional, boolean) If `true`, returns detailed information about score \n+  (Optional, boolean) If `true`, returns detailed information about score\n   computation as part of a hit. Defaults to `false`.\n-  \n+\n `from`::\n   (Optional, integer) Defines the starting offset. Defaults to `0`.\n \n `ignore_throttled`::\n-  (Optional, boolean) If `true`, concrete, expanded or aliased indices will be \n+  (Optional, boolean) If `true`, concrete, expanded or aliased indices will be\n   ignored when throttled. Defaults to `false`.\n \n include::{docdir}/rest-api/common-parms.asciidoc[tag=index-ignore-unavailable]\n-  \n+\n `lenient`::\n-  (Optional, boolean) If `true`, format-based query failures (such as \n+  (Optional, boolean) If `true`, format-based query failures (such as\n   providing text to a numeric field) will be ignored. Defaults to `false`.\n-  \n+\n `max_concurrent_shard_requests`::\n-  (Optional, integer) Defines the number of concurrent shard requests per node \n-  this search executes concurrently. This value should be used to limit the \n-  impact of the search on the cluster in order to limit the number of concurrent \n+  (Optional, integer) Defines the number of concurrent shard requests per node\n+  this search executes concurrently. This value should be used to limit the\n+  impact of the search on the cluster in order to limit the number of concurrent\n   shard requests. Defaults to `5`.\n-  \n+\n `pre_filter_shard_size`::\n-  (Optional, integer) Defines a threshold that enforces a pre-filter roundtrip \n-  to prefilter search shards based on query rewriting if the number of shards \n-  the search request expands to exceeds the threshold. This filter roundtrip can \n-  limit the number of shards significantly if for instance a shard can not match \n-  any documents based on it's rewrite method ie. if date filters are mandatory \n-  to match but the shard bounds and the query are disjoint. Defaults to `128`.\n+  (Optional, integer) Defines a threshold that enforces a pre-filter roundtrip\n+  to prefilter search shards based on query rewriting if the number of shards\n+  the search request expands to exceeds the threshold. This filter roundtrip can\n+  limit the number of shards significantly if for instance a shard can not match\n+  any documents based on it's rewrite method ie. if date filters are mandatory\n+  to match but the shard bounds and the query are disjoint.\n+  When unspecified, the pre-filter phase is executed if any of these conditions is met:\n+    - The request targets more than `128` shards.\n+    - The request contains read-only indices.\n+    - The primary sort of the query targets an indexed field.\n \n `preference`::", "originalCommit": "0166989e599baba6cc06340adb58615742dde12a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMjE5OA==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r396422198", "bodyText": "may there be a scenario where the value must be 1 in the context of async search although these conditions are not met?\n\nI think so, we expect queries on time-based indices so always running the can_match phase makes sense to me. That's more difficult to apply to blocking queries where the threshold of 128 is used because we don't know what type of index is queried ?\n\nMay it ever be necessary for users to increase it in the context of async search?\n\nI agree that this part is more questionable. I am ok to remove the support for this in async_search if we think that it's not needed.\nWe could also remove the docs for this option but leave it in the code as an opt-out.\nI am fine with both options.", "author": "jimczi", "createdAt": "2020-03-23T12:43:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcwNTc2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMTY4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r396431683", "bodyText": ", we expect queries on time-based\n\nThat means that in most of the cases, the number of shards will be higher than 128, but I get your reasoning. Though if you don't sort on time and you query less than 128 shards on time based indices, maybe this optimization is not so useful. But I am sure it does not hurt to force 1 for async search.\nI lean towards rejecting requests that try to set it. It feels like 1 is a good default for async search, and increasing it goes against the nature of async search, which is for potentially long running queries, hence you don't mind so much if there's an extra roundtrip.", "author": "javanna", "createdAt": "2020-03-23T13:00:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcwNTc2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ0MjAzNw==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r396442037", "bodyText": "I lean towards rejecting requests that try to set it.\n\nSure, no objection here ;).", "author": "jimczi", "createdAt": "2020-03-23T13:17:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcwNTc2Mw=="}], "type": "inlineReview"}, {"oid": "dcf44bf5021c0fc4c459ba4073acd57f2708c13f", "url": "https://github.com/elastic/elasticsearch/commit/dcf44bf5021c0fc4c459ba4073acd57f2708c13f", "message": "review comment", "committedDate": "2020-03-23T12:35:55Z", "type": "commit"}, {"oid": "b70c7f5f453031b6550d779b1d4112d6540dc063", "url": "https://github.com/elastic/elasticsearch/commit/b70c7f5f453031b6550d779b1d4112d6540dc063", "message": "Merge branch 'master' into pre_filter_shard_size_heuristic", "committedDate": "2020-03-23T12:36:42Z", "type": "commit"}, {"oid": "4c5b0f70b5eec5297aa20cf1a814bc7611264fd6", "url": "https://github.com/elastic/elasticsearch/commit/4c5b0f70b5eec5297aa20cf1a814bc7611264fd6", "message": "fix cssduelit", "committedDate": "2020-03-23T13:14:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ1Mzk3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/53873#discussion_r396453975", "bodyText": "would it make sense to still explain and make sure that users don't mess with pre_filter_shard_size at this point? I would not want them to end up setting it when searching frozen indices. It sounds like there is never a good reason to do so?", "author": "javanna", "createdAt": "2020-03-23T13:35:14Z", "path": "docs/reference/frozen-indices.asciidoc", "diffHunk": "@@ -85,15 +85,6 @@ GET /twitter/_search?q=user:kimchy&ignore_throttled=false\n --------------------------------------------------\n // TEST[setup:twitter]\n \n-[IMPORTANT]\n-================================\n-While frozen indices are slow to search, they can be pre-filtered efficiently. The request parameter `pre_filter_shard_size` specifies\n-a threshold that, when exceeded, will enforce a round-trip to pre-filter search shards that cannot possibly match.\n-This filter phase can limit the number of shards significantly. For instance, if a date range filter is applied, then all indices (frozen or unfrozen) that do not contain documents within the date range can be skipped efficiently.\n-The default value for `pre_filter_shard_size` is `128` but it's recommended to set it to `1` when searching frozen indices. There is no\n-significant overhead associated with this pre-filter phase.", "originalCommit": "4c5b0f70b5eec5297aa20cf1a814bc7611264fd6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}