{"pr_number": 55982, "pr_title": "Handle merging dotted object names when merging V2 template mappings", "pr_createdAt": "2020-04-29T21:21:53Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55982", "timeline": [{"oid": "f5a0851e3346ce6c4b2f3a35b08bfbe7ad311a83", "url": "https://github.com/elastic/elasticsearch/commit/f5a0851e3346ce6c4b2f3a35b08bfbe7ad311a83", "message": "Handle merging dotted object names when merging V2 template mappings\n\nWhen merging component template, index template, and request mappings, we now treat any declaration\nof a top-level field the same as replacing all sub-objects. For example, assuming two component\ntemplates with mappings and template B taking precedence:\n\n```\nA: {foo: {...}}\nB: {foo.bar: {...}}\nResult: {foo.bar: {...}}\n\nA: {foo.bar: {...}}\nB: {foo: {...}}\nResult: {foo: {...}}\n\nA: {foo.bar: {...}}\nB: {foo.baz: {...}}\nResult: {foo.baz: {...}}\n```\n\nRelates to #53101", "committedDate": "2020-04-29T20:48:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg1ODA0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/55982#discussion_r417858043", "bodyText": "If I understand this correctly it can be simplified:\nstatic Map<String, Object> mergeIgnoringDots(Map<String, Object> first, Map<String, Object> second) {\n    Objects.requireNonNull(first, \"merging requires two non-null maps but the first map was null\");\n    Objects.requireNonNull(second, \"merging requires two non-null maps but the second map was null\");\n    Map<String, Object> results = new HashMap<>(first);\n    Set<String> prefixes = second.keySet().stream().map(MetadataCreateIndexService::prefix).collect(Collectors.toSet());\n    results.keySet().removeIf(k -> prefixes.contains(prefix(k)));\n    results.putAll(second);\n    return results;\n}\n\nprivate static String prefix(String s) {\n    return s.split(\"\\\\.\", 2)[0];\n}", "author": "probakowski", "createdAt": "2020-04-30T08:54:38Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java", "diffHunk": "@@ -596,6 +597,52 @@ private ClusterState applyCreateIndexRequestWithExistingMetadata(final ClusterSt\n         return Collections.singletonMap(MapperService.SINGLE_MAPPING_NAME, finalMappings);\n     }\n \n+    /**\n+     * Add the objects in the second map to the first, where the keys in the {@code second} map have\n+     * higher predecence and overwrite the keys in the {@code first} map. In the event of a key with\n+     * a dot in it (ie, \"foo.bar\"), the keys are treated as only the prefix counting towards\n+     * equality. If the {@code second} map has a key such as \"foo\", all keys starting from \"foo.\" in\n+     * the {@code first} map are discarded.\n+     */\n+    static Map<String, Object> mergeIgnoringDots(Map<String, Object> first, Map<String, Object> second) {", "originalCommit": "f5a0851e3346ce6c4b2f3a35b08bfbe7ad311a83", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA1MzcxMw==", "url": "https://github.com/elastic/elasticsearch/pull/55982#discussion_r418053713", "bodyText": "Sounds good, that works and passes the tests, updated the function.", "author": "dakrone", "createdAt": "2020-04-30T14:29:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg1ODA0Mw=="}], "type": "inlineReview"}, {"oid": "6a08f44a277323999aca45db01b9052916f5f432", "url": "https://github.com/elastic/elasticsearch/commit/6a08f44a277323999aca45db01b9052916f5f432", "message": "Use simplified function", "committedDate": "2020-04-30T14:29:29Z", "type": "commit"}]}