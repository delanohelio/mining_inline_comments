{"pr_number": 57596, "pr_title": "[DOCS] Add data stream overview and intro", "pr_createdAt": "2020-06-03T12:56:44Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57596", "timeline": [{"oid": "9cf65b065fc9eced62ce8c418410643a1111accd", "url": "https://github.com/elastic/elasticsearch/commit/9cf65b065fc9eced62ce8c418410643a1111accd", "message": "Added data streams overview page and\nan introduction to data streams.\n\nRelates to #53100", "committedDate": "2020-06-03T12:55:35Z", "type": "commit"}, {"oid": "7e2c7623b31cc8c40f86f0a68ddcd09a81d12779", "url": "https://github.com/elastic/elasticsearch/commit/7e2c7623b31cc8c40f86f0a68ddcd09a81d12779", "message": "fixed docs?", "committedDate": "2020-06-03T13:04:31Z", "type": "commit"}, {"oid": "7de81e7a9796745c08c2d952ccea52621d958f64", "url": "https://github.com/elastic/elasticsearch/commit/7de81e7a9796745c08c2d952ccea52621d958f64", "message": "fingers crossed.", "committedDate": "2020-06-03T13:13:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU1NTEyOA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434555128", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Data streams groups indices from the same time-based data source together as an\n          \n          \n            \n            Data streams group indices from the same time-based data source together as an", "author": "danhermann", "createdAt": "2020-06-03T13:12:18Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams groups indices from the same time-based data source together as an", "originalCommit": "7e2c7623b31cc8c40f86f0a68ddcd09a81d12779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU1NTQyMg==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434555422", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            opaque container. A data stream keeps track of an ordered list of indices. Also known\n          \n          \n            \n            opaque container. A data stream keeps track of an ordered list of indices which are also known", "author": "danhermann", "createdAt": "2020-06-03T13:12:44Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams groups indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices. Also known", "originalCommit": "7e2c7623b31cc8c40f86f0a68ddcd09a81d12779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU1NjAwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434556009", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            write index. The other backing indices handle read requests. A data steam only accepts\n          \n          \n            \n            write index. The other backing indices handle read requests. A data stream only accepts", "author": "danhermann", "createdAt": "2020-06-03T13:13:34Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams groups indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices. Also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data steam only accepts", "originalCommit": "7e2c7623b31cc8c40f86f0a68ddcd09a81d12779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU1NzgzNw==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434557837", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            be created via the Create Data Stream API, but this also requires the existence of\n          \n          \n            \n            be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of", "author": "danhermann", "createdAt": "2020-06-03T13:16:23Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams groups indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices. Also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data steam only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exists for the namespace the data stream gets\n+created in. A data stream is created automatically when indexing into namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the Create Data Stream API, but this also requires the existence of", "originalCommit": "7e2c7623b31cc8c40f86f0a68ddcd09a81d12779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU1ODkxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434558919", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            with a `data_stream` definition must exists for the namespace the data stream gets\n          \n          \n            \n            created in. A data stream is created automatically when indexing into namespace with\n          \n          \n            \n            with a `data_stream` definition must exist for the namespace in which the data stream\n          \n          \n            \n            is to be created. A data stream is created automatically when indexing into a namespace with", "author": "danhermann", "createdAt": "2020-06-03T13:18:09Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams groups indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices. Also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data steam only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exists for the namespace the data stream gets\n+created in. A data stream is created automatically when indexing into namespace with", "originalCommit": "7e2c7623b31cc8c40f86f0a68ddcd09a81d12779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MDM5MA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434560390", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The following APIs are for managing data stream APIs:\n          \n          \n            \n            The following APIs are available for managing data streams:", "author": "danhermann", "createdAt": "2020-06-03T13:20:26Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams groups indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices. Also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data steam only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exists for the namespace the data stream gets\n+created in. A data stream is created automatically when indexing into namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the Create Data Stream API, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+--\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+--------------------------------------------------\n+POST /logs-foobar/_doc\n+--------------------------------------------------\n+// TEST[continued]\n+\n+Response:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{\n+    \"_shards\" : {\n+        \"total\" : 1,\n+        \"failed\" : 0,\n+        \"successful\" : 1\n+    },\n+    \"_index\" : \"logs-foobar-000001\",\n+    \"_type\" : \"_doc\",\n+    \"_id\" : \"W0tpsmIBdwcYyG50zbta\",\n+    \"_version\" : 1,\n+    \"_seq_no\" : 0,\n+    \"_primary_term\" : 1,\n+    \"result\": \"created\"\n+}\n+--------------------------------------------------\n+// TESTRESPONSE[s/W0tpsmIBdwcYyG50zbta/$body._id/\n+\n+Or create a data stream via the create data stream api:\n+\n+[source,console-result]\n+--------------------------------------------------\n+PUT /_data_stream/logs-barbaz\n+--------------------------------------------------\n+// TEST[continued]\n+\n+////\n+[source,console]\n+-----------------------------------\n+DELETE /_data_stream/logs-foobar\n+DELETE /_data_stream/logs-barbaz\n+DELETE /_index_template/logs_template\n+-----------------------------------\n+// TEST[continued]\n+////\n+\n+[float]\n+[[data-streams-apis]]\n+== Data stream APIs\n+\n+The following APIs are for managing data stream APIs:", "originalCommit": "7e2c7623b31cc8c40f86f0a68ddcd09a81d12779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MTE1MA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434561150", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * To get meta information about data streams use <<indices-get-data-stream, the get data stream api>>.\n          \n          \n            \n            * To get information about data streams, use the <<indices-get-data-stream, get data stream API>>.", "author": "danhermann", "createdAt": "2020-06-03T13:21:36Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams groups indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices. Also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data steam only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exists for the namespace the data stream gets\n+created in. A data stream is created automatically when indexing into namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the Create Data Stream API, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+--\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+--------------------------------------------------\n+POST /logs-foobar/_doc\n+--------------------------------------------------\n+// TEST[continued]\n+\n+Response:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{\n+    \"_shards\" : {\n+        \"total\" : 1,\n+        \"failed\" : 0,\n+        \"successful\" : 1\n+    },\n+    \"_index\" : \"logs-foobar-000001\",\n+    \"_type\" : \"_doc\",\n+    \"_id\" : \"W0tpsmIBdwcYyG50zbta\",\n+    \"_version\" : 1,\n+    \"_seq_no\" : 0,\n+    \"_primary_term\" : 1,\n+    \"result\": \"created\"\n+}\n+--------------------------------------------------\n+// TESTRESPONSE[s/W0tpsmIBdwcYyG50zbta/$body._id/\n+\n+Or create a data stream via the create data stream api:\n+\n+[source,console-result]\n+--------------------------------------------------\n+PUT /_data_stream/logs-barbaz\n+--------------------------------------------------\n+// TEST[continued]\n+\n+////\n+[source,console]\n+-----------------------------------\n+DELETE /_data_stream/logs-foobar\n+DELETE /_data_stream/logs-barbaz\n+DELETE /_index_template/logs_template\n+-----------------------------------\n+// TEST[continued]\n+////\n+\n+[float]\n+[[data-streams-apis]]\n+== Data stream APIs\n+\n+The following APIs are for managing data stream APIs:\n+\n+* To get meta information about data streams use <<indices-get-data-stream, the get data stream api>>.", "originalCommit": "7e2c7623b31cc8c40f86f0a68ddcd09a81d12779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MTgyNA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434561824", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * To delete data streams use <<indices-delete-data-stream, the delete data stream api>>.\n          \n          \n            \n            * To delete data streams, use the <<indices-delete-data-stream, delete data stream API>>.", "author": "danhermann", "createdAt": "2020-06-03T13:22:38Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams groups indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices. Also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data steam only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exists for the namespace the data stream gets\n+created in. A data stream is created automatically when indexing into namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the Create Data Stream API, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+--\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+--------------------------------------------------\n+POST /logs-foobar/_doc\n+--------------------------------------------------\n+// TEST[continued]\n+\n+Response:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{\n+    \"_shards\" : {\n+        \"total\" : 1,\n+        \"failed\" : 0,\n+        \"successful\" : 1\n+    },\n+    \"_index\" : \"logs-foobar-000001\",\n+    \"_type\" : \"_doc\",\n+    \"_id\" : \"W0tpsmIBdwcYyG50zbta\",\n+    \"_version\" : 1,\n+    \"_seq_no\" : 0,\n+    \"_primary_term\" : 1,\n+    \"result\": \"created\"\n+}\n+--------------------------------------------------\n+// TESTRESPONSE[s/W0tpsmIBdwcYyG50zbta/$body._id/\n+\n+Or create a data stream via the create data stream api:\n+\n+[source,console-result]\n+--------------------------------------------------\n+PUT /_data_stream/logs-barbaz\n+--------------------------------------------------\n+// TEST[continued]\n+\n+////\n+[source,console]\n+-----------------------------------\n+DELETE /_data_stream/logs-foobar\n+DELETE /_data_stream/logs-barbaz\n+DELETE /_index_template/logs_template\n+-----------------------------------\n+// TEST[continued]\n+////\n+\n+[float]\n+[[data-streams-apis]]\n+== Data stream APIs\n+\n+The following APIs are for managing data stream APIs:\n+\n+* To get meta information about data streams use <<indices-get-data-stream, the get data stream api>>.\n+* To delete data streams use <<indices-delete-data-stream, the delete data stream api>>.", "originalCommit": "7e2c7623b31cc8c40f86f0a68ddcd09a81d12779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2MjExNA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434562114", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * To manually create a data stream use <<indices-create-data-stream, the create data stream api>>.\n          \n          \n            \n            * To manually create a data stream, use the <<indices-create-data-stream, create data stream API>>.", "author": "danhermann", "createdAt": "2020-06-03T13:23:00Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams groups indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices. Also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data steam only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exists for the namespace the data stream gets\n+created in. A data stream is created automatically when indexing into namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the Create Data Stream API, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+--\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+--------------------------------------------------\n+POST /logs-foobar/_doc\n+--------------------------------------------------\n+// TEST[continued]\n+\n+Response:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{\n+    \"_shards\" : {\n+        \"total\" : 1,\n+        \"failed\" : 0,\n+        \"successful\" : 1\n+    },\n+    \"_index\" : \"logs-foobar-000001\",\n+    \"_type\" : \"_doc\",\n+    \"_id\" : \"W0tpsmIBdwcYyG50zbta\",\n+    \"_version\" : 1,\n+    \"_seq_no\" : 0,\n+    \"_primary_term\" : 1,\n+    \"result\": \"created\"\n+}\n+--------------------------------------------------\n+// TESTRESPONSE[s/W0tpsmIBdwcYyG50zbta/$body._id/\n+\n+Or create a data stream via the create data stream api:\n+\n+[source,console-result]\n+--------------------------------------------------\n+PUT /_data_stream/logs-barbaz\n+--------------------------------------------------\n+// TEST[continued]\n+\n+////\n+[source,console]\n+-----------------------------------\n+DELETE /_data_stream/logs-foobar\n+DELETE /_data_stream/logs-barbaz\n+DELETE /_index_template/logs_template\n+-----------------------------------\n+// TEST[continued]\n+////\n+\n+[float]\n+[[data-streams-apis]]\n+== Data stream APIs\n+\n+The following APIs are for managing data stream APIs:\n+\n+* To get meta information about data streams use <<indices-get-data-stream, the get data stream api>>.\n+* To delete data streams use <<indices-delete-data-stream, the delete data stream api>>.\n+* To manually create a data stream use <<indices-create-data-stream, the create data stream api>>.", "originalCommit": "7e2c7623b31cc8c40f86f0a68ddcd09a81d12779", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "adca90c7645d417741830ba8ee779d99035465cf", "url": "https://github.com/elastic/elasticsearch/commit/adca90c7645d417741830ba8ee779d99035465cf", "message": "Update docs/reference/data-streams.asciidoc\n\nCo-authored-by: Dan Hermann <danhermann@users.noreply.github.com>", "committedDate": "2020-06-03T14:04:05Z", "type": "commit"}, {"oid": "1b71775c1f0343d03d7518dace8d11de8b7fd099", "url": "https://github.com/elastic/elasticsearch/commit/1b71775c1f0343d03d7518dace8d11de8b7fd099", "message": "dan's review\n\nCo-authored-by: Dan Hermann <danhermann@users.noreply.github.com>", "committedDate": "2020-06-03T14:05:28Z", "type": "commit"}, {"oid": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "url": "https://github.com/elastic/elasticsearch/commit/388b840d39598c4d53b6a8208d8d1b429f2b4a57", "message": "Merge branch 'master' into docs_for_data_stream", "committedDate": "2020-06-03T14:36:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY4MzMwOA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434683308", "bodyText": "The doc build expects a [partintro] file to include include directives.\nYou can get around this by using [chapter] instead.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [[data-streams]]\n          \n          \n            \n            = Data Streams\n          \n          \n            \n            \n          \n          \n            \n            [partintro]\n          \n          \n            \n            --\n          \n          \n            \n            [chapter]\n          \n          \n            \n            [[data-streams]]\n          \n          \n            \n            = Data Streams", "author": "jrodewig", "createdAt": "2020-06-03T16:05:04Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY4MzY3MA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434683670", "bodyText": "Removes the delimiter for the [partintro].\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            --", "author": "jrodewig", "createdAt": "2020-06-03T16:05:24Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+--------------------------------------------------\n+POST /logs-foobar/_doc\n+--------------------------------------------------\n+// TEST[continued]\n+\n+Response:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{\n+    \"_shards\" : {\n+        \"total\" : 1,\n+        \"failed\" : 0,\n+        \"successful\" : 1\n+    },\n+    \"_index\" : \"logs-foobar-000001\",\n+    \"_type\" : \"_doc\",\n+    \"_id\" : \"W0tpsmIBdwcYyG50zbta\",\n+    \"_version\" : 1,\n+    \"_seq_no\" : 0,\n+    \"_primary_term\" : 1,\n+    \"result\": \"created\"\n+}\n+--------------------------------------------------\n+// TESTRESPONSE[s/W0tpsmIBdwcYyG50zbta/$body._id/\n+\n+Or create a data stream via the create data stream api:\n+\n+[source,console-result]\n+--------------------------------------------------\n+PUT /_data_stream/logs-barbaz\n+--------------------------------------------------\n+// TEST[continued]\n+\n+////\n+[source,console]\n+-----------------------------------\n+DELETE /_data_stream/logs-foobar\n+DELETE /_data_stream/logs-barbaz\n+DELETE /_index_template/logs_template\n+-----------------------------------\n+// TEST[continued]\n+////\n+\n+[float]\n+[[data-streams-apis]]\n+== Data stream APIs\n+\n+The following APIs are available for managing data streams:\n+\n+* To get information about data streams, use the <<indices-get-data-stream, get data stream API>>.\n+* To delete data streams, use the <<indices-delete-data-stream, delete data stream API>>.\n+* To manually create a data stream, use the <<indices-create-data-stream, create data stream API>>.\n+\n+--", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY4NTY0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434685647", "bodyText": "The current wording can read as a tautology (i.e., a data stream is a stream of data).\nI reworded to better indicate that data streams are for continuous, time-based data.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A data stream formalizes the notion of a stream of data for time based data sources.\n          \n          \n            \n            You can use data streams to index time-based data that's continuously generated.", "author": "jrodewig", "createdAt": "2020-06-03T16:08:05Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY4NTg5MA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434685890", "bodyText": "I don't think opaque container adds much here. I'd also reorder intro of backing indices.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Data streams group indices from the same time-based data source together as an\n          \n          \n            \n            opaque container. A data stream keeps track of an ordered list of indices which are also known\n          \n          \n            \n            as backing indices.\n          \n          \n            \n            A data stream groups indices from the same time-based data source.\n          \n          \n            \n            A data stream tracks its indices, known as _backing indices_, using an ordered\n          \n          \n            \n            list.", "author": "jrodewig", "createdAt": "2020-06-03T16:08:27Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5OTE5MA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434699190", "bodyText": "Adds an xref for index request. Other changes are optional rewordings for readability.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            write index. The other backing indices handle read requests. A data stream only accepts\n          \n          \n            \n            index requests with `op_type` set to `create`. If specific documents need to be updated\n          \n          \n            \n            or deleted then these operations should happen via the backing index these documents\n          \n          \n            \n            reside in.\n          \n          \n            \n            write index. The other backing indices handle read requests. A data stream only\n          \n          \n            \n            accepts <<docs-index_,index requests>> with `op_type` set to `create`. To update\n          \n          \n            \n            or delete specific documents in a data stream, submit a <<docs-delete,delete>>\n          \n          \n            \n            or <<docs-update,update>> API request to the backing index containing the\n          \n          \n            \n            document.", "author": "jrodewig", "createdAt": "2020-06-03T16:28:21Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcwNTkyNg==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434705926", "bodyText": "I think we can condense this into a single para.\nQuestion: Does the field in the timestamp_field property need to be shared across all backing indices? If so, that may be good to note here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Data streams rely on composable templates in order to get created. A composable template\n          \n          \n            \n            with a `data_stream` definition must exist for the namespace in which the data stream\n          \n          \n            \n            is to be created. A data stream is created automatically when indexing into a namespace with\n          \n          \n            \n            a composable template with a `data_stream` definition. A data stream can also\n          \n          \n            \n            be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n          \n          \n            \n            composable data stream.\n          \n          \n            \n            \n          \n          \n            \n            As part of setting up a data stream, the field that contains the primary timestamp\n          \n          \n            \n            in the time-based data source should be configured with the data stream. This can be\n          \n          \n            \n            specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n          \n          \n            \n            composable template.\n          \n          \n            \n            To create a data stream, set up a <<indices-templates,composable index\n          \n          \n            \n            template>> containing:\n          \n          \n            \n            \n          \n          \n            \n            * Any desired index patterns in the `index_patterns` property. Indices that\n          \n          \n            \n              match these patterns are in the data stream's _namespace_.\n          \n          \n            \n            * A `data_stream` definition that contains the `timestamp_field` property.\n          \n          \n            \n              The `timestamp_field` should be the primary timestamp field \n          \n          \n            \n               for the data source.\n          \n          \n            \n            \n          \n          \n            \n            When you index within a data stream's namespace, {es} automatically creates the\n          \n          \n            \n            data stream using this template. You can also manually create a data stream using the\n          \n          \n            \n            <<indices-create-data-stream,create data stream API>>. However, a composable\n          \n          \n            \n            template for the stream is still required.", "author": "jrodewig", "createdAt": "2020-06-03T16:38:53Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMDY1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434710655", "bodyText": "Adds an xref to the rollover API and other optional rewording for readability.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n          \n          \n            \n            It will create a new index and update the data stream to include it the list of indices.\n          \n          \n            \n            This new index will then become the new write index.\n          \n          \n            \n            You can use the <<indices-rollover-index,rollover API>> to roll a data stream\n          \n          \n            \n            over to a new index when the current write index meets specified criteria, such\n          \n          \n            \n            as a maximum age or size. A rollover creates a new backing index and updates the\n          \n          \n            \n            data stream's list of backing indices. This new index then becomes the stream's\n          \n          \n            \n            new write index. See <<rollover-data-stream-ex>>.", "author": "jrodewig", "createdAt": "2020-06-03T16:46:09Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMTI2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434711262", "bodyText": "I think \"Create a data stream\" is a bit more specific.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [[getting-started-with-data-streams]]\n          \n          \n            \n            == Getting started with data streams\n          \n          \n            \n            [[create-data-stream]]\n          \n          \n            \n            == Create a data stream", "author": "jrodewig", "createdAt": "2020-06-03T16:47:09Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMTM0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434711349", "bodyText": "Not a big deal, but Asciidoctor prefers discrete to float now.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [float]\n          \n          \n            \n            [discrete]", "author": "jrodewig", "createdAt": "2020-06-03T16:47:17Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxNDEzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434714131", "bodyText": "I'd use the literal to avoid confusion.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Create a composable template with a data stream definition:\n          \n          \n            \n            Create a composable template with a `data_stream` definition:", "author": "jrodewig", "createdAt": "2020-06-03T16:51:40Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxNDI3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434714272", "bodyText": "This comment isn't needed.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // TEST", "author": "jrodewig", "createdAt": "2020-06-03T16:51:53Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxNTA0OA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434715048", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Or create a data stream via the create data stream api:\n          \n          \n            \n            Or create a data stream using the create data stream API:", "author": "jrodewig", "createdAt": "2020-06-03T16:53:05Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+--------------------------------------------------\n+POST /logs-foobar/_doc\n+--------------------------------------------------\n+// TEST[continued]\n+\n+Response:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{\n+    \"_shards\" : {\n+        \"total\" : 1,\n+        \"failed\" : 0,\n+        \"successful\" : 1\n+    },\n+    \"_index\" : \"logs-foobar-000001\",\n+    \"_type\" : \"_doc\",\n+    \"_id\" : \"W0tpsmIBdwcYyG50zbta\",\n+    \"_version\" : 1,\n+    \"_seq_no\" : 0,\n+    \"_primary_term\" : 1,\n+    \"result\": \"created\"\n+}\n+--------------------------------------------------\n+// TESTRESPONSE[s/W0tpsmIBdwcYyG50zbta/$body._id/\n+\n+Or create a data stream via the create data stream api:", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxNTE5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434715192", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [float]\n          \n          \n            \n            [discrete]", "author": "jrodewig", "createdAt": "2020-06-03T16:53:18Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+--------------------------------------------------\n+POST /logs-foobar/_doc\n+--------------------------------------------------\n+// TEST[continued]\n+\n+Response:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{\n+    \"_shards\" : {\n+        \"total\" : 1,\n+        \"failed\" : 0,\n+        \"successful\" : 1\n+    },\n+    \"_index\" : \"logs-foobar-000001\",\n+    \"_type\" : \"_doc\",\n+    \"_id\" : \"W0tpsmIBdwcYyG50zbta\",\n+    \"_version\" : 1,\n+    \"_seq_no\" : 0,\n+    \"_primary_term\" : 1,\n+    \"result\": \"created\"\n+}\n+--------------------------------------------------\n+// TESTRESPONSE[s/W0tpsmIBdwcYyG50zbta/$body._id/\n+\n+Or create a data stream via the create data stream api:\n+\n+[source,console-result]\n+--------------------------------------------------\n+PUT /_data_stream/logs-barbaz\n+--------------------------------------------------\n+// TEST[continued]\n+\n+////\n+[source,console]\n+-----------------------------------\n+DELETE /_data_stream/logs-foobar\n+DELETE /_data_stream/logs-barbaz\n+DELETE /_index_template/logs_template\n+-----------------------------------\n+// TEST[continued]\n+////\n+\n+[float]", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxODAzNg==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434718036", "bodyText": "Adds an xref for hidden indices. Also replaces \"last\" with \"most recently created.\" \"Last\" can be unclear (e.g., does it mean the first index or the most recent?).\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The backing indices of a data steam are hidden indices. The last backing index is the\n          \n          \n            \n            A data stream's backing indices are <<index-hidden,hidden>>.\n          \n          \n            \n            The most recently created backing index is the", "author": "jrodewig", "createdAt": "2020-06-03T16:57:46Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,108 @@\n+[[data-streams]]\n+= Data Streams\n+\n+[partintro]\n+--\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the", "originalCommit": "388b840d39598c4d53b6a8208d8d1b429f2b4a57", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "68eee66fcafe8e11ee0ed40a93037037dd094201", "url": "https://github.com/elastic/elasticsearch/commit/68eee66fcafe8e11ee0ed40a93037037dd094201", "message": "Fix docs CI test", "committedDate": "2020-06-03T17:06:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDczMTQyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434731429", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [source,console-result]\n          \n          \n            \n            [source,console]", "author": "jrodewig", "createdAt": "2020-06-03T17:21:09Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,105 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+--------------------------------------------------\n+POST /logs-foobar/_doc\n+--------------------------------------------------\n+// TEST[continued]\n+\n+Response:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{\n+    \"_shards\" : {\n+        \"total\" : 1,\n+        \"failed\" : 0,\n+        \"successful\" : 1\n+    },\n+    \"_index\" : \"logs-foobar-000001\",\n+    \"_type\" : \"_doc\",\n+    \"_id\" : \"W0tpsmIBdwcYyG50zbta\",\n+    \"_version\" : 1,\n+    \"_seq_no\" : 0,\n+    \"_primary_term\" : 1,\n+    \"result\": \"created\"\n+}\n+--------------------------------------------------\n+// TESTRESPONSE[s/W0tpsmIBdwcYyG50zbta/$body._id/\n+\n+Or create a data stream via the create data stream api:\n+\n+[source,console-result]", "originalCommit": "68eee66fcafe8e11ee0ed40a93037037dd094201", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "65580098dfa43703ef2b66b874b1d84f373210f4", "url": "https://github.com/elastic/elasticsearch/commit/65580098dfa43703ef2b66b874b1d84f373210f4", "message": "Fix snippet lang", "committedDate": "2020-06-03T17:21:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0NjA3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434746072", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // TESTRESPONSE[s/W0tpsmIBdwcYyG50zbta/$body._id/\n          \n          \n            \n            // TESTRESPONSE[s/W0tpsmIBdwcYyG50zbta/$body._id/]", "author": "jrodewig", "createdAt": "2020-06-03T17:46:25Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,105 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+--------------------------------------------------\n+POST /logs-foobar/_doc\n+--------------------------------------------------\n+// TEST[continued]\n+\n+Response:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{\n+    \"_shards\" : {\n+        \"total\" : 1,\n+        \"failed\" : 0,\n+        \"successful\" : 1\n+    },\n+    \"_index\" : \"logs-foobar-000001\",\n+    \"_type\" : \"_doc\",\n+    \"_id\" : \"W0tpsmIBdwcYyG50zbta\",\n+    \"_version\" : 1,\n+    \"_seq_no\" : 0,\n+    \"_primary_term\" : 1,\n+    \"result\": \"created\"\n+}\n+--------------------------------------------------\n+// TESTRESPONSE[s/W0tpsmIBdwcYyG50zbta/$body._id/", "originalCommit": "65580098dfa43703ef2b66b874b1d84f373210f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc0NjcyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434746721", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [source,console]\n          \n          \n            \n            --------------------------------------------------\n          \n          \n            \n            POST /logs-foobar/_doc\n          \n          \n            \n            --------------------------------------------------\n          \n          \n            \n            // TEST[continued]\n          \n          \n            \n            [source,console]\n          \n          \n            \n            ----\n          \n          \n            \n            POST /logs-foobar/_doc\n          \n          \n            \n            {\n          \n          \n            \n              \"@timestamp\": \"2050-11-15T14:12:12\",\n          \n          \n            \n              ...\n          \n          \n            \n            }\n          \n          \n            \n            ----\n          \n          \n            \n            // TEST[continued]\n          \n          \n            \n            // TEST[s/,//]\n          \n          \n            \n            // TEST[s/\\.\\.\\.//]", "author": "jrodewig", "createdAt": "2020-06-03T17:47:34Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,105 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+--------------------------------------------------\n+POST /logs-foobar/_doc\n+--------------------------------------------------\n+// TEST[continued]", "originalCommit": "65580098dfa43703ef2b66b874b1d84f373210f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc1MDgwNw==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434750807", "bodyText": "8.0 doesn't return the mapping type. You'll need to re-add this for 7.x and lower.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"_type\" : \"_doc\",", "author": "jrodewig", "createdAt": "2020-06-03T17:54:25Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,105 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+--------------------------------------------------\n+POST /logs-foobar/_doc\n+--------------------------------------------------\n+// TEST[continued]\n+\n+Response:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{\n+    \"_shards\" : {\n+        \"total\" : 1,\n+        \"failed\" : 0,\n+        \"successful\" : 1\n+    },\n+    \"_index\" : \"logs-foobar-000001\",\n+    \"_type\" : \"_doc\",", "originalCommit": "65580098dfa43703ef2b66b874b1d84f373210f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dd742b9708330fddb2c8f4325520851672fc11a6", "url": "https://github.com/elastic/elasticsearch/commit/dd742b9708330fddb2c8f4325520851672fc11a6", "message": "Patch snippets", "committedDate": "2020-06-03T18:12:24Z", "type": "commit"}, {"oid": "dcff5cfb18af36aae7ce50703c36adccc9409466", "url": "https://github.com/elastic/elasticsearch/commit/dcff5cfb18af36aae7ce50703c36adccc9409466", "message": "Merge branch 'master' into docs_for_data_stream", "committedDate": "2020-06-03T18:33:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5NDY3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r434794676", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"total\" : 1,\n          \n          \n            \n                    \"total\" : 2,", "author": "jrodewig", "createdAt": "2020-06-03T19:13:21Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,110 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+A data stream formalizes the notion of a stream of data for time based data sources.\n+Data streams group indices from the same time-based data source together as an\n+opaque container. A data stream keeps track of an ordered list of indices which are also known\n+as backing indices.\n+\n+The backing indices of a data steam are hidden indices. The last backing index is the\n+write index. The other backing indices handle read requests. A data stream only accepts\n+index requests with `op_type` set to `create`. If specific documents need to be updated\n+or deleted then these operations should happen via the backing index these documents\n+reside in.\n+\n+Data streams rely on composable templates in order to get created. A composable template\n+with a `data_stream` definition must exist for the namespace in which the data stream\n+is to be created. A data stream is created automatically when indexing into a namespace with\n+a composable template with a `data_stream` definition. A data stream can also\n+be created via the <<indices-create-data-stream,Create Data Stream API>>, but this also requires the existence of\n+composable data stream.\n+\n+As part of setting up a data stream, the field that contains the primary timestamp\n+in the time-based data source should be configured with the data stream. This can be\n+specified in the `timestamp_field` parameter in the `data_stream` snippet of a\n+composable template.\n+\n+The rollover API is responsible for updating <<rollover-data-stream-ex,a data stream when rolling over>>.\n+It will create a new index and update the data stream to include it the list of indices.\n+This new index will then become the new write index.\n+\n+[float]\n+[[getting-started-with-data-streams]]\n+== Getting started with data streams\n+\n+Create a composable template with a data stream definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+// TEST\n+\n+Start indexing data into the namespace of this composable template:\n+\n+[source,console]\n+----\n+POST /logs-foobar/_doc\n+{\n+  \"@timestamp\": \"2050-11-15T14:12:12\",\n+  ...\n+}\n+----\n+// TEST[continued]\n+// TEST[s/,//]\n+// TEST[s/\\.\\.\\.//]\n+\n+Response:\n+\n+[source,console-result]\n+--------------------------------------------------\n+{\n+    \"_shards\" : {\n+        \"total\" : 1,", "originalCommit": "dcff5cfb18af36aae7ce50703c36adccc9409466", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ae9e72038c022916f0032860fbd5a63e80ee92fc", "url": "https://github.com/elastic/elasticsearch/commit/ae9e72038c022916f0032860fbd5a63e80ee92fc", "message": "Fix shard total in snippet", "committedDate": "2020-06-03T19:13:33Z", "type": "commit"}, {"oid": "02996a4a0bd133230170f1fab5688ace8d9b2ebc", "url": "https://github.com/elastic/elasticsearch/commit/02996a4a0bd133230170f1fab5688ace8d9b2ebc", "message": "applied james' review comments\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>", "committedDate": "2020-06-04T05:41:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NzE4NA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r435547184", "bodyText": "Minor clarification: Read requests are handled by all backing indices, not just the ones that are not the write index.", "author": "danhermann", "createdAt": "2020-06-04T21:02:47Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,115 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+You can use data streams to index time-based data that's continuously generated.\n+A data stream groups indices from the same time-based data source.\n+A data stream tracks its indices, known as _backing indices_, using an ordered\n+list.\n+\n+A data stream's backing indices are <<index-hidden,hidden>>.\n+The most recently created backing index is the\n+write index. The other backing indices handle read requests. A data stream only", "originalCommit": "02996a4a0bd133230170f1fab5688ace8d9b2ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU1NTAyNw==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r435555027", "bodyText": "I find the mention of indices a little confusing and perhaps it's unfortunate that we're using the index_patterns parameter here since it's not really about indices. We don't really have (and I don't think we want to introduce) the concept of indices being in a data stream's namespace. While we do have a default naming convention for backing indices, we don't have any constraints on the names of indices that may be backing indices for a data stream, so we couldn't really define a \"namespace\" for a data stream. I think all that we want to communicate here is that when the pattern in the composable template matches the (not already existing) target of an index request, the corresponding data stream will be created.", "author": "danhermann", "createdAt": "2020-06-04T21:15:48Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,115 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+You can use data streams to index time-based data that's continuously generated.\n+A data stream groups indices from the same time-based data source.\n+A data stream tracks its indices, known as _backing indices_, using an ordered\n+list.\n+\n+A data stream's backing indices are <<index-hidden,hidden>>.\n+The most recently created backing index is the\n+write index. The other backing indices handle read requests. A data stream only\n+accepts <<docs-index_,index requests>> with `op_type` set to `create`. To update\n+or delete specific documents in a data stream, submit a <<docs-delete,delete>>\n+or <<docs-update,update>> API request to the backing index containing the\n+document.\n+\n+To create a data stream, set up a <<indices-templates,composable index\n+template>> containing:\n+\n+* Any desired index patterns in the `index_patterns` property. Indices that\n+  match these patterns are in the data stream's _namespace_.", "originalCommit": "02996a4a0bd133230170f1fab5688ace8d9b2ebc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MzcyMg==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r435573722", "bodyText": "Sorry for introducing this. Based on your feedback, this suggestion may be more accurate.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Any desired index patterns in the `index_patterns` property. Indices that\n          \n          \n            \n              match these patterns are in the data stream's _namespace_.\n          \n          \n            \n            * A name or wildcard pattern for the data stream in the `index_patterns` property.", "author": "jrodewig", "createdAt": "2020-06-04T21:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU1NTAyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU1NjAxNg==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r435556016", "bodyText": "I don't know how precise we want to be here, but we require the timestamp_field property on the template and in every document indexed into the data stream, so \"must\" may fit better than \"should\".", "author": "danhermann", "createdAt": "2020-06-04T21:17:09Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,115 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+You can use data streams to index time-based data that's continuously generated.\n+A data stream groups indices from the same time-based data source.\n+A data stream tracks its indices, known as _backing indices_, using an ordered\n+list.\n+\n+A data stream's backing indices are <<index-hidden,hidden>>.\n+The most recently created backing index is the\n+write index. The other backing indices handle read requests. A data stream only\n+accepts <<docs-index_,index requests>> with `op_type` set to `create`. To update\n+or delete specific documents in a data stream, submit a <<docs-delete,delete>>\n+or <<docs-update,update>> API request to the backing index containing the\n+document.\n+\n+To create a data stream, set up a <<indices-templates,composable index\n+template>> containing:\n+\n+* Any desired index patterns in the `index_patterns` property. Indices that\n+  match these patterns are in the data stream's _namespace_.\n+* A `data_stream` definition that contains the `timestamp_field` property.\n+  The `timestamp_field` should be the primary timestamp field ", "originalCommit": "02996a4a0bd133230170f1fab5688ace8d9b2ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2MDE0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r435560145", "bodyText": "I think \"data stream's namespace\" here is slightly inaccurate. While a composable template may have a pattern such as logs-* that many indexing requests may match, indexing requests themselves must specify a single index or data stream name such as logs-mysql-prod or the like. In other words, a data stream has a name but not a namespace, and indexing requests must specify the name.", "author": "danhermann", "createdAt": "2020-06-04T21:22:27Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,115 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+You can use data streams to index time-based data that's continuously generated.\n+A data stream groups indices from the same time-based data source.\n+A data stream tracks its indices, known as _backing indices_, using an ordered\n+list.\n+\n+A data stream's backing indices are <<index-hidden,hidden>>.\n+The most recently created backing index is the\n+write index. The other backing indices handle read requests. A data stream only\n+accepts <<docs-index_,index requests>> with `op_type` set to `create`. To update\n+or delete specific documents in a data stream, submit a <<docs-delete,delete>>\n+or <<docs-update,update>> API request to the backing index containing the\n+document.\n+\n+To create a data stream, set up a <<indices-templates,composable index\n+template>> containing:\n+\n+* Any desired index patterns in the `index_patterns` property. Indices that\n+  match these patterns are in the data stream's _namespace_.\n+* A `data_stream` definition that contains the `timestamp_field` property.\n+  The `timestamp_field` should be the primary timestamp field \n+   for the data source.\n+\n+When you index within a data stream's namespace, {es} automatically creates the", "originalCommit": "02996a4a0bd133230170f1fab5688ace8d9b2ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2MjA3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r435562071", "bodyText": "Same thing about namespace here.", "author": "danhermann", "createdAt": "2020-06-04T21:25:38Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,115 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+You can use data streams to index time-based data that's continuously generated.\n+A data stream groups indices from the same time-based data source.\n+A data stream tracks its indices, known as _backing indices_, using an ordered\n+list.\n+\n+A data stream's backing indices are <<index-hidden,hidden>>.\n+The most recently created backing index is the\n+write index. The other backing indices handle read requests. A data stream only\n+accepts <<docs-index_,index requests>> with `op_type` set to `create`. To update\n+or delete specific documents in a data stream, submit a <<docs-delete,delete>>\n+or <<docs-update,update>> API request to the backing index containing the\n+document.\n+\n+To create a data stream, set up a <<indices-templates,composable index\n+template>> containing:\n+\n+* Any desired index patterns in the `index_patterns` property. Indices that\n+  match these patterns are in the data stream's _namespace_.\n+* A `data_stream` definition that contains the `timestamp_field` property.\n+  The `timestamp_field` should be the primary timestamp field \n+   for the data source.\n+\n+When you index within a data stream's namespace, {es} automatically creates the\n+data stream using this template. You can also manually create a data stream using the\n+<<indices-create-data-stream,create data stream API>>. However, a composable\n+template for the stream is still required.\n+\n+You can use the <<indices-rollover-index,rollover API>> to roll a data stream\n+over to a new index when the current write index meets specified criteria, such\n+as a maximum age or size. A rollover creates a new backing index and updates the\n+data stream's list of backing indices. This new index then becomes the stream's\n+new write index. See <<rollover-data-stream-ex>>.\n+\n+[discrete]\n+[[create-data-stream]]\n+== Create a data stream\n+\n+Create a composable template with a `data_stream` definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+\n+Start indexing data into the namespace of this composable template:", "originalCommit": "02996a4a0bd133230170f1fab5688ace8d9b2ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MTkyMA==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r435571920", "bodyText": "Thanks @danhermann. I've suggested a reword to fix.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The most recently created backing index is the\n          \n          \n            \n            write index. The other backing indices handle read requests. A data stream only\n          \n          \n            \n            While all backing indices handle read requests, the most recently created\n          \n          \n            \n            backing index is the data stream's only write index.  A data stream only", "author": "jrodewig", "createdAt": "2020-06-04T21:48:31Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,115 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+You can use data streams to index time-based data that's continuously generated.\n+A data stream groups indices from the same time-based data source.\n+A data stream tracks its indices, known as _backing indices_, using an ordered\n+list.\n+\n+A data stream's backing indices are <<index-hidden,hidden>>.\n+The most recently created backing index is the\n+write index. The other backing indices handle read requests. A data stream only", "originalCommit": "02996a4a0bd133230170f1fab5688ace8d9b2ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3NDA1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r435574052", "bodyText": "This suggestion changes \"should\" to \"must\". It also clarifies that\nthe timestamp field must be included in every document.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              The `timestamp_field` should be the primary timestamp field \n          \n          \n            \n               for the data source.\n          \n          \n            \n              The `timestamp_field` must be the primary timestamp field \n          \n          \n            \n               for the data source. This field must be included in every\n          \n          \n            \n               document indexed to the data stream.", "author": "jrodewig", "createdAt": "2020-06-04T21:53:31Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,115 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+You can use data streams to index time-based data that's continuously generated.\n+A data stream groups indices from the same time-based data source.\n+A data stream tracks its indices, known as _backing indices_, using an ordered\n+list.\n+\n+A data stream's backing indices are <<index-hidden,hidden>>.\n+The most recently created backing index is the\n+write index. The other backing indices handle read requests. A data stream only\n+accepts <<docs-index_,index requests>> with `op_type` set to `create`. To update\n+or delete specific documents in a data stream, submit a <<docs-delete,delete>>\n+or <<docs-update,update>> API request to the backing index containing the\n+document.\n+\n+To create a data stream, set up a <<indices-templates,composable index\n+template>> containing:\n+\n+* Any desired index patterns in the `index_patterns` property. Indices that\n+  match these patterns are in the data stream's _namespace_.\n+* A `data_stream` definition that contains the `timestamp_field` property.\n+  The `timestamp_field` should be the primary timestamp field \n+   for the data source.", "originalCommit": "02996a4a0bd133230170f1fab5688ace8d9b2ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3NjYzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r435576639", "bodyText": "+1 to removing the concept of namespace entirely. I've reworded to use \"target\" here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            When you index within a data stream's namespace, {es} automatically creates the\n          \n          \n            \n            data stream using this template. You can also manually create a data stream using the\n          \n          \n            \n            When you index one or more documents to a not-yet-existent target matching\n          \n          \n            \n            the template's name or pattern, {es} automatically creates the corresponding\n          \n          \n            \n            data stream. You can also manually create a data stream using the", "author": "jrodewig", "createdAt": "2020-06-04T22:00:19Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,115 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+You can use data streams to index time-based data that's continuously generated.\n+A data stream groups indices from the same time-based data source.\n+A data stream tracks its indices, known as _backing indices_, using an ordered\n+list.\n+\n+A data stream's backing indices are <<index-hidden,hidden>>.\n+The most recently created backing index is the\n+write index. The other backing indices handle read requests. A data stream only\n+accepts <<docs-index_,index requests>> with `op_type` set to `create`. To update\n+or delete specific documents in a data stream, submit a <<docs-delete,delete>>\n+or <<docs-update,update>> API request to the backing index containing the\n+document.\n+\n+To create a data stream, set up a <<indices-templates,composable index\n+template>> containing:\n+\n+* Any desired index patterns in the `index_patterns` property. Indices that\n+  match these patterns are in the data stream's _namespace_.\n+* A `data_stream` definition that contains the `timestamp_field` property.\n+  The `timestamp_field` should be the primary timestamp field \n+   for the data source.\n+\n+When you index within a data stream's namespace, {es} automatically creates the\n+data stream using this template. You can also manually create a data stream using the", "originalCommit": "02996a4a0bd133230170f1fab5688ace8d9b2ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3NjgzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/57596#discussion_r435576835", "bodyText": "Reword to use target instead.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Start indexing data into the namespace of this composable template:\n          \n          \n            \n            Start indexing data to a target matching composable template's wildcard pattern:", "author": "jrodewig", "createdAt": "2020-06-04T22:00:50Z", "path": "docs/reference/data-streams.asciidoc", "diffHunk": "@@ -0,0 +1,115 @@\n+[chapter]\n+[[data-streams]]\n+= Data Streams\n+\n+You can use data streams to index time-based data that's continuously generated.\n+A data stream groups indices from the same time-based data source.\n+A data stream tracks its indices, known as _backing indices_, using an ordered\n+list.\n+\n+A data stream's backing indices are <<index-hidden,hidden>>.\n+The most recently created backing index is the\n+write index. The other backing indices handle read requests. A data stream only\n+accepts <<docs-index_,index requests>> with `op_type` set to `create`. To update\n+or delete specific documents in a data stream, submit a <<docs-delete,delete>>\n+or <<docs-update,update>> API request to the backing index containing the\n+document.\n+\n+To create a data stream, set up a <<indices-templates,composable index\n+template>> containing:\n+\n+* Any desired index patterns in the `index_patterns` property. Indices that\n+  match these patterns are in the data stream's _namespace_.\n+* A `data_stream` definition that contains the `timestamp_field` property.\n+  The `timestamp_field` should be the primary timestamp field \n+   for the data source.\n+\n+When you index within a data stream's namespace, {es} automatically creates the\n+data stream using this template. You can also manually create a data stream using the\n+<<indices-create-data-stream,create data stream API>>. However, a composable\n+template for the stream is still required.\n+\n+You can use the <<indices-rollover-index,rollover API>> to roll a data stream\n+over to a new index when the current write index meets specified criteria, such\n+as a maximum age or size. A rollover creates a new backing index and updates the\n+data stream's list of backing indices. This new index then becomes the stream's\n+new write index. See <<rollover-data-stream-ex>>.\n+\n+[discrete]\n+[[create-data-stream]]\n+== Create a data stream\n+\n+Create a composable template with a `data_stream` definition:\n+\n+[source,console]\n+-----------------------------------\n+PUT /_index_template/logs_template\n+{\n+  \"index_patterns\": [\"logs-*\"],\n+  \"data_stream\": {\n+    \"timestamp_field\": \"@timestamp\"\n+  }\n+}\n+-----------------------------------\n+\n+Start indexing data into the namespace of this composable template:", "originalCommit": "02996a4a0bd133230170f1fab5688ace8d9b2ebc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ace7123aa4c11d48f7e6a96adf8e496715d666d3", "url": "https://github.com/elastic/elasticsearch/commit/ace7123aa4c11d48f7e6a96adf8e496715d666d3", "message": "applied dan's and james' feedback\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>", "committedDate": "2020-06-05T10:33:51Z", "type": "commit"}]}