{"pr_number": 64037, "pr_title": "Deprecate cert gen without a CA and add self-signed option", "pr_createdAt": "2020-10-22T08:20:22Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64037", "timeline": [{"oid": "cc4f004d6213506212d4fc067ace597f1e3f9b41", "url": "https://github.com/elastic/elasticsearch/commit/cc4f004d6213506212d4fc067ace597f1e3f9b41", "message": "Deprecate cert genereation without specifying a CA", "committedDate": "2020-10-22T08:12:48Z", "type": "commit"}, {"oid": "716a7c1a987ed3bea64dcf72e225ec79c920b0b0", "url": "https://github.com/elastic/elasticsearch/commit/716a7c1a987ed3bea64dcf72e225ec79c920b0b0", "message": "Doc update", "committedDate": "2020-10-22T09:15:36Z", "type": "commit"}, {"oid": "91e66709810bfe2b02e40d25e09499cab20447c7", "url": "https://github.com/elastic/elasticsearch/commit/91e66709810bfe2b02e40d25e09499cab20447c7", "message": "Update to use deprecated directive", "committedDate": "2020-10-22T09:34:40Z", "type": "commit"}, {"oid": "6ae1906305089469fc00f1bd0e8ab9c4b9d72f26", "url": "https://github.com/elastic/elasticsearch/commit/6ae1906305089469fc00f1bd0e8ab9c4b9d72f26", "message": "Merge remote-tracking branch 'origin/master' into es-61884-certutil-cert-deprecate-no-ca", "committedDate": "2020-10-30T00:13:42Z", "type": "commit"}, {"oid": "efa9232965eca9e4e10d5d65806d576d6a8b3c2d", "url": "https://github.com/elastic/elasticsearch/commit/efa9232965eca9e4e10d5d65806d576d6a8b3c2d", "message": "Add self-signed option", "committedDate": "2020-11-04T05:45:55Z", "type": "commit"}, {"oid": "3558a2c98a22de37459b2c5b158bb1397abb00fd", "url": "https://github.com/elastic/elasticsearch/commit/3558a2c98a22de37459b2c5b158bb1397abb00fd", "message": "Merge remote-tracking branch 'origin/master' into es-61884-certutil-cert-deprecate-no-ca", "committedDate": "2020-11-04T12:04:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkyMDMyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r522920329", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can also generate self-signed certificates with the `--self-signed` parameters.\n          \n          \n            \n            You can also generate self-signed certificates with the `--self-signed` parameter.", "author": "jkakavas", "createdAt": "2020-11-13T12:30:08Z", "path": "docs/reference/commands/certutil.asciidoc", "diffHunk": "@@ -82,6 +82,12 @@ All certificates that are generated by this command are signed by a CA. You can\n provide your own CA with the `--ca` or `--ca-cert` parameters. Otherwise, the\n command automatically generates a new CA for you. For more information about\n generating a CA, see the <<certutil-ca,CA mode of this command>>.\n+You can also generate self-signed certificates with the `--self-signed` parameters.", "originalCommit": "3558a2c98a22de37459b2c5b158bb1397abb00fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAyMzI5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r523023293", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Generating certificates without specifying a CA certificate is deprecated.\n          \n          \n            \n            Generating certificates without specifying a CA certificate and key is deprecated.", "author": "jkakavas", "createdAt": "2020-11-13T15:28:04Z", "path": "docs/reference/commands/certutil.asciidoc", "diffHunk": "@@ -82,6 +82,12 @@ All certificates that are generated by this command are signed by a CA. You can\n provide your own CA with the `--ca` or `--ca-cert` parameters. Otherwise, the\n command automatically generates a new CA for you. For more information about\n generating a CA, see the <<certutil-ca,CA mode of this command>>.\n+You can also generate self-signed certificates with the `--self-signed` parameters.\n+\n+deprecated:[7.11.0]\n+Generating certificates without specifying a CA certificate is deprecated.", "originalCommit": "3558a2c98a22de37459b2c5b158bb1397abb00fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAyMzQ3OA==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r523023478", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `--ca` or `--ca-cert` parameters, unless the `--self-signed` option is specified.\n          \n          \n            \n            `--ca` or `--ca-cert` and `--ca-key` parameters, unless the `--self-signed` option is specified.", "author": "jkakavas", "createdAt": "2020-11-13T15:28:24Z", "path": "docs/reference/commands/certutil.asciidoc", "diffHunk": "@@ -82,6 +82,12 @@ All certificates that are generated by this command are signed by a CA. You can\n provide your own CA with the `--ca` or `--ca-cert` parameters. Otherwise, the\n command automatically generates a new CA for you. For more information about\n generating a CA, see the <<certutil-ca,CA mode of this command>>.\n+You can also generate self-signed certificates with the `--self-signed` parameters.\n+\n+deprecated:[7.11.0]\n+Generating certificates without specifying a CA certificate is deprecated.\n+Next major version will mandate a CA certificate to be provided with the\n+`--ca` or `--ca-cert` parameters, unless the `--self-signed` option is specified.", "originalCommit": "3558a2c98a22de37459b2c5b158bb1397abb00fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAyNDg1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r523024851", "bodyText": "The most important characteristic is that this is a signing certificate (used to sign SAML messages), not that it is a self-signed one. I'd suggest we revert this change", "author": "jkakavas", "createdAt": "2020-11-13T15:30:29Z", "path": "x-pack/docs/en/security/authentication/saml-guide.asciidoc", "diffHunk": "@@ -505,11 +505,11 @@ support. Since PEM format is the most commonly supported format, the examples\n below will generate certificates in that format.\n \n Using the <<certutil,`elasticsearch-certutil` tool>>, you can generate a\n-signing certificate with the following command:\n+self-signed certificate with the following command:", "originalCommit": "3558a2c98a22de37459b2c5b158bb1397abb00fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1MzExMQ==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r524153111", "bodyText": "You are right. Reverted.", "author": "ywangd", "createdAt": "2020-11-16T11:26:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAyNDg1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAyNjEzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r523026135", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            bin/elasticsearch-certutil cert -self-signed -pem -days 1100 -name saml-sign -out saml-sign.zip\n          \n          \n            \n            bin/elasticsearch-certutil cert --self-signed --pem --days 1100 --name saml-sign --out saml-sign.zip", "author": "jkakavas", "createdAt": "2020-11-13T15:32:28Z", "path": "x-pack/docs/en/security/authentication/saml-guide.asciidoc", "diffHunk": "@@ -505,11 +505,11 @@ support. Since PEM format is the most commonly supported format, the examples\n below will generate certificates in that format.\n \n Using the <<certutil,`elasticsearch-certutil` tool>>, you can generate a\n-signing certificate with the following command:\n+self-signed certificate with the following command:\n \n [source, sh]\n --------------------------------------------------\n-bin/elasticsearch-certutil cert -pem -days 1100 -name saml-sign -out saml-sign.zip\n+bin/elasticsearch-certutil cert -self-signed -pem -days 1100 -name saml-sign -out saml-sign.zip", "originalCommit": "3558a2c98a22de37459b2c5b158bb1397abb00fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAyOTIyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r523029221", "bodyText": "How about something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"    * The certificates can be self signed using the -self-signed command line option.\\n\" +\n          \n          \n            \n                        \"         Alternatively the tool can automatically generate a new CA for you, or you can \" +\n          \n          \n            \n                        \"         provide your own with the -ca or -ca-cert command line options.\";\n          \n          \n            \n            \"    * All certificates generated by this tool will be signed by a certificate authority (CA), unless\" +\n          \n          \n            \n                        \"    the --self-signed command line option is specified.\\n\" +\n          \n          \n            \n                        \"         The tool can automatically generate a new CA for you, or you can \" +\n          \n          \n            \n                        \"         provide your own with the -ca or -ca-cert command line options.\";\n          \n      \n    \n    \n  \n\nI think it reads better but I'll let Lisa tell us :)", "author": "jkakavas", "createdAt": "2020-11-13T15:37:13Z", "path": "x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java", "diffHunk": "@@ -167,8 +167,9 @@ public static void main(String[] args) throws Exception {\n \n     static final String CA_EXPLANATION =\n         \"    * All certificates generated by this tool will be signed by a certificate authority (CA).\\n\" +\n-            \"    * The tool can automatically generate a new CA for you, or you can provide your own with the\\n\" +\n-            \"         -ca or -ca-cert command line options.\";\n+            \"    * The certificates can be self signed using the -self-signed command line option.\\n\" +\n+            \"         Alternatively the tool can automatically generate a new CA for you, or you can \" +\n+            \"         provide your own with the -ca or -ca-cert command line options.\";", "originalCommit": "3558a2c98a22de37459b2c5b158bb1397abb00fd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAzNjk3NA==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r523036974", "bodyText": "I also think we don't need to add a certificate entry too when we create a self-signed PKCS12, but did we check?", "author": "jkakavas", "createdAt": "2020-11-13T15:49:26Z", "path": "x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java", "diffHunk": "@@ -807,7 +819,8 @@ void generateAndWriteSignedCertificates(Path output, boolean writeZipFile, Optio\n                         } else {\n                             final String fileName = entryBase + \".p12\";\n                             outputStream.putNextEntry(new ZipEntry(fileName));\n-                            writePkcs12(fileName, outputStream, certificateInformation.name.originalName, pair, caInfo.certAndKey.cert,\n+                            writePkcs12(fileName, outputStream, certificateInformation.name.originalName, pair,", "originalCommit": "3558a2c98a22de37459b2c5b158bb1397abb00fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1ODc4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r524158785", "bodyText": "This is a good point and it turns out the check is missing ...\nI now augumented testCreateCaAndMultipleInstances to test p12 generation for self-signed cert.", "author": "ywangd", "createdAt": "2020-11-16T11:32:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAzNjk3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk4MjMwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r524982301", "bodyText": "My point was actually about the construction of the PKCS#12 bundle and whether or not it suffices to add a private key entry with the key and certificate, or if we also need to add a trusted certificate entry with the certificate too. I believe we don't and other tooling ( keytool, openssl ) seem to agree too :)", "author": "jkakavas", "createdAt": "2020-11-17T08:52:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAzNjk3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEyNDA2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r517124063", "bodyText": "I have a concern, which might not be a big deal, that some people will see this option and use it in places where they shouldn't.\nFor all TLS scenarios, we recommend having a separation between the CA and the node cert, and I think we want to keep recommending that.\nSo, are there words we can put here that discourage people from using it for TLS?", "author": "tvernum", "createdAt": "2020-11-04T06:38:52Z", "path": "docs/reference/commands/certutil.asciidoc", "diffHunk": "@@ -211,6 +217,9 @@ wish to password-protect your PEM keys, then do not specify\n `--pem`:: Generates certificates and keys in PEM format instead of PKCS#12. This\n parameter cannot be used with the `csr` parameter.\n \n+`--self-signed`:: Generates self-signed certificates. This parameter is only\n+applicable to the `cert` parameter.", "originalCommit": "efa9232965eca9e4e10d5d65806d576d6a8b3c2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1OTUyOA==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r524159528", "bodyText": "I added a note to state this option should be used with care.", "author": "ywangd", "createdAt": "2020-11-16T11:32:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEyNDA2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEyNDI2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r517124267", "bodyText": "I don't think this should change. It is a signing certificate, it just happens to also be self-signed.", "author": "tvernum", "createdAt": "2020-11-04T06:39:33Z", "path": "x-pack/docs/en/security/authentication/saml-guide.asciidoc", "diffHunk": "@@ -505,11 +505,11 @@ support. Since PEM format is the most commonly supported format, the examples\n below will generate certificates in that format.\n \n Using the <<certutil,`elasticsearch-certutil` tool>>, you can generate a\n-signing certificate with the following command:\n+self-signed certificate with the following command:", "originalCommit": "efa9232965eca9e4e10d5d65806d576d6a8b3c2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1OTkxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r524159915", "bodyText": "You are right. Ioannis said the same. It's reverted. Thanks.", "author": "ywangd", "createdAt": "2020-11-16T11:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEyNDI2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEyNDU2MA==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r517124560", "bodyText": "This isn't strictly true anymore. Do we care?", "author": "tvernum", "createdAt": "2020-11-04T06:40:22Z", "path": "x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java", "diffHunk": "@@ -167,8 +167,9 @@ public static void main(String[] args) throws Exception {\n \n     static final String CA_EXPLANATION =\n         \"    * All certificates generated by this tool will be signed by a certificate authority (CA).\\n\" +", "originalCommit": "efa9232965eca9e4e10d5d65806d576d6a8b3c2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE2MDY1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r524160656", "bodyText": "Ioannis has kindly offered suggestion and it should be accurate now.", "author": "ywangd", "createdAt": "2020-11-16T11:33:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEyNDU2MA=="}], "type": "inlineReview"}, {"oid": "cdc271cfaf60092fe46f04380cb906eccb973dcc", "url": "https://github.com/elastic/elasticsearch/commit/cdc271cfaf60092fe46f04380cb906eccb973dcc", "message": "Apply suggestions from code review\n\nCo-authored-by: Ioannis Kakavas <ikakavas@protonmail.com>", "committedDate": "2020-11-16T06:04:24Z", "type": "commit"}, {"oid": "1b01ddf7ae233c511ea04573c1049e1822971e53", "url": "https://github.com/elastic/elasticsearch/commit/1b01ddf7ae233c511ea04573c1049e1822971e53", "message": "Address feedback", "committedDate": "2020-11-16T11:25:28Z", "type": "commit"}, {"oid": "e646bc1070c7fa25c659bedc77f8f150d2f78b77", "url": "https://github.com/elastic/elasticsearch/commit/e646bc1070c7fa25c659bedc77f8f150d2f78b77", "message": "Merge remote-tracking branch 'origin/master' into es-61884-certutil-cert-deprecate-no-ca", "committedDate": "2020-11-16T11:25:44Z", "type": "commit"}, {"oid": "f4121b56e2d557a448deb866d09a962a5da9f6c5", "url": "https://github.com/elastic/elasticsearch/commit/f4121b56e2d557a448deb866d09a962a5da9f6c5", "message": "mintor comments tweak", "committedDate": "2020-11-16T11:29:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk4MDY3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r524980671", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            terminal.println(\"      A CA certificate will become mandatory in next major release.\");\n          \n          \n            \n                            terminal.println(\"      A CA certificate will become mandatory in the next major release.\");", "author": "jkakavas", "createdAt": "2020-11-17T08:50:12Z", "path": "x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java", "diffHunk": "@@ -330,6 +331,9 @@ CAInfo getCAInfo(Terminal terminal, OptionSet options, Environment env) throws E\n             } else if (options.has(caCertPathSpec)) {\n                 return loadPemCA(terminal, options, env);\n             } else {\n+                terminal.println(\"Note: Generating certificates without providing a CA certificate is deprecated.\");\n+                terminal.println(\"      A CA certificate will become mandatory in next major release.\");", "originalCommit": "f4121b56e2d557a448deb866d09a962a5da9f6c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ae6ec18eabcce4252eb0b574674a6071b81e819b", "url": "https://github.com/elastic/elasticsearch/commit/ae6ec18eabcce4252eb0b574674a6071b81e819b", "message": "Update x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java\n\nCo-authored-by: Ioannis Kakavas <ikakavas@protonmail.com>", "committedDate": "2020-11-18T04:15:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxODI0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r526218249", "bodyText": "Should these have two dashes?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"      the -ca or -ca-cert command line options.\";\n          \n          \n            \n                        \"      the --ca or --ca-cert command line options.\";", "author": "lcawl", "createdAt": "2020-11-18T16:18:02Z", "path": "x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java", "diffHunk": "@@ -166,9 +166,10 @@ public static void main(String[] args) throws Exception {\n             \"      disable hostname verification in your SSL configuration.\";\n \n     static final String CA_EXPLANATION =\n-        \"    * All certificates generated by this tool will be signed by a certificate authority (CA).\\n\" +\n-            \"    * The tool can automatically generate a new CA for you, or you can provide your own with the\\n\" +\n-            \"         -ca or -ca-cert command line options.\";\n+        \"    * All certificates generated by this tool will be signed by a certificate authority (CA)\\n\" +\n+            \"      unless the --self-signed command line option is specified.\\n\" +\n+            \"      The tool can automatically generate a new CA for you, or you can provide your own with \" +\n+            \"      the -ca or -ca-cert command line options.\";", "originalCommit": "ae6ec18eabcce4252eb0b574674a6071b81e819b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwNTM3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r526505379", "bodyText": "We haven't really been very consistent on the usage of single dash and double dashes. There are still many other places that use single dash. For this particular paragraph, I am ok to make it all double dashes.", "author": "ywangd", "createdAt": "2020-11-19T00:07:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxODI0OQ=="}], "type": "inlineReview"}, {"oid": "09694d360468ae84f9cf2a26bc6ba4680348a5fa", "url": "https://github.com/elastic/elasticsearch/commit/09694d360468ae84f9cf2a26bc6ba4680348a5fa", "message": "[DOCS] Reformats deprecation details", "committedDate": "2020-11-18T16:20:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIyMjEzMw==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r526222133", "bodyText": "deprecated:[7.11.0,\"Generating certificates without specifying a CA certificate and key is deprecated. In the next major version you must provide a CA certificate unless the --self-signed option is specified.\"]\n\nI've combined this information into a single paragraph so that it's (hopefully) clearer what's deprecated.", "author": "lcawl", "createdAt": "2020-11-18T16:23:06Z", "path": "docs/reference/commands/certutil.asciidoc", "diffHunk": "@@ -73,15 +73,18 @@ directory name, you must also specify a file name in the `--name` command\n parameter or in the `filename` field in an input YAML file.\n \n You can optionally provide IP addresses or DNS names for each instance. If\n-neither IP addresses nor DNS names are specified, the Elastic stack products\n+neither IP addresses nor DNS names are specified, the Elastic Stack products\n cannot perform hostname verification and you might need to configure the\n `verification_mode` security setting to `certificate` only. For more information\n about this setting, see <<security-settings>>.\n \n-All certificates that are generated by this command are signed by a CA. You can\n-provide your own CA with the `--ca` or `--ca-cert` parameters. Otherwise, the\n-command automatically generates a new CA for you. For more information about\n-generating a CA, see the <<certutil-ca,CA mode of this command>>.\n+All certificates that are generated by this command are signed by a CA unless\n+the `--self-signed` parameter is specified. You can provide your own CA with the\n+`--ca` or `--ca-cert` and `--ca-key` parameters. Otherwise, the command automatically generates a new CA for you.\n+deprecated:[7.11.0,\"Generating certificates without specifying a CA certificate and key is deprecated. In the next major version you must provide a CA certificate unless the `--self-signed` option is specified.\"]", "originalCommit": "09694d360468ae84f9cf2a26bc6ba4680348a5fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "46987533d9b43d499e6197ac4ee99e1727699cda", "url": "https://github.com/elastic/elasticsearch/commit/46987533d9b43d499e6197ac4ee99e1727699cda", "message": "Update x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java\n\nCo-authored-by: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-11-19T00:07:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk4NTg0NA==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r525985844", "bodyText": "Why would this take precedence rather than being an error?\nIf a user enters\ncertutil cert --ca foo.p12 --self-signed\n\nthat's contradictory, and I would expect it to be an error, but it actually would generate a self signed cert, and ignore the CA. That seems wrong to me.", "author": "tvernum", "createdAt": "2020-11-18T10:42:51Z", "path": "x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java", "diffHunk": "@@ -645,9 +649,12 @@ void generateAndWriteCsrs(Path output, int keySize, Collection<CertificateInform\n \n     static class GenerateCertificateCommand extends CertificateCommand {\n \n+        OptionSpec<Void> selfSigned;\n+\n         GenerateCertificateCommand() {\n             super(\"generate X.509 certificates and keys\");\n             acceptCertificateGenerationOptions();\n+            selfSigned = parser.accepts(\"self-signed\", \"generate self signed certificates (takes precedence over the ca options)\");", "originalCommit": "ae6ec18eabcce4252eb0b574674a6071b81e819b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2MjA2OA==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r527662068", "bodyText": "Good catch, Thanks. I misunderstood the existing behaviour of --ca and --ca-cert. The two plus the new --self-signed should be mutually exclusive. It is now fixed.", "author": "ywangd", "createdAt": "2020-11-20T12:34:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk4NTg0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3OTcyMg==", "url": "https://github.com/elastic/elasticsearch/pull/64037#discussion_r526579722", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                keyPair, null, null, true, days, null);\n          \n          \n            \n                                keyPair, null, null, false, days, null);\n          \n      \n    \n    \n  \n\nThe true means that this is a CA, but then --self-signed is just doing the same thing as certutil ca, but it should be generating a non ca, self-signed cert,", "author": "tvernum", "createdAt": "2020-11-19T04:00:52Z", "path": "x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java", "diffHunk": "@@ -818,17 +831,26 @@ void generateAndWriteSignedCertificates(Path output, boolean writeZipFile, Optio\n                 CertificateInformation certificateInformation = certs.iterator().next();\n                 CertificateAndKey pair = generateCertificateAndKey(certificateInformation, caInfo, keySize, days);\n                 fullyWriteFile(output, stream -> writePkcs12(output.getFileName().toString(), stream,\n-                    certificateInformation.name.originalName, pair, caInfo.certAndKey.cert, outputPassword, terminal));\n+                    certificateInformation.name.originalName, pair,\n+                    caInfo == null ? null : caInfo.certAndKey.cert, outputPassword, terminal));\n             }\n         }\n \n         private CertificateAndKey generateCertificateAndKey(CertificateInformation certificateInformation, CAInfo caInfo,\n                                                             int keySize, int days) throws Exception {\n             KeyPair keyPair = CertGenUtils.generateKeyPair(keySize);\n-            Certificate certificate = CertGenUtils.generateSignedCertificate(certificateInformation.name.x500Principal,\n-                getSubjectAlternativeNamesValue(certificateInformation.ipAddresses, certificateInformation.dnsNames,\n-                    certificateInformation.commonNames),\n-                keyPair, caInfo.certAndKey.cert, caInfo.certAndKey.key, days);\n+            Certificate certificate;\n+            if (caInfo != null) {\n+                certificate = CertGenUtils.generateSignedCertificate(certificateInformation.name.x500Principal,\n+                    getSubjectAlternativeNamesValue(certificateInformation.ipAddresses, certificateInformation.dnsNames,\n+                        certificateInformation.commonNames),\n+                    keyPair, caInfo.certAndKey.cert, caInfo.certAndKey.key, days);\n+            } else {\n+                certificate = CertGenUtils.generateSignedCertificate(certificateInformation.name.x500Principal,\n+                    getSubjectAlternativeNamesValue(certificateInformation.ipAddresses, certificateInformation.dnsNames,\n+                        certificateInformation.commonNames),\n+                    keyPair, null, null, true, days, null);", "originalCommit": "ae6ec18eabcce4252eb0b574674a6071b81e819b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "59329edd7d7b0e0ecb96b72355dda919d936fca7", "url": "https://github.com/elastic/elasticsearch/commit/59329edd7d7b0e0ecb96b72355dda919d936fca7", "message": "Update x-pack/plugin/security/cli/src/main/java/org/elasticsearch/xpack/security/cli/CertificateTool.java\n\nCo-authored-by: Tim Vernum <tim@adjective.org>", "committedDate": "2020-11-20T11:59:13Z", "type": "commit"}, {"oid": "55a7212b99f89c7700f632a5af016629423f7975", "url": "https://github.com/elastic/elasticsearch/commit/55a7212b99f89c7700f632a5af016629423f7975", "message": "Merge remote-tracking branch 'origin/master' into es-61884-certutil-cert-deprecate-no-ca", "committedDate": "2020-11-20T12:12:24Z", "type": "commit"}, {"oid": "3adf1cefb9511303c699184d1f46a2a2b877f118", "url": "https://github.com/elastic/elasticsearch/commit/3adf1cefb9511303c699184d1f46a2a2b877f118", "message": "Address comments", "committedDate": "2020-11-20T12:31:57Z", "type": "commit"}]}