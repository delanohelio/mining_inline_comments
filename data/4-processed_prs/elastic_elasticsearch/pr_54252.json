{"pr_number": 54252, "pr_title": "Update rest API specs", "pr_createdAt": "2020-03-26T08:35:22Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54252", "timeline": [{"oid": "4d086f2ccd3c510cc2d6b4c192519c42c70c9baa", "url": "https://github.com/elastic/elasticsearch/commit/4d086f2ccd3c510cc2d6b4c192519c42c70c9baa", "message": "Update rest API specs\n\nThis commit updates the rest API specs to validate against a\nJSON schema for the specifications. Most updates are to add\na description, whilst others fix typos and unify conventions\ne.g. deprecations, descriptions, urls starting with /.", "committedDate": "2020-03-26T08:33:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQwMTQwNg==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r398401406", "bodyText": "Is removing deprecated here intended?", "author": "karmi", "createdAt": "2020-03-26T08:46:17Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/api/clear_scroll.json", "diffHunk": "@@ -21,8 +21,7 @@\n           \"parts\":{\n             \"scroll_id\":{\n               \"type\":\"list\",\n-              \"description\":\"A comma-separated list of scroll IDs to clear\",\n-              \"deprecated\":true", "originalCommit": "4d086f2ccd3c510cc2d6b4c192519c42c70c9baa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzNzgzNA==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r398437834", "bodyText": "Yes it is. It's covered by the \"deprecated\" at the parent path object level:\n\n  \n    \n      elasticsearch/rest-api-spec/src/main/resources/rest-api-spec/api/clear_scroll.json\n    \n    \n        Lines 27 to 30\n      in\n      4d086f2\n    \n    \n    \n    \n\n        \n          \n           \"deprecated\":{ \n        \n\n        \n          \n             \"version\":\"7.0.0\", \n        \n\n        \n          \n             \"description\":\"A scroll id can be quite large and should be specified as part of the body\" \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nThere are a few cases where I've removed these", "author": "russcam", "createdAt": "2020-03-26T09:45:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQwMTQwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2MzQ0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r401963446", "bodyText": "We had a call to discuss the removal of the \"deprecated\": bool properties on parts and params. I'm going to reinstate the properties for now and add \"deprecated\" to the json schema, with a view to discuss removing these in the future.", "author": "russcam", "createdAt": "2020-04-01T23:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQwMTQwNg=="}], "type": "inlineReview"}, {"oid": "fccaf58fdf3e248300fbb16f4879f2b0db9ea9ac", "url": "https://github.com/elastic/elasticsearch/commit/fccaf58fdf3e248300fbb16f4879f2b0db9ea9ac", "message": "Add JSON schema for rest api specs\n\nThis commit adds a JSON schema for rest api specs.\nThe schema conforms to draft-07 schema.", "committedDate": "2020-03-27T00:29:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTExMjQ1OA==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399112458", "bodyText": "Can we include this as part of the work to make the validation happen in gradle?\nFeel its better to discuss this on that PR.", "author": "Mpdreamz", "createdAt": "2020-03-27T08:47:56Z", "path": "rest-api-spec/schema.json", "diffHunk": "@@ -0,0 +1,242 @@\n+{", "originalCommit": "fccaf58fdf3e248300fbb16f4879f2b0db9ea9ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE2MjY1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399162655", "bodyText": "Was thinking it may be useful for folks to have beforehand, without needing to wait on a gradle task? IntelliJ supports configuring a JSON schema that might be useful in the meantime", "author": "russcam", "createdAt": "2020-03-27T10:18:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTExMjQ1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MTYwNw==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399371607", "bodyText": "Doesn't hurt to throw this in there. We'll likely move it when we integrate the validation bit though.", "author": "mark-vieira", "createdAt": "2020-03-27T16:01:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTExMjQ1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2ODQ3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399568475", "bodyText": "I started an implementation of a gradle task to validate the spec based on https://github.com/networknt/json-schema-validator.\nI ran it against the core and x-pack specs and found 3 validation failures.\nValidating JSON spec [cat.thread_pool.json]\n$.cat.thread_pool.params.size.options[0]: does not match the regex pattern ^[a-zA-Z_]+$\nValidating JSON spec [ml.validate_detector.json]\n$.ml.validate_detector.documentation.url: null found, string expected\nValidating JSON spec [ml.validate.json]\n$.ml.validate.documentation.url: null found, string expected\nThe rest pass!\nI should be able to clean up the task and get it wired in pretty soon after this gets merged.", "author": "jakelandis", "createdAt": "2020-03-27T22:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTExMjQ1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1NDY1OA==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399754658", "bodyText": "@jakelandis nice!\nThose failures are expected; I opened #54253 for the ML failures. I\u2019ll look into the cat thread pool failure and open an issue for it - I want to check to see what the intended behaviour of passing an empty size is", "author": "russcam", "createdAt": "2020-03-29T06:48:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTExMjQ1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM5NTEwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399395109", "bodyText": "curious to why draft-07 and not 2019-09 (formerly draft-08) ?\nI think the difference here would be mostly cosmetic, so probably not a big deal either way. just curious if there was a specific reason ?", "author": "jakelandis", "createdAt": "2020-03-27T16:37:26Z", "path": "rest-api-spec/schema.json", "diffHunk": "@@ -0,0 +1,242 @@\n+{\n+    \"$schema\": \"http://json-schema.org/draft-07/schema#\",", "originalCommit": "fccaf58fdf3e248300fbb16f4879f2b0db9ea9ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1NDg3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399754877", "bodyText": "Used draft-07 as it was the latest version that the JavaScript validator the clients team were using supported", "author": "russcam", "createdAt": "2020-03-29T06:50:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM5NTEwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwODEwMw==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399408103", "bodyText": "I think we should we be stricter here for the Major.minor.patch versioning.  (e.g. require patch and not allow qualifiers) Devs should know the exact version the code is first shipping with.", "author": "jakelandis", "createdAt": "2020-03-27T16:57:00Z", "path": "rest-api-spec/schema.json", "diffHunk": "@@ -0,0 +1,242 @@\n+{\n+    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n+    \"$id\": \"https://github.com/elastic/elasticsearch/tree/master/rest-api-spec\",\n+    \"$ref\": \"#/definitions/Api\",\n+    \"definitions\": {\n+        \"Api\": {\n+            \"type\": \"object\",\n+            \"propertyNames\": {\n+                \"pattern\": \"^[a-z]+?(_[a-z]+)*(\\\\.[a-z]+?(_[a-z]+)*)?$\"\n+            },\n+            \"minProperties\": 1,\n+            \"maxProperties\": 1,\n+            \"patternProperties\": {\n+                \"^[a-z]+?(_[a-z]+)*(\\\\.[a-z]+?(_[a-z]+)*)?$\": {\n+                    \"$ref\": \"#/definitions/Components\"\n+                }\n+            },\n+            \"additionalProperties\": false,\n+            \"title\": \"API name\",\n+            \"description\": \"An object with a single property name of the API and value of the API components\"\n+        },\n+        \"Components\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": false,\n+            \"properties\": {\n+                \"deprecated\": {\n+                    \"$ref\": \"#/definitions/Deprecated\"\n+                },\n+                \"documentation\": {\n+                    \"$ref\": \"#/definitions/Documentation\"\n+                },\n+                \"stability\": {\n+                    \"type\": \"string\",\n+                    \"enum\": [\"stable\", \"beta\", \"experimental\", \"private\"]\n+                },\n+                \"url\": {\n+                    \"$ref\": \"#/definitions/Url\"\n+                },\n+                \"params\": {\n+                    \"$ref\": \"#/definitions/Params\"\n+                },\n+                \"body\": {\n+                    \"$ref\": \"#/definitions/Body\"\n+                }\n+            },\n+            \"required\": [\n+                \"documentation\",\n+                \"stability\",\n+                \"url\"\n+            ],\n+            \"title\": \"API components\",\n+            \"description\": \"The components that make up the API\"\n+        },\n+        \"Url\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": false,\n+            \"properties\": {\n+                \"paths\": {\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                        \"$ref\": \"#/definitions/Path\"\n+                    },\n+                    \"minLength\": 1\n+                }\n+            },\n+            \"required\": [\n+                \"paths\"\n+            ],\n+            \"title\": \"API urls\",\n+            \"description\": \"An array of the URL path variants for the API\"\n+        },\n+        \"Params\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": true,\n+            \"propertyNames\": {\n+              \"pattern\": \"^_?[a-z]+?(_[a-z]+)*$\"\n+            },\n+            \"patternProperties\": {\n+                \"^_?[a-z]+?(_[a-z]+)*$\": {\n+                    \"$ref\": \"#/definitions/ParamPart\"\n+                }\n+            },\n+            \"title\": \"API query string parameters\",\n+            \"description\": \"A collection of the query string parameters for the API\"\n+        },\n+        \"Body\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": false,\n+            \"properties\": {\n+                \"description\": {\n+                    \"type\": \"string\"\n+                },\n+                \"required\": {\n+                    \"type\": \"boolean\"\n+                },\n+                \"serialize\": {\n+                    \"type\": \"string\",\n+                    \"enum\": [\"bulk\"]\n+                }\n+            },\n+            \"required\": [\n+                \"description\"\n+            ],\n+            \"title\": \"API request Body\",\n+            \"description\": \"The request body for the API. Does not detail the structure, only whether the API accepts a body and its format\"\n+        },\n+        \"Deprecated\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": false,\n+            \"properties\": {\n+                \"version\": {\n+                    \"type\": \"string\",\n+                    \"pattern\": \"^(\\\\d+)(\\\\.(\\\\d+))?(\\\\.(\\\\d+))?(\\\\-([0-9A-Za-z]+))?$\",", "originalCommit": "fccaf58fdf3e248300fbb16f4879f2b0db9ea9ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1NDg4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399754889", "bodyText": "++ will amend", "author": "russcam", "createdAt": "2020-03-29T06:50:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwODEwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2MTk2NA==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399861964", "bodyText": "done", "author": "russcam", "createdAt": "2020-03-29T22:18:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwODEwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwODgwNA==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399408804", "bodyText": "should we expand this to an array to allow saying this was deprecrated in 6.8.7 and 7.6.1 ? (probably not with this PR, but as a follow up)", "author": "jakelandis", "createdAt": "2020-03-27T16:58:07Z", "path": "rest-api-spec/schema.json", "diffHunk": "@@ -0,0 +1,242 @@\n+{\n+    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n+    \"$id\": \"https://github.com/elastic/elasticsearch/tree/master/rest-api-spec\",\n+    \"$ref\": \"#/definitions/Api\",\n+    \"definitions\": {\n+        \"Api\": {\n+            \"type\": \"object\",\n+            \"propertyNames\": {\n+                \"pattern\": \"^[a-z]+?(_[a-z]+)*(\\\\.[a-z]+?(_[a-z]+)*)?$\"\n+            },\n+            \"minProperties\": 1,\n+            \"maxProperties\": 1,\n+            \"patternProperties\": {\n+                \"^[a-z]+?(_[a-z]+)*(\\\\.[a-z]+?(_[a-z]+)*)?$\": {\n+                    \"$ref\": \"#/definitions/Components\"\n+                }\n+            },\n+            \"additionalProperties\": false,\n+            \"title\": \"API name\",\n+            \"description\": \"An object with a single property name of the API and value of the API components\"\n+        },\n+        \"Components\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": false,\n+            \"properties\": {\n+                \"deprecated\": {\n+                    \"$ref\": \"#/definitions/Deprecated\"\n+                },\n+                \"documentation\": {\n+                    \"$ref\": \"#/definitions/Documentation\"\n+                },\n+                \"stability\": {\n+                    \"type\": \"string\",\n+                    \"enum\": [\"stable\", \"beta\", \"experimental\", \"private\"]\n+                },\n+                \"url\": {\n+                    \"$ref\": \"#/definitions/Url\"\n+                },\n+                \"params\": {\n+                    \"$ref\": \"#/definitions/Params\"\n+                },\n+                \"body\": {\n+                    \"$ref\": \"#/definitions/Body\"\n+                }\n+            },\n+            \"required\": [\n+                \"documentation\",\n+                \"stability\",\n+                \"url\"\n+            ],\n+            \"title\": \"API components\",\n+            \"description\": \"The components that make up the API\"\n+        },\n+        \"Url\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": false,\n+            \"properties\": {\n+                \"paths\": {\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                        \"$ref\": \"#/definitions/Path\"\n+                    },\n+                    \"minLength\": 1\n+                }\n+            },\n+            \"required\": [\n+                \"paths\"\n+            ],\n+            \"title\": \"API urls\",\n+            \"description\": \"An array of the URL path variants for the API\"\n+        },\n+        \"Params\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": true,\n+            \"propertyNames\": {\n+              \"pattern\": \"^_?[a-z]+?(_[a-z]+)*$\"\n+            },\n+            \"patternProperties\": {\n+                \"^_?[a-z]+?(_[a-z]+)*$\": {\n+                    \"$ref\": \"#/definitions/ParamPart\"\n+                }\n+            },\n+            \"title\": \"API query string parameters\",\n+            \"description\": \"A collection of the query string parameters for the API\"\n+        },\n+        \"Body\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": false,\n+            \"properties\": {\n+                \"description\": {\n+                    \"type\": \"string\"\n+                },\n+                \"required\": {\n+                    \"type\": \"boolean\"\n+                },\n+                \"serialize\": {\n+                    \"type\": \"string\",\n+                    \"enum\": [\"bulk\"]\n+                }\n+            },\n+            \"required\": [\n+                \"description\"\n+            ],\n+            \"title\": \"API request Body\",\n+            \"description\": \"The request body for the API. Does not detail the structure, only whether the API accepts a body and its format\"\n+        },\n+        \"Deprecated\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": false,\n+            \"properties\": {\n+                \"version\": {", "originalCommit": "fccaf58fdf3e248300fbb16f4879f2b0db9ea9ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1NTAzMA==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399755030", "bodyText": "Happy to do in a follow up. I don\u2019t think we have a need for this in the current specs, but do you see one coming up?", "author": "russcam", "createdAt": "2020-03-29T06:52:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwODgwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyNDEyMg==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r400224122", "bodyText": "Not specifically, and now that I think about this abit more it is likely pretty rare for a need to do this.", "author": "jakelandis", "createdAt": "2020-03-30T14:13:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwODgwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY0NTQ5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r400645495", "bodyText": "No worries - can always amend down the line", "author": "russcam", "createdAt": "2020-03-31T05:05:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQwODgwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTE4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399419189", "bodyText": "I wonder if we should leave this out and set additionalProperties to true ?\n.. or if we should find where this is used and make it an external definition ? (this may help to encourage that start of building json schema's for the body)", "author": "jakelandis", "createdAt": "2020-03-27T17:14:48Z", "path": "rest-api-spec/schema.json", "diffHunk": "@@ -0,0 +1,242 @@\n+{\n+    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n+    \"$id\": \"https://github.com/elastic/elasticsearch/tree/master/rest-api-spec\",\n+    \"$ref\": \"#/definitions/Api\",\n+    \"definitions\": {\n+        \"Api\": {\n+            \"type\": \"object\",\n+            \"propertyNames\": {\n+                \"pattern\": \"^[a-z]+?(_[a-z]+)*(\\\\.[a-z]+?(_[a-z]+)*)?$\"\n+            },\n+            \"minProperties\": 1,\n+            \"maxProperties\": 1,\n+            \"patternProperties\": {\n+                \"^[a-z]+?(_[a-z]+)*(\\\\.[a-z]+?(_[a-z]+)*)?$\": {\n+                    \"$ref\": \"#/definitions/Components\"\n+                }\n+            },\n+            \"additionalProperties\": false,\n+            \"title\": \"API name\",\n+            \"description\": \"An object with a single property name of the API and value of the API components\"\n+        },\n+        \"Components\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": false,\n+            \"properties\": {\n+                \"deprecated\": {\n+                    \"$ref\": \"#/definitions/Deprecated\"\n+                },\n+                \"documentation\": {\n+                    \"$ref\": \"#/definitions/Documentation\"\n+                },\n+                \"stability\": {\n+                    \"type\": \"string\",\n+                    \"enum\": [\"stable\", \"beta\", \"experimental\", \"private\"]\n+                },\n+                \"url\": {\n+                    \"$ref\": \"#/definitions/Url\"\n+                },\n+                \"params\": {\n+                    \"$ref\": \"#/definitions/Params\"\n+                },\n+                \"body\": {\n+                    \"$ref\": \"#/definitions/Body\"\n+                }\n+            },\n+            \"required\": [\n+                \"documentation\",\n+                \"stability\",\n+                \"url\"\n+            ],\n+            \"title\": \"API components\",\n+            \"description\": \"The components that make up the API\"\n+        },\n+        \"Url\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": false,\n+            \"properties\": {\n+                \"paths\": {\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                        \"$ref\": \"#/definitions/Path\"\n+                    },\n+                    \"minLength\": 1\n+                }\n+            },\n+            \"required\": [\n+                \"paths\"\n+            ],\n+            \"title\": \"API urls\",\n+            \"description\": \"An array of the URL path variants for the API\"\n+        },\n+        \"Params\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": true,\n+            \"propertyNames\": {\n+              \"pattern\": \"^_?[a-z]+?(_[a-z]+)*$\"\n+            },\n+            \"patternProperties\": {\n+                \"^_?[a-z]+?(_[a-z]+)*$\": {\n+                    \"$ref\": \"#/definitions/ParamPart\"\n+                }\n+            },\n+            \"title\": \"API query string parameters\",\n+            \"description\": \"A collection of the query string parameters for the API\"\n+        },\n+        \"Body\": {\n+            \"type\": \"object\",\n+            \"additionalProperties\": false,\n+            \"properties\": {\n+                \"description\": {\n+                    \"type\": \"string\"\n+                },\n+                \"required\": {\n+                    \"type\": \"boolean\"\n+                },\n+                \"serialize\": {", "originalCommit": "fccaf58fdf3e248300fbb16f4879f2b0db9ea9ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1NjI4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399756282", "bodyText": "\u201dserialize\u201d with \u201dbulk\u201d is used by clients currently to know if an API accepts newline-delimited JSON format. Can we keep as is for now, and look at changing when needed? @Mpdreamz opened #53979 to add content-type and accept headers, so we can looking at moving to using these, but would want to coordinate with teams first before removing.", "author": "russcam", "createdAt": "2020-03-29T07:05:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTE4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIyNTA3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r400225072", "bodyText": "thanks, i think i mis-understood this purpose.", "author": "jakelandis", "createdAt": "2020-03-30T14:14:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTE4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNjAwNg==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399536006", "bodyText": "Can we move this file to src/main/resources ? I consider this more as part of the rest-api-spec then meta-data of the project/build.", "author": "jakelandis", "createdAt": "2020-03-27T21:02:00Z", "path": "rest-api-spec/schema.json", "diffHunk": "@@ -0,0 +1,242 @@\n+{", "originalCommit": "fccaf58fdf3e248300fbb16f4879f2b0db9ea9ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1NTEyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399755129", "bodyText": "++ Happy to move to where you think is best", "author": "russcam", "createdAt": "2020-03-29T06:53:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNjAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2MTkyOA==", "url": "https://github.com/elastic/elasticsearch/pull/54252#discussion_r399861928", "bodyText": "done", "author": "russcam", "createdAt": "2020-03-29T22:18:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNjAwNg=="}], "type": "inlineReview"}, {"oid": "474b63ad1dfd3f8d6022129388ea2a70fe4c88bd", "url": "https://github.com/elastic/elasticsearch/commit/474b63ad1dfd3f8d6022129388ea2a70fe4c88bd", "message": "Address PR comments", "committedDate": "2020-03-29T22:17:04Z", "type": "commit"}, {"oid": "ea86e149bfcb7019f690065ba12e2127ef2fa719", "url": "https://github.com/elastic/elasticsearch/commit/ea86e149bfcb7019f690065ba12e2127ef2fa719", "message": "Reinstate deprecated:bool API parts", "committedDate": "2020-04-01T23:26:29Z", "type": "commit"}, {"oid": "86916e2226ae2c4444b07ba20369519e95347bd9", "url": "https://github.com/elastic/elasticsearch/commit/86916e2226ae2c4444b07ba20369519e95347bd9", "message": "Merge branch 'master' into rest-spec-validation", "committedDate": "2020-04-01T23:50:03Z", "type": "commit"}]}