{"pr_number": 59128, "pr_title": "GET data stream API returns additional information", "pr_createdAt": "2020-07-07T09:51:42Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59128", "timeline": [{"oid": "e92adfffbfbf51ef98d4582577708d6a3b64a1f3", "url": "https://github.com/elastic/elasticsearch/commit/e92adfffbfbf51ef98d4582577708d6a3b64a1f3", "message": "GET data stream API returns additional information\n\nThis adds the data stream's index template, the configured ILM policy\n(if any) and the health status of the data stream to the GET _data_stream\nresponse.", "committedDate": "2020-07-07T07:39:38Z", "type": "commit"}, {"oid": "4a4a356d9d028e32a066b291690ee2df55d1c10a", "url": "https://github.com/elastic/elasticsearch/commit/4a4a356d9d028e32a066b291690ee2df55d1c10a", "message": "Remove unused import", "committedDate": "2020-07-07T10:11:22Z", "type": "commit"}, {"oid": "6c553b3ae1ee15810bd5f8589074c2fae752e22d", "url": "https://github.com/elastic/elasticsearch/commit/6c553b3ae1ee15810bd5f8589074c2fae752e22d", "message": "Fix yaml tests", "committedDate": "2020-07-07T10:22:15Z", "type": "commit"}, {"oid": "57a8298281d65d509609224983f296cc1494ab47", "url": "https://github.com/elastic/elasticsearch/commit/57a8298281d65d509609224983f296cc1494ab47", "message": "Merge branch 'master' into get_data_stream", "committedDate": "2020-07-07T10:32:50Z", "type": "commit"}, {"oid": "7dabe6e1a1eec53dce61a7549c42944c78bb6fd9", "url": "https://github.com/elastic/elasticsearch/commit/7dabe6e1a1eec53dce61a7549c42944c78bb6fd9", "message": "Fix yaml test", "committedDate": "2020-07-07T10:57:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxOTc2OQ==", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r450819769", "bodyText": "I think that at least one of these REST tests should be updated with the full list of fields that are returned from the get data stream API.", "author": "danhermann", "createdAt": "2020-07-07T12:16:41Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/indices.data_stream/10_basic.yml", "diffHunk": "@@ -49,16 +49,16 @@ setup:\n   - do:\n       indices.get_data_stream:\n         name: \"*\"\n-  - match: { 0.name: simple-data-stream1 }\n-  - match: { 0.timestamp_field.name: '@timestamp' }\n-  - match: { 0.generation: 1 }\n-  - length: { 0.indices: 1 }\n-  - match: { 0.indices.0.index_name: '.ds-simple-data-stream1-000001' }\n-  - match: { 1.name: simple-data-stream2 }\n-  - match: { 1.timestamp_field.name: '@timestamp2' }\n-  - match: { 0.generation: 1 }\n-  - length: { 1.indices: 1 }\n-  - match: { 1.indices.0.index_name: '.ds-simple-data-stream2-000001' }\n+  - match: { data_streams.0.name: simple-data-stream1 }\n+  - match: { data_streams.0.timestamp_field.name: '@timestamp' }\n+  - match: { data_streams.0.generation: 1 }\n+  - length: { data_streams.0.indices: 1 }\n+  - match: { data_streams.0.indices.0.index_name: '.ds-simple-data-stream1-000001' }\n+  - match: { data_streams.1.name: simple-data-stream2 }\n+  - match: { data_streams.1.timestamp_field.name: '@timestamp2' }\n+  - match: { data_streams.0.generation: 1 }\n+  - length: { data_streams.1.indices: 1 }\n+  - match: { data_streams.1.indices.0.index_name: '.ds-simple-data-stream2-000001' }", "originalCommit": "7dabe6e1a1eec53dce61a7549c42944c78bb6fd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg2NDU3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r450864577", "bodyText": "Thanks Dan, pushed a match for status and template (the lifecycle policy is tested in TimeseriesDataStreamIT as it's an xpack setting)", "author": "andreidan", "createdAt": "2020-07-07T13:29:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxOTc2OQ=="}], "type": "inlineReview"}, {"oid": "1a2d43db1edec946ee3028a5cd3e8e157e905a74", "url": "https://github.com/elastic/elasticsearch/commit/1a2d43db1edec946ee3028a5cd3e8e157e905a74", "message": "Adjust HLRC to new API", "committedDate": "2020-07-07T12:45:20Z", "type": "commit"}, {"oid": "8340a545a1ec7d2cd84aff6808a29837bb5689a8", "url": "https://github.com/elastic/elasticsearch/commit/8340a545a1ec7d2cd84aff6808a29837bb5689a8", "message": "Parse ilm_policy as optional", "committedDate": "2020-07-07T13:17:42Z", "type": "commit"}, {"oid": "3fb57b1f1c76b4ca8654dc9033ec2fac217c605a", "url": "https://github.com/elastic/elasticsearch/commit/3fb57b1f1c76b4ca8654dc9033ec2fac217c605a", "message": "Yaml test: match corresponding DS status and template", "committedDate": "2020-07-07T13:29:07Z", "type": "commit"}, {"oid": "af0feb6e653cd3c49fa9587f78280f5e7dee91b4", "url": "https://github.com/elastic/elasticsearch/commit/af0feb6e653cd3c49fa9587f78280f5e7dee91b4", "message": "Fix stack yaml tests", "committedDate": "2020-07-07T14:15:07Z", "type": "commit"}, {"oid": "4e66c0eb567658bcf89ea96b109b02b2621a3272", "url": "https://github.com/elastic/elasticsearch/commit/4e66c0eb567658bcf89ea96b109b02b2621a3272", "message": "Make the index template optional for the GET _data_stream response\n\nRestoring a data stream from a snapshot could install a data stream that\ndoesn't match any composable templates. This makes the index template field\nin the `GET _data_stream` response optional.", "committedDate": "2020-07-07T15:17:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MjYwMg==", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r451042602", "bodyText": "why was this top level data_streams field introduced? I don't think that this is needed?", "author": "martijnvg", "createdAt": "2020-07-07T17:53:20Z", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/datastream/GetDataStreamAction.java", "diffHunk": "@@ -119,11 +214,13 @@ public void writeTo(StreamOutput out) throws IOException {\n \n         @Override\n         public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n-            builder.startArray();\n-            for (DataStream dataStream : dataStreams) {\n+            builder.startObject();", "originalCommit": "4e66c0eb567658bcf89ea96b109b02b2621a3272", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0ODI3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r451048272", "bodyText": "It did make it easier to verify in REST tests that the number of returned data streams was as expected with a - length: { data_streams: 0 } directive. I don't think the length directive otherwise provides a way to refer to the root level of a response.", "author": "danhermann", "createdAt": "2020-07-07T18:02:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MjYwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4Mjc2OA==", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r451082768", "bodyText": "I think the - length:  directive should be improved to handle this? Now the response format is changed, because a test directive can't handle something.\nI also don't see length directive being used on the data_streams object, so maybe just keep using:\n- match: { $body: [] }\n\n?", "author": "martijnvg", "createdAt": "2020-07-07T19:08:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MjYwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4NjUxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r451086519", "bodyText": "Those are fair points. \ud83d\udc4d", "author": "danhermann", "createdAt": "2020-07-07T19:15:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MjYwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM4NzU1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59128#discussion_r451387557", "bodyText": "Went of the top array field to be consistent with component and composable templates eg. \n  \n    \n      elasticsearch/server/src/main/java/org/elasticsearch/action/admin/indices/template/get/GetComponentTemplateAction.java\n    \n    \n         Line 146\n      in\n      3515909\n    \n    \n    \n    \n\n        \n          \n           builder.startArray(COMPONENT_TEMPLATES.getPreferredName());", "author": "andreidan", "createdAt": "2020-07-08T08:52:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MjYwMg=="}], "type": "inlineReview"}]}