{"pr_number": 54023, "pr_title": "Add validation for component templates", "pr_createdAt": "2020-03-23T20:50:21Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54023", "timeline": [{"oid": "83adca7513b8cb2cb052a8c4471db0a562871a90", "url": "https://github.com/elastic/elasticsearch/commit/83adca7513b8cb2cb052a8c4471db0a562871a90", "message": "Add validation for component templates\n\nThis change adds validation to make sure that settings and mappings are correct in\ncomponent template. It's done the same way as in index templates - code is reused.\n\nReletes to #53101", "committedDate": "2020-03-23T20:46:34Z", "type": "commit"}, {"oid": "6dd97d6a0866f2eeab4b60f42503ef2dd2b47c4f", "url": "https://github.com/elastic/elasticsearch/commit/6dd97d6a0866f2eeab4b60f42503ef2dd2b47c4f", "message": "Fix checkstyle violation", "committedDate": "2020-03-23T21:07:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc3MzgzNw==", "url": "https://github.com/elastic/elasticsearch/pull/54023#discussion_r396773837", "bodyText": "Super minor nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(request.mappings!=null) {\n          \n          \n            \n                            if (request.mappings != null) {", "author": "dakrone", "createdAt": "2020-03-23T21:41:26Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java", "diffHunk": "@@ -274,7 +276,20 @@ public ClusterState execute(ClusterState currentState) throws Exception {\n                     throw new IllegalArgumentException(\"index_template [\" + request.name + \"] already exists\");\n                 }\n \n-                validateAndAddTemplate(request, templateBuilder, indicesService, xContentRegistry);\n+                templateBuilder.order(request.order);\n+                templateBuilder.version(request.version);\n+                templateBuilder.patterns(request.indexPatterns);\n+                templateBuilder.settings(request.settings);\n+\n+                if(request.mappings!=null) {", "originalCommit": "6dd97d6a0866f2eeab4b60f42503ef2dd2b47c4f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc3ODEzOA==", "url": "https://github.com/elastic/elasticsearch/pull/54023#discussion_r396778138", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ()->metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate2));\n          \n          \n            \n                        () -> metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate2));", "author": "dakrone", "createdAt": "2020-03-23T21:50:46Z", "path": "server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateServiceTests.java", "diffHunk": "@@ -197,21 +200,41 @@ public void testPutGlobalTemplateWithIndexHiddenSetting() throws Exception {\n         assertThat(errors.get(0).getMessage(), containsString(\"global templates may not specify the setting index.hidden\"));\n     }\n \n-    public void testAddComponentTemplate() {\n+    public void testAddComponentTemplate() throws Exception{\n+        MetaDataIndexTemplateService metaDataIndexTemplateService = getMetaDataIndexTemplateService();\n         ClusterState state = ClusterState.EMPTY_STATE;\n-        ComponentTemplate template = ComponentTemplateTests.randomInstance();\n-        state = MetaDataIndexTemplateService.addComponentTemplate(state, false, \"foo\", template);\n+        Template template = new Template(Settings.builder().build(), null, ComponentTemplateTests.randomAliases());\n+        ComponentTemplate componentTemplate = new ComponentTemplate(template, 1L, new HashMap<>());\n+        state = metaDataIndexTemplateService.addComponentTemplate(state, false, \"foo\", componentTemplate);\n \n         assertNotNull(state.metaData().componentTemplates().get(\"foo\"));\n-        assertThat(state.metaData().componentTemplates().get(\"foo\"), equalTo(template));\n+        assertThat(state.metaData().componentTemplates().get(\"foo\"), equalTo(componentTemplate));\n \n         final ClusterState throwState = ClusterState.builder(state).build();\n         IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n-            () -> MetaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo\", template));\n+            () -> metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo\", componentTemplate));\n         assertThat(e.getMessage(), containsString(\"component template [foo] already exists\"));\n \n-        state = MetaDataIndexTemplateService.addComponentTemplate(state, randomBoolean(), \"bar\", template);\n+        state = metaDataIndexTemplateService.addComponentTemplate(state, randomBoolean(), \"bar\", componentTemplate);\n         assertNotNull(state.metaData().componentTemplates().get(\"bar\"));\n+\n+        template = new Template(Settings.builder().build(), new CompressedXContent(\"{\\\"invalid\\\"}\"),\n+            ComponentTemplateTests.randomAliases());\n+        ComponentTemplate componentTemplate2 = new ComponentTemplate(template, 1L, new HashMap<>());\n+        expectThrows(JsonParseException.class,\n+            ()->metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate2));", "originalCommit": "6dd97d6a0866f2eeab4b60f42503ef2dd2b47c4f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc3ODE3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/54023#discussion_r396778176", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ()->metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate3));\n          \n          \n            \n                        () -> metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate3));", "author": "dakrone", "createdAt": "2020-03-23T21:50:53Z", "path": "server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateServiceTests.java", "diffHunk": "@@ -197,21 +200,41 @@ public void testPutGlobalTemplateWithIndexHiddenSetting() throws Exception {\n         assertThat(errors.get(0).getMessage(), containsString(\"global templates may not specify the setting index.hidden\"));\n     }\n \n-    public void testAddComponentTemplate() {\n+    public void testAddComponentTemplate() throws Exception{\n+        MetaDataIndexTemplateService metaDataIndexTemplateService = getMetaDataIndexTemplateService();\n         ClusterState state = ClusterState.EMPTY_STATE;\n-        ComponentTemplate template = ComponentTemplateTests.randomInstance();\n-        state = MetaDataIndexTemplateService.addComponentTemplate(state, false, \"foo\", template);\n+        Template template = new Template(Settings.builder().build(), null, ComponentTemplateTests.randomAliases());\n+        ComponentTemplate componentTemplate = new ComponentTemplate(template, 1L, new HashMap<>());\n+        state = metaDataIndexTemplateService.addComponentTemplate(state, false, \"foo\", componentTemplate);\n \n         assertNotNull(state.metaData().componentTemplates().get(\"foo\"));\n-        assertThat(state.metaData().componentTemplates().get(\"foo\"), equalTo(template));\n+        assertThat(state.metaData().componentTemplates().get(\"foo\"), equalTo(componentTemplate));\n \n         final ClusterState throwState = ClusterState.builder(state).build();\n         IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n-            () -> MetaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo\", template));\n+            () -> metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo\", componentTemplate));\n         assertThat(e.getMessage(), containsString(\"component template [foo] already exists\"));\n \n-        state = MetaDataIndexTemplateService.addComponentTemplate(state, randomBoolean(), \"bar\", template);\n+        state = metaDataIndexTemplateService.addComponentTemplate(state, randomBoolean(), \"bar\", componentTemplate);\n         assertNotNull(state.metaData().componentTemplates().get(\"bar\"));\n+\n+        template = new Template(Settings.builder().build(), new CompressedXContent(\"{\\\"invalid\\\"}\"),\n+            ComponentTemplateTests.randomAliases());\n+        ComponentTemplate componentTemplate2 = new ComponentTemplate(template, 1L, new HashMap<>());\n+        expectThrows(JsonParseException.class,\n+            ()->metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate2));\n+\n+        template = new Template(Settings.builder().build(), new CompressedXContent(\"{\\\"invalid\\\":\\\"invalid\\\"}\"),\n+            ComponentTemplateTests.randomAliases());\n+        ComponentTemplate componentTemplate3 = new ComponentTemplate(template, 1L, new HashMap<>());\n+        expectThrows(MapperParsingException.class,\n+            ()->metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate3));", "originalCommit": "6dd97d6a0866f2eeab4b60f42503ef2dd2b47c4f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc3ODI3NA==", "url": "https://github.com/elastic/elasticsearch/pull/54023#discussion_r396778274", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ()->metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate4));\n          \n          \n            \n                        () -> metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate4));", "author": "dakrone", "createdAt": "2020-03-23T21:51:08Z", "path": "server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateServiceTests.java", "diffHunk": "@@ -197,21 +200,41 @@ public void testPutGlobalTemplateWithIndexHiddenSetting() throws Exception {\n         assertThat(errors.get(0).getMessage(), containsString(\"global templates may not specify the setting index.hidden\"));\n     }\n \n-    public void testAddComponentTemplate() {\n+    public void testAddComponentTemplate() throws Exception{\n+        MetaDataIndexTemplateService metaDataIndexTemplateService = getMetaDataIndexTemplateService();\n         ClusterState state = ClusterState.EMPTY_STATE;\n-        ComponentTemplate template = ComponentTemplateTests.randomInstance();\n-        state = MetaDataIndexTemplateService.addComponentTemplate(state, false, \"foo\", template);\n+        Template template = new Template(Settings.builder().build(), null, ComponentTemplateTests.randomAliases());\n+        ComponentTemplate componentTemplate = new ComponentTemplate(template, 1L, new HashMap<>());\n+        state = metaDataIndexTemplateService.addComponentTemplate(state, false, \"foo\", componentTemplate);\n \n         assertNotNull(state.metaData().componentTemplates().get(\"foo\"));\n-        assertThat(state.metaData().componentTemplates().get(\"foo\"), equalTo(template));\n+        assertThat(state.metaData().componentTemplates().get(\"foo\"), equalTo(componentTemplate));\n \n         final ClusterState throwState = ClusterState.builder(state).build();\n         IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n-            () -> MetaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo\", template));\n+            () -> metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo\", componentTemplate));\n         assertThat(e.getMessage(), containsString(\"component template [foo] already exists\"));\n \n-        state = MetaDataIndexTemplateService.addComponentTemplate(state, randomBoolean(), \"bar\", template);\n+        state = metaDataIndexTemplateService.addComponentTemplate(state, randomBoolean(), \"bar\", componentTemplate);\n         assertNotNull(state.metaData().componentTemplates().get(\"bar\"));\n+\n+        template = new Template(Settings.builder().build(), new CompressedXContent(\"{\\\"invalid\\\"}\"),\n+            ComponentTemplateTests.randomAliases());\n+        ComponentTemplate componentTemplate2 = new ComponentTemplate(template, 1L, new HashMap<>());\n+        expectThrows(JsonParseException.class,\n+            ()->metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate2));\n+\n+        template = new Template(Settings.builder().build(), new CompressedXContent(\"{\\\"invalid\\\":\\\"invalid\\\"}\"),\n+            ComponentTemplateTests.randomAliases());\n+        ComponentTemplate componentTemplate3 = new ComponentTemplate(template, 1L, new HashMap<>());\n+        expectThrows(MapperParsingException.class,\n+            ()->metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate3));\n+\n+        template = new Template(Settings.builder().put(\"invalid\", \"invalid\").build(), new CompressedXContent(\"{}\"),\n+            ComponentTemplateTests.randomAliases());\n+        ComponentTemplate componentTemplate4 = new ComponentTemplate(template, 1L, new HashMap<>());\n+        expectThrows(IllegalArgumentException.class,\n+            ()->metaDataIndexTemplateService.addComponentTemplate(throwState, true, \"foo2\", componentTemplate4));", "originalCommit": "6dd97d6a0866f2eeab4b60f42503ef2dd2b47c4f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgxMzAxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/54023#discussion_r396813015", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            public ClusterState execute(ClusterState currentState) throws Exception{\n          \n          \n            \n                            public ClusterState execute(ClusterState currentState) throws Exception {", "author": "dakrone", "createdAt": "2020-03-23T23:14:36Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java", "diffHunk": "@@ -154,7 +155,7 @@ public void onFailure(String source, Exception e) {\n                 }\n \n                 @Override\n-                public ClusterState execute(ClusterState currentState) {\n+                public ClusterState execute(ClusterState currentState) throws Exception{", "originalCommit": "6dd97d6a0866f2eeab4b60f42503ef2dd2b47c4f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d47eff5a0f6a17253849f3472061a6f832e7ee18", "url": "https://github.com/elastic/elasticsearch/commit/d47eff5a0f6a17253849f3472061a6f832e7ee18", "message": "Update server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-03-24T10:44:34Z", "type": "commit"}, {"oid": "4ee8e3b3e612f28b08e4b9931c59e31c7a2cc885", "url": "https://github.com/elastic/elasticsearch/commit/4ee8e3b3e612f28b08e4b9931c59e31c7a2cc885", "message": "Update server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateServiceTests.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-03-24T10:44:40Z", "type": "commit"}, {"oid": "e94d7fff992cedbfbf5ad15fb4345874394ece09", "url": "https://github.com/elastic/elasticsearch/commit/e94d7fff992cedbfbf5ad15fb4345874394ece09", "message": "Update server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateServiceTests.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-03-24T10:44:47Z", "type": "commit"}, {"oid": "da916c5a84e2ab82598d35ab299e3aba0c7674bd", "url": "https://github.com/elastic/elasticsearch/commit/da916c5a84e2ab82598d35ab299e3aba0c7674bd", "message": "Update server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateServiceTests.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-03-24T10:44:55Z", "type": "commit"}, {"oid": "93647cc1ab490dd62a05e184115d2a278d79c4b2", "url": "https://github.com/elastic/elasticsearch/commit/93647cc1ab490dd62a05e184115d2a278d79c4b2", "message": "Update server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-03-24T10:45:03Z", "type": "commit"}]}