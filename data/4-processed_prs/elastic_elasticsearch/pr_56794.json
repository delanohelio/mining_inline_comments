{"pr_number": 56794, "pr_title": "[DOCS] Add links to `flattened` datatype", "pr_createdAt": "2020-05-14T21:29:27Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56794", "timeline": [{"oid": "9bb98143bb20dc38a143cd537d161cbf51c16fd3", "url": "https://github.com/elastic/elasticsearch/commit/9bb98143bb20dc38a143cd537d161cbf51c16fd3", "message": "Changes for #52239.", "committedDate": "2020-05-14T21:23:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ1OTM1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r425459355", "bodyText": "To me the phrase \"While a flattened object provides only a single field to search on\" could be confusing -- it could suggest that you can only search the root field. What would you think of this tweak: \"Using the KV Processor can create a large number of field names that you don't control. Consider using the flattened datatype instead, which maps an entire object as a single field and allows for simple searches over its contents.\"", "author": "jtibshirani", "createdAt": "2020-05-14T22:10:08Z", "path": "docs/reference/ingest/processors/kv.asciidoc", "diffHunk": "@@ -17,8 +16,11 @@ For example, if you have a log message which contains `ip=1.2.3.4 error=REFUSED`\n --------------------------------------------------\n // NOTCONSOLE\n \n+TIP: Using the KV Processor can result in field names that you cannot control. Consider using the <<flattened>> datatype instead, which maps an entire object as a single field.\n+While a flattened object provides only a single field to search on, the object's contents can still be searched using simple queries and aggregations.", "originalCommit": "9bb98143bb20dc38a143cd537d161cbf51c16fd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg0MTgwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r425841809", "bodyText": "Agreed! I like your edit, which focuses on the positive (what the user can do) of the flattened object, rather than its limitations.", "author": "lockewritesdocs", "createdAt": "2020-05-15T14:30:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ1OTM1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2MDkzNg==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r425460936", "bodyText": "Maybe we could move this tip to the end of the section? I think it comes right in the middle of an important explanation and breaks the continuity.", "author": "jtibshirani", "createdAt": "2020-05-14T22:14:25Z", "path": "docs/reference/mapping/types/nested.asciidoc", "diffHunk": "@@ -71,10 +70,15 @@ GET my_index/_search\n ==== Using `nested` fields for arrays of objects\n \n If you need to index arrays of objects and to maintain the independence of\n-each object in the array, you should use the `nested` datatype instead of the\n-<<object,`object`>> datatype.  Internally, nested objects index each object in\n+each object in the array, use the `nested` datatype instead of the\n+<<object,`object`>> datatype.\n+\n+TIP: If you consider creating `nested` objects with two `key` and `value` keyword fields, consider using the <<flattened>> datatype instead.", "originalCommit": "9bb98143bb20dc38a143cd537d161cbf51c16fd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxNTg5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r426015899", "bodyText": "I'm considering a new section for Interacted with nested documents that contains the ways users can interact with these documents, this new tip, and the Important note that exists. For example:", "author": "lockewritesdocs", "createdAt": "2020-05-15T19:52:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2MDkzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2NDYzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r425464635", "bodyText": "A suggestion for how to restructure this tip:\n\nWe could first give some context, saying that when ingesting key-value pairs with a large arbitrary set of keys, one technique is to model each pair as its own nested document with key and value fields.\nInstead we'd suggest the using flattened datatype, \"which maps an entire object as a single field and allows for simple searches over its contents.\"\n\nOne other comment -- instead of describing the downside as \"only be accessed within the scope of the nested query\", I think it'd be clearer to mention that nested documents and queries are generally expensive, and that the flattened datatype is a better fit for this use case.", "author": "jtibshirani", "createdAt": "2020-05-14T22:24:30Z", "path": "docs/reference/mapping/types/nested.asciidoc", "diffHunk": "@@ -71,10 +70,15 @@ GET my_index/_search\n ==== Using `nested` fields for arrays of objects\n \n If you need to index arrays of objects and to maintain the independence of\n-each object in the array, you should use the `nested` datatype instead of the\n-<<object,`object`>> datatype.  Internally, nested objects index each object in\n+each object in the array, use the `nested` datatype instead of the\n+<<object,`object`>> datatype.\n+\n+TIP: If you consider creating `nested` objects with two `key` and `value` keyword fields, consider using the <<flattened>> datatype instead.\n+Because nested documents are indexed as separate documents, they can only be accessed within the scope of the nested query. While a flattened object provides only a single field to search on, the object's contents can still be searched using simple queries and aggregations.", "originalCommit": "9bb98143bb20dc38a143cd537d161cbf51c16fd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyNjg4OA==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r426026888", "bodyText": "Thanks @jtibshirani -- I made several changes to this Tip that incorporates your feedback. See my latest commit for specific changes.", "author": "lockewritesdocs", "createdAt": "2020-05-15T20:17:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ2NDYzNQ=="}], "type": "inlineReview"}, {"oid": "94f92b2a2b8b0ea9249e3a072a70a3414fd23217", "url": "https://github.com/elastic/elasticsearch/commit/94f92b2a2b8b0ea9249e3a072a70a3414fd23217", "message": "Incorporating review feedback from Julie T. Also single-sourcing nexted options in the Mapping page and referencing them in the Nested page.", "committedDate": "2020-05-15T20:14:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA0MDM4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r426040381", "bodyText": "I think we either need to keep 'under the hood', or say 'a separate Lucene document'. Otherwise it this could be interpreted as each nested object corresponding to a new Elasticsearch document.", "author": "jtibshirani", "createdAt": "2020-05-15T20:50:31Z", "path": "docs/reference/mapping/types/nested.asciidoc", "diffHunk": "@@ -207,29 +214,20 @@ document as standard (flat) fields. Defaults to `false`.\n [float]\n === Limits on `nested` mappings and objects\n \n-As described earlier, each nested object is indexed as a separate document under the hood.\n-Continuing with the example above, if we indexed a single document containing 100 `user` objects,\n-then 101 Lucene documents would be created -- one for the parent document, and one for each\n+As described earlier, each nested object is indexed as a separate document.", "originalCommit": "94f92b2a2b8b0ea9249e3a072a70a3414fd23217", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA0NjE2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r426046161", "bodyText": "I think that \"indexed as a separate Lucene document\" is more descriptive than \"indexed as a separate document under the hood\".", "author": "lockewritesdocs", "createdAt": "2020-05-15T21:03:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA0MDM4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA0MjQyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r426042421", "bodyText": "For me this tip doesn't really fall under the topic 'interacting with nested documents'. It's actually a suggestion to avoid using nested documents, so I think it'd be good to keep it in the previous section where we introduce what nested objects are.\nAlternatively, we could move it to the top of this page right after the initial description so it catches a user's attention. I don't think it would be too distracting, since it's a short tip.", "author": "jtibshirani", "createdAt": "2020-05-15T20:55:27Z", "path": "docs/reference/mapping/types/nested.asciidoc", "diffHunk": "@@ -161,6 +165,9 @@ Nested documents can be:\n * sorted with <<nested-sorting,nested sorting>>.\n * retrieved and highlighted with <<nested-inner-hits,nested inner hits>>.\n \n+TIP: When ingesting key-value pairs with a large, arbitrary set of keys, you might consider modeling each key-value pair as its own nested document with `key` and `value` fields. Instead, consider using the <<flattened>> datatype, which maps an entire object as a single field and allows for simple searches over its contents.", "originalCommit": "94f92b2a2b8b0ea9249e3a072a70a3414fd23217", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA0NzUzOA==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r426047538", "bodyText": "Good point. I think that moving this tip after the initial description makes sense. That way, users can read it and potentially say, \"Ah, looks like I should be using flattened!\" instead of having to read deep into the page to discover that information.", "author": "lockewritesdocs", "createdAt": "2020-05-15T21:07:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA0MjQyMQ=="}], "type": "inlineReview"}, {"oid": "f5a569358456582a189c6cf2b3d6692e86e35e12", "url": "https://github.com/elastic/elasticsearch/commit/f5a569358456582a189c6cf2b3d6692e86e35e12", "message": "Moving tip after the introduction and clarifying limits.", "committedDate": "2020-05-15T21:08:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4MTUzOA==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r427281538", "bodyText": "If you don't specify the anchor text here, \"flattened\" is capitalized: http://elasticsearch_56794.docs-preview.app.elstc.co/guide/en/elasticsearch/reference/master/mapping.html#mapping-limit-settings\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If your field mappings contain a large, arbitrary set of keys, consider using the <<flattened>> datatype.\n          \n          \n            \n            If your field mappings contain a large, arbitrary set of keys, consider using the <<flattened,flattened>> datatype.", "author": "jrodewig", "createdAt": "2020-05-19T12:59:08Z", "path": "docs/reference/mapping.asciidoc", "diffHunk": "@@ -84,26 +83,37 @@ If you increase this setting, we recommend you also increase the\n <<search-settings,`indices.query.bool.max_clause_count`>> setting, which\n limits the maximum number of <<query-dsl-bool-query,boolean clauses>> in a query.\n ====\n++\n+[TIP]\n+====\n+If your field mappings contain a large, arbitrary set of keys, consider using the <<flattened>> datatype.", "originalCommit": "f5a569358456582a189c6cf2b3d6692e86e35e12", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4Mzg3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/56794#discussion_r427283879", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            TIP: When ingesting key-value pairs with a large, arbitrary set of keys, you might consider modeling each key-value pair as its own nested document with `key` and `value` fields. Instead, consider using the <<flattened>> datatype, which maps an entire object as a single field and allows for simple searches over its contents.\n          \n          \n            \n            TIP: When ingesting key-value pairs with a large, arbitrary set of keys, you might consider modeling each key-value pair as its own nested document with `key` and `value` fields. Instead, consider using the <<flattened,flattened>> datatype, which maps an entire object as a single field and allows for simple searches over its contents.", "author": "jrodewig", "createdAt": "2020-05-19T13:02:49Z", "path": "docs/reference/mapping/types/nested.asciidoc", "diffHunk": "@@ -5,14 +5,17 @@\n ++++\n \n The `nested` type is a specialised version of the <<object,`object`>> datatype\n-that allows arrays of objects to be indexed in a way that they can be queried \n+that allows arrays of objects to be indexed in a way that they can be queried\n independently of each other.\n \n+TIP: When ingesting key-value pairs with a large, arbitrary set of keys, you might consider modeling each key-value pair as its own nested document with `key` and `value` fields. Instead, consider using the <<flattened>> datatype, which maps an entire object as a single field and allows for simple searches over its contents.", "originalCommit": "f5a569358456582a189c6cf2b3d6692e86e35e12", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d666bc7e9ec97916647c25c2106237efaffb3dff", "url": "https://github.com/elastic/elasticsearch/commit/d666bc7e9ec97916647c25c2106237efaffb3dff", "message": "Update docs/reference/mapping.asciidoc\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>", "committedDate": "2020-05-19T16:58:00Z", "type": "commit"}, {"oid": "e856be411b8a5885acac48140785744ccd1f25ff", "url": "https://github.com/elastic/elasticsearch/commit/e856be411b8a5885acac48140785744ccd1f25ff", "message": "Update docs/reference/mapping/types/nested.asciidoc\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>", "committedDate": "2020-05-19T17:02:15Z", "type": "commit"}]}