{"pr_number": 55621, "pr_title": "Refactor Spatial Field Mappers", "pr_createdAt": "2020-04-22T19:34:31Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55621", "timeline": [{"oid": "df29f76957dfcf3894f7f42ff4088ed59f251376", "url": "https://github.com/elastic/elasticsearch/commit/df29f76957dfcf3894f7f42ff4088ed59f251376", "message": "Refactor Spatial Field Mappers\n\nThis commit refactors all spatial Field Mappers to a common AbstractGeometryFieldMapper that implements shared parameter functionality (e.g., ignore_malformed, ignore_z_value) and provides a common framework for overriding type parsing, and building in xpack. Common shape functionality is implemented in a new AbstractShapeGeometryFieldMapper that is reused and overridden in GeoShapeFieldMapper, GeoShapeFieldMapperWithDocValues, LegacyGeoShapeFieldMapper, and ShapeFieldMapper. This abstraction provides a reusable foundation for adding new xpack features; such as coordinate reference system support.", "committedDate": "2020-04-22T19:33:01Z", "type": "commit"}, {"oid": "2dfe4868fa7a05c4c33aaa50aa22b78462789eef", "url": "https://github.com/elastic/elasticsearch/commit/2dfe4868fa7a05c4c33aaa50aa22b78462789eef", "message": "fix failing test", "committedDate": "2020-04-22T20:01:04Z", "type": "commit"}, {"oid": "9b90260796d361898135aff4f02960c958cd632c", "url": "https://github.com/elastic/elasticsearch/commit/9b90260796d361898135aff4f02960c958cd632c", "message": "fix doXContentBody failure", "committedDate": "2020-04-22T21:41:10Z", "type": "commit"}, {"oid": "65c92571d5bd0e5d075d1c9d60017fcf7bd9a905", "url": "https://github.com/elastic/elasticsearch/commit/65c92571d5bd0e5d075d1c9d60017fcf7bd9a905", "message": "Merge branch 'master' into refactor/SpatialFieldMappers", "committedDate": "2020-04-22T22:08:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5OTE0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/55621#discussion_r413599149", "bodyText": "Ca we use generics here? I think using them will avoid the casting we are doing in the subclasses and it would look cleaner? Something like:\npublic abstract static class TypeParser<T extends Builder> implements Mapper.TypeParser {", "author": "iverase", "createdAt": "2020-04-23T08:01:59Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/AbstractGeometryFieldMapper.java", "diffHunk": "@@ -177,88 +122,50 @@ protected void setupFieldType(BuilderContext context) {\n             if (name().isEmpty()) {\n                 throw new IllegalArgumentException(\"name cannot be empty string\");\n             }\n-\n-            AbstractGeometryFieldType ft = (AbstractGeometryFieldType)fieldType();\n-            ft.setOrientation(orientation().value());\n         }\n     }\n \n-    protected static final String DEPRECATED_PARAMETERS_KEY = \"deprecated_parameters\";\n-\n     public abstract static class TypeParser implements Mapper.TypeParser {\n         protected abstract Builder newBuilder(String name, Map<String, Object> params);\n \n-        protected boolean parseXContentParameters(String name, Map.Entry<String, Object> entry, Map<String, Object> params)\n-                throws MapperParsingException {\n-            if (DeprecatedParameters.parse(name, entry.getKey(), entry.getValue(),\n-                (DeprecatedParameters)params.get(DEPRECATED_PARAMETERS_KEY))) {\n-                return true;\n-            }\n-            return false;\n-        }\n-\n-        @Override\n-        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n-            Map<String, Object> params = new HashMap<>();\n-            boolean parsedDeprecatedParameters = false;\n-            params.put(DEPRECATED_PARAMETERS_KEY, new DeprecatedParameters());\n+        public Builder parse(String name, Map<String, Object> node, Map<String, Object> params, ParserContext parserContext) {", "originalCommit": "65c92571d5bd0e5d075d1c9d60017fcf7bd9a905", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkxNzM5NA==", "url": "https://github.com/elastic/elasticsearch/pull/55621#discussion_r413917394", "bodyText": "\ud83d\udc4d", "author": "nknize", "createdAt": "2020-04-23T15:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU5OTE0OQ=="}], "type": "inlineReview"}, {"oid": "67a75b4f5a59d5bad2b9217d570a399adcfb16dd", "url": "https://github.com/elastic/elasticsearch/commit/67a75b4f5a59d5bad2b9217d570a399adcfb16dd", "message": "Merge branch 'master' into refactor/SpatialFieldMappers", "committedDate": "2020-04-23T15:37:40Z", "type": "commit"}, {"oid": "dab64723574f060bf44c39f7e16b28caf64d06ce", "url": "https://github.com/elastic/elasticsearch/commit/dab64723574f060bf44c39f7e16b28caf64d06ce", "message": "switch TypeParser to use generics", "committedDate": "2020-04-23T15:53:11Z", "type": "commit"}]}