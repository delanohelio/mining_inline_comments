{"pr_number": 61916, "pr_title": "Allow_duplicates option for append processor", "pr_createdAt": "2020-09-03T14:07:36Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61916", "timeline": [{"oid": "5e1530aa5c9bb7a1f482060774e46162bd73cf64", "url": "https://github.com/elastic/elasticsearch/commit/5e1530aa5c9bb7a1f482060774e46162bd73cf64", "message": "allow_duplicates option for append processor", "committedDate": "2020-09-03T14:04:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0MzE3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/61916#discussion_r483543179", "bodyText": "I'd stick with Collections.singletonList just for the sake of backporting", "author": "probakowski", "createdAt": "2020-09-04T10:54:18Z", "path": "modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ForEachProcessorTests.java", "diffHunk": "@@ -203,8 +203,8 @@ public void testModifyFieldsOutsideArray() throws Exception {\n \n         ForEachProcessor processor = new ForEachProcessor(\n                 \"_tag\", null, \"values\", new CompoundProcessor(false,\n-                Collections.singletonList(new UppercaseProcessor(\"_tag_upper\", null, \"_ingest._value\", false, \"_ingest._value\")),\n-                Collections.singletonList(new AppendProcessor(\"_tag\", null, template, (model) -> (Collections.singletonList(\"added\"))))\n+                List.of(new UppercaseProcessor(\"_tag_upper\", null, \"_ingest._value\", false, \"_ingest._value\")),\n+                List.of(new AppendProcessor(\"_tag\", null, template, (model) -> (Collections.singletonList(\"added\")), true))", "originalCommit": "5e1530aa5c9bb7a1f482060774e46162bd73cf64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAzODA4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61916#discussion_r487038087", "bodyText": "The Java8-compatible implementations of List, Set, and Map in the collect package make these backports pretty easy.", "author": "danhermann", "createdAt": "2020-09-11T13:17:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0MzE3OQ=="}], "type": "inlineReview"}]}