{"pr_number": 62537, "pr_title": "EQL: Allow requests with size 0", "pr_createdAt": "2020-09-17T11:46:18Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62537", "timeline": [{"oid": "669d888296ebf5ee40a50fbc0a6627b666ad581e", "url": "https://github.com/elastic/elasticsearch/commit/669d888296ebf5ee40a50fbc0a6627b666ad581e", "message": "EQL: Allow requests with size 0\n\nThe purpose for this change is to allow validation of queries without\nhaving to actually execute them. The optimizer already picks up this\ncase.\n\nFix #62494", "committedDate": "2020-09-17T11:37:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIwNjI4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/62537#discussion_r490206282", "bodyText": "Shouldn't this be size and not fetchSize?", "author": "astefan", "createdAt": "2020-09-17T12:32:58Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/eql/EqlSearchRequest.java", "diffHunk": "@@ -158,8 +158,8 @@ public int size() {\n \n     public EqlSearchRequest size(int size) {\n         this.size = size;\n-        if (fetchSize <= 0) {\n-            throw new IllegalArgumentException(\"size must be greater than 0\");\n+        if (fetchSize < 0) {", "originalCommit": "669d888296ebf5ee40a50fbc0a6627b666ad581e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM0OTcyNw==", "url": "https://github.com/elastic/elasticsearch/pull/62537#discussion_r490349727", "bodyText": "\ud83e\udd26", "author": "costin", "createdAt": "2020-09-17T15:37:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIwNjI4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIwNzYyNw==", "url": "https://github.com/elastic/elasticsearch/pull/62537#discussion_r490207627", "bodyText": "Shouldn't this be randomIntBetween(0, Integer.MAX_VALUE)? or maybe to cover better the 0 scenario - a randomBoolean() to choose between size 0 and size between 1 and MAX.", "author": "astefan", "createdAt": "2020-09-17T12:35:14Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/eql/EqlSearchRequestTests.java", "diffHunk": "@@ -35,30 +35,33 @@\n \n     @Override\n     protected EqlSearchRequest createClientTestInstance() {\n-        EqlSearchRequest EqlSearchRequest = new EqlSearchRequest(\"testindex\", randomAlphaOfLength(40));\n+        EqlSearchRequest eqlSearchRequest = new EqlSearchRequest(\"testindex\", randomAlphaOfLength(40));\n         if (randomBoolean()) {\n-            EqlSearchRequest.fetchSize(randomIntBetween(1, Integer.MAX_VALUE));\n+            eqlSearchRequest.fetchSize(randomIntBetween(1, Integer.MAX_VALUE));\n         }\n         if (randomBoolean()) {\n-            EqlSearchRequest.eventCategoryField(randomAlphaOfLength(10));\n+            eqlSearchRequest.size(randomInt(Integer.MAX_VALUE));", "originalCommit": "669d888296ebf5ee40a50fbc0a6627b666ad581e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM1MDEzMw==", "url": "https://github.com/elastic/elasticsearch/pull/62537#discussion_r490350133", "bodyText": "randomInt is randomIntBetween(0, Integer.MAX_VALUE)", "author": "costin", "createdAt": "2020-09-17T15:37:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIwNzYyNw=="}], "type": "inlineReview"}, {"oid": "20fe9f0139e06034bd52526d6bf5600d3fd0dc62", "url": "https://github.com/elastic/elasticsearch/commit/20fe9f0139e06034bd52526d6bf5600d3fd0dc62", "message": "Address feedback\nFix test due to usage of \"\nAdd size/fetchSize to SearchRequest", "committedDate": "2020-09-17T17:17:32Z", "type": "commit"}]}