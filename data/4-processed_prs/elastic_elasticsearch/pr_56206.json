{"pr_number": 56206, "pr_title": "Move bwcVersions extension property to BuildParams", "pr_createdAt": "2020-05-05T14:21:20Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56206", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1NzM1NA==", "url": "https://github.com/elastic/elasticsearch/pull/56206#discussion_r420257354", "bodyText": "I think we should rethrow as an UncheckedIOException. If we aren't able to determine BWC versions this is likely to cause all sorts of build issues so we should treat this as a fatal error. I believe this might already be the case as BuildParams will validate we aren't setting the value to null, but then we end up losing the original exception cause which is not ideal.", "author": "mark-vieira", "createdAt": "2020-05-05T16:50:08Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/info/GlobalBuildInfoPlugin.java", "diffHunk": "@@ -92,12 +97,26 @@ public void apply(Project project) {\n             params.setDefaultParallel(findDefaultParallel(project));\n             params.setInFipsJvm(Util.getBooleanProperty(\"tests.fips.enabled\", false));\n             params.setIsSnapshotBuild(Util.getBooleanProperty(\"build.snapshot\", true));\n+            params.setBwcVersions(resolveBwcVersions(rootDir));\n         });\n \n         // Print global build info header just before task execution\n         project.getGradle().getTaskGraph().whenReady(graph -> logGlobalBuildInfo());\n     }\n \n+    /* Introspect all versions of ES that may be tested against for backwards\n+     * compatibility. It is *super* important that this logic is the same as the\n+     * logic in VersionUtils.java. */\n+    private static BwcVersions resolveBwcVersions(File root) {\n+        File versionsFile = new File(root, DEFAULT_VERSION_JAVA_FILE_PATH);\n+        try {\n+            List<String> versionLines = IOUtils.readLines(new FileInputStream(versionsFile), \"UTF-8\");\n+            return new BwcVersions(versionLines);\n+        } catch (IOException e) {\n+            return null;", "originalCommit": "db91d30680b88abf878c063f34b1133f599e5f0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM3MDc3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/56206#discussion_r420370779", "bodyText": "I thought about it but didn\u2019t want to fail fatal here to make testing easier. I needed to touch the testkit Test builds and wanted to keep the ability to direct configure the bwcVersion in via BuildParamd there instead of introducing sth like a test only override property in the plugin itself to pass a configurable file path to resolve versions from", "author": "breskeby", "createdAt": "2020-05-05T20:00:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1NzM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM3MDc5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/56206#discussion_r420370799", "bodyText": "I thought about it but didn\u2019t want to fail fatal here to make testing easier. I needed to touch the testkit Test builds and wanted to keep the ability to direct configure the bwcVersion in via BuildParamd there instead of introducing sth like a test only override property in the plugin itself to pass a configurable file path to resolve versions from", "author": "breskeby", "createdAt": "2020-05-05T20:00:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1NzM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM3NzY3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56206#discussion_r420377672", "bodyText": "Gotcha, we should at least log the original exception then, so if it does barf we get a better message than just bwcVersions cannot be null or whatever.", "author": "mark-vieira", "createdAt": "2020-05-05T20:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1NzM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ0NDg0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/56206#discussion_r420444845", "bodyText": "Why does not failing with an exception make this easier to test? Tests can use expectThrows to catch an exception?", "author": "rjernst", "createdAt": "2020-05-05T22:30:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1NzM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ0NTkzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/56206#discussion_r420445939", "bodyText": "That doesn't work with testKit tests since it's not the test that's throwing the exception, it's the build and those don't get propagated to the test. You just get a \"your build failed\" type exception returned by teskit.", "author": "mark-vieira", "createdAt": "2020-05-05T22:32:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1NzM1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2MTg4MA==", "url": "https://github.com/elastic/elasticsearch/pull/56206#discussion_r420961880", "bodyText": "nit: I would name this isInternal since that is the property we are setting", "author": "rjernst", "createdAt": "2020-05-06T17:23:28Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/info/GlobalBuildInfoPlugin.java", "diffHunk": "@@ -69,10 +73,13 @@ public void apply(Project project) {\n         File compilerJavaHome = findCompilerJavaHome();\n         File runtimeJavaHome = findRuntimeJavaHome(compilerJavaHome);\n \n-        GitInfo gitInfo = gitInfo(project.getRootProject().getRootDir());\n+        File rootDir = project.getRootDir();\n+        GitInfo gitInfo = gitInfo(rootDir);\n \n-        // Initialize global build parameters\n         BuildParams.init(params -> {\n+            // Initialize global build parameters\n+            boolean internalUse = GlobalBuildInfoPlugin.class.getResource(\"/buildSrc.marker\") != null;", "originalCommit": "5825ac6a5892fb10e7b76027147f2bf512efb7aa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ece4c76457681207aa7bb183374c1f2d597a9c15", "url": "https://github.com/elastic/elasticsearch/commit/ece4c76457681207aa7bb183374c1f2d597a9c15", "message": "Move bwcVersions extension property to BuildParams\n\n- resolved in GlobalBuildInfoPlugin\n- TODO: probably more bwc related work can be moved from build scripts into\ncertain plugins.", "committedDate": "2020-05-07T07:15:44Z", "type": "commit"}, {"oid": "f50d1b07071f4186ee4ec15e0304902b24c1b55d", "url": "https://github.com/elastic/elasticsearch/commit/f50d1b07071f4186ee4ec15e0304902b24c1b55d", "message": "Resolve bwcVersions only for internal usage of GlobalBuildInfoPlugin\n\n- propagate exception if version file cannot be resolved\n- add null check when setting bwcVersions", "committedDate": "2020-05-07T07:15:44Z", "type": "commit"}, {"oid": "1a37af430e6c0505706e070a2d5e55ae4e1989cf", "url": "https://github.com/elastic/elasticsearch/commit/1a37af430e6c0505706e070a2d5e55ae4e1989cf", "message": "Apply small review feedback on variable name", "committedDate": "2020-05-07T07:15:44Z", "type": "commit"}, {"oid": "1a37af430e6c0505706e070a2d5e55ae4e1989cf", "url": "https://github.com/elastic/elasticsearch/commit/1a37af430e6c0505706e070a2d5e55ae4e1989cf", "message": "Apply small review feedback on variable name", "committedDate": "2020-05-07T07:15:44Z", "type": "forcePushed"}, {"oid": "a80e7e952fe9a3e28e9744b8a027d878da700a14", "url": "https://github.com/elastic/elasticsearch/commit/a80e7e952fe9a3e28e9744b8a027d878da700a14", "message": "Fix BwcVersions java8 compatibility after merge", "committedDate": "2020-05-07T08:29:25Z", "type": "commit"}]}