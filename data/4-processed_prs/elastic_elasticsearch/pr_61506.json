{"pr_number": 61506, "pr_title": "[DOCS] Per-partition categorization", "pr_createdAt": "2020-08-24T21:57:10Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61506", "timeline": [{"oid": "91fd9293bce287c054a0ed3d1ecaff93e24b8530", "url": "https://github.com/elastic/elasticsearch/commit/91fd9293bce287c054a0ed3d1ecaff93e24b8530", "message": "[DOCS] Per-partition categorization", "committedDate": "2020-08-24T21:52:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEzOTUyOA==", "url": "https://github.com/elastic/elasticsearch/pull/61506#discussion_r477139528", "bodyText": "web access logs do not categorize well so should not use as example - instead try such as logs for different applications", "author": "sophiec20", "createdAt": "2020-08-26T08:49:05Z", "path": "docs/reference/ml/anomaly-detection/ml-configuring-categories.asciidoc", "diffHunk": "@@ -98,6 +98,28 @@ to disregard multiple sections of the categorization field value. In this\n example, you might create a filter like `[ \"\\\\[statement:.*\\\\]\"]` to remove the\n SQL statement from the categorization algorithm.\n \n+[discrete]\n+[[ml-per-partition-categorization]]\n+== Per-partition categorization\n+\n+If you enable per-partition categorization, categories are determined\n+independently for each partition. For example, if your data includes messages\n+from multiple types of logs (such as access logs and error logs), you can use a\n+field like the ECS {ecs-ref}/ecs-event.html[`event.dataset` field] as the \n+`partition_field_name` and categorize the messages for each log separately.", "originalCommit": "91fd9293bce287c054a0ed3d1ecaff93e24b8530", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0MTY1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/61506#discussion_r477141653", "bodyText": "Could this be a single sentence?\nIf your job has multiple detectors, every detector that uses the `mlcategory`\nkeyword must also use the same `partition_field_name`.", "author": "sophiec20", "createdAt": "2020-08-26T08:52:31Z", "path": "docs/reference/ml/anomaly-detection/ml-configuring-categories.asciidoc", "diffHunk": "@@ -98,6 +98,28 @@ to disregard multiple sections of the categorization field value. In this\n example, you might create a filter like `[ \"\\\\[statement:.*\\\\]\"]` to remove the\n SQL statement from the categorization algorithm.\n \n+[discrete]\n+[[ml-per-partition-categorization]]\n+== Per-partition categorization\n+\n+If you enable per-partition categorization, categories are determined\n+independently for each partition. For example, if your data includes messages\n+from multiple types of logs (such as access logs and error logs), you can use a\n+field like the ECS {ecs-ref}/ecs-event.html[`event.dataset` field] as the \n+`partition_field_name` and categorize the messages for each log separately.\n+\n+If your job has multiple detectors, every detector that uses the `mlcategory`\n+keyword must also define a `partition_field_name`. You must use the same\n+`partition_field_name` value in all of these detectors. Otherwise, when you\n+create or update a job and enable per-partition categorization, it fails.", "originalCommit": "91fd9293bce287c054a0ed3d1ecaff93e24b8530", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ1NzY5OA==", "url": "https://github.com/elastic/elasticsearch/pull/61506#discussion_r477457698", "bodyText": "@sophiec20 I think I'll leave it as two sentences, since IMO the single sentence leaves it unclear whether the partition_field_name is mandatory or whether it's only mandatory that it has the same value.", "author": "lcawl", "createdAt": "2020-08-26T17:10:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0MTY1Mw=="}], "type": "inlineReview"}, {"oid": "11d17bc19848965c7d6446bb9c273a29babb3a19", "url": "https://github.com/elastic/elasticsearch/commit/11d17bc19848965c7d6446bb9c273a29babb3a19", "message": "[DOCS] Addresses log type feedback", "committedDate": "2020-08-26T17:02:44Z", "type": "commit"}]}