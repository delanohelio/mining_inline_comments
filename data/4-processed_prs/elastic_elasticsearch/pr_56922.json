{"pr_number": 56922, "pr_title": "Update date_histogram docs", "pr_createdAt": "2020-05-18T20:39:40Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56922", "timeline": [{"oid": "07a1221047795eba24dca3ec1d938c140de9ee38", "url": "https://github.com/elastic/elasticsearch/commit/07a1221047795eba24dca3ec1d938c140de9ee38", "message": "Update date_histogram docs\n\n* Make it more clear that you can use `month` or `1M`.\n* Explain rounding rules\n* Consistently use \"time zone\" instead of \"timezone\". It looks like both\n  are right but I see \"time zone\" much more. And the parameter in\n  elasticsearch is `time_zone` so we may as well line up.\n\nCloses #56760", "committedDate": "2020-05-18T20:36:40Z", "type": "commit"}, {"oid": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "url": "https://github.com/elastic/elasticsearch/commit/1ac9c45986b0e44c30819049697ac5f2fb2301a2", "message": "Shorter", "committedDate": "2020-05-18T20:54:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwMjk3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432702979", "bodyText": "Minor wording tweaks. Feel free to disregard most of these. I'd recommend changing This look like either way though.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Just like the histogram, values are rounded *down* into the closest bucket. So\n          \n          \n            \n            `2020-01-03T07:00:01Z` is rounded to `2020-01-03T00:00:00Z` if the interval is\n          \n          \n            \n            a calendar day. This look like\n          \n          \n            \n            Like the histogram, values are rounded *down* into the closest bucket. For\n          \n          \n            \n            example, if the interval is a calendar day, `2020-01-03T07:00:01Z` is rounded to\n          \n          \n            \n            `2020-01-03T00:00:00Z`. Values are rounded as follows:", "author": "jrodewig", "createdAt": "2020-05-29T19:50:03Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -10,6 +10,15 @@ that here the interval can be specified using date/time expressions. Time-based\n data requires special support because time-based intervals are not always a\n fixed length.\n \n+Just like the histogram, values are rounded *down* into the closest bucket. So\n+`2020-01-03T07:00:01Z` is rounded to `2020-01-03T00:00:00Z` if the interval is\n+a calendar day. This look like", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwMzE4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432703182", "bodyText": "Nit: I like using small snippet delimiters when possible.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [source,java]\n          \n          \n            \n            --------------------------------------------------\n          \n          \n            \n            bucket_key = Math.floor(value / interval) * interval)\n          \n          \n            \n            --------------------------------------------------\n          \n          \n            \n            [source,java]\n          \n          \n            \n            ----\n          \n          \n            \n            bucket_key = Math.floor(value / interval) * interval)\n          \n          \n            \n            ----", "author": "jrodewig", "createdAt": "2020-05-29T19:50:31Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -10,6 +10,15 @@ that here the interval can be specified using date/time expressions. Time-based\n data requires special support because time-based intervals are not always a\n fixed length.\n \n+Just like the histogram, values are rounded *down* into the closest bucket. So\n+`2020-01-03T07:00:01Z` is rounded to `2020-01-03T00:00:00Z` if the interval is\n+a calendar day. This look like\n+\n+[source,java]\n+--------------------------------------------------\n+bucket_key = Math.floor(value / interval) * interval)\n+--------------------------------------------------", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMTMxNw==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432721317", "bodyText": "Those are better, yeah.", "author": "nik9000", "createdAt": "2020-05-29T20:32:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwMzE4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwMzk3MA==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432703970", "bodyText": "Rewording. Feel free to disregard if wanted. It may be good to note the equivalency here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Calendar intervals can be specifies as the name of the unit like `month` or in\n          \n          \n            \n            singular quantities of the unit like `1M`. Multiples, such as `2d`, are not\n          \n          \n            \n            supported.\n          \n          \n            \n            You can specify calendar intervals using the unit name, such as `month`, or as a\n          \n          \n            \n            single unit quantity, such as `1M`. For example, `day` and `1d` are equivalent.\n          \n          \n            \n            Multiple quantities, such as `2d`, are not supported.", "author": "jrodewig", "createdAt": "2020-05-29T19:52:17Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -47,59 +56,60 @@ will be removed in the future.\n ===== Calendar intervals\n \n Calendar-aware intervals are configured with the `calendar_interval` parameter.\n-Calendar intervals can only be specified in \"singular\" quantities of the unit\n-(`1d`, `1M`, etc). Multiples, such as `2d`, are not supported and will throw an exception.\n+Calendar intervals can be specifies as the name of the unit like `month` or in\n+singular quantities of the unit like `1M`. Multiples, such as `2d`, are not\n+supported.", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNDA4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432704081", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `minute` aka `1m` ::\n          \n          \n            \n            `minute`, `1m` ::", "author": "jrodewig", "createdAt": "2020-05-29T19:52:33Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -47,59 +56,60 @@ will be removed in the future.\n ===== Calendar intervals\n \n Calendar-aware intervals are configured with the `calendar_interval` parameter.\n-Calendar intervals can only be specified in \"singular\" quantities of the unit\n-(`1d`, `1M`, etc). Multiples, such as `2d`, are not supported and will throw an exception.\n+Calendar intervals can be specifies as the name of the unit like `month` or in\n+singular quantities of the unit like `1M`. Multiples, such as `2d`, are not\n+supported.\n \n-The accepted units for calendar intervals are:\n+The accepted calendar intervals are:\n \n-minute (`1m`) ::\n+`minute` aka `1m` ::", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNDE1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432704152", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `hour` aka `1h` ::\n          \n          \n            \n            `hour`, `1h` ::", "author": "jrodewig", "createdAt": "2020-05-29T19:52:43Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -47,59 +56,60 @@ will be removed in the future.\n ===== Calendar intervals\n \n Calendar-aware intervals are configured with the `calendar_interval` parameter.\n-Calendar intervals can only be specified in \"singular\" quantities of the unit\n-(`1d`, `1M`, etc). Multiples, such as `2d`, are not supported and will throw an exception.\n+Calendar intervals can be specifies as the name of the unit like `month` or in\n+singular quantities of the unit like `1M`. Multiples, such as `2d`, are not\n+supported.\n \n-The accepted units for calendar intervals are:\n+The accepted calendar intervals are:\n \n-minute (`1m`) ::\n+`minute` aka `1m` ::\n \n All minutes begin at 00 seconds.\n One minute is the interval between 00 seconds of the first minute and 00\n-seconds of the following minute in the specified timezone, compensating for any\n+seconds of the following minute in the specified time zone, compensating for any\n intervening leap seconds, so that the number of minutes and seconds past the\n hour is the same at the start and end.\n \n-hour (`1h`) ::\n+`hour` aka `1h` ::", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNjA0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432706042", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `week` aka `1w` ::\n          \n          \n            \n            `week`, `1w` ::", "author": "jrodewig", "createdAt": "2020-05-29T19:56:53Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -47,59 +56,60 @@ will be removed in the future.\n ===== Calendar intervals\n \n Calendar-aware intervals are configured with the `calendar_interval` parameter.\n-Calendar intervals can only be specified in \"singular\" quantities of the unit\n-(`1d`, `1M`, etc). Multiples, such as `2d`, are not supported and will throw an exception.\n+Calendar intervals can be specifies as the name of the unit like `month` or in\n+singular quantities of the unit like `1M`. Multiples, such as `2d`, are not\n+supported.\n \n-The accepted units for calendar intervals are:\n+The accepted calendar intervals are:\n \n-minute (`1m`) ::\n+`minute` aka `1m` ::\n \n All minutes begin at 00 seconds.\n One minute is the interval between 00 seconds of the first minute and 00\n-seconds of the following minute in the specified timezone, compensating for any\n+seconds of the following minute in the specified time zone, compensating for any\n intervening leap seconds, so that the number of minutes and seconds past the\n hour is the same at the start and end.\n \n-hour (`1h`) ::\n+`hour` aka `1h` ::\n \n All hours begin at 00 minutes and 00 seconds.\n One hour (1h) is the interval between 00:00 minutes of the first hour and 00:00\n-minutes of the following hour in the specified timezone, compensating for any\n+minutes of the following hour in the specified time zone, compensating for any\n intervening leap seconds, so that the number of minutes and seconds past the hour\n is the same at the start and end.\n \n-day (`1d`) ::\n+`day` aka `1d` ::\n \n All days begin at the earliest possible time, which is usually 00:00:00\n (midnight).\n One day (1d) is the interval between the start of the day and the start of\n-of the following day in the specified timezone, compensating for any intervening\n+of the following day in the specified time zone, compensating for any intervening\n time changes.\n \n-week (`1w`) ::\n+`week` aka `1w` ::", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNjExMA==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432706110", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `month` aka `1M` ::\n          \n          \n            \n            `month`, `1M` ::", "author": "jrodewig", "createdAt": "2020-05-29T19:57:00Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -47,59 +56,60 @@ will be removed in the future.\n ===== Calendar intervals\n \n Calendar-aware intervals are configured with the `calendar_interval` parameter.\n-Calendar intervals can only be specified in \"singular\" quantities of the unit\n-(`1d`, `1M`, etc). Multiples, such as `2d`, are not supported and will throw an exception.\n+Calendar intervals can be specifies as the name of the unit like `month` or in\n+singular quantities of the unit like `1M`. Multiples, such as `2d`, are not\n+supported.\n \n-The accepted units for calendar intervals are:\n+The accepted calendar intervals are:\n \n-minute (`1m`) ::\n+`minute` aka `1m` ::\n \n All minutes begin at 00 seconds.\n One minute is the interval between 00 seconds of the first minute and 00\n-seconds of the following minute in the specified timezone, compensating for any\n+seconds of the following minute in the specified time zone, compensating for any\n intervening leap seconds, so that the number of minutes and seconds past the\n hour is the same at the start and end.\n \n-hour (`1h`) ::\n+`hour` aka `1h` ::\n \n All hours begin at 00 minutes and 00 seconds.\n One hour (1h) is the interval between 00:00 minutes of the first hour and 00:00\n-minutes of the following hour in the specified timezone, compensating for any\n+minutes of the following hour in the specified time zone, compensating for any\n intervening leap seconds, so that the number of minutes and seconds past the hour\n is the same at the start and end.\n \n-day (`1d`) ::\n+`day` aka `1d` ::\n \n All days begin at the earliest possible time, which is usually 00:00:00\n (midnight).\n One day (1d) is the interval between the start of the day and the start of\n-of the following day in the specified timezone, compensating for any intervening\n+of the following day in the specified time zone, compensating for any intervening\n time changes.\n \n-week (`1w`) ::\n+`week` aka `1w` ::\n \n One week is the interval between the start day_of_week:hour:minute:second\n and the same day of the week and time of the following week in the specified\n-timezone.\n+time zone.\n \n-month (`1M`) ::\n+`month` aka `1M` ::", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNjE2NA==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432706164", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `quarter` aka `1q` ::\n          \n          \n            \n            `quarter`, `1q` ::", "author": "jrodewig", "createdAt": "2020-05-29T19:57:09Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -47,59 +56,60 @@ will be removed in the future.\n ===== Calendar intervals\n \n Calendar-aware intervals are configured with the `calendar_interval` parameter.\n-Calendar intervals can only be specified in \"singular\" quantities of the unit\n-(`1d`, `1M`, etc). Multiples, such as `2d`, are not supported and will throw an exception.\n+Calendar intervals can be specifies as the name of the unit like `month` or in\n+singular quantities of the unit like `1M`. Multiples, such as `2d`, are not\n+supported.\n \n-The accepted units for calendar intervals are:\n+The accepted calendar intervals are:\n \n-minute (`1m`) ::\n+`minute` aka `1m` ::\n \n All minutes begin at 00 seconds.\n One minute is the interval between 00 seconds of the first minute and 00\n-seconds of the following minute in the specified timezone, compensating for any\n+seconds of the following minute in the specified time zone, compensating for any\n intervening leap seconds, so that the number of minutes and seconds past the\n hour is the same at the start and end.\n \n-hour (`1h`) ::\n+`hour` aka `1h` ::\n \n All hours begin at 00 minutes and 00 seconds.\n One hour (1h) is the interval between 00:00 minutes of the first hour and 00:00\n-minutes of the following hour in the specified timezone, compensating for any\n+minutes of the following hour in the specified time zone, compensating for any\n intervening leap seconds, so that the number of minutes and seconds past the hour\n is the same at the start and end.\n \n-day (`1d`) ::\n+`day` aka `1d` ::\n \n All days begin at the earliest possible time, which is usually 00:00:00\n (midnight).\n One day (1d) is the interval between the start of the day and the start of\n-of the following day in the specified timezone, compensating for any intervening\n+of the following day in the specified time zone, compensating for any intervening\n time changes.\n \n-week (`1w`) ::\n+`week` aka `1w` ::\n \n One week is the interval between the start day_of_week:hour:minute:second\n and the same day of the week and time of the following week in the specified\n-timezone.\n+time zone.\n \n-month (`1M`) ::\n+`month` aka `1M` ::\n \n One month is the interval between the start day of the month and time of\n day and the same day of the month and time of the following month in the specified\n-timezone, so that the day of the month and time of day are the same at the start\n+time zone, so that the day of the month and time of day are the same at the start\n and end.\n \n-quarter (`1q`) ::\n+`quarter` aka `1q` ::", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNjI5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432706297", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `year` aka `1y` ::\n          \n          \n            \n            `year`, `1y` ::", "author": "jrodewig", "createdAt": "2020-05-29T19:57:27Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -47,59 +56,60 @@ will be removed in the future.\n ===== Calendar intervals\n \n Calendar-aware intervals are configured with the `calendar_interval` parameter.\n-Calendar intervals can only be specified in \"singular\" quantities of the unit\n-(`1d`, `1M`, etc). Multiples, such as `2d`, are not supported and will throw an exception.\n+Calendar intervals can be specifies as the name of the unit like `month` or in\n+singular quantities of the unit like `1M`. Multiples, such as `2d`, are not\n+supported.\n \n-The accepted units for calendar intervals are:\n+The accepted calendar intervals are:\n \n-minute (`1m`) ::\n+`minute` aka `1m` ::\n \n All minutes begin at 00 seconds.\n One minute is the interval between 00 seconds of the first minute and 00\n-seconds of the following minute in the specified timezone, compensating for any\n+seconds of the following minute in the specified time zone, compensating for any\n intervening leap seconds, so that the number of minutes and seconds past the\n hour is the same at the start and end.\n \n-hour (`1h`) ::\n+`hour` aka `1h` ::\n \n All hours begin at 00 minutes and 00 seconds.\n One hour (1h) is the interval between 00:00 minutes of the first hour and 00:00\n-minutes of the following hour in the specified timezone, compensating for any\n+minutes of the following hour in the specified time zone, compensating for any\n intervening leap seconds, so that the number of minutes and seconds past the hour\n is the same at the start and end.\n \n-day (`1d`) ::\n+`day` aka `1d` ::\n \n All days begin at the earliest possible time, which is usually 00:00:00\n (midnight).\n One day (1d) is the interval between the start of the day and the start of\n-of the following day in the specified timezone, compensating for any intervening\n+of the following day in the specified time zone, compensating for any intervening\n time changes.\n \n-week (`1w`) ::\n+`week` aka `1w` ::\n \n One week is the interval between the start day_of_week:hour:minute:second\n and the same day of the week and time of the following week in the specified\n-timezone.\n+time zone.\n \n-month (`1M`) ::\n+`month` aka `1M` ::\n \n One month is the interval between the start day of the month and time of\n day and the same day of the month and time of the following month in the specified\n-timezone, so that the day of the month and time of day are the same at the start\n+time zone, so that the day of the month and time of day are the same at the start\n and end.\n \n-quarter (`1q`) ::\n+`quarter` aka `1q` ::\n \n-One quarter (1q) is the interval between the start day of the month and\n+One quarter is the interval between the start day of the month and\n time of day and the same day of the month and time of day three months later,\n so that the day of the month and time of day are the same at the start and end. +\n \n-year (`1y`) ::\n+`year` aka `1y` ::", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNjg3NA==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432706874", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Date-times are stored in Elasticsearch in UTC. By default, all bucketing and\n          \n          \n            \n            {es} stores date-times in Coordinated Universal Time (UTC). By default, all bucketing and", "author": "jrodewig", "createdAt": "2020-05-29T19:58:44Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -338,15 +348,27 @@ Response:\n --------------------------------------------------\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n-===== Timezone\n+===== Time zone\n \n-Date-times are stored in Elasticsearch in UTC.  By default, all bucketing and\n+Date-times are stored in Elasticsearch in UTC. By default, all bucketing and", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwODU2OQ==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432708569", "bodyText": "misspelling\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For example, if the inverval is a calendar day and the time zone is\n          \n          \n            \n            For example, if the interval is a calendar day and the time zone is", "author": "jrodewig", "createdAt": "2020-05-29T20:02:31Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -338,15 +348,27 @@ Response:\n --------------------------------------------------\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n-===== Timezone\n+===== Time zone\n \n-Date-times are stored in Elasticsearch in UTC.  By default, all bucketing and\n+Date-times are stored in Elasticsearch in UTC. By default, all bucketing and\n rounding is also done in UTC. Use the `time_zone` parameter to indicate\n-that bucketing should use a different timezone.\n+that bucketing should use a different time zone.\n+\n+For example, if the inverval is a calendar day and the time zone is", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwODg3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432708873", "bodyText": "This may work better as an ordered list? Fine as-is tho.", "author": "jrodewig", "createdAt": "2020-05-29T20:03:12Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -338,15 +348,27 @@ Response:\n --------------------------------------------------\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n-===== Timezone\n+===== Time zone\n \n-Date-times are stored in Elasticsearch in UTC.  By default, all bucketing and\n+Date-times are stored in Elasticsearch in UTC. By default, all bucketing and\n rounding is also done in UTC. Use the `time_zone` parameter to indicate\n-that bucketing should use a different timezone.\n+that bucketing should use a different time zone.\n+\n+For example, if the inverval is a calendar day and the time zone is\n+`America/New_York` then `2020-01-03T01:00:01Z` is converted to\n+`2020-01-02T18:00:01`, rounded down to `2020-01-02T00:00:00` and then\n+converted back to UTC to produce `2020-01-02T05:00:00:00Z`. Finally, when the\n+bucket is turned into a string key it is printed in `America/New_York` so it'll", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMDAwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432710001", "bodyText": "Rewording. Feel free to disregard.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            display as `\"2020-01-02T00:00:00\"`. More formally, this make the rounding look like:\n          \n          \n            \n            display as `\"2020-01-02T00:00:00\"`. Values are converted as follows:", "author": "jrodewig", "createdAt": "2020-05-29T20:05:43Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -338,15 +348,27 @@ Response:\n --------------------------------------------------\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n-===== Timezone\n+===== Time zone\n \n-Date-times are stored in Elasticsearch in UTC.  By default, all bucketing and\n+Date-times are stored in Elasticsearch in UTC. By default, all bucketing and\n rounding is also done in UTC. Use the `time_zone` parameter to indicate\n-that bucketing should use a different timezone.\n+that bucketing should use a different time zone.\n+\n+For example, if the inverval is a calendar day and the time zone is\n+`America/New_York` then `2020-01-03T01:00:01Z` is converted to\n+`2020-01-02T18:00:01`, rounded down to `2020-01-02T00:00:00` and then\n+converted back to UTC to produce `2020-01-02T05:00:00:00Z`. Finally, when the\n+bucket is turned into a string key it is printed in `America/New_York` so it'll\n+display as `\"2020-01-02T00:00:00\"`. More formally, this make the rounding look like:", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMDEyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432710129", "bodyText": "Nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            --------------------------------------------------\n          \n          \n            \n            bucket_key = localToUtc(Math.floor(utcToLocal(value) / interval) * interval))\n          \n          \n            \n            --------------------------------------------------\n          \n          \n            \n            ----\n          \n          \n            \n            bucket_key = localToUtc(Math.floor(utcToLocal(value) / interval) * interval))\n          \n          \n            \n            ----", "author": "jrodewig", "createdAt": "2020-05-29T20:05:58Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -338,15 +348,27 @@ Response:\n --------------------------------------------------\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n-===== Timezone\n+===== Time zone\n \n-Date-times are stored in Elasticsearch in UTC.  By default, all bucketing and\n+Date-times are stored in Elasticsearch in UTC. By default, all bucketing and\n rounding is also done in UTC. Use the `time_zone` parameter to indicate\n-that bucketing should use a different timezone.\n+that bucketing should use a different time zone.\n+\n+For example, if the inverval is a calendar day and the time zone is\n+`America/New_York` then `2020-01-03T01:00:01Z` is converted to\n+`2020-01-02T18:00:01`, rounded down to `2020-01-02T00:00:00` and then\n+converted back to UTC to produce `2020-01-02T05:00:00:00Z`. Finally, when the\n+bucket is turned into a string key it is printed in `America/New_York` so it'll\n+display as `\"2020-01-02T00:00:00\"`. More formally, this make the rounding look like:\n+\n+[source,java]\n+--------------------------------------------------\n+bucket_key = localToUtc(Math.floor(utcToLocal(value) / interval) * interval))\n+--------------------------------------------------", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMDQyNA==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432710424", "bodyText": "Most->Many feels safer.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            WARNING: Most time zones shift their clocks for daylight savings time. Buckets\n          \n          \n            \n            WARNING: Many time zones shift their clocks for daylight savings time. Buckets", "author": "jrodewig", "createdAt": "2020-05-29T20:06:41Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -446,17 +468,17 @@ second document falls into the bucket for 1 October 2015:\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n <1> The `key_as_string` value represents midnight on each day\n-    in the specified timezone.\n+    in the specified time zone.\n \n-WARNING: When using time zones that follow DST (daylight savings time) changes,\n-buckets close to the moment when those changes happen can have slightly different\n-sizes than you would expect from the used `interval`.\n+WARNING: Most time zones shift their clocks for daylight savings time. Buckets", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMDU0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432710545", "bodyText": "Typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            lose to the moment when those changes happen can have slightly different sizes\n          \n          \n            \n            close to the moment when those changes happen can have slightly different sizes", "author": "jrodewig", "createdAt": "2020-05-29T20:06:58Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -446,17 +468,17 @@ second document falls into the bucket for 1 October 2015:\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n <1> The `key_as_string` value represents midnight on each day\n-    in the specified timezone.\n+    in the specified time zone.\n \n-WARNING: When using time zones that follow DST (daylight savings time) changes,\n-buckets close to the moment when those changes happen can have slightly different\n-sizes than you would expect from the used `interval`.\n+WARNING: Most time zones shift their clocks for daylight savings time. Buckets\n+lose to the moment when those changes happen can have slightly different sizes", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMDgyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432710829", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            a calendar day. This look like\n          \n          \n            \n            a calendar day. This looks like:", "author": "jrodewig", "createdAt": "2020-05-29T20:07:39Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -10,6 +10,15 @@ that here the interval can be specified using date/time expressions. Time-based\n data requires special support because time-based intervals are not always a\n fixed length.\n \n+Just like the histogram, values are rounded *down* into the closest bucket. So\n+`2020-01-03T07:00:01Z` is rounded to `2020-01-03T00:00:00Z` if the interval is\n+a calendar day. This look like", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMTAwMA==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432711000", "bodyText": "Typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Calendar intervals can be specifies as the name of the unit like `month` or in\n          \n          \n            \n            Calendar intervals can be specified as the name of the unit like `month` or in", "author": "jrodewig", "createdAt": "2020-05-29T20:08:01Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -47,59 +56,60 @@ will be removed in the future.\n ===== Calendar intervals\n \n Calendar-aware intervals are configured with the `calendar_interval` parameter.\n-Calendar intervals can only be specified in \"singular\" quantities of the unit\n-(`1d`, `1M`, etc). Multiples, such as `2d`, are not supported and will throw an exception.\n+Calendar intervals can be specifies as the name of the unit like `month` or in", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMjE2OA==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432712168", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can specify time zones as either an ISO 8601 UTC offset (e.g. `+01:00` or\n          \n          \n            \n            You can specify time zones as an ISO 8601 UTC offset (e.g. `+01:00` or", "author": "jrodewig", "createdAt": "2020-05-29T20:10:47Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -338,15 +348,27 @@ Response:\n --------------------------------------------------\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n-===== Timezone\n+===== Time zone\n \n-Date-times are stored in Elasticsearch in UTC.  By default, all bucketing and\n+Date-times are stored in Elasticsearch in UTC. By default, all bucketing and\n rounding is also done in UTC. Use the `time_zone` parameter to indicate\n-that bucketing should use a different timezone.\n+that bucketing should use a different time zone.\n+\n+For example, if the inverval is a calendar day and the time zone is\n+`America/New_York` then `2020-01-03T01:00:01Z` is converted to\n+`2020-01-02T18:00:01`, rounded down to `2020-01-02T00:00:00` and then\n+converted back to UTC to produce `2020-01-02T05:00:00:00Z`. Finally, when the\n+bucket is turned into a string key it is printed in `America/New_York` so it'll\n+display as `\"2020-01-02T00:00:00\"`. More formally, this make the rounding look like:\n+\n+[source,java]\n+--------------------------------------------------\n+bucket_key = localToUtc(Math.floor(utcToLocal(value) / interval) * interval))\n+--------------------------------------------------\n \n-You can specify timezones as either an ISO 8601 UTC offset (e.g. `+01:00` or\n-`-08:00`)  or as a timezone ID as specified in the IANA timezone database,\n-such as`America/Los_Angeles`.\n+You can specify time zones as either an ISO 8601 UTC offset (e.g. `+01:00` or", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMjM0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432712343", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `-08:00`) or as a time zone ID as specified in the IANA time zone database,\n          \n          \n            \n            `-08:00`) or as an IANA time zone ID,", "author": "jrodewig", "createdAt": "2020-05-29T20:11:10Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -338,15 +348,27 @@ Response:\n --------------------------------------------------\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n-===== Timezone\n+===== Time zone\n \n-Date-times are stored in Elasticsearch in UTC.  By default, all bucketing and\n+Date-times are stored in Elasticsearch in UTC. By default, all bucketing and\n rounding is also done in UTC. Use the `time_zone` parameter to indicate\n-that bucketing should use a different timezone.\n+that bucketing should use a different time zone.\n+\n+For example, if the inverval is a calendar day and the time zone is\n+`America/New_York` then `2020-01-03T01:00:01Z` is converted to\n+`2020-01-02T18:00:01`, rounded down to `2020-01-02T00:00:00` and then\n+converted back to UTC to produce `2020-01-02T05:00:00:00Z`. Finally, when the\n+bucket is turned into a string key it is printed in `America/New_York` so it'll\n+display as `\"2020-01-02T00:00:00\"`. More formally, this make the rounding look like:\n+\n+[source,java]\n+--------------------------------------------------\n+bucket_key = localToUtc(Math.floor(utcToLocal(value) / interval) * interval))\n+--------------------------------------------------\n \n-You can specify timezones as either an ISO 8601 UTC offset (e.g. `+01:00` or\n-`-08:00`)  or as a timezone ID as specified in the IANA timezone database,\n-such as`America/Los_Angeles`.\n+You can specify time zones as either an ISO 8601 UTC offset (e.g. `+01:00` or\n+`-08:00`) or as a time zone ID as specified in the IANA time zone database,", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMjQxNg==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432712416", "bodyText": "whitespace fix\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            such as` America/Los_Angeles`.\n          \n          \n            \n            such as `America/Los_Angeles`.", "author": "jrodewig", "createdAt": "2020-05-29T20:11:21Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -338,15 +348,27 @@ Response:\n --------------------------------------------------\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n-===== Timezone\n+===== Time zone\n \n-Date-times are stored in Elasticsearch in UTC.  By default, all bucketing and\n+Date-times are stored in Elasticsearch in UTC. By default, all bucketing and\n rounding is also done in UTC. Use the `time_zone` parameter to indicate\n-that bucketing should use a different timezone.\n+that bucketing should use a different time zone.\n+\n+For example, if the inverval is a calendar day and the time zone is\n+`America/New_York` then `2020-01-03T01:00:01Z` is converted to\n+`2020-01-02T18:00:01`, rounded down to `2020-01-02T00:00:00` and then\n+converted back to UTC to produce `2020-01-02T05:00:00:00Z`. Finally, when the\n+bucket is turned into a string key it is printed in `America/New_York` so it'll\n+display as `\"2020-01-02T00:00:00\"`. More formally, this make the rounding look like:\n+\n+[source,java]\n+--------------------------------------------------\n+bucket_key = localToUtc(Math.floor(utcToLocal(value) / interval) * interval))\n+--------------------------------------------------\n \n-You can specify timezones as either an ISO 8601 UTC offset (e.g. `+01:00` or\n-`-08:00`)  or as a timezone ID as specified in the IANA timezone database,\n-such as`America/Los_Angeles`.\n+You can specify time zones as either an ISO 8601 UTC offset (e.g. `+01:00` or\n+`-08:00`) or as a time zone ID as specified in the IANA time zone database,\n+such as` America/Los_Angeles`.", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMjg1MA==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432712850", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            than you would expect from the used `calendar_interval` or `fixed_interval`.\n          \n          \n            \n            than you would expect from the `calendar_interval` or `fixed_interval`.", "author": "jrodewig", "createdAt": "2020-05-29T20:12:24Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -446,17 +468,17 @@ second document falls into the bucket for 1 October 2015:\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n <1> The `key_as_string` value represents midnight on each day\n-    in the specified timezone.\n+    in the specified time zone.\n \n-WARNING: When using time zones that follow DST (daylight savings time) changes,\n-buckets close to the moment when those changes happen can have slightly different\n-sizes than you would expect from the used `interval`.\n+WARNING: Most time zones shift their clocks for daylight savings time. Buckets\n+lose to the moment when those changes happen can have slightly different sizes\n+than you would expect from the used `calendar_interval` or `fixed_interval`.", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMzAyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432713025", "bodyText": "Missing word\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            clocks were turned forward 1 hour to 3am local time. If you use `day` as\n          \n          \n            \n            clocks were turned forward 1 hour to 3am local time. If you use `day` as the", "author": "jrodewig", "createdAt": "2020-05-29T20:12:47Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -446,17 +468,17 @@ second document falls into the bucket for 1 October 2015:\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n <1> The `key_as_string` value represents midnight on each day\n-    in the specified timezone.\n+    in the specified time zone.\n \n-WARNING: When using time zones that follow DST (daylight savings time) changes,\n-buckets close to the moment when those changes happen can have slightly different\n-sizes than you would expect from the used `interval`.\n+WARNING: Most time zones shift their clocks for daylight savings time. Buckets\n+lose to the moment when those changes happen can have slightly different sizes\n+than you would expect from the used `calendar_interval` or `fixed_interval`.\n For example, consider a DST start in the `CET` time zone: on 27 March 2016 at 2am,\n-clocks were turned forward 1 hour to 3am local time. If you use `day` as `interval`,\n-the bucket covering that day will only hold data for 23 hours instead of the usual\n-24 hours for other buckets. The same is true for shorter intervals, like 12h,\n-where you'll have only a 11h bucket on the morning of 27 March when the DST shift\n-happens.\n+clocks were turned forward 1 hour to 3am local time. If you use `day` as", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMzIxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432713219", "bodyText": "Missing word\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            shorter intervals, like `fixed_interval` of `12h`, where you'll have only a 11h\n          \n          \n            \n            shorter intervals, like a `fixed_interval` of `12h`, where you'll have only a 11h", "author": "jrodewig", "createdAt": "2020-05-29T20:13:11Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -446,17 +468,17 @@ second document falls into the bucket for 1 October 2015:\n // TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n \n <1> The `key_as_string` value represents midnight on each day\n-    in the specified timezone.\n+    in the specified time zone.\n \n-WARNING: When using time zones that follow DST (daylight savings time) changes,\n-buckets close to the moment when those changes happen can have slightly different\n-sizes than you would expect from the used `interval`.\n+WARNING: Most time zones shift their clocks for daylight savings time. Buckets\n+lose to the moment when those changes happen can have slightly different sizes\n+than you would expect from the used `calendar_interval` or `fixed_interval`.\n For example, consider a DST start in the `CET` time zone: on 27 March 2016 at 2am,\n-clocks were turned forward 1 hour to 3am local time. If you use `day` as `interval`,\n-the bucket covering that day will only hold data for 23 hours instead of the usual\n-24 hours for other buckets. The same is true for shorter intervals, like 12h,\n-where you'll have only a 11h bucket on the morning of 27 March when the DST shift\n-happens.\n+clocks were turned forward 1 hour to 3am local time. If you use `day` as\n+`calendar_interval`, the bucket covering that day will only hold data for 23\n+hours instead of the usual 24 hours for other buckets. The same is true for\n+shorter intervals, like `fixed_interval` of `12h`, where you'll have only a 11h", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNDQ0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432714442", "bodyText": "Having an empty def feels weird to me. Maybe move the expanded word within the def?\n`ms`::\nMilliseconds\n\nWould need to do this for all the definitions tho.", "author": "jrodewig", "createdAt": "2020-05-29T20:16:10Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -175,20 +185,20 @@ a calendar interval like month or quarter will throw an exception.\n \n The accepted units for fixed intervals are:\n \n-milliseconds (ms) ::\n+milliseconds (`ms`) ::", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNDQ4MA==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432714480", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Defined as 1000 milliseconds each\n          \n          \n            \n            Defined as 1000 milliseconds each.", "author": "jrodewig", "createdAt": "2020-05-29T20:16:16Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -175,20 +185,20 @@ a calendar interval like month or quarter will throw an exception.\n \n The accepted units for fixed intervals are:\n \n-milliseconds (ms) ::\n+milliseconds (`ms`) ::\n \n-seconds (s) ::\n+seconds (`s`) ::\n Defined as 1000 milliseconds each", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNDYwNA==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432714604", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            All minutes begin at 00 seconds.\n          \n          \n            \n            Defined as 60 seconds each (60,000 milliseconds)\n          \n          \n            \n            Defined as 60 seconds each (60,000 milliseconds).\n          \n          \n            \n            All minutes begin at 00 seconds.", "author": "jrodewig", "createdAt": "2020-05-29T20:16:37Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -175,20 +185,20 @@ a calendar interval like month or quarter will throw an exception.\n \n The accepted units for fixed intervals are:\n \n-milliseconds (ms) ::\n+milliseconds (`ms`) ::\n \n-seconds (s) ::\n+seconds (`s`) ::\n Defined as 1000 milliseconds each\n \n-minutes (m) ::\n+minutes (`m`) ::\n All minutes begin at 00 seconds.\n Defined as 60 seconds each (60,000 milliseconds)", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNDY5OA==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432714698", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            All hours begin at 00 minutes and 00 seconds.\n          \n          \n            \n            Defined as 60 minutes each (3,600,000 milliseconds)\n          \n          \n            \n            Defined as 60 minutes each (3,600,000 milliseconds).\n          \n          \n            \n            All hours begin at 00 minutes and 00 seconds.", "author": "jrodewig", "createdAt": "2020-05-29T20:16:49Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -175,20 +185,20 @@ a calendar interval like month or quarter will throw an exception.\n \n The accepted units for fixed intervals are:\n \n-milliseconds (ms) ::\n+milliseconds (`ms`) ::\n \n-seconds (s) ::\n+seconds (`s`) ::\n Defined as 1000 milliseconds each\n \n-minutes (m) ::\n+minutes (`m`) ::\n All minutes begin at 00 seconds.\n Defined as 60 seconds each (60,000 milliseconds)\n \n-hours (h) ::\n+hours (`h`) ::\n All hours begin at 00 minutes and 00 seconds.\n Defined as 60 minutes each (3,600,000 milliseconds)", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNDgwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/56922#discussion_r432714805", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            All days begin at the earliest possible time, which is usually 00:00:00\n          \n          \n            \n            (midnight).\n          \n          \n            \n            Defined as 24 hours (86,400,000 milliseconds)\n          \n          \n            \n            Defined as 24 hours (86,400,000 milliseconds).\n          \n          \n            \n            All days begin at the earliest possible time, which is usually 00:00:00\n          \n          \n            \n            (midnight).", "author": "jrodewig", "createdAt": "2020-05-29T20:17:02Z", "path": "docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc", "diffHunk": "@@ -175,20 +185,20 @@ a calendar interval like month or quarter will throw an exception.\n \n The accepted units for fixed intervals are:\n \n-milliseconds (ms) ::\n+milliseconds (`ms`) ::\n \n-seconds (s) ::\n+seconds (`s`) ::\n Defined as 1000 milliseconds each\n \n-minutes (m) ::\n+minutes (`m`) ::\n All minutes begin at 00 seconds.\n Defined as 60 seconds each (60,000 milliseconds)\n \n-hours (h) ::\n+hours (`h`) ::\n All hours begin at 00 minutes and 00 seconds.\n Defined as 60 minutes each (3,600,000 milliseconds)\n \n-days (d) ::\n+days (`d`) ::\n All days begin at the earliest possible time, which is usually 00:00:00\n (midnight).\n Defined as 24 hours (86,400,000 milliseconds)", "originalCommit": "1ac9c45986b0e44c30819049697ac5f2fb2301a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "79364c7f602a6df648211b9fd102984e11234928", "url": "https://github.com/elastic/elasticsearch/commit/79364c7f602a6df648211b9fd102984e11234928", "message": "Update docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>", "committedDate": "2020-05-29T20:32:19Z", "type": "commit"}, {"oid": "be80663e36b0eb7c713a48cf614e08041a7ff41d", "url": "https://github.com/elastic/elasticsearch/commit/be80663e36b0eb7c713a48cf614e08041a7ff41d", "message": "Update docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>", "committedDate": "2020-05-29T20:32:40Z", "type": "commit"}, {"oid": "10a14a8530abd2cfeb39c2d13b5b48410e872f5a", "url": "https://github.com/elastic/elasticsearch/commit/10a14a8530abd2cfeb39c2d13b5b48410e872f5a", "message": "Update docs/reference/aggregations/bucket/datehistogram-aggregation.asciidoc\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>", "committedDate": "2020-05-29T20:33:09Z", "type": "commit"}, {"oid": "fddca454adf21038e44ec50a5dce0aa95d4bad52", "url": "https://github.com/elastic/elasticsearch/commit/fddca454adf21038e44ec50a5dce0aa95d4bad52", "message": "Apply suggestions from code review\n\nCo-authored-by: James Rodewig <james.rodewig@elastic.co>", "committedDate": "2020-05-29T20:35:20Z", "type": "commit"}, {"oid": "13d1e9d6e84e286a61f3d6a41bc9631413fd6c11", "url": "https://github.com/elastic/elasticsearch/commit/13d1e9d6e84e286a61f3d6a41bc9631413fd6c11", "message": "Merge branch 'master' into docs_date_histo", "committedDate": "2020-05-29T20:36:18Z", "type": "commit"}, {"oid": "1d0826edb03bf9a0e54e1bc5d10bc59d4a3c367a", "url": "https://github.com/elastic/elasticsearch/commit/1d0826edb03bf9a0e54e1bc5d10bc59d4a3c367a", "message": "Iter", "committedDate": "2020-05-29T20:39:21Z", "type": "commit"}, {"oid": "7f24f9983e1f0d6a006e2753237ddee4ab2f20b5", "url": "https://github.com/elastic/elasticsearch/commit/7f24f9983e1f0d6a006e2753237ddee4ab2f20b5", "message": "Last AKA", "committedDate": "2020-05-29T20:59:15Z", "type": "commit"}]}