{"pr_number": 64481, "pr_title": "Introduce Compatible Version plugin", "pr_createdAt": "2020-11-02T14:52:13Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64481", "timeline": [{"oid": "e468fdf350c54bcfd63ee9a1f221232478c111bc", "url": "https://github.com/elastic/elasticsearch/commit/e468fdf350c54bcfd63ee9a1f221232478c111bc", "message": "Introduce per endpoint media types", "committedDate": "2020-10-30T09:28:47Z", "type": "commit"}, {"oid": "5cfa11e9db3416a4f7920806977f1333b1c837fa", "url": "https://github.com/elastic/elasticsearch/commit/5cfa11e9db3416a4f7920806977f1333b1c837fa", "message": "Merge branch 'master' into compat/parsed_media_type", "committedDate": "2020-10-30T09:45:06Z", "type": "commit"}, {"oid": "66224e74f5ede806080c282914870ebac7a8c508", "url": "https://github.com/elastic/elasticsearch/commit/66224e74f5ede806080c282914870ebac7a8c508", "message": "allow smile and cbor to parse charset param. See ClientYamlTestExecutionContext:L122", "committedDate": "2020-10-30T10:14:20Z", "type": "commit"}, {"oid": "29b27e805f8e31f7b2e21cd54ae9a2342d9398aa", "url": "https://github.com/elastic/elasticsearch/commit/29b27e805f8e31f7b2e21cd54ae9a2342d9398aa", "message": "javadocs", "committedDate": "2020-10-30T12:37:26Z", "type": "commit"}, {"oid": "46903625a056c3f615d0c593370e3c442b1a99b5", "url": "https://github.com/elastic/elasticsearch/commit/46903625a056c3f615d0c593370e3c442b1a99b5", "message": "fix javadoc", "committedDate": "2020-10-30T12:42:38Z", "type": "commit"}, {"oid": "e7866a982d18f3beecc26a217b600f0fc96ba110", "url": "https://github.com/elastic/elasticsearch/commit/e7866a982d18f3beecc26a217b600f0fc96ba110", "message": "Allow registration of compatible version-1 handlers", "committedDate": "2020-10-30T15:59:56Z", "type": "commit"}, {"oid": "0330d97d2c3722f09530e2ab0546d738981536ef", "url": "https://github.com/elastic/elasticsearch/commit/0330d97d2c3722f09530e2ab0546d738981536ef", "message": "add tests", "committedDate": "2020-11-02T12:27:48Z", "type": "commit"}, {"oid": "d3cb8586c1bec73030696912e1d32cb3f736ec58", "url": "https://github.com/elastic/elasticsearch/commit/d3cb8586c1bec73030696912e1d32cb3f736ec58", "message": "Introduce CompatibleVersion plugin", "committedDate": "2020-11-02T14:47:22Z", "type": "commit"}, {"oid": "78d46603e02134a026b95ac48bfb76704a998e1c", "url": "https://github.com/elastic/elasticsearch/commit/78d46603e02134a026b95ac48bfb76704a998e1c", "message": "Merge branch 'master' into compat/register_compatible_handlers", "committedDate": "2020-11-02T15:00:13Z", "type": "commit"}, {"oid": "bc5de8b5c53664ab70e3e0c45342ea7b3af7398b", "url": "https://github.com/elastic/elasticsearch/commit/bc5de8b5c53664ab70e3e0c45342ea7b3af7398b", "message": "pass version to xcontentbuilder", "committedDate": "2020-11-02T15:19:00Z", "type": "commit"}, {"oid": "f958cdd0d4e1118048051bf20dd7748f517f34bc", "url": "https://github.com/elastic/elasticsearch/commit/f958cdd0d4e1118048051bf20dd7748f517f34bc", "message": "Merge branch 'master' into compat/register_compatible_handlers", "committedDate": "2020-11-02T16:47:19Z", "type": "commit"}, {"oid": "e829b17e763faf06168cf0188005f143560a8b20", "url": "https://github.com/elastic/elasticsearch/commit/e829b17e763faf06168cf0188005f143560a8b20", "message": "Merge branch 'master' into compat/compatible_plugin", "committedDate": "2020-11-02T16:47:39Z", "type": "commit"}, {"oid": "f32cf70b1f0f0a0369e2cb571e664a27d1bf7cac", "url": "https://github.com/elastic/elasticsearch/commit/f32cf70b1f0f0a0369e2cb571e664a27d1bf7cac", "message": "spotless", "committedDate": "2020-11-02T16:48:47Z", "type": "commit"}, {"oid": "2bda74f773d6b682deaa0c256a3568cbc0c1956c", "url": "https://github.com/elastic/elasticsearch/commit/2bda74f773d6b682deaa0c256a3568cbc0c1956c", "message": "code review follow up", "committedDate": "2020-11-03T12:15:42Z", "type": "commit"}, {"oid": "7779083b4e5ed3301bd75bfc340bff51bae2042c", "url": "https://github.com/elastic/elasticsearch/commit/7779083b4e5ed3301bd75bfc340bff51bae2042c", "message": "minor tweaks", "committedDate": "2020-11-03T12:52:14Z", "type": "commit"}, {"oid": "dd26408343b5633d4981d15207c5a714a8a44e7e", "url": "https://github.com/elastic/elasticsearch/commit/dd26408343b5633d4981d15207c5a714a8a44e7e", "message": "Merge branch 'master' into compat/introduce_per_endpoint_media_types", "committedDate": "2020-11-03T12:52:41Z", "type": "commit"}, {"oid": "94b4a0a85ece16e597818e815d958675e5879125", "url": "https://github.com/elastic/elasticsearch/commit/94b4a0a85ece16e597818e815d958675e5879125", "message": "fix test after exception msg rename", "committedDate": "2020-11-03T13:41:27Z", "type": "commit"}, {"oid": "43855911ed3ec0ad1d245cc398e7d67f59acb975", "url": "https://github.com/elastic/elasticsearch/commit/43855911ed3ec0ad1d245cc398e7d67f59acb975", "message": "rename to header value", "committedDate": "2020-11-03T15:30:35Z", "type": "commit"}, {"oid": "dc61731ba05c6d2338ff46cf3f3bf665b334c525", "url": "https://github.com/elastic/elasticsearch/commit/dc61731ba05c6d2338ff46cf3f3bf665b334c525", "message": "remove charset validation", "committedDate": "2020-11-04T09:24:25Z", "type": "commit"}, {"oid": "4a3138dd46c7826e902f0375e2a61d5aef036c70", "url": "https://github.com/elastic/elasticsearch/commit/4a3138dd46c7826e902f0375e2a61d5aef036c70", "message": "Apply suggestions from code review\n\nCo-authored-by: Jay Modi <jaymode@users.noreply.github.com>", "committedDate": "2020-11-05T07:33:33Z", "type": "commit"}, {"oid": "0b565e566cfb0555b25d02e082105bb482e7e6fd", "url": "https://github.com/elastic/elasticsearch/commit/0b565e566cfb0555b25d02e082105bb482e7e6fd", "message": "javadoc", "committedDate": "2020-11-05T08:02:03Z", "type": "commit"}, {"oid": "b35ad2ce54f0577edd332d8ebedb4fa817475e71", "url": "https://github.com/elastic/elasticsearch/commit/b35ad2ce54f0577edd332d8ebedb4fa817475e71", "message": "Merge branch 'master' into compat/introduce_per_endpoint_media_types", "committedDate": "2020-11-05T08:02:35Z", "type": "commit"}, {"oid": "b908bfebd14c7157aeb7592f17c4907d8e9c6a7f", "url": "https://github.com/elastic/elasticsearch/commit/b908bfebd14c7157aeb7592f17c4907d8e9c6a7f", "message": "Merge branch 'compat/introduce_per_endpoint_media_types' of github.com:pgomulka/elasticsearch into compat/introduce_per_endpoint_media_types", "committedDate": "2020-11-05T08:03:20Z", "type": "commit"}, {"oid": "950ba7b922b323db01e225855604f90d8dcc5286", "url": "https://github.com/elastic/elasticsearch/commit/950ba7b922b323db01e225855604f90d8dcc5286", "message": "Merge branch 'compat/introduce_per_endpoint_media_types' into compat/register_compatible_handlers", "committedDate": "2020-11-05T08:50:14Z", "type": "commit"}, {"oid": "310b735cbeecb65ee6e212ea46d655948236269a", "url": "https://github.com/elastic/elasticsearch/commit/310b735cbeecb65ee6e212ea46d655948236269a", "message": "Merge branch 'master' into compat/register_compatible_handlers", "committedDate": "2020-11-05T08:51:21Z", "type": "commit"}, {"oid": "3cf408aec87ae94be972436b326747efeb3c3281", "url": "https://github.com/elastic/elasticsearch/commit/3cf408aec87ae94be972436b326747efeb3c3281", "message": "Merge branch 'compat/introduce_per_endpoint_media_types' into compat/compatible_plugin", "committedDate": "2020-11-05T08:53:40Z", "type": "commit"}, {"oid": "4c880c08845c6da8800c4778bd6bff841e5ef261", "url": "https://github.com/elastic/elasticsearch/commit/4c880c08845c6da8800c4778bd6bff841e5ef261", "message": "Merge branch 'master' into compat/compatible_plugin", "committedDate": "2020-11-05T08:55:53Z", "type": "commit"}, {"oid": "afba70d3cd862b7b3a83536381bf32e5cea575e6", "url": "https://github.com/elastic/elasticsearch/commit/afba70d3cd862b7b3a83536381bf32e5cea575e6", "message": "javadoc and cleanup", "committedDate": "2020-11-05T09:57:15Z", "type": "commit"}, {"oid": "385f5a9a7538dc44a7052c1c029ac24c70dd20ce", "url": "https://github.com/elastic/elasticsearch/commit/385f5a9a7538dc44a7052c1c029ac24c70dd20ce", "message": "Merge branch 'master' into compat/register_compatible_handlers", "committedDate": "2020-11-06T06:59:03Z", "type": "commit"}, {"oid": "836fe0f1b842929aa6c6e46694aa4e8ca8dead95", "url": "https://github.com/elastic/elasticsearch/commit/836fe0f1b842929aa6c6e46694aa4e8ca8dead95", "message": "tests and javadoc", "committedDate": "2020-11-06T08:09:28Z", "type": "commit"}, {"oid": "8f2ea927874ce0e737322b6cfc9f348e1f31fa5b", "url": "https://github.com/elastic/elasticsearch/commit/8f2ea927874ce0e737322b6cfc9f348e1f31fa5b", "message": "javadoc", "committedDate": "2020-11-09T12:05:40Z", "type": "commit"}, {"oid": "d70a0712bc4578e4351e6deb29a6adbb60fd69b6", "url": "https://github.com/elastic/elasticsearch/commit/d70a0712bc4578e4351e6deb29a6adbb60fd69b6", "message": "do not set compatible version twice", "committedDate": "2020-11-09T12:13:22Z", "type": "commit"}, {"oid": "87d762f66c418dd238fc1c02d7f7bafc7de0bb34", "url": "https://github.com/elastic/elasticsearch/commit/87d762f66c418dd238fc1c02d7f7bafc7de0bb34", "message": "Merge branch 'master' into compat/register_compatible_handlers", "committedDate": "2020-11-09T13:12:41Z", "type": "commit"}, {"oid": "deff73987b4db898044e43ffae89a02a2ac66b2e", "url": "https://github.com/elastic/elasticsearch/commit/deff73987b4db898044e43ffae89a02a2ac66b2e", "message": "javadocs", "committedDate": "2020-11-09T15:06:50Z", "type": "commit"}, {"oid": "ee4069709cc258459b817e5225c4a71bb830ab2b", "url": "https://github.com/elastic/elasticsearch/commit/ee4069709cc258459b817e5225c4a71bb830ab2b", "message": "Merge branch 'compat/register_compatible_handlers' into compat/compatible_plugin", "committedDate": "2020-11-09T15:26:07Z", "type": "commit"}, {"oid": "a8eb296ae4ee03a579f7da30990cd97737b89441", "url": "https://github.com/elastic/elasticsearch/commit/a8eb296ae4ee03a579f7da30990cd97737b89441", "message": "Merge branch 'master' into compat/compatible_plugin", "committedDate": "2020-11-16T08:47:44Z", "type": "commit"}, {"oid": "63c2987f7f65e1d8532f41a30c9ea0389918909a", "url": "https://github.com/elastic/elasticsearch/commit/63c2987f7f65e1d8532f41a30c9ea0389918909a", "message": "line", "committedDate": "2020-11-16T09:42:41Z", "type": "commit"}, {"oid": "aab691bfd2e369cba0d97ee8482fe0c16f078ae1", "url": "https://github.com/elastic/elasticsearch/commit/aab691bfd2e369cba0d97ee8482fe0c16f078ae1", "message": "testcase for textformat versioned", "committedDate": "2020-11-16T12:10:30Z", "type": "commit"}, {"oid": "b2e12ec8e812b3bfedc56e0f339f01e30a625578", "url": "https://github.com/elastic/elasticsearch/commit/b2e12ec8e812b3bfedc56e0f339f01e30a625578", "message": "spotless", "committedDate": "2020-11-16T12:18:50Z", "type": "commit"}, {"oid": "16a1b837a8b1edd04188017f0acc7aec23781f8c", "url": "https://github.com/elastic/elasticsearch/commit/16a1b837a8b1edd04188017f0acc7aec23781f8c", "message": "minimum rest compat", "committedDate": "2020-11-17T08:17:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwMjEyNw==", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525602127", "bodyText": "nit: can we use Version.CURRENT.minimumRestCompatibilityVersion() instead of Version.CURRENT.major -1 ? (to help encapsulate the logic)", "author": "jakelandis", "createdAt": "2020-11-17T23:51:47Z", "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {", "originalCommit": "16a1b837a8b1edd04188017f0acc7aec23781f8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwMzQ3NA==", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525603474", "bodyText": "nit: rather then saying \"must be equal or less then the current version\" , can it say \"must be either version {} or {}, but found {}. Accept={}\" ,  Version.CURRENT.major, Version.CURRENT.minimumRestCompatibilityVersion() , acceptVersion, acceptHeader (no need to put content-type here)", "author": "jakelandis", "createdAt": "2020-11-17T23:55:18Z", "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {\n+            throw new ElasticsearchStatusException(\n+                \"Compatible version must be equal or less then the current version. Accept={}} Content-Type={}}\",", "originalCommit": "16a1b837a8b1edd04188017f0acc7aec23781f8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNDA1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525604053", "bodyText": "same nitpicks as above... use the minumRestCompatibltyVersion and tweak the error message to be more precise (and no need for the accept header here)", "author": "jakelandis", "createdAt": "2020-11-17T23:56:57Z", "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {\n+            throw new ElasticsearchStatusException(\n+                \"Compatible version must be equal or less then the current version. Accept={}} Content-Type={}}\",\n+                RestStatus.BAD_REQUEST,\n+                acceptHeader,\n+                contentTypeHeader\n+            );\n+        }\n+        if (hasContent) {\n+\n+            // content-type version must be current or prior\n+            if (contentTypeVersion > Version.CURRENT.major || contentTypeVersion < Version.CURRENT.major - 1) {", "originalCommit": "16a1b837a8b1edd04188017f0acc7aec23781f8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNTE0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525605146", "bodyText": "nit: A compatible version is required on both Content-Type and Accept headers if either one has requested a compatible version. Accept={}, Content-Type={}", "author": "jakelandis", "createdAt": "2020-11-18T00:00:01Z", "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {\n+            throw new ElasticsearchStatusException(\n+                \"Compatible version must be equal or less then the current version. Accept={}} Content-Type={}}\",\n+                RestStatus.BAD_REQUEST,\n+                acceptHeader,\n+                contentTypeHeader\n+            );\n+        }\n+        if (hasContent) {\n+\n+            // content-type version must be current or prior\n+            if (contentTypeVersion > Version.CURRENT.major || contentTypeVersion < Version.CURRENT.major - 1) {\n+                throw new ElasticsearchStatusException(\n+                    \"Compatible version must be equal or less then the current version. Accept={} Content-Type={}\",\n+                    RestStatus.BAD_REQUEST,\n+                    acceptHeader,\n+                    contentTypeHeader,\n+                    RestStatus.BAD_REQUEST\n+                );\n+            }\n+            // if both accept and content-type are sent, the version must match\n+            if (contentTypeVersion != acceptVersion) {\n+                throw new ElasticsearchStatusException(\n+                    \"Content-Type and Accept version requests have to match. Accept={} Content-Type={}\",\n+                    RestStatus.BAD_REQUEST,\n+                    acceptHeader,\n+                    contentTypeHeader\n+                );\n+            }\n+            // both headers should be versioned or none\n+            if ((cVersion == null && aVersion != null) || (aVersion == null && cVersion != null)) {\n+                throw new ElasticsearchStatusException(\n+                    \"Versioning is required on both Content-Type and Accept headers. Accept={} Content-Type={}\",", "originalCommit": "16a1b837a8b1edd04188017f0acc7aec23781f8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNTk4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525605983", "bodyText": "nit: A compatible version is required on both Content-Type and Accept headers if either one has requested a compatible version and the compatible versions must match. Accept={}, Content-Type={}", "author": "jakelandis", "createdAt": "2020-11-18T00:02:21Z", "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {\n+            throw new ElasticsearchStatusException(\n+                \"Compatible version must be equal or less then the current version. Accept={}} Content-Type={}}\",\n+                RestStatus.BAD_REQUEST,\n+                acceptHeader,\n+                contentTypeHeader\n+            );\n+        }\n+        if (hasContent) {\n+\n+            // content-type version must be current or prior\n+            if (contentTypeVersion > Version.CURRENT.major || contentTypeVersion < Version.CURRENT.major - 1) {\n+                throw new ElasticsearchStatusException(\n+                    \"Compatible version must be equal or less then the current version. Accept={} Content-Type={}\",\n+                    RestStatus.BAD_REQUEST,\n+                    acceptHeader,\n+                    contentTypeHeader,\n+                    RestStatus.BAD_REQUEST\n+                );\n+            }\n+            // if both accept and content-type are sent, the version must match\n+            if (contentTypeVersion != acceptVersion) {\n+                throw new ElasticsearchStatusException(\n+                    \"Content-Type and Accept version requests have to match. Accept={} Content-Type={}\",", "originalCommit": "16a1b837a8b1edd04188017f0acc7aec23781f8c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNjYzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r525606635", "bodyText": "Can this ever evaluate true ? wouldn't the above if catch any this case ?", "author": "jakelandis", "createdAt": "2020-11-18T00:04:22Z", "path": "x-pack/plugin/rest-compatibility/src/main/java/org/elasticsearch/compat/CompatibleVersionPlugin.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.compat;\n+\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.Version;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.xcontent.MediaType;\n+import org.elasticsearch.common.xcontent.ParsedMediaType;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.plugins.RestCompatibilityPlugin;\n+import org.elasticsearch.rest.RestStatus;\n+\n+public class CompatibleVersionPlugin extends Plugin implements RestCompatibilityPlugin {\n+\n+    @Override\n+    public Version getCompatibleVersion(\n+        @Nullable ParsedMediaType acceptHeader,\n+        @Nullable ParsedMediaType contentTypeHeader,\n+        boolean hasContent\n+    ) {\n+        Byte aVersion = parseVersion(acceptHeader);\n+        byte acceptVersion = aVersion == null ? Version.CURRENT.major : Integer.valueOf(aVersion).byteValue();\n+        Byte cVersion = parseVersion(contentTypeHeader);\n+        byte contentTypeVersion = cVersion == null ? Version.CURRENT.major : Integer.valueOf(cVersion).byteValue();\n+\n+        // accept version must be current or prior\n+        if (acceptVersion > Version.CURRENT.major || acceptVersion < Version.CURRENT.major - 1) {\n+            throw new ElasticsearchStatusException(\n+                \"Compatible version must be equal or less then the current version. Accept={}} Content-Type={}}\",\n+                RestStatus.BAD_REQUEST,\n+                acceptHeader,\n+                contentTypeHeader\n+            );\n+        }\n+        if (hasContent) {\n+\n+            // content-type version must be current or prior\n+            if (contentTypeVersion > Version.CURRENT.major || contentTypeVersion < Version.CURRENT.major - 1) {\n+                throw new ElasticsearchStatusException(\n+                    \"Compatible version must be equal or less then the current version. Accept={} Content-Type={}\",\n+                    RestStatus.BAD_REQUEST,\n+                    acceptHeader,\n+                    contentTypeHeader,\n+                    RestStatus.BAD_REQUEST\n+                );\n+            }\n+            // if both accept and content-type are sent, the version must match\n+            if (contentTypeVersion != acceptVersion) {\n+                throw new ElasticsearchStatusException(\n+                    \"Content-Type and Accept version requests have to match. Accept={} Content-Type={}\",\n+                    RestStatus.BAD_REQUEST,\n+                    acceptHeader,\n+                    contentTypeHeader\n+                );\n+            }\n+            // both headers should be versioned or none\n+            if ((cVersion == null && aVersion != null) || (aVersion == null && cVersion != null)) {", "originalCommit": "16a1b837a8b1edd04188017f0acc7aec23781f8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEyMjQ5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r526122492", "bodyText": "the above if             if (contentTypeVersion != acceptVersion) { would not catch the scenario when one of the headers is set to compatible-with=8 (current in general) and the other is not set (defaults to current)\n   expectThrows(\n            ElasticsearchStatusException.class,\n            () -> requestWith(acceptHeader(CURRENT_VERSION), contentTypeHeader(null), bodyPresent())\n        );\n\nexpectThrows(\n            ElasticsearchStatusException.class,\n            () -> requestWith(acceptHeader(null), contentTypeHeader(CURRENT_VERSION), bodyPresent())\n        );", "author": "pgomulka", "createdAt": "2020-11-18T14:19:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNjYzNQ=="}], "type": "inlineReview"}, {"oid": "b75d415738b7179933dcf70c6d6c34b5e1f0b2c6", "url": "https://github.com/elastic/elasticsearch/commit/b75d415738b7179933dcf70c6d6c34b5e1f0b2c6", "message": "code review follow up", "committedDate": "2020-11-18T14:39:01Z", "type": "commit"}, {"oid": "c3b7b511c3c6ecc11924cee036aa294cc1d64853", "url": "https://github.com/elastic/elasticsearch/commit/c3b7b511c3c6ecc11924cee036aa294cc1d64853", "message": "fix messages and toString for parsedmediatype", "committedDate": "2020-11-19T13:34:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0MDk1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64481#discussion_r527840953", "bodyText": "can you check the message? We've had tests like this before and didn't check the message and there was some other cause of the exception rather than the true cause.", "author": "jaymode", "createdAt": "2020-11-20T17:18:24Z", "path": "server/src/test/java/org/elasticsearch/node/NodeTests.java", "diffHunk": "@@ -339,4 +343,55 @@ public void setCircuitBreaker(CircuitBreaker circuitBreaker) {\n             myCircuitBreaker.set(circuitBreaker);\n         }\n     }\n+\n+    public static class TestRestCompatibility1 extends Plugin implements RestCompatibilityPlugin {\n+        @Override\n+        public Version getCompatibleVersion(ParsedMediaType acceptHeader, ParsedMediaType contentTypeHeader, boolean hasContent) {\n+            return Version.CURRENT.previousMajor();\n+        }\n+    }\n+\n+    public static class TestRestCompatibility2 extends Plugin implements RestCompatibilityPlugin {\n+        @Override\n+        public Version getCompatibleVersion(ParsedMediaType acceptHeader, ParsedMediaType contentTypeHeader, boolean hasContent) {\n+            return null;\n+        }\n+    }\n+\n+    public void testLoadingMultipleRestCompatibilityPlugins() throws IOException {\n+        Settings.Builder settings = baseSettings();\n+\n+        // throw an exception when two plugins are registered\n+        List<Class<? extends Plugin>> plugins = basePlugins();\n+        plugins.add(TestRestCompatibility1.class);\n+        plugins.add(TestRestCompatibility2.class);\n+\n+        expectThrows(IllegalStateException.class, () -> new MockNode(settings.build(), plugins));", "originalCommit": "c3b7b511c3c6ecc11924cee036aa294cc1d64853", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "51de734589a0ef13a2fff26003786f7139bb77bc", "url": "https://github.com/elastic/elasticsearch/commit/51de734589a0ef13a2fff26003786f7139bb77bc", "message": "assertion on message in test", "committedDate": "2020-11-23T08:56:26Z", "type": "commit"}, {"oid": "445032c10dd4b9bd791523ba941f6c3c2f5150de", "url": "https://github.com/elastic/elasticsearch/commit/445032c10dd4b9bd791523ba941f6c3c2f5150de", "message": "Merge branch 'master' into compat/compatible_plugin", "committedDate": "2020-11-23T12:13:06Z", "type": "commit"}]}