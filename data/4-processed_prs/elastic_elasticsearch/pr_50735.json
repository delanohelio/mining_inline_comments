{"pr_number": 50735, "pr_title": "Add max_resource_units to enterprise license", "pr_createdAt": "2020-01-08T11:25:38Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/50735", "timeline": [{"oid": "71f029ae4bc1099b55f135abe1595a96ccf12e77", "url": "https://github.com/elastic/elasticsearch/commit/71f029ae4bc1099b55f135abe1595a96ccf12e77", "message": "Add max_resource_units to enterprise license\n\nThe enterprise license type must has \"max_resource_units\" and may not\nhave \"max_nodes\".\n\nThis change adds support for this new field, validation that the field\nis present if-and-only-if the license is enterprise and bumps the\nlicense version number to reflect the new field.", "committedDate": "2020-01-08T11:04:26Z", "type": "commit"}, {"oid": "0bcba71ac7ddf2a0a899d22b9ac042a8d57358f4", "url": "https://github.com/elastic/elasticsearch/commit/0bcba71ac7ddf2a0a899d22b9ac042a8d57358f4", "message": "Fix compatible license versions", "committedDate": "2020-01-09T00:31:06Z", "type": "commit"}, {"oid": "7a26ca3d4e0f8e5e9ef0cb95788c3df909070eef", "url": "https://github.com/elastic/elasticsearch/commit/7a26ca3d4e0f8e5e9ef0cb95788c3df909070eef", "message": "Merge branch 'master' into enterprise-license/max_resource_units", "committedDate": "2020-01-09T00:44:01Z", "type": "commit"}, {"oid": "3019233a97cc28627b980f020ac53ff34c33766b", "url": "https://github.com/elastic/elasticsearch/commit/3019233a97cc28627b980f020ac53ff34c33766b", "message": "Fix some tests", "committedDate": "2020-01-09T01:47:28Z", "type": "commit"}, {"oid": "0c03b5c1c3cb6ae97684dc38c6471ecc6fef6e68", "url": "https://github.com/elastic/elasticsearch/commit/0c03b5c1c3cb6ae97684dc38c6471ecc6fef6e68", "message": "Merge branch 'master' into enterprise-license/max_resource_units", "committedDate": "2020-01-09T07:18:14Z", "type": "commit"}, {"oid": "8147c820752d5d84c72055ffe7a15387e8656a0e", "url": "https://github.com/elastic/elasticsearch/commit/8147c820752d5d84c72055ffe7a15387e8656a0e", "message": "Add max_resource_units to monitoring test", "committedDate": "2020-01-09T07:38:52Z", "type": "commit"}, {"oid": "1cfc6305bb2fc5ba9b26ab4b63c7bd83f5f09c1a", "url": "https://github.com/elastic/elasticsearch/commit/1cfc6305bb2fc5ba9b26ab4b63c7bd83f5f09c1a", "message": "Fix docs snippet", "committedDate": "2020-01-09T07:57:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYwOTk2MA==", "url": "https://github.com/elastic/elasticsearch/pull/50735#discussion_r364609960", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalStateException(\"maxResourceUnits must be set for enterprise licenses\");\n          \n          \n            \n                            throw new IllegalStateException(\"maxResourceUnits must be set for license type [\" + type + \"]\");", "author": "jkakavas", "createdAt": "2020-01-09T08:31:05Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/License.java", "diffHunk": "@@ -386,20 +407,38 @@ private void validate() {\n             throw new IllegalStateException(\"uid can not be null\");\n         } else if (feature == null && version == VERSION_START) {\n             throw new IllegalStateException(\"feature can not be null\");\n-        } else if (maxNodes == -1) {\n-            throw new IllegalStateException(\"maxNodes has to be set\");\n         } else if (expiryDate == -1) {\n             throw new IllegalStateException(\"expiryDate has to be set\");\n         } else if (expiryDate == LicenseService.BASIC_SELF_GENERATED_LICENSE_EXPIRATION_MILLIS && LicenseType.isBasic(type) == false) {\n             throw new IllegalStateException(\"only basic licenses are allowed to have no expiration\");\n         }\n+\n+        if (LicenseType.isEnterprise(type) && version < VERSION_ENTERPRISE) {\n+            throw new IllegalStateException(\"license type [\" + type + \"] is not a valid for version [\" + version + \"] licenses\");\n+        }\n+        validateLimits(type, maxNodes, maxResourceUnits);\n+    }\n+\n+    private static void validateLimits(String type, int maxNodes, int maxResourceUnits) {\n+        if (LicenseType.isEnterprise(type)) {\n+            if (maxResourceUnits == -1) {\n+                throw new IllegalStateException(\"maxResourceUnits must be set for enterprise licenses\");", "originalCommit": "1cfc6305bb2fc5ba9b26ab4b63c7bd83f5f09c1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMDIxNw==", "url": "https://github.com/elastic/elasticsearch/pull/50735#discussion_r364610217", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalStateException(\"maxNodes may not be set for enterprise licenses\");\n          \n          \n            \n                            throw new IllegalStateException(\"maxNodes may not be set  license type [\" + type + \"]\");", "author": "jkakavas", "createdAt": "2020-01-09T08:31:51Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/License.java", "diffHunk": "@@ -386,20 +407,38 @@ private void validate() {\n             throw new IllegalStateException(\"uid can not be null\");\n         } else if (feature == null && version == VERSION_START) {\n             throw new IllegalStateException(\"feature can not be null\");\n-        } else if (maxNodes == -1) {\n-            throw new IllegalStateException(\"maxNodes has to be set\");\n         } else if (expiryDate == -1) {\n             throw new IllegalStateException(\"expiryDate has to be set\");\n         } else if (expiryDate == LicenseService.BASIC_SELF_GENERATED_LICENSE_EXPIRATION_MILLIS && LicenseType.isBasic(type) == false) {\n             throw new IllegalStateException(\"only basic licenses are allowed to have no expiration\");\n         }\n+\n+        if (LicenseType.isEnterprise(type) && version < VERSION_ENTERPRISE) {\n+            throw new IllegalStateException(\"license type [\" + type + \"] is not a valid for version [\" + version + \"] licenses\");\n+        }\n+        validateLimits(type, maxNodes, maxResourceUnits);\n+    }\n+\n+    private static void validateLimits(String type, int maxNodes, int maxResourceUnits) {\n+        if (LicenseType.isEnterprise(type)) {\n+            if (maxResourceUnits == -1) {\n+                throw new IllegalStateException(\"maxResourceUnits must be set for enterprise licenses\");\n+            } else if (maxNodes != -1) {\n+                throw new IllegalStateException(\"maxNodes may not be set for enterprise licenses\");", "originalCommit": "1cfc6305bb2fc5ba9b26ab4b63c7bd83f5f09c1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMDM0MA==", "url": "https://github.com/elastic/elasticsearch/pull/50735#discussion_r364610340", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalStateException(\"maxResourceUnits may only be set for enterprise licenses\");\n          \n          \n            \n                            throw new IllegalStateException(\"maxResourceUnits may only be set  license type [\" + type + \"]\");", "author": "jkakavas", "createdAt": "2020-01-09T08:32:11Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/License.java", "diffHunk": "@@ -386,20 +407,38 @@ private void validate() {\n             throw new IllegalStateException(\"uid can not be null\");\n         } else if (feature == null && version == VERSION_START) {\n             throw new IllegalStateException(\"feature can not be null\");\n-        } else if (maxNodes == -1) {\n-            throw new IllegalStateException(\"maxNodes has to be set\");\n         } else if (expiryDate == -1) {\n             throw new IllegalStateException(\"expiryDate has to be set\");\n         } else if (expiryDate == LicenseService.BASIC_SELF_GENERATED_LICENSE_EXPIRATION_MILLIS && LicenseType.isBasic(type) == false) {\n             throw new IllegalStateException(\"only basic licenses are allowed to have no expiration\");\n         }\n+\n+        if (LicenseType.isEnterprise(type) && version < VERSION_ENTERPRISE) {\n+            throw new IllegalStateException(\"license type [\" + type + \"] is not a valid for version [\" + version + \"] licenses\");\n+        }\n+        validateLimits(type, maxNodes, maxResourceUnits);\n+    }\n+\n+    private static void validateLimits(String type, int maxNodes, int maxResourceUnits) {\n+        if (LicenseType.isEnterprise(type)) {\n+            if (maxResourceUnits == -1) {\n+                throw new IllegalStateException(\"maxResourceUnits must be set for enterprise licenses\");\n+            } else if (maxNodes != -1) {\n+                throw new IllegalStateException(\"maxNodes may not be set for enterprise licenses\");\n+            }\n+        } else {\n+            if (maxNodes == -1) {\n+                throw new IllegalStateException(\"maxNodes has to be set\");\n+            } else if (maxResourceUnits != -1) {\n+                throw new IllegalStateException(\"maxResourceUnits may only be set for enterprise licenses\");", "originalCommit": "1cfc6305bb2fc5ba9b26ab4b63c7bd83f5f09c1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY0NTU3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/50735#discussion_r365645576", "bodyText": "This suggestion is backwards. I could change it to say that they \"may not be set for license type [\" + type + \"]\", but it seemed more helpful to explain when they are permitted than to just reject them for the current type.", "author": "tvernum", "createdAt": "2020-01-13T04:39:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMDM0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY2NTQyNA==", "url": "https://github.com/elastic/elasticsearch/pull/50735#discussion_r365665424", "bodyText": "Sure, makes sense, sorry for the half-baked suggestion", "author": "jkakavas", "createdAt": "2020-01-13T07:09:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxMDM0MA=="}], "type": "inlineReview"}, {"oid": "736057ac7dad86aff988562080b2df6de3ef2ab8", "url": "https://github.com/elastic/elasticsearch/commit/736057ac7dad86aff988562080b2df6de3ef2ab8", "message": "Update Rest tests", "committedDate": "2020-01-13T02:59:57Z", "type": "commit"}, {"oid": "f3c54d6372cd0aa7b74a71941398b1e448042e3d", "url": "https://github.com/elastic/elasticsearch/commit/f3c54d6372cd0aa7b74a71941398b1e448042e3d", "message": "Merge branch 'master' into enterprise-license/max_resource_units", "committedDate": "2020-01-13T03:00:11Z", "type": "commit"}, {"oid": "c7e537dc03677d8e4c2ba62a9799c3c1fd216602", "url": "https://github.com/elastic/elasticsearch/commit/c7e537dc03677d8e4c2ba62a9799c3c1fd216602", "message": "Fix self generated (trial) enterprise licenses", "committedDate": "2020-01-13T03:47:52Z", "type": "commit"}, {"oid": "a02c11de1747fd6c3d6582239ef92862734215b6", "url": "https://github.com/elastic/elasticsearch/commit/a02c11de1747fd6c3d6582239ef92862734215b6", "message": "Fix another broken test", "committedDate": "2020-01-13T03:51:23Z", "type": "commit"}, {"oid": "fbfe58c749696b0eb54d7ade84f9eaf7627e533d", "url": "https://github.com/elastic/elasticsearch/commit/fbfe58c749696b0eb54d7ade84f9eaf7627e533d", "message": "Update validation messages", "committedDate": "2020-01-13T05:28:14Z", "type": "commit"}]}