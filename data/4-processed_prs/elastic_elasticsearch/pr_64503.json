{"pr_number": 64503, "pr_title": "Add doc_count field mapper", "pr_createdAt": "2020-11-02T20:06:29Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64503", "timeline": [{"oid": "7a9632c199ad6d25c4899ffee066ef33d93bc152", "url": "https://github.com/elastic/elasticsearch/commit/7a9632c199ad6d25c4899ffee066ef33d93bc152", "message": "Initial version of doc_count field mapper\n\nadded tests\n\nBuild fixes\n\nAdded tests for doc_count fieldmapper\n\ndoc count tests\n\nResolve conflicts after merge from master\n\nAdded yaml test for doc_count field type\n\nMinor changes to test\n\nFix issue with not-registering field mapper\n\nSimplify terms agg test\n\nAdd doc_count provider in the buckets aggregator\n\nInitialize doc_count provider once\n\ndoc_count provider is initialized once in the\nbuckets agg constructor.\n\nAdded tests for FieldBasedDocCountProvider\n\nAdded more tests to DocCountFieldMapper\n\nUpdated branch to fix build after merge\n\nAdded validation for single doc_count field\n\nAdded validation to ensure only a single doc_count\nfield exists in the mapping\n\nAdded version skips to fix broken tests\n\nAdded documentation for doc_count\n\nChanges to address review comments:\n\n- Minor doc change\n- Added yml test that merges template with multiple doc_count\n- Changed DocCountFieldType indexing to TextSearchInfo.NONE\n\nUse _doc_count as Lucene field for doc count\n\nMinor change: field rename\n\nMinor change to yml test.\n\nFix errors from merge\n\nConverted _doc_count to metadata field type\n\nThrow an error if parsed value is not a number\n\nMake _doc_count field a metadata field\n\nFixed broken tests\n\nFix bug in low cardinality ordinal terms aggs\n\nUpdate docs that _doc_count is a metadata field\n\nFix broken ML tests\n\nFix errors after merge\n\nAddressed review comments\n\nAddressed reviewer comments\n\nAdded DocCountFieldTypeTests\n\nMake composite agg respect _doc_count field\n\nCleaned up/simplified DocCountProvider class\n\nDocCountProvider rethrows IOException instead of swallowing it\n\nSet familyTypeName of _doc_count to integer\n\nRevert changes to AggregatorTestCase\n\nDoc changes", "committedDate": "2020-11-02T19:54:20Z", "type": "commit"}, {"oid": "a46c8ea96aaefc62b289defa777dcab1e3f2a634", "url": "https://github.com/elastic/elasticsearch/commit/a46c8ea96aaefc62b289defa777dcab1e3f2a634", "message": "Exclude _doc_count from SQL results that made tests fail", "committedDate": "2020-11-02T20:35:31Z", "type": "commit"}, {"oid": "29c39bbe0348597a624ae20f03e895f2dec79fd4", "url": "https://github.com/elastic/elasticsearch/commit/29c39bbe0348597a624ae20f03e895f2dec79fd4", "message": "Converted list to set, since contains() is used", "committedDate": "2020-11-02T20:55:50Z", "type": "commit"}, {"oid": "ad67789881683bdc6a4c57db6a18575b4f25b9b3", "url": "https://github.com/elastic/elasticsearch/commit/ad67789881683bdc6a4c57db6a18575b4f25b9b3", "message": "Changed family type of doc_count from int to long", "committedDate": "2020-11-02T20:56:49Z", "type": "commit"}, {"oid": "b69c5e93d8cc4def7d2ab094b8a2ace576dd4bce", "url": "https://github.com/elastic/elasticsearch/commit/b69c5e93d8cc4def7d2ab094b8a2ace576dd4bce", "message": "Added _doc_count to SQL IndexResolverTests", "committedDate": "2020-11-03T12:56:20Z", "type": "commit"}, {"oid": "330d2b74f93c71707e4192ad07c9a6a47d451575", "url": "https://github.com/elastic/elasticsearch/commit/330d2b74f93c71707e4192ad07c9a6a47d451575", "message": "Merge branch 'master' into doc_count-field-mapper_master", "committedDate": "2020-11-03T13:00:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM4MzQ2MA==", "url": "https://github.com/elastic/elasticsearch/pull/64503#discussion_r530383460", "bodyText": "maybe add the value that was parsed to the error message? this would make issues easier to investigate", "author": "jpountz", "createdAt": "2020-11-25T13:44:17Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/DocCountFieldMapper.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.index.mapper;\n+\n+import org.apache.lucene.document.Field;\n+import org.apache.lucene.document.NumericDocValuesField;\n+import org.apache.lucene.search.DocValuesFieldExistsQuery;\n+import org.apache.lucene.search.Query;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.common.xcontent.XContentParserUtils;\n+import org.elasticsearch.index.query.QueryShardContext;\n+import org.elasticsearch.index.query.QueryShardException;\n+import org.elasticsearch.search.lookup.SearchLookup;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/** Mapper for the doc_count field. */\n+public class DocCountFieldMapper extends MetadataFieldMapper {\n+\n+    public static final String NAME = \"_doc_count\";\n+    public static final String CONTENT_TYPE = \"_doc_count\";\n+\n+    public static final TypeParser PARSER = new ConfigurableTypeParser(\n+        c -> new DocCountFieldMapper(),\n+        c -> new DocCountFieldMapper.Builder());\n+\n+    static class Builder extends MetadataFieldMapper.Builder {\n+\n+        Builder() {\n+            super(NAME);\n+        }\n+\n+        @Override\n+        protected List<Parameter<?>> getParameters() {\n+            return Collections.emptyList();\n+        }\n+\n+        @Override\n+        public DocCountFieldMapper build(BuilderContext context) {\n+            return new DocCountFieldMapper();\n+        }\n+    }\n+\n+    public static final class DocCountFieldType extends MappedFieldType {\n+\n+        public static final DocCountFieldType INSTANCE = new DocCountFieldType();\n+\n+        private static final Long defaultValue = 1L;\n+\n+        public DocCountFieldType() {\n+            super(NAME, false, false, true, TextSearchInfo.NONE,  Collections.emptyMap());\n+        }\n+\n+        @Override\n+        public String typeName() {\n+            return CONTENT_TYPE;\n+        }\n+\n+        @Override\n+        public String familyTypeName() {\n+            return NumberFieldMapper.NumberType.LONG.typeName();\n+        }\n+\n+        @Override\n+        public Query existsQuery(QueryShardContext context) {\n+            return new DocValuesFieldExistsQuery(NAME);\n+        }\n+\n+        @Override\n+        public Query termQuery(Object value, QueryShardContext context) {\n+            throw new QueryShardException(context, \"Field [\" + name() + \"] of type [\" + typeName() + \"] is not searchable\");\n+        }\n+\n+        @Override\n+        public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n+            if (format != null) {\n+                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n+            }\n+\n+            return new SourceValueFetcher(name(), mapperService, defaultValue) {\n+                @Override\n+                protected Object parseSourceValue(Object value) {\n+                    if (\"\".equals(value)) {\n+                        return defaultValue;\n+                    } else {\n+                        return NumberFieldMapper.NumberType.objectToLong(value, false);\n+                    }\n+                }\n+            };\n+        }\n+    }\n+\n+    private DocCountFieldMapper() {\n+        super(DocCountFieldType.INSTANCE);\n+    }\n+\n+    @Override\n+    protected void parseCreateField(ParseContext context) throws IOException {\n+        XContentParser parser = context.parser();\n+        XContentParserUtils.ensureExpectedToken(XContentParser.Token.VALUE_NUMBER, parser.currentToken(), parser);\n+\n+        long value = parser.longValue(false);\n+        if (value <= 0) {\n+            throw new IllegalArgumentException(\"Field [\" + fieldType().name() + \"] must be a positive integer.\");", "originalCommit": "330d2b74f93c71707e4192ad07c9a6a47d451575", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAxMDEwMA==", "url": "https://github.com/elastic/elasticsearch/pull/64503#discussion_r534010100", "bodyText": "@jpountz thanks for the input. Now that this has been merged, I will push this change in a subsequent PR.", "author": "csoulios", "createdAt": "2020-12-02T09:18:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDM4MzQ2MA=="}], "type": "inlineReview"}]}