{"pr_number": 50748, "pr_title": "[DOCS] Reformat unique token filter docs", "pr_createdAt": "2020-01-08T15:49:34Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/50748", "timeline": [{"oid": "44086c42cabc80350b6bc2a27265dfec7c119347", "url": "https://github.com/elastic/elasticsearch/commit/44086c42cabc80350b6bc2a27265dfec7c119347", "message": "[DOCS] Reformat unique token filter docs\n\n* Updates the description\n* Adds analyze, custom analyzer, and custom filter snippets\n* Adds parameter documentation", "committedDate": "2020-01-08T15:41:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwMjQ4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/50748#discussion_r364302481", "bodyText": "@romseygeek Do you know if there's any reason for users to prefer one of these filters over another? If so, I can note that here.", "author": "jrodewig", "createdAt": "2020-01-08T15:51:47Z", "path": "docs/reference/analysis/tokenfilters/unique-tokenfilter.asciidoc", "diffHunk": "@@ -4,7 +4,147 @@\n <titleabbrev>Unique</titleabbrev>\n ++++\n \n-The `unique` token filter can be used to only index unique tokens during\n-analysis. By default it is applied on all the token stream. If\n-`only_on_same_position` is set to `true`, it will only remove duplicate\n-tokens on the same position.\n+Removes duplicate tokens from a stream. For example, you can use the `unique`\n+filter to change `the lazy lazy dog` to `the lazy dog`.\n+\n+If the `only_on_same_position` parameter is set to `true`, the `unique` filter\n+removes only duplicate tokens _in the same position_.\n+\n+[NOTE]\n+====\n+When `only_on_same_position` is `true`, the `unique` filter works the same as\n+<<analysis-remove-duplicates-tokenfilter,`remove_duplicates`>> filter.\n+====", "originalCommit": "44086c42cabc80350b6bc2a27265dfec7c119347", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3NTgyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/50748#discussion_r371675821", "bodyText": "Sorry, missed this! unique has the ability to work over an entire token stream, while remove_duplicates looks only at consecutive tokens, but other than that they are identical.", "author": "romseygeek", "createdAt": "2020-01-28T09:01:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwMjQ4MQ=="}], "type": "inlineReview"}]}