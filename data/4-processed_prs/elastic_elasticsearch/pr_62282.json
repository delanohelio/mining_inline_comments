{"pr_number": 62282, "pr_title": "Improve Efficiency of ClusterApplierService Iteration", "pr_createdAt": "2020-09-13T19:43:05Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62282", "timeline": [{"oid": "3bc8b422ab14fbc4cf9b6f61436bea50f56a62b4", "url": "https://github.com/elastic/elasticsearch/commit/3bc8b422ab14fbc4cf9b6f61436bea50f56a62b4", "message": "Improve Efficiency of ClusterApplierService Iteration\n\nThe complexity of removing a timeout listener was `O(n)` which\nmeans that in case of many queued up CS update tasks (such as in the\ncase of an avalance of dynamic mapping updates) we're dealing with\nquadratic complexity for timing out N tasks which was observed to be\nan issue in practice.\n\nThis PR makes the complexity of timing out a task `O(1)` and generally\nsimplifies the iteration logic of listeners and applies to be a little\nmore efficient and inline better.", "committedDate": "2020-09-13T19:42:41Z", "type": "commit"}, {"oid": "72ecd170ded3929f3992367eced272173d93d7e0", "url": "https://github.com/elastic/elasticsearch/commit/72ecd170ded3929f3992367eced272173d93d7e0", "message": "Merge remote-tracking branch 'elastic/master' into save-some-cycles-cluster-applier-service", "committedDate": "2020-09-13T19:46:38Z", "type": "commit"}, {"oid": "60361a50229c1a200103effb437d95b40394c26c", "url": "https://github.com/elastic/elasticsearch/commit/60361a50229c1a200103effb437d95b40394c26c", "message": "Merge remote-tracking branch 'elastic/master' into save-some-cycles-cluster-applier-service", "committedDate": "2020-09-14T08:10:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg1ODQ1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/62282#discussion_r487858456", "bodyText": "The existing code seems to accept that addTimeoutListener is called multiple times for the same listener. It is not entirely clear to me that this cannot happen? If it does, a previous notifyTImeout will now go lost and not be cancelled.\nWe should at least add an assert here to verify, but maybe you can also do a bit of checking of whether there are legitimate cases where this could happen?", "author": "henningandersen", "createdAt": "2020-09-14T12:03:41Z", "path": "server/src/main/java/org/elasticsearch/cluster/service/ClusterApplierService.java", "diffHunk": "@@ -291,12 +274,11 @@ public void addTimeoutListener(@Nullable final TimeValue timeout, final TimeoutC\n             threadPoolExecutor.execute(new SourcePrioritizedRunnable(Priority.HIGH, \"_add_listener_\") {\n                 @Override\n                 public void run() {\n+                    final NotifyTimeout notifyTimeout = new NotifyTimeout(listener, timeout);\n                     if (timeout != null) {\n-                        NotifyTimeout notifyTimeout = new NotifyTimeout(listener, timeout);\n                         notifyTimeout.cancellable = threadPool.schedule(notifyTimeout, timeout, ThreadPool.Names.GENERIC);\n-                        onGoingTimeouts.add(notifyTimeout);\n                     }\n-                    timeoutClusterStateListeners.add(listener);\n+                    timeoutClusterStateListeners.put(listener, notifyTimeout);", "originalCommit": "60361a50229c1a200103effb437d95b40394c26c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkzOTU3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/62282#discussion_r487939579", "bodyText": "I think tit's impossible for this to happen. Only ClusterStateObserver uses this method and it's using this code to make sure we only add a listener for it once:\n            final ObservingContext context = new ObservingContext(listener, statePredicate);\n            if (!observingContext.compareAndSet(null, context)) {\n                throw new ElasticsearchException(\"already waiting for a cluster state change\");\n            }\n            clusterApplierService.addTimeoutListener(timeoutTimeLeftMS == null ?\n                null : new TimeValue(timeoutTimeLeftMS), clusterStateListener);\n-> I'm adding an assertion, I think that should be fine.", "author": "original-brownbear", "createdAt": "2020-09-14T13:55:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg1ODQ1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2MzU1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/62282#discussion_r487863553", "bodyText": "Is there not a race here in that the scheduled task could run before adding the listener to the map below and the scheduled task could have called removeTimeoutListener before it is put into the map?\nI recognize this preserves existing behavior, but if you agree I think it is worth fixing in this PR.", "author": "henningandersen", "createdAt": "2020-09-14T12:12:58Z", "path": "server/src/main/java/org/elasticsearch/cluster/service/ClusterApplierService.java", "diffHunk": "@@ -291,12 +274,11 @@ public void addTimeoutListener(@Nullable final TimeValue timeout, final TimeoutC\n             threadPoolExecutor.execute(new SourcePrioritizedRunnable(Priority.HIGH, \"_add_listener_\") {\n                 @Override\n                 public void run() {\n+                    final NotifyTimeout notifyTimeout = new NotifyTimeout(listener, timeout);\n                     if (timeout != null) {\n-                        NotifyTimeout notifyTimeout = new NotifyTimeout(listener, timeout);\n                         notifyTimeout.cancellable = threadPool.schedule(notifyTimeout, timeout, ThreadPool.Names.GENERIC);", "originalCommit": "60361a50229c1a200103effb437d95b40394c26c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk0MDE1NA==", "url": "https://github.com/elastic/elasticsearch/pull/62282#discussion_r487940154", "bodyText": "Yea it's a trivial fix I think, I'll clean it up here.", "author": "original-brownbear", "createdAt": "2020-09-14T13:55:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2MzU1Mw=="}], "type": "inlineReview"}, {"oid": "b5734f4647b41d377744fe2dae223670f4581882", "url": "https://github.com/elastic/elasticsearch/commit/b5734f4647b41d377744fe2dae223670f4581882", "message": "Merge remote-tracking branch 'elastic/master' into save-some-cycles-cluster-applier-service", "committedDate": "2020-09-14T13:29:09Z", "type": "commit"}, {"oid": "98fe04a520e502a6f1e915aadbf8e9835b2e475f", "url": "https://github.com/elastic/elasticsearch/commit/98fe04a520e502a6f1e915aadbf8e9835b2e475f", "message": "CR: fix race", "committedDate": "2020-09-14T13:57:09Z", "type": "commit"}]}