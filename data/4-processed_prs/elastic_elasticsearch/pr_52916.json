{"pr_number": 52916, "pr_title": "Document known features on rest-api-spec tests", "pr_createdAt": "2020-02-27T19:43:08Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52916", "timeline": [{"oid": "3c26a7a4018ec8e76303e3f2a9e9261ea7a54a37", "url": "https://github.com/elastic/elasticsearch/commit/3c26a7a4018ec8e76303e3f2a9e9261ea7a54a37", "message": "Document known features on rest-api-spec tests\n\nFeatures dictate wheter a `rest-api-spec` test runner can execute a\ntest. This PR documents all the know features in the java implementation\nof the runner.", "committedDate": "2020-02-27T19:39:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1MDMzNg==", "url": "https://github.com/elastic/elasticsearch/pull/52916#discussion_r394250336", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Allows you use a stashed value in the any key of an object during a `match` operation\n          \n          \n            \n            Allows you to use a stashed value in any key of an object during a `match` assertion", "author": "javanna", "createdAt": "2020-03-18T10:38:32Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/README.asciidoc", "diffHunk": "@@ -133,6 +133,109 @@ by default, thus the related skip sections can be removed from the tests.\n The `features` field can either be a string or an array of strings.\n The skip section requires to specify either a `version` or a `features` list.\n \n+=== Available Features\n+\n+=== `xpack`\n+Requires x-pack to be enabled on the `Elasticsearch` instance the rest test is running against\n+\n+=== `no_xpack`\n+Requires the test to run against an oss distribution of `Elasticsearch`\n+\n+=== `catch_unauthorized`\n+\n+Runner supports `catch: unauthorized` on a `do` operator.\n+\n+=== `default_shards`\n+\n+This test can only run if the cluster is running with the distributions default number of shards.\n+\n+The Java test runner introduces randomness and sometimes overrides the default number of shards to `2`.\n+If the default number of shards is changed, test marked with this feature should *not* run\n+\n+=== `headers`\n+\n+The runner is able to set per request headers on the `do` operation\n+\n+=== `node_selector`\n+\n+Indicates the runner can parse `node_selector` under the `do` operator and use its metadata to select the node to\n+perform the `do` operation on.\n+\n+=== `stash_in_key`\n+\n+Allows you use a stashed value in the any key of an object during a `match` operation", "originalCommit": "3c26a7a4018ec8e76303e3f2a9e9261ea7a54a37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1MDc0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/52916#discussion_r394250745", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Used only in the doc snippet tests. Allow you to do easie replacements using a special `$_path` marker.\n          \n          \n            \n            Used only in the doc snippet tests. Allow you to do ease replacements using a special `$_path` marker.", "author": "javanna", "createdAt": "2020-03-18T10:39:16Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/README.asciidoc", "diffHunk": "@@ -133,6 +133,109 @@ by default, thus the related skip sections can be removed from the tests.\n The `features` field can either be a string or an array of strings.\n The skip section requires to specify either a `version` or a `features` list.\n \n+=== Available Features\n+\n+=== `xpack`\n+Requires x-pack to be enabled on the `Elasticsearch` instance the rest test is running against\n+\n+=== `no_xpack`\n+Requires the test to run against an oss distribution of `Elasticsearch`\n+\n+=== `catch_unauthorized`\n+\n+Runner supports `catch: unauthorized` on a `do` operator.\n+\n+=== `default_shards`\n+\n+This test can only run if the cluster is running with the distributions default number of shards.\n+\n+The Java test runner introduces randomness and sometimes overrides the default number of shards to `2`.\n+If the default number of shards is changed, test marked with this feature should *not* run\n+\n+=== `headers`\n+\n+The runner is able to set per request headers on the `do` operation\n+\n+=== `node_selector`\n+\n+Indicates the runner can parse `node_selector` under the `do` operator and use its metadata to select the node to\n+perform the `do` operation on.\n+\n+=== `stash_in_key`\n+\n+Allows you use a stashed value in the any key of an object during a `match` operation\n+\n+....\n+- set: {nodes.$master.http.publish_address: host}\n+- match:\n+    $body:\n+      {\n+        \"nodes\": {\n+          $host: {\n+            ... stuff in here ...\n+          }\n+        }\n+     }\n+....\n+\n+=== `stash_in_path`\n+\n+Allows a stashed value to be referenced in path lookups as a single token. E.g:\n+\n+....\n+path.$stash.value\n+....\n+\n+=== `embedded_stash_key`\n+\n+Allows a stashed key to appear anywhere in the path:\n+\n+....\n+field1.e${placeholder}ments.element1\n+....\n+\n+=== `stash_path_replace`\n+Used only in the doc snippet tests. Allow you to do easie replacements using a special `$_path` marker.", "originalCommit": "3c26a7a4018ec8e76303e3f2a9e9261ea7a54a37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1MTY2OA==", "url": "https://github.com/elastic/elasticsearch/pull/52916#discussion_r394251668", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Allows a stashed key to appear anywhere in the path:\n          \n          \n            \n            Allows a stashed key to appear anywhere in the path (note the placeholder needs to be within curly brackets too in this case):", "author": "javanna", "createdAt": "2020-03-18T10:40:46Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/README.asciidoc", "diffHunk": "@@ -133,6 +133,109 @@ by default, thus the related skip sections can be removed from the tests.\n The `features` field can either be a string or an array of strings.\n The skip section requires to specify either a `version` or a `features` list.\n \n+=== Available Features\n+\n+=== `xpack`\n+Requires x-pack to be enabled on the `Elasticsearch` instance the rest test is running against\n+\n+=== `no_xpack`\n+Requires the test to run against an oss distribution of `Elasticsearch`\n+\n+=== `catch_unauthorized`\n+\n+Runner supports `catch: unauthorized` on a `do` operator.\n+\n+=== `default_shards`\n+\n+This test can only run if the cluster is running with the distributions default number of shards.\n+\n+The Java test runner introduces randomness and sometimes overrides the default number of shards to `2`.\n+If the default number of shards is changed, test marked with this feature should *not* run\n+\n+=== `headers`\n+\n+The runner is able to set per request headers on the `do` operation\n+\n+=== `node_selector`\n+\n+Indicates the runner can parse `node_selector` under the `do` operator and use its metadata to select the node to\n+perform the `do` operation on.\n+\n+=== `stash_in_key`\n+\n+Allows you use a stashed value in the any key of an object during a `match` operation\n+\n+....\n+- set: {nodes.$master.http.publish_address: host}\n+- match:\n+    $body:\n+      {\n+        \"nodes\": {\n+          $host: {\n+            ... stuff in here ...\n+          }\n+        }\n+     }\n+....\n+\n+=== `stash_in_path`\n+\n+Allows a stashed value to be referenced in path lookups as a single token. E.g:\n+\n+....\n+path.$stash.value\n+....\n+\n+=== `embedded_stash_key`\n+\n+Allows a stashed key to appear anywhere in the path:", "originalCommit": "3c26a7a4018ec8e76303e3f2a9e9261ea7a54a37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "99193072aa05318134e695693ac90cc44a001e12", "url": "https://github.com/elastic/elasticsearch/commit/99193072aa05318134e695693ac90cc44a001e12", "message": "Apply suggestions from code review\n\nCo-Authored-By: Luca Cavanna <javanna@users.noreply.github.com>", "committedDate": "2020-03-25T15:27:03Z", "type": "commit"}]}