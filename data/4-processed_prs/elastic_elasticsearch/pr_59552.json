{"pr_number": 59552, "pr_title": "EQL: Improve retrieval of results", "pr_createdAt": "2020-07-14T16:07:34Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59552", "timeline": [{"oid": "fb9a5168b2f1ac91ad5f4448a2bd2ba0340279e7", "url": "https://github.com/elastic/elasticsearch/commit/fb9a5168b2f1ac91ad5f4448a2bd2ba0340279e7", "message": "EQL: Improve retrieval of results\n\nInstead of retrieving whole SearchHit, get just a reference and postpone\nthe document retrieval when assembling the final results.\nRemove sort information from results to make them consistent\nMove TumblingWindow under the sequence package", "committedDate": "2020-07-14T16:02:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3MjQ5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/59552#discussion_r454472491", "bodyText": "@jrodewig removed return of sort.", "author": "costin", "createdAt": "2020-07-14T16:10:18Z", "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -564,10 +564,7 @@ the events in ascending, lexicographic order.\n             \"name\": \"cmd.exe\",\n             \"path\": \"C:\\\\Windows\\\\System32\\\\cmd.exe\"\n           }\n-        },\n-        \"sort\": [", "originalCommit": "fb9a5168b2f1ac91ad5f4448a2bd2ba0340279e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3MzA4OA==", "url": "https://github.com/elastic/elasticsearch/pull/59552#discussion_r454473088", "bodyText": "Thanks for the heads up!", "author": "jrodewig", "createdAt": "2020-07-14T16:11:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3MjQ5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3MzM5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/59552#discussion_r454473399", "bodyText": "@jrodewig since I've removed the fields from the results, I had to remove this whole section (the two fields are essentially used only internally and get removed before being returned).", "author": "costin", "createdAt": "2020-07-14T16:11:39Z", "path": "docs/reference/eql/search.asciidoc", "diffHunk": "@@ -495,15 +477,7 @@ GET /sec_logs/_eql/search\n ----\n // TEST[s/search/search\\?filter_path\\=\\-\\*\\.events\\.\\*fields/]\n \n-The API returns the following response. Note the `sort` property of each\n-matching event contains an array of two items:\n-\n-* The first item is the event's <<eql-search-api-timestamp-field,timestamp>>,\n-converted to milliseconds since the https://en.wikipedia.org/wiki/Unix_time[Unix\n-epoch].\n-\n-* The second item is the event's `event.id` value. This value is used as a sort\n-tiebreaker for events with the same timestamp.\n+The API returns the following response.\n ", "originalCommit": "fb9a5168b2f1ac91ad5f4448a2bd2ba0340279e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3ODYyMA==", "url": "https://github.com/elastic/elasticsearch/pull/59552#discussion_r454478620", "bodyText": "That works. I can review the docs after this PR merges.", "author": "jrodewig", "createdAt": "2020-07-14T16:19:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3MzM5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3NDI0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/59552#discussion_r454474249", "bodyText": "@jrodewig Normally these need to be set as well however I didn't want to make this PR longer. For event queries we do return these fields however the docs doesn't include them for sequences.\nConsidering the tight deadline, not sure what's the easiest fix until the next release?", "author": "costin", "createdAt": "2020-07-14T16:12:58Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/search/BasicQueryClient.java", "diffHunk": "@@ -49,4 +67,69 @@ public void query(QueryRequest request, ActionListener<Payload> listener) {\n         SearchRequest search = prepareRequest(client, searchSource, false, indices);\n         client.search(search, new BasicListener(listener));\n     }\n-}\n+\n+    @Override\n+    public void get(Iterable<List<HitReference>> refs, ActionListener<List<List<SearchHit>>> listener) {\n+        MultiGetRequestBuilder requestBuilder = client.prepareMultiGet();\n+        // no need for real-time\n+        requestBuilder.setRealtime(false)\n+                      .setRefresh(false);\n+\n+        int sz = 0;\n+\n+        for (List<HitReference> list : refs) {\n+            sz = list.size();\n+            for (HitReference ref : list) {\n+                Item item = new Item(ref.index(), ref.id());\n+                // make sure to get the whole source\n+                item.fetchSourceContext(FetchSourceContext.FETCH_SOURCE);\n+                requestBuilder.add(item);\n+            }\n+        }\n+        \n+        final int listSize = sz;\n+        client.multiGet(requestBuilder.request(), wrap(r -> {\n+            List<List<SearchHit>> hits = new ArrayList<>(r.getResponses().length / listSize);\n+            \n+            List<SearchHit> sequence = new ArrayList<>(listSize);\n+            \n+            // copy streams - reused across the whole loop\n+            PipedInputStream in = new PipedInputStream();\n+            PipedOutputStream out = new PipedOutputStream(in);\n+            StreamOutput so = new OutputStreamStreamOutput(out);\n+            StreamInput si = new InputStreamStreamInput(in);\n+\n+            int counter = 0;\n+            for (MultiGetItemResponse mgr : r.getResponses()) {\n+                if (mgr.isFailed()) {\n+                    listener.onFailure(mgr.getFailure().getFailure());\n+                    return;\n+                }\n+                // HACK: the only way to get GetResult is to serialize it and then load it back :(\n+                mgr.getResponse().writeTo(so);\n+                GetResult result = new GetResult(si);\n+\n+                SearchHit hit = new SearchHit(-1, result.getId(), result.getDocumentFields(), result.getMetadataFields());\n+                hit.sourceRef(result.internalSourceRef());\n+                // need to create these objects to set the index\n+                hit.shard(new SearchShardTarget(null, new ShardId(result.getIndex(), \"\", -1), null, null));\n+\n+                //hit.setSeqNo(result.getSeqNo());\n+                //hit.setPrimaryTerm(result.getPrimaryTerm());\n+                //hit.version(result.getVersion());", "originalCommit": "fb9a5168b2f1ac91ad5f4448a2bd2ba0340279e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ4MDk3OA==", "url": "https://github.com/elastic/elasticsearch/pull/59552#discussion_r454480978", "bodyText": "Just add a // TESTRESPONSE[skip: response format changed] to any failing response for now.\nThat should skip the CI tests for it. I can go in an fix up any skipped test responses as part of a follow-up PR.", "author": "jrodewig", "createdAt": "2020-07-14T16:23:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3NDI0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ5MjU1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/59552#discussion_r454492559", "bodyText": "I skipped affected docs tests here: 4c3a6bf and f778181\nI un-commented these lines and also tested locally to check that the docs snippet CI passed. You can add these to the response if wanted and the CI shouldn't fail.", "author": "jrodewig", "createdAt": "2020-07-14T16:40:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3NDI0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0ODUxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/59552#discussion_r454548515", "bodyText": "Thanks @jrodewig. I've removed the comments for said lines - let's see what the build thinks of it.", "author": "costin", "createdAt": "2020-07-14T18:11:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3NDI0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3NDQ3OA==", "url": "https://github.com/elastic/elasticsearch/pull/59552#discussion_r454474478", "bodyText": "Need to remove this as well.", "author": "costin", "createdAt": "2020-07-14T16:13:20Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/execution/sequence/SequenceMatcher.java", "diffHunk": "@@ -207,14 +206,19 @@ public boolean hasCandidates(int stage) {\n         return false;\n     }\n \n-    public Payload payload(long startTime) {\n-        TimeValue tookTime = new TimeValue(System.currentTimeMillis() - startTime);\n-        List<Sequence> view = limit != null ? limit.view(completed) : completed;\n-        Payload p = new SequencePayload(view, false, tookTime);\n-        clear();\n-        return p;\n+\n+    public List<Sequence> completed() {\n+        return limit != null ? limit.view(completed) : completed;\n     }\n \n+    //    public Payload payload(long startTime) {\n+    //        TimeValue tookTime = new TimeValue(System.currentTimeMillis() - startTime);\n+    //\n+    //        Payload p = new SequencePayload(view, false, tookTime);\n+    //        clear();\n+    //        return p;\n+    //    }", "originalCommit": "fb9a5168b2f1ac91ad5f4448a2bd2ba0340279e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ4MTEyMw==", "url": "https://github.com/elastic/elasticsearch/pull/59552#discussion_r454481123", "bodyText": "// TESTRESPONSE[skip: response format changed] should work here too. I can fix this as part of a follow-up PR.", "author": "jrodewig", "createdAt": "2020-07-14T16:23:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3NDQ3OA=="}], "type": "inlineReview"}, {"oid": "e61a1fd69517c39aee51bb2a2652fd890b732747", "url": "https://github.com/elastic/elasticsearch/commit/e61a1fd69517c39aee51bb2a2652fd890b732747", "message": "Remove left-over comment\nExplicitly drop the state machine before returning the results", "committedDate": "2020-07-14T16:17:46Z", "type": "commit"}, {"oid": "4c3a6bfb44213d3d159df3c793674082dc9bd3dc", "url": "https://github.com/elastic/elasticsearch/commit/4c3a6bfb44213d3d159df3c793674082dc9bd3dc", "message": "Skip several EQL responses", "committedDate": "2020-07-14T16:39:04Z", "type": "commit"}, {"oid": "f77818123509fe51e5fed983d3de5859970a4c65", "url": "https://github.com/elastic/elasticsearch/commit/f77818123509fe51e5fed983d3de5859970a4c65", "message": "Move misplaced test comment", "committedDate": "2020-07-14T16:49:18Z", "type": "commit"}, {"oid": "c2d463e359afbe86651985e6c567a881328b5356", "url": "https://github.com/elastic/elasticsearch/commit/c2d463e359afbe86651985e6c567a881328b5356", "message": "Field extractors are used only for ordinals so make them use docvalues\nby default\n\nDon't retrieve source while matching", "committedDate": "2020-07-14T17:33:53Z", "type": "commit"}, {"oid": "31e3fa94f319ca717884d49d74a810e71cf47e9f", "url": "https://github.com/elastic/elasticsearch/commit/31e3fa94f319ca717884d49d74a810e71cf47e9f", "message": "Improve source exclusion", "committedDate": "2020-07-14T17:33:53Z", "type": "commit"}, {"oid": "303891fec0859167be0fa2da0c8332db9df26bc7", "url": "https://github.com/elastic/elasticsearch/commit/303891fec0859167be0fa2da0c8332db9df26bc7", "message": "Move fetch source handling inside SourceGenerator", "committedDate": "2020-07-14T18:09:24Z", "type": "commit"}, {"oid": "c9598c7bb3498b28218a5a9ac730eb35244d7a7f", "url": "https://github.com/elastic/elasticsearch/commit/c9598c7bb3498b28218a5a9ac730eb35244d7a7f", "message": "Add more fields to generated SearchHit", "committedDate": "2020-07-14T18:09:50Z", "type": "commit"}]}