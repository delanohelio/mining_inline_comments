{"pr_number": 52492, "pr_title": "Do not lock on reads of XPackLicenseState", "pr_createdAt": "2020-02-18T19:46:53Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52492", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNDg1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/52492#discussion_r380934856", "bodyText": "Suggested change", "author": "jaymode", "createdAt": "2020-02-18T21:06:57Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -555,9 +594,12 @@ public synchronized boolean isMonitoringClusterAlertsAllowed() {\n      *\n      * @return {@code true} if the user is allowed to modify the retention. Otherwise {@code false}.\n      */\n-    public synchronized boolean isUpdateRetentionAllowed() {\n-        final OperationMode mode = status.mode;\n-        return mode != OperationMode.BASIC && mode != OperationMode.MISSING;\n+    public boolean isUpdateRetentionAllowed() {\n+        return checkAgainstStatus(status -> {\n+            final OperationMode mode = status.mode;\n+            return mode != OperationMode.BASIC && mode != OperationMode.MISSING;\n+        });\n+", "originalCommit": "d87144f4257304fb25eccb9d7e433f9bf42cf3ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNDkzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/52492#discussion_r380934931", "bodyText": "Suggested change", "author": "jaymode", "createdAt": "2020-02-18T21:07:08Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -593,9 +637,9 @@ public synchronized boolean isGraphAllowed() {\n      * @return {@code true} as long as the license is valid. Otherwise\n      *         {@code false}.\n      */\n-    public synchronized boolean isMachineLearningAllowed() {\n-        final Status currentStatus = status;\n-        return currentStatus.active && isMachineLearningAllowedForOperationMode(currentStatus.mode);\n+    public boolean isMachineLearningAllowed() {\n+        return checkAgainstStatus(status -> status.active && isMachineLearningAllowedForOperationMode(status.mode));\n+", "originalCommit": "d87144f4257304fb25eccb9d7e433f9bf42cf3ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTAyNA==", "url": "https://github.com/elastic/elasticsearch/pull/52492#discussion_r380935024", "bodyText": "Suggested change", "author": "jaymode", "createdAt": "2020-02-18T21:07:19Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -684,10 +726,9 @@ public synchronized boolean isUpgradeAllowed() {\n      *         {@code false}.\n      */\n     public boolean isIndexLifecycleAllowed() {\n-        // status is volatile\n-        Status localStatus = status;\n         // Should work on all active licenses\n-        return localStatus.active;\n+        return checkAgainstStatus(status -> status.active);\n+", "originalCommit": "d87144f4257304fb25eccb9d7e433f9bf42cf3ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTE3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/52492#discussion_r380935179", "bodyText": "Suggested change", "author": "jaymode", "createdAt": "2020-02-18T21:07:41Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -780,32 +821,30 @@ public synchronized boolean isOdbcAllowed() {\n      *         {@code false}.\n      */\n     public boolean isSpatialAllowed() {\n-        // status is volatile\n-        Status localStatus = status;\n         // Should work on all active licenses\n-        return localStatus.active;\n+        return checkAgainstStatus(status -> status.active);\n     }\n \n     /**\n      * Analytics is always available as long as there is a valid license\n      *\n      * @return true if the license is active\n      */\n-    public synchronized boolean isAnalyticsAllowed() {\n-        return status.active;\n-    }\n-\n-    public synchronized boolean isTrialLicense() {\n-        return status.mode == OperationMode.TRIAL;\n+    public boolean isAnalyticsAllowed() {\n+        return checkAgainstStatus(status -> status.active);\n     }\n \n     /**\n      * @return true if security is available to be used with the current license type\n      */\n-    public synchronized boolean isSecurityAvailable() {\n-        OperationMode mode = status.mode;\n-        return mode == OperationMode.GOLD || mode == OperationMode.PLATINUM || mode == OperationMode.STANDARD ||\n+    public boolean isSecurityAvailable() {\n+        return checkAgainstStatus(status -> {\n+            OperationMode mode = status.mode;\n+            return mode == OperationMode.GOLD || mode == OperationMode.PLATINUM || mode == OperationMode.STANDARD ||\n                 mode == OperationMode.TRIAL || mode == OperationMode.BASIC;\n+        });\n+\n+", "originalCommit": "d87144f4257304fb25eccb9d7e433f9bf42cf3ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTIxOA==", "url": "https://github.com/elastic/elasticsearch/pull/52492#discussion_r380935218", "bodyText": "Suggested change", "author": "jaymode", "createdAt": "2020-02-18T21:07:47Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/XPackLicenseState.java", "diffHunk": "@@ -780,32 +821,30 @@ public synchronized boolean isOdbcAllowed() {\n      *         {@code false}.\n      */\n     public boolean isSpatialAllowed() {\n-        // status is volatile\n-        Status localStatus = status;\n         // Should work on all active licenses\n-        return localStatus.active;\n+        return checkAgainstStatus(status -> status.active);\n     }\n \n     /**\n      * Analytics is always available as long as there is a valid license\n      *\n      * @return true if the license is active\n      */\n-    public synchronized boolean isAnalyticsAllowed() {\n-        return status.active;\n-    }\n-\n-    public synchronized boolean isTrialLicense() {\n-        return status.mode == OperationMode.TRIAL;\n+    public boolean isAnalyticsAllowed() {\n+        return checkAgainstStatus(status -> status.active);\n     }\n \n     /**\n      * @return true if security is available to be used with the current license type\n      */\n-    public synchronized boolean isSecurityAvailable() {\n-        OperationMode mode = status.mode;\n-        return mode == OperationMode.GOLD || mode == OperationMode.PLATINUM || mode == OperationMode.STANDARD ||\n+    public boolean isSecurityAvailable() {\n+        return checkAgainstStatus(status -> {\n+            OperationMode mode = status.mode;\n+            return mode == OperationMode.GOLD || mode == OperationMode.PLATINUM || mode == OperationMode.STANDARD ||\n                 mode == OperationMode.TRIAL || mode == OperationMode.BASIC;\n+        });\n+", "originalCommit": "d87144f4257304fb25eccb9d7e433f9bf42cf3ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "48ee863625c6deb454e3f3bc9b50b53e5d600501", "url": "https://github.com/elastic/elasticsearch/commit/48ee863625c6deb454e3f3bc9b50b53e5d600501", "message": "Do not lock on reads of XPackLicenseState (#52437)\n\nXPackLicenseState reads to necessary to validate a number of cluster\r\noperations. This reads occasionally occur on transport threads which\r\nshould not be blocked. Currently we sychronize when reading. However,\r\nthis is unecessary as only a single piece of state is updateable. This\r\ncommit makes this state volatile and removes the locking.", "committedDate": "2020-02-25T21:39:16Z", "type": "commit"}, {"oid": "48ee863625c6deb454e3f3bc9b50b53e5d600501", "url": "https://github.com/elastic/elasticsearch/commit/48ee863625c6deb454e3f3bc9b50b53e5d600501", "message": "Do not lock on reads of XPackLicenseState (#52437)\n\nXPackLicenseState reads to necessary to validate a number of cluster\r\noperations. This reads occasionally occur on transport threads which\r\nshould not be blocked. Currently we sychronize when reading. However,\r\nthis is unecessary as only a single piece of state is updateable. This\r\ncommit makes this state volatile and removes the locking.", "committedDate": "2020-02-25T21:39:16Z", "type": "forcePushed"}]}