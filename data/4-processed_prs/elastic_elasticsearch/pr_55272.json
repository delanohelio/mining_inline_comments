{"pr_number": 55272, "pr_title": "Add pom validation", "pr_createdAt": "2020-04-15T22:45:32Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55272", "timeline": [{"oid": "8c9bc4e2a30bec998c0b90039872bf4cf90afbcb", "url": "https://github.com/elastic/elasticsearch/commit/8c9bc4e2a30bec998c0b90039872bf4cf90afbcb", "message": "Add pom validation\n\nThe pom files for our published artifacts are sent to maven central\nduring Elastic's release process, but we may not found out until then\nthat we have inadvertently broken the pom structure, as has happened\nseveral times before. This commit adds validation of the pom file\nspecifically for the rules required by maven central.", "committedDate": "2020-04-15T22:44:43Z", "type": "commit"}, {"oid": "31448f44e196d781d6ec783b8bde880f0a2af834", "url": "https://github.com/elastic/elasticsearch/commit/31448f44e196d781d6ec783b8bde880f0a2af834", "message": "apply spotless", "committedDate": "2020-04-15T22:58:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE3OTY1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/55272#discussion_r409179656", "bodyText": "FWIW, doing withType here is going to eagerly create those generate pom tasks. But we are in a bit of a pickle becuase using configureEach is going to barf here as you can't register a task in a lazy task config block.\nPerhaps we can key this off of the publications themselves instead of the generate pom task. We know for each publication there's going to be a generate pom task, maybe do that instead? So something like publishing.publications.all { // create validate task }?\nI realize this is being a bit pedantic about not doing eager task creation but this seems like a challenge you're up to \ud83d\ude09", "author": "mark-vieira", "createdAt": "2020-04-15T22:50:50Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PomValidationPlugin.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.gradle.api.Plugin;\n+import org.gradle.api.Project;\n+import org.gradle.api.publish.maven.tasks.GenerateMavenPom;\n+import org.gradle.api.tasks.TaskProvider;\n+\n+/**\n+ * Adds pom validation to every pom generation task.\n+ */\n+public class PomValidationPlugin implements Plugin<Project> {\n+\n+    @Override\n+    public void apply(Project project) {\n+        project.getTasks().withType(GenerateMavenPom.class, generateMavenPom -> {", "originalCommit": "8c9bc4e2a30bec998c0b90039872bf4cf90afbcb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4MDU0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/55272#discussion_r409180541", "bodyText": "Should we make this extend PrecommitTask so it creates a marker file and thus could be UP-TO-DATE when the pom doesn't change? Right now this task will always run because it produces no output.", "author": "mark-vieira", "createdAt": "2020-04-15T22:53:20Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PomValidationTask.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.apache.maven.model.Model;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Reader;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.file.RegularFileProperty;\n+import org.gradle.api.tasks.InputFile;\n+import org.gradle.api.tasks.TaskAction;\n+\n+import java.io.FileReader;\n+import java.util.Collection;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+\n+public class PomValidationTask extends DefaultTask {", "originalCommit": "8c9bc4e2a30bec998c0b90039872bf4cf90afbcb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4MDkzMw==", "url": "https://github.com/elastic/elasticsearch/pull/55272#discussion_r409180933", "bodyText": "We should probably put this in a try-with-resources block.", "author": "mark-vieira", "createdAt": "2020-04-15T22:54:20Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PomValidationTask.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.apache.maven.model.Model;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Reader;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.file.RegularFileProperty;\n+import org.gradle.api.tasks.InputFile;\n+import org.gradle.api.tasks.TaskAction;\n+\n+import java.io.FileReader;\n+import java.util.Collection;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+\n+public class PomValidationTask extends DefaultTask {\n+\n+    private final RegularFileProperty pomFile = getProject().getObjects().fileProperty();\n+\n+    private boolean foundError;\n+\n+    @InputFile\n+    public RegularFileProperty getPomFile() {\n+        return pomFile;\n+    }\n+\n+    @TaskAction\n+    public void checkPom() throws Exception {\n+        MavenXpp3Reader reader = new MavenXpp3Reader();\n+        Model model = reader.read(new FileReader(pomFile.getAsFile().get()));", "originalCommit": "8c9bc4e2a30bec998c0b90039872bf4cf90afbcb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4MzIwMw==", "url": "https://github.com/elastic/elasticsearch/pull/55272#discussion_r409183203", "bodyText": "Maybe add a message like \"see console log for details\".", "author": "mark-vieira", "createdAt": "2020-04-15T23:00:58Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/precommit/PomValidationTask.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.precommit;\n+\n+import org.apache.maven.model.Model;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Reader;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.GradleException;\n+import org.gradle.api.file.RegularFileProperty;\n+import org.gradle.api.tasks.InputFile;\n+import org.gradle.api.tasks.TaskAction;\n+\n+import java.io.FileReader;\n+import java.util.Collection;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+\n+public class PomValidationTask extends DefaultTask {\n+\n+    private final RegularFileProperty pomFile = getProject().getObjects().fileProperty();\n+\n+    private boolean foundError;\n+\n+    @InputFile\n+    public RegularFileProperty getPomFile() {\n+        return pomFile;\n+    }\n+\n+    @TaskAction\n+    public void checkPom() throws Exception {\n+        MavenXpp3Reader reader = new MavenXpp3Reader();\n+        Model model = reader.read(new FileReader(pomFile.getAsFile().get()));\n+\n+        validateString(\"groupId\", model.getGroupId());\n+        validateString(\"artifactId\", model.getArtifactId());\n+        validateString(\"version\", model.getVersion());\n+        validateString(\"name\", model.getName());\n+        validateString(\"description\", model.getDescription());\n+        validateString(\"url\", model.getUrl());\n+\n+        validateCollection(\"licenses\", model.getLicenses(), v -> {\n+            validateString(\"licenses.name\", v.getName());\n+            validateString(\"licenses.url\", v.getUrl());\n+        });\n+\n+        validateCollection(\"developers\", model.getDevelopers(), v -> {\n+            validateString(\"developers.name\", v.getName());\n+            validateString(\"developers.url\", v.getUrl());\n+        });\n+\n+        validateNonNull(\"scm\", model.getScm(), () -> validateString(\"scm.url\", model.getScm().getUrl()));\n+\n+        if (foundError) {\n+            throw new GradleException(\"Pom file [\" + pomFile.getAsFile().get() + \"] failed validation\");", "originalCommit": "31448f44e196d781d6ec783b8bde880f0a2af834", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4NDI0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/55272#discussion_r409184241", "bodyText": "Also, let's use one of these verification failure prefixes so that when we search for failures in Gradle Enterprise, this kinds of failures show up as a \"verification\" failure, which is what it is.", "author": "mark-vieira", "createdAt": "2020-04-15T23:04:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4MzIwMw=="}], "type": "inlineReview"}, {"oid": "dad8825bec97da8caaa0073e3c97776053483e71", "url": "https://github.com/elastic/elasticsearch/commit/dad8825bec97da8caaa0073e3c97776053483e71", "message": "add name/description for HLRC pom", "committedDate": "2020-04-15T23:42:06Z", "type": "commit"}, {"oid": "e455f7d0ea110f8b8f2e6b02a8f07fa01bd6a21a", "url": "https://github.com/elastic/elasticsearch/commit/e455f7d0ea110f8b8f2e6b02a8f07fa01bd6a21a", "message": "address feedback", "committedDate": "2020-04-16T00:37:15Z", "type": "commit"}, {"oid": "9c5d705c5f345ed0a4b763849121f6cca1c7ae2a", "url": "https://github.com/elastic/elasticsearch/commit/9c5d705c5f345ed0a4b763849121f6cca1c7ae2a", "message": "Merge branch 'master' into pom_test", "committedDate": "2020-04-16T21:34:00Z", "type": "commit"}, {"oid": "c58c332ddb959756fff4b72f7b1516b5dd3f2b99", "url": "https://github.com/elastic/elasticsearch/commit/c58c332ddb959756fff4b72f7b1516b5dd3f2b99", "message": "remove import", "committedDate": "2020-04-16T21:34:45Z", "type": "commit"}, {"oid": "fe881d643583252f352cc35340a3f48ccfacccd9", "url": "https://github.com/elastic/elasticsearch/commit/fe881d643583252f352cc35340a3f48ccfacccd9", "message": "spotless", "committedDate": "2020-04-16T21:50:17Z", "type": "commit"}]}