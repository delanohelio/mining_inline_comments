{"pr_number": 52407, "pr_title": "License removal leads back to a basic license", "pr_createdAt": "2020-02-17T12:19:03Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52407", "timeline": [{"oid": "22bc382cb76a065903ae25348342eda64972d1a7", "url": "https://github.com/elastic/elasticsearch/commit/22bc382cb76a065903ae25348342eda64972d1a7", "message": "Remove license now revert back to basic", "committedDate": "2020-02-17T12:13:24Z", "type": "commit"}, {"oid": "d4cf21a1381d8792b9988c5adcaab9d664396150", "url": "https://github.com/elastic/elasticsearch/commit/d4cf21a1381d8792b9988c5adcaab9d664396150", "message": "fix checkstyle", "committedDate": "2020-02-17T12:24:06Z", "type": "commit"}, {"oid": "7bf41098dcb97dbf3d9d82ba2a387b2e4262fef6", "url": "https://github.com/elastic/elasticsearch/commit/7bf41098dcb97dbf3d9d82ba2a387b2e4262fef6", "message": "fix tests", "committedDate": "2020-02-17T12:52:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ0OTEyMg==", "url": "https://github.com/elastic/elasticsearch/pull/52407#discussion_r380449122", "bodyText": "Can we merge this code and the duplicate from StartBasicClusterTask into a single generateNewBasicLicense() method?", "author": "tvernum", "createdAt": "2020-02-18T04:24:02Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java", "diffHunk": "@@ -353,17 +354,32 @@ protected ClusterStateUpdateResponse newResponse(boolean acknowledged) {\n                 @Override\n                 public ClusterState execute(ClusterState currentState) throws Exception {\n                     MetaData metaData = currentState.metaData();\n-                    final LicensesMetaData currentLicenses = metaData.custom(LicensesMetaData.TYPE);\n-                    if (currentLicenses.getLicense() != LicensesMetaData.LICENSE_TOMBSTONE) {\n+                    final LicensesMetaData currentLicensesMetadata = metaData.custom(LicensesMetaData.TYPE);\n+                    final License currentLicense = LicensesMetaData.extractLicense(currentLicensesMetadata);\n+                    if (shouldRemove(currentLicense)) {\n                         MetaData.Builder mdBuilder = MetaData.builder(currentState.metaData());\n-                        LicensesMetaData newMetadata = new LicensesMetaData(LicensesMetaData.LICENSE_TOMBSTONE,\n-                            currentLicenses.getMostRecentTrialVersion());\n-                        mdBuilder.putCustom(LicensesMetaData.TYPE, newMetadata);\n+                        License.Builder specBuilder = License.builder()\n+                            .uid(UUID.randomUUID().toString())\n+                            .issuedTo(clusterService.getClusterName().value())\n+                            .maxNodes(SELF_GENERATED_LICENSE_MAX_NODES)\n+                            .issueDate(clock.millis())\n+                            .type(License.LicenseType.BASIC)\n+                            .expiryDate(BASIC_SELF_GENERATED_LICENSE_EXPIRATION_MILLIS);\n+                        License selfGeneratedLicense = SelfGeneratedLicense.create(specBuilder, currentState.nodes());\n+                        LicensesMetaData newLicensesMetadata = new LicensesMetaData(selfGeneratedLicense,\n+                            currentLicensesMetadata == null ? null : currentLicensesMetadata.getMostRecentTrialVersion());\n+                        mdBuilder.putCustom(LicensesMetaData.TYPE, newLicensesMetadata);", "originalCommit": "7bf41098dcb97dbf3d9d82ba2a387b2e4262fef6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7e2d837ef5a96e54f314d8c1ef461350105f6963", "url": "https://github.com/elastic/elasticsearch/commit/7e2d837ef5a96e54f314d8c1ef461350105f6963", "message": "Address feedback", "committedDate": "2020-02-18T13:33:19Z", "type": "commit"}, {"oid": "540ebec8c57f6bbdab6eda382d16d394acd47c5b", "url": "https://github.com/elastic/elasticsearch/commit/540ebec8c57f6bbdab6eda382d16d394acd47c5b", "message": "yeah checkstyle", "committedDate": "2020-02-18T13:53:04Z", "type": "commit"}, {"oid": "6feb936b3b41a7c94b39265ce520521a19621325", "url": "https://github.com/elastic/elasticsearch/commit/6feb936b3b41a7c94b39265ce520521a19621325", "message": "fix test", "committedDate": "2020-02-18T14:23:44Z", "type": "commit"}, {"oid": "331c3b20caf9ac797b2fb790e19297057e36ff0e", "url": "https://github.com/elastic/elasticsearch/commit/331c3b20caf9ac797b2fb790e19297057e36ff0e", "message": "Merge remote-tracking branch 'origin/master' into es-45022-back-to-basic-license", "committedDate": "2020-02-18T20:37:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0OTc0MA==", "url": "https://github.com/elastic/elasticsearch/pull/52407#discussion_r382349740", "bodyText": "This feels weird to me.\nWe run a task, that just creates another task and executes that, and it feels like that's just so we can change the response object.\nWhy not change this to something like:\npublic void removeLicense(final DeleteLicenseRequest request, final ActionListener<PostStartBasicResponse> listener) {\n      PostStartBasicRequest startBasicRequest = new PostStartBasicRequest().acknowledge(true);\n      startBasicLicense(startBasicRequest, listener); \n}\n\nand then have the Transport action translate the PostStartBasicResponse into the AcknowledgedResponse it needs to keep compatibilty with the API.", "author": "tvernum", "createdAt": "2020-02-21T01:19:52Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/license/LicenseService.java", "diffHunk": "@@ -352,17 +352,10 @@ protected ClusterStateUpdateResponse newResponse(boolean acknowledged) {\n \n                 @Override\n                 public ClusterState execute(ClusterState currentState) throws Exception {\n-                    MetaData metaData = currentState.metaData();\n-                    final LicensesMetaData currentLicenses = metaData.custom(LicensesMetaData.TYPE);\n-                    if (currentLicenses.getLicense() != LicensesMetaData.LICENSE_TOMBSTONE) {\n-                        MetaData.Builder mdBuilder = MetaData.builder(currentState.metaData());\n-                        LicensesMetaData newMetadata = new LicensesMetaData(LicensesMetaData.LICENSE_TOMBSTONE,\n-                            currentLicenses.getMostRecentTrialVersion());\n-                        mdBuilder.putCustom(LicensesMetaData.TYPE, newMetadata);\n-                        return ClusterState.builder(currentState).metaData(mdBuilder).build();\n-                    } else {\n-                        return currentState;\n-                    }\n+                    final StartBasicClusterTask startBasicClusterTask =\n+                        new StartBasicClusterTask(logger, clusterService.getClusterName().value(), clock,\n+                            new PostStartBasicRequest().acknowledge(true), null);\n+                    return startBasicClusterTask.execute(currentState);", "originalCommit": "331c3b20caf9ac797b2fb790e19297057e36ff0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM2NzM5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/52407#discussion_r382367395", "bodyText": "Makes sense. I'll update it with a small change: instead of delegating to startBasicLicense() method, I'll keep the task submission part so that the context is not lost, i.e. clusterService.submitStateUpdateTask(\"delete license\", new StartBasicClusterTask(...))", "author": "ywangd", "createdAt": "2020-02-21T02:32:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0OTc0MA=="}], "type": "inlineReview"}, {"oid": "4c04be91f6e5c2f2040450b74c56a474129ca806", "url": "https://github.com/elastic/elasticsearch/commit/4c04be91f6e5c2f2040450b74c56a474129ca806", "message": "Address feedback", "committedDate": "2020-02-21T02:44:03Z", "type": "commit"}, {"oid": "34f87165ca5585b4f1a9a9f3ac2e8b6dc2596940", "url": "https://github.com/elastic/elasticsearch/commit/34f87165ca5585b4f1a9a9f3ac2e8b6dc2596940", "message": "Merge remote-tracking branch 'origin/master' into es-45022-back-to-basic-license", "committedDate": "2020-02-21T02:50:17Z", "type": "commit"}]}