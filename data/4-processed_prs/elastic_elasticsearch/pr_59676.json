{"pr_number": 59676, "pr_title": "Scripting: fix generateContextDoc path and url", "pr_createdAt": "2020-07-15T21:58:48Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59676", "timeline": [{"oid": "1496150bd759d856c4e263ae039a301f2ea90ea5", "url": "https://github.com/elastic/elasticsearch/commit/1496150bd759d856c4e263ae039a301f2ea90ea5", "message": "Scripting: fix generateContextDoc path and url\n\n* Add doc runtime class path\n* Use `getHttpSocketURI` instead of `getAllHttpSocketURI` to get a single\n  test cluster URL rather than a list", "committedDate": "2020-07-15T21:36:32Z", "type": "commit"}, {"oid": "db46123d0e40d0b5fa75222d88201dea9edd7db6", "url": "https://github.com/elastic/elasticsearch/commit/db46123d0e40d0b5fa75222d88201dea9edd7db6", "message": "waitForAllConditions()", "committedDate": "2020-07-15T21:56:05Z", "type": "commit"}, {"oid": "b29a421d584b3df5a2da19846c08688bbbbf66f4", "url": "https://github.com/elastic/elasticsearch/commit/b29a421d584b3df5a2da19846c08688bbbbf66f4", "message": "Update scripting context docs", "committedDate": "2020-07-15T21:56:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MDgwOA==", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455390808", "bodyText": "Please add this to the exclusions list. Check out isInternalClass as part of ContextDocGenerator. We try to exclude other internal methods here. There isn't currently a better way to do this.", "author": "jdconrad", "createdAt": "2020-07-15T22:02:05Z", "path": "docs/painless/painless-api-reference/painless-api-reference-string-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-ql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.ql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalQlScriptUtils]]\n+==== InternalQlScriptUtils\n+* static Number add(Number, Number)\n+* static Boolean and(Boolean, Boolean)\n+* static Number div(Number, Number)\n+* static def docValue(Map, String)\n+* static Boolean eq(Object, Object)\n+* static Boolean gt(Object, Object)\n+* static Boolean gte(Object, Object)\n+* static Boolean in(Object, List)\n+* static Boolean isNotNull(Object)\n+* static Boolean isNull(Object)\n+* static Boolean lt(Object, Object)\n+* static Boolean lte(Object, Object)\n+* static Number mod(Number, Number)\n+* static Number mul(Number, Number)\n+* static Number neg(Number)\n+* static Boolean neq(Object, Object)\n+* static Boolean not(Boolean)\n+* static boolean nullSafeFilter(Boolean)\n+* static double nullSafeSortNumeric(Number)\n+* static String nullSafeSortString(Object)\n+* static Boolean nulleq(Object, Object)\n+* static Boolean or(Boolean, Boolean)\n+* static Boolean regex(String, String)\n+* static Boolean startsWith(String, String, Boolean)\n+* static Number sub(Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()", "originalCommit": "b29a421d584b3df5a2da19846c08688bbbbf66f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5NzE0OA==", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455397148", "bodyText": "Excluded.", "author": "stu-elastic", "createdAt": "2020-07-15T22:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MDgwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTA0NA==", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455391044", "bodyText": "Please exclude these as well. These really are only meant to be used internally.", "author": "jdconrad", "createdAt": "2020-07-15T22:02:43Z", "path": "docs/painless/painless-api-reference/painless-api-reference-string-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-string-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== String Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-string-sort, String Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-string-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()", "originalCommit": "b29a421d584b3df5a2da19846c08688bbbbf66f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5NzIwMA==", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455397200", "bodyText": "Excluded.", "author": "stu-elastic", "createdAt": "2020-07-15T22:18:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTA0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTQyNw==", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455391427", "bodyText": "More to exclude.", "author": "jdconrad", "createdAt": "2020-07-15T22:03:37Z", "path": "docs/painless/painless-api-reference/painless-api-reference-shared/packages.asciidoc", "diffHunk": "@@ -8642,6 +8655,14 @@ See the <<painless-api-reference-shared, Shared API>> for a high-level overview\n * ZonedDateTime withZoneSameLocal(ZoneId)\n \n \n+[[painless-api-reference-shared-ScoreScript-ExplanationHolder]]\n+==== ScoreScript.ExplanationHolder\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* void set(String)\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+", "originalCommit": "b29a421d584b3df5a2da19846c08688bbbbf66f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5NzI2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455397262", "bodyText": "Excluded.", "author": "stu-elastic", "createdAt": "2020-07-15T22:18:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTY2NA==", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455391664", "bodyText": "More to exclude.", "author": "jdconrad", "createdAt": "2020-07-15T22:04:15Z", "path": "docs/painless/painless-api-reference/painless-api-reference-number-sort/packages.asciidoc", "diffHunk": "@@ -0,0 +1,89 @@\n+// This file is auto-generated. Do not edit.\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-number-sort-org-elasticsearch-xpack-eql-expression-function-scalar-whitelist\"]\n+=== Number Sort API for package org.elasticsearch.xpack.eql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-number-sort, Number Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-number-sort-InternalEqlScriptUtils]]\n+==== InternalEqlScriptUtils\n+* static String between(String, String, String, Boolean, Boolean)\n+* static Boolean cidrMatch(String, List)\n+* static String concat(List)\n+* static Boolean endsWith(String, String, Boolean)\n+* static Integer indexOf(String, String, Number, Boolean)\n+* static Integer length(String)\n+* static Number number(String, Number)\n+* static String string(Object)\n+* static Boolean stringContains(String, String, Boolean)\n+* static String substring(String, Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+\n+\n+[role=\"exclude\",id=\"painless-api-reference-number-sort-org-elasticsearch-xpack-ql-expression-function-scalar-whitelist\"]\n+=== Number Sort API for package org.elasticsearch.xpack.ql.expression.function.scalar.whitelist\n+See the <<painless-api-reference-number-sort, Number Sort API>> for a high-level overview of all packages and classes.\n+\n+[[painless-api-reference-number-sort-InternalQlScriptUtils]]\n+==== InternalQlScriptUtils\n+* static Number add(Number, Number)\n+* static Boolean and(Boolean, Boolean)\n+* static Number div(Number, Number)\n+* static def docValue(Map, String)\n+* static Boolean eq(Object, Object)\n+* static Boolean gt(Object, Object)\n+* static Boolean gte(Object, Object)\n+* static Boolean in(Object, List)\n+* static Boolean isNotNull(Object)\n+* static Boolean isNull(Object)\n+* static Boolean lt(Object, Object)\n+* static Boolean lte(Object, Object)\n+* static Number mod(Number, Number)\n+* static Number mul(Number, Number)\n+* static Number neg(Number)\n+* static Boolean neq(Object, Object)\n+* static Boolean not(Boolean)\n+* static boolean nullSafeFilter(Boolean)\n+* static double nullSafeSortNumeric(Number)\n+* static String nullSafeSortString(Object)\n+* static Boolean nulleq(Object, Object)\n+* static Boolean or(Boolean, Boolean)\n+* static Boolean regex(String, String)\n+* static Boolean startsWith(String, String, Boolean)\n+* static Number sub(Number, Number)\n+* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)\n+* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()\n+* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()\n+", "originalCommit": "b29a421d584b3df5a2da19846c08688bbbbf66f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5NzMxMg==", "url": "https://github.com/elastic/elasticsearch/pull/59676#discussion_r455397312", "bodyText": "Excluded.", "author": "stu-elastic", "createdAt": "2020-07-15T22:18:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM5MTY2NA=="}], "type": "inlineReview"}, {"oid": "38c40958f1921acf63fae7a09f105382595a8a39", "url": "https://github.com/elastic/elasticsearch/commit/38c40958f1921acf63fae7a09f105382595a8a39", "message": "Additionaly exclude: InternalEqlScriptUtils, InternalQlScriptUtils, InternalQlScriptUtils, ScoreScript.ExplanationHolder", "committedDate": "2020-07-15T22:14:37Z", "type": "commit"}, {"oid": "095511f091f3e179b9bdd35e0f94c573fc4ab3ac", "url": "https://github.com/elastic/elasticsearch/commit/095511f091f3e179b9bdd35e0f94c573fc4ab3ac", "message": "Regen after exclusion", "committedDate": "2020-07-15T22:14:48Z", "type": "commit"}, {"oid": "28203f4079f64db327355bb9d94dc917f4f411c0", "url": "https://github.com/elastic/elasticsearch/commit/28203f4079f64db327355bb9d94dc917f4f411c0", "message": "ScoreScript.ExplanationHolder -> ScoreScript$ExplanationHolder", "committedDate": "2020-07-15T22:17:20Z", "type": "commit"}, {"oid": "d9bc86380e1842504d61a0b2330e7f1a86d6195c", "url": "https://github.com/elastic/elasticsearch/commit/d9bc86380e1842504d61a0b2330e7f1a86d6195c", "message": "Regen after ScoreScript$ExplanationHolder exclusion", "committedDate": "2020-07-15T22:17:36Z", "type": "commit"}]}