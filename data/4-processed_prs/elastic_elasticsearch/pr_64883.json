{"pr_number": 64883, "pr_title": "ILM: Add support for the searchable_snapshot action in the hot phase", "pr_createdAt": "2020-11-10T17:21:07Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64883", "timeline": [{"oid": "7b68166d004f37390f415e4669e7297133f996ac", "url": "https://github.com/elastic/elasticsearch/commit/7b68166d004f37390f415e4669e7297133f996ac", "message": "Enable the searchable_snapshot action in the hot phase", "committedDate": "2020-11-10T10:10:37Z", "type": "commit"}, {"oid": "0e92f001e7df3ddb1732059d436faaf054d21f67", "url": "https://github.com/elastic/elasticsearch/commit/0e92f001e7df3ddb1732059d436faaf054d21f67", "message": "Add IT for restoring index mounted as searchable snapshot", "committedDate": "2020-11-10T17:03:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczNzIwNg==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520737206", "bodyText": "@dakrone do you think we should aim to prevent this case when updating the policy?", "author": "andreidan", "createdAt": "2020-11-10T17:22:58Z", "path": "x-pack/plugin/ilm/qa/multi-node/src/javaRestTest/java/org/elasticsearch/xpack/ilm/actions/SearchableSnapshotActionIT.java", "diffHunk": "@@ -188,4 +196,149 @@ public void testDeleteActionDeletesSearchableSnapshot() throws Exception {\n         }, 30, TimeUnit.SECONDS));\n     }\n \n+    public void testCreateInvalidPolicy() throws Exception {\n+        String snapshotRepo = randomAlphaOfLengthBetween(4, 10);\n+        createSnapshotRepo(client(), snapshotRepo, randomBoolean());\n+        IllegalArgumentException exception = expectThrows(IllegalArgumentException.class, () -> createPolicy(client(), policy,\n+            new Phase(\"hot\", TimeValue.ZERO, Map.of(SearchableSnapshotAction.NAME, new SearchableSnapshotAction(snapshotRepo))),\n+            new Phase(\"warm\", TimeValue.ZERO, Map.of(ForceMergeAction.NAME, new ForceMergeAction(1, null))),\n+            new Phase(\"cold\", TimeValue.ZERO, Map.of(FreezeAction.NAME, new FreezeAction())),\n+            null\n+            )\n+        );\n+\n+        assertThat(exception.getMessage(), is(\"phases [warm,cold] define one or more of [shrink,forcemerge,freeze] actions which are not \" +\n+            \"allowed after the managed index was mounted as searchable snapshot\"));\n+    }\n+\n+    public void testUpdatePolicyToAddPhasesYieldsInvalidActionsToBeSkipped() throws Exception {", "originalCommit": "0e92f001e7df3ddb1732059d436faaf054d21f67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzMjkxNg==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520932916", "bodyText": "No I don't think so, I think we should allow a user to remove searchable snapshots from the policy as well as adding other actions (post searchable snapshot for instance) that should run just fine.", "author": "dakrone", "createdAt": "2020-11-10T23:11:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczNzIwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0MDAzMA==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520740030", "bodyText": "@dakrone there are several setting we configure for a searchable snapshot. I wonder if we should be more strict here and check the index name is configured for this setting? I chose not to as that's an invariant that should be guaranteed by the searchable-snapshots module. Is there a better setting to use here?\nWhat do you think?", "author": "andreidan", "createdAt": "2020-11-10T17:26:52Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/ForceMergeAction.java", "diffHunk": "@@ -131,6 +133,8 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         StepKey forceMergeKey = new StepKey(phase, NAME, ForceMergeStep.NAME);\n         StepKey countKey = new StepKey(phase, NAME, SegmentCountStep.NAME);\n \n+        BranchingStep conditionalSkipShrinkStep = new BranchingStep(preForceMergeBranchingKey, checkNotWriteIndex, nextStepKey,\n+            (index, clusterState) -> clusterState.getMetadata().index(index).getSettings().get(\"index.store.snapshot.index_name\") != null);", "originalCommit": "0e92f001e7df3ddb1732059d436faaf054d21f67", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b278e052e5364d90f679310656a0f92f6d65d70d", "url": "https://github.com/elastic/elasticsearch/commit/b278e052e5364d90f679310656a0f92f6d65d70d", "message": "Add logging", "committedDate": "2020-11-10T17:48:33Z", "type": "commit"}, {"oid": "97ec99fe2733c8fbd36433c2e161a72f2716e883", "url": "https://github.com/elastic/elasticsearch/commit/97ec99fe2733c8fbd36433c2e161a72f2716e883", "message": "Fix test", "committedDate": "2020-11-10T17:54:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyNjU5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520926593", "bodyText": "Can you add the policy id to the log message, so something like\n[forcemerge] action is configured for index [myindex] in policy [manage-things] which is mounted ...", "author": "dakrone", "createdAt": "2020-11-10T22:55:26Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/ForceMergeAction.java", "diffHunk": "@@ -131,6 +137,15 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         StepKey forceMergeKey = new StepKey(phase, NAME, ForceMergeStep.NAME);\n         StepKey countKey = new StepKey(phase, NAME, SegmentCountStep.NAME);\n \n+        BranchingStep conditionalSkipShrinkStep = new BranchingStep(preForceMergeBranchingKey, checkNotWriteIndex, nextStepKey,\n+            (index, clusterState) -> {\n+                if (clusterState.getMetadata().index(index).getSettings().get(\"index.store.snapshot.index_name\") != null) {\n+                    logger.warn(\"[{}] action is configured for index [{}] which is mounted as searchable snapshot. Skipping this action\",", "originalCommit": "97ec99fe2733c8fbd36433c2e161a72f2716e883", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyNjk0NA==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520926944", "bodyText": "same comment here about the policy id", "author": "dakrone", "createdAt": "2020-11-10T22:56:16Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/FreezeAction.java", "diffHunk": "@@ -59,13 +64,23 @@ public boolean isSafeAction() {\n \n     @Override\n     public List<Step> toSteps(Client client, String phase, StepKey nextStepKey) {\n+        StepKey preFreezeMergeBranchingKey = new StepKey(phase, NAME, CONDITIONAL_SKIP_FREEZE_STEP);\n         StepKey checkNotWriteIndex = new StepKey(phase, NAME, CheckNotDataStreamWriteIndexStep.NAME);\n         StepKey freezeStepKey = new StepKey(phase, NAME, FreezeStep.NAME);\n \n+        BranchingStep conditionalSkipFreezeStep = new BranchingStep(preFreezeMergeBranchingKey, checkNotWriteIndex, nextStepKey,\n+            (index, clusterState) -> {\n+                if (clusterState.getMetadata().index(index).getSettings().get(\"index.store.snapshot.index_name\") != null) {\n+                    logger.warn(\"[{}] action is configured for index [{}] which is mounted as searchable snapshot. Skipping this action\",", "originalCommit": "97ec99fe2733c8fbd36433c2e161a72f2716e883", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyNzcxNA==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520927714", "bodyText": "since we're here, can we check for the presence of the index.frozen (FrozenEngine.INDEX_FROZEN) setting and skip the freeze step if the index is already frozen?", "author": "dakrone", "createdAt": "2020-11-10T22:58:08Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/FreezeAction.java", "diffHunk": "@@ -59,13 +64,23 @@ public boolean isSafeAction() {\n \n     @Override\n     public List<Step> toSteps(Client client, String phase, StepKey nextStepKey) {\n+        StepKey preFreezeMergeBranchingKey = new StepKey(phase, NAME, CONDITIONAL_SKIP_FREEZE_STEP);\n         StepKey checkNotWriteIndex = new StepKey(phase, NAME, CheckNotDataStreamWriteIndexStep.NAME);\n         StepKey freezeStepKey = new StepKey(phase, NAME, FreezeStep.NAME);\n \n+        BranchingStep conditionalSkipFreezeStep = new BranchingStep(preFreezeMergeBranchingKey, checkNotWriteIndex, nextStepKey,\n+            (index, clusterState) -> {\n+                if (clusterState.getMetadata().index(index).getSettings().get(\"index.store.snapshot.index_name\") != null) {", "originalCommit": "97ec99fe2733c8fbd36433c2e161a72f2716e883", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyODQ2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520928462", "bodyText": "since we re-use this setting name a few times, can we extract it somewhere into a variable in case we need to change it in the future? perhaps somewhere in LifecycleSettings?", "author": "dakrone", "createdAt": "2020-11-10T22:59:52Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/ForceMergeAction.java", "diffHunk": "@@ -131,6 +137,15 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         StepKey forceMergeKey = new StepKey(phase, NAME, ForceMergeStep.NAME);\n         StepKey countKey = new StepKey(phase, NAME, SegmentCountStep.NAME);\n \n+        BranchingStep conditionalSkipShrinkStep = new BranchingStep(preForceMergeBranchingKey, checkNotWriteIndex, nextStepKey,\n+            (index, clusterState) -> {\n+                if (clusterState.getMetadata().index(index).getSettings().get(\"index.store.snapshot.index_name\") != null) {", "originalCommit": "97ec99fe2733c8fbd36433c2e161a72f2716e883", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyOTkxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520929919", "bodyText": "Collections already toString with commands, so this can be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalArgumentException(\"phases [\" + phasesDefiningIllegalActions + \"] define one or more of [\" +\n          \n          \n            \n                                String.join(\",\", ACTIONS_CANNOT_FOLLOW_SEARCHABLE_SNAPSHOT) + \"] actions which are not allowed after the \" +\n          \n          \n            \n                                \"managed index was mounted as searchable snapshot\");\n          \n          \n            \n                            throw new IllegalArgumentException(\"phases [\" + phasesDefiningIllegalActions + \"] define one or more of \" +\n          \n          \n            \n                                ACTIONS_CANNOT_FOLLOW_SEARCHABLE_SNAPSHOT + \" actions which are not allowed after a \" +\n          \n          \n            \n                                \"managed index is mounted as a searchable snapshot\");", "author": "dakrone", "createdAt": "2020-11-10T23:03:29Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/TimeseriesLifecycleType.java", "diffHunk": "@@ -255,6 +259,29 @@ public void validate(Collection<Phase> phases) {\n                 MigrateAction.NAME + \" action and an \" + AllocateAction.NAME + \" action with allocation rules. specify only a single \" +\n                 \"data migration in each phase\");\n         }\n+\n+        validateActionsFollowingSearchableSnapshot(phases);\n+    }\n+\n+    static void validateActionsFollowingSearchableSnapshot(Collection<Phase> phases) {\n+        boolean hotPhaseContainsSearchableSnapshot = phases.stream()\n+            .filter(phase -> HOT_PHASE.equals(phase.getName()))\n+            .anyMatch(phase -> phase.getActions().containsKey(SearchableSnapshotAction.NAME));\n+        if (hotPhaseContainsSearchableSnapshot) {\n+            String phasesDefiningIllegalActions = phases.stream()\n+                // we're looking for prohibited actions in phases other than hot\n+                .filter(phase -> HOT_PHASE.equals(phase.getName()) == false)\n+                // filter the phases that define illegal actions\n+                .filter(phase ->\n+                    Collections.disjoint(ACTIONS_CANNOT_FOLLOW_SEARCHABLE_SNAPSHOT, phase.getActions().keySet()) == false)\n+                .map(Phase::getName)\n+                .collect(Collectors.joining(\",\"));\n+            if (Strings.hasText(phasesDefiningIllegalActions)) {\n+                throw new IllegalArgumentException(\"phases [\" + phasesDefiningIllegalActions + \"] define one or more of [\" +\n+                    String.join(\",\", ACTIONS_CANNOT_FOLLOW_SEARCHABLE_SNAPSHOT) + \"] actions which are not allowed after the \" +\n+                    \"managed index was mounted as searchable snapshot\");", "originalCommit": "97ec99fe2733c8fbd36433c2e161a72f2716e883", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzMTQyNg==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520931426", "bodyText": "I don't think we need to actually create the repository here, since the test doesn't take a snapshot?", "author": "dakrone", "createdAt": "2020-11-10T23:07:14Z", "path": "x-pack/plugin/ilm/qa/multi-node/src/javaRestTest/java/org/elasticsearch/xpack/ilm/actions/SearchableSnapshotActionIT.java", "diffHunk": "@@ -188,4 +196,149 @@ public void testDeleteActionDeletesSearchableSnapshot() throws Exception {\n         }, 30, TimeUnit.SECONDS));\n     }\n \n+    public void testCreateInvalidPolicy() throws Exception {\n+        String snapshotRepo = randomAlphaOfLengthBetween(4, 10);\n+        createSnapshotRepo(client(), snapshotRepo, randomBoolean());", "originalCommit": "97ec99fe2733c8fbd36433c2e161a72f2716e883", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkzMjQwMw==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r520932403", "bodyText": "We need to add SearchableSnapshotAction.NAME to this list, because we should always ensure that a rollover action is used in the hot phase if searchable snapshots are specified", "author": "dakrone", "createdAt": "2020-11-10T23:09:46Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/TimeseriesLifecycleType.java", "diffHunk": "@@ -58,6 +59,9 @@\n \n     static final Set<String> HOT_ACTIONS_THAT_REQUIRE_ROLLOVER = Sets.newHashSet(ReadOnlyAction.NAME, ShrinkAction.NAME,\n         ForceMergeAction.NAME);", "originalCommit": "97ec99fe2733c8fbd36433c2e161a72f2716e883", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2bd01c59388950bdbc524377a699526bf79ea540", "url": "https://github.com/elastic/elasticsearch/commit/2bd01c59388950bdbc524377a699526bf79ea540", "message": "Update error message\n\nCo-authored-by: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-11-11T11:58:57Z", "type": "commit"}, {"oid": "b663f72112cecef22d90b6eb3f54d7e1891af00a", "url": "https://github.com/elastic/elasticsearch/commit/b663f72112cecef22d90b6eb3f54d7e1891af00a", "message": "Make ensure `searchable_snapshot` action cannot follow itself and cleanups", "committedDate": "2020-11-11T16:27:52Z", "type": "commit"}, {"oid": "82c9e661749e5c4989efc8b70d6bda4bebc125a6", "url": "https://github.com/elastic/elasticsearch/commit/82c9e661749e5c4989efc8b70d6bda4bebc125a6", "message": "Fix tests", "committedDate": "2020-11-11T16:30:51Z", "type": "commit"}, {"oid": "b7936ee018f0080d76cc1e72649831cecd952746", "url": "https://github.com/elastic/elasticsearch/commit/b7936ee018f0080d76cc1e72649831cecd952746", "message": "Merge branch 'master' into searchable-snapshot-hot-phase", "committedDate": "2020-11-11T16:33:30Z", "type": "commit"}, {"oid": "3feb501be85e64b5aa3a97910dd8cc74bb0ee8dd", "url": "https://github.com/elastic/elasticsearch/commit/3feb501be85e64b5aa3a97910dd8cc74bb0ee8dd", "message": "Fix ForceMergeActionTests", "committedDate": "2020-11-11T16:42:58Z", "type": "commit"}, {"oid": "5e2366de6cf47301b536b72dee3c39fd79bdc087", "url": "https://github.com/elastic/elasticsearch/commit/5e2366de6cf47301b536b72dee3c39fd79bdc087", "message": "Fix ForceMergeActionTest", "committedDate": "2020-11-11T16:45:54Z", "type": "commit"}, {"oid": "471d329a6a9a9c10eeb11ef8ca295391041e014e", "url": "https://github.com/elastic/elasticsearch/commit/471d329a6a9a9c10eeb11ef8ca295391041e014e", "message": "Fix random lifecycle generation", "committedDate": "2020-11-11T17:14:49Z", "type": "commit"}, {"oid": "0c3b35e6ccc39f3168b346689374e9617edd6d3b", "url": "https://github.com/elastic/elasticsearch/commit/0c3b35e6ccc39f3168b346689374e9617edd6d3b", "message": "Fix phases validation when generating test policies", "committedDate": "2020-11-11T17:58:15Z", "type": "commit"}, {"oid": "b914cfe3abeeb9ad39ed87f36093b675055f6eac", "url": "https://github.com/elastic/elasticsearch/commit/b914cfe3abeeb9ad39ed87f36093b675055f6eac", "message": "Merge branch 'master' into searchable-snapshot-hot-phase", "committedDate": "2020-11-11T18:02:38Z", "type": "commit"}, {"oid": "1128f0766b3d140960c4642962476d4ad527084d", "url": "https://github.com/elastic/elasticsearch/commit/1128f0766b3d140960c4642962476d4ad527084d", "message": "Update doc", "committedDate": "2020-11-11T18:25:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU1NTI0MA==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r521555240", "bodyText": "Super minor, but can you add a comment about what this is for (since it's not actually an ILM setting, just one we check)", "author": "dakrone", "createdAt": "2020-11-11T18:25:56Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/LifecycleSettings.java", "diffHunk": "@@ -27,6 +27,8 @@\n     public static final String SLM_RETENTION_DURATION = \"slm.retention_duration\";\n     public static final String SLM_MINIMUM_INTERVAL = \"slm.minimum_interval\";\n \n+    public static final String SNAPSHOT_INDEX_NAME = \"index.store.snapshot.index_name\";", "originalCommit": "b914cfe3abeeb9ad39ed87f36093b675055f6eac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU1NTkzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r521555935", "bodyText": "Can you add a blurb similar to what we have for forcemerge related to requiring the \"rollover\" action:\n\"To use the XYZ action in the hot phase, the rollover action must be present. If no rollover action is configured, ILM will reject the policy.\"", "author": "dakrone", "createdAt": "2020-11-11T18:27:11Z", "path": "docs/reference/ilm/actions/ilm-searchable-snapshot.asciidoc", "diffHunk": "@@ -4,13 +4,17 @@\n \n beta::[]\n \n-Phases allowed: cold.\n+Phases allowed: hot, cold.\n \n Takes a snapshot of the managed index in the configured repository\n and mounts it as a searchable snapshot.\n If the managed index is part of a <<data-streams, data stream>>,\n the mounted index replaces the original index in the data stream.\n \n+IMPORTANT: If the `searchable_snapshot` action is used in the `hot` phase the\n+subsequent phases cannot define any of the `shrink`, `forcemerge`, `freeze` or\n+`searchable_snapshot` (also available in the cold phase) actions.", "originalCommit": "1128f0766b3d140960c4642962476d4ad527084d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU1NjQ0OA==", "url": "https://github.com/elastic/elasticsearch/pull/64883#discussion_r521556448", "bodyText": "Super minor, but this can be static (it looks like it used to be but was dropped when it was moved)", "author": "dakrone", "createdAt": "2020-11-11T18:28:11Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/ShrinkAction.java", "diffHunk": "@@ -29,14 +29,14 @@\n  * A {@link LifecycleAction} which shrinks the index.\n  */\n public class ShrinkAction implements LifecycleAction {\n+    private final Logger logger = LogManager.getLogger(ShrinkAction.class);", "originalCommit": "1128f0766b3d140960c4642962476d4ad527084d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a1326c352bac916a90b32adfaa41d2111fee7a95", "url": "https://github.com/elastic/elasticsearch/commit/a1326c352bac916a90b32adfaa41d2111fee7a95", "message": "Duplicate sets as we remove actions to generate valid policies", "committedDate": "2020-11-12T09:29:57Z", "type": "commit"}, {"oid": "54180d60d635fd2d4b98da9ca38ad9161e67c55c", "url": "https://github.com/elastic/elasticsearch/commit/54180d60d635fd2d4b98da9ca38ad9161e67c55c", "message": "Static loggers", "committedDate": "2020-11-12T09:32:12Z", "type": "commit"}, {"oid": "a5e43548f491c1ccd83f77846ac6ab9c655096e8", "url": "https://github.com/elastic/elasticsearch/commit/a5e43548f491c1ccd83f77846ac6ab9c655096e8", "message": "Docs: Mention rollover is needed in order to use action in the hot phase", "committedDate": "2020-11-12T09:33:57Z", "type": "commit"}, {"oid": "56af507e427a9dd3a9bb0bc72d85930c174fcd23", "url": "https://github.com/elastic/elasticsearch/commit/56af507e427a9dd3a9bb0bc72d85930c174fcd23", "message": "Document setting name", "committedDate": "2020-11-12T09:36:48Z", "type": "commit"}]}