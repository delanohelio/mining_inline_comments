{"pr_number": 52813, "pr_title": "[DOCS] Document `nodes` cluster stats", "pr_createdAt": "2020-02-26T12:45:34Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52813", "timeline": [{"oid": "50ffa69326385e483974d2306638a1ed28cc3b10", "url": "https://github.com/elastic/elasticsearch/commit/50ffa69326385e483974d2306638a1ed28cc3b10", "message": "[DOCS] Document `nodes` cluster stats\n\nDocuments the `nodes` response parameters returned by the\n`_cluster/stats` API.\n\nAlso adds collapsible attributes for the `indices` and `nodes` sections.", "committedDate": "2020-02-26T12:44:32Z", "type": "commit"}, {"oid": "578a95d3adf9b72f171689a3791d20407e82d256", "url": "https://github.com/elastic/elasticsearch/commit/578a95d3adf9b72f171689a3791d20407e82d256", "message": "iter", "committedDate": "2020-02-26T12:55:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MzcyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/52813#discussion_r389153725", "bodyText": "Should we collapse these into one entry? The nodes.count.coordinating_node field is special in that it's for any nodes the have no role and will always be a valid entry, but roles are pluggable now so other values could end up here over time.\nIf that feels like a bad idea from a docs perspective, then these are fine as-is.", "author": "jbaiera", "createdAt": "2020-03-06T21:30:22Z", "path": "docs/reference/cluster/stats.asciidoc", "diffHunk": "@@ -338,7 +348,289 @@ This object is not populated by the cluster stats API.\n +\n To get information on segment files, use the <<cluster-nodes-stats,node stats\n API>>.\n+====\n+\n+[[cluster-stats-api-response-body-nodes]]\n+===== `nodes` section\n+\n+[%collapsible]\n+====\n+`nodes.count.total`::\n+(integer)\n+Total number of nodes selected by the request's <<cluster-nodes,node filters>>.\n+\n+`nodes.count.coordinating_only`::\n+(integer)\n+Number of selected <<coordinating-only-node,coordinating only>> nodes.\n+\n+`nodes.count.data`::\n+(integer)\n+Number of selected nodes with the <<data-node,data>> role.\n+\n+`nodes.count.ingest`::\n+(integer)\n+Number of selected nodes with the <<node-ingest-node,ingest>> role.\n+\n+`nodes.count.master`::\n+(integer)\n+Number of selected nodes with the <<master-node,master-eligible>> role.\n+\n+`nodes.count.ml`::\n+(integer)\n+Number of selected nodes with the <<ml-node,machine learning>> role.\n+\n+`nodes.count.voting_only`::\n+(integer)\n+Number of selected nodes with the <<voting-only-node,voting-only>> role.", "originalCommit": "578a95d3adf9b72f171689a3791d20407e82d256", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5OTY2NA==", "url": "https://github.com/elastic/elasticsearch/pull/52813#discussion_r389599664", "bodyText": "This is a good idea. I left coordinating_only as-is but I used nodes.count.<role> for the remaining parms. Changes are in 5876819.", "author": "jrodewig", "createdAt": "2020-03-09T11:21:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MzcyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE2MTMwMg==", "url": "https://github.com/elastic/elasticsearch/pull/52813#discussion_r389161302", "bodyText": "Missing nodes.plugins.elasticsearch_version\nAlso missing node.plugins.java_version\nFrom Javadoc:\nelasticsearchVersion  the version of Elasticsearch the plugin was built for\njavaVersion           the version of Java the plugin was built with", "author": "jbaiera", "createdAt": "2020-03-06T21:50:06Z", "path": "docs/reference/cluster/stats.asciidoc", "diffHunk": "@@ -338,7 +348,289 @@ This object is not populated by the cluster stats API.\n +\n To get information on segment files, use the <<cluster-nodes-stats,node stats\n API>>.\n+====\n+\n+[[cluster-stats-api-response-body-nodes]]\n+===== `nodes` section\n+\n+[%collapsible]\n+====\n+`nodes.count.total`::\n+(integer)\n+Total number of nodes selected by the request's <<cluster-nodes,node filters>>.\n+\n+`nodes.count.coordinating_only`::\n+(integer)\n+Number of selected <<coordinating-only-node,coordinating only>> nodes.\n+\n+`nodes.count.data`::\n+(integer)\n+Number of selected nodes with the <<data-node,data>> role.\n+\n+`nodes.count.ingest`::\n+(integer)\n+Number of selected nodes with the <<node-ingest-node,ingest>> role.\n+\n+`nodes.count.master`::\n+(integer)\n+Number of selected nodes with the <<master-node,master-eligible>> role.\n+\n+`nodes.count.ml`::\n+(integer)\n+Number of selected nodes with the <<ml-node,machine learning>> role.\n+\n+`nodes.count.voting_only`::\n+(integer)\n+Number of selected nodes with the <<voting-only-node,voting-only>> role.\n+\n+`nodes.versions`::\n+(array of strings)\n+Array of {es} versions used on selected nodes.\n+\n+`nodes.os.available_processors`::\n+(integer)\n+Number of processors available to JVM across all selected nodes.\n+\n+`nodes.os.allocated_processors`::\n+(integer)\n+Number of processors used to calculate thread pool size across all selected\n+nodes.\n++\n+This number can be set with the `processors` setting of a node and defaults to\n+the number of processors reported by the OS. In both cases, this number will\n+never be larger than `32`.\n+\n+`nodes.os.names`::\n+(array of objects)\n+Contains details about operating systems used by one or more selected nodes.\n+\n+`nodes.os.names.name`:::\n+(string)\n+Name of an operating system used by one or more selected nodes.\n+\n+`nodes.os.names.count`:::\n+(string)\n+Number of selected nodes using the operating system.\n+\n+`nodes.os.pretty_names`::\n+(array of objects)\n+Contains details about operating systems used by one or more selected nodes.\n+\n+`nodes.os.pretty_names.pretty_name`:::\n+(string)\n+Human-readable name of an operating system used by one or more selected nodes.\n+\n+`nodes.os.pretty_names.count`:::\n+(string)\n+Number of selected nodes using the operating system.\n+\n+`nodes.os.mem.total`::\n+(<<byte-units, byte units>>)\n+Total amount of physical memory across all selected nodes.\n+\n+`nodes.os.mem.total_in_bytes`::\n+(integer)\n+Total amount, in bytes, of physical memory across all selected nodes.\n+\n+`nodes.os.mem.free`::\n+(<<byte-units, byte units>>)\n+Amount of free physical memory across all selected nodes.\n+\n+`nodes.os.mem.free_in_bytes`::\n+(integer)\n+Amount, in bytes, of free physical memory across all selected nodes.\n+\n+`nodes.os.mem.used`::\n+(<<byte-units, byte units>>)\n+Amount of physical memory in use across all selected nodes.\n+\n+`nodes.os.mem.used_in_bytes`::\n+(integer)\n+Amount, in bytes, of physical memory in use across all selected nodes.\n+\n+`nodes.os.mem.free_percent`::\n+(integer)\n+Percentage of free physical memory across all selected nodes.\n+\n+`nodes.os.mem.used_percent`::\n+(integer)\n+Percentage of physical memory in use across all selected nodes.\n+\n+`nodes.process.cpu.percent`::\n+(integer)\n+Percentage of CPU used across all selected nodes. Returns `-1` if\n+not supported.\n+\n+`nodes.process.open_file_descriptors.min`::\n+(integer)\n+Minimum number of concurrently open file descriptors across all selected nodes.\n+Returns `-1` if not supported.\n+\n+`nodes.process.open_file_descriptors.max`::\n+(integer)\n+Maximum number of concurrently open file descriptors allowed across all selected\n+nodes. Returns `-1` if not supported.\n+\n+`nodes.process.open_file_descriptors.avg`::\n+(integer)\n+Average number of concurrently open file descriptors. Returns `-1` if not\n+supported.\n+\n+`nodes.jvm.max_uptime`::\n+(<<time-units,time unit>>)\n+Uptime duration since JVM last started.\n+\n+`nodes.jvm.max_uptime_in_millis`::\n+(integer)\n+Uptime duration, in milliseconds, since JVM last started.\n+\n+`nodes.jvm.versions`::\n+(array of objects)\n+Contains details about the JVM versions used by selected\n+nodes.\n \n+`nodes.jvm.versions.version`:::\n+(string)\n+Version of JVM used by one or more selected nodes.\n+\n+`nodes.jvm.versions.vm_name`:::\n+(string)\n+Name of the JVM.\n+\n+`nodes.jvm.versions.vm_version`:::\n+(string)\n+Full version number of JVM.\n++\n+The full version number includes a plus sign (`+`) followed by the build number.\n+\n+`nodes.jvm.versions.vm_vendor`:::\n+(string)\n+Vendor of the JVM.\n+\n+`nodes.jvm.versions.bundled_jdk`:::\n+(boolean)\n+If `true`, the JVM includes a bundled Java Development Kit (JDK).\n+\n+`nodes.jvm.versions.using_bundled_jdk`:::\n+(boolean)\n+If `true`, a bundled JDK is in use by JVM.\n+\n+`nodes.jvm.versions.count`:::\n+(integer)\n+Total number of selected nodes using JVM.\n+\n+`nodes.jvm.mem.heap_used`::\n+(<<byte-units, byte units>>)\n+Memory currently in use by the heap across all selected nodes.\n+\n+`nodes.jvm.mem.heap_used_in_bytes`::\n+(integer)\n+Memory, in bytes, currently in use by the heap across all selected nodes.\n+\n+`nodes.jvm.mem.heap_max`::\n+(<<byte-units, byte units>>)\n+Maximum amount of memory, in bytes, available for use by the heap across all\n+selected nodes.\n+\n+`nodes.jvm.mem.heap_max_in_bytes`::\n+(integer)\n+Maximum amount of memory, in bytes, available for use by the heap across all\n+selected nodes.\n+\n+`nodes.jvm.threads`::\n+(integer)\n+Number of active threads in use by JVM across all selected nodes.\n+\n+`nodes.fs.total`::\n+(<<byte-units, byte units>>)\n+Total size of all file stores across all selected nodes.\n+\n+`nodes.fs.total_in_bytes`::\n+(integer)\n+Total size, in bytes, of all file stores across all seleced nodes.\n+\n+`nodes.fs.free`::\n+(<<byte-units, byte units>>)\n+Amount of unallocated disk space in file stores across all selected nodes.\n+\n+`nodes.fs.free_in_bytes`::\n+(integer)\n+Total number of unallocated bytes in file stores across all selected nodes.\n+\n+`nodes.fs.available`::\n+(<<byte-units, byte units>>)\n+Total amount of disk space available to JVM in file\n+stores across all selected nodes.\n++\n+Depending on OS or process-level restrictions, this amount may be less than\n+`nodes.fs.free`. This is the actual amount of free disk space the selected {es}\n+nodes can use.\n+\n+`nodes.fs.available_in_bytes`::\n+(integer)\n+Total number of bytes available to JVM in file stores\n+across all selected nodes.\n++\n+Depending on OS or process-level restrictions, this number may be less than\n+`nodes.fs.free_in_byes`. This is the actual amount of free disk space the\n+selected {es} nodes can use.\n+\n+`nodes.plugins`::\n+(array of objects)\n+Contains details about installed plugins and modules across all selected nodes.\n++\n+If no plugins or modules are installed, this array is empty.\n+\n+`nodes.plugins.name`:::\n+(string)\n+Name of the {es} plugin.\n+\n+`nodes.plugins.version`:::\n+(string)\n+{es} version for which the plugin was built.\n+", "originalCommit": "578a95d3adf9b72f171689a3791d20407e82d256", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5OTgxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/52813#discussion_r389599811", "bodyText": "Added these with e47cf3f.", "author": "jrodewig", "createdAt": "2020-03-09T11:22:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE2MTMwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE2MjA0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/52813#discussion_r389162047", "bodyText": "Missing nodes.plugins.extended_plugins typed array[string] which defines any other plugins this plugin extends through SPI, or empty array if it does not extend anything.", "author": "jbaiera", "createdAt": "2020-03-06T21:52:08Z", "path": "docs/reference/cluster/stats.asciidoc", "diffHunk": "@@ -338,7 +348,289 @@ This object is not populated by the cluster stats API.\n +\n To get information on segment files, use the <<cluster-nodes-stats,node stats\n API>>.\n+====\n+\n+[[cluster-stats-api-response-body-nodes]]\n+===== `nodes` section\n+\n+[%collapsible]\n+====\n+`nodes.count.total`::\n+(integer)\n+Total number of nodes selected by the request's <<cluster-nodes,node filters>>.\n+\n+`nodes.count.coordinating_only`::\n+(integer)\n+Number of selected <<coordinating-only-node,coordinating only>> nodes.\n+\n+`nodes.count.data`::\n+(integer)\n+Number of selected nodes with the <<data-node,data>> role.\n+\n+`nodes.count.ingest`::\n+(integer)\n+Number of selected nodes with the <<node-ingest-node,ingest>> role.\n+\n+`nodes.count.master`::\n+(integer)\n+Number of selected nodes with the <<master-node,master-eligible>> role.\n+\n+`nodes.count.ml`::\n+(integer)\n+Number of selected nodes with the <<ml-node,machine learning>> role.\n+\n+`nodes.count.voting_only`::\n+(integer)\n+Number of selected nodes with the <<voting-only-node,voting-only>> role.\n+\n+`nodes.versions`::\n+(array of strings)\n+Array of {es} versions used on selected nodes.\n+\n+`nodes.os.available_processors`::\n+(integer)\n+Number of processors available to JVM across all selected nodes.\n+\n+`nodes.os.allocated_processors`::\n+(integer)\n+Number of processors used to calculate thread pool size across all selected\n+nodes.\n++\n+This number can be set with the `processors` setting of a node and defaults to\n+the number of processors reported by the OS. In both cases, this number will\n+never be larger than `32`.\n+\n+`nodes.os.names`::\n+(array of objects)\n+Contains details about operating systems used by one or more selected nodes.\n+\n+`nodes.os.names.name`:::\n+(string)\n+Name of an operating system used by one or more selected nodes.\n+\n+`nodes.os.names.count`:::\n+(string)\n+Number of selected nodes using the operating system.\n+\n+`nodes.os.pretty_names`::\n+(array of objects)\n+Contains details about operating systems used by one or more selected nodes.\n+\n+`nodes.os.pretty_names.pretty_name`:::\n+(string)\n+Human-readable name of an operating system used by one or more selected nodes.\n+\n+`nodes.os.pretty_names.count`:::\n+(string)\n+Number of selected nodes using the operating system.\n+\n+`nodes.os.mem.total`::\n+(<<byte-units, byte units>>)\n+Total amount of physical memory across all selected nodes.\n+\n+`nodes.os.mem.total_in_bytes`::\n+(integer)\n+Total amount, in bytes, of physical memory across all selected nodes.\n+\n+`nodes.os.mem.free`::\n+(<<byte-units, byte units>>)\n+Amount of free physical memory across all selected nodes.\n+\n+`nodes.os.mem.free_in_bytes`::\n+(integer)\n+Amount, in bytes, of free physical memory across all selected nodes.\n+\n+`nodes.os.mem.used`::\n+(<<byte-units, byte units>>)\n+Amount of physical memory in use across all selected nodes.\n+\n+`nodes.os.mem.used_in_bytes`::\n+(integer)\n+Amount, in bytes, of physical memory in use across all selected nodes.\n+\n+`nodes.os.mem.free_percent`::\n+(integer)\n+Percentage of free physical memory across all selected nodes.\n+\n+`nodes.os.mem.used_percent`::\n+(integer)\n+Percentage of physical memory in use across all selected nodes.\n+\n+`nodes.process.cpu.percent`::\n+(integer)\n+Percentage of CPU used across all selected nodes. Returns `-1` if\n+not supported.\n+\n+`nodes.process.open_file_descriptors.min`::\n+(integer)\n+Minimum number of concurrently open file descriptors across all selected nodes.\n+Returns `-1` if not supported.\n+\n+`nodes.process.open_file_descriptors.max`::\n+(integer)\n+Maximum number of concurrently open file descriptors allowed across all selected\n+nodes. Returns `-1` if not supported.\n+\n+`nodes.process.open_file_descriptors.avg`::\n+(integer)\n+Average number of concurrently open file descriptors. Returns `-1` if not\n+supported.\n+\n+`nodes.jvm.max_uptime`::\n+(<<time-units,time unit>>)\n+Uptime duration since JVM last started.\n+\n+`nodes.jvm.max_uptime_in_millis`::\n+(integer)\n+Uptime duration, in milliseconds, since JVM last started.\n+\n+`nodes.jvm.versions`::\n+(array of objects)\n+Contains details about the JVM versions used by selected\n+nodes.\n \n+`nodes.jvm.versions.version`:::\n+(string)\n+Version of JVM used by one or more selected nodes.\n+\n+`nodes.jvm.versions.vm_name`:::\n+(string)\n+Name of the JVM.\n+\n+`nodes.jvm.versions.vm_version`:::\n+(string)\n+Full version number of JVM.\n++\n+The full version number includes a plus sign (`+`) followed by the build number.\n+\n+`nodes.jvm.versions.vm_vendor`:::\n+(string)\n+Vendor of the JVM.\n+\n+`nodes.jvm.versions.bundled_jdk`:::\n+(boolean)\n+If `true`, the JVM includes a bundled Java Development Kit (JDK).\n+\n+`nodes.jvm.versions.using_bundled_jdk`:::\n+(boolean)\n+If `true`, a bundled JDK is in use by JVM.\n+\n+`nodes.jvm.versions.count`:::\n+(integer)\n+Total number of selected nodes using JVM.\n+\n+`nodes.jvm.mem.heap_used`::\n+(<<byte-units, byte units>>)\n+Memory currently in use by the heap across all selected nodes.\n+\n+`nodes.jvm.mem.heap_used_in_bytes`::\n+(integer)\n+Memory, in bytes, currently in use by the heap across all selected nodes.\n+\n+`nodes.jvm.mem.heap_max`::\n+(<<byte-units, byte units>>)\n+Maximum amount of memory, in bytes, available for use by the heap across all\n+selected nodes.\n+\n+`nodes.jvm.mem.heap_max_in_bytes`::\n+(integer)\n+Maximum amount of memory, in bytes, available for use by the heap across all\n+selected nodes.\n+\n+`nodes.jvm.threads`::\n+(integer)\n+Number of active threads in use by JVM across all selected nodes.\n+\n+`nodes.fs.total`::\n+(<<byte-units, byte units>>)\n+Total size of all file stores across all selected nodes.\n+\n+`nodes.fs.total_in_bytes`::\n+(integer)\n+Total size, in bytes, of all file stores across all seleced nodes.\n+\n+`nodes.fs.free`::\n+(<<byte-units, byte units>>)\n+Amount of unallocated disk space in file stores across all selected nodes.\n+\n+`nodes.fs.free_in_bytes`::\n+(integer)\n+Total number of unallocated bytes in file stores across all selected nodes.\n+\n+`nodes.fs.available`::\n+(<<byte-units, byte units>>)\n+Total amount of disk space available to JVM in file\n+stores across all selected nodes.\n++\n+Depending on OS or process-level restrictions, this amount may be less than\n+`nodes.fs.free`. This is the actual amount of free disk space the selected {es}\n+nodes can use.\n+\n+`nodes.fs.available_in_bytes`::\n+(integer)\n+Total number of bytes available to JVM in file stores\n+across all selected nodes.\n++\n+Depending on OS or process-level restrictions, this number may be less than\n+`nodes.fs.free_in_byes`. This is the actual amount of free disk space the\n+selected {es} nodes can use.\n+\n+`nodes.plugins`::\n+(array of objects)\n+Contains details about installed plugins and modules across all selected nodes.\n++\n+If no plugins or modules are installed, this array is empty.\n+\n+`nodes.plugins.name`:::\n+(string)\n+Name of the {es} plugin.\n+\n+`nodes.plugins.version`:::\n+(string)\n+{es} version for which the plugin was built.\n+\n+`nodes.plugins.description`:::\n+(string)\n+Short description of the plugin.\n+\n+`nodes.plugins.classname`:::\n+(string)\n+Class name used as the plugin's entry point.\n+", "originalCommit": "578a95d3adf9b72f171689a3791d20407e82d256", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5OTg5OA==", "url": "https://github.com/elastic/elasticsearch/pull/52813#discussion_r389599898", "bodyText": "Added this with 7d6a5e1.", "author": "jrodewig", "createdAt": "2020-03-09T11:22:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE2MjA0Nw=="}], "type": "inlineReview"}, {"oid": "5876819e1309b5d498a86fcfe2bd099be4aefc92", "url": "https://github.com/elastic/elasticsearch/commit/5876819e1309b5d498a86fcfe2bd099be4aefc92", "message": "[DOCS] Clean up node role parms", "committedDate": "2020-03-09T11:18:27Z", "type": "commit"}, {"oid": "e47cf3fba015b381deca1990ff5a2913a11fedb0", "url": "https://github.com/elastic/elasticsearch/commit/e47cf3fba015b381deca1990ff5a2913a11fedb0", "message": "Add version parms", "committedDate": "2020-03-09T11:18:58Z", "type": "commit"}, {"oid": "7d6a5e1cfa3dc301373ba3753a31d9ca20cafcef", "url": "https://github.com/elastic/elasticsearch/commit/7d6a5e1cfa3dc301373ba3753a31d9ca20cafcef", "message": "Add extended plugins parm", "committedDate": "2020-03-09T11:19:50Z", "type": "commit"}]}