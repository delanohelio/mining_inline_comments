{"pr_number": 64024, "pr_title": "Ensure CI is run in FIPS 140 approved only mode", "pr_createdAt": "2020-10-21T21:36:58Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64024", "timeline": [{"oid": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "url": "https://github.com/elastic/elasticsearch/commit/f42f7a60bb9572109b320fedcb1b396adab5f36c", "message": "Ensure CI is run in FIPS 140 approved only mode\n\nWe were depending on the BouncyCastle FIPS own mechanics to set\nitself in approved only mode since we run with the Security\nManager enabled. The check during startup seems to happen before we\nset our restrictive SecurityManager though in\norg.elasticsearch.bootstrap.Elasticsearch , and this means that\nBCFIPS would not be in approved onlu mode, unless explicitly\nconfigured so.\n\nThis commit sets the appropriate JVM property to explicitly set\nBCFIPS in approved only mode and addresses a number of tests that\nwould fail in approved mode. Mainly:\n- Tests that use PBKDF2 with a password less than 112 bits (14char)\n- Tests that use a PKCS12 keystore and were not already muted.\n\nIt also changes a few unit tests where we would use bcrypt even in\nFIPS 140 mode. These would still pass since we are bundling our own\nbcrypt implementation, but are now changed to use FIPS 140 approved\nalgorithms instead for better coverage.", "committedDate": "2020-10-21T21:17:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwMzM0NA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509803344", "bodyText": "I think these tests can have better coverage if we move them into ESTestCase#inFipsJvm so that they are always checked if fips is enabled.", "author": "ywangd", "createdAt": "2020-10-22T00:04:25Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/Fips140ProviderVerificationTests.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core;\n+\n+import org.bouncycastle.crypto.CryptoServicesRegistrar;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.security.Security;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+public class Fips140ProviderVerificationTests extends ESTestCase {\n+\n+    public void testBcFipsProviderInUse(){\n+        if (inFipsJvm()){\n+            assertThat(Security.getProviders().length > 0, equalTo(true));\n+            assertThat(Security.getProviders()[0].getName(), containsString(\"BCFIPS\"));\n+        }\n+    }\n+\n+    public void testInApprovedOnlyMode(){\n+        if (inFipsJvm()){\n+            assertThat(CryptoServicesRegistrar.isInApprovedOnlyMode(), equalTo(true));\n+        }\n+    }", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0MjM3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509842375", "bodyText": "I think it's better here. I feel like this is more explicit in its own test that has its own distinct purpose rather than burying it in another test (case).\nWe might get more coverage by moving them, but I don't understand the value of that - we only need to run them once to get the value we need.", "author": "tvernum", "createdAt": "2020-10-22T02:28:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwMzM0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0OTcxNg==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509849716", "bodyText": "I think it has some value, maybe not for CI, but for individual tests when you need run them locally so that you can be sure FIPS is always correctly configured by the property passed from CLI.", "author": "ywangd", "createdAt": "2020-10-22T02:56:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwMzM0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg2ODg0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509868843", "bodyText": "I think it has some value, maybe not for CI,\n\nThe purpose is to cover CI ,do that we don't make any change in the feature that would lead to us not running CI in non approved mode.\nI think the clarity of it being in it's own class makes sense and we should leave it here", "author": "jkakavas", "createdAt": "2020-10-22T04:11:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwMzM0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwNjc2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509806762", "bodyText": "The password was passwd which is different from SecuritySettingsSourceField.TEST_PASSWORD_SECURE_STRING. This and a few similar changes in other places are causing CI failure for this PR. I think the fix should be updating AbstractPrivilegeTestCase#setUser to use the new password as well.", "author": "ywangd", "createdAt": "2020-10-22T00:14:53Z", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/integration/ClusterPrivilegeIntegrationTests.java", "diffHunk": "@@ -79,8 +79,9 @@ protected String configRoles() {\n \n     @Override\n     protected String configUsers() {\n-        final String usersPasswdHashed = new String(Hasher.resolve(\n-            randomFrom(\"pbkdf2\", \"pbkdf2_1000\", \"bcrypt\", \"bcrypt9\")).hash(new SecureString(\"passwd\".toCharArray())));\n+        final Hasher passwdHasher = inFipsJvm() ? Hasher.resolve(randomFrom(\"pbkdf2\", \"pbkdf2_1000\")) :\n+            Hasher.resolve(randomFrom(\"pbkdf2\", \"pbkdf2_1000\", \"bcrypt\", \"bcrypt9\")) ;\n+        final String usersPasswdHashed = new String(passwdHasher.hash(SecuritySettingsSourceField.TEST_PASSWORD_SECURE_STRING));", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwNzUxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509807511", "bodyText": "Nit: The indentation is now inconsistent with all_indices_role. I do think the change here looks better. But I'd suggest we make the same change to all_indices_role as well.", "author": "ywangd", "createdAt": "2020-10-22T00:17:28Z", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/integration/CreateDocsIndexPrivilegeTests.java", "diffHunk": "@@ -22,14 +22,14 @@\n             \"  indices:\\n\" +\n             \"    - names: '*'\\n\" +\n             \"      privileges: [ all ]\\n\" +\n-        \"create_doc_role:\\n\" +\n+            \"create_doc_role:\\n\" +", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwNzYwMA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509807600", "bodyText": "Nit: indentation inconsistency.", "author": "ywangd", "createdAt": "2020-10-22T00:17:48Z", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/integration/CreateDocsIndexPrivilegeTests.java", "diffHunk": "@@ -22,14 +22,14 @@\n             \"  indices:\\n\" +\n             \"    - names: '*'\\n\" +\n             \"      privileges: [ all ]\\n\" +\n-        \"create_doc_role:\\n\" +\n+            \"create_doc_role:\\n\" +\n             \"  indices:\\n\" +\n             \"    - names: '*'\\n\" +\n             \"      privileges: [ create_doc ]\\n\";\n \n     private static final String USERS_ROLES =\n         \"all_indices_role:admin\\n\" +\n-        \"create_doc_role:\" + CREATE_DOC_USER + \"\\n\";\n+            \"create_doc_role:\" + CREATE_DOC_USER + \"\\n\";", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwOTAxMA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509809010", "bodyText": "The same password change needs to be made below (L263) when constructing the Client.", "author": "ywangd", "createdAt": "2020-10-22T00:22:53Z", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/xpack/security/authz/store/NativePrivilegeStoreCacheTests.java", "diffHunk": "@@ -249,12 +249,12 @@ public void testRolesCacheIsClearedWhenPrivilegesIsChanged() {\n             .addIndices(new String[] { \"*\" }, new String[] { \"read\" }, null, null, null, false)\n             .get();\n         assertTrue(putRoleResponse.isCreated());\n-\n+        final Hasher hasher = inFipsJvm() ? Hasher.resolve(randomFrom(\"pbkdf2\", \"pbkdf2_1000\")) :\n+            Hasher.resolve(randomFrom(\"pbkdf2\", \"pbkdf2_1000\", \"bcrypt\", \"bcrypt9\"));\n         final PutUserResponse putUserResponse = new PutUserRequestBuilder(client)\n             .username(testRoleCacheUser)\n             .roles(testRole)\n-            .password(new SecureString(\"password\".toCharArray()),\n-                Hasher.resolve(randomFrom(\"pbkdf2\", \"pbkdf2_1000\", \"bcrypt9\", \"bcrypt8\", \"bcrypt\")))\n+            .password(new SecureString(\"longerpassword\".toCharArray()), hasher)", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0MTQwMA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509841400", "bodyText": "Nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-10-22T02:25:24Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/Fips140ProviderVerificationTests.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core;\n+\n+import org.bouncycastle.crypto.CryptoServicesRegistrar;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.security.Security;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+public class Fips140ProviderVerificationTests extends ESTestCase {\n+\n+    public void testBcFipsProviderInUse(){\n+        if (inFipsJvm()){\n+            assertThat(Security.getProviders().length > 0, equalTo(true));\n+            assertThat(Security.getProviders()[0].getName(), containsString(\"BCFIPS\"));\n+        }\n+    }\n+\n+    public void testInApprovedOnlyMode(){\n+        if (inFipsJvm()){", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg3MDg1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509870855", "bodyText": "Depending on tools sucks when the tooling fails :/", "author": "jkakavas", "createdAt": "2020-10-22T04:21:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0MTQwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0MTQ1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509841453", "bodyText": "Nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testBcFipsProviderInUse(){\n          \n          \n            \n                public void testBcFipsProviderInUse() {", "author": "tvernum", "createdAt": "2020-10-22T02:25:33Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/Fips140ProviderVerificationTests.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core;\n+\n+import org.bouncycastle.crypto.CryptoServicesRegistrar;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.security.Security;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+public class Fips140ProviderVerificationTests extends ESTestCase {\n+\n+    public void testBcFipsProviderInUse(){", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0MTQ4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509841486", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-10-22T02:25:40Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/Fips140ProviderVerificationTests.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core;\n+\n+import org.bouncycastle.crypto.CryptoServicesRegistrar;\n+import org.elasticsearch.test.ESTestCase;\n+\n+import java.security.Security;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.equalTo;\n+\n+public class Fips140ProviderVerificationTests extends ESTestCase {\n+\n+    public void testBcFipsProviderInUse(){\n+        if (inFipsJvm()){", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0Mzk4MA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509843980", "bodyText": "I don't think we should disable this whole test in FIPS. It seems like an unnecessary reduction in test coverage.", "author": "tvernum", "createdAt": "2020-10-22T02:35:01Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/file/FileUserPasswdStoreTests.java", "diffHunk": "@@ -51,6 +52,11 @@\n     private Environment env;\n     private ThreadPool threadPool;\n \n+    @BeforeClass\n+    public static void disableInFips(){\n+        assumeFalse(\"We are using hashing algorithms that won't be available in FIPS-140 mode\", inFipsJvm());\n+    }", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDAxOTYyMg==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r510019622", "bodyText": "Sure, that was a lazy decision", "author": "jkakavas", "createdAt": "2020-10-22T09:34:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0Mzk4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0NDYxMA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509844610", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (inFipsJvm()){\n          \n          \n            \n                            if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-10-22T02:37:23Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/saml/SamlTestCase.java", "diffHunk": "@@ -85,13 +85,21 @@ public static void restoreLocale() {\n                 keySize = randomFrom(256, 384);\n                 break;\n             case \"RSA\":\n-                keySize = randomFrom(1024, 2048, 4096);\n+                if (inFipsJvm()){", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0NDcxNw==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509844717", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            keySize = randomFrom(2048);\n          \n          \n            \n                            keySize = 2048;", "author": "tvernum", "createdAt": "2020-10-22T02:37:45Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/saml/SamlTestCase.java", "diffHunk": "@@ -85,13 +85,21 @@ public static void restoreLocale() {\n                 keySize = randomFrom(256, 384);\n                 break;\n             case \"RSA\":\n-                keySize = randomFrom(1024, 2048, 4096);\n+                if (inFipsJvm()){\n+                    keySize = randomFrom(2048, 4096);\n+                } else {\n+                    keySize = randomFrom(1024, 2048, 4096);\n+                }\n                 break;\n             case \"DSA\":\n-                keySize = randomFrom(1024, 2048, 3072);\n+                if (inFipsJvm()){\n+                    keySize = randomFrom(2048, 3072);\n+                } else {\n+                    keySize = randomFrom(1024, 2048, 3072);\n+                }\n                 break;\n             default:\n-                keySize = randomFrom(1024, 2048);\n+                keySize = randomFrom(2048);", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg0NDc5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r509844796", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inFipsJvm()){\n          \n          \n            \n                    if (inFipsJvm()) {", "author": "tvernum", "createdAt": "2020-10-22T02:37:57Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/support/CachingUsernamePasswordRealmTests.java", "diffHunk": "@@ -65,7 +66,11 @@ public void stop() {\n     }\n \n     public void testCacheSettings() {\n-        String cachingHashAlgo = randomFrom(Hasher.getAvailableAlgoCacheHash());\n+        List<String> availableCacheAlgos = Hasher.getAvailableAlgoCacheHash();\n+        if (inFipsJvm()){", "originalCommit": "f42f7a60bb9572109b320fedcb1b396adab5f36c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0a2ff00db2899186b4b3849d80d4601ea4e3dec4", "url": "https://github.com/elastic/elasticsearch/commit/0a2ff00db2899186b4b3849d80d4601ea4e3dec4", "message": "fix passwords for tests", "committedDate": "2020-10-22T09:41:04Z", "type": "commit"}, {"oid": "1c7fd102f45795871e9163ea5b047dc08518a82d", "url": "https://github.com/elastic/elasticsearch/commit/1c7fd102f45795871e9163ea5b047dc08518a82d", "message": "Re-enable FileUserPasswdStoreTests", "committedDate": "2020-10-22T10:26:51Z", "type": "commit"}, {"oid": "fabb2373ad334be4379ca8fda9e618b06b1a3e58", "url": "https://github.com/elastic/elasticsearch/commit/fabb2373ad334be4379ca8fda9e618b06b1a3e58", "message": "unused import", "committedDate": "2020-10-22T10:35:34Z", "type": "commit"}, {"oid": "b6cbb686866bb8cf3d9efc340920235ad81da8b4", "url": "https://github.com/elastic/elasticsearch/commit/b6cbb686866bb8cf3d9efc340920235ad81da8b4", "message": "Adjust a couple of more tests", "committedDate": "2020-10-22T11:26:35Z", "type": "commit"}, {"oid": "9f8c0307cc4881403831edde1a83b6c965dc0503", "url": "https://github.com/elastic/elasticsearch/commit/9f8c0307cc4881403831edde1a83b6c965dc0503", "message": "Fix integration tests to use long passwords", "committedDate": "2020-10-26T10:31:36Z", "type": "commit"}, {"oid": "547028bf6cd1f3413624435dd9bcc9b173d48e2d", "url": "https://github.com/elastic/elasticsearch/commit/547028bf6cd1f3413624435dd9bcc9b173d48e2d", "message": "Set fips_mode.enabled to true and set a defaut compliant password hashing algo for testclusters", "committedDate": "2020-10-26T11:34:33Z", "type": "commit"}, {"oid": "4179e186dd4e08d6394ad7d50ae285675a310dd9", "url": "https://github.com/elastic/elasticsearch/commit/4179e186dd4e08d6394ad7d50ae285675a310dd9", "message": "revert test debugging change", "committedDate": "2020-10-26T11:54:48Z", "type": "commit"}, {"oid": "2c5ee115f47847abe7e3434e942059dc2f751c43", "url": "https://github.com/elastic/elasticsearch/commit/2c5ee115f47847abe7e3434e942059dc2f751c43", "message": "Add password to keystores and make sure passwords are longer than 14 chars", "committedDate": "2020-10-27T20:12:06Z", "type": "commit"}, {"oid": "3531517bf80b549e7eb4953e5bede48c1ec1c9b2", "url": "https://github.com/elastic/elasticsearch/commit/3531517bf80b549e7eb4953e5bede48c1ec1c9b2", "message": "Merge remote-tracking branch 'origin/master' into fips-approved-mode-tests", "committedDate": "2020-10-29T16:02:23Z", "type": "commit"}, {"oid": "312d394d3715a6b99037a45881748d128285ccc9", "url": "https://github.com/elastic/elasticsearch/commit/312d394d3715a6b99037a45881748d128285ccc9", "message": "Use long passwords in rest tests", "committedDate": "2020-12-01T17:47:36Z", "type": "commit"}, {"oid": "e83ecd892aabd49c8ec101d5730dc3b828aacaff", "url": "https://github.com/elastic/elasticsearch/commit/e83ecd892aabd49c8ec101d5730dc3b828aacaff", "message": "Add keystore password when in fips mode, and fix some passwords", "committedDate": "2020-12-01T19:43:52Z", "type": "commit"}, {"oid": "7537c2ccd9be30c56fded81a5def76bc867445a6", "url": "https://github.com/elastic/elasticsearch/commit/7537c2ccd9be30c56fded81a5def76bc867445a6", "message": "Merge remote-tracking branch 'origin/master' into fips-approved-mode-tests", "committedDate": "2020-12-01T19:54:55Z", "type": "commit"}, {"oid": "91c37fd36ce1293f52a9c82c449825a2281b245b", "url": "https://github.com/elastic/elasticsearch/commit/91c37fd36ce1293f52a9c82c449825a2281b245b", "message": "Skip REST YAML tests in FIPS 140 mode\n\nCurrently we don't have a way to selectively mute REST YAML tests\nin FIPS 140 mode.\n\nThis commit introduces a new feature (fips_140) that can be used\nin skip blocks to allow that.", "committedDate": "2020-12-02T13:59:57Z", "type": "commit"}, {"oid": "f3f11884ee2ddd80891349ca1ee3bd1fdb490f9a", "url": "https://github.com/elastic/elasticsearch/commit/f3f11884ee2ddd80891349ca1ee3bd1fdb490f9a", "message": "Disable java rest tests for IDP in FIPS 140 mode", "committedDate": "2020-12-02T18:03:45Z", "type": "commit"}, {"oid": "52dd0ebea386002c95a54384c7c0f81c5ce01396", "url": "https://github.com/elastic/elasticsearch/commit/52dd0ebea386002c95a54384c7c0f81c5ce01396", "message": "Mute tests using PKCS#12", "committedDate": "2020-12-02T18:43:24Z", "type": "commit"}, {"oid": "82c86a43ec588fff4da2162216d570db8201889e", "url": "https://github.com/elastic/elasticsearch/commit/82c86a43ec588fff4da2162216d570db8201889e", "message": "Use BuildParams instead of parsing the sysprop again", "committedDate": "2020-12-02T18:44:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxNTgzMg==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r534415832", "bodyText": "Should we add \"pbkdf2_stretch\"for completeness?", "author": "BigPandaToo", "createdAt": "2020-12-02T19:10:58Z", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/integration/ClusterPrivilegeIntegrationTests.java", "diffHunk": "@@ -79,8 +79,9 @@ protected String configRoles() {\n \n     @Override\n     protected String configUsers() {\n-        final String usersPasswdHashed = new String(Hasher.resolve(\n-            randomFrom(\"pbkdf2\", \"pbkdf2_1000\", \"bcrypt\", \"bcrypt9\")).hash(new SecureString(\"passwd\".toCharArray())));\n+        final Hasher passwdHasher = inFipsJvm() ? Hasher.resolve(randomFrom(\"pbkdf2\", \"pbkdf2_1000\")) :\n+            Hasher.resolve(randomFrom(\"pbkdf2\", \"pbkdf2_1000\", \"bcrypt\", \"bcrypt9\")) ;", "originalCommit": "82c86a43ec588fff4da2162216d570db8201889e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxNzEwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r534417109", "bodyText": "yes, it's in my to do list. When I added the commit there was no pbkf2_stretch", "author": "jkakavas", "createdAt": "2020-12-02T19:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxNTgzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxNjE2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r534416165", "bodyText": "Same as above. \"pbkdf2_stretch\"?", "author": "BigPandaToo", "createdAt": "2020-12-02T19:11:34Z", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/integration/CreateDocsIndexPrivilegeTests.java", "diffHunk": "@@ -43,8 +43,9 @@ protected String configRoles() {\n \n     @Override\n     protected String configUsers() {\n-        final String usersPasswdHashed = new String(Hasher.resolve(\n-            randomFrom(\"pbkdf2\", \"pbkdf2_1000\", \"bcrypt\", \"bcrypt9\")).hash(new SecureString(\"passwd\".toCharArray())));\n+        final Hasher passwdHasher = inFipsJvm() ? Hasher.resolve(randomFrom(\"pbkdf2\", \"pbkdf2_1000\")) :\n+            Hasher.resolve(randomFrom(\"pbkdf2\", \"pbkdf2_1000\", \"bcrypt\", \"bcrypt9\"));", "originalCommit": "82c86a43ec588fff4da2162216d570db8201889e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxNjY1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r534416653", "bodyText": "Same as above. \"pbkdf2_stretch\"? There are few more cases below as well.", "author": "BigPandaToo", "createdAt": "2020-12-02T19:12:22Z", "path": "x-pack/plugin/security/src/internalClusterTest/java/org/elasticsearch/integration/IndexPrivilegeIntegTests.java", "diffHunk": "@@ -120,8 +121,9 @@ protected String configRoles() {\n \n     @Override\n     protected String configUsers() {\n-        final String usersPasswdHashed = new String(Hasher.resolve(\n-            randomFrom(\"pbkdf2\", \"pbkdf2_1000\", \"bcrypt\", \"bcrypt9\")).hash(new SecureString(\"passwd\".toCharArray())));\n+        final Hasher passwdHasher = inFipsJvm() ? Hasher.resolve(randomFrom(\"pbkdf2\", \"pbkdf2_1000\")) :\n+            Hasher.resolve(randomFrom(\"pbkdf2\", \"pbkdf2_1000\", \"bcrypt\", \"bcrypt9\"));", "originalCommit": "82c86a43ec588fff4da2162216d570db8201889e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1NzUxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r534457511", "bodyText": "see previous comment", "author": "jkakavas", "createdAt": "2020-12-02T20:23:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxNjY1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzMjc0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r534432749", "bodyText": "It may be outside of the scope of this PR, but do we plan to test Fips compatible PKCS12 keystores?", "author": "BigPandaToo", "createdAt": "2020-12-02T19:39:36Z", "path": "libs/ssl-config/src/test/java/org/elasticsearch/common/ssl/SslConfigurationLoaderTests.java", "diffHunk": "@@ -103,6 +103,7 @@ public void testLoadTrustFromPemCAs() {\n     }\n \n     public void testLoadTrustFromPkcs12() {\n+        assumeFalse(\"Can't use JKS/PKCS12 keystores in a FIPS JVM\", inFipsJvm());", "originalCommit": "82c86a43ec588fff4da2162216d570db8201889e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1NzM0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r534457347", "bodyText": "There is no such thing as Fips compatible PKCS12 keystores, unfortunately*. See https://downloads.bouncycastle.org/fips-java/BC-FJA-UserGuide-1.0.2.pdf section 7 too. We document this in https://www.elastic.co/guide/en/elasticsearch/reference/current/fips-140-compliance.html#_tls_keystores_and_keys\n* Technically, I think it might be possible to create a PKCS12 implementation that uses only PBES2 ( i.e. PBKDF2 ) for key derivation, but that would be outside the scope of this PR and our FIPS 140 support too.", "author": "jkakavas", "createdAt": "2020-12-02T20:23:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzMjc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUzNTAwMA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r535535000", "bodyText": "Aha, I must have mistaken FIPS compatible with FIPS approved only compatible...", "author": "BigPandaToo", "createdAt": "2020-12-03T19:44:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzMjc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU1Mzg0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r535553846", "bodyText": "Not sure what you mean by compatible here, we can also discuss live", "author": "jkakavas", "createdAt": "2020-12-03T20:11:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzMjc0OQ=="}], "type": "inlineReview"}, {"oid": "30703327db7b97333f51f3de08748c93a68e2732", "url": "https://github.com/elastic/elasticsearch/commit/30703327db7b97333f51f3de08748c93a68e2732", "message": "Fix password in rest tests", "committedDate": "2020-12-03T10:38:55Z", "type": "commit"}, {"oid": "17a5ca478ca0df3f2496d45f7dca66507529d405", "url": "https://github.com/elastic/elasticsearch/commit/17a5ca478ca0df3f2496d45f7dca66507529d405", "message": "adjust fips.gradle", "committedDate": "2020-12-03T10:39:42Z", "type": "commit"}, {"oid": "6d3c8f2a49653dc4a4ae63bec2014b9265bf4f90", "url": "https://github.com/elastic/elasticsearch/commit/6d3c8f2a49653dc4a4ae63bec2014b9265bf4f90", "message": "disable test that assumes an OSS distribution", "committedDate": "2020-12-03T20:43:35Z", "type": "commit"}, {"oid": "2e903d7fe65c3e0c6c7b677630a7c5422b85fbd4", "url": "https://github.com/elastic/elasticsearch/commit/2e903d7fe65c3e0c6c7b677630a7c5422b85fbd4", "message": "Mute tests that explicitly set the license to basic in FIPS 140, as fips mode is not supported in basic", "committedDate": "2020-12-03T20:57:26Z", "type": "commit"}, {"oid": "48164eb642a65781ab89e6238df6fb2a6f012b92", "url": "https://github.com/elastic/elasticsearch/commit/48164eb642a65781ab89e6238df6fb2a6f012b92", "message": "Fix SecurityDocumentationIT passwords", "committedDate": "2020-12-03T20:58:32Z", "type": "commit"}, {"oid": "56c33fc474dc48c371970f4fe26feb72df8fe3a6", "url": "https://github.com/elastic/elasticsearch/commit/56c33fc474dc48c371970f4fe26feb72df8fe3a6", "message": "Don't run ReloadSecureSettingsIT in fips mode. We could move this to xpack and enable TLS as a followup", "committedDate": "2020-12-03T21:00:38Z", "type": "commit"}, {"oid": "ce093a1f228dfa7cf4dfc47dc6a5e99ea6ec872f", "url": "https://github.com/elastic/elasticsearch/commit/ce093a1f228dfa7cf4dfc47dc6a5e99ea6ec872f", "message": "Don't run geo tests with default distribution testclusters", "committedDate": "2020-12-04T07:09:56Z", "type": "commit"}, {"oid": "1d9edb1079e5a1a7cf91714249057ec1a3ba0468", "url": "https://github.com/elastic/elasticsearch/commit/1d9edb1079e5a1a7cf91714249057ec1a3ba0468", "message": "Add password to the keystore of the docs testcluster, even when not in FIPS", "committedDate": "2020-12-04T07:10:35Z", "type": "commit"}, {"oid": "581a954d764f08488416d44cde396bc114f96b7c", "url": "https://github.com/elastic/elasticsearch/commit/581a954d764f08488416d44cde396bc114f96b7c", "message": "fix yaml syntax", "committedDate": "2020-12-04T07:11:42Z", "type": "commit"}, {"oid": "d557343ad818d5cd60aabad4b6ae063d5a5ce05e", "url": "https://github.com/elastic/elasticsearch/commit/d557343ad818d5cd60aabad4b6ae063d5a5ce05e", "message": "yet more unfixed passwords", "committedDate": "2020-12-04T07:20:08Z", "type": "commit"}, {"oid": "7991e077636909eba3ab54e272e212833651d487", "url": "https://github.com/elastic/elasticsearch/commit/7991e077636909eba3ab54e272e212833651d487", "message": "Merge remote-tracking branch 'origin/master' into fips-approved-mode-tests", "committedDate": "2020-12-04T07:32:15Z", "type": "commit"}, {"oid": "3528016f13afdf05af04103545317e858df0d357", "url": "https://github.com/elastic/elasticsearch/commit/3528016f13afdf05af04103545317e858df0d357", "message": "Fix SecurityIT", "committedDate": "2020-12-04T08:04:39Z", "type": "commit"}, {"oid": "5b0b1e07afdddb4fe2b135c7c3018906edf8ae71", "url": "https://github.com/elastic/elasticsearch/commit/5b0b1e07afdddb4fe2b135c7c3018906edf8ae71", "message": "correctly(this time) fix yaml syntax", "committedDate": "2020-12-04T08:43:33Z", "type": "commit"}, {"oid": "b475af5c0779b9e695c3081b9402d61b4768999d", "url": "https://github.com/elastic/elasticsearch/commit/b475af5c0779b9e695c3081b9402d61b4768999d", "message": "mute mapper-extras tests until issue with trial is resolved", "committedDate": "2020-12-04T08:57:55Z", "type": "commit"}, {"oid": "67ef1f988955e62f10c576d5d8cb763acee90cdf", "url": "https://github.com/elastic/elasticsearch/commit/67ef1f988955e62f10c576d5d8cb763acee90cdf", "message": "missing import", "committedDate": "2020-12-04T08:59:16Z", "type": "commit"}, {"oid": "950bc4c88609c9a1c1f884023bc7389bad62d8ef", "url": "https://github.com/elastic/elasticsearch/commit/950bc4c88609c9a1c1f884023bc7389bad62d8ef", "message": "Adjust passwords in docs integration tests", "committedDate": "2020-12-04T11:30:13Z", "type": "commit"}, {"oid": "2493529fe5c8052136d9b17d7929b911bb7445ea", "url": "https://github.com/elastic/elasticsearch/commit/2493529fe5c8052136d9b17d7929b911bb7445ea", "message": "Another round of password adjustments", "committedDate": "2020-12-04T13:46:58Z", "type": "commit"}, {"oid": "3a0b6d01ab2676fdb297818c0b98ca00720fb4e2", "url": "https://github.com/elastic/elasticsearch/commit/3a0b6d01ab2676fdb297818c0b98ca00720fb4e2", "message": "factor out selecting a random hashing algo to a method of its own", "committedDate": "2020-12-04T14:46:26Z", "type": "commit"}, {"oid": "637d3560c35c7f4424f2f8f27743980159f4ebc2", "url": "https://github.com/elastic/elasticsearch/commit/637d3560c35c7f4424f2f8f27743980159f4ebc2", "message": "revert unintended formatting changes", "committedDate": "2020-12-06T06:43:21Z", "type": "commit"}, {"oid": "418fb16302901330ec713f9c7fd8606e2a87ab4e", "url": "https://github.com/elastic/elasticsearch/commit/418fb16302901330ec713f9c7fd8606e2a87ab4e", "message": "Mute test that needs OSS cluster in FIPS 140 mode", "committedDate": "2020-12-06T06:43:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc3NTQyNg==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r537775426", "bodyText": "Doesn't look like we ever validate this password, so may be leaving the rang in {6, 19} would make sense just for completenes (since normally do allow shorter passwords)", "author": "BigPandaToo", "createdAt": "2020-12-07T19:34:23Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/SecurityIT.java", "diffHunk": "@@ -222,7 +222,7 @@ private PutUserRequest randomPutUserRequest(boolean enabled) {\n     }\n \n     private static PutUserRequest randomPutUserRequest(User user, boolean enabled) {\n-        final char[] password = randomAlphaOfLengthBetween(6, 10).toCharArray();\n+        final char[] password = randomAlphaOfLengthBetween(14, 19).toCharArray();", "originalCommit": "3a0b6d01ab2676fdb297818c0b98ca00720fb4e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2OTg2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r538069867", "bodyText": "This is not only about verification. Put user requests will trigger password hashing, which will fail in fips mode with short passwords", "author": "jkakavas", "createdAt": "2020-12-08T06:32:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc3NTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU3ODA4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r538578081", "bodyText": "It doesn't look like it will. PutUserRequestBuilder does trigger a hasher, but we never get there. Looks like PutUserRequest is only used in tests.\nWhith this said, I don't think it's a big problem to leave {14, 19} range here as long as we still have some tests covering the short allowed passwords when Fips is off.", "author": "BigPandaToo", "createdAt": "2020-12-08T16:38:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc3NTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU5MjgxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r538592811", "bodyText": "It doesn't look like it will.\n\nIt will.\nTry ./gradlew client:rest-high-level:integTest --tests=\"org.elasticsearch.client.SecurityIT.testPutUser\" -Dtests.fips.enabled=true in this branch which fails with passwords < 14 characters.\nWe can further discuss this in real time if need be !", "author": "jkakavas", "createdAt": "2020-12-08T16:51:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc3NTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc4MjE0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r538782143", "bodyText": "Worked for me... Yes, I set the renge back to 6-10...", "author": "BigPandaToo", "createdAt": "2020-12-08T20:26:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc3NTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzMTQyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539031425", "bodyText": "@BigPandaToo this test suite sets up a test cluster (client/rest-high-level/build.gradle)  and SecurityIT performs security API related tests with the high level client against that cluster. SecurityIT#testPutUser creates a random PutUserRequest and sends that request to the test cluster via the HLRC ( SecurityClient securityClient = highLevelClient().security(); )\nWhen the test cluster processes this request it will hash that user password in the process of storing it to the security index ( see RestPutUserAction#innerPrepareRequest which triggers the hashing ) . This hashing will fail when PBKDF2 is used and an exception will be thrown.\nIf you don't get the failure, you either not run in FIPS mode ( -Dtests.fips.enabled=true ) or you don't run the test from this branch. You cannot try this in i.e. master as master doesn't yet contain the fix which is the reason for this PR and sets the test cluster correctly in fips mode )\nHope this makes more sense now", "author": "jkakavas", "createdAt": "2020-12-09T05:58:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc3NTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI3NjA2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539276061", "bodyText": "We agreed on why this change in the test is necessary over a chat, as such I'm resolving the comment", "author": "jkakavas", "createdAt": "2020-12-09T12:44:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc3NTQyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc5NzA2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r537797062", "bodyText": "Do all these tests fail in FIPS AO? It just doen't look like we are really get to any hashing here.", "author": "BigPandaToo", "createdAt": "2020-12-07T20:07:54Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SecurityDocumentationIT.java", "diffHunk": "@@ -158,9 +158,9 @@ protected Settings restAdminSettings() {\n     public void testGetUsers() throws Exception {\n         final RestHighLevelClient client = highLevelClient();\n         String[] usernames = new String[] {\"user1\", \"user2\", \"user3\"};\n-        addUser(client, usernames[0], randomAlphaOfLengthBetween(6, 10));\n-        addUser(client, usernames[1], randomAlphaOfLengthBetween(6, 10));\n-        addUser(client, usernames[2], randomAlphaOfLengthBetween(6, 10));\n+        addUser(client, usernames[0], randomAlphaOfLengthBetween(14, 18));\n+        addUser(client, usernames[1], randomAlphaOfLengthBetween(14, 18));\n+        addUser(client, usernames[2], randomAlphaOfLengthBetween(14, 18));\n         {", "originalCommit": "3a0b6d01ab2676fdb297818c0b98ca00720fb4e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3MDI2MA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r538070260", "bodyText": "Same as above, creating a user involves hashing the password for storage.", "author": "jkakavas", "createdAt": "2020-12-08T06:33:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc5NzA2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU4NzU1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r538587555", "bodyText": "Same as above...", "author": "BigPandaToo", "createdAt": "2020-12-08T16:46:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc5NzA2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI3NjIwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539276205", "bodyText": "see above", "author": "jkakavas", "createdAt": "2020-12-09T12:44:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc5NzA2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyMjgyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r537822829", "bodyText": "Should we add some randomization here and below?", "author": "BigPandaToo", "createdAt": "2020-12-07T20:50:08Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/action/user/PutUserRequestBuilderTests.java", "diffHunk": "@@ -144,8 +145,8 @@ public void testWithEnabled() throws IOException {\n     }\n \n     public void testWithValidPasswordHash() throws IOException {\n-        final Hasher hasher = Hasher.BCRYPT4; // this is the fastest hasher we officially support\n-        final char[] hash = hasher.hash(new SecureString(\"secret\".toCharArray()));\n+        final Hasher hasher = inFipsJvm() ? Hasher.PBKDF2_1000 : Hasher.BCRYPT4; // this is the fastest hasher we officially support", "originalCommit": "3a0b6d01ab2676fdb297818c0b98ca00720fb4e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyNzUzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r537827531", "bodyText": "Also, why no getFastStoredHashAlgoForTests()?", "author": "BigPandaToo", "createdAt": "2020-12-07T20:57:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyMjgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3MDk4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r538070987", "bodyText": "Should we add some randomization here and below?\n\nWe don't aim to extensively test all hashing algorithms in this test so this is why the original only used BCRYPT4. There is no reason to not use getFastStoredHashAlgoForTests though, I'll change this", "author": "jkakavas", "createdAt": "2020-12-08T06:35:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyMjgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyODM3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r537828377", "bodyText": "getFastStoredHashAlgoForTests()?", "author": "BigPandaToo", "createdAt": "2020-12-07T20:59:17Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/file/FileRealmTests.java", "diffHunk": "@@ -61,21 +61,21 @@ public void init() throws Exception {\n         userPasswdStore = mock(FileUserPasswdStore.class);\n         userRolesStore = mock(FileUserRolesStore.class);\n         globalSettings = Settings.builder().put(\"path.home\", createTempDir()).put(\"xpack.security.authc.password_hashing.algorithm\",\n-            randomFrom(\"bcrypt9\", \"pbkdf2\")).\n+            inFipsJvm() ? \"pbkdf2\" : \"bcrypt9\").", "originalCommit": "3a0b6d01ab2676fdb297818c0b98ca00720fb4e2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3MTE0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r538071142", "bodyText": "same as above, I'll chnage this too", "author": "jkakavas", "createdAt": "2020-12-08T06:35:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyODM3Nw=="}], "type": "inlineReview"}, {"oid": "8edfb24910bcd3cf2b1c582ddaf3246df1fdae3d", "url": "https://github.com/elastic/elasticsearch/commit/8edfb24910bcd3cf2b1c582ddaf3246df1fdae3d", "message": "Add some information about testing in fips mode", "committedDate": "2020-12-08T06:26:50Z", "type": "commit"}, {"oid": "91b52dc6d899b2d3ad81bb385a394b2a0e913b1e", "url": "https://github.com/elastic/elasticsearch/commit/91b52dc6d899b2d3ad81bb385a394b2a0e913b1e", "message": "address feedback", "committedDate": "2020-12-08T06:39:30Z", "type": "commit"}, {"oid": "c3f6cc7ac6341e8c38a9ec993966515139f49e75", "url": "https://github.com/elastic/elasticsearch/commit/c3f6cc7ac6341e8c38a9ec993966515139f49e75", "message": "Fix file user test", "committedDate": "2020-12-08T07:36:36Z", "type": "commit"}, {"oid": "b1ae435fd96b691386c9c7d6b51818979d7805b7", "url": "https://github.com/elastic/elasticsearch/commit/b1ae435fd96b691386c9c7d6b51818979d7805b7", "message": "Merge remote-tracking branch 'origin/master' into fips-approved-mode-tests", "committedDate": "2020-12-08T07:54:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg1ODA2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539858065", "bodyText": "Not really related to this PR, but I am intrigued to see that these passwords can be less than 14 chars and I was curious about how it is possible. By briefly click through the code, it seems BCFKS internally adds padding to the password with a purpose, e.g. PRIVATE_KEY_ENCRYPTION, so that the length is always ok.", "author": "ywangd", "createdAt": "2020-12-10T05:35:59Z", "path": "gradle/fips.gradle", "diffHunk": "@@ -53,6 +53,9 @@ if (BuildParams.inFipsJvm) {\n           systemProperty 'javax.net.ssl.trustStorePassword', 'password'\n           systemProperty 'javax.net.ssl.keyStorePassword', 'password'\n           systemProperty 'javax.net.ssl.keyStoreType', 'BCFKS'", "originalCommit": "b1ae435fd96b691386c9c7d6b51818979d7805b7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg2MDU3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539860577", "bodyText": "It must be my lack of knowledge. But could you please explain a bit more about why it cannot run with FIPS when it is expected to run with OSS? Does it not run with default distribution? Or is it because the test cluster always uses OSS license?", "author": "ywangd", "createdAt": "2020-12-10T05:42:47Z", "path": "modules/lang-painless/src/yamlRestTest/resources/rest-api-spec/test/painless/71_context_api.yml", "diffHunk": "@@ -1,11 +1,17 @@\n \"Action to list contexts\":\n+    - skip:\n+        features: fips_140\n+        reason: \"The tests expect to be run with OSS distribution\"", "originalCommit": "b1ae435fd96b691386c9c7d6b51818979d7805b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk3OTA1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539979051", "bodyText": "The problem for these tests is that these expect to run in a cluster with the OSS distribution and the expected number and order of contexts, and classes order and number for the score context are different between oss and default distribution test clusters. In FIPS 140 mode we use the default distribution ( because i.e. one can't set xpack.security.fips_mode.enabled: in OSS ) , so these tests would fail.", "author": "jkakavas", "createdAt": "2020-12-10T08:44:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg2MDU3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg2MTA4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539861083", "bodyText": "That's interesting. It's off-topic, but I wonder why it would fail with trial license.", "author": "ywangd", "createdAt": "2020-12-10T05:44:17Z", "path": "modules/mapper-extras/build.gradle", "diffHunk": "@@ -29,3 +31,8 @@ restResources {\n     includeCore '_common', 'cluster', 'nodes', 'indices', 'index', 'search', 'get'\n   }\n }\n+if (BuildParams.inFipsJvm){\n+  // The cluster fails to form with a trial license and we can't test FIPS 140 mode with a basic license", "originalCommit": "b1ae435fd96b691386c9c7d6b51818979d7805b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk3NjY4NA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539976684", "bodyText": "The description was vague because I hadn't figured why either. I reached out to core-features and this is now resolved in #65971, so I will amend this", "author": "jkakavas", "createdAt": "2020-12-10T08:40:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg2MTA4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg2MjQ0MA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539862440", "bodyText": "Is it not necessary since everything is disabled in the parent project's gradle file (plugins/examples/build.gradle)?", "author": "ywangd", "createdAt": "2020-12-10T05:47:59Z", "path": "plugins/examples/painless-whitelist/build.gradle", "diffHunk": "@@ -31,7 +33,10 @@ esplugin {\n dependencies {\n   compileOnly \"org.elasticsearch.plugin:elasticsearch-scripting-painless-spi:${versions.elasticsearch}\"\n }\n-\n+if (BuildParams.inFipsJvm){\n+  // This test cluster is using OSS distribution and FIPS 140 mode is not supported in OSS\n+  tasks.named(\"yamlRestTest\").configure{enabled = false }\n+}", "originalCommit": "b1ae435fd96b691386c9c7d6b51818979d7805b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk3OTczMA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539979730", "bodyText": "Good point, this must be a left over from a previous commit", "author": "jkakavas", "createdAt": "2020-12-10T08:45:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg2MjQ0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg2Mzg0MA==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539863840", "bodyText": "It might be helpful to add a comment that keystore reloading with FIPS is tested with ReloadSecureSettingsWithPasswordProtectedKeystoreRestIT, so no test coverage gap here.", "author": "ywangd", "createdAt": "2020-12-10T05:51:58Z", "path": "server/src/internalClusterTest/java/org/elasticsearch/action/admin/ReloadSecureSettingsIT.java", "diffHunk": "@@ -54,6 +55,12 @@\n @ESIntegTestCase.ClusterScope(minNumDataNodes = 2)\n public class ReloadSecureSettingsIT extends ESIntegTestCase {\n \n+    @BeforeClass\n+    public static void disableInFips() {\n+        assumeFalse(\"Cannot run in FIPS mode since the keystore will be password protected and sending a password in the reload\" +\n+            \"settings api call, require TLS to be configured for the transport layer\", inFipsJvm());\n+    }", "originalCommit": "b1ae435fd96b691386c9c7d6b51818979d7805b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk3OTk4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539979986", "bodyText": "will do , good idea", "author": "jkakavas", "createdAt": "2020-12-10T08:45:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg2Mzg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg2ODMxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539868311", "bodyText": "Not sure whether this could be a problem? Does our FIPS mode cover the plugins as well? These plugins (enrich, eql etc.) are available out of the box. Ideally they should also be tested with FIPS? If license is an issue, maybe we can change it to trial or even random between them?\nWith that being said, I am happy to have this as a follow-up item (if it is an issue).", "author": "ywangd", "createdAt": "2020-12-10T06:01:41Z", "path": "x-pack/plugin/enrich/qa/rest-with-security/build.gradle", "diffHunk": "@@ -1,9 +1,15 @@\n apply plugin: 'elasticsearch.java-rest-test'\n \n+import org.elasticsearch.gradle.info.BuildParams\n+\n dependencies {\n   javaRestTestImplementation project(path: xpackModule('core'))\n   javaRestTestImplementation project(path: xpackModule('enrich:qa:common'))\n }\n+if (BuildParams.inFipsJvm){\n+  // This test cluster is using a BASIC license and FIPS 140 mode is not supported in BASIC\n+  tasks.named(\"javaRestTest\").configure{enabled = false }\n+}", "originalCommit": "b1ae435fd96b691386c9c7d6b51818979d7805b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk4MTk2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/64024#discussion_r539981961", "bodyText": "Does our FIPS mode cover the plugins as well?\n\nIt does. Our plugins that is. For instance, we document that ingest-attachment is not supported.\nLet's handle this in a follow up. It wasn't obvious for QA tests that use basic license if this is on purpose for some specific reason, copy paste from other QA setups, or an arbitrary decision and reaching out to folks to figure this out is time-consuming. I elected to mute these for now, and we can revisit in a follow up.", "author": "jkakavas", "createdAt": "2020-12-10T08:49:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg2ODMxMQ=="}], "type": "inlineReview"}, {"oid": "d01e2738f3ad2800f4b0480ee062eb145fa6ada2", "url": "https://github.com/elastic/elasticsearch/commit/d01e2738f3ad2800f4b0480ee062eb145fa6ada2", "message": "Merge remote-tracking branch 'origin/master' into fips-approved-mode-tests", "committedDate": "2020-12-10T09:23:15Z", "type": "commit"}, {"oid": "97b67852ff21b34b001851f0848bd8cb0e055d94", "url": "https://github.com/elastic/elasticsearch/commit/97b67852ff21b34b001851f0848bd8cb0e055d94", "message": "address feedback", "committedDate": "2020-12-10T10:03:54Z", "type": "commit"}, {"oid": "7af03f178fa815956c1d60da75a6f9c1b4c670ae", "url": "https://github.com/elastic/elasticsearch/commit/7af03f178fa815956c1d60da75a6f9c1b4c670ae", "message": "Expect warnings when running with default distribution", "committedDate": "2020-12-10T18:23:16Z", "type": "commit"}, {"oid": "c858e53f8667aa63bef6e3facc249fce0b2634f7", "url": "https://github.com/elastic/elasticsearch/commit/c858e53f8667aa63bef6e3facc249fce0b2634f7", "message": "Use strong passwords in tests", "committedDate": "2020-12-10T18:23:50Z", "type": "commit"}, {"oid": "407a84f50f408df40c502b2eb20b4f4210a8b425", "url": "https://github.com/elastic/elasticsearch/commit/407a84f50f408df40c502b2eb20b4f4210a8b425", "message": "Use appropriate length private keys", "committedDate": "2020-12-10T18:24:18Z", "type": "commit"}, {"oid": "c0b2d249db9b5e84a386bfdf5bf6cb03e1ae6865", "url": "https://github.com/elastic/elasticsearch/commit/c0b2d249db9b5e84a386bfdf5bf6cb03e1ae6865", "message": "Use appropriate length SecretKey for EC2, as it is used for key generation and should be > 112 bits in fips mode", "committedDate": "2020-12-10T18:25:24Z", "type": "commit"}, {"oid": "e3fc3659d7413d1e63131a18a6b65829de3567e5", "url": "https://github.com/elastic/elasticsearch/commit/e3fc3659d7413d1e63131a18a6b65829de3567e5", "message": "Merge remote-tracking branch 'origin/master' into fips-approved-mode-tests", "committedDate": "2020-12-10T20:04:46Z", "type": "commit"}, {"oid": "a60a820632eddfb8fd92ffeee3a2bda28948cef5", "url": "https://github.com/elastic/elasticsearch/commit/a60a820632eddfb8fd92ffeee3a2bda28948cef5", "message": "Change GCS RSA keys to 2048bits so that tests don't fail in FIPS mode", "committedDate": "2020-12-11T07:14:01Z", "type": "commit"}, {"oid": "e6571baf864acb370faedba0d63588fc368422f8", "url": "https://github.com/elastic/elasticsearch/commit/e6571baf864acb370faedba0d63588fc368422f8", "message": "Mute CCR test downgrading to basic in FIPS mode", "committedDate": "2020-12-11T07:33:41Z", "type": "commit"}, {"oid": "c59f54b926595f53f1415ce785ab2e04d31bae12", "url": "https://github.com/elastic/elasticsearch/commit/c59f54b926595f53f1415ce785ab2e04d31bae12", "message": "fix more", "committedDate": "2020-12-17T13:13:46Z", "type": "commit"}, {"oid": "b0e4fd62978b5e56a48f035253aeb5c22768177b", "url": "https://github.com/elastic/elasticsearch/commit/b0e4fd62978b5e56a48f035253aeb5c22768177b", "message": "Mute tests in fips when security is disabled", "committedDate": "2020-12-17T15:01:06Z", "type": "commit"}, {"oid": "8e2cbcc928f08b4371379428b571da52c55a2d0b", "url": "https://github.com/elastic/elasticsearch/commit/8e2cbcc928f08b4371379428b571da52c55a2d0b", "message": "Mute test using PKCS12", "committedDate": "2020-12-17T15:01:19Z", "type": "commit"}, {"oid": "80d67d17f81fb431767c0e6fd59b40c9a05a1a62", "url": "https://github.com/elastic/elasticsearch/commit/80d67d17f81fb431767c0e6fd59b40c9a05a1a62", "message": "remove unnecessary policy application", "committedDate": "2020-12-17T15:24:35Z", "type": "commit"}, {"oid": "126797fa1c6a873a5dbf1b92206b43186b9c9e2d", "url": "https://github.com/elastic/elasticsearch/commit/126797fa1c6a873a5dbf1b92206b43186b9c9e2d", "message": "Merge remote-tracking branch 'origin/master' into fips-approved-mode-tests", "committedDate": "2020-12-17T15:27:11Z", "type": "commit"}, {"oid": "8f95d92d442756d685bb429561576a06cc49b211", "url": "https://github.com/elastic/elasticsearch/commit/8f95d92d442756d685bb429561576a06cc49b211", "message": "Ensure Kerberos fixture runs with fips 140-2 approved enctypes", "committedDate": "2020-12-17T17:26:49Z", "type": "commit"}, {"oid": "d03db0ba893f8bb95bc6ff3521f1549388b4ccc6", "url": "https://github.com/elastic/elasticsearch/commit/d03db0ba893f8bb95bc6ff3521f1549388b4ccc6", "message": "use long passwords in kerberos tests", "committedDate": "2020-12-17T20:55:22Z", "type": "commit"}, {"oid": "9d42b51302abfe54dd61f37b24a24c418c69d855", "url": "https://github.com/elastic/elasticsearch/commit/9d42b51302abfe54dd61f37b24a24c418c69d855", "message": "adjust password length", "committedDate": "2020-12-17T21:45:16Z", "type": "commit"}, {"oid": "8457d17905969880a8c47d22c7495ae106b7570e", "url": "https://github.com/elastic/elasticsearch/commit/8457d17905969880a8c47d22c7495ae106b7570e", "message": "mute tests instead of all the tasks", "committedDate": "2020-12-18T06:45:05Z", "type": "commit"}, {"oid": "082b6125a915f206296dc0c4438e2fe7415631ce", "url": "https://github.com/elastic/elasticsearch/commit/082b6125a915f206296dc0c4438e2fe7415631ce", "message": "Change moar passwords", "committedDate": "2020-12-18T09:19:09Z", "type": "commit"}, {"oid": "1c2c182b0bd3c0371024554530864db53ed5508c", "url": "https://github.com/elastic/elasticsearch/commit/1c2c182b0bd3c0371024554530864db53ed5508c", "message": "Mutes qa tests that fail in CI until we can investigate more", "committedDate": "2020-12-18T11:40:44Z", "type": "commit"}, {"oid": "e9b752e2e43871e1edb236837de143cdea3aaaac", "url": "https://github.com/elastic/elasticsearch/commit/e9b752e2e43871e1edb236837de143cdea3aaaac", "message": "yet another password", "committedDate": "2020-12-18T13:42:10Z", "type": "commit"}, {"oid": "ae3b8cac5f1239df058dc266036b7c6d79700b66", "url": "https://github.com/elastic/elasticsearch/commit/ae3b8cac5f1239df058dc266036b7c6d79700b66", "message": "no tests run", "committedDate": "2020-12-18T13:42:23Z", "type": "commit"}, {"oid": "0223ef089eec3eac73a9a900862a2de20b997fc3", "url": "https://github.com/elastic/elasticsearch/commit/0223ef089eec3eac73a9a900862a2de20b997fc3", "message": "Allow ESRestTestClient to trust certificates\n\nESRestTestCase rest clients could only be configured to trust\nthe certificate authorities that were contained in a truststore. In\ncertain cases (like in fips mode where JKS/PKCS12 keystores) cannot\nbe used, it's beneficial to be able to trust specific certificate\nauthorities (indicated by the CA PEM endoded certificate)", "committedDate": "2020-12-19T07:38:36Z", "type": "commit"}, {"oid": "fe015ba96c9359f1a674720c31012504923b0905", "url": "https://github.com/elastic/elasticsearch/commit/fe015ba96c9359f1a674720c31012504923b0905", "message": "Adjust reindex from remote QA test to use PEM CA cert instead of a PKCS12 store", "committedDate": "2020-12-19T08:18:47Z", "type": "commit"}, {"oid": "23c52db860bd5957b989db9e73543de9f67a56f5", "url": "https://github.com/elastic/elasticsearch/commit/23c52db860bd5957b989db9e73543de9f67a56f5", "message": "more passwords", "committedDate": "2020-12-19T09:42:03Z", "type": "commit"}, {"oid": "7ef71b728cb495cac5e17373629ffa6cf4f99920", "url": "https://github.com/elastic/elasticsearch/commit/7ef71b728cb495cac5e17373629ffa6cf4f99920", "message": "reference issue in muted CCR tests", "committedDate": "2020-12-19T09:42:26Z", "type": "commit"}, {"oid": "22fd8eaf01a43294081bb3cee8dead7a97c8219e", "url": "https://github.com/elastic/elasticsearch/commit/22fd8eaf01a43294081bb3cee8dead7a97c8219e", "message": "Merge remote-tracking branch 'origin/master' into fips-approved-mode-tests", "committedDate": "2020-12-21T06:41:13Z", "type": "commit"}, {"oid": "f9f18f14836435ea45aa08fbcc0c332ba8a62700", "url": "https://github.com/elastic/elasticsearch/commit/f9f18f14836435ea45aa08fbcc0c332ba8a62700", "message": "handle encrypted keystores in SetupPasswordToolIT", "committedDate": "2020-12-21T07:35:50Z", "type": "commit"}, {"oid": "5fa921b9755b332134ccad4e1f1302682f259384", "url": "https://github.com/elastic/elasticsearch/commit/5fa921b9755b332134ccad4e1f1302682f259384", "message": "set license to trial for testclusters as we can't use fips mode in basic. All the tests that require basic license are already muted in fips mode so they won't be affected", "committedDate": "2020-12-23T07:49:17Z", "type": "commit"}, {"oid": "419900196d24e5aea68ccc3bb42e4685681e54a2", "url": "https://github.com/elastic/elasticsearch/commit/419900196d24e5aea68ccc3bb42e4685681e54a2", "message": "Disable bwc tests in fips mode as there arent' many ( only 7.11 ) versions that can be run in a correctly configured FIPS 140-2 JVM and we are lacking granural control of which bwc versions can be used", "committedDate": "2020-12-23T07:55:02Z", "type": "commit"}, {"oid": "6028fc08e5393577ce3722a35d9b52b6114ae8c7", "url": "https://github.com/elastic/elasticsearch/commit/6028fc08e5393577ce3722a35d9b52b6114ae8c7", "message": "use long enough azure.client.key in tests", "committedDate": "2020-12-23T10:47:14Z", "type": "commit"}, {"oid": "658e8291d6ecff00689ba73e3d8e4c11a15a9246", "url": "https://github.com/elastic/elasticsearch/commit/658e8291d6ecff00689ba73e3d8e4c11a15a9246", "message": "use long enough ec2 access keys in tests", "committedDate": "2020-12-23T10:47:32Z", "type": "commit"}, {"oid": "7eb72044ddf28cb182af225a0e8de541e0d34f8b", "url": "https://github.com/elastic/elasticsearch/commit/7eb72044ddf28cb182af225a0e8de541e0d34f8b", "message": "another short access key", "committedDate": "2020-12-23T11:06:55Z", "type": "commit"}, {"oid": "15e930a65d307372a6a535f1da843e2d5105f71c", "url": "https://github.com/elastic/elasticsearch/commit/15e930a65d307372a6a535f1da843e2d5105f71c", "message": "Merge remote-tracking branch 'origin/master' into fips-approved-mode-tests", "committedDate": "2020-12-23T11:07:10Z", "type": "commit"}, {"oid": "0d54d3d2695f74e0c9332d3d282edf5c7dc6a596", "url": "https://github.com/elastic/elasticsearch/commit/0d54d3d2695f74e0c9332d3d282edf5c7dc6a596", "message": "Change docker integ tests to use PEM key/certificates instead of keystores so that these can be run in fips mode", "committedDate": "2020-12-23T14:01:14Z", "type": "commit"}, {"oid": "b7bdcdedec369cb8bcb70e3ce9364f409a134e5d", "url": "https://github.com/elastic/elasticsearch/commit/b7bdcdedec369cb8bcb70e3ce9364f409a134e5d", "message": "Change remote-clusters integ tests to use PEM key/certificates instead of keystores so that these can be run in fips mode", "committedDate": "2020-12-23T14:01:32Z", "type": "commit"}, {"oid": "801da6f7c5c02266c20ed2bc80c0d67d7de15fae", "url": "https://github.com/elastic/elasticsearch/commit/801da6f7c5c02266c20ed2bc80c0d67d7de15fae", "message": "Fix all s3 fixture related tests by using the correct access key", "committedDate": "2020-12-23T15:34:34Z", "type": "commit"}, {"oid": "f812ca2f8ea67c20a2692bc62372fa7804a3e7a6", "url": "https://github.com/elastic/elasticsearch/commit/f812ca2f8ea67c20a2692bc62372fa7804a3e7a6", "message": "Merge remote-tracking branch 'origin/master' into fips-approved-mode-tests", "committedDate": "2020-12-23T15:34:50Z", "type": "commit"}]}