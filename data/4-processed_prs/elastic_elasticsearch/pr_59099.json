{"pr_number": 59099, "pr_title": "Fix lookup support in adjacency matrix", "pr_createdAt": "2020-07-06T20:13:53Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59099", "timeline": [{"oid": "6888eb865bc9cc1e2158afffffb9b52917f53d2e", "url": "https://github.com/elastic/elasticsearch/commit/6888eb865bc9cc1e2158afffffb9b52917f53d2e", "message": "Fix lookup support in adjacency matrix\n\nThis request:\n```\nPOST /_search\n{\n  \"aggs\": {\n    \"a\": {\n      \"adjacency_matrix\": {\n        \"filters\": {\n          \"1\": {\n            \"terms\": { \"t\": { \"index\": \"lookup\", \"id\": \"1\", \"path\": \"t\" } }\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nWould fail with a 500 error and a message like:\n```\n{\n  \"error\": {\n    \"root_cause\": [\n      {\n        \"type\": \"illegal_state_exception\",\n        \"reason\":\"async actions are left after rewrite\"\n      }\n    ]\n  }\n}\n```\n\nThis fixes that by moving the query rewrite phase from a synchronous\ncall on the data nodes into the standard aggregation rewrite phase which\ncan properly handle the asynchronous actions.", "committedDate": "2020-07-06T20:12:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1NTc4MA==", "url": "https://github.com/elastic/elasticsearch/pull/59099#discussion_r450455780", "bodyText": "I don't believe this setting exists any more.", "author": "nik9000", "createdAt": "2020-07-06T20:14:40Z", "path": "docs/reference/aggregations/bucket/adjacency-matrix-aggregation.asciidoc", "diffHunk": "@@ -110,5 +110,4 @@ where examining interactions _over time_ becomes important.\n ==== Limitations\n For N filters the matrix of buckets produced can be N\u00b2/2 which can be costly.\n The circuit breaker settings prevent results producing too many buckets and to avoid excessive disk seeks\n-the `indices.query.bool.max_clause_count` setting is used to limit the number of filters. \n-imposed of 100 filters . This setting can be changed using the `index.max_adjacency_matrix_filters` index-level setting.", "originalCommit": "6888eb865bc9cc1e2158afffffb9b52917f53d2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2NjIzNg==", "url": "https://github.com/elastic/elasticsearch/pull/59099#discussion_r452266236", "bodyText": "Apologies for the delay in replying. We used to have a dedicated max_adjacency_matrix_filters setting with a default of 100 but changed it to piggy-back off the indices.query.bool.max_clause_count setting because they address the same concern - too many query clauses. The second line, \"imposed of 100 filters ...\" looks like something that should have been deleted when we made that changeover.", "author": "markharwood", "createdAt": "2020-07-09T14:37:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1NTc4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1NTg4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59099#discussion_r450455882", "bodyText": "These are just a little more compact.", "author": "nik9000", "createdAt": "2020-07-06T20:14:54Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/search.aggregation/70_adjacency_matrix.yml", "diffHunk": "@@ -12,36 +12,100 @@ setup:\n                   type: integer\n \n   - do:\n-        index:", "originalCommit": "6888eb865bc9cc1e2158afffffb9b52917f53d2e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1NjEwNw==", "url": "https://github.com/elastic/elasticsearch/pull/59099#discussion_r450456107", "bodyText": "And this is just a little more readable than sticking it all on one line.", "author": "nik9000", "createdAt": "2020-07-06T20:15:20Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/search.aggregation/70_adjacency_matrix.yml", "diffHunk": "@@ -12,36 +12,100 @@ setup:\n                   type: integer\n \n   - do:\n-        index:\n-          index: test\n-          id: 1\n-          body: { \"num\": [1, 2] }\n+      bulk:\n+        index: test\n+        refresh: true\n+        body: |\n+          { \"index\": {\"_id\": \"1\"}}\n+          { \"num\": [1, 2] }\n+          { \"index\": {\"_id\": \"2\"}}\n+          { \"num\": [2, 3] }\n+          { \"index\": {\"_id\": \"3\"}}\n+          { \"num\": [3, 4] }\n \n   - do:\n-      index:\n-        index: test\n-        id: 2\n-        body: { \"num\": [2, 3] }\n+      indices.refresh: {}\n+---\n+\"Filters intersections\":\n \n   - do:\n-      index:\n+      search:\n         index: test\n-        id: 3\n-        body: { \"num\": [3, 4] }\n+        body:\n+          size: 0\n+          aggs:", "originalCommit": "6888eb865bc9cc1e2158afffffb9b52917f53d2e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1NjE1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59099#discussion_r450456152", "bodyText": "This is the new test.", "author": "nik9000", "createdAt": "2020-07-06T20:15:27Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/search.aggregation/70_adjacency_matrix.yml", "diffHunk": "@@ -12,36 +12,100 @@ setup:\n                   type: integer\n \n   - do:\n-        index:\n-          index: test\n-          id: 1\n-          body: { \"num\": [1, 2] }\n+      bulk:\n+        index: test\n+        refresh: true\n+        body: |\n+          { \"index\": {\"_id\": \"1\"}}\n+          { \"num\": [1, 2] }\n+          { \"index\": {\"_id\": \"2\"}}\n+          { \"num\": [2, 3] }\n+          { \"index\": {\"_id\": \"3\"}}\n+          { \"num\": [3, 4] }\n \n   - do:\n-      index:\n-        index: test\n-        id: 2\n-        body: { \"num\": [2, 3] }\n+      indices.refresh: {}\n+---\n+\"Filters intersections\":\n \n   - do:\n-      index:\n+      search:\n         index: test\n-        id: 3\n-        body: { \"num\": [3, 4] }\n+        body:\n+          size: 0\n+          aggs:\n+            conns:\n+              adjacency_matrix:\n+                filters:\n+                  1:\n+                    term:\n+                      num: 1\n+                  2:\n+                    term:\n+                      num: 2\n+                  4:\n+                    term:\n+                      num: 4\n \n-  - do:\n-      indices.refresh: {}\n+  - match: { hits.total.value: 3 }\n \n+  - length: { aggregations.conns.buckets: 4 }\n \n----\n-\"Filters intersections\":\n+  - match: { aggregations.conns.buckets.0.doc_count: 1 }\n+  - match: { aggregations.conns.buckets.0.key: \"1\" }\n \n+  - match: { aggregations.conns.buckets.1.doc_count: 1 }\n+  - match: { aggregations.conns.buckets.1.key: \"1&2\" }\n+\n+  - match: { aggregations.conns.buckets.2.doc_count: 2 }\n+  - match: { aggregations.conns.buckets.2.key: \"2\" }\n+\n+  - match: { aggregations.conns.buckets.3.doc_count: 1 }\n+  - match: { aggregations.conns.buckets.3.key: \"4\" }\n+\n+\n+---\n+\"Terms lookup\":\n+  - do:\n+      bulk:\n+        index: lookup\n+        refresh: true\n+        body: |\n+          { \"index\": {\"_id\": 1} }\n+          { \"num\": [1] }\n+          { \"index\": {\"_id\": 2} }\n+          { \"num\": [2] }\n+          { \"index\": {\"_id\": 4} }\n+          { \"num\": [4] }\n   - do:\n       search:\n-        rest_total_hits_as_int: true\n-        body: { \"size\": 0, \"aggs\": { \"conns\": { \"adjacency_matrix\": {  \"filters\": { \"1\": { \"term\": { \"num\": 1 } }, \"2\": { \"term\": { \"num\": 2 } }, \"4\": { \"term\": { \"num\": 4 } } } } } } }\n+        index: test\n+        body:\n+          size: 0\n+          aggs:\n+            conns:\n+              adjacency_matrix:\n+                filters:", "originalCommit": "6888eb865bc9cc1e2158afffffb9b52917f53d2e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1NjY4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/59099#discussion_r450456685", "bodyText": "I just bumped into this when I was looking at the agg.", "author": "nik9000", "createdAt": "2020-07-06T20:16:31Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregator.java", "diffHunk": "@@ -123,7 +123,7 @@ public boolean equals(Object obj) {\n     }\n \n     private final String[] keys;\n-    private Weight[] filters;\n+    private final Weight[] filters;", "originalCommit": "6888eb865bc9cc1e2158afffffb9b52917f53d2e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1NjgzNA==", "url": "https://github.com/elastic/elasticsearch/pull/59099#discussion_r450456834", "bodyText": "These were confusing because above they are referred to without this but below they had it.", "author": "nik9000", "createdAt": "2020-07-06T20:16:49Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregatorFactory.java", "diffHunk": "@@ -50,9 +50,9 @@ public AdjacencyMatrixAggregatorFactory(String name, List<KeyedFilter> filters,\n         keys = new String[filters.size()];\n         for (int i = 0; i < filters.size(); ++i) {\n             KeyedFilter keyedFilter = filters.get(i);\n-            this.keys[i] = keyedFilter.key();\n+            keys[i] = keyedFilter.key();", "originalCommit": "6888eb865bc9cc1e2158afffffb9b52917f53d2e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e8f8bdce2f48bfce4a4b4dd46baa696a7774b0eb", "url": "https://github.com/elastic/elasticsearch/commit/e8f8bdce2f48bfce4a4b4dd46baa696a7774b0eb", "message": "Skip old", "committedDate": "2020-07-06T21:58:40Z", "type": "commit"}]}