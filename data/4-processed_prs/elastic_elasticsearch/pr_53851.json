{"pr_number": 53851, "pr_title": "Wildcard field - add normalizer support", "pr_createdAt": "2020-03-20T11:06:29Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53851", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4NDYzMg==", "url": "https://github.com/elastic/elasticsearch/pull/53851#discussion_r395684632", "bodyText": "We should normalize all term-based query like  KeywordFieldType.\nAlso @cbuescher added the support in StringFieldType to mask special characters (*)  during normalization so we should reuse here ?", "author": "jimczi", "createdAt": "2020-03-20T14:45:40Z", "path": "x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java", "diffHunk": "@@ -327,6 +376,12 @@ public boolean equals(Object obj) {\n \n         @Override\n         public Query wildcardQuery(String wildcardPattern, RewriteMethod method, QueryShardContext context) {\n+            try {\n+                wildcardPattern = normalize(wildcardPattern);", "originalCommit": "ffc75372aa6ef5462903a3b2a22c84b352cce806", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2d3172c32cb993713af9aec45046fde365a3a3fa", "url": "https://github.com/elastic/elasticsearch/commit/2d3172c32cb993713af9aec45046fde365a3a3fa", "message": "Fix wrong toString method", "committedDate": "2020-03-20T17:39:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMDEzMw==", "url": "https://github.com/elastic/elasticsearch/pull/53851#discussion_r396430133", "bodyText": "Can we try to expose something reusable (a static function ?) in StringFieldType ?", "author": "jimczi", "createdAt": "2020-03-23T12:57:32Z", "path": "x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java", "diffHunk": "@@ -467,7 +526,63 @@ public Query termsQuery(List<?> values, QueryShardContext context) {\n                         CircuitBreakerService breakerService, MapperService mapperService) {\n                     return new WildcardBytesBinaryDVIndexFieldData(indexSettings.getIndex(), fieldType.name());\n                 }};\n-        }        \n+        }\n+\n+\n+        String normalize(String value) throws IOException {\n+            if (normalizer != null) {\n+                try (TokenStream ts = normalizer.tokenStream(name(), value)) {\n+                    final CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n+                    ts.reset();\n+                    if (ts.incrementToken() == false) {\n+                      throw new IllegalStateException(\"The normalization token stream is \"\n+                          + \"expected to produce exactly 1 token, but got 0 for analyzer \"\n+                          + normalizer + \" and input \\\"\" + value + \"\\\"\");\n+                    }\n+                    final String newValue = termAtt.toString();\n+                    if (ts.incrementToken()) {\n+                      throw new IllegalStateException(\"The normalization token stream is \"\n+                          + \"expected to produce exactly 1 token, but got 2+ for analyzer \"\n+                          + normalizer + \" and input \\\"\" + value + \"\\\"\");\n+                    }\n+                    ts.end();\n+                    return newValue;\n+                }\n+            }\n+            return value;\n+        }       \n+        \n+        private static final Pattern WILDCARD_PATTERN = Pattern.compile(\"(\\\\\\\\.)|([?*]+)\");\n+        \n+        String normalizeWildcardPattern(String value) throws IOException {", "originalCommit": "2d3172c32cb993713af9aec45046fde365a3a3fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQzMDU0OA==", "url": "https://github.com/elastic/elasticsearch/pull/53851#discussion_r396430548", "bodyText": "You also need to override checkCompatibility in order to ensure that the normalizer doesn't change ?", "author": "jimczi", "createdAt": "2020-03-23T12:58:13Z", "path": "x-pack/plugin/wildcard/src/main/java/org/elasticsearch/xpack/wildcard/mapper/WildcardFieldMapper.java", "diffHunk": "@@ -206,13 +235,37 @@ public WildcardFieldType() {\n \n         protected WildcardFieldType(WildcardFieldType ref) {\n             super(ref);\n+            this.normalizer = ref.normalizer;\n         }\n \n         public WildcardFieldType clone() {\n             WildcardFieldType result = new WildcardFieldType(this);\n             return result;\n         }\n         \n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (super.equals(o) == false) {\n+                return false;\n+            }\n+            WildcardFieldType other = (WildcardFieldType) o;\n+            return Objects.equals(normalizer, other.normalizer);\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return 31 * super.hashCode() + Objects.hash(normalizer);\n+        }       \n+        \n+        private NamedAnalyzer normalizer() {\n+            return normalizer;\n+        }\n+\n+        public void setNormalizer(NamedAnalyzer normalizer) {\n+            checkIfFrozen();\n+            this.normalizer = normalizer;\n+        }                \n                 ", "originalCommit": "2d3172c32cb993713af9aec45046fde365a3a3fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d42128cf33de8d6c2c40437a0fc39c0be930811e", "url": "https://github.com/elastic/elasticsearch/commit/d42128cf33de8d6c2c40437a0fc39c0be930811e", "message": "Add support for normalisation to wildcard field", "committedDate": "2020-03-23T18:10:11Z", "type": "commit"}, {"oid": "2cf000001c7052a7aa928e0dc859c4a983c85b49", "url": "https://github.com/elastic/elasticsearch/commit/2cf000001c7052a7aa928e0dc859c4a983c85b49", "message": "Tidied imports", "committedDate": "2020-03-23T18:10:11Z", "type": "commit"}, {"oid": "ccefc677169317c941a88f19678ba0df05bed371", "url": "https://github.com/elastic/elasticsearch/commit/ccefc677169317c941a88f19678ba0df05bed371", "message": "Added docs about params", "committedDate": "2020-03-23T18:10:11Z", "type": "commit"}, {"oid": "ea6bd9a0f69867f2fb5165d6ab6e3d98d698acc4", "url": "https://github.com/elastic/elasticsearch/commit/ea6bd9a0f69867f2fb5165d6ab6e3d98d698acc4", "message": "Fix outdated error message", "committedDate": "2020-03-23T18:10:11Z", "type": "commit"}, {"oid": "e8817a4bec13c0f5d5cf1e86827b9f2d8a9e2fd2", "url": "https://github.com/elastic/elasticsearch/commit/e8817a4bec13c0f5d5cf1e86827b9f2d8a9e2fd2", "message": "Avoid normaliser butchering wildcard query special characters", "committedDate": "2020-03-23T18:10:11Z", "type": "commit"}, {"oid": "567a3fb0b032efd59081532a511df31c5b2e8cef", "url": "https://github.com/elastic/elasticsearch/commit/567a3fb0b032efd59081532a511df31c5b2e8cef", "message": "Fix broken test expectations", "committedDate": "2020-03-23T18:10:11Z", "type": "commit"}, {"oid": "c7b934b5c428162b9c4996d28f4d576b272de462", "url": "https://github.com/elastic/elasticsearch/commit/c7b934b5c428162b9c4996d28f4d576b272de462", "message": "Fix wrong toString method", "committedDate": "2020-03-23T18:10:12Z", "type": "commit"}, {"oid": "8dc50492759e936579b16773d9ed1ac9e73aa884", "url": "https://github.com/elastic/elasticsearch/commit/8dc50492759e936579b16773d9ed1ac9e73aa884", "message": "Address review comments - common method for normalising wildcard patterns and checkCompatibility", "committedDate": "2020-03-23T18:10:12Z", "type": "commit"}, {"oid": "4f242fc9f23294400bcc5593a7b24c941868e399", "url": "https://github.com/elastic/elasticsearch/commit/4f242fc9f23294400bcc5593a7b24c941868e399", "message": "Remove unused import", "committedDate": "2020-03-23T18:10:12Z", "type": "commit"}, {"oid": "4f242fc9f23294400bcc5593a7b24c941868e399", "url": "https://github.com/elastic/elasticsearch/commit/4f242fc9f23294400bcc5593a7b24c941868e399", "message": "Remove unused import", "committedDate": "2020-03-23T18:10:12Z", "type": "forcePushed"}]}