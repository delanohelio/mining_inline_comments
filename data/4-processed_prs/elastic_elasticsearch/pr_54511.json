{"pr_number": 54511, "pr_title": "Resolve some coordination-layer TODOs", "pr_createdAt": "2020-03-31T14:45:34Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54511", "timeline": [{"oid": "f5113d18f15c397a6d6ecc91cd87c5886b31b431", "url": "https://github.com/elastic/elasticsearch/commit/f5113d18f15c397a6d6ecc91cd87c5886b31b431", "message": "Resolve some coordination-layer TODOs\n\nThis commit removes a handful of TODO comments in the cluster coordination\nlayer that no longer apply.\n\nRelates #32006", "committedDate": "2020-03-31T14:44:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3Mjk0MA==", "url": "https://github.com/elastic/elasticsearch/pull/54511#discussion_r400972940", "bodyText": "Done, see call to ClusterBootstrapService::isBootstrapPlaceholder in describeQuorum.", "author": "DaveCTurner", "createdAt": "2020-03-31T14:46:33Z", "path": "server/src/main/java/org/elasticsearch/cluster/coordination/ClusterFormationFailureHelper.java", "diffHunk": "@@ -157,7 +157,6 @@ String getDescription() {\n                 if (INITIAL_MASTER_NODES_SETTING.get(Settings.EMPTY).equals(INITIAL_MASTER_NODES_SETTING.get(settings))) {\n                     bootstrappingDescription = \"[\" + INITIAL_MASTER_NODES_SETTING.getKey() + \"] is empty on this node\";\n                 } else {\n-                    // TODO update this when we can bootstrap on only a quorum of the initial nodes", "originalCommit": "f5113d18f15c397a6d6ecc91cd87c5886b31b431", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3MzYyMA==", "url": "https://github.com/elastic/elasticsearch/pull/54511#discussion_r400973620", "bodyText": "This happens by sending a publish response with no associated join.", "author": "DaveCTurner", "createdAt": "2020-03-31T14:47:23Z", "path": "server/src/main/java/org/elasticsearch/cluster/coordination/FollowersChecker.java", "diffHunk": "@@ -163,7 +163,6 @@ private void handleFollowerCheck(FollowerCheckRequest request, TransportChannel\n         FastResponseState responder = this.fastResponseState;\n \n         if (responder.mode == Mode.FOLLOWER && responder.term == request.term) {\n-            // TODO trigger a term bump if we voted for a different leader in this term", "originalCommit": "f5113d18f15c397a6d6ecc91cd87c5886b31b431", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NDI3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/54511#discussion_r400974273", "bodyText": "Done, see AbstractCoordinatorTestCase.MockPersistedState.", "author": "DaveCTurner", "createdAt": "2020-03-31T14:48:09Z", "path": "server/src/main/java/org/elasticsearch/cluster/coordination/InMemoryPersistedState.java", "diffHunk": "@@ -21,7 +21,6 @@\n import org.elasticsearch.cluster.ClusterState;\n \n public class InMemoryPersistedState implements CoordinationState.PersistedState {\n-    // TODO add support and tests for behaviour with persistence-layer failures", "originalCommit": "f5113d18f15c397a6d6ecc91cd87c5886b31b431", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NDY4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/54511#discussion_r400974683", "bodyText": "No, SAME is bad because updateMaxTermSeen.accept may block on Coordinator#mutex.", "author": "DaveCTurner", "createdAt": "2020-03-31T14:48:38Z", "path": "server/src/main/java/org/elasticsearch/cluster/coordination/PreVoteCollector.java", "diffHunk": "@@ -62,7 +62,6 @@\n         this.updateMaxTermSeen = updateMaxTermSeen;\n         this.electionStrategy = electionStrategy;\n \n-        // TODO does this need to be on the generic threadpool or can it use SAME?", "originalCommit": "f5113d18f15c397a6d6ecc91cd87c5886b31b431", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NDk2NA==", "url": "https://github.com/elastic/elasticsearch/pull/54511#discussion_r400974964", "bodyText": "Don't think so, it notifies the listener on a failure.", "author": "DaveCTurner", "createdAt": "2020-03-31T14:48:55Z", "path": "server/src/main/java/org/elasticsearch/cluster/coordination/Publication.java", "diffHunk": "@@ -244,7 +244,6 @@ void sendPublishRequest() {\n             assert state == PublicationTargetState.NOT_STARTED : state + \" -> \" + PublicationTargetState.SENT_PUBLISH_REQUEST;\n             state = PublicationTargetState.SENT_PUBLISH_REQUEST;\n             Publication.this.sendPublishRequest(discoveryNode, publishRequest, new PublishResponseHandler());\n-            // TODO Can this ^ fail with an exception? Target should be failed if so.", "originalCommit": "f5113d18f15c397a6d6ecc91cd87c5886b31b431", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NTI4MA==", "url": "https://github.com/elastic/elasticsearch/pull/54511#discussion_r400975280", "bodyText": "Not really relevant here.", "author": "DaveCTurner", "createdAt": "2020-03-31T14:49:16Z", "path": "test/framework/src/main/java/org/elasticsearch/cluster/coordination/AbstractCoordinatorTestCase.java", "diffHunk": "@@ -244,7 +244,6 @@ protected static int defaultInt(Setting<Integer> setting) {\n \n         final List<ClusterNode> clusterNodes;\n         final DeterministicTaskQueue deterministicTaskQueue = new DeterministicTaskQueue(\n-            // TODO does ThreadPool need a node name any more?", "originalCommit": "f5113d18f15c397a6d6ecc91cd87c5886b31b431", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NTUwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/54511#discussion_r400975509", "bodyText": "Done, or at least covered elsewhere.", "author": "DaveCTurner", "createdAt": "2020-03-31T14:49:33Z", "path": "test/framework/src/main/java/org/elasticsearch/cluster/coordination/AbstractCoordinatorTestCase.java", "diffHunk": "@@ -449,11 +450,6 @@ public String toString() {\n                             deterministicTaskQueue.runRandomTask();\n                         }\n                     }\n-\n-                    // TODO other random steps:", "originalCommit": "f5113d18f15c397a6d6ecc91cd87c5886b31b431", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7717bb260c8ba920bce47fb540e3e164853ed924", "url": "https://github.com/elastic/elasticsearch/commit/7717bb260c8ba920bce47fb540e3e164853ed924", "message": "Merge branch 'master' into 2020-03-31-coordination-todos", "committedDate": "2020-04-01T09:47:48Z", "type": "commit"}]}