{"pr_number": 50662, "pr_title": "Make Multiplexer inherit filter chains analysis mode", "pr_createdAt": "2020-01-06T15:18:15Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/50662", "timeline": [{"oid": "b70da949d96212e5cd414062e479a6d43f9a2931", "url": "https://github.com/elastic/elasticsearch/commit/b70da949d96212e5cd414062e479a6d43f9a2931", "message": "Make Multiplexer inherit filter chains analysis mode", "committedDate": "2020-01-06T14:39:08Z", "type": "commit"}, {"oid": "e695a788e46101bc6e3ceca032d5ae6fe83a82d5", "url": "https://github.com/elastic/elasticsearch/commit/e695a788e46101bc6e3ceca032d5ae6fe83a82d5", "message": "Merge branch 'master' into fix-50554", "committedDate": "2020-01-07T17:17:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxNTM1OA==", "url": "https://github.com/elastic/elasticsearch/pull/50662#discussion_r364215358", "bodyText": "nit: I think this is a leftover?", "author": "romseygeek", "createdAt": "2020-01-08T12:52:38Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/MapperService.java", "diffHunk": "@@ -20,6 +20,7 @@\n package org.elasticsearch.index.mapper;\n \n import com.carrotsearch.hppc.ObjectHashSet;\n+", "originalCommit": "e695a788e46101bc6e3ceca032d5ae6fe83a82d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxNTc1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/50662#discussion_r364215753", "bodyText": "Given that this is reused in three different tests now, I wonder if it's worth extracting it as a separate method?", "author": "romseygeek", "createdAt": "2020-01-08T12:53:44Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/action/ReloadSynonymAnalyzerTests.java", "diffHunk": "@@ -126,6 +122,74 @@ public void testSynonymsUpdateable() throws FileNotFoundException, IOException {\n         assertHitCount(response, 1L);\n     }\n \n+    public void testSynonymsInMultiplexerUpdateable() throws FileNotFoundException, IOException {\n+        String synonymsFileName = \"synonyms.txt\";\n+        Path configDir = node().getEnvironment().configFile();\n+        if (Files.exists(configDir) == false) {\n+            Files.createDirectory(configDir);\n+        }\n+        Path synonymsFile = configDir.resolve(synonymsFileName);\n+        if (Files.exists(synonymsFile) == false) {\n+            Files.createFile(synonymsFile);\n+        }\n+        try (PrintWriter out = new PrintWriter(\n+                new OutputStreamWriter(Files.newOutputStream(synonymsFile, StandardOpenOption.WRITE), StandardCharsets.UTF_8))) {\n+            out.println(\"foo, baz\");\n+        }", "originalCommit": "e695a788e46101bc6e3ceca032d5ae6fe83a82d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxNjc1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/50662#discussion_r364216753", "bodyText": "This compression of multiple settings onto single lines seems to me to make test more difficult to follow, can we keep the indentation as it was before?", "author": "romseygeek", "createdAt": "2020-01-08T12:56:35Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/action/ReloadSynonymAnalyzerTests.java", "diffHunk": "@@ -143,20 +207,15 @@ public void testUpdateableSynonymsRejectedAtIndexTime() throws FileNotFoundExcep\n \n         final String indexName = \"test\";\n         final String analyzerName = \"my_synonym_analyzer\";\n-        MapperException ex = expectThrows(MapperException.class, () -> client().admin().indices().prepareCreate(indexName)\n-                .setSettings(Settings.builder()\n-                .put(\"index.number_of_shards\", 5)\n-                .put(\"index.number_of_replicas\", 0)\n-                .put(\"analysis.analyzer.\" + analyzerName + \".tokenizer\", \"standard\")\n-                .putList(\"analysis.analyzer.\" + analyzerName + \".filter\", \"lowercase\", \"synonym_filter\")\n-                .put(\"analysis.filter.synonym_filter.type\", \"synonym\")\n-                .put(\"analysis.filter.synonym_filter.updateable\", \"true\")\n-                .put(\"analysis.filter.synonym_filter.synonyms_path\", synonymsFileName))\n-                .addMapping(\"_doc\", \"field\", \"type=text,analyzer=\" + analyzerName).get());\n-\n-        assertEquals(\n-                \"Failed to parse mapping: analyzer [my_synonym_analyzer] \"\n-                + \"contains filters [synonym_filter] that are not allowed to run in all mode.\",\n-                ex.getMessage());\n+        MapperException ex = expectThrows(MapperException.class,", "originalCommit": "e695a788e46101bc6e3ceca032d5ae6fe83a82d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwNTEzOA==", "url": "https://github.com/elastic/elasticsearch/pull/50662#discussion_r364305138", "bodyText": "Good point, this was not intended, must be the new Eclipse installation doing some autoformatting.", "author": "cbuescher", "createdAt": "2020-01-08T15:56:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxNjc1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxNzU2NA==", "url": "https://github.com/elastic/elasticsearch/pull/50662#discussion_r364217564", "bodyText": "Maybe also add a test asserting that a multiplexer containing updateable synonyms is rejected as an index-time analyzer as well?", "author": "romseygeek", "createdAt": "2020-01-08T12:58:42Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/action/ReloadSynonymAnalyzerTests.java", "diffHunk": "@@ -126,6 +122,74 @@ public void testSynonymsUpdateable() throws FileNotFoundException, IOException {\n         assertHitCount(response, 1L);\n     }\n \n+    public void testSynonymsInMultiplexerUpdateable() throws FileNotFoundException, IOException {\n+        String synonymsFileName = \"synonyms.txt\";\n+        Path configDir = node().getEnvironment().configFile();\n+        if (Files.exists(configDir) == false) {\n+            Files.createDirectory(configDir);\n+        }\n+        Path synonymsFile = configDir.resolve(synonymsFileName);\n+        if (Files.exists(synonymsFile) == false) {\n+            Files.createFile(synonymsFile);\n+        }\n+        try (PrintWriter out = new PrintWriter(\n+                new OutputStreamWriter(Files.newOutputStream(synonymsFile, StandardOpenOption.WRITE), StandardCharsets.UTF_8))) {\n+            out.println(\"foo, baz\");\n+        }\n+\n+        final String indexName = \"test\";\n+        final String synonymAnalyzerName = \"synonym_in_multiplexer_analyzer\";\n+        assertAcked(client().admin().indices().prepareCreate(indexName)\n+                .setSettings(Settings.builder().put(\"index.number_of_shards\", 5).put(\"index.number_of_replicas\", 0)\n+                        .put(\"analysis.analyzer.\" + synonymAnalyzerName + \".tokenizer\", \"whitespace\")\n+                        .putList(\"analysis.analyzer.\" + synonymAnalyzerName + \".filter\", \"my_multiplexer\")\n+                        .put(\"analysis.filter.synonym_filter.type\", \"synonym\").put(\"analysis.filter.synonym_filter.updateable\", \"true\")\n+                        .put(\"analysis.filter.synonym_filter.synonyms_path\", synonymsFileName)\n+                        .put(\"analysis.filter.my_multiplexer.type\", \"multiplexer\")\n+                        .putList(\"analysis.filter.my_multiplexer.filters\", \"synonym_filter\"))\n+                .addMapping(\"_doc\", \"field\", \"type=text,analyzer=standard,search_analyzer=\" + synonymAnalyzerName));\n+\n+        client().prepareIndex(indexName).setId(\"1\").setSource(\"field\", \"foo\").get();\n+        assertNoFailures(client().admin().indices().prepareRefresh(indexName).execute().actionGet());\n+\n+        SearchResponse response = client().prepareSearch(indexName).setQuery(QueryBuilders.matchQuery(\"field\", \"baz\")).get();\n+        assertHitCount(response, 1L);\n+        response = client().prepareSearch(indexName).setQuery(QueryBuilders.matchQuery(\"field\", \"buzz\")).get();\n+        assertHitCount(response, 0L);\n+\n+        Response analyzeResponse = client().admin().indices().prepareAnalyze(indexName, \"foo\").setAnalyzer(synonymAnalyzerName).get();\n+        assertEquals(2, analyzeResponse.getTokens().size());\n+        final Set<String> tokens = new HashSet<>();\n+        analyzeResponse.getTokens().stream().map(AnalyzeToken::getTerm).forEach(t -> tokens.add(t));\n+        assertTrue(tokens.contains(\"foo\"));\n+        assertTrue(tokens.contains(\"baz\"));\n+\n+        // now update synonyms file and trigger reloading\n+        try (PrintWriter out = new PrintWriter(\n+                new OutputStreamWriter(Files.newOutputStream(synonymsFile, StandardOpenOption.WRITE), StandardCharsets.UTF_8))) {\n+            out.println(\"foo, baz, buzz\");\n+        }\n+        ReloadAnalyzersResponse reloadResponse = client().execute(ReloadAnalyzerAction.INSTANCE, new ReloadAnalyzersRequest(indexName))\n+                .actionGet();\n+        assertNoFailures(reloadResponse);\n+        Set<String> reloadedAnalyzers = reloadResponse.getReloadDetails().get(indexName).getReloadedAnalyzers();\n+        assertEquals(1, reloadedAnalyzers.size());\n+        assertTrue(reloadedAnalyzers.contains(synonymAnalyzerName));\n+\n+        analyzeResponse = client().admin().indices().prepareAnalyze(indexName, \"foo\").setAnalyzer(synonymAnalyzerName).get();\n+        assertEquals(3, analyzeResponse.getTokens().size());\n+        tokens.clear();\n+        analyzeResponse.getTokens().stream().map(AnalyzeToken::getTerm).forEach(t -> tokens.add(t));\n+        assertTrue(tokens.contains(\"foo\"));\n+        assertTrue(tokens.contains(\"baz\"));\n+        assertTrue(tokens.contains(\"buzz\"));\n+\n+        response = client().prepareSearch(indexName).setQuery(QueryBuilders.matchQuery(\"field\", \"baz\")).get();\n+        assertHitCount(response, 1L);\n+        response = client().prepareSearch(indexName).setQuery(QueryBuilders.matchQuery(\"field\", \"buzz\")).get();\n+        assertHitCount(response, 1L);\n+    }\n+", "originalCommit": "e695a788e46101bc6e3ceca032d5ae6fe83a82d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5a744116cfe5cd9c394de63cb7c3a90015f2a221", "url": "https://github.com/elastic/elasticsearch/commit/5a744116cfe5cd9c394de63cb7c3a90015f2a221", "message": "Revert unnecessary change", "committedDate": "2020-01-08T16:10:00Z", "type": "commit"}, {"oid": "7cd50b4341a0b43f777f1a61fcfa4e6746b4f7c3", "url": "https://github.com/elastic/elasticsearch/commit/7cd50b4341a0b43f777f1a61fcfa4e6746b4f7c3", "message": "factor out synonym file setup and fix settings formatting", "committedDate": "2020-01-08T16:10:10Z", "type": "commit"}, {"oid": "63bee0dd65e8c58ceee367e9e08bc4c3e2c841ff", "url": "https://github.com/elastic/elasticsearch/commit/63bee0dd65e8c58ceee367e9e08bc4c3e2c841ff", "message": "add test for rejection of a multiplexer with updateable synonyms at index time", "committedDate": "2020-01-08T16:10:18Z", "type": "commit"}, {"oid": "c2eb3af780a7162520c70c6f42f655a59362c4c8", "url": "https://github.com/elastic/elasticsearch/commit/c2eb3af780a7162520c70c6f42f655a59362c4c8", "message": "Merge branch 'master' into fix-50554", "committedDate": "2020-01-08T16:29:00Z", "type": "commit"}]}