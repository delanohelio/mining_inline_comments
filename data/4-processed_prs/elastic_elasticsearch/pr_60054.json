{"pr_number": 60054, "pr_title": "Relax ShardFollowTasksExecutor validation", "pr_createdAt": "2020-07-22T15:34:36Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60054", "timeline": [{"oid": "5ff6ff0c7a1f86407d804e788d5e1746f075a31d", "url": "https://github.com/elastic/elasticsearch/commit/5ff6ff0c7a1f86407d804e788d5e1746f075a31d", "message": "Relax ShardFollowTasksExecutor validation", "committedDate": "2020-07-22T15:22:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg4NDc2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/60054#discussion_r458884765", "bodyText": "I am not sure if we should remove this validation. Should we be able to create a follow task while some follower shards are temporarily unavailable?", "author": "dnhatn", "createdAt": "2020-07-22T15:34:52Z", "path": "x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/action/ShardFollowTasksExecutor.java", "diffHunk": "@@ -111,9 +112,10 @@ public ShardFollowTasksExecutor(Client client,\n \n     @Override\n     public void validate(ShardFollowTask params, ClusterState clusterState) {\n-        IndexRoutingTable routingTable = clusterState.getRoutingTable().index(params.getFollowShardId().getIndex());\n-        if (routingTable.shard(params.getFollowShardId().id()).primaryShard().started() == false) {\n-            throw new IllegalArgumentException(\"Not all copies of follow shard are started\");\n+        final IndexRoutingTable routingTable = clusterState.getRoutingTable().index(params.getFollowShardId().getIndex());", "originalCommit": "5ff6ff0c7a1f86407d804e788d5e1746f075a31d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkyMTU0OA==", "url": "https://github.com/elastic/elasticsearch/pull/60054#discussion_r458921548", "bodyText": "yeah, I'm not sure either what the point of this validation is at this specific point in the code (maybe @martijnvg can help with that). It forces retry behavior upstream for \"put follow\" and \"resume follow\" to be resilient.", "author": "ywelsch", "createdAt": "2020-07-22T16:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg4NDc2NQ=="}], "type": "inlineReview"}]}