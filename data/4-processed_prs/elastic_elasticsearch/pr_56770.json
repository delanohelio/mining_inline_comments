{"pr_number": 56770, "pr_title": "[DOCS] EQL: Document `number` function", "pr_createdAt": "2020-05-14T13:48:18Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56770", "timeline": [{"oid": "7adc914a12dbed86be09155639d1daffa88ad06a", "url": "https://github.com/elastic/elasticsearch/commit/7adc914a12dbed86be09155639d1daffa88ad06a", "message": "[DOCS] EQL: Document `number` function", "committedDate": "2020-05-14T13:45:12Z", "type": "commit"}, {"oid": "a45d2bfb2899f235fca7e889ec1d8a383d61d57c", "url": "https://github.com/elastic/elasticsearch/commit/a45d2bfb2899f235fca7e889ec1d8a383d61d57c", "message": "reword", "committedDate": "2020-05-14T13:53:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyNDk0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56770#discussion_r425224942", "bodyText": "TIL", "author": "rw-access", "createdAt": "2020-05-14T15:26:09Z", "path": "docs/reference/eql/functions.asciidoc", "diffHunk": "@@ -805,6 +806,84 @@ If using a field as the argument, this parameter supports only\n *Returns:* integer, float, or `null`\n ====\n \n+[discrete]\n+[[eql-fn-number]]\n+=== `number`\n+\n+Converts a string to the corresponding integer or float.\n+\n+[%collapsible]\n+====\n+*Example*\n+[source,eql]\n+----\n+number(\"1337\")              // returns 1337\n+number(\"42.5\")              // returns 42.5\n+number(\"0xdeadbeef\", 16)    // returns 3735928559\n+\n+// \"+\" and \"-\" are supported\n+number(\"+1337\")             // returns 1337\n+number(\"-1337\")             // returns -1337\n+\n+// surrounding whitespace is ignored", "originalCommit": "a45d2bfb2899f235fca7e889ec1d8a383d61d57c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyNjIzMw==", "url": "https://github.com/elastic/elasticsearch/pull/56770#discussion_r425226233", "bodyText": "The 0x prefix will be stripped off, so these are both supported and equivalent\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            number(\"0xdeadbeef\", 16)    // returns 3735928559\n          \n          \n            \n            number(\"deadbeef\", 16)      // returns 3735928559\n          \n          \n            \n            number(\"0xdeadbeef\", 16)    // returns 3735928559\n          \n      \n    \n    \n  \n\nAlso, if 0x is provided and there is no base, it will be autodetected as hex\nnumber(\"0xdeadbeef\")    // returns 3735928559", "author": "rw-access", "createdAt": "2020-05-14T15:27:55Z", "path": "docs/reference/eql/functions.asciidoc", "diffHunk": "@@ -805,6 +806,84 @@ If using a field as the argument, this parameter supports only\n *Returns:* integer, float, or `null`\n ====\n \n+[discrete]\n+[[eql-fn-number]]\n+=== `number`\n+\n+Converts a string to the corresponding integer or float.\n+\n+[%collapsible]\n+====\n+*Example*\n+[source,eql]\n+----\n+number(\"1337\")              // returns 1337\n+number(\"42.5\")              // returns 42.5\n+number(\"0xdeadbeef\", 16)    // returns 3735928559", "originalCommit": "a45d2bfb2899f235fca7e889ec1d8a383d61d57c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyNzA3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/56770#discussion_r425227071", "bodyText": "Can you add a note to say that if it's null and the string starts with 0x, then it will default to 16", "author": "rw-access", "createdAt": "2020-05-14T15:28:58Z", "path": "docs/reference/eql/functions.asciidoc", "diffHunk": "@@ -805,6 +806,84 @@ If using a field as the argument, this parameter supports only\n *Returns:* integer, float, or `null`\n ====\n \n+[discrete]\n+[[eql-fn-number]]\n+=== `number`\n+\n+Converts a string to the corresponding integer or float.\n+\n+[%collapsible]\n+====\n+*Example*\n+[source,eql]\n+----\n+number(\"1337\")              // returns 1337\n+number(\"42.5\")              // returns 42.5\n+number(\"0xdeadbeef\", 16)    // returns 3735928559\n+\n+// \"+\" and \"-\" are supported\n+number(\"+1337\")             // returns 1337\n+number(\"-1337\")             // returns -1337\n+\n+// surrounding whitespace is ignored\n+number(\"  1337  \")          // returns 1337\n+\n+// process.pid = \"1337\"\n+number(process.pid)         // returns 1337\n+\n+// null handling\n+number(null)                // returns null\n+number(null, 16)            // returns null\n+number(\"1337\", null)        // returns null\n+----\n+\n+*Syntax*\n+[source,txt]\n+----\n+number(<string>[, <base_num>])\n+----\n+\n+*Parameters*\n+\n+`<string>`::\n++\n+--\n+(Required, string or `null`)\n+String to convert to an integer or float. If this value is a string, it must be\n+one of the following:\n+\n+* A string representation of an integer (e.g., `\"42\"`)\n+* A string representation of a float (e.g., `\"9.5\"`)\n+* If the `<base_num>` parameter is specified, a string containing an integer\n+  literal in the base notation (e.g., `\"0xDECAFBAD\"` in base `16`)\n+\n+`-` and `+` are supported with no space between. Surrounding whitespace is\n+ignored. Empty strings (`\"\"`) are not supported.\n+\n+If using a field as the argument, this parameter supports only the following\n+field datatypes:\n+\n+* <<keyword,`keyword`>>\n+* <<constant-keyword,`constant_keyword`>>\n+* <<text,`text`>> field with a <<keyword,`keyword`>> or\n+  <<constant-keyword,`constant_keyword`>> sub-field\n+\n+If this argument is `null`, the function returns `null`.\n+--\n+\n+`<base_num>`::\n++\n+--\n+(Optional, integer or `null`)\n+Radix or base used to convert the string. Defaults to base `10`. If `null`, the", "originalCommit": "a45d2bfb2899f235fca7e889ec1d8a383d61d57c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI0MzA1NA==", "url": "https://github.com/elastic/elasticsearch/pull/56770#discussion_r425243054", "bodyText": "That's interesting! Updated the examples and added some additional statements to the defs with 2828048.", "author": "jrodewig", "createdAt": "2020-05-14T15:50:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyNzA3MQ=="}], "type": "inlineReview"}, {"oid": "4e1470e39c3533cb4069b38921d92dc530699e01", "url": "https://github.com/elastic/elasticsearch/commit/4e1470e39c3533cb4069b38921d92dc530699e01", "message": "Update docs/reference/eql/functions.asciidoc\n\nCo-authored-by: Ross Wolf <31489089+rw-access@users.noreply.github.com>", "committedDate": "2020-05-14T15:44:47Z", "type": "commit"}, {"oid": "2828048c1f92e2c9a3e898a1ef9836d3f02fb51d", "url": "https://github.com/elastic/elasticsearch/commit/2828048c1f92e2c9a3e898a1ef9836d3f02fb51d", "message": "note hexadecimal and null handling", "committedDate": "2020-05-14T15:49:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMzU1NA==", "url": "https://github.com/elastic/elasticsearch/pull/56770#discussion_r425323554", "bodyText": "This should actually return 1337\nUnfortunately, there's not a good way for us to tell if an argument evaluated  to null, if null was passed in, or if the argument wasn't specified at all. This should technically return 1337", "author": "rw-access", "createdAt": "2020-05-14T17:48:48Z", "path": "docs/reference/eql/functions.asciidoc", "diffHunk": "@@ -805,6 +806,98 @@ If using a field as the argument, this parameter supports only\n *Returns:* integer, float, or `null`\n ====\n \n+[discrete]\n+[[eql-fn-number]]\n+=== `number`\n+\n+Converts a string to the corresponding integer or float.\n+\n+[%collapsible]\n+====\n+*Example*\n+[source,eql]\n+----\n+number(\"1337\")              // returns 1337\n+number(\"42.5\")              // returns 42.5\n+number(\"deadbeef\", 16)      // returns 3735928559\n+\n+// integer literals beginning with \"0x\" are auto-detected as hexadecimal\n+number(\"0xdeadbeef\")        // returns 3735928559\n+number(\"0xdeadbeef\", 16)    // returns 3735928559\n+\n+// \"+\" and \"-\" are supported\n+number(\"+1337\")             // returns 1337\n+number(\"-1337\")             // returns -1337\n+\n+// surrounding whitespace is ignored\n+number(\"  1337  \")          // returns 1337\n+\n+// process.pid = \"1337\"\n+number(process.pid)         // returns 1337\n+\n+// null handling\n+number(null)                // returns null\n+number(null, 16)            // returns null\n+number(\"1337\", null)        // returns null", "originalCommit": "2828048c1f92e2c9a3e898a1ef9836d3f02fb51d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMDY5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/56770#discussion_r425330696", "bodyText": ":doh: thanks for catching this. I thought I had tested this one, but it must have slipped by. Corrected with 626eefe.", "author": "jrodewig", "createdAt": "2020-05-14T18:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMzU1NA=="}], "type": "inlineReview"}, {"oid": "626eefe10272d3cdd62525aea9acbf378b1a806b", "url": "https://github.com/elastic/elasticsearch/commit/626eefe10272d3cdd62525aea9acbf378b1a806b", "message": "correct <base_num> null handling", "committedDate": "2020-05-14T17:58:41Z", "type": "commit"}, {"oid": "956d907f29fc5ee60557028625556c92721e3025", "url": "https://github.com/elastic/elasticsearch/commit/956d907f29fc5ee60557028625556c92721e3025", "message": "reword", "committedDate": "2020-05-14T17:59:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MDc3OA==", "url": "https://github.com/elastic/elasticsearch/pull/56770#discussion_r425340778", "bodyText": "float/double\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *Returns:* integer or `null`\n          \n          \n            \n            *Returns:* integer or float or `null`", "author": "rw-access", "createdAt": "2020-05-14T18:18:13Z", "path": "docs/reference/eql/functions.asciidoc", "diffHunk": "@@ -805,6 +806,102 @@ If using a field as the argument, this parameter supports only\n *Returns:* integer, float, or `null`\n ====\n \n+[discrete]\n+[[eql-fn-number]]\n+=== `number`\n+\n+Converts a string to the corresponding integer or float.\n+\n+[%collapsible]\n+====\n+*Example*\n+[source,eql]\n+----\n+number(\"1337\")              // returns 1337\n+number(\"42.5\")              // returns 42.5\n+number(\"deadbeef\", 16)      // returns 3735928559\n+\n+// integer literals beginning with \"0x\" are auto-detected as hexadecimal\n+number(\"0xdeadbeef\")        // returns 3735928559\n+number(\"0xdeadbeef\", 16)    // returns 3735928559\n+\n+// \"+\" and \"-\" are supported\n+number(\"+1337\")             // returns 1337\n+number(\"-1337\")             // returns -1337\n+\n+// surrounding whitespace is ignored\n+number(\"  1337  \")          // returns 1337\n+\n+// process.pid = \"1337\"\n+number(process.pid)         // returns 1337\n+\n+// null handling\n+number(null)                // returns null\n+number(null, 16)            // returns null\n+\n+// strings beginning with \"0x\" are treated as hexadecimal (base 16),\n+// even if the <base_num> is explicitly null.\n+number(\"0xdeadbeef\", null) // returns 3735928559\n+\n+// otherwise, strings are treated as decimal (base 10)\n+// if the <base_num> is explicitly null.\n+number(\"1337\", null)        // returns 1337\n+----\n+\n+*Syntax*\n+[source,txt]\n+----\n+number(<string>[, <base_num>])\n+----\n+\n+*Parameters*\n+\n+`<string>`::\n++\n+--\n+(Required, string or `null`)\n+String to convert to an integer or float. If this value is a string, it must be\n+one of the following:\n+\n+* A string representation of an integer (e.g., `\"42\"`)\n+* A string representation of a float (e.g., `\"9.5\"`)\n+* If the `<base_num>` parameter is specified, a string containing an integer\n+  literal in the base notation (e.g., `\"0xDECAFBAD\"` in hexadecimal or base\n+  `16`)\n+\n+Strings that begin with `0x` are auto-detected as hexadecimal and use a default\n+`<base_num>` of `16`.\n+\n+`-` and `+` are supported with no space between. Surrounding whitespace is\n+ignored. Empty strings (`\"\"`) are not supported.\n+\n+If using a field as the argument, this parameter supports only the following\n+field datatypes:\n+\n+* <<keyword,`keyword`>>\n+* <<constant-keyword,`constant_keyword`>>\n+* <<text,`text`>> field with a <<keyword,`keyword`>> or\n+  <<constant-keyword,`constant_keyword`>> sub-field\n+\n+If this argument is `null`, the function returns `null`.\n+--\n+\n+`<base_num>`::\n++\n+--\n+(Optional, integer or `null`)\n+Radix or base used to convert the string. If the `<string>` begins with `0x`,\n+this parameter defaults to `16` (hexadecimal). Otherwise, it defaults to base\n+`10`.\n+\n+If this argument is explicitly `null`, the default value is used.\n+\n+Fields are not supported as arguments.\n+--\n+\n+*Returns:* integer or `null`", "originalCommit": "956d907f29fc5ee60557028625556c92721e3025", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4125c3eac1da4959eca02ce9102874c8049c9541", "url": "https://github.com/elastic/elasticsearch/commit/4125c3eac1da4959eca02ce9102874c8049c9541", "message": "Update docs/reference/eql/functions.asciidoc\n\nCo-authored-by: Ross Wolf <31489089+rw-access@users.noreply.github.com>", "committedDate": "2020-05-14T19:06:41Z", "type": "commit"}]}