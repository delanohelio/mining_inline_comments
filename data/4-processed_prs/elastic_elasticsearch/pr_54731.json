{"pr_number": 54731, "pr_title": "Allow different source sets from forbiddenApis", "pr_createdAt": "2020-04-03T16:24:13Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54731", "timeline": [{"oid": "53b717aa29b9333f9d570cf614bae440cd7507f7", "url": "https://github.com/elastic/elasticsearch/commit/53b717aa29b9333f9d570cf614bae440cd7507f7", "message": "Allow different source sets from forbiddenApis\n\nForbiddenApis task via the precommit task currently makes an assumption\nthat only the test and main source sets are present for any given project.\nThis commit removes that assumption and allows for any roject source set's\ncompileClasspath class path to be added to the forbiddenApis classpath\nconfiguration.", "committedDate": "2020-04-03T16:18:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0Mjg3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/54731#discussion_r403142876", "bodyText": "We should use ForbiddenApisPlugin.FORBIDDEN_APIS_TASK_NAME here, which in theory should even avoid the potential for the exception below.", "author": "mark-vieira", "createdAt": "2020-04-03T16:53:40Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -144,18 +144,26 @@ class PrecommitTasks {\n         project.tasks.withType(CheckForbiddenApis).configureEach {\n             dependsOn(buildResources)\n \n-            //  use the runtime classpath if we have it, but some qa projects don't have one...\n-            if (name.endsWith('Test')) {\n-                FileCollection runtime = project.sourceSets.test.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.test.compileClasspath)\n-                }\n-            } else {\n-                FileCollection runtime = project.sourceSets.main.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.main.compileClasspath)\n+            String[] parts = name.split('forbiddenApis')", "originalCommit": "53b717aa29b9333f9d570cf614bae440cd7507f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0MzM3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/54731#discussion_r403143379", "bodyText": "Can we ditch the ; since this is Groovy.", "author": "mark-vieira", "createdAt": "2020-04-03T16:54:28Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -144,18 +144,26 @@ class PrecommitTasks {\n         project.tasks.withType(CheckForbiddenApis).configureEach {\n             dependsOn(buildResources)\n \n-            //  use the runtime classpath if we have it, but some qa projects don't have one...\n-            if (name.endsWith('Test')) {\n-                FileCollection runtime = project.sourceSets.test.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.test.compileClasspath)\n-                }\n-            } else {\n-                FileCollection runtime = project.sourceSets.main.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.main.compileClasspath)\n+            String[] parts = name.split('forbiddenApis')\n+            if (parts.length == 0) {\n+                throw new IllegalStateException(\"The forbidden APIs plugin has changed it's task name please update the precommit task\")\n+            }\n+            String sourceSetName = 'main';", "originalCommit": "53b717aa29b9333f9d570cf614bae440cd7507f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0MzU3MA==", "url": "https://github.com/elastic/elasticsearch/pull/54731#discussion_r403143570", "bodyText": "In before Ryan complains about using def instead of an explicit type \ud83d\ude09\nAlso, no need for the ; here either.", "author": "mark-vieira", "createdAt": "2020-04-03T16:54:48Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -144,18 +144,26 @@ class PrecommitTasks {\n         project.tasks.withType(CheckForbiddenApis).configureEach {\n             dependsOn(buildResources)\n \n-            //  use the runtime classpath if we have it, but some qa projects don't have one...\n-            if (name.endsWith('Test')) {\n-                FileCollection runtime = project.sourceSets.test.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.test.compileClasspath)\n-                }\n-            } else {\n-                FileCollection runtime = project.sourceSets.main.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.main.compileClasspath)\n+            String[] parts = name.split('forbiddenApis')\n+            if (parts.length == 0) {\n+                throw new IllegalStateException(\"The forbidden APIs plugin has changed it's task name please update the precommit task\")\n+            }\n+            String sourceSetName = 'main';\n+            if (parts.length == 2) {\n+                sourceSetName = parts[1].toLowerCase(Locale.ROOT)\n+            }\n+            //add the sourceSet's compile classPath if it exists\n+            def sourceSets = project.sourceSets;", "originalCommit": "53b717aa29b9333f9d570cf614bae440cd7507f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0Mzg1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/54731#discussion_r403143852", "bodyText": "Replace def with SourceSet.", "author": "mark-vieira", "createdAt": "2020-04-03T16:55:18Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -144,18 +144,26 @@ class PrecommitTasks {\n         project.tasks.withType(CheckForbiddenApis).configureEach {\n             dependsOn(buildResources)\n \n-            //  use the runtime classpath if we have it, but some qa projects don't have one...\n-            if (name.endsWith('Test')) {\n-                FileCollection runtime = project.sourceSets.test.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.test.compileClasspath)\n-                }\n-            } else {\n-                FileCollection runtime = project.sourceSets.main.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.main.compileClasspath)\n+            String[] parts = name.split('forbiddenApis')\n+            if (parts.length == 0) {\n+                throw new IllegalStateException(\"The forbidden APIs plugin has changed it's task name please update the precommit task\")\n+            }\n+            String sourceSetName = 'main';\n+            if (parts.length == 2) {\n+                sourceSetName = parts[1].toLowerCase(Locale.ROOT)\n+            }\n+            //add the sourceSet's compile classPath if it exists\n+            def sourceSets = project.sourceSets;\n+            if (sourceSetName) {\n+                def sourceSet = sourceSets.findByName(sourceSetName)", "originalCommit": "53b717aa29b9333f9d570cf614bae440cd7507f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0NTAyMA==", "url": "https://github.com/elastic/elasticsearch/pull/54731#discussion_r403145020", "bodyText": "I think we can ditch this null-check. A source set will always have a compile and runtime classpath (even if they are empty) so concatenating them will never error. I believe this is a relic from when we were looking at Configurations instead.", "author": "mark-vieira", "createdAt": "2020-04-03T16:56:39Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -144,18 +144,26 @@ class PrecommitTasks {\n         project.tasks.withType(CheckForbiddenApis).configureEach {\n             dependsOn(buildResources)\n \n-            //  use the runtime classpath if we have it, but some qa projects don't have one...\n-            if (name.endsWith('Test')) {\n-                FileCollection runtime = project.sourceSets.test.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.test.compileClasspath)\n-                }\n-            } else {\n-                FileCollection runtime = project.sourceSets.main.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.main.compileClasspath)\n+            String[] parts = name.split('forbiddenApis')\n+            if (parts.length == 0) {\n+                throw new IllegalStateException(\"The forbidden APIs plugin has changed it's task name please update the precommit task\")\n+            }\n+            String sourceSetName = 'main';\n+            if (parts.length == 2) {\n+                sourceSetName = parts[1].toLowerCase(Locale.ROOT)\n+            }\n+            //add the sourceSet's compile classPath if it exists\n+            def sourceSets = project.sourceSets;\n+            if (sourceSetName) {\n+                def sourceSet = sourceSets.findByName(sourceSetName)\n+                if (sourceSet) {\n+                    FileCollection runtime = sourceSet.runtimeClasspath\n+                    if (runtime && sourceSet.compileClasspath) {", "originalCommit": "53b717aa29b9333f9d570cf614bae440cd7507f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5d1cc03795ea8c345226a538340b56ecc3cc61ae", "url": "https://github.com/elastic/elasticsearch/commit/5d1cc03795ea8c345226a538340b56ecc3cc61ae", "message": "review changes", "committedDate": "2020-04-03T17:08:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzNTE3NA==", "url": "https://github.com/elastic/elasticsearch/pull/54731#discussion_r403335174", "bodyText": "Why do we need this leniency? If a CheckForbiddenApis task exists, this source set should exist shouldn't it? With this leniency, or that below, we could have a bug here in the name munging and silently skip over all of this?", "author": "rjernst", "createdAt": "2020-04-03T21:04:53Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -144,18 +146,23 @@ class PrecommitTasks {\n         project.tasks.withType(CheckForbiddenApis).configureEach {\n             dependsOn(buildResources)\n \n-            //  use the runtime classpath if we have it, but some qa projects don't have one...\n-            if (name.endsWith('Test')) {\n-                FileCollection runtime = project.sourceSets.test.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.test.compileClasspath)\n-                }\n-            } else {\n-                FileCollection runtime = project.sourceSets.main.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.main.compileClasspath)\n+            String[] parts = name.split(ForbiddenApisPlugin.FORBIDDEN_APIS_TASK_NAME)\n+            String sourceSetName = 'main'\n+            if (parts.length == 2) {\n+                sourceSetName = parts[1].toLowerCase(Locale.ROOT)\n+            }\n+            //add the sourceSet's compile classPath if it exists\n+            SourceSetContainer sourceSets = project.sourceSets\n+            if (sourceSetName) {", "originalCommit": "5d1cc03795ea8c345226a538340b56ecc3cc61ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMzMTIwMA==", "url": "https://github.com/elastic/elasticsearch/pull/54731#discussion_r404331200", "bodyText": "@rjernst good call. the leniency is not needed. Fixing that revealed a bug around casing which has also been fixed in cdf8253", "author": "jakelandis", "createdAt": "2020-04-06T19:21:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMzNTE3NA=="}], "type": "inlineReview"}, {"oid": "cdf8253325727d62a227c415a49d041cdb681861", "url": "https://github.com/elastic/elasticsearch/commit/cdf8253325727d62a227c415a49d041cdb681861", "message": "less lenient and fix casing from parsing", "committedDate": "2020-04-06T19:19:03Z", "type": "commit"}, {"oid": "e5b13d050922d10bb7a2cb6f3b32bc6984c6693d", "url": "https://github.com/elastic/elasticsearch/commit/e5b13d050922d10bb7a2cb6f3b32bc6984c6693d", "message": "Merge branch 'master' into forbidden_task_assumption", "committedDate": "2020-04-06T21:06:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3ODMwMw==", "url": "https://github.com/elastic/elasticsearch/pull/54731#discussion_r404978303", "bodyText": "Instead of a split, could we assert the name startsWith and then do a substring using the length? Otherwise we have an edge case (part.length != 2) that should never happen that we allow for errors in this logic.", "author": "rjernst", "createdAt": "2020-04-07T17:16:03Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -144,18 +144,19 @@ class PrecommitTasks {\n         project.tasks.withType(CheckForbiddenApis).configureEach {\n             dependsOn(buildResources)\n \n-            //  use the runtime classpath if we have it, but some qa projects don't have one...\n-            if (name.endsWith('Test')) {\n-                FileCollection runtime = project.sourceSets.test.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.test.compileClasspath)\n-                }\n-            } else {\n-                FileCollection runtime = project.sourceSets.main.runtimeClasspath\n-                if (runtime != null) {\n-                    classpath = runtime.plus(project.sourceSets.main.compileClasspath)\n-                }\n+            //parse out the sourceSetName\n+            String[] parts = name.split(ForbiddenApisPlugin.FORBIDDEN_APIS_TASK_NAME)", "originalCommit": "e5b13d050922d10bb7a2cb6f3b32bc6984c6693d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwMDAzMw==", "url": "https://github.com/elastic/elasticsearch/pull/54731#discussion_r405000033", "bodyText": "Currently the main task name is forbiddenApisMain, however, if the plugin drops the Main suffix such that task name is forbiddenApis (which iiuc is the standard naming convention [1]), the code as-is should continue work. For this reason, I would prefer to keep it as-is.\n[1]\nhttps://docs.gradle.org/current/userguide/building_java_projects.html#sec:java_source_sets\nMost language plugins, Java included, automatically create a source set called main, which is used for the project\u2019s production code. This source set is special in that its name is not included in the names of the configurations and tasks, hence why you have just a compileJava task and compileOnly and implementation configurations rather than compileMainJava, mainCompileOnly and mainImplementation respectively.", "author": "jakelandis", "createdAt": "2020-04-07T17:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3ODMwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1NjEyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/54731#discussion_r405156121", "bodyText": "It's not that I don't think the code as is would work, it's that by using split the code is more difficult to understand since at a glance it looks like we are ignoring parts[0], which is actually always an empty string.", "author": "rjernst", "createdAt": "2020-04-07T22:43:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3ODMwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUwNjAwNw==", "url": "https://github.com/elastic/elasticsearch/pull/54731#discussion_r405506007", "bodyText": "Switched to use substring in 309c7a9", "author": "jakelandis", "createdAt": "2020-04-08T13:01:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3ODMwMw=="}], "type": "inlineReview"}, {"oid": "309c7a92955fb8f1bf038362df4bbe24d1cfe97e", "url": "https://github.com/elastic/elasticsearch/commit/309c7a92955fb8f1bf038362df4bbe24d1cfe97e", "message": "substring instead of split", "committedDate": "2020-04-08T13:00:09Z", "type": "commit"}, {"oid": "a58a4e50119b77ca2479a0f87740b1d0731ea143", "url": "https://github.com/elastic/elasticsearch/commit/a58a4e50119b77ca2479a0f87740b1d0731ea143", "message": "Merge branch 'master' into forbidden_task_assumption", "committedDate": "2020-04-08T15:19:18Z", "type": "commit"}]}