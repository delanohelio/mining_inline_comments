{"pr_number": 57954, "pr_title": "[DOCS] Reformat data streams intro and overview", "pr_createdAt": "2020-06-10T21:53:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57954", "timeline": [{"oid": "165e41ca590c2be46a868a67ecaa89815e8a8180", "url": "https://github.com/elastic/elasticsearch/commit/165e41ca590c2be46a868a67ecaa89815e8a8180", "message": "[DOCS] Reformat data streams intro and overview\n\nChanges:\n\n* Updates 'Data streams' intro page to focus on problem solution and\n  benefits.\n\n* Adds 'Data streams overview' page to cover conceptual information,\n  based on existing content in the 'Data streams' intro.\n\n* Adds diagrams for data streams and search/indexing request examples.\n\n* Moves API jump list and API docs to a new 'Data streams APIs' section.\n  Links to these APIs will be available through tutorials.\n\n* Add xrefs to existing docs for concepts like generation, write index,\n  and append-only.", "committedDate": "2020-06-10T21:40:14Z", "type": "commit"}, {"oid": "b9f79cd0853b5bd79a72918f1af82bd7126aa0ee", "url": "https://github.com/elastic/elasticsearch/commit/b9f79cd0853b5bd79a72918f1af82bd7126aa0ee", "message": "patch", "committedDate": "2020-06-10T22:27:37Z", "type": "commit"}, {"oid": "719e1b4ce979d03d50962cfe9b9e8b6b1c44a04f", "url": "https://github.com/elastic/elasticsearch/commit/719e1b4ce979d03d50962cfe9b9e8b6b1c44a04f", "message": "reorder", "committedDate": "2020-06-10T22:28:46Z", "type": "commit"}, {"oid": "7bb89f50412e46fb0c6058c1ad8486912b6cdf44", "url": "https://github.com/elastic/elasticsearch/commit/7bb89f50412e46fb0c6058c1ad8486912b6cdf44", "message": "reword", "committedDate": "2020-06-10T22:33:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1NjQ4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438456486", "bodyText": "It's a separate consideration whether to use a single data stream for time series data from multiple data sources or to use distinct data streams per source. For example, observability plans to use a separate data stream for each source. I think the salient point that you accurately make here is that storing a time series for all time in a single index is less efficient and cost-effective than splitting that same time series, whether from a single data source or many sources, across multiple time-based indices.", "author": "danhermann", "createdAt": "2020-06-10T23:12:07Z", "path": "docs/reference/data-streams/data-streams.asciidoc", "diffHunk": "@@ -1,67 +1,59 @@\n [[data-streams]]\n = Data streams\n+++++\n+<titleabbrev>Data streams</titleabbrev>\n+++++\n \n-[partintro]\n---\n-You can use data streams to index time-based data that's continuously generated.\n-A data stream groups indices from the same time-based data source.\n-A data stream tracks its indices, known as _backing indices_, using an ordered\n-list.\n+A _data stream_ is a convenient, scalable way to ingest, search, and manage\n+continuously generated time-series data.\n \n-A data stream's backing indices are <<index-hidden,hidden>>.\n-While all backing indices handle read requests, the most recently created\n-backing index is the data stream's only write index.  A data stream only\n-accepts <<docs-index_,index requests>> with `op_type` set to `create`. To update\n-or delete specific documents in a data stream, submit a <<docs-delete,delete>>\n-or <<docs-update,update>> API request to the backing index containing the\n-document.\n+Time-series data, such as logs, tends to grow over time, resulting in large\n+volumes of data. While using a single {es} index for each data source is\n+simpler, it is often more efficient and cost-effective to store a source's data\n+across multiple, time-based indices. Multiple indices let you move indices", "originalCommit": "7bb89f50412e46fb0c6058c1ad8486912b6cdf44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzNDg5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438834895", "bodyText": "Good point. I reworded to remove references to sources.", "author": "jrodewig", "createdAt": "2020-06-11T14:37:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1NjQ4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1Njg0OA==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438456848", "bodyText": "Maybe replace \"less valuable data\" with \"less frequently queried data\"?", "author": "danhermann", "createdAt": "2020-06-10T23:13:17Z", "path": "docs/reference/data-streams/data-streams.asciidoc", "diffHunk": "@@ -1,67 +1,59 @@\n [[data-streams]]\n = Data streams\n+++++\n+<titleabbrev>Data streams</titleabbrev>\n+++++\n \n-[partintro]\n---\n-You can use data streams to index time-based data that's continuously generated.\n-A data stream groups indices from the same time-based data source.\n-A data stream tracks its indices, known as _backing indices_, using an ordered\n-list.\n+A _data stream_ is a convenient, scalable way to ingest, search, and manage\n+continuously generated time-series data.\n \n-A data stream's backing indices are <<index-hidden,hidden>>.\n-While all backing indices handle read requests, the most recently created\n-backing index is the data stream's only write index.  A data stream only\n-accepts <<docs-index_,index requests>> with `op_type` set to `create`. To update\n-or delete specific documents in a data stream, submit a <<docs-delete,delete>>\n-or <<docs-update,update>> API request to the backing index containing the\n-document.\n+Time-series data, such as logs, tends to grow over time, resulting in large\n+volumes of data. While using a single {es} index for each data source is\n+simpler, it is often more efficient and cost-effective to store a source's data\n+across multiple, time-based indices. Multiple indices let you move indices\n+containing older, less valuable data to less expensive hardware and delete", "originalCommit": "7bb89f50412e46fb0c6058c1ad8486912b6cdf44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzNDQ2OA==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438834468", "bodyText": "Thanks. This wording is more explicit.", "author": "jrodewig", "createdAt": "2020-06-11T14:37:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1Njg0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1OTIxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438459211", "bodyText": "In this image, I tend to read the graphics left to right which would imply that backing indices are numbered in descending order. I don't know if that's common, but if so, it would be better to show backing indices in increasing generation order from left to right.", "author": "danhermann", "createdAt": "2020-06-10T23:21:04Z", "path": "docs/reference/data-streams/data-streams-overview.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[data-streams-overview]]\n+== Data streams overview\n+++++\n+<titleabbrev>Overview</titleabbrev>\n+++++\n+\n+A data stream consists of one or more _backing indices_. Backing indices are\n+<<index-hidden,hidden>>, automatically-generated indices used to store a\n+stream's documents.\n+\n+image::images/data-streams/data-streams-diagram.svg[align=\"center\"]", "originalCommit": "7bb89f50412e46fb0c6058c1ad8486912b6cdf44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyODg1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438828857", "bodyText": "Good point. I've addressed with 9c7f0d5.", "author": "jrodewig", "createdAt": "2020-06-11T14:29:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1OTIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1OTM0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438459343", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <<date,`date`>> or <<date_nanos,`date_nanos`>> field datatype and be\n          \n          \n            \n              <<date,`date`>> or <<date_nanos,`date_nanos`>> field datatype and must be", "author": "danhermann", "createdAt": "2020-06-10T23:21:33Z", "path": "docs/reference/data-streams/data-streams-overview.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[data-streams-overview]]\n+== Data streams overview\n+++++\n+<titleabbrev>Overview</titleabbrev>\n+++++\n+\n+A data stream consists of one or more _backing indices_. Backing indices are\n+<<index-hidden,hidden>>, automatically-generated indices used to store a\n+stream's documents.\n+\n+image::images/data-streams/data-streams-diagram.svg[align=\"center\"]\n+\n+The creation of a data stream requires an associated\n+<<indices-templates,composable template>>. This template acts as a blueprint for\n+the stream's backing indices. It contains:\n+\n+* A name or wildcard (`*`) pattern for the data stream.\n+\n+* The data stream's _timestamp field_. This field must be mapped as a\n+  <<date,`date`>> or <<date_nanos,`date_nanos`>> field datatype and be", "originalCommit": "7bb89f50412e46fb0c6058c1ad8486912b6cdf44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ2MjM0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438462343", "bodyText": "I believe we do allow indexing directly into backing indices that are not the write index so long as the op_type is not create. @martijnvg, can you confirm?\nEven if op_types other than create are permitted into older backing indices, they are allowed only to facilitate administrative workflows such as \"remove document containing personally-identifying information.\" Your larger point is correct that the typical use case for data streams is ingestion with op_type of \"create\" via the data stream name and those always go into the current write index.", "author": "danhermann", "createdAt": "2020-06-10T23:31:43Z", "path": "docs/reference/data-streams/data-streams-overview.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[data-streams-overview]]\n+== Data streams overview\n+++++\n+<titleabbrev>Overview</titleabbrev>\n+++++\n+\n+A data stream consists of one or more _backing indices_. Backing indices are\n+<<index-hidden,hidden>>, automatically-generated indices used to store a\n+stream's documents.\n+\n+image::images/data-streams/data-streams-diagram.svg[align=\"center\"]\n+\n+The creation of a data stream requires an associated\n+<<indices-templates,composable template>>. This template acts as a blueprint for\n+the stream's backing indices. It contains:\n+\n+* A name or wildcard (`*`) pattern for the data stream.\n+\n+* The data stream's _timestamp field_. This field must be mapped as a\n+  <<date,`date`>> or <<date_nanos,`date_nanos`>> field datatype and be\n+  included in every document indexed to the data stream.\n+\n+* The mappings and settings applied to each backing index when it's created.\n+\n+The same composable template can be used to create multiple data streams.\n+See <<set-up-a-data-stream>>.\n+\n+[discrete]\n+[[data-streams-generation]]\n+=== Generation\n+\n+Each data stream tracks its _generation_: a six-digit, zero-padded integer\n+that acts as a cumulative count of the data stream's backing indices. This count\n+includes any deleted indices for the stream. The generation is incremented\n+whenever a new backing index is added to the stream.\n+\n+When a backing index is created, the index is named using the following\n+convention:\n+\n+[source,text]\n+----\n+.ds-<data-stream>-<generation>\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The `web_server_logs` data stream has a generation of `34`. The most recently\n+created backing index for this data stream is named\n+`.ds-web_server_logs-000034`.\n+====\n+\n+Because the generation increments with each new backing index, backing indices\n+with a higher generation contain more recent data. Backing indices with a lower\n+generation contain older data.\n+\n+A backing index's name can change after its creation due to a\n+<<indices-shrink-index,shrink>>, <<snapshots-restore-snapshot,restore>>, or\n+other operations.\n+\n+[discrete]\n+[[data-stream-write-index]]\n+=== Write index\n+\n+When a read request is sent to a data stream, it routes the request to all its\n+backing indices. For example, a search request sent to a data stream would query\n+all its backing indices.\n+\n+image::images/data-streams/data-streams-search-request.svg[align=\"center\"]\n+\n+However, the most recently created backing index is the data stream\u2019s only\n+_write index_. The data stream routes all indexing requests to this index.\n+\n+image::images/data-streams/data-streams-index-request.svg[align=\"center\"]\n+\n+You cannot add new documents to a stream's other backing indices, even\n+by sending indexing requests directly to the index.", "originalCommit": "7bb89f50412e46fb0c6058c1ad8486912b6cdf44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1ODUwOA==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438658508", "bodyText": "I believe we do allow indexing directly into backing indices that are not the write index so long as the op_type is not create. @martijnvg, can you confirm?\n\nYes, update, delete and index op_type. The index op_type is only allowed if if_seq_no and if_primary_term has been set.", "author": "martijnvg", "createdAt": "2020-06-11T09:27:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ2MjM0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMzkyMg==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438833922", "bodyText": "Thanks for the clarification. I've expanded the info about disallowed requests here. I also added some info about allowed update/delete requests under the append-only section.", "author": "jrodewig", "createdAt": "2020-06-11T14:36:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ2MjM0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ2Mjk3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438462977", "bodyText": "We currently prohibit closing and deleting the write index and are going to prohibit freezing, shrinking, and any other operation that would prevent ingestion into the write index even if, as in the case of shrinking, ingestion would be prevented only temporarily.", "author": "danhermann", "createdAt": "2020-06-10T23:33:53Z", "path": "docs/reference/data-streams/data-streams-overview.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[data-streams-overview]]\n+== Data streams overview\n+++++\n+<titleabbrev>Overview</titleabbrev>\n+++++\n+\n+A data stream consists of one or more _backing indices_. Backing indices are\n+<<index-hidden,hidden>>, automatically-generated indices used to store a\n+stream's documents.\n+\n+image::images/data-streams/data-streams-diagram.svg[align=\"center\"]\n+\n+The creation of a data stream requires an associated\n+<<indices-templates,composable template>>. This template acts as a blueprint for\n+the stream's backing indices. It contains:\n+\n+* A name or wildcard (`*`) pattern for the data stream.\n+\n+* The data stream's _timestamp field_. This field must be mapped as a\n+  <<date,`date`>> or <<date_nanos,`date_nanos`>> field datatype and be\n+  included in every document indexed to the data stream.\n+\n+* The mappings and settings applied to each backing index when it's created.\n+\n+The same composable template can be used to create multiple data streams.\n+See <<set-up-a-data-stream>>.\n+\n+[discrete]\n+[[data-streams-generation]]\n+=== Generation\n+\n+Each data stream tracks its _generation_: a six-digit, zero-padded integer\n+that acts as a cumulative count of the data stream's backing indices. This count\n+includes any deleted indices for the stream. The generation is incremented\n+whenever a new backing index is added to the stream.\n+\n+When a backing index is created, the index is named using the following\n+convention:\n+\n+[source,text]\n+----\n+.ds-<data-stream>-<generation>\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The `web_server_logs` data stream has a generation of `34`. The most recently\n+created backing index for this data stream is named\n+`.ds-web_server_logs-000034`.\n+====\n+\n+Because the generation increments with each new backing index, backing indices\n+with a higher generation contain more recent data. Backing indices with a lower\n+generation contain older data.\n+\n+A backing index's name can change after its creation due to a\n+<<indices-shrink-index,shrink>>, <<snapshots-restore-snapshot,restore>>, or\n+other operations.\n+\n+[discrete]\n+[[data-stream-write-index]]\n+=== Write index\n+\n+When a read request is sent to a data stream, it routes the request to all its\n+backing indices. For example, a search request sent to a data stream would query\n+all its backing indices.\n+\n+image::images/data-streams/data-streams-search-request.svg[align=\"center\"]\n+\n+However, the most recently created backing index is the data stream\u2019s only\n+_write index_. The data stream routes all indexing requests to this index.\n+\n+image::images/data-streams/data-streams-index-request.svg[align=\"center\"]\n+\n+You cannot add new documents to a stream's other backing indices, even\n+by sending indexing requests directly to the index.\n+\n+Because it's the only index capable of handling indexing requests, you also\n+cannot <<indices-close,close>> a data stream's write index.", "originalCommit": "7bb89f50412e46fb0c6058c1ad8486912b6cdf44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMzQ4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438833483", "bodyText": "Thanks. I've expanded the list to explicitly include close, freeze, and shrink. I also added a high-level note stating that operations that hinder ingest are prohibited.", "author": "jrodewig", "createdAt": "2020-06-11T14:35:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ2Mjk3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ2MzY4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438463683", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Because of this, data streams are designed to append-only. This means you can\n          \n          \n            \n            Because of this, data streams are designed to be append-only. This means you can", "author": "danhermann", "createdAt": "2020-06-10T23:36:31Z", "path": "docs/reference/data-streams/data-streams-overview.asciidoc", "diffHunk": "@@ -0,0 +1,118 @@\n+[[data-streams-overview]]\n+== Data streams overview\n+++++\n+<titleabbrev>Overview</titleabbrev>\n+++++\n+\n+A data stream consists of one or more _backing indices_. Backing indices are\n+<<index-hidden,hidden>>, automatically-generated indices used to store a\n+stream's documents.\n+\n+image::images/data-streams/data-streams-diagram.svg[align=\"center\"]\n+\n+The creation of a data stream requires an associated\n+<<indices-templates,composable template>>. This template acts as a blueprint for\n+the stream's backing indices. It contains:\n+\n+* A name or wildcard (`*`) pattern for the data stream.\n+\n+* The data stream's _timestamp field_. This field must be mapped as a\n+  <<date,`date`>> or <<date_nanos,`date_nanos`>> field datatype and be\n+  included in every document indexed to the data stream.\n+\n+* The mappings and settings applied to each backing index when it's created.\n+\n+The same composable template can be used to create multiple data streams.\n+See <<set-up-a-data-stream>>.\n+\n+[discrete]\n+[[data-streams-generation]]\n+=== Generation\n+\n+Each data stream tracks its _generation_: a six-digit, zero-padded integer\n+that acts as a cumulative count of the data stream's backing indices. This count\n+includes any deleted indices for the stream. The generation is incremented\n+whenever a new backing index is added to the stream.\n+\n+When a backing index is created, the index is named using the following\n+convention:\n+\n+[source,text]\n+----\n+.ds-<data-stream>-<generation>\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The `web_server_logs` data stream has a generation of `34`. The most recently\n+created backing index for this data stream is named\n+`.ds-web_server_logs-000034`.\n+====\n+\n+Because the generation increments with each new backing index, backing indices\n+with a higher generation contain more recent data. Backing indices with a lower\n+generation contain older data.\n+\n+A backing index's name can change after its creation due to a\n+<<indices-shrink-index,shrink>>, <<snapshots-restore-snapshot,restore>>, or\n+other operations.\n+\n+[discrete]\n+[[data-stream-write-index]]\n+=== Write index\n+\n+When a read request is sent to a data stream, it routes the request to all its\n+backing indices. For example, a search request sent to a data stream would query\n+all its backing indices.\n+\n+image::images/data-streams/data-streams-search-request.svg[align=\"center\"]\n+\n+However, the most recently created backing index is the data stream\u2019s only\n+_write index_. The data stream routes all indexing requests to this index.\n+\n+image::images/data-streams/data-streams-index-request.svg[align=\"center\"]\n+\n+You cannot add new documents to a stream's other backing indices, even\n+by sending indexing requests directly to the index.\n+\n+Because it's the only index capable of handling indexing requests, you also\n+cannot <<indices-close,close>> a data stream's write index.\n+\n+[discrete]\n+[[data-streams-rollover]]\n+=== Rollover\n+\n+When a data stream is created, one backing index is automatically created.\n+Because this single index is also the most recently created backing index, it\n+acts as the stream's write index.\n+\n+A <<indices-rollover-index,rollover>> creates a new backing index for a data\n+stream. This new backing index becomes the stream's write index, replacing\n+the current one, and increments the stream's generation.\n+\n+In most cases, we recommend using <<index-lifecycle-management,{ilm}\n+({ilm-init})>> to automate rollovers for data streams. This lets you\n+automatically roll over the current write index when it meets specified\n+criteria, such as a maximum age or size.\n+\n+However, you can also use the <<indices-rollover-index,rollover API>> to\n+manually perform a rollover. See <<manually-roll-over-a-data-stream>>.\n+\n+[discrete]\n+[[data-streams-append-only]]\n+=== Append-only\n+\n+For most time-series use cases, existing data is rarely, if ever, updated.\n+Because of this, data streams are designed to append-only. This means you can", "originalCommit": "7bb89f50412e46fb0c6058c1ad8486912b6cdf44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY4MzAyMw==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438683023", "bodyText": "Shall we mention the composable templates here that create/manage the data stream and backing indices settings (ie. the ILM policy) somewhere? (I think as it stands now it might imply that you need a separate policy to manage these backing indices, as opposed to the one that sets up the data stream)", "author": "andreidan", "createdAt": "2020-06-11T10:13:01Z", "path": "docs/reference/data-streams/data-streams.asciidoc", "diffHunk": "@@ -1,67 +1,59 @@\n [[data-streams]]\n = Data streams\n+++++\n+<titleabbrev>Data streams</titleabbrev>\n+++++\n \n-[partintro]\n---\n-You can use data streams to index time-based data that's continuously generated.\n-A data stream groups indices from the same time-based data source.\n-A data stream tracks its indices, known as _backing indices_, using an ordered\n-list.\n+A _data stream_ is a convenient, scalable way to ingest, search, and manage\n+continuously generated time-series data.\n \n-A data stream's backing indices are <<index-hidden,hidden>>.\n-While all backing indices handle read requests, the most recently created\n-backing index is the data stream's only write index.  A data stream only\n-accepts <<docs-index_,index requests>> with `op_type` set to `create`. To update\n-or delete specific documents in a data stream, submit a <<docs-delete,delete>>\n-or <<docs-update,update>> API request to the backing index containing the\n-document.\n+Time-series data, such as logs, tends to grow over time, resulting in large\n+volumes of data. While using a single {es} index for each data source is\n+simpler, it is often more efficient and cost-effective to store a source's data\n+across multiple, time-based indices. Multiple indices let you move indices\n+containing older, less valuable data to less expensive hardware and delete\n+indices when they're not longer needed, reducing overhead and storage costs.\n \n-To create a data stream, set up a <<indices-templates,composable index\n-template>> containing:\n+A data stream is designed to give you the best of both worlds:\n \n-* A name or wildcard pattern for the data stream in the `index_patterns` property.\n-* A `data_stream` definition that contains the `timestamp_field` property.\n-  The `timestamp_field` must be the primary timestamp field\n-   for the data source. This field must be included in every\n-   document indexed to the data stream.\n+* The simplicity of a single, named resource you can use for requests\n+  related to a data source\n+* The storage, scalability, and cost-saving benefits of multiple indices \n \n-When you index one or more documents to a not-yet-existent target matching\n-the template's name or pattern, {es} automatically creates the corresponding\n-data stream. You can also manually create a data stream using the\n-<<indices-create-data-stream,create data stream API>>. However, a composable\n-template for the stream is still required.\n+You can submit indexing and search requests directly to a data stream. The\n+stream automatically routes the requests to a collection of hidden,\n+auto-generated indices that store the source's data.\n \n-You can use the <<indices-rollover-index,rollover API>> to roll a data stream\n-over to a new index when the current write index meets specified criteria, such\n-as a maximum age or size. A rollover creates a new backing index and updates the\n-data stream's list of backing indices. This new index then becomes the stream's\n-new write index. See <<rollover-data-stream-ex>>.\n+You can use <<index-lifecycle-management,{ilm} ({ilm-init})>> to automate the\n+management of these hidden indices. You can use {ilm-init} to spin up new\n+indices, allocate indices to different hardware, delete old indices, and take\n+other automatic actions based on age or size criteria you set. This lets you\n+seamlessly scale your data storage based on your budget, performance,\n+resiliency, and retention needs.", "originalCommit": "7bb89f50412e46fb0c6058c1ad8486912b6cdf44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMDc3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57954#discussion_r438830777", "bodyText": "Good point. I'll add a mention here.", "author": "jrodewig", "createdAt": "2020-06-11T14:31:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY4MzAyMw=="}], "type": "inlineReview"}, {"oid": "9c7f0d567bf4a9ddb3bd0e86cb9d14cc75d578b2", "url": "https://github.com/elastic/elasticsearch/commit/9c7f0d567bf4a9ddb3bd0e86cb9d14cc75d578b2", "message": "update images", "committedDate": "2020-06-11T12:52:04Z", "type": "commit"}, {"oid": "039cecb4d0721b4f6baefcc61a5867db99f97961", "url": "https://github.com/elastic/elasticsearch/commit/039cecb4d0721b4f6baefcc61a5867db99f97961", "message": "Merge remote-tracking branch 'upstream/master' into docs__reformat-data-streams-intro", "committedDate": "2020-06-11T13:37:23Z", "type": "commit"}, {"oid": "931c4f6205819cd03e731876a7eeb0093d4ea6b2", "url": "https://github.com/elastic/elasticsearch/commit/931c4f6205819cd03e731876a7eeb0093d4ea6b2", "message": "address feedback", "committedDate": "2020-06-11T14:28:08Z", "type": "commit"}, {"oid": "119e77a04966bfdb6319fc643ff99870f38bd2d8", "url": "https://github.com/elastic/elasticsearch/commit/119e77a04966bfdb6319fc643ff99870f38bd2d8", "message": "fix typos", "committedDate": "2020-06-11T14:37:57Z", "type": "commit"}, {"oid": "32b4355876c71da5cf82ea31f3b4155d7183fa7c", "url": "https://github.com/elastic/elasticsearch/commit/32b4355876c71da5cf82ea31f3b4155d7183fa7c", "message": "clarification", "committedDate": "2020-06-11T14:44:17Z", "type": "commit"}, {"oid": "ad3e04fd48189ba568cfa2dcd23d71804dff8858", "url": "https://github.com/elastic/elasticsearch/commit/ad3e04fd48189ba568cfa2dcd23d71804dff8858", "message": "punct fix", "committedDate": "2020-06-11T14:46:39Z", "type": "commit"}, {"oid": "1da05bd6ae97adfc55efde69b9626a64982584dc", "url": "https://github.com/elastic/elasticsearch/commit/1da05bd6ae97adfc55efde69b9626a64982584dc", "message": "typo", "committedDate": "2020-06-11T14:47:13Z", "type": "commit"}]}