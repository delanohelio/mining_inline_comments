{"pr_number": 59076, "pr_title": "Fix the timestamp field of a data stream to @timestamp", "pr_createdAt": "2020-07-06T14:15:04Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59076", "timeline": [{"oid": "5269034d9cecbd5ca2e4071dfa2f3997c4c0906b", "url": "https://github.com/elastic/elasticsearch/commit/5269034d9cecbd5ca2e4071dfa2f3997c4c0906b", "message": "Fix the timestamp field of a data stream to @timestamp\n\nThe commit makes the following changes:\n* The timestamp field of a data stream definition in a composable\n  index template can only be set to '@timestamp'.\n* Removed custom data stream timestamp field validation and reuse the validation from `TimestampFieldMapper` and\n  instead only check that the _timestamp field mapping has been defined on a backing index of a data stream.\n* Moved code that injects _timestamp meta field mapping from `MetadataCreateIndexService#applyCreateIndexRequestWithV2Template58956(...)` method\n  to `MetadataIndexTemplateService#collectMappings(...)` method.\n* Fixed a bug (#58956) that cases timestamp field validation to be performed\n  for each template and instead of the final mappings that is created.\n\nRelates to #58642\nRelates to #53100\nCloses #58956\nCloses #58583", "committedDate": "2020-07-06T14:14:45Z", "type": "commit"}, {"oid": "257d33a64341242155b7da07e0de99b0f92943af", "url": "https://github.com/elastic/elasticsearch/commit/257d33a64341242155b7da07e0de99b0f92943af", "message": "fixed tests", "committedDate": "2020-07-06T15:06:51Z", "type": "commit"}, {"oid": "95e5b2cad41c9e9724b2db0575f378c7138b9cce", "url": "https://github.com/elastic/elasticsearch/commit/95e5b2cad41c9e9724b2db0575f378c7138b9cce", "message": "fixed more tests", "committedDate": "2020-07-06T16:04:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMDQyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r450330425", "bodyText": "Can we make this a public static string so it can be referenced elsewhere?", "author": "dakrone", "createdAt": "2020-07-06T16:12:54Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java", "diffHunk": "@@ -256,6 +257,10 @@ public String toString() {\n         private final String timestampField;\n \n         public DataStreamTemplate(String timestampField) {\n+            if (\"@timestamp\".equals(timestampField) == false) {", "originalCommit": "95e5b2cad41c9e9724b2db0575f378c7138b9cce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMjAyNA==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r450332024", "bodyText": "Super minor:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return Map.of(\"_doc\", Map.of(TimestampFieldMapper.NAME, Map.of(\"path\", timestampField)));\n          \n          \n            \n                        return Map.of(MapperService.SINGLE_MAPPING_NAME, Map.of(TimestampFieldMapper.NAME, Map.of(\"path\", timestampField)));", "author": "dakrone", "createdAt": "2020-07-06T16:15:21Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java", "diffHunk": "@@ -267,6 +272,13 @@ public String getTimestampField() {\n             this(in.readString());\n         }\n \n+        /**\n+         * @return a mapping snippet for a backing index with `_timestamp` meta field mapper properly configured.\n+         */\n+        public Map<String, Object> getDataSteamMappingSnippet() {\n+            return Map.of(\"_doc\", Map.of(TimestampFieldMapper.NAME, Map.of(\"path\", timestampField)));", "originalCommit": "95e5b2cad41c9e9724b2db0575f378c7138b9cce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzNDMxMg==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r450334312", "bodyText": "I think we should transform this into an actual error, that way if we end up using it for the HLRC it doesn't fail to throw because assertions are disabled", "author": "dakrone", "createdAt": "2020-07-06T16:19:00Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "diffHunk": "@@ -213,67 +207,37 @@ public int hashCode() {\n     public static final class TimestampField implements Writeable, ToXContentObject {\n \n         static ParseField NAME_FIELD = new ParseField(\"name\");\n-        static ParseField FIELD_MAPPING_FIELD = new ParseField(\"mapping\");\n \n         @SuppressWarnings(\"unchecked\")\n         private static final ConstructingObjectParser<TimestampField, Void> PARSER = new ConstructingObjectParser<>(\n             \"timestamp_field\",\n-            args -> new TimestampField((String) args[0], (Map<String, Object>) args[1])\n+            args -> new TimestampField((String) args[0])\n         );\n \n         static {\n             PARSER.declareString(ConstructingObjectParser.constructorArg(), NAME_FIELD);\n-            PARSER.declareObject(ConstructingObjectParser.optionalConstructorArg(), (p, c) -> p.mapOrdered(), FIELD_MAPPING_FIELD);\n         }\n \n         private final String name;\n-        private final Map<String, Object> fieldMapping;\n-\n-        public TimestampField(String name, Map<String, Object> fieldMapping) {\n-            assert fieldMapping.containsKey(\"type\") : \"no type defined for mapping of timestamp_field\";\n-            assert ALLOWED_TIMESTAMPFIELD_TYPES.contains(fieldMapping.get(\"type\")) :\n-                \"invalid type defined for mapping of timestamp_field\";\n \n+        public TimestampField(String name) {\n+            assert \"@timestamp\".equals(name) : \"unexpected timestamp field [\" + name + \"]\";", "originalCommit": "95e5b2cad41c9e9724b2db0575f378c7138b9cce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2MTUwMA==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r450361500", "bodyText": "I think HLRC uses its own DataStream pojo. I will change this from an assertion to an actual error.", "author": "martijnvg", "createdAt": "2020-07-06T17:04:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzNDMxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzNTAwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r450335009", "bodyText": "This makes me wonder, this is fine as-is, but should we even bother having this class or specifying the name of the field if it's going to be hardcoded for the foreseeable future?", "author": "dakrone", "createdAt": "2020-07-06T16:20:04Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "diffHunk": "@@ -213,67 +207,37 @@ public int hashCode() {\n     public static final class TimestampField implements Writeable, ToXContentObject {\n \n         static ParseField NAME_FIELD = new ParseField(\"name\");\n-        static ParseField FIELD_MAPPING_FIELD = new ParseField(\"mapping\");\n \n         @SuppressWarnings(\"unchecked\")\n         private static final ConstructingObjectParser<TimestampField, Void> PARSER = new ConstructingObjectParser<>(\n             \"timestamp_field\",\n-            args -> new TimestampField((String) args[0], (Map<String, Object>) args[1])\n+            args -> new TimestampField((String) args[0])", "originalCommit": "95e5b2cad41c9e9724b2db0575f378c7138b9cce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2NDE1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r450364157", "bodyText": "I prefer to keep this class. I think that that the timestamp field will not stay hard coded for a long time.", "author": "martijnvg", "createdAt": "2020-07-06T17:09:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzNTAwOQ=="}], "type": "inlineReview"}, {"oid": "a23d2e484594b5cbe788f3ef4bfcd40f97136f67", "url": "https://github.com/elastic/elasticsearch/commit/a23d2e484594b5cbe788f3ef4bfcd40f97136f67", "message": "only apply _timestamp meta field if index is created as part of a data stream or data stream rollover,\nthis fixes a docs test, where a regular index creation matches (logs-*) with a template with a data stream definition.", "committedDate": "2020-07-06T20:56:15Z", "type": "commit"}, {"oid": "1e6b32292082810dfb4c6c93b3de24744fc6d175", "url": "https://github.com/elastic/elasticsearch/commit/1e6b32292082810dfb4c6c93b3de24744fc6d175", "message": "Merge remote-tracking branch 'es/master' into fix_timestamp_field_to_@timestamp", "committedDate": "2020-07-06T20:56:37Z", "type": "commit"}, {"oid": "fa6f0ab41f29c5f3012392ea0a93a2d652bbeef3", "url": "https://github.com/elastic/elasticsearch/commit/fa6f0ab41f29c5f3012392ea0a93a2d652bbeef3", "message": "checkstyle", "committedDate": "2020-07-06T21:44:14Z", "type": "commit"}, {"oid": "289aa1365de355631a534a637a9c617855f13563", "url": "https://github.com/elastic/elasticsearch/commit/289aa1365de355631a534a637a9c617855f13563", "message": "fix ml integ tests", "committedDate": "2020-07-07T09:47:45Z", "type": "commit"}, {"oid": "3bd67642ac8d268c0cf974e416cd49bba3d28b39", "url": "https://github.com/elastic/elasticsearch/commit/3bd67642ac8d268c0cf974e416cd49bba3d28b39", "message": "Merge remote-tracking branch 'es/master' into fix_timestamp_field_to_@timestamp", "committedDate": "2020-07-07T09:48:07Z", "type": "commit"}, {"oid": "c78733204c12cf44b53026052aff9865d99ced03", "url": "https://github.com/elastic/elasticsearch/commit/c78733204c12cf44b53026052aff9865d99ced03", "message": "only include template with _timestamp field mapping if creation a backing index", "committedDate": "2020-07-07T10:32:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyODQzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r450828439", "bodyText": "@dakrone I had to add this if statement otherwise the meta field mapper was going to be applied on each create index api call. In a docs test, the new logs-- composable index template was triggered by a regular create index api call and then the test failed, because the document being indexed had no timestamp field.\nI think only applying the meta field automatically makes sense for backing indices only and not when a user creates a new index via create index api and the index composable template matches?\nSee commits: a23d2e4, which then was superseded by: c787332", "author": "martijnvg", "createdAt": "2020-07-07T12:32:49Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java", "diffHunk": "@@ -902,6 +909,23 @@ public static String findV2Template(Metadata metadata, String indexName, boolean\n         Optional.ofNullable(template.template())\n             .map(Template::mappings)\n             .ifPresent(mappings::add);\n+\n+        // Only include _timestamp mapping snippet if creating backing index.\n+        if (indexName.startsWith(DataStream.BACKING_INDEX_PREFIX)) {", "originalCommit": "c78733204c12cf44b53026052aff9865d99ced03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgzMTU3OA==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r450831578", "bodyText": "Note currently in master, the _timestamp field gets only applied if the create index request originates from create data stream api and data stream rollover (signalled via CreateIndexClusterStateUpdateRequest#dataStreamName field), but now this logic moved MetadataIndexTemplateService.collectMappings(...) method, which didn't have that context.", "author": "martijnvg", "createdAt": "2020-07-07T12:38:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyODQzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU3MDI0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r452570243", "bodyText": "Would it be cleaner to pull this check out of collectMappings and into the caller? That way we could avoid the workaround here: https://github.com/elastic/elasticsearch/pull/59076/files#diff-115cd2f0fff9dd97acc95e1d29012a15R1075.", "author": "jtibshirani", "createdAt": "2020-07-10T01:10:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyODQzOQ=="}], "type": "inlineReview"}, {"oid": "14e8da3c3d2e1b5e9e23eea0031cbcaba931decd", "url": "https://github.com/elastic/elasticsearch/commit/14e8da3c3d2e1b5e9e23eea0031cbcaba931decd", "message": "one search and replace too many", "committedDate": "2020-07-07T13:10:20Z", "type": "commit"}, {"oid": "1c9eb00cf7096a97099269aef945977d3febf745", "url": "https://github.com/elastic/elasticsearch/commit/1c9eb00cf7096a97099269aef945977d3febf745", "message": "instead of changeing the current timestamp field, just add @timestamp and keep using current timestamp field", "committedDate": "2020-07-07T17:46:17Z", "type": "commit"}, {"oid": "c92c3a84435fc73efa53dbfb886cc0d79d4032ef", "url": "https://github.com/elastic/elasticsearch/commit/c92c3a84435fc73efa53dbfb886cc0d79d4032ef", "message": "Merge remote-tracking branch 'es/master' into fix_timestamp_field_to_@timestamp", "committedDate": "2020-07-07T17:59:31Z", "type": "commit"}, {"oid": "d3160b015ed3f4ecba42e934932c77a9a2763579", "url": "https://github.com/elastic/elasticsearch/commit/d3160b015ed3f4ecba42e934932c77a9a2763579", "message": "disable bwc tests", "committedDate": "2020-07-07T19:12:11Z", "type": "commit"}, {"oid": "163ae67e431902b7f1648ff6a9a7c5db0ae27cbb", "url": "https://github.com/elastic/elasticsearch/commit/163ae67e431902b7f1648ff6a9a7c5db0ae27cbb", "message": "iter", "committedDate": "2020-07-07T19:23:26Z", "type": "commit"}, {"oid": "29ce2f4666f37402dc68cc0b24e1313291a92e5e", "url": "https://github.com/elastic/elasticsearch/commit/29ce2f4666f37402dc68cc0b24e1313291a92e5e", "message": "iter2", "committedDate": "2020-07-07T20:24:41Z", "type": "commit"}, {"oid": "5052d876998c61bb50fb9de20f2cff0b9de7a325", "url": "https://github.com/elastic/elasticsearch/commit/5052d876998c61bb50fb9de20f2cff0b9de7a325", "message": "Merge remote-tracking branch 'es/master' into fix_timestamp_field_to_@timestamp", "committedDate": "2020-07-07T20:25:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNDg3MA==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r452534870", "bodyText": "Noticed this typo as I was trying to pull up the method: DataSteam -> DataStream.", "author": "jtibshirani", "createdAt": "2020-07-09T23:00:12Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/ComposableIndexTemplate.java", "diffHunk": "@@ -267,6 +275,13 @@ public String getTimestampField() {\n             this(in.readString());\n         }\n \n+        /**\n+         * @return a mapping snippet for a backing index with `_timestamp` meta field mapper properly configured.\n+         */\n+        public Map<String, Object> getDataSteamMappingSnippet() {", "originalCommit": "5052d876998c61bb50fb9de20f2cff0b9de7a325", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNjU1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r452536559", "bodyText": "Does TimestampFieldMapper need a path parameter now? We're not sure how we will eventually implement custom timestamp names, I can see an implementation where we don't use path here at all. So maybe we could simplify and just have an enabled boolean flag instead.\nDepending on the implementation, we can always add path later and just default to @timestamp if it's not specified.", "author": "jtibshirani", "createdAt": "2020-07-09T23:05:34Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/TimestampFieldMapper.java", "diffHunk": "@@ -196,6 +196,10 @@ public void validate(DocumentFieldMappers lookup) {\n         }\n     }\n \n+    public String getPath() {", "originalCommit": "5052d876998c61bb50fb9de20f2cff0b9de7a325", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzODc3OA==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r452538778", "bodyText": "I think this error will be hard for end users to understand, since they shouldn't be aware of the _timestamp field. Maybe we won't even need this check, once we remove the ability to set timestamp_field, as discussed in #59317 (comment)?", "author": "jtibshirani", "createdAt": "2020-07-09T23:12:56Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamService.java", "diffHunk": "@@ -183,31 +169,16 @@ public static ComposableIndexTemplate lookupTemplateForDataStream(String dataStr\n     }\n \n     public static void validateTimestampFieldMapping(String timestampFieldName, MapperService mapperService) {\n-        MappedFieldType timestampFieldMapper = mapperService.fieldType(timestampFieldName);\n-        if (timestampFieldMapper == null) {\n-            throw new IllegalArgumentException(\"expected timestamp field [\" + timestampFieldName + \"], but found no timestamp field\");\n-        }\n-        String type = timestampFieldMapper.typeName();\n-        if (ALLOWED_TIMESTAMPFIELD_TYPES.contains(type) == false) {\n-            throw new IllegalArgumentException(\"expected timestamp field [\" + timestampFieldName + \"] to be of types \" +\n-                ALLOWED_TIMESTAMPFIELD_TYPES + \", but instead found type [\" + type  + \"]\");\n-        }\n-    }\n+        TimestampFieldMapper fieldMapper = (TimestampFieldMapper) mapperService.documentMapper().mappers().getMapper(\"_timestamp\");\n+        assert fieldMapper != null : \"[_timestamp] meta field mapper must exist\";\n \n-    public static String convertFieldPathToMappingPath(String fieldPath) {\n-        // The mapping won't allow such fields, so this is a sanity check:\n-        assert Arrays.stream(fieldPath.split(\"\\\\.\")).filter(String::isEmpty).count() == 0L ||\n-            fieldPath.startsWith(\".\") ||\n-            fieldPath.endsWith(\".\") : \"illegal field path [\" + fieldPath + \"]\";\n-\n-        String mappingPath;\n-        if (fieldPath.indexOf('.') == -1) {\n-            mappingPath = \"properties.\" + fieldPath;\n-        } else {\n-            mappingPath = \"properties.\" + fieldPath.replace(\".\", \".properties.\");\n+        if (timestampFieldName.equals(fieldMapper.getPath()) == false) {\n+            throw new IllegalArgumentException(\"[_timestamp] meta field doesn't point to data stream timestamp field [\" +", "originalCommit": "5052d876998c61bb50fb9de20f2cff0b9de7a325", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE2MjU5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59076#discussion_r454162597", "bodyText": "This is more of a sanity check. Kind of ensuring that we did apply the _data_stream_timestamp meta field mapper. If a user would run into this error then this would be a bug. Can tweak this check.", "author": "martijnvg", "createdAt": "2020-07-14T07:36:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzODc3OA=="}], "type": "inlineReview"}]}