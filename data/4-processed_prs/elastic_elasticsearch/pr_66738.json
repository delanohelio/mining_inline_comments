{"pr_number": 66738, "pr_title": "Port all task definitions to task avoidance api", "pr_createdAt": "2020-12-22T12:36:19Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66738", "timeline": [{"oid": "8a759ca44c36e083365ae39770483b82d43fa16b", "url": "https://github.com/elastic/elasticsearch/commit/8a759ca44c36e083365ae39770483b82d43fa16b", "message": "Port all task definitions to task avoidance api", "committedDate": "2020-12-22T12:35:51Z", "type": "commit"}, {"oid": "b8c30d84de4c4644e1c1be33c0ecef61bb2bc8d5", "url": "https://github.com/elastic/elasticsearch/commit/b8c30d84de4c4644e1c1be33c0ecef61bb2bc8d5", "message": "Fix last task created during configuration", "committedDate": "2020-12-22T12:40:50Z", "type": "commit"}, {"oid": "a4c5c530bcce6e66a6e8255bff0c1134ed5f0a88", "url": "https://github.com/elastic/elasticsearch/commit/a4c5c530bcce6e66a6e8255bff0c1134ed5f0a88", "message": "Fix test setup in  :modules:reindex", "committedDate": "2020-12-22T14:32:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2OTM2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r549469366", "bodyText": "Does this have different final semantics than an enhanced for loop? I've seen goofiness with stuff like this before where lazy evaluated configuration uses the last value of this variable in the enhanced-for scenario. If this solves that problem maybe we should standardize on it.", "author": "mark-vieira", "createdAt": "2020-12-28T19:56:09Z", "path": "modules/reindex/build.gradle", "diffHunk": "@@ -128,7 +129,7 @@ if (Os.isFamily(Os.FAMILY_WINDOWS)) {\n     // see: https://github.com/elastic/elasticsearch/issues/51202\n     versions = ['2', '1']\n   }\n-  for (String version : versions) {\n+  versions.each { version ->", "originalCommit": "a4c5c530bcce6e66a6e8255bff0c1134ed5f0a88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIzNTA5NA==", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r551235094", "bodyText": "yes. It fixes exactly the weird issue that you describe here with for loops. I think what we see there is this bug here: https://issues.apache.org/jira/browse/GROOVY-8826", "author": "breskeby", "createdAt": "2021-01-04T10:33:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2OTM2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ3MDQ0MA==", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r549470440", "bodyText": "Looks like jar and runtimeClasspath should also be inputs here. In fact we should just do that and then rely on the implicit dependencies.", "author": "mark-vieira", "createdAt": "2020-12-28T20:00:09Z", "path": "test/fixtures/gcs-fixture/build.gradle", "diffHunk": "@@ -26,8 +26,8 @@ dependencies {\n   api project(':server')\n }\n \n-preProcessFixture {\n-  dependsOn jar, configurations.runtimeClasspath\n+tasks.named(\"preProcessFixture\").configure {\n+  dependsOn tasks.named(\"jar\"), configurations.runtimeClasspath", "originalCommit": "a4c5c530bcce6e66a6e8255bff0c1134ed5f0a88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0ODU4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r551248586", "bodyText": "fixed", "author": "breskeby", "createdAt": "2021-01-04T10:59:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ3MDQ0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ3MTE2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r549471165", "bodyText": "Does this not require a useCluster?", "author": "mark-vieira", "createdAt": "2020-12-28T20:03:22Z", "path": "x-pack/plugin/ccr/qa/multi-cluster/build.gradle", "diffHunk": "@@ -9,51 +9,53 @@ dependencies {\n   testImplementation project(':x-pack:plugin:ccr:qa')\n }\n \n-task \"leader-cluster\"(type: RestIntegTestTask) {\n-  mustRunAfter(\"precommit\")\n-  systemProperty 'tests.target_cluster', 'leader'\n+testClusters {\n+  'leader-cluster' {\n+    testDistribution = 'DEFAULT'\n+    setting 'xpack.license.self_generated.type', 'trial'\n+  }\n+  'middle-cluster' {\n+    testDistribution = 'DEFAULT'\n+    setting 'xpack.license.self_generated.type', 'trial'\n+    setting 'cluster.remote.leader_cluster.seeds',\n+            { \"\\\"${testClusters.named('leader-cluster').get().getAllTransportPortURI().join(\",\")}\\\"\" }\n+  }\n }\n \n-testClusters.\"leader-cluster\" {\n-  testDistribution = 'DEFAULT'\n-  setting 'xpack.license.self_generated.type', 'trial'\n+tasks.register(\"leader-cluster\", RestIntegTestTask) {\n+  mustRunAfter(\"precommit\")", "originalCommit": "a4c5c530bcce6e66a6e8255bff0c1134ed5f0a88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0NzU3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/66738#discussion_r551247571", "bodyText": "The name matching cluster is always wired here: \n  \n    \n      elasticsearch/buildSrc/src/main/java/org/elasticsearch/gradle/test/RestTestBasePlugin.java\n    \n    \n         Line 47\n      in\n      0911d04\n    \n    \n    \n    \n\n        \n          \n           restIntegTestTask.useCluster(cluster);", "author": "breskeby", "createdAt": "2021-01-04T10:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ3MTE2NQ=="}], "type": "inlineReview"}, {"oid": "81c140df5cd0b83f01d7311c68ffb957f9f61099", "url": "https://github.com/elastic/elasticsearch/commit/81c140df5cd0b83f01d7311c68ffb957f9f61099", "message": "Declare proper task inputs", "committedDate": "2021-01-04T10:53:38Z", "type": "commit"}]}