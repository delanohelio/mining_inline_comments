{"pr_number": 64768, "pr_title": "Review retrying persister audit messages", "pr_createdAt": "2020-11-09T11:29:40Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64768", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MjA1OA==", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519742058", "bodyText": "Could it be renamed to retryMessage for consistency?", "author": "przemekwitek", "createdAt": "2020-11-09T11:34:56Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/inference/InferenceRunner.java", "diffHunk": "@@ -160,6 +160,6 @@ private void executeBulkRequest(BulkRequest bulkRequest) {\n             bulkRequest,\n             config.getId(),\n             () -> isCancelled == false,\n-            errorMsg -> {});\n+            retryMsg -> {});", "originalCommit": "a80a567a2ee0a4eba52e7ebaa33b67fd54847fb6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MjE1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519742152", "bodyText": "Could it be renamed to retryMessage for consistency?", "author": "przemekwitek", "createdAt": "2020-11-09T11:35:04Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/process/DataFrameRowsJoiner.java", "diffHunk": "@@ -109,7 +109,7 @@ private void executeBulkRequest(BulkRequest bulkRequest) {\n             bulkRequest,\n             analyticsId,\n             () -> isCancelled == false,\n-            errorMsg -> {});\n+            retryMsg -> {});", "originalCommit": "a80a567a2ee0a4eba52e7ebaa33b67fd54847fb6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MzAyOA==", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519743028", "bodyText": "Double-checking: should it be semicolon or colon in this string: \"]; \"?", "author": "przemekwitek", "createdAt": "2020-11-09T11:36:43Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/stats/StatsPersister.java", "diffHunk": "@@ -46,13 +46,13 @@ public void persistWithRetry(ToXContentObject result, Function<String, String> d\n                 docIdSupplier.apply(jobId),\n                 true,\n                 () -> true,\n-                errorMsg -> auditor.error(jobId,\n-                    \"failed to persist result with id [\" + docIdSupplier.apply(jobId) + \"]; \" + errorMsg)\n+                retryMessage -> LOGGER.debug(\"[{}] failed to persist result with id [{}]; {}\", jobId, docIdSupplier.apply(jobId), retryMessage)\n             );\n         } catch (IOException ioe) {\n             LOGGER.error(() -> new ParameterizedMessage(\"[{}] Failed serializing stats result\", jobId), ioe);\n         } catch (Exception e) {\n             LOGGER.error(() -> new ParameterizedMessage(\"[{}] Failed indexing stats result\", jobId), e);\n+            auditor.error(jobId, \"Failed indexing stats result with id [\" + docIdSupplier.apply(jobId) + \"]; \" + e.getMessage());", "originalCommit": "a80a567a2ee0a4eba52e7ebaa33b67fd54847fb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc3MTU3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519771577", "bodyText": "Good question. I tend avoid semi-colons as I don't know how to use them correctly.\nThis one was copied from the old usage above", "author": "davidkyle", "createdAt": "2020-11-09T12:30:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MzAyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc3MzA2MA==", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519773060", "bodyText": "@dimitris-athanasiou you wrote this code originally can you comment on ; vs : please", "author": "davidkyle", "createdAt": "2020-11-09T12:33:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MzAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc4MDA4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/64768#discussion_r519780085", "bodyText": "<3", "author": "benwtrent", "createdAt": "2020-11-09T12:45:56Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsPersister.java", "diffHunk": "@@ -524,10 +524,12 @@ void persist(ActionListener<IndexResponse> listener, boolean requireAlias) {\n         }\n \n         private void logCall(String indexName) {\n-            if (id != null) {\n-                logger.trace(\"[{}] ES API CALL: to index {} with ID [{}]\", jobId, indexName, id);\n-            } else {\n-                logger.trace(\"[{}] ES API CALL: to index {} with auto-generated ID\", jobId, indexName);\n+            if (logger.isTraceEnabled()) {", "originalCommit": "a8693ee598a524898704999248faeb721b6f8ef9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9a4ef33aca54199f5dcbd17592ebdb069c3533f6", "url": "https://github.com/elastic/elasticsearch/commit/9a4ef33aca54199f5dcbd17592ebdb069c3533f6", "message": "Remove unused auditor from annotations processor and checkstyle fix", "committedDate": "2020-11-09T16:26:47Z", "type": "forcePushed"}, {"oid": "06a0390e6f89f0249390299eed408de6d7cb066b", "url": "https://github.com/elastic/elasticsearch/commit/06a0390e6f89f0249390299eed408de6d7cb066b", "message": "Review retrying persister audit messages", "committedDate": "2020-11-10T09:37:46Z", "type": "commit"}, {"oid": "ec125bcaf80bc4af4c63e267d6491effd6fbb1b5", "url": "https://github.com/elastic/elasticsearch/commit/ec125bcaf80bc4af4c63e267d6491effd6fbb1b5", "message": "Remove unused auditor from annotations processor and checkstyle fix", "committedDate": "2020-11-10T09:37:46Z", "type": "commit"}, {"oid": "ec125bcaf80bc4af4c63e267d6491effd6fbb1b5", "url": "https://github.com/elastic/elasticsearch/commit/ec125bcaf80bc4af4c63e267d6491effd6fbb1b5", "message": "Remove unused auditor from annotations processor and checkstyle fix", "committedDate": "2020-11-10T09:37:46Z", "type": "forcePushed"}]}