{"pr_number": 63224, "pr_title": "Bulk invalidate API keys using a list of IDs", "pr_createdAt": "2020-10-05T02:19:06Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63224", "timeline": [{"oid": "b2e8f07496f84e404435542b2543e9ae236cb790", "url": "https://github.com/elastic/elasticsearch/commit/b2e8f07496f84e404435542b2543e9ae236cb790", "message": "Add ids field to API key invalidation request", "committedDate": "2020-10-05T02:06:13Z", "type": "commit"}, {"oid": "d2ce92a4cf32e6ee23b1fbd6c7109be7c77cd7b1", "url": "https://github.com/elastic/elasticsearch/commit/d2ce92a4cf32e6ee23b1fbd6c7109be7c77cd7b1", "message": "Fix tests", "committedDate": "2020-10-05T02:59:55Z", "type": "commit"}, {"oid": "e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "url": "https://github.com/elastic/elasticsearch/commit/e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "message": "Add yaml test", "committedDate": "2020-10-05T05:45:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM2NzUxOA==", "url": "https://github.com/elastic/elasticsearch/pull/63224#discussion_r499367518", "bodyText": "Nit: Can we move this field up to where id used to be, so that the order matches serialization?", "author": "tvernum", "createdAt": "2020-10-05T06:26:35Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/InvalidateApiKeyRequest.java", "diffHunk": "@@ -26,19 +28,24 @@\n \n     private final String realmName;\n     private final String userName;\n-    private final String id;\n     private final String name;\n     private final boolean ownedByAuthenticatedUser;\n+    private final String[] ids;", "originalCommit": "e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM2ODEzMw==", "url": "https://github.com/elastic/elasticsearch/pull/63224#discussion_r499368133", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        validationException = addValidationError(\"One of [api key id, api key name, username, realm name] must be specified if \" +\n          \n          \n            \n                        validationException = addValidationError(\"One of [api key id(s), api key name, username, realm name] must be specified if \" +", "author": "tvernum", "createdAt": "2020-10-05T06:28:19Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/InvalidateApiKeyRequest.java", "diffHunk": "@@ -141,12 +161,25 @@ public static InvalidateApiKeyRequest forOwnedApiKeys() {\n     @Override\n     public ActionRequestValidationException validate() {\n         ActionRequestValidationException validationException = null;\n-        if (Strings.hasText(realmName) == false && Strings.hasText(userName) == false && Strings.hasText(id) == false\n+        if (ids != null) {\n+            if (ids.length == 0) {\n+                validationException = addValidationError(\"Field [ids] cannot be an empty array\", validationException);\n+            } else {\n+                final int[] idxOfBlankIds = IntStream.range(0, ids.length).filter(i -> Strings.hasText(ids[i]) == false).toArray();\n+                if (idxOfBlankIds.length > 0) {\n+                    validationException = addValidationError(\"Field [ids] must not contain blank id, but got blank \"\n+                        + (idxOfBlankIds.length == 1 ? \"id\" : \"ids\") + \" at index \"\n+                        + (idxOfBlankIds.length == 1 ? \"position\" : \"positions\") + \": \"\n+                        + Arrays.toString(idxOfBlankIds), validationException);\n+                }\n+            }\n+        }\n+        if (Strings.hasText(realmName) == false && Strings.hasText(userName) == false && ids == null\n             && Strings.hasText(name) == false && ownedByAuthenticatedUser == false) {\n             validationException = addValidationError(\"One of [api key id, api key name, username, realm name] must be specified if \" +", "originalCommit": "e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM2ODQwMg==", "url": "https://github.com/elastic/elasticsearch/pull/63224#discussion_r499368402", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"username or realm name must not be specified when the api key id or api key name is specified\",\n          \n          \n            \n                                \"username or realm name must not be specified when the api key id(s) or api key name are specified\",", "author": "tvernum", "createdAt": "2020-10-05T06:29:09Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/InvalidateApiKeyRequest.java", "diffHunk": "@@ -141,12 +161,25 @@ public static InvalidateApiKeyRequest forOwnedApiKeys() {\n     @Override\n     public ActionRequestValidationException validate() {\n         ActionRequestValidationException validationException = null;\n-        if (Strings.hasText(realmName) == false && Strings.hasText(userName) == false && Strings.hasText(id) == false\n+        if (ids != null) {\n+            if (ids.length == 0) {\n+                validationException = addValidationError(\"Field [ids] cannot be an empty array\", validationException);\n+            } else {\n+                final int[] idxOfBlankIds = IntStream.range(0, ids.length).filter(i -> Strings.hasText(ids[i]) == false).toArray();\n+                if (idxOfBlankIds.length > 0) {\n+                    validationException = addValidationError(\"Field [ids] must not contain blank id, but got blank \"\n+                        + (idxOfBlankIds.length == 1 ? \"id\" : \"ids\") + \" at index \"\n+                        + (idxOfBlankIds.length == 1 ? \"position\" : \"positions\") + \": \"\n+                        + Arrays.toString(idxOfBlankIds), validationException);\n+                }\n+            }\n+        }\n+        if (Strings.hasText(realmName) == false && Strings.hasText(userName) == false && ids == null\n             && Strings.hasText(name) == false && ownedByAuthenticatedUser == false) {\n             validationException = addValidationError(\"One of [api key id, api key name, username, realm name] must be specified if \" +\n                 \"[owner] flag is false\", validationException);\n         }\n-        if (Strings.hasText(id) || Strings.hasText(name)) {\n+        if (ids != null || Strings.hasText(name)) {\n             if (Strings.hasText(realmName) || Strings.hasText(userName)) {\n                 validationException = addValidationError(\n                     \"username or realm name must not be specified when the api key id or api key name is specified\",", "originalCommit": "e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM2OTYxNw==", "url": "https://github.com/elastic/elasticsearch/pull/63224#discussion_r499369617", "bodyText": "Oh wow. I can't believe we need to have this. We definitely need to look at removing this class in a follow up PR.", "author": "tvernum", "createdAt": "2020-10-05T06:33:04Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/security/action/InvalidateApiKeyRequestTests.java", "diffHunk": "@@ -69,7 +110,15 @@ public void writeTo(StreamOutput out) throws IOException {\n                 super.writeTo(out);\n                 out.writeOptionalString(realm);\n                 out.writeOptionalString(user);\n-                out.writeOptionalString(apiKeyId);\n+                if (out.getVersion().onOrAfter(Version.V_7_10_0)) {\n+                    if (Strings.hasText(apiKeyId)) {\n+                        out.writeOptionalStringArray(new String[] { apiKeyId });\n+                    } else {\n+                        out.writeOptionalStringArray(null);\n+                    }\n+                } else {\n+                    out.writeOptionalString(apiKeyId);\n+                }", "originalCommit": "e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3MDg0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/63224#discussion_r499370847", "bodyText": "Did you consider putting key _1 in here, and checking previously_invalidated_api_keys: 1 ?\nIt seems like a useful test of the error handling for multiple ids.", "author": "tvernum", "createdAt": "2020-10-05T06:37:00Z", "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/api_key/10_basic.yml", "diffHunk": "@@ -214,10 +214,58 @@ teardown:\n       security.invalidate_api_key:\n         body:  >\n             {\n-              \"id\": \"${api_key_id}\"\n+              \"id\": \"${api_key_id_1}\"\n             }\n   - length: { \"invalidated_api_keys\" : 1 }\n-  - match: { \"invalidated_api_keys.0\" : \"${api_key_id}\" }\n+  - match: { \"invalidated_api_keys.0\" : \"${api_key_id_1}\" }\n+  - length: { \"previously_invalidated_api_keys\" : 0 }\n+  - match: { \"error_count\" : 0 }\n+\n+  - do:\n+      headers:\n+        Authorization: \"Basic YXBpX2tleV91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk\" # api_key_user\n+      security.create_api_key:\n+        body:  >\n+          {\n+            \"name\": \"my-api-key-2\",\n+            \"expiration\": \"1d\",\n+            \"role_descriptors\": {\n+            }\n+          }\n+  - match: { name: \"my-api-key-2\" }\n+  - is_true: id\n+  - is_true: api_key\n+  - is_true: expiration\n+  - set: { id: api_key_id_2 }\n+\n+  - do:\n+      headers:\n+        Authorization: \"Basic YXBpX2tleV91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk\" # api_key_user\n+      security.create_api_key:\n+        body:  >\n+          {\n+            \"name\": \"my-api-key-3\",\n+            \"expiration\": \"1d\",\n+            \"role_descriptors\": {\n+            }\n+          }\n+  - match: { name: \"my-api-key-3\" }\n+  - is_true: id\n+  - is_true: api_key\n+  - is_true: expiration\n+  - set: { id: api_key_id_3 }\n+\n+  - do:\n+      headers:\n+        Authorization: \"Basic YXBpX2tleV91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk\" # api_key_user\n+      security.invalidate_api_key:\n+        body:  >\n+          {\n+            \"ids\": [ \"${api_key_id_2}\", \"${api_key_id_3}\" ]", "originalCommit": "e9eec11b43b00c2ad0be8aca077cd639578a7f6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQwNTI0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/63224#discussion_r499405249", "bodyText": "Unfortunately no. The code filters out invalidated keys before calling indexInvalidate, i.e.\n\n  \n    \n      elasticsearch/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ApiKeyService.java\n    \n    \n         Line 765\n      in\n      e3dd0a8\n    \n    \n    \n    \n\n        \n          \n           findApiKeysForUserRealmApiKeyIdAndNameCombination(realmName, username, apiKeyName, apiKeyId, true, false, \n        \n    \n  \n\n\nNot sure if it is intended?", "author": "ywangd", "createdAt": "2020-10-05T07:54:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3MDg0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUwNzkwNA==", "url": "https://github.com/elastic/elasticsearch/pull/63224#discussion_r499507904", "bodyText": "I mean I will add key 1 here, but the response won't change.", "author": "ywangd", "createdAt": "2020-10-05T10:47:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3MDg0Nw=="}], "type": "inlineReview"}, {"oid": "2a2fc5c9a996c1c224a39a7844be7babdb372168", "url": "https://github.com/elastic/elasticsearch/commit/2a2fc5c9a996c1c224a39a7844be7babdb372168", "message": "Fix tests", "committedDate": "2020-10-05T07:49:39Z", "type": "commit"}, {"oid": "20a1d8aeec2464cee2becee82c4444b400067941", "url": "https://github.com/elastic/elasticsearch/commit/20a1d8aeec2464cee2becee82c4444b400067941", "message": "Apply suggestions from code review\n\nCo-authored-by: Tim Vernum <tim@adjective.org>", "committedDate": "2020-10-05T10:47:35Z", "type": "commit"}, {"oid": "9129e931858c6ba001cb7ad9009e6120f704f8e8", "url": "https://github.com/elastic/elasticsearch/commit/9129e931858c6ba001cb7ad9009e6120f704f8e8", "message": "feedback", "committedDate": "2020-10-05T10:52:16Z", "type": "commit"}, {"oid": "96c32832caa77f89e371ec56a89936d8caa528c3", "url": "https://github.com/elastic/elasticsearch/commit/96c32832caa77f89e371ec56a89936d8caa528c3", "message": "Fix test", "committedDate": "2020-10-05T11:45:19Z", "type": "commit"}]}