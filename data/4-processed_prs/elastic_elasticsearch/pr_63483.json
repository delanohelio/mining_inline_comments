{"pr_number": 63483, "pr_title": "SQL: enhance IN operator support for formatted date fields. Extend allowed conversions", "pr_createdAt": "2020-10-08T13:37:46Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63483", "timeline": [{"oid": "2b94f88639dbf142576a1f24af34156b033190b2", "url": "https://github.com/elastic/elasticsearch/commit/2b94f88639dbf142576a1f24af34156b033190b2", "message": "SQL: IN operator incorrectly handling specified date format (#58932)\n\nIn `IN` operator, the ExpressionTranslator<In> translates expression into terms query, but when the expression is date format, the terms query get unexpected results. This commit changes the terms query into bool should query when data type is `DATETIME`.", "committedDate": "2020-07-29T12:29:04Z", "type": "commit"}, {"oid": "17e00a8b8fa3b1c6ff827929be6214682a17ae06", "url": "https://github.com/elastic/elasticsearch/commit/17e00a8b8fa3b1c6ff827929be6214682a17ae06", "message": "Merge remote-tracking branch 'upstream/master' into fix/in_with_format_dates", "committedDate": "2020-10-06T16:00:43Z", "type": "commit"}, {"oid": "b58d385ad96dc16c706c97fc3679a9a9e4c3cc4f", "url": "https://github.com/elastic/elasticsearch/commit/b58d385ad96dc16c706c97fc3679a9a9e4c3cc4f", "message": "fix IN values conversion for fields. add tests\n\nIn case the IN operator compares against a field, its translation logic\ntakes the first type in the value set and converts subsequent values to\nit. This commit will change that to have the field type be considered as\nthe reference and have the values in the IN set be converted by it.\n\nThe IN operator is also changed to validate types by their\nconvertability, not compatibility.\n\nThese allow more confortable implicit conversions (of the type `WHERE\nip_field in ('127.0.0.1', ...)`).\n\nTests have been added to check the DATETIME handling of the IN operator.", "committedDate": "2020-10-08T10:27:19Z", "type": "commit"}, {"oid": "0f79ce8679737baa23f5f8d12f638b8d6b106534", "url": "https://github.com/elastic/elasticsearch/commit/0f79ce8679737baa23f5f8d12f638b8d6b106534", "message": "Fix order of types in conversion check\n\nSwap operands in convertability check for the IN operator.\nSmall simplification, join two loopings on same list.", "committedDate": "2020-10-08T13:23:36Z", "type": "commit"}, {"oid": "5be5b8caf96dda165ea4ff797396f579518fe4e9", "url": "https://github.com/elastic/elasticsearch/commit/5be5b8caf96dda165ea4ff797396f579518fe4e9", "message": "Merge branch 'master' into fix/in_with_format_dates", "committedDate": "2020-10-08T13:38:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTczMTI4NA==", "url": "https://github.com/elastic/elasticsearch/pull/63483#discussion_r501731284", "bodyText": "This test result - and logic allowing it - now corrected.", "author": "bpintea", "createdAt": "2020-10-08T13:43:24Z", "path": "x-pack/plugin/sql/qa/server/src/main/resources/filter.csv-spec", "diffHunk": "@@ -131,21 +131,22 @@ SELECT COUNT(*), TRUNCATE(emp_no, -2) t FROM test_emp WHERE 'aaabbb' RLIKE 'a{2,\n ;\n \n inWithCompatibleDateTypes\n-SELECT birth_date FROM test_emp WHERE birth_date IN ({d '1959-07-23'},CAST('1959-12-25T12:12:12' AS TIMESTAMP)) OR birth_date IS NULL ORDER BY birth_date;", "originalCommit": "5be5b8caf96dda165ea4ff797396f579518fe4e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTczMTM3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/63483#discussion_r501731379", "bodyText": "This test is now possible (and inline with what other SQL implementations do).", "author": "bpintea", "createdAt": "2020-10-08T13:43:31Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/analysis/analyzer/VerifierErrorMessagesTests.java", "diffHunk": "@@ -665,14 +665,10 @@ public void testHavingOnScalar() {\n                 error(\"SELECT int FROM test GROUP BY int HAVING 2 < ABS(int)\"));\n     }\n \n-    public void testInWithDifferentDataTypes() {\n-        assertEquals(\"1:8: 2nd argument of [1 IN (2, '3', 4)] must be [integer], found value ['3'] type [keyword]\",", "originalCommit": "5be5b8caf96dda165ea4ff797396f579518fe4e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a02719cb3d0433d380345bb5397c877057af0665", "url": "https://github.com/elastic/elasticsearch/commit/a02719cb3d0433d380345bb5397c877057af0665", "message": "Fix style\n\nRemove unused import.", "committedDate": "2020-10-08T14:18:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc5MjM2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/63483#discussion_r501792361", "bodyText": "@matriv, related to your suggestion, there are similarities with BinaryComparisons's times values code, but not sure if enough for a common extraction to make sense (despite the comment reference). But happy to further iterate.", "author": "bpintea", "createdAt": "2020-10-08T15:01:04Z", "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/planner/ExpressionTranslators.java", "diffHunk": "@@ -391,18 +391,32 @@ public static Query doTranslate(In in, TranslatorHandler handler) {\n             if (in.value() instanceof FieldAttribute) {\n                 // equality should always be against an exact match (which is important for strings)\n                 FieldAttribute fa = (FieldAttribute) in.value();\n-                List<Expression> list = in.list();\n+                DataType dt = fa.dataType();\n \n-                // TODO: this needs to be handled inside the optimizer\n-                list.removeIf(e -> DataTypes.isNull(e.dataType()));\n-                DataType dt = list.get(0).dataType();\n+                List<Expression> list = in.list();\n                 Set<Object> set = new LinkedHashSet<>(CollectionUtils.mapSize(list.size()));\n-\n-                for (Expression e : list) {\n-                    set.add(handler.convert(valueOf(e), dt));\n+                list.forEach(e -> {\n+                    // TODO: this needs to be handled inside the optimizer\n+                    if (DataTypes.isNull(e.dataType()) == false) {\n+                        set.add(handler.convert(valueOf(e), dt));\n+                    }\n+                });\n+\n+                if (dt == DATETIME) {\n+                    DateFormatter formatter = DateFormatter.forPattern(DATE_FORMAT);\n+\n+                    q = null;\n+                    for (Object o : set) {\n+                        assert o instanceof ZonedDateTime;\n+                        // see comment in Ranges#doTranslate() as to why formatting as String is required\n+                        String zdt = formatter.format((ZonedDateTime) o);", "originalCommit": "5be5b8caf96dda165ea4ff797396f579518fe4e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgwMTkyNw==", "url": "https://github.com/elastic/elasticsearch/pull/63483#discussion_r501801927", "bodyText": "Yeah, seems fine as is.", "author": "matriv", "createdAt": "2020-10-08T15:14:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc5MjM2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgwMDc0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/63483#discussion_r501800743", "bodyText": "minor, but better add a short msg.", "author": "matriv", "createdAt": "2020-10-08T15:12:24Z", "path": "x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/planner/ExpressionTranslators.java", "diffHunk": "@@ -391,18 +391,32 @@ public static Query doTranslate(In in, TranslatorHandler handler) {\n             if (in.value() instanceof FieldAttribute) {\n                 // equality should always be against an exact match (which is important for strings)\n                 FieldAttribute fa = (FieldAttribute) in.value();\n-                List<Expression> list = in.list();\n+                DataType dt = fa.dataType();\n \n-                // TODO: this needs to be handled inside the optimizer\n-                list.removeIf(e -> DataTypes.isNull(e.dataType()));\n-                DataType dt = list.get(0).dataType();\n+                List<Expression> list = in.list();\n                 Set<Object> set = new LinkedHashSet<>(CollectionUtils.mapSize(list.size()));\n-\n-                for (Expression e : list) {\n-                    set.add(handler.convert(valueOf(e), dt));\n+                list.forEach(e -> {\n+                    // TODO: this needs to be handled inside the optimizer\n+                    if (DataTypes.isNull(e.dataType()) == false) {\n+                        set.add(handler.convert(valueOf(e), dt));\n+                    }\n+                });\n+\n+                if (dt == DATETIME) {\n+                    DateFormatter formatter = DateFormatter.forPattern(DATE_FORMAT);\n+\n+                    q = null;\n+                    for (Object o : set) {\n+                        assert o instanceof ZonedDateTime;", "originalCommit": "a02719cb3d0433d380345bb5397c877057af0665", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMjUyNA==", "url": "https://github.com/elastic/elasticsearch/pull/63483#discussion_r502522524", "bodyText": "Sure, added.", "author": "bpintea", "createdAt": "2020-10-09T15:50:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgwMDc0Mw=="}], "type": "inlineReview"}, {"oid": "a6b8a9bca76b90e831893d224d82743ec6690698", "url": "https://github.com/elastic/elasticsearch/commit/a6b8a9bca76b90e831893d224d82743ec6690698", "message": "Address review comments\n\nAdd assert message", "committedDate": "2020-10-09T15:48:12Z", "type": "commit"}, {"oid": "9b3e9c51c59d5ca0032da36e3a5ba9182a24df6f", "url": "https://github.com/elastic/elasticsearch/commit/9b3e9c51c59d5ca0032da36e3a5ba9182a24df6f", "message": "Merge branch 'master' into fix/in_with_format_dates", "committedDate": "2020-10-09T15:49:53Z", "type": "commit"}, {"oid": "208ef712b2f992b0aa45eef082eca0dba16e2263", "url": "https://github.com/elastic/elasticsearch/commit/208ef712b2f992b0aa45eef082eca0dba16e2263", "message": "Merge remote-tracking branch 'upstream/master' into fix/in_with_format_dates", "committedDate": "2020-10-14T11:04:27Z", "type": "commit"}, {"oid": "8be45015d3237f5a9d65a3cf71177726cac0d399", "url": "https://github.com/elastic/elasticsearch/commit/8be45015d3237f5a9d65a3cf71177726cac0d399", "message": "Add IN test with TIME values\n\nAdd CSV test to test IN against a TIME convered value.", "committedDate": "2020-10-14T11:08:43Z", "type": "commit"}]}