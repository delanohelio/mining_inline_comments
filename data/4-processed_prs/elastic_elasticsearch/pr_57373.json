{"pr_number": 57373, "pr_title": "IndexFieldData should hold the ValuesSourceType", "pr_createdAt": "2020-05-29T17:09:23Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57373", "timeline": [{"oid": "2eb45c23501554f9313f60596c739f7c06eeb468", "url": "https://github.com/elastic/elasticsearch/commit/2eb45c23501554f9313f60596c739f7c06eeb468", "message": "plumb VST through to IndexFieldData", "committedDate": "2020-05-14T18:52:07Z", "type": "commit"}, {"oid": "cc5a8fcd02f55bc8cb197f02fc10dc679726f38f", "url": "https://github.com/elastic/elasticsearch/commit/cc5a8fcd02f55bc8cb197f02fc10dc679726f38f", "message": "Streamline getting the VST for fields", "committedDate": "2020-05-27T17:30:37Z", "type": "commit"}, {"oid": "65294a70a083d658c1723c64e158753e846e46a7", "url": "https://github.com/elastic/elasticsearch/commit/65294a70a083d658c1723c64e158753e846e46a7", "message": "get rid of getValuesSourceType", "committedDate": "2020-05-29T15:31:32Z", "type": "commit"}, {"oid": "c59d7173f7961df26042801f43d0ea3ffb2fdea7", "url": "https://github.com/elastic/elasticsearch/commit/c59d7173f7961df26042801f43d0ea3ffb2fdea7", "message": "plumb VST through to IndexFieldData", "committedDate": "2020-05-29T16:15:09Z", "type": "commit"}, {"oid": "b69cc7510b187cad615fb1afc5b3371f14188432", "url": "https://github.com/elastic/elasticsearch/commit/b69cc7510b187cad615fb1afc5b3371f14188432", "message": "Streamline getting the VST for fields", "committedDate": "2020-05-29T16:24:37Z", "type": "commit"}, {"oid": "8d75fedd925ad70a08b3cb2e90ac57b9883dc825", "url": "https://github.com/elastic/elasticsearch/commit/8d75fedd925ad70a08b3cb2e90ac57b9883dc825", "message": "get rid of getValuesSourceType", "committedDate": "2020-05-29T16:34:26Z", "type": "commit"}, {"oid": "19e739e637065a6eb9cf512bd1176d545b03e88a", "url": "https://github.com/elastic/elasticsearch/commit/19e739e637065a6eb9cf512bd1176d545b03e88a", "message": "Merge branch 'vs-refactor-put-vst-on-index-field-data' of github.com:not-napoleon/elasticsearch into vs-refactor-put-vst-on-index-field-data\n\n Conflicts:\n\tserver/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java\n\tserver/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramAggregatorFactory.java\n\tserver/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramAggregatorFactory.java\n\tserver/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorFactory.java", "committedDate": "2020-05-29T16:42:53Z", "type": "commit"}, {"oid": "e03d9edb85d0556c816eaf161e09c99f5b22b41e", "url": "https://github.com/elastic/elasticsearch/commit/e03d9edb85d0556c816eaf161e09c99f5b22b41e", "message": "Allow for VSAB aggregations that don't use the registry", "committedDate": "2020-06-01T13:15:09Z", "type": "commit"}, {"oid": "696481af7ffbd087419401da0e50ba273377ca89", "url": "https://github.com/elastic/elasticsearch/commit/696481af7ffbd087419401da0e50ba273377ca89", "message": "Merge branch 'master' into vs-refactor-put-vst-on-index-field-data\n\n Conflicts:\n\tmodules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java\n\tserver/src/main/java/org/elasticsearch/index/fielddata/IndexNumericFieldData.java\n\tserver/src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericIndexFieldData.java", "committedDate": "2020-06-01T13:39:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk5MTIxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/57373#discussion_r432991211", "bodyText": "Interesting thing for later maybe: is it useful to floatingPoint to be a feature of the VauesSourceType?", "author": "nik9000", "createdAt": "2020-05-31T22:32:31Z", "path": "server/src/main/java/org/elasticsearch/index/fielddata/IndexNumericFieldData.java", "diffHunk": "@@ -19,30 +19,37 @@\n \n package org.elasticsearch.index.fielddata;\n \n+import org.elasticsearch.search.aggregations.support.CoreValuesSourceType;\n+import org.elasticsearch.search.aggregations.support.ValuesSourceType;\n+\n public interface IndexNumericFieldData extends IndexFieldData<LeafNumericFieldData> {\n \n     enum NumericType {\n-        BOOLEAN(false),\n-        BYTE(false),\n-        SHORT(false),\n-        INT(false),\n-        LONG(false),\n-        DATE(false),\n-        DATE_NANOSECONDS(false),\n-        HALF_FLOAT(true),\n-        FLOAT(true),\n-        DOUBLE(true);\n+        BOOLEAN(false, CoreValuesSourceType.BOOLEAN),\n+        BYTE(false, CoreValuesSourceType.NUMERIC),\n+        SHORT(false, CoreValuesSourceType.NUMERIC),\n+        INT(false, CoreValuesSourceType.NUMERIC),\n+        LONG(false, CoreValuesSourceType.NUMERIC),\n+        DATE(false, CoreValuesSourceType.DATE),\n+        DATE_NANOSECONDS(false, CoreValuesSourceType.DATE),\n+        HALF_FLOAT(true, CoreValuesSourceType.NUMERIC),\n+        FLOAT(true, CoreValuesSourceType.NUMERIC),\n+        DOUBLE(true, CoreValuesSourceType.NUMERIC);", "originalCommit": "19e739e637065a6eb9cf512bd1176d545b03e88a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk5MTMwNw==", "url": "https://github.com/elastic/elasticsearch/pull/57373#discussion_r432991307", "bodyText": "Scratch that. It is already on ValuesSource which is perfect.", "author": "nik9000", "createdAt": "2020-05-31T22:33:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk5MTIxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzNjAzNA==", "url": "https://github.com/elastic/elasticsearch/pull/57373#discussion_r433336034", "bodyText": "Left over?", "author": "nik9000", "createdAt": "2020-06-01T16:07:00Z", "path": "test/framework/src/main/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java", "diffHunk": "@@ -715,7 +715,8 @@ public void testSupportedFieldTypes() throws IOException {\n                     IndexSearcher indexSearcher = newIndexSearcher(indexReader);\n                     AggregationBuilder aggregationBuilder = createAggBuilderForTypeTest(fieldType, fieldName);\n \n-                    ValuesSourceType vst = fieldType.getValuesSourceType();\n+                    //ValuesSourceType vst = fieldType.getValuesSourceType();", "originalCommit": "696481af7ffbd087419401da0e50ba273377ca89", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzNzIxNA==", "url": "https://github.com/elastic/elasticsearch/pull/57373#discussion_r433337214", "bodyText": "Do we still need this change?", "author": "nik9000", "createdAt": "2020-06-01T16:09:11Z", "path": "test/framework/src/main/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java", "diffHunk": "@@ -159,6 +159,7 @@\n         CompletionFieldMapper.CONTENT_TYPE, // TODO support completion\n         FieldAliasMapper.CONTENT_TYPE // TODO support alias\n     );\n+    private QueryShardContext queryShardContext;", "originalCommit": "696481af7ffbd087419401da0e50ba273377ca89", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzODcxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/57373#discussion_r433338719", "bodyText": "Something about this method smells funky to me. I can see why we have it though. I'd sort of hoped for a cleaner way to get this, but I understand. Might be worth poking at in a follow up.", "author": "nik9000", "createdAt": "2020-06-01T16:11:59Z", "path": "test/framework/src/main/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java", "diffHunk": "@@ -739,6 +740,11 @@ public void testSupportedFieldTypes() throws IOException {\n         }\n     }\n \n+    private ValuesSourceType fieldToVST(MappedFieldType fieldType) {\n+        return fieldType.fielddataBuilder(\"\")\n+                                .build(createIndexSettings(), fieldType, null, null, null).getValuesSourceType();\n+    }", "originalCommit": "696481af7ffbd087419401da0e50ba273377ca89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM0NzcxMw==", "url": "https://github.com/elastic/elasticsearch/pull/57373#discussion_r433347713", "bodyText": "Yeah, I don't like this method either.  Personally, I think the smell is from those nulls.  Seems like something we shouldn't be passing nulls into, since the resulting object will be kind of nonsense.  But we just need to get the VST off of it here, so it's okay-ish.  Honestly, I was shocked that passing in nulls didn't throw, but here we are.\nI spent almost two days trying to come up with a better idea, but didn't get there.  What seems right to me is to have one instance of the mock QueryShardContext for the entirety of a test run, then we can just get the IndexFieldData via the QueryShardContext like we do in production.  But when I tried to do that, I ran into all sorts of trouble.  It ends up needing a lot of mocks to be reused, and there's a lot of places in the tests where we implicitly assume we're getting fresh mocks.  I think it's fixable, but I didn't want to block this change on cleaning up our tests.  Especially since we've been talking about refactoring the tests anyway.", "author": "not-napoleon", "createdAt": "2020-06-01T16:28:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzODcxOQ=="}], "type": "inlineReview"}, {"oid": "13939ee05ff81a6bb409ae55726c36e60ca1d1f8", "url": "https://github.com/elastic/elasticsearch/commit/13939ee05ff81a6bb409ae55726c36e60ca1d1f8", "message": "Remove some dead code", "committedDate": "2020-06-01T16:32:27Z", "type": "commit"}, {"oid": "5874903c4d78913ee6cb7d2236505abf2a004ca3", "url": "https://github.com/elastic/elasticsearch/commit/5874903c4d78913ee6cb7d2236505abf2a004ca3", "message": "Checkstyle", "committedDate": "2020-06-01T16:53:31Z", "type": "commit"}]}