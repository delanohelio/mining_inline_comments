{"pr_number": 65492, "pr_title": "Docs: add known issue 65488 - SQL ignoring non-eq", "pr_createdAt": "2020-11-25T11:48:31Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65492", "timeline": [{"oid": "0072b5327d54519e529fb0802ea771183d14fc93", "url": "https://github.com/elastic/elasticsearch/commit/0072b5327d54519e529fb0802ea771183d14fc93", "message": "Docs: add known issue 65488 - SQL ignoring non-eq\n\nAdd description of the #65488 known issue in release notes.", "committedDate": "2020-11-25T11:43:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQzOTEzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/65492#discussion_r530439139", "bodyText": "Adds an explicit anchor to avoid auto-gen ones.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [discrete]\n          \n          \n            \n            === Known issues\n          \n          \n            \n            [[known-issues-7.10.0]]\n          \n          \n            \n            [discrete]\n          \n          \n            \n            === Known issues", "author": "jrodewig", "createdAt": "2020-11-25T15:02:39Z", "path": "docs/reference/release-notes/7.10.asciidoc", "diffHunk": "@@ -3,6 +3,16 @@\n \n Also see <<breaking-changes-7.10,Breaking changes in 7.10>>.\n \n+[discrete]\n+=== Known issues", "originalCommit": "0072b5327d54519e529fb0802ea771183d14fc93", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ1NDMwOA==", "url": "https://github.com/elastic/elasticsearch/pull/65492#discussion_r530454308", "bodyText": "The inequality and not-equal language confused me and seems to contradict the SQL docs. I also think later could be misinterpreted as to the right of AND.\nI tried to clarify and add an example:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * SQL: in case the WHERE clause of an SQL query contains at least two\n          \n          \n            \n            comparisons in a conjunction (AND) of which one is an inequality and the other\n          \n          \n            \n            is a not-equals, the later can get ignored. The workaround is to substitute the\n          \n          \n            \n            non-equals with a `NOT IN` operator.\n          \n          \n            \n            The defect has been fixed in {es} 7.10.1, the best resolution is to upgrade to\n          \n          \n            \n            that or a later version. More details can be found in issue: {es-issue}65488[#65488].\n          \n          \n            \n            * SQL: If a `WHERE` clause contains a comparison (`<=`, `<`, `>=`, `>`)\n          \n          \n            \n            condition and an inequality (`!=`, `<>`) condition joined by `AND`, the SQL\n          \n          \n            \n            query ignores the inequality condition. For example, the following query ignores\n          \n          \n            \n            the `foo != 20` condition:\n          \n          \n            \n            +\n          \n          \n            \n            [source,sql]\n          \n          \n            \n            ----\n          \n          \n            \n            SELECT my-field\n          \n          \n            \n            FROM my-index-000001\n          \n          \n            \n            WHERE foo > 1 AND foo != 20\n          \n          \n            \n            ----\n          \n          \n            \n            +\n          \n          \n            \n            We have fixed this issue in {es} 7.10.1 and later versions. For more details,\n          \n          \n            \n            see {es-issue}65488[#65488].", "author": "jrodewig", "createdAt": "2020-11-25T15:23:44Z", "path": "docs/reference/release-notes/7.10.asciidoc", "diffHunk": "@@ -3,6 +3,16 @@\n \n Also see <<breaking-changes-7.10,Breaking changes in 7.10>>.\n \n+[discrete]\n+=== Known issues\n+\n+* SQL: in case the WHERE clause of an SQL query contains at least two\n+comparisons in a conjunction (AND) of which one is an inequality and the other\n+is a not-equals, the later can get ignored. The workaround is to substitute the\n+non-equals with a `NOT IN` operator.\n+The defect has been fixed in {es} 7.10.1, the best resolution is to upgrade to\n+that or a later version. More details can be found in issue: {es-issue}65488[#65488].", "originalCommit": "0072b5327d54519e529fb0802ea771183d14fc93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUxNjg3NA==", "url": "https://github.com/elastic/elasticsearch/pull/65492#discussion_r530516874", "bodyText": "Thanks for the noting the misalignment in therms, @jrodewig.\nI've rephrased the paragraph to better specify the occurring conditions and add back the workaround - which I find relevant and inline with other known issue entries.\nI've also left the example out, since we'd then need a corrected example then too and the entry might get large. The GH issue gives examples for both (and links to the resolution too, for whoever would like even more details).\nPlease have a look and feel free to suggest any further improvements.", "author": "bpintea", "createdAt": "2020-11-25T16:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ1NDMwOA=="}], "type": "inlineReview"}, {"oid": "1911bc543f071e0f4cebf7bf3fc8c0fb4fd68076", "url": "https://github.com/elastic/elasticsearch/commit/1911bc543f071e0f4cebf7bf3fc8c0fb4fd68076", "message": "Update docs/reference/release-notes/7.10.asciidoc\n\nCo-authored-by: James Rodewig <40268737+jrodewig@users.noreply.github.com>", "committedDate": "2020-11-25T15:49:06Z", "type": "commit"}, {"oid": "aa426fcf87328898fa0bb79762adeacea8f1305c", "url": "https://github.com/elastic/elasticsearch/commit/aa426fcf87328898fa0bb79762adeacea8f1305c", "message": "Add the known issues to all affected releases\n\nAdd the known issue under following releases\u0218\n- 7.7.0 & .1\n- 7.8.0 & .1\n- 7.9.0 & .1 & .2 & .3\n- 7.10.0", "committedDate": "2020-11-25T16:43:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUxODMzOA==", "url": "https://github.com/elastic/elasticsearch/pull/65492#discussion_r530518338", "bodyText": "Small nit. I'd apply this across all the changes.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * SQL: If a WHERE clause contains at least two relational operators joined by\n          \n          \n            \n            * SQL: If a `WHERE` clause contains at least two relational operators joined by", "author": "jrodewig", "createdAt": "2020-11-25T16:54:53Z", "path": "docs/reference/release-notes/7.10.asciidoc", "diffHunk": "@@ -3,6 +3,19 @@\n \n Also see <<breaking-changes-7.10,Breaking changes in 7.10>>.\n \n+[[known-issues-7.10.0]]\n+[discrete]\n+=== Known issues\n+\n+* SQL: If a WHERE clause contains at least two relational operators joined by", "originalCommit": "aa426fcf87328898fa0bb79762adeacea8f1305c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUyNTY5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/65492#discussion_r530525697", "bodyText": "Applied, thanks!", "author": "bpintea", "createdAt": "2020-11-25T17:06:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDUxODMzOA=="}], "type": "inlineReview"}, {"oid": "1fea3bdb2fae661f26b20f71d602f6c84a40c056", "url": "https://github.com/elastic/elasticsearch/commit/1fea3bdb2fae661f26b20f71d602f6c84a40c056", "message": "Apply review suggestions\n\ns/WHERE/`WHERE`", "committedDate": "2020-11-25T17:04:07Z", "type": "commit"}, {"oid": "d50d3e871d7aa5f58ca9a68a57e6f40f42bba845", "url": "https://github.com/elastic/elasticsearch/commit/d50d3e871d7aa5f58ca9a68a57e6f40f42bba845", "message": "Fix duplication of known issues-section\n\n7.9.0 release had a \"known issues\" section already, place the SQL issue\nunder that one instead of opening a new one.", "committedDate": "2020-11-25T17:50:32Z", "type": "commit"}]}