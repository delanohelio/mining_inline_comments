{"pr_number": 57629, "pr_title": "Add default composable templates for new indexing strategy", "pr_createdAt": "2020-06-03T21:59:46Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57629", "timeline": [{"oid": "9f3af21d17bbcae7216e9d02789734f48b20283d", "url": "https://github.com/elastic/elasticsearch/commit/9f3af21d17bbcae7216e9d02789734f48b20283d", "message": "Add default composable templates for new indexing strategy\n\nThis commit adds the component and composable templates, as well as ILM policies, for the new\ndefault indexing strategy. It installs:\n\n- logs-default-mappings (component)\n- logs-default-settings (component)\n- logs-default-policy (ilm policy)\n- logs-default-template (composable template)\n- metrics-default-mappings (component)\n- metrics-default-settings (component)\n- metrics-default-policy (ilm policy)\n- metrics-default-template (composable template)\n\nThese templates and policies are managed by a new x-pack module, `stack`, and can be disabled by\nsetting `stack.templates.enabled` to `false`.\n\nThese ensure that patterns for the `logs-*-*` and `metrics-*-*` indices are set up to create data\nstreams with the proper mappings and settings.\n\nThis also makes changes to the `IndexTemplateRegistry` to support installing component and\ncomposable templates (previously it supported only legacy templates).\n\nResolves #56709", "committedDate": "2020-06-03T21:52:55Z", "type": "commit"}, {"oid": "87b836fd3d229e8a087c602f6e7879cb8d990909", "url": "https://github.com/elastic/elasticsearch/commit/87b836fd3d229e8a087c602f6e7879cb8d990909", "message": "Merge branch 'master' into itv2-bundle-templates", "committedDate": "2020-06-03T22:28:09Z", "type": "commit"}, {"oid": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "url": "https://github.com/elastic/elasticsearch/commit/099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "message": "Add logs and metrics policies to list of expected x-pack policies", "committedDate": "2020-06-03T22:43:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxNzY1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435017659", "bodyText": "Could we add some metadata here? It would be nice to indicate in here that these are \"stack\" templates. The other thing that would be nice is to have the version of the stack that loaded it in here.\nWhat is the behaviour if the ES is upgraded, will these be overwritten?", "author": "ruflin", "createdAt": "2020-06-04T06:23:25Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwMzg2OA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435403868", "bodyText": "What is the behaviour if the ES is upgraded, will these be overwritten?\n\nES only overwrites these if we introduce a new (higher) version in the stack module\n\nCould we add some metadata here?\nThe other thing that would be nice is to have the version of the stack that loaded it in here.\n\nSure, this is pretty easy to do, we can add whatever metadata we want, I just copied these from your templates, in there anything in particular other than the version you want to see? (I did add metadata to the templates themselves with version & description)", "author": "dakrone", "createdAt": "2020-06-04T16:50:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxNzY1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxNzgyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435017829", "bodyText": "We just renamed these to dataset.*: elastic/package-registry#491", "author": "ruflin", "createdAt": "2020-06-04T06:23:53Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {\n+      },\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"match_mapping_type\": \"string\"\n+          }\n+        }\n+      ],\n+      \"date_detection\": false,\n+      \"properties\": {\n+        \"@timestamp\": {\n+          \"type\": \"date\"\n+        },\n+        \"stream\": {", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxNzg3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435017875", "bodyText": "This is now name.", "author": "ruflin", "createdAt": "2020-06-04T06:24:01Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {\n+      },\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"match_mapping_type\": \"string\"\n+          }\n+        }\n+      ],\n+      \"date_detection\": false,\n+      \"properties\": {\n+        \"@timestamp\": {\n+          \"type\": \"date\"\n+        },\n+        \"stream\": {\n+          \"properties\": {\n+            \"type\": {\n+              \"type\": \"constant_keyword\",\n+              \"value\": \"logs\"\n+            },\n+            \"dataset\": {", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxNzk4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435017981", "bodyText": "I'm torn if we should add these or leave them out.", "author": "ruflin", "createdAt": "2020-06-04T06:24:16Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {\n+      },\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"match_mapping_type\": \"string\"\n+          }\n+        }\n+      ],\n+      \"date_detection\": false,\n+      \"properties\": {\n+        \"@timestamp\": {\n+          \"type\": \"date\"\n+        },\n+        \"stream\": {\n+          \"properties\": {\n+            \"type\": {\n+              \"type\": \"constant_keyword\",\n+              \"value\": \"logs\"\n+            },\n+            \"dataset\": {\n+              \"type\": \"constant_keyword\"\n+            },\n+            \"namespace\": {\n+              \"type\": \"constant_keyword\"\n+            }\n+          }\n+        },\n+        \"agent\": {", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwNDk3OA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435404978", "bodyText": "As I mentioned, these were copied, so I'll leave it up to you whether they should be included or not", "author": "dakrone", "createdAt": "2020-06-04T16:51:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxNzk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyODczMw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435428733", "bodyText": "@ruflin I would leave it. I think it ecourages good practice to have it.", "author": "ph", "createdAt": "2020-06-04T17:31:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxNzk4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxODIxNg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435018216", "bodyText": "As ECS version is only max about 10 chars long, I wonder if there is a benefit of setting this much lower?", "author": "ruflin", "createdAt": "2020-06-04T06:24:50Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {\n+      },\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"match_mapping_type\": \"string\"\n+          }\n+        }\n+      ],\n+      \"date_detection\": false,\n+      \"properties\": {\n+        \"@timestamp\": {\n+          \"type\": \"date\"\n+        },\n+        \"stream\": {\n+          \"properties\": {\n+            \"type\": {\n+              \"type\": \"constant_keyword\",\n+              \"value\": \"logs\"\n+            },\n+            \"dataset\": {\n+              \"type\": \"constant_keyword\"\n+            },\n+            \"namespace\": {\n+              \"type\": \"constant_keyword\"\n+            }\n+          }\n+        },\n+        \"agent\": {\n+          \"properties\": {\n+            \"hostname\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"name\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"id\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"ephemeral_id\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"type\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"version\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            }\n+          }\n+        },\n+        \"ecs\": {\n+          \"properties\": {\n+            \"version\": {\n+              \"ignore_above\": 1024,", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwNTQxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435405411", "bodyText": "There isn't going to be a benefit really? This is only there to ignore ones where a value was mis-indexed", "author": "dakrone", "createdAt": "2020-06-04T16:52:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxODIxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxODYyNw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435018627", "bodyText": "For host.* I was thinking if we should only keep host.ip. This ensures that host is an object and it is one of the fields which is not a keyword. The other ones should be detected automatically.", "author": "ruflin", "createdAt": "2020-06-04T06:25:54Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {\n+      },\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"match_mapping_type\": \"string\"\n+          }\n+        }\n+      ],\n+      \"date_detection\": false,\n+      \"properties\": {\n+        \"@timestamp\": {\n+          \"type\": \"date\"\n+        },\n+        \"stream\": {\n+          \"properties\": {\n+            \"type\": {\n+              \"type\": \"constant_keyword\",\n+              \"value\": \"logs\"\n+            },\n+            \"dataset\": {\n+              \"type\": \"constant_keyword\"\n+            },\n+            \"namespace\": {\n+              \"type\": \"constant_keyword\"\n+            }\n+          }\n+        },\n+        \"agent\": {\n+          \"properties\": {\n+            \"hostname\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"name\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"id\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"ephemeral_id\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"type\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"version\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            }\n+          }\n+        },\n+        \"ecs\": {\n+          \"properties\": {\n+            \"version\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            }\n+          }\n+        },\n+        \"host\": {\n+          \"properties\": {\n+            \"hostname\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"os\": {\n+              \"properties\": {\n+                \"build\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"kernel\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"codename\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"name\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"family\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"version\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"platform\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"full\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                }\n+              }\n+            },\n+            \"ip\": {", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwNTg2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435405863", "bodyText": "Okay, I will remove the non-ip fields under host", "author": "dakrone", "createdAt": "2020-06-04T16:53:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxODYyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxODc4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435018782", "bodyText": "We have two _meta fields?", "author": "ruflin", "createdAt": "2020-06-04T06:26:18Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {\n+      },\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"match_mapping_type\": \"string\"\n+          }\n+        }\n+      ],\n+      \"date_detection\": false,\n+      \"properties\": {\n+        \"@timestamp\": {\n+          \"type\": \"date\"\n+        },\n+        \"stream\": {\n+          \"properties\": {\n+            \"type\": {\n+              \"type\": \"constant_keyword\",\n+              \"value\": \"logs\"\n+            },\n+            \"dataset\": {\n+              \"type\": \"constant_keyword\"\n+            },\n+            \"namespace\": {\n+              \"type\": \"constant_keyword\"\n+            }\n+          }\n+        },\n+        \"agent\": {\n+          \"properties\": {\n+            \"hostname\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"name\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"id\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"ephemeral_id\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"type\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"version\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            }\n+          }\n+        },\n+        \"ecs\": {\n+          \"properties\": {\n+            \"version\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            }\n+          }\n+        },\n+        \"host\": {\n+          \"properties\": {\n+            \"hostname\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"os\": {\n+              \"properties\": {\n+                \"build\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"kernel\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"codename\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"name\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"family\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"version\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"platform\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"full\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                }\n+              }\n+            },\n+            \"ip\": {\n+              \"type\": \"ip\"\n+            },\n+            \"containerized\": {\n+              \"type\": \"boolean\"\n+            },\n+            \"name\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"id\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"type\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"mac\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"architecture\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            }\n+          }\n+        },\n+        \"message\": {\n+          \"type\": \"text\"\n+        }\n+      }\n+    }\n+  },\n+  \"_meta\": {", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwNjQxNw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435406417", "bodyText": "This is _meta on the template itself, not the mapping (which is the other _meta). That way when someone retrieves the template they can see where it originated from", "author": "dakrone", "createdAt": "2020-06-04T16:54:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxODc4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxOTA5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435019093", "bodyText": "Should we have this as true? Could this cause problems if a date is a false positive?", "author": "ruflin", "createdAt": "2020-06-04T06:27:14Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {\n+      },\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"match_mapping_type\": \"string\"\n+          }\n+        }\n+      ],\n+      \"date_detection\": false,", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMzYxNg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435033616", "bodyText": "I suspect that Lee's motivation is that a value that looks like a date could make dynamic mappings create a date field, which would then fail indexing any document that has a non-date value for this field.", "author": "jpountz", "createdAt": "2020-06-04T07:01:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxOTA5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzNDMwNw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435034307", "bodyText": "should we disable numeric_detection too for the same reason?", "author": "jpountz", "createdAt": "2020-06-04T07:02:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxOTA5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExMTEwNA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435111104", "bodyText": "Can this be enabled / disabled per object or only globally? In general +1 on having it in to indicate if it is true or false. I'm leaning to false. @simitt might have an opinion here.", "author": "ruflin", "createdAt": "2020-06-04T09:17:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxOTA5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwNzk1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435407952", "bodyText": "I agree with @jpountz on leaving this as false.\n@ruflin it looks like configuration is global for this.\nAs far as numeric_detection, I could go either way, does anyone have a strong feeling on it?", "author": "dakrone", "createdAt": "2020-06-04T16:56:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxOTA5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxOTQwNw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435019407", "bodyText": "There haven't been any problem with 1024 historically so I'm good with keeping it. But I wonder if there is a value for ES which would preferrable?", "author": "ruflin", "createdAt": "2020-06-04T06:28:06Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {\n+      },\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwODM5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435408392", "bodyText": "1024 is a good default I think", "author": "dakrone", "createdAt": "2020-06-04T16:57:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxOTQwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxOTgzMA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435019830", "bodyText": "We should discuss more what our default ILM policy should be moving forward in the context of the new indexing strategy. @jpountz", "author": "ruflin", "createdAt": "2020-06-04T06:29:10Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-policy.json", "diffHunk": "@@ -0,0 +1,13 @@\n+{", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMDk4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435030987", "bodyText": "Happy to. A sync conversation might help so that we can get aligned on the constraints.", "author": "jpountz", "createdAt": "2020-06-04T06:55:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxOTgzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDA1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435020055", "bodyText": "Any recommendations here?", "author": "ruflin", "createdAt": "2020-06-04T06:29:44Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-settings.json", "diffHunk": "@@ -0,0 +1,21 @@\n+{\n+  \"template\": {\n+    \"settings\": {\n+      \"index\": {\n+        \"lifecycle\": {\n+          \"name\": \"logs-default-policy\"\n+        },\n+        \"codec\": \"best_compression\",", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwOTE2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435409165", "bodyText": "This is a throughput-storage tradeoff, so the question is just which one we want to default to. This is what the current templates were, but with our other data tiering plans (searchable snapshots), maybe it doesn't make sense any more, I'll add it to the \"to discuss\" pile", "author": "dakrone", "createdAt": "2020-06-04T16:58:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDA1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMDg0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r441730849", "bodyText": "One thing that crossed my mind recently is whether the templates are the right way to configure this default, or whether this would be a node-level default, e.g. we could default to best_compression on the warm nodes.", "author": "jpountz", "createdAt": "2020-06-17T18:03:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDA1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDEzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435020139", "bodyText": "Also looking for recommendations here from the ES team on what to pick.", "author": "ruflin", "createdAt": "2020-06-04T06:29:56Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-settings.json", "diffHunk": "@@ -0,0 +1,21 @@\n+{\n+  \"template\": {\n+    \"settings\": {\n+      \"index\": {\n+        \"lifecycle\": {\n+          \"name\": \"logs-default-policy\"\n+        },\n+        \"codec\": \"best_compression\",\n+        \"refresh_interval\": \"5s\",", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyODk0NA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435028944", "bodyText": "I think we should stick to the default refresh interval, which refreshes either every 1s for actively searched shards, and otherwise refreshes on the next search request. This had been introduced for logs/metrics use-cases and helps speed up indexing on data that is not actively searched.", "author": "jpountz", "createdAt": "2020-06-04T06:51:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDEzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDczNw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435020737", "bodyText": "We need to discuss, if dynamic mapping in here should be true or false. Historically I would have said true but seeing that in the future we will also have the possibility to query some fields which are not indexed, I wonder if false would be better here?", "author": "ruflin", "createdAt": "2020-06-04T06:31:27Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {\n+      },\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"match_mapping_type\": \"string\"\n+          }\n+        }\n+      ],\n+      \"date_detection\": false,\n+      \"properties\": {", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMTg2OA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435031868", "bodyText": "I'd be careful here, we'll indeed be able to query fields that are not indexed, but the current plan still requires that fields be mapped.", "author": "jpountz", "createdAt": "2020-06-04T06:57:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDczNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxMTY3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435411671", "bodyText": "I think we should leave dynamic mapping enabled, especially since we're dropping other fields (things like host.hostname) that a user may still want to query", "author": "dakrone", "createdAt": "2020-06-04T17:02:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDczNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMDc5OA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435020798", "bodyText": "Nice!", "author": "ruflin", "createdAt": "2020-06-04T06:31:39Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {\n+      },\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"match_mapping_type\": \"string\"\n+          }\n+        }\n+      ],\n+      \"date_detection\": false,\n+      \"properties\": {\n+        \"@timestamp\": {\n+          \"type\": \"date\"\n+        },\n+        \"stream\": {\n+          \"properties\": {\n+            \"type\": {\n+              \"type\": \"constant_keyword\",\n+              \"value\": \"logs\"\n+            },\n+            \"dataset\": {\n+              \"type\": \"constant_keyword\"\n+            },\n+            \"namespace\": {\n+              \"type\": \"constant_keyword\"\n+            }\n+          }\n+        },\n+        \"agent\": {\n+          \"properties\": {\n+            \"hostname\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"name\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"id\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"ephemeral_id\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"type\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"version\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            }\n+          }\n+        },\n+        \"ecs\": {\n+          \"properties\": {\n+            \"version\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            }\n+          }\n+        },\n+        \"host\": {\n+          \"properties\": {\n+            \"hostname\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"os\": {\n+              \"properties\": {\n+                \"build\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"kernel\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"codename\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"name\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"family\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"version\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"platform\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                },\n+                \"full\": {\n+                  \"ignore_above\": 1024,\n+                  \"type\": \"keyword\"\n+                }\n+              }\n+            },\n+            \"ip\": {\n+              \"type\": \"ip\"\n+            },\n+            \"containerized\": {\n+              \"type\": \"boolean\"\n+            },\n+            \"name\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"id\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"type\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"mac\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"architecture\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            }\n+          }\n+        },\n+        \"message\": {\n+          \"type\": \"text\"\n+        }\n+      }\n+    }\n+  },\n+  \"_meta\": {\n+    \"description\": \"default mappings for the logs index template installed by x-pack\"\n+  },\n+  \"version\": ${xpack.stack.template.version}", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMTE4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435021182", "bodyText": "Do we still need this? What is the default if we don't set it?", "author": "ruflin", "createdAt": "2020-06-04T06:32:39Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-settings.json", "diffHunk": "@@ -0,0 +1,21 @@\n+{\n+  \"template\": {\n+    \"settings\": {\n+      \"index\": {\n+        \"lifecycle\": {\n+          \"name\": \"logs-default-policy\"\n+        },\n+        \"codec\": \"best_compression\",\n+        \"refresh_interval\": \"5s\",\n+        \"query\": {\n+          \"default_field\": [\"message\"]\n+        },\n+        \"number_of_routing_shards\": \"30\"", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyNDUyNA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435124524", "bodyText": "Number of routing shards has been removed in the default Beats templates. We have added it set only for ES 6.x. See 6.8 docs for Split Index.", "author": "urso", "createdAt": "2020-06-04T09:39:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMTE4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxMTc5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435411792", "bodyText": "I'll remove it.", "author": "dakrone", "createdAt": "2020-06-04T17:02:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMTE4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMTM4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435021385", "bodyText": "Is there a way to add metadata to the ILM policy so we also know which stack version initially loaded it?", "author": "ruflin", "createdAt": "2020-06-04T06:33:06Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-policy.json", "diffHunk": "@@ -0,0 +1,13 @@\n+{\n+  \"phases\": {\n+    \"hot\": {\n+      \"min_age\": \"0ms\",\n+      \"actions\": {\n+        \"rollover\": {\n+          \"max_size\": \"50gb\",\n+          \"max_age\": \"30d\"\n+        }\n+      }\n+    }\n+  }", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxMjUxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435412519", "bodyText": "Not currently, we could potentially add it in the future though", "author": "dakrone", "createdAt": "2020-06-04T17:03:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMTM4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMTk3OA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435021978", "bodyText": "Should we set priority to 1 or 10?", "author": "ruflin", "createdAt": "2020-06-04T06:34:41Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-template.json", "diffHunk": "@@ -0,0 +1,15 @@\n+{\n+  \"index_patterns\": [\"logs-*-*\"],\n+  \"priority\": 100,", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNTc2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435415763", "bodyText": "Definitely not 1, because we want ample space for lower-priority templates, 100 seemed reasonable and was confirmed by the core/features team as a reasonable default. I'd prefer to stick with 100", "author": "dakrone", "createdAt": "2020-06-04T17:09:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAyMTk3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMjU0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435032542", "bodyText": "should we now use wildcard as a default type cc @jimczi @markharwood\n(we don't need to make a decision for the first version, we can change our minds later)", "author": "jpountz", "createdAt": "2020-06-04T06:58:57Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"_meta\": {\n+      },\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExMDI2NA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435110264", "bodyText": "what happens if a keyword field mapping is updated to a wildcard. Is this a \"compatible\" mapping change?", "author": "ruflin", "createdAt": "2020-06-04T09:16:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMjU0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE4NTAyMg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435185022", "bodyText": "you can't replace it on an existing index, but these fields have exactly the same semantics", "author": "jpountz", "createdAt": "2020-06-04T11:32:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMjU0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNjI5NA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435416294", "bodyText": "I'll collect this as a discussion topic", "author": "dakrone", "createdAt": "2020-06-04T17:10:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMjU0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzNTE0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435035147", "bodyText": "@ruflin would logs-generic-mappings be more aligned with Observability in terms of naming?", "author": "jpountz", "createdAt": "2020-06-04T07:04:22Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-mappings.json", "diffHunk": "@@ -0,0 +1,152 @@\n+{", "originalCommit": "099c782ced2c9619ffcc3a48f88b39c9ce1a8efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEwOTQxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435109415", "bodyText": "I think it should be logs-mappings and leave out generic or default as it applies to all datasets.", "author": "ruflin", "createdAt": "2020-06-04T09:14:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzNTE0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNjk4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r435416986", "bodyText": "I went with logs-default-mappings to allow a user to create their own logs-mappings that was explicitly not the default one, I also figured it would have a lower chance of existing conflict with any templates a user may have installed", "author": "dakrone", "createdAt": "2020-06-04T17:11:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzNTE0Nw=="}], "type": "inlineReview"}, {"oid": "a74934a70f389a2de703307fa8bd1dd932ceb375", "url": "https://github.com/elastic/elasticsearch/commit/a74934a70f389a2de703307fa8bd1dd932ceb375", "message": "Fix docs check", "committedDate": "2020-06-04T16:38:33Z", "type": "commit"}, {"oid": "266acf5d29a6ec309c16cadd93d083fa6ef709ae", "url": "https://github.com/elastic/elasticsearch/commit/266acf5d29a6ec309c16cadd93d083fa6ef709ae", "message": "Merge branch 'master' into itv2-bundle-templates", "committedDate": "2020-06-04T16:38:54Z", "type": "commit"}, {"oid": "73101067d2c89891100fbc8da043e1e959028f46", "url": "https://github.com/elastic/elasticsearch/commit/73101067d2c89891100fbc8da043e1e959028f46", "message": "Rename stream.* -> dataset.*", "committedDate": "2020-06-04T17:13:25Z", "type": "commit"}, {"oid": "7e891126a5665a07cbe55a8b2adbd84cbf84451c", "url": "https://github.com/elastic/elasticsearch/commit/7e891126a5665a07cbe55a8b2adbd84cbf84451c", "message": "Rename dataset.dataset -> dataset.name", "committedDate": "2020-06-04T17:13:25Z", "type": "commit"}, {"oid": "f249d7059d1fd5d47fbee3235f4b644cd6221345", "url": "https://github.com/elastic/elasticsearch/commit/f249d7059d1fd5d47fbee3235f4b644cd6221345", "message": "Remove non-\"ip\" fields under \"host\"", "committedDate": "2020-06-04T17:13:25Z", "type": "commit"}, {"oid": "dcdaa033752704e7942c7be56980cdce2ef5e127", "url": "https://github.com/elastic/elasticsearch/commit/dcdaa033752704e7942c7be56980cdce2ef5e127", "message": "Use default refresh interval for logs/metrics", "committedDate": "2020-06-04T17:13:25Z", "type": "commit"}, {"oid": "42f9f8c8468f297dabbb5d825969b5fe207a6667", "url": "https://github.com/elastic/elasticsearch/commit/42f9f8c8468f297dabbb5d825969b5fe207a6667", "message": "Use default number_of_routing_shards", "committedDate": "2020-06-04T17:13:25Z", "type": "commit"}, {"oid": "3a478d00e9ed1e4c390cfc98c5ae17f21edf5590", "url": "https://github.com/elastic/elasticsearch/commit/3a478d00e9ed1e4c390cfc98c5ae17f21edf5590", "message": "Merge remote-tracking branch 'origin/master' into itv2-bundle-templates", "committedDate": "2020-06-17T22:09:05Z", "type": "commit"}, {"oid": "f2f074134371471fcb92158fed5ff5d133316181", "url": "https://github.com/elastic/elasticsearch/commit/f2f074134371471fcb92158fed5ff5d133316181", "message": "Update mappings after discussion", "committedDate": "2020-06-17T22:11:34Z", "type": "commit"}, {"oid": "a6eeb48dc7e8512baae2b6a730a0f3bd3cf1a4fc", "url": "https://github.com/elastic/elasticsearch/commit/a6eeb48dc7e8512baae2b6a730a0f3bd3cf1a4fc", "message": "Update version constant and comment", "committedDate": "2020-06-17T22:18:26Z", "type": "commit"}, {"oid": "53feca5a6a186900d08ce826f616ab143793ece6", "url": "https://github.com/elastic/elasticsearch/commit/53feca5a6a186900d08ce826f616ab143793ece6", "message": "Fix index name in yaml test for master merge", "committedDate": "2020-06-17T23:09:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4Njk1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r442086955", "bodyText": "is this min_age required? What is the effect of it?", "author": "ruflin", "createdAt": "2020-06-18T09:16:22Z", "path": "x-pack/plugin/core/src/main/resources/logs-default-policy.json", "diffHunk": "@@ -0,0 +1,13 @@\n+{\n+  \"phases\": {\n+    \"hot\": {\n+      \"min_age\": \"0ms\",", "originalCommit": "53feca5a6a186900d08ce826f616ab143793ece6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkxNjExMw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r444916113", "bodyText": "It's not required, and 0 is the default so this can be removed", "author": "dakrone", "createdAt": "2020-06-24T14:01:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4Njk1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5MjgxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r444292811", "bodyText": "@exekias @roncohen I was wondering if we should add anything related to detecting numbers to our default template?", "author": "ruflin", "createdAt": "2020-06-23T15:00:06Z", "path": "x-pack/plugin/core/src/main/resources/metrics-default-mappings.json", "diffHunk": "@@ -0,0 +1,57 @@\n+{\n+  \"template\": {\n+    \"mappings\": {\n+      \"dynamic_templates\": [\n+        {\n+          \"strings_as_keyword\": {\n+            \"mapping\": {\n+              \"ignore_above\": 1024,\n+              \"type\": \"keyword\"\n+            },\n+            \"match_mapping_type\": \"string\"\n+          }\n+        }\n+      ],\n+      \"date_detection\": false,\n+      \"properties\": {", "originalCommit": "53feca5a6a186900d08ce826f616ab143793ece6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkwMTY2MA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r444901660", "bodyText": "uhm good question, it's my understating that beats already send metrics correctly encoded as numbers in the JSON request. That would make Elasticsearch use float and integer. Probably this is fine as a default, WDYT?", "author": "exekias", "createdAt": "2020-06-24T13:41:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5MjgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkwNTM5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r444905393", "bodyText": "Beats is sending 1.0 if we set it as float instead of 1? I must confess, I don't remember. But if that is the case, ++ on having even number detection on.\n@dakrone What are all the option we have here?", "author": "ruflin", "createdAt": "2020-06-24T13:46:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5MjgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkxODE3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r444918172", "bodyText": "@ruflin all numeric_detection does is to make strings that are numbers (ie \"1.3\" instead of 1.3) be numbers rather than strings. If beats is already sending data in the correct format (numbers instead of strings), I don't think it would buy us anything other than requiring the string to be read on every new field introduced.", "author": "dakrone", "createdAt": "2020-06-24T14:04:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5MjgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwNTMzMg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r445105332", "bodyText": "++, sounds like we can ignore it then for now.", "author": "ruflin", "createdAt": "2020-06-24T18:57:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5MjgxMQ=="}], "type": "inlineReview"}, {"oid": "30e48a4930e3f4aa85967e3e4c249e1075f44ac7", "url": "https://github.com/elastic/elasticsearch/commit/30e48a4930e3f4aa85967e3e4c249e1075f44ac7", "message": "Merge branch 'master' into itv2-bundle-templates", "committedDate": "2020-06-24T16:54:53Z", "type": "commit"}, {"oid": "2b1b0186220c062d050afb9f107a02166137133c", "url": "https://github.com/elastic/elasticsearch/commit/2b1b0186220c062d050afb9f107a02166137133c", "message": "Remove unnecessary min_age from policies", "committedDate": "2020-06-24T16:55:20Z", "type": "commit"}, {"oid": "ce81e39a5f6d20e452193a5cdfd21cbf7397df05", "url": "https://github.com/elastic/elasticsearch/commit/ce81e39a5f6d20e452193a5cdfd21cbf7397df05", "message": "Fix gradle for master merge", "committedDate": "2020-06-24T17:14:03Z", "type": "commit"}, {"oid": "455fdfb20853a913893d1c678ac650d082fc4ce6", "url": "https://github.com/elastic/elasticsearch/commit/455fdfb20853a913893d1c678ac650d082fc4ce6", "message": "Reference changed name in YML test", "committedDate": "2020-06-24T18:26:21Z", "type": "commit"}, {"oid": "fd0247646c45c325974f9276027e34ef0439d675", "url": "https://github.com/elastic/elasticsearch/commit/fd0247646c45c325974f9276027e34ef0439d675", "message": "Rename templates and files", "committedDate": "2020-06-24T19:10:48Z", "type": "commit"}, {"oid": "897c645a3d593a7939c872b249a9c8f8aaa5c8f0", "url": "https://github.com/elastic/elasticsearch/commit/897c645a3d593a7939c872b249a9c8f8aaa5c8f0", "message": "Ugh spotless :|", "committedDate": "2020-06-24T19:18:30Z", "type": "commit"}, {"oid": "68f7898c96927cb7fbec7758ed8ccac7d36102b0", "url": "https://github.com/elastic/elasticsearch/commit/68f7898c96927cb7fbec7758ed8ccac7d36102b0", "message": "Add managed: true to settings component templates", "committedDate": "2020-06-24T21:10:58Z", "type": "commit"}, {"oid": "7a555eaaaaf963135d0d3f8544a347baa8ce942c", "url": "https://github.com/elastic/elasticsearch/commit/7a555eaaaaf963135d0d3f8544a347baa8ce942c", "message": "Don't clean up stack-installed templates", "committedDate": "2020-06-24T21:24:48Z", "type": "commit"}, {"oid": "d3c884406e2e71ebe1fbd33dd3bec49980ea97b5", "url": "https://github.com/elastic/elasticsearch/commit/d3c884406e2e71ebe1fbd33dd3bec49980ea97b5", "message": "Merge branch 'master' into itv2-bundle-templates", "committedDate": "2020-06-26T21:08:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0NDUxMg==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r447544512", "bodyText": "is this used anywhere?", "author": "andreidan", "createdAt": "2020-06-30T09:28:05Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/indices/PutComponentTemplateRequest.java", "diffHunk": "@@ -78,6 +78,10 @@ public PutComponentTemplateRequest componentTemplate(ComponentTemplate component\n         return this;\n     }\n \n+    public ComponentTemplate componentTemplate() {", "originalCommit": "d3c884406e2e71ebe1fbd33dd3bec49980ea97b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxMjg3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r447712875", "bodyText": "I think this is a leftover, I'll remove it", "author": "dakrone", "createdAt": "2020-06-30T14:09:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0NDUxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0NTAyOA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r447545028", "bodyText": "do we need to enable this before merging?", "author": "andreidan", "createdAt": "2020-06-30T09:28:57Z", "path": "x-pack/plugin/stack/build.gradle", "diffHunk": "@@ -0,0 +1,29 @@\n+evaluationDependsOn(xpackModule('core'))\n+\n+apply plugin: 'elasticsearch.esplugin'\n+\n+esplugin {\n+  name 'x-pack-stack'\n+  description 'Elasticsearch Expanded Pack Plugin - Stack'\n+  classname 'org.elasticsearch.xpack.stack.StackPlugin'\n+  extendedPlugins = ['x-pack-core']\n+  hasNativeController false\n+  requiresKeystore true\n+}\n+archivesBaseName = 'x-pack-stack'\n+\n+dependencies {\n+  compileOnly project(path: xpackModule('core'), configuration: 'default')\n+  testImplementation project(path: xpackModule('core'), configuration: 'testArtifacts')\n+}\n+\n+// add all sub-projects of the qa sub-project\n+// gradle.projectsEvaluated {\n+//   project.subprojects\n+//     .find { it.path == project.path + \":qa\" }\n+//     .subprojects\n+//     .findAll { it.path.startsWith(project.path + \":qa\") }\n+//     .each { check.dependsOn it.check }\n+// }", "originalCommit": "d3c884406e2e71ebe1fbd33dd3bec49980ea97b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxNTE3OA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r447715178", "bodyText": "Yep, I'll enable it", "author": "dakrone", "createdAt": "2020-06-30T14:12:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0NTAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0Njk0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r447546941", "bodyText": "will these fail when missing? Should we match the status code?", "author": "andreidan", "createdAt": "2020-06-30T09:32:00Z", "path": "x-pack/plugin/stack/qa/rest/src/test/resources/rest-api-spec/test/stack/10_basic.yml", "diffHunk": "@@ -0,0 +1,105 @@\n+---\n+setup:\n+  - do:\n+      cluster.health:\n+        wait_for_status: yellow\n+\n+---\n+\"Test stack template installation\":\n+  - do:\n+      ilm.get_lifecycle:\n+        policy: \"logs\"", "originalCommit": "d3c884406e2e71ebe1fbd33dd3bec49980ea97b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxNTg4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r447715889", "bodyText": "Yeah, these definitely fail when the policy/template/etc is missing", "author": "dakrone", "createdAt": "2020-06-30T14:13:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU0Njk0MQ=="}], "type": "inlineReview"}, {"oid": "e975700b84be417f4dfeddb3c7e5b862f14216a2", "url": "https://github.com/elastic/elasticsearch/commit/e975700b84be417f4dfeddb3c7e5b862f14216a2", "message": "Merge remote-tracking branch 'origin/master' into itv2-bundle-templates", "committedDate": "2020-06-30T14:08:33Z", "type": "commit"}, {"oid": "9991bed6b418ea0e3a803dd8d0a7170c07370572", "url": "https://github.com/elastic/elasticsearch/commit/9991bed6b418ea0e3a803dd8d0a7170c07370572", "message": "Remove unused componentTemplate getter", "committedDate": "2020-06-30T14:10:29Z", "type": "commit"}, {"oid": "36285abb957bf18848d7efb07257d4c110a73c10", "url": "https://github.com/elastic/elasticsearch/commit/36285abb957bf18848d7efb07257d4c110a73c10", "message": "Enable sub project in gradle", "committedDate": "2020-06-30T14:12:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwMTY1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r449201653", "bodyText": "@dakrone Why is this set to 100? Shouldn't we set it to 1? @jonathan-buttner FYI", "author": "ruflin", "createdAt": "2020-07-02T18:36:34Z", "path": "x-pack/plugin/core/src/main/resources/logs-template.json", "diffHunk": "@@ -0,0 +1,16 @@\n+{\n+  \"index_patterns\": [\"logs-*-*\"],\n+  \"priority\": 100,", "originalCommit": "36285abb957bf18848d7efb07257d4c110a73c10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyNTE4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r449225186", "bodyText": "@ruflin hah, you already asked that in #57629 (comment) :) We need space in order for templates to be allowed at a lower priority than these built-in ones (for example, someone installing a template for * at priority 10)", "author": "dakrone", "createdAt": "2020-07-02T19:28:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwMTY1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQyMTA0MA==", "url": "https://github.com/elastic/elasticsearch/pull/57629#discussion_r449421040", "bodyText": "\ud83e\udd26", "author": "ruflin", "createdAt": "2020-07-03T07:26:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwMTY1Mw=="}], "type": "inlineReview"}]}