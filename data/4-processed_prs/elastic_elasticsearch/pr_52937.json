{"pr_number": 52937, "pr_title": "Fix ingest pipeline _simulate api with empty docs never returns a res\u2026", "pr_createdAt": "2020-02-28T07:08:36Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52937", "timeline": [{"oid": "2d1e4e2bb04a17639707381041468ebf9369bcbe", "url": "https://github.com/elastic/elasticsearch/commit/2d1e4e2bb04a17639707381041468ebf9369bcbe", "message": "Fix ingest pipeline _simulate api with empty docs never returns a response", "committedDate": "2020-02-28T05:51:55Z", "type": "commit"}, {"oid": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "url": "https://github.com/elastic/elasticsearch/commit/151e70f220f8636f3b0cb5e05ba6343a8962cc10", "message": "Merge branch 'master' into patch#52833", "committedDate": "2020-03-02T14:01:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQxODQ3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/52937#discussion_r386418476", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalArgumentException(\"expected map in docs but found not\");\n          \n          \n            \n                            throw new IllegalArgumentException(\"malformed [docs] section, should include an inner object\");", "author": "danhermann", "createdAt": "2020-03-02T14:19:21Z", "path": "server/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java", "diffHunk": "@@ -173,8 +173,15 @@ static Parsed parse(Map<String, Object> config, boolean verbose, IngestService i\n     private static List<IngestDocument> parseDocs(Map<String, Object> config) {\n         List<Map<String, Object>> docs =\n             ConfigurationUtils.readList(null, null, config, Fields.DOCS);\n+        if (docs.isEmpty()) {\n+            throw new IllegalArgumentException(\"must specify at least one doc\");\n+        }\n         List<IngestDocument> ingestDocumentList = new ArrayList<>();\n-        for (Map<String, Object> dataMap : docs) {\n+        for (Object object : docs) {\n+            if ((object instanceof Map) ==  false) {\n+                throw new IllegalArgumentException(\"expected map in docs but found not\");", "originalCommit": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQxODc5OA==", "url": "https://github.com/elastic/elasticsearch/pull/52937#discussion_r386418798", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(e2.getMessage(), equalTo(\"expected map in docs but found not\"));\n          \n          \n            \n                    assertThat(e2.getMessage(), equalTo(\"malformed [docs] section, should include an inner object\"));", "author": "danhermann", "createdAt": "2020-03-02T14:19:47Z", "path": "server/src/test/java/org/elasticsearch/action/ingest/SimulatePipelineRequestParsingTests.java", "diffHunk": "@@ -216,4 +218,33 @@ public void testNonExistentPipelineId() {\n             () -> SimulatePipelineRequest.parseWithPipelineId(pipelineId, requestContent, false, ingestService));\n         assertThat(e.getMessage(), equalTo(\"pipeline [\" + pipelineId + \"] does not exist\"));\n     }\n+\n+    public void testNotValidDocs() {\n+        Map<String, Object> requestContent = new HashMap<>();\n+        List<Map<String, Object>> docs = new ArrayList<>();\n+        Map<String, Object> pipelineConfig = new HashMap<>();\n+        List<Map<String, Object>> processors = new ArrayList<>();\n+        pipelineConfig.put(\"processors\", processors);\n+        requestContent.put(Fields.DOCS, docs);\n+        requestContent.put(Fields.PIPELINE, pipelineConfig);\n+        Exception e1 = expectThrows(IllegalArgumentException.class,\n+            () -> SimulatePipelineRequest.parse(requestContent, false, ingestService));\n+        assertThat(e1.getMessage(), equalTo(\"must specify at least one doc\"));\n+\n+        List<String> stringList = new ArrayList<>();\n+        stringList.add(\"test\");\n+        pipelineConfig.put(\"processors\", processors);\n+        requestContent.put(Fields.DOCS, stringList);\n+        requestContent.put(Fields.PIPELINE, pipelineConfig);\n+        Exception e2 = expectThrows(IllegalArgumentException.class,\n+            () -> SimulatePipelineRequest.parse(requestContent, false, ingestService));\n+        assertThat(e2.getMessage(), equalTo(\"expected map in docs but found not\"));", "originalCommit": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQxOTQxNA==", "url": "https://github.com/elastic/elasticsearch/pull/52937#discussion_r386419414", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(\"must specify at least one doc\");\n          \n          \n            \n                        throw new IllegalArgumentException(\"must specify at least one document in [docs]\");", "author": "danhermann", "createdAt": "2020-03-02T14:20:49Z", "path": "server/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java", "diffHunk": "@@ -173,8 +173,15 @@ static Parsed parse(Map<String, Object> config, boolean verbose, IngestService i\n     private static List<IngestDocument> parseDocs(Map<String, Object> config) {\n         List<Map<String, Object>> docs =\n             ConfigurationUtils.readList(null, null, config, Fields.DOCS);\n+        if (docs.isEmpty()) {\n+            throw new IllegalArgumentException(\"must specify at least one doc\");", "originalCommit": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQxOTU5OA==", "url": "https://github.com/elastic/elasticsearch/pull/52937#discussion_r386419598", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(e1.getMessage(), equalTo(\"must specify at least one doc\"));\n          \n          \n            \n                    assertThat(e1.getMessage(), equalTo(\"must specify at least one document in [docs]\"));", "author": "danhermann", "createdAt": "2020-03-02T14:21:07Z", "path": "server/src/test/java/org/elasticsearch/action/ingest/SimulatePipelineRequestParsingTests.java", "diffHunk": "@@ -216,4 +218,33 @@ public void testNonExistentPipelineId() {\n             () -> SimulatePipelineRequest.parseWithPipelineId(pipelineId, requestContent, false, ingestService));\n         assertThat(e.getMessage(), equalTo(\"pipeline [\" + pipelineId + \"] does not exist\"));\n     }\n+\n+    public void testNotValidDocs() {\n+        Map<String, Object> requestContent = new HashMap<>();\n+        List<Map<String, Object>> docs = new ArrayList<>();\n+        Map<String, Object> pipelineConfig = new HashMap<>();\n+        List<Map<String, Object>> processors = new ArrayList<>();\n+        pipelineConfig.put(\"processors\", processors);\n+        requestContent.put(Fields.DOCS, docs);\n+        requestContent.put(Fields.PIPELINE, pipelineConfig);\n+        Exception e1 = expectThrows(IllegalArgumentException.class,\n+            () -> SimulatePipelineRequest.parse(requestContent, false, ingestService));\n+        assertThat(e1.getMessage(), equalTo(\"must specify at least one doc\"));", "originalCommit": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4MTEzOA==", "url": "https://github.com/elastic/elasticsearch/pull/52937#discussion_r386481138", "bodyText": "Also maybe add a return statement here? Technically it is not needed because the for loop is skipped, but I find it easier to read.", "author": "martijnvg", "createdAt": "2020-03-02T15:57:09Z", "path": "server/src/main/java/org/elasticsearch/action/ingest/SimulateExecutionService.java", "diffHunk": "@@ -69,6 +69,12 @@ public void execute(SimulatePipelineRequest.Parsed request, ActionListener<Simul\n             final AtomicInteger counter = new AtomicInteger();\n             final List<SimulateDocumentResult> responses =\n                 new CopyOnWriteArrayList<>(new SimulateDocumentBaseResult[request.getDocuments().size()]);\n+\n+            if (request.getDocuments().isEmpty()) {\n+                l.onResponse(new SimulatePipelineResponse(request.getPipeline().getId(),", "originalCommit": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e13721700b20f1ca4d83a22eb41fb5e95907fe3f", "url": "https://github.com/elastic/elasticsearch/commit/e13721700b20f1ca4d83a22eb41fb5e95907fe3f", "message": "Merge remote-tracking branch 'origin/master' into patch#52833", "committedDate": "2020-03-05T10:09:30Z", "type": "commit"}, {"oid": "cda6cfc4f52025b0f0a3c08599014479b488db5e", "url": "https://github.com/elastic/elasticsearch/commit/cda6cfc4f52025b0f0a3c08599014479b488db5e", "message": "modify some error messages", "committedDate": "2020-03-05T10:09:53Z", "type": "commit"}, {"oid": "61d2260fd455861a5503f23295cde9d9b2e1e11a", "url": "https://github.com/elastic/elasticsearch/commit/61d2260fd455861a5503f23295cde9d9b2e1e11a", "message": "Merge branch 'master' into patch#52833", "committedDate": "2020-03-11T14:03:58Z", "type": "commit"}]}