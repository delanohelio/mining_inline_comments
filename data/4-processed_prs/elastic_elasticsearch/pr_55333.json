{"pr_number": 55333, "pr_title": "[ML] fix bugs with prediction field value settings", "pr_createdAt": "2020-04-16T18:04:09Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55333", "timeline": [{"oid": "6d269096e90ff2cdd24f455320635ea234b3d681", "url": "https://github.com/elastic/elasticsearch/commit/6d269096e90ff2cdd24f455320635ea234b3d681", "message": "[ML] fix bugs with prediction field value settings", "committedDate": "2020-04-16T17:59:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5MjEyMg==", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410092122", "bodyText": "Two questions here:\n\nWhat do we do with an empty string? Currently it would fail with IndexOutOfBounds, right?\nWhy do we prioritize stringRep over value even in a number case?", "author": "przemekwitek", "createdAt": "2020-04-17T09:05:32Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "diffHunk": "@@ -57,6 +57,19 @@ public Object transformPredictedValue(Double value, String stringRep) {\n                 }\n                 return areClose(value, 1.0D);\n             case NUMBER:\n+                if (stringRep == null) {\n+                    return value;\n+                }\n+                // Quick check to verify that the string rep is LIKELY a number", "originalCommit": "6d269096e90ff2cdd24f455320635ea234b3d681", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE2OTYyNg==", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410169626", "bodyText": "Good question, I think the underlying value should be returned in this case. I will adjust accordingly.\nPlease read the PR description. When creating a model in analytics, it is possible to have classification classes that are numeric, but not ordinal. These are treated as classification_labels.", "author": "benwtrent", "createdAt": "2020-04-17T11:45:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5MjEyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5MzI1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410093251", "bodyText": "Could you add tests for:\n\nan empty string\na string that is not a number?", "author": "przemekwitek", "createdAt": "2020-04-17T09:07:47Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldTypeTests.java", "diffHunk": "@@ -38,6 +38,8 @@ public void testTransformPredictedValueNumber() {\n             is(nullValue()));\n         assertThat(PredictionFieldType.NUMBER.transformPredictedValue(1.0, \"foo\"), equalTo(1.0));\n         assertThat(PredictionFieldType.NUMBER.transformPredictedValue(1.0, null), equalTo(1.0));\n+        long expected = randomLong();", "originalCommit": "6d269096e90ff2cdd24f455320635ea234b3d681", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE2OTIwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410169209", "bodyText": "There is already a test for 2. See line 39.\nI will add a test for 1", "author": "benwtrent", "createdAt": "2020-04-17T11:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5MzI1MQ=="}], "type": "inlineReview"}, {"oid": "b0a213e3753c5f03ddf884c28c8cf8f48c611e0d", "url": "https://github.com/elastic/elasticsearch/commit/b0a213e3753c5f03ddf884c28c8cf8f48c611e0d", "message": "addressing empty strings", "committedDate": "2020-04-17T11:50:10Z", "type": "commit"}, {"oid": "255b5aeb8c90d201206f14e1befd3a13c7d55d45", "url": "https://github.com/elastic/elasticsearch/commit/255b5aeb8c90d201206f14e1befd3a13c7d55d45", "message": "Merge branch 'master' into feature/ml-inference-fix-parameter-values", "committedDate": "2020-04-17T12:19:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxMTA0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410211043", "bodyText": "Could we just drop it and rely solely on parseLong?\nOr is this some kind of perf optimization? If so, are you sure it is really faster?", "author": "przemekwitek", "createdAt": "2020-04-17T13:10:12Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/PredictionFieldType.java", "diffHunk": "@@ -57,6 +58,19 @@ public Object transformPredictedValue(Double value, String stringRep) {\n                 }\n                 return areClose(value, 1.0D);\n             case NUMBER:\n+                if (Strings.isNullOrEmpty(stringRep)) {\n+                    return value;\n+                }\n+                // Quick check to verify that the string rep is LIKELY a number\n+                // Still handles the case where it throws and then returns the underlying value\n+                if (stringRep.charAt(0) == '-' || Character.isDigit(stringRep.charAt(0))) {", "originalCommit": "255b5aeb8c90d201206f14e1befd3a13c7d55d45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxMjAzMg==", "url": "https://github.com/elastic/elasticsearch/pull/55333#discussion_r410212032", "bodyText": "It is way faster if stringRep is consistently not a number (which could easily be the case). Every call that it is not a number throws an exception, and the JVM has to build a trace.", "author": "benwtrent", "createdAt": "2020-04-17T13:11:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxMTA0Mw=="}], "type": "inlineReview"}]}