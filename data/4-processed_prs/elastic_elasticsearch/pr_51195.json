{"pr_number": 51195, "pr_title": "Make order setting mandatory for Realm config", "pr_createdAt": "2020-01-19T13:29:57Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51195", "timeline": [{"oid": "65cf24cde3ad90794487983a6b4bc74857fe631c", "url": "https://github.com/elastic/elasticsearch/commit/65cf24cde3ad90794487983a6b4bc74857fe631c", "message": "WIP: making realm order config mandatory", "committedDate": "2020-01-17T13:02:38Z", "type": "commit"}, {"oid": "d186b0a40c8a3c2d60f1a63b76aa3626d61f64c3", "url": "https://github.com/elastic/elasticsearch/commit/d186b0a40c8a3c2d60f1a63b76aa3626d61f64c3", "message": "Support explicit order parameter for RealmConfig\n\nReserved realm and default native realms now use the new constructor to\nspecifiy order explicitly", "committedDate": "2020-01-19T11:54:18Z", "type": "commit"}, {"oid": "82e08d27356bc1c37e3f9040fbfdb94c5d174e7a", "url": "https://github.com/elastic/elasticsearch/commit/82e08d27356bc1c37e3f9040fbfdb94c5d174e7a", "message": "Fix security plugin tests for required order param", "committedDate": "2020-01-19T13:24:45Z", "type": "commit"}, {"oid": "71bfb3e4a851386fddda7803900fa3c8e6da970c", "url": "https://github.com/elastic/elasticsearch/commit/71bfb3e4a851386fddda7803900fa3c8e6da970c", "message": "Fix more tests for required order param", "committedDate": "2020-01-19T13:47:35Z", "type": "commit"}, {"oid": "53701636b31b521b736007d1367645ad5643683b", "url": "https://github.com/elastic/elasticsearch/commit/53701636b31b521b736007d1367645ad5643683b", "message": "Fix ci/2 failures", "committedDate": "2020-01-19T21:56:09Z", "type": "commit"}, {"oid": "1132f5f2f691917295db7d21b28e872ea334ff7b", "url": "https://github.com/elastic/elasticsearch/commit/1132f5f2f691917295db7d21b28e872ea334ff7b", "message": "Merge branch 'master' into issue-37614-realm-order", "committedDate": "2020-01-19T22:16:42Z", "type": "commit"}, {"oid": "7fa20a3d6d42d21b252b0279bf576d55db76b4b2", "url": "https://github.com/elastic/elasticsearch/commit/7fa20a3d6d42d21b252b0279bf576d55db76b4b2", "message": "Fix more require order parameter failure", "committedDate": "2020-01-19T22:59:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4OTg0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r368389846", "bodyText": "I would prefer the order be a primitive, and we resolve the order from the settings in the original constructor.\nBehaviours around if this parameter is null, do this other thing can end up getting quite confusing in a large code base.", "author": "tvernum", "createdAt": "2020-01-20T06:48:23Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/RealmConfig.java", "diffHunk": "@@ -24,11 +24,24 @@\n     private final ThreadContext threadContext;\n \n     public RealmConfig(RealmIdentifier identifier, Settings settings, Environment env, ThreadContext threadContext) {\n+        this(identifier, settings, env, threadContext, null);\n+    }\n+\n+    public RealmConfig(RealmIdentifier identifier, Settings settings, Environment env, ThreadContext threadContext, Integer order) {\n         this.identifier = identifier;\n         this.settings = settings;\n         this.env = env;\n         this.enabled = getSetting(RealmSettings.ENABLED_SETTING);\n-        this.order = getSetting(RealmSettings.ORDER_SETTING);\n+        if (order != null) {\n+            this.order = order;\n+        } else if (order == null && hasSetting(RealmSettings.ORDER_SETTING.apply(type())) == false) {\n+            throw new IllegalArgumentException(\"'order' is a mandatory parameter for realm config. \" +\n+                \"Found invalid realm config: '\" + identifier.name + \"'\\n\" +\n+                \"Please see the breaking changes documentation.\"\n+            );\n+        } else {\n+            this.order = getSetting(RealmSettings.ORDER_SETTING);\n+        }", "originalCommit": "7fa20a3d6d42d21b252b0279bf576d55db76b4b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5MjYxNw==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r368392617", "bodyText": "I agree null is a hack. But there is no easy way to tell whether a primitive value is indeed missing.", "author": "ywangd", "createdAt": "2020-01-20T07:00:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4OTg0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUxOTcyMA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r368519720", "bodyText": "Changed to int.", "author": "ywangd", "createdAt": "2020-01-20T12:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4OTg0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4OTkxNg==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r368389916", "bodyText": "I think it would be better for this constructor to be  protected, and update the tests to pass through real Settings object with an order config.\nI know that's going to be a pain - so please feel free to convince me if you feel otherwise.", "author": "tvernum", "createdAt": "2020-01-20T06:48:41Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/RealmConfig.java", "diffHunk": "@@ -24,11 +24,24 @@\n     private final ThreadContext threadContext;\n \n     public RealmConfig(RealmIdentifier identifier, Settings settings, Environment env, ThreadContext threadContext) {\n+        this(identifier, settings, env, threadContext, null);\n+    }\n+\n+    public RealmConfig(RealmIdentifier identifier, Settings settings, Environment env, ThreadContext threadContext, Integer order) {", "originalCommit": "7fa20a3d6d42d21b252b0279bf576d55db76b4b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5MjgxNA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r368392814", "bodyText": "Are you suggesting the caller should create a Settings object that actually includes an order? In this case, this constructor is no longer necessary? Am I getting this right?", "author": "ywangd", "createdAt": "2020-01-20T07:01:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4OTkxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5Mzc1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r368393755", "bodyText": "I initially actual prefer to not adding another constructor. But the number of call site changes made me change my mind. But I am happy to drop the constructor and make more call site changes if you favour this approach. Please let me know. Thanks", "author": "ywangd", "createdAt": "2020-01-20T07:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM4OTkxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5MTQ0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r368391446", "bodyText": "Do we have a test for this validation (e.g. RealmSettingsTests) ?\nI can't see one, but given the number of tests changes, I may have missed it.", "author": "tvernum", "createdAt": "2020-01-20T06:55:28Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/RealmConfig.java", "diffHunk": "@@ -24,11 +24,24 @@\n     private final ThreadContext threadContext;\n \n     public RealmConfig(RealmIdentifier identifier, Settings settings, Environment env, ThreadContext threadContext) {\n+        this(identifier, settings, env, threadContext, null);\n+    }\n+\n+    public RealmConfig(RealmIdentifier identifier, Settings settings, Environment env, ThreadContext threadContext, Integer order) {\n         this.identifier = identifier;\n         this.settings = settings;\n         this.env = env;\n         this.enabled = getSetting(RealmSettings.ENABLED_SETTING);\n-        this.order = getSetting(RealmSettings.ORDER_SETTING);\n+        if (order != null) {\n+            this.order = order;\n+        } else if (order == null && hasSetting(RealmSettings.ORDER_SETTING.apply(type())) == false) {\n+            throw new IllegalArgumentException(\"'order' is a mandatory parameter for realm config. \" +\n+                \"Found invalid realm config: '\" + identifier.name + \"'\\n\" +\n+                \"Please see the breaking changes documentation.\"", "originalCommit": "7fa20a3d6d42d21b252b0279bf576d55db76b4b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5MzExNA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r368393114", "bodyText": "I haven't added the tests yet mainly because I was not sure how the change will turn out (e.g. the above discussion may result in implementation change). I'll add them once I am certain about the changes.", "author": "ywangd", "createdAt": "2020-01-20T07:02:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5MTQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODUxOTQwMA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r368519400", "bodyText": "Tests added.", "author": "ywangd", "createdAt": "2020-01-20T12:20:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5MTQ0Ng=="}], "type": "inlineReview"}, {"oid": "3d724e84eb91c87f7ed3a9387fb0232b088be289", "url": "https://github.com/elastic/elasticsearch/commit/3d724e84eb91c87f7ed3a9387fb0232b088be289", "message": "Enforce no same order for realms.\n\nAdd tests for mandatory order setting of RealmConfig.\nFix broken tests due to unique order setting requirement.", "committedDate": "2020-01-20T11:41:07Z", "type": "commit"}, {"oid": "adca1bf64a18fbabb4f3f5f90b82d88d3bb8b5b0", "url": "https://github.com/elastic/elasticsearch/commit/adca1bf64a18fbabb4f3f5f90b82d88d3bb8b5b0", "message": "Fix duplicate order for tests", "committedDate": "2020-01-20T12:41:48Z", "type": "commit"}, {"oid": "0f60b225757fa08ed3c2082d38dd23b1123ca0cb", "url": "https://github.com/elastic/elasticsearch/commit/0f60b225757fa08ed3c2082d38dd23b1123ca0cb", "message": "Add realm order to breaking change doc", "committedDate": "2020-01-20T12:42:02Z", "type": "commit"}, {"oid": "3cb7a83301c9574de80a204c0ef24a0de64f3e27", "url": "https://github.com/elastic/elasticsearch/commit/3cb7a83301c9574de80a204c0ef24a0de64f3e27", "message": "Start updating docs for realm order", "committedDate": "2020-01-20T12:54:41Z", "type": "commit"}, {"oid": "22399cee002903d51c2d9a7b2edf66e801cc4b0c", "url": "https://github.com/elastic/elasticsearch/commit/22399cee002903d51c2d9a7b2edf66e801cc4b0c", "message": "Add missing order config in docs\n\nAlso update descriptions", "committedDate": "2020-01-21T05:26:01Z", "type": "commit"}, {"oid": "0edef24288aa20268d3425aa5a165265a115e54b", "url": "https://github.com/elastic/elasticsearch/commit/0edef24288aa20268d3425aa5a165265a115e54b", "message": "Merge branch 'master' into issue-37614-realm-order", "committedDate": "2020-01-21T05:55:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI4OTY4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r369289681", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            specified for each explicitly configured realms. Their values must be unique.\n          \n          \n            \n            specified for each explicitly configured realm. Each value must be unique.", "author": "lcawl", "createdAt": "2020-01-21T22:59:43Z", "path": "docs/reference/migration/migrate_8_0/security.asciidoc", "diffHunk": "@@ -6,6 +6,29 @@\n //Installation and Upgrade Guide\n \n //tag::notable-breaking-changes[]\n+[float]\n+==== The realm `order` setting is required\n+\n+The `xpack.security.authc.realms.*.*.order` setting is now required and must be\n+specified for each explicitly configured realms. Their values must be unique.", "originalCommit": "0edef24288aa20268d3425aa5a165265a115e54b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b439a49c8a68cf6dad8823261db77c44b7361326", "url": "https://github.com/elastic/elasticsearch/commit/b439a49c8a68cf6dad8823261db77c44b7361326", "message": "Update docs/reference/migration/migrate_8_0/security.asciidoc\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>", "committedDate": "2020-01-21T23:03:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NTkxMA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r369295910", "bodyText": "There's another line in this file that I think should be changed:\n\nIf you are configuring multiple realms, you should also explicitly set the order attribute ....\n\nI think it should be changed to \"you must also explicitly set the order attribute\".", "author": "lcawl", "createdAt": "2020-01-21T23:18:36Z", "path": "x-pack/docs/en/security/authentication/configuring-ldap-realm.asciidoc", "diffHunk": "@@ -206,6 +206,7 @@ xpack:\n       realms:\n         ldap:\n           ldap1:\n+            order: 0", "originalCommit": "b439a49c8a68cf6dad8823261db77c44b7361326", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5OTQxMg==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r369299412", "bodyText": "Good catch. Will update. Thanks", "author": "ywangd", "createdAt": "2020-01-21T23:29:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NTkxMA=="}], "type": "inlineReview"}, {"oid": "9548e2fb2cc3ac692f92fb490c798b363b96f05c", "url": "https://github.com/elastic/elasticsearch/commit/9548e2fb2cc3ac692f92fb490c798b363b96f05c", "message": "Merge branch 'master' into issue-37614-realm-order", "committedDate": "2020-01-21T23:33:22Z", "type": "commit"}, {"oid": "a74482efa5defac9be29c193e7bc60a0426a9f31", "url": "https://github.com/elastic/elasticsearch/commit/a74482efa5defac9be29c193e7bc60a0426a9f31", "message": "Update for docs feedback", "committedDate": "2020-01-21T23:34:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMzMzE4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r369333181", "bodyText": "This page also has the following:\n\nIf you are configuring multiple realms, you should explicitly set the order attribute.\n\n... which I think should be changed to \"you must explicitly set the order attribute...\"", "author": "lcawl", "createdAt": "2020-01-22T01:39:33Z", "path": "x-pack/docs/en/security/authentication/configuring-pki-realm.asciidoc", "diffHunk": "@@ -61,6 +61,7 @@ xpack:\n       realms:\n         pki:\n           pki1:\n+            order: 1", "originalCommit": "a74482efa5defac9be29c193e7bc60a0426a9f31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1MDI4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r369350283", "bodyText": "Thanks. It's updated now. I also searched through the documentations to make sure there is no similar situation like this anymore.", "author": "ywangd", "createdAt": "2020-01-22T03:01:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMzMzE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1MjAxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r369352015", "bodyText": "Here are the similar changes that are made based on above search result", "author": "ywangd", "createdAt": "2020-01-22T03:10:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMzMzE4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM1MjAzMA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r369352030", "bodyText": "994c0af", "author": "ywangd", "createdAt": "2020-01-22T03:10:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMzMzE4MQ=="}], "type": "inlineReview"}, {"oid": "e0aa65bfb200d97013ada5a308a7f120e3f34a3f", "url": "https://github.com/elastic/elasticsearch/commit/e0aa65bfb200d97013ada5a308a7f120e3f34a3f", "message": "Update doc to address feedback", "committedDate": "2020-01-22T02:56:59Z", "type": "commit"}, {"oid": "994c0af8d053c683eaca306770beaf3207c16dc5", "url": "https://github.com/elastic/elasticsearch/commit/994c0af8d053c683eaca306770beaf3207c16dc5", "message": "More wording changes based on feedback", "committedDate": "2020-01-22T03:09:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5NzE1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370097153", "bodyText": "typo: \"relams\" -> \"realms\" (ditto underneath)", "author": "albertzaharovits", "createdAt": "2020-01-23T12:47:33Z", "path": "docs/reference/migration/migrate_8_0/security.asciidoc", "diffHunk": "@@ -6,6 +6,29 @@\n //Installation and Upgrade Guide\n \n //tag::notable-breaking-changes[]\n+[float]\n+==== The realm `order` setting is required\n+\n+The `xpack.security.authc.realms.*.*.order` setting is now required and must be\n+specified for each explicitly configured realm. Each value must be unique.\n+The cluster will fail to start if the requirements are not met.\n+\n+For example, the following configuration is invalid:\n+[source,yaml]\n+--------------------------------------------------\n+xpack.security.authc.relams.kerberos.kerb1:", "originalCommit": "994c0af8d053c683eaca306770beaf3207c16dc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM3Njk1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370376959", "bodyText": "Good catch thanks!", "author": "ywangd", "createdAt": "2020-01-23T21:58:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5NzE1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4MzQ5MA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370183490", "bodyText": "Technically, you must set the order even if not configuring multiple realms. I would remove this phrase altogether. (same in other places too)", "author": "albertzaharovits", "createdAt": "2020-01-23T15:23:46Z", "path": "x-pack/docs/en/security/authentication/configuring-active-directory-realm.asciidoc", "diffHunk": "@@ -4,7 +4,7 @@ realm and map Active Directory users and groups to roles in the role mapping fil\n . Add a realm configuration of type `active_directory` to `elasticsearch.yml`\n under the `xpack.security.authc.realms.active_directory` namespace.\n At a minimum, you must specify the Active Directory `domain_name`.\n-If you are configuring multiple realms, you should also \n+If you are configuring multiple realms, you must also \n explicitly set the `order` attribute to control the order in which the realms \n are consulted during authentication. \n +", "originalCommit": "994c0af8d053c683eaca306770beaf3207c16dc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM3NzMxNg==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370377316", "bodyText": "Makes sense will do", "author": "ywangd", "createdAt": "2020-01-23T21:59:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4MzQ5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNDkxNA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370224914", "bodyText": "I would've probably made a different choice of where to place this check because we pass RealmConfigs around in too many places. For example, this:\n\nwill throw an exception in InternalRealms.getBootstrapChecks so the stacktrace for it is funky.\nwill throw an exception in the SamlMetadataCommand which is not nice, although it might not happen in practice too often.\n\nI would've probably removed the order and enabled local vars and do the checks in Realms#initRealms. But there might be subtle problems in that case as well.\nNevertheless, this does the job, and looks OK, to me.\nNit: we use the reverse form for negative condition, i.e. false == <function> (unless we are in some few older files that use a different convention in which case we blend with the background).", "author": "albertzaharovits", "createdAt": "2020-01-23T16:32:08Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/RealmConfig.java", "diffHunk": "@@ -27,9 +27,24 @@ public RealmConfig(RealmIdentifier identifier, Settings settings, Environment en\n         this.identifier = identifier;\n         this.settings = settings;\n         this.env = env;\n+        this.threadContext = threadContext;\n         this.enabled = getSetting(RealmSettings.ENABLED_SETTING);\n+        if (hasSetting(RealmSettings.ORDER_SETTING.apply(type())) == false) {", "originalCommit": "994c0af8d053c683eaca306770beaf3207c16dc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQxODU2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370418561", "bodyText": "I am also tempted to move the logic into Reamls#initRealms (see below) comments for details. But your examples show that by itself is not sufficient. Both of the two examples are not covered if the logic is just in Realms#initRealms, while they do get covered if the logic is in RealmConfig. I am now again unsure about what would be the better approach.", "author": "ywangd", "createdAt": "2020-01-24T00:04:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNDkxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM4NTkxNg==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r371385916", "bodyText": "Maybe I've not made myself clear\n\nwill throw an exception in InternalRealms.getBootstrapChecks so the stacktrace for it is funky.\n\nI mean that there is a minor inconvenience that the validation that the order parameter is defined is performed inside a different code than the code that deals with realm construction.", "author": "albertzaharovits", "createdAt": "2020-01-27T17:43:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNDkxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyODkyOA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370228928", "bodyText": "Not to dwell on it too much, but just because we need this new constructor is a smell. In this case, the order local var is sometimes the value from the settings, and sometimes a different one passed by this constructor. I know this is only used in tests, but it's still not nice to have to deal with it (Integer.MAX_VALUE).", "author": "albertzaharovits", "createdAt": "2020-01-23T16:38:52Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/RealmConfig.java", "diffHunk": "@@ -27,9 +27,24 @@ public RealmConfig(RealmIdentifier identifier, Settings settings, Environment en\n         this.identifier = identifier;\n         this.settings = settings;\n         this.env = env;\n+        this.threadContext = threadContext;\n         this.enabled = getSetting(RealmSettings.ENABLED_SETTING);\n+        if (hasSetting(RealmSettings.ORDER_SETTING.apply(type())) == false) {\n+            throw new IllegalArgumentException(\"'order' is a mandatory parameter for realm config. \" +\n+                \"Found invalid realm config: '\" + identifier.name + \"'\\n\" +\n+                \"Please see the breaking changes documentation.\"\n+            );\n+        }\n         this.order = getSetting(RealmSettings.ORDER_SETTING);\n+    }\n+\n+    public RealmConfig(RealmIdentifier identifier, Settings settings, Environment env, ThreadContext threadContext, int order) {\n+        this.identifier = identifier;\n+        this.settings = settings;\n+        this.env = env;\n         this.threadContext = threadContext;\n+        this.enabled = getSetting(RealmSettings.ENABLED_SETTING);\n+        this.order = order;", "originalCommit": "994c0af8d053c683eaca306770beaf3207c16dc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM3NDY1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370374655", "bodyText": "The new constructor is mostly used by test code, but it is also used by production code, see Realms and ReservedRealm.\nI also think adding a new constructor is not ideal due to some of the concerns you mention. It however seems to be a better choice comparing to the other choice, i.e. Add order into the settings parameter on caller side so that it can just keep using the existing constructor.\nThis approach should work fine for tests. But in production code, the settings object is referenced in many other classes, e.g. Environment, Realms, etc. So when adding FileRealm (in Realms.java), if we modify the settings object to add order, we will need to do something like the follows:\nvar newSettings = Settings.Builder().put(settings).build();\n... new RealmConfig(..., newSetings, ...), ...;\nSo the newSettings is now passed into RealmConfig which will store a reference to it. Now we have two Settings object across the application. They are mostly identical, only differs in the order parameter. And this is just FileRealm, the same applies to native realm, for which we will have a third settings. I personally think this is worse than adding a new constructor. That is why the new constructor is added so we can avoid manipulating the settings object.\nWith above being said, I realise it is making an assumption that the logic for mandating the order setting resides in the RealmConfig class. If we can move away from this assumption, like you suggested, enforce the logic in Realms.initRealms, we can probably make the change set much smaller.\nInitially I thought about adding the logic into Security but that was too high level. So we decided to add it in RealmConfig itself, where it is low level the logic is close to its natural owner. But maybe we need something in between. Realms could be the right candidate especially it is where the order uniqueness is enforced.", "author": "ywangd", "createdAt": "2020-01-23T21:52:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyODkyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQwNTc2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r371405761", "bodyText": "My choice would also be to only inspect the order setting inRealms#initRealms (where the order value duplication is checked). That's because the order is only really used in that place, specifying the initial order in the realm chain (which would then change as we reorder the chain during authentications), so it's not suitable as a final local variable.\nThis way we would also avoid having to specify the order parameter for the \"default\" realms (file and native) which is simply ignored anyways.\nYour approach works as well and I can't argue strongly against it, so this LGTM to me even though I would've approached it differently.", "author": "albertzaharovits", "createdAt": "2020-01-27T18:25:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyODkyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIzMTU0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370231542", "bodyText": "I think the error message that you're building downstream calls for realm names, and not for setting keys.", "author": "albertzaharovits", "createdAt": "2020-01-23T16:43:31Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java", "diffHunk": "@@ -218,9 +219,13 @@ public Realm realm(String name) {\n             Realm realm = factory.create(config);\n             nameToRealmIdentifier.computeIfAbsent(realm.name(), k ->\n                 new HashSet<>()).add(RealmSettings.realmSettingPrefix(realm.type()) + realm.name());\n+            orderToRealmIdentifier.computeIfAbsent(realm.order(), k -> new HashSet<>())\n+                .add(RealmSettings.realmSettingPrefix(realm.type()) + realm.name());", "originalCommit": "994c0af8d053c683eaca306770beaf3207c16dc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQxODkxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370418915", "bodyText": "Good point. I'll make them consistent.", "author": "ywangd", "createdAt": "2020-01-24T00:06:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIzMTU0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIzNDU2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370234561", "bodyText": "Why is this necessary? If it isn't, I would steer clear of such changes, it's not productive to start contingent discussions on other topics than the scope of this PR.\nIf you wish we discuss the topic of negative values for the order argument we should do so under a new issue.", "author": "albertzaharovits", "createdAt": "2020-01-23T16:49:01Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/test/SecuritySettingsSource.java", "diffHunk": "@@ -141,8 +141,8 @@ public Settings nodeSettings(int nodeOrdinal) {\n                 .put(LoggingAuditTrail.EMIT_HOST_NAME_SETTING.getKey(), randomBoolean())\n                 .put(LoggingAuditTrail.EMIT_NODE_NAME_SETTING.getKey(), randomBoolean())\n                 .put(LoggingAuditTrail.EMIT_NODE_ID_SETTING.getKey(), randomBoolean())\n-                .put(\"xpack.security.authc.realms.\" + FileRealmSettings.TYPE + \".file.order\", 0)\n-                .put(\"xpack.security.authc.realms.\" + NativeRealmSettings.TYPE + \".index.order\", \"1\")\n+                .put(\"xpack.security.authc.realms.\" + FileRealmSettings.TYPE + \".file.order\", Integer.MIN_VALUE)\n+                .put(\"xpack.security.authc.realms.\" + NativeRealmSettings.TYPE + \".index.order\", String.valueOf(Integer.MIN_VALUE + 1))\n                 .put(\"xpack.license.self_generated.type\", \"trial\");", "originalCommit": "994c0af8d053c683eaca306770beaf3207c16dc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQxOTU1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r370419559", "bodyText": "You are right. I think I edited the wrong file. Nevermind, I'll get rid of them. Thanks", "author": "ywangd", "createdAt": "2020-01-24T00:08:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIzNDU2MQ=="}], "type": "inlineReview"}, {"oid": "da8e7e3bc0ab71c63ae7132cd4958c86e9d75167", "url": "https://github.com/elastic/elasticsearch/commit/da8e7e3bc0ab71c63ae7132cd4958c86e9d75167", "message": "Address feedback for docs", "committedDate": "2020-01-24T00:26:24Z", "type": "commit"}, {"oid": "7fbf06159a029a925ef5303cc624d3e3b3b519c6", "url": "https://github.com/elastic/elasticsearch/commit/7fbf06159a029a925ef5303cc624d3e3b3b519c6", "message": "Address feedback to revert accident change", "committedDate": "2020-01-24T00:33:46Z", "type": "commit"}, {"oid": "472b2d61bd9bb665a89710ae2ad9a4ec53bed3cf", "url": "https://github.com/elastic/elasticsearch/commit/472b2d61bd9bb665a89710ae2ad9a4ec53bed3cf", "message": "Merge remote-tracking branch 'origin/master' into issue-37614-realm-order", "committedDate": "2020-01-24T03:42:24Z", "type": "commit"}, {"oid": "64d0292fc33d26a27199392dbaccb6afc1dfe89d", "url": "https://github.com/elastic/elasticsearch/commit/64d0292fc33d26a27199392dbaccb6afc1dfe89d", "message": "Update based on discussion with Tim.", "committedDate": "2020-01-24T08:24:21Z", "type": "commit"}, {"oid": "aad6d19bea5e08c816a5c3ca8bc7478927ab33a7", "url": "https://github.com/elastic/elasticsearch/commit/aad6d19bea5e08c816a5c3ca8bc7478927ab33a7", "message": "Address feedback for consistent err msg", "committedDate": "2020-01-24T08:43:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2ODA4NA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r371368084", "bodyText": "This last phrase doesn't make sense, I would avoid describing again what order does.", "author": "albertzaharovits", "createdAt": "2020-01-27T17:09:14Z", "path": "x-pack/docs/en/security/authentication/configuring-ldap-realm.asciidoc", "diffHunk": "@@ -21,10 +21,9 @@ However, multiple bind operations might be needed to find the correct user DN.\n \n .. Add a realm configuration of to `elasticsearch.yml` under the\n `xpack.security.authc.realms.ldap` namespace. At a minimum, you must specify\n-the `url` of the LDAP server, and set `user_search.base_dn` to the container DN\n-where the users are searched for.\n-If you are configuring multiple realms, you should also explicitly set the\n-`order` attribute to control the order in which the realms are consulted during \n+the `url` and `order` of the LDAP server, and set `user_search.base_dn` to the\n+container DN where the users are searched for.\n+The `order` attribute to control the order in which the realms are consulted during \n authentication. See <<ref-ldap-settings>> for all of the options you can set for ", "originalCommit": "aad6d19bea5e08c816a5c3ca8bc7478927ab33a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUyMzQ0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r371523449", "bodyText": "Will do thanks", "author": "ywangd", "createdAt": "2020-01-27T22:40:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2ODA4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2ODYwMw==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r371368603", "bodyText": "I would remove\n\nIf you are configuring multiple realms, you must ...\n\naltogether.", "author": "albertzaharovits", "createdAt": "2020-01-27T17:10:21Z", "path": "x-pack/docs/en/security/authentication/configuring-ldap-realm.asciidoc", "diffHunk": "@@ -73,7 +72,7 @@ realms you specify are used for authentication. If you also want to use the\n .. Add a realm configuration to `elasticsearch.yml` in the\n `xpack.security.authc.realms.ldap` namespace. At a minimum, you must specify\n the `url` of the LDAP server, and specify at least one template with the\n-`user_dn_templates` option. If you are configuring multiple realms, you should\n+`user_dn_templates` option. If you are configuring multiple realms, you must\n also explicitly set the `order` attribute to control the order in which the\n realms are consulted during authentication.", "originalCommit": "aad6d19bea5e08c816a5c3ca8bc7478927ab33a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUyMzMzMg==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r371523332", "bodyText": "Somehow missed this occurrence ... Will remove. Thanks", "author": "ywangd", "createdAt": "2020-01-27T22:40:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2ODYwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2OTQ4OA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r371369488", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            that two or more realms have the same `order`, the cluster will fail to start.\n          \n          \n            \n            that two or more realms have the same `order`, the node will fail to start.", "author": "albertzaharovits", "createdAt": "2020-01-27T17:12:03Z", "path": "x-pack/docs/en/security/authentication/custom-realm.asciidoc", "diffHunk": "@@ -89,11 +89,10 @@ under the `xpack.security.authc.realms` namespace.\n You must define your realm within the namespace that matchesto the type defined\n by the extension.\n The options you can set depend on the settings exposed by the custom realm.\n-If you are configuring multiple realms, you should also explicitly set the\n-`order` attribute to control the order in which the realms are consulted during\n-authentication. You should make sure each configured realm has a distinct\n-`order` setting. In the event that two or more realms have the same `order`,\n-they will be processed in realm `name` order.\n+At a minimum, you must explicitly set the `order` attribute to control the\n+order in which the realms are consulted during authentication. You must also\n+make sure each configured realm has a distinct `order` setting. In the event\n+that two or more realms have the same `order`, the cluster will fail to start.", "originalCommit": "aad6d19bea5e08c816a5c3ca8bc7478927ab33a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2OTczNw==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r371369737", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            the cluster will fail to start.\n          \n          \n            \n            the node will fail to start.", "author": "albertzaharovits", "createdAt": "2020-01-27T17:12:32Z", "path": "x-pack/docs/en/security/authentication/realm-chains.asciidoc", "diffHunk": "@@ -5,9 +5,9 @@\n <<realms,Realms>> live within a _realm chain_. It is essentially a prioritized\n list of configured realms (typically of various types). Realms are consulted in\n ascending order (that is to say, the realm with the lowest `order` value is\n-consulted first). You should make sure each configured realm has a distinct\n+consulted first). You must make sure each configured realm has a distinct\n `order` setting. In the event that two or more realms have the same `order`,\n-they are processed in `name` order.\n+the cluster will fail to start.", "originalCommit": "aad6d19bea5e08c816a5c3ca8bc7478927ab33a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "84cb684a91b5ae51c1fa01712e1c528811f620df", "url": "https://github.com/elastic/elasticsearch/commit/84cb684a91b5ae51c1fa01712e1c528811f620df", "message": "Update x-pack/docs/en/security/authentication/custom-realm.asciidoc\n\nCo-Authored-By: Albert Zaharovits <albert.zaharovits@gmail.com>", "committedDate": "2020-01-27T22:39:19Z", "type": "commit"}, {"oid": "4c61828c0a49a28372b95b249afe217505549f64", "url": "https://github.com/elastic/elasticsearch/commit/4c61828c0a49a28372b95b249afe217505549f64", "message": "Update x-pack/docs/en/security/authentication/realm-chains.asciidoc\n\nCo-Authored-By: Albert Zaharovits <albert.zaharovits@gmail.com>", "committedDate": "2020-01-27T22:39:42Z", "type": "commit"}, {"oid": "c264e31ca5ffbf048e478cfb0ba1edc03a9c54f0", "url": "https://github.com/elastic/elasticsearch/commit/c264e31ca5ffbf048e478cfb0ba1edc03a9c54f0", "message": "Address feedback for docs", "committedDate": "2020-01-27T22:41:30Z", "type": "commit"}, {"oid": "43fffa3b1f5fdb979dc1b6676732340ed3f0ca17", "url": "https://github.com/elastic/elasticsearch/commit/43fffa3b1f5fdb979dc1b6676732340ed3f0ca17", "message": "Merge remote-tracking branch 'origin/master' into issue-37614-realm-order", "committedDate": "2020-01-27T22:42:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxNzQ4MA==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r371617480", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The `xpack.security.authc.realms.*.*.order` setting is now required and must be\n          \n          \n            \n            The `xpack.security.authc.realms.{type}.{name}.order` setting is now required and must be", "author": "tvernum", "createdAt": "2020-01-28T05:38:27Z", "path": "docs/reference/migration/migrate_8_0/security.asciidoc", "diffHunk": "@@ -6,6 +6,29 @@\n //Installation and Upgrade Guide\n \n //tag::notable-breaking-changes[]\n+[float]\n+==== The realm `order` setting is required\n+\n+The `xpack.security.authc.realms.*.*.order` setting is now required and must be", "originalCommit": "43fffa3b1f5fdb979dc1b6676732340ed3f0ca17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxODI0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51195#discussion_r371618247", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(\"Found multiple realms configured with the same order: \" + duplicateOrders + \"\");\n          \n          \n            \n                        throw new IllegalArgumentException(\"Found multiple realms configured with the same order: \" + duplicateOrders);", "author": "tvernum", "createdAt": "2020-01-28T05:42:50Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java", "diffHunk": "@@ -305,15 +310,34 @@ public void usageStats(ActionListener<Map<String, Object>> listener) {\n     private void addNativeRealms(List<Realm> realms) throws Exception {\n         Realm.Factory fileRealm = factories.get(FileRealmSettings.TYPE);\n         if (fileRealm != null) {\n+            var realmIdentifier = new RealmConfig.RealmIdentifier(FileRealmSettings.TYPE, \"default_\" + FileRealmSettings.TYPE);\n             realms.add(fileRealm.create(new RealmConfig(\n-                    new RealmConfig.RealmIdentifier(FileRealmSettings.TYPE, \"default_\" + FileRealmSettings.TYPE),\n-                    settings, env, threadContext)));\n+                realmIdentifier,\n+                ensureOrderSetting(settings, realmIdentifier, Integer.MIN_VALUE + 1),\n+                env, threadContext)));\n         }\n         Realm.Factory indexRealmFactory = factories.get(NativeRealmSettings.TYPE);\n         if (indexRealmFactory != null) {\n+            var realmIdentifier = new RealmConfig.RealmIdentifier(NativeRealmSettings.TYPE, \"default_\" + NativeRealmSettings.TYPE);\n             realms.add(indexRealmFactory.create(new RealmConfig(\n-                    new RealmConfig.RealmIdentifier(NativeRealmSettings.TYPE, \"default_\" + NativeRealmSettings.TYPE),\n-                    settings, env, threadContext)));\n+                realmIdentifier,\n+                ensureOrderSetting(settings, realmIdentifier, Integer.MIN_VALUE + 2),\n+                env, threadContext)));\n+        }\n+    }\n+\n+    private Settings ensureOrderSetting(Settings settings, RealmConfig.RealmIdentifier realmIdentifier, int order) {\n+        String orderSettingKey = RealmSettings.realmSettingPrefix(realmIdentifier) + \"order\";\n+        return Settings.builder().put(settings).put(orderSettingKey, order).build();\n+    }\n+\n+    private void checkUniqueOrders(Map<Integer, Set<String>> orderToRealmName) {\n+        String duplicateOrders = orderToRealmName.entrySet().stream()\n+            .filter(entry -> entry.getValue().size() > 1)\n+            .map(entry -> entry.getKey() + \": \" + entry.getValue())\n+            .collect(Collectors.joining(\"; \"));\n+        if (Strings.hasText(duplicateOrders)) {\n+            throw new IllegalArgumentException(\"Found multiple realms configured with the same order: \" + duplicateOrders + \"\");", "originalCommit": "43fffa3b1f5fdb979dc1b6676732340ed3f0ca17", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0614cbc0ef2c82f7b52904d2bf96e82a9f93463b", "url": "https://github.com/elastic/elasticsearch/commit/0614cbc0ef2c82f7b52904d2bf96e82a9f93463b", "message": "Update docs/reference/migration/migrate_8_0/security.asciidoc\n\nCo-Authored-By: Tim Vernum <tim@adjective.org>", "committedDate": "2020-01-28T05:47:22Z", "type": "commit"}, {"oid": "fe13c71c8630380817ddfb2635db20c2127455ea", "url": "https://github.com/elastic/elasticsearch/commit/fe13c71c8630380817ddfb2635db20c2127455ea", "message": "Update x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java\n\nCo-Authored-By: Tim Vernum <tim@adjective.org>", "committedDate": "2020-01-28T05:47:43Z", "type": "commit"}, {"oid": "ad7a1b5442367dfc1f00f85d620d57028f64edf4", "url": "https://github.com/elastic/elasticsearch/commit/ad7a1b5442367dfc1f00f85d620d57028f64edf4", "message": "Merge remote-tracking branch 'origin/master' into issue-37614-realm-order", "committedDate": "2020-01-28T05:50:27Z", "type": "commit"}]}