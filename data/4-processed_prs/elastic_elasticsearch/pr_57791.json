{"pr_number": 57791, "pr_title": "Small improvements to resilience design docs", "pr_createdAt": "2020-06-08T07:37:30Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57791", "timeline": [{"oid": "48b4a72da8d48ee320cde3b0cc5c84ae3a4277a8", "url": "https://github.com/elastic/elasticsearch/commit/48b4a72da8d48ee320cde3b0cc5c84ae3a4277a8", "message": "Small improvements to resilience design docs\n\nA follow-up to #47233 to clarify a few points.", "committedDate": "2020-06-08T07:35:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUwNzc1MA==", "url": "https://github.com/elastic/elasticsearch/pull/57791#discussion_r436507750", "bodyText": "More a requirement than a recommendation; added to the bullet-pointed list so it parallels the next one.", "author": "DaveCTurner", "createdAt": "2020-06-08T07:38:26Z", "path": "docs/reference/high-availability/cluster-design.asciidoc", "diffHunk": "@@ -10,15 +10,12 @@ There is a limit to how small a resilient cluster can be. All {es} clusters\n require:\n \n * One <<modules-discovery-quorums,elected master node>> node\n+* At least one node for each <<modules-node,role>>.\n * At least one copy of every <<scalability,shard>>.\n \n-We also recommend adding a new node to the cluster for each", "originalCommit": "48b4a72da8d48ee320cde3b0cc5c84ae3a4277a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUwODE0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57791#discussion_r436508145", "bodyText": "This is true, but it's not something the user needs to worry about. As long as you have at least three master-eligible nodes Elasticsearch will look after this point automatically.", "author": "DaveCTurner", "createdAt": "2020-06-08T07:39:16Z", "path": "docs/reference/high-availability/cluster-design.asciidoc", "diffHunk": "@@ -10,15 +10,12 @@ There is a limit to how small a resilient cluster can be. All {es} clusters\n require:\n \n * One <<modules-discovery-quorums,elected master node>> node\n+* At least one node for each <<modules-node,role>>.\n * At least one copy of every <<scalability,shard>>.\n \n-We also recommend adding a new node to the cluster for each\n-<<modules-node,role>>.\n+A resilient cluster requires redundancy for every required cluster component.\n+This means a resilient cluster must have:\n \n-A resilient cluster requires redundancy for every required cluster component,\n-except the elected master node. For resilient clusters, we recommend:\n-\n-* One elected master node", "originalCommit": "48b4a72da8d48ee320cde3b0cc5c84ae3a4277a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUwOTAwOA==", "url": "https://github.com/elastic/elasticsearch/pull/57791#discussion_r436509008", "bodyText": "We mention this in the \"larger clusters\" section but it applies to all clusters so I thought it'd help to note it here too.", "author": "DaveCTurner", "createdAt": "2020-06-08T07:41:01Z", "path": "docs/reference/high-availability/cluster-design.asciidoc", "diffHunk": "@@ -27,13 +24,18 @@ A resilient cluster needs three master-eligible nodes so that if one of\n them fails then the remaining two still form a majority and can hold a\n successful election.\n \n-Similarly, node redundancy makes it likely that if a node for a particular role\n-fails, another node can take on its responsibilities.\n+Similarly, redundancy of nodes of each role means that if a node for a\n+particular role fails, another node can take on its responsibilities.\n \n Finally, a resilient cluster should have at least two copies of each shard. If\n-one copy fails then there is another good copy to take over. {es} automatically\n-rebuilds any failed shard copies on the remaining nodes in order to restore the\n-cluster to full health after a failure.\n+one copy fails then there should be another good copy to take over. {es}\n+automatically rebuilds any failed shard copies on the remaining nodes in order\n+to restore the cluster to full health after a failure.\n+\n+Failures temporarily reduce the total capacity of your cluster. In addition,", "originalCommit": "48b4a72da8d48ee320cde3b0cc5c84ae3a4277a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUwOTc2MA==", "url": "https://github.com/elastic/elasticsearch/pull/57791#discussion_r436509760", "bodyText": "Added \"by default\" otherwise it's not true since you can have a green cluster with no replicas. My bad, I think this must have been an incomplete edit.", "author": "DaveCTurner", "createdAt": "2020-06-08T07:42:42Z", "path": "docs/reference/high-availability/cluster-design.asciidoc", "diffHunk": "@@ -60,13 +62,16 @@ To accommodate this, {es} assigns nodes every role by default.\n \n A single node cluster is not resilient. If the the node fails, the cluster will\n stop working. Because there are no replicas in a one-node cluster, you cannot\n-store your data redundantly. However, at least one replica is required for a\n-<<cluster-health,`green` cluster health status>>. To ensure your cluster can\n-report a `green` status, set\n-<<dynamic-index-settings,`index.number_of_replicas`>> to `0` on every index. If\n-the node fails, you may need to restore an older copy of any lost indices from a\n-<<modules-snapshots,snapshot>>. Because they are not resilient to any failures,\n-we do not recommend using one-node clusters in production.\n+store your data redundantly. However, by default at least one replica is", "originalCommit": "48b4a72da8d48ee320cde3b0cc5c84ae3a4277a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}