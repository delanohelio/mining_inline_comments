{"pr_number": 56150, "pr_title": "Ignore any other warnings when detecting Java version", "pr_createdAt": "2020-05-04T19:08:23Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56150", "timeline": [{"oid": "da7117d5bb739e1fc1b555301a52b0ca13f7a190", "url": "https://github.com/elastic/elasticsearch/commit/da7117d5bb739e1fc1b555301a52b0ca13f7a190", "message": "Ignore any other warnings when detecting Java version", "committedDate": "2020-05-04T19:04:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3MzE4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/56150#discussion_r419673186", "bodyText": "Why only the last line? Why do we need to split instead of just checking the length of the entire output being zero?", "author": "rjernst", "createdAt": "2020-05-04T19:26:10Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy", "diffHunk": "@@ -503,7 +503,12 @@ class BuildPlugin implements Plugin<Project> {\n             result.rethrowFailure()\n             result.assertNormalExitValue() // assert exit value in case the failure cause is null\n         }\n-        return (captureStdErr ? stderr : stdout).toString('UTF-8').trim()\n+        String[] lines = (captureStdErr ? stderr : stdout).toString('UTF-8').trim().split('\\n')\n+        if (lines.length == 0) {\n+            throw new GradleException(\"Expected command to produce output but it did not.\")\n+        }\n+\n+        return lines[lines.length - 1]", "originalCommit": "da7117d5bb739e1fc1b555301a52b0ca13f7a190", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4NTE0MA==", "url": "https://github.com/elastic/elasticsearch/pull/56150#discussion_r419685140", "bodyText": "Because the JVM logs warning messages to stderr. What was happening is Jenkins sets JAVA_TOOL_OPTIONS which then results in jshell printing Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 to stderr. We need to ignore any such output and only care about the last thing printed out, which is going to be our script output.", "author": "mark-vieira", "createdAt": "2020-05-04T19:46:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3MzE4Ng=="}], "type": "inlineReview"}]}