{"pr_number": 58787, "pr_title": "Add docs for the fields retrieval API.", "pr_createdAt": "2020-06-30T21:26:38Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58787", "timeline": [{"oid": "c18087beacac6f83fdf2e893b21734cf91dac68f", "url": "https://github.com/elastic/elasticsearch/commit/c18087beacac6f83fdf2e893b21734cf91dac68f", "message": "Add docs for the fields retrieval API.", "committedDate": "2020-06-30T21:47:33Z", "type": "forcePushed"}, {"oid": "fa97ad0707aa6a19c7bac5c60e7f6eda94e063ae", "url": "https://github.com/elastic/elasticsearch/commit/fa97ad0707aa6a19c7bac5c60e7f6eda94e063ae", "message": "Add docs for the fields retrieval API.", "committedDate": "2020-06-30T22:23:57Z", "type": "forcePushed"}, {"oid": "93178158870ecf3660cca8c65c99b93c08fc6e14", "url": "https://github.com/elastic/elasticsearch/commit/93178158870ecf3660cca8c65c99b93c08fc6e14", "message": "Add docs for the fields retrieval API.", "committedDate": "2020-06-30T22:29:34Z", "type": "commit"}, {"oid": "93178158870ecf3660cca8c65c99b93c08fc6e14", "url": "https://github.com/elastic/elasticsearch/commit/93178158870ecf3660cca8c65c99b93c08fc6e14", "message": "Add docs for the fields retrieval API.", "committedDate": "2020-06-30T22:29:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNjUyOA==", "url": "https://github.com/elastic/elasticsearch/pull/58787#discussion_r448016528", "bodyText": "I think if we're going to tell people to use this API we should compare everything to it. In other words, I think this information belongs in a section on _source.", "author": "nik9000", "createdAt": "2020-06-30T22:34:01Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -4,33 +4,203 @@\n \n By default, each hit in the search response includes the document\n <<mapping-source-field,`_source`>>, which is the entire JSON object that was\n-provided when indexing the document. If you only need certain source fields in\n-the search response, you can use the <<source-filtering,source filtering>> to\n-restrict what parts of the source are returned.\n+provided when indexing the document. To retrieve specific fields in the search\n+response, you can use the `fields` parameter:\n \n-Returning fields using only the document source has some limitations:\n+[source,console]\n+----\n+GET /_search\n+{\n+  \"query\": {\n+    \"term\": {\n+      \"user.id\": \"8a4f500d\"\n+    }\n+  },\n+  \"fields\": [\"user.name\", \"timestamp\"],\n+  \"_source\": false\n+}\n+----\n \n-* The `_source` field does not include <<multi-fields, multi-fields>> or\n-<<alias, field aliases>>. Likewise, a field in the source does not contain\n-values copied using the <<copy-to,`copy_to`>> mapping parameter.\n-* Since the `_source` is stored as a single field in Lucene, the whole source\n-object must be loaded and parsed, even if only a small number of fields are\n-needed.\n+The `fields` parameter consults both a document's `_source` and the index\n+mappings to load and return values. Because it makes use of the mappings,\n+`fields` has some advantages over referencing the `_source` directly: it\n+accepts <<multi-fields, multi-fields>> and <<alias, field aliases>>, and", "originalCommit": "93178158870ecf3660cca8c65c99b93c08fc6e14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAyNTQ4OA==", "url": "https://github.com/elastic/elasticsearch/pull/58787#discussion_r448025488", "bodyText": "Could you explain a bit more what you mean here?", "author": "jtibshirani", "createdAt": "2020-06-30T23:00:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNjUyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0MjA5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/58787#discussion_r448042097", "bodyText": "I'm not sure I can express it super well. How would you feel about merging as is and I can open a follow up at some point?", "author": "nik9000", "createdAt": "2020-06-30T23:55:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNjUyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE1NDg4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/58787#discussion_r451154883", "bodyText": "That works for me -- we could also chat offline if it's helpful. I do think that if we advocate always using the fields API, we should stop presenting it as an alternative to _source (and maybe stop returning the _source by default)? We can think about this when considering follow-ups.", "author": "jtibshirani", "createdAt": "2020-07-07T21:30:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNjUyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNzcxOA==", "url": "https://github.com/elastic/elasticsearch/pull/58787#discussion_r448017718", "bodyText": "It is a little sad your API can't fix this in a cleaner way too. Like, if we only had metadata about the _source we could think about it. But, I think, for now this does stay.", "author": "nik9000", "createdAt": "2020-06-30T22:37:22Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -4,33 +4,203 @@\n \n By default, each hit in the search response includes the document\n <<mapping-source-field,`_source`>>, which is the entire JSON object that was\n-provided when indexing the document. If you only need certain source fields in\n-the search response, you can use the <<source-filtering,source filtering>> to\n-restrict what parts of the source are returned.\n+provided when indexing the document. To retrieve specific fields in the search\n+response, you can use the `fields` parameter:\n \n-Returning fields using only the document source has some limitations:\n+[source,console]\n+----\n+GET /_search\n+{\n+  \"query\": {\n+    \"term\": {\n+      \"user.id\": \"8a4f500d\"\n+    }\n+  },\n+  \"fields\": [\"user.name\", \"timestamp\"],\n+  \"_source\": false\n+}\n+----\n \n-* The `_source` field does not include <<multi-fields, multi-fields>> or\n-<<alias, field aliases>>. Likewise, a field in the source does not contain\n-values copied using the <<copy-to,`copy_to`>> mapping parameter.\n-* Since the `_source` is stored as a single field in Lucene, the whole source\n-object must be loaded and parsed, even if only a small number of fields are\n-needed.\n+The `fields` parameter consults both a document's `_source` and the index\n+mappings to load and return values. Because it makes use of the mappings,\n+`fields` has some advantages over referencing the `_source` directly: it\n+accepts <<multi-fields, multi-fields>> and <<alias, field aliases>>, and\n+also formats field values like dates in a consistent way.\n \n-To avoid these limitations, you can:\n+A document's `_source` is stored as a single field in Lucene. So the whole", "originalCommit": "93178158870ecf3660cca8c65c99b93c08fc6e14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAyNDU0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/58787#discussion_r448024547", "bodyText": "It is a little sad your API can't fix this in a cleaner way too.\n\nI also think we should address this, but that it should be a separate change (instead of tackling it in this first cut of the feature).", "author": "jtibshirani", "createdAt": "2020-06-30T22:57:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNzcxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxODQwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/58787#discussion_r448018405", "bodyText": "I think it'd be a little nicer to //TEST[setup:twitter] or something like that so we actually get a real example and the docs tests make sure the output lines up.", "author": "nik9000", "createdAt": "2020-06-30T22:39:38Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -4,33 +4,203 @@\n \n By default, each hit in the search response includes the document\n <<mapping-source-field,`_source`>>, which is the entire JSON object that was\n-provided when indexing the document. If you only need certain source fields in\n-the search response, you can use the <<source-filtering,source filtering>> to\n-restrict what parts of the source are returned.\n+provided when indexing the document. To retrieve specific fields in the search\n+response, you can use the `fields` parameter:\n \n-Returning fields using only the document source has some limitations:\n+[source,console]\n+----\n+GET /_search\n+{\n+  \"query\": {\n+    \"term\": {\n+      \"user.id\": \"8a4f500d\"\n+    }\n+  },\n+  \"fields\": [\"user.name\", \"timestamp\"],\n+  \"_source\": false\n+}\n+----\n \n-* The `_source` field does not include <<multi-fields, multi-fields>> or\n-<<alias, field aliases>>. Likewise, a field in the source does not contain\n-values copied using the <<copy-to,`copy_to`>> mapping parameter.\n-* Since the `_source` is stored as a single field in Lucene, the whole source\n-object must be loaded and parsed, even if only a small number of fields are\n-needed.\n+The `fields` parameter consults both a document's `_source` and the index\n+mappings to load and return values. Because it makes use of the mappings,\n+`fields` has some advantages over referencing the `_source` directly: it\n+accepts <<multi-fields, multi-fields>> and <<alias, field aliases>>, and\n+also formats field values like dates in a consistent way.\n \n-To avoid these limitations, you can:\n+A document's `_source` is stored as a single field in Lucene. So the whole\n+`_source` object must be loaded and parsed even if only a small number of\n+fields are requested. To avoid this limitation, you can try another option for\n+loading fields:\n \n * Use the <<docvalue-fields, `docvalue_fields`>>\n parameter to get values for selected fields. This can be a good\n choice when returning a fairly small number of fields that support doc values,\n such as keywords and dates.\n-* Use the <<request-body-search-stored-fields, `stored_fields`>> parameter to get the values for specific  stored fields. (Fields that use the <<mapping-store,`store`>> mapping option.)\n+* Use the <<request-body-search-stored-fields, `stored_fields`>> parameter to\n+get the values for specific stored fields (fields that use the\n+<<mapping-store,`store`>> mapping option).\n \n-You can find more detailed information on each of these methods in the \n+You can find more detailed information on each of these methods in the\n following sections:\n \n-* <<source-filtering>>\n+* <<search-fields-param>>\n * <<docvalue-fields>>\n * <<stored-fields>>\n+* <<source-filtering>>\n+\n+[discrete]\n+[[search-fields-param]]\n+=== Fields\n+\n+The `fields` parameter allows for retrieving a list of document fields in\n+the search response. It consults both the document `_source` and the index\n+mappings to return each value in a standardized way that matches its mapping\n+type. By default, date fields are formatted according to the\n+<<mapping-date-format,date format>> parameter in their mappings.\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following search request uses the `fields` parameter to retrieve values\n+for the `clientip` field, all fields starting with `location.`, and the\n+`timestamp` field:\n+\n+[source,console]\n+----\n+POST logs-*/_search\n+{\n+  \"query\": {\n+    \"match_all\": {}\n+  },\n+  \"fields\": [\n+    \"clientip\",\n+    \"location.*\", <1>\n+    {\n+      \"field\": \"timestamp\",\n+      \"format\": \"epoch_millis\" <2>\n+    }\n+  ],\n+  \"_source\": false\n+}\n+----\n+\n+<1> Both full field names and wildcard patterns are accepted.\n+<2> Using object notation, you can pass a `format` parameter to apply a custom\n+    format for the field's values. This is currently supported for\n+    <<date,`date` fields>> and <<date_nanos, `date_nanos` fields>>, which\n+    accept a <<mapping-date-format,date format>>.\n+\n+The values are returned as a flat list in the `fields` section in each hit:\n+\n+[source,console-result]\n+----\n+{\n+  \"took\" : 2,\n+  \"timed_out\" : false,\n+  \"_shards\" : {\n+    \"total\" : 1,\n+    \"successful\" : 1,\n+    \"skipped\" : 0,\n+    \"failed\" : 0\n+  },\n+  \"hits\" : {\n+    \"total\" : {\n+      \"value\" : 1,\n+      \"relation\" : \"eq\"\n+    },\n+    \"max_score\" : 1.0,\n+    \"hits\" : [\n+      {\n+        \"_index\" : \"http-logs\",\n+        \"_id\" : \"1\",\n+        \"_score\" : 1.0,\n+        \"fields\" : {\n+          \"clientip\" : [\n+            \"192.0.2.0\"\n+          ],\n+          \"location.city\" : [\n+            \"Toronto\"\n+          ],\n+          \"location.country\" : [\n+            \"Canada\"\n+          ],\n+          \"timestamp\" : [\n+            \"1593274413000\"\n+          ]\n+        }\n+      }\n+    ]\n+  }\n+}\n+----\n+// TESTRESPONSE[skip:no test set-up]", "originalCommit": "93178158870ecf3660cca8c65c99b93c08fc6e14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAyMTcyNg==", "url": "https://github.com/elastic/elasticsearch/pull/58787#discussion_r448021726", "bodyText": "That makes sense, I'll switch to the twitter test set-up.", "author": "jtibshirani", "createdAt": "2020-06-30T22:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxODQwNQ=="}], "type": "inlineReview"}, {"oid": "ffe46b5cce813bdf0d898d01210d5dbf941c73fa", "url": "https://github.com/elastic/elasticsearch/commit/ffe46b5cce813bdf0d898d01210d5dbf941c73fa", "message": "Use the twitter set-up for test snippets.", "committedDate": "2020-07-08T01:00:28Z", "type": "commit"}]}