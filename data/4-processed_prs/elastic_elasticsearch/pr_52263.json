{"pr_number": 52263, "pr_title": "Add S3 integration tests for searchable snapshots", "pr_createdAt": "2020-02-12T14:54:08Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52263", "timeline": [{"oid": "ae0f3b685d43f8ab655bfd0a4452f46e015be659", "url": "https://github.com/elastic/elasticsearch/commit/ae0f3b685d43f8ab655bfd0a4452f46e015be659", "message": "Add S3 integration tests for searchable snapshots", "committedDate": "2020-02-12T14:31:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1NjUwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r378456505", "bodyText": "It's not clear to me why all this is required. We seem to be effectively defining a new test fixture here. Why isn't we can't just use the existing s3-fixture like we do for other tests?\n\n  \n    \n      elasticsearch/plugins/repository-s3/build.gradle\n    \n    \n         Line 217\n      in\n      88ff69b\n    \n    \n    \n    \n\n        \n          \n           testFixtures.useFixture(':test:fixtures:s3-fixture')", "author": "mark-vieira", "createdAt": "2020-02-12T19:12:40Z", "path": "x-pack/plugin/searchable-snapshots/qa/s3/build.gradle", "diffHunk": "@@ -0,0 +1,82 @@\n+import org.elasticsearch.gradle.info.BuildParams\n+\n+import static org.elasticsearch.gradle.PropertyNormalization.IGNORE_VALUE\n+\n+apply plugin: 'elasticsearch.standalone-rest-test'\n+apply plugin: 'elasticsearch.rest-test'\n+apply plugin: 'elasticsearch.test.fixtures'\n+\n+final Project fixture = project(':test:fixtures:s3-fixture')\n+final Project repositoryPlugin = project(':plugins:repository-s3')\n+\n+dependencies {\n+  testCompile project(path: xpackModule('searchable-snapshots'), configuration: 'testArtifacts')\n+  testCompile repositoryPlugin\n+  testCompile fixture\n+}\n+\n+boolean useFixture = false\n+String s3AccessKey = System.getenv(\"amazon_s3_access_key\")\n+String s3SecretKey = System.getenv(\"amazon_s3_secret_key\")\n+String s3Bucket = System.getenv(\"amazon_s3_bucket\")\n+String s3BasePath = System.getenv(\"amazon_s3_base_path\")\n+\n+if (!s3AccessKey && !s3SecretKey && !s3Bucket && !s3BasePath) {\n+  s3AccessKey = 'access_key'\n+  s3SecretKey = 'secret_key'\n+  s3Bucket = 'bucket'\n+  s3BasePath = 'base_path'\n+  useFixture = true\n+\n+} else if (!s3AccessKey || !s3SecretKey || !s3Bucket || !s3BasePath) {\n+  throw new IllegalArgumentException(\"not all options specified to run against external S3 service are present\")\n+}\n+\n+if (useFixture) {\n+  preProcessFixture {\n+    dependsOn fixture.jar\n+    doLast {\n+      file(\"${testFixturesDir}/shared\").mkdirs()", "originalCommit": "ae0f3b685d43f8ab655bfd0a4452f46e015be659", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ2NTI5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r378465299", "bodyText": "This QA test depends on  repository-s3 project which already uses many S3 fixtures and the test fixtures plugin prevented me from reusing the existing one. Since I wanted to avoid any mention to searchables snapshots in open source code I added the current configuration. Do you think there's a better way to do that?", "author": "tlrx", "createdAt": "2020-02-12T19:28:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1NjUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MDI0NA==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r378470244", "bodyText": "I would define a separate service in the s3-fixture compose file to be used here.", "author": "mark-vieira", "createdAt": "2020-02-12T19:38:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1NjUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcyMzY4OA==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r378723688", "bodyText": "I would define a separate service in the s3-fixture compose file to be used here.\n\nSorry if I wasn't clear, I tried this solution and got a failure. Before doing what is coded in this PR I tried to define a separate service in the /test/fixtures/s3-fixture/docker-compose.yml file:\n...\n  s3-fixture-generic:\n    build:\n      context: .\n      args:\n        fixtureClass: fixture.s3.S3HttpFixture\n        port: 80\n        bucket: \"bucket\"\n        basePath: \"base_path\"\n        accessKey: \"access_key\"\n      dockerfile: ./testfixtures_shared/shared/Dockerfile\n    volumes:\n      - ./testfixtures_shared/shared:/fixture/shared\n    ports:\n      - \"80\"\nand tried to declare the usage of this fixture in the qa:s3 build file like this:\nif (useFixture) {\n  testFixtures.useFixture(':test:fixtures:s3-fixture', 's3-fixture-generic')\n}\nBut it failed with the following error:\nBuild file '/x-pack/plugin/searchable-snapshots/qa/s3/build.gradle' line: 36\n\n* What went wrong:\nA problem occurred evaluating project ':x-pack:plugin:searchable-snapshots:qa:s3'.\n> Projects :plugins:repository-s3 and :x-pack:plugin:searchable-snapshots:qa:s3 both claim all services from :test:fixtures:s3-fixture. This is not supported because it breaks running in parallel. Configure specific services in docker-compose.yml for each and add the service name to `useFixture`\n\nIn order to allow parallel test execution and to try to reuse as much as possible the existing code, I went with declaring a docker-compose.yml file in this qa:s3project that reuses the existing DockerFile and code from the test fixture.", "author": "tlrx", "createdAt": "2020-02-13T08:54:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1NjUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2MjYxNw==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r379162617", "bodyText": "Understood. The problem here is that :plugins:repository-s3 declares testFixtures.useFixture(':test:fixtures:s3-fixture') which means \"give me all services of the s3-fixture project. If we add a new service which that project doesn't need, we now need to be explicit say exactly which services it does need. So you'll need to modify that build script and call useFixture(':test:fixtures:s3-fixture', 's3-fixture') and so on for each service required in the compose yaml.\nI apologize for the back and forth, I just want to avoid us reimplementing a bunch of logic that our test fixtures plugin does for us if possible.", "author": "mark-vieira", "createdAt": "2020-02-13T22:47:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1NjUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM0NDUxNg==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r379344516", "bodyText": "The problem here is that :plugins:repository-s3 declares testFixtures.useFixture(':test:fixtures:s3-fixture')\n\nThanks for spotting this @mark-vieira, I should have seen it by myself. I pushed 331408a to correct the fixtures.\n\nI apologize for the back and forth, I just want to avoid us reimplementing a bunch of logic that our test fixtures plugin does for us if possible.\n\nNothing to apologize, I pinged you because I was suspecting something wrong and you spotted it \ud83d\udc4d. I'm happy to not add another docker-compose.yml file to the mix :)", "author": "tlrx", "createdAt": "2020-02-14T10:03:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1NjUwNQ=="}], "type": "inlineReview"}, {"oid": "331408ad382e2dbebb50d4b7f7de204b54e5a913", "url": "https://github.com/elastic/elasticsearch/commit/331408ad382e2dbebb50d4b7f7de204b54e5a913", "message": "apply feedback", "committedDate": "2020-02-14T10:00:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwODEwOA==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r379608108", "bodyText": "Does the s3-fixture actually need to be on the test classpath? As far as I can tell there are not references to that code and the fixture is just something running in a Docker container which we talk to over an API.", "author": "mark-vieira", "createdAt": "2020-02-14T19:34:15Z", "path": "x-pack/plugin/searchable-snapshots/qa/s3/build.gradle", "diffHunk": "@@ -0,0 +1,69 @@\n+import org.elasticsearch.gradle.info.BuildParams\n+\n+import static org.elasticsearch.gradle.PropertyNormalization.IGNORE_VALUE\n+\n+apply plugin: 'elasticsearch.standalone-rest-test'\n+apply plugin: 'elasticsearch.rest-test'\n+\n+final Project fixture = project(':test:fixtures:s3-fixture')\n+final Project repositoryPlugin = project(':plugins:repository-s3')\n+\n+dependencies {\n+  testCompile project(path: xpackModule('searchable-snapshots'), configuration: 'testArtifacts')\n+  testCompile repositoryPlugin\n+  testCompile fixture", "originalCommit": "331408ad382e2dbebb50d4b7f7de204b54e5a913", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0ODUzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r380048535", "bodyText": "Good catch, I removed this dep", "author": "tlrx", "createdAt": "2020-02-17T08:50:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwODEwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwODcyOA==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r379608728", "bodyText": "Is this filter strictly required? This opens up potential issues with test cases referencing other classes in the test source set that don't match this pattern and causing things to explode at runtime.", "author": "mark-vieira", "createdAt": "2020-02-14T19:35:40Z", "path": "x-pack/plugin/searchable-snapshots/build.gradle", "diffHunk": "@@ -27,3 +27,17 @@ gradle.projectsEvaluated {\n     .findAll { it.path.startsWith(project.path + \":qa\") }\n     .each { check.dependsOn it.check }\n }\n+\n+configurations {\n+  testArtifacts.extendsFrom testRuntime\n+}\n+\n+task testJar(type: Jar) {\n+  appendix 'test'\n+  from sourceSets.test.output\n+  include '**/*TestCase.class'", "originalCommit": "331408ad382e2dbebb50d4b7f7de204b54e5a913", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0ODY0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r380048649", "bodyText": "Good catch again, thanks", "author": "tlrx", "createdAt": "2020-02-17T08:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwODcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwODk2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r379608961", "bodyText": "Perhaps s3-fixture-searchable-snapshots?", "author": "mark-vieira", "createdAt": "2020-02-14T19:36:11Z", "path": "test/fixtures/s3-fixture/docker-compose.yml", "diffHunk": "@@ -15,6 +15,21 @@ services:\n     ports:\n       - \"80\"\n \n+  s3-fixture-other:", "originalCommit": "331408ad382e2dbebb50d4b7f7de204b54e5a913", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0ODkxMg==", "url": "https://github.com/elastic/elasticsearch/pull/52263#discussion_r380048912", "bodyText": "I prefer to not mention searchable snapshots in open source code, so I'll keep \"other\" if that's ok for you.", "author": "tlrx", "createdAt": "2020-02-17T08:50:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwODk2MQ=="}], "type": "inlineReview"}, {"oid": "b83512dd616473336abc2fa806a80630b2a50e58", "url": "https://github.com/elastic/elasticsearch/commit/b83512dd616473336abc2fa806a80630b2a50e58", "message": "apply feedback", "committedDate": "2020-02-17T08:49:18Z", "type": "commit"}]}