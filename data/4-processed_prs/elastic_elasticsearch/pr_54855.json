{"pr_number": 54855, "pr_title": "Update docs to reflect node.processors", "pr_createdAt": "2020-04-07T02:40:43Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54855", "timeline": [{"oid": "dfefe4c3c6d77907e0508fd0f92dc7ca7093760f", "url": "https://github.com/elastic/elasticsearch/commit/dfefe4c3c6d77907e0508fd0f92dc7ca7093760f", "message": "Update docs to reflect node.processors\n\nWe namespaced the previous setting \"processors\" into\n\"node.processors\". This commit updates some of the documentation to\nreflect this.", "committedDate": "2020-04-07T02:38:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1ODEwMA==", "url": "https://github.com/elastic/elasticsearch/pull/54855#discussion_r404958100", "bodyText": "Looks like we missed one here.", "author": "mark-vieira", "createdAt": "2020-04-07T16:46:02Z", "path": "docs/reference/modules/threadpool.asciidoc", "diffHunk": "@@ -145,27 +145,28 @@ thread_pool:\n The number of processors is automatically detected, and the thread pool\n settings are automatically set based on it. In some cases it can be\n useful to override the number of detected processors. This can be done\n-by explicitly setting the `processors` setting.\n+by explicitly setting the `node.processors` setting.\n \n [source,yaml]\n --------------------------------------------------\n-processors: 2\n+node.processors: 2\n --------------------------------------------------\n \n-There are a few use-cases for explicitly overriding the `processors`\n+There are a few use-cases for explicitly overriding the `node.processors`\n setting:\n \n-. If you are running multiple instances of {es} on the same host but want {es}\n-to size its thread pools as if it only has a fraction of the CPU, you should\n-override the `processors` setting to the desired fraction, for example, if\n-you're running two instances of {es} on a 16-core machine, set `processors` to 8.\n-Note that this is an expert-level use case and there's a lot more involved\n-than just setting the `processors` setting as there are other considerations\n-like changing the number of garbage collector threads, pinning processes to\n-cores, and so on.\n+. If you are running multiple instances of {es} on the same host but\n+want {es} to size its thread pools as if it only has a fraction of the\n+CPU, you should override the `node.processors` setting to the desired\n+fraction, for example, if you're running two instances of {es} on a\n+16-core machine, set `node.processors` to 8.  Note that this is an\n+expert-level use case and there's a lot more involved than just setting\n+the `processors` setting as there are other considerations like changing", "originalCommit": "dfefe4c3c6d77907e0508fd0f92dc7ca7093760f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2NDU5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54855#discussion_r404964595", "bodyText": "Thanks, got it now.", "author": "jasontedor", "createdAt": "2020-04-07T16:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1ODEwMA=="}], "type": "inlineReview"}, {"oid": "75c7b7b7583409d8677454f91d8ace877643feb9", "url": "https://github.com/elastic/elasticsearch/commit/75c7b7b7583409d8677454f91d8ace877643feb9", "message": "Fix missing instance of node.processors", "committedDate": "2020-04-07T16:53:37Z", "type": "commit"}]}