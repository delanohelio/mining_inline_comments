{"pr_number": 62539, "pr_title": "EQL: Replace ?\"...\" with \"\"\"...\"\"\" for unescaped strings", "pr_createdAt": "2020-09-17T12:44:38Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62539", "timeline": [{"oid": "32e85fd2d94625dba4606ea92b53edfd5d0beb3d", "url": "https://github.com/elastic/elasticsearch/commit/32e85fd2d94625dba4606ea92b53edfd5d0beb3d", "message": "EQL: Replace ?\"...\" with \"\"\"...\"\"\" for unescaped strings\n\nUse triple doulbe quotes enclosing a string literal to interpret it\nas unescaped, in order to use `?` for marking query params and avoid\nuser confusion.\n\nRelates to #61659", "committedDate": "2020-09-17T12:40:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIyNTkwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r490225905", "bodyText": "This is incorrect - in case of ?' the error message is invalid - it tells that double quotes should be used which is not the case.\nIn fact I would argue that since the string is always quoted, if it starts with ? an exception should be thrown regardless of what follows it.", "author": "costin", "createdAt": "2020-09-17T13:03:17Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/parser/AbstractBuilder.java", "diffHunk": "@@ -122,10 +122,18 @@ public static String unquoteString(Source source) {\n             return null;\n         }\n \n-        // unescaped strings can be interpreted directly\n+        // catch old method of ?\" and ?' to define unescaped strings\n         if (text.startsWith(\"?\")) {\n             checkForSingleQuotedString(source, text, 1);", "originalCommit": "32e85fd2d94625dba4606ea92b53edfd5d0beb3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzODg3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r490238873", "bodyText": "That's true, It's a 2-step error for the user: ?' -> ?\" -> \"\"\". I just thought that explicitly handling the single quotes (no matter of the preceding ?) was a \"better\" approach. I'll gladly change it.", "author": "matriv", "createdAt": "2020-09-17T13:21:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIyNTkwNQ=="}], "type": "inlineReview"}, {"oid": "480aac541623a84d13ef7445a102067c381c8239", "url": "https://github.com/elastic/elasticsearch/commit/480aac541623a84d13ef7445a102067c381c8239", "message": "change error message", "committedDate": "2020-09-17T13:29:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzMTMxNg==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r490431316", "bodyText": "Looks like ' needs to be escaped under this format.\nI also have some questions about the desired behavior of triple double quotes:\nHow would each of these be interpreted? I think we should know our edge cases up front. I'm wondering what the implication is for \" at the beginning or at the end of a string. And how many of them are supported\n\n\"\"\"\"\"\"\n\"\"\"\"\"x\"\"\"\n\"\"\"x\"\"\"\"\"\n\"\"\"\"\"\"\"\"", "author": "rw-access", "createdAt": "2020-09-17T17:22:49Z", "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -195,6 +195,7 @@ STRING\n     | '\"'   ('\\\\' [btnfr\"'\\\\] | ~[\\r\\n\"\\\\])* '\"'\n     | '?\"'  ('\\\\\"' |~[\"\\r\\n])* '\"'\n     | '?\\'' ('\\\\\\'' |~['\\r\\n])* '\\''\n+    | '\"\"\"' ('\\\\\\'' |~['\\r\\n])* '\"\"\"'", "originalCommit": "480aac541623a84d13ef7445a102067c381c8239", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc5NTcyMg==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r490795722", "bodyText": "Looks like ' needs to be escaped under this format.\n\nCorrect, I rushed and overlooked that.\n\nI also have some questions about the desired behavior of triple double quotes:\nHow would each of these be interpreted? I think we should know our edge cases up front. I'm wondering what the implication is for \" at the beginning or at the end of a string. And how many of them are supported\n\n\"\"\"\"\"\"\n\"\"\"\"\"x\"\"\"\n\"\"\"x\"\"\"\"\"\n\"\"\"\"\"\"\"\"\n\n\nThe extra \" in the beginning or end of the string would be part of the final string:\n\n`` -> empty string\n\"\"x\nx\"\"\n\"\"", "author": "matriv", "createdAt": "2020-09-18T08:44:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzMTMxNg=="}], "type": "inlineReview"}, {"oid": "356cabf300b9832fd8830050be033bc329db22ab", "url": "https://github.com/elastic/elasticsearch/commit/356cabf300b9832fd8830050be033bc329db22ab", "message": "Merge remote-tracking branch 'upstream/master' into replace-unescaped-triple-doublequotes", "committedDate": "2020-09-18T09:44:10Z", "type": "commit"}, {"oid": "374bc92ec5d9c2d7e62fd3bf985bce862b83df6e", "url": "https://github.com/elastic/elasticsearch/commit/374bc92ec5d9c2d7e62fd3bf985bce862b83df6e", "message": "fix escaped '", "committedDate": "2020-09-18T10:25:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk4NTQxMA==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r490985410", "bodyText": "This sttill doesn't seem right and needs more tests.\nUnder this regex, you start and end with \"\"\", but you can't have any ' characters in between. In addition, you can have an infinite number of \" characters. This would mean \"\"\"\"\"\"\"\"\"\"\"\"\"\"\" is valid syntax. But I'm not sure that's good behavior.", "author": "rw-access", "createdAt": "2020-09-18T14:23:14Z", "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -199,6 +199,7 @@ STRING\n     | '\"'   ('\\\\' [btnfr\"'\\\\] | ~[\\r\\n\"\\\\])* '\"'\n     | '?\"'  ('\\\\\"' |~[\"\\r\\n])* '\"'\n     | '?\\'' ('\\\\\\'' |~['\\r\\n])* '\\''\n+    | '\"\"\"' ('\\\\\"' |~['\\r\\n])* '\"\"\"'", "originalCommit": "374bc92ec5d9c2d7e62fd3bf985bce862b83df6e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ae7d4ed9d94fdf34566de04f6e5888c624a6e796", "url": "https://github.com/elastic/elasticsearch/commit/ae7d4ed9d94fdf34566de04f6e5888c624a6e796", "message": "add more tests", "committedDate": "2020-09-28T15:21:58Z", "type": "commit"}, {"oid": "b32a3831c9da38119c790a6d7de57e99e1af9e19", "url": "https://github.com/elastic/elasticsearch/commit/b32a3831c9da38119c790a6d7de57e99e1af9e19", "message": "Merge remote-tracking branch 'upstream/master' into replace-unescaped-triple-doublequotes", "committedDate": "2020-09-28T15:23:42Z", "type": "commit"}, {"oid": "fec23cef7afd30d79a66b206ab841976c38c8a14", "url": "https://github.com/elastic/elasticsearch/commit/fec23cef7afd30d79a66b206ab841976c38c8a14", "message": "fix tests", "committedDate": "2020-09-28T15:40:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA1NTk4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r496055981", "bodyText": "how is \"\"\"hello\"\"\" == \"\"\"world\"\"\" interpreted?\nit should be equivalent to this expression Equals(\"hello\", \"world):\n\"hello\" == \"world\"", "author": "rw-access", "createdAt": "2020-09-28T15:50:38Z", "path": "x-pack/plugin/eql/src/test/java/org/elasticsearch/xpack/eql/parser/ExpressionTests.java", "diffHunk": "@@ -99,18 +103,52 @@ public void testDoubleQuotedString() {\n \n     public void testSingleQuotedUnescapedStringDisallowed() {\n         ParsingException e = expectThrows(ParsingException.class, () -> expr(\"?'hello world'\"));\n-        assertEquals(\"line 1:2: Use double quotes [\\\"] to define string literals, not single quotes [']\",\n+        assertEquals(\"line 1:2: Use triple double quotes [\\\"\\\"\\\"] to define unescaped string literals, not [?']\",\n                 e.getMessage());\n-        e = expectThrows(ParsingException.class, () -> parser.createStatement(\"process where name==?'hello world'\"));\n-        assertEquals(\"line 1:22: Use double quotes [\\\"] to define string literals, not single quotes [']\",\n+        e = expectThrows(ParsingException.class, () -> parser.createStatement(\"process where name == ?'hello world'\"));\n+        assertEquals(\"line 1:24: Use triple double quotes [\\\"\\\"\\\"] to define unescaped string literals, not [?']\",\n                 e.getMessage());\n     }\n \n-    public void testDoubleQuotedUnescapedString() {\n-        // \"hello \\\" world\"\n-        Expression parsed = expr(\"?\\\"hello \\\\\\\" world!\\\"\");\n-        Expression expected = new Literal(null, \"hello \\\\\\\" world!\", DataTypes.KEYWORD);\n-        assertEquals(expected, parsed);\n+    public void testDoubleQuotedUnescapedStringForbidden() {\n+        ParsingException e = expectThrows(ParsingException.class, () -> expr(\"?\\\"hello world\\\"\"));\n+        assertEquals(\"line 1:2: Use triple double quotes [\\\"\\\"\\\"] to define unescaped string literals, not [?\\\"]\",\n+                e.getMessage());\n+        e = expectThrows(ParsingException.class, () -> parser.createStatement(\"process where name == ?\\\"hello world\\\"\"));\n+        assertEquals(\"line 1:24: Use triple double quotes [\\\"\\\"\\\"] to define unescaped string literals, not [?\\\"]\",\n+                e.getMessage());\n+    }\n+\n+    public void testTripleDoubleQuotedUnescapedString() {", "originalCommit": "fec23cef7afd30d79a66b206ab841976c38c8a14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2NTI4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r496065282", "bodyText": "I can add a test for that", "author": "matriv", "createdAt": "2020-09-28T16:04:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA1NTk4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA1NzAxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r496057011", "bodyText": "This shouldn't need to forbid ' inside the string.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                | '\"\"\"' (~['\\r\\n])* '\"\"\"'\n          \n          \n            \n                | '\"\"\"' (~[\\r\\n])* '\"\"\"'", "author": "rw-access", "createdAt": "2020-09-28T15:52:00Z", "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -200,6 +200,7 @@ STRING\n     | '\"'   ('\\\\' [btnfr\"'\\\\] | ~[\\r\\n\"\\\\])* '\"'\n     | '?\"'  ('\\\\\"' |~[\"\\r\\n])* '\"'\n     | '?\\'' ('\\\\\\'' |~['\\r\\n])* '\\''\n+    | '\"\"\"' (~['\\r\\n])* '\"\"\"'", "originalCommit": "fec23cef7afd30d79a66b206ab841976c38c8a14", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "af8ca3dd4d6206187c2f80bce3714dfd1a4d941c", "url": "https://github.com/elastic/elasticsearch/commit/af8ca3dd4d6206187c2f80bce3714dfd1a4d941c", "message": "Try to allow \"\"\" with one escapedwq", "committedDate": "2020-09-29T16:47:47Z", "type": "commit"}, {"oid": "3ada21037537e3a66a1aa4f05b9cd7e72bbad658", "url": "https://github.com/elastic/elasticsearch/commit/3ada21037537e3a66a1aa4f05b9cd7e72bbad658", "message": "Merge remote-tracking branch 'upstream/master' into replace-unescaped-triple-doublequotes", "committedDate": "2020-10-01T09:33:15Z", "type": "commit"}, {"oid": "a8f4cbb9c9645573f945e3c9ddac7f89d489a48f", "url": "https://github.com/elastic/elasticsearch/commit/a8f4cbb9c9645573f945e3c9ddac7f89d489a48f", "message": "Use Python approach", "committedDate": "2020-10-01T16:44:27Z", "type": "commit"}, {"oid": "60e1b4e87bb7dd58123b4bc1c586357ee68cf748", "url": "https://github.com/elastic/elasticsearch/commit/60e1b4e87bb7dd58123b4bc1c586357ee68cf748", "message": "Merge remote-tracking branch 'upstream/master' into replace-unescaped-triple-doublequotes", "committedDate": "2020-10-01T16:44:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498385537", "bodyText": "I think this could really come to bite us. Mostly because it means that a raw string is not a raw string. With this, there's no way to express a literal \\\" anywhere in the string.\nThis branch allows a literal \\\":\nmatriv/elasticsearch@replace-unescaped-triple-doublequotes...rw-access:raw-string-changes", "author": "rw-access", "createdAt": "2020-10-01T16:51:13Z", "path": "x-pack/plugin/eql/src/main/antlr/EqlBase.g4", "diffHunk": "@@ -200,6 +200,7 @@ STRING\n     | '\"'   ('\\\\' [btnfr\"'\\\\] | ~[\\r\\n\"\\\\])* '\"'\n     | '?\"'  ('\\\\\"' |~[\"\\r\\n])* '\"'\n     | '?\\'' ('\\\\\\'' |~['\\r\\n])* '\\''\n+    | '\"\"\"' ('\\\\\"' |~[\\r\\n])*? '\"\"\"'", "originalCommit": "60e1b4e87bb7dd58123b4bc1c586357ee68cf748", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4OTgyNg==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498389826", "bodyText": "This grammar has other issues:\n\"\"\"\"\"hello\\\"\"\"world!\\\"\"\"\" == \"\"\"\"foo\"\\\"\"bar\"\"\\\"\"\"\"\n\n=>\norg.elasticsearch.xpack.eql.parser.ParsingException: line 1:21: token recognition error at: '!\\'\n\nand with the proposed solution you can have a \\\" literal if you double escape it \\\\\"", "author": "matriv", "createdAt": "2020-10-01T16:58:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM5NzM2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498397361", "bodyText": "We could replace \\\" with \" only if part of an escaped triple double quote sequence, but I think that produces more confusion for a user.", "author": "matriv", "createdAt": "2020-10-01T17:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU5NDIxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498594219", "bodyText": "but it should give that syntax error because it's invalid syntax. the string was completed after seeing \"\"\".\nthat sounds like the correct behavior. If we introduce any escapes at all we defeat the purpose of this being a raw string, and require some potentially complex parsing logic and strange edge cases. although I don't think we should stop immediately when seeing \"\"\" because then a string can't end with \"\"\". we could process a few more quotes after without issue.  then a string will be able to end with quotes, too.", "author": "rw-access", "createdAt": "2020-10-02T02:24:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY5NTc2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498695763", "bodyText": "\"\"\"\"\"hello\\\"\"\"world!\\\"\"\"\" it's a valid syntax, it has a closing \"\"\".\nThe previous ?\" couldn't accept any \" and every \" should be escaped.\nWith this approach we only need to escape a \"\"\" which is very rare to occur.", "author": "matriv", "createdAt": "2020-10-02T08:50:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY5NzUyMg==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498697522", "bodyText": "but at the same time... Doesn't this make it impossible to end a string with a backslash? Or to end with an unescaped quote? it also means \\\" will be interpreted as \" so you have to do \\\\\" to literally express that, which seems surprising given the expectation that the string is raw.\ndoesn't seem worth the trade-off.", "author": "rw-access", "createdAt": "2020-10-02T08:54:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcwMDUyOA==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498700528", "bodyText": "the thing I'm the most concerned with -- escape sequences mean that you could paste a string that doesn't contain \"\"\" between two sets of \"\"\" and there's a decent chance that it is accepted but matches something entirely different, if it contains a \\\" anywhere in the original text. I just think that the \\\" escape sequence makes the behavior awkward and has a net negative effect on \"\"\" strings, mostly because it means they aren't actually raw anymore.", "author": "rw-access", "createdAt": "2020-10-02T09:00:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcwODMzMw==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498708333", "bodyText": "I wonder if this is also an edge case:\nhow do these compare? I think with the current pattern with the \\\" escape, the first one is valid syntax but the second one is not? which means the interpretation of a string depends if there's another \"\"\" later in the source text.\n\"\"\"my raw string\\\"\"\" == \"abc\"\n\"\"\"my raw string\\\"\"\" == \"\"\"abc\"\"\"", "author": "rw-access", "createdAt": "2020-10-02T09:15:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxMDU0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498710542", "bodyText": "", "author": "rw-access", "createdAt": "2020-10-02T09:20:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNzUzOA==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498717538", "bodyText": "I can't think of a better solution myself. The \" is something you need to escape even with the current syntax of ?\".\nThe current proposal with \"\"\" allows to have unescaped \" within the string apart from the last char where it needs to be escaped. Using another character to escape \" like double \"\" won't work and to my eyes seems more weird for a raw string. I think I have exhaustive examples now in the tests, so I'm happy if you want to also try with different patterns in the grammar if we can end up with some better behaviour.", "author": "matriv", "createdAt": "2020-10-02T09:35:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNDU1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498724555", "bodyText": "There are a number of issues at hand:\n\n\" is a common character. To avoid escaping it too often, the raw string relies on 3 triple quotes \"\"\". This however can become a problem at the end of the raw string where a trailing \" can mess up quoting\n\" are allowed inside and can be escaped to avoid closing a string \"\"\" through \\. This again is it occurs at the end of the string.\n\nTo wit:\n\n\"\"\" dir \"c:\\dir\"\"\"\" <-- 4 ending quotes\n\"\"\" dir c:\\dir\\\"\"\"  <-- \\ escapes the \"\"\"\n\nDue to file paths on windows 2, aka \\\" is likely a common occurrence.\nI see several options to solve this:\nA. Require raw strings to not end with \" and advice folks to add a space for example:\n\"\"\" dir \"c:\\dir\" \"\"\"\nB. Use a different escape character from \\, say |. It solves 2 but not 1.\nC. Do not allow escaping inside raw strings. This solves 2 but not 1.\nD. Use a different set for quoting characters. Say \"?\"\"and\"\"?`. However this does not solve the problem, rather just minimizes the occurrences in which they appear. Which might be a win in itself.\nConsidering \\ is traditionally used for escaping and in Window paths, I have a preference for C over B. That's because introducing a new character for escaping is surprising and might backfire again depending on the raw string .\nB however mean that one cannot escape \"\"\" inside a raw string but then for that there's the regular string definition. Unfortunately this doesn't solve 1 either...", "author": "costin", "createdAt": "2020-10-02T09:50:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODI2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498728267", "bodyText": "A. I thing introducing a mandatory whitespace can lead to other issues, and is it only one space? what happens with more spaces, we keep all but one?, or with tabs?\nB. I also don't like a new escape char, doesn't address the main issue no1.\nD. I definitely don't like D since it still contains the ? char which usually refers to regex or query param.\nC. I'm ok with C so if a user needs to escape chars or needs a \"\"\", he/she has to resort to the normal \".....\" syntax and properly escape what's needed.", "author": "matriv", "createdAt": "2020-10-02T09:58:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyOTI4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498729289", "bodyText": "option E:\nAllow for two optional additional trailing quotes with no escape sequences. then you can solve the trailing quotes issue without escapes.\nThe string can't contain \"\"\" anywhere inside.  If you ever need to write a string with that sequence, a raw string is insufficient, so users will need to switch to a traditional escaped \" string.\n\"\"\"[^\\r\\n]*?\"\"\"\"?\"?\n\n\nand it doesn't suffer from these contextual issues with \\\"", "author": "rw-access", "createdAt": "2020-10-02T10:00:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMjkwMA==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498732900", "bodyText": "confirmed that \"\"\" isn't allowed anywhere in the string but \"\" is;", "author": "rw-access", "createdAt": "2020-10-02T10:08:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1NDc0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/62539#discussion_r498754746", "bodyText": "@rw-access I'm also happy with that, pushed the change and fixed all relevant tests.", "author": "matriv", "createdAt": "2020-10-02T11:00:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4NTUzNw=="}], "type": "inlineReview"}, {"oid": "822d494fe7f5007880daa790c044bb33e4d78c91", "url": "https://github.com/elastic/elasticsearch/commit/822d494fe7f5007880daa790c044bb33e4d78c91", "message": "Merge remote-tracking branch 'upstream/master' into replace-unescaped-triple-doublequotes", "committedDate": "2020-10-01T16:53:44Z", "type": "commit"}, {"oid": "23ffe1f21a9bb572cae65253078fe06a43a70f40", "url": "https://github.com/elastic/elasticsearch/commit/23ffe1f21a9bb572cae65253078fe06a43a70f40", "message": "Merge remote-tracking branch 'upstream/master' into replace-unescaped-triple-doublequotes", "committedDate": "2020-10-02T09:37:03Z", "type": "commit"}, {"oid": "f838bc255660064effe3c50e1e7507d8aceb4385", "url": "https://github.com/elastic/elasticsearch/commit/f838bc255660064effe3c50e1e7507d8aceb4385", "message": "Disallow any triple double quote sequence and everything is raw", "committedDate": "2020-10-02T10:59:41Z", "type": "commit"}]}