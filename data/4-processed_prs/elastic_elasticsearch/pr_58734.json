{"pr_number": 58734, "pr_title": "Implement pseudo Huber loss (PseudoHuber) evaluation metric for regression analysis", "pr_createdAt": "2020-06-30T11:47:56Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58734", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY1NTgwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/58734#discussion_r447655801", "bodyText": "This comment is incorrect", "author": "benwtrent", "createdAt": "2020-06-30T12:49:28Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/ml/dataframe/evaluation/regression/PseudoHuberMetric.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.elasticsearch.client.ml.dataframe.evaluation.regression;\n+\n+import org.elasticsearch.client.ml.dataframe.evaluation.EvaluationMetric;\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+\n+import java.io.IOException;\n+import java.util.Objects;\n+\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.constructorArg;\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.optionalConstructorArg;\n+\n+/**\n+ * Calculates the mean squared error between two known numerical fields.\n+ *\n+ * equation: msle = 1/n * \u03a3(log(y + offset) - log(y\u00b4 + offset))^2\n+ * where offset is used to make sure the argument to log function is always positive\n+ */", "originalCommit": "f47462870d6d375625e00e5b4e0230db2cf94eea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNzk0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/58734#discussion_r448127949", "bodyText": "Done.", "author": "przemekwitek", "createdAt": "2020-07-01T05:45:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY1NTgwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNzc1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/58734#discussion_r447737759", "bodyText": "incorrect comment", "author": "benwtrent", "createdAt": "2020-06-30T14:41:13Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/evaluation/regression/PseudoHuber.java", "diffHunk": "@@ -0,0 +1,194 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ml.dataframe.evaluation.regression;\n+\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.collect.Tuple;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.script.Script;\n+import org.elasticsearch.search.aggregations.AggregationBuilder;\n+import org.elasticsearch.search.aggregations.AggregationBuilders;\n+import org.elasticsearch.search.aggregations.Aggregations;\n+import org.elasticsearch.search.aggregations.PipelineAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.NumericMetricsAggregation;\n+import org.elasticsearch.xpack.core.ml.dataframe.evaluation.EvaluationMetric;\n+import org.elasticsearch.xpack.core.ml.dataframe.evaluation.EvaluationMetricResult;\n+import org.elasticsearch.xpack.core.ml.dataframe.evaluation.EvaluationParameters;\n+\n+import java.io.IOException;\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.optionalConstructorArg;\n+import static org.elasticsearch.xpack.core.ml.dataframe.evaluation.MlEvaluationNamedXContentProvider.registeredMetricName;\n+\n+/**\n+ * Calculates the mean squared error between two known numerical fields.\n+ *\n+ * equation: mse = 1/n * \u03a3(y - y\u00b4)^2\n+ */", "originalCommit": "f47462870d6d375625e00e5b4e0230db2cf94eea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNzg0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/58734#discussion_r448127841", "bodyText": "Ooops, done.", "author": "przemekwitek", "createdAt": "2020-07-01T05:44:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNzc1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczOTE1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58734#discussion_r447739156", "bodyText": "would be good to have a test here that adjusts the delta.", "author": "benwtrent", "createdAt": "2020-06-30T14:43:11Z", "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/ml/evaluate_data_frame.yml", "diffHunk": "@@ -868,6 +869,27 @@ setup:\n   - match: { regression.mean_squared_logarithmic_error.error: 0.08680568028334916 }\n   - is_false: regression.mean_squared_error.value\n   - is_false: regression.r_squared.value\n+  - is_false: regression.pseudo_huber.value\n+---\n+\"Test regression pseudo_huber\":\n+  - do:\n+      ml.evaluate_data_frame:\n+        body: >\n+          {\n+            \"index\": \"utopia\",\n+            \"evaluation\": {\n+              \"regression\": {\n+                \"actual_field\": \"regression_field_act\",\n+                \"predicted_field\": \"regression_field_pred\",\n+                \"metrics\": { \"pseudo_huber\": {} }", "originalCommit": "f47462870d6d375625e00e5b4e0230db2cf94eea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyODA0MA==", "url": "https://github.com/elastic/elasticsearch/pull/58734#discussion_r448128040", "bodyText": "Done.", "author": "przemekwitek", "createdAt": "2020-07-01T05:45:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczOTE1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc0Njc3OA==", "url": "https://github.com/elastic/elasticsearch/pull/58734#discussion_r447746778", "bodyText": "you should calculate delta squared just once and pass it into the script.", "author": "benwtrent", "createdAt": "2020-06-30T14:52:46Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/evaluation/regression/PseudoHuber.java", "diffHunk": "@@ -0,0 +1,194 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ml.dataframe.evaluation.regression;\n+\n+import org.elasticsearch.common.Nullable;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.collect.Tuple;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ConstructingObjectParser;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.script.Script;\n+import org.elasticsearch.search.aggregations.AggregationBuilder;\n+import org.elasticsearch.search.aggregations.AggregationBuilders;\n+import org.elasticsearch.search.aggregations.Aggregations;\n+import org.elasticsearch.search.aggregations.PipelineAggregationBuilder;\n+import org.elasticsearch.search.aggregations.metrics.NumericMetricsAggregation;\n+import org.elasticsearch.xpack.core.ml.dataframe.evaluation.EvaluationMetric;\n+import org.elasticsearch.xpack.core.ml.dataframe.evaluation.EvaluationMetricResult;\n+import org.elasticsearch.xpack.core.ml.dataframe.evaluation.EvaluationParameters;\n+\n+import java.io.IOException;\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import static org.elasticsearch.common.xcontent.ConstructingObjectParser.optionalConstructorArg;\n+import static org.elasticsearch.xpack.core.ml.dataframe.evaluation.MlEvaluationNamedXContentProvider.registeredMetricName;\n+\n+/**\n+ * Calculates the mean squared error between two known numerical fields.\n+ *\n+ * equation: mse = 1/n * \u03a3(y - y\u00b4)^2\n+ */\n+public class PseudoHuber implements EvaluationMetric {\n+\n+    public static final ParseField NAME = new ParseField(\"pseudo_huber\");\n+\n+    public static final ParseField DELTA = new ParseField(\"delta\");\n+    private static final double DEFAULT_DELTA = 1.0;\n+\n+    private static final String PAINLESS_TEMPLATE =\n+        \"def delta2 = Math.pow({2}, 2);\" +", "originalCommit": "f47462870d6d375625e00e5b4e0230db2cf94eea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNDkyNw==", "url": "https://github.com/elastic/elasticsearch/pull/58734#discussion_r448124927", "bodyText": "Done.", "author": "przemekwitek", "createdAt": "2020-07-01T05:34:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc0Njc3OA=="}], "type": "inlineReview"}, {"oid": "b9b71b437cf26468dc3326bd510ac4082ccc5e67", "url": "https://github.com/elastic/elasticsearch/commit/b9b71b437cf26468dc3326bd510ac4082ccc5e67", "message": "Implement pseudo Huber loss (PseudoHuber) evaluation metric for regression analysis", "committedDate": "2020-07-01T05:32:19Z", "type": "commit"}, {"oid": "366111aaf5003587681409fcb28bf216111223b9", "url": "https://github.com/elastic/elasticsearch/commit/366111aaf5003587681409fcb28bf216111223b9", "message": "Fix unit test", "committedDate": "2020-07-01T05:32:19Z", "type": "commit"}, {"oid": "e42f8eeed6b211166b725cdfaec39b977285147b", "url": "https://github.com/elastic/elasticsearch/commit/e42f8eeed6b211166b725cdfaec39b977285147b", "message": "Fix yml test", "committedDate": "2020-07-01T05:32:19Z", "type": "commit"}, {"oid": "abab2777912155da343af6d418cee4e899567450", "url": "https://github.com/elastic/elasticsearch/commit/abab2777912155da343af6d418cee4e899567450", "message": "Apply review comments", "committedDate": "2020-07-01T06:05:08Z", "type": "commit"}, {"oid": "abab2777912155da343af6d418cee4e899567450", "url": "https://github.com/elastic/elasticsearch/commit/abab2777912155da343af6d418cee4e899567450", "message": "Apply review comments", "committedDate": "2020-07-01T06:05:08Z", "type": "forcePushed"}]}