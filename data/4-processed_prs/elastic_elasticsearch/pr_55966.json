{"pr_number": 55966, "pr_title": "Add geo_shape support for geotile_grid and geohash_grid", "pr_createdAt": "2020-04-29T19:32:33Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55966", "timeline": [{"oid": "b0f30b71d398a2439c404e8982b4a9971b264ab7", "url": "https://github.com/elastic/elasticsearch/commit/b0f30b71d398a2439c404e8982b4a9971b264ab7", "message": "Add geo_shape support for geotile_grid and geohash_grid\n\nthis commit adds aggregation support for the geo_shape field\ntype on geo*_grid aggregations.", "committedDate": "2020-04-29T19:29:19Z", "type": "commit"}, {"oid": "2e4d8cbfe5f0caecd904d5ec38ffc3dae52b2193", "url": "https://github.com/elastic/elasticsearch/commit/2e4d8cbfe5f0caecd904d5ec38ffc3dae52b2193", "message": "Merge remote-tracking branch 'elastic/master' into ggrid", "committedDate": "2020-04-29T19:42:10Z", "type": "commit"}, {"oid": "1dee6ebed310d1c53e7656ff462b6e10a7f41eb6", "url": "https://github.com/elastic/elasticsearch/commit/1dee6ebed310d1c53e7656ff462b6e10a7f41eb6", "message": "fix style", "committedDate": "2020-04-29T20:11:03Z", "type": "commit"}, {"oid": "b2d9ed0c68d2e943c1ad6ff7984c4d48c2571b3f", "url": "https://github.com/elastic/elasticsearch/commit/b2d9ed0c68d2e943c1ad6ff7984c4d48c2571b3f", "message": "add missing mapped test case", "committedDate": "2020-04-29T20:57:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgzMTIyMw==", "url": "https://github.com/elastic/elasticsearch/pull/55966#discussion_r417831223", "bodyText": "Should be SPATIAL_GEO_GRID?", "author": "iverase", "createdAt": "2020-04-30T08:08:47Z", "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/SpatialPlugin.java", "diffHunk": "@@ -110,13 +122,49 @@ public void registerGeoShapeCentroidAggregator(ValuesSourceRegistry.Builder buil\n             });\n     }\n \n-    public static void registerValueCountAggregator(ValuesSourceRegistry.Builder builder) {\n+    public void registerGeoShapeGridAggregators(ValuesSourceRegistry.Builder builder) {\n+        builder.register(GeoHashGridAggregationBuilder.NAME, GeoShapeValuesSourceType.instance(),\n+            (GeoGridAggregatorSupplier) (name, factories, valuesSource, precision, geoBoundingBox, requiredSize, shardSize,\n+                                         aggregationContext, parent, metadata) -> {\n+                if (getLicenseState().isAllowed(XPackLicenseState.Feature.SPATIAL_GEO_CENTROID)) {\n+                    final GeoGridTiler tiler;", "originalCommit": "b2d9ed0c68d2e943c1ad6ff7984c4d48c2571b3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2MjM5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/55966#discussion_r418062399", "bodyText": "yes! good catch. I was also missing unit tests for this in SpatialPluginTests. added and fixed!", "author": "talevy", "createdAt": "2020-04-30T14:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzgzMTIyMw=="}], "type": "inlineReview"}, {"oid": "59c8bcf27d9d750d397bbc120f5f4db326bfc940", "url": "https://github.com/elastic/elasticsearch/commit/59c8bcf27d9d750d397bbc120f5f4db326bfc940", "message": "Merge remote-tracking branch 'elastic/master' into ggrid", "committedDate": "2020-04-30T14:41:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2NzY4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/55966#discussion_r418067682", "bodyText": "Why other registers are static except this one? needs to be public?", "author": "iverase", "createdAt": "2020-04-30T14:48:29Z", "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/SpatialPlugin.java", "diffHunk": "@@ -110,13 +122,49 @@ public void registerGeoShapeCentroidAggregator(ValuesSourceRegistry.Builder buil\n             });\n     }\n \n-    public static void registerValueCountAggregator(ValuesSourceRegistry.Builder builder) {\n+    public void registerGeoShapeGridAggregators(ValuesSourceRegistry.Builder builder) {\n+        builder.register(GeoHashGridAggregationBuilder.NAME, GeoShapeValuesSourceType.instance(),", "originalCommit": "59c8bcf27d9d750d397bbc120f5f4db326bfc940", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA3MTcyNg==", "url": "https://github.com/elastic/elasticsearch/pull/55966#discussion_r418071726", "bodyText": "I made them all private. good catch.\nThe ones with license checks cannot be static because they need to call getLicenseState()", "author": "talevy", "createdAt": "2020-04-30T14:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2NzY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA4Mjg3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/55966#discussion_r418082872", "bodyText": "Thanks for the explanation.", "author": "iverase", "createdAt": "2020-04-30T15:09:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2NzY4Mg=="}], "type": "inlineReview"}, {"oid": "c8198e0276474c63583cbd02c97039c22c948e1c", "url": "https://github.com/elastic/elasticsearch/commit/c8198e0276474c63583cbd02c97039c22c948e1c", "message": "fix scoping of registration", "committedDate": "2020-04-30T14:53:23Z", "type": "commit"}, {"oid": "368f5b6b63960a49db846a3fc47c97e18a14af74", "url": "https://github.com/elastic/elasticsearch/commit/368f5b6b63960a49db846a3fc47c97e18a14af74", "message": "Merge remote-tracking branch 'elastic/master' into ggrid", "committedDate": "2020-04-30T20:52:38Z", "type": "commit"}, {"oid": "c7dbb6b03bf702a13bd4ab6eefb19db4d3bb45f3", "url": "https://github.com/elastic/elasticsearch/commit/c7dbb6b03bf702a13bd4ab6eefb19db4d3bb45f3", "message": "add circuit-breaking logic", "committedDate": "2020-05-01T04:03:18Z", "type": "commit"}, {"oid": "d0feb6026abf9ea78cdadc2c1ed1d5d3d32845b0", "url": "https://github.com/elastic/elasticsearch/commit/d0feb6026abf9ea78cdadc2c1ed1d5d3d32845b0", "message": "set initial breaker consumer to be a no-op", "committedDate": "2020-05-01T04:04:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQwNzgwMA==", "url": "https://github.com/elastic/elasticsearch/pull/55966#discussion_r418407800", "bodyText": "I think I figured out the circuit-breaking logic!\nthis is my least favorite part. a hack to give GeoShapeCellIdSource access to AggregatorBase's circuit-breaker logic, which must be created before the aggregator is created.", "author": "talevy", "createdAt": "2020-05-01T04:07:01Z", "path": "x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/SpatialPlugin.java", "diffHunk": "@@ -110,13 +122,53 @@ public void registerGeoShapeCentroidAggregator(ValuesSourceRegistry.Builder buil\n             });\n     }\n \n-    public static void registerValueCountAggregator(ValuesSourceRegistry.Builder builder) {\n+    private void registerGeoShapeGridAggregators(ValuesSourceRegistry.Builder builder) {\n+        builder.register(GeoHashGridAggregationBuilder.NAME, GeoShapeValuesSourceType.instance(),\n+            (GeoGridAggregatorSupplier) (name, factories, valuesSource, precision, geoBoundingBox, requiredSize, shardSize,\n+                                         aggregationContext, parent, metadata) -> {\n+                if (getLicenseState().isAllowed(XPackLicenseState.Feature.SPATIAL_GEO_GRID)) {\n+                    final GeoGridTiler tiler;\n+                    if (geoBoundingBox.isUnbounded()) {\n+                        tiler = new GeoHashGridTiler();\n+                    } else {\n+                        tiler = new BoundedGeoHashGridTiler(geoBoundingBox);\n+                    }\n+                    GeoShapeCellIdSource cellIdSource = new GeoShapeCellIdSource((GeoShapeValuesSource) valuesSource, precision, tiler);\n+                    GeoShapeHashGridAggregator agg = new GeoShapeHashGridAggregator(name, factories, cellIdSource, requiredSize, shardSize,\n+                        aggregationContext, parent, metadata);\n+                    cellIdSource.setCircuitBreakerConsumer(agg::addRequestBytes);", "originalCommit": "d0feb6026abf9ea78cdadc2c1ed1d5d3d32845b0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUxNDU0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/55966#discussion_r419514545", "bodyText": "I cannot think in another way to achieve this at the moment. Do you see any issue down the line with this approach. Maybe add a TODO so we do not forget we should find a better solution?\nI wonder if in the long term we need a family of value source that knows about the circuit breaker.", "author": "iverase", "createdAt": "2020-05-04T15:17:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQwNzgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUzMTI5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/55966#discussion_r419531295", "bodyText": "Do you see any issue down the line with this approach\n\nI do not see a way around this in the short-term. I think it would require more changes to more inherited methods to properly pass along this information from the aggregator to the circuit-breaker via the ValuesSource.\n\nI wonder if in the long term we need a family of value source that knows about the circuit breaker.\n\nthis was the approach taken in #50720. I realize the problem there is that the Aggregator has its own utility method for keeping track of bytes and then subtracting from the circuit-breaker upon closing. I had some bugs with separating the concerns and so I updated it to leverage the Aggregator's wrapper around circuit-breaking logic.\nI will add a comment in the code for sure", "author": "talevy", "createdAt": "2020-05-04T15:40:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQwNzgwMA=="}], "type": "inlineReview"}, {"oid": "83da59bf13777c315297b8a2f6df079950402dfa", "url": "https://github.com/elastic/elasticsearch/commit/83da59bf13777c315297b8a2f6df079950402dfa", "message": "fix bug in tiling optimization", "committedDate": "2020-05-04T21:31:55Z", "type": "commit"}, {"oid": "7e4c20fd30c67433240386e6feca4951b98d1114", "url": "https://github.com/elastic/elasticsearch/commit/7e4c20fd30c67433240386e6feca4951b98d1114", "message": "Merge remote-tracking branch 'elastic/master' into ggrid", "committedDate": "2020-05-04T21:32:14Z", "type": "commit"}]}