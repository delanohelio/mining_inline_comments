{"pr_number": 59112, "pr_title": "Allow mixed usage of boolean and string when merging OIDC claims", "pr_createdAt": "2020-07-07T01:36:16Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59112", "timeline": [{"oid": "78f55f55a071a80a15c66929cd8fabd8cd0fe248", "url": "https://github.com/elastic/elasticsearch/commit/78f55f55a071a80a15c66929cd8fabd8cd0fe248", "message": "Support merging boolean oidc claims with mixed usage of boolean and string", "committedDate": "2020-07-07T01:25:54Z", "type": "commit"}, {"oid": "62b5ed71f6d98928b1d0f958a985c4444830c408", "url": "https://github.com/elastic/elasticsearch/commit/62b5ed71f6d98928b1d0f958a985c4444830c408", "message": "retain value from idtoken", "committedDate": "2020-07-07T01:35:16Z", "type": "commit"}, {"oid": "7d5727f0c5ab6657ee4c8d128e03734e37e74168", "url": "https://github.com/elastic/elasticsearch/commit/7d5727f0c5ab6657ee4c8d128e03734e37e74168", "message": "checkstyle", "committedDate": "2020-07-07T01:41:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4OTc5MA==", "url": "https://github.com/elastic/elasticsearch/pull/59112#discussion_r451989790", "bodyText": "I wonder if we should care whether they're the same logical value? We don't for other cases, but I think we should be.\nPerhaps:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                && (\"true\".equalsIgnoreCase((String)value2) || \"false\".equalsIgnoreCase((String)value2))) {\n          \n          \n            \n                                && String.valueOf(value1).equals(value2) ) {", "author": "tvernum", "createdAt": "2020-07-09T06:24:20Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/oidc/OpenIdConnectAuthenticator.java", "diffHunk": "@@ -670,8 +670,18 @@ static JSONObject mergeObjects(JSONObject idToken, JSONObject userInfo) {\n             } else if (value1 instanceof JSONObject) {\n                 idToken.put(entry.getKey(), mergeObjects((JSONObject) value1, value2));\n             } else if (value1.getClass().equals(value2.getClass()) == false) {\n-                throw new IllegalStateException(\"Error merging ID token and userinfo claim value for claim [\" + entry.getKey() + \"]. \" +\n-                    \"Cannot merge [\" + value1.getClass().getName() + \"] with [\" + value2.getClass().getName() + \"]\");\n+                // A special handling for certain OPs that mix the usage of true and \"true\"\n+                // Retain value from idToken as all other primitive types\n+                if (value1 instanceof Boolean && value2 instanceof String\n+                    && (\"true\".equalsIgnoreCase((String)value2) || \"false\".equalsIgnoreCase((String)value2))) {", "originalCommit": "7d5727f0c5ab6657ee4c8d128e03734e37e74168", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA3OTk2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59112#discussion_r452079962", "bodyText": "Updated as suggested. It's a bit inconsistent with other primitive types. But I think it fits for \"minimal leniency\" purpose which is I am after currently. Also, as discussed, it's worthwhile to revisit the whole merging behaviour in future.", "author": "ywangd", "createdAt": "2020-07-09T09:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4OTc5MA=="}], "type": "inlineReview"}, {"oid": "d9d312f9b23709386d433b334a9ecf3489174501", "url": "https://github.com/elastic/elasticsearch/commit/d9d312f9b23709386d433b334a9ecf3489174501", "message": "Address feedback", "committedDate": "2020-07-09T09:15:02Z", "type": "commit"}, {"oid": "dc478c50dc390a87d4bf011d8a8e9429795e7b7d", "url": "https://github.com/elastic/elasticsearch/commit/dc478c50dc390a87d4bf011d8a8e9429795e7b7d", "message": "Merge remote-tracking branch 'origin/master' into es-oidc-boolean-merging-leniency", "committedDate": "2020-07-09T09:15:17Z", "type": "commit"}]}