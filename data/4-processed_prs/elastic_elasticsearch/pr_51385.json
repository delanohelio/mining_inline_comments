{"pr_number": 51385, "pr_title": "Add a cluster setting to disallow expensive queries", "pr_createdAt": "2020-01-23T23:15:31Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51385", "timeline": [{"oid": "3b52cdf8908ec28c3b6ca7ea9c837bc7d7b23f8a", "url": "https://github.com/elastic/elasticsearch/commit/3b52cdf8908ec28c3b6ca7ea9c837bc7d7b23f8a", "message": "skip for < 7.7", "committedDate": "2020-01-24T11:53:15Z", "type": "forcePushed"}, {"oid": "3a219ca351d9468208e4286314f44a7b2211a50f", "url": "https://github.com/elastic/elasticsearch/commit/3a219ca351d9468208e4286314f44a7b2211a50f", "message": "Add a cluster setting to disallow slow queries", "committedDate": "2020-01-24T15:29:49Z", "type": "forcePushed"}, {"oid": "d9a14a6e90d1a4c65910e287c9c2984ef96ef5a2", "url": "https://github.com/elastic/elasticsearch/commit/d9a14a6e90d1a4c65910e287c9c2984ef96ef5a2", "message": "Add a cluster setting to disallow slow queries\n\nAdd a new cluster setting `search.disallow_slow_queries` which by\ndefault is `false`. If set to `true` then certain queries (prefix,\nfuzzy, regexp and wildcard) that have usually slow performance cannot\nbe executed and an exception is thrown.\n\nCloses: #29050", "committedDate": "2020-01-24T16:59:29Z", "type": "commit"}, {"oid": "d9a14a6e90d1a4c65910e287c9c2984ef96ef5a2", "url": "https://github.com/elastic/elasticsearch/commit/d9a14a6e90d1a4c65910e287c9c2984ef96ef5a2", "message": "Add a cluster setting to disallow slow queries\n\nAdd a new cluster setting `search.disallow_slow_queries` which by\ndefault is `false`. If set to `true` then certain queries (prefix,\nfuzzy, regexp and wildcard) that have usually slow performance cannot\nbe executed and an exception is thrown.\n\nCloses: #29050", "committedDate": "2020-01-24T16:59:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3ODY0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r371178645", "bodyText": "nit: remove change", "author": "jimczi", "createdAt": "2020-01-27T11:06:15Z", "path": "server/src/main/java/org/elasticsearch/index/IndexService.java", "diffHunk": "@@ -223,6 +226,8 @@ public IndexService(\n         this.globalCheckpointTask = new AsyncGlobalCheckpointTask(this);\n         this.retentionLeaseSyncTask = new AsyncRetentionLeaseSyncTask(this);\n         updateFsyncTaskIfNecessary();\n+\n+", "originalCommit": "d9a14a6e90d1a4c65910e287c9c2984ef96ef5a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NDc2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r371184767", "bodyText": "nit: s/tp/to", "author": "jimczi", "createdAt": "2020-01-27T11:20:08Z", "path": "docs/reference/query-dsl.asciidoc", "diffHunk": "@@ -25,6 +25,14 @@ or to alter their behaviour (such as the\n \n Query clauses behave differently depending on whether they are used in\n <<query-filter-context,query context or filter context>>.\n+\n+[[query-dsl-disallow-slow]]\n+== Disallow slow queries\n+Certain queries like <<query-dsl-fuzzy-query,`fuzzy`>>, <<query-dsl-prefix-query,`prefix`>>,\n+<<query-dsl-regexp-query,`regexp`>> and <<query-dsl-bool-query,`wildcard`>> ,\n+that are usually slow performance can affect the cluster performance.\n+The execution of such queries can be prevented by setting the value of the `search.disallow_slow_queries`\n+setting to `true` (defaults tp `false`).", "originalCommit": "d9a14a6e90d1a4c65910e287c9c2984ef96ef5a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "181d838fa68b788c3c09d96b5e419078ff836cd4", "url": "https://github.com/elastic/elasticsearch/commit/181d838fa68b788c3c09d96b5e419078ff836cd4", "message": "address comments", "committedDate": "2020-01-27T15:27:08Z", "type": "commit"}, {"oid": "4ffc00f0947977ab00e8a47b97b70eb361876dfd", "url": "https://github.com/elastic/elasticsearch/commit/4ffc00f0947977ab00e8a47b97b70eb361876dfd", "message": "Add script and script_score queries to the disallowed ones", "committedDate": "2020-01-27T19:22:25Z", "type": "commit"}, {"oid": "55200c70cb79a9b68231da3fb744b756272ddd88", "url": "https://github.com/elastic/elasticsearch/commit/55200c70cb79a9b68231da3fb744b756272ddd88", "message": "Disallow joining queries", "committedDate": "2020-01-28T15:15:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2ODYyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r371368629", "bodyText": "I think we need to expand a bit more here on what qualifies as a slow query. This will help users understand why some queries are protected by this setting while other queries are not. And this will also help make a decision whether a query qualifies as slow or not as we add more queries in the future:\n\nQueries that need to do linear scans to identify matches:\n\nscript queries\n\n\nQueries that have a high up-front cost:\n\nfuzzy queries\nprefix queries without index_prefixes\nwildcard queries\nrange queries on keyword fields\njoin queries\nqueries on 6.x geo shapes\n\n\nQueries that may have a high per-document cost\n\npercolate queries", "author": "jpountz", "createdAt": "2020-01-27T17:10:24Z", "path": "docs/reference/query-dsl.asciidoc", "diffHunk": "@@ -25,6 +25,14 @@ or to alter their behaviour (such as the\n \n Query clauses behave differently depending on whether they are used in\n <<query-filter-context,query context or filter context>>.\n+\n+[[query-dsl-disallow-slow]]\n+== Disallow slow queries\n+Certain queries like <<query-dsl-fuzzy-query,`fuzzy`>>, <<query-dsl-prefix-query,`prefix`>>,\n+<<query-dsl-regexp-query,`regexp`>> and <<query-dsl-bool-query,`wildcard`>> ,\n+that are usually slow performance can affect the cluster performance.\n+The execution of such queries can be prevented by setting the value of the `search.disallow_slow_queries`\n+setting to `true` (defaults to `false`).", "originalCommit": "181d838fa68b788c3c09d96b5e419078ff836cd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "16f6c8b6ab13a53d8149af53534fb4bd94ed0d01", "url": "https://github.com/elastic/elasticsearch/commit/16f6c8b6ab13a53d8149af53534fb4bd94ed0d01", "message": "Rename setting to positive semantics", "committedDate": "2020-01-28T21:42:26Z", "type": "commit"}, {"oid": "126448f189b985431a66c36da60ea5a0a5e827a6", "url": "https://github.com/elastic/elasticsearch/commit/126448f189b985431a66c36da60ea5a0a5e827a6", "message": "Merge remote-tracking branch 'upstream/master' into impl-29050", "committedDate": "2020-02-05T11:46:40Z", "type": "commit"}, {"oid": "b1ca9cb3e6dc5d4c903a2eb795c70fff664c09d7", "url": "https://github.com/elastic/elasticsearch/commit/b1ca9cb3e6dc5d4c903a2eb795c70fff664c09d7", "message": "Merge remote-tracking branch 'upstream/master' into impl-29050", "committedDate": "2020-02-05T19:57:54Z", "type": "commit"}, {"oid": "2dd5d9af57763c2a183aca1a63b95c90c519c40d", "url": "https://github.com/elastic/elasticsearch/commit/2dd5d9af57763c2a183aca1a63b95c90c519c40d", "message": "Add percolator queries to the expensive ones", "committedDate": "2020-02-05T20:26:19Z", "type": "commit"}, {"oid": "65ff23ea4e3e4fd4011af1339cb73e0172f805e4", "url": "https://github.com/elastic/elasticsearch/commit/65ff23ea4e3e4fd4011af1339cb73e0172f805e4", "message": "Add legacy geo-shape queries to the disallowed ones", "committedDate": "2020-02-05T22:49:18Z", "type": "commit"}, {"oid": "14ef948c0fb6a7edf82241fe3e6da929e84576eb", "url": "https://github.com/elastic/elasticsearch/commit/14ef948c0fb6a7edf82241fe3e6da929e84576eb", "message": "capitalize the first letter of error messages", "committedDate": "2020-02-06T13:12:36Z", "type": "commit"}, {"oid": "77a0eff17390ec5c82046754c4c00dbc3ea2b437", "url": "https://github.com/elastic/elasticsearch/commit/77a0eff17390ec5c82046754c4c00dbc3ea2b437", "message": "Add range queries on text/keyword to the expensive ones", "committedDate": "2020-02-06T13:13:07Z", "type": "commit"}, {"oid": "2b4d45a463fece5c82da90db116309cfb924bfe3", "url": "https://github.com/elastic/elasticsearch/commit/2b4d45a463fece5c82da90db116309cfb924bfe3", "message": "Add index_prefixes suggestion to the error message", "committedDate": "2020-02-06T13:20:33Z", "type": "commit"}, {"oid": "f8e24e8d74d946d3b0e1c6174eedc7d11b269f7c", "url": "https://github.com/elastic/elasticsearch/commit/f8e24e8d74d946d3b0e1c6174eedc7d11b269f7c", "message": "fix error msg", "committedDate": "2020-02-06T13:34:35Z", "type": "commit"}, {"oid": "0587709f24425d5d1115fd1c54e4f1d3fa5da3d6", "url": "https://github.com/elastic/elasticsearch/commit/0587709f24425d5d1115fd1c54e4f1d3fa5da3d6", "message": "fix assertions of error messages", "committedDate": "2020-02-06T14:03:08Z", "type": "commit"}, {"oid": "aaaf2195792a2977ba54e7c571239cb2d25ae462", "url": "https://github.com/elastic/elasticsearch/commit/aaaf2195792a2977ba54e7c571239cb2d25ae462", "message": "Enhance part of allow expensive in docs Query DSL", "committedDate": "2020-02-06T14:18:35Z", "type": "commit"}, {"oid": "b24ca0e6345266fe1332e656bb344300f216c757", "url": "https://github.com/elastic/elasticsearch/commit/b24ca0e6345266fe1332e656bb344300f216c757", "message": "fix tests", "committedDate": "2020-02-06T14:30:40Z", "type": "commit"}, {"oid": "eab1b650b64d2e9e8146fb20cc347b9e390d8e68", "url": "https://github.com/elastic/elasticsearch/commit/eab1b650b64d2e9e8146fb20cc347b9e390d8e68", "message": "improve error messages", "committedDate": "2020-02-06T15:07:43Z", "type": "commit"}, {"oid": "16a70176fa1eb1d63a50802213b8fbd1c96c31fd", "url": "https://github.com/elastic/elasticsearch/commit/16a70176fa1eb1d63a50802213b8fbd1c96c31fd", "message": "Merge remote-tracking branch 'upstream/master' into impl-29050", "committedDate": "2020-02-06T15:13:25Z", "type": "commit"}, {"oid": "51a8cdc0e6c920534e58b97b468343aa1b21ff91", "url": "https://github.com/elastic/elasticsearch/commit/51a8cdc0e6c920534e58b97b468343aa1b21ff91", "message": "fix test", "committedDate": "2020-02-06T15:31:29Z", "type": "commit"}, {"oid": "7eccee2866746a30b839d4475e2c32311bdd7772", "url": "https://github.com/elastic/elasticsearch/commit/7eccee2866746a30b839d4475e2c32311bdd7772", "message": "fix test", "committedDate": "2020-02-06T15:57:45Z", "type": "commit"}, {"oid": "907207ffabc7b5b17ef35de6e85a545dab60b5ac", "url": "https://github.com/elastic/elasticsearch/commit/907207ffabc7b5b17ef35de6e85a545dab60b5ac", "message": "fix test", "committedDate": "2020-02-06T16:03:03Z", "type": "commit"}, {"oid": "5aa1a80147e0359feffac41cf3eeac0efa388593", "url": "https://github.com/elastic/elasticsearch/commit/5aa1a80147e0359feffac41cf3eeac0efa388593", "message": "Check that allow_expensive_queries setting doesn't affect new geo-shape queries", "committedDate": "2020-02-06T16:15:19Z", "type": "commit"}, {"oid": "ff9bb5ca1547ccb02f860c08843373c75e89e8cf", "url": "https://github.com/elastic/elasticsearch/commit/ff9bb5ca1547ccb02f860c08843373c75e89e8cf", "message": "revert the legacy quad tree test to the same method", "committedDate": "2020-02-06T16:41:16Z", "type": "commit"}, {"oid": "d1c5e1c755a8696bbb601738b80cca9421161fa3", "url": "https://github.com/elastic/elasticsearch/commit/d1c5e1c755a8696bbb601738b80cca9421161fa3", "message": "remove unused import", "committedDate": "2020-02-06T18:14:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MjYxMw==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r376542613", "bodyText": "I was expecting this one to be fine since it finds matches using another query?", "author": "jpountz", "createdAt": "2020-02-07T18:35:16Z", "path": "docs/reference/query-dsl.asciidoc", "diffHunk": "@@ -25,6 +25,27 @@ or to alter their behaviour (such as the\n \n Query clauses behave differently depending on whether they are used in\n <<query-filter-context,query context or filter context>>.\n+\n+[[query-dsl-allow-expensive-queries]]\n+Allow expensive queries::\n+Execution of certain types of queries have usually slow performance, which can affect the cluster performance.\n+Those queries can be categorised as follows:\n+* Queries that need to do linear scans to identify matches:\n+** <<query-dsl-script-query, `script queries`>>\n+** <<query-dsl-script-score-query, `script score queries`>>", "originalCommit": "d1c5e1c755a8696bbb601738b80cca9421161fa3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU1MzQ0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r376553442", "bodyText": "It was a suggestion by @jimczi to also include those, since I guess the custom score calculation could decrease performance ?", "author": "matriv", "createdAt": "2020-02-07T18:58:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MjYxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE1NDU4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r378154582", "bodyText": "I can see how this can be true with a complex score function. Let's move it to the Queries that may have a high per-document cost section, since it's about scoring, not matching?", "author": "jpountz", "createdAt": "2020-02-12T10:12:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MjYxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MzYwNw==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r376543607", "bodyText": "can't we have tests call the other constructor instead and pass ()->true?", "author": "jpountz", "createdAt": "2020-02-07T18:37:35Z", "path": "server/src/main/java/org/elasticsearch/index/IndexModule.java", "diffHunk": "@@ -144,13 +145,24 @@ public IndexModule(\n             final IndexSettings indexSettings,\n             final AnalysisRegistry analysisRegistry,\n             final EngineFactory engineFactory,\n-            final Map<String, IndexStorePlugin.DirectoryFactory> directoryFactories) {\n+            final Map<String, IndexStorePlugin.DirectoryFactory> directoryFactories,\n+            final BooleanSupplier isAllowExpensiveQueries) {\n         this.indexSettings = indexSettings;\n         this.analysisRegistry = analysisRegistry;\n         this.engineFactory = Objects.requireNonNull(engineFactory);\n         this.searchOperationListeners.add(new SearchSlowLog(indexSettings));\n         this.indexOperationListeners.add(new IndexingSlowLog(indexSettings));\n         this.directoryFactories = Collections.unmodifiableMap(directoryFactories);\n+        this.isAllowExpensiveQueries = isAllowExpensiveQueries;\n+    }\n+\n+    // For testing\n+    IndexModule(\n+            final IndexSettings indexSettings,\n+            final AnalysisRegistry analysisRegistry,\n+            final EngineFactory engineFactory,\n+            final Map<String, IndexStorePlugin.DirectoryFactory> directoryFactories) {\n+        this(indexSettings, analysisRegistry, engineFactory, directoryFactories, () -> true);\n     }", "originalCommit": "d1c5e1c755a8696bbb601738b80cca9421161fa3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwODc0OA==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r376608748", "bodyText": "Yep, that's easy to do.", "author": "matriv", "createdAt": "2020-02-07T21:09:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0MzYwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0NDEwMA==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r376544100", "bodyText": "can we avoid duplicating constructors?", "author": "jpountz", "createdAt": "2020-02-07T18:38:34Z", "path": "server/src/main/java/org/elasticsearch/index/query/QueryShardContext.java", "diffHunk": "@@ -92,12 +93,35 @@\n \n     private final Index fullyQualifiedIndex;\n     private final Predicate<String> indexNameMatcher;\n+    private final BooleanSupplier isAllowExpensiveQueries;\n \n     private final Map<String, Query> namedQueries = new HashMap<>();\n     private boolean allowUnmappedFields;\n     private boolean mapUnmappedFieldAsString;\n     private NestedScope nestedScope;\n \n+    public QueryShardContext(int shardId,\n+                             IndexSettings indexSettings,\n+                             BigArrays bigArrays,\n+                             BitsetFilterCache bitsetFilterCache,\n+                             BiFunction<MappedFieldType, String, IndexFieldData<?>> indexFieldDataLookup,\n+                             MapperService mapperService,\n+                             SimilarityService similarityService,\n+                             ScriptService scriptService,\n+                             NamedXContentRegistry xContentRegistry,\n+                             NamedWriteableRegistry namedWriteableRegistry,\n+                             Client client,\n+                             IndexSearcher searcher,\n+                             LongSupplier nowInMillis,\n+                             String clusterAlias,\n+                             Predicate<String> indexNameMatcher,\n+                             BooleanSupplier isAllowExpensiveQueries) {\n+        this(shardId, indexSettings, bigArrays, bitsetFilterCache, indexFieldDataLookup, mapperService, similarityService,\n+                scriptService, xContentRegistry, namedWriteableRegistry, client, searcher, nowInMillis, indexNameMatcher,\n+                new Index(RemoteClusterAware.buildRemoteIndexName(clusterAlias, indexSettings.getIndex().getName()),\n+                        indexSettings.getIndex().getUUID()), isAllowExpensiveQueries);\n+    }", "originalCommit": "d1c5e1c755a8696bbb601738b80cca9421161fa3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwODk2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r376608965", "bodyText": "There are ~20 usages of this in tests, so no big deal, I can remove the constructor.", "author": "matriv", "createdAt": "2020-02-07T21:10:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU0NDEwMA=="}], "type": "inlineReview"}, {"oid": "78e3c9e813a10cd8413071435b7f66e67627b29f", "url": "https://github.com/elastic/elasticsearch/commit/78e3c9e813a10cd8413071435b7f66e67627b29f", "message": "Remove duplicate constructors to ease up tests", "committedDate": "2020-02-07T21:10:58Z", "type": "commit"}, {"oid": "1c645025c953aaf1cc770992e040f2354331c650", "url": "https://github.com/elastic/elasticsearch/commit/1c645025c953aaf1cc770992e040f2354331c650", "message": "fix tests", "committedDate": "2020-02-07T21:36:54Z", "type": "commit"}, {"oid": "6fdab2b9ffc0fba7a73f77bb1b01201f2380fd73", "url": "https://github.com/elastic/elasticsearch/commit/6fdab2b9ffc0fba7a73f77bb1b01201f2380fd73", "message": "Merge remote-tracking branch 'upstream/master' into impl-29050", "committedDate": "2020-02-07T21:40:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NDAwMA==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r376984000", "bodyText": "Can this just be allowExpensiveQueries()?  Otherwise it reads very strangely.", "author": "romseygeek", "createdAt": "2020-02-10T10:39:25Z", "path": "server/src/main/java/org/elasticsearch/index/query/QueryShardContext.java", "diffHunk": "@@ -192,6 +197,10 @@ public BitSetProducer bitsetFilter(Query filter) {\n         return bitsetFilterCache.getBitSetProducer(filter);\n     }\n \n+    public boolean isAllowExpensiveQueries() {\n+        return isAllowExpensiveQueries.getAsBoolean();", "originalCommit": "6fdab2b9ffc0fba7a73f77bb1b01201f2380fd73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5NTMxNg==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r376995316", "bodyText": "Certain types of queries will generally execute slowly due to the way they are implemented, which can affect the stability of your cluster.", "author": "romseygeek", "createdAt": "2020-02-10T11:01:33Z", "path": "docs/reference/query-dsl.asciidoc", "diffHunk": "@@ -25,6 +25,27 @@ or to alter their behaviour (such as the\n \n Query clauses behave differently depending on whether they are used in\n <<query-filter-context,query context or filter context>>.\n+\n+[[query-dsl-allow-expensive-queries]]\n+Allow expensive queries::\n+Execution of certain types of queries have usually slow performance, which can affect the cluster performance.", "originalCommit": "6fdab2b9ffc0fba7a73f77bb1b01201f2380fd73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5NjM1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r376996357", "bodyText": "However, if <<index-prefixes, index_prefixes>> are enabled, an optimised query is built which is not considered slow, and will be executed in spite of this setting.", "author": "romseygeek", "createdAt": "2020-02-10T11:03:42Z", "path": "docs/reference/query-dsl/prefix-query.asciidoc", "diffHunk": "@@ -64,4 +64,12 @@ GET /_search\n You can speed up prefix queries using the <<index-prefixes,`index_prefixes`>>\n mapping parameter. If enabled, {es} indexes prefixes between 2 and 5\n characters in a separate field. This lets {es} run prefix queries more\n-efficiently at the cost of a larger index.\n\\ No newline at end of file\n+efficiently at the cost of a larger index.\n+\n+[[prefix-query-allow-expensive-queries]]\n+===== Allow expensive queries\n+Prefix queries will not be executed if <<query-dsl-allow-expensive-queries, `search.allow_expensive_queries`>>", "originalCommit": "6fdab2b9ffc0fba7a73f77bb1b01201f2380fd73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "623846b5a8b4be0800be0105caf7fac92d7c2186", "url": "https://github.com/elastic/elasticsearch/commit/623846b5a8b4be0800be0105caf7fac92d7c2186", "message": "Address comments", "committedDate": "2020-02-10T11:33:07Z", "type": "commit"}, {"oid": "97d2ce4c149b322e705d95851795fdb3a8ed276e", "url": "https://github.com/elastic/elasticsearch/commit/97d2ce4c149b322e705d95851795fdb3a8ed276e", "message": "Merge remote-tracking branch 'upstream/master' into impl-29050", "committedDate": "2020-02-10T11:40:53Z", "type": "commit"}, {"oid": "1759a844ae27515599730ef6f910ee5b3f8f36d4", "url": "https://github.com/elastic/elasticsearch/commit/1759a844ae27515599730ef6f910ee5b3f8f36d4", "message": "fix docs", "committedDate": "2020-02-12T16:01:47Z", "type": "commit"}, {"oid": "4774178122ea936043b58e11d295b017ec100a3d", "url": "https://github.com/elastic/elasticsearch/commit/4774178122ea936043b58e11d295b017ec100a3d", "message": "Merge remote-tracking branch 'upstream/master' into impl-29050", "committedDate": "2020-02-12T16:02:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0MDc4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r392140785", "bodyText": "heya @matriv I think this assertion is problematic, it works with the java runner due to the semantics of HashMap.get , but it may fail with test runners written in other languages. I believe that the setting is not returned, is it? I was chatting to @karmi about this and the proper way to do this null check would be is_false: search.allow_expensive_queries . Would you mind please changing this?", "author": "javanna", "createdAt": "2020-03-13T10:19:26Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/search/320_disallow_queries.yml", "diffHunk": "@@ -0,0 +1,330 @@\n+---\n+setup:\n+  - skip:\n+      version: \" - 7.99.99\"\n+      reason: \"implemented in 8.0.0\"\n+\n+  - do:\n+      indices.create:\n+        index: test\n+        body:\n+          mappings:\n+            properties:\n+              text:\n+                type: text\n+                analyzer: standard\n+                fields:\n+                  raw:\n+                    type: keyword\n+              nested1:\n+                type: nested\n+\n+  - do:\n+      bulk:\n+        refresh: true\n+        body:\n+          - '{\"index\": {\"_index\": \"test\", \"_id\": \"1\"}}'\n+          - '{\"text\" : \"Some like it hot, some like it cold\", \"nested1\": [{\"foo\": \"bar1\"}]}'\n+          - '{\"index\": {\"_index\": \"test\", \"_id\": \"2\"}}'\n+          - '{\"text\" : \"Its cold outside, theres no kind of atmosphere\", \"nested1\": [{\"foo\": \"bar2\"}]}'\n+          - '{\"index\": {\"_index\": \"test\", \"_id\": \"3\"}}'\n+          - '{\"text\" : \"Baby its cold there outside\", \"nested1\": [{\"foo\": \"bar3\"}]}'\n+          - '{\"index\": {\"_index\": \"test\", \"_id\": \"4\"}}'\n+          - '{\"text\" : \"Outside it is cold and wet\", \"nested1\": [{\"foo\": \"bar4\"}]}'\n+\n+---\n+teardown:\n+  - skip:\n+      version: \" - 7.99.99\"\n+      reason: \"implemented in 8.0.0\"\n+\n+  - do:\n+      cluster.put_settings:\n+        body:\n+          transient:\n+            search.allow_expensive_queries: null\n+\n+---\n+\"Test disallow expensive queries\":\n+  - skip:\n+      version: \" - 7.99.99\"\n+      reason: \"implemented in 8.0.0\"\n+\n+  ### Check for initial setting = null -> false\n+  - do:\n+      cluster.get_settings:\n+        flat_settings: true\n+\n+  - match: {search.allow_expensive_queries: null}", "originalCommit": "4774178122ea936043b58e11d295b017ec100a3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0Mzk0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r392143942", "bodyText": "To clarify, this fails in the Go client runner, what works is is_false: { search.allow_expensive_queries: null }.", "author": "karmi", "createdAt": "2020-03-13T10:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0MDc4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0NTMyMA==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r392145320", "bodyText": "does is_false accept field values like match? I thought the right syntax would be is_false: search.allow_expensive_queries", "author": "javanna", "createdAt": "2020-03-13T10:28:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0MDc4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0OTQwMA==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r392149400", "bodyText": "is_false: search.allow_expensive_queries works with Java.\nis_false: { search.allow_expensive_queries: null }doesn't and also seems semantically wrong?", "author": "matriv", "createdAt": "2020-03-13T10:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0MDc4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1NDU1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51385#discussion_r392154551", "bodyText": "My bad, sorry \u2014 is_false: search.allow_expensive_queries is correct.", "author": "karmi", "createdAt": "2020-03-13T10:47:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0MDc4NQ=="}], "type": "inlineReview"}]}