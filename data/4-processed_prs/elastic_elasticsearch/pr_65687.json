{"pr_number": 65687, "pr_title": "Abort sorting in case of local agg sort queue overflow", "pr_createdAt": "2020-12-01T16:23:39Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65687", "timeline": [{"oid": "e8e3249f52908aa3526ac60f744e7a7b3da64f23", "url": "https://github.com/elastic/elasticsearch/commit/e8e3249f52908aa3526ac60f744e7a7b3da64f23", "message": "Abort sorting in case of local sort overflow\n\nIn case the local agg sorter queue gets full, stop iterating on current\nresult set and fetching next page.", "committedDate": "2020-12-01T16:02:23Z", "type": "commit"}, {"oid": "44a839e7b6ebc3e758b14702b3e148d40f3b11f1", "url": "https://github.com/elastic/elasticsearch/commit/44a839e7b6ebc3e758b14702b3e148d40f3b11f1", "message": "Slight refactor of the fix. Add testing\n\n- Raise an exception on queue insertion failure, instead of running the\n  failure callback.\n- Add testing for the change.\n- Correct stale documentation.", "committedDate": "2020-12-02T12:02:00Z", "type": "commit"}, {"oid": "abc652ea7660c66a21b78a6a6db0a58c066b7c9f", "url": "https://github.com/elastic/elasticsearch/commit/abc652ea7660c66a21b78a6a6db0a58c066b7c9f", "message": "Merge branch 'master' into fix/bail_on_local_sort_overflow", "committedDate": "2020-12-02T12:04:44Z", "type": "commit"}, {"oid": "f881a489967cf47a32498ba37f1364e804daf78d", "url": "https://github.com/elastic/elasticsearch/commit/f881a489967cf47a32498ba37f1364e804daf78d", "message": "Minor refactoring of testing\n\n- drop Mockito use, not needed in current test form.", "committedDate": "2020-12-02T17:11:23Z", "type": "commit"}, {"oid": "dc0da4a065699b699fa9944450518fd790b03584", "url": "https://github.com/elastic/elasticsearch/commit/dc0da4a065699b699fa9944450518fd790b03584", "message": "Merge branch 'master' into fix/bail_on_local_sort_overflow", "committedDate": "2020-12-02T17:22:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxOTEyOA==", "url": "https://github.com/elastic/elasticsearch/pull/65687#discussion_r534419128", "bodyText": "We should backport this to reflect the change that happened quite some time ago.", "author": "matriv", "createdAt": "2020-12-02T19:16:30Z", "path": "docs/reference/sql/limitations.asciidoc", "diffHunk": "@@ -105,8 +105,8 @@ When multiple values are returned for a field, by default, {es-sql} will throw a\n === Sorting by aggregation\n \n When doing aggregations (`GROUP BY`) {es-sql} relies on {es}'s `composite` aggregation for its support for paginating results.\n-However this type of aggregation does come with a limitation: sorting can only be applied on the key used for the aggregation's buckets. \n-{es-sql} overcomes this limitation by doing client-side sorting however as a safety measure, allows only up to *512* rows.\n+However this type of aggregation does come with a limitation: sorting can only be applied on the key used for the aggregation's buckets.\n+{es-sql} overcomes this limitation by doing client-side sorting however as a safety measure, allows only up to *65535* rows.", "originalCommit": "44a839e7b6ebc3e758b14702b3e148d40f3b11f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY2MzU5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/65687#discussion_r534663593", "bodyText": "No need for this one to be public. Also, the method should be moved last in the class.", "author": "astefan", "createdAt": "2020-12-03T04:41:43Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/execution/search/QuerierTests.java", "diffHunk": "@@ -171,4 +184,85 @@ public void testAggSorting_Randomized() {\n         });\n         assertEquals(expected.subList(0, queueSize), results);\n     }\n+\n+    public Tuple<Integer, Integer> runLocalAggSorterWithNoLimit(int dataSize) {", "originalCommit": "dc0da4a065699b699fa9944450518fd790b03584", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9532d67035c20765cb16ee5c00d1ac163bc2a9b6", "url": "https://github.com/elastic/elasticsearch/commit/9532d67035c20765cb16ee5c00d1ac163bc2a9b6", "message": "Address review comments\n\n- remove \"public\" method attr and move it to the bottom of class.", "committedDate": "2020-12-03T12:51:45Z", "type": "commit"}, {"oid": "987bc80f0b77d2c20c77c44e1312f0074b5cc350", "url": "https://github.com/elastic/elasticsearch/commit/987bc80f0b77d2c20c77c44e1312f0074b5cc350", "message": "Merge branch 'fix/bail_on_local_sort_overflow' of github.com:bpintea/elasticsearch into fix/bail_on_local_sort_overflow", "committedDate": "2020-12-03T12:52:46Z", "type": "commit"}, {"oid": "bca7a849317fe2fad39a893081bf5fbbe7cd938b", "url": "https://github.com/elastic/elasticsearch/commit/bca7a849317fe2fad39a893081bf5fbbe7cd938b", "message": "Merge remote-tracking branch 'upstream/master' into fix/bail_on_local_sort_overflow", "committedDate": "2020-12-03T12:53:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM2ODM3MA==", "url": "https://github.com/elastic/elasticsearch/pull/65687#discussion_r535368370", "bodyText": "Since we already have access to the listener, how about returning a bool instead of throwing an exception.\nThere's nothing wrong with it yet consumeRowSet is used only internally so promoting the condition to an exception only to catch it later  looks a bit wasteful to me.\nsuggestion:\nif (consumeRowSet(page.rowSet()) == false) {\n   return;\n}", "author": "costin", "createdAt": "2020-12-03T16:06:40Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/execution/search/Querier.java", "diffHunk": "@@ -225,8 +226,13 @@ public void onResponse(Page page) {\n                 }\n             }\n \n-            // 1. consume all pages received\n-            consumeRowSet(page.rowSet());\n+            try {", "originalCommit": "bca7a849317fe2fad39a893081bf5fbbe7cd938b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM2OTI1NA==", "url": "https://github.com/elastic/elasticsearch/pull/65687#discussion_r535369254", "bodyText": "Static imports?", "author": "costin", "createdAt": "2020-12-03T16:07:51Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/execution/search/QuerierTests.java", "diffHunk": "@@ -171,4 +184,85 @@ public void testAggSorting_Randomized() {\n         });\n         assertEquals(expected.subList(0, queueSize), results);\n     }\n+\n+    public void testFullQueueSortingOnLocalSort() {\n+        Tuple<Integer, Integer> actions = runLocalAggSorterWithNoLimit(MultiBucketConsumerService.DEFAULT_MAX_BUCKETS);\n+\n+        assertEquals(\"Exactly one response expected\", 1, actions.v1().intValue());\n+        assertEquals(\"No failures expected\", 0, actions.v2().intValue());\n+    }\n+\n+    public void testQueueOverflowSortingOnLocalSort() {\n+        Tuple<Integer, Integer> actions = runLocalAggSorterWithNoLimit(MultiBucketConsumerService.DEFAULT_MAX_BUCKETS + 2);\n+\n+        assertEquals(\"No response expected\", 0, actions.v1().intValue());\n+        assertEquals(\"Exactly one failure expected\", 1, actions.v2().intValue());\n+    }\n+\n+    Tuple<Integer, Integer> runLocalAggSorterWithNoLimit(int dataSize) {\n+        class TestResultRowSet<E extends NamedWriteable> extends ResultRowSet<E> implements SchemaRowSet {\n+\n+            private int rowCounter = 0;\n+            private final int dataSize;\n+\n+            TestResultRowSet(List<E> extractors, BitSet mask, int dataSize) {\n+                super(extractors, mask);\n+                this.dataSize = dataSize;\n+            }\n+\n+            @Override\n+            protected Object extractValue(NamedWriteable namedWriteable) {\n+                return rowCounter++;\n+            }\n+\n+            @Override\n+            protected boolean doHasCurrent() {\n+                return true;\n+            }\n+\n+            @Override\n+            protected boolean doNext() {\n+                return rowCounter < dataSize;\n+            }\n+\n+            @Override\n+            protected void doReset() {\n+            }\n+\n+            @Override\n+            public Schema schema() {\n+                return new Schema(Collections.<String>emptyList(), Collections.<DataType>emptyList());", "originalCommit": "bca7a849317fe2fad39a893081bf5fbbe7cd938b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM3MDA1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/65687#discussion_r535370056", "bodyText": "Nice", "author": "costin", "createdAt": "2020-12-03T16:08:59Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/execution/search/QuerierTests.java", "diffHunk": "@@ -171,4 +184,85 @@ public void testAggSorting_Randomized() {\n         });\n         assertEquals(expected.subList(0, queueSize), results);\n     }\n+\n+    public void testFullQueueSortingOnLocalSort() {\n+        Tuple<Integer, Integer> actions = runLocalAggSorterWithNoLimit(MultiBucketConsumerService.DEFAULT_MAX_BUCKETS);\n+\n+        assertEquals(\"Exactly one response expected\", 1, actions.v1().intValue());\n+        assertEquals(\"No failures expected\", 0, actions.v2().intValue());\n+    }\n+\n+    public void testQueueOverflowSortingOnLocalSort() {\n+        Tuple<Integer, Integer> actions = runLocalAggSorterWithNoLimit(MultiBucketConsumerService.DEFAULT_MAX_BUCKETS + 2);\n+\n+        assertEquals(\"No response expected\", 0, actions.v1().intValue());\n+        assertEquals(\"Exactly one failure expected\", 1, actions.v2().intValue());\n+    }\n+\n+    Tuple<Integer, Integer> runLocalAggSorterWithNoLimit(int dataSize) {", "originalCommit": "bca7a849317fe2fad39a893081bf5fbbe7cd938b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "12bc667c2c27b7b6c6bb64f10e5e39417e517340", "url": "https://github.com/elastic/elasticsearch/commit/12bc667c2c27b7b6c6bb64f10e5e39417e517340", "message": "Address review comments\n\n- revert back to bool-based flow control.\n- import static methods where possible.", "committedDate": "2020-12-03T17:16:06Z", "type": "commit"}, {"oid": "d60a892cdfaff12e3d330328fa82ea4dd131d46d", "url": "https://github.com/elastic/elasticsearch/commit/d60a892cdfaff12e3d330328fa82ea4dd131d46d", "message": "Style fix\n\n- unused import removed.", "committedDate": "2020-12-03T17:27:38Z", "type": "commit"}, {"oid": "eb042abdf3893c4db712c283c98a3575f8a191bc", "url": "https://github.com/elastic/elasticsearch/commit/eb042abdf3893c4db712c283c98a3575f8a191bc", "message": "Merge branch 'master' into fix/bail_on_local_sort_overflow", "committedDate": "2020-12-03T17:28:30Z", "type": "commit"}]}