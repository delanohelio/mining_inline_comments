{"pr_number": 50702, "pr_title": "Make the UpdateRolloverLifecycleDateStep retryable", "pr_createdAt": "2020-01-07T14:01:45Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/50702", "timeline": [{"oid": "a10c74f638f90970129810e68187e3a1892f31ad", "url": "https://github.com/elastic/elasticsearch/commit/a10c74f638f90970129810e68187e3a1892f31ad", "message": "Make the UpdateRolloverLifecycleDateStep retryable\n\nThis makes the \"update-rollover-lifecycle-date\" step, which is part of the\nrollover action, retryable. It also adds an integration test to check the\nstep is retried and it eventually succeeds.", "committedDate": "2020-01-07T14:00:00Z", "type": "commit"}, {"oid": "802b563d2871c15c74c402643efa9442301c5e71", "url": "https://github.com/elastic/elasticsearch/commit/802b563d2871c15c74c402643efa9442301c5e71", "message": "Rename test method", "committedDate": "2020-01-07T14:05:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk3NzIwNg==", "url": "https://github.com/elastic/elasticsearch/pull/50702#discussion_r363977206", "bodyText": "Should this be 1 instead of 2?", "author": "dakrone", "createdAt": "2020-01-07T22:13:18Z", "path": "x-pack/plugin/ilm/qa/multi-node/src/test/java/org/elasticsearch/xpack/ilm/TimeSeriesLifecycleActionsIT.java", "diffHunk": "@@ -1078,6 +1079,67 @@ public void testRolloverStepRetriesUntilRolledOverIndexIsDeleted() throws Except\n         assertBusy(() -> assertThat(getStepKeyForIndex(index), equalTo(TerminalPolicyStep.KEY)));\n     }\n \n+    public void testUpdateRolloverLifecycleDateStepRetriesWhenRolloverInfoIsMissing() throws Exception {\n+        String index = this.index + \"-000001\";\n+\n+        createNewSingletonPolicy(\"hot\", new RolloverAction(null, null, 1L));\n+\n+        createIndexWithSettings(\n+            index,\n+            Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS, 1)\n+                .put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, 0)\n+                .put(LifecycleSettings.LIFECYCLE_NAME, policy)\n+                .put(RolloverAction.LIFECYCLE_ROLLOVER_ALIAS, \"alias\"),\n+            true\n+        );\n+\n+        assertBusy(() -> assertThat(getStepKeyForIndex(index).getName(), is(WaitForRolloverReadyStep.NAME)));\n+\n+        // moving ILM to the \"update-rollover-lifecycle-date\" without having gone through the actual rollover step\n+        // the \"update-rollover-lifecycle-date\" step will fail as the index has no rollover information\n+        Request moveToStepRequest = new Request(\"POST\", \"_ilm/move/\" + index);\n+        moveToStepRequest.setJsonEntity(\"{\\n\" +\n+            \"  \\\"current_step\\\": {\\n\" +\n+            \"    \\\"phase\\\": \\\"hot\\\",\\n\" +\n+            \"    \\\"action\\\": \\\"rollover\\\",\\n\" +\n+            \"    \\\"name\\\": \\\"check-rollover-ready\\\"\\n\" +\n+            \"  },\\n\" +\n+            \"  \\\"next_step\\\": {\\n\" +\n+            \"    \\\"phase\\\": \\\"hot\\\",\\n\" +\n+            \"    \\\"action\\\": \\\"rollover\\\",\\n\" +\n+            \"    \\\"name\\\": \\\"update-rollover-lifecycle-date\\\"\\n\" +\n+            \"  }\\n\" +\n+            \"}\");\n+        client().performRequest(moveToStepRequest);\n+\n+        waitUntil(() -> {\n+            try {\n+                Map<String, Object> explainIndexResponse = explainIndex(index);\n+                String step = (String) explainIndexResponse.get(\"step\");\n+                Integer retryCount = (Integer) explainIndexResponse.get(FAILED_STEP_RETRY_COUNT_FIELD);\n+                return step != null && step.equals(UpdateRolloverLifecycleDateStep.NAME) && retryCount != null && retryCount >= 2;", "originalCommit": "802b563d2871c15c74c402643efa9442301c5e71", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d147d6d78d9c50d537b99ea18b26e00ad375a582", "url": "https://github.com/elastic/elasticsearch/commit/d147d6d78d9c50d537b99ea18b26e00ad375a582", "message": "Wait for the update lifecycle date step to fail only once", "committedDate": "2020-01-08T08:50:53Z", "type": "commit"}]}