{"pr_number": 62391, "pr_title": "[ML] fixes testWatchdog test verifying matcher is interrupted on timeout", "pr_createdAt": "2020-09-15T15:25:23Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62391", "timeline": [{"oid": "9a1bb39c59c2ae1e96f97a444b5a3f3c065d52f7", "url": "https://github.com/elastic/elasticsearch/commit/9a1bb39c59c2ae1e96f97a444b5a3f3c065d52f7", "message": "[ML] fixes testWatchdog test verifying matcher is interrupted on timeout", "committedDate": "2020-09-15T15:23:10Z", "type": "commit"}, {"oid": "6a396e9f1612f4bb3176fdefc26516252fd5b91b", "url": "https://github.com/elastic/elasticsearch/commit/6a396e9f1612f4bb3176fdefc26516252fd5b91b", "message": "Merge branch 'master' into test/ml-fix-watchdog-match-test", "committedDate": "2020-09-15T15:50:29Z", "type": "commit"}, {"oid": "59bb8a111b4be96867d977a5d5ba98a0d14ab4d7", "url": "https://github.com/elastic/elasticsearch/commit/59bb8a111b4be96867d977a5d5ba98a0d14ab4d7", "message": "calling matcher.interrupt even if action has already timedout", "committedDate": "2020-09-15T16:33:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyNzgxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/62391#discussion_r489327815", "bodyText": "Doing this check unsynchronized means there's a chance for the matcher to be interrupted twice.\nI know you have worked around this in the test by using atLeastOnce(), but it leaves the question of what a real Joni Matcher does if interrupted twice.\nSo I think that either you need to investigate what happens if a real Joni Matcher is interrupted twice, or (probably simpler) put this bit in a synchronized block so that it cannot run while interruptLongRunningThreadIfRegistered is part way through.", "author": "droberts195", "createdAt": "2020-09-16T10:18:50Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/filestructurefinder/TimeoutChecker.java", "diffHunk": "@@ -143,6 +141,9 @@ public void register(Matcher matcher) {\n                 boolean wasFalse = value.registered.compareAndSet(false, true);\n                 assert wasFalse;\n                 value.matchers.add(matcher);\n+                if (value.isTimedOut()) {", "originalCommit": "59bb8a111b4be96867d977a5d5ba98a0d14ab4d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyODQ4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/62391#discussion_r489328485", "bodyText": "It would be nice to get rid of the atLeastOnce and have the watchdog ensure it's exactly once, because otherwise it opens the question of what happens to a real Joni Matcher.", "author": "droberts195", "createdAt": "2020-09-16T10:20:01Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/filestructurefinder/TimeoutCheckerTests.java", "diffHunk": "@@ -59,21 +60,19 @@ public void testCheckTimeoutExceeded() throws Exception {\n         }\n     }\n \n-    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/48861\")\n     public void testWatchdog() throws Exception {\n-        TimeValue timeout = TimeValue.timeValueMillis(500);\n+        final TimeValue timeout = TimeValue.timeValueMillis(randomIntBetween(10, 500));\n         try (TimeoutChecker timeoutChecker = new TimeoutChecker(\"watchdog test\", timeout, scheduler)) {\n-            TimeoutChecker.TimeoutCheckerWatchdog watchdog = (TimeoutChecker.TimeoutCheckerWatchdog) TimeoutChecker.watchdog;\n-\n+            final TimeoutChecker.TimeoutCheckerWatchdog watchdog = (TimeoutChecker.TimeoutCheckerWatchdog) TimeoutChecker.watchdog;\n             Matcher matcher = mock(Matcher.class);\n-            TimeoutChecker.watchdog.register(matcher);\n+            watchdog.register(matcher);\n             assertThat(watchdog.registry.get(Thread.currentThread()).matchers.size(), equalTo(1));\n             try {\n                 assertBusy(() -> {\n-                    verify(matcher).interrupt();\n+                    verify(matcher, atLeastOnce()).interrupt();", "originalCommit": "59bb8a111b4be96867d977a5d5ba98a0d14ab4d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0bd06c6a42e2315550b30287a87b4f0459ac1800", "url": "https://github.com/elastic/elasticsearch/commit/0bd06c6a42e2315550b30287a87b4f0459ac1800", "message": "addressing pr comment", "committedDate": "2020-09-16T11:15:02Z", "type": "commit"}, {"oid": "bda7083191fd365e4f1a77d8c1468af2d7f59445", "url": "https://github.com/elastic/elasticsearch/commit/bda7083191fd365e4f1a77d8c1468af2d7f59445", "message": "fixing order", "committedDate": "2020-09-16T11:16:38Z", "type": "commit"}]}