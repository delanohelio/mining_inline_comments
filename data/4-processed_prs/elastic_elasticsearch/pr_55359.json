{"pr_number": 55359, "pr_title": "Removing warning for forbidden apis not supporting java 14", "pr_createdAt": "2020-04-16T21:58:06Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55359", "timeline": [{"oid": "b4a5247ad27a72d69d65f6e9307d4c9049d53fbf", "url": "https://github.com/elastic/elasticsearch/commit/b4a5247ad27a72d69d65f6e9307d4c9049d53fbf", "message": "Removing warning for forbidden apis not supporting java 14\n\nWhile the current version of forbidden apis still does not support java\n14, the warning message has become very noisy as we now require java 14\nfor the elasticsearch build. This commit replaces the warn log message\nwith a comment in the code.", "committedDate": "2020-04-16T21:55:40Z", "type": "commit"}, {"oid": "20908ed0cd6a95b54a25c4db41d8f586192b328a", "url": "https://github.com/elastic/elasticsearch/commit/20908ed0cd6a95b54a25c4db41d8f586192b328a", "message": "Merge branch 'master' into forbidden_java14", "committedDate": "2020-04-16T22:20:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkxMjg0OA==", "url": "https://github.com/elastic/elasticsearch/pull/55359#discussion_r409912848", "bodyText": "Now that I look at this, why are we basing this on runtime java version? This should simply be hard-coded to be minimumRuntimeVersion since that's what we pass to java -release so it's effectively impossible to use APIs from a newer JDK anyhow as it'd fail at compile time. The fact that we might be configuring the build with a later runtime JVM is irrelevant. That only affects runtime behavior (i.e. tests) nothing about how our code is compiled and which JDK APIs are available to it.\nWe'll need to of course deal with the fallout of forbiddenapi compatibility when we bump the minimum runtime version but I don't see that happening anytime soon.", "author": "mark-vieira", "createdAt": "2020-04-16T23:49:34Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/precommit/PrecommitTasks.groovy", "diffHunk": "@@ -161,10 +161,7 @@ class PrecommitTasks {\n \n             targetCompatibility = BuildParams.runtimeJavaVersion.majorVersion\n             if (BuildParams.runtimeJavaVersion > JavaVersion.VERSION_13) {\n-                project.logger.warn(\n-                        \"Forbidden APIs does not support Java versions past 13. Will use the signatures from 13 for {}.\",\n-                        BuildParams.runtimeJavaVersion\n-                )\n+                // forbidden apis does not yet support java 14 (it will in version 3.0), so we must use java 13 target", "originalCommit": "20908ed0cd6a95b54a25c4db41d8f586192b328a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkyNDU4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/55359#discussion_r409924583", "bodyText": "That's certainly something we should look at, but will likely require more investigation (I recall we tried something like this before and ran into issues, likely with multi release jars). I'm happy to do that as a followup, but this PR still will reduce unnecessary noise that is plaguing all local builds now that we require JDK 14 to run the build.", "author": "rjernst", "createdAt": "2020-04-17T00:29:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkxMjg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI2NzExNQ==", "url": "https://github.com/elastic/elasticsearch/pull/55359#discussion_r410267115", "bodyText": "Yeah, the difficulty was exactly multi-release JARs.", "author": "jasontedor", "createdAt": "2020-04-17T14:38:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkxMjg0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM2NDI1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/55359#discussion_r410364251", "bodyText": "Cool. I'm good with deferring that for now.", "author": "mark-vieira", "createdAt": "2020-04-17T17:23:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkxMjg0OA=="}], "type": "inlineReview"}]}