{"pr_number": 58439, "pr_title": "Move MappedFieldType.similarity() to TextSearchInfo", "pr_createdAt": "2020-06-23T13:48:47Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58439", "timeline": [{"oid": "18c1d83069b83bb0bc2d5ffde5d0c46ec59cbaf8", "url": "https://github.com/elastic/elasticsearch/commit/18c1d83069b83bb0bc2d5ffde5d0c46ec59cbaf8", "message": "Add TextSearchInfo class to wrap up text search details", "committedDate": "2020-06-17T08:53:43Z", "type": "commit"}, {"oid": "1ba04c835fff053e19891e9bfefd292f189d7398", "url": "https://github.com/elastic/elasticsearch/commit/1ba04c835fff053e19891e9bfefd292f189d7398", "message": "Merge remote-tracking branch 'origin/master' into mapper/textsearchinfo", "committedDate": "2020-06-17T08:53:53Z", "type": "commit"}, {"oid": "9852fcd7c0214b627884e2e4b772c79d52c68944", "url": "https://github.com/elastic/elasticsearch/commit/9852fcd7c0214b627884e2e4b772c79d52c68944", "message": "javadocs", "committedDate": "2020-06-17T08:59:17Z", "type": "commit"}, {"oid": "9d304670ce8c87be4208aaf967ae90468ecd96cb", "url": "https://github.com/elastic/elasticsearch/commit/9d304670ce8c87be4208aaf967ae90468ecd96cb", "message": "Merge remote-tracking branch 'origin/master' into mapper/textsearchinfo", "committedDate": "2020-06-18T13:01:23Z", "type": "commit"}, {"oid": "842883d440daff35e6c3605ae4c90ebac239e357", "url": "https://github.com/elastic/elasticsearch/commit/842883d440daff35e6c3605ae4c90ebac239e357", "message": "Don't expose lucene FieldType directly", "committedDate": "2020-06-18T14:47:07Z", "type": "commit"}, {"oid": "cedf0cfaaa66fa17b1fa7badc4826e45b54d899a", "url": "https://github.com/elastic/elasticsearch/commit/cedf0cfaaa66fa17b1fa7badc4826e45b54d899a", "message": "rationalise; javadocs", "committedDate": "2020-06-18T15:17:10Z", "type": "commit"}, {"oid": "0dcbc22a2fa84c7611303a8c694de9df686ffd6f", "url": "https://github.com/elastic/elasticsearch/commit/0dcbc22a2fa84c7611303a8c694de9df686ffd6f", "message": "Merge remote-tracking branch 'origin/master' into mapper/textsearchinfo", "committedDate": "2020-06-23T09:12:23Z", "type": "commit"}, {"oid": "c44158f900627fcdbe0e14ccb87678f95b428f5b", "url": "https://github.com/elastic/elasticsearch/commit/c44158f900627fcdbe0e14ccb87678f95b428f5b", "message": "Add TextSearchInfo.NONE", "committedDate": "2020-06-23T09:33:19Z", "type": "commit"}, {"oid": "83bc7b6b2a022fb67343e699e856ff1c9c9a83e7", "url": "https://github.com/elastic/elasticsearch/commit/83bc7b6b2a022fb67343e699e856ff1c9c9a83e7", "message": "Move MappedFieldType.similarity to TextSearchInfo", "committedDate": "2020-06-23T13:34:29Z", "type": "commit"}, {"oid": "5577d9514b63c8b950f64fe27d5a66bdb989ed98", "url": "https://github.com/elastic/elasticsearch/commit/5577d9514b63c8b950f64fe27d5a66bdb989ed98", "message": "Merge remote-tracking branch 'origin/master' into mapper/similarity", "committedDate": "2020-06-23T13:41:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIzOTQwNA==", "url": "https://github.com/elastic/elasticsearch/pull/58439#discussion_r444239404", "bodyText": "The shared parseTextField() method does a deprecation check for similarity now, so we need to move it to after we've processed the similarity field.  To ensure that mapper-specific fields still get checked for null, a new TypeParsers.checkNull() method is called for each entry.", "author": "romseygeek", "createdAt": "2020-06-23T13:50:34Z", "path": "modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/SearchAsYouTypeFieldMapper.java", "diffHunk": "@@ -113,30 +116,39 @@\n             builder.indexAnalyzer(parserContext.getIndexAnalyzers().getDefaultIndexAnalyzer());\n             builder.searchAnalyzer(parserContext.getIndexAnalyzers().getDefaultSearchAnalyzer());\n             builder.searchQuoteAnalyzer(parserContext.getIndexAnalyzers().getDefaultSearchQuoteAnalyzer());\n-            parseTextField(builder, name, node, parserContext);\n             for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                 final Map.Entry<String, Object> entry = iterator.next();\n                 final String fieldName = entry.getKey();\n                 final Object fieldNode = entry.getValue();\n-\n+                checkNull(fieldName, fieldNode);\n                 if (fieldName.equals(\"max_shingle_size\")) {\n                     builder.maxShingleSize(nodeIntegerValue(fieldNode));\n                     iterator.remove();\n+                } else if (fieldName.equals(\"similarity\")) {\n+                    SimilarityProvider similarityProvider = TypeParsers.resolveSimilarity(parserContext, fieldName, fieldNode.toString());\n+                    builder.similarity(similarityProvider);\n+                    iterator.remove();\n                 }\n                 // TODO should we allow to configure the prefix field\n             }\n+            parseTextField(builder, name, node, parserContext);", "originalCommit": "5577d9514b63c8b950f64fe27d5a66bdb989ed98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI0MDYxNg==", "url": "https://github.com/elastic/elasticsearch/pull/58439#discussion_r444240616", "bodyText": "Same process here as in SearchAsYouTypeFieldMapper", "author": "romseygeek", "createdAt": "2020-06-23T13:52:03Z", "path": "server/src/main/java/org/elasticsearch/index/mapper/TextFieldMapper.java", "diffHunk": "@@ -310,8 +317,13 @@ public TextFieldMapper build(BuilderContext context) {\n                 } else if (propName.equals(\"index_phrases\")) {\n                     builder.indexPhrases(XContentMapValues.nodeBooleanValue(propNode, \"index_phrases\"));\n                     iterator.remove();\n+                } else if (propName.equals(\"similarity\")) {\n+                    SimilarityProvider similarityProvider = TypeParsers.resolveSimilarity(parserContext, fieldName, propNode.toString());\n+                    builder.similarity(similarityProvider);\n+                    iterator.remove();\n                 }\n             }\n+            parseTextField(builder, fieldName, node, parserContext);", "originalCommit": "5577d9514b63c8b950f64fe27d5a66bdb989ed98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI0MTY4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/58439#discussion_r444241687", "bodyText": "This has been moved directly into the applicable FieldMappers", "author": "romseygeek", "createdAt": "2020-06-23T13:53:30Z", "path": "test/framework/src/main/java/org/elasticsearch/index/mapper/FieldMapperTestCase.java", "diffHunk": "@@ -106,10 +103,6 @@ private Modifier booleanModifier(String name, boolean updateable, BiConsumer<T,\n             a.searchQuoteAnalyzer(new NamedAnalyzer(\"standard\", AnalyzerScope.INDEX, new StandardAnalyzer()));\n             a.searchQuoteAnalyzer(new NamedAnalyzer(\"whitespace\", AnalyzerScope.INDEX, new WhitespaceAnalyzer()));\n         }),\n-        new Modifier(\"similarity\", false, (a, b) -> {\n-            a.similarity(new SimilarityProvider(\"BM25\", new BM25Similarity()));\n-            b.similarity(new SimilarityProvider(\"boolean\", new BooleanSimilarity()));\n-        }),", "originalCommit": "5577d9514b63c8b950f64fe27d5a66bdb989ed98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM5NzAzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/58439#discussion_r445397039", "bodyText": "would it be possible to avoid having null similarity provider in TextSearchInfo and rather pass in directly the default similarity, or have some placeholder instead of null?", "author": "javanna", "createdAt": "2020-06-25T08:35:03Z", "path": "server/src/main/java/org/elasticsearch/index/similarity/SimilarityService.java", "diffHunk": "@@ -163,7 +163,8 @@ Similarity getDefaultSimilarity() {\n         @Override\n         public Similarity get(String name) {\n             MappedFieldType fieldType = mapperService.fieldType(name);\n-            return (fieldType != null && fieldType.similarity() != null) ? fieldType.similarity().get() : defaultSimilarity;\n+            return (fieldType != null && fieldType.getTextSearchInfo().getSimilarity() != null)", "originalCommit": "5577d9514b63c8b950f64fe27d5a66bdb989ed98", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}