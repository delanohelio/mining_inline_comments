{"pr_number": 51684, "pr_title": "Add Trace Logging of REST Requests", "pr_createdAt": "2020-01-30T15:09:31Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51684", "timeline": [{"oid": "c6616d746813d2b55b373cadc275bf512b2d7db3", "url": "https://github.com/elastic/elasticsearch/commit/c6616d746813d2b55b373cadc275bf512b2d7db3", "message": "Add Trace Logging of REST Requests\n\nBeing able to trace log all REST requests to a node would make debugging\na number of issues a lot easier.", "committedDate": "2020-01-30T15:08:08Z", "type": "commit"}, {"oid": "20c07fbdc4e6ebd17a18c9d94132fe884bf05e38", "url": "https://github.com/elastic/elasticsearch/commit/20c07fbdc4e6ebd17a18c9d94132fe884bf05e38", "message": "serious tracer log", "committedDate": "2020-01-30T17:57:17Z", "type": "commit"}, {"oid": "b88edc05c5d4b1bc7e97f86ffe4cf8e83514421d", "url": "https://github.com/elastic/elasticsearch/commit/b88edc05c5d4b1bc7e97f86ffe4cf8e83514421d", "message": "Merge remote-tracking branch 'elastic/master' into add-trace-logging-rest-requests", "committedDate": "2020-01-30T17:57:31Z", "type": "commit"}, {"oid": "fabbcfcd16faa2c84b1410e18281ab66da27c908", "url": "https://github.com/elastic/elasticsearch/commit/fabbcfcd16faa2c84b1410e18281ab66da27c908", "message": "tests + docs", "committedDate": "2020-01-30T19:10:05Z", "type": "commit"}, {"oid": "d1c84507b6ef6b35bfe5c05933066a163c52f106", "url": "https://github.com/elastic/elasticsearch/commit/d1c84507b6ef6b35bfe5c05933066a163c52f106", "message": "ws", "committedDate": "2020-01-30T19:12:20Z", "type": "commit"}, {"oid": "ed95506a132ef37e62bd06a96a09f62f726f9c97", "url": "https://github.com/elastic/elasticsearch/commit/ed95506a132ef37e62bd06a96a09f62f726f9c97", "message": "fix docs", "committedDate": "2020-01-30T19:18:21Z", "type": "commit"}, {"oid": "1b54f7bb559fd24ef55ecc276bc95dea540788bc", "url": "https://github.com/elastic/elasticsearch/commit/1b54f7bb559fd24ef55ecc276bc95dea540788bc", "message": "nullable is meh", "committedDate": "2020-01-30T19:26:03Z", "type": "commit"}, {"oid": "c10a821cc719a9db68ae8d6ad54e2d6e4db6f0db", "url": "https://github.com/elastic/elasticsearch/commit/c10a821cc719a9db68ae8d6ad54e2d6e4db6f0db", "message": "nullable is meh", "committedDate": "2020-01-30T19:27:52Z", "type": "commit"}, {"oid": "670bac4bab99c4aacdddeca62ac39cdc1c82178d", "url": "https://github.com/elastic/elasticsearch/commit/670bac4bab99c4aacdddeca62ac39cdc1c82178d", "message": "nullable", "committedDate": "2020-01-30T19:30:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5MzU4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r373493583", "bodyText": "can you show how this will look like? In particular, what does request.getHttpChannel() print?", "author": "ywelsch", "createdAt": "2020-01-31T14:03:13Z", "path": "server/src/main/java/org/elasticsearch/rest/RestController.java", "diffHunk": "@@ -157,6 +189,10 @@ public void registerHandler(RestRequest.Method method, String path, RestHandler\n \n     @Override\n     public void dispatchRequest(RestRequest request, RestChannel channel, ThreadContext threadContext) {\n+        if (tracerLog.isTraceEnabled() && shouldTraceRequest(request.uri())) {\n+            tracerLog.trace(new ParameterizedMessage(\n+                \"Incoming request [{}][{}] on [{}]\", request.method(), request.uri(), request.getHttpChannel()));", "originalCommit": "670bac4bab99c4aacdddeca62ac39cdc1c82178d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUwMzE4MA==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r373503180", "bodyText": "Sure:\n[2020-01-31T15:22:15,288][TRACE][o.e.r.R.tracer           ] [runTask-0] Incoming request [GET][/_nodes/stats?pretty] on [Netty4HttpChannel{localAddress=/127.0.0.1:9200, remoteAddress=/127.0.0.1:37162}]", "author": "original-brownbear", "createdAt": "2020-01-31T14:22:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5MzU4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NTcyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r373495725", "bodyText": "Should we use the same syntax as for transport-level logging, i.e., [{}][{}] received request?", "author": "ywelsch", "createdAt": "2020-01-31T14:07:46Z", "path": "server/src/main/java/org/elasticsearch/rest/RestController.java", "diffHunk": "@@ -157,6 +189,10 @@ public void registerHandler(RestRequest.Method method, String path, RestHandler\n \n     @Override\n     public void dispatchRequest(RestRequest request, RestChannel channel, ThreadContext threadContext) {\n+        if (tracerLog.isTraceEnabled() && shouldTraceRequest(request.uri())) {\n+            tracerLog.trace(new ParameterizedMessage(\n+                \"Incoming request [{}][{}] on [{}]\", request.method(), request.uri(), request.getHttpChannel()));", "originalCommit": "670bac4bab99c4aacdddeca62ac39cdc1c82178d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUwNTYxNA==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r373505614", "bodyText": "I think we can align them more closely yes if we're also going to log the response sending now. On it :)", "author": "original-brownbear", "createdAt": "2020-01-31T14:27:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NTcyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU5MTQwNw==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r373591407", "bodyText": "How about:\n[2020-01-31T10:09:34,141][TRACE][o.e.h.A.tracer           ] [testTracerLog] [43072717][OPTIONS][/internal/test] received request from [Netty4HttpChannel{localAddress=/127.0.0.1:9200, remoteAddress=/127.0.0.1:39464}]\n[2020-01-31T10:09:34,153][TRACE][o.e.h.A.tracer           ] [testTracerLog] [43072717] sent response to [Netty4HttpChannel{localAddress=/127.0.0.1:9200, remoteAddress=/127.0.0.1:39464}]\n\n\n?\nI used the hash code of the request to make a fake but good enough request id for each REST request.", "author": "original-brownbear", "createdAt": "2020-01-31T17:18:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NTcyNQ=="}], "type": "inlineReview"}, {"oid": "dbb7e109eca36ca0cc7031d2ef12c73ec2580a2f", "url": "https://github.com/elastic/elasticsearch/commit/dbb7e109eca36ca0cc7031d2ef12c73ec2580a2f", "message": "Merge remote-tracking branch 'elastic/master' into add-trace-logging-rest-requests", "committedDate": "2020-01-31T14:17:23Z", "type": "commit"}, {"oid": "e830c1f5588097c34ca7c10816f45bc6edb8a251", "url": "https://github.com/elastic/elasticsearch/commit/e830c1f5588097c34ca7c10816f45bc6edb8a251", "message": "move tracer to abstract http transport", "committedDate": "2020-01-31T16:48:02Z", "type": "commit"}, {"oid": "51ebcccadeaa08369ef17cd27e395138a2a2206a", "url": "https://github.com/elastic/elasticsearch/commit/51ebcccadeaa08369ef17cd27e395138a2a2206a", "message": "responses are logging too now", "committedDate": "2020-01-31T16:58:33Z", "type": "commit"}, {"oid": "8782db012dff8ff3473b59979a6ac076cff5248e", "url": "https://github.com/elastic/elasticsearch/commit/8782db012dff8ff3473b59979a6ac076cff5248e", "message": "log response as well", "committedDate": "2020-01-31T17:11:33Z", "type": "commit"}, {"oid": "82afbbe66984ab13e3c4c49148224f0bed6f9309", "url": "https://github.com/elastic/elasticsearch/commit/82afbbe66984ab13e3c4c49148224f0bed6f9309", "message": "undo noise", "committedDate": "2020-01-31T17:14:50Z", "type": "commit"}, {"oid": "5b15c0f75bae8f704cf343c432e6e1c2f70e6533", "url": "https://github.com/elastic/elasticsearch/commit/5b15c0f75bae8f704cf343c432e6e1c2f70e6533", "message": "undo noise", "committedDate": "2020-01-31T17:15:33Z", "type": "commit"}, {"oid": "a791f4ade7e3816c8739ab0de343c86fad06377a", "url": "https://github.com/elastic/elasticsearch/commit/a791f4ade7e3816c8739ab0de343c86fad06377a", "message": "Merge remote-tracking branch 'elastic/master' into add-trace-logging-rest-requests", "committedDate": "2020-01-31T17:20:31Z", "type": "commit"}, {"oid": "4fbd42306f81bace7102665f85cc5e97f0bcff77", "url": "https://github.com/elastic/elasticsearch/commit/4fbd42306f81bace7102665f85cc5e97f0bcff77", "message": "simpler nicer test", "committedDate": "2020-01-31T21:14:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4NjA3OA==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r373986078", "bodyText": "let's also include restResponse.status() here, as well as content type, length and X_OPAQUE_ID", "author": "ywelsch", "createdAt": "2020-02-03T09:05:31Z", "path": "server/src/main/java/org/elasticsearch/http/DefaultRestChannel.java", "diffHunk": "@@ -77,6 +84,9 @@ protected BytesStreamOutput newBytesOutput() {\n \n     @Override\n     public void sendResponse(RestResponse restResponse) {\n+        if (tracerLog != null) {\n+            tracerLog.trace(new ParameterizedMessage(\"[{}] sent response to [{}]\", request.hashCode(), httpChannel));", "originalCommit": "4fbd42306f81bace7102665f85cc5e97f0bcff77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4NjYxOA==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r373986618", "bodyText": "Should we move this to the finally block where we have actually sent the response?\nThis allows us to log something different in case where sending the response failed.", "author": "ywelsch", "createdAt": "2020-02-03T09:06:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4NjA3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk4ODk0OA==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r373988948", "bodyText": "Instead of the hashCode here, I would prefer to generate an actual unique value for each request (AtomicLong generator could be in RestRequest AFAICS), and return that through a getRequestId() method.", "author": "ywelsch", "createdAt": "2020-02-03T09:12:11Z", "path": "server/src/main/java/org/elasticsearch/http/AbstractHttpServerTransport.java", "diffHunk": "@@ -349,6 +375,15 @@ private void handleIncomingRequest(final HttpRequest httpRequest, final HttpChan\n             restRequest = innerRestRequest;\n         }\n \n+        final Logger trace;\n+        if (tracerLog.isTraceEnabled() && shouldTraceRequest(httpRequest.uri())) {\n+            tracerLog.trace(new ParameterizedMessage(\"[{}][{}][{}] received request from [{}]\", restRequest.hashCode(),", "originalCommit": "4fbd42306f81bace7102665f85cc5e97f0bcff77", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk5MDI3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r373990275", "bodyText": "let's add X_OPAQUE_ID here as well (this will make for great debugging)", "author": "ywelsch", "createdAt": "2020-02-03T09:15:18Z", "path": "server/src/main/java/org/elasticsearch/http/AbstractHttpServerTransport.java", "diffHunk": "@@ -349,6 +375,15 @@ private void handleIncomingRequest(final HttpRequest httpRequest, final HttpChan\n             restRequest = innerRestRequest;\n         }\n \n+        final Logger trace;\n+        if (tracerLog.isTraceEnabled() && shouldTraceRequest(httpRequest.uri())) {\n+            tracerLog.trace(new ParameterizedMessage(\"[{}][{}][{}] received request from [{}]\", restRequest.hashCode(),\n+                httpRequest.method(), httpRequest.uri(), httpChannel), exception);", "originalCommit": "4fbd42306f81bace7102665f85cc5e97f0bcff77", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "907f5d6351320bc05372d638bee34f9408a562a3", "url": "https://github.com/elastic/elasticsearch/commit/907f5d6351320bc05372d638bee34f9408a562a3", "message": "Merge remote-tracking branch 'elastic/master' into add-trace-logging-rest-requests", "committedDate": "2020-02-03T09:57:50Z", "type": "commit"}, {"oid": "f82eeaf013318d6b2897381770a3b11306163a27", "url": "https://github.com/elastic/elasticsearch/commit/f82eeaf013318d6b2897381770a3b11306163a27", "message": "CR: comments", "committedDate": "2020-02-03T11:11:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1MjQwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r374052405", "bodyText": "I wonder if we should rename AbstractHttpServerTransport to HttpServerTransport, so that this looks less ugly. @tbrooks8 thoughts?", "author": "ywelsch", "createdAt": "2020-02-03T11:30:12Z", "path": "docs/reference/modules/http.asciidoc", "diffHunk": "@@ -108,3 +108,33 @@ client HTTP responses, defaults to unbounded.\n \n It also uses the common\n <<modules-network,network settings>>.\n+\n+[float]\n+=== Rest Request Tracer\n+\n+The http module has a dedicated tracer logger which, when activated, logs incoming requests. The log can be dynamically activated\n+by setting the level of the `org.elasticsearch.http.AbstractHttpServerTransport.tracer` logger to `TRACE`:\n+\n+[source,console]\n+--------------------------------------------------\n+PUT _cluster/settings\n+{\n+   \"transient\" : {\n+      \"logger.org.elasticsearch.http.AbstractHttpServerTransport.tracer\" : \"TRACE\"", "originalCommit": "f82eeaf013318d6b2897381770a3b11306163a27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5NjA3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r374196072", "bodyText": "I'm all for the renaming. We could technically even use a logger name not tied to a specific class name couldn't we?\nI'm wondering if logger.org.elasticsearch.http.tracer isn't even better?", "author": "original-brownbear", "createdAt": "2020-02-03T16:15:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1MjQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAyODk4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r375028981", "bodyText": "I am very much in favor of dedicated name. There is already a little bit of tension between TransportService.tracer and TransportLogger. So I think we are going to need to unify those at some point. I think that we should pick a natural name for the http logger which might be a guide for a unified transport tracer/logger.\nI feel a little weird about logger.org.elasticsearch.http.tracer as it seems kind of odd when all other logs will include a class. org.elasticsearch.http.Tracer? org.elasticsearch.http.HttpTracer? I'm not super opposed to logger.org.elasticsearch.http.tracer. It just feels weird (even if it kind of looks like what we currently do for the TransportService).", "author": "tbrooks8", "createdAt": "2020-02-05T02:22:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1MjQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIyNDAwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r375224001", "bodyText": "+1 to factor out the tracing functionality into its own class (e.g. org.elasticsearch.http.HttpTracer), which will serve as name for the logger to be configured.", "author": "ywelsch", "createdAt": "2020-02-05T12:21:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1MjQwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI0NTI2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51684#discussion_r375245266", "bodyText": "@ywelsch @tbrooks8 alright, extracted the whole trace logging logic into its own class in bf325ba :)", "author": "original-brownbear", "createdAt": "2020-02-05T13:11:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1MjQwNQ=="}], "type": "inlineReview"}, {"oid": "65b524b0d45ef376f486b6418aac76de19d146c4", "url": "https://github.com/elastic/elasticsearch/commit/65b524b0d45ef376f486b6418aac76de19d146c4", "message": "Merge remote-tracking branch 'elastic/master' into add-trace-logging-rest-requests", "committedDate": "2020-02-05T12:25:51Z", "type": "commit"}, {"oid": "bf325bae194a5f8641458a989f9cc599d2855856", "url": "https://github.com/elastic/elasticsearch/commit/bf325bae194a5f8641458a989f9cc599d2855856", "message": "CR: trace logger in separate class", "committedDate": "2020-02-05T13:10:12Z", "type": "commit"}, {"oid": "cd80396fa9eafba2b5a9764c667560f4b6742cb6", "url": "https://github.com/elastic/elasticsearch/commit/cd80396fa9eafba2b5a9764c667560f4b6742cb6", "message": "urgh formatting", "committedDate": "2020-02-05T13:17:34Z", "type": "commit"}]}