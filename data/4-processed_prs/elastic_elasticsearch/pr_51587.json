{"pr_number": 51587, "pr_title": "Support downloading JDKs with legacy version format", "pr_createdAt": "2020-01-29T03:30:57Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51587", "timeline": [{"oid": "f8acfde90d00de4d8b84041a3a864b0c5b0b8d78", "url": "https://github.com/elastic/elasticsearch/commit/f8acfde90d00de4d8b84041a3a864b0c5b0b8d78", "message": "Support downloading JDKs with legacy version format\n\nSigned-off-by: Mark Vieira <portugee@gmail.com>", "committedDate": "2020-01-29T03:28:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY4NTg3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51587#discussion_r372685871", "bodyText": "future note: we should really do the translation for darwin/mac (whichever we consider the oddity) instead of having the user have to know both may exist depending on the version/vendor.", "author": "rjernst", "createdAt": "2020-01-29T23:23:05Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java", "diffHunk": "@@ -20,37 +20,41 @@\n package org.elasticsearch.gradle;\n \n import org.gradle.api.Buildable;\n-import org.gradle.api.Project;\n import org.gradle.api.artifacts.Configuration;\n+import org.gradle.api.model.ObjectFactory;\n import org.gradle.api.provider.Property;\n import org.gradle.api.tasks.TaskDependency;\n \n import java.io.File;\n-import java.util.Arrays;\n-import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n public class Jdk implements Buildable, Iterable<File> {\n \n     private static final List<String> ALLOWED_VENDORS = List.of(\"adoptopenjdk\", \"openjdk\");\n-    static final Pattern VERSION_PATTERN = Pattern.compile(\"(\\\\d+)(\\\\.\\\\d+\\\\.\\\\d+)?\\\\+(\\\\d+(?:\\\\.\\\\d+)?)(@([a-f0-9]{32}))?\");\n-    private static final List<String> ALLOWED_PLATFORMS = Collections.unmodifiableList(Arrays.asList(\"darwin\", \"linux\", \"windows\", \"mac\"));\n+    private static final List<String> ALLOWED_PLATFORMS = List.of(\"darwin\", \"linux\", \"windows\", \"mac\");", "originalCommit": "f8acfde90d00de4d8b84041a3a864b0c5b0b8d78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY4ODQ1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51587#discussion_r372688451", "bodyText": "Agreed, and this will be much easier to ditch when we move to using the JVM catalog for this.", "author": "mark-vieira", "createdAt": "2020-01-29T23:31:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY4NTg3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY4NjUxMg==", "url": "https://github.com/elastic/elasticsearch/pull/51587#discussion_r372686512", "bodyText": "Can we either have a shared method for forming the name, or have a getConfigurationName() method on the jdk?", "author": "rjernst", "createdAt": "2020-01-29T23:25:11Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/JdkDownloadPlugin.java", "diffHunk": "@@ -37,44 +37,46 @@\n import org.gradle.api.file.RelativePath;\n import org.gradle.api.provider.Provider;\n import org.gradle.api.tasks.Copy;\n+import org.gradle.api.tasks.TaskProvider;\n \n-import java.io.File;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n-import java.util.Arrays;\n import java.util.HashMap;\n import java.util.Locale;\n import java.util.Map;\n import java.util.concurrent.Callable;\n-import java.util.function.Supplier;\n-import java.util.regex.Matcher;\n+import java.util.stream.StreamSupport;\n+\n+import static org.elasticsearch.gradle.Util.capitalize;\n+import static org.elasticsearch.gradle.tool.Boilerplate.findByName;\n+import static org.elasticsearch.gradle.tool.Boilerplate.maybeCreate;\n \n public class JdkDownloadPlugin implements Plugin<Project> {\n \n     private static final String REPO_NAME_PREFIX = \"jdk_repo_\";\n-    private static final String CONTAINER_NAME = \"jdks\";\n+    private static final String EXTENSION_NAME = \"jdks\";\n \n     @Override\n     public void apply(Project project) {\n-        NamedDomainObjectContainer<Jdk> jdksContainer = project.container(Jdk.class, name -> new Jdk(name, project));\n-        project.getExtensions().add(CONTAINER_NAME, jdksContainer);\n+        NamedDomainObjectContainer<Jdk> jdksContainer = project.container(\n+            Jdk.class,\n+            name -> new Jdk(name, project.getConfigurations().create(\"jdk_\" + name), project.getObjects())\n+        );\n+        project.getExtensions().add(EXTENSION_NAME, jdksContainer);\n \n         project.afterEvaluate(p -> {\n             for (Jdk jdk : jdksContainer) {\n                 jdk.finalizeValues();\n-                String vendor = jdk.getVendor();\n-                String version = jdk.getVersion();\n-                String platform = jdk.getPlatform();\n \n                 // depend on the jdk directory \"artifact\" from the root project\n                 DependencyHandler dependencies = project.getDependencies();\n                 Map<String, Object> depConfig = new HashMap<>();\n                 depConfig.put(\"path\", \":\"); // root project\n-                depConfig.put(\"configuration\", configName(\"extracted_jdk\", vendor, version, platform));\n-                dependencies.add(jdk.getConfiguration().getName(), dependencies.project(depConfig));\n+                depConfig.put(\"configuration\", configName(\"extracted_jdk\", jdk.getVendor(), jdk.getVersion(), jdk.getPlatform()));\n+                project.getDependencies().add(\"jdk_\" + jdk.getName(), dependencies.project(depConfig));", "originalCommit": "f8acfde90d00de4d8b84041a3a864b0c5b0b8d78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY4OTM4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51587#discussion_r372689381", "bodyText": "I'ved pulled out a getConfigurationName() method as suggested.", "author": "mark-vieira", "createdAt": "2020-01-29T23:34:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY4NjUxMg=="}], "type": "inlineReview"}, {"oid": "53bf61b87ca143898f3e3c752910793d26e540d0", "url": "https://github.com/elastic/elasticsearch/commit/53bf61b87ca143898f3e3c752910793d26e540d0", "message": "Polish\n\nSigned-off-by: Mark Vieira <portugee@gmail.com>", "committedDate": "2020-01-29T23:34:26Z", "type": "commit"}]}