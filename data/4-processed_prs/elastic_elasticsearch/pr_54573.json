{"pr_number": 54573, "pr_title": "Fix small reads of multi-part blobs", "pr_createdAt": "2020-04-01T11:23:12Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54573", "timeline": [{"oid": "f9ccb5f9226c6e7428bf7209099e2b40189ce6f0", "url": "https://github.com/elastic/elasticsearch/commit/f9ccb5f9226c6e7428bf7209099e2b40189ce6f0", "message": "Fix small reads of multi-part blobs", "committedDate": "2020-04-01T11:21:55Z", "type": "commit"}, {"oid": "2cfd80e7319396104c4fba610d15c2be0d8d444e", "url": "https://github.com/elastic/elasticsearch/commit/2cfd80e7319396104c4fba610d15c2be0d8d444e", "message": "Tighter bound", "committedDate": "2020-04-01T11:26:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NjczOA==", "url": "https://github.com/elastic/elasticsearch/pull/54573#discussion_r401566738", "bodyText": "Thanks, I was able to reproduce and came with a similar fix.\nFor better readability I'd suggest to isolate single part case (and be paranoid about the length to read) from the multiple parts case, something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    endInPart - startInPart\n          \n          \n            \n                    if (fileInfo.numberOfParts() == 1L) {\n          \n          \n            \n                        return blobContainer.readBlob(fileInfo.partName(0L), position, Math.min(length, fileInfo.partBytes(0) - position));\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    final long startPart = getPartNumberForPosition(position);\n          \n          \n            \n                    final long endPart = getPartNumberForPosition(position + length);\n          \n          \n            \n            \n          \n          \n            \n                    return new SlicedInputStream(endPart - startPart + 1L) {\n          \n          \n            \n                        @Override\n          \n          \n            \n                        protected InputStream openSlice(long slice) throws IOException {\n          \n          \n            \n                            final long currentPart = startPart + slice;\n          \n          \n            \n                            final long startInPart = (currentPart == startPart) ? getRelativePositionInPart(position) : 0L;\n          \n          \n            \n                            final long endInPart\n          \n          \n            \n                                = (currentPart == endPart) ? getRelativePositionInPart(position + length) : getLengthOfPart(currentPart);\n          \n          \n            \n                            return blobContainer.readBlob(fileInfo.partName(currentPart), startInPart, endInPart - startInPart\n          \n          \n            \n                            );\n          \n          \n            \n                        }\n          \n          \n            \n                    };", "author": "tlrx", "createdAt": "2020-04-01T12:11:39Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/index/store/BaseSearchableSnapshotIndexInput.java", "diffHunk": "@@ -54,10 +54,13 @@ protected InputStream openInputStream(final long position, final long length) th\n                 @Override\n                 protected InputStream openSlice(long slice) throws IOException {\n                     final long currentPart = startPart + slice;\n+                    final long startInPart = (currentPart == startPart) ? getRelativePositionInPart(position) : 0L;\n+                    final long endInPart\n+                        = (currentPart == endPart) ? getRelativePositionInPart(position + length) : getLengthOfPart(currentPart);\n                     return blobContainer.readBlob(\n                         fileInfo.partName(currentPart),\n-                        (currentPart == startPart) ? getRelativePositionInPart(position) : 0L,\n-                        (currentPart == endPart) ? getRelativePositionInPart(length) : getLengthOfPart(currentPart)\n+                        startInPart,\n+                        endInPart - startInPart", "originalCommit": "2cfd80e7319396104c4fba610d15c2be0d8d444e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE5NDE0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/54573#discussion_r402194142", "bodyText": "Sure, sounds good, see 558e68a.", "author": "DaveCTurner", "createdAt": "2020-04-02T09:58:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NjczOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NzE1OA==", "url": "https://github.com/elastic/elasticsearch/pull/54573#discussion_r401567158", "bodyText": "\ud83d\udc4d", "author": "tlrx", "createdAt": "2020-04-01T12:12:33Z", "path": "x-pack/plugin/searchable-snapshots/src/test/java/org/elasticsearch/index/store/cache/TestUtils.java", "diffHunk": "@@ -70,70 +70,100 @@ public static void assertCounter(IndexInputStats.Counter counter, long total, lo\n      * Any attempt to read a different blob will throw a {@link FileNotFoundException}\n      */\n     static BlobContainer singleBlobContainer(final String blobName, final byte[] blobContent) {\n-        return new BlobContainer() {\n-\n+        return new MostlyUnimplementedFakeBlobContainer() {\n             @Override\n             public InputStream readBlob(String name, long position, long length) throws IOException {\n                 if (blobName.equals(name) == false) {\n                     throw new FileNotFoundException(\"Blob not found: \" + name);\n                 }\n-                return Streams.limitStream(new ByteArrayInputStream(blobContent, Math.toIntExact(position), blobContent.length), length);\n+                assert position + length <= blobContent.length", "originalCommit": "2cfd80e7319396104c4fba610d15c2be0d8d444e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d69d4689355d8bc57af26cf8002f6c0db7f6c5ea", "url": "https://github.com/elastic/elasticsearch/commit/d69d4689355d8bc57af26cf8002f6c0db7f6c5ea", "message": "Overeager assertion", "committedDate": "2020-04-02T09:57:50Z", "type": "commit"}, {"oid": "558e68a4d0f123ad08266a2e81258cbcf5319a1f", "url": "https://github.com/elastic/elasticsearch/commit/558e68a4d0f123ad08266a2e81258cbcf5319a1f", "message": "Review feedback", "committedDate": "2020-04-02T09:57:59Z", "type": "commit"}, {"oid": "34395e1315f2ca04c517a0c9191a1cd6fa173e9d", "url": "https://github.com/elastic/elasticsearch/commit/34395e1315f2ca04c517a0c9191a1cd6fa173e9d", "message": "Merge branch 'feature/searchable-snapshots' into 2020-04-01-fix-small-reads-of-multi-part-blobs", "committedDate": "2020-04-02T10:00:15Z", "type": "commit"}, {"oid": "e29e59b73f394dcdae0a36de888f6dd2335ff6bf", "url": "https://github.com/elastic/elasticsearch/commit/e29e59b73f394dcdae0a36de888f6dd2335ff6bf", "message": "Merge branch 'feature/searchable-snapshots' into 2020-04-01-fix-small-reads-of-multi-part-blobs", "committedDate": "2020-04-02T13:14:01Z", "type": "commit"}]}