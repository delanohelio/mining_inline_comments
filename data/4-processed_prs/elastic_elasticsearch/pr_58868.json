{"pr_number": 58868, "pr_title": "Make Inference processor field_map and inference_config optional", "pr_createdAt": "2020-07-01T17:54:03Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58868", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5MzQzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r448593439", "bodyText": "This will blow up if the user is attempting to infer against a classification model and the InternalInferModelAction has to serialize to a node before 7.8.0.", "author": "benwtrent", "createdAt": "2020-07-01T20:15:59Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/EmptyConfigUpdate.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n+\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.io.stream.StreamInput;\n+import org.elasticsearch.common.io.stream.StreamOutput;\n+import org.elasticsearch.common.xcontent.ObjectParser;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+\n+import java.io.IOException;\n+\n+public class EmptyConfigUpdate implements InferenceConfigUpdate {\n+\n+    public static final ParseField NAME = new ParseField(\"empty\");\n+\n+    private static final ObjectParser<EmptyConfigUpdate, Void> PARSER =\n+        new ObjectParser<>(NAME.getPreferredName(), EmptyConfigUpdate::new);\n+\n+    public static EmptyConfigUpdate fromXContent(XContentParser parser) {\n+        return PARSER.apply(parser, null);\n+    }\n+\n+    public EmptyConfigUpdate() {\n+    }\n+\n+    public EmptyConfigUpdate(StreamInput in) {\n+    }\n+\n+    @Override\n+    public InferenceConfig apply(InferenceConfig originalConfig) {\n+        return originalConfig;\n+    }\n+\n+    @Override\n+    public InferenceConfig toConfig() {\n+        return RegressionConfig.EMPTY_PARAMS;\n+    }", "originalCommit": "19224ccb5fe30a576bbce043bbe9005814e3a654", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgzOTEzNg==", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r448839136", "bodyText": "Yikes we've got the same problem with the ResultsFieldUpdate added for the pipeline agg.\nThere is a work around but it won't be elegant", "author": "davidkyle", "createdAt": "2020-07-02T08:34:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5MzQzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkyNTIxMw==", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r448925213", "bodyText": "@davidkyle The inference factory already knows the minimum node version. So, I suggest we use that to fail early when checking if this option can be left out or not.", "author": "benwtrent", "createdAt": "2020-07-02T11:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5MzQzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4NTExOQ==", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r448985119", "bodyText": "Good idea I've pushed that change", "author": "davidkyle", "createdAt": "2020-07-02T13:03:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5MzQzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzMDAyMw==", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r449030023", "bodyText": "With this change, I am wondering if toConfig() should throw for EmptyConfigUpdate. IIRC, toConfig is only used for BWC serialization.", "author": "benwtrent", "createdAt": "2020-07-02T14:10:10Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/ingest/InferenceProcessor.java", "diffHunk": "@@ -302,12 +302,17 @@ public InferenceProcessor create(Map<String, Processor.Factory> processorFactori\n                 fieldMap = Collections.emptyMap();\n             }\n \n-            InferenceConfigUpdate inferenceConfig;\n+            InferenceConfigUpdate inferenceConfigUpdate;\n             Map<String, Object> inferenceConfigMap = ConfigurationUtils.readOptionalMap(TYPE, tag, config, INFERENCE_CONFIG);\n             if (inferenceConfigMap == null) {\n-                inferenceConfig = new EmptyConfigUpdate();\n+                if (minNodeVersion.before(EmptyConfigUpdate.minimumSupportedVersion())) {", "originalCommit": "2d4b19c53b3c2bf7f7e2036eb3c71dc7d7493804", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA4NDIzOA==", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r449084238", "bodyText": "\ud83d\udc4d", "author": "davidkyle", "createdAt": "2020-07-02T15:27:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzMDAyMw=="}], "type": "inlineReview"}, {"oid": "9996393f55689a157aa6e59656b5423fa3d48a97", "url": "https://github.com/elastic/elasticsearch/commit/9996393f55689a157aa6e59656b5423fa3d48a97", "message": "Make field_map and inference_config optional", "committedDate": "2020-07-02T14:20:44Z", "type": "commit"}, {"oid": "619fdb9da272d2401e1860ee978a1266d5ab2b1d", "url": "https://github.com/elastic/elasticsearch/commit/619fdb9da272d2401e1860ee978a1266d5ab2b1d", "message": "doc update", "committedDate": "2020-07-02T14:20:45Z", "type": "commit"}, {"oid": "03612fb26286f477b0e9c68d47f57be8bb73e2b5", "url": "https://github.com/elastic/elasticsearch/commit/03612fb26286f477b0e9c68d47f57be8bb73e2b5", "message": "Check nodes support updates", "committedDate": "2020-07-02T14:20:45Z", "type": "commit"}, {"oid": "f881ecd30dfa400ae6453e98559889ae666094a4", "url": "https://github.com/elastic/elasticsearch/commit/f881ecd30dfa400ae6453e98559889ae666094a4", "message": "Fixing tests after rebase", "committedDate": "2020-07-02T15:25:31Z", "type": "commit"}, {"oid": "f881ecd30dfa400ae6453e98559889ae666094a4", "url": "https://github.com/elastic/elasticsearch/commit/f881ecd30dfa400ae6453e98559889ae666094a4", "message": "Fixing tests after rebase", "committedDate": "2020-07-02T15:25:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA5Mjk5MA==", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r449092990", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    XPackLicenseState licenseState = mock(XPackLicenseState.class);\n          \n          \n            \n                    when(licenseState.checkFeature(XPackLicenseState.Feature.MACHINE_LEARNING)).thenReturn(true);\n          \n      \n    \n    \n  \n\nSince they aren't used anywhere", "author": "benwtrent", "createdAt": "2020-07-02T15:34:59Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/inference/ingest/InferenceProcessorFactoryTests.java", "diffHunk": "@@ -68,7 +67,7 @@ public void setUpVariables() {\n                 ClusterService.USER_DEFINED_METADATA,\n                 ClusterApplierService.CLUSTER_SERVICE_SLOW_TASK_LOGGING_THRESHOLD_SETTING)));\n         clusterService = new ClusterService(settings, clusterSettings, tp);\n-        licenseState = mock(XPackLicenseState.class);\n+        XPackLicenseState licenseState = mock(XPackLicenseState.class);\n         when(licenseState.checkFeature(XPackLicenseState.Feature.MACHINE_LEARNING)).thenReturn(true);", "originalCommit": "f881ecd30dfa400ae6453e98559889ae666094a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc9ae05026ec5996478533c6c713b9d1770c318f", "url": "https://github.com/elastic/elasticsearch/commit/fc9ae05026ec5996478533c6c713b9d1770c318f", "message": "Config updates don't implement toxcontent", "committedDate": "2020-07-02T18:47:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwOTE4OA==", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r449209188", "bodyText": "Since the 7.9 branch was cut this code won't be hit from the master branch. I will make the adjustments on the backport", "author": "davidkyle", "createdAt": "2020-07-02T18:52:45Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/action/InternalInferModelActionRequestTests.java", "diffHunk": "@@ -66,23 +70,4 @@ protected NamedWriteableRegistry getNamedWriteableRegistry() {\n         entries.addAll(new MlInferenceNamedXContentProvider().getNamedWriteables());\n         return new NamedWriteableRegistry(entries);\n     }\n-\n-    @Override\n-    protected Request mutateInstanceForVersion(Request instance, Version version) {\n-        if (version.before(Version.V_7_8_0)) {", "originalCommit": "fc9ae05026ec5996478533c6c713b9d1770c318f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "60dbb02f539ad0d20d4a009f76b5ce6ce372d382", "url": "https://github.com/elastic/elasticsearch/commit/60dbb02f539ad0d20d4a009f76b5ce6ce372d382", "message": "precommit", "committedDate": "2020-07-02T18:58:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyMDkxMw==", "url": "https://github.com/elastic/elasticsearch/pull/58868#discussion_r449220913", "bodyText": "I think we should keep this as AbstractBWCWireSerializationTestCase But the mutateInstanceForVersion clauses could be removed.\nThis way we catch if anything funky changes in serialization between 7.x and 8", "author": "benwtrent", "createdAt": "2020-07-02T19:18:13Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/action/InternalInferModelActionRequestTests.java", "diffHunk": "@@ -27,7 +24,7 @@\n import java.util.stream.Stream;\n \n \n-public class InternalInferModelActionRequestTests extends AbstractBWCWireSerializationTestCase<Request> {\n+public class InternalInferModelActionRequestTests extends AbstractWireSerializingTestCase<Request> {", "originalCommit": "60dbb02f539ad0d20d4a009f76b5ce6ce372d382", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "21b6ae1e9bc7fa24fa8f82e72ba8014233c93bb1", "url": "https://github.com/elastic/elasticsearch/commit/21b6ae1e9bc7fa24fa8f82e72ba8014233c93bb1", "message": "keep it bwc", "committedDate": "2020-07-02T19:31:53Z", "type": "commit"}]}