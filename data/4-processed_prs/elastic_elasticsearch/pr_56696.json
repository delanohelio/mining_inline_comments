{"pr_number": 56696, "pr_title": "[Transform] add support for terms agg in transforms", "pr_createdAt": "2020-05-13T16:07:05Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56696", "timeline": [{"oid": "c18238c01a9947b5cc5792f0ede9be1bed124aba", "url": "https://github.com/elastic/elasticsearch/commit/c18238c01a9947b5cc5792f0ede9be1bed124aba", "message": "[Transform] add support for terms agg in transforms", "committedDate": "2020-05-13T16:15:25Z", "type": "commit"}, {"oid": "c18238c01a9947b5cc5792f0ede9be1bed124aba", "url": "https://github.com/elastic/elasticsearch/commit/c18238c01a9947b5cc5792f0ede9be1bed124aba", "message": "[Transform] add support for terms agg in transforms", "committedDate": "2020-05-13T16:15:25Z", "type": "forcePushed"}, {"oid": "d9b6ea4638fe7ce56ff3b4dff9eaa00a3f03574c", "url": "https://github.com/elastic/elasticsearch/commit/d9b6ea4638fe7ce56ff3b4dff9eaa00a3f03574c", "message": "fixing test", "committedDate": "2020-05-13T16:51:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk3ODE0MA==", "url": "https://github.com/elastic/elasticsearch/pull/56696#discussion_r424978140", "bodyText": "\ud83d\ude04", "author": "hendrikmuhs", "createdAt": "2020-05-14T08:56:46Z", "path": "x-pack/plugin/src/test/resources/rest-api-spec/test/transform/preview_transforms.yml", "diffHunk": "@@ -265,12 +265,12 @@ setup:\n               \"group_by\": {\n                 \"time\": {\"date_histogram\": {\"fixed_interval\": \"1h\", \"field\": \"time\"}}},\n               \"aggs\": {\n-                \"vals\": {\"terms\": {\"field\":\"airline\"}}\n+                \"vals\": {\"significant_terms\": {\"field\":\"airline\"}}", "originalCommit": "d9b6ea4638fe7ce56ff3b4dff9eaa00a3f03574c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk4MTA1MA==", "url": "https://github.com/elastic/elasticsearch/pull/56696#discussion_r424981050", "bodyText": "\ud83d\udc4d this is almost exactly the way I implemented it, too (well, there is probably no other way).", "author": "hendrikmuhs", "createdAt": "2020-05-14T09:00:56Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/AggregationResultUtils.java", "diffHunk": "@@ -246,6 +250,35 @@ public Object value(Aggregation agg, Map<String, String> fieldTypeMap, String lo\n         }\n     }\n \n+    static class MultiBucketsAggExtractor implements AggValueExtractor {", "originalCommit": "d9b6ea4638fe7ce56ff3b4dff9eaa00a3f03574c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3ODg4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/56696#discussion_r425178885", "bodyText": "Great minds think alike.", "author": "benwtrent", "createdAt": "2020-05-14T14:25:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk4MTA1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk4ODY1NA==", "url": "https://github.com/elastic/elasticsearch/pull/56696#discussion_r424988654", "bodyText": "it would be good to cover this branch and have a test with nested terms aggs, like your common user example, broke down by e.g. businesses or filtered by something", "author": "hendrikmuhs", "createdAt": "2020-05-14T09:12:57Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/AggregationResultUtils.java", "diffHunk": "@@ -246,6 +250,35 @@ public Object value(Aggregation agg, Map<String, String> fieldTypeMap, String lo\n         }\n     }\n \n+    static class MultiBucketsAggExtractor implements AggValueExtractor {\n+        @Override\n+        public Object value(Aggregation agg, Map<String, String> fieldTypeMap, String lookupFieldPrefix) {\n+            MultiBucketsAggregation aggregation = (MultiBucketsAggregation) agg;\n+\n+            HashMap<String, Object> nested = new HashMap<>();\n+\n+            for (MultiBucketsAggregation.Bucket bucket : aggregation.getBuckets()) {\n+                if (bucket.getAggregations().iterator().hasNext() == false) {\n+                    nested.put(bucket.getKeyAsString(), bucket.getDocCount());\n+                } else {\n+                    HashMap<String, Object> nestedBucketObject = new HashMap<>();", "originalCommit": "d9b6ea4638fe7ce56ff3b4dff9eaa00a3f03574c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3OTE5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/56696#discussion_r425179191", "bodyText": "OK, will do.", "author": "benwtrent", "createdAt": "2020-05-14T14:26:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk4ODY1NA=="}], "type": "inlineReview"}, {"oid": "26eec61f048c4a47d93da90aaa6253525e16dd69", "url": "https://github.com/elastic/elasticsearch/commit/26eec61f048c4a47d93da90aaa6253525e16dd69", "message": "Merge branch 'master' into feature/ml-add-terms-support-transforms", "committedDate": "2020-05-14T18:55:24Z", "type": "commit"}, {"oid": "31d03ab34b33f0529b2140292dd5e9ab2d16c232", "url": "https://github.com/elastic/elasticsearch/commit/31d03ab34b33f0529b2140292dd5e9ab2d16c232", "message": "addressing pr comment", "committedDate": "2020-05-14T19:16:39Z", "type": "commit"}]}