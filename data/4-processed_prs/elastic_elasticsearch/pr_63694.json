{"pr_number": 63694, "pr_title": "EQL: Fix translation of bool fields", "pr_createdAt": "2020-10-14T17:41:52Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63694", "timeline": [{"oid": "ab772b11b6e92341e31fd752dc637859244e94b1", "url": "https://github.com/elastic/elasticsearch/commit/ab772b11b6e92341e31fd752dc637859244e94b1", "message": "EQL: Fix translation of bool fields\n\nThis commit fixes two issues in dealing with bool fields in EQL:\n- avoid simplifications of field == true expressions\n- adding comparison to clauses on fields missing logic (where bool)\n\nFix #63693", "committedDate": "2020-10-14T17:40:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwNTcxOA==", "url": "https://github.com/elastic/elasticsearch/pull/63694#discussion_r505005718", "bodyText": "Shouldn't this be enough? why do we need to check the top level separately?", "author": "matriv", "createdAt": "2020-10-14T22:05:06Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/optimizer/Optimizer.java", "diffHunk": "@@ -99,7 +104,34 @@ public LogicalPlan optimize(LogicalPlan verified) {\n         Batch label = new Batch(\"Set as Optimized\", Limiter.ONCE,\n                 new SetAsOptimized());\n \n-        return Arrays.asList(substitutions, operators, constraints, operators, ordering, local, label);\n+        return asList(substitutions, syntactic, operators, constraints, operators, ordering, local, label);\n+    }\n+\n+    private static class AddMissingEquals extends OptimizerRule<Filter> {\n+\n+        @Override\n+        protected LogicalPlan rule(Filter filter) {\n+            // check the condition itself\n+            Expression condition = replaceRawBoolFieldWithEquals(filter.condition());\n+            // otherwise look for binary logic\n+            if (condition == filter.condition()) {\n+                condition = condition.transformUp(b ->", "originalCommit": "ab772b11b6e92341e31fd752dc637859244e94b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIwNjIwNw==", "url": "https://github.com/elastic/elasticsearch/pull/63694#discussion_r505206207", "bodyText": "for cases such as where bool which have no other expression specified.", "author": "costin", "createdAt": "2020-10-15T06:36:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwNTcxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI4NTcyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/63694#discussion_r505285721", "bodyText": "I meant, that the transformUp would also catch this case, no?", "author": "matriv", "createdAt": "2020-10-15T07:46:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwNTcxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ2MjQzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/63694#discussion_r505462439", "bodyText": "No because it filters on BinaryLogic.", "author": "costin", "createdAt": "2020-10-15T11:20:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwNTcxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMwOTc1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/63694#discussion_r505309753", "bodyText": "Can you add more from the actual query DSL. The fact that there is a bool must and a term with true doesn't mean the actual query is entirely correct, more like how we do it with SQL (where the entire query is checked for correctness). For term at least, there is the new parameter that Mark H. added that makes it case insensitive or not.", "author": "astefan", "createdAt": "2020-10-15T08:06:00Z", "path": "x-pack/plugin/eql/src/test/resources/queryfolder_tests.txt", "diffHunk": "@@ -145,6 +145,49 @@ process where endsWith(user_name, \"c\")\n {\"wildcard\":{\"user_name\":{\"wildcard\":\"*c\",\"boost\":1.0}}}],\"boost\":1.0}}\n ;\n \n+fieldNoEquals\n+process where bool\n+;\n+{\"bool\":{\"must\":[\n+{\"term\":{\"bool\":{\"value\":true,\n+;\n+\n+fieldNoEqualsInExpression\n+process where length(file_name) > 0 and bool\n+;\n+{\"bool\":{\"must\":[", "originalCommit": "ab772b11b6e92341e31fd752dc637859244e94b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ2MzUzNA==", "url": "https://github.com/elastic/elasticsearch/pull/63694#discussion_r505463534", "bodyText": "I'm not a fan of comprehensive query tests since any optimization or change breaks the test. For example the bool must is separate since the term comparison gets applied on process as well.\nThe aim of this test is to check that the bool field is compared not to what. So checking the parameter for case insensitivity (which btw, does appear only if it gets set) goes beyond the scope tested here.", "author": "costin", "createdAt": "2020-10-15T11:22:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMwOTc1Mw=="}], "type": "inlineReview"}]}