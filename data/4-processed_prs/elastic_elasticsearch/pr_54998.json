{"pr_number": 54998, "pr_title": "Introduce node.roles setting", "pr_createdAt": "2020-04-09T03:31:32Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54998", "timeline": [{"oid": "e1bb90757b78502ea0eec9243cbb1d41af64a532", "url": "https://github.com/elastic/elasticsearch/commit/e1bb90757b78502ea0eec9243cbb1d41af64a532", "message": "Introduce node.roles setting\n\nToday we have individual settings for configuring node roles such as\nnode.data and node.master. Additionally, roles are pluggable and we have\nused this to introduce roles such as node.ml and node.voting_only. As\nthe number of roles is growing, managing these becomes harder for the\nuser. For example, to create a master-only node, today a user has to\nconfigure:\n - node.data: false\n - node.ingest: false\n - node.remote_cluster_client: false\n - node.ml: false\n\nat a minimum if they are relying on defaults, but also add:\n - node.master: true\n - node.transform: false\n - node.voting_only: false\n\nIf they want to be explicit. This is also challenging in cases where a\nuser wants to have configure a coordinating-only node which requires\ndisabling all roles, a list which we are adding to, requiring the user\nto keep checking whether a node has acquired any of these roles.\n\nThis commit addresses this by adding a list setting node.roles for which\na user has explicit control over the list of roles that a node has. If\nthe setting is configured, the node has exactly the roles in the list,\nand not any additional roles. This means to configure a master-only\nnode, the setting is merely 'node.roles: [master]', and to configure a\ncoordinating-only node, the setting is merely: 'node.roles: []'.\n\nWith this change we deprecate the existing 'node.*' settings such as\n'node.data'.", "committedDate": "2020-04-09T03:30:58Z", "type": "commit"}, {"oid": "254c5736c9ad1c366ff33a6cb5430f471cdd630b", "url": "https://github.com/elastic/elasticsearch/commit/254c5736c9ad1c366ff33a6cb5430f471cdd630b", "message": "Checkstyle", "committedDate": "2020-04-09T11:09:01Z", "type": "commit"}, {"oid": "eaf2b34d12a5d1b17b431f73a341acfd96f659bc", "url": "https://github.com/elastic/elasticsearch/commit/eaf2b34d12a5d1b17b431f73a341acfd96f659bc", "message": "Fix test", "committedDate": "2020-04-09T11:09:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEzNjU0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406136542", "bodyText": "Would there be any benefit to extracting this into a public constant, so that other classes can import it, instead of rekeying it? I'm just imagining typos, or trying to find usages with an IDE. Just a thought.", "author": "pugnascotia", "createdAt": "2020-04-09T11:23:59Z", "path": "server/src/main/java/org/elasticsearch/node/NodeRoleSettings.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.node;\n+\n+import org.elasticsearch.cluster.node.DiscoveryNode;\n+import org.elasticsearch.cluster.node.DiscoveryNodeRole;\n+import org.elasticsearch.common.settings.Setting;\n+import org.elasticsearch.common.settings.Setting.Property;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class NodeRoleSettings {\n+\n+    public static final Setting<List<DiscoveryNodeRole>> NODE_ROLES_SETTING = Setting.listSetting(\n+        \"node.roles\",", "originalCommit": "eaf2b34d12a5d1b17b431f73a341acfd96f659bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEzNzk2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406137961", "bodyText": "The typical way that we refer to these is via NODE_ROLES_SETTING.getKey(). This way, we can find all usages of the setting, whether it's the actual setting representation, or the key, in a single use of \"find usages\", rather than having to find usages for the key, and for the setting separately.", "author": "jasontedor", "createdAt": "2020-04-09T11:26:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEzNjU0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEzOTYxNA==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406139614", "bodyText": "Ah, that's what I ought to have said, having done exactly the same thing myself. \ud83d\udc4d", "author": "pugnascotia", "createdAt": "2020-04-09T11:30:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEzNjU0Mg=="}], "type": "inlineReview"}, {"oid": "7a78ed0ce0a6c5f3d78a1325321ae5728ff41556", "url": "https://github.com/elastic/elasticsearch/commit/7a78ed0ce0a6c5f3d78a1325321ae5728ff41556", "message": "Remove imports", "committedDate": "2020-04-09T11:24:52Z", "type": "commit"}, {"oid": "bb82fb4e755c0c241193e7d53cd92793bcda4a2c", "url": "https://github.com/elastic/elasticsearch/commit/bb82fb4e755c0c241193e7d53cd92793bcda4a2c", "message": "Use constant", "committedDate": "2020-04-09T11:27:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE4OTUzNA==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406189534", "bodyText": "I'm not sure about this. The assertion will hold if the roles collection has at least one item equal to the specifed role. That's not the same as it being the only role in the collection.", "author": "pugnascotia", "createdAt": "2020-04-09T13:06:46Z", "path": "server/src/test/java/org/elasticsearch/cluster/node/DiscoveryNodeTests.java", "diffHunk": "@@ -90,22 +93,20 @@ public void testDiscoveryNodeIsRemoteClusterClientDefault() {\n     }\n \n     public void testDiscoveryNodeIsRemoteClusterClientSet() {\n-        runTestDiscoveryNodeIsRemoteClusterClient(Settings.builder().put(Node.NODE_REMOTE_CLUSTER_CLIENT.getKey(), true).build(), true);\n+        runTestDiscoveryNodeIsRemoteClusterClient(remoteClusterClientNode(), true);\n     }\n \n     public void testDiscoveryNodeIsRemoteClusterClientUnset() {\n-        runTestDiscoveryNodeIsRemoteClusterClient(Settings.builder().put(Node.NODE_REMOTE_CLUSTER_CLIENT.getKey(), false).build(), false);\n+        runTestDiscoveryNodeIsRemoteClusterClient(nonRemoteClusterClientNode(), false);\n     }\n \n     private void runTestDiscoveryNodeIsRemoteClusterClient(final Settings settings, final boolean expected) {\n         final DiscoveryNode node = DiscoveryNode.createLocal(settings, new TransportAddress(TransportAddress.META_ADDRESS, 9200), \"node\");\n         assertThat(node.isRemoteClusterClient(), equalTo(expected));\n-        final Set<DiscoveryNodeRole> expectedRoles = new HashSet<>(DiscoveryNodeRole.BUILT_IN_ROLES);\n         if (expected) {\n-            assertThat(node.getRoles(), equalTo(expectedRoles));\n+            assertThat(node.getRoles(), hasItem(DiscoveryNodeRole.REMOTE_CLUSTER_CLIENT_ROLE));", "originalCommit": "eaf2b34d12a5d1b17b431f73a341acfd96f659bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE5MDI2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406190261", "bodyText": "Hmm, actually I may be misreading the before and after. Please ignore if I've misunderstood.", "author": "pugnascotia", "createdAt": "2020-04-09T13:08:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE4OTUzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwNDE0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r407704147", "bodyText": "The intention is not to test the exact list of roles, rather to test whether or not the node has the remote cluster client role based on whether or not it was in the list of configured roles. Therefore I have modified the test to reflect that.", "author": "jasontedor", "createdAt": "2020-04-13T20:33:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE4OTUzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE5NTMwMw==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406195303", "bodyText": "I see that this change is reflecting what the test was doing previously, but I also notice that the class name suggests that the node should only have the master role. Am I understanding it correctly, and is it worth changing the test?", "author": "pugnascotia", "createdAt": "2020-04-09T13:16:23Z", "path": "server/src/test/java/org/elasticsearch/indices/mapping/DedicatedMasterGetFieldMappingIT.java", "diffHunk": "@@ -20,21 +20,18 @@\n package org.elasticsearch.indices.mapping;\n \n import org.elasticsearch.common.settings.Settings;\n-import org.elasticsearch.node.Node;\n import org.junit.Before;\n \n import static org.elasticsearch.test.ESIntegTestCase.ClusterScope;\n import static org.elasticsearch.test.ESIntegTestCase.Scope;\n+import static org.elasticsearch.test.NodeRoles.nonDataNode;\n \n @ClusterScope(scope = Scope.TEST, numDataNodes = 0)\n public class DedicatedMasterGetFieldMappingIT extends SimpleGetFieldMappingsIT {\n \n     @Before\n     public void before1() throws Exception {\n-        Settings settings = Settings.builder()\n-                .put(Node.NODE_DATA_SETTING.getKey(), false)\n-                .build();\n-        internalCluster().startNodes(settings, Settings.EMPTY);\n+        internalCluster().startNodes(nonDataNode(), Settings.EMPTY);", "originalCommit": "eaf2b34d12a5d1b17b431f73a341acfd96f659bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc4NzYwMw==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r407787603", "bodyText": "This test is very old though, from when we only had two roles: data and master. Historically then, disabling data meant the node only had the master role. So yes, if we want to preserve the historical intent of this test, it should be a master-only node, although functionally for this test it doesn't matter either way (if the node has the ingest and remote_cluster_client roles or not).", "author": "jasontedor", "createdAt": "2020-04-14T00:01:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE5NTMwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwMjQ3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406202473", "bodyText": "This is super-nit-picky, but does it make sense to map and then sort, in case the abbreviation, for some reason, ends up making the result look unsorted? It's actually what DiscoveryNode#toString() does too.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return roles.stream().sorted().map(DiscoveryNodeRole::roleNameAbbreviation).collect(Collectors.joining());\n          \n          \n            \n                    return roles.stream().map(DiscoveryNodeRole::roleNameAbbreviation).sorted().collect(Collectors.joining());", "author": "pugnascotia", "createdAt": "2020-04-09T13:27:03Z", "path": "test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java", "diffHunk": "@@ -694,19 +702,17 @@ private String buildNodeName(int id, Settings settings) {\n      * returns a suffix string based on the node role. If no explicit role is defined, the suffix will be empty\n      */\n     private static String getRoleSuffix(Settings settings) {\n-        String suffix = \"\";\n-        if (Node.NODE_MASTER_SETTING.exists(settings) && Node.NODE_MASTER_SETTING.get(settings)) {\n-            suffix = suffix + DiscoveryNodeRole.MASTER_ROLE.roleNameAbbreviation();\n+        if (NodeRoleSettings.NODE_ROLES_SETTING.exists(settings) == false) {\n+            return \"\";\n         }\n-        if (Node.NODE_DATA_SETTING.exists(settings) && Node.NODE_DATA_SETTING.get(settings)) {\n-            suffix = suffix + DiscoveryNodeRole.DATA_ROLE.roleNameAbbreviation();\n-        }\n-        if (Node.NODE_MASTER_SETTING.exists(settings) && Node.NODE_MASTER_SETTING.get(settings) == false &&\n-            Node.NODE_DATA_SETTING.exists(settings) && Node.NODE_DATA_SETTING.get(settings) == false\n-            ) {\n-            suffix = suffix + \"c\";\n+\n+        final List<DiscoveryNodeRole> roles = NodeRoleSettings.NODE_ROLES_SETTING.get(settings);\n+\n+        if (roles.isEmpty()) {\n+            return \"c\";\n         }\n-        return suffix;\n+\n+        return roles.stream().sorted().map(DiscoveryNodeRole::roleNameAbbreviation).collect(Collectors.joining());", "originalCommit": "eaf2b34d12a5d1b17b431f73a341acfd96f659bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjcxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406206711", "bodyText": "Would the intention be even clearer here if we used Collections.emptyList?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Settings.builder().put(settings).putList(NodeRoleSettings.NODE_ROLES_SETTING.getKey(), List.of()).build();\n          \n          \n            \n                    return Settings.builder().put(settings).putList(NodeRoleSettings.NODE_ROLES_SETTING.getKey(), emptyList()).build();", "author": "pugnascotia", "createdAt": "2020-04-09T13:33:04Z", "path": "test/framework/src/main/java/org/elasticsearch/test/NodeRoles.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.test;\n+\n+import org.elasticsearch.cluster.node.DiscoveryNodeRole;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.node.NodeRoleSettings;\n+\n+import java.util.List;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Utility methods for creating {@link Settings} instances defining a set of {@link DiscoveryNodeRole}.\n+ */\n+public class NodeRoles {\n+\n+    public static Settings onlyRole(final DiscoveryNodeRole role) {\n+        return onlyRole(Settings.EMPTY, role);\n+    }\n+\n+    public static Settings onlyRole(final Settings settings, final DiscoveryNodeRole role) {\n+        return onlyRoles(settings, Set.of(role));\n+    }\n+\n+    public static Settings onlyRoles(final Set<DiscoveryNodeRole> roles) {\n+        return onlyRoles(Settings.EMPTY, roles);\n+    }\n+\n+    public static Settings onlyRoles(final Settings settings, final Set<DiscoveryNodeRole> roles) {\n+        return Settings.builder()\n+            .put(settings)\n+            .putList(\n+                NodeRoleSettings.NODE_ROLES_SETTING.getKey(),\n+                roles.stream().map(DiscoveryNodeRole::roleName).collect(Collectors.toList()))\n+            .build();\n+    }\n+\n+    public static Settings removeRoles(final Set<DiscoveryNodeRole> roles) {\n+        return removeRoles(Settings.EMPTY, roles);\n+    }\n+\n+    public static Settings removeRoles(final Settings settings, final Set<DiscoveryNodeRole> roles) {\n+        final Settings.Builder builder = Settings.builder().put(settings);\n+        builder.putList(\n+            NodeRoleSettings.NODE_ROLES_SETTING.getKey(),\n+            NodeRoleSettings.NODE_ROLES_SETTING.get(settings)\n+                .stream()\n+                .filter(Predicate.not(roles::contains))\n+                .map(DiscoveryNodeRole::roleName)\n+                .collect(Collectors.toUnmodifiableList())\n+        );\n+        return builder.build();\n+    }\n+\n+    public static Settings addRoles(final Set<DiscoveryNodeRole> roles) {\n+        return addRoles(Settings.EMPTY, roles);\n+    }\n+\n+    public static Settings addRoles(final Settings settings, final Set<DiscoveryNodeRole> roles) {\n+        final Settings.Builder builder = Settings.builder().put(settings);\n+        builder.putList(\n+            NodeRoleSettings.NODE_ROLES_SETTING.getKey(),\n+            NodeRoleSettings.NODE_ROLES_SETTING.get(settings)\n+                .stream().filter(roles::contains)\n+                .map(DiscoveryNodeRole::roleName)\n+                .collect(Collectors.toUnmodifiableList())\n+        );\n+        return builder.build();\n+    }\n+\n+    public static Settings noRoles() {\n+        return noRoles(Settings.EMPTY);\n+    }\n+\n+    public static Settings noRoles(final Settings settings) {\n+        return Settings.builder().put(settings).putList(NodeRoleSettings.NODE_ROLES_SETTING.getKey(), List.of()).build();", "originalCommit": "eaf2b34d12a5d1b17b431f73a341acfd96f659bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIzNTE0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406235143", "bodyText": "I think this line is supposed to match nodes where ML is enabled, no? The preceding comment says \"stopping ml nodes\".", "author": "pugnascotia", "createdAt": "2020-04-09T14:14:00Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/BasicDistributedJobsIT.java", "diffHunk": "@@ -302,7 +303,7 @@ public void testMaxConcurrentJobAllocations() throws Exception {\n             Runnable r = () -> {\n                 try {\n                     internalCluster()\n-                            .stopRandomNode(settings -> settings.getAsBoolean(MachineLearning.ML_ENABLED.getKey(), false));\n+                            .stopRandomNode(settings -> DiscoveryNode.hasRole(settings, MachineLearning.ML_ROLE) == false);", "originalCommit": "eaf2b34d12a5d1b17b431f73a341acfd96f659bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIzNjQ1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406236452", "bodyText": "The code used to enable master and data here, was that a mistake in the old code?", "author": "pugnascotia", "createdAt": "2020-04-09T14:15:50Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/MlDistributedFailureIT.java", "diffHunk": "@@ -127,15 +124,9 @@ public void testFullClusterRestart() throws Exception {\n     public void testCloseUnassignedJobAndDatafeed() throws Exception {\n         internalCluster().ensureAtMostNumDataNodes(0);\n         logger.info(\"Starting dedicated master node...\");\n-        internalCluster().startNode(Settings.builder()\n-                .put(\"node.master\", true)\n-                .put(\"node.data\", true)\n-                .put(\"node.ml\", false)\n-                .build());\n+        internalCluster().startMasterOnlyNode();", "originalCommit": "eaf2b34d12a5d1b17b431f73a341acfd96f659bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc4NDUxMg==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r407784512", "bodyText": "It looks like the logging message is what is incorrect here, and the test indeed needs two data nodes.", "author": "jasontedor", "createdAt": "2020-04-13T23:51:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIzNjQ1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIzNzMxMA==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406237310", "bodyText": "The code here used to disable master, but now it is enabled. Which is correct?", "author": "pugnascotia", "createdAt": "2020-04-09T14:16:57Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/MlDistributedFailureIT.java", "diffHunk": "@@ -127,15 +124,9 @@ public void testFullClusterRestart() throws Exception {\n     public void testCloseUnassignedJobAndDatafeed() throws Exception {\n         internalCluster().ensureAtMostNumDataNodes(0);\n         logger.info(\"Starting dedicated master node...\");\n-        internalCluster().startNode(Settings.builder()\n-                .put(\"node.master\", true)\n-                .put(\"node.data\", true)\n-                .put(\"node.ml\", false)\n-                .build());\n+        internalCluster().startMasterOnlyNode();\n         logger.info(\"Starting ml and data node...\");\n-        internalCluster().startNode(Settings.builder()\n-                .put(\"node.master\", false)\n-                .build());\n+        internalCluster().startNode(onlyRoles(Set.of(DiscoveryNodeRole.DATA_ROLE, DiscoveryNodeRole.MASTER_ROLE)));", "originalCommit": "bb82fb4e755c0c241193e7d53cd92793bcda4a2c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIzNzc0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406237745", "bodyText": "The code used to enable master and data here, was that a mistake in the old code?", "author": "pugnascotia", "createdAt": "2020-04-09T14:17:35Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/MlDistributedFailureIT.java", "diffHunk": "@@ -301,15 +284,9 @@ public void testCloseUnassignedFailedJobAndStopUnassignedStoppingDatafeed() thro\n     public void testStopAndForceStopDatafeed() throws Exception {\n         internalCluster().ensureAtMostNumDataNodes(0);\n         logger.info(\"Starting dedicated master node...\");\n-        internalCluster().startNode(Settings.builder()\n-            .put(\"node.master\", true)\n-            .put(\"node.data\", true)\n-            .put(\"node.ml\", false)\n-            .build());\n+        internalCluster().startMasterOnlyNode();", "originalCommit": "bb82fb4e755c0c241193e7d53cd92793bcda4a2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc4NTQ3OA==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r407785478", "bodyText": "Yeah, that was unnecessary in this test.", "author": "jasontedor", "createdAt": "2020-04-13T23:54:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIzNzc0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIzNzk1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r406237951", "bodyText": "The code here used to disable master, but now it is enabled. Which is correct?", "author": "pugnascotia", "createdAt": "2020-04-09T14:17:50Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/integration/MlDistributedFailureIT.java", "diffHunk": "@@ -301,15 +284,9 @@ public void testCloseUnassignedFailedJobAndStopUnassignedStoppingDatafeed() thro\n     public void testStopAndForceStopDatafeed() throws Exception {\n         internalCluster().ensureAtMostNumDataNodes(0);\n         logger.info(\"Starting dedicated master node...\");\n-        internalCluster().startNode(Settings.builder()\n-            .put(\"node.master\", true)\n-            .put(\"node.data\", true)\n-            .put(\"node.ml\", false)\n-            .build());\n+        internalCluster().startMasterOnlyNode();\n         logger.info(\"Starting ml and data node...\");\n-        internalCluster().startNode(Settings.builder()\n-            .put(\"node.master\", false)\n-            .build());\n+        internalCluster().startNode(onlyRoles(Set.of(DiscoveryNodeRole.DATA_ROLE, DiscoveryNodeRole.MASTER_ROLE)));", "originalCommit": "bb82fb4e755c0c241193e7d53cd92793bcda4a2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc4NTM5OA==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r407785398", "bodyText": "Oops, that should have been MachineLearning.ML_ROLE.", "author": "jasontedor", "createdAt": "2020-04-13T23:54:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIzNzk1MQ=="}], "type": "inlineReview"}, {"oid": "400ac0ec8cbf513438b75d7f6b5f2e654088d327", "url": "https://github.com/elastic/elasticsearch/commit/400ac0ec8cbf513438b75d7f6b5f2e654088d327", "message": "Merge remote-tracking branch 'elastic/master' into node-roles", "committedDate": "2020-04-13T20:31:05Z", "type": "commit"}, {"oid": "7fe22afd89651b8ab9613eb7c98572b67fc1f09d", "url": "https://github.com/elastic/elasticsearch/commit/7fe22afd89651b8ab9613eb7c98572b67fc1f09d", "message": "Fix test", "committedDate": "2020-04-13T20:53:35Z", "type": "commit"}, {"oid": "86663e9a638838790139b0d3c40454a98c57f451", "url": "https://github.com/elastic/elasticsearch/commit/86663e9a638838790139b0d3c40454a98c57f451", "message": "Fix sorting order", "committedDate": "2020-04-13T20:55:10Z", "type": "commit"}, {"oid": "8fc5eb1ffbaf2baa71f8661cd3fde20e08408165", "url": "https://github.com/elastic/elasticsearch/commit/8fc5eb1ffbaf2baa71f8661cd3fde20e08408165", "message": "Fix stopping ML nodes", "committedDate": "2020-04-13T20:58:19Z", "type": "commit"}, {"oid": "a6e899eb60bbbe6d08799a9bca45be02b97a6c11", "url": "https://github.com/elastic/elasticsearch/commit/a6e899eb60bbbe6d08799a9bca45be02b97a6c11", "message": "Fix ml test", "committedDate": "2020-04-13T23:51:59Z", "type": "commit"}, {"oid": "7c75d9bfcf4677ecc4dccaccdffc79ce6011d5e1", "url": "https://github.com/elastic/elasticsearch/commit/7c75d9bfcf4677ecc4dccaccdffc79ce6011d5e1", "message": "Fix one more ML test", "committedDate": "2020-04-13T23:57:06Z", "type": "commit"}, {"oid": "a431f370d0129cf2aa7c3930d6cefad66bb4ca5d", "url": "https://github.com/elastic/elasticsearch/commit/a431f370d0129cf2aa7c3930d6cefad66bb4ca5d", "message": "Oh", "committedDate": "2020-04-14T00:12:43Z", "type": "commit"}, {"oid": "7fea055176b43727ccdb44b9162e6c912385f700", "url": "https://github.com/elastic/elasticsearch/commit/7fea055176b43727ccdb44b9162e6c912385f700", "message": "Fix typo", "committedDate": "2020-04-14T00:13:02Z", "type": "commit"}, {"oid": "e926535a9317d34b350083183a9c40d77cdc7efe", "url": "https://github.com/elastic/elasticsearch/commit/e926535a9317d34b350083183a9c40d77cdc7efe", "message": "Add comments", "committedDate": "2020-04-14T00:15:50Z", "type": "commit"}, {"oid": "f7cef5c3ad4a64b021aa5ca521efbe076ce5b1a5", "url": "https://github.com/elastic/elasticsearch/commit/f7cef5c3ad4a64b021aa5ca521efbe076ce5b1a5", "message": "Fix addRoles", "committedDate": "2020-04-14T01:13:52Z", "type": "commit"}, {"oid": "9000d8ce393036c9877f9f83f3fcda1291a9916d", "url": "https://github.com/elastic/elasticsearch/commit/9000d8ce393036c9877f9f83f3fcda1291a9916d", "message": "Fix imports", "committedDate": "2020-04-14T11:34:10Z", "type": "commit"}, {"oid": "c564977c4e0afde520f7ae2f2d1e1136650cb57f", "url": "https://github.com/elastic/elasticsearch/commit/c564977c4e0afde520f7ae2f2d1e1136650cb57f", "message": "Fix imports", "committedDate": "2020-04-14T13:48:49Z", "type": "commit"}, {"oid": "fed70b4dd6d2a7f781d3871d96246e7e468d061c", "url": "https://github.com/elastic/elasticsearch/commit/fed70b4dd6d2a7f781d3871d96246e7e468d061c", "message": "Fix tests", "committedDate": "2020-04-14T14:22:34Z", "type": "commit"}, {"oid": "29805900c6b41f16582e23ee517d5bc4523953c4", "url": "https://github.com/elastic/elasticsearch/commit/29805900c6b41f16582e23ee517d5bc4523953c4", "message": "Fix test bugs", "committedDate": "2020-04-14T15:07:19Z", "type": "commit"}, {"oid": "cf52fe8fe263edc2a0dfb52f0541f662a8a06cc8", "url": "https://github.com/elastic/elasticsearch/commit/cf52fe8fe263edc2a0dfb52f0541f662a8a06cc8", "message": "Fix more tests", "committedDate": "2020-04-14T19:19:31Z", "type": "commit"}, {"oid": "6f26ea67dd33c8711c86ad27c6d781f50a9b110e", "url": "https://github.com/elastic/elasticsearch/commit/6f26ea67dd33c8711c86ad27c6d781f50a9b110e", "message": "Fix tests, make node.X settings private", "committedDate": "2020-04-15T01:54:02Z", "type": "commit"}, {"oid": "3e8667438ebb9e5b653b04a41e2bbcab0a875d22", "url": "https://github.com/elastic/elasticsearch/commit/3e8667438ebb9e5b653b04a41e2bbcab0a875d22", "message": "Remove unneeded role setting", "committedDate": "2020-04-15T02:58:53Z", "type": "commit"}, {"oid": "e903d0fc7ef627310ccf774603e42399870640d9", "url": "https://github.com/elastic/elasticsearch/commit/e903d0fc7ef627310ccf774603e42399870640d9", "message": "Merge branch 'master' into node-roles", "committedDate": "2020-04-15T10:56:59Z", "type": "commit"}, {"oid": "c038cbbedb62db68416984518e9ae8f25a5cf41d", "url": "https://github.com/elastic/elasticsearch/commit/c038cbbedb62db68416984518e9ae8f25a5cf41d", "message": "Merge remote-tracking branch 'elastic/master' into node-roles", "committedDate": "2020-04-15T20:41:49Z", "type": "commit"}, {"oid": "c260abdb0e899f77a1ac5c7127dd4d1a708b4afb", "url": "https://github.com/elastic/elasticsearch/commit/c260abdb0e899f77a1ac5c7127dd4d1a708b4afb", "message": "Docs", "committedDate": "2020-04-16T14:43:31Z", "type": "commit"}, {"oid": "f7ed0ea1b2eee6e456e7623ffc755344b3a5cf06", "url": "https://github.com/elastic/elasticsearch/commit/f7ed0ea1b2eee6e456e7623ffc755344b3a5cf06", "message": "Handle un-set roles and legacy setting", "committedDate": "2020-04-16T16:00:43Z", "type": "commit"}, {"oid": "64aaa65ab356056d66b9c41dc3403dc7f31e33d3", "url": "https://github.com/elastic/elasticsearch/commit/64aaa65ab356056d66b9c41dc3403dc7f31e33d3", "message": "Merge remote-tracking branch 'elastic' into node-roles", "committedDate": "2020-06-18T02:15:03Z", "type": "commit"}, {"oid": "cf2bae942273427cf49b8340943b634b2de9c403", "url": "https://github.com/elastic/elasticsearch/commit/cf2bae942273427cf49b8340943b634b2de9c403", "message": "Fix leftover merge conflicts", "committedDate": "2020-06-18T02:55:09Z", "type": "commit"}, {"oid": "1478a20c9812a80cf3865bb0897dde0a9db49b25", "url": "https://github.com/elastic/elasticsearch/commit/1478a20c9812a80cf3865bb0897dde0a9db49b25", "message": "Fix use of legacy settings", "committedDate": "2020-06-18T03:00:04Z", "type": "commit"}, {"oid": "8e226d8d9159181843a8a7d7cd65e9fc28ad7ccf", "url": "https://github.com/elastic/elasticsearch/commit/8e226d8d9159181843a8a7d7cd65e9fc28ad7ccf", "message": "Fix compilation", "committedDate": "2020-06-18T03:09:36Z", "type": "commit"}, {"oid": "e2c6f004750129e72575760f5915ff71faf7e035", "url": "https://github.com/elastic/elasticsearch/commit/e2c6f004750129e72575760f5915ff71faf7e035", "message": "Feedback", "committedDate": "2020-06-18T03:21:01Z", "type": "commit"}, {"oid": "cfb651311eb3506c00d77ac33bf53b93a52c033b", "url": "https://github.com/elastic/elasticsearch/commit/cfb651311eb3506c00d77ac33bf53b93a52c033b", "message": "Merge remote-tracking branch 'elastic/master' into node-roles", "committedDate": "2020-06-18T23:41:28Z", "type": "commit"}, {"oid": "7d593f0228fb038d0d9a26a8b4b85c074143c299", "url": "https://github.com/elastic/elasticsearch/commit/7d593f0228fb038d0d9a26a8b4b85c074143c299", "message": "Fix imports", "committedDate": "2020-06-18T23:43:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4MDQ4NA==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r444080484", "bodyText": "Typo:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            dedicated ingest nodes and to not have the `ingest` role on master` and `data`.\n          \n          \n            \n            dedicated ingest nodes and to not have the `ingest` role on `master` and `data`.\n          \n      \n    \n    \n  \n\nI'm not sure about the wording. Maybe:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            dedicated ingest nodes and to not have the `ingest` role on master` and `data`.\n          \n          \n            \n            dedicated ingest nodes and to remove the `ingest` role from nodes that have the `master` or `data` roles.", "author": "pugnascotia", "createdAt": "2020-06-23T09:13:59Z", "path": "docs/reference/modules/node.asciidoc", "diffHunk": "@@ -22,39 +22,36 @@ dedicated data nodes, {ml} nodes, and {transform} nodes.\n \n <<master-node,Master-eligible node>>::\n \n-A node that has `node.master` set to `true` (default), which makes it eligible\n-to be <<modules-discovery,elected as the _master_ node>>, which controls the\n-cluster.\n+A node that has the `master` role (default), which makes it eligible to be\n+<<modules-discovery,elected as the _master_ node>>, which controls the cluster.\n \n <<data-node,Data node>>::\n \n-A node that has `node.data` set to `true` (default). Data nodes hold data and\n-perform data related operations such as CRUD, search, and aggregations.\n+A node that has the `data` role (default). Data nodes hold data and perform data\n+related operations such as CRUD, search, and aggregations.\n \n <<ingest,Ingest node>>::\n \n-A node that has `node.ingest` set to `true` (default). Ingest nodes are able\n-to apply an <<pipeline,ingest pipeline>> to a document in order to transform\n-and enrich the document before indexing. With a heavy ingest load, it makes\n-sense to use dedicated ingest nodes and to mark the master and data nodes as\n-`node.ingest: false`.\n+A node that has the `ingest` role (default). Ingest nodes are able to apply an\n+<<pipeline,ingest pipeline>> to a document in order to transform and enrich the\n+document before indexing. With a heavy ingest load, it makes sense to use\n+dedicated ingest nodes and to not have the `ingest` role on master` and `data`.", "originalCommit": "7d593f0228fb038d0d9a26a8b4b85c074143c299", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMDkxNg==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r445030916", "bodyText": "Thanks I incorporated both of these.", "author": "jasontedor", "createdAt": "2020-06-24T16:45:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4MDQ4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4MTg0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r444081843", "bodyText": "Is this from a merge conflict?", "author": "pugnascotia", "createdAt": "2020-06-23T09:16:05Z", "path": "docs/reference/modules/node.asciidoc", "diffHunk": "@@ -256,6 +195,7 @@ node.remote_cluster_client: false <4>\n <2> The `node.data` role is enabled by default.\n <3> Disable the `node.ingest` role (enabled by default).\n <4> Disable remote cluster connections (enabled by default).\n+>>>>>>> elastic", "originalCommit": "7d593f0228fb038d0d9a26a8b4b85c074143c299", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMTAzMg==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r445031032", "bodyText": "Yes, thanks for catching that!", "author": "jasontedor", "createdAt": "2020-06-24T16:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4MTg0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA5NTU3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r444095571", "bodyText": "The method is testing settings.hasValue(\"node.roles\") three times. Could we just test it once, and put the rest of the code in the \"then\" block?", "author": "pugnascotia", "createdAt": "2020-06-23T09:39:09Z", "path": "test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java", "diffHunk": "@@ -707,15 +712,15 @@ private String buildNodeName(int id, Settings settings) {\n      */\n     private static String getRoleSuffix(Settings settings) {\n         String suffix = \"\";\n-        if (Node.NODE_MASTER_SETTING.exists(settings) && Node.NODE_MASTER_SETTING.get(settings)) {\n+        if (settings.hasValue(\"node.roles\") && DiscoveryNode.hasRole(settings, DiscoveryNodeRole.MASTER_ROLE)) {", "originalCommit": "7d593f0228fb038d0d9a26a8b4b85c074143c299", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzMjc2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r445032767", "bodyText": "Thanks, I included this.", "author": "jasontedor", "createdAt": "2020-06-24T16:48:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA5NTU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwMTA3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r444101072", "bodyText": "I can't help wondering if the roles setting implementation should be using a Set to begin with. \ud83e\udd37\u200d\u2642\ufe0f", "author": "pugnascotia", "createdAt": "2020-06-23T09:48:34Z", "path": "test/framework/src/main/java/org/elasticsearch/test/NodeRoles.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.test;\n+\n+import org.elasticsearch.cluster.node.DiscoveryNodeRole;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.node.NodeRoleSettings;\n+\n+import java.util.List;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+/**\n+ * Utility methods for creating {@link Settings} instances defining a set of {@link DiscoveryNodeRole}.\n+ */\n+public class NodeRoles {\n+\n+    public static Settings onlyRole(final DiscoveryNodeRole role) {\n+        return onlyRole(Settings.EMPTY, role);\n+    }\n+\n+    public static Settings onlyRole(final Settings settings, final DiscoveryNodeRole role) {\n+        return onlyRoles(settings, Set.of(role));\n+    }\n+\n+    public static Settings onlyRoles(final Set<DiscoveryNodeRole> roles) {\n+        return onlyRoles(Settings.EMPTY, roles);\n+    }\n+\n+    public static Settings onlyRoles(final Settings settings, final Set<DiscoveryNodeRole> roles) {\n+        return Settings.builder()\n+            .put(settings)\n+            .putList(\n+                NodeRoleSettings.NODE_ROLES_SETTING.getKey(),\n+                roles.stream().map(DiscoveryNodeRole::roleName).collect(Collectors.toUnmodifiableList()))\n+            .build();\n+    }\n+\n+    public static Settings removeRoles(final Set<DiscoveryNodeRole> roles) {\n+        return removeRoles(Settings.EMPTY, roles);\n+    }\n+\n+    public static Settings removeRoles(final Settings settings, final Set<DiscoveryNodeRole> roles) {\n+        final Settings.Builder builder = Settings.builder().put(settings);\n+        builder.putList(\n+            NodeRoleSettings.NODE_ROLES_SETTING.getKey(),\n+            NodeRoleSettings.NODE_ROLES_SETTING.get(settings)\n+                .stream()\n+                .filter(Predicate.not(roles::contains))\n+                .map(DiscoveryNodeRole::roleName)\n+                .collect(Collectors.toUnmodifiableList())\n+        );\n+        return builder.build();\n+    }\n+\n+    public static Settings addRoles(final Set<DiscoveryNodeRole> roles) {\n+        return addRoles(Settings.EMPTY, roles);\n+    }\n+\n+    public static Settings addRoles(final Settings settings, final Set<DiscoveryNodeRole> roles) {\n+        final Settings.Builder builder = Settings.builder().put(settings);\n+        builder.putList(\n+            NodeRoleSettings.NODE_ROLES_SETTING.getKey(),\n+            Stream.concat(NodeRoleSettings.NODE_ROLES_SETTING.get(settings).stream(), roles.stream())\n+                .map(DiscoveryNodeRole::roleName)\n+                .distinct()", "originalCommit": "7d593f0228fb038d0d9a26a8b4b85c074143c299", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwMzA5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54998#discussion_r444103095", "bodyText": "Would it be worth extracting a constant, since this is referenced a lot?\nprivate final mlRole = Set.of(MachineLearning.ML_ROLE);", "author": "pugnascotia", "createdAt": "2020-06-23T09:52:04Z", "path": "x-pack/plugin/ml/src/internalClusterTest/java/org/elasticsearch/xpack/ml/integration/BasicDistributedJobsIT.java", "diffHunk": "@@ -150,8 +155,8 @@ public void testFailOverBasics_withDataFeeder() throws Exception {\n \n     public void testJobAutoClose() throws Exception {\n         internalCluster().ensureAtMostNumDataNodes(0);\n-        internalCluster().startNode(Settings.builder().put(MachineLearning.ML_ENABLED.getKey(), false));\n-        internalCluster().startNode(Settings.builder().put(MachineLearning.ML_ENABLED.getKey(), true));\n+        internalCluster().startNode(removeRoles(Set.of(MachineLearning.ML_ROLE)));", "originalCommit": "7d593f0228fb038d0d9a26a8b4b85c074143c299", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "41a39983424586f53fde0ac167cfcda29e788945", "url": "https://github.com/elastic/elasticsearch/commit/41a39983424586f53fde0ac167cfcda29e788945", "message": "Merge remote-tracking branch 'elastic' into node-roles", "committedDate": "2020-06-24T16:37:56Z", "type": "commit"}, {"oid": "827b5250007112ec2df33c7b2d2375b4ed1c081e", "url": "https://github.com/elastic/elasticsearch/commit/827b5250007112ec2df33c7b2d2375b4ed1c081e", "message": "Fix merge conflict", "committedDate": "2020-06-24T16:39:13Z", "type": "commit"}, {"oid": "b852f725ce20e8b3201000e2c3a56c5cde025646", "url": "https://github.com/elastic/elasticsearch/commit/b852f725ce20e8b3201000e2c3a56c5cde025646", "message": "Reword", "committedDate": "2020-06-24T16:44:57Z", "type": "commit"}, {"oid": "6d9ef4f154758a6910100fe7ded83b4c44675bb9", "url": "https://github.com/elastic/elasticsearch/commit/6d9ef4f154758a6910100fe7ded83b4c44675bb9", "message": "Simplify", "committedDate": "2020-06-24T16:48:06Z", "type": "commit"}]}