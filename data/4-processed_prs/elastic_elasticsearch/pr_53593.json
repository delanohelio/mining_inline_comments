{"pr_number": 53593, "pr_title": "Add supported NameID Format configuration and generate transient values", "pr_createdAt": "2020-03-16T10:57:30Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53593", "timeline": [{"oid": "1883588304ba86e55ab87b9ae13415a125aa0544", "url": "https://github.com/elastic/elasticsearch/commit/1883588304ba86e55ab87b9ae13415a125aa0544", "message": "Add supported NameID Format configuration\n\nOnly transient is supported for now.", "committedDate": "2020-03-15T15:35:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkzNzM3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/53593#discussion_r392937376", "bodyText": "I don't like this much as this is yet another part of the code where we do some validation on the Document but this is the only place that validation depends on IDP configuration so it didn't make sense for this to be part of SecurityProviderDocument. I'm happy to discuss or take suggestions for refactoring this.", "author": "jkakavas", "createdAt": "2020-03-16T10:59:22Z", "path": "x-pack/plugin/identity-provider/src/main/java/org/elasticsearch/xpack/idp/action/TransportPutSamlServiceProviderAction.java", "diffHunk": "@@ -56,6 +59,10 @@ protected void doExecute(Task task, final PutSamlServiceProviderRequest request,\n             listener.onFailure(new IllegalArgumentException(\"request document must not have an id [\" + document.docId + \"]\"));\n             return;\n         }\n+        if (document.nameIdFormat != null && identityProvider.getAllowedNameIdFormats().contains(document.nameIdFormat) == false) {", "originalCommit": "1883588304ba86e55ab87b9ae13415a125aa0544", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNDQ2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/53593#discussion_r393424467", "bodyText": "I think this makes sense. We don't want to fail writes to documents just because the nameID format isn't valid - for example, it would make it impossible to disable a broken SP.\nIt would be logically sensible to do it in the request, but requests aren't really setup to do that sort of validation.", "author": "tvernum", "createdAt": "2020-03-17T03:22:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkzNzM3Ng=="}], "type": "inlineReview"}, {"oid": "5262d063e059fc7ca2806aac7c3047b8f0c50709", "url": "https://github.com/elastic/elasticsearch/commit/5262d063e059fc7ca2806aac7c3047b8f0c50709", "message": "Merge branch 'feature-internal-idp' into handle-nameid", "committedDate": "2020-03-17T02:39:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNTI5OA==", "url": "https://github.com/elastic/elasticsearch/pull/53593#discussion_r393425298", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalStateException(\"Invalid NameID Format: \" + format);\n          \n          \n            \n                            throw new IllegalStateException(\"Unsupported NameID Format: \" + format);\n          \n      \n    \n    \n  \n\nI can see someone running into this in 6 months time and wondering why PERSISTENT is \"invalid\"", "author": "tvernum", "createdAt": "2020-03-17T03:26:25Z", "path": "x-pack/plugin/identity-provider/src/main/java/org/elasticsearch/xpack/idp/saml/authn/SuccessfulAuthenticationResponseMessageBuilder.java", "diffHunk": "@@ -221,13 +223,25 @@ private Status buildStatus() {\n     private NameID buildNameId(UserServiceAuthentication user, @Nullable SamlAuthenticationState authnState) {\n         final SamlServiceProvider serviceProvider = user.getServiceProvider();\n         final NameID nameID = samlFactory.object(NameID.class, NameID.DEFAULT_ELEMENT_NAME);\n+        final String nameIdFormat;\n         if (authnState != null && authnState.getRequestedNameidFormat() != null) {\n-            nameID.setFormat(authnState.getRequestedNameidFormat());\n+            nameIdFormat = authnState.getRequestedNameidFormat();\n         } else {\n-            nameID.setFormat(serviceProvider.getAllowedNameIdFormat() != null ? serviceProvider.getAllowedNameIdFormat() :\n-                idp.getServiceProviderDefaults().nameIdFormat);\n+            nameIdFormat = serviceProvider.getAllowedNameIdFormat() != null ? serviceProvider.getAllowedNameIdFormat() :\n+                idp.getServiceProviderDefaults().nameIdFormat;\n         }\n-        // TODO: Set the value according to the format\n+        nameID.setFormat(nameIdFormat);\n+        nameID.setValue(getNameIdValueForFormat(nameIdFormat, user));\n         return nameID;\n     }\n+\n+    private String getNameIdValueForFormat(String format, UserServiceAuthentication user) {\n+        switch (format) {\n+            case TRANSIENT:\n+                // See SAML 2.0 Core 8.3.8 & 1.3.4\n+                return samlFactory.secureIdentifier();\n+            default:\n+                throw new IllegalStateException(\"Invalid NameID Format: \" + format);", "originalCommit": "5262d063e059fc7ca2806aac7c3047b8f0c50709", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "47a99b5bf2ed12eeed67532a5c9359328f8b8d9b", "url": "https://github.com/elastic/elasticsearch/commit/47a99b5bf2ed12eeed67532a5c9359328f8b8d9b", "message": "Update x-pack/plugin/identity-provider/src/main/java/org/elasticsearch/xpack/idp/saml/authn/SuccessfulAuthenticationResponseMessageBuilder.java\n\nCo-Authored-By: Tim Vernum <tim@adjective.org>", "committedDate": "2020-03-17T09:21:57Z", "type": "commit"}]}