{"pr_number": 56721, "pr_title": "[DOCS] EQL: Document sequences", "pr_createdAt": "2020-05-13T21:14:43Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56721", "timeline": [{"oid": "b29d6f726e2fea9d7bddf9445c618fa61d00d977", "url": "https://github.com/elastic/elasticsearch/commit/b29d6f726e2fea9d7bddf9445c618fa61d00d977", "message": "[DOCS] EQL: Document sequences", "committedDate": "2020-05-13T21:08:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NDQzMw==", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424744433", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  [ file where (file.name == \"cmd.exe\" and agent.id != \"my_user\") ]\n          \n          \n            \n                  [ file where file.name == \"cmd.exe\" and agent.id != \"my_user\" ]", "author": "rw-access", "createdAt": "2020-05-13T21:34:28Z", "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -331,4 +388,127 @@ the https://en.wikipedia.org/wiki/Unix_time[Unix epoch], in ascending order.\n   }\n }\n ----\n+// TESTRESPONSE[s/\"took\": 6/\"took\": $body.took/]\n+\n+[[eql-search-api-sequence-ex]]\n+==== Sequence query example\n+\n+The following EQL search request matches a <<eql-sequences,sequence>> of events\n+that:\n+\n+. Start with an event with:\n++\n+--\n+* An `event.category` of `file`\n+* A `file.name` of `cmd.exe`\n+* An `agent.id` other than `my_user`\n+--\n+. Followed by an event with:\n++\n+--\n+* An `event.category` of `process`\n+* A `process.path` of `regsvr32`\n+--\n+\n+These events must also share the same `agent.id` value.\n+\n+[source,console]\n+----\n+GET my_index/_eql/search\n+{\n+  \"query\": \"\"\"\n+    sequence by agent.id\n+      [ file where (file.name == \"cmd.exe\" and agent.id != \"my_user\") ]", "originalCommit": "b29d6f726e2fea9d7bddf9445c618fa61d00d977", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "08bea0f58e77d653d35c1f751beb894b7cfecd1e", "url": "https://github.com/elastic/elasticsearch/commit/08bea0f58e77d653d35c1f751beb894b7cfecd1e", "message": "Update docs/reference/eql/eql-search-api.asciidoc\n\nCo-authored-by: Ross Wolf <31489089+rw-access@users.noreply.github.com>", "committedDate": "2020-05-13T21:35:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NTE4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424745187", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              [ file where file.name == \"*.exe\" ] by file.path\n          \n          \n            \n              [ file where file.extension == \"exe\" ] by file.path", "author": "rw-access", "createdAt": "2020-05-13T21:36:11Z", "path": "docs/reference/eql/syntax.asciidoc", "diffHunk": "@@ -341,6 +341,84 @@ dots (`.`), hyphens (`-`), or spaces, must be escaped using backticks (+++`+++).\n `my field`\n ----\n \n+[discrete]\n+[[eql-sequences]]\n+=== Sequences\n+\n+You can use EQL sequences to describe and match an ordered series of events.\n+Each item in a sequence is an event category and event condition,\n+surrounded by square brackets. Events are listed in ascending chronological\n+order, with the most recent event listed last.\n+\n+[source,eql]\n+----\n+sequence\n+  [ event_category_1 where condition_1 ]\n+  [ event_category_2 where condition_2 ]\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following EQL query matches this series of ordered events:\n+\n+. Start with an event with:\n++\n+--\n+* An event category of `file`\n+* A `file.name` that ends with `.exe`\n+--\n+. Followed by an event with an event category of `process`\n+\n+[source,eql]\n+----\n+sequence\n+  [ file where file.name == \"*.exe\" ]\n+  [ process where true ]\n+----\n+====\n+\n+You can use the `by` keyword with sequences to only match events that share the\n+same field values. If a field value should be shared across all events, you\n+can use `sequence by`.\n+\n+[source,eql]\n+----\n+sequence by field_foo\n+  [ event_category_1 where condition_1 ] by field_baz\n+  [ event_category_2 where condition_2 ] by field_bar\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following sequence uses the `by` keyword to constrain matching events to:\n+\n+* Events with same `user.name` value\n+* `file` events with a `file.path` value equal to the following `process`\n+   event's `process.path` value.\n+\n+[source,eql]\n+----\n+sequence\n+  [ file where file.name == \"*.exe\" ] by user.name, file.path\n+  [ process where true ] by user.name, process.path\n+----\n+\n+Because the `user.name` field is shared across all events in the sequence, it\n+can be included using `sequence by`. The following sequence is equivalent to the\n+prior one.\n+\n+[source,eql]\n+----\n+sequence by user.name\n+  [ file where file.name == \"*.exe\" ] by file.path", "originalCommit": "b29d6f726e2fea9d7bddf9445c618fa61d00d977", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f22873a40870a5cde83d0b6e781104b6e8fdcd3d", "url": "https://github.com/elastic/elasticsearch/commit/f22873a40870a5cde83d0b6e781104b6e8fdcd3d", "message": "Update docs/reference/eql/syntax.asciidoc\n\nCo-authored-by: Ross Wolf <31489089+rw-access@users.noreply.github.com>", "committedDate": "2020-05-13T21:36:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NTMxMA==", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424745310", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              [ file where file.name == \"*.exe\" ] by user.name, file.path\n          \n          \n            \n              [ file where file.extension == \"exe\" ] by user.name, file.path", "author": "rw-access", "createdAt": "2020-05-13T21:36:30Z", "path": "docs/reference/eql/syntax.asciidoc", "diffHunk": "@@ -341,6 +341,84 @@ dots (`.`), hyphens (`-`), or spaces, must be escaped using backticks (+++`+++).\n `my field`\n ----\n \n+[discrete]\n+[[eql-sequences]]\n+=== Sequences\n+\n+You can use EQL sequences to describe and match an ordered series of events.\n+Each item in a sequence is an event category and event condition,\n+surrounded by square brackets. Events are listed in ascending chronological\n+order, with the most recent event listed last.\n+\n+[source,eql]\n+----\n+sequence\n+  [ event_category_1 where condition_1 ]\n+  [ event_category_2 where condition_2 ]\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following EQL query matches this series of ordered events:\n+\n+. Start with an event with:\n++\n+--\n+* An event category of `file`\n+* A `file.name` that ends with `.exe`\n+--\n+. Followed by an event with an event category of `process`\n+\n+[source,eql]\n+----\n+sequence\n+  [ file where file.name == \"*.exe\" ]\n+  [ process where true ]\n+----\n+====\n+\n+You can use the `by` keyword with sequences to only match events that share the\n+same field values. If a field value should be shared across all events, you\n+can use `sequence by`.\n+\n+[source,eql]\n+----\n+sequence by field_foo\n+  [ event_category_1 where condition_1 ] by field_baz\n+  [ event_category_2 where condition_2 ] by field_bar\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following sequence uses the `by` keyword to constrain matching events to:\n+\n+* Events with same `user.name` value\n+* `file` events with a `file.path` value equal to the following `process`\n+   event's `process.path` value.\n+\n+[source,eql]\n+----\n+sequence\n+  [ file where file.name == \"*.exe\" ] by user.name, file.path", "originalCommit": "b29d6f726e2fea9d7bddf9445c618fa61d00d977", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a5c2d70c8975563f60a6847e9689b689a5348914", "url": "https://github.com/elastic/elasticsearch/commit/a5c2d70c8975563f60a6847e9689b689a5348914", "message": "Update docs/reference/eql/syntax.asciidoc\n\nCo-authored-by: Ross Wolf <31489089+rw-access@users.noreply.github.com>", "committedDate": "2020-05-13T21:36:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0NzMzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424747331", "bodyText": "Question about this @costin: do we use scoring at all right now? I assumed everything was wrapped in bool/filter so we wouldn't get a scre", "author": "rw-access", "createdAt": "2020-05-13T21:40:52Z", "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -199,29 +199,82 @@ Returned values are:\n --\n =====\n \n+`sequences`::\n+(array of objects)\n+Contains event sequences matching the query. Each object represents a\n+matching sequence. This parameter is only returned for EQL queries containing\n+a <<eql-sequences,sequence>>.\n++\n+.Properties of `sequences` objects\n+[%collapsible%open]\n+=====\n+`join_keys`::\n+(array of strings)\n+Shared field values used to constrain matches in the sequence. These are defined\n+using the <<eql-sequences,`by` keyword>> in the EQL query syntax. This\n+parameter is only returned for EQL queries containing a\n+<<eql-sequences,sequence>>.\n+\n `events`::\n (array of objects)\n-Contains returned events matching the query. Each object represents a\n+Contains events matching the query. Each object represents a\n matching event.\n +\n .Properties of `events` objects\n [%collapsible%open]\n+======\n+`_index`::\n+(string)\n+Name of the index containing the event.\n+\n+`_id`::\n+(string)\n+(string)\n+Unique identifier for the event.\n+This ID is only unique within the index.\n+\n+`_score`::", "originalCommit": "a5c2d70c8975563f60a6847e9689b689a5348914", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0Nzc4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424747787", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * A `file.name` that ends with `.exe`\n          \n          \n            \n            * A `file.extension` of `exe`", "author": "rw-access", "createdAt": "2020-05-13T21:41:55Z", "path": "docs/reference/eql/syntax.asciidoc", "diffHunk": "@@ -341,6 +341,84 @@ dots (`.`), hyphens (`-`), or spaces, must be escaped using backticks (+++`+++).\n `my field`\n ----\n \n+[discrete]\n+[[eql-sequences]]\n+=== Sequences\n+\n+You can use EQL sequences to describe and match an ordered series of events.\n+Each item in a sequence is an event category and event condition,\n+surrounded by square brackets. Events are listed in ascending chronological\n+order, with the most recent event listed last.\n+\n+[source,eql]\n+----\n+sequence\n+  [ event_category_1 where condition_1 ]\n+  [ event_category_2 where condition_2 ]\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following EQL query matches this series of ordered events:\n+\n+. Start with an event with:\n++\n+--\n+* An event category of `file`\n+* A `file.name` that ends with `.exe`", "originalCommit": "a5c2d70c8975563f60a6847e9689b689a5348914", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0ODAxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424748011", "bodyText": "Context behind these -- this is better ECS practice and should be more performant since it's not a leading wildcard match.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              [ file where file.name == \"*.exe\" ]\n          \n          \n            \n              [ file where file.extension == \"exe\" ]", "author": "rw-access", "createdAt": "2020-05-13T21:42:22Z", "path": "docs/reference/eql/syntax.asciidoc", "diffHunk": "@@ -341,6 +341,84 @@ dots (`.`), hyphens (`-`), or spaces, must be escaped using backticks (+++`+++).\n `my field`\n ----\n \n+[discrete]\n+[[eql-sequences]]\n+=== Sequences\n+\n+You can use EQL sequences to describe and match an ordered series of events.\n+Each item in a sequence is an event category and event condition,\n+surrounded by square brackets. Events are listed in ascending chronological\n+order, with the most recent event listed last.\n+\n+[source,eql]\n+----\n+sequence\n+  [ event_category_1 where condition_1 ]\n+  [ event_category_2 where condition_2 ]\n+  ...\n+----\n+\n+.*Example*\n+[%collapsible]\n+====\n+The following EQL query matches this series of ordered events:\n+\n+. Start with an event with:\n++\n+--\n+* An event category of `file`\n+* A `file.name` that ends with `.exe`\n+--\n+. Followed by an event with an event category of `process`\n+\n+[source,eql]\n+----\n+sequence\n+  [ file where file.name == \"*.exe\" ]", "originalCommit": "a5c2d70c8975563f60a6847e9689b689a5348914", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0ODMzNg==", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424748336", "bodyText": "That makes sense. Thanks for catching.", "author": "jrodewig", "createdAt": "2020-05-13T21:43:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0ODAxMQ=="}], "type": "inlineReview"}, {"oid": "82c326f3d7e0811f7147f1be503cf72b2b164197", "url": "https://github.com/elastic/elasticsearch/commit/82c326f3d7e0811f7147f1be503cf72b2b164197", "message": "Update docs/reference/eql/syntax.asciidoc\n\nCo-authored-by: Ross Wolf <31489089+rw-access@users.noreply.github.com>", "committedDate": "2020-05-13T21:43:19Z", "type": "commit"}, {"oid": "aa174ccc068b0f907b4d62b8a86eb083250908de", "url": "https://github.com/elastic/elasticsearch/commit/aa174ccc068b0f907b4d62b8a86eb083250908de", "message": "Update docs/reference/eql/syntax.asciidoc\n\nCo-authored-by: Ross Wolf <31489089+rw-access@users.noreply.github.com>", "committedDate": "2020-05-13T21:43:27Z", "type": "commit"}, {"oid": "1c3073f05e733f0b524a45beb387f2876245f0ef", "url": "https://github.com/elastic/elasticsearch/commit/1c3073f05e733f0b524a45beb387f2876245f0ef", "message": "typo", "committedDate": "2020-05-13T21:44:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0OTM0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/56721#discussion_r424749343", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * A `process.path` of `regsvr32`\n          \n          \n            \n            * A `process.path` that contains the substring `regsvr32`", "author": "rw-access", "createdAt": "2020-05-13T21:45:23Z", "path": "docs/reference/eql/eql-search-api.asciidoc", "diffHunk": "@@ -331,4 +388,127 @@ the https://en.wikipedia.org/wiki/Unix_time[Unix epoch], in ascending order.\n   }\n }\n ----\n-// TESTRESPONSE[s/\"took\": 6/\"took\": $body.took/]\n\\ No newline at end of file\n+// TESTRESPONSE[s/\"took\": 6/\"took\": $body.took/]\n+\n+[[eql-search-api-sequence-ex]]\n+==== Sequence query example\n+\n+The following EQL search request matches a <<eql-sequences,sequence>> of events\n+that:\n+\n+. Start with an event with:\n++\n+--\n+* An `event.category` of `file`\n+* A `file.name` of `cmd.exe`\n+* An `agent.id` other than `my_user`\n+--\n+. Followed by an event with:\n++\n+--\n+* An `event.category` of `process`\n+* A `process.path` of `regsvr32`", "originalCommit": "aa174ccc068b0f907b4d62b8a86eb083250908de", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f593aa667a402372ca48dc8f2282e979736bfa86", "url": "https://github.com/elastic/elasticsearch/commit/f593aa667a402372ca48dc8f2282e979736bfa86", "message": "Update docs/reference/eql/eql-search-api.asciidoc\n\nCo-authored-by: Ross Wolf <31489089+rw-access@users.noreply.github.com>", "committedDate": "2020-05-13T21:46:07Z", "type": "commit"}, {"oid": "adbe73b14cdf4fb9217b0b3722232b38905937a6", "url": "https://github.com/elastic/elasticsearch/commit/adbe73b14cdf4fb9217b0b3722232b38905937a6", "message": "remove redundant sentence", "committedDate": "2020-05-14T13:58:45Z", "type": "commit"}]}