{"pr_number": 52065, "pr_title": "EQL: Add infra for planning and query folding", "pr_createdAt": "2020-02-07T16:54:22Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52065", "timeline": [{"oid": "1ee9a61c3181110c0216fc17feb05abb3d2d2e0c", "url": "https://github.com/elastic/elasticsearch/commit/1ee9a61c3181110c0216fc17feb05abb3d2d2e0c", "message": "EQL: Add infra for planning and query folding\n\nActual folding not yet in place", "committedDate": "2020-02-07T16:51:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMTk4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/52065#discussion_r376501981", "bodyText": "is it alright that hashCode() and equals check different things?", "author": "rw-access", "createdAt": "2020-02-07T17:02:38Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/plan/physical/FilterExec.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.eql.plan.physical;\n+\n+import org.elasticsearch.xpack.ql.expression.Attribute;\n+import org.elasticsearch.xpack.ql.expression.Expression;\n+import org.elasticsearch.xpack.ql.tree.NodeInfo;\n+import org.elasticsearch.xpack.ql.tree.Source;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+public class FilterExec extends UnaryExec implements Unexecutable {\n+\n+    private final Expression condition;\n+    private final boolean onAggs;\n+\n+    public FilterExec(Source source, PhysicalPlan child, Expression condition) {\n+        this(source, child, condition, false);\n+    }\n+\n+    public FilterExec(Source source, PhysicalPlan child, Expression condition, boolean onAggs) {\n+        super(source, child);\n+        this.condition = condition;\n+        this.onAggs = onAggs;\n+    }\n+\n+    @Override\n+    protected NodeInfo<FilterExec> info() {\n+        return NodeInfo.create(this, FilterExec::new, child(), condition, onAggs);\n+    }\n+\n+    @Override\n+    protected FilterExec replaceChild(PhysicalPlan newChild) {\n+        return new FilterExec(source(), newChild, condition, onAggs);\n+    }\n+\n+    public Expression condition() {\n+        return condition;\n+    }\n+\n+    public boolean onAggs() {\n+        return onAggs;\n+    }\n+\n+    @Override\n+    public List<Attribute> output() {\n+        return child().output();\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(condition, onAggs, child());", "originalCommit": "1ee9a61c3181110c0216fc17feb05abb3d2d2e0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUyODEyNw==", "url": "https://github.com/elastic/elasticsearch/pull/52065#discussion_r376528127", "bodyText": "No, included onAggs.", "author": "costin", "createdAt": "2020-02-07T18:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMTk4MQ=="}], "type": "inlineReview"}, {"oid": "fb514c4aa8f075987e176e7f17153c07fd3eea4c", "url": "https://github.com/elastic/elasticsearch/commit/fb514c4aa8f075987e176e7f17153c07fd3eea4c", "message": "Address feedback", "committedDate": "2020-02-07T18:07:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU2ODg3OA==", "url": "https://github.com/elastic/elasticsearch/pull/52065#discussion_r376568878", "bodyText": "this would NPE if executable is null", "author": "aleksmaus", "createdAt": "2020-02-07T19:33:31Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/plan/physical/LocalRelation.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.eql.plan.physical;\n+\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.xpack.eql.session.EqlSession;\n+import org.elasticsearch.xpack.eql.session.Executable;\n+import org.elasticsearch.xpack.eql.session.Results;\n+import org.elasticsearch.xpack.ql.expression.Attribute;\n+import org.elasticsearch.xpack.ql.plan.logical.LogicalPlan;\n+import org.elasticsearch.xpack.ql.tree.NodeInfo;\n+import org.elasticsearch.xpack.ql.tree.Source;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import static java.util.Collections.emptyList;\n+\n+public class LocalRelation extends LogicalPlan implements Executable {\n+\n+    private final Executable executable;\n+\n+    public LocalRelation(Source source, Executable executable) {\n+        super(source, emptyList());\n+        this.executable = executable;\n+    }\n+\n+    @Override\n+    protected NodeInfo<LocalRelation> info() {\n+        return NodeInfo.create(this, LocalRelation::new, executable);\n+    }\n+\n+    @Override\n+    public LogicalPlan replaceChildren(List<LogicalPlan> newChildren) {\n+        throw new UnsupportedOperationException(\"this type of node doesn't have any children to replace\");\n+    }\n+\n+    public Executable executable() {\n+        return executable;\n+    }\n+\n+    @Override\n+    public boolean expressionsResolved() {\n+        return true;\n+    }\n+\n+    @Override\n+    public List<Attribute> output() {\n+        return executable.output();\n+    }\n+\n+    @Override\n+    public void execute(EqlSession session, ActionListener<Results> listener) {\n+        executable.execute(session, listener);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return executable.hashCode();", "originalCommit": "fb514c4aa8f075987e176e7f17153c07fd3eea4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjczNDc3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/52065#discussion_r376734779", "bodyText": "The NPE cannot occur since:\n\nall children are non null as the plan is constructed.\nif by accident a null child is passed, the base class Node checks and throws a proper exception.", "author": "costin", "createdAt": "2020-02-08T21:13:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU2ODg3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg0ODg4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/52065#discussion_r376848882", "bodyText": "Thanks for the explanation!", "author": "aleksmaus", "createdAt": "2020-02-10T02:44:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU2ODg3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwMTk4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/52065#discussion_r376801989", "bodyText": "I know it's code that already existed and you just moved it from one place to another, but I think we can do slightly better with the error message. Why not doing \"Found \" + failures.size() + \" problem\" + (failures.size() > 1 ? \"s\\n\" : \"\\n\")?", "author": "astefan", "createdAt": "2020-02-09T17:53:40Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/common/Failure.java", "diffHunk": "@@ -54,7 +58,14 @@ public String toString() {\n         return message;\n     }\n \n-    static Failure fail(Node<?> source, String message, Object... args) {\n+    public static Failure fail(Node<?> source, String message, Object... args) {\n         return new Failure(source, format(message, args));\n     }\n+\n+    public static String failMessage(Collection<Failure> failures) {\n+        return failures.stream().map(f -> {\n+            Location l = f.node().source().source();\n+            return \"line \" + l.getLineNumber() + \":\" + l.getColumnNumber() + \": \" + f.message();\n+        }).collect(Collectors.joining(StringUtils.NEW_LINE, \"Found \" + failures.size() + \" problem(s)\\n\", StringUtils.EMPTY));", "originalCommit": "fb514c4aa8f075987e176e7f17153c07fd3eea4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8f284381c5a7f542d4da37e47a2786480e7a354a", "url": "https://github.com/elastic/elasticsearch/commit/8f284381c5a7f542d4da37e47a2786480e7a354a", "message": "Improve error message", "committedDate": "2020-02-10T14:47:31Z", "type": "commit"}, {"oid": "7a08d90d35f7b261a35ba9459c03bd13df52bb0d", "url": "https://github.com/elastic/elasticsearch/commit/7a08d90d35f7b261a35ba9459c03bd13df52bb0d", "message": "Merge branch 'master' into eql/add-query-folder", "committedDate": "2020-02-10T15:06:49Z", "type": "commit"}]}