{"pr_number": 66365, "pr_title": "Store and use only internal security headers", "pr_createdAt": "2020-12-15T15:58:12Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66365", "timeline": [{"oid": "085ce401316ff639c8069d85f2413b15e256d28f", "url": "https://github.com/elastic/elasticsearch/commit/085ce401316ff639c8069d85f2413b15e256d28f", "message": "Main code", "committedDate": "2020-12-15T15:46:42Z", "type": "commit"}, {"oid": "b3232263a5f9d050b967513c33b255f7ddf2f0ca", "url": "https://github.com/elastic/elasticsearch/commit/b3232263a5f9d050b967513c33b255f7ddf2f0ca", "message": "Unused import", "committedDate": "2020-12-15T16:06:27Z", "type": "commit"}, {"oid": "023e0bcddb0bd63256cc69b2e7de5e89d7976e4c", "url": "https://github.com/elastic/elasticsearch/commit/023e0bcddb0bd63256cc69b2e7de5e89d7976e4c", "message": "Checkstyle", "committedDate": "2020-12-15T19:09:15Z", "type": "commit"}, {"oid": "ea2c9a8beacad93a5b26c4b8c68e647095552a9e", "url": "https://github.com/elastic/elasticsearch/commit/ea2c9a8beacad93a5b26c4b8c68e647095552a9e", "message": "Asserts", "committedDate": "2020-12-15T22:23:01Z", "type": "commit"}, {"oid": "23efe8b367a8c05f47d9eef12c68c076f5b63c1d", "url": "https://github.com/elastic/elasticsearch/commit/23efe8b367a8c05f47d9eef12c68c076f5b63c1d", "message": "Unused import", "committedDate": "2020-12-15T22:23:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMzA3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/66365#discussion_r543733079", "bodyText": "No problem here, but refactoring to make it also go through a method that filters the headers, for good measure.", "author": "albertzaharovits", "createdAt": "2020-12-15T22:27:44Z", "path": "x-pack/plugin/ccr/src/main/java/org/elasticsearch/xpack/ccr/CcrLicenseChecker.java", "diffHunk": "@@ -381,18 +380,15 @@ public static Client wrapClient(Client client, Map<String, String> headers) {\n         if (headers.isEmpty()) {\n             return client;\n         } else {\n-            final ThreadContext threadContext = client.threadPool().getThreadContext();\n-            Map<String, String> filteredHeaders = headers.entrySet().stream()\n-                .filter(e -> ShardFollowTask.HEADER_FILTERS.contains(e.getKey()))\n-                .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n+            Map<String, String> filteredHeaders = ClientHelper.filterSecurityHeaders(headers);\n+            if (filteredHeaders.isEmpty()) {\n+                return client;\n+            }\n             return new FilterClient(client) {\n                 @Override\n                 protected <Request extends ActionRequest, Response extends ActionResponse>\n                 void doExecute(ActionType<Response> action, Request request, ActionListener<Response> listener) {\n-                    final Supplier<ThreadContext.StoredContext> supplier = threadContext.newRestorableContext(false);\n-                    try (ThreadContext.StoredContext ignore = stashWithHeaders(threadContext, filteredHeaders)) {\n-                        super.doExecute(action, request, new ContextPreservingActionListener<>(supplier, listener));\n-                    }\n+                    ClientHelper.executeWithHeadersAsync(filteredHeaders, null, client, action, request, listener);\n                 }\n             };\n         }", "originalCommit": "23efe8b367a8c05f47d9eef12c68c076f5b63c1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMzIxOA==", "url": "https://github.com/elastic/elasticsearch/pull/66365#discussion_r543733218", "bodyText": "the problem.", "author": "albertzaharovits", "createdAt": "2020-12-15T22:28:01Z", "path": "x-pack/plugin/async-search/src/main/java/org/elasticsearch/xpack/search/TransportSubmitAsyncSearchAction.java", "diffHunk": "@@ -136,7 +137,7 @@ public void onFailure(Exception exc) {\n \n     private SearchRequest createSearchRequest(SubmitAsyncSearchRequest request, Task submitTask, TimeValue keepAlive) {\n         String docID = UUIDs.randomBase64UUID();\n-        Map<String, String> originHeaders = nodeClient.threadPool().getThreadContext().getHeaders();\n+        Map<String, String> originHeaders = ClientHelper.filterSecurityHeaders(nodeClient.threadPool().getThreadContext().getHeaders());\n         SearchRequest searchRequest = new SearchRequest(request.getSearchRequest()) {", "originalCommit": "23efe8b367a8c05f47d9eef12c68c076f5b63c1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMzU4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66365#discussion_r543733587", "bodyText": "Unfortunately, I cannot link to the the ClientHelper methods that do the filtering (different proj).", "author": "albertzaharovits", "createdAt": "2020-12-15T22:28:47Z", "path": "server/src/main/java/org/elasticsearch/common/util/concurrent/ThreadContext.java", "diffHunk": "@@ -320,7 +320,13 @@ public String getHeader(String key) {\n     }\n \n     /**\n-     * Returns all of the request contexts headers\n+     * Returns all of the request headers from the thread's context.<br>\n+     * <b>Be advised, headers might contain credentials.</b>\n+     * In order to avoid storing, and erroneously exposing, such headers,\n+     * it is recommended to instead store security headers that prove\n+     * the credentials have been verified successfully, and which are\n+     * internal to the system, in the sense that they cannot be sent\n+     * by the clients.\n      */\n     public Map<String, String> getHeaders() {", "originalCommit": "23efe8b367a8c05f47d9eef12c68c076f5b63c1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "210e0671b211ffebe9c3f987106122aa38e288ce", "url": "https://github.com/elastic/elasticsearch/commit/210e0671b211ffebe9c3f987106122aa38e288ce", "message": "Checkstyle", "committedDate": "2020-12-15T22:29:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNTUzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/66365#discussion_r543735535", "bodyText": "Another problem.", "author": "albertzaharovits", "createdAt": "2020-12-15T22:32:32Z", "path": "x-pack/plugin/eql/src/main/java/org/elasticsearch/xpack/eql/async/AsyncTaskManagementService.java", "diffHunk": "@@ -193,7 +195,7 @@ private void storeResults(T searchTask, StoredAsyncResponse<Response> storedResp\n     private void storeResults(T searchTask, StoredAsyncResponse<Response> storedResponse, ActionListener<Void> finalListener) {\n         try {\n             asyncTaskIndexService.createResponse(searchTask.getExecutionId().getDocId(),\n-                threadPool.getThreadContext().getHeaders(), storedResponse, ActionListener.wrap(\n+                searchTask.getOriginHeaders(), storedResponse, ActionListener.wrap(\n                     // We should only unregister after the result is saved\n                     resp -> {\n                         logger.trace(() -> new ParameterizedMessage(\"stored eql search results for [{}]\",", "originalCommit": "23efe8b367a8c05f47d9eef12c68c076f5b63c1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ae382bc292fbfd395c60369f75ce09bb13760e06", "url": "https://github.com/elastic/elasticsearch/commit/ae382bc292fbfd395c60369f75ce09bb13760e06", "message": "nit", "committedDate": "2020-12-15T22:33:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNjMyMA==", "url": "https://github.com/elastic/elasticsearch/pull/66365#discussion_r543736320", "bodyText": "Not really a problem, but good measure.", "author": "albertzaharovits", "createdAt": "2020-12-15T22:34:07Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/action/TransportPreviewTransformAction.java", "diffHunk": "@@ -189,7 +189,7 @@ private void getPreview(\n             mappings.set(deducedMappings);\n             function.preview(\n                 client,\n-                threadPool.getThreadContext().getHeaders(),\n+                ClientHelper.filterSecurityHeaders(threadPool.getThreadContext().getHeaders()),\n                 source,\n                 deducedMappings,\n                 NUMBER_OF_PREVIEW_BUCKETS,", "originalCommit": "23efe8b367a8c05f47d9eef12c68c076f5b63c1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNzA2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66365#discussion_r543737067", "bodyText": "Not really a problem, but good measure.", "author": "albertzaharovits", "createdAt": "2020-12-15T22:35:33Z", "path": "x-pack/plugin/watcher/src/main/java/org/elasticsearch/xpack/watcher/transport/actions/TransportExecuteWatchAction.java", "diffHunk": "@@ -121,8 +121,7 @@ private void executeWatch(\n              * Ensure that the headers from the incoming request are used instead those of the stored watch otherwise the watch would run\n              * as the user who stored the watch, but it needs to run as the user who executes this request.\n              */\n-            final Map<String, String> headers = new HashMap<>(threadPool.getThreadContext().getHeaders());\n-            watch.status().setHeaders(headers);\n+            watch.status().setHeaders(ClientHelper.filterSecurityHeaders(threadPool.getThreadContext().getHeaders()));\n \n             final String triggerType = watch.trigger().type();\n             final TriggerEvent triggerEvent = triggerService.simulateEvent(triggerType, watch.id(), request.getTriggerData());", "originalCommit": "23efe8b367a8c05f47d9eef12c68c076f5b63c1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "afc31b007cbec232b9ce22121abcd62177a19e0f", "url": "https://github.com/elastic/elasticsearch/commit/afc31b007cbec232b9ce22121abcd62177a19e0f", "message": "Shuffle assertions for the rollup job", "committedDate": "2020-12-16T10:35:09Z", "type": "commit"}, {"oid": "a87d78adb63aa5389ea51be91a1eda032c8a02e5", "url": "https://github.com/elastic/elasticsearch/commit/a87d78adb63aa5389ea51be91a1eda032c8a02e5", "message": "Merge branch 'master' into filter-security-headers-fix", "committedDate": "2020-12-16T10:35:59Z", "type": "commit"}, {"oid": "a87d78adb63aa5389ea51be91a1eda032c8a02e5", "url": "https://github.com/elastic/elasticsearch/commit/a87d78adb63aa5389ea51be91a1eda032c8a02e5", "message": "Merge branch 'master' into filter-security-headers-fix", "committedDate": "2020-12-16T10:35:59Z", "type": "forcePushed"}, {"oid": "4bf6b269270600c43b1f8d62f31d0a4d3a2bc1c8", "url": "https://github.com/elastic/elasticsearch/commit/4bf6b269270600c43b1f8d62f31d0a4d3a2bc1c8", "message": "More unused imports", "committedDate": "2020-12-16T10:59:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAwNjA2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/66365#discussion_r544006062", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean assertsEnabled = false;\n          \n          \n            \n                    assert assertsEnabled = true;\n          \n          \n            \n                    if (assertsEnabled) {\n          \n          \n            \n                    if (org.elasticsearch.Assertions.ENABLED) {", "author": "tvernum", "createdAt": "2020-12-16T06:06:56Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ClientHelper.java", "diffHunk": "@@ -31,13 +33,29 @@\n  */\n public final class ClientHelper {\n \n+    private static Pattern authorizationHeaderPattern = Pattern.compile(\"\\\\s*\" + Pattern.quote(\"Authorization\") + \"\\\\s*\",\n+            Pattern.CASE_INSENSITIVE);\n+\n+    public static void assertNoAuthorizationHeader(Map<String, String> headers) {\n+        boolean assertsEnabled = false;\n+        assert assertsEnabled = true;\n+        if (assertsEnabled) {", "originalCommit": "ae382bc292fbfd395c60369f75ce09bb13760e06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg3MzYwMw==", "url": "https://github.com/elastic/elasticsearch/pull/66365#discussion_r544873603", "bodyText": "Nice! TIL.", "author": "albertzaharovits", "createdAt": "2020-12-17T07:41:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAwNjA2Mg=="}], "type": "inlineReview"}, {"oid": "0456f939eaa833299d781ff7a3e32e5d27c6e8f2", "url": "https://github.com/elastic/elasticsearch/commit/0456f939eaa833299d781ff7a3e32e5d27c6e8f2", "message": "Update x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ClientHelper.java\n\nCo-authored-by: Tim Vernum <tim@adjective.org>", "committedDate": "2020-12-17T07:42:14Z", "type": "commit"}]}