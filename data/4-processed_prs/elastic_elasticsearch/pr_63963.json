{"pr_number": 63963, "pr_title": "Add index commit id to searcher", "pr_createdAt": "2020-10-21T02:07:19Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63963", "timeline": [{"oid": "e9cc404bfd1abe361a44a36a5e4ced1230e34230", "url": "https://github.com/elastic/elasticsearch/commit/e9cc404bfd1abe361a44a36a5e4ced1230e34230", "message": "Assign id to searcher", "committedDate": "2020-10-21T02:05:46Z", "type": "commit"}, {"oid": "e445182ee5569ac9bcc4255f0459628207a8aedf", "url": "https://github.com/elastic/elasticsearch/commit/e445182ee5569ac9bcc4255f0459628207a8aedf", "message": "stylecheck", "committedDate": "2020-10-21T02:39:15Z", "type": "commit"}, {"oid": "23146bb4d69d6a2390fec6ec39602398a4d88b34", "url": "https://github.com/elastic/elasticsearch/commit/23146bb4d69d6a2390fec6ec39602398a4d88b34", "message": "fix tests", "committedDate": "2020-10-21T14:36:55Z", "type": "commit"}, {"oid": "68e2e12489ac75020f53d823b9998457e52656ad", "url": "https://github.com/elastic/elasticsearch/commit/68e2e12489ac75020f53d823b9998457e52656ad", "message": "fix tests", "committedDate": "2020-10-21T15:36:27Z", "type": "commit"}, {"oid": "4db30e62f405741884e325805ef4de80f1f9949d", "url": "https://github.com/elastic/elasticsearch/commit/4db30e62f405741884e325805ef4de80f1f9949d", "message": "more tests", "committedDate": "2020-10-21T15:47:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ2OTk1MA==", "url": "https://github.com/elastic/elasticsearch/pull/63963#discussion_r509469950", "bodyText": "I am not sure if we should pursue this. But without it, we'd never have the same searcher id between copies except with searchable snapshots.", "author": "dnhatn", "createdAt": "2020-10-21T17:22:36Z", "path": "server/src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchDirectoryReader.java", "diffHunk": "@@ -35,12 +42,48 @@\n \n     private final ShardId shardId;\n     private final FilterDirectoryReader.SubReaderWrapper wrapper;\n+    private final CheckedFunction<DirectoryReader, String, IOException> readerIdGenerator;\n+    private final String readerId;\n \n-    private ElasticsearchDirectoryReader(DirectoryReader in, FilterDirectoryReader.SubReaderWrapper wrapper,\n-            ShardId shardId) throws IOException {\n+    private ElasticsearchDirectoryReader(DirectoryReader in, FilterDirectoryReader.SubReaderWrapper wrapper, ShardId shardId,\n+                                         CheckedFunction<DirectoryReader, String, IOException> readerIdGenerator) throws IOException {\n         super(in, wrapper);\n         this.wrapper = wrapper;\n         this.shardId = shardId;\n+        this.readerIdGenerator = readerIdGenerator;\n+        this.readerId = readerIdGenerator.apply(in);\n+    }\n+\n+    /**\n+     * If two readers have the same reader id, then their underlying reader must consist of the same list of segments.\n+     */\n+    @Nullable\n+    public String getReaderId() {\n+        return readerId;\n+    }\n+\n+    public static String getReaderIdFromSegmentInfos(SegmentInfos segmentInfos, BooleanSupplier fullyCommitted) {", "originalCommit": "4db30e62f405741884e325805ef4de80f1f9949d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkyMDU0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/63963#discussion_r509920542", "bodyText": "It is not clear to me that this is valid across different shard copies. The id generation starts somewhere random and then increments. I acknowledge the risk is small and I did not dig deeply into whether this increases the risk of collissions over using more standard uuid generation.", "author": "henningandersen", "createdAt": "2020-10-22T06:54:48Z", "path": "server/src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchDirectoryReader.java", "diffHunk": "@@ -35,12 +42,48 @@\n \n     private final ShardId shardId;\n     private final FilterDirectoryReader.SubReaderWrapper wrapper;\n+    private final CheckedFunction<DirectoryReader, String, IOException> readerIdGenerator;\n+    private final String readerId;\n \n-    private ElasticsearchDirectoryReader(DirectoryReader in, FilterDirectoryReader.SubReaderWrapper wrapper,\n-            ShardId shardId) throws IOException {\n+    private ElasticsearchDirectoryReader(DirectoryReader in, FilterDirectoryReader.SubReaderWrapper wrapper, ShardId shardId,\n+                                         CheckedFunction<DirectoryReader, String, IOException> readerIdGenerator) throws IOException {\n         super(in, wrapper);\n         this.wrapper = wrapper;\n         this.shardId = shardId;\n+        this.readerIdGenerator = readerIdGenerator;\n+        this.readerId = readerIdGenerator.apply(in);\n+    }\n+\n+    /**\n+     * If two readers have the same reader id, then their underlying reader must consist of the same list of segments.\n+     */\n+    @Nullable\n+    public String getReaderId() {\n+        return readerId;\n+    }\n+\n+    public static String getReaderIdFromSegmentInfos(SegmentInfos segmentInfos, BooleanSupplier fullyCommitted) {\n+        // Here we prefer using an id composed of the ids of the underlying segments instead of the id of the commit because\n+        // the commit id changes whenever IndexWriter#commit is called although the segment files stay unchanged. A file-based\n+        // recovery creates a new commit to associate the new translog uuid. Hence, the commit ids of the primary and replicas\n+        // are always different although they can have the identical segment files.\n+        final MessageDigest md = MessageDigests.sha256();\n+        for (SegmentCommitInfo sci : segmentInfos) {\n+            final byte[] segmentId = sci.getId();", "originalCommit": "4db30e62f405741884e325805ef4de80f1f9949d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ae4c4c9a76a53947cf179515268cc6a4724a8da4", "url": "https://github.com/elastic/elasticsearch/commit/ae4c4c9a76a53947cf179515268cc6a4724a8da4", "message": "Merge branch 'master' into add-searcher-id", "committedDate": "2020-11-16T18:31:38Z", "type": "commit"}, {"oid": "13116cc6276a14dc91742231da074167a6d17874", "url": "https://github.com/elastic/elasticsearch/commit/13116cc6276a14dc91742231da074167a6d17874", "message": "new direction", "committedDate": "2020-11-16T19:25:46Z", "type": "commit"}, {"oid": "2f410eb4210ff043ed1abd52bf052107ca398d7a", "url": "https://github.com/elastic/elasticsearch/commit/2f410eb4210ff043ed1abd52bf052107ca398d7a", "message": "Use es commit id", "committedDate": "2020-11-16T21:23:06Z", "type": "commit"}, {"oid": "800c9be966f60ddf3ac57b54f742ddb3346f26f5", "url": "https://github.com/elastic/elasticsearch/commit/800c9be966f60ddf3ac57b54f742ddb3346f26f5", "message": "try extract", "committedDate": "2020-11-17T19:37:31Z", "type": "commit"}, {"oid": "3892d32384e2bf76f5e69ad3ee557e515f0c7e3a", "url": "https://github.com/elastic/elasticsearch/commit/3892d32384e2bf76f5e69ad3ee557e515f0c7e3a", "message": "Merge branch 'master' into add-searcher-id", "committedDate": "2020-11-17T19:37:50Z", "type": "commit"}, {"oid": "47f310d4702cbc689e925cca048cd40b45da1096", "url": "https://github.com/elastic/elasticsearch/commit/47f310d4702cbc689e925cca048cd40b45da1096", "message": "Simplify", "committedDate": "2020-11-17T20:46:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIzNjk5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/63963#discussion_r529236992", "bodyText": "identical content at the Lucene document level.\n\nMaybe:\nidentical Lucene level indices, i.e., identical segments with same docs using same doc-ids.", "author": "henningandersen", "createdAt": "2020-11-24T06:48:05Z", "path": "server/src/main/java/org/elasticsearch/index/engine/Engine.java", "diffHunk": "@@ -1205,6 +1205,15 @@ public final void close() {\n         protected abstract void doClose();\n \n         protected abstract Searcher acquireSearcherInternal(String source);\n+\n+        /**\n+         * Returns a commit id associated with this searcher if it's opened from an index commit; otherwise, return null.\n+         * Two searcher with the same commit id must have identical content at the Lucene document level.", "originalCommit": "47f310d4702cbc689e925cca048cd40b45da1096", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI5ODMxOA==", "url": "https://github.com/elastic/elasticsearch/pull/63963#discussion_r534298318", "bodyText": "see 193b631", "author": "dnhatn", "createdAt": "2020-12-02T16:19:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIzNjk5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI0NDM0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/63963#discussion_r529244349", "bodyText": "StringHelper.idToString mentions in its javadoc that it is for debugging purposes.\nI wonder if we should use:\nBase64.getEncoder().encodeToString(id)\ninstead like we do in CommitId.toString().", "author": "henningandersen", "createdAt": "2020-11-24T07:06:32Z", "path": "server/src/main/java/org/elasticsearch/index/engine/ReadOnlyEngine.java", "diffHunk": "@@ -107,6 +109,7 @@ public ReadOnlyEngine(EngineConfig config, SeqNoStats seqNoStats, TranslogStats\n                 // yet this makes sure nobody else does. including some testing tools that try to be messy\n                 indexWriterLock = obtainLock ? directory.obtainLock(IndexWriter.WRITE_LOCK_NAME) : null;\n                 this.lastCommittedSegmentInfos = Lucene.readSegmentInfos(directory);\n+                this.commitId = StringHelper.idToString(this.lastCommittedSegmentInfos.getId());", "originalCommit": "47f310d4702cbc689e925cca048cd40b45da1096", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI5ODA3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/63963#discussion_r534298079", "bodyText": "++, addressed in 05fcf38", "author": "dnhatn", "createdAt": "2020-12-02T16:19:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI0NDM0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI2MDE0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/63963#discussion_r529260146", "bodyText": "Could we also set replicas=1 and then check that the recovered copy has the same commit id?", "author": "henningandersen", "createdAt": "2020-11-24T07:40:17Z", "path": "server/src/internalClusterTest/java/org/elasticsearch/indices/state/CloseIndexIT.java", "diffHunk": "@@ -472,6 +474,34 @@ public void testResyncPropagatePrimaryTerm() throws Exception {\n         }\n     }\n \n+    public void testCommitIdInSearcher() throws Exception {\n+        final String indexName = \"test_commit_id\";\n+        createIndex(indexName, Settings.builder()\n+            .put(IndexMetadata.SETTING_NUMBER_OF_SHARDS, 1)\n+            .put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS, 0)\n+            .build());\n+        indexRandom(randomBoolean(), randomBoolean(), randomBoolean(), IntStream.range(0, randomIntBetween(0, 50))\n+            .mapToObj(n -> client().prepareIndex(indexName).setSource(\"num\", n)).collect(toList()));\n+        ensureGreen(indexName);\n+        assertAcked(client().admin().indices().prepareClose(indexName));\n+        assertIndexIsClosed(indexName);\n+        ensureGreen(indexName);\n+        final String nodeWithPrimary = Iterables.get(internalCluster().nodesInclude(indexName), 0);\n+        IndexShard shard = internalCluster().getInstance(IndicesService.class, nodeWithPrimary)\n+            .indexService(resolveIndex(indexName)).getShard(0);\n+        final String commitId;\n+        try (Engine.SearcherSupplier searcherSupplier = shard.acquireSearcherSupplier(randomFrom(Engine.SearcherScope.values()))) {\n+            assertNotNull(searcherSupplier.getCommitId());\n+            commitId = searcherSupplier.getCommitId();\n+        }\n+        internalCluster().restartNode(nodeWithPrimary);\n+        ensureGreen(indexName);\n+        shard = internalCluster().getInstance(IndicesService.class, nodeWithPrimary).indexService(resolveIndex(indexName)).getShard(0);\n+        try (Engine.SearcherSupplier searcherSupplier = shard.acquireSearcherSupplier(randomFrom(Engine.SearcherScope.values()))) {\n+            assertThat(searcherSupplier.getCommitId(), equalTo(commitId));", "originalCommit": "47f310d4702cbc689e925cca048cd40b45da1096", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a93fa03fe48a343e5904df9cd0b84f8b6b49cf78", "url": "https://github.com/elastic/elasticsearch/commit/a93fa03fe48a343e5904df9cd0b84f8b6b49cf78", "message": "Merge branch 'master' into add-searcher-id\n\n# Conflicts:\n#\tserver/src/main/java/org/elasticsearch/index/engine/ReadOnlyEngine.java", "committedDate": "2020-12-02T15:19:02Z", "type": "commit"}, {"oid": "05fcf3849c4e137533f7ff93df696d3896c88e91", "url": "https://github.com/elastic/elasticsearch/commit/05fcf3849c4e137533f7ff93df696d3896c88e91", "message": "base64", "committedDate": "2020-12-02T16:10:20Z", "type": "commit"}, {"oid": "193b631a5c6f48e6a12beb1e0e6b04fee97c5fb9", "url": "https://github.com/elastic/elasticsearch/commit/193b631a5c6f48e6a12beb1e0e6b04fee97c5fb9", "message": "javadocs", "committedDate": "2020-12-02T16:10:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEyMzIwNA==", "url": "https://github.com/elastic/elasticsearch/pull/63963#discussion_r539123204", "bodyText": "can this get some javadocs?", "author": "s1monw", "createdAt": "2020-12-09T08:58:17Z", "path": "server/src/main/java/org/elasticsearch/common/lucene/Lucene.java", "diffHunk": "@@ -808,6 +809,10 @@ public void delete() {\n         }\n     }\n \n+    public static String getCommitId(SegmentInfos segmentInfos) {", "originalCommit": "193b631a5c6f48e6a12beb1e0e6b04fee97c5fb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM2OTk5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/63963#discussion_r540369993", "bodyText": "Sure, added in 193b631.", "author": "dnhatn", "createdAt": "2020-12-10T17:43:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEyMzIwNA=="}], "type": "inlineReview"}, {"oid": "b65f083cd393d6b817479cdd9d5ebb50f02696fa", "url": "https://github.com/elastic/elasticsearch/commit/b65f083cd393d6b817479cdd9d5ebb50f02696fa", "message": "Merge branch 'master' into add-searcher-id", "committedDate": "2020-12-10T14:43:09Z", "type": "commit"}, {"oid": "51d4ef4ccfa0a93ce0f4ac17356bdfb67bd8a512", "url": "https://github.com/elastic/elasticsearch/commit/51d4ef4ccfa0a93ce0f4ac17356bdfb67bd8a512", "message": "add javadocs", "committedDate": "2020-12-10T14:48:08Z", "type": "commit"}, {"oid": "5ec5781c2d56571dd665b38e4ec20f74f36afad5", "url": "https://github.com/elastic/elasticsearch/commit/5ec5781c2d56571dd665b38e4ec20f74f36afad5", "message": "Add external commit_id", "committedDate": "2020-12-10T17:37:41Z", "type": "commit"}, {"oid": "e94306d2720bb6822409e127323c94296f7deee5", "url": "https://github.com/elastic/elasticsearch/commit/e94306d2720bb6822409e127323c94296f7deee5", "message": "Revert \"Add external commit_id\"\n\nThis reverts commit 5ec5781c2d56571dd665b38e4ec20f74f36afad5.", "committedDate": "2020-12-10T17:39:30Z", "type": "commit"}]}