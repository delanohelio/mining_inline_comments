{"pr_number": 56158, "pr_title": "SQL: Fix DATETIME_PARSE behaviour regarding timezones", "pr_createdAt": "2020-05-04T20:08:19Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/56158", "timeline": [{"oid": "934588a1959040d53ae141b8eaf1f41e12ef8056", "url": "https://github.com/elastic/elasticsearch/commit/934588a1959040d53ae141b8eaf1f41e12ef8056", "message": "SQL: Fix DATETIME_PARSE behaviour regarding timezones\n\nPreviously, when the timezone was missing from the datetime string\nand the pattern, UTC was used, instead of the session defined timezone.\nMoreover, if a timezone was included in the datetime string and the\npattern then this timezone was used. To have a consistent behaviour\nthe resulting datetime will always be converted to the session defined\ntimezone, e.g.:\n```\nSELECT DATETIME_PARSE('2020-05-04 10:20:30.123 +02:00', 'HH:mm:ss dd/MM/uuuu VV') AS datetime;\n```\nwith `time_zone` set to `-03:00` will result in\n```\n2020-05-04T05:20:40.123-03:00\n```\n\nFollows: #54960", "committedDate": "2020-05-04T20:00:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxNTk5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/56158#discussion_r419715992", "bodyText": "The get(0) seems optimistic - please extract this into a (date) utils method (maybe there's some utility in ES we could use).", "author": "costin", "createdAt": "2020-05-04T20:43:17Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/datetime/DateTimeParseProcessor.java", "diffHunk": "@@ -55,9 +53,9 @@ public static Object process(Object timestampStr, Object pattern) {\n             TemporalAccessor ta = DateTimeFormatter.ofPattern((String) pattern, Locale.ROOT)\n                 .parseBest((String) timestampStr, ZonedDateTime::from, LocalDateTime::from);\n             if (ta instanceof LocalDateTime) {\n-                return ZonedDateTime.ofInstant((LocalDateTime) ta, ZoneOffset.UTC, UTC);\n+                return ZonedDateTime.ofInstant((LocalDateTime) ta, zoneId.getRules().getValidOffsets(((LocalDateTime) ta)).get(0), zoneId);", "originalCommit": "934588a1959040d53ae141b8eaf1f41e12ef8056", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c930f474d1da2f20749312a8dc7cf5340e995bfd", "url": "https://github.com/elastic/elasticsearch/commit/c930f474d1da2f20749312a8dc7cf5340e995bfd", "message": "address comments, revert test - doesn't work due to random timezone", "committedDate": "2020-05-04T21:02:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwOTA5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/56158#discussion_r419909099", "bodyText": "As an improvement, I would add links to REST and jdbc driver params documentation where these parameters are defined.", "author": "astefan", "createdAt": "2020-05-05T07:19:32Z", "path": "docs/reference/sql/functions/date-time.asciidoc", "diffHunk": "@@ -487,6 +484,16 @@ include-tagged::{sql-specs}/docs/docs.csv-spec[dateTimeParse1]\n include-tagged::{sql-specs}/docs/docs.csv-spec[dateTimeParse2]\n --------------------------------------------------\n \n+[NOTE]\n+====\n+If timezone is not specified in the datetime string expression and the parsing pattern, the resulting `datetime` will have the\n+time zone specified by the user through the `time_zone`/`timezone` REST/driver parameters with no conversion applied.", "originalCommit": "c930f474d1da2f20749312a8dc7cf5340e995bfd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9909988fadc38477d9f241e9de150a8a765b9bcb", "url": "https://github.com/elastic/elasticsearch/commit/9909988fadc38477d9f241e9de150a8a765b9bcb", "message": "Address docs comment", "committedDate": "2020-05-05T08:26:35Z", "type": "commit"}]}