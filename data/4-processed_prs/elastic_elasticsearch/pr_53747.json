{"pr_number": 53747, "pr_title": "Improve IntelliJ IDE integration", "pr_createdAt": "2020-03-18T16:54:54Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53747", "timeline": [{"oid": "e4509883bcf7a3c9261318e778f30db25a8b2c31", "url": "https://github.com/elastic/elasticsearch/commit/e4509883bcf7a3c9261318e778f30db25a8b2c31", "message": "Improve IntelliJ IDE integration\n\nThis commit makes a number of improvements when importing the\nElasticsearch project into IntelliJ IDEA. Specifically:\n\n - Contributing documentation has been updated to reflect that the\n   'idea' task should no long be used and Gradle project import is\n   instead the officially supported way of setting up the project.\n - Attempts to run the 'idea' task will result in a failure with a\n   message directing folks to our CONTRIBUTING.md document.\n - The project JDK is explicit set rather that using whatever JAVA_HOME\n   is.\n - Gradle build operation delegation is disabled, and test execution is\n   configured to 'choose per test'.\n - Gradle is configured to inherit the project JDK.\n - Some code style conventions are automatically configured.\n - File encoding is explicitly set to UTF-8.\n - Parallel module compilation is enabled and deprecated feature\n   warnings are disabled.\n - A remote debug run configuration using listen mode is created.\n - JUnit runner is configured with required system properties.\n - License headers are configured such that Apache 2 is the default\n   notice added to all source files with exception of source in /x-pack\n   which will use the Elastic license.", "committedDate": "2020-03-18T16:54:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMjM3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r394502379", "bodyText": "Why create these files programatically, but not the two that are committed/shared (excluded in gitignore)?", "author": "rjernst", "createdAt": "2020-03-18T17:01:29Z", "path": "gradle/ide.gradle", "diffHunk": "@@ -0,0 +1,141 @@\n+import org.jetbrains.gradle.ext.Remote\n+import org.jetbrains.gradle.ext.JUnit\n+\n+buildscript {\n+  repositories {\n+    maven {\n+      url \"https://plugins.gradle.org/m2/\"\n+    }\n+  }\n+  dependencies {\n+    classpath \"gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:0.7\"\n+  }\n+}\n+\n+apply plugin: org.jetbrains.gradle.ext.IdeaExtPlugin\n+\n+allprojects {\n+  apply plugin: 'idea'\n+\n+  tasks.named('idea') {\n+    doFirst { throw new GradleException(\"Use of the 'idea' task has been deprecated. For details on importing into IntelliJ see CONTRIBUTING.md.\") }\n+  }\n+}\n+\n+tasks.register('configureIdeaGradleJvm') {\n+  group = 'ide'\n+  description = 'Configures the appropriate JVM for Gradle'\n+\n+  doLast {\n+    modifyXml('.idea/gradle.xml') { xml ->", "originalCommit": "e4509883bcf7a3c9261318e778f30db25a8b2c31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwNTUyNw==", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r394505527", "bodyText": "We aren't creating these files, we are editing them. These are created by IntelliJ by the import and contain other config, we just want to \"tweak\" them. The files in .idea that I've added to source control are specifically designed to be shared via VCS.", "author": "mark-vieira", "createdAt": "2020-03-18T17:06:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMjM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MjQ4OA==", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r394892488", "bodyText": "Can I suggest a healthy dose of commenting to make this clear to everyone?", "author": "pugnascotia", "createdAt": "2020-03-19T09:29:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMjM3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTExMTgxMw==", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r395111813", "bodyText": "I've added a javadoc to this method.", "author": "mark-vieira", "createdAt": "2020-03-19T15:25:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDUwMjM3OQ=="}], "type": "inlineReview"}, {"oid": "c2234375cbf459829befcdfb51e8ccf3a59907ac", "url": "https://github.com/elastic/elasticsearch/commit/c2234375cbf459829befcdfb51e8ccf3a59907ac", "message": "Add some more details on project SDK setup", "committedDate": "2020-03-18T17:04:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5NTA0NA==", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r394895044", "bodyText": "Is this number sufficiently absurdly high?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      classCountToUseImportOnDemand = 99\n          \n          \n            \n                      classCountToUseImportOnDemand = 9999", "author": "pugnascotia", "createdAt": "2020-03-19T09:34:16Z", "path": "gradle/ide.gradle", "diffHunk": "@@ -0,0 +1,141 @@\n+import org.jetbrains.gradle.ext.Remote\n+import org.jetbrains.gradle.ext.JUnit\n+\n+buildscript {\n+  repositories {\n+    maven {\n+      url \"https://plugins.gradle.org/m2/\"\n+    }\n+  }\n+  dependencies {\n+    classpath \"gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:0.7\"\n+  }\n+}\n+\n+apply plugin: org.jetbrains.gradle.ext.IdeaExtPlugin\n+\n+allprojects {\n+  apply plugin: 'idea'\n+\n+  tasks.named('idea') {\n+    doFirst { throw new GradleException(\"Use of the 'idea' task has been deprecated. For details on importing into IntelliJ see CONTRIBUTING.md.\") }\n+  }\n+}\n+\n+tasks.register('configureIdeaGradleJvm') {\n+  group = 'ide'\n+  description = 'Configures the appropriate JVM for Gradle'\n+\n+  doLast {\n+    modifyXml('.idea/gradle.xml') { xml ->\n+      def gradleSettings = xml.component.find { it.'@name' == 'GradleSettings' }.option[0].GradleProjectSettings\n+      // Remove configured JVM option to force IntelliJ to use the project JDK for Gradle\n+      gradleSettings.option.findAll { it.'@name' == 'gradleJvm' }.each { it.parent().remove(it) }\n+    }\n+  }\n+}\n+\n+tasks.register('configureIdeaRunConfigs') {\n+  group = 'ide'\n+  description = 'Configures default run configuration settings'\n+\n+  doLast {\n+    modifyXml('.idea/workspace.xml') { xml ->\n+      def runManager = xml.component.find { it.'@name' == 'RunManager' }\n+      if (runManager == null) {\n+        throw new GradleException(\"IntelliJ 'RunManager' configuration is missing from workspace.xml. You may need to refresh your Gradle project.\")\n+      }\n+\n+      def debugConfig = runManager.configuration.find { it.'@name' == 'Debug Elasticsearch' }\n+      // Enable \"auto restart\" on remote debug run configuration\n+      if (debugConfig.option.any { it.'@name' == 'AUTO_RESTART' && it.'@value' == 'true'} == false) {\n+        def restart = new NodeBuilder().option(name: 'AUTO_RESTART', value: 'true')\n+        debugConfig.append(restart)\n+      }\n+    }\n+  }\n+}\n+\n+idea {\n+  project {\n+    vcs = 'Git'\n+    jdkName = '13'\n+\n+    settings {\n+      delegateActions {\n+        delegateBuildRunToGradle = false\n+        testRunner = 'choose_per_test'\n+      }\n+      taskTriggers {\n+        afterSync tasks.named('configureIdeaGradleJvm'), tasks.named('configureIdeaRunConfigs')\n+      }\n+      codeStyle {\n+        java {\n+          classCountToUseImportOnDemand = 99", "originalCommit": "c2234375cbf459829befcdfb51e8ccf3a59907ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEwNDU4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/53747#discussion_r395104587", "bodyText": "I've never encountered a scenario in which IntelliJ used a wildcard import in all the time I've set this to 99. We can certainly increase it though, I used 99 just because the UI textbox fits 2 characters \ud83d\ude04", "author": "mark-vieira", "createdAt": "2020-03-19T15:16:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5NTA0NA=="}], "type": "inlineReview"}, {"oid": "6ba753fe4e8e96725e4088d0f662be77647057d7", "url": "https://github.com/elastic/elasticsearch/commit/6ba753fe4e8e96725e4088d0f662be77647057d7", "message": "Address review feedback", "committedDate": "2020-03-19T15:25:20Z", "type": "commit"}, {"oid": "7eacee5f48ff5dfc9d2b85cbd724cffd34330ed2", "url": "https://github.com/elastic/elasticsearch/commit/7eacee5f48ff5dfc9d2b85cbd724cffd34330ed2", "message": "Update scope definition to match any workspace directory name", "committedDate": "2020-03-19T16:12:40Z", "type": "commit"}]}