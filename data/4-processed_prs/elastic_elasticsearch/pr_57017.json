{"pr_number": 57017, "pr_title": "Include vendored code notices in distribution notice files", "pr_createdAt": "2020-05-20T21:23:09Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57017", "timeline": [{"oid": "737b73dda2792882c66b6db91654be55c5be69b9", "url": "https://github.com/elastic/elasticsearch/commit/737b73dda2792882c66b6db91654be55c5be69b9", "message": "Included vendored code notices in distribution notice files", "committedDate": "2020-05-20T21:18:35Z", "type": "commit"}, {"oid": "2cca9badb6e778d543f364c54855892f555e22eb", "url": "https://github.com/elastic/elasticsearch/commit/2cca9badb6e778d543f364c54855892f555e22eb", "message": "Handle projects with no license file directory", "committedDate": "2020-05-20T21:28:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUyMDU4MA==", "url": "https://github.com/elastic/elasticsearch/pull/57017#discussion_r428520580", "bodyText": "No big deal, but might this be a little easier to grok as follows?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String name = file.name.substring(0, file.name.length() - '-NOTICE.txt'.length())\n          \n          \n            \n                        String name = file.name.replaceFirst(\"-NOTICE\\.txt$\", \"\")", "author": "pugnascotia", "createdAt": "2020-05-21T08:36:20Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/NoticeTask.groovy", "diffHunk": "@@ -50,46 +55,122 @@ public class NoticeTask extends DefaultTask {\n     }\n \n     /** Add notices from the specified directory. */\n-    public void licensesDir(File licensesDir) {\n+    void licensesDir(File licensesDir) {\n         licensesDirs.add(licensesDir)\n     }\n \n+    void source(Object source) {\n+        if (sources == null) {\n+            sources = project.fileTree(source)\n+        } else {\n+            sources += project.fileTree(source)\n+        }\n+    }\n+\n+    void source(SourceDirectorySet source) {\n+        if (sources == null) {\n+            sources = source\n+        } else {\n+            sources += source\n+        }\n+    }\n+\n     @TaskAction\n-    public void generateNotice() {\n+    void generateNotice() {\n         StringBuilder output = new StringBuilder()\n         output.append(inputFile.getText('UTF-8'))\n         output.append('\\n\\n')\n         // This is a map rather than a set so that the sort order is the 3rd\n         // party component names, unaffected by the full path to the various files\n         Map<String, File> seen = new TreeMap<>()\n-        for (File licensesDir : licensesDirs) {\n-            licensesDir.eachFileMatch({ it ==~ /.*-NOTICE\\.txt/ }) { File file ->\n-                String name = file.name.substring(0, file.name.length() - '-NOTICE.txt'.length())\n-                if (seen.containsKey(name)) {\n-                    File prevFile = seen.get(name)\n-                    if (prevFile.text != file.text) {\n-                        throw new RuntimeException(\"Two different notices exist for dependency '\" +\n-                                name + \"': \" + prevFile + \" and \" + file)\n-                    }\n-                } else {\n-                    seen.put(name, file)\n+        noticeFiles.each { File file ->\n+            String name = file.name.substring(0, file.name.length() - '-NOTICE.txt'.length())", "originalCommit": "2cca9badb6e778d543f364c54855892f555e22eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY2Mjc2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57017#discussion_r428662766", "bodyText": "No doubt \ud83d\ude04", "author": "mark-vieira", "createdAt": "2020-05-21T13:49:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUyMDU4MA=="}], "type": "inlineReview"}, {"oid": "f6593346749d79c6697d7dd3f46fcbd279d330ad", "url": "https://github.com/elastic/elasticsearch/commit/f6593346749d79c6697d7dd3f46fcbd279d330ad", "message": "Apply review suggestion\n\nCo-authored-by: Rory Hunter <pugnascotia@users.noreply.github.com>", "committedDate": "2020-05-21T13:49:41Z", "type": "commit"}, {"oid": "f6a73cf2a8eb1c5511722037c1b76b7c5f4f8cc6", "url": "https://github.com/elastic/elasticsearch/commit/f6a73cf2a8eb1c5511722037c1b76b7c5f4f8cc6", "message": "Use regex literal", "committedDate": "2020-05-21T13:58:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNjcyNA==", "url": "https://github.com/elastic/elasticsearch/pull/57017#discussion_r428736724", "bodyText": "I think you have a rogue quote in there.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String name = file.name.replaceFirst(/-NOTICE\\.txt$\"/, \"\")\n          \n          \n            \n                        String name = file.name.replaceFirst(/-NOTICE\\.txt$/, \"\")", "author": "pugnascotia", "createdAt": "2020-05-21T15:42:08Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/NoticeTask.groovy", "diffHunk": "@@ -84,7 +84,7 @@ class NoticeTask extends DefaultTask {\n         // party component names, unaffected by the full path to the various files\n         Map<String, File> seen = new TreeMap<>()\n         noticeFiles.each { File file ->\n-            String name = file.name.replaceFirst(\"-NOTICE\\.txt$\", \"\")\n+            String name = file.name.replaceFirst(/-NOTICE\\.txt$\"/, \"\")", "originalCommit": "f6a73cf2a8eb1c5511722037c1b76b7c5f4f8cc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1ODcxMg==", "url": "https://github.com/elastic/elasticsearch/pull/57017#discussion_r428758712", "bodyText": "One challenge here is that we have made modifications to these files, and my understanding is that we're suppose to indicate that. That is, this is not a direct copy of EvictingQueue from Guava, but rather the starting point, and then we made some modifications in place which are of course not copyright the Guava authors.", "author": "jasontedor", "createdAt": "2020-05-21T16:13:19Z", "path": "server/src/main/java/org/elasticsearch/common/collect/EvictingQueue.java", "diffHunk": "@@ -1,20 +1,17 @@\n-/*\n- * Licensed to Elasticsearch under one or more contributor\n- * license agreements. See the NOTICE file distributed with\n- * this work for additional information regarding copyright\n- * ownership. Elasticsearch licenses this file to you under\n- * the Apache License, Version 2.0 (the \"License\"); you may\n- * not use this file except in compliance with the License.\n+/* @notice\n+ * Copyright (C) 2012 The Guava Authors", "originalCommit": "f6a73cf2a8eb1c5511722037c1b76b7c5f4f8cc6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2ODE1NA==", "url": "https://github.com/elastic/elasticsearch/pull/57017#discussion_r428868154", "bodyText": "Same situation for our Guice fork. What's the right course of action here? Do we require a slightly different header, or include both the ES one and the vendored one?", "author": "mark-vieira", "createdAt": "2020-05-21T19:33:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1ODcxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMyNTA5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57017#discussion_r431325093", "bodyText": "@jasontedor can we push forward on this as-is or do you suspect we need to change these headers?\n@tomcallahan do you have thoughts on the proper way to handle vendored code that is not a direct copy, but has been modified?", "author": "mark-vieira", "createdAt": "2020-05-27T17:41:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1ODcxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1NjQzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/57017#discussion_r431356435", "bodyText": "@mark-vieira - @jasontedor is correct that we should flag the fact that we've modified these files. I think it would be fine to simply add something like this:\nModifications copyright (C) <year> Elasticsearch B.V.\nafter the Guava copyright", "author": "tomcallahan", "createdAt": "2020-05-27T18:30:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1ODcxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc2NzQxMA==", "url": "https://github.com/elastic/elasticsearch/pull/57017#discussion_r428767410", "bodyText": "nit: this comment block should be before the package statement, for consistency with the rest of our files", "author": "rjernst", "createdAt": "2020-05-21T16:28:21Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/support/BCrypt.java", "diffHunk": "@@ -1,18 +1,20 @@\n package org.elasticsearch.xpack.core.security.authc.support;\n \n-// Copyright (c) 2006 Damien Miller <djm@mindrot.org>\n-//\n-// Permission to use, copy, modify, and distribute this software for any\n-// purpose with or without fee is hereby granted, provided that the above\n-// copyright notice and this permission notice appear in all copies.\n-//\n-// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n-// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n-// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n-// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n-// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n-// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n-// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n+/* @notice", "originalCommit": "f6a73cf2a8eb1c5511722037c1b76b7c5f4f8cc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3MDc5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57017#discussion_r428770795", "bodyText": "Shouldn't this always be not-null since we set it above?", "author": "rjernst", "createdAt": "2020-05-21T16:34:11Z", "path": "buildSrc/src/main/groovy/org/elasticsearch/gradle/NoticeTask.groovy", "diffHunk": "@@ -50,46 +55,122 @@ public class NoticeTask extends DefaultTask {\n     }\n \n     /** Add notices from the specified directory. */\n-    public void licensesDir(File licensesDir) {\n+    void licensesDir(File licensesDir) {\n         licensesDirs.add(licensesDir)\n     }\n \n+    void source(Object source) {\n+        if (sources == null) {\n+            sources = project.fileTree(source)\n+        } else {\n+            sources += project.fileTree(source)\n+        }\n+    }\n+\n+    void source(SourceDirectorySet source) {\n+        if (sources == null) {\n+            sources = source\n+        } else {\n+            sources += source\n+        }\n+    }\n+\n     @TaskAction\n-    public void generateNotice() {\n+    void generateNotice() {\n         StringBuilder output = new StringBuilder()\n         output.append(inputFile.getText('UTF-8'))\n         output.append('\\n\\n')\n         // This is a map rather than a set so that the sort order is the 3rd\n         // party component names, unaffected by the full path to the various files\n         Map<String, File> seen = new TreeMap<>()\n-        for (File licensesDir : licensesDirs) {\n-            licensesDir.eachFileMatch({ it ==~ /.*-NOTICE\\.txt/ }) { File file ->\n-                String name = file.name.substring(0, file.name.length() - '-NOTICE.txt'.length())\n-                if (seen.containsKey(name)) {\n-                    File prevFile = seen.get(name)\n-                    if (prevFile.text != file.text) {\n-                        throw new RuntimeException(\"Two different notices exist for dependency '\" +\n-                                name + \"': \" + prevFile + \" and \" + file)\n-                    }\n-                } else {\n-                    seen.put(name, file)\n+        noticeFiles.each { File file ->\n+            String name = file.name.replaceFirst(/-NOTICE\\.txt$\"/, \"\")\n+            if (seen.containsKey(name)) {\n+                File prevFile = seen.get(name)\n+                if (prevFile.text != file.text) {\n+                    throw new RuntimeException(\"Two different notices exist for dependency '\" +\n+                            name + \"': \" + prevFile + \" and \" + file)\n                 }\n+            } else {\n+                seen.put(name, file)\n             }\n         }\n+\n+        // Add all LICENSE and NOTICE files in licenses directory\n         for (Map.Entry<String, File> entry : seen.entrySet()) {\n             String name = entry.getKey()\n             File file = entry.getValue()\n             appendFile(file, name, 'NOTICE', output)\n             appendFile(new File(file.parentFile, \"${name}-LICENSE.txt\"), name, 'LICENSE', output)\n         }\n+\n+        // Find any source files with \"@notice\" annotated license header\n+        for (File sourceFile : sources.files) {\n+            boolean isPackageInfo = sourceFile.name == 'package-info.java'\n+            boolean foundNotice = false\n+            boolean inNotice = false\n+            StringBuilder header = new StringBuilder()\n+            String packageDeclaration\n+\n+            for (String line : sourceFile.readLines()) {\n+                if (isPackageInfo && packageDeclaration == null && line.startsWith('package')) {\n+                    packageDeclaration = line\n+                }\n+\n+                if (foundNotice == false) {\n+                    foundNotice = line.contains('@notice')\n+                    inNotice = true\n+                } else {\n+                    if (line.contains('*/')) {\n+                        inNotice = false\n+\n+                        if (!isPackageInfo) {\n+                            break\n+                        }\n+                    } else if (inNotice) {\n+                        header.append(line.stripMargin('*'))\n+                        header.append('\\n')\n+                    }\n+                }\n+            }\n+\n+            if (foundNotice) {\n+                appendText(header.toString(), isPackageInfo ? packageDeclaration : sourceFile.name, '', output)\n+            }\n+        }\n         outputFile.setText(output.toString(), 'UTF-8')\n     }\n \n+    @InputFiles\n+    @Optional\n+    FileCollection getNoticeFiles() {\n+        FileTree tree\n+        licensesDirs.each { dir ->\n+            if (tree == null) {\n+                tree = project.fileTree(dir)\n+            } else {\n+                tree += project.fileTree(dir)\n+            }\n+        }\n+\n+        return tree?.matching { include '**/*-NOTICE.txt' }", "originalCommit": "f6a73cf2a8eb1c5511722037c1b76b7c5f4f8cc6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NTA5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/57017#discussion_r428795093", "bodyText": "We only set it if licenseDirs is non-empty. Not all subprojects have a license dir, so this needs to be optional.", "author": "mark-vieira", "createdAt": "2020-05-21T17:16:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3MDc5NQ=="}], "type": "inlineReview"}, {"oid": "95ba23b710bd38db552a587b5f1ddf965ecf254b", "url": "https://github.com/elastic/elasticsearch/commit/95ba23b710bd38db552a587b5f1ddf965ecf254b", "message": "Move license header", "committedDate": "2020-05-21T19:40:10Z", "type": "commit"}, {"oid": "2e3f2c679d202faa0f3c3b0969622367cd80a433", "url": "https://github.com/elastic/elasticsearch/commit/2e3f2c679d202faa0f3c3b0969622367cd80a433", "message": "Fix regex", "committedDate": "2020-05-21T19:40:20Z", "type": "commit"}, {"oid": "ebbe657b0e466551943dc78af331bcb60a2f3e33", "url": "https://github.com/elastic/elasticsearch/commit/ebbe657b0e466551943dc78af331bcb60a2f3e33", "message": "Add modifications copyright notice on vendored code", "committedDate": "2020-06-01T18:37:18Z", "type": "commit"}, {"oid": "7c6a72f64ea557a491da2a19595888c24a112524", "url": "https://github.com/elastic/elasticsearch/commit/7c6a72f64ea557a491da2a19595888c24a112524", "message": "Merge branch 'master' into vendored-code-notices", "committedDate": "2020-06-01T18:58:58Z", "type": "commit"}]}