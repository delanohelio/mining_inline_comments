{"pr_number": 66433, "pr_title": "Avoid Needless Cache Status Fetches in SearchableSnapshotAllocator", "pr_createdAt": "2020-12-16T09:36:10Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66433", "timeline": [{"oid": "52460d5840d036668d6d5bf6ffed3224f3e1f5d7", "url": "https://github.com/elastic/elasticsearch/commit/52460d5840d036668d6d5bf6ffed3224f3e1f5d7", "message": "Avoid Needless Cache Status Fetches in SearchableSnapshotAllocator\n\nWe shouldn't fetch cache status if no allocation is possible to begin with.\nAlso, this surfaced an issue with using the `Client` to `reroute` since that\nwon't retry stale shards (failed the invalid license IT for example) so I moved\nto using the `RerouteService` like we do in the `GatewayAllocator`.\n(Plus, dried up one method that was 100% the same as in the replica allocator)", "committedDate": "2020-12-16T09:32:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE0ODM2NA==", "url": "https://github.com/elastic/elasticsearch/pull/66433#discussion_r544148364", "bodyText": "Just a revert of making this public yesterday now that it's not needed for tests any longer.", "author": "original-brownbear", "createdAt": "2020-12-16T09:36:35Z", "path": "server/src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java", "diffHunk": "@@ -44,7 +44,7 @@\n         explanations = RoutingExplanations.readFrom(in);\n     }\n \n-    public ClusterRerouteResponse(boolean acknowledged, ClusterState state, RoutingExplanations explanations) {\n+    ClusterRerouteResponse(boolean acknowledged, ClusterState state, RoutingExplanations explanations) {", "originalCommit": "52460d5840d036668d6d5bf6ffed3224f3e1f5d7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI2MjY5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/66433#discussion_r544262691", "bodyText": "Can we add a test that we do not trigger any reads or reroutes when deciders say no?", "author": "henningandersen", "createdAt": "2020-12-16T12:34:12Z", "path": "x-pack/plugin/searchable-snapshots/src/main/java/org/elasticsearch/xpack/searchablesnapshots/SearchableSnapshotAllocator.java", "diffHunk": "@@ -151,20 +156,15 @@ private AllocateUnassignedDecision decideAllocation(RoutingAllocation allocation\n             return AllocateUnassignedDecision.no(UnassignedInfo.AllocationStatus.FETCHING_SHARD_DATA, null);\n         }\n \n-        final AsyncShardFetch.FetchResult<NodeCacheFilesMetadata> fetchedCacheData = fetchData(shardRouting, allocation);\n-        if (fetchedCacheData.hasData() == false) {\n-            return AllocateUnassignedDecision.no(UnassignedInfo.AllocationStatus.FETCHING_SHARD_DATA, null);\n-        }\n-\n         final boolean explain = allocation.debugDecision();\n-        final MatchingNodes matchingNodes = findMatchingNodes(shardRouting, allocation, fetchedCacheData, explain);\n-        assert explain == false || matchingNodes.nodeDecisions != null : \"in explain mode, we must have individual node decisions\";\n-\n         // pre-check if it can be allocated to any node that currently exists, so we won't list the cache sizes for it for nothing\n         // TODO: in the following logic, we do not account for existing cache size when handling disk space checks, should and can we\n         // reliably do this in a world of concurrent cache evictions or are we ok with the cache size just being a best effort hint\n         // here?\n-        Tuple<Decision, Map<String, NodeAllocationResult>> result = canBeAllocatedToAtLeastOneNode(shardRouting, allocation);\n+        Tuple<Decision, Map<String, NodeAllocationResult>> result = ReplicaShardAllocator.canBeAllocatedToAtLeastOneNode(", "originalCommit": "52460d5840d036668d6d5bf6ffed3224f3e1f5d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI3ODk3MA==", "url": "https://github.com/elastic/elasticsearch/pull/66433#discussion_r544278970", "bodyText": "Sure thing, I pushed 0cb0017 :)", "author": "original-brownbear", "createdAt": "2020-12-16T13:00:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI2MjY5MQ=="}], "type": "inlineReview"}, {"oid": "75819e1e59c63369ef09c37ccc807298649e1c0b", "url": "https://github.com/elastic/elasticsearch/commit/75819e1e59c63369ef09c37ccc807298649e1c0b", "message": "Merge remote-tracking branch 'elastic/master' into avoid-unnecessary-fetches", "committedDate": "2020-12-16T12:36:26Z", "type": "commit"}, {"oid": "0cb00177c8066ab431420e4f5c875817b1e2fa28", "url": "https://github.com/elastic/elasticsearch/commit/0cb00177c8066ab431420e4f5c875817b1e2fa28", "message": "add test", "committedDate": "2020-12-16T12:59:09Z", "type": "commit"}]}