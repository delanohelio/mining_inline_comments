{"pr_number": 50874, "pr_title": "[ML][Inference] Adding classification_weights to ensemble models", "pr_createdAt": "2020-01-10T20:20:01Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/50874", "timeline": [{"oid": "53bb9ba01a108c33eb4d3ef89bf501532f0dc673", "url": "https://github.com/elastic/elasticsearch/commit/53bb9ba01a108c33eb4d3ef89bf501532f0dc673", "message": "[ML][Inference] Adding classification_weights to ensemble models\n\nclassification_weights are a way to allow models to\nprefer specific classification results over others\nthis might be advantageous if classification value\nprobabilities are a known quantity and can improve\nmodel error rates.", "committedDate": "2020-01-10T20:19:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMyMzQ4OA==", "url": "https://github.com/elastic/elasticsearch/pull/50874#discussion_r366323488", "bodyText": "I think it's better how it was before [{}]", "author": "davidkyle", "createdAt": "2020-01-14T12:59:39Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/InferenceHelpers.java", "diffHunk": "@@ -20,27 +21,40 @@\n \n     private InferenceHelpers() { }\n \n-    public static List<ClassificationInferenceResults.TopClassEntry> topClasses(List<Double> probabilities,\n-                                                                                List<String> classificationLabels,\n-                                                                                int numToInclude) {\n-        if (numToInclude == 0) {\n-            return Collections.emptyList();\n-        }\n-        int[] sortedIndices = IntStream.range(0, probabilities.size())\n-            .boxed()\n-            .sorted(Comparator.comparing(probabilities::get).reversed())\n-            .mapToInt(i -> i)\n-            .toArray();\n+    /**\n+     * @return Tuple of the highest scored index and the top classes\n+     */\n+    public static Tuple<Integer, List<ClassificationInferenceResults.TopClassEntry>> topClasses(List<Double> probabilities,\n+                                                                                                List<String> classificationLabels,\n+                                                                                                @Nullable double[] classificationWeights,\n+                                                                                                int numToInclude) {\n \n         if (classificationLabels != null && probabilities.size() != classificationLabels.size()) {\n             throw ExceptionsHelper\n                 .serverError(\n-                    \"model returned classification probabilities of size [{}] which is not equal to classification labels size [{}]\",\n+                    \"model returned classification probabilities of size [{}] which is not equal to classification labels size {}\",", "originalCommit": "53bb9ba01a108c33eb4d3ef89bf501532f0dc673", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzMTg4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/50874#discussion_r366331885", "bodyText": "\ud83e\udd14 possibly? I might want to switch this around a bit. It is writing out the classification labels array not the size. Woops!", "author": "benwtrent", "createdAt": "2020-01-14T13:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMyMzQ4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzMzA0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/50874#discussion_r366333047", "bodyText": "Ha", "author": "davidkyle", "createdAt": "2020-01-14T13:21:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMyMzQ4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMyOTExMw==", "url": "https://github.com/elastic/elasticsearch/pull/50874#discussion_r366329113", "bodyText": "Consider adding LANGUAGE_NAMES to toXContent and the parser. Tree includes the labels in its xcontent representation", "author": "davidkyle", "createdAt": "2020-01-14T13:12:26Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/langident/LangIdentNeuralNetwork.java", "diffHunk": "@@ -156,11 +146,6 @@ public TargetType targetType() {\n         return TargetType.CLASSIFICATION;\n     }\n \n-    @Override\n-    public List<String> classificationLabels() {\n-        return LANGUAGE_NAMES;", "originalCommit": "53bb9ba01a108c33eb4d3ef89bf501532f0dc673", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzMDAyMA==", "url": "https://github.com/elastic/elasticsearch/pull/50874#discussion_r366330020", "bodyText": "Is there no test for this method?", "author": "davidkyle", "createdAt": "2020-01-14T13:14:25Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/InferenceHelpers.java", "diffHunk": "@@ -20,27 +21,40 @@\n \n     private InferenceHelpers() { }\n \n-    public static List<ClassificationInferenceResults.TopClassEntry> topClasses(List<Double> probabilities,\n-                                                                                List<String> classificationLabels,\n-                                                                                int numToInclude) {\n-        if (numToInclude == 0) {\n-            return Collections.emptyList();\n-        }\n-        int[] sortedIndices = IntStream.range(0, probabilities.size())\n-            .boxed()\n-            .sorted(Comparator.comparing(probabilities::get).reversed())\n-            .mapToInt(i -> i)\n-            .toArray();\n+    /**\n+     * @return Tuple of the highest scored index and the top classes\n+     */\n+    public static Tuple<Integer, List<ClassificationInferenceResults.TopClassEntry>> topClasses(List<Double> probabilities,", "originalCommit": "53bb9ba01a108c33eb4d3ef89bf501532f0dc673", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzMjIyNg==", "url": "https://github.com/elastic/elasticsearch/pull/50874#discussion_r366332226", "bodyText": "There is coverage through functional tests.", "author": "benwtrent", "createdAt": "2020-01-14T13:19:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzMDAyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzMDMyMA==", "url": "https://github.com/elastic/elasticsearch/pull/50874#discussion_r366330320", "bodyText": "Both these methods are just not called anywhere? Is that why they are removed? If so \ud83d\udc4d", "author": "davidkyle", "createdAt": "2020-01-14T13:15:06Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/inference/trainedmodel/TrainedModel.java", "diffHunk": "@@ -6,21 +6,14 @@\n package org.elasticsearch.xpack.core.ml.inference.trainedmodel;\n \n import org.apache.lucene.util.Accountable;\n-import org.elasticsearch.common.Nullable;\n import org.elasticsearch.common.io.stream.NamedWriteable;\n import org.elasticsearch.xpack.core.ml.inference.results.InferenceResults;\n import org.elasticsearch.xpack.core.ml.utils.NamedXContentObject;\n \n-import java.util.List;\n import java.util.Map;\n \n public interface TrainedModel extends NamedXContentObject, NamedWriteable, Accountable {\n \n-    /**\n-     * @return List of featureNames expected by the model. In the order that they are expected\n-     */\n-    List<String> getFeatureNames();", "originalCommit": "53bb9ba01a108c33eb4d3ef89bf501532f0dc673", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzMjUxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/50874#discussion_r366332511", "bodyText": "Yes, I am cleaning up the interface. I added a bunch of stuff that I thought \"all\" models would need, and it turns out that that is not the case.", "author": "benwtrent", "createdAt": "2020-01-14T13:19:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzMDMyMA=="}], "type": "inlineReview"}, {"oid": "d735cadb91d7f93a8d54fb8b1c4020f27368bb0d", "url": "https://github.com/elastic/elasticsearch/commit/d735cadb91d7f93a8d54fb8b1c4020f27368bb0d", "message": "Update InferenceHelpers.java", "committedDate": "2020-01-14T13:21:37Z", "type": "commit"}, {"oid": "b1ac9995bbcd8708c41d187d3dd9ec4f9d256dbc", "url": "https://github.com/elastic/elasticsearch/commit/b1ac9995bbcd8708c41d187d3dd9ec4f9d256dbc", "message": "Merge branch 'master' into feature/ml-inference-add-classification-threshold", "committedDate": "2020-01-14T13:35:04Z", "type": "commit"}, {"oid": "2b1ed38dd46711b199d1820b4b868feccacc14f9", "url": "https://github.com/elastic/elasticsearch/commit/2b1ed38dd46711b199d1820b4b868feccacc14f9", "message": "fixing tests", "committedDate": "2020-01-14T14:38:58Z", "type": "commit"}, {"oid": "fdc40c737d5acb3acd76905822642dcbff9264f5", "url": "https://github.com/elastic/elasticsearch/commit/fdc40c737d5acb3acd76905822642dcbff9264f5", "message": "fixing tests", "committedDate": "2020-01-14T15:22:42Z", "type": "commit"}, {"oid": "7ee51d49708107d24adc2e9e0ff0e4eebfcc49d1", "url": "https://github.com/elastic/elasticsearch/commit/7ee51d49708107d24adc2e9e0ff0e4eebfcc49d1", "message": "Update TreeTests.java", "committedDate": "2020-01-14T15:42:28Z", "type": "commit"}]}