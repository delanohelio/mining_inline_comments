{"pr_number": 65792, "pr_title": "SQL: Enable the InnerAggregates inside PIVOT", "pr_createdAt": "2020-12-02T23:26:41Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65792", "timeline": [{"oid": "63ffe2e0aae647a5a810f087c6155ca7e7327488", "url": "https://github.com/elastic/elasticsearch/commit/63ffe2e0aae647a5a810f087c6155ca7e7327488", "message": "SQL: Enable the InnerAggregates inside PIVOT\n\n* Remove the limitation of not being able use `InnerAggregate` inside\nPIVOT (aggregations using extended and matrix stats)", "committedDate": "2020-12-02T23:23:05Z", "type": "commit"}, {"oid": "a6208fb82a7233817a71a555cf24100027f09811", "url": "https://github.com/elastic/elasticsearch/commit/a6208fb82a7233817a71a555cf24100027f09811", "message": "Additional, more complicated testcases", "committedDate": "2020-12-03T16:19:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4ODEyNg==", "url": "https://github.com/elastic/elasticsearch/pull/65792#discussion_r535388126", "bodyText": "I'd like to see a test with multiple arguments that get folded into compound aggs, such as sum / min / max.", "author": "costin", "createdAt": "2020-12-03T16:31:49Z", "path": "x-pack/plugin/sql/qa/server/src/main/resources/pivot.csv-spec", "diffHunk": "@@ -201,6 +201,29 @@ null                 |10044          |Mingsen        |F              |1994-05-21\n // end::sumWithoutSubquery\n ;\n \n+sumWithInnerAggregateSumOfSquares\n+schema::birth_date:ts|emp_no:i|first_name:s|gender:s|hire_date:ts|last_name:s|1:d|2:d\n+SELECT * FROM test_emp PIVOT (SUM_OF_SQUARES(salary) FOR languages IN (1, 2)) LIMIT 5;", "originalCommit": "63ffe2e0aae647a5a810f087c6155ca7e7327488", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU1ODM0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/65792#discussion_r535558349", "bodyText": "Do you mean multiple aggregations inside the PIVOT? Currently there is a check that we can only have a single aggregation inside the PIVOT, so we can't have PIVOT(MIN(salary), MAX(salary) FOR ...).\nThis change only lifts the limitation on the type of that single aggregation within the PIVOT, so aggregations that are translated into an InnerAggregate will be allowed.", "author": "palesz", "createdAt": "2020-12-03T20:16:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4ODEyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAzNjU3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/65792#discussion_r536036576", "bodyText": "Is there any validation or check for this (now that PostOptimizerTest has been removed)? this goes beyond the scope of this ticket so please raise a ticket if this functionality is missing or needs to be further investigated.", "author": "costin", "createdAt": "2020-12-04T11:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4ODEyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE5MTIyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/65792#discussion_r536191229", "bodyText": "The PostOptimizerTests checked that the type of the aggregation cannot be one that results in an InnerAggregate vs the number of the aggregations inside the PIVOT.\nThere is already a check in the LogicalPlanBuilder that only allows one aggregation inside the PIVOT: \n  \n    \n      elasticsearch/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/parser/LogicalPlanBuilder.java\n    \n    \n         Line 186\n      in\n      2f5ab81\n    \n    \n    \n    \n\n        \n          \n           throw new ParsingException(source(pivotClause.aggs), \"PIVOT currently supports only one aggregation, found [{}]\", \n        \n    \n  \n\n\nI cannot see it tested in unit tests, but it is there and works. Added: #65894", "author": "palesz", "createdAt": "2020-12-04T15:43:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4ODEyNg=="}], "type": "inlineReview"}, {"oid": "19dc1c62a139eb4c947e6e70ec6275f6603a492a", "url": "https://github.com/elastic/elasticsearch/commit/19dc1c62a139eb4c947e6e70ec6275f6603a492a", "message": "Test that `PIVOT` and `GROUP BY` has same query\n\nTest that the `PIVOT` results in the same query as\nthe `GROUP BY`. This should hold across all the `AggregateFunction`s we\nhave.", "committedDate": "2020-12-03T22:46:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNDgwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/65792#discussion_r535724801", "bodyText": "Created #65863", "author": "palesz", "createdAt": "2020-12-03T23:35:06Z", "path": "x-pack/plugin/sql/qa/server/src/main/resources/pivot.csv-spec", "diffHunk": "@@ -201,6 +201,51 @@ null                 |10044          |Mingsen        |F              |1994-05-21\n // end::sumWithoutSubquery\n ;\n \n+sumWithInnerAggregateSumOfSquares\n+schema::birth_date:ts|emp_no:i|first_name:s|gender:s|hire_date:ts|last_name:s|1:d|2:d\n+SELECT * FROM test_emp PIVOT (SUM_OF_SQUARES(salary) FOR languages IN (1, 2)) LIMIT 5;\n+\n+  birth_date         |    emp_no     |  first_name   |    gender     |       hire_date        |   last_name   |       1       |       2       \n+---------------------+---------------+---------------+---------------+------------------------+---------------+---------------+---------------\n+null                 |10041          |Uri            |F              |1989-11-12T00:00:00.000Z|Lenart         |3.182652225E9  |null           \n+null                 |10043          |Yishay         |M              |1990-10-20T00:00:00.000Z|Tzvieli        |1.179304281E9  |null           \n+null                 |10044          |Mingsen        |F              |1994-05-21T00:00:00.000Z|Casley         |1.578313984E9  |null           \n+1952-04-19T00:00:00Z |10009          |Sumant         |F              |1985-02-18T00:00:00.000Z|Peac           |4.378998276E9  |null           \n+1953-01-07T00:00:00Z |10067          |Claudi         |M              |1987-03-04T00:00:00.000Z|Stavenow       |null           |2.708577936E9  \n+;\n+\n+sumWithInnerAggregateSumOfSquaresRound\n+schema::birth_date:ts|emp_no:i|first_name:s|gender:s|hire_date:ts|last_name:s|1:d|2:d\n+SELECT * FROM test_emp PIVOT (ROUND(SUM_OF_SQUARES(salary)/1E6, 2) FOR languages IN (1, 2)) LIMIT 5;\n+\n+  birth_date         |    emp_no     |  first_name   |    gender     |       hire_date        |   last_name   |       1       |       2       \n+---------------------+---------------+---------------+---------------+------------------------+---------------+---------------+---------------\n+null                 |10041          |Uri            |F              |1989-11-12T00:00:00.000Z|Lenart         |3182.65        |null           \n+null                 |10043          |Yishay         |M              |1990-10-20T00:00:00.000Z|Tzvieli        |1179.30        |null           \n+null                 |10044          |Mingsen        |F              |1994-05-21T00:00:00.000Z|Casley         |1578.31        |null           \n+1952-04-19T00:00:00Z |10009          |Sumant         |F              |1985-02-18T00:00:00.000Z|Peac           |4379.00        |null           \n+1953-01-07T00:00:00Z |10067          |Claudi         |M              |1987-03-04T00:00:00.000Z|Stavenow       |null           |2708.58        \n+;\n+\n+sumWithInnerAggregateKurtosis\n+schema::client_port:i|'OK':d|'Error':d\n+SELECT * FROM (SELECT client_port, status, bytes_in FROM logs WHERE client_port IS NULL) PIVOT (KURTOSIS(bytes_in) FOR status IN ('OK', 'Error')) LIMIT 10;\n+\n+  client_port  |       'OK'       |    'Error'    \n+---------------+------------------+---------------\n+null           |2.0016153277578916|NaN            \n+;\n+\n+sumWithInnerAggregateKurtosisRound\n+schema::client_port:i|'OK':d|'Error':d\n+SELECT * FROM (SELECT client_port, status, bytes_in FROM logs WHERE client_port IS NULL) PIVOT (ROUND(KURTOSIS(bytes_in), 3) FOR status IN ('OK', 'Error')) LIMIT 10;\n+\n+  client_port  |       'OK'       |    'Error'    \n+---------------+------------------+---------------\n+null           |2.002             |-0.0            ", "originalCommit": "19dc1c62a139eb4c947e6e70ec6275f6603a492a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "38675937470735be4d70c80f35f8f14ec6336e14", "url": "https://github.com/elastic/elasticsearch/commit/38675937470735be4d70c80f35f8f14ec6336e14", "message": "Merge remote-tracking branch 'origin/master' into feature/pivot-inneraggregates", "committedDate": "2020-12-03T23:35:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAzNDg1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/65792#discussion_r536034852", "bodyText": "It's better to get the list from the Function registry so that all existing aggs and future ones are picked up without having to manually update this test (since it is unlikely it will happen).", "author": "costin", "createdAt": "2020-12-04T11:33:36Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/planner/QueryFolderTests.java", "diffHunk": "@@ -495,14 +497,34 @@ public void testFoldingOfPivot() {\n         assertEquals(EsQueryExec.class, p.getClass());\n         EsQueryExec ee = (EsQueryExec) p;\n         assertEquals(3, ee.output().size());\n-        assertEquals(Arrays.asList(\"bool\", \"'A'\", \"'B'\"), Expressions.names(ee.output()));\n+        assertEquals(asList(\"bool\", \"'A'\", \"'B'\"), Expressions.names(ee.output()));\n         String q = ee.toString().replaceAll(\"\\\\s+\", \"\");\n         assertThat(q, containsString(\"\\\"query\\\":{\\\"terms\\\":{\\\"keyword\\\":[\\\"A\\\",\\\"B\\\"]\"));\n         String a = ee.queryContainer().aggs().asAggBuilder().toString().replaceAll(\"\\\\s+\", \"\");\n         assertThat(a, containsString(\"\\\"terms\\\":{\\\"field\\\":\\\"bool\\\"\"));\n         assertThat(a, containsString(\"\\\"terms\\\":{\\\"field\\\":\\\"keyword\\\"\"));\n         assertThat(a, containsString(\"{\\\"avg\\\":{\\\"field\\\":\\\"int\\\"}\"));\n     }\n+    ", "originalCommit": "38675937470735be4d70c80f35f8f14ec6336e14", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3MjkzNg==", "url": "https://github.com/elastic/elasticsearch/pull/65792#discussion_r536272936", "bodyText": "\ud83d\udc4d Yep, that sounds like a better solution (was thinking about possible going with reflection, but this is better).", "author": "palesz", "createdAt": "2020-12-04T17:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAzNDg1Mg=="}], "type": "inlineReview"}, {"oid": "cca0ed7ff37ad02f9dbd5ff7bb8965d0efb116ee", "url": "https://github.com/elastic/elasticsearch/commit/cca0ed7ff37ad02f9dbd5ff7bb8965d0efb116ee", "message": "Utilized SQLFunctionRegistry to look up the `AggregateFunction`s", "committedDate": "2020-12-04T18:11:10Z", "type": "commit"}, {"oid": "8480e392167385260f249340ad6734db3cd41691", "url": "https://github.com/elastic/elasticsearch/commit/8480e392167385260f249340ad6734db3cd41691", "message": "Merge remote-tracking branch 'origin/master' into feature/pivot-inneraggregates", "committedDate": "2020-12-04T18:12:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1OTQ3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/65792#discussion_r537459473", "bodyText": "You might want to use a different construct to ease backporting to 7.x due to the JDK difference", "author": "costin", "createdAt": "2020-12-07T12:13:06Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/planner/QueryFolderTests.java", "diffHunk": "@@ -495,14 +499,39 @@ public void testFoldingOfPivot() {\n         assertEquals(EsQueryExec.class, p.getClass());\n         EsQueryExec ee = (EsQueryExec) p;\n         assertEquals(3, ee.output().size());\n-        assertEquals(Arrays.asList(\"bool\", \"'A'\", \"'B'\"), Expressions.names(ee.output()));\n+        assertEquals(asList(\"bool\", \"'A'\", \"'B'\"), Expressions.names(ee.output()));\n         String q = ee.toString().replaceAll(\"\\\\s+\", \"\");\n         assertThat(q, containsString(\"\\\"query\\\":{\\\"terms\\\":{\\\"keyword\\\":[\\\"A\\\",\\\"B\\\"]\"));\n         String a = ee.queryContainer().aggs().asAggBuilder().toString().replaceAll(\"\\\\s+\", \"\");\n         assertThat(a, containsString(\"\\\"terms\\\":{\\\"field\\\":\\\"bool\\\"\"));\n         assertThat(a, containsString(\"\\\"terms\\\":{\\\"field\\\":\\\"keyword\\\"\"));\n         assertThat(a, containsString(\"{\\\"avg\\\":{\\\"field\\\":\\\"int\\\"}\"));\n     }\n+    \n+    public void testPivotHasSameQueryAsGroupBy() {\n+        final Map<String, String> aggFnsWithMultipleArguments = Map.of(", "originalCommit": "8480e392167385260f249340ad6734db3cd41691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU2MDM3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/65792#discussion_r537560377", "bodyText": "I was thinking about this. I would prefer using the new APIs on master and change during backporting to Java 8 compatible, so moving forward we use the newer APIs.", "author": "palesz", "createdAt": "2020-12-07T14:43:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1OTQ3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwMDUxNA==", "url": "https://github.com/elastic/elasticsearch/pull/65792#discussion_r537700514", "bodyText": "This query fails for me in a REST test (using a REST client): it's only returning 3 rows, whereas it should have returned 5. We need to look into why the test passes and/or why the REST call with the same query fails. @palesz please, open an issue for this investigation.", "author": "astefan", "createdAt": "2020-12-07T17:43:28Z", "path": "x-pack/plugin/sql/qa/server/src/main/resources/pivot.csv-spec", "diffHunk": "@@ -201,6 +201,51 @@ null                 |10044          |Mingsen        |F              |1994-05-21\n // end::sumWithoutSubquery\n ;\n \n+sumWithInnerAggregateSumOfSquares\n+schema::birth_date:ts|emp_no:i|first_name:s|gender:s|hire_date:ts|last_name:s|1:d|2:d\n+SELECT * FROM test_emp PIVOT (SUM_OF_SQUARES(salary) FOR languages IN (1, 2)) LIMIT 5;", "originalCommit": "8480e392167385260f249340ad6734db3cd41691", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyNTk2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/65792#discussion_r537825967", "bodyText": "The JDBC integration tests fetch all the rows and follow the cursor (hence 5 rows shows up there). The tests are valid and successful, no issue there. Created #65982 to investigate this unexpected behaviour related to PIVOT+LIMIT.", "author": "palesz", "createdAt": "2020-12-07T20:55:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwMDUxNA=="}], "type": "inlineReview"}]}