{"pr_number": 59907, "pr_title": "SQL: Add option to provide the delimiter for the CSV format", "pr_createdAt": "2020-07-20T16:25:20Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59907", "timeline": [{"oid": "b910a899de0eb7375e8bff76bfe5530ca6305f98", "url": "https://github.com/elastic/elasticsearch/commit/b910a899de0eb7375e8bff76bfe5530ca6305f98", "message": "Add option to provide the delimiter to the CSV fmt\n\nThis adds the option to provide the desired character as the separator\nfor the CSV format (the default remains comma).\nA set of characters are excluded though - like CR, LF, `\"` - to avoid\nslipping onto the CSV-dialects slope. The tab is also forbidden, the\nuser needs to choose the \"tsv\" format explicitely.\n\nThe TSV format also gets a needed supplemental escaping, that of the '\\'\ncharacter.", "committedDate": "2020-07-20T16:16:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDQ4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r457880482", "bodyText": "I'd say IllegalArgumentException fits better.", "author": "matriv", "createdAt": "2020-07-21T07:04:10Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -109,15 +109,33 @@ protected String eol() {\n      *\n      */\n     CSV() {\n+        private Character delimiter = ',';\n \n         @Override\n-        protected String delimiter() {\n-            return \",\";\n+        protected Character delimiter() {\n+            return delimiter;\n+        }\n+\n+        @Override\n+        protected void setDelimiter(Character delimiter) {\n+            if (delimiter == null) {\n+                throw new UnsupportedOperationException();", "originalCommit": "b910a899de0eb7375e8bff76bfe5530ca6305f98", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2Mzg0NA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r458763844", "bodyText": "Makes sense.", "author": "bpintea", "createdAt": "2020-07-22T12:45:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MDQ4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MTkyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r457881921", "bodyText": "Minor, a set would be faster.", "author": "matriv", "createdAt": "2020-07-21T07:07:07Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/plugin/TextFormatTests.java", "diffHunk": "@@ -90,7 +92,25 @@ public void testCsvFormatWithRegularData() {\n         assertEquals(\"string,number\\r\\n\" +\n                 \"Along The River Bank,708\\r\\n\" +\n                 \"Mind Train,280\\r\\n\",\n-                text);\n+            text);\n+    }\n+\n+    public void testCsvFormatWithCustomDelimiterRegularData() {\n+        List<Character> forbidden = Arrays.asList('\"', '\\r', '\\n', '\\t');", "originalCommit": "b910a899de0eb7375e8bff76bfe5530ca6305f98", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2NDAxNQ==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r458764015", "bodyText": "Changed, thanks.", "author": "bpintea", "createdAt": "2020-07-22T12:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MTkyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MzIxMw==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r457883213", "bodyText": "Can we use some static variable for \"delimiter\"?", "author": "matriv", "createdAt": "2020-07-21T07:09:48Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/RestSqlQueryAction.java", "diffHunk": "@@ -124,6 +128,11 @@ public RestResponse buildResponse(SqlQueryResponse response) throws Exception {\n         });\n     }\n \n+    @Override\n+    protected Set<String> responseParams() {\n+        return textFormat == TextFormat.CSV ? Collections.singleton(\"delimiter\") : Collections.emptySet();", "originalCommit": "b910a899de0eb7375e8bff76bfe5530ca6305f98", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2NDExNg==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r458764116", "bodyText": "Sure. I've updated along a few other embedded strings, for this change to make sense.", "author": "bpintea", "createdAt": "2020-07-22T12:45:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg4MzIxMw=="}], "type": "inlineReview"}, {"oid": "6d5b28a776ed071c83caf79ff48f3c8184b65290", "url": "https://github.com/elastic/elasticsearch/commit/6d5b28a776ed071c83caf79ff48f3c8184b65290", "message": "Correct delimiter value propagation. Adress comm.\n\nFix the way the delimiter is being passed around, removing the CSV\nmember - since its instantiation is a singleton - and pushing it through\nfunction arguments.\n\nThe commit fixes a few issues with the \"header\" URL attribute:\n- these was no longer usable, since it wasn't \"consumed\" by\nRestSqlQueryAction before generating the answer (triggering an error\nresponce on use);\n- its value was only checked against \"absent\", so an incorrect value\n(typo like \"abaent\") could have silently generated an unexpected reply.\n- missing\n\nDocumentation for the \"delimiter\" attribute has also been added.", "committedDate": "2020-07-22T12:32:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2Mjc2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459262766", "bodyText": "Why did you add that second argument? I don't see it being used, or am I missing something :) ?", "author": "matriv", "createdAt": "2020-07-23T07:31:00Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -235,7 +247,7 @@ String contentType(RestRequest request) {\n         }\n \n         @Override\n-        String maybeEscape(String value) {\n+        String maybeEscape(String value, Character __) {", "originalCommit": "6d5b28a776ed071c83caf79ff48f3c8184b65290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM4NDAxOA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459384018", "bodyText": "The second param of maybeEscape, the delimiter, is only used for the CSV value, but not for the TSV.", "author": "bpintea", "createdAt": "2020-07-23T11:33:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2Mjc2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5MjA4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459392087", "bodyText": "Of course, sorry, I was just confused.", "author": "matriv", "createdAt": "2020-07-23T11:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2Mjc2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2NDg2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459264865", "bodyText": "Isn't it better to say double quote  instead of apostrophe ?", "author": "matriv", "createdAt": "2020-07-23T07:35:42Z", "path": "docs/reference/sql/endpoints/rest.asciidoc", "diffHunk": "@@ -106,6 +106,21 @@ s|Description\n \n |===\n \n+The `CSV` format accepts the following additional formatting URL query attributes:\n+\n+* `header`\n++\n+Controls if the CSV header should be included in the response or not. It can take one of the following values:\n++\n+   - `present` (default): include the header;\n+   - `absent`: exclude the header.\n++\n+* `delimiter` (default: `,`)\n++\n+Indicates which character should be used to separate the CSV values. The following values cannot be used for this attribute:\n+apostrophe (`\"`), carriage-return (`\\r`) and new-line (`\\n`). The tab (`\\t`) can also not be used, the `tsv` format needs to be used", "originalCommit": "6d5b28a776ed071c83caf79ff48f3c8184b65290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM4NDEzNA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459384134", "bodyText": "Oops, you're right, thanks. Fixed.", "author": "bpintea", "createdAt": "2020-07-23T11:33:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2NDg2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2NTg0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459265842", "bodyText": "You could also use Set here, but personally I would use a switch statement on the head.toLowerCase(Locale.ROOT) to return true, false, and default => throw the exception.", "author": "matriv", "createdAt": "2020-07-23T07:38:00Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -186,23 +193,28 @@ String maybeEscape(String value) {\n \n         @Override\n         boolean needsHeader(RestRequest request) {\n-            String header = request.param(\"header\");\n+            String header = request.param(URL_PARAM_HEADER);\n             if (header == null) {\n                 List<String> values = request.getAllHeaderValues(\"Accept\");\n                 if (values != null) {\n                     // header values are separated by `;` so try breaking it down\n                     for (String value : values) {\n                         String[] params = Strings.tokenizeToStringArray(value, \";\");\n                         for (String param : params) {\n-                            if (param.toLowerCase(Locale.ROOT).equals(\"header=absent\")) {\n+                            if (param.toLowerCase(Locale.ROOT).equals(URL_PARAM_HEADER + \"=\" + PARAM_HEADER_ABSENT)) {\n                                 return false;\n                             }\n                         }\n                     }\n                 }\n                 return true;\n             } else {\n-                return !header.toLowerCase(Locale.ROOT).equals(\"absent\");\n+                List<String> allowed = List.of(PARAM_HEADER_ABSENT, PARAM_HEADER_PRESENT);", "originalCommit": "6d5b28a776ed071c83caf79ff48f3c8184b65290", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM4NDIxMg==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459384212", "bodyText": "Good suggestion, thanks. Fixed.", "author": "bpintea", "createdAt": "2020-07-23T11:33:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2NTg0Mg=="}], "type": "inlineReview"}, {"oid": "2b3c3513053df25352ea8bfd2424c9b31f935954", "url": "https://github.com/elastic/elasticsearch/commit/2b3c3513053df25352ea8bfd2424c9b31f935954", "message": "Adress review comments. Unescape param\n\nThe commit unescapes the deliter param. This is required for the\ndoc-sourced tests.\n\nAlso, implement a switch for param value validation and fix docs.", "committedDate": "2020-07-23T11:25:13Z", "type": "commit"}, {"oid": "d9bcff1282f0d0b0870b13dce66c55d93f3fdabd", "url": "https://github.com/elastic/elasticsearch/commit/d9bcff1282f0d0b0870b13dce66c55d93f3fdabd", "message": "Merge branch 'master' into enh/csv_delimiter", "committedDate": "2020-07-23T11:27:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5MjQxMw==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r459392413", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            double quotes (`\"`), carriage-return (`\\r`) and new-line (`\\n`). The tab (`\\t`) can also not be used, the `tsv` format needs to be used\n          \n          \n            \n            double quote (`\"`), carriage-return (`\\r`) and new-line (`\\n`). The tab (`\\t`) can also not be used, the `tsv` format needs to be used\n          \n      \n    \n    \n  \n\nsince all the rest are also singular.", "author": "matriv", "createdAt": "2020-07-23T11:51:20Z", "path": "docs/reference/sql/endpoints/rest.asciidoc", "diffHunk": "@@ -118,7 +118,7 @@ Controls if the CSV header should be included in the response or not. It can tak\n * `delimiter` (default: `,`)\n +\n Indicates which character should be used to separate the CSV values. The following values cannot be used for this attribute:\n-apostrophe (`\"`), carriage-return (`\\r`) and new-line (`\\n`). The tab (`\\t`) can also not be used, the `tsv` format needs to be used\n+double quotes (`\"`), carriage-return (`\\r`) and new-line (`\\n`). The tab (`\\t`) can also not be used, the `tsv` format needs to be used", "originalCommit": "2b3c3513053df25352ea8bfd2424c9b31f935954", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1b3958decc61d2036c6122a5a66223df9d7ec5ed", "url": "https://github.com/elastic/elasticsearch/commit/1b3958decc61d2036c6122a5a66223df9d7ec5ed", "message": "Update docs/reference/sql/endpoints/rest.asciidoc\n\nCo-authored-by: Marios Trivyzas <matriv@gmail.com>", "committedDate": "2020-07-23T11:55:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0ODMwMg==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r460948302", "bodyText": "Why not using a true/false kind of approach with the csv header? It's simpler to use (true/false values) and less prone to wrong values. Something like include_header=true (the default, which can be omitted) and include_header=false which needs to be specifically mentioned.", "author": "astefan", "createdAt": "2020-07-27T14:50:34Z", "path": "docs/reference/sql/endpoints/rest.asciidoc", "diffHunk": "@@ -106,6 +106,21 @@ s|Description\n \n |===\n \n+The `CSV` format accepts the following additional formatting URL query attributes:\n+\n+* `header`\n++\n+Controls if the CSV header should be included in the response or not. It can take one of the following values:\n++\n+   - `present` (default): include the header;\n+   - `absent`: exclude the header.", "originalCommit": "1b3958decc61d2036c6122a5a66223df9d7ec5ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4NzI4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r460987286", "bodyText": "Actually, thinking about this a bit more, why did you expose this request parameter in the first place? It has always been there as an option (to have or not the header in the response), but it was a way of distinguishing between the first page of the response and the subsequent pages of it. Also, the initial request this PR is fixing refers only to the delimiter itself.", "author": "astefan", "createdAt": "2020-07-27T15:45:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0ODMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NzY1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r461047653", "bodyText": "Why not using a true/false kind of approach with the csv header?\n\nThe absent/present values were coded in before. And my guess is that the values have been chosen to be in-line with the CT header values.\n\nit was a way of distinguishing between the first page of the response and the subsequent pages of it\n\nI see. ..actually how would a subsequent page be requested with a URL attribute in CSV format? I think we have no OFFSET, neither at API, nor at SQL level, do we?\nI also found no tests covering this scenario or the use of the header attribute.\nAnd these two points above...\n\nwhy did you expose this request parameter in the first place?\n\n...let me to believe that it might be an intended feature, but no[t / longer] correctly functioning.\nAnd I think it would be good to have it, CSV handling applications generally offer such functionality. So irrespective of the original intent, is there any concern exposing it?\n\nAlso, the initial request this PR is fixing refers only to the delimiter itself.\n\nTrue. Would it make sense to split the PR (vs. maybe extending this PR's description)?", "author": "bpintea", "createdAt": "2020-07-27T17:21:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0ODMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1MDEzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r461350131", "bodyText": "...let me to believe that it might be an intended feature, but no[t / longer] correctly functioning.\n\nMy 2c on this: if it's requested, we can discuss about adding it. If there is no demand, we don't complicate things.\n\nI see. ..actually how would a subsequent page be requested with a URL attribute in CSV format? I think we have no OFFSET, neither at API, nor at SQL level, do we?\n\nThe first response that comes from ES contains a header called cursor to be used for a subsequent call to get the next page of rows. The URL remains the same, but the second call doesn't have a query in it, but a cursor.", "author": "astefan", "createdAt": "2020-07-28T06:35:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0ODMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3NTM2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r461375367", "bodyText": "My 2c on this: if it's requested, we can discuss about adding it. If there is no demand, we don't complicate things.\n\nSure, I can take it out. But just to understand how to take it out:\n\nit was a way of distinguishing between the first page of the response and the subsequent pages of it\n\nHow is this distinguishing being done, since I believe there's no way to specify a header URL attribute currently, since it's not \"consumed\" by the RestSqlQueryAction and so using it would generate a \"request [/_sql] contains unrecognized parameter: [header]\" error. Should I remove it entirely then? Sorry if missing something.\n\nThe first response that comes from ES contains a header called cursor to be used for a subsequent call to get the next page of rows.\n\nRight, it's inserted by RestSqlQueryAction, should have spotted it before. Thanks.\nIs this documented anywhere though? I couldn't find it on the REST formats page. I can add it if not.", "author": "bpintea", "createdAt": "2020-07-28T07:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0ODMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM5NTQzMw==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r461395433", "bodyText": "Sure, I can take it out. But just to understand how to take it out:\n\nJust do not expose it as a request parameter. Leave the rest of the logic unchanged and this PR should only address the delimiter part.\n\nHow is this distinguishing being done, since I believe there's no way to specify a header URL attribute currently, since it's not \"consumed\" by the RestSqlQueryAction and so using it would generate a \"request [/_sql] contains unrecognized parameter: [header]\" error. Should I remove it entirely then? Sorry if missing something.\n\nI don't think it's actually being used, indeed. I see logic that's based on the presence of the cursor or not, not much about the header being present or not in the request...\n\nRight, it's inserted by RestSqlQueryAction, should have spotted it before. Thanks.\nIs this documented anywhere though? I couldn't find it on the REST formats page. I can add it if not.\n\nIt's not documented for other formats (except json and txt), either. I think a simple statement change in this page also mentioning csv and tsv should be enough (ie, no examples).", "author": "astefan", "createdAt": "2020-07-28T08:05:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0ODMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ0ODcwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r461448705", "bodyText": "I've reverted the changes here and opened #60271, since this is clearly a (very minor) bug.", "author": "bpintea", "createdAt": "2020-07-28T09:32:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0ODMwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTc4OA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r460971788", "bodyText": "I would have kept this method name as is.", "author": "astefan", "createdAt": "2020-07-27T15:23:04Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/plugin/TextFormat.java", "diffHunk": "@@ -162,52 +190,58 @@ String maybeEscape(String value) {\n                 sb.append('\"');\n                 value = sb.toString();\n             }\n+\n             return value;\n         }\n \n         @Override\n-        boolean hasHeader(RestRequest request) {\n-            String header = request.param(\"header\");\n+        boolean needsHeader(RestRequest request) {", "originalCommit": "1b3958decc61d2036c6122a5a66223df9d7ec5ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1MjUwOA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r461052508", "bodyText": "My interpretation of what the code does is that it decides if a header is required in the response and not if the RestRequest has a header value at all (either URL attribute or HTTP header value). I.e. for the configuration header=absent the function will still return false, despite the fact that there is actually a header (attribute).\nBut I'm happy to revert or apply a more suggestive name if this be an incorrect interpretation.", "author": "bpintea", "createdAt": "2020-07-27T17:29:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTc4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2MDUwOA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r461360508", "bodyText": "The way I looked at it is from the request perspective: the request has a header or not, thus the formatting behavior changes based on this. I would argue further and say that the response needs a header (thus a needsHeader method should belong to the SqlQueryResponse object) and not the row-by-row formatting behavior.", "author": "astefan", "createdAt": "2020-07-28T06:59:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTc4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ0OTQ0MA==", "url": "https://github.com/elastic/elasticsearch/pull/59907#discussion_r461449440", "bodyText": "thus a needsHeader method should belong to the SqlQueryResponse object\n\nAgreed.\nI've reverted the change anyways.", "author": "bpintea", "createdAt": "2020-07-28T09:33:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MTc4OA=="}], "type": "inlineReview"}, {"oid": "41c3fbf5f6fe484d56ea42107e395876102deba1", "url": "https://github.com/elastic/elasticsearch/commit/41c3fbf5f6fe484d56ea42107e395876102deba1", "message": "Address review comments\n\n- rip out anything which isn't Delimiter-related.\n- undo 'hasHeader' method renaming.", "committedDate": "2020-07-28T09:29:10Z", "type": "commit"}, {"oid": "ccf1d866a48ee580cf559e5ec7780918bcd0956c", "url": "https://github.com/elastic/elasticsearch/commit/ccf1d866a48ee580cf559e5ec7780918bcd0956c", "message": "Merge branch 'master' into enh/csv_delimiter", "committedDate": "2020-07-28T09:34:00Z", "type": "commit"}, {"oid": "6d014df9394ae38787235bb9147be7d05897b396", "url": "https://github.com/elastic/elasticsearch/commit/6d014df9394ae38787235bb9147be7d05897b396", "message": "Minor doc update. One more fix revert\n\nUpdate the doc to make it clear that the textual CSV, TSV and TXT\nformats pass the cursor back to the user through the Cursor HTTP header.", "committedDate": "2020-07-29T08:27:34Z", "type": "commit"}, {"oid": "5adc138c20c0e976e4827daae66e1a4611368529", "url": "https://github.com/elastic/elasticsearch/commit/5adc138c20c0e976e4827daae66e1a4611368529", "message": "Merge branch 'master' into enh/csv_delimiter", "committedDate": "2020-07-29T09:04:04Z", "type": "commit"}]}