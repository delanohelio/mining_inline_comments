{"pr_number": 63302, "pr_title": "[ML] Validate that AucRoc has the data necessary to be calculated", "pr_createdAt": "2020-10-06T06:39:46Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63302", "timeline": [{"oid": "13cd18b8f277a254bd75c32e95d8a695b92dce48", "url": "https://github.com/elastic/elasticsearch/commit/13cd18b8f277a254bd75c32e95d8a695b92dce48", "message": "Remove AbstractAucRoc.Result.doc_count field", "committedDate": "2020-10-06T07:17:28Z", "type": "forcePushed"}, {"oid": "08a3942e819ced0f3218779914268bb4388e6f5b", "url": "https://github.com/elastic/elasticsearch/commit/08a3942e819ced0f3218779914268bb4388e6f5b", "message": "Remove AbstractAucRoc.Result.doc_count field", "committedDate": "2020-10-06T08:05:58Z", "type": "forcePushed"}, {"oid": "f41a7f55afe011341b6166e914bd17bc3d5687d2", "url": "https://github.com/elastic/elasticsearch/commit/f41a7f55afe011341b6166e914bd17bc3d5687d2", "message": "Validate that AucRoc has the data necessary to be calculated\nRemove AbstractAucRoc.Result.doc_count field", "committedDate": "2020-10-06T08:27:21Z", "type": "forcePushed"}, {"oid": "b3c872774c36eb03366c289d6cbaf544b52c3efa", "url": "https://github.com/elastic/elasticsearch/commit/b3c872774c36eb03366c289d6cbaf544b52c3efa", "message": "Validate that AucRoc has the data necessary to be calculated\nRemove AbstractAucRoc.Result.doc_count field", "committedDate": "2020-10-06T09:09:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIwNTQ4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/63302#discussion_r500205482", "bodyText": "\"well actually\" 1-p doesn't seem correct here as there could be more than two classes.\nBut, from what I tell, this doesn't effect the testing, right?", "author": "benwtrent", "createdAt": "2020-10-06T11:37:35Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningIT.java", "diffHunk": "@@ -2143,15 +2142,19 @@ private static XContentBuilder mappingForClassification() throws IOException {\n         .endObject();\n     }\n \n-    private static IndexRequest docForClassification(String indexName, String actualClass, String predictedClass, double p) {\n+    private static IndexRequest docForClassification(String indexName,\n+                                                     String actualClass,\n+                                                     String predictedClass,\n+                                                     double p,\n+                                                     String otherClass) {\n         return new IndexRequest()\n             .index(indexName)\n             .source(XContentType.JSON,\n                 actualClassField, actualClass,\n                 predictedClassField, predictedClass,\n                 topClassesField, List.of(\n                     Map.of(\"class_name\", predictedClass, \"class_probability\", p),\n-                    Map.of(\"class_name\", \"other\", \"class_probability\", 1 - p)));\n+                    Map.of(\"class_name\", otherClass, \"class_probability\", 1 - p)));", "originalCommit": "16d8a2464021824a734a001d20359536e3318432", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc1NzU1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/63302#discussion_r500757553", "bodyText": "\"well actually\" 1-p doesn't seem correct here as there could be more than two classes.\n\nThis is a test of Evaluate API but without running the analysis so the dataset here is synthetic and predictable.\n\nBut, from what I tell, this doesn't effect the testing, right?\n\nIndeed, it doesn't.", "author": "przemekwitek", "createdAt": "2020-10-07T06:06:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIwNTQ4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIwNjU2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/63302#discussion_r500206566", "bodyText": "Honestly, I think it would be good to have more than two classes here to really represent the multi-class case.", "author": "benwtrent", "createdAt": "2020-10-06T11:39:39Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/MlClientDocumentationIT.java", "diffHunk": "@@ -3466,28 +3466,28 @@ public void testEvaluateDataFrame_Classification() throws Exception {\n                         .endObject()\n                     .endObject()\n                     .endObject());\n-        TriFunction<String, String, Double, IndexRequest> indexRequest = (actualClass, predictedClass, p) -> {\n+        TriFunction<String, String, String, IndexRequest> indexRequest = (actualClass, predictedClass, otherClass) -> {\n             return new IndexRequest()\n                 .source(XContentType.JSON,\n                     \"actual_class\", actualClass,\n                     \"predicted_class\", predictedClass,\n                     \"ml.top_classes\", List.of(\n-                        Map.of(\"class_name\", predictedClass, \"class_probability\", p),\n-                        Map.of(\"class_name\", \"other\", \"class_probability\", 1 - p)));\n+                        Map.of(\"class_name\", predictedClass, \"class_probability\", 0.9),\n+                        Map.of(\"class_name\", otherClass, \"class_probability\", 0.1)));", "originalCommit": "16d8a2464021824a734a001d20359536e3318432", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgyMDM5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/63302#discussion_r500820392", "bodyText": "Done.", "author": "przemekwitek", "createdAt": "2020-10-07T08:12:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIwNjU2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIwODgyMA==", "url": "https://github.com/elastic/elasticsearch/pull/63302#discussion_r500208820", "bodyText": "Do you think it would be good to give the potential solution for the analytics case? Maybe something like \"This is probably caused by the num_top_classes value being less than the total number of classes in the data frame analytics training configuration\"\nI am sure there is better wording :).", "author": "benwtrent", "createdAt": "2020-10-06T11:43:43Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/evaluation/classification/AucRoc.java", "diffHunk": "@@ -182,42 +182,43 @@ public void process(Aggregations aggs) {\n         Filter classAgg = aggs.get(TRUE_AGG_NAME);\n         Nested classNested = classAgg.getAggregations().get(NESTED_AGG_NAME);\n         Filter classNestedFilter = classNested.getAggregations().get(NESTED_FILTER_AGG_NAME);\n+\n+        Filter restAgg = aggs.get(NON_TRUE_AGG_NAME);\n+        Nested restNested = restAgg.getAggregations().get(NESTED_AGG_NAME);\n+        Filter restNestedFilter = restNested.getAggregations().get(NESTED_FILTER_AGG_NAME);\n+\n+        long filteredDocCount = classNestedFilter.getDocCount() + restNestedFilter.getDocCount();\n+        long totalDocCount = classAgg.getDocCount() + restAgg.getDocCount();\n+\n         if (classAgg.getDocCount() == 0) {\n             throw ExceptionsHelper.badRequestException(\n                 \"[{}] requires at least one [{}] to have the value [{}]\",\n                 getName(), fields.get().getActualField(), className);\n         }\n-        if (classNestedFilter.getDocCount() == 0) {\n+        if (classNestedFilter.getDocCount() < classAgg.getDocCount()) {\n             throw ExceptionsHelper.badRequestException(\n-                \"[{}] requires at least one [{}] to have the value [{}]\",\n-                getName(), fields.get().getPredictedClassField(), className);\n+                \"[{}] requires that [{}] appears as one of the [{}] for every document (appeared for {} out of {})\",", "originalCommit": "16d8a2464021824a734a001d20359536e3318432", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc3MDYxNA==", "url": "https://github.com/elastic/elasticsearch/pull/63302#discussion_r500770614", "bodyText": "Done.", "author": "przemekwitek", "createdAt": "2020-10-07T06:40:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIwODgyMA=="}], "type": "inlineReview"}, {"oid": "0fe60e4bfdf077c39061d741722e09fa56b9a7aa", "url": "https://github.com/elastic/elasticsearch/commit/0fe60e4bfdf077c39061d741722e09fa56b9a7aa", "message": "Apply review comments", "committedDate": "2020-10-07T08:22:34Z", "type": "forcePushed"}, {"oid": "65db1db39093aaf6f18d659a35b468e54be886aa", "url": "https://github.com/elastic/elasticsearch/commit/65db1db39093aaf6f18d659a35b468e54be886aa", "message": "Validate that AucRoc has the data necessary to be calculated\nRemove AbstractAucRoc.Result.doc_count field", "committedDate": "2020-10-07T12:16:19Z", "type": "commit"}, {"oid": "1503a78c849345b9b4bd8c961b177ff368133cbc", "url": "https://github.com/elastic/elasticsearch/commit/1503a78c849345b9b4bd8c961b177ff368133cbc", "message": "Fix failing tests", "committedDate": "2020-10-07T12:16:19Z", "type": "commit"}, {"oid": "175f2a77c27e05972a98986f4f0cb9398f290025", "url": "https://github.com/elastic/elasticsearch/commit/175f2a77c27e05972a98986f4f0cb9398f290025", "message": "Apply review comments", "committedDate": "2020-10-07T12:16:19Z", "type": "commit"}, {"oid": "175f2a77c27e05972a98986f4f0cb9398f290025", "url": "https://github.com/elastic/elasticsearch/commit/175f2a77c27e05972a98986f4f0cb9398f290025", "message": "Apply review comments", "committedDate": "2020-10-07T12:16:19Z", "type": "forcePushed"}]}