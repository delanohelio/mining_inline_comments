{"pr_number": 58096, "pr_title": "Keep track of timestamp_field mapping as part of a data stream", "pr_createdAt": "2020-06-15T09:36:10Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58096", "timeline": [{"oid": "57e5161377010e39b5ccf64a90ec4c2a1f82a011", "url": "https://github.com/elastic/elasticsearch/commit/57e5161377010e39b5ccf64a90ec4c2a1f82a011", "message": "Keep track of timestamp field mapping as part of a data stream.", "committedDate": "2020-06-15T09:28:42Z", "type": "commit"}, {"oid": "b10cb358b8fac9f24717d0b8469bff91bfd8c44b", "url": "https://github.com/elastic/elasticsearch/commit/b10cb358b8fac9f24717d0b8469bff91bfd8c44b", "message": "use mapping source direcly instead of using mapper service to extract the relevant mapping details", "committedDate": "2020-06-15T09:28:42Z", "type": "commit"}, {"oid": "ca450ca837b253ac012152b5cc3e7a9af1dfe07e", "url": "https://github.com/elastic/elasticsearch/commit/ca450ca837b253ac012152b5cc3e7a9af1dfe07e", "message": "fixed rest tests", "committedDate": "2020-06-15T09:28:42Z", "type": "commit"}, {"oid": "07bb5f880016335bd7ff2886f7aff07bf670346d", "url": "https://github.com/elastic/elasticsearch/commit/07bb5f880016335bd7ff2886f7aff07bf670346d", "message": "fixed test compile errors", "committedDate": "2020-06-15T11:10:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0MjgzNg==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440242836", "bodyText": "Where possible, could we use the DataStream::getDefaultBackingIndexName method so that any changes there are automatically picked up at least in Java classes?", "author": "danhermann", "createdAt": "2020-06-15T15:04:26Z", "path": "server/src/internalClusterTest/java/org/elasticsearch/indices/DataStreamIT.java", "diffHunk": "@@ -433,6 +444,87 @@ public void testCannotDeleteComposableTemplateUsedByDataStream() throws Exceptio\n         assertTrue(maybeE.isPresent());\n     }\n \n+    public void testChangeTimestampFieldInComposableTemplatePriorToRollOver() throws Exception {\n+        createIndexTemplate(\"id1\", \"logs-foo*\", \"@timestamp\");\n+\n+        // Index doc that triggers creation of a data stream\n+        IndexRequest indexRequest = new IndexRequest(\"logs-foobar\").source(\"{}\", XContentType.JSON).opType(\"create\");\n+        IndexResponse indexResponse = client().index(indexRequest).actionGet();\n+        assertThat(indexResponse.getIndex(), equalTo(\".ds-logs-foobar-000001\"));", "originalCommit": "07bb5f880016335bd7ff2886f7aff07bf670346d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NzczOQ==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440247739", "bodyText": "Do we want to allow this field to contain any mapping properties or just the field's data type? Also, should we require that it contains a data type property of either date or date_nanos?", "author": "danhermann", "createdAt": "2020-06-15T15:11:26Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "diffHunk": "@@ -201,4 +204,77 @@ public boolean equals(Object o) {\n     public int hashCode() {\n         return Objects.hash(name, timeStampField, indices, generation);\n     }\n+\n+    public static final class TimestampField implements Writeable, ToXContentObject {", "originalCommit": "07bb5f880016335bd7ff2886f7aff07bf670346d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI2MjU3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440262571", "bodyText": "This class should contain the mapping attributes. Part of the mapping attributes is the type attribute, so that data type is kept track of.", "author": "martijnvg", "createdAt": "2020-06-15T15:32:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NzczOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4ODEzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440288139", "bodyText": "Ok, should we permit not specifying a data type? A data type of either date or date_nanos is required on the composable template, so it seems like maybe it should be required on the data stream, too?", "author": "danhermann", "createdAt": "2020-06-15T16:10:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NzczOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMjkzMw==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440712933", "bodyText": "It isn't possible that any other data type than date and date_nanos is being included the fieldMapping map, because no composable index template with a data stream definition can be created with timestamp field mapping that is not of type date or date_nanos.\nWhen creating a data stream the contents of the field mapping is copied and this includes a type attribute, so that we know whether either date or date_nanos is specified.\nI can add an assert here that checks that value for the type key either returns date or date_nanos for sanity checking.", "author": "martijnvg", "createdAt": "2020-06-16T09:26:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI0NzczOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcwNDY0MA==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440704640", "bodyText": "I think this is unused?", "author": "henningandersen", "createdAt": "2020-06-16T09:12:23Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamService.java", "diffHunk": "@@ -51,13 +55,16 @@\n         new LinkedHashSet<>(List.of(DateFieldMapper.CONTENT_TYPE, DateFieldMapper.DATE_NANOS_CONTENT_TYPE));\n \n     private final ClusterService clusterService;\n+    private final IndicesService indicesService;", "originalCommit": "07bb5f880016335bd7ff2886f7aff07bf670346d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMzk4MA==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440713980", "bodyText": "A left over from an iteration that never made it into the pr.", "author": "martijnvg", "createdAt": "2020-06-16T09:27:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcwNDY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcwNzMyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440707325", "bodyText": "I wonder if it was more intuitive to require that the mapping be specified on the timestamp field in the template rather than mixing it in with the index mappings. In particular, it will be more clear that those are special, not modifiable compared to the others which can change on rollover.", "author": "henningandersen", "createdAt": "2020-06-16T09:16:40Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamService.java", "diffHunk": "@@ -145,9 +154,18 @@ static ClusterState createDataStream(MetadataCreateIndexService metadataCreateIn\n         currentState = metadataCreateIndexService.applyCreateIndexRequest(currentState, createIndexRequest, false);\n         IndexMetadata firstBackingIndex = currentState.metadata().index(firstBackingIndexName);\n         assert firstBackingIndex != null;\n+        assert firstBackingIndex.mapping() != null : \"no mapping found for backing index [\" + firstBackingIndexName + \"]\";\n+\n+        String fieldName = template.getDataStreamTemplate().getTimestampField();\n+        Map<String, Object> mapping = firstBackingIndex.mapping().getSourceAsMap();", "originalCommit": "07bb5f880016335bd7ff2886f7aff07bf670346d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxNzgyNg==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440717826", "bodyText": "I think requiring that timestamp field mapping the be specified inside the timestamp_field object in a composable template makes sense. It helps highlighting that the timestamp_field and its mapping are special.\nHowever I do think it should be made modifiable? So that new data streams being created can use an updated field mapping? This was my motivation for keeping track of the timestamp field mapping on the DataStream instance, so that new backing indices would use the same valid timestamp field mapping, but when new data streams are being created from the same composable template than an updated timestamp field mapping could be used.", "author": "martijnvg", "createdAt": "2020-06-16T09:34:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcwNzMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcyMjkyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440722929", "bodyText": "++, agreed, I meant unmodifiable in the sense that template changes will not reflect on already created data-streams.", "author": "henningandersen", "createdAt": "2020-06-16T09:42:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcwNzMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3MTk3NA==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440771974", "bodyText": "\ud83d\udc4d I think we can change the data_stream definition in a composable template to include the mapping for the timestamp_field mapping in a seperate change?", "author": "martijnvg", "createdAt": "2020-06-16T11:13:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcwNzMyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3NDcwMw==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r440774703", "bodyText": "Yes, that can work out too.", "author": "henningandersen", "createdAt": "2020-06-16T11:18:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcwNzMyNQ=="}], "type": "inlineReview"}, {"oid": "f810431954336da72758ae27a9be3d5a0ffd6903", "url": "https://github.com/elastic/elasticsearch/commit/f810431954336da72758ae27a9be3d5a0ffd6903", "message": "Merge remote-tracking branch 'es/master' into keep_track__of_ds_timestamp_field", "committedDate": "2020-06-16T09:35:41Z", "type": "commit"}, {"oid": "a1eee838d7d0058085ad5ae9269d8395561d82d4", "url": "https://github.com/elastic/elasticsearch/commit/a1eee838d7d0058085ad5ae9269d8395561d82d4", "message": "removed unused field", "committedDate": "2020-06-16T09:36:12Z", "type": "commit"}, {"oid": "c6c9bfdcdc0d98535d3175fc200d1c34dad49b32", "url": "https://github.com/elastic/elasticsearch/commit/c6c9bfdcdc0d98535d3175fc200d1c34dad49b32", "message": "Merge remote-tracking branch 'es/master' into keep_track__of_ds_timestamp_field", "committedDate": "2020-06-17T09:22:48Z", "type": "commit"}, {"oid": "b7832677bc60dc430d6df7bbab5cf8f358d86139", "url": "https://github.com/elastic/elasticsearch/commit/b7832677bc60dc430d6df7bbab5cf8f358d86139", "message": "iter", "committedDate": "2020-06-17T09:33:43Z", "type": "commit"}, {"oid": "4aa4280242459d78a429ffdc38de3add8cf6b6a8", "url": "https://github.com/elastic/elasticsearch/commit/4aa4280242459d78a429ffdc38de3add8cf6b6a8", "message": "fix versioning in serialization", "committedDate": "2020-06-17T09:36:41Z", "type": "commit"}, {"oid": "6e0e847be7dfc58ed371489703af598c28ccc1fe", "url": "https://github.com/elastic/elasticsearch/commit/6e0e847be7dfc58ed371489703af598c28ccc1fe", "message": "added assertions for sanity checking the type of the timestamp_field mapping", "committedDate": "2020-06-17T09:40:35Z", "type": "commit"}, {"oid": "f256b024717a7c711e7d125cd710b1369f677a3f", "url": "https://github.com/elastic/elasticsearch/commit/f256b024717a7c711e7d125cd710b1369f677a3f", "message": "fixed test compile and checkstyle errors", "committedDate": "2020-06-17T10:10:57Z", "type": "commit"}, {"oid": "ea5093070fb479f77c2b9950718ea206b2913029", "url": "https://github.com/elastic/elasticsearch/commit/ea5093070fb479f77c2b9950718ea206b2913029", "message": "fixed hlrc serialization (only field name needs to get parsed)", "committedDate": "2020-06-17T11:32:44Z", "type": "commit"}, {"oid": "43098bdb9bb33ab871a6dc86101432c8771924df", "url": "https://github.com/elastic/elasticsearch/commit/43098bdb9bb33ab871a6dc86101432c8771924df", "message": "made field final", "committedDate": "2020-06-17T11:33:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ2Nzg4OA==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r441467888", "bodyText": "I wonder if this should be just timestamp_field.name?\nI would like to also see an assert on the mapping being included and having the right content.", "author": "henningandersen", "createdAt": "2020-06-17T11:12:38Z", "path": "rest-api-spec/src/main/resources/rest-api-spec/test/indices.data_stream/10_basic.yml", "diffHunk": "@@ -50,12 +50,12 @@ setup:\n       indices.get_data_stream:\n         name: \"*\"\n   - match: { 0.name: simple-data-stream1 }\n-  - match: { 0.timestamp_field: '@timestamp' }\n+  - match: { 0.timestamp_field.field_name: '@timestamp' }", "originalCommit": "f256b024717a7c711e7d125cd710b1369f677a3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ2ODg5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r441468896", "bodyText": "I think we should rename createIndexTemplate to putIndexTemplate to signal that it also updates existing.", "author": "henningandersen", "createdAt": "2020-06-17T11:14:42Z", "path": "server/src/internalClusterTest/java/org/elasticsearch/indices/DataStreamIT.java", "diffHunk": "@@ -433,6 +444,87 @@ public void testCannotDeleteComposableTemplateUsedByDataStream() throws Exceptio\n         assertTrue(maybeE.isPresent());\n     }\n \n+    public void testChangeTimestampFieldInComposableTemplatePriorToRollOver() throws Exception {\n+        createIndexTemplate(\"id1\", \"logs-foo*\", \"@timestamp\");\n+\n+        // Index doc that triggers creation of a data stream\n+        IndexRequest indexRequest = new IndexRequest(\"logs-foobar\").source(\"{}\", XContentType.JSON).opType(\"create\");\n+        IndexResponse indexResponse = client().index(indexRequest).actionGet();\n+        assertThat(indexResponse.getIndex(), equalTo(DataStream.getDefaultBackingIndexName(\"logs-foobar\", 1)));\n+        assertBackingIndex(DataStream.getDefaultBackingIndexName(\"logs-foobar\", 1), \"properties.@timestamp\");\n+\n+        // Rollover data stream\n+        RolloverResponse rolloverResponse = client().admin().indices().rolloverIndex(new RolloverRequest(\"logs-foobar\", null)).get();\n+        assertThat(rolloverResponse.getNewIndex(), equalTo(DataStream.getDefaultBackingIndexName(\"logs-foobar\", 2)));\n+        assertTrue(rolloverResponse.isRolledOver());\n+        assertBackingIndex(DataStream.getDefaultBackingIndexName(\"logs-foobar\", 2), \"properties.@timestamp\");\n+\n+        // Index another doc into a data stream\n+        indexRequest = new IndexRequest(\"logs-foobar\").source(\"{}\", XContentType.JSON).opType(\"create\");\n+        indexResponse = client().index(indexRequest).actionGet();\n+        assertThat(indexResponse.getIndex(), equalTo(DataStream.getDefaultBackingIndexName(\"logs-foobar\", 2)));\n+\n+        // Change the template to have a different timestamp field\n+        createIndexTemplate(\"id1\", \"logs-foo*\", \"@timestamp2\");", "originalCommit": "f256b024717a7c711e7d125cd710b1369f677a3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3MjA1MA==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r441472050", "bodyText": "Should we also include tests of any mapping specialization/params? AFAICS, the implementation could keep only the mapping type now and all tests would succeed.", "author": "henningandersen", "createdAt": "2020-06-17T11:21:27Z", "path": "server/src/internalClusterTest/java/org/elasticsearch/indices/DataStreamIT.java", "diffHunk": "@@ -433,6 +444,87 @@ public void testCannotDeleteComposableTemplateUsedByDataStream() throws Exceptio\n         assertTrue(maybeE.isPresent());\n     }\n \n+    public void testChangeTimestampFieldInComposableTemplatePriorToRollOver() throws Exception {\n+        createIndexTemplate(\"id1\", \"logs-foo*\", \"@timestamp\");", "originalCommit": "f256b024717a7c711e7d125cd710b1369f677a3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NTIyOA==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r441475228", "bodyText": "Maybe assert that the parentObjectMapper does not contain a definition for the timestamp field already?\nShould potentially be a production code check in case a component template can have the timestamp field too? Not sure if we guard against that.", "author": "henningandersen", "createdAt": "2020-06-17T11:28:10Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataCreateIndexService.java", "diffHunk": "@@ -493,6 +495,16 @@ private ClusterState applyCreateIndexRequestWithV2Template(final ClusterState cu\n \n         final Map<String, Object> mappings = resolveV2Mappings(request.mappings(), currentState, templateName, xContentRegistry);\n \n+        if (request.dataStreamName() != null) {\n+            DataStream dataStream = currentState.metadata().dataStreams().get(request.dataStreamName());\n+            if (dataStream != null) {\n+                String mappingPath = convertFieldPathToMappingPath(dataStream.getTimeStampField().getFieldName());\n+                String parentObjectFieldPath = mappingPath.substring(0, mappingPath.lastIndexOf('.'));\n+                Map<String, Object> parentObjectMapper = ObjectPath.eval(\"_doc.\" + parentObjectFieldPath, mappings);\n+                parentObjectMapper.put(dataStream.getTimeStampField().getFieldName(), dataStream.getTimeStampField().getFieldMapping());", "originalCommit": "f256b024717a7c711e7d125cd710b1369f677a3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5MDA2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r441490061", "bodyText": "Currently the definition is coming from a composable index / component template. So if the name of the timestamp field mapping doesn't change then parentObjectMapper should always contain the mapping definition for the timestamp field.\nOnly if the name of the timestamp field changes then this logic will make sure that the original mapping definition will be used.\nI think verifying whether no mapping definition exists, makes more sense when do this: #58096 (comment)\nIn that case it is expected that the mapping definition for the timestamp_field originates not from composable index or component templates.", "author": "martijnvg", "createdAt": "2020-06-17T11:57:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NTIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5NTUyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r441495529", "bodyText": "Ah yes, sorry, I was one thought too far ahead.", "author": "henningandersen", "createdAt": "2020-06-17T12:08:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NTIyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NzM0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r441477347", "bodyText": "Should we assert that the fieldMapping contains (\"type\")?", "author": "henningandersen", "createdAt": "2020-06-17T11:32:40Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/DataStream.java", "diffHunk": "@@ -201,4 +204,82 @@ public boolean equals(Object o) {\n     public int hashCode() {\n         return Objects.hash(name, timeStampField, indices, generation);\n     }\n+\n+    public static final class TimestampField implements Writeable, ToXContentObject {\n+\n+        static ParseField FIELD_NAME_FIELD = new ParseField(\"field_name\");\n+        static ParseField FIELD_MAPPING_FIELD = new ParseField(\"field_mapping\");\n+\n+        @SuppressWarnings(\"unchecked\")\n+        private static final ConstructingObjectParser<TimestampField, Void> PARSER = new ConstructingObjectParser<>(\n+            \"timestamp_field\",\n+            args -> new TimestampField((String) args[0], (Map<String, Object>) args[1])\n+        );\n+\n+        static {\n+            PARSER.declareString(ConstructingObjectParser.constructorArg(), FIELD_NAME_FIELD);\n+            PARSER.declareObject(ConstructingObjectParser.optionalConstructorArg(), (p, c) -> p.mapOrdered(), FIELD_MAPPING_FIELD);\n+        }\n+\n+        private final String fieldName;\n+        private final Map<String, Object> fieldMapping;\n+\n+        public TimestampField(String fieldName, Map<String, Object> fieldMapping) {\n+            this.fieldName = fieldName;\n+            this.fieldMapping = fieldMapping;", "originalCommit": "f256b024717a7c711e7d125cd710b1369f677a3f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5MTkwMw==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r441491903", "bodyText": "I added that assert here: https://github.com/elastic/elasticsearch/pull/58096/files#diff-82f348b800c60fabd3a34ff574e248a5R159\nThe reason is that in production, this is where new data stream instances are initiated.\nIdeally this assertion would be added here, but then all tests need to be changes to supply: Map.of(\"type, \"date\") whereas currently tests supply: Map.of(). Maybe it makes sense to add an new constructor that just sets fieldMapping to Map.of(\"type, \"date\") and then delegates to this constructor where we can assert whether type key contains a valid value?", "author": "martijnvg", "createdAt": "2020-06-17T12:01:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NzM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5NjU5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/58096#discussion_r441496595", "bodyText": "Could we not just supply DataStreamTestHelper.defaultMapping() (new method) instead? A few more bytes of source code, but I would prefer asserting this here to avoid something creating this in a wrong way somewhere or under some condition.", "author": "henningandersen", "createdAt": "2020-06-17T12:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NzM0Nw=="}], "type": "inlineReview"}, {"oid": "dfbadbeab0e9ea8d58e5f292dbbb0cc609111314", "url": "https://github.com/elastic/elasticsearch/commit/dfbadbeab0e9ea8d58e5f292dbbb0cc609111314", "message": "fixed test compile errors", "committedDate": "2020-06-17T11:36:08Z", "type": "commit"}, {"oid": "6124deb8412952b67dc3b40d36665d6103c7d157", "url": "https://github.com/elastic/elasticsearch/commit/6124deb8412952b67dc3b40d36665d6103c7d157", "message": "rename field", "committedDate": "2020-06-17T13:21:24Z", "type": "commit"}, {"oid": "3dfa7aaf94f82391a873cac8c236e9ee22dc46a2", "url": "https://github.com/elastic/elasticsearch/commit/3dfa7aaf94f82391a873cac8c236e9ee22dc46a2", "message": "also assert mapping of timestamp_field", "committedDate": "2020-06-17T13:25:43Z", "type": "commit"}, {"oid": "bee37633cf419a712b59d8155a75ad75035d8539", "url": "https://github.com/elastic/elasticsearch/commit/bee37633cf419a712b59d8155a75ad75035d8539", "message": "renamed method", "committedDate": "2020-06-17T13:27:02Z", "type": "commit"}, {"oid": "951bb1ddaaa918850b8ac548ad2205ce181286c2", "url": "https://github.com/elastic/elasticsearch/commit/951bb1ddaaa918850b8ac548ad2205ce181286c2", "message": "Added integ test", "committedDate": "2020-06-17T14:23:20Z", "type": "commit"}, {"oid": "9d99ca9d2940127061c753bb3fd647d8da3360c4", "url": "https://github.com/elastic/elasticsearch/commit/9d99ca9d2940127061c753bb3fd647d8da3360c4", "message": "moved assertion to TimestampField class and added helper method for tests", "committedDate": "2020-06-17T14:43:37Z", "type": "commit"}, {"oid": "5104eff361e360a890db6c4b90e99f3a29f1956b", "url": "https://github.com/elastic/elasticsearch/commit/5104eff361e360a890db6c4b90e99f3a29f1956b", "message": "removed unused imports", "committedDate": "2020-06-17T16:26:55Z", "type": "commit"}, {"oid": "31110c1b32d7efd2ff49d0229b0ea93ff1556b89", "url": "https://github.com/elastic/elasticsearch/commit/31110c1b32d7efd2ff49d0229b0ea93ff1556b89", "message": "fixed test", "committedDate": "2020-06-17T19:22:13Z", "type": "commit"}, {"oid": "85da2ab84b6eba5db717dd96795a92ec8c67082b", "url": "https://github.com/elastic/elasticsearch/commit/85da2ab84b6eba5db717dd96795a92ec8c67082b", "message": "Improved logic that inserts timestamp field mapping into an mapping.\nIf the timestamp field path consisted out of object fields and\nif the final mapping did not contain the parent field then an error\noccurred, because the prior logic assumed that the object field existed.", "committedDate": "2020-06-18T10:19:10Z", "type": "commit"}, {"oid": "b617446c10e4bb641044e3d16daf3ed7168c92a4", "url": "https://github.com/elastic/elasticsearch/commit/b617446c10e4bb641044e3d16daf3ed7168c92a4", "message": "Merge remote-tracking branch 'es/master' into keep_track__of_ds_timestamp_field", "committedDate": "2020-06-18T10:22:57Z", "type": "commit"}, {"oid": "1c0742e990c573b82de226ad7e4b1df51157043d", "url": "https://github.com/elastic/elasticsearch/commit/1c0742e990c573b82de226ad7e4b1df51157043d", "message": "removed unused imports", "committedDate": "2020-06-18T10:34:29Z", "type": "commit"}, {"oid": "99a247ea91ca3e4d31bbb935e189f3dff3aef23e", "url": "https://github.com/elastic/elasticsearch/commit/99a247ea91ca3e4d31bbb935e189f3dff3aef23e", "message": "fixed test compile error", "committedDate": "2020-06-18T18:38:05Z", "type": "commit"}, {"oid": "c2ea7a61678a348a00042b37d198eae528dcc230", "url": "https://github.com/elastic/elasticsearch/commit/c2ea7a61678a348a00042b37d198eae528dcc230", "message": "Merge remote-tracking branch 'es/master' into keep_track__of_ds_timestamp_field", "committedDate": "2020-06-18T18:39:11Z", "type": "commit"}, {"oid": "6234cc769ce8a5716d29470576118dd538dc7a91", "url": "https://github.com/elastic/elasticsearch/commit/6234cc769ce8a5716d29470576118dd538dc7a91", "message": "fixed test compile errors after merge", "committedDate": "2020-06-18T18:44:49Z", "type": "commit"}, {"oid": "64520906c87cfdfe56dcf249113253eb9f0c452f", "url": "https://github.com/elastic/elasticsearch/commit/64520906c87cfdfe56dcf249113253eb9f0c452f", "message": "Merge remote-tracking branch 'es/master' into keep_track__of_ds_timestamp_field", "committedDate": "2020-06-21T13:53:30Z", "type": "commit"}]}