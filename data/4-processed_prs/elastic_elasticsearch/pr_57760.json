{"pr_number": 57760, "pr_title": "[DOCS] Move search API's `docvalue_fields` examples", "pr_createdAt": "2020-06-05T18:47:04Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57760", "timeline": [{"oid": "a3e80adf7e26c80a9597d6be07cbccf8ed721f3b", "url": "https://github.com/elastic/elasticsearch/commit/a3e80adf7e26c80a9597d6be07cbccf8ed721f3b", "message": "[DOCS] Rearrange search API's `docvalue_fields` docs\n\nChanges:\n\n* Condenses and relocates the `docvalue_fields` example to the 'Search fields'\n  section of the 'Run a search' page.\n* Adds docs for the `docvalue_fields` request body parameter.\n* Updates several related xrefs.", "committedDate": "2020-06-05T18:45:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA2MjQxNw==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r437062417", "bodyText": "I tend to think in terms of the user requesting or retrieving things, and the system returning them, so \"Return fields in a search\" sounds awkward to me. I'd be inclined to flip it around to the user's perspective and say, \"Retrieve selected fields\". Then you could have \"Source filtering\", \"Doc values\", and Stored fields subsections.\nThis would probably benefit from a brief definition of \"doc values\" and/or \"doc value fields\", or at least a link back to the doc values topic.", "author": "debadair", "createdAt": "2020-06-08T23:52:36Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -103,10 +103,50 @@ needed.\n {es} supports some alternative methods for returning fields that help avoid\n these downsides:\n \n-* The <<request-body-search-docvalue-fields, `docvalue_fields`>>\n-parameter allows for loading fields from their doc values. This can be a good\n-choice when returning a fairly small number of fields that support doc values,\n-such as keywords and dates.\n+* You can use the <<search-docvalue-fields,`docvalue_fields`>> parameter to", "originalCommit": "a3e80adf7e26c80a9597d6be07cbccf8ed721f3b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "933dc5b4e1e1d4f13beba7429571d294cf3c57fa", "url": "https://github.com/elastic/elasticsearch/commit/933dc5b4e1e1d4f13beba7429571d294cf3c57fa", "message": "Merge remote-tracking branch 'upstream/master' into docs__move-docvalue-field-ex", "committedDate": "2020-06-09T17:06:50Z", "type": "commit"}, {"oid": "034942ea1f07124d715d24d8bea3305b4f6fd9ba", "url": "https://github.com/elastic/elasticsearch/commit/034942ea1f07124d715d24d8bea3305b4f6fd9ba", "message": "iter", "committedDate": "2020-06-09T17:51:25Z", "type": "commit"}, {"oid": "40a38a88dc25cfb31a6972be75c1c37a49aff84d", "url": "https://github.com/elastic/elasticsearch/commit/40a38a88dc25cfb31a6972be75c1c37a49aff84d", "message": "add xref", "committedDate": "2020-06-09T17:52:48Z", "type": "commit"}, {"oid": "d2a42d0a63ceaa922b2eea671f148b1ec5c9dd94", "url": "https://github.com/elastic/elasticsearch/commit/d2a42d0a63ceaa922b2eea671f148b1ec5c9dd94", "message": "relocate admons", "committedDate": "2020-06-09T17:59:48Z", "type": "commit"}, {"oid": "f6d71dfb6f4186a9f285b9a3a42892f301996532", "url": "https://github.com/elastic/elasticsearch/commit/f6d71dfb6f4186a9f285b9a3a42892f301996532", "message": "reword", "committedDate": "2020-06-09T18:01:50Z", "type": "commit"}, {"oid": "b2d17754b33aca8638d438da9a155b16c37923b8", "url": "https://github.com/elastic/elasticsearch/commit/b2d17754b33aca8638d438da9a155b16c37923b8", "message": "fix anchor", "committedDate": "2020-06-09T18:06:39Z", "type": "commit"}, {"oid": "75e431eb00909dcb270b1de3d9a48dbd73c9bf9c", "url": "https://github.com/elastic/elasticsearch/commit/75e431eb00909dcb270b1de3d9a48dbd73c9bf9c", "message": "convert admons to para", "committedDate": "2020-06-09T18:11:48Z", "type": "commit"}, {"oid": "d89a4725e00b5be06f2400b8b41180319843a8b7", "url": "https://github.com/elastic/elasticsearch/commit/d89a4725e00b5be06f2400b8b41180319843a8b7", "message": "reword", "committedDate": "2020-06-09T18:13:12Z", "type": "commit"}, {"oid": "619271651f6b8b51b96771a6fc90aefa5b790f78", "url": "https://github.com/elastic/elasticsearch/commit/619271651f6b8b51b96771a6fc90aefa5b790f78", "message": "Add collapsible sections", "committedDate": "2020-06-09T18:21:51Z", "type": "commit"}, {"oid": "eec63cdf5add1fa9b9876b1bbd19194f06b124ff", "url": "https://github.com/elastic/elasticsearch/commit/eec63cdf5add1fa9b9876b1bbd19194f06b124ff", "message": "update link", "committedDate": "2020-06-09T18:52:34Z", "type": "commit"}, {"oid": "54ee4140c5749fa89fbdadf8f49c2b8ba90e775f", "url": "https://github.com/elastic/elasticsearch/commit/54ee4140c5749fa89fbdadf8f49c2b8ba90e775f", "message": "tweak heading", "committedDate": "2020-06-09T18:59:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwNjMwMg==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r437706302", "bodyText": "Curious if this redirect helpful, since it occurs in the middle of a page ('Request Body Search')?", "author": "jtibshirani", "createdAt": "2020-06-09T20:43:47Z", "path": "docs/reference/search/request/docvalue-fields.asciidoc", "diffHunk": "@@ -1,73 +1,4 @@\n [[request-body-search-docvalue-fields]]\n-==== Doc value Fields\n+==== Doc value fields\n \n-Allows to return the <<doc-values,doc value>> representation of a field for each hit, for\n-example:\n-\n-[source,console]\n---------------------------------------------------\n-GET /_search\n-{\n-    \"query\" : {\n-        \"match_all\": {}\n-    },\n-    \"docvalue_fields\" : [\n-        \"my_ip_field\", <1>\n-        {\n-            \"field\": \"my_keyword_field\" <2>\n-        },\n-        {\n-            \"field\": \"my_date_field\",\n-            \"format\": \"epoch_millis\" <3>\n-        }\n-    ]\n-}\n---------------------------------------------------\n-\n-<1> the name of the field\n-<2> an object notation is supported as well\n-<3> the object notation allows to specify a custom format\n-\n-Doc value fields can work on fields that have doc-values enabled, regardless of whether they are stored\n-\n-`*` can be used as a wild card, for example:\n-\n-[source,console]\n---------------------------------------------------\n-GET /_search\n-{\n-    \"query\" : {\n-        \"match_all\": {}\n-    },\n-    \"docvalue_fields\" : [\n-        {\n-            \"field\": \"*_date_field\", <1>\n-            \"format\": \"epoch_millis\" <2>\n-        }\n-    ]\n-}\n---------------------------------------------------\n-\n-<1> Match all fields ending with `field`\n-<2> Format to be applied to all matching fields.\n-\n-Note that if the fields parameter specifies fields without docvalues it will try to load the value from the fielddata cache\n-causing the terms for that field to be loaded to memory (cached), which will result in more memory consumption.\n-\n-[float]\n-====== Custom formats\n-\n-While most fields do not support custom formats, some of them do:\n-\n- - <<date,Date>> fields can take any <<mapping-date-format,date format>>.\n- - <<number,Numeric>> fields accept a https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html[DecimalFormat pattern].\n-\n-By default fields are formatted based on a sensible configuration that depends\n-on their mappings: `long`, `double` and other numeric fields are formatted as\n-numbers, `keyword` fields are formatted as strings, `date` fields are formatted\n-with the configured `date` format, etc.\n-\n-NOTE: On its own, `docvalue_fields` cannot be used to load fields in nested\n-objects -- if a field contains a nested object in its path, then no data will\n-be returned for that docvalue field. To access nested fields, `docvalue_fields`\n-must be used within an <<request-body-search-inner-hits, `inner_hits`>> block.\n\\ No newline at end of file\n+See <<docvalue-fields, doc value fields>>.", "originalCommit": "54ee4140c5749fa89fbdadf8f49c2b8ba90e775f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcyMjY1Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r437722652", "bodyText": "I agree that this isn't ideal. However, there isn't a good way for us to gracefully remove on-page anchors if the page still exists. It's primarily a workaround to avoid breaking the anchor.\nThis method lets users who find their way to the page looking for the field get to the right place.\nI plan to remove this and similar links once we're able to remove the request body search page entirely.", "author": "jrodewig", "createdAt": "2020-06-09T21:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwNjMwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMTYzMg==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r438411632", "bodyText": "\ud83d\udc4d", "author": "jtibshirani", "createdAt": "2020-06-10T21:13:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwNjMwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcxMjU1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r437712551", "bodyText": "I find the collapsing here a little confusing because the subsection heading ('Doc value fields') is the same font size as 'Example', and also they're at the same level of indentation. I wonder if we could just not collapse the subsections like 'Doc value fields'?", "author": "jtibshirani", "createdAt": "2020-06-09T20:51:37Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -99,15 +109,82 @@ values copied using the <<copy-to,`copy_to`>> mapping parameter.\n * Since the `_source` is stored as a single field in Lucene, the whole source\n object must be loaded and parsed, even if only a small number of fields are\n needed.\n+====\n+\n+[[docvalue-fields]]\n+.*Doc value fields*\n+[%collapsible]", "originalCommit": "54ee4140c5749fa89fbdadf8f49c2b8ba90e775f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcyODM0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r437728342", "bodyText": "This is a good point. I've removed the collapsible examples with 6d245d9.", "author": "jrodewig", "createdAt": "2020-06-09T21:18:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcxMjU1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcxNjUxMw==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r437716513", "bodyText": "Small comment, we could remove the line \"Because they've been normalized...\" because I don't think it helps users understand when to use docvalue_fields. It's related to the size of each doc value field on disk, which isn't that relevant to search.\nMaybe you were hoping to explain how it overcomes the source filtering limitation \"the whole source object must be loaded and parsed\"? We could say something like \"Since each field is stored separately, Elasticsearch only reads the field values that were requested and can avoid loading the whole document _source.\"", "author": "jtibshirani", "createdAt": "2020-06-09T20:56:22Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -99,15 +109,82 @@ values copied using the <<copy-to,`copy_to`>> mapping parameter.\n * Since the `_source` is stored as a single field in Lucene, the whole source\n object must be loaded and parsed, even if only a small number of fields are\n needed.\n+====\n+\n+[[docvalue-fields]]\n+.*Doc value fields*\n+[%collapsible]\n+====\n+You can use the <<docvalue-fields,`docvalue_fields`>> parameter to return\n+<<doc-values,doc values>> for one or more fields in the search response.\n+\n+Doc values store the same values as the `_source` but in an on-disk,\n+column-based structure that's optimized for sorting and aggregations. Because", "originalCommit": "54ee4140c5749fa89fbdadf8f49c2b8ba90e775f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcxNzU2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r437717565", "bodyText": "annotated_text also doesn't support doc values.", "author": "jtibshirani", "createdAt": "2020-06-09T20:57:38Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -99,15 +109,82 @@ values copied using the <<copy-to,`copy_to`>> mapping parameter.\n * Since the `_source` is stored as a single field in Lucene, the whole source\n object must be loaded and parsed, even if only a small number of fields are\n needed.\n+====\n+\n+[[docvalue-fields]]\n+.*Doc value fields*\n+[%collapsible]\n+====\n+You can use the <<docvalue-fields,`docvalue_fields`>> parameter to return\n+<<doc-values,doc values>> for one or more fields in the search response.\n+\n+Doc values store the same values as the `_source` but in an on-disk,\n+column-based structure that's optimized for sorting and aggregations. Because\n+they've been normalized, doc values are typically more compact than `_source`\n+values.\n+\n+.*Example*\n+[%collapsible]\n+=====\n+The following search API request uses the `docvalue_fields` parameter to\n+retrieve doc values for the following fields:\n \n-{es} supports some alternative methods for returning fields that help avoid\n-these downsides:\n+* Fields with names starting with `my_ip`\n+* `my_keyword_field`\n+* Fields with names ending with `_date_field`\n \n-* The <<request-body-search-docvalue-fields, `docvalue_fields`>>\n-parameter allows for loading fields from their doc values. This can be a good\n-choice when returning a fairly small number of fields that support doc values,\n-such as keywords and dates.\n-* It's also possible to store an individual field's values by using the\n+[source,console]\n+----\n+GET /_search\n+{\n+  \"query\": {\n+    \"match_all\": {}\n+  },\n+  \"docvalue_fields\": [\n+    \"my_ip*\",                     <1>\n+    {\n+      \"field\": \"my_keyword_field\" <2>\n+    },\n+    {\n+      \"field\": \"*_date_field\",\n+      \"format\": \"epoch_millis\"    <3>\n+    }\n+  ]\n+}\n+----\n+\n+<1> Wildcard patten used to match field names, specified as a string.\n+<2> Wildcard patten used to match field names, specified as an object.\n+<3> With the object notation, you can use the `format` parameter to specify a\n+    format for the field's returned doc values. <<date,Date fields>> support a\n+    <<mapping-date-format,date `format`>>. <<number,Numeric fields>> support a\n+    https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html[DecimalFormat\n+    pattern]. Other field datatypes do not support the `format` parameter.\n+=====\n+\n+The `docvalue_fields` parameter has some limitations:\n+\n+* Doc values are stored for supported fields by default. However, <<text,`text`", "originalCommit": "54ee4140c5749fa89fbdadf8f49c2b8ba90e775f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcxOTQ1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r437719451", "bodyText": "I've seen this in our docs, but I don't think it's true anymore. By default, we'll just fail to load the value instead of consuming a bunch of memory. Field data loading needs to be explicitly enabled. My vote would be to not even mention this, since we really discourage people from enabling field data and are trying hard to cut down on its usage.", "author": "jtibshirani", "createdAt": "2020-06-09T20:59:52Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -99,15 +109,82 @@ values copied using the <<copy-to,`copy_to`>> mapping parameter.\n * Since the `_source` is stored as a single field in Lucene, the whole source\n object must be loaded and parsed, even if only a small number of fields are\n needed.\n+====\n+\n+[[docvalue-fields]]\n+.*Doc value fields*\n+[%collapsible]\n+====\n+You can use the <<docvalue-fields,`docvalue_fields`>> parameter to return\n+<<doc-values,doc values>> for one or more fields in the search response.\n+\n+Doc values store the same values as the `_source` but in an on-disk,\n+column-based structure that's optimized for sorting and aggregations. Because\n+they've been normalized, doc values are typically more compact than `_source`\n+values.\n+\n+.*Example*\n+[%collapsible]\n+=====\n+The following search API request uses the `docvalue_fields` parameter to\n+retrieve doc values for the following fields:\n \n-{es} supports some alternative methods for returning fields that help avoid\n-these downsides:\n+* Fields with names starting with `my_ip`\n+* `my_keyword_field`\n+* Fields with names ending with `_date_field`\n \n-* The <<request-body-search-docvalue-fields, `docvalue_fields`>>\n-parameter allows for loading fields from their doc values. This can be a good\n-choice when returning a fairly small number of fields that support doc values,\n-such as keywords and dates.\n-* It's also possible to store an individual field's values by using the\n+[source,console]\n+----\n+GET /_search\n+{\n+  \"query\": {\n+    \"match_all\": {}\n+  },\n+  \"docvalue_fields\": [\n+    \"my_ip*\",                     <1>\n+    {\n+      \"field\": \"my_keyword_field\" <2>\n+    },\n+    {\n+      \"field\": \"*_date_field\",\n+      \"format\": \"epoch_millis\"    <3>\n+    }\n+  ]\n+}\n+----\n+\n+<1> Wildcard patten used to match field names, specified as a string.\n+<2> Wildcard patten used to match field names, specified as an object.\n+<3> With the object notation, you can use the `format` parameter to specify a\n+    format for the field's returned doc values. <<date,Date fields>> support a\n+    <<mapping-date-format,date `format`>>. <<number,Numeric fields>> support a\n+    https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html[DecimalFormat\n+    pattern]. Other field datatypes do not support the `format` parameter.\n+=====\n+\n+The `docvalue_fields` parameter has some limitations:\n+\n+* Doc values are stored for supported fields by default. However, <<text,`text`\n+fields>> do not support doc values.\n+\n+*  If you use the `docvalue_fields` parameter to specify a field without a doc", "originalCommit": "54ee4140c5749fa89fbdadf8f49c2b8ba90e775f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcxOTgxMA==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r437719810", "bodyText": "Small comment, this could be better as a 'tip', because it's not really a limitation (we have a great way to do this, and it's through inner_hits).", "author": "jtibshirani", "createdAt": "2020-06-09T21:00:28Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -99,15 +109,82 @@ values copied using the <<copy-to,`copy_to`>> mapping parameter.\n * Since the `_source` is stored as a single field in Lucene, the whole source\n object must be loaded and parsed, even if only a small number of fields are\n needed.\n+====\n+\n+[[docvalue-fields]]\n+.*Doc value fields*\n+[%collapsible]\n+====\n+You can use the <<docvalue-fields,`docvalue_fields`>> parameter to return\n+<<doc-values,doc values>> for one or more fields in the search response.\n+\n+Doc values store the same values as the `_source` but in an on-disk,\n+column-based structure that's optimized for sorting and aggregations. Because\n+they've been normalized, doc values are typically more compact than `_source`\n+values.\n+\n+.*Example*\n+[%collapsible]\n+=====\n+The following search API request uses the `docvalue_fields` parameter to\n+retrieve doc values for the following fields:\n \n-{es} supports some alternative methods for returning fields that help avoid\n-these downsides:\n+* Fields with names starting with `my_ip`\n+* `my_keyword_field`\n+* Fields with names ending with `_date_field`\n \n-* The <<request-body-search-docvalue-fields, `docvalue_fields`>>\n-parameter allows for loading fields from their doc values. This can be a good\n-choice when returning a fairly small number of fields that support doc values,\n-such as keywords and dates.\n-* It's also possible to store an individual field's values by using the\n+[source,console]\n+----\n+GET /_search\n+{\n+  \"query\": {\n+    \"match_all\": {}\n+  },\n+  \"docvalue_fields\": [\n+    \"my_ip*\",                     <1>\n+    {\n+      \"field\": \"my_keyword_field\" <2>\n+    },\n+    {\n+      \"field\": \"*_date_field\",\n+      \"format\": \"epoch_millis\"    <3>\n+    }\n+  ]\n+}\n+----\n+\n+<1> Wildcard patten used to match field names, specified as a string.\n+<2> Wildcard patten used to match field names, specified as an object.\n+<3> With the object notation, you can use the `format` parameter to specify a\n+    format for the field's returned doc values. <<date,Date fields>> support a\n+    <<mapping-date-format,date `format`>>. <<number,Numeric fields>> support a\n+    https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html[DecimalFormat\n+    pattern]. Other field datatypes do not support the `format` parameter.\n+=====\n+\n+The `docvalue_fields` parameter has some limitations:\n+\n+* Doc values are stored for supported fields by default. However, <<text,`text`\n+fields>> do not support doc values.\n+\n+*  If you use the `docvalue_fields` parameter to specify a field without a doc\n+value, the search attempts to load the value from the <<modules-fielddata,field\n+data cache>>. This causes the field's terms to be loaded into memory, resulting\n+in higher memory consumption.\n+\n+*  You cannot use the `docvalue_fields` parameter to retrieve doc values for", "originalCommit": "54ee4140c5749fa89fbdadf8f49c2b8ba90e775f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6d245d9dbec6c39a1ce4f04dea58f1ecb9c37b97", "url": "https://github.com/elastic/elasticsearch/commit/6d245d9dbec6c39a1ce4f04dea58f1ecb9c37b97", "message": "remove collapsible examples", "committedDate": "2020-06-09T21:08:43Z", "type": "commit"}, {"oid": "0e8c4d1465eee0b57e5f69afe7024f2f64719d50", "url": "https://github.com/elastic/elasticsearch/commit/0e8c4d1465eee0b57e5f69afe7024f2f64719d50", "message": "update doc values wording", "committedDate": "2020-06-09T21:10:41Z", "type": "commit"}, {"oid": "e22ca4aef6d068ff88f68946c5e619439880693f", "url": "https://github.com/elastic/elasticsearch/commit/e22ca4aef6d068ff88f68946c5e619439880693f", "message": "note text annotated support", "committedDate": "2020-06-09T21:12:14Z", "type": "commit"}, {"oid": "0065c35f56730efac7ddc7fbc01c3fc675832eaa", "url": "https://github.com/elastic/elasticsearch/commit/0065c35f56730efac7ddc7fbc01c3fc675832eaa", "message": "relocate limitations", "committedDate": "2020-06-09T21:13:42Z", "type": "commit"}, {"oid": "4d44b915b594a9a383c28817cc3ff69ed33ffa83", "url": "https://github.com/elastic/elasticsearch/commit/4d44b915b594a9a383c28817cc3ff69ed33ffa83", "message": "re-add guidance", "committedDate": "2020-06-09T21:15:34Z", "type": "commit"}, {"oid": "b305fb736251971e2fbfb1637dbd315e04e07d9b", "url": "https://github.com/elastic/elasticsearch/commit/b305fb736251971e2fbfb1637dbd315e04e07d9b", "message": "convert xref to link", "committedDate": "2020-06-09T21:20:57Z", "type": "commit"}, {"oid": "34a27e752c8a3d71a8d96c1536d1510535a661a8", "url": "https://github.com/elastic/elasticsearch/commit/34a27e752c8a3d71a8d96c1536d1510535a661a8", "message": "update xref", "committedDate": "2020-06-09T21:25:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMDA0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r438410041", "bodyText": "I think this sentence mentioning source filtering (which was there before this PR) was helpful! Otherwise it doesn't make as much sense to say \"Returning fields using only the document source...\" after.", "author": "jtibshirani", "createdAt": "2020-06-10T21:09:48Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -1,16 +1,43 @@\n [discrete]\n [[search-fields]]\n-=== Return fields in a search\n+=== Retrieve selected fields\n \n By default, each hit in the search response includes the document\n <<mapping-source-field,`_source`>>, which is the entire JSON object that was\n-provided when indexing the document. If you only need certain fields in the", "originalCommit": "34a27e752c8a3d71a8d96c1536d1510535a661a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMDQxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r438410419", "bodyText": "Small comment, maybe we could say \"You can find more detailed information on each of these methods in the sections below.\"", "author": "jtibshirani", "createdAt": "2020-06-10T21:10:37Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -1,16 +1,43 @@\n [discrete]\n [[search-fields]]\n-=== Return fields in a search\n+=== Retrieve selected fields\n \n By default, each hit in the search response includes the document\n <<mapping-source-field,`_source`>>, which is the entire JSON object that was\n-provided when indexing the document. If you only need certain fields in the\n-search response, you can use the `_source` parameter to restrict what parts of\n-the source are returned. This is called _source filtering_.\n+provided when indexing the document. \n \n-.*Example*\n+Returning fields using only the document source has some limitations:\n+\n+* The `_source` field does not include <<multi-fields, multi-fields>> or\n+<<alias, field aliases>>. Likewise, a field in the source does not contain\n+values copied using the <<copy-to,`copy_to`>> mapping parameter.\n+* Since the `_source` is stored as a single field in Lucene, the whole source\n+object must be loaded and parsed, even if only a small number of fields are\n+needed.\n+\n+{es} supports some alternative methods for returning fields that help avoid\n+these downsides:\n+\n+* The <<docvalue-fields, `docvalue_fields`>>\n+parameter allows for loading fields from their doc values. This can be a good\n+choice when returning a fairly small number of fields that support doc values,\n+such as keywords and dates.\n+* It's also possible to store an individual field's values by using the\n+<<mapping-store,`store`>> mapping option. You can use the\n+<<request-body-search-stored-fields, `stored_fields`>> parameter to return\n+these stored values in the search response.\n+\n+You can use the following methods to select which fields and values are", "originalCommit": "34a27e752c8a3d71a8d96c1536d1510535a661a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMjcxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r438412719", "bodyText": "Oops, I just noticed this addition. Actually, the fields section of the response contains not only the output from docvalue_fields, but also stored_fields and script_fields if these were provided. All those retrieved fields are combined together in the single fields section.", "author": "jtibshirani", "createdAt": "2020-06-10T21:15:42Z", "path": "docs/reference/search/search.asciidoc", "diffHunk": "@@ -528,6 +557,23 @@ Original JSON body passed for the document at index time.\n +\n You can use the `_source` parameter to exclude this property from the response\n or specify which source fields to return.\n+\n+`fields`::", "originalCommit": "34a27e752c8a3d71a8d96c1536d1510535a661a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQzMjg4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r438432887", "bodyText": "\ud83d\ude05  Thanks for catching this. I've updated the def with 5c38371.", "author": "jrodewig", "createdAt": "2020-06-10T22:02:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMjcxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMjE3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r438412172", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <<request-body-search-stored-fields, `stored_fields`>> parameter to return\n          \n          \n            \n            these stored values in the search response.\n          \n          \n            \n            <<request-body-search-stored-fields, `stored_fields`>> parameter to include\n          \n          \n            \n            these stored values in the search response.", "author": "debadair", "createdAt": "2020-06-10T21:14:37Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -99,15 +125,74 @@ values copied using the <<copy-to,`copy_to`>> mapping parameter.\n * Since the `_source` is stored as a single field in Lucene, the whole source\n object must be loaded and parsed, even if only a small number of fields are\n needed.\n+====\n \n-{es} supports some alternative methods for returning fields that help avoid\n-these downsides:\n+[[docvalue-fields]]\n+.*Doc value fields*\n+[%collapsible]\n+====\n+You can use the <<docvalue-fields,`docvalue_fields`>> parameter to return\n+<<doc-values,doc values>> for one or more fields in the search response.\n \n-* The <<request-body-search-docvalue-fields, `docvalue_fields`>>\n-parameter allows for loading fields from their doc values. This can be a good\n-choice when returning a fairly small number of fields that support doc values,\n-such as keywords and dates.\n-* It's also possible to store an individual field's values by using the\n+Doc values store the same values as the `_source` but in an on-disk,\n+column-based structure that's optimized for sorting and aggregations. Since each\n+field is stored separately, {es} only reads the field values that were requested\n+and can avoid loading the whole document `_source`.\n+\n+Doc values are stored for supported fields by default. However, <<text,`text`>>\n+and {plugins}/mapper-annotated-text-usage.html[`text_annotated`] fields do not\n+support doc values.\n+\n+The following search API request uses the `docvalue_fields` parameter to\n+retrieve doc values for the following fields:\n+\n+* Fields with names starting with `my_ip`\n+* `my_keyword_field`\n+* Fields with names ending with `_date_field`\n+\n+[source,console]\n+----\n+GET /_search\n+{\n+  \"query\": {\n+    \"match_all\": {}\n+  },\n+  \"docvalue_fields\": [\n+    \"my_ip*\",                     <1>\n+    {\n+      \"field\": \"my_keyword_field\" <2>\n+    },\n+    {\n+      \"field\": \"*_date_field\",\n+      \"format\": \"epoch_millis\"    <3>\n+    }\n+  ]\n+}\n+----\n+\n+<1> Wildcard patten used to match field names, specified as a string.\n+<2> Wildcard patten used to match field names, specified as an object.\n+<3> With the object notation, you can use the `format` parameter to specify a\n+    format for the field's returned doc values. <<date,Date fields>> support a\n+    <<mapping-date-format,date `format`>>. <<number,Numeric fields>> support a\n+    https://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html[DecimalFormat\n+    pattern]. Other field datatypes do not support the `format` parameter.\n+\n+\n+TIP: You cannot use the `docvalue_fields` parameter to retrieve doc values for\n+nested objects. If you specify a nested object, the search returns an empty\n+array (`[ ]`) for the field. To access nested fields, use the\n+<<request-body-search-inner-hits, `inner_hits`>> parameter's `docvalue_fields`\n+property.\n+\n+====\n+\n+[[stored-fields]]\n+.*Stored fields*\n+[%collapsible]\n+====\n+It's also possible to store an individual field's values by using the\n <<mapping-store,`store`>> mapping option. You can use the\n <<request-body-search-stored-fields, `stored_fields`>> parameter to return\n these stored values in the search response.", "originalCommit": "34a27e752c8a3d71a8d96c1536d1510535a661a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxMjQ2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r438412465", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The following search API request uses the `docvalue_fields` parameter to\n          \n          \n            \n            retrieve doc values for the following fields:\n          \n          \n            \n            The following search request uses the `docvalue_fields` parameter to\n          \n          \n            \n            retrieve doc values for the following fields:", "author": "debadair", "createdAt": "2020-06-10T21:15:06Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -99,15 +125,74 @@ values copied using the <<copy-to,`copy_to`>> mapping parameter.\n * Since the `_source` is stored as a single field in Lucene, the whole source\n object must be loaded and parsed, even if only a small number of fields are\n needed.\n+====\n \n-{es} supports some alternative methods for returning fields that help avoid\n-these downsides:\n+[[docvalue-fields]]\n+.*Doc value fields*\n+[%collapsible]\n+====\n+You can use the <<docvalue-fields,`docvalue_fields`>> parameter to return\n+<<doc-values,doc values>> for one or more fields in the search response.\n \n-* The <<request-body-search-docvalue-fields, `docvalue_fields`>>\n-parameter allows for loading fields from their doc values. This can be a good\n-choice when returning a fairly small number of fields that support doc values,\n-such as keywords and dates.\n-* It's also possible to store an individual field's values by using the\n+Doc values store the same values as the `_source` but in an on-disk,\n+column-based structure that's optimized for sorting and aggregations. Since each\n+field is stored separately, {es} only reads the field values that were requested\n+and can avoid loading the whole document `_source`.\n+\n+Doc values are stored for supported fields by default. However, <<text,`text`>>\n+and {plugins}/mapper-annotated-text-usage.html[`text_annotated`] fields do not\n+support doc values.\n+\n+The following search API request uses the `docvalue_fields` parameter to\n+retrieve doc values for the following fields:", "originalCommit": "34a27e752c8a3d71a8d96c1536d1510535a661a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxNjAyOA==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r438416028", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {es} supports some alternative methods for returning fields that help avoid\n          \n          \n            \n            these downsides:\n          \n          \n            \n            \n          \n          \n            \n            * The <<docvalue-fields, `docvalue_fields`>>\n          \n          \n            \n            parameter allows for loading fields from their doc values. This can be a good\n          \n          \n            \n            choice when returning a fairly small number of fields that support doc values,\n          \n          \n            \n            such as keywords and dates.\n          \n          \n            \n            * It's also possible to store an individual field's values by using the\n          \n          \n            \n            <<mapping-store,`store`>> mapping option. You can use the\n          \n          \n            \n            <<request-body-search-stored-fields, `stored_fields`>> parameter to return\n          \n          \n            \n            these stored values in the search response.\n          \n          \n            \n            To avoid these limitations, you can::\n          \n          \n            \n            \n          \n          \n            \n            * Use the <<docvalue-fields, `docvalue_fields`>>\n          \n          \n            \n            parameter to get values for selected fields. This can be a good\n          \n          \n            \n            choice when returning a fairly small number of fields that support doc values,\n          \n          \n            \n            such as keywords and dates.\n          \n          \n            \n            * Use the <<request-body-search-stored-fields, `stored_fields`>> parameter to get the values for specific  stored fields. (Fields that use the <<mapping-store,`store`>> mapping option.)", "author": "debadair", "createdAt": "2020-06-10T21:23:08Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -1,16 +1,43 @@\n [discrete]\n [[search-fields]]\n-=== Return fields in a search\n+=== Retrieve selected fields\n \n By default, each hit in the search response includes the document\n <<mapping-source-field,`_source`>>, which is the entire JSON object that was\n-provided when indexing the document. If you only need certain fields in the\n-search response, you can use the `_source` parameter to restrict what parts of\n-the source are returned. This is called _source filtering_.\n+provided when indexing the document. \n \n-.*Example*\n+Returning fields using only the document source has some limitations:\n+\n+* The `_source` field does not include <<multi-fields, multi-fields>> or\n+<<alias, field aliases>>. Likewise, a field in the source does not contain\n+values copied using the <<copy-to,`copy_to`>> mapping parameter.\n+* Since the `_source` is stored as a single field in Lucene, the whole source\n+object must be loaded and parsed, even if only a small number of fields are\n+needed.\n+\n+{es} supports some alternative methods for returning fields that help avoid\n+these downsides:\n+\n+* The <<docvalue-fields, `docvalue_fields`>>\n+parameter allows for loading fields from their doc values. This can be a good\n+choice when returning a fairly small number of fields that support doc values,\n+such as keywords and dates.\n+* It's also possible to store an individual field's values by using the\n+<<mapping-store,`store`>> mapping option. You can use the\n+<<request-body-search-stored-fields, `stored_fields`>> parameter to return\n+these stored values in the search response.", "originalCommit": "34a27e752c8a3d71a8d96c1536d1510535a661a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQxNzIwNw==", "url": "https://github.com/elastic/elasticsearch/pull/57760#discussion_r438417207", "bodyText": "I'd be inclined to make these actual headings, and make the examples collapsible so that Source filtering, Doc value fields, and Stored fields show up in the \"On this page\" links.", "author": "debadair", "createdAt": "2020-06-10T21:25:41Z", "path": "docs/reference/search/search-fields.asciidoc", "diffHunk": "@@ -1,16 +1,43 @@\n [discrete]\n [[search-fields]]\n-=== Return fields in a search\n+=== Retrieve selected fields\n \n By default, each hit in the search response includes the document\n <<mapping-source-field,`_source`>>, which is the entire JSON object that was\n-provided when indexing the document. If you only need certain fields in the\n-search response, you can use the `_source` parameter to restrict what parts of\n-the source are returned. This is called _source filtering_.\n+provided when indexing the document. \n \n-.*Example*\n+Returning fields using only the document source has some limitations:\n+\n+* The `_source` field does not include <<multi-fields, multi-fields>> or\n+<<alias, field aliases>>. Likewise, a field in the source does not contain\n+values copied using the <<copy-to,`copy_to`>> mapping parameter.\n+* Since the `_source` is stored as a single field in Lucene, the whole source\n+object must be loaded and parsed, even if only a small number of fields are\n+needed.\n+\n+{es} supports some alternative methods for returning fields that help avoid\n+these downsides:\n+\n+* The <<docvalue-fields, `docvalue_fields`>>\n+parameter allows for loading fields from their doc values. This can be a good\n+choice when returning a fairly small number of fields that support doc values,\n+such as keywords and dates.\n+* It's also possible to store an individual field's values by using the\n+<<mapping-store,`store`>> mapping option. You can use the\n+<<request-body-search-stored-fields, `stored_fields`>> parameter to return\n+these stored values in the search response.\n+\n+You can use the following methods to select which fields and values are", "originalCommit": "34a27e752c8a3d71a8d96c1536d1510535a661a8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5c38371ce0923be39b094e7eb9cfc0c9047e9659", "url": "https://github.com/elastic/elasticsearch/commit/5c38371ce0923be39b094e7eb9cfc0c9047e9659", "message": "clean up fields response def", "committedDate": "2020-06-10T22:01:58Z", "type": "commit"}, {"oid": "d2df7333e41d1498baf734a21fb6b510ba1c4e56", "url": "https://github.com/elastic/elasticsearch/commit/d2df7333e41d1498baf734a21fb6b510ba1c4e56", "message": "Apply suggestions from code review\n\nCo-authored-by: debadair <debadair@elastic.co>", "committedDate": "2020-06-10T22:03:45Z", "type": "commit"}, {"oid": "0bab69e32342f6a4796798a23aa96c89f8f7df57", "url": "https://github.com/elastic/elasticsearch/commit/0bab69e32342f6a4796798a23aa96c89f8f7df57", "message": "rework headings, intro", "committedDate": "2020-06-10T22:05:39Z", "type": "commit"}, {"oid": "653bc0ea631592f84eae2db8802bb68d3159e164", "url": "https://github.com/elastic/elasticsearch/commit/653bc0ea631592f84eae2db8802bb68d3159e164", "message": "patch", "committedDate": "2020-06-10T22:20:38Z", "type": "commit"}]}