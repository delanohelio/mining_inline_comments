{"pr_number": 51882, "pr_title": "Introduce jvm.options.d for customizing JVM options", "pr_createdAt": "2020-02-04T18:59:18Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51882", "timeline": [{"oid": "386de64b21d94830e4cc47411c3190455dd2d034", "url": "https://github.com/elastic/elasticsearch/commit/386de64b21d94830e4cc47411c3190455dd2d034", "message": "Introduce jvm.options.d for customizing JVM options\n\nThis commit introduces the ability to override JVM options by adding\ncustom JVM options files to a jvm.options.d directory. This simplifies\nadministration of Elasticsearch by not requiring administrators to keep\nthe root jvm.options file in sync with changes that we make to the root\njvm.options file. Instead, they are not expected to modify this file but\ninstead supply their own in jvm.options.d. In Docker installations, this\nmeans they can bind mount this directory in. In future versions of\nElasticsearch, we can consider removing the root jvm.options file\n(instead, providing all options there as system JVM options).", "committedDate": "2020-02-04T18:58:11Z", "type": "commit"}, {"oid": "e8a16854d0727a589cce96b4fb1114adc5a0d3e1", "url": "https://github.com/elastic/elasticsearch/commit/e8a16854d0727a589cce96b4fb1114adc5a0d3e1", "message": "Do not encourage editing root jvm.options file", "committedDate": "2020-02-04T19:00:37Z", "type": "commit"}, {"oid": "98a315c97ee01a765d0880b1b9d7ea207d0bac91", "url": "https://github.com/elastic/elasticsearch/commit/98a315c97ee01a765d0880b1b9d7ea207d0bac91", "message": "Remove unneeded method", "committedDate": "2020-02-04T19:01:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2NDc5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r374864796", "bodyText": "Should we include an example/readme/etc in here to make this a little more self-documenting and so folks don't think this is some kind of mistake? I guess the way I see it is either a) we expect folks to read our documentation, at which point they'll just go ahead and create this folder or b) we don't, and we want to lead them towards this capability, at which point we should probably provide a bit more context. Thoughts?", "author": "mark-vieira", "createdAt": "2020-02-04T19:06:03Z", "path": "distribution/archives/build.gradle", "diffHunk": "@@ -44,6 +44,11 @@ task createPluginsDir(type: EmptyDirTask) {\n   dir = \"${pluginsDir}\"\n   dirMode = 0755\n }\n+ext.jvmOptionsDir = new File(buildDir, 'jvm-options-hack/jvm.options.d')", "originalCommit": "98a315c97ee01a765d0880b1b9d7ea207d0bac91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4NjY5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r374886695", "bodyText": "Here's what I wanted to do: move the default heap options out of the root jvm.options into jvm.options.d/heap.options. We can't do this: it will break users that have provisioning in place to customize the heap size in the jvm.options file because jvm.options.d/heap.options would override this. It would break users badly, including Cloud.\nOne option here is to add a jvm.options.d/heap.options file with the heap size commented out and still remaining in jvm.options with a comment pointing to jvm.optioins.d/heap.options.\nThe primary reason that users customize JVM options is to customize the heap size. We have documentation on how to customize the heap size, which now points to jvm.options.d. My preference is that users consult this and the JVM options documentation as the single source for how to customize jvm.options.\n\na) we expect folks to read our documentation, at which point they'll just go ahead and create this folder\n\nThis isn't necessary since the purpose of the hack that you're commenting on is to include this empty directory in the archive.\nThoughts?", "author": "jasontedor", "createdAt": "2020-02-04T19:49:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2NDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4OTA0NA==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r374889044", "bodyText": "One downside of providing a heap.options file with the distribution is that it will mistakenly lead users to think that that file is special when in fact the heap options can be present in any file in jvm.options.d, and the last one wins. We might want to instead call this custom.options, if we go this route.", "author": "jasontedor", "createdAt": "2020-02-04T19:54:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2NDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyMDc1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r374920753", "bodyText": "This isn't necessary since the purpose of the hack that you're commenting on is to include this empty directory in the archive.\n\nRight, I get we want to create the empty directory, but without any content, it's purpose is a bit unclear. One option is just to put a readme.txt or similar in there to describe what the folder is for. Perhaps we could provide a simple snippet about setting heap options in there as an example. That way we can also make it clear that filenames are irrelevant.", "author": "mark-vieira", "createdAt": "2020-02-04T21:02:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2NDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA3MTI2OA==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r376071268", "bodyText": "I'd rather not duplicate the documentation, our syntax is our own and users need to consult the documentation to understand it.", "author": "jasontedor", "createdAt": "2020-02-06T20:43:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2NDc5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2Njk3OA==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r374866978", "bodyText": "This last sentence seems to be contradicting itself. Do we use lexicographic order, or is this non-deterministic? Lexicographic order is pretty strictly defined. If we are just iterating over a directory list (which it seems we are) then we shouldn't imply any kind of ordering guarantees. FWIW, it would be trivial for us to actually perform a sort here, which would allow folks to do stuff like 10_options and 00_options for layering overrides in a reliable way.", "author": "mark-vieira", "createdAt": "2020-02-04T19:10:42Z", "path": "docs/reference/setup/jvm-options.asciidoc", "diffHunk": "@@ -5,14 +5,21 @@ You should rarely need to change Java Virtual Machine (JVM) options. If you do,\n the most likely change is setting the <<heap-size,heap size>>. The remainder of\n this document explains in detail how to set JVM options.\n \n-The preferred method of setting JVM options (including system properties and JVM\n-flags) is via the `jvm.options` configuration file. The default location of this\n-file is `config/jvm.options` (when installing from the tar or zip distributions)\n-and `/etc/elasticsearch/jvm.options` (when installing from the Debian or RPM\n-packages).\n+The preferred method of setting or overriding JVM options (including system\n+properties and JVM flags) is via custom JVM options files. The root\n+`jvm.options` configuration file is `config/jvm.options` and custom JVM options\n+files can be added to `config/jvm.options.d/` (when installing from the tar or\n+zip distributions), and `/etc/elasticsearch/jvm.options` and custom JVM options\n+files can be added to `/etc/elasticsearch/jvm.options.d/` (when installing from\n+the Debian or RPM packages). When using the\n+<<docker, Docker distribution of {es}>> you can bind mount these files into\n+`/usr/share/elasticsearch/config/jvm.options.d/`. You should never need to\n+modify the root `jvm.options` file instead preferring to use custom JVM options\n+files. Custom JVM options files are processed in lexicographic order (although", "originalCommit": "98a315c97ee01a765d0880b1b9d7ea207d0bac91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4MDEyMw==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r374880123", "bodyText": "We do sort them, see https://github.com/elastic/elasticsearch/pull/51882/files#diff-38516abb6f177c355f29699955e7e60eR68 in the implementation. However, this relies on the Path#compareTo implementation which explicitly says:\n     * Compares two abstract paths lexicographically. The ordering defined by\n     * this method is provider specific, and in the case of the default\n     * provider, platform specific. This method does not access the file system\n     * and neither file is required to exist.\n\n\"Provider\" here refers to the filesystem provider. I am assuming (but did not investigate) this enables to account for odd sorting behavior such as on Windows via StrCmpLogicalW which sorts filenames by like f-1, f-2, f-10 in the order f-1, f-2, f-10 instead of f-1, f-10, f-2.", "author": "jasontedor", "createdAt": "2020-02-04T19:36:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2Njk3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkxOTgzNg==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r374919836", "bodyText": "I'm inclined to say that if this differs across providers we should even mention that it's lexicographic or not, or even perform the sort for that matter. If we do want to order, we should use a JDK implementation that isn't filesystem dependent, such as simply doing a String ordering using the filename. Which I think is effectively going to be what you described in your example.", "author": "mark-vieira", "createdAt": "2020-02-04T21:00:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2Njk3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2Nzg4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r374867889", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            JVM options files contains line-delimited list of JVM arguments following a\n          \n          \n            \n            JVM options files contain a line-delimited list of JVM arguments following a", "author": "mark-vieira", "createdAt": "2020-02-04T19:12:26Z", "path": "docs/reference/setup/jvm-options.asciidoc", "diffHunk": "@@ -5,14 +5,21 @@ You should rarely need to change Java Virtual Machine (JVM) options. If you do,\n the most likely change is setting the <<heap-size,heap size>>. The remainder of\n this document explains in detail how to set JVM options.\n \n-The preferred method of setting JVM options (including system properties and JVM\n-flags) is via the `jvm.options` configuration file. The default location of this\n-file is `config/jvm.options` (when installing from the tar or zip distributions)\n-and `/etc/elasticsearch/jvm.options` (when installing from the Debian or RPM\n-packages).\n+The preferred method of setting or overriding JVM options (including system\n+properties and JVM flags) is via custom JVM options files. The root\n+`jvm.options` configuration file is `config/jvm.options` and custom JVM options\n+files can be added to `config/jvm.options.d/` (when installing from the tar or\n+zip distributions), and `/etc/elasticsearch/jvm.options` and custom JVM options\n+files can be added to `/etc/elasticsearch/jvm.options.d/` (when installing from\n+the Debian or RPM packages). When using the\n+<<docker, Docker distribution of {es}>> you can bind mount these files into\n+`/usr/share/elasticsearch/config/jvm.options.d/`. You should never need to\n+modify the root `jvm.options` file instead preferring to use custom JVM options\n+files. Custom JVM options files are processed in lexicographic order (although\n+the ordering is filesystem and platform specific).\n \n-This file contains a line-delimited list of JVM arguments following\n-a special syntax:\n+JVM options files contains line-delimited list of JVM arguments following a", "originalCommit": "98a315c97ee01a765d0880b1b9d7ea207d0bac91", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "50b7090ac13b2b2046f481710e9076b63502a8e5", "url": "https://github.com/elastic/elasticsearch/commit/50b7090ac13b2b2046f481710e9076b63502a8e5", "message": "Fix javadoc", "committedDate": "2020-02-04T19:41:25Z", "type": "commit"}, {"oid": "ef7c11ceb982bb0e938dd8617db64fda50f29308", "url": "https://github.com/elastic/elasticsearch/commit/ef7c11ceb982bb0e938dd8617db64fda50f29308", "message": "Update heap size docs", "committedDate": "2020-02-04T19:46:26Z", "type": "commit"}, {"oid": "72c2ceb0ecc43ed14ec7b6f1b052a796841b96c7", "url": "https://github.com/elastic/elasticsearch/commit/72c2ceb0ecc43ed14ec7b6f1b052a796841b96c7", "message": "Update docs/reference/setup/jvm-options.asciidoc\n\nCo-Authored-By: Mark Vieira <portugee@gmail.com>", "committedDate": "2020-02-04T19:50:00Z", "type": "commit"}, {"oid": "e609aaddb87bd3cfdfc0639e6a2fbff9f29ed9ce", "url": "https://github.com/elastic/elasticsearch/commit/e609aaddb87bd3cfdfc0639e6a2fbff9f29ed9ce", "message": "Fix imports", "committedDate": "2020-02-04T20:03:54Z", "type": "commit"}, {"oid": "57e29ecda23c12b907173394ef01ec113e35e07a", "url": "https://github.com/elastic/elasticsearch/commit/57e29ecda23c12b907173394ef01ec113e35e07a", "message": "Merge branch 'master' into jvm.options.d", "committedDate": "2020-02-04T20:18:14Z", "type": "commit"}, {"oid": "7c5da0a46a18cf65ce0a4ece2d711ae123a819c2", "url": "https://github.com/elastic/elasticsearch/commit/7c5da0a46a18cf65ce0a4ece2d711ae123a819c2", "message": "Create jvm.options.d in Docker image", "committedDate": "2020-02-05T00:20:39Z", "type": "commit"}, {"oid": "7d4f1511b05f61cb5dc67e938544baaabb79caf7", "url": "https://github.com/elastic/elasticsearch/commit/7d4f1511b05f61cb5dc67e938544baaabb79caf7", "message": "Do not require existence", "committedDate": "2020-02-05T00:20:40Z", "type": "commit"}, {"oid": "d388d85283d13c01108a749b035dd088f98b4f63", "url": "https://github.com/elastic/elasticsearch/commit/d388d85283d13c01108a749b035dd088f98b4f63", "message": "Merge branch 'master' into jvm.options.d", "committedDate": "2020-02-06T02:07:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1MjQzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r375752431", "bodyText": "I found this a little hard to grok, so I whipped up a non-stream version, just FYI.\nfinal List<Path> jvmOptionsFiles = new ArrayList<>();\njvmOptionsFiles.add(Paths.get(args[0], \"jvm.options\"));\n\nfinal File jvmOptionsDirectory = Paths.get(args[0], \"jvm.options.d\").toFile();\nif (jvmOptionsDirectory.isDirectory()) {\n    final File[] files = jvmOptionsDirectory.listFiles();\n    Arrays.sort(files, Comparator.comparing(File::getName));\n\n    for (File file : files) {\n        jvmOptionsFiles.add(file.toPath());\n    }\n}", "author": "pugnascotia", "createdAt": "2020-02-06T10:25:27Z", "path": "distribution/tools/launchers/src/main/java/org/elasticsearch/tools/launchers/JvmOptionsParser.java", "diffHunk": "@@ -53,82 +55,88 @@\n      * The main entry point. The exit code is 0 if the JVM options were successfully parsed, otherwise the exit code is 1. If an improperly\n      * formatted line is discovered, the line is output to standard error.\n      *\n-     * @param args the args to the program which should consist of a single option, the path to the JVM options\n+     * @param args the args to the program which should consist of a single option, the path to ES_PATH_CONF\n      */\n     public static void main(final String[] args) throws InterruptedException, IOException {\n         if (args.length != 1) {\n-            throw new IllegalArgumentException(\"expected one argument specifying path to jvm.options but was \" + Arrays.toString(args));\n+            throw new IllegalArgumentException(\"expected one argument specifying path to ES_PATH_CONF but was \" + Arrays.toString(args));\n         }\n+\n+        final Stream<Path> jvmOptionsFiles;", "originalCommit": "d388d85283d13c01108a749b035dd088f98b4f63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA2OTk5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r376069995", "bodyText": "Okay I pushed something else, what do you think now?", "author": "jasontedor", "createdAt": "2020-02-06T20:40:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1MjQzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1MjgzNA==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r375752834", "bodyText": "Should we files the files e.g. only include those ending with .options? Then we'd filter out any backup files, text files etc.", "author": "pugnascotia", "createdAt": "2020-02-06T10:26:05Z", "path": "distribution/tools/launchers/src/main/java/org/elasticsearch/tools/launchers/JvmOptionsParser.java", "diffHunk": "@@ -53,82 +55,88 @@\n      * The main entry point. The exit code is 0 if the JVM options were successfully parsed, otherwise the exit code is 1. If an improperly\n      * formatted line is discovered, the line is output to standard error.\n      *\n-     * @param args the args to the program which should consist of a single option, the path to the JVM options\n+     * @param args the args to the program which should consist of a single option, the path to ES_PATH_CONF\n      */\n     public static void main(final String[] args) throws InterruptedException, IOException {\n         if (args.length != 1) {\n-            throw new IllegalArgumentException(\"expected one argument specifying path to jvm.options but was \" + Arrays.toString(args));\n+            throw new IllegalArgumentException(\"expected one argument specifying path to ES_PATH_CONF but was \" + Arrays.toString(args));\n         }\n+\n+        final Stream<Path> jvmOptionsFiles;\n+        final Path rootJvmOptions = Paths.get(args[0], \"jvm.options\");\n+        final Path jvmOptionsDirectory = Paths.get(args[0], \"jvm.options.d\");\n+        if (Files.isDirectory(jvmOptionsDirectory)) {\n+            final Stream<Path> jvmOptionsDirectoryFiles = Files.list(Paths.get(args[0], \"jvm.options.d\"));", "originalCommit": "d388d85283d13c01108a749b035dd088f98b4f63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA3MDA3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r376070077", "bodyText": "I incorporated this idea.", "author": "jasontedor", "createdAt": "2020-02-06T20:40:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1MjgzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1Mzg0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r375753846", "bodyText": "Similar to the other discussion in this PR, maybe we should use a different name here so that users don't think that heap.options is a special name?", "author": "pugnascotia", "createdAt": "2020-02-06T10:28:09Z", "path": "docs/reference/setup/important-settings/heap-size.asciidoc", "diffHunk": "@@ -49,7 +49,8 @@ caches, but the less memory it leaves available for the operating system to use\n for the filesystem cache. Also, larger heaps can cause longer garbage\n collection pauses.\n \n-Here are examples of how to set the heap size via the jvm.options file:\n+Here are examples of how to set the heap size via a `jvm.options.d/heap.options`", "originalCommit": "d388d85283d13c01108a749b035dd088f98b4f63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA1MDQ0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r376050445", "bodyText": "I removed the explicit filename.", "author": "jasontedor", "createdAt": "2020-02-06T19:57:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1Mzg0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1NTE0OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r375755149", "bodyText": "The repetition of custom bothers me here...but I'm struggling to think of something better. Maybe the writers can help.", "author": "pugnascotia", "createdAt": "2020-02-06T10:30:48Z", "path": "docs/reference/setup/jvm-options.asciidoc", "diffHunk": "@@ -58,8 +65,8 @@ a special syntax:\n \n * all other lines are rejected\n \n-You can add custom JVM flags to this file and check this configuration into your\n-version control system.\n+You can add custom JVM flags to custom JVM options files and check these", "originalCommit": "d388d85283d13c01108a749b035dd088f98b4f63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0OTU5OA==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r376049598", "bodyText": "I removed the line, I don't think it adds anything useful to the docs.", "author": "jasontedor", "createdAt": "2020-02-06T19:55:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1NTE0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1NjYyOA==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r375756628", "bodyText": "Nit - I'd use a static import of Matchers, personally.", "author": "pugnascotia", "createdAt": "2020-02-06T10:33:40Z", "path": "qa/os/src/test/java/org/elasticsearch/packaging/test/PackageTests.java", "diffHunk": "@@ -298,7 +299,23 @@ public void test81CustomPathConfAndJvmOptions() throws Exception {\n         });\n     }\n \n-    public void test82SystemdMask() throws Exception {\n+    public void test82CustomJvmOptionsDirectoryFile() throws Exception {\n+        final Path heapOptions = installation.config(Paths.get(\"jvm.options.d\", \"heap.options\"));\n+        try {\n+            append(heapOptions, \"-Xms512m\\n-Xmx512m\\n\");\n+\n+            startElasticsearch();\n+\n+            final String nodesResponse = makeRequest(Request.Get(\"http://localhost:9200/_nodes\"));\n+            assertThat(nodesResponse, CoreMatchers.containsString(\"\\\"heap_init_in_bytes\\\":536870912\"));", "originalCommit": "d388d85283d13c01108a749b035dd088f98b4f63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0NzAzNg==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r376047036", "bodyText": "I pushed 3a2bf7b.", "author": "jasontedor", "createdAt": "2020-02-06T19:50:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1NjYyOA=="}], "type": "inlineReview"}, {"oid": "454a8996a026e1cab908e832f3d457788e9fc4bd", "url": "https://github.com/elastic/elasticsearch/commit/454a8996a026e1cab908e832f3d457788e9fc4bd", "message": "Merge branch 'master' into jvm.options.d", "committedDate": "2020-02-06T19:48:56Z", "type": "commit"}, {"oid": "5738f7187183830519c7c0a01dbc61b8f02e1104", "url": "https://github.com/elastic/elasticsearch/commit/5738f7187183830519c7c0a01dbc61b8f02e1104", "message": "Update Docker docs", "committedDate": "2020-02-06T19:49:03Z", "type": "commit"}, {"oid": "3a2bf7bb82895991d8cb0c66304938bcccc47b72", "url": "https://github.com/elastic/elasticsearch/commit/3a2bf7bb82895991d8cb0c66304938bcccc47b72", "message": "Fix static import", "committedDate": "2020-02-06T19:49:07Z", "type": "commit"}, {"oid": "ccb522c395c85003b3d5cdce9682520e489bf4e7", "url": "https://github.com/elastic/elasticsearch/commit/ccb522c395c85003b3d5cdce9682520e489bf4e7", "message": "Cleanup docs", "committedDate": "2020-02-06T19:56:31Z", "type": "commit"}, {"oid": "e0b1f324be71ef61e97ed70a06a38bc0bfe6dd20", "url": "https://github.com/elastic/elasticsearch/commit/e0b1f324be71ef61e97ed70a06a38bc0bfe6dd20", "message": "Remove filename", "committedDate": "2020-02-06T19:57:38Z", "type": "commit"}, {"oid": "fa13f953fda1b0f9f609af1133cae99cafdd8e10", "url": "https://github.com/elastic/elasticsearch/commit/fa13f953fda1b0f9f609af1133cae99cafdd8e10", "message": "Simplify and require .options", "committedDate": "2020-02-06T20:16:33Z", "type": "commit"}, {"oid": "0bc68bd81d4c07f02425db61c03db92aeb9b03c9", "url": "https://github.com/elastic/elasticsearch/commit/0bc68bd81d4c07f02425db61c03db92aeb9b03c9", "message": "Remove lexicographic processing", "committedDate": "2020-02-06T20:16:53Z", "type": "commit"}, {"oid": "6695f7563464f132984afb57266a0a23ea6d9bf6", "url": "https://github.com/elastic/elasticsearch/commit/6695f7563464f132984afb57266a0a23ea6d9bf6", "message": "Unspecified processing order", "committedDate": "2020-02-06T20:22:20Z", "type": "commit"}, {"oid": "e5ea0c397edfa45b5d8486dc2eeecef1ae7ad4d8", "url": "https://github.com/elastic/elasticsearch/commit/e5ea0c397edfa45b5d8486dc2eeecef1ae7ad4d8", "message": "Now sort", "committedDate": "2020-02-06T20:26:59Z", "type": "commit"}, {"oid": "5b2c725e009568b080c03b12248ff56d780313fb", "url": "https://github.com/elastic/elasticsearch/commit/5b2c725e009568b080c03b12248ff56d780313fb", "message": "Cleanup", "committedDate": "2020-02-06T20:36:47Z", "type": "commit"}, {"oid": "886b1a2fb3d1111c2e2e211e2b3c6c8cd6eaee9c", "url": "https://github.com/elastic/elasticsearch/commit/886b1a2fb3d1111c2e2e211e2b3c6c8cd6eaee9c", "message": "Formatting", "committedDate": "2020-02-06T21:20:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5ODk5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r376298997", "bodyText": "What do you think about adding a third file, e.g. third.options.disabled, to prove that files have to end with .options? Up to you.", "author": "pugnascotia", "createdAt": "2020-02-07T09:43:46Z", "path": "qa/os/src/test/java/org/elasticsearch/packaging/test/ArchiveTests.java", "diffHunk": "@@ -251,6 +251,46 @@ public void test70CustomPathConfAndJvmOptions() throws Exception {\n         }\n     }\n \n+    public void test71CustomJvmOptionsDirectoryFile() throws Exception {\n+        final Path heapOptions = installation.config(Paths.get(\"jvm.options.d\", \"heap.options\"));\n+        try {\n+            append(heapOptions, \"-Xms512m\\n-Xmx512m\\n\");\n+\n+            startElasticsearch();\n+\n+            final String nodesResponse = makeRequest(Request.Get(\"http://localhost:9200/_nodes\"));\n+            assertThat(nodesResponse, containsString(\"\\\"heap_init_in_bytes\\\":536870912\"));\n+\n+            stopElasticsearch();\n+        } finally {\n+            rm(heapOptions);\n+        }\n+    }\n+\n+    public void test72CustomJvmOptionsDirectoryFilesAreProcessedInSortedOrder() throws Exception {\n+        final Path firstOptions = installation.config(Paths.get(\"jvm.options.d\", \"first.options\"));\n+        final Path secondOptions = installation.config(Paths.get(\"jvm.options.d\", \"second.options\"));", "originalCommit": "886b1a2fb3d1111c2e2e211e2b3c6c8cd6eaee9c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM5NTc1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/51882#discussion_r376395759", "bodyText": "I pushed a test for this.", "author": "jasontedor", "createdAt": "2020-02-07T13:43:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5ODk5Nw=="}], "type": "inlineReview"}, {"oid": "53e7073c7154151c880a41a7e9f751f75feb5d04", "url": "https://github.com/elastic/elasticsearch/commit/53e7073c7154151c880a41a7e9f751f75feb5d04", "message": "Merge branch 'master' into jvm.options.d", "committedDate": "2020-02-07T12:35:08Z", "type": "commit"}, {"oid": "34dc1d7b78bcdd7e33388687fa5d5307f0ae2910", "url": "https://github.com/elastic/elasticsearch/commit/34dc1d7b78bcdd7e33388687fa5d5307f0ae2910", "message": "Add test, fix permissions?", "committedDate": "2020-02-07T13:02:03Z", "type": "commit"}, {"oid": "e2fe7fc645d8c292605062d9f6a004d3544e4463", "url": "https://github.com/elastic/elasticsearch/commit/e2fe7fc645d8c292605062d9f6a004d3544e4463", "message": "Add permissions check", "committedDate": "2020-02-07T13:07:05Z", "type": "commit"}, {"oid": "397727567ee1eedce6a70b7e4cdcd913cf972ff2", "url": "https://github.com/elastic/elasticsearch/commit/397727567ee1eedce6a70b7e4cdcd913cf972ff2", "message": "Fix lintian", "committedDate": "2020-02-07T15:41:49Z", "type": "commit"}, {"oid": "c7e8cca1c8e47a0d019d433a541f552174ff467f", "url": "https://github.com/elastic/elasticsearch/commit/c7e8cca1c8e47a0d019d433a541f552174ff467f", "message": "Fix ordering of test", "committedDate": "2020-02-07T15:51:04Z", "type": "commit"}, {"oid": "69d8c31657f02af1931e9b8e6675030309993472", "url": "https://github.com/elastic/elasticsearch/commit/69d8c31657f02af1931e9b8e6675030309993472", "message": "Fix some tests", "committedDate": "2020-02-07T17:04:55Z", "type": "commit"}, {"oid": "70a0e6c896ecb84c47492697b28f8ee884a5f87a", "url": "https://github.com/elastic/elasticsearch/commit/70a0e6c896ecb84c47492697b28f8ee884a5f87a", "message": "Merge branch 'master' into jvm.options.d", "committedDate": "2020-02-08T02:48:33Z", "type": "commit"}, {"oid": "7fd24a3049ddf27307c211474ae33da2c9e05667", "url": "https://github.com/elastic/elasticsearch/commit/7fd24a3049ddf27307c211474ae33da2c9e05667", "message": "Merge branch 'master' into jvm.options.d", "committedDate": "2020-02-08T17:13:20Z", "type": "commit"}, {"oid": "7f02018d0485c5675eacbe287545d131442ca329", "url": "https://github.com/elastic/elasticsearch/commit/7f02018d0485c5675eacbe287545d131442ca329", "message": "Update jvm.options.d config file packaging", "committedDate": "2020-02-08T19:27:06Z", "type": "commit"}, {"oid": "9a0bb16abee5c3fc85507cbd2a735db2c1175c3f", "url": "https://github.com/elastic/elasticsearch/commit/9a0bb16abee5c3fc85507cbd2a735db2c1175c3f", "message": "Properly purge on Debian", "committedDate": "2020-02-08T20:40:27Z", "type": "commit"}]}