{"pr_number": 8705, "pr_title": "KAFKA-10029; Don't update completedReceives when channels are closed to avoid ConcurrentModificationException", "pr_createdAt": "2020-05-21T10:57:26Z", "pr_url": "https://github.com/apache/kafka/pull/8705", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwMDMyMw==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r429100323", "bodyText": "isUncaught is used by testing only so it is a bit awkward to production code. Could you check the errorMessage instead of adding new argument? for example:\nif (errorMessage == \"Processor got uncaught exception.\") uncaughtExceptions += 1", "author": "chia7712", "createdAt": "2020-05-22T08:00:01Z", "path": "core/src/test/scala/unit/kafka/network/SocketServerTest.scala", "diffHunk": "@@ -1742,6 +1746,12 @@ class SocketServerTest {\n            selector = Some(testableSelector)\n            testableSelector\n         }\n+\n+        override private[network] def processException(errorMessage: String, throwable: Throwable, isUncaught: Boolean): Unit = {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5OTUyOQ==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r430299529", "bodyText": "Funny you should say that, I was initially checking the error message and then felt that the test wouldn't fail if the error message was changed. But since then I had also updated the test which triggers the uncaught exception code path, so it is actually safe now to check the error message. Have updated the code.", "author": "rajinisivaram", "createdAt": "2020-05-26T10:04:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwMDMyMw=="}], "type": "inlineReview"}, {"oid": "74107fa9be8f2f4008dcca20e2db91c53519e2fa", "url": "https://github.com/apache/kafka/commit/74107fa9be8f2f4008dcca20e2db91c53519e2fa", "message": "KAFKA-10029; Don't update completedReceives when channels are closed to avoid ConcurrentModificationException", "committedDate": "2020-05-26T09:57:40Z", "type": "commit"}, {"oid": "09589be517c2e9ecc912c1e2fd8d17eeda433365", "url": "https://github.com/apache/kafka/commit/09589be517c2e9ecc912c1e2fd8d17eeda433365", "message": "Address review comments", "committedDate": "2020-05-26T09:57:40Z", "type": "commit"}, {"oid": "09589be517c2e9ecc912c1e2fd8d17eeda433365", "url": "https://github.com/apache/kafka/commit/09589be517c2e9ecc912c1e2fd8d17eeda433365", "message": "Address review comments", "committedDate": "2020-05-26T09:57:40Z", "type": "forcePushed"}, {"oid": "64f84b3e7b72c2cb2c21987cecabb04d6d22ddee", "url": "https://github.com/apache/kafka/commit/64f84b3e7b72c2cb2c21987cecabb04d6d22ddee", "message": "Address review comments", "committedDate": "2020-05-27T15:56:49Z", "type": "commit"}, {"oid": "8cbe30e0cb4d17d8f4ccb2e1721e1f6527e7be87", "url": "https://github.com/apache/kafka/commit/8cbe30e0cb4d17d8f4ccb2e1721e1f6527e7be87", "message": "Address review comment", "committedDate": "2020-05-27T16:04:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MTUwOA==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r431581508", "bodyText": "Can we add a comment explaining what we're trying to do here? It's not clear why we do (for example):\ncachedCompletedSends.update(super.completedSends.asScala) followed by\ncachedCompletedSends.currentPollValues.foreach(super.completedSends.add)", "author": "ijuma", "createdAt": "2020-05-28T04:57:56Z", "path": "core/src/test/scala/unit/kafka/network/SocketServerTest.scala", "diffHunk": "@@ -1875,6 +1889,14 @@ class SocketServerTest {\n         cachedCompletedReceives.update(super.completedReceives.asScala.toBuffer)\n         cachedCompletedSends.update(super.completedSends.asScala)\n         cachedDisconnected.update(super.disconnected.asScala.toBuffer)\n+\n+        val map: util.Map[String, NetworkReceive] = JTestUtils.fieldValue(this, classOf[Selector], \"completedReceives\")\n+        cachedCompletedReceives.currentPollValues.foreach { receive =>\n+          val channelOpt = Option(super.channel(receive.source)).orElse(Option(super.closingChannel(receive.source)))\n+          channelOpt.foreach { channel => map.put(channel.id, receive) }\n+        }\n+        cachedCompletedSends.currentPollValues.foreach(super.completedSends.add)\n+        cachedDisconnected.currentPollValues.foreach { case (id, state) => super.disconnected.put(id, state) }", "originalCommit": "8cbe30e0cb4d17d8f4ccb2e1721e1f6527e7be87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY5NzM3MQ==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r431697371", "bodyText": "I have moved the second line that updates current result into update(). They were done separately because each type uses slightly different format, but it is clearer if they are together. Added comments as well.", "author": "rajinisivaram", "createdAt": "2020-05-28T09:18:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MTUwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MTc2Mw==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r431581763", "bodyText": "What is the goal of this?", "author": "ijuma", "createdAt": "2020-05-28T04:59:04Z", "path": "core/src/test/scala/unit/kafka/network/SocketServerTest.scala", "diffHunk": "@@ -1807,6 +1817,7 @@ class SocketServerTest {\n           currentPollValues ++= newValues\n         } else\n           deferredValues ++= newValues\n+        newValues.clear()", "originalCommit": "8cbe30e0cb4d17d8f4ccb2e1721e1f6527e7be87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY5ODQxMw==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r431698413", "bodyText": "We return minPerPoll results together, so the current values are cleared and then populated as necessary. The code is now in the same place, so hopefully that is clearer.", "author": "rajinisivaram", "createdAt": "2020-05-28T09:20:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MTc2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyMTczNw==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r431821737", "bodyText": "The reason I was asking is that we call toBuffer before calling this method for a couple of cases. That will basically create a copy, so then this clear won't do anything useful?", "author": "ijuma", "createdAt": "2020-05-28T13:10:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MTc2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2MjY0Mw==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r431862643", "bodyText": "ah, I refactored a bit to clear the original buffer in each case.", "author": "rajinisivaram", "createdAt": "2020-05-28T14:07:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MTc2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MzEyNw==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r431583127", "bodyText": "Nit: maybe after all results have been processed is a bit redundant? Same for the clearCompletedSends docs.", "author": "ijuma", "createdAt": "2020-05-28T05:04:53Z", "path": "clients/src/main/java/org/apache/kafka/common/network/Selector.java", "diffHunk": "@@ -804,7 +804,33 @@ private void maybeCloseOldestConnection(long currentTimeNanos) {\n     }\n \n     /**\n-     * Clear the results from the prior poll\n+     * Clears completed receives. This is used by SocketServer to remove references to\n+     * receive buffers after processing completed receives, without waiting for the next\n+     * poll() after all results have been processed.", "originalCommit": "8cbe30e0cb4d17d8f4ccb2e1721e1f6527e7be87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a44db9437a46560e1f1f56cec036d69a2357bbe1", "url": "https://github.com/apache/kafka/commit/a44db9437a46560e1f1f56cec036d69a2357bbe1", "message": "Address review comments", "committedDate": "2020-05-28T09:16:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyMjQwNg==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r431822406", "bodyText": "Should we call this completedReceivesMap or something?", "author": "ijuma", "createdAt": "2020-05-28T13:11:00Z", "path": "core/src/test/scala/unit/kafka/network/SocketServerTest.scala", "diffHunk": "@@ -1861,20 +1872,33 @@ class SocketServerTest {\n \n     override def poll(timeout: Long): Unit = {\n       try {\n+        assertEquals(0, super.completedReceives().size)\n+        assertEquals(0, super.completedSends().size)\n+\n         pollCallback.apply()\n         while (!pendingClosingChannels.isEmpty) {\n           makeClosing(pendingClosingChannels.poll())\n         }\n-        allCachedPollData.foreach(_.reset)\n         runOp(SelectorOperation.Poll, None) {\n           super.poll(pollTimeoutOverride.getOrElse(timeout))\n         }\n       } finally {\n         super.channels.forEach(allChannels += _.id)\n         allDisconnectedChannels ++= super.disconnected.asScala.keys\n-        cachedCompletedReceives.update(super.completedReceives.asScala.toBuffer)\n-        cachedCompletedSends.update(super.completedSends.asScala)\n-        cachedDisconnected.update(super.disconnected.asScala.toBuffer)\n+\n+        val map: util.Map[String, NetworkReceive] = JTestUtils.fieldValue(this, classOf[Selector], \"completedReceives\")", "originalCommit": "a44db9437a46560e1f1f56cec036d69a2357bbe1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2MjkzMQ==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r431862931", "bodyText": "@ijuma Thanks for the review, updated.", "author": "rajinisivaram", "createdAt": "2020-05-28T14:07:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyMjQwNg=="}], "type": "inlineReview"}, {"oid": "ceace47a433b930570018f256d69a9348653c5ed", "url": "https://github.com/apache/kafka/commit/ceace47a433b930570018f256d69a9348653c5ed", "message": "Address review comment", "committedDate": "2020-05-28T13:16:37Z", "type": "commit"}, {"oid": "d572d8e2cb7cf0c3d7fb40e923b6e9579845555a", "url": "https://github.com/apache/kafka/commit/d572d8e2cb7cf0c3d7fb40e923b6e9579845555a", "message": "Address review comments", "committedDate": "2020-05-28T14:04:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwOTI4Mw==", "url": "https://github.com/apache/kafka/pull/8705#discussion_r432209283", "bodyText": "I think your refactoring has added the comments to other places. Maybe we can add \"This allows tests to process minPerPoll elements as the results of a single poll iteration\" to the update method and remove this?", "author": "ijuma", "createdAt": "2020-05-29T01:29:03Z", "path": "core/src/test/scala/unit/kafka/network/SocketServerTest.scala", "diffHunk": "@@ -1886,19 +1926,13 @@ class SocketServerTest {\n         super.channels.forEach(allChannels += _.id)\n         allDisconnectedChannels ++= super.disconnected.asScala.keys\n \n-        val completedReceivesMap: util.Map[String, NetworkReceive] = JTestUtils.fieldValue(this, classOf[Selector], \"completedReceives\")\n-        def addToCompletedReceives(receive: NetworkReceive): Unit = {\n-          val channelOpt = Option(super.channel(receive.source)).orElse(Option(super.closingChannel(receive.source)))\n-          channelOpt.foreach { channel => completedReceivesMap.put(channel.id, receive) }\n-        }\n-\n         // For each result type (completedReceives/completedSends/disconnected), defer the result to a subsequent poll()\n         // if `minPerPoll` results are not yet available. When sufficient results are available, all available results\n         // including previously deferred results are returned. This allows tests to process `minPerPoll` elements as the\n         // results of a single poll iteration.", "originalCommit": "d572d8e2cb7cf0c3d7fb40e923b6e9579845555a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e605e29f4452aa6bfe1eb077e9af93ac3e57d7a8", "url": "https://github.com/apache/kafka/commit/e605e29f4452aa6bfe1eb077e9af93ac3e57d7a8", "message": "Address review comment", "committedDate": "2020-05-29T08:08:32Z", "type": "commit"}]}