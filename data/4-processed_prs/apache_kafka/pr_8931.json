{"pr_number": 8931, "pr_title": "MINOR: Update Scala to 2.13.3", "pr_createdAt": "2020-06-25T22:58:25Z", "pr_url": "https://github.com/apache/kafka/pull/8931", "timeline": [{"oid": "2f926a380efe3a58379299f81881928994e27608", "url": "https://github.com/apache/kafka/commit/2f926a380efe3a58379299f81881928994e27608", "message": "MINOR: Update Scala to 2.13.3", "committedDate": "2020-06-25T22:54:20Z", "type": "commit"}, {"oid": "5cd67f5d20af0cffb62f75c21ba2ee4136431f4c", "url": "https://github.com/apache/kafka/commit/5cd67f5d20af0cffb62f75c21ba2ee4136431f4c", "message": "Only enable Xlint:nullary-override for Scala 2.12", "committedDate": "2020-06-26T02:45:17Z", "type": "commit"}, {"oid": "bc0e1294880f39e726f68334e1e09c7c0fc06c0d", "url": "https://github.com/apache/kafka/commit/bc0e1294880f39e726f68334e1e09c7c0fc06c0d", "message": "Compilation fixes", "committedDate": "2020-06-26T02:46:13Z", "type": "commit"}, {"oid": "ee86c0a8906920e3872720b567d1976d125830dc", "url": "https://github.com/apache/kafka/commit/ee86c0a8906920e3872720b567d1976d125830dc", "message": "More compiler error fixes", "committedDate": "2020-06-26T03:38:51Z", "type": "commit"}, {"oid": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b", "url": "https://github.com/apache/kafka/commit/261ab95d14bbc7d88b6d57f5ad291351eed91e0b", "message": "More fixes", "committedDate": "2020-06-26T03:40:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NTg1OA==", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446145858", "bodyText": "This avoids the tuple creation.", "author": "ijuma", "createdAt": "2020-06-26T12:12:43Z", "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "diffHunk": "@@ -548,9 +550,9 @@ class AclAuthorizer extends Authorizer with Logging {\n \n   private def updateCache(resource: ResourcePattern, versionedAcls: VersionedAcls): Unit = {\n     if (versionedAcls.acls.nonEmpty) {\n-      aclCache = aclCache + (resource -> versionedAcls)\n+      aclCache = aclCache.updated(resource, versionedAcls)", "originalCommit": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NjQxNg==", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446146416", "bodyText": "The behavior of & was changed so that both conditions have to evaluate to true for a warning to match the exclusion.", "author": "ijuma", "createdAt": "2020-06-26T12:14:02Z", "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "diffHunk": "@@ -367,7 +367,8 @@ class AclAuthorizer extends Authorizer with Logging {\n     } else false\n   }\n \n-  @nowarn(\"cat=deprecation&cat=optimizer\")\n+  @nowarn(\"cat=deprecation\")\n+  @nowarn(\"cat=optimizer\")", "originalCommit": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NjY0Mw==", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446146643", "bodyText": "New warning flagged by the compiler.", "author": "ijuma", "createdAt": "2020-06-26T12:14:33Z", "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "diffHunk": "@@ -538,6 +539,7 @@ class AclAuthorizer extends Authorizer with Logging {\n     }\n   }\n \n+  @nowarn(\"cat=optimizer\")", "originalCommit": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0Njc0MQ==", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446146741", "bodyText": "New warning flagged by the compiler.", "author": "ijuma", "createdAt": "2020-06-26T12:14:51Z", "path": "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala", "diffHunk": "@@ -566,6 +568,7 @@ object ConsumerGroupCommand extends Logging {\n     /**\n       * Returns the state of the specified consumer group and partition assignment states\n       */\n+    @nowarn(\"cat=optimizer\")", "originalCommit": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NzQzNg==", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446147436", "bodyText": "toBuffer is more efficient than toList and sorted returns a copy anyway.", "author": "ijuma", "createdAt": "2020-06-26T12:16:21Z", "path": "core/src/main/scala/kafka/server/KafkaConfig.scala", "diffHunk": "@@ -1210,7 +1210,7 @@ object KafkaConfig {\n       .define(PasswordEncoderIterationsProp, INT, Defaults.PasswordEncoderIterations, atLeast(1024), LOW, PasswordEncoderIterationsDoc)\n   }\n \n-  def configNames() = configDef.names().asScala.toList.sorted\n+  def configNames: Seq[String] = configDef.names.asScala.toBuffer.sorted", "originalCommit": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0Nzg3NA==", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446147874", "bodyText": "It doesn't make sense to deprecate a method in an internal class that is still needed by our code. Removed the deprecation of various KafkaZkClient classes. cc @stanislavkozlovski", "author": "ijuma", "createdAt": "2020-06-26T12:17:22Z", "path": "core/src/main/scala/kafka/zk/KafkaZkClient.scala", "diffHunk": "@@ -810,10 +810,8 @@ class KafkaZkClient private[zk] (zooKeeperClient: ZooKeeperClient, isSecure: Boo\n   /**\n    * Returns all reassignments.\n    * @return the reassignments for each partition.\n-   * @deprecated Use the PartitionReassignment Kafka API instead\n    */\n-  @Deprecated", "originalCommit": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}