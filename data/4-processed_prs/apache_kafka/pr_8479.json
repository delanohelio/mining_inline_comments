{"pr_number": 8479, "pr_title": "KAFKA-9769: Finish operations for leaderEpoch-updated partitions up to point ZK Exception", "pr_createdAt": "2020-04-14T02:38:36Z", "pr_url": "https://github.com/apache/kafka/pull/8479", "timeline": [{"oid": "45378cdbd53f05ff4b7fb4106570d1c3a7da13c3", "url": "https://github.com/apache/kafka/commit/45378cdbd53f05ff4b7fb4106570d1c3a7da13c3", "message": "Finish operations for leaderEpoch-updated partitions up to point ZK exception occurs\n\n1 - Remove fetchers for partitions whose leader epoch is updated.\n2 - Finish delayed fetch and produce requests for those same partitions\n3 - Re-add fetchers for those same partitions.\n4 - Don't throw exception, but rather log it as an error about this occurrence.\n\nSigned-off-by: Andrew Choi <li_andchoi@microsoft.com>", "committedDate": "2020-04-14T02:29:34Z", "type": "commit"}, {"oid": "7de15ed047f55c0a1f05b6bcd81de4ca79134a36", "url": "https://github.com/apache/kafka/commit/7de15ed047f55c0a1f05b6bcd81de4ca79134a36", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into andchoi_zkCatch", "committedDate": "2020-06-04T00:06:57Z", "type": "commit"}, {"oid": "26c6fba96237df5f47de456b703fed77d116702c", "url": "https://github.com/apache/kafka/commit/26c6fba96237df5f47de456b703fed77d116702c", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into andchoi_zkCatch", "committedDate": "2020-06-11T23:35:52Z", "type": "commit"}, {"oid": "b6d405ceb13414a52dafe455589130efd58ee5cb", "url": "https://github.com/apache/kafka/commit/b6d405ceb13414a52dafe455589130efd58ee5cb", "message": "populate the response map with error\n\nSigned-off-by: Andrew Choi <li_andchoi@microsoft.com>", "committedDate": "2020-06-12T01:12:45Z", "type": "commit"}, {"oid": "4491d3bf1121236d0f7ba8602cf90aa34dc6b1c7", "url": "https://github.com/apache/kafka/commit/4491d3bf1121236d0f7ba8602cf90aa34dc6b1c7", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into andchoi_zkCatch", "committedDate": "2020-06-16T01:43:19Z", "type": "commit"}, {"oid": "964746136501256568e6980b1414dab571525292", "url": "https://github.com/apache/kafka/commit/964746136501256568e6980b1414dab571525292", "message": "Merge branch 'andchoi_zkCatch' of https://github.com/andrewchoi5/kafka into andchoi_zkCatch", "committedDate": "2020-06-16T01:43:55Z", "type": "commit"}, {"oid": "dfa33eb9e87dfde769b39de4d6065921fa80c6bd", "url": "https://github.com/apache/kafka/commit/dfa33eb9e87dfde769b39de4d6065921fa80c6bd", "message": "remove sending back the error code. since the controller only checks KAFKA_STORAGE_ERROR in LeaderAndIsrResponse now, just log an error without sending an error code back for now.\n\nSigned-off-by: Andrew Choi <li_andchoi@microsoft.com>", "committedDate": "2020-06-16T01:48:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzNDcwMg==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445234702", "bodyText": "It's probably better to do this in Partition.makeFollower() instead of here. That way, we only skip partitions that have incurred ZK error.\nAlso, the same ZK exception can happen in Partition.makeLeader(). So, we want to do the same thing there as well.", "author": "junrao", "createdAt": "2020-06-24T23:57:30Z", "path": "core/src/main/scala/kafka/server/ReplicaManager.scala", "diffHunk": "@@ -1556,6 +1557,11 @@ class ReplicaManager(val config: KafkaConfig,\n             error(s\"Error while making broker the follower for partition $partition with leader \" +\n               s\"$newLeaderBrokerId in dir $dirOpt\", e)\n             responseMap.put(partition.topicPartition, Errors.KAFKA_STORAGE_ERROR)\n+          case e: ZooKeeperClientException =>", "originalCommit": "dfa33eb9e87dfde769b39de4d6065921fa80c6bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc0ODU0NA==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445748544", "bodyText": "\ud83d\udc4d", "author": "andrewchoi5", "createdAt": "2020-06-25T18:16:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzNDcwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMjMyNg==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445902326", "bodyText": "@junrao -- let me know if there's additional changes to be made. Thanks.", "author": "andrewchoi5", "createdAt": "2020-06-26T00:05:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzNDcwMg=="}], "type": "inlineReview"}, {"oid": "320a567799e924bee4cb63b280ebbc0997c88be9", "url": "https://github.com/apache/kafka/commit/320a567799e924bee4cb63b280ebbc0997c88be9", "message": "change the logic to partition.scala\n\nSigned-off-by: Andrew Choi <li_andchoi@microsoft.com>", "committedDate": "2020-06-26T00:04:39Z", "type": "commit"}, {"oid": "c3300a9033f6f63fa00d64d7bd01b5f7f3f91cdc", "url": "https://github.com/apache/kafka/commit/c3300a9033f6f63fa00d64d7bd01b5f7f3f91cdc", "message": "remove import\n\nSigned-off-by: Andrew Choi <li_andchoi@microsoft.com>", "committedDate": "2020-06-26T00:06:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNDU0Nw==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445904547", "bodyText": "The message seem inaccurate since we only skip this partition now. Ditto in makeFollower().", "author": "junrao", "createdAt": "2020-06-26T00:14:14Z", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,16 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      } catch {\n+        case e: ZooKeeperClientException =>\n+          stateChangeLogger.info(s\"Because a ZooKeeper client exception has occurred, completed become leader \" +\n+            s\"state change from epoch $leaderEpoch only for those updated partitions with before \" +", "originalCommit": "c3300a9033f6f63fa00d64d7bd01b5f7f3f91cdc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MjI0MA==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445952240", "bodyText": "That makes sense. That will be reflected. \ud83d\udc4d", "author": "andrewchoi5", "createdAt": "2020-06-26T03:45:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNDU0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNTgxMA==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445905810", "bodyText": "Do we need ' before \"?\nAlso, the text could probably be sth like \"ZooKeeper client error occurred while becoming leader for $topicPartition.\"\nDitto in makeFollower().", "author": "junrao", "createdAt": "2020-06-26T00:19:28Z", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,16 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      } catch {\n+        case e: ZooKeeperClientException =>\n+          stateChangeLogger.info(s\"Because a ZooKeeper client exception has occurred, completed become leader \" +\n+            s\"state change from epoch $leaderEpoch only for those updated partitions with before \" +\n+            s\"ZooKeeper disconnect occurred.\", e)\n+          error(s\"ZooKeeper client occurred while rendering a $topicPartition's leader through zkClient.'\", e)", "originalCommit": "c3300a9033f6f63fa00d64d7bd01b5f7f3f91cdc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MzEzMA==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445953130", "bodyText": "\ud83d\udc4d , have made that change. Thanks @junrao", "author": "andrewchoi5", "createdAt": "2020-06-26T03:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNTgxMA=="}], "type": "inlineReview"}, {"oid": "889e375c094d87e2c97a8076c8ce2b347b5efe94", "url": "https://github.com/apache/kafka/commit/889e375c094d87e2c97a8076c8ce2b347b5efe94", "message": "accurate error log statement\n\nSigned-off-by: Andrew Choi <li_andchoi@microsoft.com>", "committedDate": "2020-06-26T03:49:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNjI4MA==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r446306280", "bodyText": "We probably can just keep the state change logging. Also, the logging level probably should be error instead of info. Ditto below.", "author": "junrao", "createdAt": "2020-06-26T17:07:27Z", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,16 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      } catch {\n+        case e: ZooKeeperClientException =>\n+          stateChangeLogger.info(s\"A ZooKeeper client exception has occurred and makeLeader will be skipping the \" +\n+            s\"state change for the partition with leader epoch: $leaderEpoch \", e)\n+          error(s\"ZooKeeper client error occurred while this partition was becoming the leader for $topicPartition.\", e)", "originalCommit": "889e375c094d87e2c97a8076c8ce2b347b5efe94", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwOTUzMg==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r446309532", "bodyText": "Thanks @junrao -- I will make the logging level to error.\nCould you clarify what you mean by keep the state change logging?", "author": "andrewchoi5", "createdAt": "2020-06-26T17:14:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNjI4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMxNjY2OA==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r446316668", "bodyText": "I meant removing the line in 509 of error(s\"ZooKeeper client .", "author": "junrao", "createdAt": "2020-06-26T17:29:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNjI4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMxODU0MA==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r446318540", "bodyText": "Makes sense. Would appreciate a review on the change -- @junrao .", "author": "andrewchoi5", "createdAt": "2020-06-26T17:33:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNjI4MA=="}], "type": "inlineReview"}, {"oid": "f95844a4bbaa855f69eeffb5e19182de171936fc", "url": "https://github.com/apache/kafka/commit/f95844a4bbaa855f69eeffb5e19182de171936fc", "message": "removal of error and keep the state change log error\n\nSigned-off-by: Andrew Choi <li_andchoi@microsoft.com>", "committedDate": "2020-06-26T17:32:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNzcyMg==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r447927722", "bodyText": "Do we need this? Ditto below.", "author": "junrao", "createdAt": "2020-06-30T19:27:49Z", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,15 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)", "originalCommit": "f95844a4bbaa855f69eeffb5e19182de171936fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNzMyMQ==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r448527321", "bodyText": "@andrewchoi5 : I was asking if we could change\nthis.createLogIfNotExists()\nto\ncreateLogIfNotExists()", "author": "junrao", "createdAt": "2020-07-01T17:56:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNzcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2OTkyMg==", "url": "https://github.com/apache/kafka/pull/8479#discussion_r448569922", "bodyText": "@junrao  -- Got it. I misunderstood it for something else. Updated!", "author": "andrewchoi5", "createdAt": "2020-07-01T19:23:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNzcyMg=="}], "type": "inlineReview"}, {"oid": "18514200830bc1707332348545ed5fd1c7a4f41e", "url": "https://github.com/apache/kafka/commit/18514200830bc1707332348545ed5fd1c7a4f41e", "message": "remove this keyword\n\nSigned-off-by: Andrew Choi <li_andchoi@microsoft.com>", "committedDate": "2020-07-01T19:23:45Z", "type": "commit"}]}