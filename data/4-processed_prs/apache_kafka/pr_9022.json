{"pr_number": 9022, "pr_title": "KAFKA-10158: Fix flaky testDescribeUnderReplicatedPartitionsWhenReassignmentIsInProgress", "pr_createdAt": "2020-07-14T19:00:54Z", "pr_url": "https://github.com/apache/kafka/pull/9022", "timeline": [{"oid": "8f38528b988a287c4142f87d42bfd62f5b428449", "url": "https://github.com/apache/kafka/commit/8f38528b988a287c4142f87d42bfd62f5b428449", "message": "KAFKA-10158: Improve test behavior and resolve flakiness of\n  TopicCommandWithAdminClientTest#\n  testDescribeUnderReplicatedPartitionsWhenReassignmentIsInProgress", "committedDate": "2020-07-14T18:58:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NzY0MQ==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454577641", "bodyText": "Note that although we're bumping this to 1000, it should be a single produce batch with really small data, so on the order of a couple KBs.", "author": "bdbyrne", "createdAt": "2020-07-14T19:01:40Z", "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -672,11 +677,9 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     adminClient.createTopics(\n       Collections.singletonList(new NewTopic(testTopicName, partitions, replicationFactor).configs(configMap))).all().get()\n     waitForTopicCreated(testTopicName)\n-    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 10, acks = -1)\n+    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 1000, acks = -1)", "originalCommit": "8f38528b988a287c4142f87d42bfd62f5b428449", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4OTA2Mw==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454589063", "bodyText": "With the throttle approach we don't want it to be produced in a single batch. If all messages are produced in a single batch then you will still fetch the entire batch in a single request even if replica.fetch.max.bytes is 1, as we allow this limit to be broken to fetch at least one message.", "author": "lbradstreet", "createdAt": "2020-07-14T19:22:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NzY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5ODkxMQ==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454598911", "bodyText": "So each message creates its own ProducerRecord, I was under the assumption that the limit to fetch expands to a single record, and not the batch itself. Or am I misunderstanding?", "author": "bdbyrne", "createdAt": "2020-07-14T19:41:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NzY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYzODIxNQ==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454638215", "bodyText": "Each message creates its own ProducerRecord but these get collected into batches by the producer. Fetch requests will not break up a batch unless down-converting to the old record batch format, so you could end up with 1000 messages in a single batch being fetched in a single fetch request.", "author": "lbradstreet", "createdAt": "2020-07-14T20:53:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NzY0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNjYxNA==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r460416614", "bodyText": "The broker only works in terms of record batches, not individual records.", "author": "ijuma", "createdAt": "2020-07-25T15:42:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NzY0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NjkxMg==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454586912", "bodyText": "It might be worth adding a comment somewhere in testDescribeUnderReplicatedPartitionsWhenReassignmentIsInProgress to describe what was done in the replicaFetchMaxBytes def and why.", "author": "lbradstreet", "createdAt": "2020-07-14T19:18:36Z", "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -672,11 +677,9 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     adminClient.createTopics(\n       Collections.singletonList(new NewTopic(testTopicName, partitions, replicationFactor).configs(configMap))).all().get()\n     waitForTopicCreated(testTopicName)\n-    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 10, acks = -1)\n+    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 1000, acks = -1)", "originalCommit": "8f38528b988a287c4142f87d42bfd62f5b428449", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5ODk1Mg==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454598952", "bodyText": "Done.", "author": "bdbyrne", "createdAt": "2020-07-14T19:41:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NjkxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NzQ2Mg==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454587462", "bodyText": "Why did we remove this? We still need the throttle to be set so that the replica doesn't join the ISR. It could easily do this even if it only fetches a message at a time. The idea with the new replica fetch max bytes setting is to give the broker a chance to throttle itself before joining the ISR.", "author": "lbradstreet", "createdAt": "2020-07-14T19:19:36Z", "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -672,11 +677,9 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     adminClient.createTopics(\n       Collections.singletonList(new NewTopic(testTopicName, partitions, replicationFactor).configs(configMap))).all().get()\n     waitForTopicCreated(testTopicName)\n-    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 10, acks = -1)\n+    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 1000, acks = -1)\n \n     val brokerIds = servers.map(_.config.brokerId)\n-    TestUtils.setReplicationThrottleForPartitions(adminClient, brokerIds, Set(tp), throttleBytes = 1)", "originalCommit": "8f38528b988a287c4142f87d42bfd62f5b428449", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYwMDU3NA==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454600574", "bodyText": "Added back, but to clarify - are you suggesting the high watermark could still be at 0 (or relatively low) even after producing the messages? Or just that both combined are a more effective throttle, essentially putting it at 1 record/sec?", "author": "bdbyrne", "createdAt": "2020-07-14T19:44:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NzQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNjYxMQ==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r460416611", "bodyText": "I simply meant that we still need the replication throttle so the reassignment doesn't complete before we perform our checks.", "author": "lbradstreet", "createdAt": "2020-07-25T15:42:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NzQ2Mg=="}], "type": "inlineReview"}, {"oid": "f22f684a5d63725e07974fdffca9b5c6516c76a9", "url": "https://github.com/apache/kafka/commit/f22f684a5d63725e07974fdffca9b5c6516c76a9", "message": "(address comments)", "committedDate": "2020-07-14T20:02:33Z", "type": "commit"}, {"oid": "92499138238e0e6b219a9f5af22b736ab704ca56", "url": "https://github.com/apache/kafka/commit/92499138238e0e6b219a9f5af22b736ab704ca56", "message": "(move throttle removal to below reassignment check)", "committedDate": "2020-07-14T20:19:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY0MTI4NQ==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454641285", "bodyText": "Do we want to leave a comment here to say that we are trying to ensure that messages are produced in multiple batches? I do wonder if there's a better way to achieve this via a producer setting, e.g. batch.size?", "author": "lbradstreet", "createdAt": "2020-07-14T20:59:00Z", "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -673,10 +678,14 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n       Collections.singletonList(new NewTopic(testTopicName, partitions, replicationFactor).configs(configMap))).all().get()\n     waitForTopicCreated(testTopicName)\n     TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 10, acks = -1)\n+    Thread.sleep(10)", "originalCommit": "92499138238e0e6b219a9f5af22b736ab704ca56", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNjc5Nw==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r460416797", "bodyText": "We can call flush on the producer to force it to send the messages.", "author": "ijuma", "createdAt": "2020-07-25T15:45:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY0MTI4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNzE0Mw==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r460417143", "bodyText": "Looking a bit more, we actually close the producer after we generate the messages, so I don't think this sleep is needed at all.", "author": "ijuma", "createdAt": "2020-07-25T15:48:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY0MTI4NQ=="}], "type": "inlineReview"}, {"oid": "5f28cc408a9544a72ca872b9cc934472f87de4ef", "url": "https://github.com/apache/kafka/commit/5f28cc408a9544a72ca872b9cc934472f87de4ef", "message": "(add comment)", "committedDate": "2020-07-15T21:58:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQwMTA2MA==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r455401060", "bodyText": "It's always an annoyance with Junit that there is no way for the test case to override initialization in a @Before. What we often end up doing is removing the annotation and calling the setup method explicitly in each test case. I slightly prefer that option since it is easier to understand, but not sure it is possible since we're extending KafkaServerTestHarness, which has its own initialization logic. For the sake of argument, would it be possible to set max fetch bytes to 1 for all tests? Either that or maybe we should just produce more data in the test case.", "author": "hachikuji", "createdAt": "2020-07-15T22:27:42Z", "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -56,12 +56,17 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     zkConnect = zkConnect,\n     rackInfo = Map(0 -> \"rack1\", 1 -> \"rack2\", 2 -> \"rack2\", 3 -> \"rack1\", 4 -> \"rack3\", 5 -> \"rack3\"),\n     numPartitions = numPartitions,\n-    defaultReplicationFactor = defaultReplicationFactor\n+    defaultReplicationFactor = defaultReplicationFactor,\n+    replicaFetchMaxBytes = replicaFetchMaxBytes(),\n   ).map(KafkaConfig.fromProps)\n \n   private val numPartitions = 1\n   private val defaultReplicationFactor = 1.toShort\n \n+  private def replicaFetchMaxBytes() =\n+    if (testName.getMethodName == \"testDescribeUnderReplicatedPartitionsWhenReassignmentIsInProgress\") Some(1)", "originalCommit": "5f28cc408a9544a72ca872b9cc934472f87de4ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5ODM3NA==", "url": "https://github.com/apache/kafka/pull/9022#discussion_r455998374", "bodyText": "Agreed, the KafkaServerTestHarness makes it more difficult. I've updated the test to set max fetch bytes to 1 for all tests, which is fine given none of the other tests produce data.", "author": "bdbyrne", "createdAt": "2020-07-16T18:46:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQwMTA2MA=="}], "type": "inlineReview"}, {"oid": "cc0ba49f1c8600387cc1a724a140b9f20ad9a04e", "url": "https://github.com/apache/kafka/commit/cc0ba49f1c8600387cc1a724a140b9f20ad9a04e", "message": "(address comments, fix build)", "committedDate": "2020-07-16T18:45:21Z", "type": "commit"}, {"oid": "0d1f31be6eb02fa8b20eedce703153946b9fbda7", "url": "https://github.com/apache/kafka/commit/0d1f31be6eb02fa8b20eedce703153946b9fbda7", "message": "Minor fixes\n\n- Remove Thread.sleep\n- Don't change signature of `TestUtils.createBrokerConfigs` for\ninfrequently used parameter.\n- Remove unnecessary `()`", "committedDate": "2020-07-25T15:56:57Z", "type": "commit"}]}