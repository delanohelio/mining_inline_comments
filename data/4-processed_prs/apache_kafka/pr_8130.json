{"pr_number": 8130, "pr_title": "MINOR: trivial cleanups, javadoc errors, omitted StateStore tests, etc.", "pr_createdAt": "2020-02-18T05:58:18Z", "pr_url": "https://github.com/apache/kafka/pull/8130", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3NTkyMw==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r403475923", "bodyText": "n -> \"In\"", "author": "omkreddy", "createdAt": "2020-04-04T14:24:29Z", "path": "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java", "diffHunk": "@@ -807,7 +807,7 @@ public void abortTransaction() throws ProducerFencedException {\n      * data.\n      * </p>\n      * <p>\n-     * Some transactional send errors cannot be resolved with a call to {@link #abortTransaction()}.  In particular,\n+     * Some transactional send errors cannot be resolved with a call to {@link #abortTransaction()}. n particular,", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU3NDQzNQ==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r407574435", "bodyText": "Fixed! \ud83d\ude03", "author": "dongjinleekr", "createdAt": "2020-04-13T16:34:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3NTkyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5Mjk4OA==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r403492988", "bodyText": "Just to clarify. To put two blanks between two sentences is a writing style that goes back to classic type writers -- having a larger space between sentences makes it easier to read. Hence, removing all those double-blanks (to correct writing style) is just a lot of \"noise\" with no real value...\nWe can still merge this PR (as you put a lot of work into it already), however, I would encourage you to not do such PRs in the future. It's just additional review load (and committers already cannot handle the current load...) with no real value and thus a \"waste\" of your own time as well as the reviewer's time.", "author": "mjsax", "createdAt": "2020-04-04T17:11:27Z", "path": "clients/src/main/java/org/apache/kafka/clients/FetchSessionHandler.java", "diffHunk": "@@ -47,7 +47,7 @@\n  * and over, without explicitly enumerating all the partitions in the request and the\n  * response.\n  *\n- * FetchSessionHandler tracks the partitions which are in the session.  It also\n+ * FetchSessionHandler tracks the partitions which are in the session. It also", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU3OTQ0MQ==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r407579441", "bodyText": "@mjsax I see. I\u2019ll be more careful from now on. Thanks for the detailed explanation.", "author": "dongjinleekr", "createdAt": "2020-04-13T16:44:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5Mjk4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzIzNQ==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r403493235", "bodyText": "This is public API and cannot just be removed. Why do you think it should be removed?", "author": "mjsax", "createdAt": "2020-04-04T17:13:42Z", "path": "streams/src/main/java/org/apache/kafka/streams/kstream/WindowedSerdes.java", "diffHunk": "@@ -64,14 +64,6 @@ public SessionWindowedSerde(final Serde<T> inner) {\n         return new TimeWindowedSerde<>(Serdes.serdeFrom(type));\n     }\n \n-    /**\n-     * Construct a {@code TimeWindowedSerde} object to deserialize changelog topic\n-     * for the specified inner class type and window size.\n-     */\n-    static public <T> Serde<Windowed<T>> timeWindowedSerdeFrom(final Class<T> type, final long windowSize) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5NzE1NA==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r407597154", "bodyText": "I'm sorry, it was a mistake; So reverted.", "author": "dongjinleekr", "createdAt": "2020-04-13T17:16:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzIzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDU1NA==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r497720554", "bodyText": "@dongjinleekr Seems you did not revert this change yet.", "author": "mjsax", "createdAt": "2020-09-30T18:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzgzNg==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r403493836", "bodyText": "Where do we pass a null value? Also, where is the MetricScope in this test?", "author": "mjsax", "createdAt": "2020-04-04T17:19:45Z", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedWindowStoreBuilderTest.java", "diffHunk": "@@ -179,4 +179,9 @@ public void shouldThrowNullPointerIfTimeIsNull() {\n         new TimestampedWindowStoreBuilder<>(supplier, Serdes.String(), Serdes.String(), null);\n     }\n \n+    @Test(expected = NullPointerException.class)\n+    public void shouldThrowNullPointerIfMetricsScopeIsNull() {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODcyMQ==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r407598721", "bodyText": "supplier#metricsScope() returns null, for its setUp() configuration. It is same to [KeyValueStoreBuilderTest, TimestampedKeyValueStoreBuilderTest]#shouldThrowNullPointerIfMetricsScopeIsNull. SessionStoreBuilderTest#shouldThrowNullPointerIfMetricsScopeIsNull does same, but it also validates Exception message. (Wait, is this way more recommended?)", "author": "dongjinleekr", "createdAt": "2020-04-13T17:19:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg3ODI3OA==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r407878278", "bodyText": "Thanks for the clarification. However, I am still not sure if I understand this test. The constructor TimestampedWindowStoreBuilder does not call supplier.metricsScope() -- hence, it am still puzzled why this test would throw a NPE? To test metricScope() we would need to call build() method. In fact, following the call trace, we would never check if metricScope() returns null or not. Seems worth to fix... (maybe add a check in MeteredWindowStore constructor? -- not sure if the other MeteredXxxStore have a similar check. If not, would be good to add one.)\nSeems it comes from supplier.name() -- for this case, the test setup is incorrect -- also in the test above actually, that would also fail with supplier.name() NPE, but not with the NPE they want to test.\n\ndoes same, but it also validates Exception message. (Wait, is this way more recommended?)\n\nYes, it's always recommended to verify the exception message to make sure we test the right think. Using (expected = NullPointerException.class) annotation is not ideal.", "author": "mjsax", "createdAt": "2020-04-14T05:37:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI5MjA0MQ==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r408292041", "bodyText": "@mjsax I reviewed the problem more carefully and concluded that you are right - the NullPointerException here is not related to MetricScope. We need to rewrite the series of tests.\nLet's review TimestampedWindowStoreBuilderTest#shouldThrowNullPointerIfMetricsScopeIsNull as an example. Here, supplier#name is null so when instantiating TimestampedWindowStoreBuilder, it fails in its parent class's constructor, AbstractStoreBuilder line 41 - Objects.requireNonNull(name, \"name cannot be null\");. It is also why SessionStoreBuilderTest#shouldThrowNullPointerIfMetricsScopeIsNull ends with a error message \"name cannot be null\" - obviously, it also has nothing to do with MetricScope.\nHere is the debugger status; As you can see, supplier#name is null here.\n\nI am now rewriting the tests. Stay tuned! \ud83d\ude04", "author": "dongjinleekr", "createdAt": "2020-04-14T16:58:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyNjE0OA==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r408526148", "bodyText": "Thanks! Highly appreciated!", "author": "mjsax", "createdAt": "2020-04-15T01:20:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzgzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5Mzg4NA==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r403493884", "bodyText": "Same question as above?", "author": "mjsax", "createdAt": "2020-04-04T17:20:16Z", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/WindowStoreBuilderTest.java", "diffHunk": "@@ -134,4 +134,9 @@ public void shouldThrowNullPointerIfTimeIsNull() {\n         new WindowStoreBuilder<>(supplier, Serdes.String(), Serdes.String(), null);\n     }\n \n+    @Test(expected = NullPointerException.class)\n+    public void shouldThrowNullPointerIfMetricsScopeIsNull() {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODgyNA==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r407598824", "bodyText": "Same answer as above. \ud83d\ude13", "author": "dongjinleekr", "createdAt": "2020-04-13T17:19:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5Mzg4NA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDMyMA==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r497720320", "bodyText": "@guozhangwang Is this ok? I am not familiar with this part of the code. If false the default anyway?", "author": "mjsax", "createdAt": "2020-09-30T18:35:48Z", "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -2419,7 +2419,7 @@ class Log(@volatile private var _dir: File,\n \n       // replace old segment with new ones\n       info(s\"Replacing overflowed segment $segment with split segments $newSegments\")\n-      replaceSegments(newSegments.toList, List(segment), isRecoveredSwapFile = false)\n+      replaceSegments(newSegments.toList, List(segment))", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg2NTg4NQ==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r497865885", "bodyText": "LGTM, since the method definition also has isRecoveredSwapFile: Boolean = false by default.", "author": "guozhangwang", "createdAt": "2020-10-01T00:04:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDMyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk4OTk3Mg==", "url": "https://github.com/apache/kafka/pull/8130#discussion_r497989972", "bodyText": "Thanks @guozhangwang for verifying.", "author": "mjsax", "createdAt": "2020-10-01T05:22:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDMyMA=="}], "type": "inlineReview"}, {"oid": "7991605d84d9e84e39587443bcc65b82f3326271", "url": "https://github.com/apache/kafka/commit/7991605d84d9e84e39587443bcc65b82f3326271", "message": "Add omitted [WindowStoreBuilderTest, TimestampedWindowStoreBuilderTest]#shouldThrowNullPointerIfMetricsScopeIsNull: Other StateStores has it.", "committedDate": "2020-10-07T15:47:53Z", "type": "commit"}, {"oid": "7cfe008fbd517a20e4c28aa2de6c84692bea0bc7", "url": "https://github.com/apache/kafka/commit/7cfe008fbd517a20e4c28aa2de6c84692bea0bc7", "message": "Improve Stores Javadoc\n\n1. Fix javadoc typo: Stores#timestampedWindowStoreBuilder, windows-store -> window-store (Compare with Stores#timestampedKeyValueStoreBuilder)\n2. Add omitted IllegalArgumentException condition in Stores#lruMap.\n3. Add omitted IllegalArgumentException condition in WindowBytesStoreSupplier methods.", "committedDate": "2020-10-07T15:47:53Z", "type": "commit"}, {"oid": "3f9f171610fa2e13c10387b1765924f91fa992c4", "url": "https://github.com/apache/kafka/commit/3f9f171610fa2e13c10387b1765924f91fa992c4", "message": "Remove unused method + duplicated parameters\n\n1. Remove unused method: TimeWindowedSerde#timeWindowedSerdeFrom(Class, long)\n2. Remove duplicated parameter: Log#splitOverflowedSegment", "committedDate": "2020-10-07T15:47:53Z", "type": "commit"}, {"oid": "9bdc180ef6041be375c34cc4644904cb5e0995a2", "url": "https://github.com/apache/kafka/commit/9bdc180ef6041be375c34cc4644904cb5e0995a2", "message": "Remove unthrown Exceptions: TaskManager, ProduceBenchWorker", "committedDate": "2020-10-07T15:47:54Z", "type": "commit"}, {"oid": "bede35cef55008e089f8ea5b95c3aef4824dd2a8", "url": "https://github.com/apache/kafka/commit/bede35cef55008e089f8ea5b95c3aef4824dd2a8", "message": "Remove unnecessary public from [Sink,Source]TaskContext", "committedDate": "2020-10-07T15:47:54Z", "type": "commit"}, {"oid": "1f895311913681a3bec079c55b415ae0a50cbd70", "url": "https://github.com/apache/kafka/commit/1f895311913681a3bec079c55b415ae0a50cbd70", "message": "Fix incorrect MeteredTimestampedWindowStore javadoc", "committedDate": "2020-10-07T15:47:54Z", "type": "commit"}, {"oid": "b9525c50c525c8fa2382b81ec9c53661a2ab1580", "url": "https://github.com/apache/kafka/commit/b9525c50c525c8fa2382b81ec9c53661a2ab1580", "message": "Remove duplicated entity in checkstyle/import-control.xml", "committedDate": "2020-10-07T15:47:55Z", "type": "commit"}, {"oid": "ada16b49c61068e0d80e057fdada1c5dbf205452", "url": "https://github.com/apache/kafka/commit/ada16b49c61068e0d80e057fdada1c5dbf205452", "message": "Add omitted WindowStore, SessionStore test cases: GlobalStateStoreProviderTest, StreamThreadStateStoreProviderTest (Note: compare with KeyValueStore cases.)", "committedDate": "2020-10-07T15:47:55Z", "type": "commit"}, {"oid": "d581d152530d43dd2f15684f1a766ee34afb572a", "url": "https://github.com/apache/kafka/commit/d581d152530d43dd2f15684f1a766ee34afb572a", "message": "Update [KeyValue,TimestampedKeyValue,WindowStore,TimestampedWindowStore]BuilderTest#shouldThrowNullPointerIfMetricsScopeIsNull: now checks Exception message.", "committedDate": "2020-10-07T15:47:55Z", "type": "commit"}, {"oid": "fc7194d838ce746a310d84be22f3f15a8f6640ce", "url": "https://github.com/apache/kafka/commit/fc7194d838ce746a310d84be22f3f15a8f6640ce", "message": "Give BytesStoreSupplier mock with name to [KeyValue,TimestampedKeyValue,WindowStore,TimestampedWindowStore]BuilderTest#shouldThrowNullPointerIfMetricsScopeIsNull; No exceptions are thrown now.", "committedDate": "2020-10-07T15:47:56Z", "type": "commit"}, {"oid": "df01c352d84fe1364e75978292c2b54500dc56b0", "url": "https://github.com/apache/kafka/commit/df01c352d84fe1364e75978292c2b54500dc56b0", "message": "Add metricsScope nullity check to [KeyValue,TimestampedKeyValue,Window,TimestampedWindow,Session]StoreBuilder constructors", "committedDate": "2020-10-07T15:47:56Z", "type": "commit"}, {"oid": "29d766afe504cade3fd8dfb8cf966e0cb83c67bf", "url": "https://github.com/apache/kafka/commit/29d766afe504cade3fd8dfb8cf966e0cb83c67bf", "message": "Add nullity check in 'WindowStoreBuilder' constructor. (For parity with 'TimestampedWindowStoreBuilder', 'SessionStoreBuilder', etc.)", "committedDate": "2020-10-07T15:47:57Z", "type": "commit"}, {"oid": "ac6ac58c18513f653b8757dee4a686cb431e9779", "url": "https://github.com/apache/kafka/commit/ac6ac58c18513f653b8757dee4a686cb431e9779", "message": "Remove unthrown Exception in SessionStoreBuilderTest#setUp", "committedDate": "2020-10-07T15:47:57Z", "type": "commit"}, {"oid": "958cb5b5819d2d65f353c445b94f58915f7e5853", "url": "https://github.com/apache/kafka/commit/958cb5b5819d2d65f353c445b94f58915f7e5853", "message": "Fix typo in `XXXStoreBuilder` validation methods\n\n- `KeyValueStoreBuilder`: `bytesStoreSupplier` \u2192 `storeSupplier`\n- `TimestampedKeyValueStoreBuilder`: `bytesStoreSupplier` \u2192 `storeSupplier`\n- `TimestampedWindowStoreBuilder`: `bytesStoreSupplier` \u2192 `storeSupplier`\n- `SessionStoreBuilder`: `supplier` \u2192 `storeSupplier`", "committedDate": "2020-10-07T15:47:57Z", "type": "commit"}, {"oid": "dff84f2cf87a54fe7b6ce55ef0ac4371eb86af18", "url": "https://github.com/apache/kafka/commit/dff84f2cf87a54fe7b6ce55ef0ac4371eb86af18", "message": "Remove unused variables: RocksDBStore, SuppressionIntegrationTest", "committedDate": "2020-10-07T15:47:58Z", "type": "commit"}, {"oid": "e92dda54b2d23ef95cad3e575f4bc9a6df09641d", "url": "https://github.com/apache/kafka/commit/e92dda54b2d23ef95cad3e575f4bc9a6df09641d", "message": "Remove redundant type parameters from AbstractJoinIntegrationTest, SuppressScenarioTest", "committedDate": "2020-10-07T15:47:58Z", "type": "commit"}, {"oid": "6972309253301b252acdf85d48d0dba758cff5b5", "url": "https://github.com/apache/kafka/commit/6972309253301b252acdf85d48d0dba758cff5b5", "message": "Revert WindowedSerdes#timeWindowedSerdeFrom(Class, long)", "committedDate": "2020-10-07T15:50:34Z", "type": "commit"}, {"oid": "9f7a73ff0e1027602e7590cea21e2c5973a76973", "url": "https://github.com/apache/kafka/commit/9f7a73ff0e1027602e7590cea21e2c5973a76973", "message": "Add supplier mock object in TimestampedKeyValueStoreMaterializerTest#shouldCreateKeyValueStoreWithTheProvidedInnerStore to return metricScope: without it, NullPointerExcepion is thrown during TimestampedKeyValueStore instance creation.", "committedDate": "2020-10-07T16:01:52Z", "type": "commit"}, {"oid": "9f7a73ff0e1027602e7590cea21e2c5973a76973", "url": "https://github.com/apache/kafka/commit/9f7a73ff0e1027602e7590cea21e2c5973a76973", "message": "Add supplier mock object in TimestampedKeyValueStoreMaterializerTest#shouldCreateKeyValueStoreWithTheProvidedInnerStore to return metricScope: without it, NullPointerExcepion is thrown during TimestampedKeyValueStore instance creation.", "committedDate": "2020-10-07T16:01:52Z", "type": "forcePushed"}]}