{"pr_number": 8370, "pr_title": "KAFKA-9753: Add active tasks process ratio", "pr_createdAt": "2020-03-27T00:30:02Z", "pr_url": "https://github.com/apache/kafka/pull/8370", "timeline": [{"oid": "70ca574fd8e3f3bc2ca42b3bb56de8f936e77f07", "url": "https://github.com/apache/kafka/commit/70ca574fd8e3f3bc2ca42b3bb56de8f936e77f07", "message": "first pass", "committedDate": "2020-03-25T00:43:35Z", "type": "commit"}, {"oid": "8b33c3e798f4f63964df1f961210d0ab0975dc52", "url": "https://github.com/apache/kafka/commit/8b33c3e798f4f63964df1f961210d0ab0975dc52", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9756-loop-tasks-order", "committedDate": "2020-03-25T05:02:12Z", "type": "commit"}, {"oid": "77e475e5ca63a0d57070b49b8366d60857b7b7d2", "url": "https://github.com/apache/kafka/commit/77e475e5ca63a0d57070b49b8366d60857b7b7d2", "message": "fix unit tests", "committedDate": "2020-03-25T23:15:08Z", "type": "commit"}, {"oid": "d5c743baa264f5cc9ea6c9f48aed24cb8ab72365", "url": "https://github.com/apache/kafka/commit/d5c743baa264f5cc9ea6c9f48aed24cb8ab72365", "message": "add unit tests", "committedDate": "2020-03-26T00:14:28Z", "type": "commit"}, {"oid": "e81f042e5b0da16c0f27a5c64a0bf6c64259613e", "url": "https://github.com/apache/kafka/commit/e81f042e5b0da16c0f27a5c64a0bf6c64259613e", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9753-active-process-ratio", "committedDate": "2020-03-26T03:51:22Z", "type": "commit"}, {"oid": "8eb82b253e3e2c46d55c705dfaf790e133a18dce", "url": "https://github.com/apache/kafka/commit/8eb82b253e3e2c46d55c705dfaf790e133a18dce", "message": "first pass", "committedDate": "2020-03-26T17:27:15Z", "type": "commit"}, {"oid": "b2982363abcca81fbd64a0b9835ec28b619da1a9", "url": "https://github.com/apache/kafka/commit/b2982363abcca81fbd64a0b9835ec28b619da1a9", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9756-loop-tasks-order", "committedDate": "2020-03-26T17:28:50Z", "type": "commit"}, {"oid": "153b7417674c9bdc6d4b0aaf9f5684c1a646ff11", "url": "https://github.com/apache/kafka/commit/153b7417674c9bdc6d4b0aaf9f5684c1a646ff11", "message": "should be INFO", "committedDate": "2020-03-26T19:07:16Z", "type": "commit"}, {"oid": "a7d945ccf2b511398edd744221d84eb5f318d69c", "url": "https://github.com/apache/kafka/commit/a7d945ccf2b511398edd744221d84eb5f318d69c", "message": "fix unit tests", "committedDate": "2020-03-26T23:12:48Z", "type": "commit"}, {"oid": "7431c1ab6aa5182e734d70f51b38b53b469e3081", "url": "https://github.com/apache/kafka/commit/7431c1ab6aa5182e734d70f51b38b53b469e3081", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9756-loop-tasks-order", "committedDate": "2020-03-26T23:12:59Z", "type": "commit"}, {"oid": "0286037701fdc8a2993a9953549974baa8f22b85", "url": "https://github.com/apache/kafka/commit/0286037701fdc8a2993a9953549974baa8f22b85", "message": "github comments", "committedDate": "2020-03-26T23:39:50Z", "type": "commit"}, {"oid": "bc5010ef3fc6e61c375689b8c6ef16f8f81013ca", "url": "https://github.com/apache/kafka/commit/bc5010ef3fc6e61c375689b8c6ef16f8f81013ca", "message": "rebase", "committedDate": "2020-03-26T23:46:45Z", "type": "commit"}, {"oid": "decaa94dbbf1cc5b4370c196e8dc284fe9618381", "url": "https://github.com/apache/kafka/commit/decaa94dbbf1cc5b4370c196e8dc284fe9618381", "message": "unit tests", "committedDate": "2020-03-27T00:06:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MTEyNw==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r398971127", "bodyText": "This is a bit awkward.. if anyone have a more elegant solution I'm all ears.", "author": "guozhangwang", "createdAt": "2020-03-27T00:33:17Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/Task.java", "diffHunk": "@@ -192,6 +192,10 @@ public boolean isValidTransition(final State newState) {\n \n     void markChangelogAsCorrupted(final Collection<TopicPartition> partitions);\n \n+    void recordProcessLatency(final long elapsedLatencyMs);", "originalCommit": "decaa94dbbf1cc5b4370c196e8dc284fe9618381", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzNTYzMw==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401135633", "bodyText": "prop: You could record the time spent in processing in Task#process() and just have a method Task#recordProcessRatio(final long totalProcessTime) in the interface.", "author": "cadonna", "createdAt": "2020-03-31T18:45:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MTEyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE5NTM2Ng==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401195366", "bodyText": "Hey @guozhangwang , I did have some ideas (similar to @cadonna 's), but it might be easier to just present it as a diff: guozhangwang#12", "author": "vvcephei", "createdAt": "2020-03-31T20:29:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MTEyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1NzEwNA==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401257104", "bodyText": "I originally did this, but I'm concerned that the latency for processing a single record is sub-milliseconds and hence the cumulated latency would be zero.", "author": "guozhangwang", "createdAt": "2020-03-31T22:40:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk3MTEyNw=="}], "type": "inlineReview"}, {"oid": "5bbf703b430f96f15dd3e014ac9053d39d4369ae", "url": "https://github.com/apache/kafka/commit/5bbf703b430f96f15dd3e014ac9053d39d4369ae", "message": "rebase from trunk", "committedDate": "2020-03-27T05:59:35Z", "type": "commit"}, {"oid": "8023e10418adfa6767f7fcba90951ee106300ac0", "url": "https://github.com/apache/kafka/commit/8023e10418adfa6767f7fcba90951ee106300ac0", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9753-active-process-ratio", "committedDate": "2020-03-27T19:03:19Z", "type": "commit"}, {"oid": "f2768e9f1a9ee38b59b00621fcc316be00cb1b45", "url": "https://github.com/apache/kafka/commit/f2768e9f1a9ee38b59b00621fcc316be00cb1b45", "message": "fix unit tests", "committedDate": "2020-03-27T21:43:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1MzU4NA==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r399553584", "bodyText": "This test becomes more flaky than before after the main loop refactoring, shown as the following:\njava.lang.AssertionError: Did not receive all 48 records from topic output-concurrent-2 within 120000 ms\nExpected: is a value equal to or greater than <48>\n     but: <38> was less than <48>\n\nEach iteration has 48 words, and 38 unique words, and when it fails it reported only 38 records ever consumed from the output topic. I suspect this is because of the caching effects, we processed all 500000 iterations without sending out any updates to the resulted count table output topic (seems we process too fast?).\nI piggy-backed a fix for this flakiness by reducing the requirement that we start the verification as long as we've seen one record in the output, similar as we do in other tests, and then in verifyGreaterOrEqual we do not require all keys been populated already.", "author": "guozhangwang", "createdAt": "2020-03-27T21:47:56Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java", "diffHunk": "@@ -646,8 +645,8 @@ public void concurrentAccesses() throws Exception {\n         producerThread.start();\n \n         try {\n-            waitUntilAtLeastNumRecordProcessed(outputTopicConcurrent, numberOfWordsPerIteration);\n-            waitUntilAtLeastNumRecordProcessed(outputTopicConcurrentWindowed, numberOfWordsPerIteration);\n+            waitUntilAtLeastNumRecordProcessed(outputTopicConcurrent, 1);", "originalCommit": "f2768e9f1a9ee38b59b00621fcc316be00cb1b45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyNTg1Ng==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401125856", "bodyText": "prop: I would prefer to have this fix in its own PR, because the commit would be easier to retrieve and to reference on failure tickets.", "author": "cadonna", "createdAt": "2020-03-31T18:29:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1MzU4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1Mzg4MQ==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r399553881", "bodyText": "Note we should only call this inside the if (state == State.RUNNING) condition otherwise we may get ConcurrentModification exception.", "author": "guozhangwang", "createdAt": "2020-03-27T21:48:48Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -704,6 +707,10 @@ void runOnce() {\n                     numIterations++;\n                 }\n             } while (true);\n+\n+            // we record the ratio out of the while loop so that the accumulated latency spans over\n+            // multiple iterations with reasonably large max.num.records and hence is less vulnerable to outliers\n+            taskManager.recordTaskProcessRatio(totalProcessLatency);", "originalCommit": "f2768e9f1a9ee38b59b00621fcc316be00cb1b45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMjI1Mg==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401122252", "bodyText": "Q: Could you elaborate on this?", "author": "cadonna", "createdAt": "2020-03-31T18:24:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1Mzg4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1ODkyOQ==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401258929", "bodyText": "I do not know exactly what's happening here, my guess is that in PARTITION_REVOKED state the tasks might be modified.", "author": "guozhangwang", "createdAt": "2020-03-31T22:45:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1Mzg4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0MTczMA==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401041730", "bodyText": "req: Could you please add tests for this new sensor to TaskMetricsTest.", "author": "cadonna", "createdAt": "2020-03-31T16:16:38Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.java", "diffHunk": "@@ -96,6 +103,22 @@ public static Sensor processLatencySensor(final String threadId,\n         return emptySensor(threadId, taskId, PROCESS_LATENCY, RecordingLevel.DEBUG, streamsMetrics);\n     }\n \n+    public static Sensor activeProcessRatioSensor(final String threadId,", "originalCommit": "f2768e9f1a9ee38b59b00621fcc316be00cb1b45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2MTYxNg==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401261616", "bodyText": "ack.", "author": "guozhangwang", "createdAt": "2020-03-31T22:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0MTczMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1MTMyNg==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401051326", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    sensor.add(\n          \n          \n            \n                        new MetricName(\n          \n          \n            \n                            name,\n          \n          \n            \n                            TASK_LEVEL_GROUP,\n          \n          \n            \n                            PROCESS_RATIO_DESCRIPTION,\n          \n          \n            \n                            streamsMetrics.taskLevelTagMap(threadId, taskId)),\n          \n          \n            \n                        new Value()\n          \n          \n            \n                    );\n          \n          \n            \n                    addValueMetricToSensor(\n          \n          \n            \n                        sensor,\n          \n          \n            \n                        TASK_LEVEL_GROUP,\n          \n          \n            \n                        streamsMetrics.taskLevelTagMap(threadId, taskId),\n          \n          \n            \n                        name,\n          \n          \n            \n                        PROCESS_RATIO_DESCRIPTION\n          \n          \n            \n                    );\n          \n      \n    \n    \n  \n\nreq: Please use StreamsMetricsImpl#addValueMetricToSensor()", "author": "cadonna", "createdAt": "2020-03-31T16:30:36Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.java", "diffHunk": "@@ -96,6 +103,22 @@ public static Sensor processLatencySensor(final String threadId,\n         return emptySensor(threadId, taskId, PROCESS_LATENCY, RecordingLevel.DEBUG, streamsMetrics);\n     }\n \n+    public static Sensor activeProcessRatioSensor(final String threadId,\n+                                                  final String taskId,\n+                                                  final StreamsMetricsImpl streamsMetrics) {\n+        final String name = ACTIVE_TASK_PREFIX + PROCESS + RATIO_SUFFIX;\n+        final Sensor sensor = streamsMetrics.taskLevelSensor(threadId, taskId, name, Sensor.RecordingLevel.INFO);\n+        sensor.add(\n+            new MetricName(\n+                name,\n+                TASK_LEVEL_GROUP,\n+                PROCESS_RATIO_DESCRIPTION,\n+                streamsMetrics.taskLevelTagMap(threadId, taskId)),\n+            new Value()\n+        );", "originalCommit": "f2768e9f1a9ee38b59b00621fcc316be00cb1b45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1OTI4OQ==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401259289", "bodyText": "ack.", "author": "guozhangwang", "createdAt": "2020-03-31T22:46:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1MTMyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNzMyNg==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401117326", "bodyText": "prop: I find processLatency and totalLatency a bit misleading. What about processTime and totalProcessTime.", "author": "cadonna", "createdAt": "2020-03-31T18:15:51Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "diffHunk": "@@ -68,6 +70,17 @@ public void markChangelogAsCorrupted(final Collection<TopicPartition> partitions\n         stateMgr.markChangelogAsCorrupted(partitions);\n     }\n \n+    @Override\n+    public void recordProcessLatency(final long elapsedLatencyMs) {", "originalCommit": "f2768e9f1a9ee38b59b00621fcc316be00cb1b45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2MTY5OA==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401261698", "bodyText": "ack.", "author": "guozhangwang", "createdAt": "2020-03-31T22:53:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNzMyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMDQ4Mg==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401120482", "bodyText": "prop: Could you rename recordTotalLatency() to recordProcessRatioAndReset().", "author": "cadonna", "createdAt": "2020-03-31T18:21:20Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -616,6 +619,12 @@ public boolean process(final long wallClockTime) {\n         return true;\n     }\n \n+    @Override\n+    public void recordTotalLatency(final long elapsedLatencyMs) {", "originalCommit": "f2768e9f1a9ee38b59b00621fcc316be00cb1b45", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzODY5Mw==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401138693", "bodyText": "req: Could you please add a unit test for this method?", "author": "cadonna", "createdAt": "2020-03-31T18:50:51Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -616,6 +619,12 @@ public boolean process(final long wallClockTime) {\n         return true;\n     }\n \n+    @Override\n+    public void recordTotalLatency(final long elapsedLatencyMs) {", "originalCommit": "f2768e9f1a9ee38b59b00621fcc316be00cb1b45", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzODg2MA==", "url": "https://github.com/apache/kafka/pull/8370#discussion_r401138860", "bodyText": "req: Could you please add a unit test for this method?", "author": "cadonna", "createdAt": "2020-03-31T18:51:07Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "diffHunk": "@@ -68,6 +70,17 @@ public void markChangelogAsCorrupted(final Collection<TopicPartition> partitions\n         stateMgr.markChangelogAsCorrupted(partitions);\n     }\n \n+    @Override\n+    public void recordProcessLatency(final long elapsedLatencyMs) {", "originalCommit": "f2768e9f1a9ee38b59b00621fcc316be00cb1b45", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7fbe8e0a4944554d96a5e6e649736d0e1ccfa4ad", "url": "https://github.com/apache/kafka/commit/7fbe8e0a4944554d96a5e6e649736d0e1ccfa4ad", "message": "Some suggestions", "committedDate": "2020-03-31T20:28:24Z", "type": "commit"}, {"oid": "72c8bc29a346d1175e20681e31eabe1bbfbb5668", "url": "https://github.com/apache/kafka/commit/72c8bc29a346d1175e20681e31eabe1bbfbb5668", "message": "remove part of the suggestion", "committedDate": "2020-03-31T21:14:35Z", "type": "commit"}, {"oid": "3fc5d22a31b1ee7ef52e1e7d065a1e61f85514ee", "url": "https://github.com/apache/kafka/commit/3fc5d22a31b1ee7ef52e1e7d065a1e61f85514ee", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "committedDate": "2020-03-31T21:20:03Z", "type": "commit"}, {"oid": "5e2557c11a7e22d9a339588e1c76d14a157e8028", "url": "https://github.com/apache/kafka/commit/5e2557c11a7e22d9a339588e1c76d14a157e8028", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "committedDate": "2020-03-31T21:20:32Z", "type": "commit"}, {"oid": "cc224e9527a639f44bc292b23eba8356f2f53026", "url": "https://github.com/apache/kafka/commit/cc224e9527a639f44bc292b23eba8356f2f53026", "message": "Merge pull request #12 from vvcephei/john-8370-suggestion\n\nSome suggestions", "committedDate": "2020-03-31T21:47:12Z", "type": "commit"}, {"oid": "15a15cc1452a76cad471b60daa8b8a19238b5c2e", "url": "https://github.com/apache/kafka/commit/15a15cc1452a76cad471b60daa8b8a19238b5c2e", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9753-active-process-ratio", "committedDate": "2020-03-31T22:38:31Z", "type": "commit"}, {"oid": "707ec0d5632bfea02ac73ac91319d54014e1828b", "url": "https://github.com/apache/kafka/commit/707ec0d5632bfea02ac73ac91319d54014e1828b", "message": "Merge branch 'K9753-active-process-ratio' of https://github.com/guozhangwang/kafka into K9753-active-process-ratio", "committedDate": "2020-03-31T22:38:45Z", "type": "commit"}, {"oid": "32ef38c40728841a720aa75e7c21b193215eea1e", "url": "https://github.com/apache/kafka/commit/32ef38c40728841a720aa75e7c21b193215eea1e", "message": "github comments", "committedDate": "2020-03-31T23:36:54Z", "type": "commit"}]}