{"pr_number": 9617, "pr_title": "MINOR: Factor out common response parsing logic", "pr_createdAt": "2020-11-18T20:50:08Z", "pr_url": "https://github.com/apache/kafka/pull/9617", "timeline": [{"oid": "f87da0acf99c9c25486fd54ce9d429b5ff095a27", "url": "https://github.com/apache/kafka/commit/f87da0acf99c9c25486fd54ce9d429b5ff095a27", "message": "MINOR: Factor out common response parsing logic", "committedDate": "2020-11-18T18:15:15Z", "type": "commit"}, {"oid": "f4ef6275e068991643b27402e540f5c3de934dd5", "url": "https://github.com/apache/kafka/commit/f4ef6275e068991643b27402e540f5c3de934dd5", "message": "Add test case for mismatched correlationId for forwarded request", "committedDate": "2020-11-18T20:47:19Z", "type": "commit"}, {"oid": "d3fae878b46fe147ac33c5979a11b72df5b3013f", "url": "https://github.com/apache/kafka/commit/d3fae878b46fe147ac33c5979a11b72df5b3013f", "message": "Remove unused `correlate` method in `NetworkClient`", "committedDate": "2020-11-18T21:04:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5NDAyOA==", "url": "https://github.com/apache/kafka/pull/9617#discussion_r526494028", "bodyText": "nit: we could put this exception into common/internals to indicate that we don't plan to let external user catch it.", "author": "abbccdda", "createdAt": "2020-11-18T23:37:06Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/CorrelationIdMismatchException.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.common.requests;\n+\n+/**\n+ * Raised if the correlationId in a response header does not match\n+ * the expected value from the request header.\n+ */\n+public class CorrelationIdMismatchException extends IllegalStateException {", "originalCommit": "d3fae878b46fe147ac33c5979a11b72df5b3013f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEwMTA4Ng==", "url": "https://github.com/apache/kafka/pull/9617#discussion_r527101086", "bodyText": "Yeah, I was debating the location. I decided to put it in common/requests since it is not a public package and the error is specific to the request protocol.", "author": "hachikuji", "createdAt": "2020-11-19T18:18:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5NDAyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5NDIyMg==", "url": "https://github.com/apache/kafka/pull/9617#discussion_r526494222", "bodyText": "This field is not used.", "author": "abbccdda", "createdAt": "2020-11-18T23:37:39Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/CorrelationIdMismatchException.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.common.requests;\n+\n+/**\n+ * Raised if the correlationId in a response header does not match\n+ * the expected value from the request header.\n+ */\n+public class CorrelationIdMismatchException extends IllegalStateException {\n+    private final int requestCorrelationId;\n+    private final int responseCorrelationId;\n+\n+    public CorrelationIdMismatchException(\n+        String message,\n+        int requestCorrelationId,\n+        int responseCorrelationId\n+    ) {\n+        super(message);\n+        this.requestCorrelationId = requestCorrelationId;\n+        this.responseCorrelationId = responseCorrelationId;\n+    }\n+\n+    public int requestCorrelationId() {\n+        return requestCorrelationId;", "originalCommit": "d3fae878b46fe147ac33c5979a11b72df5b3013f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA5NTUzOQ==", "url": "https://github.com/apache/kafka/pull/9617#discussion_r527095539", "bodyText": "Yeah, I added it for completeness. It is a little odd if the mismatch exception only tells you what the response correlationId was.", "author": "hachikuji", "createdAt": "2020-11-19T18:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5NDIyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5OTUwNQ==", "url": "https://github.com/apache/kafka/pull/9617#discussion_r526499505", "bodyText": "nit: I don't think we need to remove this helper", "author": "abbccdda", "createdAt": "2020-11-18T23:51:38Z", "path": "clients/src/main/java/org/apache/kafka/clients/NetworkClient.java", "diffHunk": "@@ -974,21 +969,6 @@ private void handleInitiateApiVersionRequests(long now) {\n         }\n     }\n \n-    /**\n-     * Validate that the response corresponds to the request we expect or else explode\n-     */\n-    private static void correlate(RequestHeader requestHeader, ResponseHeader responseHeader) {", "originalCommit": "d3fae878b46fe147ac33c5979a11b72df5b3013f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA5NTA1MA==", "url": "https://github.com/apache/kafka/pull/9617#discussion_r527095050", "bodyText": "Why do you want to keep it if it is not used?", "author": "hachikuji", "createdAt": "2020-11-19T18:09:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5OTUwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3NzExNg==", "url": "https://github.com/apache/kafka/pull/9617#discussion_r526577116", "bodyText": "As ForwardingManager does not extend BrokerToControllerChannelManagerImpl, the requestQueue can be declared as private now.\nhttps://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/server/BrokerToControllerChannelManagerImpl.scala#L58", "author": "chia7712", "createdAt": "2020-11-19T03:51:12Z", "path": "core/src/main/scala/kafka/server/ForwardingManager.scala", "diffHunk": "@@ -17,25 +17,17 @@\n \n package kafka.server\n \n-import kafka.metrics.KafkaMetricsGroup\n+import java.nio.ByteBuffer\n+\n import kafka.network.RequestChannel\n+import kafka.utils.Logging\n import org.apache.kafka.clients.ClientResponse\n-import org.apache.kafka.common.metrics.Metrics\n import org.apache.kafka.common.protocol.Errors\n-import org.apache.kafka.common.requests.{AbstractRequest, AbstractResponse, EnvelopeRequest, EnvelopeResponse}\n-import org.apache.kafka.common.utils.Time\n+import org.apache.kafka.common.requests.{AbstractRequest, AbstractResponse, EnvelopeRequest, EnvelopeResponse, RequestHeader}\n \n import scala.compat.java8.OptionConverters._\n \n-class ForwardingManager(metadataCache: kafka.server.MetadataCache,\n-                        time: Time,\n-                        metrics: Metrics,\n-                        config: KafkaConfig,\n-                        threadNamePrefix: Option[String] = None) extends\n-  BrokerToControllerChannelManagerImpl(metadataCache, time, metrics,\n-    config, \"forwardingChannel\", threadNamePrefix) with KafkaMetricsGroup {\n-\n-  private val forwardingMetricName = \"NumRequestsForwardingToControllerPerSec\"\n+class ForwardingManager(channelManager: BrokerToControllerChannelManager) extends Logging {", "originalCommit": "d3fae878b46fe147ac33c5979a11b72df5b3013f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5186f0f646526a0e7488805d1e33dc9bcc8728ac", "url": "https://github.com/apache/kafka/commit/5186f0f646526a0e7488805d1e33dc9bcc8728ac", "message": "Reduce visibility of request queue", "committedDate": "2020-11-19T18:20:17Z", "type": "commit"}]}