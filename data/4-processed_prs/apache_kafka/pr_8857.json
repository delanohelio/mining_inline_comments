{"pr_number": 8857, "pr_title": "KAFKA-10157: Fix broken tests due to InterruptedException from FinalizedFeatureChangeListener", "pr_createdAt": "2020-06-12T05:51:36Z", "pr_url": "https://github.com/apache/kafka/pull/8857", "timeline": [{"oid": "d131ecbc5747b89c4410401af324d7b6e0242131", "url": "https://github.com/apache/kafka/commit/d131ecbc5747b89c4410401af324d7b6e0242131", "message": "KAFKA-10157: Fix broken tests due to FinalizedFeatureChangeListener ignoring clause", "committedDate": "2020-06-12T05:36:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1NDI5Mg==", "url": "https://github.com/apache/kafka/pull/8857#discussion_r439254292", "bodyText": "How about using match pattern?\n        case _: InterruptedException =>\n          // We ignore InterruptedException. While the queue is empty and this thread is blocking on\n          // taking an item from the queue, a concurrent call to FinalizedFeatureChangeListener.close()\n          // could interrupt the thread and cause an InterruptedException to be raised from queue.take().\n          // In such a case, it is safe to ignore the exception since the thread is being shutdown.\n        case e: Exception =>\n          error(\"Failed to process feature ZK node change event. The broker will eventually exit.\", e)\n          throw new FatalExitError(1)", "author": "chia7712", "createdAt": "2020-06-12T07:29:24Z", "path": "core/src/main/scala/kafka/server/FinalizedFeatureChangeListener.scala", "diffHunk": "@@ -143,13 +142,17 @@ class FinalizedFeatureChangeListener(zkClient: KafkaZkClient) extends Logging {\n   private class ChangeNotificationProcessorThread(name: String) extends ShutdownableThread(name = name) {\n     override def doWork(): Unit = {\n       try {\n-        ignoring(classOf[InterruptedException]) {\n-          queue.take.updateLatestOrThrow()\n-        }\n+        queue.take.updateLatestOrThrow()\n       } catch {\n         case e: Exception => {\n-          error(\"Failed to process feature ZK node change event. The broker will eventually exit.\", e)\n-          throw new FatalExitError(1)\n+          // We ignore InterruptedException. While the queue is empty and this thread is blocking on\n+          // taking an item from the queue, a concurrent call to FinalizedFeatureChangeListener.close()\n+          // could interrupt the thread and cause an InterruptedException to be raised from queue.take().\n+          // In such a case, it is safe to ignore the exception since the thread is being shutdown.\n+          if (!e.isInstanceOf[InterruptedException]) {", "originalCommit": "d131ecbc5747b89c4410401af324d7b6e0242131", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1NjI3Mw==", "url": "https://github.com/apache/kafka/pull/8857#discussion_r439256273", "bodyText": "Done.", "author": "kowshik", "createdAt": "2020-06-12T07:34:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1NDI5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ2MDc0Nw==", "url": "https://github.com/apache/kafka/pull/8857#discussion_r439460747", "bodyText": "I think we can just propagate this exception to ShutdownableThread. It ignores this exception if the thread is stopped.", "author": "junrao", "createdAt": "2020-06-12T14:41:02Z", "path": "core/src/main/scala/kafka/server/FinalizedFeatureChangeListener.scala", "diffHunk": "@@ -143,10 +142,13 @@ class FinalizedFeatureChangeListener(zkClient: KafkaZkClient) extends Logging {\n   private class ChangeNotificationProcessorThread(name: String) extends ShutdownableThread(name = name) {\n     override def doWork(): Unit = {\n       try {\n-        ignoring(classOf[InterruptedException]) {\n-          queue.take.updateLatestOrThrow()\n-        }\n+        queue.take.updateLatestOrThrow()\n       } catch {\n+        case _: InterruptedException =>\n+          // We ignore InterruptedException. While the queue is empty and this thread is blocking on", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU1MTAyNw==", "url": "https://github.com/apache/kafka/pull/8857#discussion_r439551027", "bodyText": "Done. Great point.", "author": "kowshik", "createdAt": "2020-06-12T17:27:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ2MDc0Nw=="}], "type": "inlineReview"}, {"oid": "0b296d827941e1d4797db420160f4d50ccaa2f08", "url": "https://github.com/apache/kafka/commit/0b296d827941e1d4797db420160f4d50ccaa2f08", "message": "Address comment from @chia7712", "committedDate": "2020-06-12T17:32:12Z", "type": "commit"}, {"oid": "0b296d827941e1d4797db420160f4d50ccaa2f08", "url": "https://github.com/apache/kafka/commit/0b296d827941e1d4797db420160f4d50ccaa2f08", "message": "Address comment from @chia7712", "committedDate": "2020-06-12T17:32:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU1NjIyOQ==", "url": "https://github.com/apache/kafka/pull/8857#discussion_r439556229", "bodyText": "nit: if it is shutting down -> when shutting down.", "author": "abbccdda", "createdAt": "2020-06-12T17:37:53Z", "path": "core/src/main/scala/kafka/server/FinalizedFeatureChangeListener.scala", "diffHunk": "@@ -143,10 +142,15 @@ class FinalizedFeatureChangeListener(zkClient: KafkaZkClient) extends Logging {\n   private class ChangeNotificationProcessorThread(name: String) extends ShutdownableThread(name = name) {\n     override def doWork(): Unit = {\n       try {\n-        ignoring(classOf[InterruptedException]) {\n-          queue.take.updateLatestOrThrow()\n-        }\n+        queue.take.updateLatestOrThrow()\n       } catch {\n+        case ie: InterruptedException =>\n+          // While the queue is empty and this thread is blocking on taking an item from the queue,\n+          // a concurrent call to FinalizedFeatureChangeListener.close() could interrupt the thread\n+          // and cause an InterruptedException to be raised from queue.take(). In such a case, it is\n+          // safe to ignore the exception if the thread is being shutdown. We raise the exception\n+          // here again, because, it is ignored by ShutdownableThread if it is shutting down.", "originalCommit": "0b296d827941e1d4797db420160f4d50ccaa2f08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}