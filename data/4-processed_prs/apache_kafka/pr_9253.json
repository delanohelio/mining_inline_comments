{"pr_number": 9253, "pr_title": "KAFKA-10366 & KAFKA-9649: Implement KIP-659 to allow TimeWindowedDeserializer and TimeWindowedSerde to handle window size", "pr_createdAt": "2020-09-04T18:44:38Z", "pr_url": "https://github.com/apache/kafka/pull/9253", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjA1NjAwMA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562056000", "bodyText": "The console consumer made this check necessary - if there's a simpler way to do this lmk", "author": "lct45", "createdAt": "2021-01-21T17:16:13Z", "path": "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java", "diffHunk": "@@ -61,6 +61,21 @@ public Long getWindowSize() {\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public void configure(final Map<String, ?> configs, final boolean isKey) {\n+        //check if the config is set and the window size is already set from the constructor\n+        final Long configWindowSize;\n+        if (configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG) instanceof String) {", "originalCommit": "2f91dafc47c61e5688a727ec9bc55cb16557dc84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2b367798b2a111a065632113eb82dfae5f02e00e", "url": "https://github.com/apache/kafka/commit/2b367798b2a111a065632113eb82dfae5f02e00e", "message": "adding more testing", "committedDate": "2021-01-21T17:19:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0Njc4NQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562146785", "bodyText": "Do you want to change this from Long.MAX_VALUE as well?", "author": "wcarlson5", "createdAt": "2021-01-21T19:36:03Z", "path": "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java", "diffHunk": "@@ -33,22 +33,22 @@\n  */\n public class TimeWindowedDeserializer<T> implements Deserializer<Windowed<T>> {\n \n-    private final Long windowSize;\n+    private Long windowSize;\n     private boolean isChangelogTopic;\n \n     private Deserializer<T> inner;\n-    \n+\n     // Default constructor needed by Kafka\n     public TimeWindowedDeserializer() {\n-        this(null, Long.MAX_VALUE);\n+        this(null, null);\n     }\n \n-    // TODO: fix this part as last bits of KAFKA-4468\n+    @Deprecated\n     public TimeWindowedDeserializer(final Deserializer<T> inner) {\n         this(inner, Long.MAX_VALUE);", "originalCommit": "2b367798b2a111a065632113eb82dfae5f02e00e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1NjAxOQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562156019", "bodyText": "I thought about it but figured since it's deprecated anyway and we want to keep backwards compatibility I would leave it. WDYT?", "author": "lct45", "createdAt": "2021-01-21T19:52:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0Njc4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjgyMzY5OA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562823698", "bodyText": "You are probably right since we are deprecating it. But I don't have a strong opinion on this either way", "author": "wcarlson5", "createdAt": "2021-01-22T18:23:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0Njc4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0OTIxNw==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562149217", "bodyText": "I don't think we should get rid of the generics unless we have to", "author": "wcarlson5", "createdAt": "2021-01-21T19:40:25Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java", "diffHunk": "@@ -327,7 +329,7 @@ public void shouldAggregateWindowed() throws Exception {\n         startStreams();\n \n         final List<KeyValueTimestamp<Windowed<String>, Integer>> windowedMessages = receiveMessagesWithTimestamp(\n-            new TimeWindowedDeserializer<>(),", "originalCommit": "2b367798b2a111a065632113eb82dfae5f02e00e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY5ODczMA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562698730", "bodyText": "The window size has to be set either in the constructor or in the configs so if we use the generics we have to use the configs, but the general idea was to push users to do the constructor over the configs. Also in this scenario, I wanted to confirm that it would work fine without configs", "author": "lct45", "createdAt": "2021-01-22T15:13:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0OTIxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjgyMjcwOQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562822709", "bodyText": "That is fine. but I think It should be like new TimeWindowedDeserializer<String>(windowedSerde.deserializer(), 500L) if that complies. We want to keep the type checking", "author": "wcarlson5", "createdAt": "2021-01-22T18:21:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0OTIxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDAxOQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562150019", "bodyText": "Why don't you use timeDifference like you did below?", "author": "wcarlson5", "createdAt": "2021-01-21T19:41:58Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java", "diffHunk": "@@ -235,25 +235,27 @@ public void shouldReduceWindowed() throws Exception {\n                 .thenComparing(KeyValueTimestamp::value);\n \n         windowedOutput.sort(comparator);\n-        final long firstBatchWindow = firstBatchTimestamp / 500 * 500;\n-        final long secondBatchWindow = secondBatchTimestamp / 500 * 500;\n+        final long firstBatchWindowStart = firstBatchTimestamp / 500 * 500;\n+        final long firstBatchWindowEnd = firstBatchWindowStart + 500;", "originalCommit": "2b367798b2a111a065632113eb82dfae5f02e00e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY5OTkzOQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562699939", "bodyText": "These are time windows so it would be windowSize, but I didn't write this test, just updated it to fit with the updated deserializer. I can switch it out to windowSize if you think it would help with readability, WYDT?", "author": "lct45", "createdAt": "2021-01-22T15:14:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDAxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjgyMTE3NA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562821174", "bodyText": "It would probably be better practice but it's not necessary to fix. So if you feel like it", "author": "wcarlson5", "createdAt": "2021-01-22T18:18:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDAxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDc0Mg==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562150742", "bodyText": "Is there some sort of check you can verify here?", "author": "wcarlson5", "createdAt": "2021-01-21T19:43:18Z", "path": "streams/src/test/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializerTest.java", "diffHunk": "@@ -56,4 +57,23 @@ public void testWindowedValueDeserializerNoArgConstructors() {\n         assertNotNull(\"Inner deserializer should be not null\", inner);\n         assertTrue(\"Inner deserializer type should be ByteArrayDeserializer\", inner instanceof ByteArrayDeserializer);\n     }\n+\n+    @Test\n+    public void setWindowSizeThroughConfigs() {\n+        props.put(StreamsConfig.WINDOW_SIZE_MS_CONFIG, \"500\");\n+        final TimeWindowedDeserializer<?> deserializer = new TimeWindowedDeserializer<>();\n+        deserializer.configure(props, false);", "originalCommit": "2b367798b2a111a065632113eb82dfae5f02e00e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjcwOTE4NA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562709184", "bodyText": "Ah yeah, good catch", "author": "lct45", "createdAt": "2021-01-22T15:27:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDc0Mg=="}], "type": "inlineReview"}, {"oid": "ec1afe157d1c14f895802f02bbc76aea5eb3ad87", "url": "https://github.com/apache/kafka/commit/ec1afe157d1c14f895802f02bbc76aea5eb3ad87", "message": "update deserializer for windows", "committedDate": "2021-01-26T21:11:42Z", "type": "commit"}, {"oid": "eaf0557593888894c0ef2d27253b9f1889f03604", "url": "https://github.com/apache/kafka/commit/eaf0557593888894c0ef2d27253b9f1889f03604", "message": "streamlined added configs", "committedDate": "2021-01-26T21:11:42Z", "type": "commit"}, {"oid": "4798fa101012e040d6ac6bcb0072a66a20753233", "url": "https://github.com/apache/kafka/commit/4798fa101012e040d6ac6bcb0072a66a20753233", "message": "KIP discussion updates", "committedDate": "2021-01-26T21:11:43Z", "type": "commit"}, {"oid": "82902cdb3662df4b236fedc025e24c59cfa7982b", "url": "https://github.com/apache/kafka/commit/82902cdb3662df4b236fedc025e24c59cfa7982b", "message": "semantic clean up", "committedDate": "2021-01-26T21:12:29Z", "type": "commit"}, {"oid": "3b8591a4993f5ca420b3a12736324de31b471946", "url": "https://github.com/apache/kafka/commit/3b8591a4993f5ca420b3a12736324de31b471946", "message": "semantic clean up", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "f95603bb9c8691f335f7f1e73ece49fecbffbbda", "url": "https://github.com/apache/kafka/commit/f95603bb9c8691f335f7f1e73ece49fecbffbbda", "message": "Scala updates for configs", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "4a67527fc4fafa0e420b24073e56e2711705a600", "url": "https://github.com/apache/kafka/commit/4a67527fc4fafa0e420b24073e56e2711705a600", "message": "Updated implementation", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "ad47398cbe82a0da81b27016226dd2fb8045774a", "url": "https://github.com/apache/kafka/commit/ad47398cbe82a0da81b27016226dd2fb8045774a", "message": "adding more testing", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "93b4564bbfac04a014568eed45cf5e8ad17c27ef", "url": "https://github.com/apache/kafka/commit/93b4564bbfac04a014568eed45cf5e8ad17c27ef", "message": "walkers comments", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "711315ad40e3fb5d379a19a11de90815af7b900f", "url": "https://github.com/apache/kafka/commit/711315ad40e3fb5d379a19a11de90815af7b900f", "message": "scala fixes", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "dfa9b0b6a136297f5ba675d24994b85db5a4a521", "url": "https://github.com/apache/kafka/commit/dfa9b0b6a136297f5ba675d24994b85db5a4a521", "message": "tetsting fix", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "a042ba6380a812a0b15fdfb7b85c11ad9d5cfe0d", "url": "https://github.com/apache/kafka/commit/a042ba6380a812a0b15fdfb7b85c11ad9d5cfe0d", "message": "scala fix", "committedDate": "2021-01-26T22:06:19Z", "type": "forcePushed"}, {"oid": "4ecf5f9ac8b451045266c752448d731fc6354d4b", "url": "https://github.com/apache/kafka/commit/4ecf5f9ac8b451045266c752448d731fc6354d4b", "message": "scala fix", "committedDate": "2021-01-26T22:07:57Z", "type": "commit"}, {"oid": "4ecf5f9ac8b451045266c752448d731fc6354d4b", "url": "https://github.com/apache/kafka/commit/4ecf5f9ac8b451045266c752448d731fc6354d4b", "message": "scala fix", "committedDate": "2021-01-26T22:07:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDg4MTI4OA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r564881288", "bodyText": "Not sure if this is the most secure check - went through a few different iterations but got type issues with all of them except this one. If someone has a better idea, lmk", "author": "lct45", "createdAt": "2021-01-26T22:35:39Z", "path": "streams/streams-scala/src/test/scala/org/apache/kafka/streams/scala/SerdesUnitTest.scala", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.streams.scala\n+\n+import org.apache.kafka.streams.processor.internals.testutil.LogCaptureAppender\n+import org.apache.kafka.streams.kstream.WindowedSerdes.TimeWindowedSerde\n+import org.junit.Assert.assertFalse\n+import org.junit.Test\n+\n+class SerdesUnitTest {\n+\n+  @Test\n+  def shouldLogMessageWhenTimeWindowedSerdeIsUsed(): Unit = {\n+\n+    Serdes.timeWindowedSerde(new TimeWindowedSerde[String]())\n+    val appender = LogCaptureAppender.createAndRegister()\n+    val warning = appender.getMessages()\n+    assertFalse(\"There should be a warning about TimeWindowedDeserializer\", warning.isEmpty)", "originalCommit": "688b59b0f9aa5ee154a025b442135365add985d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDkwNjgzOQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r564906839", "bodyText": "This test also appears to fail locally since it uses the constructor we deprecate in this PR and from a quick search it doesn't look like scala suppresses these warnings as easily as Java. Any thoughts on if this test is vital / a way to make this work? cc @guozhangwang\nIf I suppress warnings, the test fails (: thoughts on viability?", "author": "lct45", "createdAt": "2021-01-26T23:23:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDg4MTI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYwMjEyNA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r566602124", "bodyText": "Personally I'm not a big fan to add tests coverage for deprecated functions to make sure the expected warning is generated :) Also, is this test correct? Since currently the Serdes.timeWindowedSerde itself would not log any warning, and we would only log when the deserialize is called right (see my other comment)?\nAnyways, I'm actually okay if you would like to just remove this test. But on the other hand we should try to avoid a WARN at a per-record granularity too.", "author": "guozhangwang", "createdAt": "2021-01-29T06:17:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDg4MTI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njk1NzU0Nw==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r566957547", "bodyText": "Cool, I'm going to go ahead and take the test out. Thanks!", "author": "lct45", "createdAt": "2021-01-29T16:53:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDg4MTI4OA=="}], "type": "inlineReview"}, {"oid": "ff96cebb4639b03244e32287cb0d9be32964c899", "url": "https://github.com/apache/kafka/commit/ff96cebb4639b03244e32287cb0d9be32964c899", "message": "running scala test", "committedDate": "2021-01-26T23:07:29Z", "type": "commit"}, {"oid": "ff96cebb4639b03244e32287cb0d9be32964c899", "url": "https://github.com/apache/kafka/commit/ff96cebb4639b03244e32287cb0d9be32964c899", "message": "running scala test", "committedDate": "2021-01-26T23:07:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU5NzAyMA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r566597020", "bodyText": "Thinking about this once again: if users did used the timeWindowedSerde, then we would log a WARN on each record, which would soon flood the log files. So instead of log at the deserialize function, maybe it's better to just log once at the timeWindowedSerde itself?", "author": "guozhangwang", "createdAt": "2021-01-29T06:00:35Z", "path": "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/Serdes.scala", "diffHunk": "@@ -41,8 +43,19 @@ object Serdes {\n   implicit def Integer: Serde[Int] = JSerdes.Integer().asInstanceOf[Serde[Int]]\n   implicit def JavaInteger: Serde[java.lang.Integer] = JSerdes.Integer()\n \n-  implicit def timeWindowedSerde[T](implicit tSerde: Serde[T]): WindowedSerdes.TimeWindowedSerde[T] =\n-    new WindowedSerdes.TimeWindowedSerde[T](tSerde)\n+  implicit def timeWindowedSerde[T](implicit inner: Serde[T]): Serde[Windowed[T]] =\n+    new JSerdes.WrapperSerde[Windowed[T]](\n+      new TimeWindowedSerializer[T](inner.serializer),\n+      new TimeWindowedDeserializer[T](inner.deserializer) {\n+        override def deserialize(topic: String, data: Array[Byte]): Windowed[T] = {", "originalCommit": "ff96cebb4639b03244e32287cb0d9be32964c899", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Njk1NzIwNA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r566957204", "bodyText": "Yeah, I agree that we don't want to spam the logs. There is the deprecated annotation above as well - with that do we even need the log messaged for the timeWindowedSerde?", "author": "lct45", "createdAt": "2021-01-29T16:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU5NzAyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzAxMDgzMQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r567010831", "bodyText": "Sorry if I'm missing the point here, @lct45 , but why do we need any custom code at all in the scala wrapper? Shouldn't we just wrap the Java Serde, which you've already set up to warn upon configure if there's no constructor arg and no configured value?", "author": "vvcephei", "createdAt": "2021-01-29T18:24:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU5NzAyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzAxMzIyOA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r567013228", "bodyText": "Hmm, maybe we don't need custom code? I did this implementation back in the fall before KIP-616 was merged. You know the scala better than I do, but I think you're right that the deprecated warning in the TimeWindowedDeserializer will be enough now that KIP-616 added the deprecated annotation to this class", "author": "lct45", "createdAt": "2021-01-29T18:29:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU5NzAyMA=="}], "type": "inlineReview"}, {"oid": "1d7ce1befa505301accad739b8e91c7213700f9d", "url": "https://github.com/apache/kafka/commit/1d7ce1befa505301accad739b8e91c7213700f9d", "message": "Deleting scala test", "committedDate": "2021-01-29T16:53:46Z", "type": "commit"}, {"oid": "717381b0b468e377ffdf06b61ad19f0127035e46", "url": "https://github.com/apache/kafka/commit/717381b0b468e377ffdf06b61ad19f0127035e46", "message": "removing scala", "committedDate": "2021-02-01T19:13:51Z", "type": "commit"}, {"oid": "717381b0b468e377ffdf06b61ad19f0127035e46", "url": "https://github.com/apache/kafka/commit/717381b0b468e377ffdf06b61ad19f0127035e46", "message": "removing scala", "committedDate": "2021-02-01T19:13:51Z", "type": "forcePushed"}, {"oid": "dcc9395bdc34e8995d5f8bd56aad8dbc891548cc", "url": "https://github.com/apache/kafka/commit/dcc9395bdc34e8995d5f8bd56aad8dbc891548cc", "message": "Merge branch 'trunk' into windowsconfig", "committedDate": "2021-02-01T19:15:35Z", "type": "commit"}]}