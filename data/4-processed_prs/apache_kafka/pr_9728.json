{"pr_number": 9728, "pr_title": "MINOR: make sure all dir jobs are completed", "pr_createdAt": "2020-12-10T17:25:43Z", "pr_url": "https://github.com/apache/kafka/pull/9728", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2MTY3MA==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r540461670", "bodyText": "The name makes this look generic, but it's not. The logging is very specific. I would change the name to be specific.", "author": "ijuma", "createdAt": "2020-12-10T20:06:22Z", "path": "core/src/main/scala/kafka/log/LogManager.scala", "diffHunk": "@@ -435,6 +436,20 @@ class LogManager(logDirs: Seq[File],\n       cleaner.startup()\n   }\n \n+  /**\n+   * wait all jobs to complete\n+   * @param jobs jobs\n+   * @return true if all pass. Otherwise, false\n+   */\n+  private[log] def allPass(jobs: Seq[Future[_]]): Boolean = {", "originalCommit": "26ec243bdea88799250de703256bef7cfe231034", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2Mzg1MA==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r540463850", "bodyText": "How about \"waitForAllToComplete\"", "author": "chia7712", "createdAt": "2020-12-10T20:10:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2MTY3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2NzQ5Ng==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r540467496", "bodyText": "The log message talks explicitly about LogManager shutdown. Seems like you'd want it to say something about log manager shutdown. I would even set the type parameter to the type we expect from the shutdown method.", "author": "ijuma", "createdAt": "2020-12-10T20:16:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2MTY3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NjkyNQ==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r540486925", "bodyText": "I would even set the type parameter to the type we expect from the shutdown method.\n\nThere is no explicit type so I didn't define the type parameter.", "author": "chia7712", "createdAt": "2020-12-10T20:49:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2MTY3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3NzQ4MA==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r540477480", "bodyText": "This refactoring is good.", "author": "kowshik", "createdAt": "2020-12-10T20:33:35Z", "path": "core/src/main/scala/kafka/log/LogManager.scala", "diffHunk": "@@ -478,17 +493,8 @@ class LogManager(logDirs: Seq[File],\n     }\n \n     try {\n-      for ((dir, dirJobs) <- jobs) {\n-        val hasErrors = dirJobs.exists  { future =>\n-          Try(future.get) match {\n-            case Success(_) => false\n-            case Failure(e) =>\n-              warn(s\"There was an error in one of the threads during LogManager shutdown: ${e.getCause}\")\n-              true\n-          }\n-        }\n-\n-        if (!hasErrors) {\n+      jobs.forKeyValue { (dir, dirJobs) =>\n+        if (allPass(dirJobs)) {", "originalCommit": "26ec243bdea88799250de703256bef7cfe231034", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3ODAwOQ==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r540478009", "bodyText": "This test may not still catch the bug introduced in #9680.\nWe can continue more discussion under this review comment in #9680: https://github.com/apache/kafka/pull/9680/files#r540476157.\nWe should still get this PR merged though, since it fixes the problem.\ncc @ijuma", "author": "kowshik", "createdAt": "2020-12-10T20:34:28Z", "path": "core/src/test/scala/unit/kafka/log/LogManagerTest.scala", "diffHunk": "@@ -680,4 +680,15 @@ class LogManagerTest {\n     time.sleep(logConfig.fileDeleteDelayMs + 1)\n     verifyMetrics(1)\n   }\n+\n+  @Test", "originalCommit": "26ec243bdea88799250de703256bef7cfe231034", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4Mzk0MQ==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r540483941", "bodyText": "@kowshik Thanks for you explanation! It is indeed hard to give full test on the shutdown path.\n\nThis test may not still catch the bug introduced in #9680.\n\nyou are right. I'm going to enrich the unit tests.", "author": "chia7712", "createdAt": "2020-12-10T20:44:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3ODAwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NDk5MA==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r540484990", "bodyText": "For another, Your comment in ttps://github.com//pull/9680/files#r540476157 is great to me. It would be better that we can make higher test coverage on that!", "author": "chia7712", "createdAt": "2020-12-10T20:46:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3ODAwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4NDc1NQ==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r540684755", "bodyText": "Sounds good!", "author": "kowshik", "createdAt": "2020-12-11T04:36:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3ODAwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5NjM1NQ==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r543396355", "bodyText": "I would add a callback here for the failures and do the logging in the callback. That way you can keep the name generic.", "author": "ijuma", "createdAt": "2020-12-15T14:31:54Z", "path": "core/src/main/scala/kafka/log/LogManager.scala", "diffHunk": "@@ -435,6 +436,20 @@ class LogManager(logDirs: Seq[File],\n       cleaner.startup()\n   }\n \n+  /**\n+   * wait all jobs to complete\n+   * @param jobs jobs\n+   * @return true if all pass. Otherwise, false\n+   */\n+  private[log] def waitForAllToComplete(jobs: Seq[Future[_]]): Boolean = {", "originalCommit": "3d97a74fbbd6ee03cfdd8c5eb10d8aeadd46b95f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQwNjUzNw==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r543406537", "bodyText": "good suggestion. will address it.", "author": "chia7712", "createdAt": "2020-12-15T14:44:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5NjM1NQ=="}], "type": "inlineReview"}, {"oid": "65f983cea0014373c37ccd7cae70f7d41f18df69", "url": "https://github.com/apache/kafka/commit/65f983cea0014373c37ccd7cae70f7d41f18df69", "message": "move LogManagerTest to companion object and add callback to it", "committedDate": "2020-12-15T14:43:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAzNzQxNw==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r552037417", "bodyText": "We should mention that this will be called for each future that throws an exception.", "author": "ijuma", "createdAt": "2021-01-05T16:18:49Z", "path": "core/src/main/scala/kafka/log/LogManager.scala", "diffHunk": "@@ -1167,6 +1160,21 @@ class LogManager(logDirs: Seq[File],\n \n object LogManager {\n \n+  /**\n+   * wait all jobs to complete\n+   * @param jobs jobs\n+   * @param callback handle the exception caused by Future#get", "originalCommit": "65f983cea0014373c37ccd7cae70f7d41f18df69", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAzNzUwOQ==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r552037509", "bodyText": "Nit: start with capital?", "author": "ijuma", "createdAt": "2021-01-05T16:18:58Z", "path": "core/src/main/scala/kafka/log/LogManager.scala", "diffHunk": "@@ -1167,6 +1160,21 @@ class LogManager(logDirs: Seq[File],\n \n object LogManager {\n \n+  /**\n+   * wait all jobs to complete", "originalCommit": "65f983cea0014373c37ccd7cae70f7d41f18df69", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAzOTM1MA==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r552039350", "bodyText": "Should we not return true in this answer?", "author": "ijuma", "createdAt": "2021-01-05T16:21:49Z", "path": "core/src/test/scala/unit/kafka/log/LogManagerTest.scala", "diffHunk": "@@ -680,4 +681,31 @@ class LogManagerTest {\n     time.sleep(logConfig.fileDeleteDelayMs + 1)\n     verifyMetrics(1)\n   }\n+\n+  @Test\n+  def testWaitForAllToComplete(): Unit = {\n+    var invokedCount = 0\n+    val success: Future[Boolean] = Mockito.mock(classOf[Future[Boolean]])\n+    Mockito.when(success.get()).thenAnswer(_ => invokedCount += 1)", "originalCommit": "65f983cea0014373c37ccd7cae70f7d41f18df69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA1MTA2Mg==", "url": "https://github.com/apache/kafka/pull/9728#discussion_r552051062", "bodyText": "waitForAllToComplete does not use the return value so it does not cause casting error even though we don't return true. However, it does look like a bug so I will add the return value.", "author": "chia7712", "createdAt": "2021-01-05T16:39:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAzOTM1MA=="}], "type": "inlineReview"}, {"oid": "1cb6d892ba183cf2f727df37f44be2d5eeba3bd5", "url": "https://github.com/apache/kafka/commit/1cb6d892ba183cf2f727df37f44be2d5eeba3bd5", "message": "MINOR: make sure all dir jobs are completed", "committedDate": "2021-01-05T16:24:33Z", "type": "commit"}, {"oid": "fe6ef2750fdd79b8a542ddb9bfc559bb69b2ed5f", "url": "https://github.com/apache/kafka/commit/fe6ef2750fdd79b8a542ddb9bfc559bb69b2ed5f", "message": "rename and add more tests", "committedDate": "2021-01-05T16:24:33Z", "type": "commit"}, {"oid": "969e8d2b862b694dd5f5c362492d33027c670bbe", "url": "https://github.com/apache/kafka/commit/969e8d2b862b694dd5f5c362492d33027c670bbe", "message": "move LogManagerTest to companion object and add callback to it", "committedDate": "2021-01-05T16:24:33Z", "type": "commit"}, {"oid": "d7dc8ca698f79cb70103497a57eb1ed4fc9634fc", "url": "https://github.com/apache/kafka/commit/d7dc8ca698f79cb70103497a57eb1ed4fc9634fc", "message": "tweak comments", "committedDate": "2021-01-05T16:40:06Z", "type": "commit"}, {"oid": "d7dc8ca698f79cb70103497a57eb1ed4fc9634fc", "url": "https://github.com/apache/kafka/commit/d7dc8ca698f79cb70103497a57eb1ed4fc9634fc", "message": "tweak comments", "committedDate": "2021-01-05T16:40:06Z", "type": "forcePushed"}]}