{"pr_number": 8640, "pr_title": "MINOR: equals() should check _unknownTaggedFields", "pr_createdAt": "2020-05-10T04:44:08Z", "pr_url": "https://github.com/apache/kafka/pull/8640", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTYyOA==", "url": "https://github.com/apache/kafka/pull/8640#discussion_r432865628", "bodyText": "Did you mean to make a change to unknownTaggedFields before the two asserts above?", "author": "ijuma", "createdAt": "2020-05-30T15:53:24Z", "path": "clients/src/test/java/org/apache/kafka/common/message/MessageTest.java", "diffHunk": "@@ -962,4 +962,23 @@ private void verifyWriteSucceeds(short version, Message message) throws Exceptio\n         assertEquals(\"Expected the serialized size to be \" + size +\n             \", but it was \" + buf.position(), size, buf.position());\n     }\n+\n+    @Test\n+    public void testCompareWithUnknownTaggedFields() throws Exception {\n+        CreateTopicsRequestData createTopics = new CreateTopicsRequestData();\n+        createTopics.setTimeoutMs(123);\n+        CreateTopicsRequestData createTopics2 = new CreateTopicsRequestData();\n+        createTopics2.setTimeoutMs(123);\n+        assertEquals(createTopics, createTopics2);\n+        assertEquals(createTopics2, createTopics);\n+        createTopics.unknownTaggedFields();\n+        assertEquals(createTopics, createTopics2);\n+        assertEquals(createTopics2, createTopics);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMTUxNA==", "url": "https://github.com/apache/kafka/pull/8640#discussion_r436401514", "bodyText": "No, this is intentional.  Invoking unknownTaggedFields will create the list if it doesn't exist.  There is an optimization where if the list is empty, as it will be the vast majority of the time, we just store null.  Example:\n    @Override\n    public List<RawTaggedField> unknownTaggedFields() {\n        if (_unknownTaggedFields == null) {\n            _unknownTaggedFields = new ArrayList<>(0);\n        }\n        return _unknownTaggedFields;\n    }\n\nTherefore it is good to test that messages with null here are equivalent (via equals) to messages that have an empty list here.", "author": "cmccabe", "createdAt": "2020-06-07T21:02:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTYyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMTkxNA==", "url": "https://github.com/apache/kafka/pull/8640#discussion_r436401914", "bodyText": "OK, can you please add a comment? It's not obvious why the accessor is being called.", "author": "ijuma", "createdAt": "2020-06-07T21:06:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTYyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg2MDk1OA==", "url": "https://github.com/apache/kafka/pull/8640#discussion_r436860958", "bodyText": "Added", "author": "cmccabe", "createdAt": "2020-06-08T17:08:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTYyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTY5Ng==", "url": "https://github.com/apache/kafka/pull/8640#discussion_r432865696", "bodyText": "What is the purpose of this?", "author": "ijuma", "createdAt": "2020-05-30T15:54:31Z", "path": "generator/src/main/java/org/apache/kafka/message/MessageDataGenerator.java", "diffHunk": "@@ -2033,15 +2033,21 @@ private void generateClassEquals(String className, StructSpec struct,\n             elementKeysAreEqual ? \"elementKeysAreEqual\" : \"equals\");\n         buffer.incrementIndent();\n         buffer.printf(\"if (!(obj instanceof %s)) return false;%n\", className);\n+        buffer.printf(\"%s other = (%s) obj;%n\", className, className);\n         if (!struct.fields().isEmpty()) {\n-            buffer.printf(\"%s other = (%s) obj;%n\", className, className);\n             for (FieldSpec field : struct.fields()) {\n                 if (!elementKeysAreEqual || field.mapKey()) {\n                     generateFieldEquals(field);\n                 }\n             }\n         }\n-        buffer.printf(\"return true;%n\");\n+        if (elementKeysAreEqual) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMTc0Nw==", "url": "https://github.com/apache/kafka/pull/8640#discussion_r436401747", "bodyText": "This function in MessageDataGenerator is used to generate equals, but it is also used to generate the elementKeysAreEqual function.  The latter function does not consider unknown tagged fields, since they can't be part of the key.", "author": "cmccabe", "createdAt": "2020-06-07T21:04:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTY5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQwMTk2NQ==", "url": "https://github.com/apache/kafka/pull/8640#discussion_r436401965", "bodyText": "Thanks for the clarification, makes sense.", "author": "ijuma", "createdAt": "2020-06-07T21:07:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTY5Ng=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "b847e6c9bb08fca4b6d0e184f489ff7a167f7ee5", "url": "https://github.com/apache/kafka/commit/b847e6c9bb08fca4b6d0e184f489ff7a167f7ee5", "message": "MINOR: equals() should check _unknownTaggedFields\n\n_unknownTaggedFields contains tagged fields which we don't understand\nwith the current schema.  However, we still want to keep the data around\nfor various purposes. For example, if we are printing out a JSON form of\nthe message we received, we want to include a section containing the\ntagged fields that couldn't be parsed. To leave these out would give an\nincorrect impression of what was sent over the wire.  Since the unknown\ntagged fields represent real data, they should be included in the fields\nchecked by equals()", "committedDate": "2020-06-08T17:03:47Z", "type": "commit"}, {"oid": "b847e6c9bb08fca4b6d0e184f489ff7a167f7ee5", "url": "https://github.com/apache/kafka/commit/b847e6c9bb08fca4b6d0e184f489ff7a167f7ee5", "message": "MINOR: equals() should check _unknownTaggedFields\n\n_unknownTaggedFields contains tagged fields which we don't understand\nwith the current schema.  However, we still want to keep the data around\nfor various purposes. For example, if we are printing out a JSON form of\nthe message we received, we want to include a section containing the\ntagged fields that couldn't be parsed. To leave these out would give an\nincorrect impression of what was sent over the wire.  Since the unknown\ntagged fields represent real data, they should be included in the fields\nchecked by equals()", "committedDate": "2020-06-08T17:03:47Z", "type": "forcePushed"}]}