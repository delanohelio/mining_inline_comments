{"pr_number": 8056, "pr_title": "KAFKA-9519: Deprecating ZK for ConfigCommand", "pr_createdAt": "2020-02-06T21:59:05Z", "pr_url": "https://github.com/apache/kafka/pull/8056", "timeline": [{"oid": "8a7db5a595d4acd515aedfe118bb1205f2356f9f", "url": "https://github.com/apache/kafka/commit/8a7db5a595d4acd515aedfe118bb1205f2356f9f", "message": "KAFKA-9519: Deprecating ZK for ConfigCommand", "committedDate": "2020-02-06T21:56:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExMTE5OA==", "url": "https://github.com/apache/kafka/pull/8056#discussion_r376111198", "bodyText": "Can add \"Replaced by --bootstrap-server, REQUIRED unless --bootstrap-server is given.\" as per PreferredReplicaLeaderElectionCommand.  It might also be appropriate to add .requiredUnless(\"bootstrap-server\") after parser.accepts() as long as bootstrap-server is defined in the parser before zookeeper, as per https://jopt-simple.github.io/jopt-simple/apidocs/joptsimple/OptionSpecBuilder.html#requiredUnless-java.lang.String-java.lang.String...-\nparser.accepts(\"zookeeper\", \"DEPRECATED...\").requiredUnless(\"bootstrap-server\")", "author": "rondagostino", "createdAt": "2020-02-06T22:11:32Z", "path": "core/src/main/scala/kafka/admin/ConfigCommand.scala", "diffHunk": "@@ -535,7 +537,7 @@ object ConfigCommand extends Config {\n \n   class ConfigCommandOptions(args: Array[String]) extends CommandDefaultOptions(args) {\n \n-    val zkConnectOpt = parser.accepts(\"zookeeper\", \"The connection string for the zookeeper connection in the form host:port. \" +\n+    val zkConnectOpt = parser.accepts(\"zookeeper\", \"DEPRECATED. The connection string for the zookeeper connection in the form host:port. \" +", "originalCommit": "8a7db5a595d4acd515aedfe118bb1205f2356f9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExNTE3Nw==", "url": "https://github.com/apache/kafka/pull/8056#discussion_r376115177", "bodyText": "Thanks for the suggestion @rondagostino, not very familiar with Scala so this is good to know :). Just so I'm clear here, the addition of .requiredUnless(\"bootstrap-server\") would look something like this?\n    val bootstrapServerOpt = parser.accepts(\"bootstrap-server\", \"The Kafka server to connect to. \" +\n      \"This is required for describing and altering broker configs.\")\n      .withRequiredArg\n      .describedAs(\"server to connect to\")\n      .ofType(classOf[String])\n    val zkConnectOpt = parser.accepts(\"zookeeper\", \"DEPRECATED. The connection string for the zookeeper connection in the form host:port. \" +\n      \"Multiple URLS can be given to allow fail-over. Replaced by --bootstrap-server, REQUIRED unless --bootstrap-server is given.\")\n      .requiredUnless(\"bootstrap-server\")\n      .withRequiredArg\n      .describedAs(\"urls\")\n      .ofType(classOf[String])", "author": "skaundinya15", "createdAt": "2020-02-06T22:21:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExMTE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExODY2Ng==", "url": "https://github.com/apache/kafka/pull/8056#discussion_r376118666", "bodyText": "I agree that it's a good idea to suggest using --bootstrap-server instead.  I'm not sure we need to use requireUnless, since I think that the argument parsing code already handles this", "author": "cmccabe", "createdAt": "2020-02-06T22:30:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExMTE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExOTAwMw==", "url": "https://github.com/apache/kafka/pull/8056#discussion_r376119003", "bodyText": "Yes, I believe that is correct.  You could also add a test to make sure the command fails if neither are given (there may be a test for that already, but I didn't see it upon looking quickly).  Such a test should already pass if it exists or if you add one, and then having it would be good if you add the .requiredUnless(\"bootstrap-server\").  You could also add a test to make sure the command fails if both options are given.  I thunk you would have to add new logic for that, though I'm not sure.  Adding a test for it would probably be straightforward and a good idea.", "author": "rondagostino", "createdAt": "2020-02-06T22:31:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExMTE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEzNTE5Mg==", "url": "https://github.com/apache/kafka/pull/8056#discussion_r376135192", "bodyText": "@cmccabe is correct, in the code here: \n  \n    \n      kafka/core/src/main/scala/kafka/admin/ConfigCommand.scala\n    \n    \n        Lines 663 to 666\n      in\n      8a7db5a\n    \n    \n    \n    \n\n        \n          \n           if (!options.has(bootstrapServerOpt) && !options.has(zkConnectOpt)) \n        \n\n        \n          \n             throw new IllegalArgumentException(\"One of the required --bootstrap-server or --zookeeper arguments must be specified\") \n        \n\n        \n          \n           else if (options.has(bootstrapServerOpt) && options.has(zkConnectOpt)) \n        \n\n        \n          \n             throw new IllegalArgumentException(\"Only one of --bootstrap-server or --zookeeper must be specified\") \n        \n    \n  \n\n It checks that only 1 option is specified, and if 0 or both options are specified, it throws the appropriate exception. In this case then it might be redundant to have a requireUnless here. I will update the help statement as suggested and push.", "author": "skaundinya15", "createdAt": "2020-02-06T23:14:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExMTE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEzODgzNA==", "url": "https://github.com/apache/kafka/pull/8056#discussion_r376138834", "bodyText": "@rondagostino There also seems to be a test for invalid args (if neither bootstrap servers or zk is specified here:\n\n  \n    \n      kafka/core/src/test/scala/unit/kafka/admin/ConfigCommandTest.scala\n    \n    \n        Lines 48 to 50\n      in\n      8a7db5a\n    \n    \n    \n    \n\n        \n          \n           def shouldExitWithNonZeroStatusOnArgError(): Unit = { \n        \n\n        \n          \n             assertNonZeroStatusExit(Array(\"--blah\")) \n        \n\n        \n          \n           }", "author": "skaundinya15", "createdAt": "2020-02-06T23:25:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExMTE5OA=="}], "type": "inlineReview"}, {"oid": "c6263089bfda7d1da6a1bfb7d568d2fed8d7bea3", "url": "https://github.com/apache/kafka/commit/c6263089bfda7d1da6a1bfb7d568d2fed8d7bea3", "message": "addressing PR comments", "committedDate": "2020-02-06T23:17:00Z", "type": "commit"}, {"oid": "6a13f714574ed9a4369e09208cfd05e159ffbe4f", "url": "https://github.com/apache/kafka/commit/6a13f714574ed9a4369e09208cfd05e159ffbe4f", "message": "Merge branch 'trunk' into KAFKA-9519", "committedDate": "2020-02-07T23:59:43Z", "type": "commit"}]}