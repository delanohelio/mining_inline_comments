{"pr_number": 9280, "pr_title": "KAFKA-10186: Abort transaction with pending data with TransactionAbortedException", "pr_createdAt": "2020-09-11T10:21:38Z", "pr_url": "https://github.com/apache/kafka/pull/9280", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMzNjExNQ==", "url": "https://github.com/apache/kafka/pull/9280#discussion_r487336115", "bodyText": "This comment might be unnecessary, the code is pretty self-explanatory in this case \ud83d\ude42", "author": "ableegoldman", "createdAt": "2020-09-11T23:50:09Z", "path": "clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java", "diffHunk": "@@ -418,10 +419,14 @@ private boolean maybeSendAndPollTransactionalRequest() {\n \n         if (transactionManager.hasAbortableError() || transactionManager.isAborting()) {\n             if (accumulator.hasIncomplete()) {\n+                // Attempt to get the last error that caused this abort.\n                 RuntimeException exception = transactionManager.lastError();\n+                // If there was no error, but we are still aborting,\n+                // then this is most likely a case where there was no fatal error.\n                 if (exception == null) {\n-                    exception = new KafkaException(\"Failing batch since transaction was aborted\");\n+                    exception = new TransactionAbortedException();\n                 }\n+                // Since the transaction is aborted / being aborted, abort all the undrained batches.", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM5NDgyMQ==", "url": "https://github.com/apache/kafka/pull/9280#discussion_r487394821", "bodyText": "Aah. Sorry - I'll take that away.", "author": "nym3r0s", "createdAt": "2020-09-12T10:23:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMzNjExNQ=="}], "type": "inlineReview"}, {"oid": "a2c124b355088a1eb2afeb932573240158aa541a", "url": "https://github.com/apache/kafka/commit/a2c124b355088a1eb2afeb932573240158aa541a", "message": "KAFKA-10186: Abort transaction with pending data with TransactionAbortedException\n\nIf a transaction is aborted with no underlying exception, throw\na new kind of exception - `TransactionAbortedException` to\ndistinguish this from other fatal exceptions.\n\nThis is part of KIP-654 and resolves KAFKA-10186", "committedDate": "2020-09-23T17:04:49Z", "type": "commit"}, {"oid": "a2c124b355088a1eb2afeb932573240158aa541a", "url": "https://github.com/apache/kafka/commit/a2c124b355088a1eb2afeb932573240158aa541a", "message": "KAFKA-10186: Abort transaction with pending data with TransactionAbortedException\n\nIf a transaction is aborted with no underlying exception, throw\na new kind of exception - `TransactionAbortedException` to\ndistinguish this from other fatal exceptions.\n\nThis is part of KIP-654 and resolves KAFKA-10186", "committedDate": "2020-09-23T17:04:49Z", "type": "forcePushed"}, {"oid": "0ac8e2d7eba16006bdd2e6d6b5dbd91653257a82", "url": "https://github.com/apache/kafka/commit/0ac8e2d7eba16006bdd2e6d6b5dbd91653257a82", "message": "Update Sender.java\n\nRemove unused import", "committedDate": "2020-09-25T18:06:00Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkzOTU3Ng==", "url": "https://github.com/apache/kafka/pull/9280#discussion_r499939576", "bodyText": "We have a helper for this pattern. See TestUtils.assertFutureThrows", "author": "hachikuji", "createdAt": "2020-10-06T00:16:46Z", "path": "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java", "diffHunk": "@@ -2358,6 +2359,41 @@ public void testForceShutdownWithIncompleteTransaction() {\n         }\n     }\n \n+    @Test\n+    public void testTransactionAbortedExceptionOnAbortWithoutError() throws InterruptedException, ExecutionException {\n+        ProducerIdAndEpoch producerIdAndEpoch = new ProducerIdAndEpoch(123456L, (short) 0);\n+        TransactionManager txnManager = new TransactionManager(logContext, \"testTransactionAbortedExceptionOnAbortWithoutError\", 60000, 100, apiVersions, false);\n+\n+        setupWithTransactionState(txnManager, false, null);\n+        doInitTransactions(txnManager, producerIdAndEpoch);\n+        // Begin the transaction\n+        txnManager.beginTransaction();\n+        txnManager.maybeAddPartitionToTransaction(tp0);\n+        client.prepareResponse(new AddPartitionsToTxnResponse(0, Collections.singletonMap(tp0, Errors.NONE)));\n+        // Run it once so that the partition is added to the transaction.\n+        sender.runOnce();\n+        // Append a record to the accumulator.\n+        FutureRecordMetadata metadata1 = appendToAccumulator(tp0, time.milliseconds(), \"key1\", \"value1\");\n+        // Now abort the transaction manually.\n+        txnManager.beginAbort();\n+        // Try to send.\n+        // This should abort the existing transaction and\n+        // drain all the unsent batches with a TransactionAbortedException.\n+        sender.runOnce();\n+        // Now attempt to fetch the result for the record.\n+        try {\n+            // This should fail since we aborted the transaction.\n+            metadata1.get();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE2NjUxNw==", "url": "https://github.com/apache/kafka/pull/9280#discussion_r500166517", "bodyText": "@hachikuji - Thank you - I've updated the test \ud83d\udc4d", "author": "nym3r0s", "createdAt": "2020-10-06T10:23:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkzOTU3Ng=="}], "type": "inlineReview"}, {"oid": "7bcee799b6e5358a0835f4b4970c2d4a7681d175", "url": "https://github.com/apache/kafka/commit/7bcee799b6e5358a0835f4b4970c2d4a7681d175", "message": "KAFKA-10186 Add tests for ensuring `TransactionAbortedException`", "committedDate": "2020-10-06T10:22:22Z", "type": "commit"}, {"oid": "7bcee799b6e5358a0835f4b4970c2d4a7681d175", "url": "https://github.com/apache/kafka/commit/7bcee799b6e5358a0835f4b4970c2d4a7681d175", "message": "KAFKA-10186 Add tests for ensuring `TransactionAbortedException`", "committedDate": "2020-10-06T10:22:22Z", "type": "forcePushed"}]}