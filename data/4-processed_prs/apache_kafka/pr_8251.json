{"pr_number": 8251, "pr_title": "MINOR: Code cleanup to improve generic typing", "pr_createdAt": "2020-03-07T19:07:02Z", "pr_url": "https://github.com/apache/kafka/pull/8251", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ2MDMxNA==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r389460314", "bodyText": "What's the purpose of adding generic here?", "author": "abbccdda", "createdAt": "2020-03-09T04:38:52Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorContextImpl.java", "diffHunk": "@@ -86,15 +85,15 @@ public StateStore getStateStore(final String name) {\n         final StateStore global = stateManager.getGlobalStore(name);\n         if (global != null) {\n             if (global instanceof TimestampedKeyValueStore) {\n-                return new TimestampedKeyValueStoreReadOnlyDecorator((TimestampedKeyValueStore) global);\n+                return new TimestampedKeyValueStoreReadOnlyDecorator<>((TimestampedKeyValueStore<?, ?>) global);", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE0NTkxMA==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r390145910", "bodyText": "To avoid warnings about \"raw type\" usage. Gradle does not fail on this, but IntelliJ highlights it, and it's best practice to avoid \"raw types\"", "author": "mjsax", "createdAt": "2020-03-10T08:07:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ2MDMxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ2MDQ0Nw==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r389460447", "bodyText": "When we could actually close this TODO btw? @guozhangwang", "author": "abbccdda", "createdAt": "2020-03-09T04:39:48Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/Task.java", "diffHunk": "@@ -51,7 +51,7 @@\n      *          |            |                    |   |       |\n      *          |            v                    v   |       |\n      *          |      +-----+-------+       +----+---+----+  |\n-     *          |      | Running (2) | ----> | Suspended(3)|  |    * //TODO Suspended(3) could be removed after we've stable on KIP-429\n+     *          |      | Running (2) | ----> | Suspended(3)|  |    //TODO Suspended(3) could be removed after we've stable on KIP-429", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NTAwNA==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r389865004", "bodyText": "When we can remove the eager protocol I think.", "author": "guozhangwang", "createdAt": "2020-03-09T18:00:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ2MDQ0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg1MDI2NQ==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r389850265", "bodyText": "Could you left some comments on the places you remove the casting to explain why it's okay to do so?", "author": "guozhangwang", "createdAt": "2020-03-09T17:36:12Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorContextImpl.java", "diffHunk": "@@ -142,10 +139,9 @@ public StateStore getStateStore(final String name) {\n         forward(\n             key,\n             value,\n-            To.child(((List<ProcessorNode>) currentNode().children()).get(childIndex).name()));\n+            To.child((currentNode().children()).get(childIndex).name()));", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE0ODgwNw==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r390148807", "bodyText": "I rely on IntelliJ -- it highlight all redundant casts. For this case, the return type of children() is List<ProcessorNode<?, ?>> and thus no reason to cast.", "author": "mjsax", "createdAt": "2020-03-10T08:15:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg1MDI2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NDIwMg==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r389864202", "bodyText": "Hmm, not clear about this change -- seems we are just delaying the casting by two lines of code here?", "author": "guozhangwang", "createdAt": "2020-03-09T17:58:43Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorContextImpl.java", "diffHunk": "@@ -175,12 +171,12 @@ public StateStore getStateStore(final String name) {\n \n             final String sendTo = toInternal.child();\n             if (sendTo == null) {\n-                final List<ProcessorNode<K, V>> children = (List<ProcessorNode<K, V>>) currentNode().children();\n-                for (final ProcessorNode child : children) {\n-                    forward(child, key, value);\n+                final List<ProcessorNode<?, ?>> children = currentNode().children();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE0OTMxNQ==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r390149315", "bodyText": "That is somewhat correct, but it make its explicit in the code where the actual cast happens and this if there is an issue easier to debug. With \"raw types\" is totally unclear where cast actually take place.", "author": "mjsax", "createdAt": "2020-03-10T08:16:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NDIwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE1MDA1Nw==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r390150057", "bodyText": "The compiler inserts cast lazily and it's better the track it down where the compiler needs (and will) insert cast (if raw types are used) by avoiding raw types and specifying the cast explicitly in the code where necessary.", "author": "mjsax", "createdAt": "2020-03-10T08:17:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NDIwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU4Mzc1Mw==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r390583753", "bodyText": "Sounds good.", "author": "guozhangwang", "createdAt": "2020-03-10T20:15:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NDIwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUwNzQ3Nw==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r390507477", "bodyText": "woah, how did this change?", "author": "vvcephei", "createdAt": "2020-03-10T18:00:38Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java", "diffHunk": "@@ -977,6 +985,10 @@ public void shouldNotCloseTaskAndRemoveFromTaskManagerIfProducerGotFencedInCommi\n \n         assertThat(thread.activeTasks().size(), equalTo(1));\n \n+        // need to process a record to enable committing\n+        addRecord(mockConsumer, 0L);\n+        thread.runOnce();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUxMDcwNg==", "url": "https://github.com/apache/kafka/pull/8251#discussion_r390510706", "bodyText": "Uff. Think this is a left over from the original PR I extracted this one. Good catch!", "author": "mjsax", "createdAt": "2020-03-10T18:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUwNzQ3Nw=="}], "type": "inlineReview"}, {"oid": "b0ecba43b45a8404035e8401e9a7794b603a6ce8", "url": "https://github.com/apache/kafka/commit/b0ecba43b45a8404035e8401e9a7794b603a6ce8", "message": "MINOR: Code cleanup to improve genric typing", "committedDate": "2020-03-10T18:17:53Z", "type": "commit"}, {"oid": "ec167350b461faa150a3f503fdebbd0ec97ffb0b", "url": "https://github.com/apache/kafka/commit/ec167350b461faa150a3f503fdebbd0ec97ffb0b", "message": "fix", "committedDate": "2020-03-10T18:17:53Z", "type": "commit"}, {"oid": "6520dc7a626c4049a56d436e0cde9b7bfeaa73a7", "url": "https://github.com/apache/kafka/commit/6520dc7a626c4049a56d436e0cde9b7bfeaa73a7", "message": "Github comments", "committedDate": "2020-03-10T18:17:53Z", "type": "commit"}, {"oid": "6520dc7a626c4049a56d436e0cde9b7bfeaa73a7", "url": "https://github.com/apache/kafka/commit/6520dc7a626c4049a56d436e0cde9b7bfeaa73a7", "message": "Github comments", "committedDate": "2020-03-10T18:17:53Z", "type": "forcePushed"}]}