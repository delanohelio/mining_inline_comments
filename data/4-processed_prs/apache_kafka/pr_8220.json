{"pr_number": 8220, "pr_title": "KAFKA-9645: Fallback to unsubscribe during Task Migrated", "pr_createdAt": "2020-03-04T04:24:45Z", "pr_url": "https://github.com/apache/kafka/pull/8220", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "12f23493778f6f40c630332b29a3c1f99065c478", "url": "https://github.com/apache/kafka/commit/12f23493778f6f40c630332b29a3c1f99065c478", "message": "bring back unsubscribe", "committedDate": "2020-03-06T23:45:02Z", "type": "commit"}, {"oid": "84ccecbac8fb619977fce3f6789cb5f864178d20", "url": "https://github.com/apache/kafka/commit/84ccecbac8fb619977fce3f6789cb5f864178d20", "message": "unit test", "committedDate": "2020-03-06T23:45:02Z", "type": "commit"}, {"oid": "d4c44254016f6c41f3429ab6a66dd7c203e0d482", "url": "https://github.com/apache/kafka/commit/d4c44254016f6c41f3429ab6a66dd7c203e0d482", "message": "rebase", "committedDate": "2020-03-06T23:58:03Z", "type": "commit"}, {"oid": "d4c44254016f6c41f3429ab6a66dd7c203e0d482", "url": "https://github.com/apache/kafka/commit/d4c44254016f6c41f3429ab6a66dd7c203e0d482", "message": "rebase", "committedDate": "2020-03-06T23:58:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE5OTg5OQ==", "url": "https://github.com/apache/kafka/pull/8220#discussion_r389199899", "bodyText": "Nice.", "author": "guozhangwang", "createdAt": "2020-03-07T00:04:47Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/MockConsumer.java", "diffHunk": "@@ -356,21 +358,10 @@ public synchronized void seekToEnd(Collection<TopicPartition> partitions) {\n         subscriptions.requestOffsetReset(partitions, OffsetResetStrategy.LATEST);\n     }\n \n-    // needed for cases where you make a second call to endOffsets\n-    public synchronized void addEndOffsets(final Map<TopicPartition, Long> newOffsets) {", "originalCommit": "d4c44254016f6c41f3429ab6a66dd7c203e0d482", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwMTExOQ==", "url": "https://github.com/apache/kafka/pull/8220#discussion_r389201119", "bodyText": "Hmm :) it reminds me that the mock consumer's behavior is not exactly the same as the actual consumer (the later would filter, the former would throw), but perhaps this worth a different PR to cleanup. @abbccdda could you file a JIRA for it?", "author": "guozhangwang", "createdAt": "2020-03-07T00:10:44Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java", "diffHunk": "@@ -807,6 +808,66 @@ public void shouldShutdownTaskManagerOnClose() {\n         EasyMock.verify(taskManager);\n     }\n \n+    @Test\n+    public void shouldNotReturnDataAfterTaskMigrated() {\n+        final TaskManager taskManager = EasyMock.createNiceMock(TaskManager.class);\n+\n+        internalTopologyBuilder = EasyMock.createNiceMock(InternalTopologyBuilder.class);\n+\n+        EasyMock.expect(internalTopologyBuilder.sourceTopicCollection()).andReturn(Collections.singletonList(topic1)).times(2);\n+\n+        final MockConsumer<byte[], byte[]> consumer = new MockConsumer<>(OffsetResetStrategy.LATEST);\n+\n+        consumer.subscribe(Collections.singletonList(topic1), new MockRebalanceListener());\n+        consumer.rebalance(Collections.singletonList(t1p1));\n+        consumer.updateEndOffsets(Collections.singletonMap(t1p1, 10L));\n+        consumer.seekToEnd(Collections.singletonList(t1p1));\n+\n+        final ChangelogReader changelogReader = new MockChangelogReader() {\n+\n+            @Override\n+            public void restore() {\n+                consumer.addRecord(new ConsumerRecord<>(topic1, 1, 11, new byte[0], new byte[0]));\n+                consumer.addRecord(new ConsumerRecord<>(topic1, 1, 12, new byte[1], new byte[0]));\n+\n+                throw new TaskMigratedException(\n+                    \"Changelog restore found task migrated\", new RuntimeException(\"restore task migrated\"));\n+            }\n+        };\n+\n+        taskManager.handleLostAll();\n+\n+        EasyMock.replay(taskManager, internalTopologyBuilder);\n+\n+        final StreamsMetricsImpl streamsMetrics =\n+            new StreamsMetricsImpl(metrics, CLIENT_ID, StreamsConfig.METRICS_LATEST);\n+\n+        final StreamThread thread = new StreamThread(\n+            mockTime,\n+            config,\n+            null,\n+            consumer,\n+            consumer,\n+            changelogReader,\n+            null,\n+            taskManager,\n+            streamsMetrics,\n+            internalTopologyBuilder,\n+            CLIENT_ID,\n+            new LogContext(\"\"),\n+            new AtomicInteger()\n+        ).updateThreadMetadata(getSharedAdminClientId(CLIENT_ID));\n+\n+        final IllegalStateException thrown = assertThrows(\n+            IllegalStateException.class, thread::run);\n+\n+        EasyMock.verify(taskManager);\n+\n+        // The Mock consumer shall throw as the assignment has been wiped out, but records are assigned.", "originalCommit": "d4c44254016f6c41f3429ab6a66dd7c203e0d482", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwOTkxMQ==", "url": "https://github.com/apache/kafka/pull/8220#discussion_r389209911", "bodyText": "Sounds good to me! https://issues.apache.org/jira/browse/KAFKA-9679", "author": "abbccdda", "createdAt": "2020-03-07T01:01:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIwMTExOQ=="}], "type": "inlineReview"}]}