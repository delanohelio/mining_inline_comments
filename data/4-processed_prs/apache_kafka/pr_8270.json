{"pr_number": 8270, "pr_title": "KAFKA-9216: Enforce internal config topic settings for Connect workers during startup", "pr_createdAt": "2020-03-11T01:32:29Z", "pr_url": "https://github.com/apache/kafka/pull/8270", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNjAzNw==", "url": "https://github.com/apache/kafka/pull/8270#discussion_r399726037", "bodyText": "nit: related to the naming comment above.", "author": "kkonstantine", "createdAt": "2020-03-29T00:21:24Z", "path": "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java", "diffHunk": "@@ -759,6 +787,11 @@ private void expectConfigure() throws Exception {\n                 .andReturn(storeLog);\n     }\n \n+    private void expectGetPartitionCount(int partitionCount) {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNjA0Mw==", "url": "https://github.com/apache/kafka/pull/8270#discussion_r399726043", "bodyText": "nit: traditionally we skip the get/set prefixes in method names in this code base (there maybe a few counter examples floating around).\nHow about, partitionCount?", "author": "kkonstantine", "createdAt": "2020-03-29T00:21:32Z", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -237,6 +239,9 @@ public void send(K key, V value, org.apache.kafka.clients.producer.Callback call\n         producer.send(new ProducerRecord<>(topic, key, value), callback);\n     }\n \n+    public int getPartitionCount() {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNjA0NQ==", "url": "https://github.com/apache/kafka/pull/8270#discussion_r399726045", "bodyText": "we have the topic name as member variable topic. Probably best if we use it as well.\nHere's a suggestion, after checking https://kafka.apache.org/documentation/#connect_running\n            String msg = String.format(\"Topic '%s' supplied via the '%s' property is required \"\n                    + \"to have a single partition in order to guarantee consistency of \"\n                    + \"connector configurations but found %d partitions.\",\n                    topic, DistributedConfig.CONFIG_TOPIC_CONFIG, partitionCount);\n            throw new ConfigException(msg);", "author": "kkonstantine", "createdAt": "2020-03-29T00:21:35Z", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java", "diffHunk": "@@ -249,6 +249,13 @@ public void start() {\n         // Before startup, callbacks are *not* invoked. You can grab a snapshot after starting -- just take care that\n         // updates can continue to occur in the background\n         configLog.start();\n+\n+        int partitionCount = configLog.getPartitionCount();\n+        if (partitionCount > 1) {\n+            throw new ConfigException(\"KafkaConfigBackingStore must have exactly 1 partition but found \" + partitionCount + \", check topic set by \" +", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyODAwMQ==", "url": "https://github.com/apache/kafka/pull/8270#discussion_r399728001", "bodyText": "The test looks great!\nBut fyi, we have org.junit.Assert.assertThrows; and org.hamcrest.MatcherAssert.assertThat, org.hamcrest.CoreMatchers.containsString in our disposal now, that allow for better assertions in tests that throw exceptions (added the full classnames because they are conflicts with deprecated methods in junit)", "author": "kkonstantine", "createdAt": "2020-03-29T00:47:32Z", "path": "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java", "diffHunk": "@@ -751,6 +764,21 @@ public void testPutTaskConfigsDoesNotResolveAllInconsistencies() throws Exceptio\n         PowerMock.verifyAll();\n     }\n \n+    @Test(expected = ConfigException.class)\n+    public void testExceptionOnStartWhenConfigTopicHasMultiplePartitions() throws Exception {\n+        expectConfigure();\n+        expectStart(Collections.emptyList(), Collections.emptyMap());\n+\n+        expectGetPartitionCount(2);\n+\n+        PowerMock.replayAll();\n+\n+        configStorage.setupAndCreateKafkaBasedLog(TOPIC, DEFAULT_DISTRIBUTED_CONFIG);\n+        configStorage.start();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ab2cd8d11d360e63b378e298d3201a23fa04d0dd", "url": "https://github.com/apache/kafka/commit/ab2cd8d11d360e63b378e298d3201a23fa04d0dd", "message": "KAFKA-9216: Throw exception when KafkaConfigBackingStore has more then 1 partition", "committedDate": "2020-06-07T14:34:33Z", "type": "commit"}, {"oid": "b419bb50854965e863abdba9bfd7e07d6efd6929", "url": "https://github.com/apache/kafka/commit/b419bb50854965e863abdba9bfd7e07d6efd6929", "message": "KAFKA-9216: Incorporated feedback from review", "committedDate": "2020-06-07T15:17:33Z", "type": "commit"}]}