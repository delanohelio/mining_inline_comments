{"pr_number": 7917, "pr_title": "KAFKA-9379; Fix flaky test TopicCommandWithAdminClientTest.testCreateAlterTopicWithRackAware", "pr_createdAt": "2020-01-09T11:27:07Z", "pr_url": "https://github.com/apache/kafka/pull/7917", "timeline": [{"oid": "697225578783cc980096f1161b908c12c56ffc11", "url": "https://github.com/apache/kafka/commit/697225578783cc980096f1161b908c12c56ffc11", "message": "KAFKA-9379; Fix flaky test TopicCommandWithAdminClientTest.testCreateAlterTopicWithRackAware", "committedDate": "2020-01-09T10:57:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY5NTk4MA==", "url": "https://github.com/apache/kafka/pull/7917#discussion_r364695980", "bodyText": "Can we not use TestUtils.waitUntilMetadataIsPropagated?", "author": "ijuma", "createdAt": "2020-01-09T11:44:07Z", "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -91,14 +91,11 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n   }\n \n   def waitForTopicCreated(topicName: String, timeout: Int = 10000): Unit = {\n-    val finishTime = System.currentTimeMillis() + timeout\n-    var result = false\n-    while (System.currentTimeMillis() < finishTime && !result) {\n-      val topics = adminClient.listTopics(new ListTopicsOptions().listInternal(true)).names().get()\n-      result = topics.contains(topicName)\n-      Thread.sleep(100)\n-    }\n-    assertTrue(s\"Topic $topicName has not been created within the given $timeout time\", result)\n+    // Wait until metadata is propagated to all brokers so that adminClient.listTopics returns the topic from any broker\n+    TestUtils.waitUntilTrue(() => servers.forall { server => server.metadataCache.contains(topicName) },\n+      s\"Topic not created and propagated within $timeout ms\", timeout)\n+    val topics = adminClient.listTopics(new ListTopicsOptions().listInternal(true)).names().get()\n+    assertTrue(s\"Topic $topicName not returned by adminClient\", topics.contains(topicName))", "originalCommit": "697225578783cc980096f1161b908c12c56ffc11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwMTQ2Ng==", "url": "https://github.com/apache/kafka/pull/7917#discussion_r364701466", "bodyText": "@ijuma Thanks for the review. Yes, we can use that, updated.", "author": "rajinisivaram", "createdAt": "2020-01-09T11:58:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY5NTk4MA=="}], "type": "inlineReview"}, {"oid": "73e69603dbc783ceaeb9fc3d0c0c5f83e247f54e", "url": "https://github.com/apache/kafka/commit/73e69603dbc783ceaeb9fc3d0c0c5f83e247f54e", "message": "Address review comment", "committedDate": "2020-01-09T11:55:46Z", "type": "commit"}]}