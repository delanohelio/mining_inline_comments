{"pr_number": 9360, "pr_title": "KAFKA-10557: Missing docs when describing topic configs including", "pr_createdAt": "2020-10-01T11:26:25Z", "pr_url": "https://github.com/apache/kafka/pull/9360", "timeline": [{"oid": "492f31fcc21b997c4c0057a3d5ba4c90f93112f9", "url": "https://github.com/apache/kafka/commit/492f31fcc21b997c4c0057a3d5ba4c90f93112f9", "message": "KAFKA-10557: Missing docs when describing topic configs including\ndocumentation\n\nCo-authored-by: Edoardo Comar <ecomar@uk.ibm.com>\nCo-authored-by: Mickael Maison <mickael.maison@gmail.com>", "committedDate": "2020-10-01T11:23:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyMjU1Nw==", "url": "https://github.com/apache/kafka/pull/9360#discussion_r498322557", "bodyText": "nit: space before \"zk\" - why is broker id anyway :-) ?", "author": "rajinisivaram", "createdAt": "2020-10-01T15:13:27Z", "path": "core/src/test/scala/unit/kafka/server/AdminManagerTest.scala", "diffHunk": "@@ -80,4 +81,30 @@ class AdminManagerTest {\n     assertEquals(Errors.NONE.code, results.head.errorCode())\n     assertFalse(\"Should return configs\", results.head.configs().isEmpty)\n   }\n+\n+  @Test\n+  def testDescribeConfigsWithDocumentation(): Unit = {\n+    EasyMock.expect(zkClient.getEntityConfigs(ConfigType.Topic, topic)).andReturn(new java.util.Properties)\n+    EasyMock.expect(zkClient.getEntityConfigs(ConfigType.Broker, brokerId.toString)).andReturn(TestUtils.createBrokerConfig(brokerId,\"zk\"))", "originalCommit": "492f31fcc21b997c4c0057a3d5ba4c90f93112f9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyMjc4OQ==", "url": "https://github.com/apache/kafka/pull/9360#discussion_r498322789", "bodyText": "we could check documentation is not empty as well?", "author": "rajinisivaram", "createdAt": "2020-10-01T15:13:46Z", "path": "core/src/test/scala/unit/kafka/server/AdminManagerTest.scala", "diffHunk": "@@ -80,4 +81,30 @@ class AdminManagerTest {\n     assertEquals(Errors.NONE.code, results.head.errorCode())\n     assertFalse(\"Should return configs\", results.head.configs().isEmpty)\n   }\n+\n+  @Test\n+  def testDescribeConfigsWithDocumentation(): Unit = {\n+    EasyMock.expect(zkClient.getEntityConfigs(ConfigType.Topic, topic)).andReturn(new java.util.Properties)\n+    EasyMock.expect(zkClient.getEntityConfigs(ConfigType.Broker, brokerId.toString)).andReturn(TestUtils.createBrokerConfig(brokerId,\"zk\"))\n+    EasyMock.expect(metadataCache.contains(topic)).andReturn(true)\n+    EasyMock.replay(zkClient, metadataCache)\n+\n+    val adminManager = createAdminManager()\n+\n+    val resources = List(\n+      new DescribeConfigsRequestData.DescribeConfigsResource()\n+        .setResourceName(topic)\n+        .setResourceType(ConfigResource.Type.TOPIC.id),\n+      new DescribeConfigsRequestData.DescribeConfigsResource()\n+        .setResourceName(brokerId.toString)\n+        .setResourceType(ConfigResource.Type.BROKER.id))\n+\n+    val results: List[DescribeConfigsResponseData.DescribeConfigsResult] = adminManager.describeConfigs(resources, true, true)\n+    assertEquals(2, results.size)\n+    results.foreach(r => {\n+      assertEquals(Errors.NONE.code, r.errorCode)\n+      assertFalse(\"Should return configs\", r.configs.isEmpty)\n+      r.configs.forEach(c => assertNotNull(s\"Config ${c.name} should have documentation\", c.documentation))", "originalCommit": "492f31fcc21b997c4c0057a3d5ba4c90f93112f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM2MzI5NQ==", "url": "https://github.com/apache/kafka/pull/9360#discussion_r498363295", "bodyText": "sure thanks", "author": "edoardocomar", "createdAt": "2020-10-01T16:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMyMjc4OQ=="}], "type": "inlineReview"}, {"oid": "0c28635bafec224b087e5f998d487527c4c8c0f9", "url": "https://github.com/apache/kafka/commit/0c28635bafec224b087e5f998d487527c4c8c0f9", "message": "addressed comments", "committedDate": "2020-10-01T16:10:36Z", "type": "commit"}]}