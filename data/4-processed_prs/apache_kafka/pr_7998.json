{"pr_number": 7998, "pr_title": "KAFKA-9460: Enable TLSv1.2 by default and disable all others protocol versions", "pr_createdAt": "2020-01-22T17:30:45Z", "pr_url": "https://github.com/apache/kafka/pull/7998", "timeline": [{"oid": "b2a4fac0adb2be2c8c9ef1e676c0f18cb7249e64", "url": "https://github.com/apache/kafka/commit/b2a4fac0adb2be2c8c9ef1e676c0f18cb7249e64", "message": "KAFKA-9460: Enable TLSv1.2 by default and disable all others protocol versions", "committedDate": "2020-01-22T17:27:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyOTc4Mg==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r369729782", "bodyText": "Does this need to change as well?  Or does the enabled protocol list constrain it?", "author": "rondagostino", "createdAt": "2020-01-22T18:31:15Z", "path": "clients/src/main/java/org/apache/kafka/common/config/SslConfigs.java", "diffHunk": "@@ -50,7 +50,7 @@\n     public static final String SSL_PROTOCOL_CONFIG = \"ssl.protocol\";\n     public static final String SSL_PROTOCOL_DOC = \"The SSL protocol used to generate the SSLContext. \"\n             + \"Default setting is TLS, which is fine for most cases. \"\n-            + \"Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 \"\n+            + \"Allowed values in recent JVMs are TLS, TLSv1.1, TLSv1.2 and TLSv1.3. SSL, SSLv2 and SSLv3 \"\n             + \"may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.\";\n \n     public static final String DEFAULT_SSL_PROTOCOL = \"TLS\";", "originalCommit": "b2a4fac0adb2be2c8c9ef1e676c0f18cb7249e64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczNTQ4MA==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r369735480", "bodyText": "It seems, doc inconsistent for now.\nWe do support TLVv1.3.\nsee e275742", "author": "nizhikov", "createdAt": "2020-01-22T18:42:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyOTc4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyNjM3MQ==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r369726371", "bodyText": "We should say that TLSv1 and TLSv1.1 are also discouraged.", "author": "rajinisivaram", "createdAt": "2020-01-22T18:24:37Z", "path": "clients/src/main/java/org/apache/kafka/common/config/SslConfigs.java", "diffHunk": "@@ -50,7 +50,7 @@\n     public static final String SSL_PROTOCOL_CONFIG = \"ssl.protocol\";\n     public static final String SSL_PROTOCOL_DOC = \"The SSL protocol used to generate the SSLContext. \"\n             + \"Default setting is TLS, which is fine for most cases. \"\n-            + \"Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 \"\n+            + \"Allowed values in recent JVMs are TLS, TLSv1.1, TLSv1.2 and TLSv1.3. SSL, SSLv2 and SSLv3 \"", "originalCommit": "b2a4fac0adb2be2c8c9ef1e676c0f18cb7249e64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2MjMzMg==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r369762332", "bodyText": "Fixed.", "author": "nizhikov", "createdAt": "2020-01-22T19:36:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyNjM3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyNjU3Mw==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r369726573", "bodyText": "We should make this TLSv1.2 as well.", "author": "rajinisivaram", "createdAt": "2020-01-22T18:25:06Z", "path": "clients/src/main/java/org/apache/kafka/common/config/SslConfigs.java", "diffHunk": "@@ -50,7 +50,7 @@\n     public static final String SSL_PROTOCOL_CONFIG = \"ssl.protocol\";\n     public static final String SSL_PROTOCOL_DOC = \"The SSL protocol used to generate the SSLContext. \"\n             + \"Default setting is TLS, which is fine for most cases. \"\n-            + \"Allowed values in recent JVMs are TLS, TLSv1.1 and TLSv1.2. SSL, SSLv2 and SSLv3 \"\n+            + \"Allowed values in recent JVMs are TLS, TLSv1.1, TLSv1.2 and TLSv1.3. SSL, SSLv2 and SSLv3 \"\n             + \"may be supported in older JVMs, but their usage is discouraged due to known security vulnerabilities.\";\n \n     public static final String DEFAULT_SSL_PROTOCOL = \"TLS\";", "originalCommit": "b2a4fac0adb2be2c8c9ef1e676c0f18cb7249e64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2MjM5Mg==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r369762392", "bodyText": "Fixed.", "author": "nizhikov", "createdAt": "2020-01-22T19:36:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyNjU3Mw=="}], "type": "inlineReview"}, {"oid": "491f8a3b603bbf3489b2cc2fd9fdf58193e65c76", "url": "https://github.com/apache/kafka/commit/491f8a3b603bbf3489b2cc2fd9fdf58193e65c76", "message": "KAFKA-9460: Code review fixes.", "committedDate": "2020-01-22T19:39:24Z", "type": "commit"}, {"oid": "35868d2f68730739b739875fb3ec9509ba5ace98", "url": "https://github.com/apache/kafka/commit/35868d2f68730739b739875fb3ec9509ba5ace98", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KAFKA-9460", "committedDate": "2020-01-27T10:16:31Z", "type": "commit"}, {"oid": "db602b3f5b699f9e2b1cce26ac018361992d281b", "url": "https://github.com/apache/kafka/commit/db602b3f5b699f9e2b1cce26ac018361992d281b", "message": "KAFKA-9460: Code review fixes.", "committedDate": "2020-01-27T13:47:03Z", "type": "commit"}, {"oid": "a44b3fb3d1eddc8aa1603f0c3b4ccd8497278a72", "url": "https://github.com/apache/kafka/commit/a44b3fb3d1eddc8aa1603f0c3b4ccd8497278a72", "message": "KAFKA-9460: Code review fixes.", "committedDate": "2020-01-27T13:49:00Z", "type": "commit"}, {"oid": "32535001b7a813c3373138c1b6803b7596a83d97", "url": "https://github.com/apache/kafka/commit/32535001b7a813c3373138c1b6803b7596a83d97", "message": "KAFKA-9460: Code review fixes.", "committedDate": "2020-01-27T13:51:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc2NTkwMg==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371765902", "bodyText": "Can you update this to say TLSv1.2?", "author": "rajinisivaram", "createdAt": "2020-01-28T12:12:45Z", "path": "clients/src/main/java/org/apache/kafka/common/config/SslConfigs.java", "diffHunk": "@@ -50,10 +50,10 @@\n     public static final String SSL_PROTOCOL_CONFIG = \"ssl.protocol\";\n     public static final String SSL_PROTOCOL_DOC = \"The SSL protocol used to generate the SSLContext. \"\n             + \"Default setting is TLS, which is fine for most cases. \"", "originalCommit": "32535001b7a813c3373138c1b6803b7596a83d97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5NDYxMw==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371794613", "bodyText": "fixed.", "author": "nizhikov", "createdAt": "2020-01-28T13:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc2NTkwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc2OTI5MQ==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371769291", "bodyText": "It would be better to use NetworkTestUtils.checkClientConnection(selector, node, 100, 10); which actually uses the connection.", "author": "rajinisivaram", "createdAt": "2020-01-28T12:20:45Z", "path": "clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java", "diffHunk": "@@ -551,6 +551,35 @@ public void testInvalidKeyPassword() throws Exception {\n         server.verifyAuthenticationMetrics(0, 1);\n     }\n \n+    /**\n+     * Tests that connection sucess with the default TLS version.\n+     */\n+    @Test\n+    public void testTLSDefaults() throws Exception {\n+        final LogContext logContext = new LogContext();\n+\n+        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n+        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n+\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslServerConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslClientConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n+\n+        channelBuilder = new SslChannelBuilder(Mode.CLIENT, null, false, logContext);\n+        channelBuilder.configure(sslServerConfigs);\n+        selector = new Selector(5000, new Metrics(), time, \"MetricGroup\", channelBuilder, logContext);\n+\n+        server = createEchoServer(SecurityProtocol.SSL);\n+        createSelector(sslClientConfigs);\n+\n+        final String node = \"0\";\n+\n+        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n+        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n+\n+        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.READY);", "originalCommit": "32535001b7a813c3373138c1b6803b7596a83d97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwNDI2NA==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371804264", "bodyText": "Fixed.", "author": "nizhikov", "createdAt": "2020-01-28T13:35:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc2OTI5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3MTE5MQ==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371771191", "bodyText": "Not sure if these configs actually come from the default configs. I think these may be explicitly configured in the tests.", "author": "rajinisivaram", "createdAt": "2020-01-28T12:25:18Z", "path": "clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java", "diffHunk": "@@ -551,6 +551,35 @@ public void testInvalidKeyPassword() throws Exception {\n         server.verifyAuthenticationMetrics(0, 1);\n     }\n \n+    /**\n+     * Tests that connection sucess with the default TLS version.\n+     */\n+    @Test\n+    public void testTLSDefaults() throws Exception {\n+        final LogContext logContext = new LogContext();\n+\n+        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n+        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n+\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslServerConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslClientConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));", "originalCommit": "32535001b7a813c3373138c1b6803b7596a83d97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxNDgyOQ==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371814829", "bodyText": "This comes from TestSslUtils#DEFAULT_TLS_PROTOCOL_FOR_TESTS - chaned it to\n    public static final String DEFAULT_TLS_PROTOCOL_FOR_TESTS = SslConfigs.DEFAULT_SSL_PROTOCOL;", "author": "nizhikov", "createdAt": "2020-01-28T13:54:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3MTE5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3MTYyOA==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371771628", "bodyText": "We should also create a client connection with one of the newly disabled protocols like TLSv1.1 and verify that the client connection fails.", "author": "rajinisivaram", "createdAt": "2020-01-28T12:26:11Z", "path": "clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java", "diffHunk": "@@ -551,6 +551,35 @@ public void testInvalidKeyPassword() throws Exception {\n         server.verifyAuthenticationMetrics(0, 1);\n     }\n \n+    /**\n+     * Tests that connection sucess with the default TLS version.\n+     */\n+    @Test\n+    public void testTLSDefaults() throws Exception {\n+        final LogContext logContext = new LogContext();\n+\n+        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n+        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n+\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslServerConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslClientConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n+\n+        channelBuilder = new SslChannelBuilder(Mode.CLIENT, null, false, logContext);\n+        channelBuilder.configure(sslServerConfigs);\n+        selector = new Selector(5000, new Metrics(), time, \"MetricGroup\", channelBuilder, logContext);\n+\n+        server = createEchoServer(SecurityProtocol.SSL);\n+        createSelector(sslClientConfigs);\n+\n+        final String node = \"0\";\n+\n+        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n+        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n+\n+        NetworkTestUtils.waitForChannelClose(selector, node, ChannelState.State.READY);\n+        server.verifyAuthenticationMetrics(1, 0);", "originalCommit": "32535001b7a813c3373138c1b6803b7596a83d97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxMDMwOQ==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371810309", "bodyText": "Done.", "author": "nizhikov", "createdAt": "2020-01-28T13:46:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3MTYyOA=="}], "type": "inlineReview"}, {"oid": "f90f72505beaf68bc82d6c8dea8a34d97e532c58", "url": "https://github.com/apache/kafka/commit/f90f72505beaf68bc82d6c8dea8a34d97e532c58", "message": "KAFKA-9460: Code review fixes.", "committedDate": "2020-01-28T13:57:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzMjkwNA==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371832904", "bodyText": "nit: typo success\nAlso mention that it tests that insecure protocols are not enabled by default.", "author": "rajinisivaram", "createdAt": "2020-01-28T14:26:19Z", "path": "clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java", "diffHunk": "@@ -552,20 +552,60 @@ public void testInvalidKeyPassword() throws Exception {\n     }\n \n     /**\n-     * Tests that connections cannot be made with unsupported TLS versions\n+     * Tests that connection sucess with the default TLS version.", "originalCommit": "f90f72505beaf68bc82d6c8dea8a34d97e532c58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzNzk0MA==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371837940", "bodyText": "Fixed.", "author": "nizhikov", "createdAt": "2020-01-28T14:34:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzMjkwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzMzQ4NA==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371833484", "bodyText": "This selector is never used since we create a Selector a couple of lines below using createSelector. We should remove these three lines and the logContext created at the start of this test.", "author": "rajinisivaram", "createdAt": "2020-01-28T14:27:17Z", "path": "clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java", "diffHunk": "@@ -552,20 +552,60 @@ public void testInvalidKeyPassword() throws Exception {\n     }\n \n     /**\n-     * Tests that connections cannot be made with unsupported TLS versions\n+     * Tests that connection sucess with the default TLS version.\n      */\n     @Test\n-    public void testUnsupportedTLSVersion() throws Exception {\n-        String node = \"0\";\n-        sslServerConfigs.put(SslConfigs.SSL_ENABLED_PROTOCOLS_CONFIG, Arrays.asList(\"TLSv1.2\"));\n+    public void testTLSDefaults() throws Exception {\n+        final LogContext logContext = new LogContext();\n+\n+        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n+        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n+\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslServerConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslClientConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n+\n+        channelBuilder = new SslChannelBuilder(Mode.CLIENT, null, false, logContext);\n+        channelBuilder.configure(sslServerConfigs);\n+        selector = new Selector(5000, new Metrics(), time, \"MetricGroup\", channelBuilder, logContext);", "originalCommit": "f90f72505beaf68bc82d6c8dea8a34d97e532c58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzOTYyNQ==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371839625", "bodyText": "Fixed.", "author": "nizhikov", "createdAt": "2020-01-28T14:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzMzQ4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzNDQ3Ng==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371834476", "bodyText": "We tend to use different node value when multiple connections are created by a test. You could just replace node here with \"1\" and a couple of lines below with \"2\".", "author": "rajinisivaram", "createdAt": "2020-01-28T14:28:48Z", "path": "clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java", "diffHunk": "@@ -552,20 +552,60 @@ public void testInvalidKeyPassword() throws Exception {\n     }\n \n     /**\n-     * Tests that connections cannot be made with unsupported TLS versions\n+     * Tests that connection sucess with the default TLS version.\n      */\n     @Test\n-    public void testUnsupportedTLSVersion() throws Exception {\n-        String node = \"0\";\n-        sslServerConfigs.put(SslConfigs.SSL_ENABLED_PROTOCOLS_CONFIG, Arrays.asList(\"TLSv1.2\"));\n+    public void testTLSDefaults() throws Exception {\n+        final LogContext logContext = new LogContext();\n+\n+        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n+        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n+\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslServerConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslClientConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n+\n+        channelBuilder = new SslChannelBuilder(Mode.CLIENT, null, false, logContext);\n+        channelBuilder.configure(sslServerConfigs);\n+        selector = new Selector(5000, new Metrics(), time, \"MetricGroup\", channelBuilder, logContext);\n+\n         server = createEchoServer(SecurityProtocol.SSL);\n+        createSelector(sslClientConfigs);\n+\n+        final String node = \"0\";\n+\n+        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n+        selector.connect(node, addr, BUFFER_SIZE, BUFFER_SIZE);\n+\n+        NetworkTestUtils.checkClientConnection(selector, node, 10, 100);\n+        server.verifyAuthenticationMetrics(1, 0);\n \n-        sslClientConfigs.put(SslConfigs.SSL_ENABLED_PROTOCOLS_CONFIG, Arrays.asList(\"TLSv1.1\"));\n+        checkAuthentiationFailed(node, \"TLSv1.1\");", "originalCommit": "f90f72505beaf68bc82d6c8dea8a34d97e532c58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzOTUyMg==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371839522", "bodyText": "Fixed.", "author": "nizhikov", "createdAt": "2020-01-28T14:36:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgzNDQ3Ng=="}], "type": "inlineReview"}, {"oid": "f2784b7b35c8aeec9a4b64be7aca47b8daa9e644", "url": "https://github.com/apache/kafka/commit/f2784b7b35c8aeec9a4b64be7aca47b8daa9e644", "message": "KAFKA-9460: Code review fixes.", "committedDate": "2020-01-28T14:37:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4Mzk5MA==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371883990", "bodyText": "Sorry, missed this earlier: We are creating a new selector in checkAuthentiationFailed, so we should ensure that the previous selector is closed. You could call selector.close() just before calling checkAuthenticationFailed here and also a couple of lines below.", "author": "rajinisivaram", "createdAt": "2020-01-28T15:45:03Z", "path": "clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java", "diffHunk": "@@ -552,20 +552,51 @@ public void testInvalidKeyPassword() throws Exception {\n     }\n \n     /**\n-     * Tests that connections cannot be made with unsupported TLS versions\n+     * Tests that connection success with the default TLS version.\n      */\n     @Test\n-    public void testUnsupportedTLSVersion() throws Exception {\n-        String node = \"0\";\n-        sslServerConfigs.put(SslConfigs.SSL_ENABLED_PROTOCOLS_CONFIG, Arrays.asList(\"TLSv1.2\"));\n+    public void testTLSDefaults() throws Exception {\n+        sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores);\n+        sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores);\n+\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslServerConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n+        assertEquals(SslConfigs.DEFAULT_SSL_PROTOCOL, sslClientConfigs.get(SslConfigs.SSL_PROTOCOL_CONFIG));\n+\n         server = createEchoServer(SecurityProtocol.SSL);\n+        createSelector(sslClientConfigs);\n+\n+        InetSocketAddress addr = new InetSocketAddress(\"localhost\", server.port());\n+        selector.connect(\"0\", addr, BUFFER_SIZE, BUFFER_SIZE);\n+\n+        NetworkTestUtils.checkClientConnection(selector, \"0\", 10, 100);\n+        server.verifyAuthenticationMetrics(1, 0);\n+\n+        checkAuthentiationFailed(\"1\", \"TLSv1.1\");", "originalCommit": "f2784b7b35c8aeec9a4b64be7aca47b8daa9e644", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4NzczMQ==", "url": "https://github.com/apache/kafka/pull/7998#discussion_r371887731", "bodyText": "Fixed.", "author": "nizhikov", "createdAt": "2020-01-28T15:50:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4Mzk5MA=="}], "type": "inlineReview"}, {"oid": "6c2051bcd136dd65ae7eb0ce3ef5f25187d746e3", "url": "https://github.com/apache/kafka/commit/6c2051bcd136dd65ae7eb0ce3ef5f25187d746e3", "message": "KAFKA-9460: Code review fixes.", "committedDate": "2020-01-28T15:49:56Z", "type": "commit"}]}