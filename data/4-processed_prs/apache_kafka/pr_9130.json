{"pr_number": 9130, "pr_title": "KAFKA-10492; Core Kafka Raft Implementation (KIP-595)", "pr_createdAt": "2020-08-05T15:23:31Z", "pr_url": "https://github.com/apache/kafka/pull/9130", "timeline": [{"oid": "b552aa3ecadc7717f843f452755e24da7f9c1617", "url": "https://github.com/apache/kafka/commit/b552aa3ecadc7717f843f452755e24da7f9c1617", "message": "KC-660: Add append commit mode for perf (#367)\n\n1. Added AppendCommitMode to RecordAppender interface; keep future objects within uncommittedAppend if QUORUM mode is used and complete only after hw advanced beyond.\r\n2. Used another purgatory to expire uncommitted future.\r\n3. Some other minor fixes (comments inlined).\r\n\r\nCo-authored-by: Jason Gustafson <jason@confluent.io>", "committedDate": "2020-08-13T17:31:17Z", "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc0NTk0MQ==", "url": "https://github.com/apache/kafka/pull/9130#discussion_r491745941", "bodyText": "nit: if this is only used for unit tests, better add a one-liner comment for that.", "author": "guozhangwang", "createdAt": "2020-09-20T23:09:28Z", "path": "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java", "diffHunk": "@@ -415,4 +444,10 @@ public void visit(Type field) {\n         return hasBuffer.get();\n     }\n \n+    public static Set<ApiKeys> enabledApis() {", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc0NjIxOA==", "url": "https://github.com/apache/kafka/pull/9130#discussion_r491746218", "bodyText": "I feel this is not necessary since we would throw in processCompletedReceives at SocketServer already as processChannelException, but no harm guarding them as well.", "author": "guozhangwang", "createdAt": "2020-09-20T23:12:16Z", "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -182,10 +182,13 @@ class KafkaApis(val requestChannel: RequestChannel,\n         case ApiKeys.ALTER_CLIENT_QUOTAS => handleAlterClientQuotasRequest(request)\n         case ApiKeys.DESCRIBE_USER_SCRAM_CREDENTIALS => handleDescribeUserScramCredentialsRequest(request)\n         case ApiKeys.ALTER_USER_SCRAM_CREDENTIALS => handleAlterUserScramCredentialsRequest(request)\n-        case ApiKeys.VOTE => handleVote(request)\n-        case ApiKeys.BEGIN_QUORUM_EPOCH => handleBeginEpoch(request)\n-        case ApiKeys.END_QUORUM_EPOCH => handleEndEpoch(request)\n-        case ApiKeys.DESCRIBE_QUORUM => handleDescribeQuorum(request)\n+\n+        // Until we are ready to integrate the Raft layer, these APIs are treated as\n+        // unexpected and we just close the connection.\n+        case ApiKeys.VOTE => closeConnection(request, util.Collections.emptyMap())", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxMTc1NQ==", "url": "https://github.com/apache/kafka/pull/9130#discussion_r492211755", "bodyText": "Right. We should never reach here, but I thought we should make the match complete to avoid warnings.", "author": "hachikuji", "createdAt": "2020-09-21T17:00:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc0NjIxOA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "d6ef8255376701b0390db95ab728ec29e5bf52bc", "url": "https://github.com/apache/kafka/commit/d6ef8255376701b0390db95ab728ec29e5bf52bc", "message": "Add core Raft request/response schemas", "committedDate": "2020-09-22T15:56:35Z", "type": "commit"}, {"oid": "d58ac82f9233d08af5bd031659f3ae8f6fea090b", "url": "https://github.com/apache/kafka/commit/d58ac82f9233d08af5bd031659f3ae8f6fea090b", "message": "Add interfaces and mock implementations for network and log layers", "committedDate": "2020-09-22T15:56:35Z", "type": "commit"}, {"oid": "ba5105b124b4c12cbcb270e14b057714e56f65ef", "url": "https://github.com/apache/kafka/commit/ba5105b124b4c12cbcb270e14b057714e56f65ef", "message": "Core Raft implementation", "committedDate": "2020-09-22T15:56:35Z", "type": "commit"}, {"oid": "faf8786ee959132f10988b1746d4a196f3fa4832", "url": "https://github.com/apache/kafka/commit/faf8786ee959132f10988b1746d4a196f3fa4832", "message": "Add simulation testing", "committedDate": "2020-09-22T15:56:35Z", "type": "commit"}, {"oid": "8a7553e3c20df5f37a17894affbaad025dcc10ab", "url": "https://github.com/apache/kafka/commit/8a7553e3c20df5f37a17894affbaad025dcc10ab", "message": "Simple key value store implementation", "committedDate": "2020-09-22T15:56:35Z", "type": "commit"}, {"oid": "d38428c1515185f25367d16b3dab0c9bc555a353", "url": "https://github.com/apache/kafka/commit/d38428c1515185f25367d16b3dab0c9bc555a353", "message": "Integration with kafka log/network layer", "committedDate": "2020-09-22T15:56:35Z", "type": "commit"}, {"oid": "5c53ba4b48ea2322031784062198ccbc3c630412", "url": "https://github.com/apache/kafka/commit/5c53ba4b48ea2322031784062198ccbc3c630412", "message": "Create RaftClient interface and rename RaftManager to KafkaRaftClient", "committedDate": "2020-09-22T15:56:35Z", "type": "commit"}, {"oid": "03e84a6b0a0fec67005c77d0d89f3f40e534a195", "url": "https://github.com/apache/kafka/commit/03e84a6b0a0fec67005c77d0d89f3f40e534a195", "message": "Fix bugs in KafkaNetworkChannel and add test cases (#303)\n\nThis patch fixes a few problems in `KafkaNetworkChannel` found in #301: \r\n- Check for authentication errors before checking for disconnects\r\n- Check for connection failures prior to calling `ready`\r\n- Call `ready` instead of `isReady` to ensure we initiate the connection\r\nAlso remove one of the unneeded conversion methods.", "committedDate": "2020-09-22T15:56:35Z", "type": "commit"}, {"oid": "2d97b153bf17de71f7d39ff41e9eca2d79b24f28", "url": "https://github.com/apache/kafka/commit/2d97b153bf17de71f7d39ff41e9eca2d79b24f28", "message": "Add leader change control message (#304)\n\nAdds the leader change control message schema and the logic to append it to the log after becoming leader.", "committedDate": "2020-09-22T15:56:36Z", "type": "commit"}, {"oid": "666c85d0859cd7113a3180d205d5ae6ded8cdbce", "url": "https://github.com/apache/kafka/commit/666c85d0859cd7113a3180d205d5ae6ded8cdbce", "message": "rename file (#311)", "committedDate": "2020-09-22T15:56:36Z", "type": "commit"}, {"oid": "7c6128ce10671c77bb5e48ca5035f80de6765f8f", "url": "https://github.com/apache/kafka/commit/7c6128ce10671c77bb5e48ca5035f80de6765f8f", "message": "Add test logging support (#312)", "committedDate": "2020-09-22T15:56:36Z", "type": "commit"}, {"oid": "36d36fa90c8c273b469c5c86cc7b8c69e5a4f2e6", "url": "https://github.com/apache/kafka/commit/36d36fa90c8c273b469c5c86cc7b8c69e5a4f2e6", "message": "Mix of testing/naming improvements  (#307)\n\nThis patch makes the following improvements:\n\n1. Replace the usage of `requestId` with `correlationId`, which is already widely used in Kafka.\n2. Make `MockLog` aware of record batching to make its behavior more consistent with the `Log` implementation and to\n3. Add test coverage to `ConnectionCache`.", "committedDate": "2020-09-22T15:56:36Z", "type": "commit"}, {"oid": "c1a4f13447a51e09b3622a1d7834172f727a787f", "url": "https://github.com/apache/kafka/commit/c1a4f13447a51e09b3622a1d7834172f727a787f", "message": "Fix compilation breakage after rebase", "committedDate": "2020-09-22T15:56:36Z", "type": "commit"}, {"oid": "25f9753d4318975b02cefc3dcbc4f41aa2286103", "url": "https://github.com/apache/kafka/commit/25f9753d4318975b02cefc3dcbc4f41aa2286103", "message": "Add quorum-state file (#302)", "committedDate": "2020-09-22T15:59:05Z", "type": "commit"}, {"oid": "d6da773bb63f7b57d9f36eff45c420cd2b07783c", "url": "https://github.com/apache/kafka/commit/d6da773bb63f7b57d9f36eff45c420cd2b07783c", "message": "Ensure jitter respected after candidacy fails plus other cosmetic improvements (#309)\n\nAddress review comments from 9f52a74. Most of the changes are cosmetic (changing naming or state representation), but we also fix a couple issues:\r\n\r\n- We ensure that jitter is respected after the election timeout expires when we are a candidate.\r\n- We reject appends if we are not the leader.", "committedDate": "2020-09-22T15:59:05Z", "type": "commit"}, {"oid": "4570930474fd524e5376165a4fc056e7bdb618ac", "url": "https://github.com/apache/kafka/commit/4570930474fd524e5376165a4fc056e7bdb618ac", "message": "Correct Quorum size in simulation tests (#323)\n\nObservers were not being created in the simulation test due to an invalid range check. This patch fixes the range check.", "committedDate": "2020-09-22T15:59:05Z", "type": "commit"}, {"oid": "03a737f579edb776996ff2c6f25a84c5b9a99565", "url": "https://github.com/apache/kafka/commit/03a737f579edb776996ff2c6f25a84c5b9a99565", "message": "Add raft test coverage (#314)", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "fe1a0d0362d942541f5cb98b0850a008bfc0b22d", "url": "https://github.com/apache/kafka/commit/fe1a0d0362d942541f5cb98b0850a008bfc0b22d", "message": "Make request/response error handling more conventional (#319)\n\nVarious improvements in error handling:\n\n1) Add new INCONSISTENT_VOTER_SET as a more useful error for voter-only requests\n2) Remove the logic to return some errors which should not be possible. For example, there should never be a reason why we return `NOT_LEADER_FOR_PARTITION` from `FetchQuorumRecords` in normal circumstances. A stale fetch request would get fenced by the epoch. And unlike with topic partitions, a follower cannot learn about the leader before the leader itself.\n3) Add some additional validations. For example, we now add checks to make sure that we reject requests which indicate we are the leader when we know we are not. We also validate all offsets and epochs strictly in both FetchQuorumRecords and Vote requests.\n4) Refine/fix error handling in `EndQuorumEpoch` to handle requests from followers or candidates and to only trigger new election when necessary.", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "178f21d3c8879484dd0e1c65abe5d44e2f6fc6f3", "url": "https://github.com/apache/kafka/commit/178f21d3c8879484dd0e1c65abe5d44e2f6fc6f3", "message": "Leader progress timeout (#324)\n\n1. Introduce the fetch timeout config.\n2. Leader relying on the fetch timeout to send find-quorum if does not receive from a majority of quorum.\n3. Voter relying on fetch timeout to become candidate (not relying on election timeout).\n\nWe also merge the two timers into a single timer, and also added unit tests. Simulation tests now passed.", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "7c34f3577750fcf76c760fa51248aa4adbf8e0ff", "url": "https://github.com/apache/kafka/commit/7c34f3577750fcf76c760fa51248aa4adbf8e0ff", "message": "Add basic purgatory for quorum fetches (#322)\n\nThis patch adds a simple purgatory interface and integration with Kafka's `DelayedOperationPurgatory`. For the moment, we only support max wait time, which has been added to the `FetchQuorumRecords` request schema.", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "80d4f031f11aa08b93f6f6d53f01b19a8fe08f8e", "url": "https://github.com/apache/kafka/commit/80d4f031f11aa08b93f6f6d53f01b19a8fe08f8e", "message": "Refactor Raft StateMachine API (#321)", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "9dd86f80c97963fc0fa3e225b6bbae248aa0fe2a", "url": "https://github.com/apache/kafka/commit/9dd86f80c97963fc0fa3e225b6bbae248aa0fe2a", "message": "Add voter information towards the quorum-state file (#325)", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "f45975e80684e603e38fd023bc68c6e2b8d71938", "url": "https://github.com/apache/kafka/commit/f45975e80684e603e38fd023bc68c6e2b8d71938", "message": "Minimal raft server implementation for more interesting testing (#301)\n\nThis patch adds the wiring to startup a dummy server which uses the `ReplicatedCounter` state machine.", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "7fc674554670c310c3afec334e0d5315258c39c7", "url": "https://github.com/apache/kafka/commit/7fc674554670c310c3afec334e0d5315258c39c7", "message": "Revise EndQuorum logic to send to preferred followers first (#320)", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "520a43a8bee21629033ae7e759d754791cfca5f1", "url": "https://github.com/apache/kafka/commit/520a43a8bee21629033ae7e759d754791cfca5f1", "message": "Add raft metrics (#329)\n\nWhile looking at the SimpleKeyValueStore impl, I realized that we should return the last offset, not the base offset, in the append future; because the caller (replicated-state-machine) needs the last offset to determine which operations has been committed. Before this, the SimpleKeyValueStore is actually committing puts compared with the base offset.\n\nAdded raft metrics.", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "81f1cca61d4b6263f1e8b56faf94344954a7cadc", "url": "https://github.com/apache/kafka/commit/81f1cca61d4b6263f1e8b56faf94344954a7cadc", "message": "MockLog should only read full batches (#347)\n\nIt is important that we preserve batch boundaries in the MockLog implementation since they may (eventually) have semantic significance. For example, we may use batches to atomically apply a set of operations.\r\n\r\nNote that the replication protocol guarantees that followers can only send fetch offsets on batch boundaries, which also implies that the high watermark is aligned. If there was a misaligned fetch, then it would result in a validation error and an offset reset.", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "9d0a9f6e15042ec580b9e98afc631dfd900f1c10", "url": "https://github.com/apache/kafka/commit/9d0a9f6e15042ec580b9e98afc631dfd900f1c10", "message": "Require non-empty record set in append APIs (#349)\n\nIf the fetch response has no data, then the log append currently fails with an `Append failed unexpectedly` error. The problem is that there is no start offset for an empty append. This patch fixes the problem by adding a check in the response handler and skipping the append if the record set is empty. We also formally make empty appends invalid in the API and add some testing for this.", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "b48f2942c843d1bd2de6121ecfe760fc8de868c8", "url": "https://github.com/apache/kafka/commit/b48f2942c843d1bd2de6121ecfe760fc8de868c8", "message": "Improve simulation performance and validation (#350)\n\nMost of the time running the simulation test was spent validating committed data. I turned this into a `Validation`, which is run after simulation completion rather than an `Invariant` which is checked after each event. I have also added a couple additional invariants. This dropped the time to run these tests from over 3-5 minutes to about 30 seconds.", "committedDate": "2020-09-22T15:59:06Z", "type": "commit"}, {"oid": "c7cf3940ef6052fdb4de112309fa406e22f1675f", "url": "https://github.com/apache/kafka/commit/c7cf3940ef6052fdb4de112309fa406e22f1675f", "message": "Cache high watermark on the leader (#346)\n\nCache the high watermark by remembering all replica's end offset as the LogOffsetMetadata.\n\nNote that comparing with #344 we are only caching hw on the leader side, not on follower since the updated HW does not match the append log info, while the state machine application executes on both leader and followers --- i.e. on follower-side we still need to read the hw every time.", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "3b1f2eda3fae0eab4cbd8f942cef7a8bcb830c27", "url": "https://github.com/apache/kafka/commit/3b1f2eda3fae0eab4cbd8f942cef7a8bcb830c27", "message": "Graceful shutdown improvements (#348)\n\nThis patch does the following:\r\n\r\n- Fixes shutdown logic so that the resigning leader stays alive long enough to help its successor get elected.\r\n- Add graceful shutdown to simulation test cases\r\n- Add graceful shutdown logic to `RaftServer`\r\n- Improve graceful shutdown test coverage\r\n- Add more logging on shutdown", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "fac5bfe8aaece4d3a0ee2b4f138c39cef80c2d00", "url": "https://github.com/apache/kafka/commit/fac5bfe8aaece4d3a0ee2b4f138c39cef80c2d00", "message": "Integrate ProducerPerformance with RaftServer (#330)\n\nAdd Producer Performance integration with Raft server.\nIntroduce an no-op state machine for log appending and benchmark\nRemoved self increment logic to replace with VerifiableProducer data population\nAdd the README for Raft module to kick-off the benchmark\n\nReviewers: Jason Gustafson <jason@confluent.io>, Guozhang Wang <wangguoz@gmail.com>", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "328af019184af25c4423d26f7d9daa7795f75a3b", "url": "https://github.com/apache/kafka/commit/328af019184af25c4423d26f7d9daa7795f75a3b", "message": "Improve range checking in MockLog (#351)\n\nThis patch includes a few small fixes in `MockLog`. In particular, it makes the range checking consistent with the standard `Log` implementation. It also adds some additional testing and fixes some of the start offset return logic in `read`.", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "a88e8439040f3a70c587c4dc792f9fb9002f3b94", "url": "https://github.com/apache/kafka/commit/a88e8439040f3a70c587c4dc792f9fb9002f3b94", "message": "Introduce the election backoff mechanism (#340)\n\nImprovements to election timeout/backoff behavior. Specifically:\n\n1. Do not use jitter for election timeout anymore, instead setting it as uniform(T, 2T) where T is the configured election timeout.\n2. The jitter config would instead be used as the binary exponential backoff 's upper bound.", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "d77da6a00a61f5ef039892531d25fc3c326b3c73", "url": "https://github.com/apache/kafka/commit/d77da6a00a61f5ef039892531d25fc3c326b3c73", "message": "Add DescribeQuorum API (#345)\n\nAdd describe quorum API.\n\n1. Add data templates\n2. Consolidate fetch time and offset updates\n3. Separate replica State from voter state for observers\n4. Bookkeep seen observers\n5. Attach topic partition to the Replicated log\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>, Jason Gustafson <jason@confluent.io>", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "5905f57bddde754f27f8abffe798310b9f84bf31", "url": "https://github.com/apache/kafka/commit/5905f57bddde754f27f8abffe798310b9f84bf31", "message": "remove target voters from quorum state (#365)\n\nAs title suggests, matching KIP-595 quorum state data format.\r\n\r\nReviewers: Jason Gustafson <jason@confluent.io>", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "c69a4ff94dcbaa2e0372ed6fce6e1363fd4bb5c1", "url": "https://github.com/apache/kafka/commit/c69a4ff94dcbaa2e0372ed6fce6e1363fd4bb5c1", "message": "Replace Vote RPC to be multi-raft (#357)\n\nUse multi-raft API stated in KIP-595 on VoteRequest.\n\nReviewers: Jason Gustafson <jason@confluent.io>", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "bf7e35757c716bd498c0f494947404830e005873", "url": "https://github.com/apache/kafka/commit/bf7e35757c716bd498c0f494947404830e005873", "message": "Fix compilation errors after rebasing", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "8d78f280f7af852e27e4255d7f9437d941c63dcb", "url": "https://github.com/apache/kafka/commit/8d78f280f7af852e27e4255d7f9437d941c63dcb", "message": "Fix message generator and deprecation warnings", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "9fdb728d0e861e3e5174a775e197eaf36c007598", "url": "https://github.com/apache/kafka/commit/9fdb728d0e861e3e5174a775e197eaf36c007598", "message": "Replace Begin/EndQuorum RPC with Multi-raft\n\nReplace begin/end quorum RPC with Multi-raft API, and try to simplify generated module names.\n\nReviewers: Jason Gustafson <jason@confluent.io>", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "dda5f512b3318c8246844eb36f85e904a2930c5b", "url": "https://github.com/apache/kafka/commit/dda5f512b3318c8246844eb36f85e904a2930c5b", "message": "Use Fetch API in Raft and get rid of FetchQuorumRecords (#380)\n\nDrops the FetchQuorumRecords API and replaces usages with Fetch in KafkaRaftClient and test cases.", "committedDate": "2020-09-22T15:59:07Z", "type": "commit"}, {"oid": "a346cbc0af482d97a88a7bf5e342f5a2f6aa35e6", "url": "https://github.com/apache/kafka/commit/a346cbc0af482d97a88a7bf5e342f5a2f6aa35e6", "message": "Add append commit mode for perf (#367)\n\n1. Added AppendCommitMode to RecordAppender interface; keep future objects within uncommittedAppend if QUORUM mode is used and complete only after hw advanced beyond.\n2. Used another purgatory to expire uncommitted future.\n3. Some other minor fixes (comments inlined).\n\nCo-authored-by: Jason Gustafson <jason@confluent.io>", "committedDate": "2020-09-22T15:59:08Z", "type": "commit"}, {"oid": "58ad58928565182161c56dfe304bff74d0360d17", "url": "https://github.com/apache/kafka/commit/58ad58928565182161c56dfe304bff74d0360d17", "message": "Move state machine outside of RaftClient (#377)\n\nThe purpose of this PR is to move the `ReplicatedStateMachine` interface outside of `KafkaRaftClient`. Instead of relying on the raft client to push changes into the state machine, we leave it to the state machine to read changes from the client. This takes state machine processing out of the core IO loop and allows for an \"apples to apples\" comparison with normal log replication.", "committedDate": "2020-09-22T15:59:08Z", "type": "commit"}, {"oid": "92432a4fc13d1d040928c4e0ada737c445863b97", "url": "https://github.com/apache/kafka/commit/92432a4fc13d1d040928c4e0ada737c445863b97", "message": "Remove `FindQuorum` API (#390)\n\nThis PR drops the `FindQuorum` API and adds new logic to use `Fetch` for quorum discovery instead.", "committedDate": "2020-09-22T15:59:08Z", "type": "commit"}, {"oid": "f856200b015f4ebeb08e6785bfa5d6061d410ad9", "url": "https://github.com/apache/kafka/commit/f856200b015f4ebeb08e6785bfa5d6061d410ad9", "message": "Refactor state/poll backoffs and timeouts (#402)\n\nThis PR attempts to improve timeout/backoff logic in the raft client. It does the following:\r\n\r\n- Split the Follower state into three separates and document all state transitions \r\n- Move fetch/election timer into respective `EpochState` implementations\r\n- Take into account backoffs when setting poll timeout\r\n- Improve test coverage of timeout behavior\r\n- Fixes various small issues", "committedDate": "2020-09-22T15:59:08Z", "type": "commit"}, {"oid": "acbaef071488df30c271474401cd50a6ab65ebcc", "url": "https://github.com/apache/kafka/commit/acbaef071488df30c271474401cd50a6ab65ebcc", "message": "Fix some breakage after rebase", "committedDate": "2020-09-22T15:59:08Z", "type": "commit"}, {"oid": "b7f8436ea36c3c833c3033a9fabc9a0782b6a6c0", "url": "https://github.com/apache/kafka/commit/b7f8436ea36c3c833c3033a9fabc9a0782b6a6c0", "message": "Update for upstream changes to `Fetch` response schema", "committedDate": "2020-09-22T15:59:08Z", "type": "commit"}, {"oid": "5f3bd678fe1bf71fdf1d440c315b5073e8725aa8", "url": "https://github.com/apache/kafka/commit/5f3bd678fe1bf71fdf1d440c315b5073e8725aa8", "message": "Ensure raft request APIs are not exposed", "committedDate": "2020-09-22T15:59:08Z", "type": "commit"}, {"oid": "aad7243d675e03874daaa38efeac90cf872d8a83", "url": "https://github.com/apache/kafka/commit/aad7243d675e03874daaa38efeac90cf872d8a83", "message": "Move scripts and such into raft subdirectory", "committedDate": "2020-09-22T15:59:08Z", "type": "commit"}, {"oid": "1fed23c9ad499068c4bffb6b81d7e859bfd4914d", "url": "https://github.com/apache/kafka/commit/1fed23c9ad499068c4bffb6b81d7e859bfd4914d", "message": "Use a different approach to ensure disabled APIs are not handled", "committedDate": "2020-09-22T15:59:09Z", "type": "commit"}, {"oid": "b129703c50e4dd8fde91cda44ff26a0fc336ce6f", "url": "https://github.com/apache/kafka/commit/b129703c50e4dd8fde91cda44ff26a0fc336ce6f", "message": "Reduce number of simulation tests to speed up build", "committedDate": "2020-09-22T15:59:09Z", "type": "commit"}, {"oid": "d48cf34f331aea3773775cc761c73f3ec0fe8c92", "url": "https://github.com/apache/kafka/commit/d48cf34f331aea3773775cc761c73f3ec0fe8c92", "message": "Fix failing tests due to disabled api keys", "committedDate": "2020-09-22T15:59:09Z", "type": "commit"}, {"oid": "385f3780cd4e3bfbe43741206e705500e78783a6", "url": "https://github.com/apache/kafka/commit/385f3780cd4e3bfbe43741206e705500e78783a6", "message": "Fix test failures due to disabled Raft APIs", "committedDate": "2020-09-22T15:59:09Z", "type": "commit"}, {"oid": "385f3780cd4e3bfbe43741206e705500e78783a6", "url": "https://github.com/apache/kafka/commit/385f3780cd4e3bfbe43741206e705500e78783a6", "message": "Fix test failures due to disabled Raft APIs", "committedDate": "2020-09-22T15:59:09Z", "type": "forcePushed"}]}