{"pr_number": 9083, "pr_title": "KAFKA-9450: Follow-up; Forbid process after closed", "pr_createdAt": "2020-07-27T05:42:37Z", "pr_url": "https://github.com/apache/kafka/pull/9083", "timeline": [{"oid": "a4c949f7a3f42dd792803100b061fcbab5bf976d", "url": "https://github.com/apache/kafka/commit/a4c949f7a3f42dd792803100b061fcbab5bf976d", "message": "first commit", "committedDate": "2020-06-30T01:10:33Z", "type": "commit"}, {"oid": "36fa307009d3326153a58e702d3598eb7a73a80a", "url": "https://github.com/apache/kafka/commit/36fa307009d3326153a58e702d3598eb7a73a80a", "message": "major fixes", "committedDate": "2020-06-30T23:21:55Z", "type": "commit"}, {"oid": "1952371dc840c3a70fe246956a1b0285b78390b1", "url": "https://github.com/apache/kafka/commit/1952371dc840c3a70fe246956a1b0285b78390b1", "message": "flush cache before commit", "committedDate": "2020-07-01T01:34:24Z", "type": "commit"}, {"oid": "e0713dd346101eb098958619b580406b5af6517d", "url": "https://github.com/apache/kafka/commit/e0713dd346101eb098958619b580406b5af6517d", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9450-decouple-flush-state-from-commit", "committedDate": "2020-07-01T01:42:02Z", "type": "commit"}, {"oid": "cea36626a4e104823dd81775d2efef40d96f7ea5", "url": "https://github.com/apache/kafka/commit/cea36626a4e104823dd81775d2efef40d96f7ea5", "message": "suppression buffer needs to be flushed too", "committedDate": "2020-07-01T02:33:06Z", "type": "commit"}, {"oid": "2158381e553706f1facbd21989eafef06d73f5b4", "url": "https://github.com/apache/kafka/commit/2158381e553706f1facbd21989eafef06d73f5b4", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9450-decouple-flush-state-from-commit", "committedDate": "2020-07-07T00:29:41Z", "type": "commit"}, {"oid": "4394dd2316783c286d1b8c042863b558b53fdec7", "url": "https://github.com/apache/kafka/commit/4394dd2316783c286d1b8c042863b558b53fdec7", "message": "rebased on trunk", "committedDate": "2020-07-07T02:20:46Z", "type": "commit"}, {"oid": "c8bef6e1f6289f1c34d6b77336df1abbe91c1102", "url": "https://github.com/apache/kafka/commit/c8bef6e1f6289f1c34d6b77336df1abbe91c1102", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9450-decouple-flush-state-from-commit", "committedDate": "2020-07-24T01:09:31Z", "type": "commit"}, {"oid": "3b49c2a39872b7065b821e0434018ac6dc3fc8d9", "url": "https://github.com/apache/kafka/commit/3b49c2a39872b7065b821e0434018ac6dc3fc8d9", "message": "github comments", "committedDate": "2020-07-24T18:10:50Z", "type": "commit"}, {"oid": "9137d40e2dab98ae5b943f796ffe35ea13e5cbf0", "url": "https://github.com/apache/kafka/commit/9137d40e2dab98ae5b943f796ffe35ea13e5cbf0", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9450-decouple-flush-state-from-commit", "committedDate": "2020-07-26T23:46:21Z", "type": "commit"}, {"oid": "bae8bb5a1118aad6890c60102283ddc463f6c179", "url": "https://github.com/apache/kafka/commit/bae8bb5a1118aad6890c60102283ddc463f6c179", "message": "re-order commit and suspend", "committedDate": "2020-07-27T04:41:30Z", "type": "commit"}, {"oid": "bafbc8be7c08a9b0f86357b6485b9ed23c20b899", "url": "https://github.com/apache/kafka/commit/bafbc8be7c08a9b0f86357b6485b9ed23c20b899", "message": "forbid process after closing", "committedDate": "2020-07-27T05:40:59Z", "type": "commit"}, {"oid": "007dde706d72a2cfb9175111abd2ee2d8174b00c", "url": "https://github.com/apache/kafka/commit/007dde706d72a2cfb9175111abd2ee2d8174b00c", "message": "rebased from trunk and resolved conflicts", "committedDate": "2020-09-16T02:12:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyOTM4Ng==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r489129386", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * If the checkpoint has been loaded form the file and has never been re-written (empty map), then we should re-write the checkpoint;\n          \n          \n            \n                 * If the checkpoint has been loaded from the file and has never been re-written (empty map), then we should re-write the checkpoint;", "author": "ableegoldman", "createdAt": "2020-09-16T02:49:24Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "diffHunk": "@@ -37,6 +37,7 @@\n \n     /**\n      * If the checkpoint has not been loaded from the file yet (null), then we should not overwrite the checkpoint;\n+     * If the checkpoint has been loaded form the file and has never been re-written (empty map), then we should re-write the checkpoint;", "originalCommit": "007dde706d72a2cfb9175111abd2ee2d8174b00c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEzMDQ5Mg==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r489130492", "bodyText": "Rebasing error?", "author": "ableegoldman", "createdAt": "2020-09-16T02:53:25Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorContextImpl.java", "diffHunk": "@@ -217,7 +217,7 @@ public StateStore getStateStore(final String name) {\n                     forward((ProcessorNode<K, V, ?, ?>) child, key, value);\n                 }\n             } else {\n-                final ProcessorNode<K, V, ?, ?> child = currentNode().getChild(sendTo);\n+                final ProcessorNode child = currentNode().getChild(sendTo);", "originalCommit": "007dde706d72a2cfb9175111abd2ee2d8174b00c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0NjUyMw==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r491646523", "bodyText": "This is because I added the typing in line 98 of ProcessorNode below, I will revert it back and update the line below in forward.", "author": "guozhangwang", "createdAt": "2020-09-20T03:21:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEzMDQ5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEzMDkyNg==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r489130926", "bodyText": "Should we throwIfClosed() at the beginning of close() too?", "author": "ableegoldman", "createdAt": "2020-09-16T02:55:01Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorNode.java", "diffHunk": "@@ -149,10 +155,20 @@ public void close() {\n         } catch (final Exception e) {", "originalCommit": "007dde706d72a2cfb9175111abd2ee2d8174b00c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEzMTMxOQ==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r489131319", "bodyText": "Why does this need to change?", "author": "ableegoldman", "createdAt": "2020-09-16T02:56:23Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "diffHunk": "@@ -1310,9 +1310,11 @@ public void shouldNotCheckpointOffsetsAgainOnCommitIfSnapshotNotChangedMuch() {\n         EasyMock.expect(recordCollector.offsets()).andReturn(Collections.singletonMap(changelogPartition, offset)).anyTimes();\n         stateManager.checkpoint();\n         EasyMock.expectLastCall().once();\n+        EasyMock.expect(stateManager.changelogPartitions()).andReturn(Collections.singleton(changelogPartition));", "originalCommit": "007dde706d72a2cfb9175111abd2ee2d8174b00c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0Nzg0OA==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r491647848", "bodyText": "My bad, will revert.", "author": "guozhangwang", "createdAt": "2020-09-20T03:42:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEzMTMxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEzMTc1MA==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r489131750", "bodyText": "Should we assert that it's in closed when init is called?", "author": "ableegoldman", "createdAt": "2020-09-16T02:58:08Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorNode.java", "diffHunk": "@@ -118,6 +120,10 @@ public void init(final InternalProcessorContext context) {\n         } catch (final Exception e) {\n             throw new StreamsException(String.format(\"failed to initialize processor %s\", name), e);\n         }\n+\n+        // revived tasks could re-initialize the topology,\n+        // in which case we should reset the flag\n+        closed = false;", "originalCommit": "007dde706d72a2cfb9175111abd2ee2d8174b00c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY0NzgzNw==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r491647837", "bodyText": "SG.", "author": "guozhangwang", "createdAt": "2020-09-20T03:42:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEzMTc1MA=="}], "type": "inlineReview"}, {"oid": "26ecbd11ecab8a35e1add0433c430e2db7f1ecb6", "url": "https://github.com/apache/kafka/commit/26ecbd11ecab8a35e1add0433c430e2db7f1ecb6", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java\n\nCo-authored-by: A. Sophie Blee-Goldman <ableegoldman@gmail.com>", "committedDate": "2020-09-20T03:11:50Z", "type": "commit"}, {"oid": "e03c57456cb5a5e6c85698f54a7428db607c12d7", "url": "https://github.com/apache/kafka/commit/e03c57456cb5a5e6c85698f54a7428db607c12d7", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9450-enforce-no-process-after-closure", "committedDate": "2020-09-20T03:12:42Z", "type": "commit"}, {"oid": "109a209efa2eef981b7885bbdd30884316563c2d", "url": "https://github.com/apache/kafka/commit/109a209efa2eef981b7885bbdd30884316563c2d", "message": "github comments", "committedDate": "2020-09-20T03:42:01Z", "type": "commit"}, {"oid": "82b6f6f5d238401097e0906c8135c5c189524666", "url": "https://github.com/apache/kafka/commit/82b6f6f5d238401097e0906c8135c5c189524666", "message": "Merge branch 'K9450-enforce-no-process-after-closure' of https://github.com/guozhangwang/kafka into K9450-enforce-no-process-after-closure", "committedDate": "2020-09-20T03:42:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI4MjUxMQ==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r492282511", "bodyText": "Why change the K, V to ?, ? -- and if we don't do that, do we still need the cast in the forward call down below?", "author": "ableegoldman", "createdAt": "2020-09-21T19:04:28Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorContextImpl.java", "diffHunk": "@@ -217,12 +217,12 @@ public StateStore getStateStore(final String name) {\n                     forward((ProcessorNode<K, V, ?, ?>) child, key, value);\n                 }\n             } else {\n-                final ProcessorNode<K, V, ?, ?> child = currentNode().getChild(sendTo);", "originalCommit": "82b6f6f5d238401097e0906c8135c5c189524666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk0MjE0MQ==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r492942141", "bodyText": "+1", "author": "abbccdda", "createdAt": "2020-09-22T18:20:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI4MjUxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk0NDUwNA==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r492944504", "bodyText": "I made the change in ProcessorNode to add back the template types: https://github.com/apache/kafka/pull/9083/files/82b6f6f5d238401097e0906c8135c5c189524666#diff-705bfd0ed3f214048b76d775708cc7d2L96\nBut since currentNode()'s template is <?, ?, ?, ?> its templated getChild and that's why I need to weaken it here --- as you can see from the above if branch, it now aligns consistently on the typing.", "author": "guozhangwang", "createdAt": "2020-09-22T18:23:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI4MjUxMQ=="}], "type": "inlineReview"}, {"oid": "f897fa8969c19c419eeb3d2224590d6da91d3b78", "url": "https://github.com/apache/kafka/commit/f897fa8969c19c419eeb3d2224590d6da91d3b78", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9450-enforce-no-process-after-closure", "committedDate": "2020-09-22T17:29:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk0MTQ0OA==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r492941448", "bodyText": "nit: not necessary", "author": "abbccdda", "createdAt": "2020-09-22T18:18:56Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "diffHunk": "@@ -1566,6 +1566,7 @@ public void shouldCheckpointForSuspendedTask() {\n         EasyMock.verify(stateManager);\n     }\n \n+", "originalCommit": "82b6f6f5d238401097e0906c8135c5c189524666", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk0MzMzNQ==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r492943335", "bodyText": "Could you elaborate why this is better than Processor?", "author": "abbccdda", "createdAt": "2020-09-22T18:22:02Z", "path": "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamFlatTransformValues.java", "diffHunk": "@@ -44,19 +45,18 @@ public KStreamFlatTransformValues(final ValueTransformerWithKeySupplier<KIn, VIn\n         return valueTransformerSupplier.stores();\n     }\n \n-    public static class KStreamFlatTransformValuesProcessor<KIn, VIn, VOut> implements Processor<KIn, VIn> {\n+    public static class KStreamFlatTransformValuesProcessor<KIn, VIn, VOut> extends AbstractProcessor<KIn, VIn> {", "originalCommit": "82b6f6f5d238401097e0906c8135c5c189524666", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk1MDA3Mw==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r492950073", "bodyText": "As described in at the top, Let all built-in processors to extend from AbstractProcessor. The main reason is that AbstractProcessor provides some basic functionalities and hence it's better to let our own impl to base on them.", "author": "guozhangwang", "createdAt": "2020-09-22T18:32:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk0MzMzNQ=="}], "type": "inlineReview"}, {"oid": "5f9392df8600f9951c1389e911809ab5bd5c7771", "url": "https://github.com/apache/kafka/commit/5f9392df8600f9951c1389e911809ab5bd5c7771", "message": "checkstyle fixes", "committedDate": "2020-09-22T18:33:05Z", "type": "commit"}, {"oid": "9d0fe58b4529ec85b9a5c05dca5c2d3dcb3d8581", "url": "https://github.com/apache/kafka/commit/9d0fe58b4529ec85b9a5c05dca5c2d3dcb3d8581", "message": "github comments", "committedDate": "2020-09-22T18:33:48Z", "type": "commit"}, {"oid": "e2ca04a7452c3aa18a4995e8a8c8a65d3a5354ed", "url": "https://github.com/apache/kafka/commit/e2ca04a7452c3aa18a4995e8a8c8a65d3a5354ed", "message": "final unit test", "committedDate": "2020-09-23T21:31:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcwOTIzNQ==", "url": "https://github.com/apache/kafka/pull/9083#discussion_r497709235", "bodyText": "@guozhangwang It's weird to remove the types above and add a cast here. Seems like a step backward with regard to type safety. Not sure if @vvcephei's changes would fix it?", "author": "mjsax", "createdAt": "2020-09-30T18:15:54Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorContextImpl.java", "diffHunk": "@@ -217,12 +217,12 @@ public StateStore getStateStore(final String name) {\n                     forward((ProcessorNode<K, V, ?, ?>) child, key, value);\n                 }\n             } else {\n-                final ProcessorNode<K, V, ?, ?> child = currentNode().getChild(sendTo);\n+                final ProcessorNode<?, ?, ?, ?> child = currentNode().getChild(sendTo);\n                 if (child == null) {\n                     throw new StreamsException(\"Unknown downstream node: \" + sendTo\n                         + \" either does not exist or is not connected to this processor.\");\n                 }\n-                forward(child, key, value);\n+                forward((ProcessorNode<K, V, ?, ?>) child, key, value);", "originalCommit": "e2ca04a7452c3aa18a4995e8a8c8a65d3a5354ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}