{"pr_number": 9206, "pr_title": "MINOR: rewrite zipWithIndex by normal foreach to refrain unnecessary \u2026", "pr_createdAt": "2020-08-22T08:43:26Z", "pr_url": "https://github.com/apache/kafka/pull/9206", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgyMTA5Nw==", "url": "https://github.com/apache/kafka/pull/9206#discussion_r492821097", "bodyText": "Have we benchmarked this path? It seems doubtful that these micro optimizations help given that we are converting.", "author": "ijuma", "createdAt": "2020-09-22T15:16:47Z", "path": "core/src/main/scala/kafka/log/LogValidator.scala", "diffHunk": "@@ -234,16 +234,17 @@ private[log] object LogValidator extends Logging {\n \n     val firstBatch = getFirstBatchAndMaybeValidateNoMoreBatches(records, NoCompressionCodec)\n \n-    for (batch <- records.batches.asScala) {\n+    records.batches.forEach { batch =>\n       validateBatch(topicPartition, firstBatch, batch, origin, toMagicValue, brokerTopicStats)\n \n       val recordErrors = new ArrayBuffer[ApiRecordError](0)\n-      for ((record, batchIndex) <- batch.asScala.view.zipWithIndex) {\n+      var batchIndex = 0\n+      batch.forEach { record =>\n         validateRecord(batch, topicPartition, record, batchIndex, now, timestampType,\n           timestampDiffMaxMs, compactedTopic, brokerTopicStats).foreach(recordError => recordErrors += recordError)\n         // we fail the batch if any record fails, so we stop appending if any record fails\n-        if (recordErrors.isEmpty)\n-          builder.appendWithOffset(offsetCounter.getAndIncrement(), record)\n+        if (recordErrors.isEmpty) builder.appendWithOffset(offsetCounter.getAndIncrement(), record)\n+        batchIndex += 1", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgzNDczNQ==", "url": "https://github.com/apache/kafka/pull/9206#discussion_r492834735", "bodyText": "Have we benchmarked this path?\n\nI didn't benchmark this path and you are right that optimization is small as we have to convert data in this path. I will revert it to make small patch.", "author": "chia7712", "createdAt": "2020-09-22T15:33:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgyMTA5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgyMzI3OQ==", "url": "https://github.com/apache/kafka/pull/9206#discussion_r492823279", "bodyText": "Worth adding a comment here that this is a hot path and we want to avoid any unnecessary allocations.", "author": "ijuma", "createdAt": "2020-09-22T15:19:34Z", "path": "core/src/main/scala/kafka/log/LogValidator.scala", "diffHunk": "@@ -279,14 +280,15 @@ private[log] object LogValidator extends Logging {\n \n     val firstBatch = getFirstBatchAndMaybeValidateNoMoreBatches(records, NoCompressionCodec)\n \n-    for (batch <- records.batches.asScala) {\n+    records.batches.forEach { batch =>\n       validateBatch(topicPartition, firstBatch, batch, origin, magic, brokerTopicStats)\n \n       var maxBatchTimestamp = RecordBatch.NO_TIMESTAMP\n       var offsetOfMaxBatchTimestamp = -1L\n \n       val recordErrors = new ArrayBuffer[ApiRecordError](0)\n-      for ((record, batchIndex) <- batch.asScala.view.zipWithIndex) {\n+      var batchIndex = 0", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgzNDgxOA==", "url": "https://github.com/apache/kafka/pull/9206#discussion_r492834818", "bodyText": "copy that", "author": "chia7712", "createdAt": "2020-09-22T15:33:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgyMzI3OQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg2NTIzMA==", "url": "https://github.com/apache/kafka/pull/9206#discussion_r492865230", "bodyText": "I liked your changes to make the code more concise, I'd keep them.", "author": "ijuma", "createdAt": "2020-09-22T16:15:47Z", "path": "core/src/main/scala/kafka/log/LogValidator.scala", "diffHunk": "@@ -234,17 +234,16 @@ private[log] object LogValidator extends Logging {\n \n     val firstBatch = getFirstBatchAndMaybeValidateNoMoreBatches(records, NoCompressionCodec)\n \n-    records.batches.forEach { batch =>\n+    for (batch <- records.batches.asScala) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg3MjQwOA==", "url": "https://github.com/apache/kafka/pull/9206#discussion_r492872408", "bodyText": "ok~", "author": "chia7712", "createdAt": "2020-09-22T16:26:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg2NTIzMA=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "a6cbbe12f4cb6789b70f2b8c0ffa63a6dadfe185", "url": "https://github.com/apache/kafka/commit/a6cbbe12f4cb6789b70f2b8c0ffa63a6dadfe185", "message": "MINOR: rewrite zipWithIndex by normal foreach to refrain unnecessary tuple allocations when validating record", "committedDate": "2020-09-23T15:06:26Z", "type": "commit"}, {"oid": "60ca305219d107ae809a285957830cea3b9d7887", "url": "https://github.com/apache/kafka/commit/60ca305219d107ae809a285957830cea3b9d7887", "message": "add comment and revert unnecessary code", "committedDate": "2020-09-23T15:06:26Z", "type": "commit"}, {"oid": "82fbfac1f21a248865f303643fd8fd1836a8d758", "url": "https://github.com/apache/kafka/commit/82fbfac1f21a248865f303643fd8fd1836a8d758", "message": "reomve unnecessary collection conversion", "committedDate": "2020-09-23T15:06:26Z", "type": "commit"}, {"oid": "82fbfac1f21a248865f303643fd8fd1836a8d758", "url": "https://github.com/apache/kafka/commit/82fbfac1f21a248865f303643fd8fd1836a8d758", "message": "reomve unnecessary collection conversion", "committedDate": "2020-09-23T15:06:26Z", "type": "forcePushed"}]}