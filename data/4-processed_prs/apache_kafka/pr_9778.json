{"pr_number": 9778, "pr_title": "KAFKA-10874 Fix flaky ClientQuotasRequestTest.testAlterIpQuotasRequest", "pr_createdAt": "2020-12-22T10:14:33Z", "pr_url": "https://github.com/apache/kafka/pull/9778", "timeline": [{"oid": "6b0010c7340d7acd41131e5e8eda806f41819b5a", "url": "https://github.com/apache/kafka/commit/6b0010c7340d7acd41131e5e8eda806f41819b5a", "message": "KAFKA-10874 Fix flaky ClientQuotasRequestTest.testAlterIpQuotasRequest", "committedDate": "2020-12-22T10:07:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQxNTEyMg==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r547415122", "bodyText": "Is it overkill to retry whole method?", "author": "chia7712", "createdAt": "2020-12-22T17:49:13Z", "path": "core/src/test/scala/unit/kafka/server/ClientQuotasRequestTest.scala", "diffHunk": "@@ -200,7 +202,7 @@ class ClientQuotasRequestTest extends BaseRequestTest {\n     val defaultEntityFilter = ClientQuotaFilterComponent.ofDefaultEntity(ClientQuotaEntity.IP)\n     val allIpEntityFilter = ClientQuotaFilterComponent.ofEntityType(ClientQuotaEntity.IP)\n \n-    def verifyIpQuotas(entityFilter: ClientQuotaFilterComponent, expectedMatches: Map[ClientQuotaEntity, Double]): Unit = {\n+    def verifyIpQuotas(entityFilter: ClientQuotaFilterComponent, expectedMatches: Map[ClientQuotaEntity, Double]): Unit = TestUtils.retry(10000L){", "originalCommit": "6b0010c7340d7acd41131e5e8eda806f41819b5a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQyMTcyOQ==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r547421729", "bodyText": "yes , I will change to only retry assertEquals(expectedMatches(entity), servers.head.socketServer.connectionQuotas.connectionRateForIp(entityIp), 0.01)", "author": "g1geordie", "createdAt": "2020-12-22T18:03:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQxNTEyMg=="}], "type": "inlineReview"}, {"oid": "4ace984d8caf7eb37a0ceea32dd3d8dc66513f19", "url": "https://github.com/apache/kafka/commit/4ace984d8caf7eb37a0ceea32dd3d8dc66513f19", "message": "retry specified assert", "committedDate": "2020-12-23T03:15:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM3NTYwMQ==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r548375601", "bodyText": "Could you add comment for this retry?", "author": "chia7712", "createdAt": "2020-12-24T04:20:17Z", "path": "core/src/test/scala/unit/kafka/server/ClientQuotasRequestTest.scala", "diffHunk": "@@ -212,7 +214,9 @@ class ClientQuotasRequestTest extends BaseRequestTest {\n           InetAddress.getByName(unknownHost)\n         else\n           InetAddress.getByName(entityName)\n-        assertEquals(expectedMatches(entity), servers.head.socketServer.connectionQuotas.connectionRateForIp(entityIp), 0.01)\n+        TestUtils.retry(10000L) {", "originalCommit": "4ace984d8caf7eb37a0ceea32dd3d8dc66513f19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQyNzI0OA==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r548427248", "bodyText": "Yes sir", "author": "g1geordie", "createdAt": "2020-12-24T07:23:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM3NTYwMQ=="}], "type": "inlineReview"}, {"oid": "d0815845bb45092ab25cd1d1a9687b637167408e", "url": "https://github.com/apache/kafka/commit/d0815845bb45092ab25cd1d1a9687b637167408e", "message": "add comment", "committedDate": "2020-12-24T04:30:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIyMTM3OA==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r549221378", "bodyText": "It seems to me waitUntilTrue is more suitable since the exception is not necessary in this test case.", "author": "chia7712", "createdAt": "2020-12-28T05:37:01Z", "path": "core/src/test/scala/unit/kafka/server/ClientQuotasRequestTest.scala", "diffHunk": "@@ -212,7 +214,10 @@ class ClientQuotasRequestTest extends BaseRequestTest {\n           InetAddress.getByName(unknownHost)\n         else\n           InetAddress.getByName(entityName)\n-        assertEquals(expectedMatches(entity), servers.head.socketServer.connectionQuotas.connectionRateForIp(entityIp), 0.01)\n+        TestUtils.retry(10000L) {", "originalCommit": "d0815845bb45092ab25cd1d1a9687b637167408e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU0NTY4MA==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r549545680", "bodyText": "Thank you", "author": "g1geordie", "createdAt": "2020-12-29T02:28:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIyMTM3OA=="}], "type": "inlineReview"}, {"oid": "2c5e25813057a0d70060676b17e7e7c4b100d3d1", "url": "https://github.com/apache/kafka/commit/2c5e25813057a0d70060676b17e7e7c4b100d3d1", "message": "waitUntilTure replace retry", "committedDate": "2020-12-28T14:55:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5ODc4MQ==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r549598781", "bodyText": "Could we rename \"prop\" to \"quotas\"?", "author": "chia7712", "createdAt": "2020-12-29T07:28:39Z", "path": "core/src/test/scala/unit/kafka/server/ClientQuotasRequestTest.scala", "diffHunk": "@@ -212,7 +214,9 @@ class ClientQuotasRequestTest extends BaseRequestTest {\n           InetAddress.getByName(unknownHost)\n         else\n           InetAddress.getByName(entityName)\n-        assertEquals(expectedMatches(entity), servers.head.socketServer.connectionQuotas.connectionRateForIp(entityIp), 0.01)\n+        TestUtils.waitUntilTrue(\n+          () => expectedMatches(entity) - servers.head.socketServer.connectionQuotas.connectionRateForIp(entityIp) < 0.01\n+          ,\"Broker didn't update prop from Zookeeper\")", "originalCommit": "2c5e25813057a0d70060676b17e7e7c4b100d3d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzMTk3Mw==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r549631973", "bodyText": "sure!!", "author": "g1geordie", "createdAt": "2020-12-29T09:23:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5ODc4MQ=="}], "type": "inlineReview"}, {"oid": "79f5f054ee0e36a0ad91ed023e4ea3f696175da2", "url": "https://github.com/apache/kafka/commit/79f5f054ee0e36a0ad91ed023e4ea3f696175da2", "message": "change prop to quotas", "committedDate": "2020-12-29T09:23:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5ODE1OQ==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r551298159", "bodyText": "We usually put the , at the end of the previous line when we break a line.\nCould we add the expected value and the current value in the message? We could say something like Expected connection quota $expected for $entity, got $actual.", "author": "dajac", "createdAt": "2021-01-04T12:49:13Z", "path": "core/src/test/scala/unit/kafka/server/ClientQuotasRequestTest.scala", "diffHunk": "@@ -212,7 +214,9 @@ class ClientQuotasRequestTest extends BaseRequestTest {\n           InetAddress.getByName(unknownHost)\n         else\n           InetAddress.getByName(entityName)\n-        assertEquals(expectedMatches(entity), servers.head.socketServer.connectionQuotas.connectionRateForIp(entityIp), 0.01)\n+        TestUtils.waitUntilTrue(\n+          () => expectedMatches(entity) - servers.head.socketServer.connectionQuotas.connectionRateForIp(entityIp) < 0.01\n+          ,\"Broker didn't update quotas from Zookeeper\")", "originalCommit": "79f5f054ee0e36a0ad91ed023e4ea3f696175da2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQwODI2Nw==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r551408267", "bodyText": "Thank you ! Both are very helpful . let me fix it .", "author": "g1geordie", "createdAt": "2021-01-04T16:05:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5ODE1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2NzI3OQ==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r551467279", "bodyText": "@dajac\nhello~\nI remain the message Broker didn't update quotas from Zookeeper which clearly indicate the error.\nAnd add  expect and got to error message\nCan you help me take a look again", "author": "g1geordie", "createdAt": "2021-01-04T17:45:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5ODE1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjcwNDQ1OA==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r552704458", "bodyText": "Thanks for the update. I think that we should not mention ZK here as ZK is going away. How about Connection quota of $entity is not $expected but $actual?", "author": "dajac", "createdAt": "2021-01-06T15:16:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5ODE1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjgxNjM3Ng==", "url": "https://github.com/apache/kafka/pull/9778#discussion_r552816376", "bodyText": "Thank you  ! I have fixed it .", "author": "g1geordie", "createdAt": "2021-01-06T17:07:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI5ODE1OQ=="}], "type": "inlineReview"}, {"oid": "a1b9277c5d46bf18d262382f8121639bb813c60d", "url": "https://github.com/apache/kafka/commit/a1b9277c5d46bf18d262382f8121639bb813c60d", "message": "fix compare value  , add message", "committedDate": "2021-01-04T17:35:27Z", "type": "commit"}, {"oid": "8e8c744a13a99982ae08a350129e00aae3f79823", "url": "https://github.com/apache/kafka/commit/8e8c744a13a99982ae08a350129e00aae3f79823", "message": "fix error message", "committedDate": "2021-01-06T17:03:18Z", "type": "commit"}]}