{"pr_number": 9696, "pr_title": "MINOR: Clean up streams metric sensors", "pr_createdAt": "2020-12-04T20:50:08Z", "pr_url": "https://github.com/apache/kafka/pull/9696", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEyNTM1MQ==", "url": "https://github.com/apache/kafka/pull/9696#discussion_r538125351", "bodyText": "It seems the number of elements is always 1. Is new ArrayDeque<>(1) more suitable for this case?", "author": "chia7712", "createdAt": "2020-12-08T08:15:36Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java", "diffHunk": "@@ -235,11 +235,12 @@ public final Sensor threadLevelSensor(final String threadId,\n         final String key = threadSensorPrefix(threadId);\n         synchronized (threadLevelSensors) {\n             final String fullSensorName = key + SENSOR_NAME_DELIMITER + sensorName;\n-            return Optional.ofNullable(metrics.getSensor(fullSensorName))\n-                .orElseGet(() -> {\n-                    threadLevelSensors.computeIfAbsent(key, ignored -> new LinkedList<>()).push(fullSensorName);\n-                    return metrics.sensor(fullSensorName, recordingLevel, parents);\n-                });\n+            final Sensor sensor = metrics.getSensor(fullSensorName);\n+            if (sensor == null) {\n+                threadLevelSensors.computeIfAbsent(key, ignored -> new LinkedList<>()).push(fullSensorName);", "originalCommit": "9e05a8746675dc88fb665413f7ef39779313a944", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEyOTAxNQ==", "url": "https://github.com/apache/kafka/pull/9696#discussion_r538129015", "bodyText": "The number of elements is not always 1. Each created thread-level sensor is added to this queue, e.g., processLatencySensor, pollRecordsSensor, etc. Check out the callers of threadLevelSensor().\nEach queue contains all thread-level sensors for one single stream thread.", "author": "cadonna", "createdAt": "2020-12-08T08:22:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEyNTM1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc0NzE4NA==", "url": "https://github.com/apache/kafka/pull/9696#discussion_r538747184", "bodyText": "We can also make this method private and not final, can't we?", "author": "cadonna", "createdAt": "2020-12-08T19:29:59Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java", "diffHunk": "@@ -926,6 +905,19 @@ public static void maybeMeasureLatency(final Runnable actionToMeasure,\n         }\n     }\n \n+    public final Sensor getSensors(final Map<String, Deque<String>> sensors,", "originalCommit": "f983d6857f81bcfe5d149cf5c5a4aa9905616b41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7033d1ba1d2bb2bb1b8ce3a8ca3a959930468523", "url": "https://github.com/apache/kafka/commit/7033d1ba1d2bb2bb1b8ce3a8ca3a959930468523", "message": "Updating adding sensors", "committedDate": "2020-12-08T20:47:56Z", "type": "commit"}, {"oid": "e7dac98024f0ce7bf52077277ffc02c08b2a1935", "url": "https://github.com/apache/kafka/commit/e7dac98024f0ce7bf52077277ffc02c08b2a1935", "message": "Removing duplicate code", "committedDate": "2020-12-08T20:47:56Z", "type": "commit"}, {"oid": "af261ad0cfc8babb9d37531749ce4cc36d761e2f", "url": "https://github.com/apache/kafka/commit/af261ad0cfc8babb9d37531749ce4cc36d761e2f", "message": "minor cleanup", "committedDate": "2020-12-08T20:58:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwNzQ3Ng==", "url": "https://github.com/apache/kafka/pull/9696#discussion_r538807476", "bodyText": "nit: Could you fix the indentation?", "author": "cadonna", "createdAt": "2020-12-08T21:06:24Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java", "diffHunk": "@@ -926,6 +905,19 @@ public static void maybeMeasureLatency(final Runnable actionToMeasure,\n         }\n     }\n \n+    private Sensor getSensors(final Map<String, Deque<String>> sensors,\n+                                   final String fullSensorName,\n+                                   final String key,\n+                                   final RecordingLevel recordingLevel,\n+                                   final Sensor... parents) {", "originalCommit": "af261ad0cfc8babb9d37531749ce4cc36d761e2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwODY2Ng==", "url": "https://github.com/apache/kafka/pull/9696#discussion_r538808666", "bodyText": "I think you can also drag this line into getSensor(). Sorry for not noticing it before.", "author": "cadonna", "createdAt": "2020-12-08T21:08:31Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java", "diffHunk": "@@ -235,11 +235,7 @@ public final Sensor threadLevelSensor(final String threadId,\n         final String key = threadSensorPrefix(threadId);\n         synchronized (threadLevelSensors) {\n             final String fullSensorName = key + SENSOR_NAME_DELIMITER + sensorName;", "originalCommit": "af261ad0cfc8babb9d37531749ce4cc36d761e2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8c7b912212018bf0fde8a1e0061c7ba7bc2bb4ac", "url": "https://github.com/apache/kafka/commit/8c7b912212018bf0fde8a1e0061c7ba7bc2bb4ac", "message": "minor cleanup", "committedDate": "2020-12-08T21:24:55Z", "type": "commit"}, {"oid": "8c7b912212018bf0fde8a1e0061c7ba7bc2bb4ac", "url": "https://github.com/apache/kafka/commit/8c7b912212018bf0fde8a1e0061c7ba7bc2bb4ac", "message": "minor cleanup", "committedDate": "2020-12-08T21:24:55Z", "type": "forcePushed"}]}