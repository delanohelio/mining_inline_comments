{"pr_number": 8138, "pr_title": "KAFKA-9573: Fix JVM options to run early versions of Kafka on the latest JVMs", "pr_createdAt": "2020-02-19T15:00:06Z", "pr_url": "https://github.com/apache/kafka/pull/8138", "timeline": [{"oid": "832171dddd3071cf7a7f6915707e6a8e6fbdb600", "url": "https://github.com/apache/kafka/commit/832171dddd3071cf7a7f6915707e6a8e6fbdb600", "message": "KAFKA-9573: Fix JVM options to run previous versions of Kafka on the latest JVMs", "committedDate": "2020-02-19T14:49:30Z", "type": "commit"}, {"oid": "3b1e2ac9c8fa2ec8df0ac8a59fd567d0e317b0a6", "url": "https://github.com/apache/kafka/commit/3b1e2ac9c8fa2ec8df0ac8a59fd567d0e317b0a6", "message": "KAFKA-9573: Fix JVM options to run previous versions of Kafka on the latest JVMs", "committedDate": "2020-02-19T15:07:18Z", "type": "commit"}, {"oid": "bcc6abc5235793664c319cdb10c0a8ad67427fa2", "url": "https://github.com/apache/kafka/commit/bcc6abc5235793664c319cdb10c0a8ad67427fa2", "message": "Merge branch 'trunk' into KAFKA-9573", "committedDate": "2020-02-19T15:07:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM1NTg4OA==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r381355888", "bodyText": "ConcMarkSweepGC has been removed recently too. Any reason not to use G1?", "author": "ijuma", "createdAt": "2020-02-19T15:11:45Z", "path": "tests/kafkatest/services/kafka/util.py", "diffHunk": "@@ -16,3 +16,20 @@\n from collections import namedtuple\n \n TopicPartition = namedtuple('TopicPartition', ['topic', 'partition'])\n+\n+def fix_opts_for_new_jvm(self, node):\n+    # Startup scripts for early versions of Kafka contains options\n+    # that not supported on latest versions of JVM like -XX:+PrintGCDateStamps or -XX:UseParNewGC.\n+    # When system test run on JVM that doesn't support these options\n+    # we should setup environment variables with correct options.\n+    java_version = node.account.ssh_capture(\"java -version 2>&1 | sed -E -n 's/.* version \\\"([0-9]*).*$/\\1/p'\")\n+\n+    if java_version <= 9\n+        return \"\"\n+\n+    cmd = \"\"\n+    if node.version == LATEST_0_9 or node.version == LATEST_0_8_2:\n+        cmd += \"export KAFKA_GC_LOG_OPTS=\\\"-verbose:gc\\\"; \"\n+    if node.version == LATEST_0_8_2:\n+        cmd += \"export KAFKA_JVM_PERFORMANCE_OPTS=\\\"-server -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+CMSScavengeBeforeRemark -XX:+DisableExplicitGC -Djava.awt.headless=true\\\"; \"", "originalCommit": "bcc6abc5235793664c319cdb10c0a8ad67427fa2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwODAxNg==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r381908016", "bodyText": "Hello, @ijuma\nThanks for the feedback.\nSeems we can take current defaults for these parameters.\nBut, for now, I still working on this PR to fix all places where kafka-run-class.sh executed.\nI will write to the dev-list and ticket when PR will be ready.", "author": "nizhikov", "createdAt": "2020-02-20T10:21:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM1NTg4OA=="}], "type": "inlineReview"}, {"oid": "5f134f549a599690d679dbb706e43918a581807e", "url": "https://github.com/apache/kafka/commit/5f134f549a599690d679dbb706e43918a581807e", "message": "KAFKA-9573: Fixing tests.", "committedDate": "2020-02-19T15:38:44Z", "type": "commit"}, {"oid": "09412c658fa8011c36736e5249231d9a45d4db75", "url": "https://github.com/apache/kafka/commit/09412c658fa8011c36736e5249231d9a45d4db75", "message": "KAFKA-9573: Fixing verifiable producer.", "committedDate": "2020-02-19T15:48:21Z", "type": "commit"}, {"oid": "8d88b73ace2f3a90700da18a03fe0dc6da461c9c", "url": "https://github.com/apache/kafka/commit/8d88b73ace2f3a90700da18a03fe0dc6da461c9c", "message": "KAFKA-9573: Fix import.", "committedDate": "2020-02-19T19:23:25Z", "type": "commit"}, {"oid": "28157dd5efb445e72da063aa4ea6c0fbbb1d3cb3", "url": "https://github.com/apache/kafka/commit/28157dd5efb445e72da063aa4ea6c0fbbb1d3cb3", "message": "KAFKA-9573: Fix import.", "committedDate": "2020-02-19T19:34:00Z", "type": "commit"}, {"oid": "0a2a70317f4807e4503b5e4eec3f07a17c46ab48", "url": "https://github.com/apache/kafka/commit/0a2a70317f4807e4503b5e4eec3f07a17c46ab48", "message": "KAFKA-9573: Version to fix options added.", "committedDate": "2020-02-20T10:19:01Z", "type": "commit"}, {"oid": "759fb4d5722fe8e1642b1cf35408ee6f46893a72", "url": "https://github.com/apache/kafka/commit/759fb4d5722fe8e1642b1cf35408ee6f46893a72", "message": "KAFKA-9573: Version to fix options added.", "committedDate": "2020-02-20T10:57:45Z", "type": "commit"}, {"oid": "623eab20e5ebb1e0de11d9cb301064e5bfffdc01", "url": "https://github.com/apache/kafka/commit/623eab20e5ebb1e0de11d9cb301064e5bfffdc01", "message": "KAFKA-9573: Version to fix options added.", "committedDate": "2020-02-20T12:06:57Z", "type": "commit"}, {"oid": "cf00524b0038795afe9b7291ad4912eda97ec9f6", "url": "https://github.com/apache/kafka/commit/cf00524b0038795afe9b7291ad4912eda97ec9f6", "message": "KAFKA-9573: syntax fix.", "committedDate": "2020-02-20T12:29:02Z", "type": "commit"}, {"oid": "355cae882f882e65fbc7c8a1dc08fd873f9ceebb", "url": "https://github.com/apache/kafka/commit/355cae882f882e65fbc7c8a1dc08fd873f9ceebb", "message": "KAFKA-9573: gc file path update.", "committedDate": "2020-02-20T13:16:47Z", "type": "commit"}, {"oid": "2c44806c3128c5f4e31acffb7fcd893d1d205d9d", "url": "https://github.com/apache/kafka/commit/2c44806c3128c5f4e31acffb7fcd893d1d205d9d", "message": "KAFKA-9573: gc file path update.", "committedDate": "2020-02-20T13:40:33Z", "type": "commit"}, {"oid": "b372d9e5bc7e41f57fdae12a57fc76c9d39c70ce", "url": "https://github.com/apache/kafka/commit/b372d9e5bc7e41f57fdae12a57fc76c9d39c70ce", "message": "KAFKA-9573: gc file path update.", "committedDate": "2020-02-20T14:04:40Z", "type": "commit"}, {"oid": "9da159423aa21223d5fc43efb284c595ded9c88f", "url": "https://github.com/apache/kafka/commit/9da159423aa21223d5fc43efb284c595ded9c88f", "message": "KAFKA-9573: gc file path update.", "committedDate": "2020-02-20T14:50:04Z", "type": "commit"}, {"oid": "50678d0b212ce41a2eba704a4a0ff89a5107a7c5", "url": "https://github.com/apache/kafka/commit/50678d0b212ce41a2eba704a4a0ff89a5107a7c5", "message": "KAFKA-9573: gc file path update.", "committedDate": "2020-02-20T14:51:11Z", "type": "commit"}, {"oid": "b639ddfd68d1e40a655839069082731c2bb0f634", "url": "https://github.com/apache/kafka/commit/b639ddfd68d1e40a655839069082731c2bb0f634", "message": "KAFKA-9573: fix jaxb-impl for jdk11.", "committedDate": "2020-02-21T09:58:23Z", "type": "commit"}, {"oid": "f825978ff03c789106fbdf99b208e75e6a59fe78", "url": "https://github.com/apache/kafka/commit/f825978ff03c789106fbdf99b208e75e6a59fe78", "message": "KAFKA-9573: fix jaxb-impl for jdk11.", "committedDate": "2020-02-21T10:49:46Z", "type": "commit"}, {"oid": "6fb636ed6bb8ddd7e07b62f710a253a1cc6b392b", "url": "https://github.com/apache/kafka/commit/6fb636ed6bb8ddd7e07b62f710a253a1cc6b392b", "message": "KAFKA-9573: fix jaxb-impl for jdk11.", "committedDate": "2020-02-21T10:57:02Z", "type": "commit"}, {"oid": "216a90454ef42facf32ae7f37aca8da4cfcc5dd7", "url": "https://github.com/apache/kafka/commit/216a90454ef42facf32ae7f37aca8da4cfcc5dd7", "message": "KAFKA-9573: fix jaxb-impl for jdk11.", "committedDate": "2020-02-21T10:59:57Z", "type": "commit"}, {"oid": "473bbccef13d5221483c2e24c296a1802317dda8", "url": "https://github.com/apache/kafka/commit/473bbccef13d5221483c2e24c296a1802317dda8", "message": "KAFKA-9573: .", "committedDate": "2020-02-21T13:10:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4Mjg1MA==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r382582850", "bodyText": "These changes should be reverted prior merge.\nKeeping it in PR just to show that all tests executed on JDK11.", "author": "nizhikov", "createdAt": "2020-02-21T13:34:09Z", "path": "tests/docker/run_tests.sh", "diffHunk": "@@ -25,6 +25,6 @@ die() {\n }\n \n if ${SCRIPT_DIR}/ducker-ak ssh | grep -q '(none)'; then\n-    ${SCRIPT_DIR}/ducker-ak up -n \"${KAFKA_NUM_CONTAINERS}\" || die \"ducker-ak up failed\"\n+    ${SCRIPT_DIR}/ducker-ak up -j 'openjdk:11' -n \"${KAFKA_NUM_CONTAINERS}\" || die \"ducker-ak up failed\"", "originalCommit": "473bbccef13d5221483c2e24c296a1802317dda8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcyMDYyMw==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r382720623", "bodyText": "Could you remove this part since we are close to merge it?", "author": "guozhangwang", "createdAt": "2020-02-21T17:52:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4Mjg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2MTIyNw==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r382761227", "bodyText": "Reverted.", "author": "nizhikov", "createdAt": "2020-02-21T19:21:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4Mjg1MA=="}], "type": "inlineReview"}, {"oid": "e500da1b92b1fe0f583f10531ff5709583f6614c", "url": "https://github.com/apache/kafka/commit/e500da1b92b1fe0f583f10531ff5709583f6614c", "message": "KAFKA-9573: Fixing VerifiableConsumer(Producer) to run with 0.8.2.2.", "committedDate": "2020-02-21T14:35:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxODA4OA==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r382618088", "bodyText": "Can we add this comment in every usage? Also, let's be clear about the minimum version that this class must support in the comment. Same for VerifiableProducer.", "author": "ijuma", "createdAt": "2020-02-21T14:43:11Z", "path": "tools/src/main/java/org/apache/kafka/tools/VerifiableConsumer.java", "diffHunk": "@@ -663,16 +662,17 @@ public static void main(String[] args) {\n         ArgumentParser parser = argParser();\n         if (args.length == 0) {\n             parser.printHelp();\n-            Exit.exit(0);\n+            System.exit(0);\n         }\n         try {\n             final VerifiableConsumer consumer = createFromArgs(parser, args);\n-            Exit.addShutdownHook(\"verifiable-consumer-shutdown-hook\", () -> consumer.close());\n+            Runtime.getRuntime().addShutdownHook(new Thread(consumer::close, \"verifiable-consumer-shutdown-hook\"));\n \n             consumer.run();\n         } catch (ArgumentParserException e) {\n             parser.handleError(e);\n-            Exit.exit(1);\n+            //Can't use `Exit.exit` here because `Exit` doesn't exists on old version of Kafka.", "originalCommit": "e500da1b92b1fe0f583f10531ff5709583f6614c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYyMTg2MA==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r382621860", "bodyText": "Fixed.\nWith this change, upgrade_test.py passes for 0.8.8.2. I will attach results in a couple of hours.", "author": "nizhikov", "createdAt": "2020-02-21T14:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxODA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYzMjUxNA==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r382632514", "bodyText": "Seems reasonable to do this in Verifiable{Producer,Consumer}, yes; the changes related to this in these two classes LGTM.", "author": "rondagostino", "createdAt": "2020-02-21T15:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYxODA4OA=="}], "type": "inlineReview"}, {"oid": "5192b1a33c0cedfc06b1b31c44aec253d2229319", "url": "https://github.com/apache/kafka/commit/5192b1a33c0cedfc06b1b31c44aec253d2229319", "message": "KAFKA-9573: Comments added.", "committedDate": "2020-02-21T14:48:31Z", "type": "commit"}, {"oid": "1611002ac6f31d0a02a7894e37cd2500a9e47b5c", "url": "https://github.com/apache/kafka/commit/1611002ac6f31d0a02a7894e37cd2500a9e47b5c", "message": "KAFKA-9573: Comments fixed.", "committedDate": "2020-02-21T14:54:15Z", "type": "commit"}, {"oid": "869e267adc1fdba60dd157284e0257690a2b1fa5", "url": "https://github.com/apache/kafka/commit/869e267adc1fdba60dd157284e0257690a2b1fa5", "message": "KAFKA-9573: Comments fixed.", "committedDate": "2020-02-21T14:55:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcyMDIwOA==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r382720208", "bodyText": "nit: doesn't exist until 0.11.0.0 to be more accurate? Ditto below.", "author": "guozhangwang", "createdAt": "2020-02-21T17:51:16Z", "path": "tools/src/main/java/org/apache/kafka/tools/VerifiableConsumer.java", "diffHunk": "@@ -633,7 +632,8 @@ public static VerifiableConsumer createFromArgs(ArgumentParser parser, String[]\n             brokerHostandPort = res.getString(\"brokerList\");\n         } else {\n             parser.printHelp();\n-            Exit.exit(0);\n+            //Can't use `Exit.exit` here because `Exit` doesn't exists on 0.8.2.2.", "originalCommit": "869e267adc1fdba60dd157284e0257690a2b1fa5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1OTI3Mg==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r382759272", "bodyText": "Fixed.", "author": "nizhikov", "createdAt": "2020-02-21T19:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcyMDIwOA=="}], "type": "inlineReview"}, {"oid": "93969f0ed091f9ffe0726c4c06a483ae2bd21513", "url": "https://github.com/apache/kafka/commit/93969f0ed091f9ffe0726c4c06a483ae2bd21513", "message": "KAFKA-9573: Code review comments fixed.", "committedDate": "2020-02-21T19:21:26Z", "type": "commit"}, {"oid": "58586a540f1c1cf9b2cc8deb828c8aa42cdb2d2b", "url": "https://github.com/apache/kafka/commit/58586a540f1c1cf9b2cc8deb828c8aa42cdb2d2b", "message": "Merge branch 'trunk' into KAFKA-9573", "committedDate": "2020-02-25T14:41:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2MDMxNA==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r386060314", "bodyText": "Can we submit the Exit changes as a separate PR? It needs to be cherry-picked to the 2.5 branch as well since it's causing system test failures.", "author": "ijuma", "createdAt": "2020-02-29T22:33:19Z", "path": "tools/src/main/java/org/apache/kafka/tools/VerifiableConsumer.java", "diffHunk": "@@ -633,7 +632,8 @@ public static VerifiableConsumer createFromArgs(ArgumentParser parser, String[]\n             brokerHostandPort = res.getString(\"brokerList\");\n         } else {\n             parser.printHelp();\n-            Exit.exit(0);\n+            //Can't use `Exit.exit` here because `Exit` doesn't exists until 0.11.0.0.\n+            System.exit(0);", "originalCommit": "58586a540f1c1cf9b2cc8deb828c8aa42cdb2d2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA4MTY4Mg==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r386081682", "bodyText": "Can we submit the Exit changes as a separate PR?\n\nYes, we can :)\nPlease, see - #8197", "author": "nizhikov", "createdAt": "2020-03-01T06:38:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2MDMxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2MDM2Nw==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r386060367", "bodyText": "I was thinking about this. It seems a bit weird to change the classpath in the system tests. There are 2 alternatives:\n\nChange the older branches to include this jar in the classpath. It's a bit weird because the older versions don't support Java 11.\nChange the compatibility tests to exclude the older versions when executed with Java 11.\n\nOption 2 seems better to me. What do you think?", "author": "ijuma", "createdAt": "2020-02-29T22:34:29Z", "path": "tests/docker/Dockerfile", "diffHunk": "@@ -59,6 +60,15 @@ RUN mkdir -p \"/opt/kafka-2.2.2\" && chmod a+rw /opt/kafka-2.2.2 && curl -s \"$KAFK\n RUN mkdir -p \"/opt/kafka-2.3.1\" && chmod a+rw /opt/kafka-2.3.1 && curl -s \"$KAFKA_MIRROR/kafka_2.12-2.3.1.tgz\" | tar xz --strip-components=1 -C \"/opt/kafka-2.3.1\"\n RUN mkdir -p \"/opt/kafka-2.4.0\" && chmod a+rw /opt/kafka-2.4.0 && curl -s \"$KAFKA_MIRROR/kafka_2.12-2.4.0.tgz\" | tar xz --strip-components=1 -C \"/opt/kafka-2.4.0\"\n \n+# Install jars missing on JDK11.\n+ARG MVN_MIRROR=\"https://repo1.maven.org/maven2\"\n+RUN if [ \"x$jdk_version\" = \"xopenjdk:11\" ] ; then curl -s \"$MVN_MIRROR/com/sun/xml/bind/jaxb-impl/2.3.1/jaxb-impl-2.3.1.jar\" -o /opt/kafka-0.10.1.1/libs/jaxb-impl-2.3.1.jar ; fi\n+RUN if [ \"x$jdk_version\" = \"xopenjdk:11\" ] ; then curl -s \"$MVN_MIRROR/com/sun/xml/bind/jaxb-impl/2.3.1/jaxb-impl-2.3.1.jar\" -o /opt/kafka-0.10.2.2/libs/jaxb-impl-2.3.1.jar ; fi\n+RUN if [ \"x$jdk_version\" = \"xopenjdk:11\" ] ; then curl -s \"$MVN_MIRROR/com/sun/xml/bind/jaxb-impl/2.3.1/jaxb-impl-2.3.1.jar\" -o /opt/kafka-0.11.0.3/libs/jaxb-impl-2.3.1.jar ; fi\n+RUN if [ \"x$jdk_version\" = \"xopenjdk:11\" ] ; then curl -s \"$MVN_MIRROR/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar\" -o /opt/kafka-0.10.1.1/libs/jaxb-api-2.3.1.jar ; fi\n+RUN if [ \"x$jdk_version\" = \"xopenjdk:11\" ] ; then curl -s \"$MVN_MIRROR/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar\" -o /opt/kafka-0.10.2.2/libs/jaxb-api-2.3.1.jar ; fi\n+RUN if [ \"x$jdk_version\" = \"xopenjdk:11\" ] ; then curl -s \"$MVN_MIRROR/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar\" -o /opt/kafka-0.11.0.3/libs/jaxb-api-2.3.1.jar ; fi", "originalCommit": "58586a540f1c1cf9b2cc8deb828c8aa42cdb2d2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA4Mjk0Ng==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r386082946", "bodyText": "It seems a bit weird to change the classpath in the system tests\n\nI tend to agree with you in general but disagree in this specific case.\nIt's a well-known fact that JAXB(and some other libs) was removed from the JDK11.\nIt seems OK for me to explicitly add it to the classpath of the software that was developed when this lib was part of the JDK.\nPlease, see the link - https://www.oracle.com/technetwork/java/javase/11-relnote-issues-5012449.html#JDK-8190378\n\nChange the compatibility tests to exclude the older versions when executed with Java 11.\n\nDo we need to check upgrade_test.py for 0.10 and 0.11?\nI prepared the fix with the assumption that we still want to check all versions and upgrade scenarios.\nPlease, note, that 0.8 and 0.9 cases succeed without classpath fix.\nIt seems inconsistent for me if we will disable 0.10 and 0.11 cases but keep 0.9 and 0.8 checks enabled. Do you suggest disabling all upgrade checks prior 1.x version?\nPlease, let me know what do you think and I will prepare the fix.", "author": "nizhikov", "createdAt": "2020-03-01T07:03:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2MDM2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE1OTc0MA==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r386159740", "bodyText": "It's a well-known fact that JAXB(and some other libs) was removed from the JDK11.\nIt seems OK for me to explicitly add it to the classpath of the software that was developed when this lib was part of the JDK.\n\nI know, but my point is a bit different: if an old Kafka version is not tested with Java 11 as part of the unit and integration tests, it's a bit odd to expect the system tests to work with Java 11 for such version.\n\nIt seems inconsistent for me if we will disable 0.10 and 0.11 cases but keep 0.9 and 0.8 checks enabled. Do you suggest disabling all upgrade checks prior 1.x version?\n\nYes, 1.0 and newer seems reasonable to me.", "author": "ijuma", "createdAt": "2020-03-02T00:51:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2MDM2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwMTY4Mw==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r393701683", "bodyText": "Hello @ijuma\nI've updated PR.\nUpgrade tests for old versions of Kafka on JDK 11 are disabled.\nPlease, take a look one more time.\nUpgrade tests results - https://issues.apache.org/jira/browse/KAFKA-9573?focusedCommentId=17060926&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-17060926\n====================================================================================================\nSESSION REPORT (ALL TESTS)\nducktape version: 0.7.6\nsession_id:       2020-03-17--013\nrun time:         52 minutes 37.462 seconds\ntests run:        31\npassed:           30\nfailed:           1\nignored:          0\n====================================================================================================", "author": "nizhikov", "createdAt": "2020-03-17T14:03:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2MDM2Nw=="}], "type": "inlineReview"}, {"oid": "924e8f8f30886a9eed2d3ce1ae88656d5d421a25", "url": "https://github.com/apache/kafka/commit/924e8f8f30886a9eed2d3ce1ae88656d5d421a25", "message": "Merge branch 'trunk' into KAFKA-9573", "committedDate": "2020-03-01T06:24:22Z", "type": "commit"}, {"oid": "1d5845ff2ae0e2aab0fe7a178271752f13da6ee9", "url": "https://github.com/apache/kafka/commit/1d5845ff2ae0e2aab0fe7a178271752f13da6ee9", "message": "Merge branch 'trunk' into KAFKA-9573", "committedDate": "2020-03-02T05:56:03Z", "type": "commit"}, {"oid": "d695d6a419b8bc8171322541da47e92c910318d2", "url": "https://github.com/apache/kafka/commit/d695d6a419b8bc8171322541da47e92c910318d2", "message": "Merge branch 'trunk' into KAFKA-9573", "committedDate": "2020-03-16T19:23:06Z", "type": "commit"}, {"oid": "90a59a1bcc21c1cfbd5dbca717aea3c2ef3ac565", "url": "https://github.com/apache/kafka/commit/90a59a1bcc21c1cfbd5dbca717aea3c2ef3ac565", "message": "KAFKA-9573: Ignoring upgrade tests for old Kafka version if jdk version > 9", "committedDate": "2020-03-17T08:02:06Z", "type": "commit"}, {"oid": "459c8f8e197fcd3e3aab591e7366ca0827f675ca", "url": "https://github.com/apache/kafka/commit/459c8f8e197fcd3e3aab591e7366ca0827f675ca", "message": "KAFKA-9573: minor fix", "committedDate": "2020-03-17T12:54:08Z", "type": "commit"}, {"oid": "8a14254efbc98d6b8f9c620444373c4b2e12ce34", "url": "https://github.com/apache/kafka/commit/8a14254efbc98d6b8f9c620444373c4b2e12ce34", "message": "KAFKA-9573: minor fix", "committedDate": "2020-03-17T12:56:20Z", "type": "commit"}, {"oid": "834a707a5f738e0fad53ed6222925258f7d3f6e9", "url": "https://github.com/apache/kafka/commit/834a707a5f738e0fad53ed6222925258f7d3f6e9", "message": "KAFKA-9573: minor fix", "committedDate": "2020-03-17T12:59:57Z", "type": "commit"}, {"oid": "1cf6244330aeb5e1661d85278ff19aa458fb8d88", "url": "https://github.com/apache/kafka/commit/1cf6244330aeb5e1661d85278ff19aa458fb8d88", "message": "KAFKA-9573: minor fix", "committedDate": "2020-03-17T13:02:23Z", "type": "commit"}, {"oid": "8efc9a193923ffd02a81492e1dacf5f284387967", "url": "https://github.com/apache/kafka/commit/8efc9a193923ffd02a81492e1dacf5f284387967", "message": "KAFKA-9573: reverting unnecessary changes.", "committedDate": "2020-03-18T13:46:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQyNTUwNA==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r394425504", "bodyText": "Could we have kafka_opts return the adjusted ops for the new jvm?", "author": "ijuma", "createdAt": "2020-03-18T15:16:53Z", "path": "tests/kafkatest/services/console_consumer.py", "diffHunk": "@@ -167,7 +168,8 @@ def start_cmd(self, node):\n         else:\n             args['kafka_opts'] = self.security_config.kafka_opts", "originalCommit": "8efc9a193923ffd02a81492e1dacf5f284387967", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDgxOTA0MA==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r394819040", "bodyText": "Hello, @ijuma\nCan you, please, clarify your proposal?\nI looked at kafka_opts values in the tests and it's usage in kafka-run-class.sh and doesn't get it. How should I adjust it and why?\nCan you, please, give me an example of some wrong value of kafka_opts?", "author": "nizhikov", "createdAt": "2020-03-19T06:46:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQyNTUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUxMDI2OQ==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r395510269", "bodyText": "Hello @ijuma\nCan you, please, explain your idea to me?\nSo I can fix this PR according to your requirements.", "author": "nizhikov", "createdAt": "2020-03-20T09:09:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQyNTUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ0MTgzOQ==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r396441839", "bodyText": "The function kafka_opts returns jvm options that don't work with certain JVM versions. I was suggesting that we could pass a node to it so that it returns the right jvm options. That way, we don't need to fix them after the fact. Does that makes sense?", "author": "ijuma", "createdAt": "2020-03-23T13:17:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQyNTUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA3NTg0Nw==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r397075847", "bodyText": "Hello @ijuma\nI assume you are writing about security_config.py kafka_opts function:\nIs it correct?\nIf yes, then it seems all options are supported in java since JDK7 or even earlier:\nCan you, please, clarify, what specific jvm options should be fixed?\nhttps://docs.oracle.com/javase/7/docs/technotes/guides/security/jgss/tutorials/LoginConfigFile.html\n    @property\n    def kafka_opts(self, node):\n        if self.has_sasl:\n            if self.static_jaas_conf:\n                return \"\\\"-Djava.security.auth.login.config=%s -Djava.security.krb5.conf=%s\\\"\" % (SecurityConfig.JAAS_CONF_PATH, SecurityConfig.KRB5CONF_PATH)\n            else:\n                return \"\\\"-Djava.security.krb5.conf=%s\\\"\" % SecurityConfig.KRB5CONF_PATH\n        else:\n            return \"\"", "author": "nizhikov", "createdAt": "2020-03-24T11:17:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQyNTUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAwNDE1NQ==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r398004155", "bodyText": "Hello @ijuma\nCan you, please, explain your proposal for kafka_opts one more time :)\nI really want to fix it.", "author": "nizhikov", "createdAt": "2020-03-25T16:42:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQyNTUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAwNzIzOA==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r398007238", "bodyText": "My bad. The unsupported options come directly from the shell scripts. You are overriding depending on the JVM version. Makes sense.", "author": "ijuma", "createdAt": "2020-03-25T16:46:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQyNTUwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAxMDAxMQ==", "url": "https://github.com/apache/kafka/pull/8138#discussion_r398010011", "bodyText": "Thanks for the reply!\nIs everything OK with the PR?\nShould I additionally check some other tests?", "author": "nizhikov", "createdAt": "2020-03-25T16:50:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQyNTUwNA=="}], "type": "inlineReview"}]}