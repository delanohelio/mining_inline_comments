{"pr_number": 9682, "pr_title": "KAFKA-10803: Fix improper removal of bad dynamic config", "pr_createdAt": "2020-12-03T16:29:20Z", "pr_url": "https://github.com/apache/kafka/pull/9682", "timeline": [{"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a", "url": "https://github.com/apache/kafka/commit/ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a", "message": "Fix improper removal of bad dynamic config", "committedDate": "2020-12-03T16:08:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4NzQwMw==", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535387403", "bodyText": "Current trunk code returns the old value 2222 for this instead of the newly configured 1111.", "author": "prat0318", "createdAt": "2020-12-03T16:30:49Z", "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "diffHunk": "@@ -400,6 +400,33 @@ class DynamicBrokerConfigTest {\n     newprops.put(KafkaConfig.BackgroundThreadsProp, \"100\")\n     dynamicBrokerConfig.updateBrokerConfig(0, newprops)\n   }\n+\n+  @Test\n+  def testImproperConfigsAreRemoved(): Unit = {\n+    val props = TestUtils.createBrokerConfig(0, TestUtils.MockZkConnect)\n+    val configs = KafkaConfig(props)\n+\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    assertEquals(1048588, configs.messageMaxBytes)\n+\n+    var newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"9999\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"2222\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    assertEquals(9999, configs.maxConnections)\n+    assertEquals(2222, configs.messageMaxBytes)\n+\n+    newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"INVALID_INT\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"1111\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    // Invalid value should be skipped and reassigned as Originals\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    // Even if One property is invalid, the below should get correctly updated.\n+    assertEquals(1111, configs.messageMaxBytes)", "originalCommit": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyNjY3MQ==", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535426671", "bodyText": "How about invalidProps.keys.foreach(props.remove)? it is still one line.", "author": "chia7712", "createdAt": "2020-12-03T17:14:06Z", "path": "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala", "diffHunk": "@@ -467,7 +467,9 @@ class DynamicBrokerConfig(private val kafkaConfig: KafkaConfig) extends Logging\n             case _: Exception => true\n           }\n         }\n-        invalidProps.foreach(props.remove)\n+        invalidProps.foreach {", "originalCommit": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ0Mjc4Mg==", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535442782", "bodyText": "done.", "author": "prat0318", "createdAt": "2020-12-03T17:37:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyNjY3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyODg0MA==", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535428840", "bodyText": "Could you replace Int.MaxValue by Defaults.MaxConnections?", "author": "chia7712", "createdAt": "2020-12-03T17:17:03Z", "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "diffHunk": "@@ -400,6 +400,33 @@ class DynamicBrokerConfigTest {\n     newprops.put(KafkaConfig.BackgroundThreadsProp, \"100\")\n     dynamicBrokerConfig.updateBrokerConfig(0, newprops)\n   }\n+\n+  @Test\n+  def testImproperConfigsAreRemoved(): Unit = {\n+    val props = TestUtils.createBrokerConfig(0, TestUtils.MockZkConnect)\n+    val configs = KafkaConfig(props)\n+\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    assertEquals(1048588, configs.messageMaxBytes)\n+\n+    var newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"9999\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"2222\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    assertEquals(9999, configs.maxConnections)\n+    assertEquals(2222, configs.messageMaxBytes)\n+\n+    newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"INVALID_INT\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"1111\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    // Invalid value should be skipped and reassigned as Originals\n+    assertEquals(Int.MaxValue, configs.maxConnections)", "originalCommit": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ0Mjg5NA==", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535442894", "bodyText": "done.", "author": "prat0318", "createdAt": "2020-12-03T17:37:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyODg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyOTA5NA==", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535429094", "bodyText": "\"Originals\" -> \"default value\"", "author": "chia7712", "createdAt": "2020-12-03T17:17:27Z", "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "diffHunk": "@@ -400,6 +400,33 @@ class DynamicBrokerConfigTest {\n     newprops.put(KafkaConfig.BackgroundThreadsProp, \"100\")\n     dynamicBrokerConfig.updateBrokerConfig(0, newprops)\n   }\n+\n+  @Test\n+  def testImproperConfigsAreRemoved(): Unit = {\n+    val props = TestUtils.createBrokerConfig(0, TestUtils.MockZkConnect)\n+    val configs = KafkaConfig(props)\n+\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    assertEquals(1048588, configs.messageMaxBytes)\n+\n+    var newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"9999\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"2222\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    assertEquals(9999, configs.maxConnections)\n+    assertEquals(2222, configs.messageMaxBytes)\n+\n+    newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"INVALID_INT\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"1111\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    // Invalid value should be skipped and reassigned as Originals", "originalCommit": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ0Mjk2NQ==", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535442965", "bodyText": "done.", "author": "prat0318", "createdAt": "2020-12-03T17:37:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyOTA5NA=="}], "type": "inlineReview"}, {"oid": "f747aa559ca92325b822f5f92e432fe3cb76d30c", "url": "https://github.com/apache/kafka/commit/f747aa559ca92325b822f5f92e432fe3cb76d30c", "message": "Add review suggestions", "committedDate": "2020-12-03T17:36:20Z", "type": "commit"}]}