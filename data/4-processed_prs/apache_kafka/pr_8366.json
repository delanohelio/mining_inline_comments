{"pr_number": 8366, "pr_title": "MINOR: optimize integration test shutdown", "pr_createdAt": "2020-03-26T19:45:45Z", "pr_url": "https://github.com/apache/kafka/pull/8366", "timeline": [{"oid": "e3396ab1365a2737a3ed003904154a974cfe4981", "url": "https://github.com/apache/kafka/commit/e3396ab1365a2737a3ed003904154a974cfe4981", "message": "MINOR: optimize integration test shutdown", "committedDate": "2020-03-26T17:44:27Z", "type": "commit"}, {"oid": "545d87db930e34b912724e481c1a513598a99e15", "url": "https://github.com/apache/kafka/commit/545d87db930e34b912724e481c1a513598a99e15", "message": "remove unused method", "committedDate": "2020-03-26T18:37:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg3MjcyMg==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398872722", "bodyText": "Do we need to wait to avoid the leader election?", "author": "mjsax", "createdAt": "2020-03-26T20:32:48Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/utils/EmbeddedKafkaCluster.java", "diffHunk": "@@ -118,8 +118,19 @@ private void putIfAbsent(final Properties props, final String propertyKey, final\n      * Stop the Kafka cluster.\n      */\n     private void stop() {\n+        if (brokers.length > 1) {\n+            // delete the topics first to avoid cascading leader elections while shutting down the brokers\n+            try {\n+                deleteAllTopicsAndWait(60_000L);", "originalCommit": "545d87db930e34b912724e481c1a513598a99e15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg3NTM5OA==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398875398", "bodyText": "hmm, good question. I don't know! I'll find out, though...", "author": "vvcephei", "createdAt": "2020-03-26T20:36:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg3MjcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkwNTk0Mw==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398905943", "bodyText": "Nope! Thanks for the heads-up.", "author": "vvcephei", "createdAt": "2020-03-26T21:32:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg3MjcyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkwODM4Mw==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398908383", "bodyText": "The updated code here creates just one request to delete all topics, and also just waits for the delete request to be acked, not for the delete to be fully synced to the whole cluster.", "author": "vvcephei", "createdAt": "2020-03-26T21:37:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg3MjcyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg3MzMwOQ==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398873309", "bodyText": "Nit (feel free to ignore): Should stopAsync be before awaitStoppedAndPurge ?", "author": "mjsax", "createdAt": "2020-03-26T20:33:55Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/utils/KafkaEmbedded.java", "diffHunk": "@@ -143,6 +137,13 @@ public void stop() {\n             brokerList(), zookeeperConnect());\n     }\n \n+    @SuppressWarnings(\"WeakerAccess\")\n+    public void stopAsync() {", "originalCommit": "545d87db930e34b912724e481c1a513598a99e15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg3NTcwMQ==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398875701", "bodyText": "Sure, this order was coincidental.", "author": "vvcephei", "createdAt": "2020-03-26T20:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg3MzMwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5MjU2MQ==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398892561", "bodyText": "Should we actually capture AssertionError instead of InterruptedException? I think when it times out the former is thrown not the latter.", "author": "guozhangwang", "createdAt": "2020-03-26T21:05:43Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/utils/EmbeddedKafkaCluster.java", "diffHunk": "@@ -118,8 +118,19 @@ private void putIfAbsent(final Properties props, final String propertyKey, final\n      * Stop the Kafka cluster.\n      */\n     private void stop() {\n+        if (brokers.length > 1) {\n+            // delete the topics first to avoid cascading leader elections while shutting down the brokers\n+            try {\n+                deleteAllTopicsAndWait(60_000L);\n+            } catch (final InterruptedException e) {\n+                log.warn(\"Couldn't delete all topics before stopping brokers\", e);", "originalCommit": "545d87db930e34b912724e481c1a513598a99e15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NzQxOQ==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398897419", "bodyText": "Oh, yeah, you're right. I was just reacting to the checked exception. I'll fix it. In fact, we should probably rethrow for the InterruptedException.", "author": "vvcephei", "createdAt": "2020-03-26T21:15:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5MjU2MQ=="}], "type": "inlineReview"}, {"oid": "c8c3d01b7cfe564491bde283fc84a1c3b2aac765", "url": "https://github.com/apache/kafka/commit/c8c3d01b7cfe564491bde283fc84a1c3b2aac765", "message": "cr feedback", "committedDate": "2020-03-26T21:36:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkyNzk1Ng==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398927956", "bodyText": "We should use try-with-resource to make sure the AdminClient gets closed.", "author": "mjsax", "createdAt": "2020-03-26T22:22:04Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/utils/EmbeddedKafkaCluster.java", "diffHunk": "@@ -118,8 +120,25 @@ private void putIfAbsent(final Properties props, final String propertyKey, final\n      * Stop the Kafka cluster.\n      */\n     private void stop() {\n+        if (brokers.length > 1) {\n+            // delete the topics first to avoid cascading leader elections while shutting down the brokers\n+            try {\n+                final Set<String> topics = JavaConverters.setAsJavaSetConverter(brokers[0].kafkaServer().zkClient().getAllTopicsInCluster(false)).asJava();\n+                final Admin adminClient = brokers[0].createAdminClient();", "originalCommit": "c8c3d01b7cfe564491bde283fc84a1c3b2aac765", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkyOTkzMg==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398929932", "bodyText": "Gah. Of course.", "author": "vvcephei", "createdAt": "2020-03-26T22:27:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkyNzk1Ng=="}], "type": "inlineReview"}, {"oid": "002e80db429cda99e23be5116391395adfe7e649", "url": "https://github.com/apache/kafka/commit/002e80db429cda99e23be5116391395adfe7e649", "message": "CR feedback", "committedDate": "2020-03-26T22:32:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkzMzE3MA==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398933170", "bodyText": "I thought this could throw, too?", "author": "mjsax", "createdAt": "2020-03-26T22:35:39Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/utils/EmbeddedKafkaCluster.java", "diffHunk": "@@ -118,8 +120,25 @@ private void putIfAbsent(final Properties props, final String propertyKey, final\n      * Stop the Kafka cluster.\n      */\n     private void stop() {\n+        if (brokers.length > 1) {\n+            // delete the topics first to avoid cascading leader elections while shutting down the brokers\n+            final Set<String> topics = getAllTopicsInCluster();", "originalCommit": "002e80db429cda99e23be5116391395adfe7e649", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MDIwMQ==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398940201", "bodyText": "I guess it could, but it's just directly reading the topics from zookeeper (of which there's only one node in the cluster). If that fails, it seems like everything else would also fail, so it's probably pointless to even bother closing the brokers. Similarly, calling shutdown on the first broker could also throw, but we don't bother catching there to continue closing the rest of the cluster.", "author": "vvcephei", "createdAt": "2020-03-26T22:54:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkzMzE3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MjQ0Mw==", "url": "https://github.com/apache/kafka/pull/8366#discussion_r398942443", "bodyText": "Ok. Works for me.", "author": "mjsax", "createdAt": "2020-03-26T23:01:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkzMzE3MA=="}], "type": "inlineReview"}]}