{"pr_number": 8297, "pr_title": "MINOR: enforce non-negative invariant for checkpointed offsets", "pr_createdAt": "2020-03-13T20:36:21Z", "pr_url": "https://github.com/apache/kafka/pull/8297", "timeline": [{"oid": "ed2e8d535d2dbc7a94164b04683f620a0027ec12", "url": "https://github.com/apache/kafka/commit/ed2e8d535d2dbc7a94164b04683f620a0027ec12", "message": "enforce positive in checkpointer, skip negatives received in produce response", "committedDate": "2020-03-13T20:00:12Z", "type": "commit"}, {"oid": "6de86bbabb2256112804df561d978ee72d634588", "url": "https://github.com/apache/kafka/commit/6de86bbabb2256112804df561d978ee72d634588", "message": "add unit test", "committedDate": "2020-03-13T20:30:37Z", "type": "commit"}, {"oid": "1be1f26a3c40adf1ef0f00fc9c34818429a32ea1", "url": "https://github.com/apache/kafka/commit/1be1f26a3c40adf1ef0f00fc9c34818429a32ea1", "message": "add line to javadocs", "committedDate": "2020-03-13T20:36:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1OTY3Nw==", "url": "https://github.com/apache/kafka/pull/8297#discussion_r392459677", "bodyText": "Since we may have older checkpoint files that wrote negative offsets, we should just ignore these on read", "author": "ableegoldman", "createdAt": "2020-03-13T20:37:45Z", "path": "streams/src/main/java/org/apache/kafka/streams/state/internals/OffsetCheckpoint.java", "diffHunk": "@@ -145,8 +156,14 @@ private void writeEntry(final BufferedWriter writer,\n \n                             final String topic = pieces[0];\n                             final int partition = Integer.parseInt(pieces[1]);\n+                            final TopicPartition tp = new TopicPartition(topic, partition);\n                             final long offset = Long.parseLong(pieces[2]);\n-                            offsets.put(new TopicPartition(topic, partition), offset);\n+                            if (offset >= 0L) {\n+                                offsets.put(tp, offset);\n+                            } else {\n+                                LOG.warn(\"Read offset={} from checkpoint file for {}\", offset, tp);", "originalCommit": "1be1f26a3c40adf1ef0f00fc9c34818429a32ea1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ2MDkwMA==", "url": "https://github.com/apache/kafka/pull/8297#discussion_r392460900", "bodyText": "Skip writing/overwriting the offset for this partition, at worst we will have to restore the last batch of records unnecessarily.", "author": "ableegoldman", "createdAt": "2020-03-13T20:39:34Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/RecordCollectorImpl.java", "diffHunk": "@@ -184,7 +184,11 @@ public void initialize() {\n \n             if (exception == null) {\n                 final TopicPartition tp = new TopicPartition(metadata.topic(), metadata.partition());\n-                offsets.put(tp, metadata.offset());\n+                if (metadata.offset() >= 0L) {\n+                    offsets.put(tp, metadata.offset());\n+                } else {\n+                    log.warn(\"Received offset={} in produce response for {}\", metadata.offset(), tp);", "originalCommit": "1be1f26a3c40adf1ef0f00fc9c34818429a32ea1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ2Njc1Ng==", "url": "https://github.com/apache/kafka/pull/8297#discussion_r392466756", "bodyText": "Did you observe that offset returned from the param could be smaller than zero? I think this should never happen from producer callbacks.", "author": "guozhangwang", "createdAt": "2020-03-13T20:48:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ2MDkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ3Mjk2NA==", "url": "https://github.com/apache/kafka/pull/8297#discussion_r392472964", "bodyText": "No, but Jason said he thought it may be possible in some edge (but non-error) cases. There's no guarantee a successful send will never return a negative offset", "author": "ableegoldman", "createdAt": "2020-03-13T20:58:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ2MDkwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxNjA4Ng==", "url": "https://github.com/apache/kafka/pull/8297#discussion_r392616086", "bodyText": "Cool", "author": "guozhangwang", "createdAt": "2020-03-14T20:15:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ2MDkwMA=="}], "type": "inlineReview"}]}