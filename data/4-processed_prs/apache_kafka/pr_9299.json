{"pr_number": 9299, "pr_title": "MINOR: Use `Map.forKeyValue` to avoid tuple allocation in Scala 2.13", "pr_createdAt": "2020-09-17T15:22:00Z", "pr_url": "https://github.com/apache/kafka/pull/9299", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM0NDI3Ng==", "url": "https://github.com/apache/kafka/pull/9299#discussion_r490344276", "bodyText": "Unrelated clean-up I noticed.", "author": "ijuma", "createdAt": "2020-09-17T15:29:26Z", "path": "core/src/main/scala/kafka/tools/GetOffsetShell.scala", "diffHunk": "@@ -133,7 +133,7 @@ object GetOffsetShell {\n         }\n     }\n \n-    partitionOffsets.toSeq.sortBy { case (tp, _) => tp.partition }.foreach { case (tp, offset) =>\n+    partitionOffsets.toArray.sortBy { case (tp, _) => tp.partition }.foreach { case (tp, offset) =>", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NjYwOA==", "url": "https://github.com/apache/kafka/pull/9299#discussion_r490586608", "bodyText": "The name reads a tad awkwardly. I wonder if foreachKeyValue would be too verbose. Or maybe foreachMapEntry?", "author": "hachikuji", "createdAt": "2020-09-17T22:01:17Z", "path": "core/src/main/scala/kafka/utils/Implicits.scala", "diffHunk": "@@ -46,4 +47,21 @@ object Implicits {\n \n   }\n \n+  /**\n+   * Exposes `foreachKv` which maps to `foreachEntry` in Scala 2.13 and `foreach` in Scala 2.12\n+   * (with the help of scala.collection.compat). `foreachEntry` avoids the tuple allocation and\n+   * is more efficient.\n+   *\n+   * This was not named `foreachEntry` to avoid `unused import` warnings in Scala 2.13 (the implicit\n+   * would not be triggered in Scala 2.13 since `Map.foreachEntry` would have precedence).\n+   */\n+  @nowarn(\"cat=unused-imports\")\n+  implicit class MapExtensionMethods[K, V](private val self: scala.collection.Map[K, V]) extends AnyVal {\n+    import scala.collection.compat._\n+    def foreachKv[U](f: (K, V) => U): Unit = {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA3ODU3Nw==", "url": "https://github.com/apache/kafka/pull/9299#discussion_r491078577", "bodyText": "Or foreachPair.", "author": "jsancio", "createdAt": "2020-09-18T17:01:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NjYwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTY0Nw==", "url": "https://github.com/apache/kafka/pull/9299#discussion_r491149647", "bodyText": "Thanks for the feedback. I agree that the name could be improved. I was hoping for something concise and descriptive. foreachPair is not bad, but you'd expect to get a pair (tuple) and this is to avoid that. How about forKeyValue?", "author": "ijuma", "createdAt": "2020-09-18T19:28:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NjYwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTc5OA==", "url": "https://github.com/apache/kafka/pull/9299#discussion_r491149798", "bodyText": "Also, note that this will go away once we drop support for Scala 2.12.", "author": "ijuma", "createdAt": "2020-09-18T19:29:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NjYwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MTIzMg==", "url": "https://github.com/apache/kafka/pull/9299#discussion_r491151232", "bodyText": "forKeyValue LGTM since for is the language's keyword for foreach or map.", "author": "jsancio", "createdAt": "2020-09-18T19:32:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NjYwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2MzU5Mg==", "url": "https://github.com/apache/kafka/pull/9299#discussion_r491163592", "bodyText": "That was the motivation indeed. Great, I'll change it.", "author": "ijuma", "createdAt": "2020-09-18T20:02:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NjYwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2MTI2Mg==", "url": "https://github.com/apache/kafka/pull/9299#discussion_r492361262", "bodyText": "Checked with @hachikuji and he's fine with this change.", "author": "ijuma", "createdAt": "2020-09-21T21:39:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NjYwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAyNTg2Mw==", "url": "https://github.com/apache/kafka/pull/9299#discussion_r492025863", "bodyText": "Could we replace such asScala.forKeyValue by java Map.forEach ? We don't need to convert it to scala collection actually.", "author": "chia7712", "createdAt": "2020-09-21T13:00:25Z", "path": "core/src/main/scala/kafka/admin/ZkSecurityMigrator.scala", "diffHunk": "@@ -128,7 +129,7 @@ object ZkSecurityMigrator extends Logging {\n     // Now override any set system properties with explicitly-provided values from the config file\n     // Emit INFO logs due to camel-case property names encouraging mistakes -- help people see mistakes they make\n     info(s\"Found ${zkTlsConfigFileProps.size()} ZooKeeper client configuration properties in file $filename\")\n-    zkTlsConfigFileProps.asScala.foreach { case (key, value) =>\n+    zkTlsConfigFileProps.asScala.forKeyValue { (key, value) =>", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA3NzgxNA==", "url": "https://github.com/apache/kafka/pull/9299#discussion_r492077814", "bodyText": "See 847ff8f for an explanation why asScala still makes sense when dealing with Properties.", "author": "ijuma", "createdAt": "2020-09-21T14:12:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAyNTg2Mw=="}], "type": "inlineReview"}, {"oid": "d1d79bac587c87a6a4fe204e944ce283f5f132be", "url": "https://github.com/apache/kafka/commit/d1d79bac587c87a6a4fe204e944ce283f5f132be", "message": "MINOR: Use `Map.foreachKv` to avoid tuple allocation in Scala 2.13\n\n`foreachKv` invokes `foreachEntry` in Scala 2.13 and falls back to\n`foreach` in Scala 2.12.\n\nThis change requires a newer version of scala-collection-compat, so\nupdate it to the latest version (2.2.0).", "committedDate": "2020-09-21T14:13:50Z", "type": "commit"}, {"oid": "88711e41c0d4597bfa294a58da530b69eb012a97", "url": "https://github.com/apache/kafka/commit/88711e41c0d4597bfa294a58da530b69eb012a97", "message": "Rename `foreachKv` to `forKeyValue`", "committedDate": "2020-09-21T14:13:51Z", "type": "commit"}, {"oid": "325c20a4794e7150dba1e2a689131dd1fcedd29f", "url": "https://github.com/apache/kafka/commit/325c20a4794e7150dba1e2a689131dd1fcedd29f", "message": "Update method name in documentation", "committedDate": "2020-09-21T14:19:39Z", "type": "commit"}, {"oid": "325c20a4794e7150dba1e2a689131dd1fcedd29f", "url": "https://github.com/apache/kafka/commit/325c20a4794e7150dba1e2a689131dd1fcedd29f", "message": "Update method name in documentation", "committedDate": "2020-09-21T14:19:39Z", "type": "forcePushed"}]}