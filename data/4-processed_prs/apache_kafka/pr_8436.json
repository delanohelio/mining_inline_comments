{"pr_number": 8436, "pr_title": "KAFKA-6145: KIP-441 avoid unnecessary movement of standbys", "pr_createdAt": "2020-04-07T03:43:51Z", "pr_url": "https://github.com/apache/kafka/pull/8436", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "24983a84b67af6bd068dbd35fb51dcfc3b14e22b", "url": "https://github.com/apache/kafka/commit/24983a84b67af6bd068dbd35fb51dcfc3b14e22b", "message": "rebased", "committedDate": "2020-04-09T01:27:49Z", "type": "commit"}, {"oid": "24983a84b67af6bd068dbd35fb51dcfc3b14e22b", "url": "https://github.com/apache/kafka/commit/24983a84b67af6bd068dbd35fb51dcfc3b14e22b", "message": "rebased", "committedDate": "2020-04-09T01:27:49Z", "type": "forcePushed"}, {"oid": "bf809a7ab057bbf02a0334b3fdf87303986feac0", "url": "https://github.com/apache/kafka/commit/bf809a7ab057bbf02a0334b3fdf87303986feac0", "message": "fix test broken by rebase", "committedDate": "2020-04-09T01:32:59Z", "type": "commit"}, {"oid": "4dd64a44221628cecfb56b0e3ed413df03c9b5bb", "url": "https://github.com/apache/kafka/commit/4dd64a44221628cecfb56b0e3ed413df03c9b5bb", "message": "remove import that snuck in again >:(", "committedDate": "2020-04-09T01:34:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwNzU2Mg==", "url": "https://github.com/apache/kafka/pull/8436#discussion_r405907562", "bodyText": "Since we may now \"use up\" some standby replicas during the warmup replica assignment, we no longer want a constant N clients returned here. The number of remaining standbys to assign is now a parameter of its poll", "author": "ableegoldman", "createdAt": "2020-04-09T01:35:58Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignor.java", "diffHunk": "@@ -337,14 +342,11 @@ private int tasksPerThread(final UUID client, final List<Map<UUID, List<TaskId>>\n      * Wraps a priority queue of clients and returns the next valid candidate(s) based on the current task assignment\n      */\n     static class ValidClientsByTaskLoadQueue<UUID> {\n-        private final int numClientsPerTask;\n         private final PriorityQueue<UUID> clientsByTaskLoad;\n         private final List<Map<UUID, List<TaskId>>> allStatefulTaskAssignments;\n \n-        ValidClientsByTaskLoadQueue(final int numClientsPerTask,\n-                                      final PriorityQueue<UUID> clientsByTaskLoad,\n-                                      final List<Map<UUID, List<TaskId>>> allStatefulTaskAssignments) {\n-            this.numClientsPerTask = numClientsPerTask;", "originalCommit": "4dd64a44221628cecfb56b0e3ed413df03c9b5bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1f0a36ba38e5a79e8bc9db62a82f6f229a9dde3a", "url": "https://github.com/apache/kafka/commit/1f0a36ba38e5a79e8bc9db62a82f6f229a9dde3a", "message": "add guard", "committedDate": "2020-04-09T01:37:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwODM3Mw==", "url": "https://github.com/apache/kafka/pull/8436#discussion_r405908373", "bodyText": "The only way we can ever hit this (task had this standby but remainingStandbys is 0) is if the configured num.standby.replicas is dynamically changed. But I believe we do allow that...right?", "author": "ableegoldman", "createdAt": "2020-04-09T01:39:07Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/TaskMovement.java", "diffHunk": "@@ -102,8 +111,16 @@ public int hashCode() {\n                         sourceClientTasksIterator.remove();\n                         statefulActiveTaskAssignment.get(destination).add(task);\n                     } else {\n+                        if (clientStates.get(destination).prevStandbyTasks().contains(task)\n+                                && tasksToRemainingStandbys.get(task) > 0", "originalCommit": "1f0a36ba38e5a79e8bc9db62a82f6f229a9dde3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkxNDQyMw==", "url": "https://github.com/apache/kafka/pull/8436#discussion_r405914423", "bodyText": "Yes, we do.", "author": "vvcephei", "createdAt": "2020-04-09T02:02:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwODM3Mw=="}], "type": "inlineReview"}]}