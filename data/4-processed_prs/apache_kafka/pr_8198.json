{"pr_number": 8198, "pr_title": "MINOR: fix linking errors in javadoc", "pr_createdAt": "2020-03-01T08:11:07Z", "pr_url": "https://github.com/apache/kafka/pull/8198", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjI5NA==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r386836294", "bodyText": "avoid importing ProducerRecord explicitly", "author": "chia7712", "createdAt": "2020-03-03T07:22:53Z", "path": "clients/src/main/java/org/apache/kafka/common/ClusterResourceListener.java", "diffHunk": "@@ -26,16 +26,16 @@\n  * There will be one invocation of {@link ClusterResourceListener#onUpdate(ClusterResource)} after each metadata response.\n  * Note that the cluster id may be null when the Kafka broker version is below 0.10.1.0. If you receive a null cluster id, you can expect it to always be null unless you have a cluster with multiple broker versions which can happen if the cluster is being upgraded while the client is running.\n  * <p>\n- * {@link org.apache.kafka.clients.producer.ProducerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked after {@link org.apache.kafka.clients.producer.ProducerInterceptor#onSend(ProducerRecord)}\n- * but before {@link org.apache.kafka.clients.producer.ProducerInterceptor#onAcknowledgement(RecordMetadata, Exception)} .\n+ * {@link org.apache.kafka.clients.producer.ProducerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked after {@link org.apache.kafka.clients.producer.ProducerInterceptor#onSend(org.apache.kafka.clients.producer.ProducerRecord)}", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjM2NQ==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r386836365", "bodyText": "avoid importing ConsumerRecords explicitly", "author": "chia7712", "createdAt": "2020-03-03T07:23:05Z", "path": "clients/src/main/java/org/apache/kafka/common/ClusterResourceListener.java", "diffHunk": "@@ -26,16 +26,16 @@\n  * There will be one invocation of {@link ClusterResourceListener#onUpdate(ClusterResource)} after each metadata response.\n  * Note that the cluster id may be null when the Kafka broker version is below 0.10.1.0. If you receive a null cluster id, you can expect it to always be null unless you have a cluster with multiple broker versions which can happen if the cluster is being upgraded while the client is running.\n  * <p>\n- * {@link org.apache.kafka.clients.producer.ProducerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked after {@link org.apache.kafka.clients.producer.ProducerInterceptor#onSend(ProducerRecord)}\n- * but before {@link org.apache.kafka.clients.producer.ProducerInterceptor#onAcknowledgement(RecordMetadata, Exception)} .\n+ * {@link org.apache.kafka.clients.producer.ProducerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked after {@link org.apache.kafka.clients.producer.ProducerInterceptor#onSend(org.apache.kafka.clients.producer.ProducerRecord)}\n+ * but before {@link org.apache.kafka.clients.producer.ProducerInterceptor#onAcknowledgement(org.apache.kafka.clients.producer.RecordMetadata, Exception)} .\n  * <p>\n- * {@link org.apache.kafka.clients.consumer.ConsumerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked before {@link org.apache.kafka.clients.consumer.ConsumerInterceptor#onConsume(ConsumerRecords)}\n+ * {@link org.apache.kafka.clients.consumer.ConsumerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked before {@link org.apache.kafka.clients.consumer.ConsumerInterceptor#onConsume(org.apache.kafka.clients.consumer.ConsumerRecords)}", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzU5MA==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396033590", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Options for the {@link AdminClient#alterConsumerGroupOffsets(String, Map)} call.\n          \n          \n            \n             * Options for the {@link AdminClient#alterConsumerGroupOffsets(String, Map, AlterConsumerGroupOffsetsOptions)} call.", "author": "kkonstantine", "createdAt": "2020-03-21T22:10:54Z", "path": "clients/src/main/java/org/apache/kafka/clients/admin/AlterConsumerGroupOffsetsOptions.java", "diffHunk": "@@ -18,6 +18,8 @@\n \n import org.apache.kafka.common.annotation.InterfaceStability;\n \n+import java.util.Map;\n+\n /**\n  * Options for the {@link AdminClient#alterConsumerGroupOffsets(String, Map)} call.", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzY1NQ==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396033655", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Options for {@link Admin#electLeaders(ElectionType, Set, ElectLeadersOptions)} .\n          \n          \n            \n             * Options for {@link Admin#electLeaders(ElectionType, Set, ElectLeadersOptions)}.", "author": "kkonstantine", "createdAt": "2020-03-21T22:11:57Z", "path": "clients/src/main/java/org/apache/kafka/clients/admin/ElectLeadersOptions.java", "diffHunk": "@@ -17,10 +17,13 @@\n \n package org.apache.kafka.clients.admin;\n \n+import org.apache.kafka.common.ElectionType;\n import org.apache.kafka.common.annotation.InterfaceStability;\n \n+import java.util.Set;\n+\n /**\n- * Options for {@link Admin#electLeaders(ElectionType, Set, ElectLeadersOptions)}.\n+ * Options for {@link Admin#electLeaders(ElectionType, Set, ElectLeadersOptions)} .", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzg2NA==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396033864", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.Collection;\n          \n          \n            \n            \n          \n          \n            \n            import java.util.Collection;", "author": "kkonstantine", "createdAt": "2020-03-21T22:15:23Z", "path": "clients/src/main/java/org/apache/kafka/clients/admin/ElectPreferredLeadersOptions.java", "diffHunk": "@@ -17,8 +17,10 @@\n \n package org.apache.kafka.clients.admin;\n \n+import org.apache.kafka.common.ElectionType;\n import org.apache.kafka.common.annotation.InterfaceStability;\n import java.util.Collection;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDA5OA==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034098", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            import java.util.Map;\n          \n          \n            \n            import java.util.Map;", "author": "kkonstantine", "createdAt": "2020-03-21T22:18:42Z", "path": "clients/src/main/java/org/apache/kafka/clients/admin/OffsetSpec.java", "diffHunk": "@@ -17,6 +17,8 @@\n package org.apache.kafka.clients.admin;\n \n \n+import java.util.Map;\n+", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDI1Mg==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034252", "bodyText": "This has been fixed by: #8291\nPlease omit and rebase to get the latest changes.", "author": "kkonstantine", "createdAt": "2020-03-21T22:21:41Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/Consumer.java", "diffHunk": "@@ -249,7 +249,7 @@\n     ConsumerGroupMetadata groupMetadata();\n \n     /**\n-     * @see KafkaConsumer#enforceRebalance)\n+     * @see KafkaConsumer#enforceRebalance()", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDQ0Ng==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034446", "bodyText": "rearranging the imports to match the style might make sense here, given that there are only two import statements.", "author": "kkonstantine", "createdAt": "2020-03-21T22:24:16Z", "path": "clients/src/main/java/org/apache/kafka/common/ElectionType.java", "diffHunk": "@@ -18,10 +18,11 @@\n package org.apache.kafka.common;\n \n import java.util.Arrays;\n+import java.util.Set;", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDQ2Mw==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034463", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.Arrays;\n          \n          \n            \n            import java.util.Set;\n          \n          \n            \n            import org.apache.kafka.common.annotation.InterfaceStability;\n          \n          \n            \n            import org.apache.kafka.common.annotation.InterfaceStability;\n          \n          \n            \n            \n          \n          \n            \n            import java.util.Arrays;\n          \n          \n            \n            import java.util.Set;", "author": "kkonstantine", "createdAt": "2020-03-21T22:24:33Z", "path": "clients/src/main/java/org/apache/kafka/common/ElectionType.java", "diffHunk": "@@ -18,10 +18,11 @@\n package org.apache.kafka.common;\n \n import java.util.Arrays;\n+import java.util.Set;\n import org.apache.kafka.common.annotation.InterfaceStability;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA1NjMxNQ==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396056315", "bodyText": "Is there a rule of imports layout? I observe the following layout in project.\nimport org.apache.kafka.common.KafkaFuture;\nimport org.apache.kafka.common.Node;\nimport org.apache.kafka.common.acl.AclOperation;\nimport org.apache.kafka.common.annotation.InterfaceStability;\n\nimport java.util.Collection;\nimport java.util.Set;\nimport java.util.Set;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.atomic.AtomicInteger;\nimport org.apache.kafka.clients.ApiVersions;\nimport org.apache.kafka.clients.producer.Callback;\nimport org.apache.kafka.common.utils.ProducerIdAndEpoch;\nimport org.apache.kafka.common.Cluster;", "author": "chia7712", "createdAt": "2020-03-22T05:31:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDQ2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDU4MQ==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034581", "bodyText": "This has been fixed by: #8291\nPlease omit and rebase to get the latest changes.", "author": "kkonstantine", "createdAt": "2020-03-21T22:26:11Z", "path": "connect/api/src/main/java/org/apache/kafka/connect/source/SourceTask.java", "diffHunk": "@@ -93,8 +93,8 @@ public void commit() throws InterruptedException {\n      * also called when a record is filtered by a transformation, and thus will never be ACK'd by a broker.\n      * </p>\n      * <p>\n-     * This is an alias for {@link commitRecord(SourceRecord, RecordMetadata)} for backwards compatibility. The default\n-     * implementation of {@link commitRecord(SourceRecord, RecordMetadata)} just calls this method. It is not necessary\n+     * This is an alias for {@link #commitRecord(SourceRecord, RecordMetadata)} for backwards compatibility. The default", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDU4OQ==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034589", "bodyText": "This has been fixed by: #8291\nPlease omit and rebase to get the latest changes.\nBut see below on line 126 for a misformatting that needs to be fixed:\n@{link commitRecord(SourceRecord)} needs to be {@link #commitRecord(SourceRecord)}", "author": "kkonstantine", "createdAt": "2020-03-21T22:26:16Z", "path": "connect/api/src/main/java/org/apache/kafka/connect/source/SourceTask.java", "diffHunk": "@@ -105,7 +105,7 @@ public void commit() throws InterruptedException {\n      *\n      * @param record {@link SourceRecord} that was successfully sent via the producer or filtered by a transformation\n      * @throws InterruptedException\n-     * @see commitRecord(SourceRecord, RecordMetadata)\n+     * @see #commitRecord(SourceRecord, RecordMetadata)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDk1Nw==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034957", "bodyText": "This has been fixed by: #8314\nPlease omit and rebase to get the latest changes.", "author": "kkonstantine", "createdAt": "2020-03-21T22:32:23Z", "path": "streams/src/main/java/org/apache/kafka/streams/StreamsMetrics.java", "diffHunk": "@@ -58,9 +57,9 @@\n      * @param recordingLevel     the recording level (e.g., INFO or DEBUG) for this sensor.\n      * @param tags               additional tags of the sensor\n      * @return The added sensor.\n-     * @see #addRateTotalSensor(String, String, String, RecordingLevel, String...)\n+     * @see #addRateTotalSensor(String, String, String, Sensor.RecordingLevel, String...)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDk2Mg==", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034962", "bodyText": "This has been fixed by: #8314\nPlease omit and rebase to get the latest changes.\nSame for the rest of the issues in this file probably", "author": "kkonstantine", "createdAt": "2020-03-21T22:32:28Z", "path": "streams/src/main/java/org/apache/kafka/streams/StreamsMetrics.java", "diffHunk": "@@ -58,9 +57,9 @@\n      * @param recordingLevel     the recording level (e.g., INFO or DEBUG) for this sensor.\n      * @param tags               additional tags of the sensor\n      * @return The added sensor.\n-     * @see #addRateTotalSensor(String, String, String, RecordingLevel, String...)\n+     * @see #addRateTotalSensor(String, String, String, Sensor.RecordingLevel, String...)\n      * @see #removeSensor(Sensor)\n-     * @see #addSensor(String, RecordingLevel, Sensor...)\n+     * @see #addSensor(String, Sensor.RecordingLevel, Sensor...)", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "525bfdfea3c95bc9a268ef3a1fe746478fd90bfc", "url": "https://github.com/apache/kafka/commit/525bfdfea3c95bc9a268ef3a1fe746478fd90bfc", "message": "Minor: fix javadoc error", "committedDate": "2020-03-22T05:38:48Z", "type": "commit"}, {"oid": "525bfdfea3c95bc9a268ef3a1fe746478fd90bfc", "url": "https://github.com/apache/kafka/commit/525bfdfea3c95bc9a268ef3a1fe746478fd90bfc", "message": "Minor: fix javadoc error", "committedDate": "2020-03-22T05:38:48Z", "type": "forcePushed"}]}