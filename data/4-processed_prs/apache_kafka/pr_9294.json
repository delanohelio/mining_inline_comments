{"pr_number": 9294, "pr_title": "MINOR: Fix now that kafka.apache.org resolves to 3 IP addresses", "pr_createdAt": "2020-09-16T21:14:36Z", "pr_url": "https://github.com/apache/kafka/pull/9294", "timeline": [{"oid": "cd49288771c3ddbdd44eb6824a6ebac52775c034", "url": "https://github.com/apache/kafka/commit/cd49288771c3ddbdd44eb6824a6ebac52775c034", "message": "Fix now that kafka.apache.org resolves to 3 IP addresses", "committedDate": "2020-09-16T21:11:05Z", "type": "commit"}, {"oid": "ac97f2b37836493aa398d15f0be72ed1f244bbbc", "url": "https://github.com/apache/kafka/commit/ac97f2b37836493aa398d15f0be72ed1f244bbbc", "message": "Changed to assert the number of addresses is greater than 1.", "committedDate": "2020-09-17T15:37:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxNzI5OQ==", "url": "https://github.com/apache/kafka/pull/9294#discussion_r490417299", "bodyText": "Comment here and below refer to 2 IP addresses still.", "author": "mumrah", "createdAt": "2020-09-17T16:58:53Z", "path": "clients/src/test/java/org/apache/kafka/clients/ClientUtilsTest.java", "diffHunk": "@@ -102,20 +102,20 @@ public void testResolveUnknownHostException() throws UnknownHostException {\n \n     @Test\n     public void testResolveDnsLookup() throws UnknownHostException {\n-        // Note that kafka.apache.org resolves to 2 IP addresses\n+        // Note that kafka.apache.org resolves to at least 2 IP addresses", "originalCommit": "ac97f2b37836493aa398d15f0be72ed1f244bbbc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTkzMw==", "url": "https://github.com/apache/kafka/pull/9294#discussion_r490461933", "bodyText": "Are you saying to change it back? I thought it was fair to say \"at least 2\" to reflect we are asserting greater than 1.", "author": "jolshan", "createdAt": "2020-09-17T18:15:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxNzI5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxNzY4NQ==", "url": "https://github.com/apache/kafka/pull/9294#discussion_r490417685", "bodyText": "Hmm, so previously (and also with this change) we are assuming that we will get different resolved IPs for each connection to apache.kafka.org? This seems to rely on round-robbin DNS resolution that we can't really control. I think these assertions will always be prone to failure unless we can control the DNS server like @dajac suggested.\nI guess we can commit this to unblock the tests, but we should definitely prioritize a better fix.", "author": "mumrah", "createdAt": "2020-09-17T16:59:33Z", "path": "clients/src/test/java/org/apache/kafka/clients/ClusterConnectionStatesTest.java", "diffHunk": "@@ -273,22 +273,21 @@ public void testMultipleIPsWithDefault() throws UnknownHostException {\n \n     @Test\n     public void testMultipleIPsWithUseAll() throws UnknownHostException {\n-        assertEquals(2, ClientUtils.resolve(hostTwoIps, ClientDnsLookup.USE_ALL_DNS_IPS).size());\n+        assertTrue(ClientUtils.resolve(hostTwoIps, ClientDnsLookup.USE_ALL_DNS_IPS).size() > 1);\n \n         connectionStates.connecting(nodeId1, time.milliseconds(), hostTwoIps, ClientDnsLookup.USE_ALL_DNS_IPS);\n         InetAddress addr1 = connectionStates.currentAddress(nodeId1);\n         connectionStates.connecting(nodeId1, time.milliseconds(), hostTwoIps, ClientDnsLookup.USE_ALL_DNS_IPS);\n         InetAddress addr2 = connectionStates.currentAddress(nodeId1);\n         assertNotSame(addr1, addr2);\n-\n         connectionStates.connecting(nodeId1, time.milliseconds(), hostTwoIps, ClientDnsLookup.USE_ALL_DNS_IPS);\n         InetAddress addr3 = connectionStates.currentAddress(nodeId1);\n-        assertSame(addr1, addr3);", "originalCommit": "ac97f2b37836493aa398d15f0be72ed1f244bbbc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMzg2MA==", "url": "https://github.com/apache/kafka/pull/9294#discussion_r490423860", "bodyText": "Yeah. I was wondering if we should even keep this test in the current form, and I'm hoping that a DNS we can control would resolve this issue.", "author": "jolshan", "createdAt": "2020-09-17T17:09:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxNzY4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY5OTUxNw==", "url": "https://github.com/apache/kafka/pull/9294#discussion_r490699517", "bodyText": "The test is verifying the round robin that our code does, not the DNS server. We should ensure we still have that coverage in the meantime.", "author": "ijuma", "createdAt": "2020-09-18T04:46:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxNzY4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg2MTcxMw==", "url": "https://github.com/apache/kafka/pull/9294#discussion_r490861713", "bodyText": "Thanks for clarifying, @ijuma. Seems like we could verify the round-robin behavior without relying on specific number of IPs.", "author": "mumrah", "createdAt": "2020-09-18T10:45:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxNzY4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAzNzI4NQ==", "url": "https://github.com/apache/kafka/pull/9294#discussion_r491037285", "bodyText": "I see. I changed it to show that the first three are different but I didn't include the check that it loops back to the first IP since that part seems the most fragile.", "author": "jolshan", "createdAt": "2020-09-18T15:46:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxNzY4NQ=="}], "type": "inlineReview"}]}