{"pr_number": 8524, "pr_title": "KAFKA-9866: Avoid election for topics where preferred leader is not in ISR", "pr_createdAt": "2020-04-21T08:48:53Z", "pr_url": "https://github.com/apache/kafka/pull/8524", "timeline": [{"oid": "44eea04f4a7cf2a2a1a7016bcb23da0511d6cc38", "url": "https://github.com/apache/kafka/commit/44eea04f4a7cf2a2a1a7016bcb23da0511d6cc38", "message": "Avoid starting election for topics where preferred leader is not in sync.", "committedDate": "2020-04-21T08:47:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxNDAyNg==", "url": "https://github.com/apache/kafka/pull/8524#discussion_r412014026", "bodyText": "I think we should do this check last. We also want to use an option to avoid any potential NPEs. e.g:\ncontrollerContext.partitionLeadershipInfo.get(partition).forall(...)", "author": "stanislavkozlovski", "createdAt": "2020-04-21T09:12:10Z", "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -1066,6 +1066,7 @@ class KafkaController(val config: KafkaConfig,\n         // do this check only if the broker is live and there are no partitions being reassigned currently\n         // and preferred replica election is not in progress\n         val candidatePartitions = topicsNotInPreferredReplica.keys.filter(tp => controllerContext.isReplicaOnline(leaderBroker, tp) &&\n+          controllerContext.partitionLeadershipInfo(tp).leaderAndIsr.isr.contains(leaderBroker) &&", "originalCommit": "44eea04f4a7cf2a2a1a7016bcb23da0511d6cc38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg1NzAyNA==", "url": "https://github.com/apache/kafka/pull/8524#discussion_r412857024", "bodyText": "Done.", "author": "leonardge", "createdAt": "2020-04-22T10:18:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxNDAyNg=="}], "type": "inlineReview"}, {"oid": "29632f76ed34c75f80c175101c17155e98f24f0a", "url": "https://github.com/apache/kafka/commit/29632f76ed34c75f80c175101c17155e98f24f0a", "message": "Refactored the code and fixed bug in the integration test.", "committedDate": "2020-04-22T10:13:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzNjQ5NQ==", "url": "https://github.com/apache/kafka/pull/8524#discussion_r413436495", "bodyText": "The preferred leader election also checks for live brokers. So, perhaps we could just call PartitionLeaderElectionAlgorithms.preferredReplicaPartitionLeaderElection() here.", "author": "junrao", "createdAt": "2020-04-23T01:08:55Z", "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -1068,7 +1068,9 @@ class KafkaController(val config: KafkaConfig,\n         val candidatePartitions = topicsNotInPreferredReplica.keys.filter(tp => controllerContext.isReplicaOnline(leaderBroker, tp) &&\n           controllerContext.partitionsBeingReassigned.isEmpty &&\n           !topicDeletionManager.isTopicQueuedUpForDeletion(tp.topic) &&\n-          controllerContext.allTopics.contains(tp.topic))\n+          controllerContext.allTopics.contains(tp.topic) &&\n+          controllerContext.partitionLeadershipInfo.get(tp).forall(l => l.leaderAndIsr.isr.contains(leaderBroker))", "originalCommit": "29632f76ed34c75f80c175101c17155e98f24f0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxMjIyMw==", "url": "https://github.com/apache/kafka/pull/8524#discussion_r414012223", "bodyText": "Done!", "author": "leonardge", "createdAt": "2020-04-23T18:05:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzNjQ5NQ=="}], "type": "inlineReview"}, {"oid": "172960f972e82b10158d86fb4c02a7f9317ac43c", "url": "https://github.com/apache/kafka/commit/172960f972e82b10158d86fb4c02a7f9317ac43c", "message": "Refactored according to comments.", "committedDate": "2020-04-23T09:03:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA0MjIzOA==", "url": "https://github.com/apache/kafka/pull/8524#discussion_r414042238", "bodyText": "In Election.leaderForPreferredReplica(), liveReplicas is computed as the following. So, we probably want to be consistent here.\nval liveReplicas = assignment.filter(replica => controllerContext.isReplicaOnline(replica, partition))", "author": "junrao", "createdAt": "2020-04-23T18:51:40Z", "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -1068,7 +1068,12 @@ class KafkaController(val config: KafkaConfig,\n         val candidatePartitions = topicsNotInPreferredReplica.keys.filter(tp => controllerContext.isReplicaOnline(leaderBroker, tp) &&\n           controllerContext.partitionsBeingReassigned.isEmpty &&\n           !topicDeletionManager.isTopicQueuedUpForDeletion(tp.topic) &&\n-          controllerContext.allTopics.contains(tp.topic))\n+          controllerContext.allTopics.contains(tp.topic) &&\n+          PartitionLeaderElectionAlgorithms.preferredReplicaPartitionLeaderElection(\n+            controllerContext.partitionReplicaAssignment(tp),\n+            controllerContext.partitionLeadershipInfo(tp).leaderAndIsr.isr,\n+            controllerContext.liveBrokerIds.toSet).nonEmpty", "originalCommit": "172960f972e82b10158d86fb4c02a7f9317ac43c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2NzA5MA==", "url": "https://github.com/apache/kafka/pull/8524#discussion_r414467090", "bodyText": "Done! And after using the mentioned implementation the code block gets cluttered so I extracted it into a helper method.", "author": "leonardge", "createdAt": "2020-04-24T10:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA0MjIzOA=="}], "type": "inlineReview"}, {"oid": "24c6d42b9ea69fe9bb2a40649bae15e0f74542db", "url": "https://github.com/apache/kafka/commit/24c6d42b9ea69fe9bb2a40649bae15e0f74542db", "message": "Kept the code to be consistent.", "committedDate": "2020-04-24T09:08:02Z", "type": "commit"}, {"oid": "dc67b99c2d2d45a59ede67da186d1890c7b7c1ce", "url": "https://github.com/apache/kafka/commit/dc67b99c2d2d45a59ede67da186d1890c7b7c1ce", "message": "Reverted style change.", "committedDate": "2020-04-24T09:09:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc0MDAzNA==", "url": "https://github.com/apache/kafka/pull/8524#discussion_r414740034", "bodyText": "Perhaps a more accurate name is canPreferredReplicaBeLeader()?", "author": "junrao", "createdAt": "2020-04-24T17:24:17Z", "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -1068,12 +1068,23 @@ class KafkaController(val config: KafkaConfig,\n         val candidatePartitions = topicsNotInPreferredReplica.keys.filter(tp => controllerContext.isReplicaOnline(leaderBroker, tp) &&\n           controllerContext.partitionsBeingReassigned.isEmpty &&\n           !topicDeletionManager.isTopicQueuedUpForDeletion(tp.topic) &&\n-          controllerContext.allTopics.contains(tp.topic))\n+          controllerContext.allTopics.contains(tp.topic) &&\n+          isPreferredLeaderInSync(tp)\n+       )\n         onReplicaElection(candidatePartitions.toSet, ElectionType.PREFERRED, AutoTriggered)\n       }\n     }\n   }\n \n+  private def isPreferredLeaderInSync(tp: TopicPartition): Boolean = {", "originalCommit": "dc67b99c2d2d45a59ede67da186d1890c7b7c1ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NTg3NA==", "url": "https://github.com/apache/kafka/pull/8524#discussion_r415085874", "bodyText": "Done!", "author": "leonardge", "createdAt": "2020-04-25T15:34:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc0MDAzNA=="}], "type": "inlineReview"}, {"oid": "2fa3ceed0322b90306393e0dffc1fdbdba779613", "url": "https://github.com/apache/kafka/commit/2fa3ceed0322b90306393e0dffc1fdbdba779613", "message": "Renamed helper function after review.", "committedDate": "2020-04-25T15:25:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjE1MTYwNQ==", "url": "https://github.com/apache/kafka/pull/8524#discussion_r416151605", "bodyText": "We also do controllerContext.isReplicaOnline(leaderBroker, tp) in the caller. Do we also need it here?", "author": "ijuma", "createdAt": "2020-04-27T21:11:09Z", "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -1068,12 +1068,23 @@ class KafkaController(val config: KafkaConfig,\n         val candidatePartitions = topicsNotInPreferredReplica.keys.filter(tp => controllerContext.isReplicaOnline(leaderBroker, tp) &&\n           controllerContext.partitionsBeingReassigned.isEmpty &&\n           !topicDeletionManager.isTopicQueuedUpForDeletion(tp.topic) &&\n-          controllerContext.allTopics.contains(tp.topic))\n+          controllerContext.allTopics.contains(tp.topic) &&\n+          canPreferredReplicaBeLeader(tp)\n+       )\n         onReplicaElection(candidatePartitions.toSet, ElectionType.PREFERRED, AutoTriggered)\n       }\n     }\n   }\n \n+  private def canPreferredReplicaBeLeader(tp: TopicPartition): Boolean = {\n+    val assignment = controllerContext.partitionReplicaAssignment(tp)\n+    val liveReplicas = assignment.filter(replica => controllerContext.isReplicaOnline(replica, tp))", "originalCommit": "2fa3ceed0322b90306393e0dffc1fdbdba779613", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjE2NDg2Mw==", "url": "https://github.com/apache/kafka/pull/8524#discussion_r416164863", "bodyText": "Good point. We can get rid of the isReplicaOnline() check in the caller. @leonardge : Could you summit a followup minor PR?", "author": "junrao", "createdAt": "2020-04-27T21:34:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjE1MTYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjE4NjgzOA==", "url": "https://github.com/apache/kafka/pull/8524#discussion_r416186838", "bodyText": "Sure thing!", "author": "leonardge", "createdAt": "2020-04-27T22:16:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjE1MTYwNQ=="}], "type": "inlineReview"}]}