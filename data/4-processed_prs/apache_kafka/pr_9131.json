{"pr_number": 9131, "pr_title": "KAFKA-10367: Allow running the Streams demo app with a config file", "pr_createdAt": "2020-08-06T09:35:01Z", "pr_url": "https://github.com/apache/kafka/pull/9131", "timeline": [{"oid": "7b01752b1e3bedfc22c1e274c83dfe487d58ad98", "url": "https://github.com/apache/kafka/commit/7b01752b1e3bedfc22c1e274c83dfe487d58ad98", "message": "KAFKA-10367: Allow running the Streams demo app with a config file\n\nUpdate the 3 WordCount demos to accept a configuration file.", "committedDate": "2020-08-06T09:31:17Z", "type": "commit"}, {"oid": "a2a4683b2656802ef56e083275cf42e21c289939", "url": "https://github.com/apache/kafka/commit/a2a4683b2656802ef56e083275cf42e21c289939", "message": "Fix Checkstyle/Spotbugs issues", "committedDate": "2020-08-06T17:26:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NTEzNw==", "url": "https://github.com/apache/kafka/pull/9131#discussion_r466595137", "bodyText": "For args.length > 1 should we log a warning that some parameters are ignored and still use the first parameter as file name? -- Just ignoring all arguments silently (if there is more than one) seems not ideal?", "author": "mjsax", "createdAt": "2020-08-06T18:08:33Z", "path": "streams/examples/src/main/java/org/apache/kafka/streams/examples/wordcount/WordCountDemo.java", "diffHunk": "@@ -47,18 +49,23 @@\n     public static final String INPUT_TOPIC = \"streams-plaintext-input\";\n     public static final String OUTPUT_TOPIC = \"streams-wordcount-output\";\n \n-    static Properties getStreamsConfig() {\n+    static Properties getStreamsConfig(final String[] args) throws IOException {\n         final Properties props = new Properties();\n-        props.put(StreamsConfig.APPLICATION_ID_CONFIG, \"streams-wordcount\");\n-        props.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9092\");\n-        props.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n-        props.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n-        props.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n+        if (args != null && args.length == 1) {", "originalCommit": "a2a4683b2656802ef56e083275cf42e21c289939", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NTU3Mw==", "url": "https://github.com/apache/kafka/pull/9131#discussion_r466595573", "bodyText": "Nit: We can just pass in null ?", "author": "mjsax", "createdAt": "2020-08-06T18:09:18Z", "path": "streams/examples/src/test/java/org/apache/kafka/streams/examples/wordcount/WordCountDemoTest.java", "diffHunk": "@@ -47,11 +48,11 @@\n     private TestOutputTopic<String, Long> outputTopic;\n \n     @Before\n-    public void setup() {\n+    public void setup() throws IOException {\n         final StreamsBuilder builder = new StreamsBuilder();\n         //Create Actual Stream Processing pipeline\n         WordCountDemo.createWordCountStream(builder);\n-        testDriver = new TopologyTestDriver(builder.build(), WordCountDemo.getStreamsConfig());\n+        testDriver = new TopologyTestDriver(builder.build(), WordCountDemo.getStreamsConfig(new String[] {}));", "originalCommit": "a2a4683b2656802ef56e083275cf42e21c289939", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NjA1NA==", "url": "https://github.com/apache/kafka/pull/9131#discussion_r466596054", "bodyText": "I think this must be final, too", "author": "mjsax", "createdAt": "2020-08-06T18:10:13Z", "path": "streams/examples/src/main/java/org/apache/kafka/streams/examples/wordcount/WordCountDemo.java", "diffHunk": "@@ -47,18 +49,23 @@\n     public static final String INPUT_TOPIC = \"streams-plaintext-input\";\n     public static final String OUTPUT_TOPIC = \"streams-wordcount-output\";\n \n-    static Properties getStreamsConfig() {\n+    static Properties getStreamsConfig(final String[] args) throws IOException {\n         final Properties props = new Properties();\n-        props.put(StreamsConfig.APPLICATION_ID_CONFIG, \"streams-wordcount\");\n-        props.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9092\");\n-        props.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n-        props.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n-        props.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass().getName());\n+        if (args != null && args.length == 1) {\n+            try (FileInputStream fis = new FileInputStream(args[0])) {", "originalCommit": "a2a4683b2656802ef56e083275cf42e21c289939", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NjM3Mw==", "url": "https://github.com/apache/kafka/pull/9131#discussion_r466596373", "bodyText": "Missing try block to close the FileInputStream properly", "author": "mjsax", "createdAt": "2020-08-06T18:10:45Z", "path": "streams/examples/src/main/java/org/apache/kafka/streams/examples/wordcount/WordCountProcessorDemo.java", "diffHunk": "@@ -101,16 +103,20 @@ public void close() {}\n         }\n     }\n \n-    public static void main(final String[] args) {\n+    public static void main(final String[] args) throws IOException {\n         final Properties props = new Properties();\n-        props.put(StreamsConfig.APPLICATION_ID_CONFIG, \"streams-wordcount-processor\");\n-        props.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9092\");\n-        props.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n-        props.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass());\n-        props.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass());\n+        if (args != null && args.length == 1) {\n+            props.load(new FileInputStream(args[0]));", "originalCommit": "a2a4683b2656802ef56e083275cf42e21c289939", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NjQyNw==", "url": "https://github.com/apache/kafka/pull/9131#discussion_r466596427", "bodyText": "as above", "author": "mjsax", "createdAt": "2020-08-06T18:10:51Z", "path": "streams/examples/src/main/java/org/apache/kafka/streams/examples/wordcount/WordCountTransformerDemo.java", "diffHunk": "@@ -120,16 +122,19 @@ public void close() {}\n         }\n     }\n \n-    public static void main(final String[] args) {\n+    public static void main(final String[] args) throws IOException {\n         final Properties props = new Properties();\n-        props.put(StreamsConfig.APPLICATION_ID_CONFIG, \"streams-wordcount-transformer\");\n-        props.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9092\");\n-        props.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n-        props.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.String().getClass());\n-        props.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.String().getClass());\n+        if (args != null && args.length == 1) {\n+            props.load(new FileInputStream(args[0]));", "originalCommit": "a2a4683b2656802ef56e083275cf42e21c289939", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "dd4da0b5bcc19b5be29db8df164887bc72dd8558", "url": "https://github.com/apache/kafka/commit/dd4da0b5bcc19b5be29db8df164887bc72dd8558", "message": "Address comments", "committedDate": "2020-08-08T07:19:57Z", "type": "commit"}, {"oid": "dd4da0b5bcc19b5be29db8df164887bc72dd8558", "url": "https://github.com/apache/kafka/commit/dd4da0b5bcc19b5be29db8df164887bc72dd8558", "message": "Address comments", "committedDate": "2020-08-08T07:19:57Z", "type": "forcePushed"}, {"oid": "2a581eae02c607d8694b21d5e57c372db5a7532e", "url": "https://github.com/apache/kafka/commit/2a581eae02c607d8694b21d5e57c372db5a7532e", "message": "reorder imports", "committedDate": "2020-08-18T20:49:42Z", "type": "commit"}]}