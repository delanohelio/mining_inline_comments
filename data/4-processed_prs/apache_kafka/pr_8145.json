{"pr_number": 8145, "pr_title": "KAFKA-9581: Remove rebalance exception withholding", "pr_createdAt": "2020-02-21T00:58:30Z", "pr_url": "https://github.com/apache/kafka/pull/8145", "timeline": [{"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382667629", "bodyText": "Do we still need this here? When we call unsubscribe later, it'll invoke:\n            if (generation() != Generation.NO_GENERATION) {\n                e = invokePartitionsRevoked(droppedPartitions);\n            } else {\n                e = invokePartitionsLost(droppedPartitions);\n            }\n\nIt seems like it might be better to just let the consumer manage the task lifecycle, since we may not have lost all the tasks.\nWDYT about removing this line and just setting the needRebalance flag?", "author": "vvcephei", "createdAt": "2020-02-21T16:08:18Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcxNjE2MQ==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382716161", "bodyText": "Make sense to me, either way we should be able to hit handleLostAll, just one question would be, could we guarantee that the tasks are always matching the assigned partitions? If consumer doesn't own any partition but we still have tasks not cleaned up, this could block us from triggering the callback.", "author": "abbccdda", "createdAt": "2020-02-21T17:42:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcyNDE2MQ==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382724161", "bodyText": "I'm not 100% sure, but I'd be surprised if we could ever have a task for a partition we don't have assigned. If you're concerned about it, we can just disregard this topic for now.", "author": "vvcephei", "createdAt": "2020-02-21T18:00:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczODY5MQ==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382738691", "bodyText": "@vvcephei @abbccdda there happen to have a discussion that validates this :) https://github.com/apache/kafka/pull/8087/files#r382735615", "author": "guozhangwang", "createdAt": "2020-02-21T18:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2NzczOQ==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382767739", "bodyText": "I agree we should remove the direct handleLostAll call here and leave it to enforceRebalance to appropriately handle the TaskMigratedException scenario", "author": "ableegoldman", "createdAt": "2020-02-21T19:35:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2ODAyNA==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382768024", "bodyText": "IMO we should never call the handleXXX methods from outside the rebalance callbacks", "author": "ableegoldman", "createdAt": "2020-02-21T19:36:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MjU3Nw==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382782577", "bodyText": "Actually, due to a race condition with the heartbeat thread it seems we are not safe to assume unsubscribe will invoke onPartitionsLost in which case we would end up throwing TaskMigratedException due to invoking onPartitionsRevoked. I think we should fix this more soundly in trunk at the consumer level, but for 2.5 the best way/only way to handle it from Streams is to catch this exception and then invoke handleLostAll directly from the Streamthread. See discussion here", "author": "ableegoldman", "createdAt": "2020-02-21T20:08:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2OTI3Ng==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382669276", "bodyText": "Side remark: It's really not great to catch Throwable and reinterpret it, since it encompasses both Error and Exception. I.e., We might catch an OutOfMemoryError and wrap it as a TaskMigratedException, which would obviously be bad.\nWhat do you think about changing these on the side to just catch RuntimeException or Exception?", "author": "vvcephei", "createdAt": "2020-02-21T16:11:17Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -71,12 +72,7 @@ public void onPartitionsRevoked(final Collection<TopicPartition> partitions) {\n             try {\n                 taskManager.handleRevocation(partitions);\n             } catch (final Throwable t) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcxMzIzNA==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382713234", "bodyText": "That sounds good", "author": "abbccdda", "createdAt": "2020-02-21T17:35:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2OTI3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTUzNQ==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382739535", "bodyText": "Actually I think we should not interpret everything as TaskMigrated --> if it is due to a recoverable fenced issue e.g. the thrown exception would already be a TaskMigratedException. So I think we should not capture any here instead.", "author": "guozhangwang", "createdAt": "2020-02-21T18:33:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2OTI3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc0NzYxNQ==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382747615", "bodyText": "I think handleRevocation cannot guarantee to catch all exceptions as TaskMigrated correct?", "author": "abbccdda", "createdAt": "2020-02-21T18:51:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2OTI3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2NjI0NA==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382766244", "bodyText": "I think Guozhang's point is that handleRevocation might throw other exceptions (eg IllegalStateException) which we should not convert to TaskMigratedException because they are fatal while TaskMigrated is recoverable", "author": "ableegoldman", "createdAt": "2020-02-21T19:32:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2OTI3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTg5NQ==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382739895", "bodyText": "Why not trigger rebalance immediately but defer it to the next iteration? Is it to make sure we capture any exceptions from the enforceRebalance? I thought this function should never throw any new exception since we already close all tasks as lost.", "author": "guozhangwang", "createdAt": "2020-02-21T18:34:44Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();\n-                enforceRebalance();\n+                needRebalance = true;", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc0MDYyMA==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382740620", "bodyText": "Also cc @ableegoldman who's working on the new consumer API to replace enforceRebalance.", "author": "guozhangwang", "createdAt": "2020-02-21T18:36:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc0NDY5NQ==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382744695", "bodyText": "John and I were discussing whether to remove the call to handleLostAll here :)", "author": "abbccdda", "createdAt": "2020-02-21T18:45:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2ODQ2Mw==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382768463", "bodyText": "Also +1 on this -- just call enforceRebalance directly here (and remove the handleLostAll first call handleLostAll)", "author": "ableegoldman", "createdAt": "2020-02-21T19:37:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3MjYyNQ==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382772625", "bodyText": "Actually do we even need the needRebalance flag? For version probing we just call enforceRebalance directly, and for TaskMigratedException it seems we should do the same. Maybe at some point in the future we will need to introduce it again, but for now it seems like we can get away with no rebalanceException AND no needRebalance flag", "author": "ableegoldman", "createdAt": "2020-02-21T19:46:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTg5NQ=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg2OTI4Ng==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382869286", "bodyText": "Hmm.. do we want to capture all Exceptions as TaskMigratedException? I actually think it's okay to not capture anything here since only StreamsException or TaskMigratedException would be thrown here.", "author": "guozhangwang", "createdAt": "2020-02-22T00:59:45Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -97,16 +91,10 @@ public void onPartitionsLost(final Collection<TopicPartition> partitions) {\n         try {\n             // close all active tasks as lost but don't try to commit offsets as we no longer own them\n             taskManager.handleLostAll();\n-        } catch (final Throwable t) {\n-            log.error(\n-                \"Error caught during partitions lost, \" +\n-                    \"will abort the current process and re-throw at the end of rebalance: \",\n-                t\n-            );\n-            streamThread.setRebalanceException(t);\n+        } catch (final Exception e) {", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MzQ1Mw==", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382883453", "bodyText": "Sounds good", "author": "abbccdda", "createdAt": "2020-02-22T03:53:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg2OTI4Ng=="}], "type": "inlineReview"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "f1cb2999ddc13b30430e354aebfde7d869d125f9", "url": "https://github.com/apache/kafka/commit/f1cb2999ddc13b30430e354aebfde7d869d125f9", "message": "remove rebalance exception withholding", "committedDate": "2020-02-22T19:03:20Z", "type": "commit"}, {"oid": "9981b04f2a1befb44bb938276eb06f91ef95da8a", "url": "https://github.com/apache/kafka/commit/9981b04f2a1befb44bb938276eb06f91ef95da8a", "message": "Wrap as task migrated exception", "committedDate": "2020-02-22T19:03:21Z", "type": "commit"}, {"oid": "ef2b264e6a249750238e6494e4dcbcc9dc97fabe", "url": "https://github.com/apache/kafka/commit/ef2b264e6a249750238e6494e4dcbcc9dc97fabe", "message": "address John comment", "committedDate": "2020-02-22T19:03:21Z", "type": "commit"}, {"oid": "24b8945259d2b1dbd5badf8bea9721e8d2e85008", "url": "https://github.com/apache/kafka/commit/24b8945259d2b1dbd5badf8bea9721e8d2e85008", "message": "address Guozhang's comment", "committedDate": "2020-02-22T19:03:21Z", "type": "commit"}, {"oid": "793bf7495e478eb8786b5c371aa576e18181c439", "url": "https://github.com/apache/kafka/commit/793bf7495e478eb8786b5c371aa576e18181c439", "message": "unit test", "committedDate": "2020-02-22T19:03:21Z", "type": "commit"}, {"oid": null, "url": null, "message": null, "committedDate": null, "type": "forcePushed"}, {"oid": "aaf6f131b49adff9d8faa1c37f993dd13a03d50d", "url": "https://github.com/apache/kafka/commit/aaf6f131b49adff9d8faa1c37f993dd13a03d50d", "message": "no catch for partition lost", "committedDate": "2020-02-22T23:37:06Z", "type": "commit"}, {"oid": "aaf6f131b49adff9d8faa1c37f993dd13a03d50d", "url": "https://github.com/apache/kafka/commit/aaf6f131b49adff9d8faa1c37f993dd13a03d50d", "message": "no catch for partition lost", "committedDate": "2020-02-22T23:37:06Z", "type": "forcePushed"}]}