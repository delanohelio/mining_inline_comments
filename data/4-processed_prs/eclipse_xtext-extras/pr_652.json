{"pr_number": 652, "pr_title": "Cleanup XFunctionTypeRefs", "pr_createdAt": "2020-10-12T08:30:48Z", "pr_url": "https://github.com/eclipse/xtext-extras/pull/652", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE0NzAwOA==", "url": "https://github.com/eclipse/xtext-extras/pull/652#discussion_r503147008", "bodyText": "I'm not sure that converting this to a URI and subsequently calling toString again is a good tradeoff.\nYou may want to replace the literal \"java:/Objects/\" by a concatenation from URIHelperConstants, though.\nSince buildURI is only used from within this class, it could also be an option to overhaul the flow and do something based on Class.forName instead or even keep an immutable list of the 2x6 allowed combinations such that we can return the URI in constant time without any string / URI manipulation.", "author": "szarnekow", "createdAt": "2020-10-12T09:04:11Z", "path": "org.eclipse.xtext.xbase/src/org/eclipse/xtext/xtype/util/XFunctionTypeRefs.java", "diffHunk": "@@ -19,25 +19,29 @@\n import org.eclipse.xtext.common.types.JvmVoid;\n import org.eclipse.xtext.common.types.TypesFactory;\n import org.eclipse.xtext.common.types.access.impl.ClassURIHelper;\n+import org.eclipse.xtext.common.types.util.Primitives;\n import org.eclipse.xtext.xbase.lib.Functions;\n import org.eclipse.xtext.xbase.lib.Procedures;\n \n /**\n  * @author Anton Kosyakov - Initial contribution and API\n  */\n public class XFunctionTypeRefs {\n+\t\n+\tprivate static final Primitives primitives = new Primitives();\n+\n+\tprivate static final ClassURIHelper classURIHelper = new ClassURIHelper();\n+\t\n \tpublic static URI computeTypeUri(boolean procedure, int functionParamCount) {\n \t\treturn URI.createURI(buildUri(procedure, functionParamCount));\n \t}\n \n \tpublic static String buildUri(boolean procedure, int functionParamCount) {\n \t\tint paramCount = Math.min(6, functionParamCount);\n \t\tif (procedure) {\n-\t\t\treturn \"java:/Objects/\" + Procedures.class.getCanonicalName() + \"#\" + Procedures.class.getCanonicalName()\n-\t\t\t\t\t+ \"$Procedure\" + Integer.valueOf(paramCount);\n+\t\t\treturn classURIHelper.getFullURI(Procedures.class).toString() + \"$Procedure\" + paramCount;\n \t\t}\n-\t\treturn \"java:/Objects/\" + Functions.class.getCanonicalName() + \"#\" + Functions.class.getCanonicalName()\n-\t\t\t\t+ \"$Function\" + Integer.valueOf(paramCount);\n+\t\treturn classURIHelper.getFullURI(Functions.class).toString() + \"$Function\" + paramCount;", "originalCommit": "ab46955889b1c79c8eae31494e3701cf38b73e5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE5MTYyMw==", "url": "https://github.com/eclipse/xtext-extras/pull/652#discussion_r503191623", "bodyText": "it could also be an option to overhaul the flow and do something based on Class.forName instead\n\nCould you please elaborate?", "author": "nbhusare", "createdAt": "2020-10-12T10:16:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE0NzAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIxOTQxOA==", "url": "https://github.com/eclipse/xtext-extras/pull/652#discussion_r503219418", "bodyText": "even keep an immutable list of the 2x6 allowed combinations such that we can return the URI in constant time without any string / URI manipulation.\n\n@szarnekow Updated the code. The method buildUri returns a URI in constant time.", "author": "nbhusare", "createdAt": "2020-10-12T11:08:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE0NzAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE0OTcwMw==", "url": "https://github.com/eclipse/xtext-extras/pull/652#discussion_r503149703", "bodyText": "You may want to use this classURIHelper in computeTypeUri, too.", "author": "szarnekow", "createdAt": "2020-10-12T09:08:35Z", "path": "org.eclipse.xtext.xbase/src/org/eclipse/xtext/xtype/util/XFunctionTypeRefs.java", "diffHunk": "@@ -19,25 +19,29 @@\n import org.eclipse.xtext.common.types.JvmVoid;\n import org.eclipse.xtext.common.types.TypesFactory;\n import org.eclipse.xtext.common.types.access.impl.ClassURIHelper;\n+import org.eclipse.xtext.common.types.util.Primitives;\n import org.eclipse.xtext.xbase.lib.Functions;\n import org.eclipse.xtext.xbase.lib.Procedures;\n \n /**\n  * @author Anton Kosyakov - Initial contribution and API\n  */\n public class XFunctionTypeRefs {\n+\t\n+\tprivate static final Primitives primitives = new Primitives();\n+\n+\tprivate static final ClassURIHelper classURIHelper = new ClassURIHelper();", "originalCommit": "ab46955889b1c79c8eae31494e3701cf38b73e5b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5d08a4459ff9d4d64d5cfcaf51c9deb28d3cf4bc", "url": "https://github.com/eclipse/xtext-extras/commit/5d08a4459ff9d4d64d5cfcaf51c9deb28d3cf4bc", "message": "Code cleanup\n\nSigned-off-by: nbhusare <neerajbhusare@gmail.com>", "committedDate": "2020-10-12T11:04:44Z", "type": "commit"}, {"oid": "5d08a4459ff9d4d64d5cfcaf51c9deb28d3cf4bc", "url": "https://github.com/eclipse/xtext-extras/commit/5d08a4459ff9d4d64d5cfcaf51c9deb28d3cf4bc", "message": "Code cleanup\n\nSigned-off-by: nbhusare <neerajbhusare@gmail.com>", "committedDate": "2020-10-12T11:04:44Z", "type": "forcePushed"}]}