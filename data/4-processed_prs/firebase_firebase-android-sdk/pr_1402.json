{"pr_number": 1402, "pr_title": "Remove impressions for Campaigns delivered by backend service", "pr_createdAt": "2020-03-30T22:26:08Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1402", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0NzQ5NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r400547494", "bodyText": "make this a set", "author": "prakhar1989", "createdAt": "2020-03-30T23:07:17Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/ImpressionStorageClient.java", "diffHunk": "@@ -96,4 +98,38 @@ private void clearInMemCache() {\n         .map(CampaignImpression::getCampaignId)\n         .contains(campaignId);\n   }\n+\n+  /** */\n+  public void clearImpressions(FetchEligibleCampaignsResponse response) {\n+    ArrayList<String> idsToClear = new ArrayList<>();", "originalCommit": "780420bb463cb42020036799b8017c66f9872be7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0NzkwNg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r400547906", "bodyText": "I think these logs are for debugging? if not, lets remove this (here and below)", "author": "prakhar1989", "createdAt": "2020-03-30T23:08:34Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/ImpressionStorageClient.java", "diffHunk": "@@ -96,4 +98,38 @@ private void clearInMemCache() {\n         .map(CampaignImpression::getCampaignId)\n         .contains(campaignId);\n   }\n+\n+  /** */\n+  public void clearImpressions(FetchEligibleCampaignsResponse response) {\n+    ArrayList<String> idsToClear = new ArrayList<>();\n+\n+    for (CampaignProto.ThickContent content : response.getMessagesList()) {\n+      String id =\n+          content.getPayloadCase().equals(CampaignProto.ThickContent.PayloadCase.VANILLA_PAYLOAD)\n+              ? content.getVanillaPayload().getCampaignId()\n+              : content.getExperimentalPayload().getCampaignId();\n+      idsToClear.add(id);\n+    }\n+    Logging.logd(\"Clearing impressions for: \" + idsToClear.toString());\n+    getAllImpressions()\n+        .defaultIfEmpty(EMPTY_IMPRESSIONS)\n+        .flatMapCompletable(\n+            (storedImpressions) -> {\n+              Logging.logd(\"Existing impressions: \" + storedImpressions.toString());", "originalCommit": "780420bb463cb42020036799b8017c66f9872be7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3Mzc4NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r400573785", "bodyText": "I think we can leave these logs as debug?", "author": "JasonAHeron", "createdAt": "2020-03-31T00:30:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0NzkwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0OTQ2NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r400549464", "bodyText": "Is this to test this whole thing e2e?", "author": "prakhar1989", "createdAt": "2020-03-30T23:13:04Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/DisplayCallbacksImpl.java", "diffHunk": "@@ -231,7 +232,7 @@ private Completable logToImpressionStore() {\n         impressionStorageClient\n             .storeImpression(\n                 CampaignImpression.newBuilder()\n-                    .setImpressionTimestampMillis(clock.now())\n+                    .setImpressionTimestampMillis(clock.now() - TimeUnit.DAYS.toMillis(2))", "originalCommit": "780420bb463cb42020036799b8017c66f9872be7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3MzYyMg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r400573622", "bodyText": "Yep yep, will be removed", "author": "JasonAHeron", "createdAt": "2020-03-31T00:30:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0OTQ2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4MzEwMQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r400583101", "bodyText": "If you get rid of this and return the completable", "author": "ashwinraghav", "createdAt": "2020-03-31T01:04:11Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/ImpressionStorageClient.java", "diffHunk": "@@ -96,4 +98,38 @@ private void clearInMemCache() {\n         .map(CampaignImpression::getCampaignId)\n         .contains(campaignId);\n   }\n+\n+  /** */\n+  public void clearImpressions(FetchEligibleCampaignsResponse response) {\n+    ArrayList<String> idsToClear = new ArrayList<>();\n+\n+    for (CampaignProto.ThickContent content : response.getMessagesList()) {\n+      String id =\n+          content.getPayloadCase().equals(CampaignProto.ThickContent.PayloadCase.VANILLA_PAYLOAD)\n+              ? content.getVanillaPayload().getCampaignId()\n+              : content.getExperimentalPayload().getCampaignId();\n+      idsToClear.add(id);\n+    }\n+    Logging.logd(\"Clearing impressions for: \" + idsToClear.toString());\n+    getAllImpressions()\n+        .defaultIfEmpty(EMPTY_IMPRESSIONS)\n+        .flatMapCompletable(\n+            (storedImpressions) -> {\n+              Logging.logd(\"Existing impressions: \" + storedImpressions.toString());\n+              CampaignImpressionList.Builder clearedImpressionListBuilder =\n+                  CampaignImpressionList.newBuilder();\n+              for (CampaignImpression storedImpression :\n+                  storedImpressions.getAlreadySeenCampaignsList()) {\n+                if (!idsToClear.contains(storedImpression.getCampaignId())) {\n+                  clearedImpressionListBuilder.addAlreadySeenCampaigns(storedImpression);\n+                }\n+              }\n+              CampaignImpressionList clearedImpressionList = clearedImpressionListBuilder.build();\n+              Logging.logd(\"New impression list: \" + clearedImpressionList.toString());\n+              return storageClient\n+                  .write(clearedImpressionList)\n+                  .doOnComplete(() -> initInMemCache(clearedImpressionList));\n+            })\n+        .blockingAwait();", "originalCommit": "780420bb463cb42020036799b8017c66f9872be7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4NDMwNQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r400584305", "bodyText": ".doOnSuccess(s -> impressionStorageClient.clearImpressions(s).subscribe()) similar to what cacheWrite does at line 266.\nThe key here is that doOnSuccess is a side effect type operator. The execution framework assumes that nothing needs to happen with the returned value. In your case, the return type of clearImpressions is a Completable that needs to either get chained into the observable or completed within the success consumer.", "author": "ashwinraghav", "createdAt": "2020-03-31T01:08:47Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/InAppMessageStreamManager.java", "diffHunk": "@@ -242,6 +242,7 @@ private boolean shouldIgnoreCache(String event) {\n                                           Locale.US,\n                                           \"Successfully fetched %d messages from backend\",\n                                           resp.getMessagesList().size())))\n+                          .doOnSuccess(impressionStorageClient::clearImpressions)", "originalCommit": "780420bb463cb42020036799b8017c66f9872be7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ea958ebf88a6ccea8a46fccb24111430cf1c0c98", "url": "https://github.com/firebase/firebase-android-sdk/commit/ea958ebf88a6ccea8a46fccb24111430cf1c0c98", "message": "add docstring", "committedDate": "2020-03-31T19:54:00Z", "type": "forcePushed"}, {"oid": "7bb5880958ae9efceab31c2099495495bf5ae02b", "url": "https://github.com/firebase/firebase-android-sdk/commit/7bb5880958ae9efceab31c2099495495bf5ae02b", "message": "add docstring", "committedDate": "2020-03-31T20:04:59Z", "type": "forcePushed"}, {"oid": "3f5567800b37570c5bd302f43bb2553c9e273f31", "url": "https://github.com/firebase/firebase-android-sdk/commit/3f5567800b37570c5bd302f43bb2553c9e273f31", "message": "add docstring", "committedDate": "2020-03-31T20:44:35Z", "type": "forcePushed"}, {"oid": "d58a9817d21f043b23308122e9ecf764f66d156c", "url": "https://github.com/firebase/firebase-android-sdk/commit/d58a9817d21f043b23308122e9ecf764f66d156c", "message": "add docstring", "committedDate": "2020-03-31T21:06:07Z", "type": "forcePushed"}, {"oid": "e4bfeb5f6326782b1d96f1fde8dc27e2f5b39441", "url": "https://github.com/firebase/firebase-android-sdk/commit/e4bfeb5f6326782b1d96f1fde8dc27e2f5b39441", "message": "add docstring", "committedDate": "2020-03-31T21:18:59Z", "type": "forcePushed"}, {"oid": "14e7225ebbb3806f6e517c6d786648374e630997", "url": "https://github.com/firebase/firebase-android-sdk/commit/14e7225ebbb3806f6e517c6d786648374e630997", "message": "add back crashy", "committedDate": "2020-03-31T21:27:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyOTU2OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r401229569", "bodyText": "PLs consider a new test that checks is the completable was subscribed to", "author": "ashwinraghav", "createdAt": "2020-03-31T21:35:36Z", "path": "firebase-inappmessaging/src/test/java/com/google/firebase/inappmessaging/internal/InAppMessageStreamManagerTest.java", "diffHunk": "@@ -198,6 +198,8 @@ public void setup() {\n             abtIntegrationHelper);", "originalCommit": "14e7225ebbb3806f6e517c6d786648374e630997", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc5NDUwMg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r401794502", "bodyText": "this is tested (somewhat indirectly) by our flowable test", "author": "JasonAHeron", "createdAt": "2020-04-01T17:41:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyOTU2OQ=="}], "type": "inlineReview"}, {"oid": "19dba2f4413b95686c268f81dc99601e03652ece", "url": "https://github.com/firebase/firebase-android-sdk/commit/19dba2f4413b95686c268f81dc99601e03652ece", "message": "add back crashy", "committedDate": "2020-03-31T21:56:38Z", "type": "forcePushed"}, {"oid": "a39140d03f8a19c67984d7a0473c5b9fe62ccec4", "url": "https://github.com/firebase/firebase-android-sdk/commit/a39140d03f8a19c67984d7a0473c5b9fe62ccec4", "message": "add back crashy", "committedDate": "2020-03-31T22:16:05Z", "type": "forcePushed"}, {"oid": "e636c74383b38373437ba41388441494dfe6c6ef", "url": "https://github.com/firebase/firebase-android-sdk/commit/e636c74383b38373437ba41388441494dfe6c6ef", "message": "add back crashy", "committedDate": "2020-03-31T22:19:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MDc1OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r401250758", "bodyText": "Lets add why we do this? (something like: this is required because we trust the server to tell us which campaigns can be re-impressed to honor frequency limits)?", "author": "prakhar1989", "createdAt": "2020-03-31T22:23:51Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/ImpressionStorageClient.java", "diffHunk": "@@ -96,4 +98,39 @@ private void clearInMemCache() {\n         .map(CampaignImpression::getCampaignId)\n         .contains(campaignId);\n   }\n+\n+  /**\n+   * Clears impressions for all campaigns found in the provided {@link\n+   * FetchEligibleCampaignsResponse}", "originalCommit": "e636c74383b38373437ba41388441494dfe6c6ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MTE2Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r401251162", "bodyText": "Did we test if this HashSet.toString logs the items and not the reference to the array?", "author": "prakhar1989", "createdAt": "2020-03-31T22:24:56Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/ImpressionStorageClient.java", "diffHunk": "@@ -96,4 +98,39 @@ private void clearInMemCache() {\n         .map(CampaignImpression::getCampaignId)\n         .contains(campaignId);\n   }\n+\n+  /**\n+   * Clears impressions for all campaigns found in the provided {@link\n+   * FetchEligibleCampaignsResponse}\n+   */\n+  public Completable clearImpressions(FetchEligibleCampaignsResponse response) {\n+    HashSet<String> idsToClear = new HashSet<>();\n+    for (CampaignProto.ThickContent content : response.getMessagesList()) {\n+      String id =\n+          content.getPayloadCase().equals(CampaignProto.ThickContent.PayloadCase.VANILLA_PAYLOAD)\n+              ? content.getVanillaPayload().getCampaignId()\n+              : content.getExperimentalPayload().getCampaignId();\n+      idsToClear.add(id);\n+    }\n+    Logging.logd(\"Potential impressions to clear: \" + idsToClear.toString());", "originalCommit": "e636c74383b38373437ba41388441494dfe6c6ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc4MjgyNA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r401782824", "bodyText": "yeah it logs the items. it logs a reference to the array if the array is empty but if it contains items it logs the items.", "author": "JasonAHeron", "createdAt": "2020-04-01T17:22:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MTE2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MTc2OA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1402#discussion_r401251768", "bodyText": "nice! this seems much better than blockingAwait", "author": "prakhar1989", "createdAt": "2020-03-31T22:26:30Z", "path": "firebase-inappmessaging/src/main/java/com/google/firebase/inappmessaging/internal/InAppMessageStreamManager.java", "diffHunk": "@@ -242,6 +242,8 @@ private boolean shouldIgnoreCache(String event) {\n                                           Locale.US,\n                                           \"Successfully fetched %d messages from backend\",\n                                           resp.getMessagesList().size())))\n+                          .doOnSuccess(\n+                              resp -> impressionStorageClient.clearImpressions(resp).subscribe())", "originalCommit": "e636c74383b38373437ba41388441494dfe6c6ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "41b0877c33744384ca2585e8ddb176794d10b99b", "url": "https://github.com/firebase/firebase-android-sdk/commit/41b0877c33744384ca2585e8ddb176794d10b99b", "message": "add docstring", "committedDate": "2020-04-01T16:05:23Z", "type": "forcePushed"}, {"oid": "dab9eb48e509af3c00d3b488df7d81ea1cf249fe", "url": "https://github.com/firebase/firebase-android-sdk/commit/dab9eb48e509af3c00d3b488df7d81ea1cf249fe", "message": "please work", "committedDate": "2020-04-01T16:18:29Z", "type": "commit"}, {"oid": "59eed7adac0a85373a733e3f35754d8e380ceda1", "url": "https://github.com/firebase/firebase-android-sdk/commit/59eed7adac0a85373a733e3f35754d8e380ceda1", "message": ":(", "committedDate": "2020-04-01T16:18:29Z", "type": "commit"}, {"oid": "02a00e27d79d2d14dec7bde1af069140a97d8a06", "url": "https://github.com/firebase/firebase-android-sdk/commit/02a00e27d79d2d14dec7bde1af069140a97d8a06", "message": ":( :(", "committedDate": "2020-04-01T16:18:29Z", "type": "commit"}, {"oid": "648e464152c133f20f5c77d209d3ec95e8307f32", "url": "https://github.com/firebase/firebase-android-sdk/commit/648e464152c133f20f5c77d209d3ec95e8307f32", "message": "kk", "committedDate": "2020-04-01T16:18:29Z", "type": "commit"}, {"oid": "f071e4ef15912f3dc3d121fd3b1b26ba45cba247", "url": "https://github.com/firebase/firebase-android-sdk/commit/f071e4ef15912f3dc3d121fd3b1b26ba45cba247", "message": "remove tests", "committedDate": "2020-04-01T16:18:29Z", "type": "commit"}, {"oid": "be78a82be7a39dfccfa9b42487395a8e88c647a4", "url": "https://github.com/firebase/firebase-android-sdk/commit/be78a82be7a39dfccfa9b42487395a8e88c647a4", "message": "make the test pass", "committedDate": "2020-04-01T16:18:29Z", "type": "commit"}, {"oid": "0a19f0edaabbf5532d94b81623eb66cb68692d9c", "url": "https://github.com/firebase/firebase-android-sdk/commit/0a19f0edaabbf5532d94b81623eb66cb68692d9c", "message": "kk", "committedDate": "2020-04-01T16:18:29Z", "type": "commit"}, {"oid": "bd8d1a9abb6e148dab66d4350e9890807ed4ecf0", "url": "https://github.com/firebase/firebase-android-sdk/commit/bd8d1a9abb6e148dab66d4350e9890807ed4ecf0", "message": "add docstring", "committedDate": "2020-04-01T16:18:29Z", "type": "commit"}, {"oid": "bd8d1a9abb6e148dab66d4350e9890807ed4ecf0", "url": "https://github.com/firebase/firebase-android-sdk/commit/bd8d1a9abb6e148dab66d4350e9890807ed4ecf0", "message": "add docstring", "committedDate": "2020-04-01T16:18:29Z", "type": "forcePushed"}, {"oid": "36b3e034b0c3ad2ed2e2ee66a0e8677a028f0991", "url": "https://github.com/firebase/firebase-android-sdk/commit/36b3e034b0c3ad2ed2e2ee66a0e8677a028f0991", "message": "add unit test", "committedDate": "2020-04-01T17:16:21Z", "type": "commit"}, {"oid": "884a596ee2e8027394cc9cb75fd698372da22c74", "url": "https://github.com/firebase/firebase-android-sdk/commit/884a596ee2e8027394cc9cb75fd698372da22c74", "message": "comment for clarity", "committedDate": "2020-04-01T17:28:56Z", "type": "commit"}, {"oid": "b02979a6243a42aabe7bbc7dd500990d5a9a55d2", "url": "https://github.com/firebase/firebase-android-sdk/commit/b02979a6243a42aabe7bbc7dd500990d5a9a55d2", "message": "add back failure mode", "committedDate": "2020-04-01T17:29:42Z", "type": "commit"}]}