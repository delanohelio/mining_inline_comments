{"pr_number": 1296, "pr_title": "Connect reporting coordinator to controller", "pr_createdAt": "2020-02-28T20:57:52Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1296", "timeline": [{"oid": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "url": "https://github.com/firebase/firebase-android-sdk/commit/f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "message": "Connect reporting coordinator to controller", "committedDate": "2020-02-28T20:55:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxOTIxOQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385919219", "bodyText": "Make this static.", "author": "mrwillis21", "createdAt": "2020-02-28T20:58:54Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/core/CrashlyticsController.java", "diffHunk": "@@ -600,6 +623,11 @@ public ReportUploader createReportUploader(AppSettingsData appSettingsData) {\n     };\n   }\n \n+  private SessionReportingCoordinator.SendReportPredicate shouldSendViaDataTransport(", "originalCommit": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxOTM2MQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385919361", "bodyText": "since we reference this string elsewhere, should we make it a constant?", "author": "jakeouellette", "createdAt": "2020-02-28T20:59:17Z", "path": "firebase-crashlytics/src/androidTest/java/com/google/firebase/crashlytics/core/CrashlyticsControllerTest.java", "diffHunk": "@@ -83,7 +83,9 @@\n       new FileFilter() {\n         @Override\n         public boolean accept(File pathname) {\n-          return pathname.isDirectory() && !pathname.getName().equals(\"log-files\");\n+          return pathname.isDirectory()\n+              && !pathname.getName().equals(\"log-files\")\n+              && !pathname.getName().equals(\"report-persistence\");", "originalCommit": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MDQ4MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r386460480", "bodyText": "It's a test class, so not terribly worried about this.", "author": "mrwillis21", "createdAt": "2020-03-02T15:26:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxOTM2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxOTYwMA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385919600", "bodyText": "just an fyi, with regex, I like to give an example of typical cases in javadocs nearby. Any chance we could add one here?", "author": "jakeouellette", "createdAt": "2020-02-28T21:00:02Z", "path": "firebase-crashlytics/src/androidTest/java/com/google/firebase/crashlytics/core/CrashlyticsCoreTest.java", "diffHunk": "@@ -728,7 +728,7 @@ public boolean accept(File file) {\n     }\n   }\n \n-  private static class AnySessionIdDirectoryFilter extends DirectoriesOnlyFilter {\n+  private static class AnySessionIdDirectoryFilter extends SessionDirectoriesOnlyFilter {\n     private static String ANY_SESSION_ID_REGEX =", "originalCommit": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MDczMg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r386460732", "bodyText": "Test class, plus this code is slated for removal down the track.", "author": "mrwillis21", "createdAt": "2020-03-02T15:27:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxOTYwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyNjMzMg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385926332", "bodyText": "This turned out really nice.\nShould this be a static method?", "author": "jakeouellette", "createdAt": "2020-02-28T21:17:44Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/core/CrashlyticsController.java", "diffHunk": "@@ -600,6 +623,11 @@ public ReportUploader createReportUploader(AppSettingsData appSettingsData) {\n     };\n   }\n \n+  private SessionReportingCoordinator.SendReportPredicate shouldSendViaDataTransport(\n+      int reportUploadVariant) {\n+    return () -> REPORT_UPLOAD_VARIANT_DATATRANSPORT == reportUploadVariant;", "originalCommit": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk0NTM0NA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385945344", "bodyText": "Yes: #1296 (comment)", "author": "mrwillis21", "createdAt": "2020-02-28T22:09:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyNjMzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyNjU0MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385926540", "bodyText": "it's unfortunate the order changes between these two events", "author": "jakeouellette", "createdAt": "2020-02-28T21:18:18Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/core/CrashlyticsController.java", "diffHunk": "@@ -620,14 +648,16 @@ public Void call() throws Exception {\n   void writeNonFatalException(final Thread thread, final Throwable ex) {\n     // Capture and close over the current time, so that we get the exact call time,\n     // rather than the time at which the task executes.\n-    final Date now = new Date();\n+    final Date time = new Date();\n \n     backgroundWorker.submit(\n         new Runnable() {\n           @Override\n           public void run() {\n             if (!isHandlingException()) {\n-              doWriteNonFatal(now, thread, ex);\n+              long timestampSeconds = time.getTime() / 1000;\n+              reportingCoordinator.persistNonFatalEvent(ex, thread, timestampSeconds);\n+              doWriteNonFatal(thread, ex, timestampSeconds);", "originalCommit": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk0NTQ1OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385945459", "bodyText": "Can you elaborate? I'm not sure what you mean.", "author": "mrwillis21", "createdAt": "2020-02-28T22:09:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyNjU0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MTA5MQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r386461091", "bodyText": "Talked about this offline and the reasoning for it, and we're happy with the implementation as-is.", "author": "mrwillis21", "createdAt": "2020-03-02T15:27:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyNjU0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyNzIzNQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385927235", "bodyText": "is there any risk, switch to seconds is not granular enough to avoid conflicts / reorderings?", "author": "jakeouellette", "createdAt": "2020-02-28T21:20:06Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/core/CrashlyticsController.java", "diffHunk": "@@ -780,18 +811,21 @@ boolean finalizeSessions(int maxCustomExceptionEvents) {\n    * class.\n    */\n   private void doOpenSession() throws Exception {\n-    final Date startedAt = new Date();\n+    final long startedAtSeconds = new Date().getTime() / 1000;\n     final String sessionIdentifier = new CLSUUID(idManager).toString();\n \n     Logger.getLogger().d(Logger.TAG, \"Opening a new session with ID \" + sessionIdentifier);\n \n     nativeComponent.openSession(sessionIdentifier);\n \n-    writeBeginSession(sessionIdentifier, startedAt);\n+    writeBeginSession(sessionIdentifier, startedAtSeconds);", "originalCommit": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk0NjA4Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385946082", "bodyText": "It's not a switch, it was always seconds, but the / 1000 calculation was just done deeper down. (I see you noticed that https://github.com/firebase/firebase-android-sdk/pull/1296/files#r385929479)", "author": "mrwillis21", "createdAt": "2020-02-28T22:11:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyNzIzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyNzY3NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385927675", "bodyText": "The fact that this needed a comment makes me wonder: Is this worth pulling into a static method? A clever name could reduce the need for a javadoc", "author": "jakeouellette", "createdAt": "2020-02-28T21:21:02Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/core/CrashlyticsController.java", "diffHunk": "@@ -780,18 +811,21 @@ boolean finalizeSessions(int maxCustomExceptionEvents) {\n    * class.\n    */\n   private void doOpenSession() throws Exception {\n-    final Date startedAt = new Date();\n+    final long startedAtSeconds = new Date().getTime() / 1000;\n     final String sessionIdentifier = new CLSUUID(idManager).toString();\n \n     Logger.getLogger().d(Logger.TAG, \"Opening a new session with ID \" + sessionIdentifier);\n \n     nativeComponent.openSession(sessionIdentifier);\n \n-    writeBeginSession(sessionIdentifier, startedAt);\n+    writeBeginSession(sessionIdentifier, startedAtSeconds);\n     writeSessionApp(sessionIdentifier);\n     writeSessionOS(sessionIdentifier);\n     writeSessionDevice(sessionIdentifier);\n     logFileManager.setCurrentSession(sessionIdentifier);\n+\n+    // Firebase Crashlytics requires session IDs without dashes.\n+    reportingCoordinator.onBeginSession(sessionIdentifier.replaceAll(\"-\", \"\"), startedAtSeconds);", "originalCommit": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk0NjkxNQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385946915", "bodyText": "Yeah, that's fair.", "author": "mrwillis21", "createdAt": "2020-02-28T22:14:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyNzY3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyOTE4Mg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385929182", "bodyText": "Is it worth flipping the boolean to be includeCurrent to avoid the double negative?", "author": "jakeouellette", "createdAt": "2020-02-28T21:24:54Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/core/CrashlyticsController.java", "diffHunk": "@@ -822,7 +856,13 @@ private void doCloseSessions(int maxCustomExceptionEvents, boolean excludeCurren\n     // maximum chance that the user code that sets this information has been run.\n     writeSessionUser(mostRecentSessionIdToClose);\n \n+    if (!excludeCurrent) {", "originalCommit": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk0NzEwOA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385947108", "bodyText": "Yeah, was trying to minimize the amount of change in this one PR, but I'll look at it.", "author": "mrwillis21", "createdAt": "2020-02-28T22:14:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyOTE4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyOTQ3OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385929479", "bodyText": "I see, we always converted it to seconds, so that's why you're doing that here.", "author": "jakeouellette", "createdAt": "2020-02-28T21:25:35Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/core/CrashlyticsController.java", "diffHunk": "@@ -1284,10 +1324,10 @@ private static void appendToProtoFile(File file, CodedOutputStreamWriteAction wr\n     }\n   }\n \n-  private void writeBeginSession(final String sessionId, final Date startedAt) throws Exception {\n+  private void writeBeginSession(final String sessionId, final long startedAtSeconds)\n+      throws Exception {\n     final String generator =\n         String.format(Locale.US, GENERATOR_FORMAT, CrashlyticsCore.getVersion());\n-    final long startedAtSeconds = startedAt.getTime() / 1000;", "originalCommit": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk0NzEzOQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385947139", "bodyText": "\ud83d\udc4d", "author": "mrwillis21", "createdAt": "2020-02-28T22:14:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyOTQ3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkzMTAwOA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385931008", "bodyText": "Should the other constructor become private?", "author": "jakeouellette", "createdAt": "2020-02-28T21:29:30Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/SessionReportingCoordinator.java", "diffHunk": "@@ -44,6 +47,29 @@\n   private static final int EVENT_THREAD_IMPORTANCE = 4;\n   private static final int MAX_CHAINED_EXCEPTION_DEPTH = 8;\n \n+  private static final int DEFAULT_MAX_EVENTS_TO_KEEP = 8;\n+  private static final int DEFAULT_MAX_REPORTS_TO_KEEP = 4;\n+\n+  public static SessionReportingCoordinator create(", "originalCommit": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk0NzIyNg==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385947226", "bodyText": "No, but package-private for testing, yes.", "author": "mrwillis21", "createdAt": "2020-02-28T22:15:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkzMTAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4OTMwNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r386489307", "bodyText": "The constructor is currently package-private, so not taking any action here.", "author": "mrwillis21", "createdAt": "2020-03-02T16:09:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkzMTAwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkzMTQzNQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385931435", "bodyText": "How do we draw the line of which things get passed in vs made inside this create call? some things (e.g., this strategy) are created before the create call and injected in.)", "author": "jakeouellette", "createdAt": "2020-02-28T21:30:44Z", "path": "firebase-crashlytics/src/main/java/com/google/firebase/crashlytics/internal/common/SessionReportingCoordinator.java", "diffHunk": "@@ -44,6 +47,29 @@\n   private static final int EVENT_THREAD_IMPORTANCE = 4;\n   private static final int MAX_CHAINED_EXCEPTION_DEPTH = 8;\n \n+  private static final int DEFAULT_MAX_EVENTS_TO_KEEP = 8;\n+  private static final int DEFAULT_MAX_REPORTS_TO_KEEP = 4;\n+\n+  public static SessionReportingCoordinator create(\n+      Context context,\n+      IdManager idManager,\n+      FileStore fileStore,\n+      AppData appData,\n+      LogFileManager logFileManager,\n+      UserMetadata userMetadata,\n+      StackTraceTrimmingStrategy stackTraceTrimmingStrategy) {", "originalCommit": "f2b0657e1da8eb916ef94ed1065ef7d5e2d3c692", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk0ODA0OQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r385948049", "bodyText": "The things passed in this create call are all the underlying collaborators necessary to make the coordinator work in its default configuration (where 'configuration' is defined as the group of collaborators passed to the constructor). Most of these abstractions aren't perfect, so this create call is a bit messy. Would love to discuss this further if you have ideas about how to clean it up.", "author": "mrwillis21", "createdAt": "2020-02-28T22:17:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkzMTQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MTMyNw==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1296#discussion_r386461327", "bodyText": "Discussed this offline and decided this is fine for now.", "author": "mrwillis21", "createdAt": "2020-03-02T15:28:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkzMTQzNQ=="}], "type": "inlineReview"}, {"oid": "1ade678f0d36253fc925a88d8cdf6eabc73b16ae", "url": "https://github.com/firebase/firebase-android-sdk/commit/1ade678f0d36253fc925a88d8cdf6eabc73b16ae", "message": "Feedback", "committedDate": "2020-03-02T16:09:50Z", "type": "commit"}]}