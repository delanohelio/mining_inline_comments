{"pr_number": 2095, "pr_title": "Implement Provider.get() assignment lint check.", "pr_createdAt": "2020-10-22T19:12:08Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/2095", "timeline": [{"oid": "110a5a0d86f692368af5349bf134f30b764a40bb", "url": "https://github.com/firebase/firebase-android-sdk/commit/110a5a0d86f692368af5349bf134f30b764a40bb", "message": "Implement Provider.get() assignment lint check.", "committedDate": "2020-10-22T18:41:28Z", "type": "commit"}, {"oid": "6dfd2df0f660b57cc05a0971128d7af866826403", "url": "https://github.com/firebase/firebase-android-sdk/commit/6dfd2df0f660b57cc05a0971128d7af866826403", "message": "Add tests.", "committedDate": "2020-10-22T19:11:44Z", "type": "commit"}, {"oid": "409e932d489a6ca4a59ff1fc61eb342cc31152d8", "url": "https://github.com/firebase/firebase-android-sdk/commit/409e932d489a6ca4a59ff1fc61eb342cc31152d8", "message": "Fix", "committedDate": "2020-10-22T19:13:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQxMzM0MA==", "url": "https://github.com/firebase/firebase-android-sdk/pull/2095#discussion_r510413340", "bodyText": "I think you can go with\n(method.parent as? PsiClass)?.let {\n            return it.qualifiedName == PROVIDER\n        }\nreturn false\n\nand simplify it a bit since the return is closer to the false that get evaluated conditionally by the ?:", "author": "rlazo", "createdAt": "2020-10-22T19:44:27Z", "path": "tools/lint/src/main/kotlin/ProviderAssignmentDetector.kt", "diffHunk": "@@ -0,0 +1,88 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.firebase.lint.checks\n+\n+import com.android.tools.lint.detector.api.Category\n+import com.android.tools.lint.detector.api.Detector\n+import com.android.tools.lint.detector.api.Implementation\n+import com.android.tools.lint.detector.api.Issue\n+import com.android.tools.lint.detector.api.JavaContext\n+import com.android.tools.lint.detector.api.Scope\n+import com.android.tools.lint.detector.api.Severity\n+import com.android.tools.lint.detector.api.SourceCodeScanner\n+import com.intellij.psi.PsiClass\n+import com.intellij.psi.PsiField\n+import com.intellij.psi.PsiMethod\n+import org.jetbrains.uast.UCallExpression\n+import org.jetbrains.uast.UReferenceExpression\n+import org.jetbrains.uast.getParentOfType\n+import org.jetbrains.uast.java.JavaUAssignmentExpression\n+\n+private const val PROVIDER = \"com.google.firebase.inject.Provider\"\n+\n+class ProviderAssignmentDetector : Detector(), SourceCodeScanner {\n+    override fun getApplicableMethodNames() = listOf(\"get\")\n+\n+    override fun visitMethodCall(context: JavaContext, node: UCallExpression, method: PsiMethod) {\n+        if (!isProviderGet(method)) {\n+            return\n+        }\n+        val assignmentTarget = node.getParentOfType<JavaUAssignmentExpression>(\n+                JavaUAssignmentExpression::class.java,\n+                true)?.leftOperand as? UReferenceExpression ?: return\n+        assignmentTarget.resolve()?.let {\n+            if (it is PsiField) {\n+                context.report(\n+                        INVALID_PROVIDER_ASSIGNMENT,\n+                        context.getCallLocation(node, includeReceiver = false, includeArguments = true),\n+                        \"Provider.get() assignment to a field detected.\")\n+            }\n+        }\n+    }\n+\n+    private fun isProviderGet(method: PsiMethod): Boolean {\n+        if (!method.parameterList.isEmpty) {\n+            return false\n+        }\n+        return (method.parent as? PsiClass)?.let {\n+            return it.qualifiedName == PROVIDER\n+        } ?: false", "originalCommit": "409e932d489a6ca4a59ff1fc61eb342cc31152d8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "93820544f5fa781bb213da24f34dfc52cb6ef84f", "url": "https://github.com/firebase/firebase-android-sdk/commit/93820544f5fa781bb213da24f34dfc52cb6ef84f", "message": "Address review comment.", "committedDate": "2020-10-22T20:03:06Z", "type": "commit"}]}