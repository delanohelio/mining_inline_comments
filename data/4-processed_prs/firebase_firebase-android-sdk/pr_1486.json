{"pr_number": 1486, "pr_title": "Datatransport failures should not crash the app.", "pr_createdAt": "2020-04-20T15:47:23Z", "pr_url": "https://github.com/firebase/firebase-android-sdk/pull/1486", "timeline": [{"oid": "1452342302c9e2a1942146d271ed4cf063f9a2e1", "url": "https://github.com/firebase/firebase-android-sdk/commit/1452342302c9e2a1942146d271ed4cf063f9a2e1", "message": "Datatransport failures should not crash the app.\n\nThis is achieved by protecting the executor thread by a catch all. This\nmakes sure that failures are logged to logcat but do not cause the\nunderlying thread to crash itself.\n\nMitigates #1436 until a more detailed repro is provided.", "committedDate": "2020-04-20T15:45:48Z", "type": "commit"}, {"oid": "08873586b1cffa3adf1af9bab16c72be9cc4a4f1", "url": "https://github.com/firebase/firebase-android-sdk/commit/08873586b1cffa3adf1af9bab16c72be9cc4a4f1", "message": "Rename test.", "committedDate": "2020-04-20T15:49:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5NjA3NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1486#discussion_r411596075", "bodyText": "We should consider logging non fatals to crashlytics in the future. In this case, that could off course loop around and come right back to the problem", "author": "ashwinraghav", "createdAt": "2020-04-20T18:26:09Z", "path": "transport/transport-runtime/src/main/java/com/google/android/datatransport/runtime/SafeLoggingExecutor.java", "diffHunk": "@@ -0,0 +1,53 @@\n+// Copyright 2020 Google LLC\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//      http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package com.google.android.datatransport.runtime;\n+\n+import com.google.android.datatransport.runtime.logging.Logging;\n+import java.util.concurrent.Executor;\n+\n+/**\n+ * Protects underlying threads from crashing.\n+ *\n+ * <p>Exceptions thrown by executed {@link Runnable}s are logged and swallowed.\n+ */\n+class SafeLoggingExecutor implements Executor {\n+  private final Executor delegate;\n+\n+  SafeLoggingExecutor(Executor delegate) {\n+    this.delegate = delegate;\n+  }\n+\n+  @Override\n+  public void execute(Runnable command) {\n+    delegate.execute(new SafeLoggingRunnable(command));\n+  }\n+\n+  static class SafeLoggingRunnable implements Runnable {\n+    private final Runnable delegate;\n+\n+    SafeLoggingRunnable(Runnable delegate) {\n+      this.delegate = delegate;\n+    }\n+\n+    @Override\n+    public void run() {\n+      try {\n+        delegate.run();\n+      } catch (Exception e) {\n+        Logging.e(\"Executor\", \"Background execution failure.\", e);", "originalCommit": "08873586b1cffa3adf1af9bab16c72be9cc4a4f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5Njk1NQ==", "url": "https://github.com/firebase/firebase-android-sdk/pull/1486#discussion_r411596955", "bodyText": "Wow!\nDI to the rescue!", "author": "ashwinraghav", "createdAt": "2020-04-20T18:27:35Z", "path": "transport/transport-runtime/src/main/java/com/google/android/datatransport/runtime/ExecutionModule.java", "diffHunk": "@@ -25,6 +25,6 @@\n   @Singleton\n   @Provides\n   static Executor executor() {\n-    return Executors.newSingleThreadExecutor();\n+    return new SafeLoggingExecutor(Executors.newSingleThreadExecutor());", "originalCommit": "08873586b1cffa3adf1af9bab16c72be9cc4a4f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}