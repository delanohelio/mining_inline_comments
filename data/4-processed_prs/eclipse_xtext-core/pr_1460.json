{"pr_number": 1460, "pr_title": "[https://github.com/eclipse/xtext-eclipse/issues/1221] Serializer.", "pr_createdAt": "2020-04-29T07:17:57Z", "pr_url": "https://github.com/eclipse/xtext-core/pull/1460", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDExNw==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417124117", "bodyText": "Unfortunately this is not generally applicable, e.g. languages with synthetic tokens or semantic whitespace will break. This method must at least be protected", "author": "szarnekow", "createdAt": "2020-04-29T07:42:21Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {", "originalCommit": "456963cc6d1207a94b021921afd2f2dba6d36293", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODI1Ng==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417148256", "bodyText": "Fixed.", "author": "miklossy", "createdAt": "2020-04-29T08:27:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDExNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MTE3Mw==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417151173", "bodyText": "Unfortunately this is not generally applicable, e.g. languages with synthetic tokens or semantic whitespace will break.\n\nActually I think that it is really too dangerous to modify the code in the xtext-core code base. Hence it is quite difficult to provide a general solution there, I would prefer to fix the problem only on the Domainmodel example side. We can still consider a general solution later on, if lot of \"client projects\" claims about the problem, but for the time being a fix only for the Domainmodel example would satisfy my needs.\n@cdietrich @szarnekow : If you agree, I will close this PR and provide another one in xtext-eclipse.", "author": "miklossy", "createdAt": "2020-04-29T08:32:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDExNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1NzQ4OA==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417157488", "bodyText": "@miklossy I didn't want to scare you and I'm sure that you'll get this straight. If you don't mind, I'll be happy to give advice and provide feedback.", "author": "szarnekow", "createdAt": "2020-04-29T08:43:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDExNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDQ4NQ==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417124485", "bodyText": "Checks against implementation classes of the node model must be avoided. Please use instanceof ILeafNode && node.isHidden() instead.", "author": "szarnekow", "createdAt": "2020-04-29T07:43:00Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {\n+\t\treturn node.hasNextSibling() && node.getNextSibling() instanceof HiddenLeafNode;", "originalCommit": "456963cc6d1207a94b021921afd2f2dba6d36293", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjAyOQ==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417126029", "bodyText": "In any case, the logic here is unfortunately flawed. If I understand the intention behind this code correctly, it must be something like node.getLeadNodes().head().isHidden() - though the name whiteSpaceFollows is misleading given that comment nodes are also hidden.", "author": "szarnekow", "createdAt": "2020-04-29T07:46:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODMzMw==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417148333", "bodyText": "Fixed.", "author": "miklossy", "createdAt": "2020-04-29T08:27:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDQ4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDk2Ng==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417124966", "bodyText": "Could be CharMatcher.whitespac().matchesAllOf(text)", "author": "szarnekow", "createdAt": "2020-04-29T07:43:58Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {\n+\t\treturn node.hasNextSibling() && node.getNextSibling() instanceof HiddenLeafNode;\n+\t}\n+\n+\tprivate boolean containsOnlyWhiteSpaces(String text) {", "originalCommit": "456963cc6d1207a94b021921afd2f2dba6d36293", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODQ2Ng==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417148466", "bodyText": "Fixed.", "author": "miklossy", "createdAt": "2020-04-29T08:27:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDk2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjA5Nw==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417126097", "bodyText": "whiteSpace -> whitespace", "author": "szarnekow", "createdAt": "2020-04-29T07:46:11Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {", "originalCommit": "456963cc6d1207a94b021921afd2f2dba6d36293", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODM5NA==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417148394", "bodyText": "Fixed.", "author": "miklossy", "createdAt": "2020-04-29T08:27:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjA5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjI2OQ==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417126269", "bodyText": "containsOnlyWhiteSpaces -> isWhitespace", "author": "szarnekow", "createdAt": "2020-04-29T07:46:27Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {\n+\t\treturn node.hasNextSibling() && node.getNextSibling() instanceof HiddenLeafNode;\n+\t}\n+\n+\tprivate boolean containsOnlyWhiteSpaces(String text) {", "originalCommit": "456963cc6d1207a94b021921afd2f2dba6d36293", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODUyNA==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417148524", "bodyText": "Fixed.", "author": "miklossy", "createdAt": "2020-04-29T08:28:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjI2OQ=="}], "type": "inlineReview"}, {"oid": "2c23e10032880969563362918717f99f212c9e40", "url": "https://github.com/eclipse/xtext-core/commit/2c23e10032880969563362918717f99f212c9e40", "message": "[https://github.com/eclipse/xtext-eclipse/issues/1221] Serializer.\n\n- Improve the serializeReplacement implementation by modifying the\nReplaceRegion length calculation so that it takes not only the\nICompositeNode.getTotalLength() into account, but considers if the new\ntext contains additional whitespaces and the old text is also followed\nby white spaces, than the whitespaces contained by the original document\nis also consumed by the quickfix.\n\nSigned-off-by: Tamas Miklossy <miklossy@itemis.de>", "committedDate": "2020-04-29T08:14:59Z", "type": "forcePushed"}, {"oid": "9f7f2ee80fb1073d2319ed179d3e029606660e48", "url": "https://github.com/eclipse/xtext-core/commit/9f7f2ee80fb1073d2319ed179d3e029606660e48", "message": "[https://github.com/eclipse/xtext-eclipse/issues/1221] Serializer.\n\n- Improve the serializeReplacement implementation by modifying the\nReplaceRegion length calculation so that it takes not only the\nICompositeNode.getTotalLength() into account, but considers if the new\ntext contains additional whitespaces and the old text is also followed\nby white spaces, than the whitespaces contained by the original document\nis also consumed by the quickfix.\n\nSigned-off-by: Tamas Miklossy <miklossy@itemis.de>", "committedDate": "2020-05-08T07:32:28Z", "type": "forcePushed"}, {"oid": "fcb8e929483ef4aa46cf7c51ed91233dacdcb2d6", "url": "https://github.com/eclipse/xtext-core/commit/fcb8e929483ef4aa46cf7c51ed91233dacdcb2d6", "message": "[https://github.com/eclipse/xtext-eclipse/issues/1221] Serializer.\n\n- Improve the serializeReplacement implementation by modifying the\nReplaceRegion length calculation so that it takes not only the\nICompositeNode.getTotalLength() into account, but considers if the new\ntext contains additional whitespaces and the old text is also followed\nby white spaces, than the whitespaces contained by the original document\nis also consumed by the quickfix.\n- Implement corresponding SerializerReplacementCalculationTest test case\nbased on the NoJdtTestLanguage.\n\nSigned-off-by: Tamas Miklossy <miklossy@itemis.de>", "committedDate": "2020-05-08T14:55:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjkwMzIxNA==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r422903214", "bodyText": "If the next sibling is a composite node, it's first child may still be a hidden node.\nIf you want to catch those, too, I recommend to use something like nextSibling.getLeafNodes() and check the first node in that list.", "author": "szarnekow", "createdAt": "2020-05-11T09:21:26Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +213,35 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprotected int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (isWhitespace(remainingText) && hiddenNodeFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprotected boolean hiddenNodeFollows(ICompositeNode node) {\n+\t\tif (node.hasNextSibling()) {\n+\t\t\tINode nextSibling = node.getNextSibling();\n+\t\t\tif (nextSibling instanceof ILeafNode) {", "originalCommit": "fcb8e929483ef4aa46cf7c51ed91233dacdcb2d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "95dd60c60df32202f48c867c971a4a91d846baf6", "url": "https://github.com/eclipse/xtext-core/commit/95dd60c60df32202f48c867c971a4a91d846baf6", "message": "[https://github.com/eclipse/xtext-eclipse/issues/1221] Serializer.\n\n- Improve the serializeReplacement implementation by modifying the\nReplaceRegion length calculation so that it takes not only the\nICompositeNode.getTotalLength() into account, but considers if the new\ntext contains additional whitespaces and the old text is also followed\nby white spaces, than the whitespaces contained by the original document\nis also consumed by the quickfix.\n- Implement corresponding SerializerReplacementCalculationTest test case\nbased on the NoJdtTestLanguage.\n\nSigned-off-by: Tamas Miklossy <miklossy@itemis.de>", "committedDate": "2020-05-11T09:52:08Z", "type": "forcePushed"}, {"oid": "b3be053f97b9ff61033fdd7d37c481086a13f64f", "url": "https://github.com/eclipse/xtext-core/commit/b3be053f97b9ff61033fdd7d37c481086a13f64f", "message": "[https://github.com/eclipse/xtext-eclipse/issues/1221] Serializer.\n\n- Improve the serializeReplacement implementation by modifying the\nReplaceRegion length calculation so that it takes not only the\nICompositeNode.getTotalLength() into account, but considers if the new\ntext contains additional whitespaces and the old text is also followed\nby white spaces, than the whitespaces contained by the original document\nis also consumed by the quickfix.\n- Implement corresponding SerializerReplacementCalculationTest test case\nbased on the NoJdtTestLanguage.\n\nSigned-off-by: Tamas Miklossy <miklossy@itemis.de>", "committedDate": "2020-05-11T16:17:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzczNDQ4Ng==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r423734486", "bodyText": "Please also add @Since tags to the new methods.", "author": "szarnekow", "createdAt": "2020-05-12T13:31:20Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +213,50 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprotected int calculateReplaceRegionLength(ICompositeNode node, String text) {", "originalCommit": "b3be053f97b9ff61033fdd7d37c481086a13f64f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a9461115cff650e12320d22ba6f63d09ea8e8a91", "url": "https://github.com/eclipse/xtext-core/commit/a9461115cff650e12320d22ba6f63d09ea8e8a91", "message": "[https://github.com/eclipse/xtext-eclipse/issues/1221] Serializer.\n\n- Improve the serializeReplacement implementation by modifying the\nReplaceRegion length calculation so that it takes not only the\nICompositeNode.getTotalLength() into account, but considers if the new\ntext contains additional whitespaces and the old text is also followed\nby white spaces, than the whitespaces contained by the original document\nis also consumed by the quickfix.\n- Implement corresponding SerializerReplacementCalculationTest test case\nbased on the NoJdtTestLanguage.\n\nSigned-off-by: Tamas Miklossy <miklossy@itemis.de>", "committedDate": "2020-05-12T14:07:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0Mjg4Mg==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r423842882", "bodyText": "Last thing that slipped through: This method should either be protected or the since tag is unnecessary.", "author": "szarnekow", "createdAt": "2020-05-12T15:50:05Z", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +213,60 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\t/**\n+\t * @since 2.22\n+\t */\n+\tprotected int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (isWhitespace(remainingText) && hiddenNodeFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\t/**\n+\t * @since 2.22\n+\t */\n+\tprotected boolean hiddenNodeFollows(ICompositeNode node) {\n+\t\tINode followingNode = getFollowingNode(node);\n+\t\tif (followingNode instanceof ILeafNode) {\n+\t\t\treturn ((ILeafNode)followingNode).isHidden();\n+\t\t}\n+\t\treturn false;\n+\t}\n+\t\n+\t/**\n+\t * Returns the node that follows the <i>node</i>, independently, if they have the same parent.\n+\t * @since 2.22\n+\t */\n+\tprotected INode getFollowingNode(ICompositeNode node) {\n+\t\tif (node != null) {\n+\t\t\tif (node.hasNextSibling()) {\n+\t\t\t\tINode nextSibling = node.getNextSibling();\n+\t\t\t\tIterator<ILeafNode> nextSiblingLeafNodes = nextSibling.getLeafNodes().iterator();\n+\t\t\t\tif (nextSiblingLeafNodes.hasNext()) {\n+\t\t\t\t\treturn nextSiblingLeafNodes.next();\n+\t\t\t\t} else {\n+\t\t\t\t\treturn getFollowingNode(node.getParent());\n+\t\t\t\t}\t\n+\t\t\t}\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\t/**\n+\t * @since 2.22\n+\t */\n+\tprivate boolean isWhitespace(String text) {", "originalCommit": "a9461115cff650e12320d22ba6f63d09ea8e8a91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0NTc2Mw==", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r423845763", "bodyText": "I changed the method visibility to protected.", "author": "miklossy", "createdAt": "2020-05-12T15:53:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0Mjg4Mg=="}], "type": "inlineReview"}, {"oid": "101baa8f82931865599a44c26b5e5fcbcafacda4", "url": "https://github.com/eclipse/xtext-core/commit/101baa8f82931865599a44c26b5e5fcbcafacda4", "message": "[https://github.com/eclipse/xtext-eclipse/issues/1221] Serializer.\n\n- Improve the serializeReplacement implementation by modifying the\nReplaceRegion length calculation so that it takes not only the\nICompositeNode.getTotalLength() into account, but considers if the new\ntext contains additional whitespaces and the old text is also followed\nby white spaces, than the whitespaces contained by the original document\nis also consumed by the quickfix.\n- Implement corresponding SerializerReplacementCalculationTest test case\nbased on the NoJdtTestLanguage.\n\nSigned-off-by: Tamas Miklossy <miklossy@itemis.de>", "committedDate": "2020-05-12T15:53:03Z", "type": "commit"}, {"oid": "101baa8f82931865599a44c26b5e5fcbcafacda4", "url": "https://github.com/eclipse/xtext-core/commit/101baa8f82931865599a44c26b5e5fcbcafacda4", "message": "[https://github.com/eclipse/xtext-eclipse/issues/1221] Serializer.\n\n- Improve the serializeReplacement implementation by modifying the\nReplaceRegion length calculation so that it takes not only the\nICompositeNode.getTotalLength() into account, but considers if the new\ntext contains additional whitespaces and the old text is also followed\nby white spaces, than the whitespaces contained by the original document\nis also consumed by the quickfix.\n- Implement corresponding SerializerReplacementCalculationTest test case\nbased on the NoJdtTestLanguage.\n\nSigned-off-by: Tamas Miklossy <miklossy@itemis.de>", "committedDate": "2020-05-12T15:53:03Z", "type": "forcePushed"}]}