{"pr_number": 1358, "pr_title": "[#1262] Prevent infinite loop with NodeIterator.", "pr_createdAt": "2020-01-19T15:15:11Z", "pr_url": "https://github.com/eclipse/xtext-core/pull/1358", "timeline": [{"oid": "da46e063881581aac4cc2d1966f732d862d957fb", "url": "https://github.com/eclipse/xtext-core/commit/da46e063881581aac4cc2d1966f732d862d957fb", "message": "[#1262] Prevent infinite loop with NodeIterator.\n\nThrow NullPointerException if null is passed to NodeIterator constructor\nto prevent iterator state where hasNext() and hasPrevious() always\nreturn true, but getNext() and getPrevious() always return null.\n\nSigned-off-by: Robert Lewis <rablewis@algo-pop.com>", "committedDate": "2020-01-19T15:10:26Z", "type": "commit"}, {"oid": "dc4699fb40b9d2e8276154729ec60ff969cda68b", "url": "https://github.com/eclipse/xtext-core/commit/dc4699fb40b9d2e8276154729ec60ff969cda68b", "message": "[#1262] Prevent infinite loop with NodeIterator.\n\nThrow NullPointerException if null is passed to NodeIterator constructor\nto prevent iterator state where hasNext() and hasPrevious() always\nreturn true, but getNext() and getPrevious() always return null.\nSimilarly, throw NPE for null passed to constructors of NodeIterable,\nBasicNodeIterator and BasicNodeIterable. Added unit tests for all four\nclasses.\n\nSigned-off-by: Robert Lewis <rablewis@algo-pop.com>", "committedDate": "2020-01-24T23:18:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxNjQzMQ==", "url": "https://github.com/eclipse/xtext-core/pull/1358#discussion_r370916431", "bodyText": "The copyright header should list your name I suppose", "author": "szarnekow", "createdAt": "2020-01-25T06:02:43Z", "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/nodemodel/BasicNodeIterable.java", "diffHunk": "@@ -0,0 +1,21 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.", "originalCommit": "dc4699fb40b9d2e8276154729ec60ff969cda68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyNjY0Mg==", "url": "https://github.com/eclipse/xtext-core/pull/1358#discussion_r370926642", "bodyText": "\"(c) 2020 Robert Lewis\" or \"(c) 2020 Robert Lewis and others\"?\nGiven the work I'm building on here, it could be argued this isn't 100% my work.", "author": "rablewis", "createdAt": "2020-01-25T10:41:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxNjQzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzMDY0Mg==", "url": "https://github.com/eclipse/xtext-core/pull/1358#discussion_r370930642", "bodyText": "we ususally do the and others pattern", "author": "cdietrich", "createdAt": "2020-01-25T12:19:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxNjQzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxNjQ3NA==", "url": "https://github.com/eclipse/xtext-core/pull/1358#discussion_r370916474", "bodyText": "The variable declaration is not necessary", "author": "szarnekow", "createdAt": "2020-01-25T06:03:42Z", "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/nodemodel/BasicNodeIteratorTest.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.eu) and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *******************************************************************************/\n+package org.eclipse.xtext.nodemodel;\n+\n+import java.util.NoSuchElementException;\n+\n+import org.eclipse.emf.ecore.EObject;\n+import org.eclipse.emf.ecore.impl.EObjectImpl;\n+import org.eclipse.xtext.nodemodel.impl.AbstractNode;\n+import org.eclipse.xtext.nodemodel.impl.NodeModelBuilder;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * @author Robert Lewis - Initial contribution and API\n+ */\n+public class BasicNodeIteratorTest {\n+\t\n+\tprivate static AbstractNode getSingleNode() {\n+\t\treturn new RootNode();\n+\t}\n+\t\n+\tpublic static AbstractNode nodeWithTwoSiblings() {\n+\t\tNodeModelBuilder builder = new NodeModelBuilder();\n+\t\tString text = \"alpha beta gamma\";\n+\t\t\n+\t\tRootNode root = new RootNode();\n+\t\troot.basicSetCompleteContent(text);\n+\t\t\n+\t\tEObject alpha = new EObjectImpl() {};\n+\t\tILeafNode alphaNode = builder.newLeafNode(text.indexOf(\"alpha\"), \"alpha\".length(), alpha, false, null, root);\n+\t\t\n+\t\tEObject beta = new EObjectImpl() {};\n+\t\tILeafNode betaNode = builder.newLeafNode(text.indexOf(\"beta\"), \"beta\".length(), beta, false, null, root);\n+\t\t\n+\t\tEObject gamma = new EObjectImpl() {};\n+\t\tILeafNode gammaNode = builder.newLeafNode(text.indexOf(\"gamma\"), \"gamma\".length(), gamma, false, null, root);\n+\t\t\n+\t\treturn root.basicGetFirstChild();\n+\n+\t}\n+\t\t\n+\t@Test(expected=NullPointerException.class)\n+\tpublic void testStartWithNullThrowsNPE() {\n+\t\tBasicNodeIterator it = new BasicNodeIterator(null);\n+\t}", "originalCommit": "dc4699fb40b9d2e8276154729ec60ff969cda68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzNzY3NA==", "url": "https://github.com/eclipse/xtext-core/pull/1358#discussion_r370937674", "bodyText": "Removed unnecessary variable declaration here and in other files.", "author": "rablewis", "createdAt": "2020-01-25T14:57:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxNjQ3NA=="}], "type": "inlineReview"}, {"oid": "792bfe3b295f9c2fbcc23ac6b5c90582fe332828", "url": "https://github.com/eclipse/xtext-core/commit/792bfe3b295f9c2fbcc23ac6b5c90582fe332828", "message": "[#1262] Prevent infinite loop with NodeIterator.\n\nThrow NullPointerException if null is passed to NodeIterator constructor\nto prevent iterator state where hasNext() and hasPrevious() always\nreturn true, but getNext() and getPrevious() always return null.\nSimilarly, throw NPE for null passed to constructors of NodeIterable,\nBasicNodeIterator and BasicNodeIterable. Added unit tests for all four\nclasses.\n\nSigned-off-by: Robert Lewis <rablewis@algo-pop.com>", "committedDate": "2020-01-25T14:51:39Z", "type": "commit"}]}