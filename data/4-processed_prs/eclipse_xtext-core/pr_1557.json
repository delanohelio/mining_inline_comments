{"pr_number": 1557, "pr_title": "made ContentAssistFragment2 better customizable", "pr_createdAt": "2020-08-19T08:19:15Z", "pr_url": "https://github.com/eclipse/xtext-core/pull/1557", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg0OTU4NQ==", "url": "https://github.com/eclipse/xtext-core/pull/1557#discussion_r472849585", "bodyText": "the current api here really is bad and i did not want to break. what do you think?", "author": "cdietrich", "createdAt": "2020-08-19T08:19:57Z", "path": "org.eclipse.xtext.xtext.generator/xtend-gen/org/eclipse/xtext/xtext/generator/ui/contentAssist/ContentAssistFragment2.java", "diffHunk": "@@ -241,6 +241,17 @@ protected GeneratedJavaFileAccess generateGenJavaProposalProvider() {\n         return _xblockexpression_1;\n       };\n       final ArrayList<AbstractRule> remainingRules = IterableExtensions.<AbstractRule, ArrayList<AbstractRule>>fold(this.getGrammar().getRules(), CollectionLiterals.<AbstractRule>newArrayList(), _function_1);\n+      _xblockexpression = this.generateGenJavaProposalProvider(assignments, remainingRules);\n+    }\n+    return _xblockexpression;\n+  }\n+  \n+  /**\n+   * @since 2.23\n+   */\n+  protected GeneratedJavaFileAccess generateGenJavaProposalProvider(final List<Assignment> assignments, final List<AbstractRule> remainingRules) {", "originalCommit": "e38a4e32e1ac81321e80a17a2d9013dba3bee517", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM5Mzk2Mg==", "url": "https://github.com/eclipse/xtext-core/pull/1557#discussion_r475393962", "bodyText": "While we are at it: does it make sense to extract methods getAssignments and getRemainingRules?", "author": "szarnekow", "createdAt": "2020-08-24T07:28:55Z", "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/ui/contentAssist/ContentAssistFragment2.xtend", "diffHunk": "@@ -159,11 +160,25 @@ class ContentAssistFragment2 extends AbstractInheritingFragment {\n \t\t// take the non-abstract class signature for the src-gen class in case of !generateStub\n \t\t//  as proposalProviders of sub languages refer to 'grammar.proposalProviderClass',\n \t\t//  see 'getGenProposalProviderSuperClass(...)'\n+\t\tgenerateGenJavaProposalProvider(assignments, remainingRules)", "originalCommit": "e38a4e32e1ac81321e80a17a2d9013dba3bee517", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM5NTEyMQ==", "url": "https://github.com/eclipse/xtext-core/pull/1557#discussion_r475395121", "bodyText": "I'd like to have a better name for remainingRules, maybe just rules or rulesToComplete ? Same for the method above.", "author": "szarnekow", "createdAt": "2020-08-24T07:31:16Z", "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/ui/contentAssist/ContentAssistFragment2.xtend", "diffHunk": "@@ -159,11 +160,25 @@ class ContentAssistFragment2 extends AbstractInheritingFragment {\n \t\t// take the non-abstract class signature for the src-gen class in case of !generateStub\n \t\t//  as proposalProviders of sub languages refer to 'grammar.proposalProviderClass',\n \t\t//  see 'getGenProposalProviderSuperClass(...)'\n+\t\tgenerateGenJavaProposalProvider(assignments, remainingRules)\n+\t}\n+\n+\t/**\n+\t * @since 2.23\n+\t */\n+\tprotected def GeneratedJavaFileAccess generateGenJavaProposalProvider(List<Assignment> assignments, List<AbstractRule> remainingRules) {\n \t\tval genClass =\n \t\t\tif (isGenerateStub) grammar.genProposalProviderClass else grammar.proposalProviderClass;\n \t\t\n+\t\tval superClass = grammar.genProposalProviderSuperClass\n+\t\tgenerateGenJavaProposalProvider(assignments, remainingRules, genClass, superClass)\n+\t}\n+\n+\t/**\n+\t * @since 2.23\n+\t */\n+\tprotected def GeneratedJavaFileAccess generateGenJavaProposalProvider(List<Assignment> assignments, List<AbstractRule> remainingRules, TypeReference genClass, TypeReference superClass) {", "originalCommit": "e38a4e32e1ac81321e80a17a2d9013dba3bee517", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4a894025d8b264b24f2e86c76d476f2fea1fa816", "url": "https://github.com/eclipse/xtext-core/commit/4a894025d8b264b24f2e86c76d476f2fea1fa816", "message": "made ContentAssistFragment2 better customizable\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-08-24T07:45:53Z", "type": "forcePushed"}, {"oid": "db33633f05cd201535d5e83866c8203388abaad1", "url": "https://github.com/eclipse/xtext-core/commit/db33633f05cd201535d5e83866c8203388abaad1", "message": "made ContentAssistFragment2 better customizable\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-08-24T07:51:17Z", "type": "commit"}, {"oid": "db33633f05cd201535d5e83866c8203388abaad1", "url": "https://github.com/eclipse/xtext-core/commit/db33633f05cd201535d5e83866c8203388abaad1", "message": "made ContentAssistFragment2 better customizable\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-08-24T07:51:17Z", "type": "forcePushed"}]}