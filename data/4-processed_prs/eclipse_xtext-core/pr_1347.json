{"pr_number": 1347, "pr_title": "Convert EMFGeneratorFragment2.trimMultiLineComment to an instance method", "pr_createdAt": "2020-01-09T08:49:42Z", "pr_url": "https://github.com/eclipse/xtext-core/pull/1347", "timeline": [{"oid": "87a94a2b35c5110d4b35c7578268fa8ecedbcad5", "url": "https://github.com/eclipse/xtext-core/commit/87a94a2b35c5110d4b35c7578268fa8ecedbcad5", "message": "Convert EMFGeneratorFragment2.trimMultiLineComment to an instance method\n\n- to be able to override that method in derived classes.\n\nSigned-off-by: Tamas Miklossy <miklossy@itemis.de>", "committedDate": "2020-01-09T08:47:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxODE3MQ==", "url": "https://github.com/eclipse/xtext-core/pull/1347#discussion_r364618171", "bodyText": "am not sure how api we consider this. @szarnekow what do you think?", "author": "cdietrich", "createdAt": "2020-01-09T08:51:11Z", "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/ecore/EMFGeneratorFragment2.xtend", "diffHunk": "@@ -623,7 +623,7 @@ class EMFGeneratorFragment2 extends AbstractXtextGeneratorFragment {\n \t\treturn genModel\n \t}\n \t\n-\tdef static String trimMultiLineComment(String string) {\n+\tdef String trimMultiLineComment(String string) {", "originalCommit": "87a94a2b35c5110d4b35c7578268fa8ecedbcad5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYyNTY4NA==", "url": "https://github.com/eclipse/xtext-core/pull/1347#discussion_r364625684", "bodyText": "My gut feeling is that this should have been an instance method from the beginning.\nQuestion though: Why do you want to change it now?", "author": "szarnekow", "createdAt": "2020-01-09T09:09:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxODE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYyNTkwNg==", "url": "https://github.com/eclipse/xtext-core/pull/1347#discussion_r364625906", "bodyText": "As in: What override scenario do you have in mind?", "author": "szarnekow", "createdAt": "2020-01-09T09:09:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxODE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYyNjE0Mg==", "url": "https://github.com/eclipse/xtext-core/pull/1347#discussion_r364626142", "bodyText": "exactly for this. if somebody wants to customize it .e.g cause they want to have\n***********************************\nin the comment", "author": "cdietrich", "createdAt": "2020-01-09T09:10:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxODE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYyNjU4MQ==", "url": "https://github.com/eclipse/xtext-core/pull/1347#discussion_r364626581", "bodyText": "(basicaly the old behaviour back)", "author": "cdietrich", "createdAt": "2020-01-09T09:11:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxODE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYyNzc4OA==", "url": "https://github.com/eclipse/xtext-core/pull/1347#discussion_r364627788", "bodyText": "I've doubts that someone will create an own plugin with a subtype to include that one in its build to be able to pick it up during the mwe2 workflow execution just for the sake of having /***** ... comments in the file header. And iff it is so very important, they can do it also right now.\nIn other words: If we want to have this kind of backwards compatibility, it should be a boolean flag for the \"legacy\" behaviour.\nBut as I said: This method should have have been an instance method from the beginning.", "author": "szarnekow", "createdAt": "2020-01-09T09:14:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxODE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYyODE0MA==", "url": "https://github.com/eclipse/xtext-core/pull/1347#discussion_r364628140", "bodyText": "We have just change the implementation of that method so that all starts are removed from the copyright header defined in the fileHeader configuration of the mwe2 workflow. I think this is a good default behaviour, but there should be a possibility to override that in client code if another behaviour is desired.", "author": "miklossy", "createdAt": "2020-01-09T09:14:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYxODE3MQ=="}], "type": "inlineReview"}]}