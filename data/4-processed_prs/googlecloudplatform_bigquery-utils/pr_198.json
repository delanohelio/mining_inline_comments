{"pr_number": 198, "pr_title": "time series UDFs", "pr_createdAt": "2020-11-24T17:27:49Z", "pr_url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198", "timeline": [{"oid": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/2ccad989b8953c1553f04b7d319c9dcacf392dd9", "message": "time series UDFs", "committedDate": "2020-11-24T17:03:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NzAyMA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529777020", "bodyText": "Newline to end file", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:05:47Z", "path": "udfs/community/linear_interpolate.sql", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+CREATE OR REPLACE function fn.linear_interpolate(\n+    pos INT64, prev STRUCT<x INT64,y FLOAT64>, next STRUCT<x INT64,y FLOAT64>)\n+AS (\n+CASE\n+  WHEN pos IS NULL OR prev IS NULL OR next IS NULL THEN null\n+  ELSE\n+  --y = m * x + b\n+  (next.y - prev.y)/(next.x - prev.x) * (pos - prev.x) + prev.y\n+END\n+);", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NzA2Mg==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529777062", "bodyText": "Newline to end file", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:05:52Z", "path": "udfs/community/ts_gen_keyed_timestamps.sql", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+* Generate an array of key-timestamp structs with the specified min, max and interval timeseries\n+* Expected Usage:\n+* SELECT *\n+* FROM UNNEST(bqutil.fn.ts_gen_keyed_timestamp(['abc'], 900, '2020-01-01', '2020-01-02') a\n+* LEFT JOIN dataset.table ON a.series_key = a.key AND a.tumble_val = b.timestamp\n+*/\n+CREATE OR REPLACE FUNCTION fn.ts_gen_keyed_timestamps(\n+    keys ARRAY<STRING>, tumble_seconds INT64, min_ts TIMESTAMP, max_ts Timestamp)\n+AS ((\n+ SELECT ARRAY_AGG(x)\n+ FROM (\n+   SELECT series_key, tumble_val\n+   FROM UNNEST(\n+     GENERATE_TIMESTAMP_ARRAY(\n+       bqutil.fn.ts_tumble(min_ts, tumble_seconds),\n+       bqutil.fn.ts_tumble(max_ts, tumble_seconds),\n+       INTERVAL tumble_seconds SECOND\n+     )\n+   ) AS tumble_val\n+   CROSS JOIN UNNEST(keys) AS series_key\n+ ) x\n+));", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NzEwOQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529777109", "bodyText": "Newline to end file", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:05:57Z", "path": "udfs/community/ts_interpolate_lin_interpolate.sql", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+* wrap fn.linear_interpolate to handle time series interpolation\n+* \n+* Example usage: use value if exists, otherwise attempt linear interpolation, else fill with zero\n+* \n+* WITH tbl AS (\n+*   SELECT 'abc' key, CAST('2021-01-01' AS TIMESTAMP) ts, 1 value, STRUCT(CAST('2021-01-01' AS TIMESTAMP) AS x, 1 AS y) coord\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-02' AS TIMESTAMP), null, null\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-03' AS TIMESTAMP), 3, STRUCT(CAST('2021-01-03' AS TIMESTAMP) AS x, 3 AS y)\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-04' AS TIMESTAMP), null, null\n+* )\n+* SELECT \n+*   *,\n+*   COALESCE(coord.y,\n+*     fn.ts_lin_interpolate(\n+*       ts,\n+*       LAST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING),\n+*       FIRST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING)\n+*       ),\n+*       0\n+*   ) AS intrp\n+* FROM tbl\n+*/\n+\n+CREATE OR REPLACE FUNCTION fn.ts_lin_interpolate(\n+        pos TIMESTAMP,\n+        prev STRUCT<x TIMESTAMP, y FLOAT64>,\n+        next STRUCT<x TIMESTAMP, y FLOAT64>)\n+AS (\n+ CASE\n+    WHEN pos IS NULL OR prev IS NULL or next IS NULL THEN null\n+    ELSE\n+        bqutil.fn.linear_interpolate(\n+            unix_seconds(pos),\n+            STRUCT(unix_seconds(prev.x) AS x, prev.y AS y),\n+            STRUCT(unix_seconds(next.x) AS x, next.y AS y)\n+        )\n+ END\n+);", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NzE2Ng==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529777166", "bodyText": "Newline to end file", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:06:02Z", "path": "udfs/community/ts_tumble.sql", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+--divides a timestamp into a [tumble window](https://cloud.google.com/dataflow/docs/reference/sql/streaming-extensions#tumble)\n+--specified in seconds \n+CREATE OR REPLACE FUNCTION fn.ts_tumble(val TIMESTAMP, tumble_seconds INT64)\n+AS (\n+ timestamp_seconds(div(unix_seconds(val), tumble_seconds) *  tumble_seconds))\n+);", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3OTUxNQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529779515", "bodyText": "Indent by 2 within AS block", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:09:52Z", "path": "udfs/community/linear_interpolate.sql", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+CREATE OR REPLACE function fn.linear_interpolate(\n+    pos INT64, prev STRUCT<x INT64,y FLOAT64>, next STRUCT<x INT64,y FLOAT64>)\n+AS (\n+CASE\n+  WHEN pos IS NULL OR prev IS NULL OR next IS NULL THEN null\n+  ELSE\n+  --y = m * x + b\n+  (next.y - prev.y)/(next.x - prev.x) * (pos - prev.x) + prev.y\n+END", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDczNQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529780735", "bodyText": "Add a space on each side of the division operator", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:11:51Z", "path": "udfs/community/linear_interpolate.sql", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+CREATE OR REPLACE function fn.linear_interpolate(\n+    pos INT64, prev STRUCT<x INT64,y FLOAT64>, next STRUCT<x INT64,y FLOAT64>)\n+AS (\n+CASE\n+  WHEN pos IS NULL OR prev IS NULL OR next IS NULL THEN null\n+  ELSE\n+  --y = m * x + b\n+  (next.y - prev.y)/(next.x - prev.x) * (pos - prev.x) + prev.y", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDkzNg==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529780936", "bodyText": "Capitalize the last null", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:12:12Z", "path": "udfs/community/linear_interpolate.sql", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+CREATE OR REPLACE function fn.linear_interpolate(\n+    pos INT64, prev STRUCT<x INT64,y FLOAT64>, next STRUCT<x INT64,y FLOAT64>)\n+AS (\n+CASE\n+  WHEN pos IS NULL OR prev IS NULL OR next IS NULL THEN null", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4Mjg5NA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529782894", "bodyText": "Add a comment above this describing the function, inputs, and outputs.\nSimilar to:\nhttps://github.com/GoogleCloudPlatform/bigquery-utils/blob/master/udfs/community/csv_to_struct.sql", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:15:21Z", "path": "udfs/community/linear_interpolate.sql", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+CREATE OR REPLACE function fn.linear_interpolate(", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MzQ1Mg==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529783452", "bodyText": "Structure above comment.\nSimilar to:\nhttps://github.com/GoogleCloudPlatform/bigquery-utils/blob/master/udfs/community/csv_to_struct.sql", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:16:16Z", "path": "udfs/community/ts_gen_keyed_timestamps.sql", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+* Generate an array of key-timestamp structs with the specified min, max and interval timeseries\n+* Expected Usage:\n+* SELECT *\n+* FROM UNNEST(bqutil.fn.ts_gen_keyed_timestamp(['abc'], 900, '2020-01-01', '2020-01-02') a\n+* LEFT JOIN dataset.table ON a.series_key = a.key AND a.tumble_val = b.timestamp\n+*/\n+CREATE OR REPLACE FUNCTION fn.ts_gen_keyed_timestamps(", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NDEzNA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529784134", "bodyText": "Structure above comment for consistency with the others.", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:17:26Z", "path": "udfs/community/ts_interpolate_lin_interpolate.sql", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+* wrap fn.linear_interpolate to handle time series interpolation\n+* \n+* Example usage: use value if exists, otherwise attempt linear interpolation, else fill with zero\n+* \n+* WITH tbl AS (\n+*   SELECT 'abc' key, CAST('2021-01-01' AS TIMESTAMP) ts, 1 value, STRUCT(CAST('2021-01-01' AS TIMESTAMP) AS x, 1 AS y) coord\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-02' AS TIMESTAMP), null, null\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-03' AS TIMESTAMP), 3, STRUCT(CAST('2021-01-03' AS TIMESTAMP) AS x, 3 AS y)\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-04' AS TIMESTAMP), null, null\n+* )\n+* SELECT \n+*   *,\n+*   COALESCE(coord.y,\n+*     fn.ts_lin_interpolate(\n+*       ts,\n+*       LAST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING),\n+*       FIRST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING)\n+*       ),\n+*       0\n+*   ) AS intrp\n+* FROM tbl\n+*/\n+\n+CREATE OR REPLACE FUNCTION fn.ts_lin_interpolate(", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NDU4MQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529784581", "bodyText": "Perhaps this function should be named: fn.ts_linear_interpolate", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:18:09Z", "path": "udfs/community/ts_interpolate_lin_interpolate.sql", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+* wrap fn.linear_interpolate to handle time series interpolation\n+* \n+* Example usage: use value if exists, otherwise attempt linear interpolation, else fill with zero\n+* \n+* WITH tbl AS (\n+*   SELECT 'abc' key, CAST('2021-01-01' AS TIMESTAMP) ts, 1 value, STRUCT(CAST('2021-01-01' AS TIMESTAMP) AS x, 1 AS y) coord\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-02' AS TIMESTAMP), null, null\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-03' AS TIMESTAMP), 3, STRUCT(CAST('2021-01-03' AS TIMESTAMP) AS x, 3 AS y)\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-04' AS TIMESTAMP), null, null\n+* )\n+* SELECT \n+*   *,\n+*   COALESCE(coord.y,\n+*     fn.ts_lin_interpolate(\n+*       ts,\n+*       LAST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING),\n+*       FIRST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING)\n+*       ),\n+*       0\n+*   ) AS intrp\n+* FROM tbl\n+*/\n+\n+CREATE OR REPLACE FUNCTION fn.ts_lin_interpolate(", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NTI2OA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529785268", "bodyText": "Indentation should be 2 spaces.", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:19:08Z", "path": "udfs/community/ts_interpolate_lin_interpolate.sql", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+* wrap fn.linear_interpolate to handle time series interpolation\n+* \n+* Example usage: use value if exists, otherwise attempt linear interpolation, else fill with zero\n+* \n+* WITH tbl AS (\n+*   SELECT 'abc' key, CAST('2021-01-01' AS TIMESTAMP) ts, 1 value, STRUCT(CAST('2021-01-01' AS TIMESTAMP) AS x, 1 AS y) coord\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-02' AS TIMESTAMP), null, null\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-03' AS TIMESTAMP), 3, STRUCT(CAST('2021-01-03' AS TIMESTAMP) AS x, 3 AS y)\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-04' AS TIMESTAMP), null, null\n+* )\n+* SELECT \n+*   *,\n+*   COALESCE(coord.y,\n+*     fn.ts_lin_interpolate(\n+*       ts,\n+*       LAST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING),\n+*       FIRST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING)\n+*       ),\n+*       0\n+*   ) AS intrp\n+* FROM tbl\n+*/\n+\n+CREATE OR REPLACE FUNCTION fn.ts_lin_interpolate(\n+        pos TIMESTAMP,\n+        prev STRUCT<x TIMESTAMP, y FLOAT64>,\n+        next STRUCT<x TIMESTAMP, y FLOAT64>)\n+AS (\n+ CASE", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NTQwMQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529785401", "bodyText": "Indentation should be 2 spaces.", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:19:18Z", "path": "udfs/community/ts_interpolate_lin_interpolate.sql", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+* wrap fn.linear_interpolate to handle time series interpolation\n+* \n+* Example usage: use value if exists, otherwise attempt linear interpolation, else fill with zero\n+* \n+* WITH tbl AS (\n+*   SELECT 'abc' key, CAST('2021-01-01' AS TIMESTAMP) ts, 1 value, STRUCT(CAST('2021-01-01' AS TIMESTAMP) AS x, 1 AS y) coord\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-02' AS TIMESTAMP), null, null\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-03' AS TIMESTAMP), 3, STRUCT(CAST('2021-01-03' AS TIMESTAMP) AS x, 3 AS y)\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-04' AS TIMESTAMP), null, null\n+* )\n+* SELECT \n+*   *,\n+*   COALESCE(coord.y,\n+*     fn.ts_lin_interpolate(\n+*       ts,\n+*       LAST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING),\n+*       FIRST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING)\n+*       ),\n+*       0\n+*   ) AS intrp\n+* FROM tbl\n+*/\n+\n+CREATE OR REPLACE FUNCTION fn.ts_lin_interpolate(\n+        pos TIMESTAMP,\n+        prev STRUCT<x TIMESTAMP, y FLOAT64>,\n+        next STRUCT<x TIMESTAMP, y FLOAT64>)\n+AS (\n+ CASE\n+    WHEN pos IS NULL OR prev IS NULL or next IS NULL THEN null\n+    ELSE\n+        bqutil.fn.linear_interpolate(\n+            unix_seconds(pos),\n+            STRUCT(unix_seconds(prev.x) AS x, prev.y AS y),\n+            STRUCT(unix_seconds(next.x) AS x, next.y AS y)\n+        )\n+ END", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NTYxMQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529785611", "bodyText": "Capitalize last NULL", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:19:39Z", "path": "udfs/community/ts_interpolate_lin_interpolate.sql", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+* wrap fn.linear_interpolate to handle time series interpolation\n+* \n+* Example usage: use value if exists, otherwise attempt linear interpolation, else fill with zero\n+* \n+* WITH tbl AS (\n+*   SELECT 'abc' key, CAST('2021-01-01' AS TIMESTAMP) ts, 1 value, STRUCT(CAST('2021-01-01' AS TIMESTAMP) AS x, 1 AS y) coord\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-02' AS TIMESTAMP), null, null\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-03' AS TIMESTAMP), 3, STRUCT(CAST('2021-01-03' AS TIMESTAMP) AS x, 3 AS y)\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-04' AS TIMESTAMP), null, null\n+* )\n+* SELECT \n+*   *,\n+*   COALESCE(coord.y,\n+*     fn.ts_lin_interpolate(\n+*       ts,\n+*       LAST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING),\n+*       FIRST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING)\n+*       ),\n+*       0\n+*   ) AS intrp\n+* FROM tbl\n+*/\n+\n+CREATE OR REPLACE FUNCTION fn.ts_lin_interpolate(\n+        pos TIMESTAMP,\n+        prev STRUCT<x TIMESTAMP, y FLOAT64>,\n+        next STRUCT<x TIMESTAMP, y FLOAT64>)\n+AS (\n+ CASE\n+    WHEN pos IS NULL OR prev IS NULL or next IS NULL THEN null", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NjQ3MA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529786470", "bodyText": "Capitalize UNIX_SECONDS for consistency with other system function calls.", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:20:56Z", "path": "udfs/community/ts_interpolate_lin_interpolate.sql", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+* wrap fn.linear_interpolate to handle time series interpolation\n+* \n+* Example usage: use value if exists, otherwise attempt linear interpolation, else fill with zero\n+* \n+* WITH tbl AS (\n+*   SELECT 'abc' key, CAST('2021-01-01' AS TIMESTAMP) ts, 1 value, STRUCT(CAST('2021-01-01' AS TIMESTAMP) AS x, 1 AS y) coord\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-02' AS TIMESTAMP), null, null\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-03' AS TIMESTAMP), 3, STRUCT(CAST('2021-01-03' AS TIMESTAMP) AS x, 3 AS y)\n+*   UNION ALL\n+*   SELECT 'abc', CAST('2021-01-04' AS TIMESTAMP), null, null\n+* )\n+* SELECT \n+*   *,\n+*   COALESCE(coord.y,\n+*     fn.ts_lin_interpolate(\n+*       ts,\n+*       LAST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING),\n+*       FIRST_VALUE(coord IGNORE NULLS)\n+*         OVER (PARTITION BY key\n+*           ORDER BY unix_seconds(ts) ASC\n+*           RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING)\n+*       ),\n+*       0\n+*   ) AS intrp\n+* FROM tbl\n+*/\n+\n+CREATE OR REPLACE FUNCTION fn.ts_lin_interpolate(\n+        pos TIMESTAMP,\n+        prev STRUCT<x TIMESTAMP, y FLOAT64>,\n+        next STRUCT<x TIMESTAMP, y FLOAT64>)\n+AS (\n+ CASE\n+    WHEN pos IS NULL OR prev IS NULL or next IS NULL THEN null\n+    ELSE\n+        bqutil.fn.linear_interpolate(\n+            unix_seconds(pos),\n+            STRUCT(unix_seconds(prev.x) AS x, prev.y AS y),\n+            STRUCT(unix_seconds(next.x) AS x, next.y AS y)", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NjkwMw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529786903", "bodyText": "Standardize the header with the others.", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:21:35Z", "path": "udfs/community/ts_tumble.sql", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+--divides a timestamp into a [tumble window](https://cloud.google.com/dataflow/docs/reference/sql/streaming-extensions#tumble)\n+--specified in seconds \n+CREATE OR REPLACE FUNCTION fn.ts_tumble(val TIMESTAMP, tumble_seconds INT64)", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NzA2Ng==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529787066", "bodyText": "Capitalize function calls for consistency with the others.", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:21:53Z", "path": "udfs/community/ts_tumble.sql", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+--divides a timestamp into a [tumble window](https://cloud.google.com/dataflow/docs/reference/sql/streaming-extensions#tumble)\n+--specified in seconds \n+CREATE OR REPLACE FUNCTION fn.ts_tumble(val TIMESTAMP, tumble_seconds INT64)\n+AS (\n+ timestamp_seconds(div(unix_seconds(val), tumble_seconds) *  tumble_seconds))", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4ODgyMQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/198#discussion_r529788821", "bodyText": "You have an extra ) at the end of the timestamp_seconds function call which causes this UDF to be invalid.", "author": "ryanmcdowell", "createdAt": "2020-11-24T18:24:46Z", "path": "udfs/community/ts_tumble.sql", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+--divides a timestamp into a [tumble window](https://cloud.google.com/dataflow/docs/reference/sql/streaming-extensions#tumble)\n+--specified in seconds \n+CREATE OR REPLACE FUNCTION fn.ts_tumble(val TIMESTAMP, tumble_seconds INT64)\n+AS (\n+ timestamp_seconds(div(unix_seconds(val), tumble_seconds) *  tumble_seconds))", "originalCommit": "2ccad989b8953c1553f04b7d319c9dcacf392dd9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0411054ad24845aeee1bad7883591a4f21be9b0c", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/0411054ad24845aeee1bad7883591a4f21be9b0c", "message": "code review changes", "committedDate": "2020-11-25T02:16:41Z", "type": "commit"}, {"oid": "9bf808c98fa6c49039d141dfb6642317b3a0ca29", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/9bf808c98fa6c49039d141dfb6642317b3a0ca29", "message": "Merge branch 'master' into time-series", "committedDate": "2020-12-01T20:13:38Z", "type": "commit"}]}