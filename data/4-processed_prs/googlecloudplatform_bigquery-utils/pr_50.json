{"pr_number": 50, "pr_title": "v2 BigQuery Audit Logs View", "pr_createdAt": "2020-04-21T02:44:15Z", "pr_url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50", "timeline": [{"oid": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/d21696d8e3d406879ad914d8b6da8a8c7a939485", "message": "Squashing commits", "committedDate": "2020-05-28T21:45:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2MDEyNw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436760127", "bodyText": "May be good to reference aggregated log exports somewhere so people know they can do this for their entire organization.", "author": "ryanmcdowell", "createdAt": "2020-06-08T14:39:34Z", "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,48 @@\n+There are two views in this folder: and (query_audit_v2.sql in this folder)\n+query_audit is a view that simplifies querying audit logs to power dashboards,\n+where the logs are old\n+\n+query_audit_new is also a view that simplifies querying BigQueryMetaData logs,\n+but operates for new logs\n+\n+### [bigquery_audit_log_v2.sql](/views/audit/bigquery_audit_log_v2.sql)\n+\n+BigQuery SELECT statement to help you extract and format BigQueryMetaData\n+events.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2MDk0Mg==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436760942", "bodyText": "Comment on why alpha. I believe it's because of the --use-partitioned-tables", "author": "ryanmcdowell", "createdAt": "2020-06-08T14:40:44Z", "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,48 @@\n+There are two views in this folder: and (query_audit_v2.sql in this folder)\n+query_audit is a view that simplifies querying audit logs to power dashboards,\n+where the logs are old\n+\n+query_audit_new is also a view that simplifies querying BigQueryMetaData logs,\n+but operates for new logs\n+\n+### [bigquery_audit_log_v2.sql](/views/audit/bigquery_audit_log_v2.sql)\n+\n+BigQuery SELECT statement to help you extract and format BigQueryMetaData\n+events.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+          gcloud alpha logging sinks create my-example-sink \\ ", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTY0MjQ2Nw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r655642467", "bodyText": "No longer in alpha", "author": "danieldeleo", "createdAt": "2021-06-21T19:18:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2MDk0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2NDk3Mw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436764973", "bodyText": "Does it though?", "author": "ryanmcdowell", "createdAt": "2020-06-08T14:46:14Z", "path": "views/audit/bigquery_audit_log_v1.sql", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit\n+ * Author: ryanmcdowell, freedomofnet, mihirborkar\n+ * Description:\n+ * This SQL Script creates a materialized source table acting as input to the Dashboard.", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2NTE0Nw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436765147", "bodyText": "Add trailing newline", "author": "ryanmcdowell", "createdAt": "2020-06-08T14:46:29Z", "path": "views/audit/bigquery_audit_log_v1.sql", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit\n+ * Author: ryanmcdowell, freedomofnet, mihirborkar\n+ * Description:\n+ * This SQL Script creates a materialized source table acting as input to the Dashboard.\n+ */\n+\n+WITH BQAudit AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    protopayload_auditlog.requestMetadata.callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.projectId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.jobId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.createTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code\n+    AS errorCode,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.message\n+    AS errorMessage,\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, MILLISECOND)\n+      AS runtimeMs,\n+    /* This code extracts the column specific to the Copy operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.tableCopy,\n+    /* This code extracts the column specific to the Extract operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.extract,\n+    /* The following code extracts the columns specific to the Load operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalLoadOutputBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.load,\n+    /* The following code extracts columns specific to Query operation in BQ */\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)\n+      AS runtimeSecs,\n+    CAST(CEILING((TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)) / 60) AS INT64)\n+      AS executionMinuteBuckets,\n+    IF(COALESCE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code) IS NULL, TRUE, FALSE\n+    ) AS isCached,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalTablesProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalViewsProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalBilledBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.billingTier,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.query,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedTables,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedViews\n+    /* This ends the code snippet that extracts columns specific to Query operation in BQ */\n+  FROM\n+    `data-analytics-pocs.billing.cloudaudit_googleapis_com_data_access_*`\n+  WHERE\n+    protopayload_auditlog.serviceName = 'bigquery.googleapis.com'\n+    AND protopayload_auditlog.methodName = 'jobservice.jobcompleted'\n+    AND protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName IN\n+    (\n+      'table_copy_job_completed',\n+      'query_job_completed',\n+      'extract_job_completed',\n+      'load_job_completed'\n+    )\n+    AND DATE_DIFF(CURRENT_DATE(), DATE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime), month) <= 12\n+)\n+\n+\n+/* This code queries BQAudit */\n+\n+SELECT\n+  principalEmail,\n+  callerIp,\n+  serviceName,\n+  methodName,\n+  eventName,\n+  projectId,\n+  jobId,\n+  errorCode,\n+  errorMessage,\n+  STRUCT(\n+    EXTRACT(MINUTE FROM startTime) AS minuteOfDay,\n+    EXTRACT(HOUR FROM startTime) AS hourOfDay,\n+    EXTRACT(DAYOFWEEK FROM startTime) - 1 AS dayOfWeek,\n+    EXTRACT(DAYOFYEAR FROM startTime) AS dayOfYear,\n+    EXTRACT(WEEK FROM startTime) AS week,\n+    EXTRACT(MONTH FROM startTime) AS month,\n+    EXTRACT(QUARTER FROM startTime) AS quarter,\n+    EXTRACT(YEAR FROM startTime) AS year\n+  ) AS date,\n+  createTime,\n+  startTime,\n+  endTime,\n+  runtimeMs,\n+  runtimeSecs,\n+  tableCopy, /* This code queries data specific to the Copy operation */\n+  CONCAT(tableCopy.destinationTable.datasetId, '.', tableCopy.destinationTable.tableId)\n+    AS tableCopyDestinationTableRelativePath,\n+  CONCAT(tableCopy.destinationTable.projectId, '.', tableCopy.destinationTable.datasetId, '.',\n+    tableCopy.destinationTable.tableId) AS tableCopyDestinationTableAbsolutePath,\n+  IF(eventName = 'table_copy_job_completed', 1, 0) AS numCopies, /* This code queries data specific to the Copy operation */\n+  /* The following code queries data specific to the Load operation in BQ */\n+  totalLoadOutputBytes,\n+  (totalLoadOutputBytes / pow(2,30)) AS totalLoadOutputGigabytes,\n+  (totalLoadOutputBytes / pow(2,40)) AS totalLoadOutputTerabytes,\n+  STRUCT(\n+    load.sourceUris,\n+    STRUCT(\n+      load.destinationTable.projectId,\n+      load.destinationTable.datasetId,\n+      load.destinationTable.tableId,\n+      CONCAT(load.destinationTable.datasetId, '.', load.destinationTable.tableId) AS relativePath,\n+      CONCAT(load.destinationTable.projectId, '.', load.destinationTable.datasetId,\n+        '.', load.destinationTable.tableId) AS absolutePath\n+    ) AS destinationTable,\n+    load.createDisposition,\n+    load.writeDisposition,\n+    load.schemaJson\n+  ) AS load,\n+  IF(eventName = 'load_job_completed', 1, 0) AS numLoads,\n+  /* This ends the code snippet that queries columns specific to the Load operation in BQ */\n+  /* The following code queries data specific to the Extract operation in BQ */\n+  REGEXP_CONTAINS(jobId, 'beam') AS isBeamJob,\n+  STRUCT(\n+    `extract`.destinationUris,\n+    STRUCT(\n+      `extract`.sourceTable.projectId,\n+      `extract`.sourceTable.datasetId,\n+      `extract`.sourceTable.tableId,\n+      CONCAT(`extract`.sourceTable.datasetId, '.', `extract`.sourceTable.tableId)\n+      AS relativeTableRef,\n+      CONCAT(`extract`.sourceTable.projectId, '.', `extract`.sourceTable.datasetId,\n+      '.', `extract`.sourceTable.tableId) AS absoluteTableRef\n+    ) AS sourceTable\n+  ) AS `extract`,\n+  IF(eventName = 'extract_job_completed', 1, 0) AS numExtracts,\n+  /* This ends the code snippet that queries columns specific to the Extract operation in BQ */\n+  /* The following code queries data specific to the Query operation in BQ */\n+  REGEXP_CONTAINS(query.query, 'cloudaudit_googleapis_com_data_access_') AS isAuditDashboardQuery,\n+  errorCode IS NOT NULL AS isError,\n+  REGEXP_CONTAINS(errorMessage, 'timeout') AS isTimeout,\n+  isCached,\n+  IF(isCached, 1, 0) AS numCached,\n+  totalSlotMs,\n+  totalSlotMs / runtimeMs AS avgSlots,\n+  /* The following statement breaks down the query into minute buckets\n+   * and provides the average slot usage within that minute. This is a\n+   * crude way of making it so you can retrieve the average slot utilization\n+   * for a particular minute across multiple queries.\n+   */\n+  ARRAY(\n+    SELECT\n+      STRUCT(\n+        TIMESTAMP_TRUNC(TIMESTAMP_ADD(startTime, INTERVAL bucket_num MINUTE),\n+        MINUTE) AS time,\n+        totalSlotMs / runtimeMs AS avgSlotUsage\n+      )\n+    FROM\n+      UNNEST(GENERATE_ARRAY(1, executionMinuteBuckets)) AS bucket_num\n+  ) AS executionTimeline,\n+  totalTablesProcessed,\n+  totalViewsProcessed,\n+  totalProcessedBytes,\n+  totalBilledBytes,\n+  (totalBilledBytes / pow(2,30)) AS totalBilledGigabytes,\n+  (totalBilledBytes / pow(2,40)) AS totalBilledTerabytes,\n+  (totalBilledBytes / pow(2,40)) * 5 AS estimatedCostUsd,\n+  billingTier,\n+  query,\n+  CONCAT(query.destinationTable.datasetId, '.', query.destinationTable.tableId) AS queryDestinationTableRelativePath,\n+  CONCAT(query.destinationTable.projectId, '.', query.destinationTable.datasetId, '.',\n+    query.destinationTable.tableId) AS queryDestinationTableAbsolutePath,\n+  referencedTables,\n+  referencedViews,\n+  IF(eventName = 'query_job_completed', 1, 0) AS queries\n+  /* This ends the code snippet that queries columns specific to the Query operation in BQ */\n+FROM\n+  BQAudit", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2NTgzOQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436765839", "bodyText": "Does this comment provide any value?", "author": "ryanmcdowell", "createdAt": "2020-06-08T14:47:31Z", "path": "views/audit/bigquery_audit_log_v1.sql", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit\n+ * Author: ryanmcdowell, freedomofnet, mihirborkar\n+ * Description:\n+ * This SQL Script creates a materialized source table acting as input to the Dashboard.\n+ */\n+\n+WITH BQAudit AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    protopayload_auditlog.requestMetadata.callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.projectId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.jobId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.createTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code\n+    AS errorCode,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.message\n+    AS errorMessage,\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, MILLISECOND)\n+      AS runtimeMs,\n+    /* This code extracts the column specific to the Copy operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.tableCopy,\n+    /* This code extracts the column specific to the Extract operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.extract,\n+    /* The following code extracts the columns specific to the Load operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalLoadOutputBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.load,\n+    /* The following code extracts columns specific to Query operation in BQ */\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)\n+      AS runtimeSecs,\n+    CAST(CEILING((TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)) / 60) AS INT64)\n+      AS executionMinuteBuckets,\n+    IF(COALESCE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code) IS NULL, TRUE, FALSE\n+    ) AS isCached,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalTablesProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalViewsProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalBilledBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.billingTier,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.query,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedTables,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedViews\n+    /* This ends the code snippet that extracts columns specific to Query operation in BQ */", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2NjgxNQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436766815", "bodyText": "These comments should be consistent with the ones below. I would reword these types of comments to:\nThe following extracts ...", "author": "ryanmcdowell", "createdAt": "2020-06-08T14:48:54Z", "path": "views/audit/bigquery_audit_log_v1.sql", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit\n+ * Author: ryanmcdowell, freedomofnet, mihirborkar\n+ * Description:\n+ * This SQL Script creates a materialized source table acting as input to the Dashboard.\n+ */\n+\n+WITH BQAudit AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    protopayload_auditlog.requestMetadata.callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.projectId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.jobId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.createTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code\n+    AS errorCode,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.message\n+    AS errorMessage,\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, MILLISECOND)\n+      AS runtimeMs,\n+    /* This code extracts the column specific to the Copy operation in BQ */", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2NzE3Mw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436767173", "bodyText": "Should we be including our project-id?", "author": "ryanmcdowell", "createdAt": "2020-06-08T14:49:25Z", "path": "views/audit/bigquery_audit_log_v1.sql", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit\n+ * Author: ryanmcdowell, freedomofnet, mihirborkar\n+ * Description:\n+ * This SQL Script creates a materialized source table acting as input to the Dashboard.\n+ */\n+\n+WITH BQAudit AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    protopayload_auditlog.requestMetadata.callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.projectId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.jobId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.createTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code\n+    AS errorCode,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.message\n+    AS errorMessage,\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, MILLISECOND)\n+      AS runtimeMs,\n+    /* This code extracts the column specific to the Copy operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.tableCopy,\n+    /* This code extracts the column specific to the Extract operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.extract,\n+    /* The following code extracts the columns specific to the Load operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalLoadOutputBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.load,\n+    /* The following code extracts columns specific to Query operation in BQ */\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)\n+      AS runtimeSecs,\n+    CAST(CEILING((TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)) / 60) AS INT64)\n+      AS executionMinuteBuckets,\n+    IF(COALESCE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code) IS NULL, TRUE, FALSE\n+    ) AS isCached,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalTablesProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalViewsProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalBilledBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.billingTier,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.query,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedTables,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedViews\n+    /* This ends the code snippet that extracts columns specific to Query operation in BQ */\n+  FROM\n+    `data-analytics-pocs.billing.cloudaudit_googleapis_com_data_access_*`", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc2NzkwMA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436767900", "bodyText": "Reword this comment.\nThe following builds a user-friendly projection of the audit data.", "author": "ryanmcdowell", "createdAt": "2020-06-08T14:50:29Z", "path": "views/audit/bigquery_audit_log_v1.sql", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit\n+ * Author: ryanmcdowell, freedomofnet, mihirborkar\n+ * Description:\n+ * This SQL Script creates a materialized source table acting as input to the Dashboard.\n+ */\n+\n+WITH BQAudit AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    protopayload_auditlog.requestMetadata.callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.projectId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.jobId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.createTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code\n+    AS errorCode,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.message\n+    AS errorMessage,\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, MILLISECOND)\n+      AS runtimeMs,\n+    /* This code extracts the column specific to the Copy operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.tableCopy,\n+    /* This code extracts the column specific to the Extract operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.extract,\n+    /* The following code extracts the columns specific to the Load operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalLoadOutputBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.load,\n+    /* The following code extracts columns specific to Query operation in BQ */\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)\n+      AS runtimeSecs,\n+    CAST(CEILING((TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)) / 60) AS INT64)\n+      AS executionMinuteBuckets,\n+    IF(COALESCE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code) IS NULL, TRUE, FALSE\n+    ) AS isCached,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalTablesProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalViewsProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalBilledBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.billingTier,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.query,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedTables,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedViews\n+    /* This ends the code snippet that extracts columns specific to Query operation in BQ */\n+  FROM\n+    `data-analytics-pocs.billing.cloudaudit_googleapis_com_data_access_*`\n+  WHERE\n+    protopayload_auditlog.serviceName = 'bigquery.googleapis.com'\n+    AND protopayload_auditlog.methodName = 'jobservice.jobcompleted'\n+    AND protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName IN\n+    (\n+      'table_copy_job_completed',\n+      'query_job_completed',\n+      'extract_job_completed',\n+      'load_job_completed'\n+    )\n+    AND DATE_DIFF(CURRENT_DATE(), DATE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime), month) <= 12\n+)\n+\n+\n+/* This code queries BQAudit */", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3MDE5Mw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436770193", "bodyText": "Should we do the same for COPY as we do for LOADs in building a STRUCT to hold all of that event's fields? The inconsistency between the two is a bit odd.", "author": "ryanmcdowell", "createdAt": "2020-06-08T14:53:15Z", "path": "views/audit/bigquery_audit_log_v1.sql", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit\n+ * Author: ryanmcdowell, freedomofnet, mihirborkar\n+ * Description:\n+ * This SQL Script creates a materialized source table acting as input to the Dashboard.\n+ */\n+\n+WITH BQAudit AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    protopayload_auditlog.requestMetadata.callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.projectId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.jobId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.createTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code\n+    AS errorCode,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.message\n+    AS errorMessage,\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, MILLISECOND)\n+      AS runtimeMs,\n+    /* This code extracts the column specific to the Copy operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.tableCopy,\n+    /* This code extracts the column specific to the Extract operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.extract,\n+    /* The following code extracts the columns specific to the Load operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalLoadOutputBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.load,\n+    /* The following code extracts columns specific to Query operation in BQ */\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)\n+      AS runtimeSecs,\n+    CAST(CEILING((TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)) / 60) AS INT64)\n+      AS executionMinuteBuckets,\n+    IF(COALESCE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code) IS NULL, TRUE, FALSE\n+    ) AS isCached,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalTablesProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalViewsProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalBilledBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.billingTier,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.query,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedTables,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedViews\n+    /* This ends the code snippet that extracts columns specific to Query operation in BQ */\n+  FROM\n+    `data-analytics-pocs.billing.cloudaudit_googleapis_com_data_access_*`\n+  WHERE\n+    protopayload_auditlog.serviceName = 'bigquery.googleapis.com'\n+    AND protopayload_auditlog.methodName = 'jobservice.jobcompleted'\n+    AND protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName IN\n+    (\n+      'table_copy_job_completed',\n+      'query_job_completed',\n+      'extract_job_completed',\n+      'load_job_completed'\n+    )\n+    AND DATE_DIFF(CURRENT_DATE(), DATE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime), month) <= 12\n+)\n+\n+\n+/* This code queries BQAudit */\n+\n+SELECT\n+  principalEmail,\n+  callerIp,\n+  serviceName,\n+  methodName,\n+  eventName,\n+  projectId,\n+  jobId,\n+  errorCode,\n+  errorMessage,\n+  STRUCT(\n+    EXTRACT(MINUTE FROM startTime) AS minuteOfDay,\n+    EXTRACT(HOUR FROM startTime) AS hourOfDay,\n+    EXTRACT(DAYOFWEEK FROM startTime) - 1 AS dayOfWeek,\n+    EXTRACT(DAYOFYEAR FROM startTime) AS dayOfYear,\n+    EXTRACT(WEEK FROM startTime) AS week,\n+    EXTRACT(MONTH FROM startTime) AS month,\n+    EXTRACT(QUARTER FROM startTime) AS quarter,\n+    EXTRACT(YEAR FROM startTime) AS year\n+  ) AS date,\n+  createTime,\n+  startTime,\n+  endTime,\n+  runtimeMs,\n+  runtimeSecs,\n+  tableCopy, /* This code queries data specific to the Copy operation */\n+  CONCAT(tableCopy.destinationTable.datasetId, '.', tableCopy.destinationTable.tableId)\n+    AS tableCopyDestinationTableRelativePath,\n+  CONCAT(tableCopy.destinationTable.projectId, '.', tableCopy.destinationTable.datasetId, '.',\n+    tableCopy.destinationTable.tableId) AS tableCopyDestinationTableAbsolutePath,\n+  IF(eventName = 'table_copy_job_completed', 1, 0) AS numCopies, /* This code queries data specific to the Copy operation */\n+  /* The following code queries data specific to the Load operation in BQ */\n+  totalLoadOutputBytes,\n+  (totalLoadOutputBytes / pow(2,30)) AS totalLoadOutputGigabytes,\n+  (totalLoadOutputBytes / pow(2,40)) AS totalLoadOutputTerabytes,\n+  STRUCT(\n+    load.sourceUris,\n+    STRUCT(\n+      load.destinationTable.projectId,\n+      load.destinationTable.datasetId,\n+      load.destinationTable.tableId,\n+      CONCAT(load.destinationTable.datasetId, '.', load.destinationTable.tableId) AS relativePath,\n+      CONCAT(load.destinationTable.projectId, '.', load.destinationTable.datasetId,\n+        '.', load.destinationTable.tableId) AS absolutePath\n+    ) AS destinationTable,\n+    load.createDisposition,\n+    load.writeDisposition,\n+    load.schemaJson\n+  ) AS load,", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3MTA0NA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436771044", "bodyText": "I'd prefer not having these end snippet comments and instead just a comment heading for the next section.", "author": "ryanmcdowell", "createdAt": "2020-06-08T14:54:05Z", "path": "views/audit/bigquery_audit_log_v1.sql", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit\n+ * Author: ryanmcdowell, freedomofnet, mihirborkar\n+ * Description:\n+ * This SQL Script creates a materialized source table acting as input to the Dashboard.\n+ */\n+\n+WITH BQAudit AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    protopayload_auditlog.requestMetadata.callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.projectId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.jobId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.createTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code\n+    AS errorCode,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.message\n+    AS errorMessage,\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, MILLISECOND)\n+      AS runtimeMs,\n+    /* This code extracts the column specific to the Copy operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.tableCopy,\n+    /* This code extracts the column specific to the Extract operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.extract,\n+    /* The following code extracts the columns specific to the Load operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalLoadOutputBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.load,\n+    /* The following code extracts columns specific to Query operation in BQ */\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)\n+      AS runtimeSecs,\n+    CAST(CEILING((TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)) / 60) AS INT64)\n+      AS executionMinuteBuckets,\n+    IF(COALESCE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code) IS NULL, TRUE, FALSE\n+    ) AS isCached,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalTablesProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalViewsProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalBilledBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.billingTier,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.query,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedTables,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedViews\n+    /* This ends the code snippet that extracts columns specific to Query operation in BQ */\n+  FROM\n+    `data-analytics-pocs.billing.cloudaudit_googleapis_com_data_access_*`\n+  WHERE\n+    protopayload_auditlog.serviceName = 'bigquery.googleapis.com'\n+    AND protopayload_auditlog.methodName = 'jobservice.jobcompleted'\n+    AND protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName IN\n+    (\n+      'table_copy_job_completed',\n+      'query_job_completed',\n+      'extract_job_completed',\n+      'load_job_completed'\n+    )\n+    AND DATE_DIFF(CURRENT_DATE(), DATE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime), month) <= 12\n+)\n+\n+\n+/* This code queries BQAudit */\n+\n+SELECT\n+  principalEmail,\n+  callerIp,\n+  serviceName,\n+  methodName,\n+  eventName,\n+  projectId,\n+  jobId,\n+  errorCode,\n+  errorMessage,\n+  STRUCT(\n+    EXTRACT(MINUTE FROM startTime) AS minuteOfDay,\n+    EXTRACT(HOUR FROM startTime) AS hourOfDay,\n+    EXTRACT(DAYOFWEEK FROM startTime) - 1 AS dayOfWeek,\n+    EXTRACT(DAYOFYEAR FROM startTime) AS dayOfYear,\n+    EXTRACT(WEEK FROM startTime) AS week,\n+    EXTRACT(MONTH FROM startTime) AS month,\n+    EXTRACT(QUARTER FROM startTime) AS quarter,\n+    EXTRACT(YEAR FROM startTime) AS year\n+  ) AS date,\n+  createTime,\n+  startTime,\n+  endTime,\n+  runtimeMs,\n+  runtimeSecs,\n+  tableCopy, /* This code queries data specific to the Copy operation */\n+  CONCAT(tableCopy.destinationTable.datasetId, '.', tableCopy.destinationTable.tableId)\n+    AS tableCopyDestinationTableRelativePath,\n+  CONCAT(tableCopy.destinationTable.projectId, '.', tableCopy.destinationTable.datasetId, '.',\n+    tableCopy.destinationTable.tableId) AS tableCopyDestinationTableAbsolutePath,\n+  IF(eventName = 'table_copy_job_completed', 1, 0) AS numCopies, /* This code queries data specific to the Copy operation */\n+  /* The following code queries data specific to the Load operation in BQ */\n+  totalLoadOutputBytes,\n+  (totalLoadOutputBytes / pow(2,30)) AS totalLoadOutputGigabytes,\n+  (totalLoadOutputBytes / pow(2,40)) AS totalLoadOutputTerabytes,\n+  STRUCT(\n+    load.sourceUris,\n+    STRUCT(\n+      load.destinationTable.projectId,\n+      load.destinationTable.datasetId,\n+      load.destinationTable.tableId,\n+      CONCAT(load.destinationTable.datasetId, '.', load.destinationTable.tableId) AS relativePath,\n+      CONCAT(load.destinationTable.projectId, '.', load.destinationTable.datasetId,\n+        '.', load.destinationTable.tableId) AS absolutePath\n+    ) AS destinationTable,\n+    load.createDisposition,\n+    load.writeDisposition,\n+    load.schemaJson\n+  ) AS load,\n+  IF(eventName = 'load_job_completed', 1, 0) AS numLoads,\n+  /* This ends the code snippet that queries columns specific to the Load operation in BQ */", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3MzExMA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436773110", "bodyText": "May be good to project this as totalProcessedGigabytes & totalProcessedTerabytes as well.", "author": "ryanmcdowell", "createdAt": "2020-06-08T14:56:10Z", "path": "views/audit/bigquery_audit_log_v1.sql", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit\n+ * Author: ryanmcdowell, freedomofnet, mihirborkar\n+ * Description:\n+ * This SQL Script creates a materialized source table acting as input to the Dashboard.\n+ */\n+\n+WITH BQAudit AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    protopayload_auditlog.requestMetadata.callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.projectId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.jobId,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.createTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code\n+    AS errorCode,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.message\n+    AS errorMessage,\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, MILLISECOND)\n+      AS runtimeMs,\n+    /* This code extracts the column specific to the Copy operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.tableCopy,\n+    /* This code extracts the column specific to the Extract operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.extract,\n+    /* The following code extracts the columns specific to the Load operation in BQ */\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalLoadOutputBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.load,\n+    /* The following code extracts columns specific to Query operation in BQ */\n+    TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)\n+      AS runtimeSecs,\n+    CAST(CEILING((TIMESTAMP_DIFF(\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.endTime,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime, SECOND)) / 60) AS INT64)\n+      AS executionMinuteBuckets,\n+    IF(COALESCE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+      protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatus.error.code) IS NULL, TRUE, FALSE\n+    ) AS isCached,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalSlotMs,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalTablesProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalViewsProcessed,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalBilledBytes,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.billingTier,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobConfiguration.query,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedTables,\n+    protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.referencedViews\n+    /* This ends the code snippet that extracts columns specific to Query operation in BQ */\n+  FROM\n+    `data-analytics-pocs.billing.cloudaudit_googleapis_com_data_access_*`\n+  WHERE\n+    protopayload_auditlog.serviceName = 'bigquery.googleapis.com'\n+    AND protopayload_auditlog.methodName = 'jobservice.jobcompleted'\n+    AND protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.eventName IN\n+    (\n+      'table_copy_job_completed',\n+      'query_job_completed',\n+      'extract_job_completed',\n+      'load_job_completed'\n+    )\n+    AND DATE_DIFF(CURRENT_DATE(), DATE(protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.startTime), month) <= 12\n+)\n+\n+\n+/* This code queries BQAudit */\n+\n+SELECT\n+  principalEmail,\n+  callerIp,\n+  serviceName,\n+  methodName,\n+  eventName,\n+  projectId,\n+  jobId,\n+  errorCode,\n+  errorMessage,\n+  STRUCT(\n+    EXTRACT(MINUTE FROM startTime) AS minuteOfDay,\n+    EXTRACT(HOUR FROM startTime) AS hourOfDay,\n+    EXTRACT(DAYOFWEEK FROM startTime) - 1 AS dayOfWeek,\n+    EXTRACT(DAYOFYEAR FROM startTime) AS dayOfYear,\n+    EXTRACT(WEEK FROM startTime) AS week,\n+    EXTRACT(MONTH FROM startTime) AS month,\n+    EXTRACT(QUARTER FROM startTime) AS quarter,\n+    EXTRACT(YEAR FROM startTime) AS year\n+  ) AS date,\n+  createTime,\n+  startTime,\n+  endTime,\n+  runtimeMs,\n+  runtimeSecs,\n+  tableCopy, /* This code queries data specific to the Copy operation */\n+  CONCAT(tableCopy.destinationTable.datasetId, '.', tableCopy.destinationTable.tableId)\n+    AS tableCopyDestinationTableRelativePath,\n+  CONCAT(tableCopy.destinationTable.projectId, '.', tableCopy.destinationTable.datasetId, '.',\n+    tableCopy.destinationTable.tableId) AS tableCopyDestinationTableAbsolutePath,\n+  IF(eventName = 'table_copy_job_completed', 1, 0) AS numCopies, /* This code queries data specific to the Copy operation */\n+  /* The following code queries data specific to the Load operation in BQ */\n+  totalLoadOutputBytes,\n+  (totalLoadOutputBytes / pow(2,30)) AS totalLoadOutputGigabytes,\n+  (totalLoadOutputBytes / pow(2,40)) AS totalLoadOutputTerabytes,\n+  STRUCT(\n+    load.sourceUris,\n+    STRUCT(\n+      load.destinationTable.projectId,\n+      load.destinationTable.datasetId,\n+      load.destinationTable.tableId,\n+      CONCAT(load.destinationTable.datasetId, '.', load.destinationTable.tableId) AS relativePath,\n+      CONCAT(load.destinationTable.projectId, '.', load.destinationTable.datasetId,\n+        '.', load.destinationTable.tableId) AS absolutePath\n+    ) AS destinationTable,\n+    load.createDisposition,\n+    load.writeDisposition,\n+    load.schemaJson\n+  ) AS load,\n+  IF(eventName = 'load_job_completed', 1, 0) AS numLoads,\n+  /* This ends the code snippet that queries columns specific to the Load operation in BQ */\n+  /* The following code queries data specific to the Extract operation in BQ */\n+  REGEXP_CONTAINS(jobId, 'beam') AS isBeamJob,\n+  STRUCT(\n+    `extract`.destinationUris,\n+    STRUCT(\n+      `extract`.sourceTable.projectId,\n+      `extract`.sourceTable.datasetId,\n+      `extract`.sourceTable.tableId,\n+      CONCAT(`extract`.sourceTable.datasetId, '.', `extract`.sourceTable.tableId)\n+      AS relativeTableRef,\n+      CONCAT(`extract`.sourceTable.projectId, '.', `extract`.sourceTable.datasetId,\n+      '.', `extract`.sourceTable.tableId) AS absoluteTableRef\n+    ) AS sourceTable\n+  ) AS `extract`,\n+  IF(eventName = 'extract_job_completed', 1, 0) AS numExtracts,\n+  /* This ends the code snippet that queries columns specific to the Extract operation in BQ */\n+  /* The following code queries data specific to the Query operation in BQ */\n+  REGEXP_CONTAINS(query.query, 'cloudaudit_googleapis_com_data_access_') AS isAuditDashboardQuery,\n+  errorCode IS NOT NULL AS isError,\n+  REGEXP_CONTAINS(errorMessage, 'timeout') AS isTimeout,\n+  isCached,\n+  IF(isCached, 1, 0) AS numCached,\n+  totalSlotMs,\n+  totalSlotMs / runtimeMs AS avgSlots,\n+  /* The following statement breaks down the query into minute buckets\n+   * and provides the average slot usage within that minute. This is a\n+   * crude way of making it so you can retrieve the average slot utilization\n+   * for a particular minute across multiple queries.\n+   */\n+  ARRAY(\n+    SELECT\n+      STRUCT(\n+        TIMESTAMP_TRUNC(TIMESTAMP_ADD(startTime, INTERVAL bucket_num MINUTE),\n+        MINUTE) AS time,\n+        totalSlotMs / runtimeMs AS avgSlotUsage\n+      )\n+    FROM\n+      UNNEST(GENERATE_ARRAY(1, executionMinuteBuckets)) AS bucket_num\n+  ) AS executionTimeline,\n+  totalTablesProcessed,\n+  totalViewsProcessed,\n+  totalProcessedBytes,", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3NjIzNQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436776235", "bodyText": "Add empty line in between this statement and the previous.", "author": "ryanmcdowell", "createdAt": "2020-06-08T15:00:17Z", "path": "views/audit/bigquery_audit_log_v2.sql", "diffHunk": "@@ -0,0 +1,1161 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit Version 2\n+ * Author: NamrataShah5, danieldeleo\n+ * Description:\n+ * This SQL Script aggregates BigQuery job events based on\n+ * the newer BigQueryAuditMetadata Stackdriver logs.\n+ * Reference for BigQueryAuditMetadata: https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata\n+ */\n+\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    protopayload_auditlog.requestMetadata.callerIp AS callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    COALESCE(\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      ),\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      )\n+    ) AS jobId,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName')) AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.jobState'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.jobState')\n+    ) AS jobStatusJobState,\n+    SPLIT(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult'),JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')),\"/\")[SAFE_OFFSET(1)],\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.code'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')\n+    ) AS jobStatusErrorResultCode,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.message'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.message')\n+    ) AS jobStatusErrorResultMessage,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.details'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.details')\n+    ) AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.createTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime'))\n+    ) AS jobStatsCreateTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.startTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime'))\n+    ) AS jobStatsStartTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime'))\n+    ) AS jobStatsEndTime,\n+    COALESCE(\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.totalSlotMs') AS INT64),\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.totalSlotMs') AS INT64)\n+    ) AS jobStatsTotalSlotMs,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.name'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.name')\n+    ) AS jobStatsReservationUsageName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.slotMs'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.slotMs')\n+    ) AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.totalProcessedBytes'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.totalProcessedBytes')\n+    ) AS queryJobStatsTotalProcessedBytes,\n+    COALESCE(\n+      CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.totalBilledBytes') AS INT64),\n+       CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64)\n+    ) AS queryJobStatsTotalBilledBytes,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.billingTier'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.billingTier')\n+    ) AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedTables'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedTables')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedViews'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedViews')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedRoutines'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedRoutines')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.outputRowCount'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.outputRowCount')\n+    ) AS queryJobStatsOutputRowCount,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.cacheHit'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.cacheHit')\n+    ) AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.startTime')),\n+        MILLISECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.startTime')),\n+        MILLISECOND)\n+      ) AS jobStatsRuntimeMs,\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.startTime')),\n+        SECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND)\n+      ) AS jobStatsRuntimeSecs,\n+    COALESCE(\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.startTime')),\n+          SECOND) / 60 ) AS INT64),\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.startTime')),\n+          SECOND) / 60) AS INT64)\n+      ) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.query'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.query')) AS queryConfigQuery,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.queryTruncated'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.queryTruncated')) AS BOOL) AS queryConfigQueryTruncated,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTable'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable')) AS queryConfigDestinationTable,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.createDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.createDisposition')) AS queryConfigCreateDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.writeDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.writeDisposition')) AS queryConfigWriteDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.defaultDataset'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.defaultDataset')) AS queryConfigDefaultDataset,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.priority'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority')) AS queryConfigPriority,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName')\n+      ) AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.statementType'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType')) AS queryConfigStatementType,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName'\n+      ) AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated')\n+       AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated')\n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName'\n+    ) AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)] AS tableCopyConfigDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableCreation: Table creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecreation\n+ */\n+tableCreationEvent AS (\n+  SELECT\n+    CONCAT(\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableCreation.jobName'),\"/\")[SAFE_OFFSET(1)],\n+       \":\",\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableCreation.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+    '$.tableCreation.jobName') AS tableCreationJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableName') AS tableCreationTableName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.friendlyName') AS tableCreationTableFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.description') AS tableCreationTableDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.labels') AS tableCreationTableLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.schemaJson') AS tableCreationTableSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.schemaJsonTruncated') AS BOOL) AS tableCreationTableSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.view.query') AS tableCreationViewDefinitionQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.view.queryTruncated') AS BOOL) AS tableCreationViewDefinitionTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.expireTime') AS tableCreationTableExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.createTime') AS tableCreationTableCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCrhange.table.updateTime') AS tableCreationTableUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.truncateTime') AS tableCreationTableTruncateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.encryption.kmsKeyName') AS tableCreationTableKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.reason')  AS tableCreationReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableChange: Table metadata change event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#TableChange\n+ */\n+tableChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableChange.jobName'),\"/\")[SAFE_OFFSET(1)],\n+       \":\",\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableChange.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+    '$.tableChange.jobName') AS tableChangeJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableName') AS tableChangeTableName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.friendlyName') AS tableChangeTableFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.description') AS tableChangeTableDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.labels') AS tableChangeTableLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.schemaJson') AS tableChangeTableSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.schemaJsonTruncated') AS BOOL) AS tableChangeTableSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.view.query') AS tableChangeViewDefinitionQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.view.queryTruncated') AS BOOL) AS tableChangeViewDefinitionTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.expireTime') AS tableChangeTableExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.createTime') AS tableChangeTableCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCrhange.table.updateTime') AS tableChangeTableUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.truncateTime') AS tableChangeTableTruncateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.encryption.kmsKeyName') AS tableChangeTableKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.reason')  AS tableChangeReason,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.truncated') AS BOOL) AS tableChangeTruncated\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.table.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDataRead: Data from tableDataRead audit logs\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+ */\n+tableDataReadEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields')),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadFields,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fieldsTruncated') AS BOOL) AS tableDataReadFieldsTruncated,\n+     SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categories'),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadCategories,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categoriesTruncated') AS BOOL) AS tableDataReadCategoriesTruncated,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.reason') AS tableDataReadReason,\n+     JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName') AS tableDataReadJobName,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.sessionName') AS tableDataReadSessionName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDataChange: Table data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledatachange\n+ */\n+tableDataChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDataChange.jobName'),\n+      \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataChange.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.deletedRowsCount') AS tableDataChangeDeletedRowsCount,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.datasetCreation.dataset.insertedRowsCount') AS tableDataChangeInsertedRowsCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.truncated') AS BOOL) AS tableDataChangeTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.reason') AS tableDataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.jobName') AS tableDataChangeJobName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelDeletion: Model deletion event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modeldeletion\n+ */\n+modelDeletionEvent AS (\n+  SELECT\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.reason') AS modelDeletionReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.jobName') AS modelDeletionJobName,\n+    CONCAT(\n+     SPLIT(\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+           '$.modelDeletion.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+     \":\",\n+     SPLIT(\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.jobName'),\n+           \"/\")[SAFE_OFFSET(3)]\n+   ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelCreation: Model creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelcreation\n+ */\n+modelCreationEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.reason')  AS modelCreationReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.jobName') AS modelCreationJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelCreation.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelCreation.jobName'),\n+         \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelName')  AS modelCreationModelName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.friendlyName')  AS modelCreationEntityInfoFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.description')  AS modelCreationEntityInfoDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.labels')  AS modelCreationEntityInfoLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.expireTime')  AS modelCreationModelExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.createTime')  AS modelCreationModelCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.updateTime')  AS modelCreationModelUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.encryption.kmsKeyName')  AS modelCreationEncryptionKmsKeyName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelMetadataChange: Model metadata change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelmetadatachange\n+ */\n+modelMetadataChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.reason') AS modelMetadataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.jobName') AS modelMetadataChangeJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelMetadataChange.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelMetadataChange.jobName'),\n+         \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelName') AS modelMetadataChangeModelName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.friendlyName') AS modelMetadataChangeEntityInfoFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.description') AS modelMetadataChangeEntityInfoDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.labels') AS modelMetadataChangeEntityInfoLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.expireTime') AS modelMetadataChangeModelExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.createTime') AS modelMetadataChangeModelCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.updateTime') AS modelMetadataChangeModelUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.encryption.kmsKeyName') AS modelMetadataChangeEncryptionKmsKeyName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelDataChange: Model data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modeldatachange\n+ */\n+modelDataChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelDataChange.reason')\n+    AS modelDataChangeReason,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.modelDataChange.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelDataChange.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineCreation: Routine creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinecreation\n+ */\n+routineCreationEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.routineName') AS routineCreationName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.createTime') AS routineCreationCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.updateTime') AS routineCreationUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.reason') AS routineCreationReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.jobName') AS routineCreationJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineCreation.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineCreation.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineChange: Routine change event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinechange\n+ */\n+routineChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.routineName') AS routineChangeName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.createTime') AS routineChangeCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.updateTime') AS routineChangeUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.reason') AS routineChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.jobName') AS routineChangeJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineChange.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineChange.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineDeletion: Routine deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinedeletion\n+ */\n+routineDeletionEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.routineName') AS routineDeletionName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.createTime') AS routineDeletionCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.updateTime') AS routineDeletionUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.reason') AS routineDeletionReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.jobName') AS routineDeletionJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineDeletion.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineDeletion.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+) -- End of WITH clauses\n+SELECT", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3Njg5Mg==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436776892", "bodyText": "Are there any cases where multiple of these are true? If not, I'd change the naming to is as opposed to has", "author": "ryanmcdowell", "createdAt": "2020-06-08T15:01:15Z", "path": "views/audit/bigquery_audit_log_v2.sql", "diffHunk": "@@ -0,0 +1,1161 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit Version 2\n+ * Author: NamrataShah5, danieldeleo\n+ * Description:\n+ * This SQL Script aggregates BigQuery job events based on\n+ * the newer BigQueryAuditMetadata Stackdriver logs.\n+ * Reference for BigQueryAuditMetadata: https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata\n+ */\n+\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    protopayload_auditlog.requestMetadata.callerIp AS callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    COALESCE(\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      ),\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      )\n+    ) AS jobId,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName')) AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.jobState'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.jobState')\n+    ) AS jobStatusJobState,\n+    SPLIT(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult'),JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')),\"/\")[SAFE_OFFSET(1)],\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.code'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')\n+    ) AS jobStatusErrorResultCode,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.message'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.message')\n+    ) AS jobStatusErrorResultMessage,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.details'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.details')\n+    ) AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.createTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime'))\n+    ) AS jobStatsCreateTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.startTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime'))\n+    ) AS jobStatsStartTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime'))\n+    ) AS jobStatsEndTime,\n+    COALESCE(\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.totalSlotMs') AS INT64),\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.totalSlotMs') AS INT64)\n+    ) AS jobStatsTotalSlotMs,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.name'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.name')\n+    ) AS jobStatsReservationUsageName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.slotMs'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.slotMs')\n+    ) AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.totalProcessedBytes'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.totalProcessedBytes')\n+    ) AS queryJobStatsTotalProcessedBytes,\n+    COALESCE(\n+      CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.totalBilledBytes') AS INT64),\n+       CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64)\n+    ) AS queryJobStatsTotalBilledBytes,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.billingTier'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.billingTier')\n+    ) AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedTables'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedTables')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedViews'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedViews')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedRoutines'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedRoutines')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.outputRowCount'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.outputRowCount')\n+    ) AS queryJobStatsOutputRowCount,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.cacheHit'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.cacheHit')\n+    ) AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.startTime')),\n+        MILLISECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.startTime')),\n+        MILLISECOND)\n+      ) AS jobStatsRuntimeMs,\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.startTime')),\n+        SECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND)\n+      ) AS jobStatsRuntimeSecs,\n+    COALESCE(\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.startTime')),\n+          SECOND) / 60 ) AS INT64),\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.startTime')),\n+          SECOND) / 60) AS INT64)\n+      ) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.query'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.query')) AS queryConfigQuery,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.queryTruncated'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.queryTruncated')) AS BOOL) AS queryConfigQueryTruncated,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTable'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable')) AS queryConfigDestinationTable,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.createDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.createDisposition')) AS queryConfigCreateDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.writeDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.writeDisposition')) AS queryConfigWriteDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.defaultDataset'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.defaultDataset')) AS queryConfigDefaultDataset,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.priority'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority')) AS queryConfigPriority,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName')\n+      ) AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.statementType'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType')) AS queryConfigStatementType,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName'\n+      ) AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated')\n+       AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated')\n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName'\n+    ) AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)] AS tableCopyConfigDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableCreation: Table creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecreation\n+ */\n+tableCreationEvent AS (\n+  SELECT\n+    CONCAT(\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableCreation.jobName'),\"/\")[SAFE_OFFSET(1)],\n+       \":\",\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableCreation.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+    '$.tableCreation.jobName') AS tableCreationJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableName') AS tableCreationTableName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.friendlyName') AS tableCreationTableFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.description') AS tableCreationTableDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.labels') AS tableCreationTableLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.schemaJson') AS tableCreationTableSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.schemaJsonTruncated') AS BOOL) AS tableCreationTableSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.view.query') AS tableCreationViewDefinitionQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.view.queryTruncated') AS BOOL) AS tableCreationViewDefinitionTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.expireTime') AS tableCreationTableExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.createTime') AS tableCreationTableCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCrhange.table.updateTime') AS tableCreationTableUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.truncateTime') AS tableCreationTableTruncateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.encryption.kmsKeyName') AS tableCreationTableKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.reason')  AS tableCreationReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableChange: Table metadata change event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#TableChange\n+ */\n+tableChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableChange.jobName'),\"/\")[SAFE_OFFSET(1)],\n+       \":\",\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableChange.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+    '$.tableChange.jobName') AS tableChangeJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableName') AS tableChangeTableName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.friendlyName') AS tableChangeTableFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.description') AS tableChangeTableDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.labels') AS tableChangeTableLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.schemaJson') AS tableChangeTableSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.schemaJsonTruncated') AS BOOL) AS tableChangeTableSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.view.query') AS tableChangeViewDefinitionQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.view.queryTruncated') AS BOOL) AS tableChangeViewDefinitionTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.expireTime') AS tableChangeTableExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.createTime') AS tableChangeTableCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCrhange.table.updateTime') AS tableChangeTableUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.truncateTime') AS tableChangeTableTruncateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.encryption.kmsKeyName') AS tableChangeTableKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.reason')  AS tableChangeReason,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.truncated') AS BOOL) AS tableChangeTruncated\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.table.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDataRead: Data from tableDataRead audit logs\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+ */\n+tableDataReadEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields')),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadFields,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fieldsTruncated') AS BOOL) AS tableDataReadFieldsTruncated,\n+     SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categories'),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadCategories,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categoriesTruncated') AS BOOL) AS tableDataReadCategoriesTruncated,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.reason') AS tableDataReadReason,\n+     JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName') AS tableDataReadJobName,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.sessionName') AS tableDataReadSessionName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDataChange: Table data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledatachange\n+ */\n+tableDataChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDataChange.jobName'),\n+      \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataChange.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.deletedRowsCount') AS tableDataChangeDeletedRowsCount,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.datasetCreation.dataset.insertedRowsCount') AS tableDataChangeInsertedRowsCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.truncated') AS BOOL) AS tableDataChangeTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.reason') AS tableDataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.jobName') AS tableDataChangeJobName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelDeletion: Model deletion event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modeldeletion\n+ */\n+modelDeletionEvent AS (\n+  SELECT\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.reason') AS modelDeletionReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.jobName') AS modelDeletionJobName,\n+    CONCAT(\n+     SPLIT(\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+           '$.modelDeletion.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+     \":\",\n+     SPLIT(\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.jobName'),\n+           \"/\")[SAFE_OFFSET(3)]\n+   ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelCreation: Model creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelcreation\n+ */\n+modelCreationEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.reason')  AS modelCreationReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.jobName') AS modelCreationJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelCreation.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelCreation.jobName'),\n+         \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelName')  AS modelCreationModelName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.friendlyName')  AS modelCreationEntityInfoFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.description')  AS modelCreationEntityInfoDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.labels')  AS modelCreationEntityInfoLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.expireTime')  AS modelCreationModelExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.createTime')  AS modelCreationModelCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.updateTime')  AS modelCreationModelUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.encryption.kmsKeyName')  AS modelCreationEncryptionKmsKeyName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelMetadataChange: Model metadata change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelmetadatachange\n+ */\n+modelMetadataChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.reason') AS modelMetadataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.jobName') AS modelMetadataChangeJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelMetadataChange.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelMetadataChange.jobName'),\n+         \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelName') AS modelMetadataChangeModelName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.friendlyName') AS modelMetadataChangeEntityInfoFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.description') AS modelMetadataChangeEntityInfoDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.labels') AS modelMetadataChangeEntityInfoLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.expireTime') AS modelMetadataChangeModelExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.createTime') AS modelMetadataChangeModelCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.updateTime') AS modelMetadataChangeModelUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.encryption.kmsKeyName') AS modelMetadataChangeEncryptionKmsKeyName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelDataChange: Model data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modeldatachange\n+ */\n+modelDataChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelDataChange.reason')\n+    AS modelDataChangeReason,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.modelDataChange.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelDataChange.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineCreation: Routine creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinecreation\n+ */\n+routineCreationEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.routineName') AS routineCreationName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.createTime') AS routineCreationCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.updateTime') AS routineCreationUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.reason') AS routineCreationReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.jobName') AS routineCreationJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineCreation.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineCreation.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineChange: Routine change event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinechange\n+ */\n+routineChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.routineName') AS routineChangeName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.createTime') AS routineChangeCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.updateTime') AS routineChangeUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.reason') AS routineChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.jobName') AS routineChangeJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineChange.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineChange.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineDeletion: Routine deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinedeletion\n+ */\n+routineDeletionEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.routineName') AS routineDeletionName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.createTime') AS routineDeletionCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.updateTime') AS routineDeletionUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.reason') AS routineDeletionReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.jobName') AS routineDeletionJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineDeletion.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineDeletion.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+) -- End of WITH clauses\n+SELECT\n+  principalEmail AS principalEmail,\n+  callerIp,\n+  serviceName,\n+  methodName,\n+  eventName,\n+  projectId,\n+  jobId,\n+  IF(jobChangeJobName IS NULL, False, True) AS hasJobChangeEvent,", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNjc3MA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r481336770", "bodyText": "Yes there are cases of multiple being true", "author": "danieldeleo", "createdAt": "2020-09-01T18:10:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3Njg5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3Nzg1Mw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436777853", "bodyText": "Why don't we also include totalBilledBytes?", "author": "ryanmcdowell", "createdAt": "2020-06-08T15:02:41Z", "path": "views/audit/bigquery_audit_log_v2.sql", "diffHunk": "@@ -0,0 +1,1161 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit Version 2\n+ * Author: NamrataShah5, danieldeleo\n+ * Description:\n+ * This SQL Script aggregates BigQuery job events based on\n+ * the newer BigQueryAuditMetadata Stackdriver logs.\n+ * Reference for BigQueryAuditMetadata: https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata\n+ */\n+\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    protopayload_auditlog.requestMetadata.callerIp AS callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    COALESCE(\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      ),\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      )\n+    ) AS jobId,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName')) AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.jobState'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.jobState')\n+    ) AS jobStatusJobState,\n+    SPLIT(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult'),JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')),\"/\")[SAFE_OFFSET(1)],\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.code'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')\n+    ) AS jobStatusErrorResultCode,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.message'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.message')\n+    ) AS jobStatusErrorResultMessage,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.details'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.details')\n+    ) AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.createTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime'))\n+    ) AS jobStatsCreateTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.startTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime'))\n+    ) AS jobStatsStartTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime'))\n+    ) AS jobStatsEndTime,\n+    COALESCE(\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.totalSlotMs') AS INT64),\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.totalSlotMs') AS INT64)\n+    ) AS jobStatsTotalSlotMs,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.name'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.name')\n+    ) AS jobStatsReservationUsageName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.slotMs'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.slotMs')\n+    ) AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.totalProcessedBytes'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.totalProcessedBytes')\n+    ) AS queryJobStatsTotalProcessedBytes,\n+    COALESCE(\n+      CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.totalBilledBytes') AS INT64),\n+       CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64)\n+    ) AS queryJobStatsTotalBilledBytes,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.billingTier'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.billingTier')\n+    ) AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedTables'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedTables')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedViews'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedViews')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedRoutines'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedRoutines')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.outputRowCount'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.outputRowCount')\n+    ) AS queryJobStatsOutputRowCount,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.cacheHit'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.cacheHit')\n+    ) AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.startTime')),\n+        MILLISECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.startTime')),\n+        MILLISECOND)\n+      ) AS jobStatsRuntimeMs,\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.startTime')),\n+        SECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND)\n+      ) AS jobStatsRuntimeSecs,\n+    COALESCE(\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.startTime')),\n+          SECOND) / 60 ) AS INT64),\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.startTime')),\n+          SECOND) / 60) AS INT64)\n+      ) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.query'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.query')) AS queryConfigQuery,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.queryTruncated'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.queryTruncated')) AS BOOL) AS queryConfigQueryTruncated,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTable'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable')) AS queryConfigDestinationTable,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.createDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.createDisposition')) AS queryConfigCreateDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.writeDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.writeDisposition')) AS queryConfigWriteDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.defaultDataset'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.defaultDataset')) AS queryConfigDefaultDataset,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.priority'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority')) AS queryConfigPriority,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName')\n+      ) AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.statementType'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType')) AS queryConfigStatementType,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName'\n+      ) AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated')\n+       AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated')\n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName'\n+    ) AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)] AS tableCopyConfigDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableCreation: Table creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecreation\n+ */\n+tableCreationEvent AS (\n+  SELECT\n+    CONCAT(\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableCreation.jobName'),\"/\")[SAFE_OFFSET(1)],\n+       \":\",\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableCreation.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+    '$.tableCreation.jobName') AS tableCreationJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableName') AS tableCreationTableName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.friendlyName') AS tableCreationTableFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.description') AS tableCreationTableDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.labels') AS tableCreationTableLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.schemaJson') AS tableCreationTableSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.schemaJsonTruncated') AS BOOL) AS tableCreationTableSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.view.query') AS tableCreationViewDefinitionQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.view.queryTruncated') AS BOOL) AS tableCreationViewDefinitionTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.expireTime') AS tableCreationTableExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.createTime') AS tableCreationTableCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCrhange.table.updateTime') AS tableCreationTableUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.truncateTime') AS tableCreationTableTruncateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.encryption.kmsKeyName') AS tableCreationTableKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.reason')  AS tableCreationReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableChange: Table metadata change event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#TableChange\n+ */\n+tableChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableChange.jobName'),\"/\")[SAFE_OFFSET(1)],\n+       \":\",\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableChange.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+    '$.tableChange.jobName') AS tableChangeJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableName') AS tableChangeTableName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.friendlyName') AS tableChangeTableFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.description') AS tableChangeTableDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.labels') AS tableChangeTableLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.schemaJson') AS tableChangeTableSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.schemaJsonTruncated') AS BOOL) AS tableChangeTableSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.view.query') AS tableChangeViewDefinitionQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.view.queryTruncated') AS BOOL) AS tableChangeViewDefinitionTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.expireTime') AS tableChangeTableExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.createTime') AS tableChangeTableCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCrhange.table.updateTime') AS tableChangeTableUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.truncateTime') AS tableChangeTableTruncateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.encryption.kmsKeyName') AS tableChangeTableKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.reason')  AS tableChangeReason,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.truncated') AS BOOL) AS tableChangeTruncated\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.table.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDataRead: Data from tableDataRead audit logs\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+ */\n+tableDataReadEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields')),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadFields,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fieldsTruncated') AS BOOL) AS tableDataReadFieldsTruncated,\n+     SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categories'),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadCategories,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categoriesTruncated') AS BOOL) AS tableDataReadCategoriesTruncated,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.reason') AS tableDataReadReason,\n+     JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName') AS tableDataReadJobName,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.sessionName') AS tableDataReadSessionName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDataChange: Table data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledatachange\n+ */\n+tableDataChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDataChange.jobName'),\n+      \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataChange.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.deletedRowsCount') AS tableDataChangeDeletedRowsCount,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.datasetCreation.dataset.insertedRowsCount') AS tableDataChangeInsertedRowsCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.truncated') AS BOOL) AS tableDataChangeTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.reason') AS tableDataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.jobName') AS tableDataChangeJobName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelDeletion: Model deletion event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modeldeletion\n+ */\n+modelDeletionEvent AS (\n+  SELECT\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.reason') AS modelDeletionReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.jobName') AS modelDeletionJobName,\n+    CONCAT(\n+     SPLIT(\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+           '$.modelDeletion.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+     \":\",\n+     SPLIT(\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.jobName'),\n+           \"/\")[SAFE_OFFSET(3)]\n+   ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelCreation: Model creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelcreation\n+ */\n+modelCreationEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.reason')  AS modelCreationReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.jobName') AS modelCreationJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelCreation.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelCreation.jobName'),\n+         \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelName')  AS modelCreationModelName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.friendlyName')  AS modelCreationEntityInfoFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.description')  AS modelCreationEntityInfoDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.labels')  AS modelCreationEntityInfoLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.expireTime')  AS modelCreationModelExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.createTime')  AS modelCreationModelCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.updateTime')  AS modelCreationModelUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.encryption.kmsKeyName')  AS modelCreationEncryptionKmsKeyName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelMetadataChange: Model metadata change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelmetadatachange\n+ */\n+modelMetadataChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.reason') AS modelMetadataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.jobName') AS modelMetadataChangeJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelMetadataChange.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelMetadataChange.jobName'),\n+         \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelName') AS modelMetadataChangeModelName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.friendlyName') AS modelMetadataChangeEntityInfoFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.description') AS modelMetadataChangeEntityInfoDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.labels') AS modelMetadataChangeEntityInfoLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.expireTime') AS modelMetadataChangeModelExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.createTime') AS modelMetadataChangeModelCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.updateTime') AS modelMetadataChangeModelUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.encryption.kmsKeyName') AS modelMetadataChangeEncryptionKmsKeyName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelDataChange: Model data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modeldatachange\n+ */\n+modelDataChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelDataChange.reason')\n+    AS modelDataChangeReason,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.modelDataChange.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelDataChange.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineCreation: Routine creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinecreation\n+ */\n+routineCreationEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.routineName') AS routineCreationName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.createTime') AS routineCreationCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.updateTime') AS routineCreationUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.reason') AS routineCreationReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.jobName') AS routineCreationJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineCreation.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineCreation.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineChange: Routine change event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinechange\n+ */\n+routineChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.routineName') AS routineChangeName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.createTime') AS routineChangeCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.updateTime') AS routineChangeUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.reason') AS routineChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.jobName') AS routineChangeJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineChange.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineChange.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineDeletion: Routine deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinedeletion\n+ */\n+routineDeletionEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.routineName') AS routineDeletionName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.createTime') AS routineDeletionCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.updateTime') AS routineDeletionUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.reason') AS routineDeletionReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.jobName') AS routineDeletionJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineDeletion.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineDeletion.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+) -- End of WITH clauses\n+SELECT\n+  principalEmail AS principalEmail,\n+  callerIp,\n+  serviceName,\n+  methodName,\n+  eventName,\n+  projectId,\n+  jobId,\n+  IF(jobChangeJobName IS NULL, False, True) AS hasJobChangeEvent,\n+  IF(tableChangeJobName IS NULL, False, True) AS hasTableChangeEvent,\n+  IF(tableCreationJobName IS NULL, False, True) AS hasTableCreationEvent,\n+  IF(tableDeletionJobName IS NULL, False, True) AS hasTableDeletionEvent,\n+  IF(tableDataReadJobName IS NULL, False, True) AS hasTableDataReadEvent,\n+  IF(tableDataChangeJobName IS NULL, False, True) AS hasTableDataChangeEvent,\n+  IF(modelDeletionJobName IS NULL, False, True) AS hasModelDeletionEvent,\n+  IF(modelCreationJobName IS NULL, False, True) AS hasModelCreationEvent,\n+  IF(modelMetadataChangeJobName IS NULL, False, True) AS hasModelMetadataChangeEvent,\n+  IF(routineCreationJobName IS NULL, False, True) AS hasRoutineCreationEvent,\n+  IF(routineChangeJobName IS NULL, False, True) AS hasRoutineChangeEvent,\n+  IF(routineDeletionJobName IS NULL, False, True) AS hasRoutineDeletionEvent,\n+  STRUCT(\n+    EXTRACT(MINUTE FROM jobStatsStartTime) AS minuteOfDay,\n+    EXTRACT(HOUR FROM jobStatsStartTime) AS hourOfDay,\n+    EXTRACT(DAYOFWEEK FROM jobStatsStartTime) - 1 AS dayOfWeek,\n+    EXTRACT(DAYOFYEAR FROM jobStatsStartTime) AS dayOfYear,\n+    EXTRACT(WEEK FROM jobStatsStartTime) AS week,\n+    EXTRACT(MONTH FROM jobStatsStartTime) AS month,\n+    EXTRACT(QUARTER FROM jobStatsStartTime) AS quarter,\n+    EXTRACT(YEAR FROM jobStatsStartTime) AS year\n+  ) AS jobStartDate,\n+  jobStatsRuntimeMs AS jobRuntimeMs,\n+  jobStatsRuntimeSecs AS jobRuntimeSec,\n+  REGEXP_CONTAINS(jobId, 'beam') AS isBeamJob,\n+  REGEXP_CONTAINS(queryConfigQuery, 'cloudaudit_googleapis_com_data_access') AS isAuditDashboardQuery,\n+  jobStatsTotalSlotMs / jobStatsRuntimeMs AS avgSlots,\n+  /*\n+   * The following statement breaks down the query into minute buckets\n+   * and provides the average slot usage within that minute. This is a\n+   * crude way of making it so you can retrieve the average slot utilization\n+   * for a particular minute across multiple queries.\n+   */\n+  ARRAY(\n+    SELECT\n+      STRUCT(\n+        TIMESTAMP_TRUNC(\n+          TIMESTAMP_ADD(jobStatsStartTime, INTERVAL bucket_num MINUTE), MINUTE\n+        ) AS time,\n+        jobStatsTotalSlotMs / jobStatsRuntimeMs AS avgSlotUsage\n+      )\n+    FROM UNNEST(GENERATE_ARRAY(1, jobStatsExecutionMinuteBuckets)) AS bucket_num\n+  ) AS jobExecutionTimeline,\n+  ARRAY_LENGTH(queryJobStatsReferencedTables) AS totalTablesProcessed,\n+  ARRAY_LENGTH(queryJobStatsReferencedViews) AS totalViewsProcessed,\n+  (queryJobStatsTotalBilledBytes / pow(2,30)) AS totalBilledGigabytes,", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNjEzOQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r481336139", "bodyText": "It's included in the jobStats struct", "author": "danieldeleo", "createdAt": "2020-09-01T18:09:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3Nzg1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3OTE3OA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436779178", "bodyText": "Add newline", "author": "ryanmcdowell", "createdAt": "2020-06-08T15:04:40Z", "path": "views/audit/bigquery_audit_log_v2.sql", "diffHunk": "@@ -0,0 +1,1161 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Script: BQ Audit Version 2\n+ * Author: NamrataShah5, danieldeleo\n+ * Description:\n+ * This SQL Script aggregates BigQuery job events based on\n+ * the newer BigQueryAuditMetadata Stackdriver logs.\n+ * Reference for BigQueryAuditMetadata: https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata\n+ */\n+\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    protopayload_auditlog.requestMetadata.callerIp AS callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    COALESCE(\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      ),\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      )\n+    ) AS jobId,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName')) AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.jobState'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.jobState')\n+    ) AS jobStatusJobState,\n+    SPLIT(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult'),JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')),\"/\")[SAFE_OFFSET(1)],\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.code'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')\n+    ) AS jobStatusErrorResultCode,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.message'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.message')\n+    ) AS jobStatusErrorResultMessage,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.details'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.details')\n+    ) AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.createTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime'))\n+    ) AS jobStatsCreateTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.startTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime'))\n+    ) AS jobStatsStartTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime'))\n+    ) AS jobStatsEndTime,\n+    COALESCE(\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.totalSlotMs') AS INT64),\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.totalSlotMs') AS INT64)\n+    ) AS jobStatsTotalSlotMs,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.name'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.name')\n+    ) AS jobStatsReservationUsageName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.slotMs'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.slotMs')\n+    ) AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.totalProcessedBytes'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.totalProcessedBytes')\n+    ) AS queryJobStatsTotalProcessedBytes,\n+    COALESCE(\n+      CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.totalBilledBytes') AS INT64),\n+       CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64)\n+    ) AS queryJobStatsTotalBilledBytes,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.billingTier'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.billingTier')\n+    ) AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedTables'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedTables')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedViews'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedViews')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedRoutines'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedRoutines')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.outputRowCount'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.outputRowCount')\n+    ) AS queryJobStatsOutputRowCount,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.cacheHit'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.cacheHit')\n+    ) AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.startTime')),\n+        MILLISECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.startTime')),\n+        MILLISECOND)\n+      ) AS jobStatsRuntimeMs,\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.startTime')),\n+        SECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND)\n+      ) AS jobStatsRuntimeSecs,\n+    COALESCE(\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.startTime')),\n+          SECOND) / 60 ) AS INT64),\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.startTime')),\n+          SECOND) / 60) AS INT64)\n+      ) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.query'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.query')) AS queryConfigQuery,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.queryTruncated'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.queryTruncated')) AS BOOL) AS queryConfigQueryTruncated,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTable'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable')) AS queryConfigDestinationTable,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.createDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.createDisposition')) AS queryConfigCreateDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.writeDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.writeDisposition')) AS queryConfigWriteDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.defaultDataset'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.defaultDataset')) AS queryConfigDefaultDataset,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.priority'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority')) AS queryConfigPriority,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName')\n+      ) AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.statementType'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType')) AS queryConfigStatementType,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName'\n+      ) AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated')\n+       AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated')\n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName'\n+    ) AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)] AS tableCopyConfigDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableCreation: Table creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecreation\n+ */\n+tableCreationEvent AS (\n+  SELECT\n+    CONCAT(\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableCreation.jobName'),\"/\")[SAFE_OFFSET(1)],\n+       \":\",\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableCreation.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+    '$.tableCreation.jobName') AS tableCreationJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableName') AS tableCreationTableName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.friendlyName') AS tableCreationTableFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.description') AS tableCreationTableDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.labels') AS tableCreationTableLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.schemaJson') AS tableCreationTableSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.schemaJsonTruncated') AS BOOL) AS tableCreationTableSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.view.query') AS tableCreationViewDefinitionQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.view.queryTruncated') AS BOOL) AS tableCreationViewDefinitionTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.expireTime') AS tableCreationTableExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.createTime') AS tableCreationTableCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCrhange.table.updateTime') AS tableCreationTableUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.truncateTime') AS tableCreationTableTruncateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.encryption.kmsKeyName') AS tableCreationTableKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.reason')  AS tableCreationReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableChange: Table metadata change event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#TableChange\n+ */\n+tableChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableChange.jobName'),\"/\")[SAFE_OFFSET(1)],\n+       \":\",\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableChange.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+    '$.tableChange.jobName') AS tableChangeJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableName') AS tableChangeTableName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.friendlyName') AS tableChangeTableFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.description') AS tableChangeTableDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.labels') AS tableChangeTableLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.schemaJson') AS tableChangeTableSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.schemaJsonTruncated') AS BOOL) AS tableChangeTableSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.view.query') AS tableChangeViewDefinitionQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.view.queryTruncated') AS BOOL) AS tableChangeViewDefinitionTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.expireTime') AS tableChangeTableExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.createTime') AS tableChangeTableCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCrhange.table.updateTime') AS tableChangeTableUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.truncateTime') AS tableChangeTableTruncateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.encryption.kmsKeyName') AS tableChangeTableKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.reason')  AS tableChangeReason,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.truncated') AS BOOL) AS tableChangeTruncated\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.table.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDataRead: Data from tableDataRead audit logs\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+ */\n+tableDataReadEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields')),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadFields,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fieldsTruncated') AS BOOL) AS tableDataReadFieldsTruncated,\n+     SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categories'),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadCategories,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categoriesTruncated') AS BOOL) AS tableDataReadCategoriesTruncated,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.reason') AS tableDataReadReason,\n+     JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName') AS tableDataReadJobName,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.sessionName') AS tableDataReadSessionName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDataChange: Table data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledatachange\n+ */\n+tableDataChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDataChange.jobName'),\n+      \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataChange.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.deletedRowsCount') AS tableDataChangeDeletedRowsCount,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.datasetCreation.dataset.insertedRowsCount') AS tableDataChangeInsertedRowsCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.truncated') AS BOOL) AS tableDataChangeTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.reason') AS tableDataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.jobName') AS tableDataChangeJobName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelDeletion: Model deletion event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modeldeletion\n+ */\n+modelDeletionEvent AS (\n+  SELECT\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.reason') AS modelDeletionReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.jobName') AS modelDeletionJobName,\n+    CONCAT(\n+     SPLIT(\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+           '$.modelDeletion.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+     \":\",\n+     SPLIT(\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.jobName'),\n+           \"/\")[SAFE_OFFSET(3)]\n+   ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelCreation: Model creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelcreation\n+ */\n+modelCreationEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.reason')  AS modelCreationReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.jobName') AS modelCreationJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelCreation.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelCreation.jobName'),\n+         \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelName')  AS modelCreationModelName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.friendlyName')  AS modelCreationEntityInfoFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.description')  AS modelCreationEntityInfoDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.labels')  AS modelCreationEntityInfoLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.expireTime')  AS modelCreationModelExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.createTime')  AS modelCreationModelCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.updateTime')  AS modelCreationModelUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.encryption.kmsKeyName')  AS modelCreationEncryptionKmsKeyName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelMetadataChange: Model metadata change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelmetadatachange\n+ */\n+modelMetadataChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.reason') AS modelMetadataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.jobName') AS modelMetadataChangeJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelMetadataChange.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelMetadataChange.jobName'),\n+         \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelName') AS modelMetadataChangeModelName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.friendlyName') AS modelMetadataChangeEntityInfoFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.description') AS modelMetadataChangeEntityInfoDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.labels') AS modelMetadataChangeEntityInfoLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.expireTime') AS modelMetadataChangeModelExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.createTime') AS modelMetadataChangeModelCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.updateTime') AS modelMetadataChangeModelUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.encryption.kmsKeyName') AS modelMetadataChangeEncryptionKmsKeyName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelDataChange: Model data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modeldatachange\n+ */\n+modelDataChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelDataChange.reason')\n+    AS modelDataChangeReason,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.modelDataChange.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelDataChange.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineCreation: Routine creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinecreation\n+ */\n+routineCreationEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.routineName') AS routineCreationName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.createTime') AS routineCreationCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.updateTime') AS routineCreationUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.reason') AS routineCreationReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.jobName') AS routineCreationJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineCreation.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineCreation.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineChange: Routine change event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinechange\n+ */\n+routineChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.routineName') AS routineChangeName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.createTime') AS routineChangeCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.updateTime') AS routineChangeUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.reason') AS routineChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.jobName') AS routineChangeJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineChange.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineChange.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineDeletion: Routine deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinedeletion\n+ */\n+routineDeletionEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.routineName') AS routineDeletionName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.createTime') AS routineDeletionCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.updateTime') AS routineDeletionUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.reason') AS routineDeletionReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.jobName') AS routineDeletionJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineDeletion.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineDeletion.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+) -- End of WITH clauses\n+SELECT\n+  principalEmail AS principalEmail,\n+  callerIp,\n+  serviceName,\n+  methodName,\n+  eventName,\n+  projectId,\n+  jobId,\n+  IF(jobChangeJobName IS NULL, False, True) AS hasJobChangeEvent,\n+  IF(tableChangeJobName IS NULL, False, True) AS hasTableChangeEvent,\n+  IF(tableCreationJobName IS NULL, False, True) AS hasTableCreationEvent,\n+  IF(tableDeletionJobName IS NULL, False, True) AS hasTableDeletionEvent,\n+  IF(tableDataReadJobName IS NULL, False, True) AS hasTableDataReadEvent,\n+  IF(tableDataChangeJobName IS NULL, False, True) AS hasTableDataChangeEvent,\n+  IF(modelDeletionJobName IS NULL, False, True) AS hasModelDeletionEvent,\n+  IF(modelCreationJobName IS NULL, False, True) AS hasModelCreationEvent,\n+  IF(modelMetadataChangeJobName IS NULL, False, True) AS hasModelMetadataChangeEvent,\n+  IF(routineCreationJobName IS NULL, False, True) AS hasRoutineCreationEvent,\n+  IF(routineChangeJobName IS NULL, False, True) AS hasRoutineChangeEvent,\n+  IF(routineDeletionJobName IS NULL, False, True) AS hasRoutineDeletionEvent,\n+  STRUCT(\n+    EXTRACT(MINUTE FROM jobStatsStartTime) AS minuteOfDay,\n+    EXTRACT(HOUR FROM jobStatsStartTime) AS hourOfDay,\n+    EXTRACT(DAYOFWEEK FROM jobStatsStartTime) - 1 AS dayOfWeek,\n+    EXTRACT(DAYOFYEAR FROM jobStatsStartTime) AS dayOfYear,\n+    EXTRACT(WEEK FROM jobStatsStartTime) AS week,\n+    EXTRACT(MONTH FROM jobStatsStartTime) AS month,\n+    EXTRACT(QUARTER FROM jobStatsStartTime) AS quarter,\n+    EXTRACT(YEAR FROM jobStatsStartTime) AS year\n+  ) AS jobStartDate,\n+  jobStatsRuntimeMs AS jobRuntimeMs,\n+  jobStatsRuntimeSecs AS jobRuntimeSec,\n+  REGEXP_CONTAINS(jobId, 'beam') AS isBeamJob,\n+  REGEXP_CONTAINS(queryConfigQuery, 'cloudaudit_googleapis_com_data_access') AS isAuditDashboardQuery,\n+  jobStatsTotalSlotMs / jobStatsRuntimeMs AS avgSlots,\n+  /*\n+   * The following statement breaks down the query into minute buckets\n+   * and provides the average slot usage within that minute. This is a\n+   * crude way of making it so you can retrieve the average slot utilization\n+   * for a particular minute across multiple queries.\n+   */\n+  ARRAY(\n+    SELECT\n+      STRUCT(\n+        TIMESTAMP_TRUNC(\n+          TIMESTAMP_ADD(jobStatsStartTime, INTERVAL bucket_num MINUTE), MINUTE\n+        ) AS time,\n+        jobStatsTotalSlotMs / jobStatsRuntimeMs AS avgSlotUsage\n+      )\n+    FROM UNNEST(GENERATE_ARRAY(1, jobStatsExecutionMinuteBuckets)) AS bucket_num\n+  ) AS jobExecutionTimeline,\n+  ARRAY_LENGTH(queryJobStatsReferencedTables) AS totalTablesProcessed,\n+  ARRAY_LENGTH(queryJobStatsReferencedViews) AS totalViewsProcessed,\n+  (queryJobStatsTotalBilledBytes / pow(2,30)) AS totalBilledGigabytes,\n+  (queryJobStatsTotalBilledBytes / pow(2,40)) AS totalBilledTerabytes,\n+  (queryJobStatsTotalBilledBytes / pow(2,40)) * 5 AS estimatedCostUsd,\n+  CONCAT(\n+    queryConfigDestinationTableDatasetId, '.',\n+    queryConfigDestinationTableId) AS queryDestinationTableRelativePath,\n+  CONCAT(\n+    queryConfigDestinationTableProjectId, '.',\n+    queryConfigDestinationTableDatasetId, '.',\n+    queryConfigDestinationTableId) AS queryDestinationTableAbsolutePath,\n+  queryConfigDestinationTableProjectId AS queryDestinationTableProjectId,\n+  queryConfigDestinationTableDatasetId AS queryDestinationTableDatasetId,\n+  queryConfigDestinationTableId AS queryDestinationTableId,\n+  /*\n+   * jobChange STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobchange\n+  */\n+  STRUCT(\n+    jobChangeJobName AS jobName,\n+    /*\n+     * jobConfig STRUCT\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobconfig\n+     */\n+    STRUCT(\n+      /*\n+       * queryConfig STRUCT\n+       * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+       */\n+      STRUCT(\n+        queryConfigQuery AS query,\n+        queryConfigQueryTruncated AS queryTruncated,\n+        queryConfigDestinationTable AS destinationTable,\n+        queryConfigCreateDisposition AS createDisposition,\n+        queryConfigWriteDisposition AS writeDisposition,\n+        queryConfigDefaultDataset AS defaultDataset,\n+        --TODO Add tableDefinitions\n+        queryConfigPriority AS priority,\n+        STRUCT(\n+          queryConfigDestinationTableEncryptionKmsKeyName AS kmsKeyName\n+        ) AS destinationTableEncryption,\n+        queryConfigStatementType AS statementType\n+      ) AS queryConfig,\n+      /*\n+       * loadConfig STRUCT\n+       * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+       */\n+      STRUCT(\n+        loadConfigSourceUris AS sourceUris,\n+        loadConfigSourceUrisTruncated AS sourceUrisTruncated,\n+        loadConfigSchemaJson AS schemaJson,\n+        loadConfigSchemaJsonTruncated AS schemaJsonTruncated,\n+        loadConfigDestinationTable AS destinationTable,\n+        loadConfigCreateDisposition AS createDisposition,\n+        loadConfigWriteDisposition AS writeDisposition,\n+        STRUCT(\n+          loadConfigDestinationTableEncryptionKmsKeyName AS kmsKeyName\n+        ) AS destinationTableEncryption\n+      ) AS loadConfig,\n+      /*\n+       * extractConfig STRUCT\n+       * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+       */\n+      STRUCT(\n+        extractConfigDestinationUris AS destinationUris,\n+        extractConfigDestinationUrisTruncated AS destinationUrisTruncated,\n+        extractConfigSourceTable AS sourceTable\n+      ) AS extractConfig,\n+      /*\n+       * tableCopyConfig STRUCT\n+       * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+       */\n+      STRUCT(\n+        tableCopySourceTables AS sourceTables,\n+        tableCopyConfigSourceTablesTruncated AS configSourceTablesTruncated,\n+        tableCopyConfigDestinationTable AS configDestinationTable,\n+        tableCopyConfigCreateDisposition AS configCreateDisposition,\n+        tableCopyConfigWriteDisposition AS configWriteDisposition,\n+        STRUCT(\n+          tableCopyConfigDestinationTableEncryptionKmsKeyName AS kmsKeyName\n+        ) AS destinationTableEncryption\n+      ) AS tableCopyConfig\n+    ) AS jobConfig,\n+    /*\n+     * JobStatus STRUCT\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#JobStatus\n+     */\n+    STRUCT(\n+      jobStatusJobState AS jobState,\n+      STRUCT(\n+        jobStatusErrorResultCode AS code,\n+        jobStatusErrorResultMessage AS message,\n+        jobStatusErrorResultDetails AS details\n+      ) AS errorResult,\n+      jobStatusEncounteredErrorMessages AS encounteredErrorMessages,\n+      jobStatusEncounteredErrorCodes AS encounteredErrorCodes\n+    ) AS jobStatus,\n+    /*\n+     * JobStats STRUCT\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    STRUCT(\n+      jobStatsCreateTime AS createTime,\n+      jobStatsStartTime AS startTime,\n+      jobStatsEndTime AS endTime,\n+      jobStatsTotalSlotMs AS totalSlotMs,\n+      STRUCT(\n+        jobStatsReservationUsageName AS name,\n+        jobStatsReservationUsageSlotMs AS slotMs\n+      ) AS reservationUsage,\n+      STRUCT(\n+        queryJobStatsTotalProcessedBytes AS totalProcessedBytes,\n+        queryJobStatsTotalBilledBytes AS totalBilledBytes,\n+        queryJobStatsBillingTier AS billingTier,\n+        queryJobStatsReferencedTables AS referencedTables,\n+        queryJobStatsReferencedViews AS referencedViews,\n+        queryJobStatsReferencedRoutines AS referencedRoutines,\n+        queryJobStatsOutputRowCount AS outputRowCount,\n+        queryJobStatsCacheHit AS cacheHit\n+      ) AS queryStats,\n+      STRUCT(\n+        loadJobStatsTotalOutputBytes AS totalOutputBytes\n+      ) AS loadStats\n+    ) AS jobStats\n+  ) AS jobChange,\n+  /*\n+   * Load job statistics\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+  */\n+  loadJobStatsTotalOutputBytes AS totalLoadOutputBytes,\n+  (loadJobStatsTotalOutputBytes / pow(2,30)) AS totalLoadOutputGigabytes,\n+  (loadJobStatsTotalOutputBytes / pow(2,40)) AS totalLoadOutputTerabytes,\n+  /*\n+   * tableChange STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#TableChange\n+   */\n+  STRUCT(\n+    STRUCT(\n+      tableChangeTableName,\n+      STRUCT(\n+        tableChangeTableFriendlyName AS friendlyName,\n+        tableChangeTableDescription AS description,\n+        tableChangeTableLabels AS labels\n+      ) AS tableInfo,\n+      tableChangeTableSchemaJson AS schemaJson,\n+      tableChangeTableSchemaJsonTruncated AS schemaJsonTruncated,\n+      STRUCT(\n+        tableChangeViewDefinitionQuery AS query,\n+        tableChangeViewDefinitionTruncated AS queryTruncated\n+      ) AS view,\n+      tableChangeTableExpireTime AS expireTime,\n+      tableChangeTableCreateTime AS createTime,\n+      tableChangeTableUpdateTime AS updateTime,\n+      tableChangeTableTruncateTime AS truncateTime,\n+      STRUCT(\n+        tableChangeTableKmsKeyName AS kmsKeyName\n+      ) AS encryption\n+    ) AS table,\n+    tableChangeReason AS reason,\n+    tableChangeJobName AS jobName\n+  ) AS tableChange,\n+  /*\n+   * tableCreation STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecreation\n+   */\n+  STRUCT(\n+    STRUCT(\n+      tableCreationTableName,\n+      STRUCT(\n+        tableCreationTableFriendlyName AS friendlyName,\n+        tableCreationTableDescription AS description,\n+        tableCreationTableLabels AS labels\n+      ) AS tableInfo,\n+      tableCreationTableSchemaJson AS schemaJson,\n+      tableCreationTableSchemaJsonTruncated AS schemaJsonTruncated,\n+      STRUCT(\n+        tableCreationViewDefinitionQuery AS query,\n+        tableCreationViewDefinitionTruncated AS queryTruncated\n+      ) AS view,\n+      tableCreationTableExpireTime AS expireTime,\n+      tableCreationTableCreateTime AS createTime,\n+      tableCreationTableUpdateTime AS updateTime,\n+      tableCreationTableTruncateTime AS truncateTime,\n+      STRUCT(\n+        tableCreationTableKmsKeyName AS kmsKeyName\n+      ) AS encryption\n+    ) AS table,\n+    tableCreationReason AS reason,\n+    tableCreationJobName AS jobName\n+  ) AS tableCreation,\n+  /*\n+   * tableDeletion STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+   */\n+  STRUCT(\n+    tableDeletionReason AS reason,\n+    tableDeletionJobName AS jobName\n+  ) AS tableDeletion,\n+  /*\n+   * TableDataRead STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+   */\n+  STRUCT(\n+    tableDataReadFields AS fields,\n+    tableDataReadFieldsTruncated AS fieldsTruncated,\n+    tableDataReadCategories AS categories,\n+    tableDataReadCategoriesTruncated AS categoriesTruncated,\n+    tableDataReadReason AS reason,\n+    tableDataReadJobName AS jobName,\n+    tableDataReadSessionName AS sessionName\n+  ) AS tableDataRead,\n+  /*\n+   * TableDataChange STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledatachange\n+   */\n+  STRUCT(\n+    tableDataChangeDeletedRowsCount AS deletedRowsCount,\n+    tableDataChangeInsertedRowsCount AS insertedRowsCount,\n+    tableDataChangeTruncated AS truncated,\n+    tableDataChangeReason AS reason,\n+    tableDataChangeJobName AS jobName\n+  ) AS tableDataChange,\n+   /*\n+   * ModelDeletion STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modeldeletion\n+   */\n+  STRUCT(\n+    modelDeletionReason AS reason,\n+    modelDeletionJobName AS jobName\n+  ) AS modelDeletion,\n+  /*\n+   * ModelCreation STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelcreation\n+   */\n+  STRUCT(\n+    STRUCT(\n+      modelCreationModelName AS modelName,\n+      STRUCT(\n+        modelCreationEntityInfoFriendlyName AS friendlyName,\n+        modelCreationEntityInfoDescription AS description,\n+        modelCreationEntityInfoLabels AS labels\n+      ) AS entityInfo,\n+      modelCreationModelExpireTime AS expireTime,\n+      modelCreationModelCreateTime AS createTime,\n+      modelCreationModelUpdateTime AS updateTime,\n+      STRUCT(modelCreationEncryptionKmsKeyName AS kmsKeyName) AS encryptionInfo\n+    ) AS model,\n+    modelCreationReason AS reason,\n+    modelCreationJobName AS jobName\n+  ) AS modelCreation,\n+  /*\n+   * ModelMetadataChange STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelmetadatachange\n+   */\n+  STRUCT(\n+    STRUCT(\n+      modelMetadataChangeModelName AS modelName,\n+      STRUCT(\n+        modelMetadataChangeEntityInfoFriendlyName AS friendlyName,\n+        modelMetadataChangeEntityInfoDescription AS description,\n+        modelMetadataChangeEntityInfoLabels AS labels\n+      ) AS entityInfo,\n+      modelMetadataChangeModelExpireTime AS expireTime,\n+      modelMetadataChangeModelCreateTime AS createTime,\n+      modelMetadataChangeModelUpdateTime AS updateTime,\n+      STRUCT(modelMetadataChangeEncryptionKmsKeyName AS kmsKeyName) AS encryptionInfo\n+    ) AS model,\n+    modelMetadataChangeReason AS reason,\n+    modelMetadataChangeJobName AS jobName\n+  ) AS modelMetadataChange,\n+  /*\n+   * RoutineCreation STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinecreation\n+   */\n+  STRUCT(\n+    STRUCT(\n+      routineCreationName AS name,\n+      routineCreationCreateTime AS createTime,\n+      routineCreationUpdateTime AS updateTime\n+    ) AS routine,\n+    routineCreationReason AS reason,\n+    routineCreationJobName AS jobName\n+  ) AS routineCreation,\n+  /*\n+   * RoutineChange STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinechange\n+   */\n+  STRUCT(\n+    STRUCT(\n+      routineChangeName AS name,\n+      routineChangeCreateTime AS createTime,\n+      routineChangeUpdateTime AS updateTime\n+    ) AS routine,\n+    routineChangeReason AS reason,\n+    routineChangeJobName AS jobName\n+  ) AS routineChange,\n+  /*\n+   * RoutineDeletion STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinedeletion\n+   */\n+  STRUCT(\n+    STRUCT(\n+      routineDeletionName AS name,\n+      routineDeletionCreateTime AS createTime,\n+      routineDeletionUpdateTime AS updateTime\n+    ) AS routine,\n+    routineDeletionReason AS reason,\n+    routineDeletionJobName AS jobName\n+  ) AS routineDeletion\n+\n+FROM jobChangeEvent\n+LEFT JOIN tableDataChangeEvent USING(jobId)\n+LEFT JOIN tableCreationEvent USING(jobId)\n+LEFT JOIN tableChangeEvent USING(jobId)\n+LEFT JOIN tableDeletionEvent USING(jobId)\n+LEFT JOIN tableDataReadEvent USING(jobId)\n+LEFT JOIN modelDeletionEvent USING(jobId)\n+LEFT JOIN modelMetadataChangeEvent USING(jobId)\n+LEFT JOIN modelCreationEvent USING(jobId)\n+LEFT JOIN modelDataChangeEvent USING(jobId)\n+LEFT JOIN routineCreationEvent USING(jobId)\n+LEFT JOIN routineChangeEvent USING(jobId)\n+LEFT JOIN routineDeletionEvent USING(jobId)\n+WHERE\n+  /*\n+   * Currently, BigQuery Scripting jobs do not emit jobChange events, they only produce a jobInsertion event.\n+   * It's therefore necessary to add the additional filter shown below to capture \"SCRIPT\" statementType queries.\n+   */\n+  queryConfigStatementType = \"SCRIPT\"\n+  OR jobChangeAfter = \"DONE\"", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc3OTczOQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436779739", "bodyText": "There should be a space between the hash and the title.", "author": "ryanmcdowell", "createdAt": "2020-06-08T15:05:28Z", "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,48 @@\n+There are two views in this folder: and (query_audit_v2.sql in this folder)\n+query_audit is a view that simplifies querying audit logs to power dashboards,\n+where the logs are old\n+\n+query_audit_new is also a view that simplifies querying BigQueryMetaData logs,\n+but operates for new logs\n+\n+### [bigquery_audit_log_v2.sql](/views/audit/bigquery_audit_log_v2.sql)\n+\n+BigQuery SELECT statement to help you extract and format BigQueryMetaData\n+events.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+          gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.\"@type\"=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\"' \\ \n+        --use-partitioned-tables\n+        ```\n+    *   [Cloud Console Logs Viewer](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create)\n+        *   Make sure to select\n+            [partitioning](https://cloud.google.com/logging/docs/export/bigquery#partition-tables)\n+            for your BigQuery destination\n+1.  The log sink will immediately create the BigQuery dataset but the table will\n+    be created once you run a BigQuery job post log sink creation.\n+1.  To use the SELECT statement in\n+    [bigquery_audit_log_v2.sql](/views/audit/bigquery_audit_log_v2.sql), change\n+    all occurrences of\n+    `project_id.dataset_id.cloudaudit_googleapis_com_data_access` to be the full\n+    table path you created in step 1.\n+    *   `sed\n+        's/project_id.dataset_id.cloudaudit_googleapis_com_data_access/YOUR_PROJECT.YOUR_DATASET.YOUR_TABLE/'\n+        bigquery_audit_log_v2.sql`\n+1.  From here, you can do further analysis in BigQuery by querying the view, or\n+    you can connect it to a BI tool such as DataStudio as a data source and\n+    build dashboards.\n+\n+###[bigquery_audit_log_v1.sql](/views/audit/bigquery_audit_log_v1.sql) (old version of logs)", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4MDE2Ng==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r436780166", "bodyText": "Can we add a few sample usage queries to make the README a bit more comprehensive?", "author": "ryanmcdowell", "createdAt": "2020-06-08T15:06:07Z", "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,48 @@\n+There are two views in this folder: and (query_audit_v2.sql in this folder)", "originalCommit": "d21696d8e3d406879ad914d8b6da8a8c7a939485", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwMjAzOA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/50#discussion_r453002038", "bodyText": "Update table names for these usage examples. They should be a view name based off the SQL in this file", "author": "danieldeleo", "createdAt": "2020-07-10T18:21:18Z", "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,111 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [bigquery_audit_log_v2.sql](/views/audit/bigquery_audit_log_v2.sql)\n+\n+BigQuery SELECT statement to help you extract and format BigQueryMetaData\n+events.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+        gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.\"@type\"=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\"' \\ \n+        --use-partitioned-tables\n+        ``` \n+        Note: gcloud **alpha** is needed in order to use the parameter `--use-partitioned-tables` \n+    *   [Cloud Console Logs Viewer](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create)\n+        *   Make sure to select\n+            [partitioning](https://cloud.google.com/logging/docs/export/bigquery#partition-tables)\n+            for your BigQuery destination\n+            \n+    Note: You can create a log sink at the folder, billing account, or organization level using an \n+    [aggregated sink](https://cloud.google.com/logging/docs/export/aggregated_sinks#creating_an_aggregated_sink).\n+1.  The log sink will immediately create the BigQuery dataset but the table will\n+    be created once you run a BigQuery job post log sink creation.\n+1.  To use the SELECT statement in\n+    [bigquery_audit_log_v2.sql](/views/audit/bigquery_audit_log_v2.sql), change\n+    all occurrences of\n+    `project_id.dataset_id.cloudaudit_googleapis_com_data_access` to be the full\n+    table path you created in step 1.\n+    *   `sed\n+        's/project_id.dataset_id.cloudaudit_googleapis_com_data_access/YOUR_PROJECT.YOUR_DATASET.YOUR_TABLE/'\n+        bigquery_audit_log_v2.sql`\n+1.  From here, you can do further analysis in BigQuery by querying the view, or\n+    you can connect it to a BI tool such as DataStudio as a data source and\n+    build dashboards.\n+    \n+#### Usage Examples\n+\n+* Retrieve All SELECT SQL Queries Executed \n+  ```  \n+  SELECT * EXCEPT(\n+    modelDeletion,\n+    modelCreation,\n+    modelMetadataChange,\n+    routineDeletion,\n+    routineCreation,\n+    routineChange)\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`", "originalCommit": "610c1c2213957bf33a7d3bd97533a95d3a3ce5bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "90958104baee18527dc3a889a7e67a09e6619b81", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/90958104baee18527dc3a889a7e67a09e6619b81", "message": "Squashing commits", "committedDate": "2021-02-23T21:39:11Z", "type": "forcePushed"}, {"oid": "fb8b69ae1e975df5bc178027d1a0ee4a79a86a86", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/fb8b69ae1e975df5bc178027d1a0ee4a79a86a86", "message": "Adding v2 audit logs view", "committedDate": "2021-06-23T14:22:52Z", "type": "commit"}, {"oid": "fb8b69ae1e975df5bc178027d1a0ee4a79a86a86", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/fb8b69ae1e975df5bc178027d1a0ee4a79a86a86", "message": "Adding v2 audit logs view", "committedDate": "2021-06-23T14:22:52Z", "type": "forcePushed"}, {"oid": "a6b666510e6b1aedad492aac3683fda39898dd12", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/a6b666510e6b1aedad492aac3683fda39898dd12", "message": "Add missing tableChangeEvent subquery", "committedDate": "2021-06-23T14:42:29Z", "type": "commit"}, {"oid": "1d70cb47a4e01cdf905551394dae42d448d3d20e", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/1d70cb47a4e01cdf905551394dae42d448d3d20e", "message": "README updates", "committedDate": "2021-06-23T15:22:38Z", "type": "commit"}, {"oid": "8599b9fbcbce1cf1656b0faf54b35efedbf31066", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/8599b9fbcbce1cf1656b0faf54b35efedbf31066", "message": "README updates and link fixes", "committedDate": "2021-06-23T16:17:33Z", "type": "commit"}, {"oid": "1b52a69339bf3411ae7c0b6fb442033afb6a0a94", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/1b52a69339bf3411ae7c0b6fb442033afb6a0a94", "message": "typo fix", "committedDate": "2021-06-23T18:51:20Z", "type": "commit"}, {"oid": "d9b059cfb0562a2e842e9c4e3dff7503f9c08108", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/d9b059cfb0562a2e842e9c4e3dff7503f9c08108", "message": "Merge branch 'master' into bqlogs", "committedDate": "2021-09-24T14:44:21Z", "type": "commit"}]}