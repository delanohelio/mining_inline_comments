{"pr_number": 102, "pr_title": "SQL Extraction: show progress flag, show debug logs flag", "pr_createdAt": "2020-07-15T20:37:15Z", "pr_url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102", "timeline": [{"oid": "9f96592aaa7991391a7d068d41796380e94b387f", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/9f96592aaa7991391a7d068d41796380e94b387f", "message": "SQL Extraction: show progress flag, show debug logs flag", "committedDate": "2020-07-15T20:29:04Z", "type": "commit"}, {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/33960836029854fbbcbced8a42807d17ab02bc4e", "message": "Merge remote-tracking branch 'gcp/master'\n\n# Conflicts:\n#\ttools/sql_extraction/src/test/kotlin/SqlExtractorTest.kt", "committedDate": "2020-07-15T21:21:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1Nzk0NQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455457945", "bodyText": "nit: should you print the filePath somewhere? $filePath doesn't have much information or it would be replaced by the actual variable?", "author": "kikkyo", "createdAt": "2020-07-16T01:34:33Z", "path": "tools/sql_extraction/src/main/kotlin/DataFlowSolver.kt", "diffHunk": "@@ -29,6 +29,7 @@ class DataFlowSolver(private val frontends: List<FrontEnd>) {\n             }\n         }\n \n-        throw IllegalArgumentException(\"Cannot analyze $filePath. No frontend available.\")\n+        LOGGER.warn { \"Cannot analyze $filePath. No frontend available. Skipping file...\" }", "originalCommit": "33960836029854fbbcbced8a42807d17ab02bc4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk3NDQyOQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455974429", "bodyText": "$ is string interpolation in Kotlin. It should be replaced by the actual variable's toString().", "author": "creativitRy", "createdAt": "2020-07-16T18:05:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1Nzk0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA2OTc1MQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456069751", "bodyText": "thanks!", "author": "kikkyo", "createdAt": "2020-07-16T20:50:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1Nzk0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2NzgwNA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455467804", "bodyText": "Is it better practice to use mock annotation @mockk?", "author": "kikkyo", "createdAt": "2020-07-16T02:10:41Z", "path": "tools/sql_extraction/src/test/kotlin/DataFlowSolverTest.kt", "diffHunk": "@@ -39,13 +42,16 @@ class DataFlowSolverTest {\n     }\n \n     @Test\n-    fun `solver throws without any valid frontends`() {\n+    fun `solver returns empty sequence without any valid frontends`() {\n         val frontEnd = mockk<FrontEnd>()", "originalCommit": "33960836029854fbbcbced8a42807d17ab02bc4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2ODExMw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455468113", "bodyText": "I think it is more common in our codebase to use annotation and set up the 'shared' mock variable inside the test class, instead of creating them in each method.", "author": "kikkyo", "createdAt": "2020-07-16T02:11:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2NzgwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2OTAzNg==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455469036", "bodyText": "curious on the style too... why not 'SolverReturnsEmptySequence....'? Is this recommended?", "author": "kikkyo", "createdAt": "2020-07-16T02:15:26Z", "path": "tools/sql_extraction/src/test/kotlin/DataFlowSolverTest.kt", "diffHunk": "@@ -39,13 +42,16 @@ class DataFlowSolverTest {\n     }\n \n     @Test\n-    fun `solver throws without any valid frontends`() {\n+    fun `solver returns empty sequence without any valid frontends`() {", "originalCommit": "33960836029854fbbcbced8a42807d17ab02bc4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk3NjcxNQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455976715", "bodyText": "Since the language allows method names with spaces, I thought it would be more readable. I just did more reading and found unit testing best practices for Kotlin, which is recommending backticks.", "author": "creativitRy", "createdAt": "2020-07-16T18:08:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2OTAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MDI4NQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456070285", "bodyText": "ok thanks!", "author": "kikkyo", "createdAt": "2020-07-16T20:51:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2OTAzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MTQ4Nw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456071487", "bodyText": "Do we have to specify both options to make it work?", "author": "kikkyo", "createdAt": "2020-07-16T20:53:32Z", "path": "tools/sql_extraction/src/main/kotlin/Cli.kt", "diffHunk": "@@ -74,13 +72,28 @@ private class Cli(\n         \"--pretty\", help = \"Pretty-print output JSON\"\n     ).flag()\n \n+    private val showProgress: Boolean by option(\n+        \"--progress\", help = \"Print progress to STDERR\"\n+    ).flag()\n+\n+    private val debug: Boolean by option(\n+        \"--debug\", \"--verbose\", help = \"Print debug logs to STDERR\"", "originalCommit": "33960836029854fbbcbced8a42807d17ab02bc4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEwOTg1Mg==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456109852", "bodyText": "It works for either one", "author": "creativitRy", "createdAt": "2020-07-16T22:17:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MTQ4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MjA4MA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456072080", "bodyText": "This setProperty looks a bit hard coded, do we have to update this if our dependency/libs change in future?", "author": "kikkyo", "createdAt": "2020-07-16T20:54:45Z", "path": "tools/sql_extraction/src/main/kotlin/Cli.kt", "diffHunk": "@@ -74,13 +72,28 @@ private class Cli(\n         \"--pretty\", help = \"Pretty-print output JSON\"\n     ).flag()\n \n+    private val showProgress: Boolean by option(\n+        \"--progress\", help = \"Print progress to STDERR\"\n+    ).flag()\n+\n+    private val debug: Boolean by option(\n+        \"--debug\", \"--verbose\", help = \"Print debug logs to STDERR\"\n+    ).flag()\n+\n     override fun run() {\n-        LOGGER.debug(\"Starting SQL Extraction from command line\")\n+        if (debug) {\n+            System.setProperty(org.slf4j.impl.SimpleLogger.DEFAULT_LOG_LEVEL_KEY, \"Debug\")", "originalCommit": "33960836029854fbbcbced8a42807d17ab02bc4e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExMTY2Ng==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456111666", "bodyText": "Yes, this would have to change if we were to change the logging dependencies from slf4j to something else.", "author": "creativitRy", "createdAt": "2020-07-16T22:23:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MjA4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExMTg0Mg==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456111842", "bodyText": "I realized I can import SimpleLogger for brevity.", "author": "creativitRy", "createdAt": "2020-07-16T22:23:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MjA4MA=="}], "type": "inlineReview"}, {"oid": "91e631ed87016aefb248f66baa7b5695af844d03", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/91e631ed87016aefb248f66baa7b5695af844d03", "message": "Import SimpleLogger", "committedDate": "2020-07-16T22:27:18Z", "type": "commit"}, {"oid": "acc8591af05beaa121f6cef26643854846b3a022", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/acc8591af05beaa121f6cef26643854846b3a022", "message": "Merge branch 'master' into master", "committedDate": "2020-07-17T17:27:36Z", "type": "commit"}]}