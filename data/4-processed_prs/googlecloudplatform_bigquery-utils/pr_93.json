{"pr_number": 93, "pr_title": "SQL Extraction: Basic query confidence rater", "pr_createdAt": "2020-07-10T23:26:27Z", "pr_url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/93", "timeline": [{"oid": "29a2e4d447acc8cb572862621e9619d6b7df064c", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/29a2e4d447acc8cb572862621e9619d6b7df064c", "message": "SQL Extraction: Basic query confidence rater", "committedDate": "2020-07-10T23:18:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNTY3OA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/93#discussion_r454015678", "bodyText": "keywords should be a Set, instead of a Map.", "author": "feiling", "createdAt": "2020-07-13T23:56:31Z", "path": "tools/sql_extraction/src/main/kotlin/ConfidenceRater.kt", "diffHunk": "@@ -0,0 +1,113 @@\n+package com.google.cloud.sqlecosystem.sqlextraction\n+\n+import com.google.cloud.sqlecosystem.sqlextraction.output.QueryFragment\n+\n+private const val WITH_DELIMITER = \"((?<=%1\\$s)|(?=%1\\$s))\"\n+\n+/**\n+ * Rates a [QueryFragment] a confidence value to indicate how likely it is to be a query.\n+ * @see rate\n+ */\n+class ConfidenceRater {\n+    private val keywords: Map<String, Int> = mapOf(", "originalCommit": "29a2e4d447acc8cb572862621e9619d6b7df064c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNTk3Nw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/93#discussion_r454015977", "bodyText": "What's the purpose of checking index == 0?", "author": "feiling", "createdAt": "2020-07-13T23:57:29Z", "path": "tools/sql_extraction/src/main/kotlin/ConfidenceRater.kt", "diffHunk": "@@ -0,0 +1,113 @@\n+package com.google.cloud.sqlecosystem.sqlextraction\n+\n+import com.google.cloud.sqlecosystem.sqlextraction.output.QueryFragment\n+\n+private const val WITH_DELIMITER = \"((?<=%1\\$s)|(?=%1\\$s))\"\n+\n+/**\n+ * Rates a [QueryFragment] a confidence value to indicate how likely it is to be a query.\n+ * @see rate\n+ */\n+class ConfidenceRater {\n+    private val keywords: Map<String, Int> = mapOf(\n+        \"Add\" to 1,\n+        \"All\" to 1,\n+        \"Alter\" to 1,\n+        \"And\" to 1,\n+        \"Any\" to 1,\n+        \"As\" to 1,\n+        \"Asc\" to 1,\n+        \"Backup\" to 1,\n+        \"Between\" to 1,\n+        \"Case\" to 1,\n+        \"Check\" to 1,\n+        \"Column\" to 1,\n+        \"Constraint\" to 1,\n+        \"Create\" to 1,\n+        \"Database\" to 1,\n+        \"Default\" to 1,\n+        \"Delete\" to 1,\n+        \"Desc\" to 1,\n+        \"Distinct\" to 1,\n+        \"Drop\" to 1,\n+        \"Exec\" to 1,\n+        \"Exists\" to 1,\n+        \"Foreign\" to 1,\n+        \"From\" to 1,\n+        \"Full\" to 1,\n+        \"Group\" to 1,\n+        \"Having\" to 1,\n+        \"In\" to 1,\n+        \"Index\" to 1,\n+        \"Inner\" to 1,\n+        \"Insert\" to 1,\n+        \"Is\" to 1,\n+        \"Join\" to 1,\n+        \"Left\" to 1,\n+        \"Like\" to 1,\n+        \"Limit\" to 1,\n+        \"Not\" to 1,\n+        \"Null\" to 1,\n+        \"Or\" to 1,\n+        \"Order\" to 1,\n+        \"Outer\" to 1,\n+        \"Primary\" to 1,\n+        \"Procedure\" to 1,\n+        \"Right\" to 1,\n+        \"RowNum\" to 1,\n+        \"Select\" to 1,\n+        \"Set\" to 1,\n+        \"Table\" to 1,\n+        \"Top\" to 1,\n+        \"Truncate\" to 1,\n+        \"Union\" to 1,\n+        \"Unique\" to 1,\n+        \"Update\" to 1,\n+        \"Values\" to 1,\n+        \"View\" to 1,\n+        \"Where\" to 1\n+    ).mapKeys { it.key.toUpperCase() }\n+\n+    /**\n+     * Given [query], returns a confidence value within range [0.0, 1.0],\n+     * where 1.0 means it is most likely a SQL query\n+     */\n+    fun rate(query: QueryFragment): Double {\n+        val count = countSqlLikeTokens(query)\n+        if (count == 0) return 0.0\n+        return (count) / (count + 1.0)\n+    }\n+\n+    /**\n+     * Count the number of SQL keywords in [query].\n+     * Keywords are weighted, and the return value can be higher than the exact count.\n+     */\n+    private fun countSqlLikeTokens(query: QueryFragment): Int {\n+        if (query.complex != null) {\n+            return query.complex.sumBy(this::countSqlLikeTokens)\n+        } else if (query.literal.isNullOrBlank()) {\n+            return 0\n+        }\n+\n+        var count = 0\n+        for ((index, token) in tokenize(query.literal).withIndex()) {\n+            var localCount = keywords.getOrDefault(token.toUpperCase(), 0)\n+            if (index == 0 && localCount > 0) {", "originalCommit": "29a2e4d447acc8cb572862621e9619d6b7df064c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUxMTM3NQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/93#discussion_r454511375", "bodyText": "This was to check if a keyword appears at the front of the string, which I assumed would happen more frequently if the string is an actual SQL query.", "author": "creativitRy", "createdAt": "2020-07-14T17:10:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNTk3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIyNzc3NQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/93#discussion_r455227775", "bodyText": "Please add a comment to explain this.", "author": "feiling", "createdAt": "2020-07-15T17:41:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNTk3Nw=="}], "type": "inlineReview"}, {"oid": "b9796dabd5d8c1feacd07dc21013ab95956d3201", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/b9796dabd5d8c1feacd07dc21013ab95956d3201", "message": "Change keywords to a Set", "committedDate": "2020-07-14T17:16:38Z", "type": "commit"}, {"oid": "0922d66dc9609ed34056bbaad06a0d1e0cddcc22", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/0922d66dc9609ed34056bbaad06a0d1e0cddcc22", "message": "Added comment for preferring keywords found at the start", "committedDate": "2020-07-15T17:52:03Z", "type": "commit"}, {"oid": "c2bfd87c5cbde7566f0cc491972f429bd9ee442c", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/c2bfd87c5cbde7566f0cc491972f429bd9ee442c", "message": "Merge branch 'master' into confidence", "committedDate": "2020-07-15T21:07:10Z", "type": "commit"}]}