{"pr_number": 117, "pr_title": "SQL Extraction: highlight queries in VS Code", "pr_createdAt": "2020-07-25T00:17:18Z", "pr_url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/117", "timeline": [{"oid": "699cfe7b55afab0d86e05dca7b42d07ac4a0e9f8", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/699cfe7b55afab0d86e05dca7b42d07ac4a0e9f8", "message": "SQL Extraction: highlight queries in VS Code", "committedDate": "2020-07-25T00:10:19Z", "type": "commit"}, {"oid": "e86f2c0e207a2dbff9d70f4f82270e964f55c3e3", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/e86f2c0e207a2dbff9d70f4f82270e964f55c3e3", "message": "Better organize highlight method", "committedDate": "2020-07-27T16:46:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NzI3MQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/117#discussion_r461047271", "bodyText": "Are all those files under the .vscode directory needed to build the plugin?", "author": "feiling", "createdAt": "2020-07-27T17:20:32Z", "path": "tools/vscode_sql_extraction/.gitignore", "diffHunk": "@@ -3,3 +3,4 @@ node_modules\n .vscode-test/\n *.vsix\n /resources/sql_extraction\n+!/.vscode/", "originalCommit": "e86f2c0e207a2dbff9d70f4f82270e964f55c3e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5MDE4OA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/117#discussion_r461090188", "bodyText": "I believe so. The samples on GitHub all have those 4 files.", "author": "creativitRy", "createdAt": "2020-07-27T18:35:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NzI3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0ODY0MQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/117#discussion_r461048641", "bodyText": "In another pull request, please change getColor() to use the highlight color of the current theme. Add a TODO comment here.", "author": "feiling", "createdAt": "2020-07-27T17:22:46Z", "path": "tools/vscode_sql_extraction/src/highlighter.ts", "diffHunk": "@@ -0,0 +1,100 @@\n+import * as path from 'path';\n+import * as vscode from 'vscode';\n+import {Query, locationToRange} from './query';\n+import randomColor from 'randomcolor';\n+\n+/**\n+ * Highlights found queries in the text editor.\n+ */\n+export class Highlighter {\n+  decorations: vscode.TextEditorDecorationType[] = [];\n+\n+  /**\n+   * Highlights all queries in the open document.\n+   *\n+   * @param openEditor currently open editor.\n+   * @param workspaceRoot root path of the open workspace.\n+   * @param queries list of found queries.\n+   */\n+  highlight(\n+    openEditor: vscode.TextEditor,\n+    workspaceRoot: string,\n+    queries: Query[]\n+  ) {\n+    const currentQueries = this.getAllQueriesInCurrentFile(\n+      openEditor,\n+      workspaceRoot,\n+      queries\n+    );\n+    if (currentQueries.length <= 0) {\n+      return;\n+    }\n+\n+    currentQueries.forEach((query, index) => {\n+      const ranges: vscode.Range[] = [];\n+\n+      const workRemaining = [query.query];\n+      while (workRemaining.length > 0) {\n+        const fragment = workRemaining.pop()!;\n+        if (fragment.literal) {\n+          ranges.push(locationToRange(fragment.location));\n+        } else {\n+          // recurse for child fragments\n+          fragment.complex!.forEach(child => {\n+            workRemaining.push(child);\n+          });\n+        }\n+      }\n+\n+      query.usages.forEach(usage => {\n+        ranges.push(locationToRange(usage));\n+      });\n+\n+      openEditor.setDecorations(this.getColor(index), ranges);\n+    });\n+  }\n+\n+  /**\n+   * Gets all queries located in the currently open file.\n+   *\n+   * @param openEditor currently open editor.\n+   * @param workspaceRoot root path of the open workspace.\n+   * @param queries list of found queries.\n+   */\n+  private getAllQueriesInCurrentFile(\n+    openEditor: vscode.TextEditor,\n+    workspaceRoot: string,\n+    queries: Query[]\n+  ) {\n+    let openPath = openEditor.document.uri.path.toString();\n+    if (!path.isAbsolute(openPath)) {\n+      openPath = path.join(workspaceRoot, openPath);\n+    }\n+\n+    return queries.filter(query => {\n+      let filePath = query.file;\n+      if (!path.isAbsolute(filePath)) {\n+        filePath = path.join(workspaceRoot!, query.file);\n+      }\n+      return filePath === openPath;\n+    });\n+  }\n+\n+  /**\n+   * Updates the cache if needed, and then returns the relevant decoration.\n+   *\n+   * @param index decoration number to return.\n+   */\n+  private getColor(index: number): vscode.TextEditorDecorationType {", "originalCommit": "e86f2c0e207a2dbff9d70f4f82270e964f55c3e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5MTEyNw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/117#discussion_r461091127", "bodyText": "Good idea! Currently, I'm highlighting each query using a different color, but I can just have a few theme colors and cycle between them.", "author": "creativitRy", "createdAt": "2020-07-27T18:37:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0ODY0MQ=="}], "type": "inlineReview"}, {"oid": "c37bc47e3953c2fc409fee1f100120f7ee96c03e", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/c37bc47e3953c2fc409fee1f100120f7ee96c03e", "message": "Add todo for theme color", "committedDate": "2020-07-27T18:39:24Z", "type": "commit"}, {"oid": "3cbe1f1f31c65962689db2f6ea5398561b4fb064", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/3cbe1f1f31c65962689db2f6ea5398561b4fb064", "message": "Merge branch 'master' into master", "committedDate": "2020-07-28T16:09:53Z", "type": "commit"}]}