{"pr_number": 10376, "pr_title": "[#10213] Improve error handling", "pr_createdAt": "2020-07-21T07:47:24Z", "pr_url": "https://github.com/TEAMMATES/teammates/pull/10376", "timeline": [{"oid": "3bb83ee886bc742bce4770649bd7fab595df69ae", "url": "https://github.com/TEAMMATES/teammates/commit/3bb83ee886bc742bce4770649bd7fab595df69ae", "message": "Add retry component to instructor home page", "committedDate": "2020-07-21T07:36:53Z", "type": "commit"}, {"oid": "5f9b59fb116d8d51b4133827d31a4cb705e3f682", "url": "https://github.com/TEAMMATES/teammates/commit/5f9b59fb116d8d51b4133827d31a4cb705e3f682", "message": "Add retry to instructor course related pages", "committedDate": "2020-07-21T07:36:56Z", "type": "commit"}, {"oid": "ea81fe91c789b3b7e997bd06a5c8412082c25875", "url": "https://github.com/TEAMMATES/teammates/commit/ea81fe91c789b3b7e997bd06a5c8412082c25875", "message": "Add retry to instructor session related pages", "committedDate": "2020-07-21T07:36:56Z", "type": "commit"}, {"oid": "0a364d7aa47f413cb2628c6884f83f81a01a27ff", "url": "https://github.com/TEAMMATES/teammates/commit/0a364d7aa47f413cb2628c6884f83f81a01a27ff", "message": "Add retry to instructor student related pages", "committedDate": "2020-07-21T07:36:57Z", "type": "commit"}, {"oid": "ff8d268f4bbc159e827577586bc13166803c8bd0", "url": "https://github.com/TEAMMATES/teammates/commit/ff8d268f4bbc159e827577586bc13166803c8bd0", "message": "Add retry to student pages", "committedDate": "2020-07-21T07:36:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk1MDM2NA==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r457950364", "bodyText": "Maybe we could extract this into a const in the types folder. Same with all other retry attempt numbers for more centralised management. Right now it just feels like a magic number to me.", "author": "madanalogy", "createdAt": "2020-07-21T09:08:23Z", "path": "src/web/app/pages-instructor/instructor-session-base-page.component.ts", "diffHunk": "@@ -28,13 +30,17 @@ import { ErrorMessageOutput } from '../error-message-output';\n  */\n export abstract class InstructorSessionBasePageComponent {\n \n+  // Number of times publish/unpublish session is allowed to error before it is a reportable error\n+  private publishUnpublishRetryAttempts: number = 3;", "originalCommit": "3bb83ee886bc742bce4770649bd7fab595df69ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk1MjM2NA==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r457952364", "bodyText": "What do you mean by team is missing sorry? Is there any particular reason this todo shouldn't be resolved in this PR?", "author": "madanalogy", "createdAt": "2020-07-21T09:11:46Z", "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-result-page.component.ts", "diffHunk": "@@ -127,101 +133,112 @@ export class InstructorSessionResultPageComponent extends InstructorCommentsComp\n   ngOnInit(): void {\n     this.route.queryParams.subscribe((queryParams: any) => {\n       this.isFeedbackSessionLoading = true;\n-      this.feedbackSessionsService.getFeedbackSession({\n-        courseId: queryParams.courseid,\n-        feedbackSessionName: queryParams.fsname,\n-        intent: Intent.INSTRUCTOR_RESULT,\n-      }).subscribe((feedbackSession: FeedbackSession) => {\n-        const TIME_FORMAT: string = 'ddd, DD MMM, YYYY, hh:mm A zz';\n-        this.session = feedbackSession;\n-        this.formattedSessionOpeningTime = this.timezoneService\n-            .formatToString(this.session.submissionStartTimestamp, this.session.timeZone, TIME_FORMAT);\n-        this.formattedSessionClosingTime = this.timezoneService\n-            .formatToString(this.session.submissionEndTimestamp, this.session.timeZone, TIME_FORMAT);\n-        if (this.session.resultVisibleFromTimestamp) {\n-          this.formattedResultVisibleFromTime = this.timezoneService\n-              .formatToString(this.session.resultVisibleFromTimestamp, this.session.timeZone, TIME_FORMAT);\n-        }\n-        this.isFeedbackSessionLoading = false;\n-\n-        // load section tabs\n-        this.courseService.getCourseSectionNames(queryParams.courseid)\n-            .subscribe((courseSectionNames: CourseSectionNames) => {\n-              for (const sectionName of courseSectionNames.sectionNames) {\n-                this.sectionsModel.None = {\n-                  questions: [],\n-                  hasPopulated: false,\n-                  isTabExpanded: false,\n-                };\n-                this.sectionsModel[sectionName] = {\n-                  questions: [],\n-                  hasPopulated: false,\n-                  isTabExpanded: false,\n-                };\n-              }\n-              this.isSectionsLoaded = true;\n-            }, (resp: ErrorMessageOutput) => {\n-              this.statusMessageService.showErrorToast(resp.error.message);\n-            });\n-\n-        // load question tabs\n-        this.feedbackQuestionsService.getFeedbackQuestions({\n-          courseId: queryParams.courseid,\n-          feedbackSessionName: queryParams.fsname,\n-          intent: Intent.INSTRUCTOR_RESULT,\n-        }).subscribe((feedbackQuestions: FeedbackQuestions) => {\n-          for (const question of feedbackQuestions.questions) {\n-            this.questionsModel[question.feedbackQuestionId] = {\n-              question,\n-              responses: [],\n-              statistics: '',\n-              hasPopulated: false,\n-              isTabExpanded: false,\n-            };\n-          }\n-          this.isQuestionsLoaded = true;\n-        }, (resp: ErrorMessageOutput) => {\n-          this.statusMessageService.showErrorToast(resp.error.message);\n-        });\n-\n-        // load all students in course\n-        this.studentService.getStudentsFromCourse({\n-          courseId: queryParams.courseid,\n-        }).subscribe((allStudents: Students) => {\n-          this.allStudentsInCourse = allStudents.students;\n-\n-          // load no response students\n-          this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({\n-            courseId: queryParams.courseid,\n-            feedbackSessionName: queryParams.fsname,\n-          }).subscribe((feedbackSessionSubmittedGiverSet: FeedbackSessionSubmittedGiverSet) => {\n-            // TODO team is missing\n-            this.noResponseStudents = this.allStudentsInCourse.filter((student: Student) =>\n-                                        !feedbackSessionSubmittedGiverSet.giverIdentifiers.includes(student.email));\n+      this.courseId = queryParams.courseid;\n+      this.fsName = queryParams.fsname;\n+      this.loadFeedbackSessionResults(this.courseId, this.fsName);\n+    });\n+  }\n+\n+  loadFeedbackSessionResults(courseId: string, feedbackSessionName: string): void {\n+    this.feedbackSessionsService.getFeedbackSession({\n+      courseId,\n+      feedbackSessionName,\n+      intent: Intent.INSTRUCTOR_RESULT,\n+    }).subscribe((feedbackSession: FeedbackSession) => {\n+      const TIME_FORMAT: string = 'ddd, DD MMM, YYYY, hh:mm A zz';\n+      this.session = feedbackSession;\n+      this.formattedSessionOpeningTime = this.timezoneService\n+          .formatToString(this.session.submissionStartTimestamp, this.session.timeZone, TIME_FORMAT);\n+      this.formattedSessionClosingTime = this.timezoneService\n+          .formatToString(this.session.submissionEndTimestamp, this.session.timeZone, TIME_FORMAT);\n+      if (this.session.resultVisibleFromTimestamp) {\n+        this.formattedResultVisibleFromTime = this.timezoneService\n+            .formatToString(this.session.resultVisibleFromTimestamp, this.session.timeZone, TIME_FORMAT);\n+      }\n+      this.isFeedbackSessionLoading = false;\n+\n+      // load section tabs\n+      this.courseService.getCourseSectionNames(courseId)\n+          .subscribe((courseSectionNames: CourseSectionNames) => {\n+            for (const sectionName of courseSectionNames.sectionNames) {\n+              this.sectionsModel.None = {\n+                questions: [],\n+                hasPopulated: false,\n+                isTabExpanded: false,\n+              };\n+              this.sectionsModel[sectionName] = {\n+                questions: [],\n+                hasPopulated: false,\n+                isTabExpanded: false,\n+              };\n+            }\n+            this.isSectionsLoaded = true;\n           }, (resp: ErrorMessageOutput) => {\n+            this.hasSectionsLoadingFailed = true;\n             this.statusMessageService.showErrorToast(resp.error.message);\n           });\n \n-          this.isNoResponsePanelLoaded = true;\n-\n-        }, (resp: ErrorMessageOutput) => {\n-          this.statusMessageService.showErrorToast(resp.error.message);\n-        });\n+      // load question tabs\n+      this.feedbackQuestionsService.getFeedbackQuestions({\n+        courseId,\n+        feedbackSessionName,\n+        intent: Intent.INSTRUCTOR_RESULT,\n+      }).subscribe((feedbackQuestions: FeedbackQuestions) => {\n+        for (const question of feedbackQuestions.questions) {\n+          this.questionsModel[question.feedbackQuestionId] = {\n+            question,\n+            responses: [],\n+            statistics: '',\n+            hasPopulated: false,\n+            isTabExpanded: false,\n+          };\n+        }\n+        this.isQuestionsLoaded = true;\n+      }, (resp: ErrorMessageOutput) => {\n+        this.hasQuestionsLoadingFailed = true;\n+        this.statusMessageService.showErrorToast(resp.error.message);\n+      });\n \n-        // load current instructor name\n-        this.instructorService.getInstructor({\n-          courseId: queryParams.courseid,\n-          intent: Intent.FULL_DETAIL,\n-        }).subscribe((instructor: Instructor) => {\n-          this.currInstructorName = instructor.name;\n-        });\n+      // load all students in course\n+      this.studentService.getStudentsFromCourse({\n+        courseId,\n+      }).subscribe((allStudents: Students) => {\n+        this.allStudentsInCourse = allStudents.students;\n+        this.loadNoResponseStudents(courseId, feedbackSessionName);\n       }, (resp: ErrorMessageOutput) => {\n-        this.isFeedbackSessionLoading = false;\n         this.statusMessageService.showErrorToast(resp.error.message);\n       });\n+\n+      // load current instructor name\n+      this.instructorService.getInstructor({\n+        courseId,\n+        intent: Intent.FULL_DETAIL,\n+      }).subscribe((instructor: Instructor) => {\n+        this.currInstructorName = instructor.name;\n+      });\n+    }, (resp: ErrorMessageOutput) => {\n+      this.isFeedbackSessionLoading = false;\n+      this.hasFeedbackSessionLoadingFailed = true;\n+      this.statusMessageService.showErrorToast(resp.error.message);\n     });\n   }\n \n+  loadNoResponseStudents(courseId: string, feedbackSessionName: string): void {\n+    // load no response students\n+    this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({\n+      courseId,\n+      feedbackSessionName,\n+    }).subscribe((feedbackSessionSubmittedGiverSet: FeedbackSessionSubmittedGiverSet) => {\n+      // TODO team is missing", "originalCommit": "ea81fe91c789b3b7e997bd06a5c8412082c25875", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk3MTAwOQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r457971009", "bodyText": "Actually, I have no idea why the TODO is there since the no response panel has team names so I thought it was meant to be some sort of marker for some feature? Maybe the senior devs can shed some light on this.", "author": "t-cheepeng", "createdAt": "2020-07-21T09:43:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk1MjM2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNjUzNw==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458516537", "bodyText": "Missing feature (I believe it is also missing in V6). If the question for a team, the no response panel will not count for that even the team a student belongs has responses.", "author": "xpdavid", "createdAt": "2020-07-22T03:46:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk1MjM2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk1NTE2Ng==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r457955166", "bodyText": "Similar comment regarding magic number here", "author": "madanalogy", "createdAt": "2020-07-21T09:16:35Z", "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -100,6 +101,8 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n   moderatedQuestionId: string = '';\n \n   isFeedbackSessionQuestionsLoading: boolean = false;\n+  hasFeedbackSessionQuestionsLoadingFailed: boolean = false;\n+  retryAttempts: number = 2;", "originalCommit": "ff8d268f4bbc159e827577586bc13166803c8bd0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fb675180a60ac11c02c8b979cfb15ac886e9d001", "url": "https://github.com/TEAMMATES/teammates/commit/fb675180a60ac11c02c8b979cfb15ac886e9d001", "message": "Extract out retry attempts to separate file", "committedDate": "2020-07-21T09:53:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxMTkxNQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458511915", "bodyText": "I don't think we should create any new retry method. this.loadCourses(); would already has the responsibility of setting this.hasCoursesLoaded and this.hasCoursesLoadingFailed to false.", "author": "xpdavid", "createdAt": "2020-07-22T03:27:20Z", "path": "src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.ts", "diffHunk": "@@ -386,4 +395,22 @@ export class InstructorHomePageComponent extends InstructorSessionModalPageCompo\n   downloadSessionResultEventHandler(tabIndex: number, rowIndex: number): void {\n     this.downloadSessionResult(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);\n   }\n+\n+  /**\n+   * Retries loading all the courses\n+   */\n+  retryLoadingCourses(): void {", "originalCommit": "3bb83ee886bc742bce4770649bd7fab595df69ae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxMjAwNA==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458512004", "bodyText": "Similar here and in other places also. What do you think?", "author": "xpdavid", "createdAt": "2020-07-22T03:27:39Z", "path": "src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.ts", "diffHunk": "@@ -386,4 +395,22 @@ export class InstructorHomePageComponent extends InstructorSessionModalPageCompo\n   downloadSessionResultEventHandler(tabIndex: number, rowIndex: number): void {\n     this.downloadSessionResult(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);\n   }\n+\n+  /**\n+   * Retries loading all the courses\n+   */\n+  retryLoadingCourses(): void {\n+    this.hasCoursesLoadingFailed = false;\n+    this.hasCoursesLoaded = false;\n+    this.loadCourses();\n+  }\n+\n+  /**\n+   * Retries loading a feedback session from a course\n+   */\n+  retryLoadingSession(index: number): void {", "originalCommit": "3bb83ee886bc742bce4770649bd7fab595df69ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyODUxMA==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458528510", "bodyText": "I think that would work for the places where the retry calls one load only. Then the retry component just calls that load method. But there are some retry that does multiple load method calls like in student-course-details-page. I think the ones with multiple load calls would still benefit from having a retry method for both readability and ensuring the variable is set to false at one point only.", "author": "t-cheepeng", "createdAt": "2020-07-22T04:34:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxMjAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5OTYyMw==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r459199623", "bodyText": "@xpdavid So what do you think about the suggestion above(i.e., single load be shifted but we keep retry method for multiple load calls)?", "author": "t-cheepeng", "createdAt": "2020-07-23T03:44:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxMjAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwNTk3OA==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r459205978", "bodyText": "Yup. That would make more sense.", "author": "xpdavid", "createdAt": "2020-07-23T04:16:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxMjAwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxMzI3Nw==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458513277", "bodyText": "The variable should be set inside loadFeedbackSessionResults I think", "author": "xpdavid", "createdAt": "2020-07-22T03:32:31Z", "path": "src/web/app/pages-instructor/instructor-session-result-page/instructor-session-result-page.component.ts", "diffHunk": "@@ -127,101 +133,112 @@ export class InstructorSessionResultPageComponent extends InstructorCommentsComp\n   ngOnInit(): void {\n     this.route.queryParams.subscribe((queryParams: any) => {\n       this.isFeedbackSessionLoading = true;", "originalCommit": "ea81fe91c789b3b7e997bd06a5c8412082c25875", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNzEzMg==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458517132", "bodyText": "Again, I think it is loadCandidatesCourse's responsibility to set hasCourseLoadingFailed and courseCandidates at the begining.", "author": "xpdavid", "createdAt": "2020-07-22T03:48:21Z", "path": "src/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.ts", "diffHunk": "@@ -604,6 +615,23 @@ export class InstructorSessionsPageComponent extends InstructorSessionModalPageC\n       }, (resp: ErrorMessageOutput) => {\n         this.statusMessageService.showErrorToast(resp.error.message);\n       });\n-    }, () => {});\n+    });\n+  }\n+\n+  /**\n+   * Attempts to load all data again.\n+   */\n+  retryLoadingAllData(): void {\n+    this.hasFeedbackSessionLoadingFailed = false;\n+    this.hasCourseLoadingFailed = false;\n+    this.loadCandidatesCourse();", "originalCommit": "ea81fe91c789b3b7e997bd06a5c8412082c25875", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNzUwNA==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458517504", "bodyText": "Any specific reason to promote courseId to class attribute?", "author": "xpdavid", "createdAt": "2020-07-22T03:49:48Z", "path": "src/web/app/pages-instructor/instructor-course-student-details-page/instructor-course-student-details-page.component.ts", "diffHunk": "@@ -22,8 +22,13 @@ export class InstructorCourseStudentDetailsPageComponent implements OnInit {\n   studentProfile?: StudentProfile;\n   photoUrl: string = '';\n \n+  courseId: string = '';", "originalCommit": "0a364d7aa47f413cb2628c6884f83f81a01a27ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyNjk0NA==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r458526944", "bodyText": "This was so that I could call the loadStudentDetails method again", "author": "t-cheepeng", "createdAt": "2020-07-22T04:27:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNzUwNA=="}], "type": "inlineReview"}, {"oid": "a5da496812c695183dfa2b7ba20abd1a22a379b3", "url": "https://github.com/TEAMMATES/teammates/commit/a5da496812c695183dfa2b7ba20abd1a22a379b3", "message": "Shift loading variable to appropriate place", "committedDate": "2020-07-22T04:36:26Z", "type": "commit"}, {"oid": "1facf2c5e0663731d0e795acddbf0b1af1221358", "url": "https://github.com/TEAMMATES/teammates/commit/1facf2c5e0663731d0e795acddbf0b1af1221358", "message": "Merge branch 'master' into improve-error-handling", "committedDate": "2020-07-23T04:42:42Z", "type": "commit"}, {"oid": "c379f2bd06ae4e3ebac2f4088df5bcb893252cec", "url": "https://github.com/TEAMMATES/teammates/commit/c379f2bd06ae4e3ebac2f4088df5bcb893252cec", "message": "Remove retry method and set fail variable in load", "committedDate": "2020-07-23T09:42:10Z", "type": "commit"}, {"oid": "0d1773a6b639ef17d8c17dcb9df78a0815b6ccf0", "url": "https://github.com/TEAMMATES/teammates/commit/0d1773a6b639ef17d8c17dcb9df78a0815b6ccf0", "message": "Remove loading bar from instructor home page", "committedDate": "2020-07-23T09:42:58Z", "type": "commit"}, {"oid": "1968b0e5d2762b4398334b3abfecf24c1b4cb979", "url": "https://github.com/TEAMMATES/teammates/commit/1968b0e5d2762b4398334b3abfecf24c1b4cb979", "message": "Change access modifier in course details page", "committedDate": "2020-07-23T11:03:13Z", "type": "commit"}, {"oid": "2f661fc44270ce1ece8a4b95050009ba9ef34873", "url": "https://github.com/TEAMMATES/teammates/commit/2f661fc44270ce1ece8a4b95050009ba9ef34873", "message": "Merge branch 'master' into improve-error-handling", "committedDate": "2020-07-27T03:50:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0ODg1Ng==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r460648856", "bodyText": "Consistent naming?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              hasFailedLoadingStudents: boolean = false;\n          \n          \n            \n              hasLoadingStudentsFailed: boolean = false;", "author": "xpdavid", "createdAt": "2020-07-27T05:06:23Z", "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts", "diffHunk": "@@ -68,6 +68,7 @@ export class InstructorCourseEnrollPageComponent implements OnInit {\n \n   existingStudentsHOT: string = 'existingStudentsHOT';\n   isExistingStudentsPresent: boolean = true;\n+  hasFailedLoadingStudents: boolean = false;", "originalCommit": "2f661fc44270ce1ece8a4b95050009ba9ef34873", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MDM5OQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10376#discussion_r460650399", "bodyText": "Can we be consistent on this?\nUse DEFAULT_NUMBER_OF_RETRY_ATTEMPTS ?", "author": "xpdavid", "createdAt": "2020-07-27T05:13:07Z", "path": "src/web/app/pages-session/session-result-page/session-result-page.component.ts", "diffHunk": "@@ -54,6 +56,8 @@ export class SessionResultPageComponent implements OnInit {\n   regKey: string = '';\n \n   isFeedbackSessionResultsLoading: boolean = false;\n+  hasFeedbackSessionResultsLoadingFailed: boolean = false;\n+  retryAttempts: number = 2;", "originalCommit": "2f661fc44270ce1ece8a4b95050009ba9ef34873", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "42d85b90edf8e19fd05c85c79ef093eae9be1ba4", "url": "https://github.com/TEAMMATES/teammates/commit/42d85b90edf8e19fd05c85c79ef093eae9be1ba4", "message": "Change variable name and use constant", "committedDate": "2020-07-27T06:57:11Z", "type": "commit"}, {"oid": "42b98f87ec205850cc3b5f4b544425cc9b801f82", "url": "https://github.com/TEAMMATES/teammates/commit/42b98f87ec205850cc3b5f4b544425cc9b801f82", "message": "Merge branch 'master' into improve-error-handling", "committedDate": "2020-07-27T06:57:44Z", "type": "commit"}]}