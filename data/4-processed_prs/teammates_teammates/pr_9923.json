{"pr_number": 9923, "pr_title": "[#9921] Don't load all courses again when deleting/archiving courses in InstructorCoursesPageComponent", "pr_createdAt": "2020-01-18T15:30:36Z", "pr_url": "https://github.com/TEAMMATES/teammates/pull/9923", "timeline": [{"oid": "645631675bc8ebc26ce26493c1b91c10f2771765", "url": "https://github.com/TEAMMATES/teammates/commit/645631675bc8ebc26ce26493c1b91c10f2771765", "message": "Prevent multiple loading of courses after archiving/deleting courses in courses page", "committedDate": "2020-01-18T15:25:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2NTY1OA==", "url": "https://github.com/TEAMMATES/teammates/pull/9923#discussion_r368365658", "bodyText": "Naming convention:\n\nIt is a bit weird to mention frontend here as you are already in the frontend.\nA bit redundant to say in front-end only\nonXXX is more of naming convention for an event handler.", "author": "xpdavid", "createdAt": "2020-01-20T04:25:14Z", "path": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts", "diffHunk": "@@ -248,6 +320,28 @@ export class InstructorCoursesPageComponent implements OnInit {\n     }, () => {});\n   }\n \n+  /**\n+   * Moves an active/archived course to Recycle Bin in front-end only.\n+   * This is to reduce the need to refresh the entire list of courses multiple times.\n+   */\n+  onDeleteFrontEnd(courseId: string): void {", "originalCommit": "645631675bc8ebc26ce26493c1b91c10f2771765", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2NzI3Ng==", "url": "https://github.com/TEAMMATES/teammates/pull/9923#discussion_r368367276", "bodyText": "How about combining ActiveCourseModel ArchivedCourseModel SoftDeletedCourseModel into one CourseModel?", "author": "xpdavid", "createdAt": "2020-01-20T04:37:29Z", "path": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts", "diffHunk": "@@ -228,6 +228,78 @@ export class InstructorCoursesPageComponent implements OnInit {\n     });\n   }\n \n+  /**\n+   * Changes the status of an archived course in front-end only.\n+   * This is to reduce the need to refresh the entire list of courses multiple times.\n+   */\n+  changeFrontEndArchiveStatus(courseId: string, toArchive: boolean): void {", "originalCommit": "645631675bc8ebc26ce26493c1b91c10f2771765", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3MTEyNA==", "url": "https://github.com/TEAMMATES/teammates/pull/9923#discussion_r368371124", "bodyText": "Noted with thanks! I will consider about that.", "author": "niqiukun", "createdAt": "2020-01-20T05:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2NzI3Ng=="}], "type": "inlineReview"}, {"oid": "7bc98bf1ea7667ac585efc155bc732f8b1332df1", "url": "https://github.com/TEAMMATES/teammates/commit/7bc98bf1ea7667ac585efc155bc732f8b1332df1", "message": "Organise various model types into one CourseModel", "committedDate": "2020-01-20T06:18:15Z", "type": "commit"}, {"oid": "0a718457021de2ee9dcb4222ed1c1f054a5e9462", "url": "https://github.com/TEAMMATES/teammates/commit/0a718457021de2ee9dcb4222ed1c1f054a5e9462", "message": "Fix deletion date not assigned after moving the course into recycle bin", "committedDate": "2020-01-20T06:18:52Z", "type": "commit"}, {"oid": "58f3787b629a2293da206d3a6dfcb6ea6448238d", "url": "https://github.com/TEAMMATES/teammates/commit/58f3787b629a2293da206d3a6dfcb6ea6448238d", "message": "Make sorting persistent after courses restored from archive", "committedDate": "2020-01-20T06:29:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxOTU3MQ==", "url": "https://github.com/TEAMMATES/teammates/pull/9923#discussion_r368719571", "bodyText": "course now will have the true deletionTimestamp in the backend. Manually assigning a fake deletionTimestamp might cause data inconsistency in the future.", "author": "xpdavid", "createdAt": "2020-01-20T20:42:39Z", "path": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts", "diffHunk": "@@ -239,7 +296,7 @@ export class InstructorCoursesPageComponent implements OnInit {\n     const modalRef: NgbModalRef = this.modalService.open(CourseSoftDeletionConfirmModalComponent);\n     modalRef.result.then(() => {\n       this.courseService.binCourse(courseId).subscribe((course: Course) => {\n-        this.loadInstructorCourses();\n+        this.moveCourseToRecycleBin(courseId);", "originalCommit": "58f3787b629a2293da206d3a6dfcb6ea6448238d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxOTk1Mg==", "url": "https://github.com/TEAMMATES/teammates/pull/9923#discussion_r368719952", "bodyText": "You can try to combine findAndRemoveActiveCourse. ,indAndRemoveArchivedCourse and findAndRemoveSoftDeletedCourse to findAndRemoveCourseModel(from, couseId)?", "author": "xpdavid", "createdAt": "2020-01-20T20:44:11Z", "path": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts", "diffHunk": "@@ -216,18 +208,83 @@ export class InstructorCoursesPageComponent implements OnInit {\n     this.courseService.changeArchiveStatus(courseId, {\n       archiveStatus: toArchive,\n     }).subscribe((courseArchive: CourseArchive) => {\n-      this.loadInstructorCourses();\n       if (courseArchive.isArchived) {\n+        this.changeModelFromActiveToArchived(courseId);\n         this.statusMessageService.showSuccessMessage(`The course ${courseId} has been archived.\n           It will not appear on the home page anymore.`);\n       } else {\n+        this.changeModelFromArchivedToActive(courseId);\n         this.statusMessageService.showSuccessMessage('The course has been unarchived.');\n       }\n     }, (resp: ErrorMessageOutput) => {\n       this.statusMessageService.showErrorMessage(resp.error.message);\n     });\n   }\n \n+  /**\n+   * Moves a course model from active courses list to archived list.\n+   * This is to reduce the need to refresh the entire list of courses multiple times.\n+   */\n+  changeModelFromActiveToArchived(courseId: string): void {\n+    const courseToBeRemoved: CourseModel | undefined = this.findAndRemoveActiveCourse(courseId);\n+    if (courseToBeRemoved !== undefined) {\n+      this.archivedCourses.push(courseToBeRemoved);\n+    }\n+  }\n+\n+  /**\n+   * Moves a course model from archived courses list to active list.\n+   * This is to reduce the need to refresh the entire list of courses multiple times.\n+   */\n+  changeModelFromArchivedToActive(courseId: string): void {\n+    const courseToBeRemoved: CourseModel | undefined = this.findAndRemoveArchivedCourse(courseId);\n+    if (courseToBeRemoved !== undefined) {\n+      this.activeCourses.push(courseToBeRemoved);\n+      this.activeCourses.sort(this.sortBy(this.tableSortBy));\n+    }\n+  }\n+\n+  /**\n+   * Finds and removes an active course from the active course list.\n+   */\n+  findAndRemoveActiveCourse(courseId: string): CourseModel | undefined {", "originalCommit": "58f3787b629a2293da206d3a6dfcb6ea6448238d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ1OTA2Mg==", "url": "https://github.com/TEAMMATES/teammates/pull/9923#discussion_r369459062", "bodyText": "I tried setting the course model array as the parameter from. But the way used to remove the course by filter and assignment does not work because JavaScript makes a copy of the array. I also tried combining them into switch case statements but that makes the function lengthy. Any suggestions on the improvement?", "author": "niqiukun", "createdAt": "2020-01-22T09:48:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxOTk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3MjQzMQ==", "url": "https://github.com/TEAMMATES/teammates/pull/9923#discussion_r369672431", "bodyText": "Try\nthis.activeCourses = findAndRemoveCourseModel(findAndRemoveCourseModel, courseId)\n?", "author": "xpdavid", "createdAt": "2020-01-22T16:40:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxOTk1Mg=="}], "type": "inlineReview"}, {"oid": "b6d0add7f2b7eb977a9ff887177ecb3a824d328f", "url": "https://github.com/TEAMMATES/teammates/commit/b6d0add7f2b7eb977a9ff887177ecb3a824d328f", "message": "Refactor and return deletion timestamp from backend", "committedDate": "2020-01-23T03:07:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5ODU0MA==", "url": "https://github.com/TEAMMATES/teammates/pull/9923#discussion_r370398540", "bodyText": "My apologies. I thought we will return the updated course through the API.\nLooks like your change is necessary. In addition, don't forget to add Java test for it.", "author": "xpdavid", "createdAt": "2020-01-23T22:55:19Z", "path": "src/main/java/teammates/ui/webapi/action/BinCourseAction.java", "diffHunk": "@@ -33,7 +33,7 @@ public ActionResult execute() {\n         String idOfCourseToBin = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n         try {\n             CourseAttributes courseAttributes = logic.getCourse(idOfCourseToBin);\n-            logic.moveCourseToRecycleBin(idOfCourseToBin);\n+            courseAttributes.deletedAt = logic.moveCourseToRecycleBin(idOfCourseToBin);", "originalCommit": "b6d0add7f2b7eb977a9ff887177ecb3a824d328f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9d779de798b5803025dbcb6cba0e543801a4cb57", "url": "https://github.com/TEAMMATES/teammates/commit/9d779de798b5803025dbcb6cba0e543801a4cb57", "message": "Add test to verify deletion timestamp has been set", "committedDate": "2020-02-01T14:08:55Z", "type": "commit"}, {"oid": "93c38918c0b7d421a6a0f710ba29b4ac6b55fbc1", "url": "https://github.com/TEAMMATES/teammates/commit/93c38918c0b7d421a6a0f710ba29b4ac6b55fbc1", "message": "Merge branch 'master' into archive-delete-course-page", "committedDate": "2020-02-01T14:31:40Z", "type": "commit"}]}