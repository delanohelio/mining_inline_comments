{"pr_number": 10313, "pr_title": "[#9673] Fix feedback session names with '+' encoding", "pr_createdAt": "2020-07-14T09:53:23Z", "pr_url": "https://github.com/TEAMMATES/teammates/pull/10313", "timeline": [{"oid": "2c31b6a9c75b83ac104b0d97202306181f6a3274", "url": "https://github.com/TEAMMATES/teammates/commit/2c31b6a9c75b83ac104b0d97202306181f6a3274", "message": "add custom httpparameter encode and url encoder to accept plus sign", "committedDate": "2019-05-23T08:36:09Z", "type": "commit"}, {"oid": "7f8252c6a28788e194134edbf090005aa07fa73d", "url": "https://github.com/TEAMMATES/teammates/commit/7f8252c6a28788e194134edbf090005aa07fa73d", "message": "add test for custom url serializer", "committedDate": "2019-06-07T03:02:00Z", "type": "commit"}, {"oid": "b9d36ef411c861d45935fceb6983d27525d1a431", "url": "https://github.com/TEAMMATES/teammates/commit/b9d36ef411c861d45935fceb6983d27525d1a431", "message": "update method doc", "committedDate": "2019-06-07T05:02:57Z", "type": "commit"}, {"oid": "8c6b7cec4c041d8ded19274ea4679a204db96422", "url": "https://github.com/TEAMMATES/teammates/commit/8c6b7cec4c041d8ded19274ea4679a204db96422", "message": "update doc", "committedDate": "2019-06-19T07:15:49Z", "type": "commit"}, {"oid": "4fb76615cf2f63eb81c517654f81b5a35c337ebc", "url": "https://github.com/TEAMMATES/teammates/commit/4fb76615cf2f63eb81c517654f81b5a35c337ebc", "message": "Merge branch 'master' into 9673-9713\n\n# Conflicts:\n#\tsrc/web/app/app.module.ts\n#\tsrc/web/services/http-request.service.ts", "committedDate": "2020-07-14T09:57:14Z", "type": "forcePushed"}, {"oid": "df32feffab7d5c86b9abd8b3883e1c090a967a76", "url": "https://github.com/TEAMMATES/teammates/commit/df32feffab7d5c86b9abd8b3883e1c090a967a76", "message": "Merge branch 'master' into 9673-9713\n\n# Conflicts:\n#\tsrc/web/app/app.module.ts\n#\tsrc/web/services/http-request.service.ts", "committedDate": "2020-07-14T14:23:47Z", "type": "commit"}, {"oid": "df32feffab7d5c86b9abd8b3883e1c090a967a76", "url": "https://github.com/TEAMMATES/teammates/commit/df32feffab7d5c86b9abd8b3883e1c090a967a76", "message": "Merge branch 'master' into 9673-9713\n\n# Conflicts:\n#\tsrc/web/app/app.module.ts\n#\tsrc/web/services/http-request.service.ts", "committedDate": "2020-07-14T14:23:47Z", "type": "forcePushed"}, {"oid": "c840e701554cbe37e6df9189a2c34cbefd38d6b9", "url": "https://github.com/TEAMMATES/teammates/commit/c840e701554cbe37e6df9189a2c34cbefd38d6b9", "message": "Clean up docs", "committedDate": "2020-07-14T14:37:26Z", "type": "commit"}, {"oid": "c840e701554cbe37e6df9189a2c34cbefd38d6b9", "url": "https://github.com/TEAMMATES/teammates/commit/c840e701554cbe37e6df9189a2c34cbefd38d6b9", "message": "Clean up docs", "committedDate": "2020-07-14T14:37:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc2MzI4Nw==", "url": "https://github.com/TEAMMATES/teammates/pull/10313#discussion_r454763287", "bodyText": "Does it get fixed in Angular 9\n\n\nCan we extend HttpUrlEncodingCodec and only override encodeValue.", "author": "xpdavid", "createdAt": "2020-07-15T03:07:51Z", "path": "src/web/services/http-request.service.ts", "diffHunk": "@@ -1,10 +1,35 @@\n-import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n+import { HttpClient, HttpHeaders, HttpParameterCodec, HttpParams } from '@angular/common/http';\n import { Injectable } from '@angular/core';\n import { Observable } from 'rxjs';\n import { environment } from '../environments/environment';\n import { ResourceEndpoints } from '../types/api-endpoints';\n import { MasqueradeModeService } from './masquerade-mode.service';\n \n+/**\n+ * This encoder was created to support encoding and decoding of plus (+) signs.\n+ *\n+ * Angular will ignore the encoding for plus signs. Refer to:\n+ * https://github.com/angular/angular/blob/8.0.0/packages/common/http/src/params.ts#L33\n+ */\n+class CustomEncoder implements HttpParameterCodec {", "originalCommit": "c840e701554cbe37e6df9189a2c34cbefd38d6b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzMDI2Mg==", "url": "https://github.com/TEAMMATES/teammates/pull/10313#discussion_r455030262", "bodyText": "I can confirm that the problem is still there. I will work on extending the codec.", "author": "madanalogy", "createdAt": "2020-07-15T12:57:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc2MzI4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4NDgxMw==", "url": "https://github.com/TEAMMATES/teammates/pull/10313#discussion_r454784813", "bodyText": "https://github.com/angular/angular/blob/9.0.0/packages/common/http/src/params.ts#L81-L92\nThere should be a reason why they do it like this. Should just copy that and modify accordingly (if my hunch is right, remove line 88).", "author": "wkurniawan07", "createdAt": "2020-07-15T04:32:20Z", "path": "src/web/services/http-request.service.ts", "diffHunk": "@@ -1,10 +1,35 @@\n-import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n+import { HttpClient, HttpHeaders, HttpParameterCodec, HttpParams } from '@angular/common/http';\n import { Injectable } from '@angular/core';\n import { Observable } from 'rxjs';\n import { environment } from '../environments/environment';\n import { ResourceEndpoints } from '../types/api-endpoints';\n import { MasqueradeModeService } from './masquerade-mode.service';\n \n+/**\n+ * This encoder was created to support encoding and decoding of plus (+) signs.\n+ *\n+ * Angular will ignore the encoding for plus signs. Refer to:\n+ * https://github.com/angular/angular/blob/8.0.0/packages/common/http/src/params.ts#L33\n+ */\n+class CustomEncoder implements HttpParameterCodec {\n+\n+  encodeKey(key: string): string {\n+    return encodeURIComponent(key);", "originalCommit": "c840e701554cbe37e6df9189a2c34cbefd38d6b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzNzI2OA==", "url": "https://github.com/TEAMMATES/teammates/pull/10313#discussion_r455037268", "bodyText": "Do we want to remove the slash as well? i.e. is there a list of permissible special characters for session names?", "author": "madanalogy", "createdAt": "2020-07-15T13:09:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc4NDgxMw=="}], "type": "inlineReview"}, {"oid": "d086e9cb306718aa9d7bd586297a5db61705355b", "url": "https://github.com/TEAMMATES/teammates/commit/d086e9cb306718aa9d7bd586297a5db61705355b", "message": "Refactor CustomEncoder to use HttpUrlEncodingCodec", "committedDate": "2020-07-15T13:55:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4ODg3OQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10313#discussion_r455188879", "bodyText": "The url should be updated.", "author": "xpdavid", "createdAt": "2020-07-15T16:46:42Z", "path": "src/web/services/http-request.service.ts", "diffHunk": "@@ -1,10 +1,35 @@\n-import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n+import { HttpClient, HttpHeaders, HttpParams, HttpUrlEncodingCodec } from '@angular/common/http';\n import { Injectable } from '@angular/core';\n import { Observable } from 'rxjs';\n import { environment } from '../environments/environment';\n import { ResourceEndpoints } from '../types/api-endpoints';\n import { MasqueradeModeService } from './masquerade-mode.service';\n \n+/**\n+ * This encoder was created to support encoding and decoding of plus (+) signs.\n+ *\n+ * Angular will ignore the encoding for plus signs. Refer to:\n+ * https://github.com/angular/angular/blob/8.0.0/packages/common/http/src/params.ts#L33", "originalCommit": "d086e9cb306718aa9d7bd586297a5db61705355b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7c58c7e41006cc9e6f5726dd3ed18b7ae8ba64e6", "url": "https://github.com/TEAMMATES/teammates/commit/7c58c7e41006cc9e6f5726dd3ed18b7ae8ba64e6", "message": "Update method reference link", "committedDate": "2020-07-16T00:58:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU0ODEwNQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10313#discussion_r455548105", "bodyText": "Can use stricter type\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            const customUrlSerializerProvider: any = {\n          \n          \n            \n            const customUrlSerializerProvider: ValueProvider = {", "author": "ccyccyccy", "createdAt": "2020-07-16T06:51:07Z", "path": "src/web/app/app.module.ts", "diffHunk": "@@ -16,13 +16,19 @@ import {\n   StatusMesssageModalModule,\n } from './components/status-message/status-messsage-modal/status-messsage-modal.module';\n import { ToastModule } from './components/toast/toast.module';\n+import { CustomUrlSerializer } from './custom-url-serializer';\n import { ClickOutsideDirective, PageComponent } from './page.component';\n import { AdminPageComponent } from './pages-admin/admin-page.component';\n import { InstructorPageComponent } from './pages-instructor/instructor-page.component';\n import { StaticPageComponent } from './pages-static/static-page.component';\n import { StudentPageComponent } from './pages-student/student-page.component';\n import { PublicPageComponent } from './public-page.component';\n \n+const customUrlSerializer: CustomUrlSerializer = new CustomUrlSerializer();\n+const customUrlSerializerProvider: any = {", "originalCommit": "7c58c7e41006cc9e6f5726dd3ed18b7ae8ba64e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU0OTA2Ng==", "url": "https://github.com/TEAMMATES/teammates/pull/10313#discussion_r455549066", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              parse(url: any): UrlTree {\n          \n          \n            \n              parse(url: string): UrlTree {", "author": "ccyccyccy", "createdAt": "2020-07-16T06:53:17Z", "path": "src/web/app/custom-url-serializer.ts", "diffHunk": "@@ -0,0 +1,16 @@\n+import { DefaultUrlSerializer, UrlSerializer, UrlTree } from '@angular/router';\n+\n+/**\n+ * Custom Url Serializer to handle plus sign related issues\n+ */\n+export class CustomUrlSerializer implements UrlSerializer {\n+  parse(url: any): UrlTree {", "originalCommit": "7c58c7e41006cc9e6f5726dd3ed18b7ae8ba64e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d82a54b92bcdce59cf9219a3738263919957d63d", "url": "https://github.com/TEAMMATES/teammates/commit/d82a54b92bcdce59cf9219a3738263919957d63d", "message": "Enforce type parameters", "committedDate": "2020-07-16T08:19:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY0Nzk1MQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10313#discussion_r455647951", "bodyText": "Here as well :P\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              serialize(tree: UrlTree): any {\n          \n          \n            \n              serialize(tree: UrlTree): string {", "author": "ccyccyccy", "createdAt": "2020-07-16T09:22:18Z", "path": "src/web/app/custom-url-serializer.ts", "diffHunk": "@@ -0,0 +1,16 @@\n+import { DefaultUrlSerializer, UrlSerializer, UrlTree } from '@angular/router';\n+\n+/**\n+ * Custom Url Serializer to handle plus sign related issues\n+ */\n+export class CustomUrlSerializer implements UrlSerializer {\n+  parse(url: string): UrlTree {\n+    const dus: DefaultUrlSerializer = new DefaultUrlSerializer();\n+    return dus.parse(url.replace(/\\+/g, '%2B'));\n+  }\n+\n+  serialize(tree: UrlTree): any {", "originalCommit": "d82a54b92bcdce59cf9219a3738263919957d63d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8cb336606b17df3a74c8e24ec40a2f58643de2ac", "url": "https://github.com/TEAMMATES/teammates/commit/8cb336606b17df3a74c8e24ec40a2f58643de2ac", "message": "Enforce type parameters", "committedDate": "2020-07-16T10:45:12Z", "type": "commit"}, {"oid": "8cb336606b17df3a74c8e24ec40a2f58643de2ac", "url": "https://github.com/TEAMMATES/teammates/commit/8cb336606b17df3a74c8e24ec40a2f58643de2ac", "message": "Enforce type parameters", "committedDate": "2020-07-16T10:45:12Z", "type": "forcePushed"}, {"oid": "1087721e7524d76aebe0b5de897914558f3e4f80", "url": "https://github.com/TEAMMATES/teammates/commit/1087721e7524d76aebe0b5de897914558f3e4f80", "message": "Merge branch 'master' into 9673-9713", "committedDate": "2020-07-18T08:40:12Z", "type": "commit"}]}