{"pr_number": 10396, "pr_title": "[#10299] Fix Distribute Points (among recipients) Question Submission", "pr_createdAt": "2020-07-23T15:28:42Z", "pr_url": "https://github.com/TEAMMATES/teammates/pull/10396", "timeline": [{"oid": "1ec00a12f38fc2419f9e1c69514956e603976535", "url": "https://github.com/TEAMMATES/teammates/commit/1ec00a12f38fc2419f9e1c69514956e603976535", "message": "Fix empty responses should count as zero", "committedDate": "2020-07-23T13:02:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxOTQ1NQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459819455", "bodyText": "The task might be slightly difficult than you think, the current solution works but not the best I think. Firstly\n\nViolation: Event should be used for parent-child communication\nViolation: Not follow OCP principle. Image if we want to add validation and disable the button for other question types?", "author": "xpdavid", "createdAt": "2020-07-24T02:02:07Z", "path": "src/web/app/components/question-submission-form/question-submission-form.component.ts", "diffHunk": "@@ -27,6 +28,9 @@ import {\n })\n export class QuestionSubmissionFormComponent implements OnInit {\n \n+  @ViewChild(ConstsumRecipientsQuestionConstraintComponent)\n+  constSumConstraint: ConstsumRecipientsQuestionConstraintComponent | undefined;", "originalCommit": "87f66921a6b9c85ee83c14ab9ba7784e9be72c76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzMTYzMg==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459831632", "bodyText": "The task might be slightly difficult than you think, the current solution works but not the best I think. Firstly\n\nViolation: Event should be used for parent-child communication\nViolation: Not follow OCP principle. Image if we want to add validation and disable the button for other question types?\n\n\nI wanted to use Event at first, but then the question became \"how often should the child be emitting an update\"? Since the constraint component is separate from the question input component, you can't trigger on change? Unless the flow goes: OnChange, response input (child) emit to question component (parent) -> question component (parent) emit to constraint component (child) -> constraint to question -> question (child) to submission form (parent)\nThe above flow felt more convoluted than just having an optional ViewChild. But I see now that my current implementation is not extendable to include validation for other questions. I will try and think about how I can use Event with a consideration for extensibility.", "author": "madanalogy", "createdAt": "2020-07-24T03:05:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxOTQ1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxOTY5Mw==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459819693", "bodyText": "This is better suited as a interface which every *-constraint should override.", "author": "xpdavid", "createdAt": "2020-07-24T02:03:19Z", "path": "src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.ts", "diffHunk": "@@ -101,4 +101,43 @@ export class ConstsumRecipientsQuestionConstraintComponent implements OnInit {\n \n     return set.size !== 1;\n   }\n+\n+  get isAllPointsDistributed(): boolean {\n+    return this.totalAnsweredPoints < this.totalRequiredPoints;\n+  }\n+\n+  get isPointsOverAllocated(): boolean {\n+    return this.totalAnsweredPoints > this.totalRequiredPoints;\n+  }\n+\n+  get isWronglyAllUneven(): boolean {\n+    return this.questionDetails.distributePointsFor === FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY\n+        && !this.isAllPointsUneven;\n+  }\n+\n+  get isCorrectlyAllUneven(): boolean {\n+    return this.questionDetails.distributePointsFor === FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY\n+        && this.isAllPointsUneven;\n+  }\n+\n+  get isWronglySomeUneven(): boolean {\n+    return this.questionDetails.distributePointsFor === FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY\n+        && !this.isSomePointsUneven;\n+  }\n+\n+  get isCorrectlySomeUneven(): boolean {\n+    return this.questionDetails.distributePointsFor === FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY\n+        && this.isSomePointsUneven;\n+  }\n+\n+  get isSubmissionValid(): boolean {", "originalCommit": "87f66921a6b9c85ee83c14ab9ba7784e9be72c76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzMzIyMw==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459833223", "bodyText": "This is your starting point and should be where you fire the isValid event. Then your question becomes when should I fire the event? -> When the input changes? -> How can I know if the input changes?", "author": "xpdavid", "createdAt": "2020-07-24T03:14:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxOTY5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzMzc3Ng==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459833776", "bodyText": "This seems quite complex, I think I will remove the front-end validation from this PR and work on it in another PR so the UAT fix can get pushed out first. Thanks for all the guidance!", "author": "madanalogy", "createdAt": "2020-07-24T03:17:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxOTY5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyMDIwNg==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459820206", "bodyText": "Same here:\nViolation: Event should be used for parent-child communication\nIdeally, there should be a event stream from the child component (that keep firing whether the input is valid or not) and here we just need to aggregate them (maybe reducer in rxjs).\nThought, honestly I am 100% sure it will works and need some research on this.", "author": "xpdavid", "createdAt": "2020-07-24T02:05:37Z", "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -67,6 +68,9 @@ export interface FeedbackResponsesResponse {\n })\n export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n \n+  @ViewChild(QuestionSubmissionFormComponent)\n+  submissionForm: QuestionSubmissionFormComponent | undefined;", "originalCommit": "87f66921a6b9c85ee83c14ab9ba7784e9be72c76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzMjQ2MQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459832461", "bodyText": "Do you have any starting point I could go about to research this? I'm actually not sure how multiple optional event streams can be subscribed to much less aggregated", "author": "madanalogy", "createdAt": "2020-07-24T03:10:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyMDIwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyMDQ2MQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459820461", "bodyText": "I think there is no need to show error-specific message here (as they have been shown in the constraint). Just disable the submission button and say \"please check the constrains\" or something.", "author": "xpdavid", "createdAt": "2020-07-24T02:06:55Z", "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts", "diffHunk": "@@ -525,6 +529,11 @@ export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {\n    * <p>All empty feedback response will be deleted; For non-empty responses, update/create them if necessary.\n    */\n   saveFeedbackResponses(): void {\n+    if (this.submissionForm && !this.submissionForm.isValidSubmission) {\n+      this.statusMessageService.showErrorToast(\n+          'A distribute points question has an invalid response, please check your submission again');", "originalCommit": "87f66921a6b9c85ee83c14ab9ba7784e9be72c76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyMDcwNA==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459820704", "bodyText": "It will be a huge chaining if-else if we want to extend this to other question.", "author": "xpdavid", "createdAt": "2020-07-24T02:08:12Z", "path": "src/web/app/components/question-submission-form/question-submission-form.component.ts", "diffHunk": "@@ -207,4 +211,8 @@ export class QuestionSubmissionFormComponent implements OnInit {\n     return this.feedbackResponseService.isFeedbackResponseDetailsEmpty(\n         this.model.questionType, responseDetails);\n   }\n+\n+  get isValidSubmission(): boolean {\n+    return !!(this.constSumConstraint && this.constSumConstraint.isSubmissionValid);", "originalCommit": "87f66921a6b9c85ee83c14ab9ba7784e9be72c76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyMDk4Mg==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459820982", "bodyText": "If you abstract others, why not do it for this also? isAllPointsDistributed?", "author": "xpdavid", "createdAt": "2020-07-24T02:09:33Z", "path": "src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.html", "diffHunk": "@@ -1,24 +1,24 @@\n <div class=\"row\" *ngIf=\"!isAllFormsNotAnswered\">\n   <div class=\"col-12\">\n-    <p *ngIf=\"totalAnsweredPoints < totalRequiredPoints\" class=\"text-danger\"><span class=\"fa fa-times\"></span>\n+    <p *ngIf=\"isAllPointsDistributed\" class=\"text-danger\"><span class=\"fa fa-times\"></span>\n       Actual total is {{ totalAnsweredPoints }}! Distribute the remaining {{ totalRequiredPoints - totalAnsweredPoints }} points.</p>\n \n-    <p *ngIf=\"totalAnsweredPoints > totalRequiredPoints\" class=\"text-danger\"><span class=\"fa fa-times\"></span>\n+    <p *ngIf=\"isPointsOverAllocated\" class=\"text-danger\"><span class=\"fa fa-times\"></span>\n       Actual total is {{ totalAnsweredPoints }}! Remove the extra  {{ totalAnsweredPoints - totalRequiredPoints }} points allocated.</p>\n \n     <p *ngIf=\"totalAnsweredPoints === totalRequiredPoints\" class=\"text-success\"><span class=\"fa fa-check\"></span>", "originalCommit": "87f66921a6b9c85ee83c14ab9ba7784e9be72c76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyMTIyNA==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459821224", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              get isAllPointsDistributed(): boolean {\n          \n          \n            \n              get isInsufficientPointsDistributed(): boolean {\n          \n      \n    \n    \n  \n\n?", "author": "xpdavid", "createdAt": "2020-07-24T02:10:43Z", "path": "src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.ts", "diffHunk": "@@ -101,4 +101,43 @@ export class ConstsumRecipientsQuestionConstraintComponent implements OnInit {\n \n     return set.size !== 1;\n   }\n+\n+  get isAllPointsDistributed(): boolean {", "originalCommit": "87f66921a6b9c85ee83c14ab9ba7784e9be72c76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1ec00a12f38fc2419f9e1c69514956e603976535", "url": "https://github.com/TEAMMATES/teammates/commit/1ec00a12f38fc2419f9e1c69514956e603976535", "message": "Fix empty responses should count as zero", "committedDate": "2020-07-23T13:02:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MDc5Ng==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459850796", "bodyText": "I think the problem here is the check (not the empty array thing). The check says that if user want to delete the response, they can use backspace to delete the answer (though it is not possible to pass the constraint check). If event is 0 which is valid answer, it will incorrectly enter this branch as !0 is true in JavaScript.", "author": "xpdavid", "createdAt": "2020-07-24T04:51:27Z", "path": "src/web/app/components/question-types/question-edit-answer-form/constsum-recipients-question-edit-answer-form.component.ts", "diffHunk": "@@ -28,8 +28,8 @@ export class ConstsumRecipientsQuestionEditAnswerFormComponent\n    */\n   triggerResponse(event: number): void {\n     if (!event) {", "originalCommit": "1ec00a12f38fc2419f9e1c69514956e603976535", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1Mjk3NA==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459852974", "bodyText": "The check says that if user want to delete the response, they can use backspace to delete the answer\n\nThis should not be possible/allowed because the response is part of a larger question set. Deleting an option (currently represented as a response) while still allowing other options to be present should not logically be possible as they collectively constitute an answer set. This is my opinion anyway.\nIf I'm not wrong, since this method is only triggered onChange, it will not set the answer to 0 unless a change was made by the user. This should be a sufficient enough condition to indicate that the user wanted to give the 0 response. Additionally, with the placeholder, there is sufficient visual feedback to the user that the response is not 'empty' per se.", "author": "madanalogy", "createdAt": "2020-07-24T05:02:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1ODc2NQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459858765", "bodyText": "Then I think the correct fix is to remove the check. I think we should also remove the placeholder (see below).\nHere are the correct behaviors in my mind:\n\nUser leaves it as blank -> nothing being stored (which is why the placeholder thing should be removed or will be mis-interpreted)\nUser enters zero (will treat it as valid response) (because of the removal of the check)\nUser cannot delete submitted response for the question (which follows your reasoning)", "author": "xpdavid", "createdAt": "2020-07-24T05:31:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2MDUxMA==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459860510", "bodyText": "I see okay, yes that makes more sense thank you for the explanation", "author": "madanalogy", "createdAt": "2020-07-24T05:38:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2MzAxNQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459863015", "bodyText": "User leaves it as blank -> nothing being stored (which is why the placeholder thing should be removed or will be mis-interpreted)\n\n\n@xpdavid What happens if a user enters values for some options but not others? I think currently we assign 0 to empty entries because we need to consider all options in the calculation, due to the nature of this question.", "author": "damithc", "createdAt": "2020-07-24T05:49:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2NTI0Ng==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459865246", "bodyText": "What happens if a user enters values for some options but not others?\n\nThe validation would fail (empty response will treat as zero when doing validation).", "author": "xpdavid", "createdAt": "2020-07-24T05:58:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2ODYwNQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459868605", "bodyText": "The validation would fail (empty response will treat as zero when doing validation).\n\nI'm assuming you mean backend validation here. The problem is that an empty response will never be sent to the backend because of the frontend logic:\n\n  \n    \n      teammates/src/web/app/pages-session/session-submission-page/session-submission-page.component.ts\n    \n    \n        Lines 542 to 544\n      in\n      39013a4\n    \n    \n    \n    \n\n        \n          \n           if (recipientSubmissionFormModel.responseId !== '' && isFeedbackResponseDetailsEmpty) { \n        \n\n        \n          \n             // existing response but empty details -> delete response \n        \n\n        \n          \n             savingRequests.push(this.feedbackResponsesService.deleteFeedbackResponse({", "author": "madanalogy", "createdAt": "2020-07-24T06:11:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg3MDQ3NA==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459870474", "bodyText": "I am actually talking about frontend :P\n\n  \n    \n      teammates/src/web/app/components/question-types/question-constraint/constsum-recipients-question-constraint.component.ts\n    \n    \n        Lines 63 to 71\n      in\n      39013a4\n    \n    \n    \n    \n\n        \n          \n           return this.recipientSubmissionForms.map( \n        \n\n        \n          \n               (form: FeedbackResponseRecipientSubmissionFormModel) => { \n        \n\n        \n          \n                 const details: FeedbackConstantSumResponseDetails = \n        \n\n        \n          \n                     form.responseDetails as FeedbackConstantSumResponseDetails; \n        \n\n        \n          \n                 if (details.answers.length === 0) { \n        \n\n        \n          \n                   return 0; \n        \n\n        \n          \n                 } \n        \n\n        \n          \n                 return details.answers[0]; \n        \n\n        \n          \n               }); \n        \n    \n  \n\n\nWe do assign 0 to empty entries", "author": "xpdavid", "createdAt": "2020-07-24T06:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg3MzYwOA==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r459873608", "bodyText": "This is only in the constraint component though. This method is only used by the component's html for user indication of whether the constraints have been met. The constraints themselves are not checked during session submission, thus why we have #10397 unless I'm missing something\n\nWe do assign 0 to empty entries\n\nIf this were true, wouldn't this then also naturally extend to the fact that users cannot delete their responses? Since response deletion only happens when the response details is empty? Assigning zero to empty entries no longer makes it empty?", "author": "madanalogy", "createdAt": "2020-07-24T06:30:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MDc5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMzMzc5Ng==", "url": "https://github.com/TEAMMATES/teammates/pull/10396#discussion_r460333796", "bodyText": "If this were true, wouldn't this then also naturally extend to the fact that users cannot delete their responses?\n\nThought we have agreed on this. Yes for this question.\n\nAssigning zero to empty entries no longer makes it empty?\n\nJust for sake of calculating the total and display the error message. None of this happens in backend and persist to the database.", "author": "xpdavid", "createdAt": "2020-07-24T23:53:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1MDc5Ng=="}], "type": "inlineReview"}, {"oid": "6aa933a7f942ffd4bd7486fdfffdfc5cc9518e96", "url": "https://github.com/TEAMMATES/teammates/commit/6aa933a7f942ffd4bd7486fdfffdfc5cc9518e96", "message": "Remove check in constsum-recipients-question-edit-answer-form.component.ts", "committedDate": "2020-07-25T02:00:00Z", "type": "commit"}, {"oid": "cf56891055e2614daa18659ef5712292b32b0e15", "url": "https://github.com/TEAMMATES/teammates/commit/cf56891055e2614daa18659ef5712292b32b0e15", "message": "Merge branch 'master' into 10299-constsum", "committedDate": "2020-07-25T12:59:03Z", "type": "commit"}]}