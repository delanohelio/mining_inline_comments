{"pr_number": 3890, "pr_title": "[RW-5100][risk=no] Reactify homepage, workspace library", "pr_createdAt": "2020-08-17T21:11:56Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3890", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc3Nzg2Nw==", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r471777867", "bodyText": "redirecting to homepage seemed most correct, let me know if there's some other thing that seems correcter to you", "author": "als364", "createdAt": "2020-08-17T21:12:33Z", "path": "ui/src/app/app-routing.tsx", "diffHunk": "@@ -22,14 +24,21 @@ const signInGuard: Guard = {\n   redirectPath: '/login'\n };\n \n+const registrationGuard: Guard = {\n+  allowed: (): boolean => hasRegisteredAccess(profileStore.get().profile.dataAccessLevel),\n+  redirectPath: '/'", "originalCommit": "ce0b1ee70454843c759731ead1d3bdf84411868e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3MTYwNg==", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r472471606", "bodyText": "Does it work like this: if an unregistered user navigates to a registration-guarded page, it kicks them back to the homepage?  That sounds reasonable.", "author": "jmthibault79", "createdAt": "2020-08-18T20:29:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc3Nzg2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzExODI4Mw==", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r473118283", "bodyText": "Yep, exactly. We should probably make a 404 page eventually and do that instead.", "author": "als364", "createdAt": "2020-08-19T15:29:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc3Nzg2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc3ODg1Mw==", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r471778853", "bodyText": "worth noting: it caused confusing bugs when I tried to nest it inside the other ProtectedRoutes. so we'll probably have to enumerate all combinations of guards. not a huge deal since we only have a few.", "author": "als364", "createdAt": "2020-08-17T21:14:47Z", "path": "ui/src/app/app-routing.tsx", "diffHunk": "@@ -61,21 +70,41 @@ export const AppRoutingComponent: React.FunctionComponent<RoutingProps> = ({onSi\n     />\n \n     <ProtectedRoutes guards={[signInGuard]}>\n-        <AppRoute\n+      <AppRoute\n+        path='/'\n+          component={() => <HomepagePage routeData={{title: 'Homepage'}}/>}\n+      />\n+      <AppRoute\n+          path='/admin/user-audit'\n+          component={() => <UserAuditPage routeData={{title: 'User Audit'}}/>}\n+      />\n+      <AppRoute\n+          path='/admin/user-audit/:username'\n+          component={() => <UserAuditPage routeData={{title: 'User Audit'}}/>}\n+      />\n+      <AppRoute\n+          path='/admin/workspace-audit'\n+          component={() => <WorkspaceAuditPage routeData={{title: 'Workspace Audit'}}/>}\n+      />\n+      <AppRoute\n+          path='/admin/workspace-audit/:workspaceNamespace'\n+          component={() => <WorkspaceAuditPage routeData={{title: 'Workspace Audit'}}/>}\n+      />\n+      <AppRoute\n           path='/data-code-of-conduct'\n           component={ () => <DataUserCodeOfConductPage routeData={{\n             title: 'Data User Code of Conduct',\n             minimizeChrome: true\n           }} />}\n-        />\n-        <AppRoute path='/admin/user-audit'\n-                  component={() => <UserAuditPage routeData={{title: 'User Audit'}}/>}/>\n-        <AppRoute path='/admin/user-audit/:username'\n-                  component={() => <UserAuditPage routeData={{title: 'User Audit'}}/>}/>\n-        <AppRoute path='/admin/workspace-audit'\n-                  component={() => <WorkspaceAuditPage routeData={{title: 'Workspace Audit'}}/>}/>\n-        <AppRoute path='/admin/workspace-audit/:workspaceNamespace'\n-                  component={() => <WorkspaceAuditPage routeData={{title: 'Workspace Audit'}}/>}/>\n+      />\n+      <AppRoute path='/nih-callback' component={() => <HomepagePage routeData={{title: 'Homepage'}}/>} />\n+    </ProtectedRoutes>\n+\n+    <ProtectedRoutes guards={[signInGuard, registrationGuard]}>", "originalCommit": "ce0b1ee70454843c759731ead1d3bdf84411868e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c84a4e15c24a99092021a486726afe7559cd1b59", "url": "https://github.com/all-of-us/workbench/commit/c84a4e15c24a99092021a486726afe7559cd1b59", "message": "staging", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "59fea80ddf2e704d426e7d259ceded70923d5faf", "url": "https://github.com/all-of-us/workbench/commit/59fea80ddf2e704d426e7d259ceded70923d5faf", "message": "library", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "a21f5cd5f9faf733132700ce8611ba8518ed5cd0", "url": "https://github.com/all-of-us/workbench/commit/a21f5cd5f9faf733132700ce8611ba8518ed5cd0", "message": "shelving ugh", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "3868fb749dc1e3398238ffdff063f46b0c6adc33", "url": "https://github.com/all-of-us/workbench/commit/3868fb749dc1e3398238ffdff063f46b0c6adc33", "message": "rerouting step 1", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "2972207b5124e415781279e650419c36cb1d37df", "url": "https://github.com/all-of-us/workbench/commit/2972207b5124e415781279e650419c36cb1d37df", "message": "shelving", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "0a289908697f96150dec1d75bb43604ece6caed4", "url": "https://github.com/all-of-us/workbench/commit/0a289908697f96150dec1d75bb43604ece6caed4", "message": "shelving", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "6b98b5c60f91cb53f611cf36caea2305e8f3a3c1", "url": "https://github.com/all-of-us/workbench/commit/6b98b5c60f91cb53f611cf36caea2305e8f3a3c1", "message": "mostly done", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "d949197a8ff5b9665242c6cc9849635799a07e92", "url": "https://github.com/all-of-us/workbench/commit/d949197a8ff5b9665242c6cc9849635799a07e92", "message": "side-nav cleanup", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "6e27870923578e1f16bf434e6b3d9b5060ed1ec7", "url": "https://github.com/all-of-us/workbench/commit/6e27870923578e1f16bf434e6b3d9b5060ed1ec7", "message": "whitespace...", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "4ad4893babcddb0a4d7327f06fd6333257e51df7", "url": "https://github.com/all-of-us/workbench/commit/4ad4893babcddb0a4d7327f06fd6333257e51df7", "message": "lint", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "f42872ad9b659e0dbbcc430df23683bb6748f886", "url": "https://github.com/all-of-us/workbench/commit/f42872ad9b659e0dbbcc430df23683bb6748f886", "message": "oops these go one layer up", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "a0be0928400e1acb3f53aa89d2b4d33724c51650", "url": "https://github.com/all-of-us/workbench/commit/a0be0928400e1acb3f53aa89d2b4d33724c51650", "message": "HOKAY THEN", "committedDate": "2020-08-18T16:52:41Z", "type": "commit"}, {"oid": "a0be0928400e1acb3f53aa89d2b4d33724c51650", "url": "https://github.com/all-of-us/workbench/commit/a0be0928400e1acb3f53aa89d2b4d33724c51650", "message": "HOKAY THEN", "committedDate": "2020-08-18T16:52:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3MjU5Mw==", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r472472593", "bodyText": "HomeUhhhhhhhPageIGuess", "author": "jmthibault79", "createdAt": "2020-08-18T20:30:07Z", "path": "ui/src/app/app-routing.tsx", "diffHunk": "@@ -22,14 +24,21 @@ const signInGuard: Guard = {\n   redirectPath: '/login'\n };\n \n+const registrationGuard: Guard = {\n+  allowed: (): boolean => hasRegisteredAccess(profileStore.get().profile.dataAccessLevel),\n+  redirectPath: '/'\n+};\n+\n const CookiePolicyPage = withRouteData(CookiePolicy);\n const DataUserCodeOfConductPage = fp.flow(withRouteData, withFullHeight)(DataUserCodeOfConduct);\n+const HomepagePage = withRouteData(Homepage); // this name is bad i am sorry", "originalCommit": "a0be0928400e1acb3f53aa89d2b4d33724c51650", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3NTIyMQ==", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r472475221", "bodyText": "What's a good way for me to check that all of the previously-wildcard routes are now accounted for?", "author": "jmthibault79", "createdAt": "2020-08-18T20:32:55Z", "path": "ui/src/app/app-routing.module.ts", "diffHunk": "@@ -361,13 +391,9 @@ const routes: Routes = [\n             path: 'institution/edit/:institutionId',\n             component: AdminInstitutionEditComponent,\n             data: { title: 'Institution Admin'},\n-          }]\n+          }\n+        ]\n       },\n-      {\n-        path: '**',", "originalCommit": "a0be0928400e1acb3f53aa89d2b4d33724c51650", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA5NjkyMA==", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r473096920", "bodyText": "Cross reference app-routing.tsx", "author": "als364", "createdAt": "2020-08-19T15:00:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3NTIyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3ODE5MA==", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r472478190", "bodyText": "what does this do?", "author": "jmthibault79", "createdAt": "2020-08-18T20:37:17Z", "path": "ui/src/app/services/profile-storage.service.ts", "diffHunk": "@@ -54,10 +55,12 @@ export class ProfileStorageService {\n     this.profileService.getMe()\n       .retryWhen(ProfileStorageService.conflictRetryPolicy())\n       .subscribe((profile) => {\n+        profileStore.set({...profileStore.get(), profile: profile});", "originalCommit": "a0be0928400e1acb3f53aa89d2b4d33724c51650", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA5NzMwMQ==", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r473097301", "bodyText": "This updates the React profile store to contain the profile that we are updating the Angular profile store with", "author": "als364", "createdAt": "2020-08-19T15:00:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3ODE5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzEyODY3OA==", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r473128678", "bodyText": "and we need this because the React router needs that info to check registration.  thx.", "author": "jmthibault79", "createdAt": "2020-08-19T15:44:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3ODE5MA=="}], "type": "inlineReview"}]}