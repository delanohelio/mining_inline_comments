{"pr_number": 3727, "pr_title": "[RW-5144][risk=no] Puppeteer test: workspace shared as READER", "pr_createdAt": "2020-06-29T23:54:26Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3727", "timeline": [{"oid": "6ad6a05d83d41a33947b3bd3c7b3f3d94b357ca4", "url": "https://github.com/all-of-us/workbench/commit/6ad6a05d83d41a33947b3bd3c7b3f3d94b357ca4", "message": "workspace share reader new test", "committedDate": "2020-06-30T00:45:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwMDQ5Ng==", "url": "https://github.com/all-of-us/workbench/pull/3727#discussion_r447700496", "bodyText": "works without setting viewport. I think finding element with {visible: true} is the reason.", "author": "aweng98", "createdAt": "2020-06-30T13:53:34Z", "path": "e2e/app/component/share-modal.ts", "diffHunk": "@@ -14,11 +12,14 @@ export default class ShareModal extends Dialog {\n   }\n \n   async shareWithUser(username: string, level: WorkspaceAccessLevel): Promise<void> {\n+    /*\n     if (!this.page.viewport()) {\n       throw Error(\n         'testing of the share modal requires a viewport to be set on account ' +\n           'on odd rendering issues with the react-select component');\n     }\n+    */\n+", "originalCommit": "6ad6a05d83d41a33947b3bd3c7b3f3d94b357ca4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxODg3Mw==", "url": "https://github.com/all-of-us/workbench/pull/3727#discussion_r448418873", "bodyText": "If that's the case, please remove the commented code! :)", "author": "gjuggler", "createdAt": "2020-07-01T14:51:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwMDQ5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwMjk4MA==", "url": "https://github.com/all-of-us/workbench/pull/3727#discussion_r447702980", "bodyText": "Dupl. functions. clickButton() and waitForButton() are in Dialog class.", "author": "aweng98", "createdAt": "2020-06-30T13:56:48Z", "path": "e2e/app/component/share-modal.ts", "diffHunk": "@@ -56,16 +56,6 @@ export default class ShareModal extends Dialog {\n         `@data-test-id=\"collab-user-email\" and contains(text(),\"${username}\")]]`;\n   }\n \n-  async clickButton(buttonLabel: LinkText): Promise<void> {\n-    const button = await this.waitForButton(buttonLabel);\n-    await button.waitUntilEnabled();\n-    return button.click();\n-  }\n-\n-  async waitForButton(buttonLabel: LinkText): Promise<Button> {\n-    return Button.findByName(this.page, {containsText: buttonLabel, type: ElementType.Button}, this);\n-  }\n-", "originalCommit": "6ad6a05d83d41a33947b3bd3c7b3f3d94b357ca4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyMTc0OQ==", "url": "https://github.com/all-of-us/workbench/pull/3727#discussion_r448421749", "bodyText": "[no action] TIL that you can open the share modal even if you're a read-only user. Is this somehow expected / required for the product? The only thing I can think of is that this is the path for a read-only user to remove themself from the workspace... but it does feel like an awkward flow if that's the case. More common / expected (e.g. for things like Google Groups) would be a button that says \"Remove me from this workspace\".", "author": "gjuggler", "createdAt": "2020-07-01T14:55:13Z", "path": "e2e/tests/workspace/workspace-share.spec.ts", "diffHunk": "@@ -49,5 +55,69 @@ describe('Share workspace', () => {\n       accessLevel = await aboutPage.findUserInCollaboratorList(config.collaboratorUsername);\n       expect(accessLevel).toBeNull();\n     });\n+\n+\n+    /**\n+     * Test:\n+     * - Create a new workspace.\n+     * - Share with another user with role READER.\n+     * - Log in as another user.\n+     * - Workspace share action should be disabled.\n+     */\n+    test('Workspace READER cannot share edit or delete workspace', async () => {\n+\n+      const workspaceCard = await findWorkspace(page, true);\n+      const workspaceName = await workspaceCard.getWorkspaceName();\n+\n+      // Open the Share modal\n+      const menu = workspaceCard.getEllipsis();\n+      await menu.clickAction(EllipsisMenuAction.Share, {waitForNav: false});\n+\n+      const shareModal = new ShareModal(page);\n+      await shareModal.waitUntilVisible();\n+\n+      await shareModal.shareWithUser(config.collaboratorUsername, WorkspaceAccessLevel.Reader);\n+      await waitWhileLoading(page);\n+      await Navigation.navMenu(page, NavLink.SIGN_OUT);\n+\n+      // To verify READER role assigned correctly, user with READER role will sign in in new Incognito page.\n+      const newPage = await signInAs(config.collaboratorUsername, config.userPassword);\n+\n+      const homePage = new HomePage(newPage);\n+      await homePage.getSeeAllWorkspacesLink().then((link) => link.click());\n+\n+      const workspacesPage = new WorkspacesPage(newPage);\n+      await workspacesPage.waitForLoad();\n+\n+      // Verify Workspace Access Level is READER.\n+      const workspaceCard2 = await WorkspaceCard.findCard(newPage, workspaceName);\n+      const accessLevel = await workspaceCard2.getWorkspaceAccessLevel();\n+      expect(accessLevel).toBe(WorkspaceAccessLevel.Reader);\n+\n+      // Share, Edit and Delete actions are not available for click.\n+      const menu2 = workspaceCard2.getEllipsis();\n+      await menu2.clickEllipsis();\n+      await menu2.isDisabled(EllipsisMenuAction.Share);\n+      await menu2.isDisabled(EllipsisMenuAction.Edit);\n+      await menu2.isDisabled(EllipsisMenuAction.Delete);\n+\n+      // Duplicate action is available for click.\n+      await menu2.isDisabled(EllipsisMenuAction.Duplicate);\n+\n+      // Make sure the Search input-field in Share modal is disabled.\n+      await workspaceCard2.clickWorkspaceName();\n+      await (new DataPage(newPage)).openTab(TabLabelAlias.About);\n+      const aboutPage = new WorkspaceAboutPage(newPage);\n+      await aboutPage.waitForLoad();\n+      const modal2 = await aboutPage.openShareModal();", "originalCommit": "6ad6a05d83d41a33947b3bd3c7b3f3d94b357ca4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ3MzQ4Ng==", "url": "https://github.com/all-of-us/workbench/pull/3727#discussion_r448473486", "bodyText": "I thought it was odd to find enabled Share button in About page. Maybe the purpose of Share modal is to show information about this workspace who else are OWNER/READER/WRITER.", "author": "aweng98", "createdAt": "2020-07-01T16:16:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyMTc0OQ=="}], "type": "inlineReview"}, {"oid": "e4757f2725ac536a22f4a1fc1c61b31b03b9f9d2", "url": "https://github.com/all-of-us/workbench/commit/e4757f2725ac536a22f4a1fc1c61b31b03b9f9d2", "message": "workspace share reader new test", "committedDate": "2020-07-01T15:12:32Z", "type": "commit"}, {"oid": "8e1f313a61dc36d2d4d8ebe7e8d4afeaa35a8fbb", "url": "https://github.com/all-of-us/workbench/commit/8e1f313a61dc36d2d4d8ebe7e8d4afeaa35a8fbb", "message": "expect", "committedDate": "2020-07-01T15:12:32Z", "type": "commit"}, {"oid": "d0b7b8ab3a5beb400288ef525a1d62814d4ad321", "url": "https://github.com/all-of-us/workbench/commit/d0b7b8ab3a5beb400288ef525a1d62814d4ad321", "message": "PR feedback", "committedDate": "2020-07-01T15:49:02Z", "type": "commit"}, {"oid": "d0b7b8ab3a5beb400288ef525a1d62814d4ad321", "url": "https://github.com/all-of-us/workbench/commit/d0b7b8ab3a5beb400288ef525a1d62814d4ad321", "message": "PR feedback", "committedDate": "2020-07-01T15:49:02Z", "type": "forcePushed"}, {"oid": "897a11f4452970779edfa0e2ba6cb4e13746b60f", "url": "https://github.com/all-of-us/workbench/commit/897a11f4452970779edfa0e2ba6cb4e13746b60f", "message": "ellipsisMenuItem is common func", "committedDate": "2020-07-01T16:06:47Z", "type": "commit"}, {"oid": "f94f636c6aa9bc7087515fd26d86f49a0a24c96d", "url": "https://github.com/all-of-us/workbench/commit/f94f636c6aa9bc7087515fd26d86f49a0a24c96d", "message": "fix signIn in workspace-share.spec", "committedDate": "2020-07-01T16:32:00Z", "type": "commit"}]}