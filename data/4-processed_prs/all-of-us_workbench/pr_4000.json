{"pr_number": 4000, "pr_title": "[risk=no] remove warning and other minor refactoring", "pr_createdAt": "2020-09-14T17:31:33Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4000", "timeline": [{"oid": "1257c6c41ba904addb3e52bac1003356a08f0250", "url": "https://github.com/all-of-us/workbench/commit/1257c6c41ba904addb3e52bac1003356a08f0250", "message": "remove warning and other minor refactoring", "committedDate": "2020-09-14T17:31:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjM5Ng==", "url": "https://github.com/all-of-us/workbench/pull/4000#discussion_r490422396", "bodyText": "This was the Deprecated library the warning referred to", "author": "jmthibault79", "createdAt": "2020-09-17T17:07:24Z", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/ManageLeonardoRuntimes.java", "diffHunk": "@@ -53,18 +53,14 @@\n   private static final Gson PRETTY_GSON = new GsonBuilder().setPrettyPrinting().create();\n \n   private static Set<String> commaDelimitedStringToSet(String str) {\n-    return Arrays.asList(str.split(\",\")).stream()\n-        .filter(s -> !s.isEmpty())\n-        .collect(Collectors.toSet());\n+    return Arrays.stream(str.split(\",\")).filter(s -> !s.isEmpty()).collect(Collectors.toSet());\n   }\n \n   private static RuntimesApi newApiClient(String apiUrl) throws IOException {\n     ApiClient apiClient = new ApiClient();\n     apiClient.setBasePath(apiUrl);\n-    GoogleCredential credential =", "originalCommit": "1257c6c41ba904addb3e52bac1003356a08f0250", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjcxNA==", "url": "https://github.com/all-of-us/workbench/pull/4000#discussion_r490422714", "bodyText": "> Task :compile__tools__Java\nNote: /Users/thibault/src/aou/api/tools/src/main/java/org/pmiops/workbench/tools/ManageLeonardoRuntimes.java uses or overrides a deprecated API.", "author": "jmthibault79", "createdAt": "2020-09-17T17:07:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjM5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzMjY5Mg==", "url": "https://github.com/all-of-us/workbench/pull/4000#discussion_r490432692", "bodyText": "Question, Just curious do you know why we were refreshing the token before assigning it to apiClient", "author": "NehaBroad", "createdAt": "2020-09-17T17:25:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjM5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzNjc5NA==", "url": "https://github.com/all-of-us/workbench/pull/4000#discussion_r490436794", "bodyText": "It's always a good idea to refresh the token, since it may have expired.\nThis new path still does: it includes a call to credentials.refreshIfExpired()", "author": "jmthibault79", "createdAt": "2020-09-17T17:31:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjM5Ng=="}], "type": "inlineReview"}]}