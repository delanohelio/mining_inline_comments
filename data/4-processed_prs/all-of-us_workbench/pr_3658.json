{"pr_number": 3658, "pr_title": "[risk=no] Refactor docker-compose to leverage anchors", "pr_createdAt": "2020-06-10T23:00:44Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3658", "timeline": [{"oid": "c5e5982ac68069512b1492d2fd37347792a094b8", "url": "https://github.com/all-of-us/workbench/commit/c5e5982ac68069512b1492d2fd37347792a094b8", "message": "Refactor docker-compose to leverage anchors", "committedDate": "2020-06-10T22:56:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0OTY3NQ==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438749675", "bodyText": "Is the version change necessary for the other changes? If not, it might be nice to test that independently before or after.", "author": "jaycarlton", "createdAt": "2020-06-11T12:35:57Z", "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"", "originalCommit": "c5e5982ac68069512b1492d2fd37347792a094b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkyNDQ3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438924472", "bodyText": "It's needed to have an x- property that docker-compose doesn't complain about. I will add a comment about that below. It's a minor version upgrade, and this file is only applicable to local command lines, so I don't think it adds much value to split out a PR for this.", "author": "calbach", "createdAt": "2020-06-11T16:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0OTY3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MDMyNg==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438750326", "bodyText": "I've started to use workbench-api instead of api for clarity, as pretty much everything has an api.\nAlso, it sounds like this anchor is more generic than just API tasks, so maybe there's a more generic name. Not a huge deal, but it can be difficult to get your bearings here if you haven't used docker-compose much.", "author": "jaycarlton", "createdAt": "2020-06-11T12:37:09Z", "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults", "originalCommit": "c5e5982ac68069512b1492d2fd37347792a094b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkyNjY4MQ==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438926681", "bodyText": "I think this should be pretty contextually obvious in this case and it's symmetric to the directory name, I don't think the increased verbosity is worth it.", "author": "calbach", "createdAt": "2020-06-11T16:45:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MDMyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MTMzNQ==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438751335", "bodyText": "I do use cloud_sql_proxy locally  with the, but I've never done so from docker-compose. @freemabd set me up with a named account on the test db, and I've been doing the same command locally to connect to it in IntelliJ:\n./cloud_sql_proxy -instances all-of-us-workbench-test:us-central1:workbenchmaindb=tcp:0.0.0.0:3307 -credential_file=/Users/jaycarlton/repos/workbench/api/sa-key.json\n\nOf course, as written this wouldn't work locally, unless I want to mount /w.", "author": "jaycarlton", "createdAt": "2020-06-11T12:39:03Z", "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081\n       - 127.0.0.1:8001:8001\n   es-scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db/vars.env\n \n   api-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db/vars.env\n \n   cdr-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db-cdr\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db-cdr/vars.env\n+    env_file: db-cdr/vars.env\n \n   db-make-bq-tables:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db-cdr/vars.env\n+    env_file: db-cdr/vars.env\n \n   db-cloudsql-import:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n+    <<: *api-defaults\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n     entrypoint: [\"./generate-cdr/cloudsql-import.sh\"]\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db/vars.env\n \n   db-local-mysql-import:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n+    <<: *api-defaults\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n     entrypoint: [\"./generate-cdr/local-mysql-import.sh\"]\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db/vars.env\n-\n-  cloud-sql-proxy:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w\n-    volumes:\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-    command: |\n-      cloud_sql_proxy", "originalCommit": "c5e5982ac68069512b1492d2fd37347792a094b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMzc0OQ==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438833749", "bodyText": "I also use cloud_sql_proxy to connect to test mysql db when using sequelPro/intellij", "author": "freemabd", "createdAt": "2020-06-11T14:36:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MTMzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDU0MQ==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438760541", "bodyText": "can we name this workbench_app_db instead, since we're a multi-db project? I feel like we're starting to need a distinct name for the MySQL DB, like \"Workbench Backend DB\" or \"Application DB\". Though maybe it's obvious that we're not launching BQ databases inside Docker.\nI suppose that would break compatibility and require doc updates.", "author": "jaycarlton", "createdAt": "2020-06-11T12:55:37Z", "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults\n+  build:\n+    context: ./src/dev/server\n+  image: allofustest/workbench-dev-api:local\n+  user: ${UID}\n+  working_dir: /w/api\n+  environment:\n+    - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n+  env_file:\n+    - db/vars.env\n+  volumes:\n+    - src-sync:/w:nocopy\n+    - gradle-cache:/.gradle\n+    - ~/.config:/.config:cached\n+    - ~/.gsutil:/.gsutil:cached\n services:\n   scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db:", "originalCommit": "c5e5982ac68069512b1492d2fd37347792a094b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NjE3Mw==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438946173", "bodyText": "There's only one database here, and it feels like a pretty big stretch to think this could be referring to BigQuery. Is there a specific use case you are concerned about? Just reading this file?", "author": "calbach", "createdAt": "2020-06-11T17:20:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDU0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2MTA4Mg==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r439061082", "bodyText": "Fair enough. Just seems like a database should have a name other than database. The confusion isn't so much with this file or even with developers, but when discussing application components with product folks or other stakeholders.", "author": "jaycarlton", "createdAt": "2020-06-11T20:44:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDU0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDc4Mg==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438760782", "bodyText": "Can we simply include this line in the envs file?", "author": "jaycarlton", "createdAt": "2020-06-11T12:56:01Z", "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults\n+  build:\n+    context: ./src/dev/server\n+  image: allofustest/workbench-dev-api:local\n+  user: ${UID}\n+  working_dir: /w/api\n+  environment:\n+    - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json", "originalCommit": "c5e5982ac68069512b1492d2fd37347792a094b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkyNzYyNw==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438927627", "bodyText": "This doesn't relate to the database, so I don't think that would be correct. It also refers to a specific mounted path within the docker container.", "author": "calbach", "createdAt": "2020-06-11T16:47:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDc4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2ODEwMA==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438768100", "bodyText": "Maybe parameterize the port number and timeout?", "author": "jaycarlton", "createdAt": "2020-06-11T13:08:49Z", "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081\n       - 127.0.0.1:8001:8001\n   es-scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]", "originalCommit": "c5e5982ac68069512b1492d2fd37347792a094b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0MTA1Ng==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438941056", "bodyText": "See above comment. Also the port is fine, but the timeout is a constant. Creating knobs for things that don't need to change generally just adds noise. If the intent was to avoid duplication with the other services here, see the PR description: my preference is to just eliminate the services with duplicate functionality. If there's a legitimate need for multiple services with this entrypoint, using an anchor can also work to avoid double-encoding of this.", "author": "calbach", "createdAt": "2020-06-11T17:11:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2ODEwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2ODk3NA==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438768974", "bodyText": "Maybe make a named constant for the two different port numbers 8081 and 8001. If order is arbitrary, maybe list them alphabetically.", "author": "jaycarlton", "createdAt": "2020-06-11T13:10:15Z", "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081", "originalCommit": "c5e5982ac68069512b1492d2fd37347792a094b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkzOTM2OQ==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438939369", "bodyText": "Looks like the way to do this in docker-compose would be to push the ports into a .env file. local constants/variables don't seem to be possible in docker-compose, except maybe by further abusing anchors.\nAFAICT the suggestion isn't really related to the PR, so I don't intend to make a non-trivial change like that here.", "author": "calbach", "createdAt": "2020-06-11T17:07:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2ODk3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2OTk1Mg==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438769952", "bodyText": "I'm a bit surprised you need to use an anchor. I would've expected docker-compose to have a high-level concept for this kind of reuse.", "author": "jaycarlton", "createdAt": "2020-06-11T13:11:46Z", "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults", "originalCommit": "c5e5982ac68069512b1492d2fd37347792a094b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkzMDI4MQ==", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438930281", "bodyText": "Agreed, they used to have inheritance in docker-compose 2 which I initially tried to use here, but apparently they removed in v3. See moby/moby#31101", "author": "calbach", "createdAt": "2020-06-11T16:51:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2OTk1Mg=="}], "type": "inlineReview"}, {"oid": "3117b055d2ce1785e56296d9a3385b37f901a558", "url": "https://github.com/all-of-us/workbench/commit/3117b055d2ce1785e56296d9a3385b37f901a558", "message": "comments", "committedDate": "2020-06-11T17:45:03Z", "type": "commit"}]}