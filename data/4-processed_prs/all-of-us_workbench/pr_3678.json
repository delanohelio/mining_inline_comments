{"pr_number": 3678, "pr_title": "[RW-4957][risk=no] UI to update verified institutional affiliation", "pr_createdAt": "2020-06-16T18:31:45Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3678", "timeline": [{"oid": "538ac95f7aeee9580c9faf3e72aa1e9221903ad5", "url": "https://github.com/all-of-us/workbench/commit/538ac95f7aeee9580c9faf3e72aa1e9221903ad5", "message": "shelving", "committedDate": "2020-06-12T18:02:03Z", "type": "commit"}, {"oid": "ebcc09b9ca66915ce7f7bca00f461e547cf15ca9", "url": "https://github.com/all-of-us/workbench/commit/ebcc09b9ca66915ce7f7bca00f461e547cf15ca9", "message": "make the update actually work", "committedDate": "2020-06-16T15:33:41Z", "type": "commit"}, {"oid": "4206326ceadee289045706da372b76c8875c3ad7", "url": "https://github.com/all-of-us/workbench/commit/4206326ceadee289045706da372b76c8875c3ad7", "message": "validate.js", "committedDate": "2020-06-16T17:59:50Z", "type": "commit"}, {"oid": "77735f506d908c4d5d614a70cf3175530e470187", "url": "https://github.com/all-of-us/workbench/commit/77735f506d908c4d5d614a70cf3175530e470187", "message": "lint", "committedDate": "2020-06-16T18:25:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MzA1Ng==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441063056", "bodyText": "this whole block is kind of janky and I expect the entire thing to get deleted by RW-4980.", "author": "als364", "createdAt": "2020-06-16T18:36:26Z", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -705,11 +710,26 @@ private void updateProfileForUser(DbUser user, Profile updatedProfile, Profile p\n     user.setLastModifiedTime(now);\n \n     updateInstitutionalAffiliations(updatedProfile, user);\n-    if (workbenchConfigProvider.get().featureFlags.requireInstitutionalVerification) {\n+    boolean requireInstitutionalVerification =\n+        workbenchConfigProvider.get().featureFlags.requireInstitutionalVerification;\n+    if (requireInstitutionalVerification) {\n       profileService.validateInstitutionalAffiliation(updatedProfile);\n     }\n \n     userService.updateUserWithConflictHandling(user);\n+    if (requireInstitutionalVerification) {", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwMDkyNw==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441100927", "bodyText": "That sounds about right - but it fits the current state of things", "author": "jmthibault79", "createdAt": "2020-06-16T19:46:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MzA1Ng=="}], "type": "inlineReview"}, {"oid": "57b61b59b72a912378b322f0f13b9851c8762307", "url": "https://github.com/all-of-us/workbench/commit/57b61b59b72a912378b322f0f13b9851c8762307", "message": "typo ugh ugh ugh", "committedDate": "2020-06-16T20:06:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwMTkwNA==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441101904", "bodyText": "There's a component in common for this.  Could this be used instead?", "author": "jmthibault79", "createdAt": "2020-06-16T19:48:43Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -43,14 +47,15 @@ const freeCreditLimitOptions = [\n   {label: '$800', value: 800}\n ];\n \n-const ReadonlyInputWithLabel = ({label, content, dataTestId, inputStyle = {}}) => {\n+const TextInputWithLabel = ({label, content, dataTestId, onChange = (value) => {}, disabled= false, inputStyle = {}}) => {", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyODExMQ==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441128111", "bodyText": "oh snap. I had no idea lol. At this point I just assume we don't have any components for anything. I will refactor", "author": "als364", "createdAt": "2020-06-16T20:39:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwMTkwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMjQ0OA==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441112448", "bodyText": "Hooray for reuse.  Should this go up a level or two?  A little weird for Profile Edit to be referring to this file.  Maybe some kind of institution/common", "author": "jmthibault79", "createdAt": "2020-06-16T20:09:33Z", "path": "ui/src/app/pages/login/account-creation/common.tsx", "diffHunk": "@@ -158,3 +160,21 @@ export const OptionalDropDownSection = (props) => {\n   </DropDownSection>;\n };\n \n+export const getRoleOptions = (institutions: Array<PublicInstitutionDetails>, institutionShortName: string):", "originalCommit": "57b61b59b72a912378b322f0f13b9851c8762307", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6793cb511b0b1680b5fda28c4f16df55203e0db3", "url": "https://github.com/all-of-us/workbench/commit/6793cb511b0b1680b5fda28c4f16df55203e0db3", "message": "actually don't need these", "committedDate": "2020-06-16T20:15:27Z", "type": "commit"}, {"oid": "b446460ce9aae5ba624ba5c3e825098cddcdf743", "url": "https://github.com/all-of-us/workbench/commit/b446460ce9aae5ba624ba5c3e825098cddcdf743", "message": "set old to new", "committedDate": "2020-06-16T20:35:51Z", "type": "commit"}, {"oid": "6fe104137f9f779b91863ad7f2fb8b2bac7a930a", "url": "https://github.com/all-of-us/workbench/commit/6fe104137f9f779b91863ad7f2fb8b2bac7a930a", "message": "move things to different places", "committedDate": "2020-06-16T21:02:51Z", "type": "commit"}, {"oid": "1b17c71d495c13d355d6249827cda0a4dd22c6cf", "url": "https://github.com/all-of-us/workbench/commit/1b17c71d495c13d355d6249827cda0a4dd22c6cf", "message": "added test", "committedDate": "2020-06-16T21:13:42Z", "type": "commit"}, {"oid": "f5cdaaca28d052f1b2986c80d50af215bbdcdc6b", "url": "https://github.com/all-of-us/workbench/commit/f5cdaaca28d052f1b2986c80d50af215bbdcdc6b", "message": "lint", "committedDate": "2020-06-16T21:20:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MDgwMg==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441090802", "bodyText": "nit: disabled= spacing", "author": "petesantos", "createdAt": "2020-06-16T19:27:22Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -43,14 +47,15 @@ const freeCreditLimitOptions = [\n   {label: '$800', value: 800}\n ];\n \n-const ReadonlyInputWithLabel = ({label, content, dataTestId, inputStyle = {}}) => {\n+const TextInputWithLabel = ({label, content, dataTestId, onChange = (value) => {}, disabled= false, inputStyle = {}}) => {", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MjE1MQ==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441092151", "bodyText": "nit: Does this work as onChange={onChange} ?", "author": "petesantos", "createdAt": "2020-06-16T19:29:58Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -43,14 +47,15 @@ const freeCreditLimitOptions = [\n   {label: '$800', value: 800}\n ];\n \n-const ReadonlyInputWithLabel = ({label, content, dataTestId, inputStyle = {}}) => {\n+const TextInputWithLabel = ({label, content, dataTestId, onChange = (value) => {}, disabled= false, inputStyle = {}}) => {\n   return <FlexColumn data-test-id={dataTestId} style={{marginTop: '1rem'}}>\n     <label style={styles.semiBold}>{label}</label>\n     <TextInput\n         value={content || ''} // react yells at me if this is null\n-        disabled\n+        disabled={disabled}\n+        onChange={(value) => onChange(value)}", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyMDU4Nw==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441120587", "bodyText": "How would you feel about consolidating verifiedInstitutionOptions and verifiedInstitutionsByShortname into one piece of state called institutions (or possibly sortedInstitutions)? From institutions we could compute, on the fly the data we need for the options and short name.  This would eliminate a piece of state, would eliminate the Map - which can be cumbersome to work with in lodash, and eliminate the native reduce (bouncing between native methods and lodash adds a bit of cognitive overhead)", "author": "petesantos", "createdAt": "2020-06-16T20:25:49Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY4NTc2Mw==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441685763", "bodyText": "That's doable, but the tradeoff is (eventually) doing an O(n=1000) search or munge every time we render and every time we select an institution.", "author": "als364", "createdAt": "2020-06-17T16:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyMDU4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1NjM3Mw==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441856373", "bodyText": "It is good to think about the time complexity. My concern is around the code complexity - adding additional state and code to manage that state. My personal preference is for simpler code that is easier to maintain over time, even if that means in some cases it is not the most optimized. Part of my rationale for that is to prevent premature optimization and instead opt for simpler code. I feel removing the Map, reduce and additional state is worth the tradeoff. I do think your concern is valid, but if it does not cause a noticeable performance issue I would prefer managing less state in the component and if a performance issue does arise in the future we could address it.\nAlso, looking at this a bit more closely, it looks like the find would only occur on a selection change (it should not occur on a re-render - unless I am missing something). I ran a simple performance check in the browser comparing the find against the initial state setup with reduce (10,000 items). The reduce takes 1.8 - 3ms, whereas the find, in the worst case, takes about 0.6 - 0.8ms. You could run the find ~2-5 times in the amount of time it takes to run the reduce (which will occur on each mount). I can give you the code I ran if you are interested.\nTo me that makes it unclear which would be more performant in the real world - but again I would prefer to not avoid thinking too much about the optimization unless a performance problem became evident.\nAll that said - if it is too time consuming to make the change right now, I am ok with leaving it as is. I just wanted to better explain my position.", "author": "petesantos", "createdAt": "2020-06-17T21:55:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyMDU4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0NjQwOA==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r442446408", "bodyText": "Thank you for running a test! Because of email validation, the find will end up running on all renders. If it's a matter of milliseconds even for ten thousand things then I'll do the simpler code. This is what I get for assuming a new JS framework works like an ancient JS framework \ud83d\ude42", "author": "als364", "createdAt": "2020-06-18T19:15:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyMDU4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2ODY1Nw==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r442868657", "bodyText": "Thanks for doing that!", "author": "petesantos", "createdAt": "2020-06-19T14:21:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyMDU4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyMjIwNw==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441122207", "bodyText": "I believe this can be simplified to:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n          \n          \n            \n                    fp.sortBy('displayName', institutions)", "author": "petesantos", "createdAt": "2020-06-16T20:28:27Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyMzM2Mw==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441123363", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return fp.map(\n          \n          \n            \n                  institution => {\n          \n          \n            \n                    return {label: institution.displayName, value: institution.shortName};\n          \n          \n            \n                  },\n          \n          \n            \n                  verifiedInstitutionOptions\n          \n          \n            \n                );\n          \n          \n            \n            return fp.map(({displayName, shortName}) => ({label: displayName, value: shortname}), verifiedInstitutionOptions)", "author": "petesantos", "createdAt": "2020-06-16T20:30:36Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n+        verifiedInstitutionsByShortname: institutions.reduce(\n+          (accumulator, institution) => accumulator.set(institution.shortName, institution),\n+          new Map<String, PublicInstitutionDetails>()\n+        )\n+      });\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(\n+      institution => {\n+        return {label: institution.displayName, value: institution.shortName};\n+      },\n+      verifiedInstitutionOptions\n+    );", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0MTg2MQ==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441141861", "bodyText": "Consider trying to perform the state change in one operation with flow:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const {verifiedInstitutionsByShortname} = this.state;\n          \n          \n            \n                this.setState(fp.flow(\n          \n          \n            \n                    fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionShortName'],institutionShortName),\n          \n          \n            \n                    fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionDisplayName'], fp.find(['shortName', institutionShortName], sortedInstitutions).displayName),\n          \n          \n            \n                    fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionRoleEnum'], undefined),\n          \n          \n            \n                    fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined)\n          \n          \n            \n                ))", "author": "petesantos", "createdAt": "2020-06-16T21:06:07Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n+        verifiedInstitutionsByShortname: institutions.reduce(\n+          (accumulator, institution) => accumulator.set(institution.shortName, institution),\n+          new Map<String, PublicInstitutionDetails>()\n+        )\n+      });\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(\n+      institution => {\n+        return {label: institution.displayName, value: institution.shortName};\n+      },\n+      verifiedInstitutionOptions\n+    );\n+  }\n+\n+  isSaveDisabled(errors) {\n+    const {oldProfile, updatedProfile} = this.state;\n+    return fp.isEqual(oldProfile, updatedProfile) || errors;\n+  }\n+\n+  setVerifiedInstitutionOnProfile(institutionShortName: string) {\n+    const {verifiedInstitutionsByShortname} = this.state;", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0NjYxMQ==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r442446611", "bodyText": "This works, but not if I combine it with other state changes for some reason", "author": "als364", "createdAt": "2020-06-18T19:15:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0MTg2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0Mzc3NA==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441143774", "bodyText": "Take a look at optional chaining  with a ternary here - it may clean this up a bit\nIf that works, it may work for a few of the functions below as well", "author": "petesantos", "createdAt": "2020-06-16T21:10:00Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n+        verifiedInstitutionsByShortname: institutions.reduce(\n+          (accumulator, institution) => accumulator.set(institution.shortName, institution),\n+          new Map<String, PublicInstitutionDetails>()\n+        )\n+      });\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(\n+      institution => {\n+        return {label: institution.displayName, value: institution.shortName};\n+      },\n+      verifiedInstitutionOptions\n+    );\n+  }\n+\n+  isSaveDisabled(errors) {\n+    const {oldProfile, updatedProfile} = this.state;\n+    return fp.isEqual(oldProfile, updatedProfile) || errors;\n+  }\n+\n+  setVerifiedInstitutionOnProfile(institutionShortName: string) {\n+    const {verifiedInstitutionsByShortname} = this.state;\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionShortName'],\n+        institutionShortName\n+      )\n+    );\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionDisplayName'],\n+        verifiedInstitutionsByShortname.get(institutionShortName).displayName\n+        )\n+    );\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionRoleEnum'], undefined));\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined));\n+  }\n+\n+  setInstitutionalRoleOnProfile(institutionalRoleEnum: InstitutionalRole) {\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleEnum'], institutionalRoleEnum));\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined));\n+  }\n+\n+  updateVerifiedInstitutionalAffiliation() {\n+    const {updatedProfile} = this.state;\n+    this.setState({loading: true});\n+    profileApi().updateVerifiedInstitutionalAffiliation(updatedProfile.userId, updatedProfile.verifiedInstitutionalAffiliation).then(() => {\n+      this.setState({loading: false});\n+    });\n+  }\n+\n+  validateVerifiedInstitutionalAffiliation() {\n+    const {updatedProfile} = this.state;\n+    if (updatedProfile) {\n+      if (updatedProfile.verifiedInstitutionalAffiliation) {\n+        return updatedProfile.verifiedInstitutionalAffiliation;\n+      }\n+      return false;\n+    }\n+    return false;", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTYzOA==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441805638", "bodyText": "Our version of TypeScript doesn't support that.", "author": "als364", "createdAt": "2020-06-17T20:12:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0Mzc3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NDExNg==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441144116", "bodyText": "Similar thought as above wrt using fp.flow", "author": "petesantos", "createdAt": "2020-06-16T21:10:34Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n+        verifiedInstitutionsByShortname: institutions.reduce(\n+          (accumulator, institution) => accumulator.set(institution.shortName, institution),\n+          new Map<String, PublicInstitutionDetails>()\n+        )\n+      });\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(\n+      institution => {\n+        return {label: institution.displayName, value: institution.shortName};\n+      },\n+      verifiedInstitutionOptions\n+    );\n+  }\n+\n+  isSaveDisabled(errors) {\n+    const {oldProfile, updatedProfile} = this.state;\n+    return fp.isEqual(oldProfile, updatedProfile) || errors;\n+  }\n+\n+  setVerifiedInstitutionOnProfile(institutionShortName: string) {\n+    const {verifiedInstitutionsByShortname} = this.state;\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionShortName'],\n+        institutionShortName\n+      )\n+    );\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionDisplayName'],\n+        verifiedInstitutionsByShortname.get(institutionShortName).displayName\n+        )\n+    );\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionRoleEnum'], undefined));\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined));\n+  }\n+\n+  setInstitutionalRoleOnProfile(institutionalRoleEnum: InstitutionalRole) {\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleEnum'], institutionalRoleEnum));", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0OTg2MA==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441149860", "bodyText": "nit: consider further destructuring\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const {updatedProfile} = this.state;\n          \n          \n            \n            const {updatedProfile: {userId, verifiedInstitutionalAffiliation}} = this.state", "author": "petesantos", "createdAt": "2020-06-16T21:22:31Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n+        verifiedInstitutionsByShortname: institutions.reduce(\n+          (accumulator, institution) => accumulator.set(institution.shortName, institution),\n+          new Map<String, PublicInstitutionDetails>()\n+        )\n+      });\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(\n+      institution => {\n+        return {label: institution.displayName, value: institution.shortName};\n+      },\n+      verifiedInstitutionOptions\n+    );\n+  }\n+\n+  isSaveDisabled(errors) {\n+    const {oldProfile, updatedProfile} = this.state;\n+    return fp.isEqual(oldProfile, updatedProfile) || errors;\n+  }\n+\n+  setVerifiedInstitutionOnProfile(institutionShortName: string) {\n+    const {verifiedInstitutionsByShortname} = this.state;\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionShortName'],\n+        institutionShortName\n+      )\n+    );\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionDisplayName'],\n+        verifiedInstitutionsByShortname.get(institutionShortName).displayName\n+        )\n+    );\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionRoleEnum'], undefined));\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined));\n+  }\n+\n+  setInstitutionalRoleOnProfile(institutionalRoleEnum: InstitutionalRole) {\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleEnum'], institutionalRoleEnum));\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined));\n+  }\n+\n+  updateVerifiedInstitutionalAffiliation() {\n+    const {updatedProfile} = this.state;", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwMzI3OA==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441803278", "bodyText": "you can't use the updatedProfile if you do that. but I can do two lines of destructuring.", "author": "als364", "createdAt": "2020-06-17T20:07:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0OTg2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0ODgzNg==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441848836", "bodyText": "I don't see updatedProfile being used in this method outside of the property access, that is why I suggested the destructure in that way - is there something I am missing?", "author": "petesantos", "createdAt": "2020-06-17T21:37:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0OTg2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0NjkzOA==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r442446938", "bodyText": "After a successful save, I change the oldProfile to the updatedProfile so that the check of whether the Save button is enabled works properly.", "author": "als364", "createdAt": "2020-06-18T19:16:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0OTg2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1MjkyMA==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441152920", "bodyText": "I am a little confused on the introduction of oldProfile. It seems to replace saveDisabled, but the saveDisabled state is still getting set in a few places, but never read. The oldProfile also does not get updated. A few questions:\n\nWhen the profile is updated and saved, it seems like the save button will still be enabled (I may be wrong) - is this intentional?\nWould it be unreasonable to revert back to one profile state, and setting saveDisabled to false in setVerifiedInstitutionOnProfile?", "author": "petesantos", "createdAt": "2020-06-16T21:28:40Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -114,10 +121,12 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     this.state = {\n       institutionsLoadingError: '',\n       loading: true,\n-      profile: null,\n+      oldProfile: null,", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY4NDIyMg==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441684222", "bodyText": "I believe you're looking at an old changeset. oldProfile is getting set to updatedProfile on successful update.\nYou're right that I should get rid of saveDisabled. though.", "author": "als364", "createdAt": "2020-06-17T16:45:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1MjkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1NjE1MQ==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441156151", "bodyText": "Do we have a standard around using native find (and other array functions), or utilize lodash find in these cases?\nMy personal preference is to keep things consistent with lodash, which also has other benefits like auto currying.\nAlso, a few nits - could this be changed to destructure out organizationTypeEnum (reassigning the name in the destructure). Could shortName be destructured out as well?", "author": "petesantos", "createdAt": "2020-06-16T21:35:58Z", "path": "ui/src/app/pages/login/account-creation/common.tsx", "diffHunk": "@@ -158,3 +160,21 @@ export const OptionalDropDownSection = (props) => {\n   </DropDownSection>;\n };\n \n+export const getRoleOptions = (institutions: Array<PublicInstitutionDetails>, institutionShortName: string):\n+    Array<{label: string, value: InstitutionalRole}> => {\n+  if (isBlank(institutionShortName)) {\n+    return [];\n+  }\n+\n+  const selectedOrgType = institutions.find(", "originalCommit": "77735f506d908c4d5d614a70cf3175530e470187", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1ODQ2OA==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441158468", "bodyText": "Do we have a standard around using native find (and other array functions), or utilize lodash find in these cases?\nMy personal preference is to keep things consistent with lodash, which also has other benefits like auto currying.\nAlso, a few nits - could this be changed to destructure out organizationTypeEnum (reassigning the name in the destructure). Could shortName be destructured out as well?", "author": "petesantos", "createdAt": "2020-06-16T21:41:22Z", "path": "ui/src/app/utils/institutions.tsx", "diffHunk": "@@ -0,0 +1,21 @@\n+import {AccountCreationOptions} from 'app/pages/login/account-creation/account-creation-options';\n+import {InstitutionalRole, PublicInstitutionDetails} from 'generated/fetch';\n+import {isBlank} from './index';\n+\n+export const getRoleOptions = (institutions: Array<PublicInstitutionDetails>, institutionShortName: string):\n+    Array<{ label: string, value: InstitutionalRole }> => {\n+  if (isBlank(institutionShortName)) {\n+    return [];\n+  }\n+\n+  const selectedOrgType = institutions.find(", "originalCommit": "f5cdaaca28d052f1b2986c80d50af215bbdcdc6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxNjMyNA==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441616324", "bodyText": "I think we have a preference for lodash. This was pre-existing - good opportunity to make it better though!", "author": "als364", "createdAt": "2020-06-17T15:03:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1ODQ2OA=="}], "type": "inlineReview"}, {"oid": "12e58ba884fc806f8109f13dab3054321b5c8c3c", "url": "https://github.com/all-of-us/workbench/commit/12e58ba884fc806f8109f13dab3054321b5c8c3c", "message": "some more review changes", "committedDate": "2020-06-17T20:27:38Z", "type": "commit"}, {"oid": "be3bb3ea81a028dd69c822d30db632f43dcb9bf5", "url": "https://github.com/all-of-us/workbench/commit/be3bb3ea81a028dd69c822d30db632f43dcb9bf5", "message": "institution checking", "committedDate": "2020-06-18T19:11:09Z", "type": "commit"}, {"oid": "015fd1941dea759de54fbc2ec2d49c42cfdef075", "url": "https://github.com/all-of-us/workbench/commit/015fd1941dea759de54fbc2ec2d49c42cfdef075", "message": "lint", "committedDate": "2020-06-18T20:38:55Z", "type": "commit"}, {"oid": "d95a303a77ac6e5496c6510f09a091c27afaa3cc", "url": "https://github.com/all-of-us/workbench/commit/d95a303a77ac6e5496c6510f09a091c27afaa3cc", "message": "get rid of state", "committedDate": "2020-06-18T20:45:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NTc3Nw==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r442865777", "bodyText": "nit: Do we need to grab the property after the find when setting the institutionDisplayName", "author": "petesantos", "createdAt": "2020-06-19T14:15:39Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -132,36 +148,202 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     }\n   }\n \n+  componentWillUnmount(): void {\n+    if (this.aborter) {\n+      this.aborter.abort();\n+    }\n+  }\n+\n+  async checkEmail() {\n+    const {\n+      updatedProfile: {\n+        contactEmail,\n+        verifiedInstitutionalAffiliation: {institutionShortName}\n+      }\n+    } = this.state;\n+\n+    // Cancel any outstanding API calls.\n+    if (this.aborter) {\n+      this.aborter.abort();\n+    }\n+    this.aborter = new AbortController();\n+    this.setState({checkEmailResponse: null});\n+\n+    // Early-exit with no result if either input is blank.\n+    if (!institutionShortName || isBlank(contactEmail)) {\n+      return;\n+    }\n+\n+    try {\n+      const result = await validateEmail(contactEmail, institutionShortName, this.aborter);\n+      this.setState({\n+        checkEmailError: '',\n+        checkEmailResponse: result\n+      });\n+    } catch (e) {\n+      this.setState({\n+        checkEmailError: 'Error validating user email against institution - please refresh page and try again',\n+        checkEmailResponse: null,\n+      });\n+    }\n+  }\n+\n   async getUser() {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({verifiedInstitutionOptions: fp.sortBy( 'displayName', institutions)});\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(({displayName, shortName}) => ({label: displayName, value: shortName}), verifiedInstitutionOptions);\n+  }\n+\n+  isSaveDisabled(errors) {\n+    const {oldProfile, updatedProfile} = this.state;\n+    return fp.isEqual(oldProfile, updatedProfile) || errors;\n+  }\n+\n+  renderCheckEmailResponse() {\n+    const {checkEmailResponse, updatedProfile, verifiedInstitutionOptions} = this.state;\n+    if (updatedProfile && updatedProfile.verifiedInstitutionalAffiliation) {\n+      if (checkEmailResponse.isValidMember) {\n+        return null;\n+      } else {\n+        const {verifiedInstitutionalAffiliation} = updatedProfile;\n+        const institution = fp.find(\n+            institution => institution.shortName === verifiedInstitutionalAffiliation.institutionShortName,\n+            verifiedInstitutionOptions\n+        );\n+        if (institution.duaTypeEnum === DuaType.RESTRICTED) {\n+          // Institution has signed Restricted agreement and the email is not in allowed emails list\n+          return <RestrictedDuaEmailMismatchErrorMessage/>;\n+        } else {\n+          // Institution has MASTER or NULL agreement and the domain is not in the allowed list\n+          return <MasterDuaEmailMismatchErrorMessage/>;\n+        }\n+      }\n+    }\n+    return null;\n+  }\n+\n+  async setVerifiedInstitutionOnProfile(institutionShortName: string) {\n+    const {verifiedInstitutionOptions} = this.state;\n+    await this.setState({loading: true});\n+    await this.setState(fp.flow(\n+      fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionShortName'], institutionShortName),\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionDisplayName'],\n+          verifiedInstitutionOptions.find(", "originalCommit": "d95a303a77ac6e5496c6510f09a091c27afaa3cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwODI0Ng==", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r442908246", "bodyText": "eek! yes", "author": "als364", "createdAt": "2020-06-19T15:33:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NTc3Nw=="}], "type": "inlineReview"}, {"oid": "1f033b1f595b9d3d38344ebe1c3f867c8bfe2972", "url": "https://github.com/all-of-us/workbench/commit/1f033b1f595b9d3d38344ebe1c3f867c8bfe2972", "message": "actually set displayname", "committedDate": "2020-06-19T15:33:31Z", "type": "commit"}, {"oid": "1c8195dedb66b33d578bb580216d197281f99336", "url": "https://github.com/all-of-us/workbench/commit/1c8195dedb66b33d578bb580216d197281f99336", "message": "lint'", "committedDate": "2020-06-19T16:05:51Z", "type": "commit"}]}