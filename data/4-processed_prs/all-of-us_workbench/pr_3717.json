{"pr_number": 3717, "pr_title": "[risk=no][RW-4911] A few fixes for latest input file", "pr_createdAt": "2020-06-26T20:30:37Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3717", "timeline": [{"oid": "c1a666ce59481042277bbc493f8915e5bf1d397f", "url": "https://github.com/all-of-us/workbench/commit/c1a666ce59481042277bbc493f8915e5bf1d397f", "message": "A few fixes for latest input file", "committedDate": "2020-06-26T20:28:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5Nzk0Mw==", "url": "https://github.com/all-of-us/workbench/pull/3717#discussion_r446397943", "bodyText": "\"Multispecialty Group Practice\" was already an approved \"Other\" ... checking up on \"Non-tenure track researcher\" as well", "author": "jmthibault79", "createdAt": "2020-06-26T20:35:53Z", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/institutions/Researcher.java", "diffHunk": "@@ -60,15 +60,22 @@\n           .build();\n \n   private Researcher(final String[] userLine) {\n-    this.firstName = userLine[0].trim();\n-    this.lastName = userLine[1].trim();\n-    this.contactEmail = userLine[2].trim();\n-    this.userName = userLine[3].trim();\n-    this.institutionalRole = parseInstitutionalRole(userLine[4].trim());\n-    this.institutionalRoleOther = parseInstitutionalRoleOther(userLine[4].trim());\n-    this.institutionDisplayName = parseInstitutionDisplayName(userLine[5].trim());\n-    this.duaSigned = userLine[6].trim();\n-    this.redCapComplete = userLine[7].trim();\n+    this.firstName = clean(userLine[0]);\n+    this.lastName = clean(userLine[1]);\n+    this.contactEmail = clean(userLine[2]);\n+    this.userName = clean(userLine[3]);\n+    this.institutionalRole = parseInstitutionalRole(clean(userLine[4]));\n+    this.institutionalRoleOther = parseInstitutionalRoleOther(clean(userLine[4]));\n+    this.institutionDisplayName = parseInstitutionDisplayName(clean(userLine[5]));\n+    this.duaSigned = clean(userLine[6]);\n+    this.redCapComplete = clean(userLine[7]);\n+  }\n+\n+  // special case a few Other roles\n+\n+  private boolean isPreApprovedOtherRole(String rawRole) {", "originalCommit": "c1a666ce59481042277bbc493f8915e5bf1d397f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY1NzM0Nw==", "url": "https://github.com/all-of-us/workbench/pull/3717#discussion_r446657347", "bodyText": "(update: confirmed)", "author": "jmthibault79", "createdAt": "2020-06-28T14:23:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5Nzk0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5ODI5MA==", "url": "https://github.com/all-of-us/workbench/pull/3717#discussion_r446398290", "bodyText": "the description for this (see line 47, or original CAPS doc) includes Data Analyst", "author": "jmthibault79", "createdAt": "2020-06-26T20:36:46Z", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/institutions/Researcher.java", "diffHunk": "@@ -104,9 +115,12 @@ private InstitutionalRole parseInstitutionalRole(final String rawRole) {\n       return InstitutionalRole.TRAINEE;\n     }\n \n-    // special case one particular user\n-    // hopefully we will not need to add many such cases like this\n-    if (rawRole.equals(\"Multispecialty Group Practice\")) {\n+    if (rawRole.startsWith(\"Data Analyst\")) {\n+      return InstitutionalRole.PROJECT_PERSONNEL;", "originalCommit": "c1a666ce59481042277bbc493f8915e5bf1d397f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5ODU4Mw==", "url": "https://github.com/all-of-us/workbench/pull/3717#discussion_r446398583", "bodyText": "not sure why this started with this particular input", "author": "jmthibault79", "createdAt": "2020-06-26T20:37:29Z", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/institutions/UserToAffiliate.java", "diffHunk": "@@ -22,6 +22,11 @@\n   String contactEmail;\n   String userName;\n \n+  // sometimes the CSVReader retains double quotes so we remove them manually", "originalCommit": "c1a666ce59481042277bbc493f8915e5bf1d397f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}