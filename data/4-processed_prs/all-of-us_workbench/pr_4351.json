{"pr_number": 4351, "pr_title": "[risk=low] Update the Create Auth Domain endpoint and project-rb command", "pr_createdAt": "2020-12-03T19:56:28Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4351", "timeline": [{"oid": "29f8f3707deb4e06b1b3cffcac8c989475f5c60e", "url": "https://github.com/all-of-us/workbench/commit/29f8f3707deb4e06b1b3cffcac8c989475f5c60e", "message": "Add user parameter and make all params required", "committedDate": "2020-12-03T19:51:39Z", "type": "commit"}, {"oid": "ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c", "url": "https://github.com/all-of-us/workbench/commit/ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c", "message": "Update create auth domain to return the group email", "committedDate": "2020-12-03T19:51:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU0NjI2Mw==", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r535546263", "bodyText": "Previously: opened a web browser requiring google login.  This was annoyingly disruptive when I had to run this more than once.", "author": "jmthibault79", "createdAt": "2020-12-03T20:01:25Z", "path": "api/libproject/devstart.rb", "diffHunk": "@@ -1286,12 +1286,18 @@ def create_auth_domain(cmd_name, args)\n   op.add_option(\n     \"--project [project]\",\n     ->(opts, v) { opts.project = v},\n-    \"Project to create the authorization domain\"\n+    \"Workbench Project (environment) for creating the authorization domain\"\n   )\n+  op.add_option(\n+    \"--user [user]\",\n+    ->(opts, v) { opts.user = v},\n+    \"A Workbench user you control with DEVELOPER Authority in the environment\"\n+  )\n+  op.add_validator ->(opts) { raise ArgumentError unless opts.project and opts.user}\n   op.parse.validate\n \n   common = Common.new\n-  common.run_inline %W{gcloud auth login}\n+  common.run_inline %W{gcloud auth login #{op.opts.user}}", "originalCommit": "ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU0NzE3MA==", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r535547170", "bodyText": "It will still do this if it's the first time this user has logged into gcloud on your machine.  The next time, it won't.", "author": "jmthibault79", "createdAt": "2020-12-03T20:02:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU0NjI2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU1MDEwMA==", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r535550100", "bodyText": "Step 45 of the New Application Environment creation doc is running the Create Auth Domain command.\nStep 46 involves determining the Auth Domain's Terra Group Email via a multi-step process.  Terra already returns this information to us during creation!  Let's return it to the script caller.", "author": "jmthibault79", "createdAt": "2020-12-03T20:08:01Z", "path": "api/src/main/java/org/pmiops/workbench/api/AuthDomainController.java", "diffHunk": "@@ -36,9 +37,13 @@\n \n   @AuthorityRequired({Authority.DEVELOPER})\n   @Override\n-  public ResponseEntity<EmptyResponse> createAuthDomain(String groupName) {\n-    fireCloudService.createGroup(groupName);\n-    return ResponseEntity.ok(new EmptyResponse());\n+  public ResponseEntity<AuthDomainCreatedResponse> createAuthDomain(String authDomainName) {", "originalCommit": "ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI2NjcyNQ==", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r536266725", "bodyText": "optional nit: variable not really necessary, could inline below", "author": "calbach", "createdAt": "2020-12-04T17:40:43Z", "path": "api/src/main/java/org/pmiops/workbench/api/AuthDomainController.java", "diffHunk": "@@ -36,9 +37,13 @@\n \n   @AuthorityRequired({Authority.DEVELOPER})\n   @Override\n-  public ResponseEntity<EmptyResponse> createAuthDomain(String groupName) {\n-    fireCloudService.createGroup(groupName);\n-    return ResponseEntity.ok(new EmptyResponse());\n+  public ResponseEntity<AuthDomainCreatedResponse> createAuthDomain(String authDomainName) {\n+    final FirecloudManagedGroupWithMembers group = fireCloudService.createGroup(authDomainName);\n+    final AuthDomainCreatedResponse response =", "originalCommit": "ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3MjM5Nw==", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r536272397", "bodyText": "nit: the other similar usage we have in project.rb calls this flag \"account\" \n  \n    \n      workbench/api/libproject/devstart.rb\n    \n    \n         Line 1398\n      in\n      ee18c9c\n    \n    \n    \n    \n\n        \n          \n           common.run_inline %W{gcloud auth login #{op.opts.account}}", "author": "calbach", "createdAt": "2020-12-04T17:50:08Z", "path": "api/libproject/devstart.rb", "diffHunk": "@@ -1286,12 +1286,18 @@ def create_auth_domain(cmd_name, args)\n   op.add_option(\n     \"--project [project]\",\n     ->(opts, v) { opts.project = v},\n-    \"Project to create the authorization domain\"\n+    \"Workbench Project (environment) for creating the authorization domain\"\n   )\n+  op.add_option(\n+    \"--user [user]\",", "originalCommit": "ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3NTQyMg==", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r537575422", "bodyText": "In this case we actually do want a RW user, not a Service Account.", "author": "jmthibault79", "createdAt": "2020-12-07T15:01:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3MjM5Nw=="}], "type": "inlineReview"}, {"oid": "0ca773da1c0d74b8e1efd36b757383781f14c2d2", "url": "https://github.com/all-of-us/workbench/commit/0ca773da1c0d74b8e1efd36b757383781f14c2d2", "message": "inline the new AuthDomainCreatedResponse()", "committedDate": "2020-12-07T15:05:03Z", "type": "commit"}]}