{"pr_number": 3926, "pr_title": "[RW-4847][RW-5405][risk=low] s/cluster/runtime/, API edition", "pr_createdAt": "2020-08-27T06:00:19Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3926", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMTU5NQ==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479501595", "bodyText": "nit: runtime should be plural", "author": "ericsong", "createdAt": "2020-08-28T19:43:29Z", "path": "api/libproject/devstart.rb", "diffHunk": "@@ -1861,19 +1861,19 @@ def describe_cluster(cmd_name, *args)\n   ServiceAccountContext.new(gcc.project).run do |ctx|\n     common = Common.new\n     common.run_inline %W{\n-       gradle manageClusters\n-      -PappArgs=['describe','#{api_url}','#{gcc.project}','#{ctx.service_account}','#{op.opts.cluster_id}']}\n+       gradle manageLeonardoRuntimes\n+      -PappArgs=['describe','#{api_url}','#{gcc.project}','#{ctx.service_account}','#{op.opts.runtime_id}']}\n   end\n end\n \n Common.register_command({\n-  :invocation => \"describe-cluster\",\n-  :description => \"Describe all cluster in this environment\",\n-  :fn => ->(*args) { describe_cluster(\"describe-cluster\", *args) }\n+  :invocation => \"describe-runtime\",\n+  :description => \"Describe all runtime in this environment\",", "originalCommit": "bcc4df66b911d45000dd93be70fe2df15b31d376", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NjQzNQ==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479566435", "bodyText": "Thanks - fixed (actually singular, the rest of the comment was bad)", "author": "calbach", "createdAt": "2020-08-28T22:55:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMTU5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUxMTA3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479511072", "bodyText": "I was a bit confused since the class names are the same. Is it possible to prefix one of them like we do with DbX models?", "author": "ericsong", "createdAt": "2020-08-28T20:05:46Z", "path": "api/src/main/java/org/pmiops/workbench/api/RuntimeController.java", "diffHunk": "@@ -120,68 +107,81 @@\n     this.userService = userService;\n     this.userRecentResourceService = userRecentResourceService;\n     this.userDao = userDao;\n+    this.leonardoMapper = leonardoMapper;\n     this.clock = clock;\n   }\n \n-  private Stream<org.pmiops.workbench.leonardo.model.ListClusterResponse> filterByClustersInList(\n-      Stream<org.pmiops.workbench.leonardo.model.ListClusterResponse> clustersToFilter,\n-      List<String> clusterNames) {\n+  private Stream<org.pmiops.workbench.leonardo.model.ListRuntimeResponse> filterByRuntimesInList(\n+      Stream<org.pmiops.workbench.leonardo.model.ListRuntimeResponse> clustersToFilter,\n+      List<String> runtimeNames) {\n     // Null means keep all clusters.\n     return clustersToFilter.filter(\n-        cluster -> clusterNames == null || clusterNames.contains(cluster.getClusterName()));\n+        cluster -> runtimeNames == null || runtimeNames.contains(cluster.getRuntimeName()));\n   }\n \n   @Override\n   @AuthorityRequired(Authority.SECURITY_ADMIN)\n   public ResponseEntity<List<ListClusterResponse>> deleteClustersInProject(\n       String billingProjectId, ListClusterDeleteRequest clusterNamesToDelete) {\n+    return ResponseEntity.ok(\n+        deleteLeonardoRuntimesInProject(\n+                billingProjectId, clusterNamesToDelete.getClustersToDelete())\n+            .stream()\n+            .map(leonardoMapper::toApiListClusterResponse)\n+            .collect(Collectors.toList()));\n+  }\n+\n+  @Override\n+  @AuthorityRequired(Authority.SECURITY_ADMIN)\n+  public ResponseEntity<List<ListRuntimeResponse>> deleteRuntimesInProject(\n+      String billingProjectId, ListRuntimeDeleteRequest runtimesToDelete) {\n+    return ResponseEntity.ok(\n+        deleteLeonardoRuntimesInProject(billingProjectId, runtimesToDelete.getRuntimesToDelete())\n+            .stream()\n+            .map(leonardoMapper::toApiListRuntimeResponse)", "originalCommit": "bcc4df66b911d45000dd93be70fe2df15b31d376", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NjkwNg==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479566906", "bodyText": "Done. There was an issue with generating the model name prefix, which I've filed against Swagger, but it turns out by eliminating the Swagger oneOf (as I intended to do in a later PR), we can bypass this bug. swagger-api/swagger-codegen#10442", "author": "calbach", "createdAt": "2020-08-28T22:57:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUxMTA3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUxODIwNA==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479518204", "bodyText": "cluster -> runtime", "author": "ericsong", "createdAt": "2020-08-28T20:23:51Z", "path": "api/src/main/java/org/pmiops/workbench/notebooks/LeonardoNotebooksClient.java", "diffHunk": "@@ -3,47 +3,45 @@\n import java.util.List;\n import java.util.Map;\n import org.pmiops.workbench.exceptions.WorkbenchException;\n-import org.pmiops.workbench.leonardo.model.Cluster;\n-import org.pmiops.workbench.leonardo.model.ListClusterResponse;\n+import org.pmiops.workbench.leonardo.model.GetRuntimeResponse;\n+import org.pmiops.workbench.leonardo.model.ListRuntimeResponse;\n import org.pmiops.workbench.notebooks.model.StorageLink;\n \n /**\n  * Encapsulate Leonardo's Notebooks API interaction details and provide a simple/mockable interface\n  * for internal use.\n  */\n public interface LeonardoNotebooksClient {\n-  List<ListClusterResponse> listClustersByProject(String googleProject);\n-\n   /** lists all notebook clusters as the appengine SA, to be used only for admin operations */\n-  List<ListClusterResponse> listClustersByProjectAsService(String googleProject);\n+  List<ListRuntimeResponse> listRuntimesByProjectAsService(String googleProject);\n \n   /**\n    * Creates a notebooks cluster owned by the current authenticated user.", "originalCommit": "bcc4df66b911d45000dd93be70fe2df15b31d376", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NzEyNg==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479567126", "bodyText": "done", "author": "calbach", "createdAt": "2020-08-28T22:58:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUxODIwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMTIyOQ==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479521229", "bodyText": "cluster -> runtime", "author": "ericsong", "createdAt": "2020-08-28T20:31:17Z", "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5389,13 +5542,56 @@ definitions:\n         description: |\n           The date and time the cluster was last accessed, in ISO-8601 format.\n           Date accessed is defined as the last time the cluster was created, modified, or accessed via the proxy.\n+  ListRuntimeResponse:\n+    description: This is a subset of options in a full runtimes response, copied from leonardo.yaml.\n+    required:\n+    - id\n+    - runtimeName\n+    - googleProject\n+    - status\n+    - createdDate\n+    - labels\n+    - dateAccessed\n+    properties:\n+      id:\n+        type: integer\n+        description: Internal Leonardo ID of the runtime\n+      runtimeName:\n+        type: string\n+        description: The user-supplied name for the runtime\n+      googleProject:\n+        type: string\n+        description: The Google Project used to create the runtime\n+      status:\n+        \"$ref\": \"#/definitions/RuntimeStatus\"\n+      createdDate:\n+        type: string\n+        description: The date and time the cluster was created, in ISO-8601 format\n+      labels:\n+        type: object\n+        description: The labels to be placed on the cluster. Of type Map[String,String]", "originalCommit": "bcc4df66b911d45000dd93be70fe2df15b31d376", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NzQyNQ==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479567425", "bodyText": "done, here and below", "author": "calbach", "createdAt": "2020-08-28T22:59:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMTIyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMTI3OA==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479521278", "bodyText": "cluster -> runtime", "author": "ericsong", "createdAt": "2020-08-28T20:31:26Z", "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5389,13 +5542,56 @@ definitions:\n         description: |\n           The date and time the cluster was last accessed, in ISO-8601 format.\n           Date accessed is defined as the last time the cluster was created, modified, or accessed via the proxy.\n+  ListRuntimeResponse:\n+    description: This is a subset of options in a full runtimes response, copied from leonardo.yaml.\n+    required:\n+    - id\n+    - runtimeName\n+    - googleProject\n+    - status\n+    - createdDate\n+    - labels\n+    - dateAccessed\n+    properties:\n+      id:\n+        type: integer\n+        description: Internal Leonardo ID of the runtime\n+      runtimeName:\n+        type: string\n+        description: The user-supplied name for the runtime\n+      googleProject:\n+        type: string\n+        description: The Google Project used to create the runtime\n+      status:\n+        \"$ref\": \"#/definitions/RuntimeStatus\"\n+      createdDate:\n+        type: string\n+        description: The date and time the cluster was created, in ISO-8601 format\n+      labels:\n+        type: object\n+        description: The labels to be placed on the cluster. Of type Map[String,String]\n+      dateAccessed:\n+        type: string\n+        description: |\n+          The date and time the cluster was last accessed, in ISO-8601 format.", "originalCommit": "bcc4df66b911d45000dd93be70fe2df15b31d376", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NzQzOA==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479567438", "bodyText": "done", "author": "calbach", "createdAt": "2020-08-28T22:59:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMTI3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMjU5Nw==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479522597", "bodyText": "Nit - some of the Runtime classes are prefixed with Leonardo while others are not. Is there a pattern being followed?", "author": "ericsong", "createdAt": "2020-08-28T20:34:55Z", "path": "api/src/main/java/org/pmiops/workbench/actionaudit/auditors/LeonardoRuntimeAuditor.java", "diffHunk": "@@ -0,0 +1,7 @@\n+package org.pmiops.workbench.actionaudit.auditors;\n+\n+import java.util.List;\n+\n+public interface LeonardoRuntimeAuditor {", "originalCommit": "bcc4df66b911d45000dd93be70fe2df15b31d376", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2ODAxOA==", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479568018", "bodyText": "I've basically added this prefix in contexts where it would not otherwise be obvious. Unfortunately \"runtime\" is a bit of a poor resource name, since it can commonly be used as an adjective or adverb. i.e. in this case, \"RuntimeAuditor\" could be interpreted in many different ways. In places where it's a noun in our own API, I just use \"Runtime\".", "author": "calbach", "createdAt": "2020-08-28T23:02:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMjU5Nw=="}], "type": "inlineReview"}, {"oid": "9e9c4950e57c387e242e06f1660e90d399098059", "url": "https://github.com/all-of-us/workbench/commit/9e9c4950e57c387e242e06f1660e90d399098059", "message": "Finally compiles, tests definitely broken, need to add new methods too", "committedDate": "2020-09-01T22:35:44Z", "type": "commit"}, {"oid": "0bb899b19941fde5fa51913ae49c19e9b9e41cc1", "url": "https://github.com/all-of-us/workbench/commit/0bb899b19941fde5fa51913ae49c19e9b9e41cc1", "message": "Test fixes", "committedDate": "2020-09-01T22:35:44Z", "type": "commit"}, {"oid": "e20c7a8bd40aa47852580f66b916005efba03b73", "url": "https://github.com/all-of-us/workbench/commit/e20c7a8bd40aa47852580f66b916005efba03b73", "message": "manage clusters fix, creation time fix", "committedDate": "2020-09-01T22:35:45Z", "type": "commit"}, {"oid": "ef99840d4c9f43d9395221a8686c3ca5766514ab", "url": "https://github.com/all-of-us/workbench/commit/ef99840d4c9f43d9395221a8686c3ca5766514ab", "message": "Model name prefix", "committedDate": "2020-09-01T22:35:45Z", "type": "commit"}, {"oid": "df949cb20ab7959ae50ce49f0f81aef8383df379", "url": "https://github.com/all-of-us/workbench/commit/df949cb20ab7959ae50ce49f0f81aef8383df379", "message": "Test refactorings", "committedDate": "2020-09-01T22:35:45Z", "type": "commit"}, {"oid": "d740f4b5ac9f8bfb4d5ad5377f6f85b5a34397bc", "url": "https://github.com/all-of-us/workbench/commit/d740f4b5ac9f8bfb4d5ad5377f6f85b5a34397bc", "message": "PR feedback", "committedDate": "2020-09-01T22:35:45Z", "type": "commit"}, {"oid": "92a3ea32bf3756e1c66db8c8384d0d016fac11aa", "url": "https://github.com/all-of-us/workbench/commit/92a3ea32bf3756e1c66db8c8384d0d016fac11aa", "message": "remaining fixes", "committedDate": "2020-09-01T22:35:45Z", "type": "commit"}, {"oid": "d494151678d1f5c860633da40753396e454fdf91", "url": "https://github.com/all-of-us/workbench/commit/d494151678d1f5c860633da40753396e454fdf91", "message": "test fixes", "committedDate": "2020-09-01T22:35:45Z", "type": "commit"}, {"oid": "9df982d04a2ad2f2ce92015a575e68418f512b94", "url": "https://github.com/all-of-us/workbench/commit/9df982d04a2ad2f2ce92015a575e68418f512b94", "message": "Another UI test fix", "committedDate": "2020-09-01T22:35:45Z", "type": "commit"}, {"oid": "6e945d5089806fda60ae487acdbee38b6d524cdd", "url": "https://github.com/all-of-us/workbench/commit/6e945d5089806fda60ae487acdbee38b6d524cdd", "message": "lint fixes", "committedDate": "2020-09-01T22:37:14Z", "type": "commit"}, {"oid": "e1089235c4d22376e81da8b509557d9ad4047bc3", "url": "https://github.com/all-of-us/workbench/commit/e1089235c4d22376e81da8b509557d9ad4047bc3", "message": "Revert create endpoint only", "committedDate": "2020-09-01T22:48:37Z", "type": "commit"}, {"oid": "e1089235c4d22376e81da8b509557d9ad4047bc3", "url": "https://github.com/all-of-us/workbench/commit/e1089235c4d22376e81da8b509557d9ad4047bc3", "message": "Revert create endpoint only", "committedDate": "2020-09-01T22:48:37Z", "type": "forcePushed"}]}