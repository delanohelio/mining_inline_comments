{"pr_number": 4200, "pr_title": "[RW-5640][risk=low] Adding UI to add microarray codegen", "pr_createdAt": "2020-10-22T19:24:28Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4200", "timeline": [{"oid": "042274913ae69d803c552c91e3c06b82bc80598c", "url": "https://github.com/all-of-us/workbench/commit/042274913ae69d803c552c91e3c06b82bc80598c", "message": "UI basics in place - styling needed", "committedDate": "2020-10-22T17:46:32Z", "type": "commit"}, {"oid": "2a7218b6ea845413749a6e9c45dcbb9455c3568f", "url": "https://github.com/all-of-us/workbench/commit/2a7218b6ea845413749a6e9c45dcbb9455c3568f", "message": "WIP - adding tests", "committedDate": "2020-10-22T17:46:51Z", "type": "commit"}, {"oid": "875dfa5b908cb3bfb75102ff3d51b8130f58f49b", "url": "https://github.com/all-of-us/workbench/commit/875dfa5b908cb3bfb75102ff3d51b8130f58f49b", "message": "add tests. manually tested as well", "committedDate": "2020-10-22T19:17:50Z", "type": "commit"}, {"oid": "4963aaf0f5d2a9911bb4128fca62590494ef50d1", "url": "https://github.com/all-of-us/workbench/commit/4963aaf0f5d2a9911bb4128fca62590494ef50d1", "message": "lint", "committedDate": "2020-10-22T19:19:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3NzY5Ng==", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510477696", "bodyText": "please make relative to application, not the current file (next line also violates this, but is less offensive and existing issue)", "author": "calbach", "createdAt": "2020-10-22T21:48:13Z", "path": "ui/src/app/pages/data/data-set/new-dataset-modal.spec.tsx", "diffHunk": "@@ -11,7 +11,10 @@ import {\n import {waitOneTickAndUpdate} from 'testing/react-test-helpers';\n import {DataSetApiStub} from 'testing/stubs/data-set-api-stub';\n import {WorkspacesApiStub} from 'testing/stubs/workspaces-api-stub';\n+import {DataSetExportRequest} from '../../../../generated/fetch';", "originalCommit": "4963aaf0f5d2a9911bb4128fca62590494ef50d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3ODIyMA==", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510478220", "bodyText": "interesting - I actually haven't seen this pattern before but it seems pretty nice", "author": "calbach", "createdAt": "2020-10-22T21:49:31Z", "path": "ui/src/app/pages/data/data-set/new-dataset-modal.spec.tsx", "diffHunk": "@@ -11,7 +11,10 @@ import {\n import {waitOneTickAndUpdate} from 'testing/react-test-helpers';\n import {DataSetApiStub} from 'testing/stubs/data-set-api-stub';\n import {WorkspacesApiStub} from 'testing/stubs/workspaces-api-stub';\n+import {DataSetExportRequest} from '../../../../generated/fetch';\n import {NewDataSetModal} from './new-dataset-modal';\n+import GenomicsAnalysisToolEnum = DataSetExportRequest.GenomicsAnalysisToolEnum;", "originalCommit": "4963aaf0f5d2a9911bb4128fca62590494ef50d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3ODc5MQ==", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510478791", "bodyText": "nit: would revert these newlines", "author": "calbach", "createdAt": "2020-10-22T21:50:44Z", "path": "ui/src/app/pages/data/data-set/new-dataset-modal.tsx", "diffHunk": "@@ -1,30 +1,36 @@\n-import * as React from 'react';\n-\n-import {validate} from 'validate.js';\n-\n-import {dataSetApi, workspacesApi} from 'app/services/swagger-fetch-clients';\n-\n import {AlertDanger} from 'app/components/alert';\n import {Button, TabButton} from 'app/components/buttons';\n import {SmallHeader, styles as headerStyles} from 'app/components/headers';\n import {CheckBox, RadioButton, Select, TextArea, TextInput} from 'app/components/inputs';\n import {Modal, ModalBody, ModalFooter, ModalTitle} from 'app/components/modals';\n import {TooltipTrigger} from 'app/components/popups';\n import {SpinnerOverlay} from 'app/components/spinners';\n+import {TextColumn} from 'app/components/text-column';\n import {appendNotebookFileSuffix} from 'app/pages/analysis/util';\n+\n+import {dataSetApi, workspacesApi} from 'app/services/swagger-fetch-clients';\n import colors from 'app/styles/colors';\n-import {summarizeErrors} from 'app/utils';\n+import {\n+  summarizeErrors", "originalCommit": "4963aaf0f5d2a9911bb4128fca62590494ef50d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MDEzMw==", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510480133", "bodyText": "nit: indent, here and below", "author": "calbach", "createdAt": "2020-10-22T21:54:00Z", "path": "ui/src/app/pages/data/data-set/new-dataset-modal.spec.tsx", "diffHunk": "@@ -139,17 +148,103 @@ describe('NewDataSetModal', () => {\n       dataSetRequest: dataSetRequestStub,\n       newNotebook: true,\n       notebookName: notebookNameStub,\n-      kernelType: KernelTypeEnum.Python\n+      kernelType: KernelTypeEnum.Python,\n+      genomicsDataType: GenomicsDataTypeEnum.NONE,\n+      genomicsAnalysisTool: GenomicsAnalysisToolEnum.NONE\n     });\n   });\n+\n   it ('should have default dataSet name if dataset is passed as props', () => {\n     const name = 'Update Dataset';\n     dataSet = {...dataSet, name: name, description: 'dataset'};\n     const wrapper = mount(createNewDataSetModal());\n     const dataSetName  =\n-        wrapper.find('[data-test-id=\"data-set-name-input\"]').first().prop('value');\n+      wrapper.find('[data-test-id=\"data-set-name-input\"]').first().prop('value');\n     expect(dataSetName).toBe(name);\n+  });\n+\n+  it ('should show microarray options if the display flag is true and the kernel is Python', async() => {\n+    const wrapper = mount(createNewDataSetModal());\n+    wrapper.setProps({displayMicroarrayOptions: true});\n+    wrapper.setState({kernelType: KernelTypeEnum.Python});\n+    await waitOneTickAndUpdate(wrapper);\n+\n+    expect(wrapper.find('[data-test-id=\"include-raw-microarray-data\"]').exists()).toBeTruthy();\n+  });\n+\n+  it ('should not show microarray options if the cdrVersion does not have microarray data', async() => {\n+    const wrapper = mount(createNewDataSetModal());\n+    wrapper.setProps({displayMicroarrayOptions: false});\n+    wrapper.setState({kernelType: KernelTypeEnum.Python});\n+    await waitOneTickAndUpdate(wrapper);\n+\n+    expect(wrapper.find('[data-test-id=\"include-raw-microarray-data\"]').exists()).toBeFalsy();\n+  });\n+\n+  it ('should not show microarray options if the kernel is not Python', async() => {\n+    const wrapper = mount(createNewDataSetModal());\n+    wrapper.setProps({displayMicroarrayOptions: true});\n+    wrapper.setState({kernelType: KernelTypeEnum.R});\n+    await waitOneTickAndUpdate(wrapper);\n \n+    expect(wrapper.find('[data-test-id=\"include-raw-microarray-data\"]').exists()).toBeFalsy();\n+  });\n \n+  it ('should show genomics analysis tools if include raw microarray data is checked', async() => {\n+    const wrapper = mount(createNewDataSetModal());\n+    wrapper.setProps({displayMicroarrayOptions: true});\n+    wrapper.setState({kernelType: KernelTypeEnum.Python, includeRawMicroarrayData: true});\n+    await waitOneTickAndUpdate(wrapper);\n+\n+    expect(wrapper.find('[data-test-id=\"genomics-analysis-tool-none\"]').exists()).toBeTruthy();\n+    expect(wrapper.find('[data-test-id=\"genomics-analysis-tool-hail\"]').exists()).toBeTruthy();\n+    expect(wrapper.find('[data-test-id=\"genomics-analysis-tool-plink\"]').exists()).toBeTruthy();\n   });\n+\n+  it ('should export to notebook with the correct microarray parameters', async() => {\n+    const wrapper = mount(createNewDataSetModal());\n+    wrapper.setProps({displayMicroarrayOptions: true});\n+    wrapper.setState({kernelType: KernelTypeEnum.Python});\n+\n+    const exportSpy = jest.spyOn(dataSetApi(), 'exportToNotebook');\n+    const nameStub = 'Dataset Name';\n+    const notebookNameStub = 'Notebook Name';\n+    const dataSetRequestStub: DataSetRequest = {\n+      name: nameStub,\n+      includesAllParticipants: false,\n+      description: '',\n+      conceptSetIds: [],\n+      cohortIds: [],\n+      domainValuePairs: [],\n+      prePackagedConceptSet: PrePackagedConceptSetEnum.NONE\n+    };\n+\n+    wrapper.find('[data-test-id=\"data-set-name-input\"]')\n+    .first().simulate('change', {target: {value: nameStub}});", "originalCommit": "4963aaf0f5d2a9911bb4128fca62590494ef50d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MTg3NQ==", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510481875", "bodyText": "OK, forgot to flag one issue that I believe exists here: should ensure that the following doesn't 400 (leave it up to you the best method for doing so):\n\ncheck microarray\nswitch to R\nexport", "author": "calbach", "createdAt": "2020-10-22T21:58:00Z", "path": "ui/src/app/pages/data/data-set/new-dataset-modal.tsx", "diffHunk": "@@ -339,6 +351,42 @@ class NewDataSetModal extends React.Component<Props, State> {\n                 </label>\n               )}\n           </React.Fragment>}\n+          {this.props.displayMicroarrayOptions && this.state.kernelType === KernelTypeEnum.Python &&", "originalCommit": "4963aaf0f5d2a9911bb4128fca62590494ef50d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MjExNA==", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510482114", "bodyText": "(right now, pretty sure the includeMicroarrayData will still be true, resulting in an export failure to R)", "author": "calbach", "createdAt": "2020-10-22T21:58:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MTg3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk2MDg1MQ==", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510960851", "bodyText": "good find. fixed!", "author": "ericsong", "createdAt": "2020-10-23T15:23:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MTg3NQ=="}], "type": "inlineReview"}, {"oid": "65a28075504f57757f1c77c4da07e4959fb2ebc5", "url": "https://github.com/all-of-us/workbench/commit/65a28075504f57757f1c77c4da07e4959fb2ebc5", "message": "fix tests", "committedDate": "2020-10-23T15:00:53Z", "type": "commit"}, {"oid": "6b9e754a34c61f27a67422b2724ee313d7fcdc91", "url": "https://github.com/all-of-us/workbench/commit/6b9e754a34c61f27a67422b2724ee313d7fcdc91", "message": "fix bug when switching to R", "committedDate": "2020-10-23T15:22:54Z", "type": "commit"}, {"oid": "4fc508861611dacb1e6421e75089c5261fcb798c", "url": "https://github.com/all-of-us/workbench/commit/4fc508861611dacb1e6421e75089c5261fcb798c", "message": "Merge branch 'master' of github.com:all-of-us/workbench into songe/RW-5640", "committedDate": "2020-10-23T15:40:51Z", "type": "commit"}]}