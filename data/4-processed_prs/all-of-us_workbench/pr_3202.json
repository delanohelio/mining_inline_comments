{"pr_number": 3202, "pr_title": "[RW-3861][risk=no] Allow graphs to use sex at birth and different age types", "pr_createdAt": "2020-02-28T17:56:41Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3202", "timeline": [{"oid": "322503fe8ac18ca277938b3fd811b10c85188c6d", "url": "https://github.com/all-of-us/workbench/commit/322503fe8ac18ca277938b3fd811b10c85188c6d", "message": "RW-3861 adding column to cb_search_person", "committedDate": "2020-02-28T17:37:19Z", "type": "commit"}, {"oid": "6cf2c89c50856dea65d1559f500c38c6edb89501", "url": "https://github.com/all-of-us/workbench/commit/6cf2c89c50856dea65d1559f500c38c6edb89501", "message": "RW-3861 adding check for snyth dataset.", "committedDate": "2020-02-28T17:37:19Z", "type": "commit"}, {"oid": "9325e64a11329a24860d63965e6bfac5cbd832de", "url": "https://github.com/all-of-us/workbench/commit/9325e64a11329a24860d63965e6bfac5cbd832de", "message": "RW-3861 fixing sh file.", "committedDate": "2020-02-28T17:37:19Z", "type": "commit"}, {"oid": "77a0166125966a71c4c73ac02ea2f229bd971e36", "url": "https://github.com/all-of-us/workbench/commit/77a0166125966a71c4c73ac02ea2f229bd971e36", "message": "RW-3861 adding implementation for graphs using sex at birth and age types.", "committedDate": "2020-02-28T17:43:02Z", "type": "commit"}, {"oid": "306564a7c5024d7a00d8f732c7662d861e68216e", "url": "https://github.com/all-of-us/workbench/commit/306564a7c5024d7a00d8f732c7662d861e68216e", "message": "RW-3861 adding ui change to call updated endpoint.", "committedDate": "2020-02-28T17:43:02Z", "type": "commit"}, {"oid": "6c4fdcdd14f6cc1d1d0b77600f02858fc46cb67b", "url": "https://github.com/all-of-us/workbench/commit/6c4fdcdd14f6cc1d1d0b77600f02858fc46cb67b", "message": "RW-3861\nfixing test", "committedDate": "2020-02-28T18:24:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MTk1OA==", "url": "https://github.com/all-of-us/workbench/pull/3202#discussion_r385851958", "bodyText": "Updated the max results. We probably need to look at purging some dataset in the near future and how to automate it.", "author": "freemabd", "createdAt": "2020-02-28T18:26:33Z", "path": "api/db-cdr/generate-cdr/generate-cb-criteria-tables.sh", "diffHunk": "@@ -39,7 +39,7 @@ then\n fi\n \n # Check that bq_project exists and exit if not\n-datasets=$(bq --project=$BQ_PROJECT ls --max_results=150)\n+datasets=$(bq --project=$BQ_PROJECT ls --max_results=1000)", "originalCommit": "6c4fdcdd14f6cc1d1d0b77600f02858fc46cb67b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MjQ1Ng==", "url": "https://github.com/all-of-us/workbench/pull/3202#discussion_r385852456", "bodyText": "Not sure what happened but this was removed and shouldn't have been.", "author": "freemabd", "createdAt": "2020-02-28T18:27:41Z", "path": "api/db-cdr/generate-cdr/make-bq-denormalized-search.sh", "diffHunk": "@@ -25,22 +25,47 @@ fi\n # Create bq tables we have json schema for\n schema_path=generate-cdr/bq-schemas\n \n+bq --project=$BQ_PROJECT rm -f $BQ_DATASET.cb_search_person\n+bq --quiet --project=$BQ_PROJECT mk --schema=$schema_path/cb_search_person.json --time_partitioning_type=DAY --clustering_fields person_id $BQ_DATASET.cb_search_person\n+\n+bq --project=$BQ_PROJECT rm -f $BQ_DATASET.cb_search_all_events\n+bq --quiet --project=$BQ_PROJECT mk --schema=$schema_path/cb_search_all_events.json --time_partitioning_type=DAY --clustering_fields concept_id $BQ_DATASET.cb_search_all_events\n+", "originalCommit": "6c4fdcdd14f6cc1d1d0b77600f02858fc46cb67b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1Mjg2Mg==", "url": "https://github.com/all-of-us/workbench/pull/3202#discussion_r385852862", "bodyText": "Synth dataset doesn't have sex at birth, so we just populate that column with gender to compensate.", "author": "freemabd", "createdAt": "2020-02-28T18:28:33Z", "path": "api/db-cdr/generate-cdr/make-bq-denormalized-search.sh", "diffHunk": "@@ -25,22 +25,47 @@ fi\n # Create bq tables we have json schema for\n schema_path=generate-cdr/bq-schemas\n \n+bq --project=$BQ_PROJECT rm -f $BQ_DATASET.cb_search_person\n+bq --quiet --project=$BQ_PROJECT mk --schema=$schema_path/cb_search_person.json --time_partitioning_type=DAY --clustering_fields person_id $BQ_DATASET.cb_search_person\n+\n+bq --project=$BQ_PROJECT rm -f $BQ_DATASET.cb_search_all_events\n+bq --quiet --project=$BQ_PROJECT mk --schema=$schema_path/cb_search_all_events.json --time_partitioning_type=DAY --clustering_fields concept_id $BQ_DATASET.cb_search_all_events\n+\n ################################################\n # insert person data into cb_search_person\n ################################################\n echo \"Inserting person data into cb_search_person\"\n-bq --quiet --project=$BQ_PROJECT query --nouse_legacy_sql \\\n-\"INSERT INTO \\`$BQ_PROJECT.$BQ_DATASET.cb_search_person\\`\n-    (person_id, gender, race, ethnicity, dob)\n-SELECT p.person_id,\n+if [ \"$BQ_PROJECT:$BQ_DATASET\" == \"all-of-us-ehr-dev:synthetic_cdr20180606\" ]", "originalCommit": "6c4fdcdd14f6cc1d1d0b77600f02858fc46cb67b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MzQ2Ng==", "url": "https://github.com/all-of-us/workbench/pull/3202#discussion_r385853466", "bodyText": "Again Synth dataset doesn't have any of the OMOP *_ext tables. This is how we determine if data is EHR or not", "author": "freemabd", "createdAt": "2020-02-28T18:29:46Z", "path": "api/db-cdr/generate-cdr/make-bq-denormalized-search.sh", "diffHunk": "@@ -158,53 +183,102 @@ WHERE x.person_id = y.person_id\"\n # set has EHR data flag\n ################################################\n echo \"set has EHR data flag in cb_search_person\"\n-bq --quiet --project=$BQ_PROJECT query --nouse_legacy_sql \\\n-\"UPDATE \\`$BQ_PROJECT.$BQ_DATASET.cb_search_person\\` x\n-SET x.has_ehr_data = y.has_data\n-FROM\n-    (\n-        SELECT a.person_id, CASE WHEN b.person_id is not null THEN 1 ELSE 0 END AS has_data\n-        FROM \\`$BQ_PROJECT.$BQ_DATASET.person\\` a\n-        LEFT JOIN\n-            (\n-                SELECT DISTINCT person_id\n-                FROM \\`$BQ_PROJECT.$BQ_DATASET.measurement\\` as a\n-                LEFT JOIN \\`$BQ_PROJECT.$BQ_DATASET.measurement_ext\\` as b on a.measurement_id = b.measurement_id\n-                WHERE lower(b.src_id) like 'ehr site%'\n-                UNION DISTINCT\n-                SELECT DISTINCT person_id\n-                FROM \\`$BQ_PROJECT.$BQ_DATASET.condition_occurrence\\` as a\n-                LEFT JOIN \\`$BQ_PROJECT.$BQ_DATASET.condition_occurrence_ext\\` as b on a.condition_occurrence_id = b.condition_occurrence_id\n-                WHERE lower(b.src_id) like 'ehr site%'\n-                UNION DISTINCT\n-                SELECT DISTINCT person_id\n-                FROM \\`$BQ_PROJECT.$BQ_DATASET.device_exposure\\` as a\n-                LEFT JOIN \\`$BQ_PROJECT.$BQ_DATASET.device_exposure_ext\\` as b on a.device_exposure_id = b.device_exposure_id\n-                WHERE lower(b.src_id) like 'ehr site%'\n-                UNION DISTINCT\n-                SELECT DISTINCT person_id\n-                FROM \\`$BQ_PROJECT.$BQ_DATASET.drug_exposure\\` as a\n-                LEFT JOIN \\`$BQ_PROJECT.$BQ_DATASET.drug_exposure_ext\\` as b on a.drug_exposure_id = b.drug_exposure_id\n-                WHERE lower(b.src_id) like 'ehr site%'\n-                UNION DISTINCT\n-                SELECT DISTINCT person_id\n-                FROM \\`$BQ_PROJECT.$BQ_DATASET.observation\\` as a\n-                LEFT JOIN \\`$BQ_PROJECT.$BQ_DATASET.observation_ext\\` as b on a.observation_id = b.observation_id\n-                WHERE lower(b.src_id) like 'ehr site%'\n-                UNION DISTINCT\n-                SELECT DISTINCT person_id\n-                FROM \\`$BQ_PROJECT.$BQ_DATASET.procedure_occurrence\\` as a\n-                LEFT JOIN \\`$BQ_PROJECT.$BQ_DATASET.procedure_occurrence_ext\\` as b on a.procedure_occurrence_id = b.procedure_occurrence_id\n-                WHERE lower(b.src_id) like 'ehr site%'\n-                UNION DISTINCT\n-                SELECT DISTINCT person_id\n-                FROM \\`$BQ_PROJECT.$BQ_DATASET.visit_occurrence\\` as a\n-                LEFT JOIN \\`$BQ_PROJECT.$BQ_DATASET.visit_occurrence_ext\\` as b on a.visit_occurrence_id = b.visit_occurrence_id\n-                WHERE lower(b.src_id) like 'ehr site%'\n-            ) b on a.person_id = b.person_id\n-    ) y\n-WHERE x.person_id = y.person_id\"\n-\n+if [ \"$BQ_PROJECT:$BQ_DATASET\" == \"all-of-us-ehr-dev:synthetic_cdr20180606\" ]", "originalCommit": "6c4fdcdd14f6cc1d1d0b77600f02858fc46cb67b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1MzcyNQ==", "url": "https://github.com/all-of-us/workbench/pull/3202#discussion_r385853725", "bodyText": "Updated this property to name, which will hold gender or sex at birth.", "author": "freemabd", "createdAt": "2020-02-28T18:30:24Z", "path": "api/src/bigquerytest/java/org/pmiops/workbench/api/CohortBuilderControllerBQTest.java", "diffHunk": "@@ -1923,13 +1925,67 @@ public void getDemoChartInfo() {\n             DomainType.PHYSICAL_MEASUREMENT.toString(), ImmutableList.of(pm), new ArrayList<>());\n \n     DemoChartInfoListResponse response =\n-        controller.getDemoChartInfo(cdrVersion.getCdrVersionId(), searchRequest).getBody();\n+        controller\n+            .getDemoChartInfo(\n+                cdrVersion.getCdrVersionId(),\n+                GenderOrSexType.GENDER.toString(),\n+                AgeType.AGE.toString(),\n+                searchRequest)\n+            .getBody();\n     assertEquals(2, response.getItems().size());\n     assertEquals(\n-        new DemoChartInfo().gender(\"MALE\").race(\"Asian\").ageRange(\"45-64\").count(1L),\n+        new DemoChartInfo().name(\"MALE\").race(\"Asian\").ageRange(\"45-64\").count(1L),", "originalCommit": "6c4fdcdd14f6cc1d1d0b77600f02858fc46cb67b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1NDMyNQ==", "url": "https://github.com/all-of-us/workbench/pull/3202#discussion_r385854325", "bodyText": "No reason to dynamically set the table when it was always the same and it improves readability", "author": "freemabd", "createdAt": "2020-02-28T18:31:36Z", "path": "api/src/main/java/org/pmiops/workbench/cohortbuilder/CohortQueryBuilder.java", "diffHunk": "@@ -23,38 +24,31 @@\n @Service\n public class CohortQueryBuilder {\n   private static final String REVIEW_TABLE = \"cb_review_all_events\";\n+  private static final String SEARCH_PERSON_TABLE = \"cb_search_person\";\n+  private static final String PERSON_TABLE = \"person\";\n+\n   private static final String COUNT_SQL_TEMPLATE =\n       \"select count(*) as count\\n\"\n-          + \"from `${projectId}.${dataSetId}.${table}` ${table}\\n\"\n+          + \"from `${projectId}.${dataSetId}.cb_search_person` cb_search_person\\n\"", "originalCommit": "6c4fdcdd14f6cc1d1d0b77600f02858fc46cb67b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg1NTc3Mw==", "url": "https://github.com/all-of-us/workbench/pull/3202#discussion_r385855773", "bodyText": "For now i defaulted graphs to gender and age.", "author": "freemabd", "createdAt": "2020-02-28T18:34:46Z", "path": "ui/src/app/cohort-search/overview/overview.component.tsx", "diffHunk": "@@ -168,15 +168,16 @@ export const ListOverview = withCurrentWorkspace()(\n         const {cdrVersionId} = currentWorkspaceStore.getValue();\n         const request = mapRequest(searchRequest);\n         if (request.includes.length > 0) {\n-          cohortBuilderApi().getDemoChartInfo(+cdrVersionId, request).then(response => {\n-            if (localCheck === this.state.apiCallCheck) {\n-              this.setState({\n-                chartData: response.items,\n-                total: response.items.reduce((sum, data) => sum + data.count, 0),\n-                loading: false\n-              });\n-            }\n-          });\n+          cohortBuilderApi().getDemoChartInfo(+cdrVersionId, GenderOrSexType[GenderOrSexType.GENDER],\n+            AgeType[AgeType.AGE], request).then(response => {", "originalCommit": "6c4fdcdd14f6cc1d1d0b77600f02858fc46cb67b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "12d50dd8e1cafb710430dfba045e8054a56e72f5", "url": "https://github.com/all-of-us/workbench/commit/12d50dd8e1cafb710430dfba045e8054a56e72f5", "message": "RW-3861 update charts to match new response objects", "committedDate": "2020-02-28T21:54:10Z", "type": "commit"}]}