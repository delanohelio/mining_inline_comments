{"pr_number": 3076, "pr_title": "[No ticket][RISK=NO]Account creation - Add gender Identity to demographic survey", "pr_createdAt": "2020-02-03T17:57:51Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3076", "timeline": [{"oid": "9f83e4b08dae6aff79f6a1959635ddb76714a7be", "url": "https://github.com/all-of-us/workbench/commit/9f83e4b08dae6aff79f6a1959635ddb76714a7be", "message": "Add gender Identity to demographic survey", "committedDate": "2020-02-03T17:53:14Z", "type": "commit"}, {"oid": "21bf85417fe689ec06b0f5bf615eb1772932fca2", "url": "https://github.com/all-of-us/workbench/commit/21bf85417fe689ec06b0f5bf615eb1772932fca2", "message": "Fix lint error", "committedDate": "2020-02-03T17:59:15Z", "type": "commit"}, {"oid": "b56daf588cef7880a9839b5eeef998df3e160221", "url": "https://github.com/all-of-us/workbench/commit/b56daf588cef7880a9839b5eeef998df3e160221", "message": "Update enum values to match UI", "committedDate": "2020-02-03T18:22:22Z", "type": "commit"}, {"oid": "81d9600bdf642541b23902bd95ebb3d87c624c31", "url": "https://github.com/all-of-us/workbench/commit/81d9600bdf642541b23902bd95ebb3d87c624c31", "message": "UI change enum to match UI field", "committedDate": "2020-02-03T18:24:36Z", "type": "commit"}, {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2", "url": "https://github.com/all-of-us/workbench/commit/388d1231d1fdd5ef6447221acee2acd534103be2", "message": "resolve merge conflicts", "committedDate": "2020-02-03T18:55:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MTg3OA==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374291878", "bodyText": "For safety, could we run this Liquibase changeset first and then merge the code changes?", "author": "jaycarlton", "createdAt": "2020-02-03T19:22:22Z", "path": "api/db/changelog/db.changelog-124-add-demographic-gender-identity.xml", "diffHunk": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxOTkxMg==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374819912", "bodyText": "This is in your other PR right? So you don't need it here anymore after rebasing that one I guess.", "author": "jaycarlton", "createdAt": "2020-02-04T17:38:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MTg3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyNDkzNg==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374824936", "bodyText": "I am just waiting for this PR to be approved, the plan is\nto merge the other PR in\nremove this (this is here for context) and\nmerge this  PR then", "author": "NehaBroad", "createdAt": "2020-02-04T17:49:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MTg3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MjM4Ng==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374292386", "bodyText": "In the UI it looked like Gender was a checkbox. Should it be a radio button if they're mutually exclusive?", "author": "jaycarlton", "createdAt": "2020-02-03T19:23:22Z", "path": "api/db/changelog/db.changelog-124-add-demographic-gender-identity.xml", "diffHunk": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog\n+    xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n+                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n+  <changeSet author=\"nsaxena\" id=\"changelog-124-add-demographic-gender-identity\">\n+    <createTable tableName=\"demographic_survey_gender\">\n+  \t  <column name=\"demographic_survey_id\" type=\"bigint\">\n+  \t \t\t <constraints nullable=\"false\"/>\n+  \t  </column>\n+  \t  <column name=\"gender\" type=\"tinyint\">", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMwMTY5Mw==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374301693", "bodyText": "Use can select multiple option for GENDER", "author": "NehaBroad", "createdAt": "2020-02-03T19:42:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MjM4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MzMwOA==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374293308", "bodyText": "Please don't return a null list if you can avoid it. Can you use Collections.emptyList()?", "author": "jaycarlton", "createdAt": "2020-02-03T19:25:19Z", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +176,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender\")\n+  public List<Short> getGender() {\n+    return gender;\n+  }\n+\n+  public void setGender(List<Short> gender) {\n+    this.gender = gender;\n+  }\n+\n+  @Transient\n+  public List<Gender> getGenderEnum() {\n+    if (gender == null) return null;", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5Mzc4MA==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374293780", "bodyText": "Maybe getGenderEnumList() would be clearer.", "author": "jaycarlton", "createdAt": "2020-02-03T19:26:12Z", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +176,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender\")\n+  public List<Short> getGender() {\n+    return gender;\n+  }\n+\n+  public void setGender(List<Short> gender) {\n+    this.gender = gender;\n+  }\n+\n+  @Transient\n+  public List<Gender> getGenderEnum() {", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NDI1MQ==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374294251", "bodyText": "Should we be using List, or would Set be better? I.e. does order matter? I don't think we want duplicate entries.", "author": "jaycarlton", "createdAt": "2020-02-03T19:27:10Z", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +176,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender\")\n+  public List<Short> getGender() {\n+    return gender;\n+  }\n+\n+  public void setGender(List<Short> gender) {\n+    this.gender = gender;\n+  }\n+\n+  @Transient\n+  public List<Gender> getGenderEnum() {\n+    if (gender == null) return null;\n+    return this.gender.stream()\n+        .map(DemographicSurveyEnum::genderFromStorage)\n+        .collect(Collectors.toList());\n+  }\n+\n+  public void setGenderEnum(List<Gender> genderlist) {", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NDgxMg==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374294812", "bodyText": "Should we burn the old 1 & 2 values and make new ones for MAN and WOMAN? Or are they really exact replacements?", "author": "jaycarlton", "createdAt": "2020-02-03T19:28:16Z", "path": "common-api/src/main/java/org/pmiops/workbench/db/model/DemographicSurveyEnum.java", "diffHunk": "@@ -54,8 +54,8 @@\n \n   private static final BiMap<Gender, Short> CLIENT_TO_STORAGE_GENDER =\n       ImmutableBiMap.<Gender, Short>builder()\n-          .put(Gender.MALE, (short) 1)\n-          .put(Gender.FEMALE, (short) 2)\n+          .put(Gender.MAN, (short) 1)", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMwMzQ2Ng==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374303466", "bodyText": "Its the exact replacement, i can still have this as MALE AND FEMALE and have ui label MAN and WOMAN , but since we are going to reintroduce the table itself i thought its best that our enum matches the label", "author": "NehaBroad", "createdAt": "2020-02-03T19:46:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NDgxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NTM0Ng==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374295346", "bodyText": "If we receive PREFER_NO_ANSWER, should we disallow any other choices in the list?", "author": "jaycarlton", "createdAt": "2020-02-03T19:29:19Z", "path": "common-api/src/main/resources/common_api.yaml", "diffHunk": "@@ -77,7 +77,7 @@ definitions:\n \n   Gender:\n     type: string\n-    enum: &Gender [MALE, FEMALE, NON_BINARY, TRANSGENDER, INTERSEX, NONE, PREFER_NO_ANSWER]\n+    enum: &Gender [MAN, WOMAN, NON_BINARY, TRANSGENDER, INTERSEX, NONE, PREFER_NO_ANSWER]", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMwNDIyMQ==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374304221", "bodyText": "I agree prefer not to answer and Non of these describe me should have additional checks,  not just for GENDER but also for other field like SEX AT BIRTH, we do not have that logic as of now (even on UI) we might introduce that later", "author": "NehaBroad", "createdAt": "2020-02-03T19:47:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NTM0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NTkwNg==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374295906", "bodyText": "I wouldn't name this option NONE, because when I read it I assumed it meant \"I have no gender (agender)\". Which isn't 100% the same as this statement I don't think.", "author": "jaycarlton", "createdAt": "2020-02-03T19:30:30Z", "path": "ui/src/app/pages/login/account-creation/account-creation-options.tsx", "diffHunk": "@@ -75,6 +76,14 @@ export const AccountCreationOptions = {\n     {label: `Not Hispanic or Latino`, value: Ethnicity.NOTHISPANIC},\n     {label: ` Prefer not to answer`, value: Ethnicity.PREFERNOANSWER}\n   ],\n+  gender: [\n+    {label: 'Man', value: Gender.MAN},\n+    {label: 'Non-Binary', value: Gender.NONBINARY},\n+    {label: 'Transgender', value: Gender.TRANSGENDER},\n+    {label: 'Woman', value: Gender.WOMAN},\n+    {label: 'None of these describe me', value: Gender.NONE},", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NjQwNw==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374296407", "bodyText": "nit: this value should be moved to a higher level since it can be used for non-gender-related things. Also I'd use UPPER_SNAKE_CASE.", "author": "jaycarlton", "createdAt": "2020-02-03T19:31:33Z", "path": "ui/src/app/pages/login/account-creation/account-creation-options.tsx", "diffHunk": "@@ -75,6 +76,14 @@ export const AccountCreationOptions = {\n     {label: `Not Hispanic or Latino`, value: Ethnicity.NOTHISPANIC},\n     {label: ` Prefer not to answer`, value: Ethnicity.PREFERNOANSWER}\n   ],\n+  gender: [\n+    {label: 'Man', value: Gender.MAN},\n+    {label: 'Non-Binary', value: Gender.NONBINARY},\n+    {label: 'Transgender', value: Gender.TRANSGENDER},\n+    {label: 'Woman', value: Gender.WOMAN},\n+    {label: 'None of these describe me', value: Gender.NONE},\n+    {label: 'Prefer not to answer', value: SexAtBirth.PREFERNOANSWER}", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NzMxOA==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374297318", "bodyText": "This confused me because gender is singular: I'd probably name this selfReportedGenders or something. Here and in other code.", "author": "jaycarlton", "createdAt": "2020-02-03T19:33:25Z", "path": "api/src/main/resources/workbench.yaml", "diffHunk": "@@ -3750,6 +3750,10 @@ definitions:\n         type: boolean\n       lgbtqIdentity:\n         type: string\n+      gender:", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5OTQ3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374299472", "bodyText": "I think we should consider making it a bad request if NONE or PREFER_NO_ANSWER aren't by themselves. The UI should probably enforce that as well.\nWe should definitely allow combining the others though.", "author": "jaycarlton", "createdAt": "2020-02-03T19:37:54Z", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -155,6 +155,9 @@ public DbDemographicSurvey apply(DemographicSurvey demographicSurvey) {\n               if (demographicSurvey.getDisability() != null)\n                 result.setDisabilityEnum(\n                     demographicSurvey.getDisability() ? Disability.TRUE : Disability.FALSE);\n+              if (demographicSurvey.getGender() != null) {\n+                result.setGenderEnum(demographicSurvey.getGender());", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczODgyNA==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374738824", "bodyText": "Since that logic is not just limited to gender we can have another PR/story to take care of it.", "author": "NehaBroad", "createdAt": "2020-02-04T15:25:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5OTQ3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5OTk5NQ==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374299995", "bodyText": "Yeah, I think only some of these are checkboxes (combinable) and some (at least \"none of these...\" should be by themselves.", "author": "jaycarlton", "createdAt": "2020-02-03T19:38:59Z", "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -186,6 +186,17 @@ or another sexual and/or gender minority?'>\n                             onChange={(value) => this.updateDemographicAttribute('lgbtqIdentity', value)}\n                             disabled={!demographicSurvey.identifiesAsLgbtq}/>\n       </Section>\n+\n+      {/*Gender Identity section*/}\n+      <Section header='Gender Identity'>\n+        <FlexColumn style={{...styles.checkboxAreaContainer, height: '5rem'}}>\n+          {AccountCreationOptions.gender.map((gender) => {\n+            return this.createOptionCheckbox(gender.label, 'gender',", "originalCommit": "388d1231d1fdd5ef6447221acee2acd534103be2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3baa491ba8a9c14e1c360ad7a566e8e11b899ad6", "url": "https://github.com/all-of-us/workbench/commit/3baa491ba8a9c14e1c360ad7a566e8e11b899ad6", "message": "Change gender to genderIdentity", "committedDate": "2020-02-04T04:05:25Z", "type": "commit"}, {"oid": "5f0bf15c365d2b652a9d6faaf98ad760fcd1c0c3", "url": "https://github.com/all-of-us/workbench/commit/5f0bf15c365d2b652a9d6faaf98ad760fcd1c0c3", "message": "spotless", "committedDate": "2020-02-04T04:11:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMTI3Ng==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374821276", "bodyText": "nit: can this be a set instead of a list?", "author": "jaycarlton", "createdAt": "2020-02-04T17:41:29Z", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +181,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender_identity\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender_identity\")\n+  public List<Short> getGenderIdentityList() {\n+    return genderIdentityList;\n+  }\n+\n+  public void setGenderIdentityList(List<Short> genderIdentityList) {", "originalCommit": "5f0bf15c365d2b652a9d6faaf98ad760fcd1c0c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyNTIzNw==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374825237", "bodyText": "Good point will change this to set", "author": "NehaBroad", "createdAt": "2020-02-04T17:49:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMTI3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyNjgwOQ==", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374826809", "bodyText": "However this will . be consistent with other elements will it be ok if i can have another PR to have it for all the elements (race ,sexAtbirth)?", "author": "NehaBroad", "createdAt": "2020-02-04T17:52:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMTI3Ng=="}], "type": "inlineReview"}, {"oid": "29dca079e0d057ba08a5ee377bc53bfa4fb4b228", "url": "https://github.com/all-of-us/workbench/commit/29dca079e0d057ba08a5ee377bc53bfa4fb4b228", "message": "rebase", "committedDate": "2020-02-04T17:56:53Z", "type": "commit"}]}