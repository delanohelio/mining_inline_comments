{"pr_number": 4358, "pr_title": "[no ticket][risk=no] Puppeteer: Upgrade all dependency libraries", "pr_createdAt": "2020-12-05T04:05:30Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4358", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjUwMTI2OA==", "url": "https://github.com/all-of-us/workbench/pull/4358#discussion_r536501268", "bodyText": "waitFor is deprecated in Puppeteer latest version.", "author": "aweng98", "createdAt": "2020-12-05T04:05:58Z", "path": "e2e/app/component/select-menu.ts", "diffHunk": "@@ -79,7 +79,7 @@ export default class SelectMenu extends Container {\n         return;\n       }\n       maxAttempts--;\n-      await this.page.waitFor(1000).then(click); // one second pause before try again\n+      await this.page.waitForTimeout(1000).then(click); // one second pause before try again", "originalCommit": "ee40fadbd6d420dd944b5831d9f968c1a236e1ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjUwMTgyMA==", "url": "https://github.com/all-of-us/workbench/pull/4358#discussion_r536501820", "bodyText": "new tslint version: async is not allowed in abstract method.", "author": "aweng98", "createdAt": "2020-12-05T04:06:40Z", "path": "e2e/app/page/authenticated-page.ts", "diffHunk": "@@ -25,7 +25,7 @@ export default abstract class AuthenticatedPage extends BasePage {\n    * Method to be implemented by children classes.\n    * Check whether current page has specified web elements.\n    */\n-  abstract async isLoaded(): Promise<boolean>\n+  abstract isLoaded(): Promise<boolean>", "originalCommit": "ee40fadbd6d420dd944b5831d9f968c1a236e1ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjUwNDEyNQ==", "url": "https://github.com/all-of-us/workbench/pull/4358#discussion_r536504125", "bodyText": "Handling case when state.currentlyRunningTest is null. Not sure why and how it happens.", "author": "aweng98", "createdAt": "2020-12-05T04:09:31Z", "path": "e2e/puppeteer-custom-environment.ts", "diffHunk": "@@ -31,12 +31,16 @@ class PuppeteerCustomEnvironment extends PuppeteerEnvironment {\n     switch (event.name) {\n       case 'test_fn_failure':\n       case 'hook_failure':\n-        const testParentName = state.currentlyRunningTest.parent.name.replace(/\\W/g, '-');\n-        const testName = state.currentlyRunningTest.name.replace(/\\W/g, '-');\n-        console.error(`Failed test:  \"${testParentName}/${testName}\"\\n${event.error}`);\n+        const runningTest = state.currentlyRunningTest;\n+        let testName;\n+        if (runningTest != null) {\n+          testName = state.currentlyRunningTest.name.replace(/\\W/g, '-');\n+        } else {\n+          testName = event.test.name.replace(/\\W/g, '-');\n+        }", "originalCommit": "ee40fadbd6d420dd944b5831d9f968c1a236e1ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2NTE4Mg==", "url": "https://github.com/all-of-us/workbench/pull/4358#discussion_r537765182", "bodyText": "nit: Was this an ad-hoc fix? Most other changes are method call renames, but this looks like a behavior change.", "author": "gjuggler", "createdAt": "2020-12-07T19:20:28Z", "path": "e2e/app/page/create-account-page.ts", "diffHunk": "@@ -108,6 +108,7 @@ export default class CreateAccountPage extends BasePage {\n     const iframe = await findIframe(this.page, 'terms of service agreement');\n     const bodyHandle = await iframe.$('body');\n     await iframe.evaluate(body =>  body.scrollTo(0, body.scrollHeight), bodyHandle);\n+    await this.page.waitForTimeout(1000);", "originalCommit": "ee40fadbd6d420dd944b5831d9f968c1a236e1ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyNTEzOQ==", "url": "https://github.com/all-of-us/workbench/pull/4358#discussion_r537825139", "bodyText": "yes it is. saw a flaky test failure caused by the radiobutton which is not enabled after scroll. we don't have ability to retry failed expect until true at this time, so this is just a dirty fix.", "author": "aweng98", "createdAt": "2020-12-07T20:53:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2NTE4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2NjU0MQ==", "url": "https://github.com/all-of-us/workbench/pull/4358#discussion_r537766541", "bodyText": "Does this impact where some output files get sent (e.g. to a single top-level folder instead of a test-specific subfolder)? Is that something that will impact normal result viewing or test iteration? I'm wondering if any docs need to change as a result.", "author": "gjuggler", "createdAt": "2020-12-07T19:22:37Z", "path": "e2e/puppeteer-custom-environment.ts", "diffHunk": "@@ -31,12 +31,16 @@ class PuppeteerCustomEnvironment extends PuppeteerEnvironment {\n     switch (event.name) {\n       case 'test_fn_failure':\n       case 'hook_failure':\n-        const testParentName = state.currentlyRunningTest.parent.name.replace(/\\W/g, '-');\n-        const testName = state.currentlyRunningTest.name.replace(/\\W/g, '-');\n-        console.error(`Failed test:  \"${testParentName}/${testName}\"\\n${event.error}`);\n+        const runningTest = state.currentlyRunningTest;\n+        let testName;\n+        if (runningTest != null) {\n+          testName = state.currentlyRunningTest.name.replace(/\\W/g, '-');\n+        } else {\n+          testName = event.test.name.replace(/\\W/g, '-');\n+        }\n \n-        const screenshotDir = `logs/screenshot/${testParentName}`;\n-        const htmlDir = `logs/html/${testParentName}`;\n+        const screenshotDir = `logs/screenshot`;", "originalCommit": "ee40fadbd6d420dd944b5831d9f968c1a236e1ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzMTE2MA==", "url": "https://github.com/all-of-us/workbench/pull/4358#discussion_r537831160", "bodyText": "yes, all test html/screenshots files save in same log folder.  It shouldn't affect anything else. testParentName is null on rare occasions and tests can fail if it is null. it's very annoying. No doc update for this change.", "author": "aweng98", "createdAt": "2020-12-07T21:03:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2NjU0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2Njk2OQ==", "url": "https://github.com/all-of-us/workbench/pull/4358#discussion_r537766969", "bodyText": "Can you comment on your methodology for making these upgrades? If it's a regular maintenance activity, it may be worth lightly documenting the process somewhere in the readme.", "author": "gjuggler", "createdAt": "2020-12-07T19:23:26Z", "path": "e2e/package.json", "diffHunk": "@@ -38,31 +38,31 @@\n   },\n   \"dependencies\": {},\n   \"devDependencies\": {\n-    \"@types/expect-puppeteer\": \"^4.4.1\",", "originalCommit": "ee40fadbd6d420dd944b5831d9f968c1a236e1ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyODE1MA==", "url": "https://github.com/all-of-us/workbench/pull/4358#discussion_r537828150", "bodyText": "Use exact version (without ^) is because I wanted to have same version when each time yarn install happens. this can avoid unexpected surprises/failures due to diff. version of lib.\nI did this because I thought it has been a while since the last upgrade, it's not a regularly scheduled activity.", "author": "aweng98", "createdAt": "2020-12-07T20:58:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2Njk2OQ=="}], "type": "inlineReview"}, {"oid": "ffa81e00f261daa991c4d514a93a01128349e075", "url": "https://github.com/all-of-us/workbench/commit/ffa81e00f261daa991c4d514a93a01128349e075", "message": "upgrade all lib dependencies", "committedDate": "2020-12-08T13:42:03Z", "type": "commit"}, {"oid": "1d91dc94ea2ad250cf762e1c9980a54adfac43c9", "url": "https://github.com/all-of-us/workbench/commit/1d91dc94ea2ad250cf762e1c9980a54adfac43c9", "message": "revert unrelated changes", "committedDate": "2020-12-08T13:42:21Z", "type": "commit"}, {"oid": "c7332529d3bad7f390874d6bf456c8a5d32c34f3", "url": "https://github.com/all-of-us/workbench/commit/c7332529d3bad7f390874d6bf456c8a5d32c34f3", "message": "rebase master", "committedDate": "2020-12-08T14:06:42Z", "type": "commit"}, {"oid": "c7332529d3bad7f390874d6bf456c8a5d32c34f3", "url": "https://github.com/all-of-us/workbench/commit/c7332529d3bad7f390874d6bf456c8a5d32c34f3", "message": "rebase master", "committedDate": "2020-12-08T14:06:42Z", "type": "forcePushed"}, {"oid": "d7e3e6b3a26d000926ae98a908d409ea734beeb9", "url": "https://github.com/all-of-us/workbench/commit/d7e3e6b3a26d000926ae98a908d409ea734beeb9", "message": "small fix", "committedDate": "2020-12-08T14:19:18Z", "type": "commit"}]}