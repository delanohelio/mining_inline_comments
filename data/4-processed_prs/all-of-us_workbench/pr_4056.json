{"pr_number": 4056, "pr_title": "[RW-5466][risk=no] Add versions to COPE survey attributes", "pr_createdAt": "2020-09-24T04:16:38Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4056", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxNjIzNA==", "url": "https://github.com/all-of-us/workbench/pull/4056#discussion_r494416234", "bodyText": "nit: We can get rid of else if have, form.anyValue = checked", "author": "NehaBroad", "createdAt": "2020-09-24T15:34:40Z", "path": "ui/src/app/cohort-search/attributes-page-v2/attributes-page-v2.component.tsx", "diffHunk": "@@ -258,21 +339,30 @@ export const AttributesPageV2 = fp.flow(withCurrentWorkspace(), withCurrentCohor\n       });\n     }\n \n-    toggleCheckbox(checked: boolean) {\n+    toggleAnyValueCheckbox(checked: boolean) {\n       const {form} = this.state;\n       let {node: {count}} = this.props;\n       if (checked) {\n-        form.exists = true;\n+        form.anyValue = true;\n         form.num = form.num.map(attr =>\n           ({...attr, operator: this.isPhysicalMeasurement ? 'ANY' : null, operands: []}));\n         form.cat = form.cat.map(attr => ({...attr, checked: false}));\n       } else {\n+        form.anyValue = false;", "originalCommit": "31f22ec13ae788436b34f6bae2195b79388bb184", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU1MTA5OA==", "url": "https://github.com/all-of-us/workbench/pull/4056#discussion_r494551098", "bodyText": "Good point, fixed.", "author": "dolbeew", "createdAt": "2020-09-24T19:10:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxNjIzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxODkxNg==", "url": "https://github.com/all-of-us/workbench/pull/4056#discussion_r494418916", "bodyText": "!isCOPESurvey  will always be true", "author": "NehaBroad", "createdAt": "2020-09-24T15:38:22Z", "path": "ui/src/app/cohort-search/attributes-page-v2/attributes-page-v2.component.tsx", "diffHunk": "@@ -522,18 +614,102 @@ export const AttributesPageV2 = fp.flow(withCurrentWorkspace(), withCurrentCohor\n       return this.isMeasurement || this.isSurvey;\n     }\n \n+    renderNumericalAttributes() {\n+      const {node: {count, subtype}} = this.props;\n+      const {form, isCOPESurvey, options} = this.state;\n+      return form.num.length > 0 && <React.Fragment>\n+        {this.isMeasurement && <div style={styles.label}>Numeric Values</div>}\n+        {isCOPESurvey && <div>\n+          <CheckBox onChange={(v) => this.toggleAnyValueCheckbox(v)}/> Any value\n+          {count > -1 && <span style={styles.badge}> {count.toLocaleString()}</span>}\n+        </div>}\n+        {!(isCOPESurvey && form.anyValue) && form.num.map((attr, a) => <div key={a}>\n+          {this.isBloodPressure && <div style={styles.label}>{attr.name}</div>}\n+          {isCOPESurvey && <div style={styles.orCircle}>OR</div>}\n+          <Dropdown style={{marginBottom: '0.5rem', width: '100%'}}\n+                    value={attr.operator}\n+                    options={options}\n+                    placeholder='Select Operator'\n+                    onChange={(e) => this.selectChange(a, e.value)}/>\n+          <FlexRowWrap>\n+            {![null, 'ANY'].includes(attr.operator) && <div style={{width: '33%'}}>\n+              <NumberInput style={{padding: '0 0.25rem', ...(this.hasUnits ? {width: '70%'} : {})}}\n+                           value={attr.operands[0] || ''}\n+                           min={attr.MIN} max={attr.MAX}\n+                           onChange={(v) => this.inputChange(v, a, 0)}/>\n+              {this.hasUnits && <span> {PM_UNITS[subtype]}</span>}\n+            </div>}\n+            {attr.operator === Operator.BETWEEN && <React.Fragment>\n+              <div style={{padding: '0.2rem 1.5rem 0 1rem'}}>and</div>\n+              <div style={{width: '33%'}}>\n+                <NumberInput style={{padding: '0 0.25rem', ...(this.hasUnits ? {width: '70%'} : {})}}\n+                             value={attr.operands[1] || ''}\n+                             min={attr.MIN} max={attr.MAX}\n+                             onChange={(v) => this.inputChange(v, a, 1)}/>\n+                {this.hasUnits && <span> {PM_UNITS[subtype]}</span>}\n+              </div>\n+            </React.Fragment>}\n+          </FlexRowWrap>\n+          {this.hasRange && ![null, 'ANY'].includes(attr.operator) && <div style={{paddingTop: '0.2rem'}}>\n+            Range: {attr.MIN.toLocaleString()} - {attr.MAX.toLocaleString()}\n+          </div>}\n+        </div>)}\n+      </React.Fragment>;\n+    }\n+\n+    renderCategoricalAttributes() {\n+      const {node: {count}} = this.props;\n+      const {form, isCOPESurvey} = this.state;\n+      return form.cat.length > 0 && <React.Fragment>\n+        {isCOPESurvey && <div>\n+          <CheckBox onChange={(v) => this.toggleAnyVersionCheckbox(v)}/> Any version\n+          {count > -1 && <span style={styles.badge}>{count.toLocaleString()}</span>}\n+        </div>}\n+        {!(isCOPESurvey && form.anyVersion) && <React.Fragment>\n+          <div style={styles.orCircle}>OR</div>\n+          {!isCOPESurvey && <div style={styles.label}>Categorical Values</div>}", "originalCommit": "31f22ec13ae788436b34f6bae2195b79388bb184", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxOTM1OA==", "url": "https://github.com/all-of-us/workbench/pull/4056#discussion_r494419358", "bodyText": "My bad i just notice the ! in front of &&", "author": "NehaBroad", "createdAt": "2020-09-24T15:39:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxODkxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU1MzE5OA==", "url": "https://github.com/all-of-us/workbench/pull/4056#discussion_r494553198", "bodyText": "Yeah, sorry this component was already confusing with all the conditions for different domains, and adding new conditions for COPE has made it worse. We should come back after COPE is done and do some cleanup and refactoring..", "author": "dolbeew", "createdAt": "2020-09-24T19:14:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxODkxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQyMDA2Nw==", "url": "https://github.com/all-of-us/workbench/pull/4056#discussion_r494420067", "bodyText": "Can you move this to a method just so its easier to read?", "author": "NehaBroad", "createdAt": "2020-09-24T15:39:58Z", "path": "ui/src/app/cohort-search/attributes-page-v2/attributes-page-v2.component.tsx", "diffHunk": "@@ -522,18 +614,102 @@ export const AttributesPageV2 = fp.flow(withCurrentWorkspace(), withCurrentCohor\n       return this.isMeasurement || this.isSurvey;\n     }\n \n+    renderNumericalAttributes() {\n+      const {node: {count, subtype}} = this.props;\n+      const {form, isCOPESurvey, options} = this.state;\n+      return form.num.length > 0 && <React.Fragment>\n+        {this.isMeasurement && <div style={styles.label}>Numeric Values</div>}\n+        {isCOPESurvey && <div>\n+          <CheckBox onChange={(v) => this.toggleAnyValueCheckbox(v)}/> Any value\n+          {count > -1 && <span style={styles.badge}> {count.toLocaleString()}</span>}\n+        </div>}\n+        {!(isCOPESurvey && form.anyValue) && form.num.map((attr, a) => <div key={a}>\n+          {this.isBloodPressure && <div style={styles.label}>{attr.name}</div>}\n+          {isCOPESurvey && <div style={styles.orCircle}>OR</div>}\n+          <Dropdown style={{marginBottom: '0.5rem', width: '100%'}}\n+                    value={attr.operator}\n+                    options={options}\n+                    placeholder='Select Operator'\n+                    onChange={(e) => this.selectChange(a, e.value)}/>\n+          <FlexRowWrap>\n+            {![null, 'ANY'].includes(attr.operator) && <div style={{width: '33%'}}>\n+              <NumberInput style={{padding: '0 0.25rem', ...(this.hasUnits ? {width: '70%'} : {})}}\n+                           value={attr.operands[0] || ''}\n+                           min={attr.MIN} max={attr.MAX}\n+                           onChange={(v) => this.inputChange(v, a, 0)}/>\n+              {this.hasUnits && <span> {PM_UNITS[subtype]}</span>}\n+            </div>}\n+            {attr.operator === Operator.BETWEEN && <React.Fragment>\n+              <div style={{padding: '0.2rem 1.5rem 0 1rem'}}>and</div>\n+              <div style={{width: '33%'}}>\n+                <NumberInput style={{padding: '0 0.25rem', ...(this.hasUnits ? {width: '70%'} : {})}}\n+                             value={attr.operands[1] || ''}\n+                             min={attr.MIN} max={attr.MAX}\n+                             onChange={(v) => this.inputChange(v, a, 1)}/>\n+                {this.hasUnits && <span> {PM_UNITS[subtype]}</span>}\n+              </div>\n+            </React.Fragment>}\n+          </FlexRowWrap>\n+          {this.hasRange && ![null, 'ANY'].includes(attr.operator) && <div style={{paddingTop: '0.2rem'}}>\n+            Range: {attr.MIN.toLocaleString()} - {attr.MAX.toLocaleString()}\n+          </div>}\n+        </div>)}\n+      </React.Fragment>;\n+    }\n+\n+    renderCategoricalAttributes() {\n+      const {node: {count}} = this.props;\n+      const {form, isCOPESurvey} = this.state;\n+      return form.cat.length > 0 && <React.Fragment>\n+        {isCOPESurvey && <div>\n+          <CheckBox onChange={(v) => this.toggleAnyVersionCheckbox(v)}/> Any version\n+          {count > -1 && <span style={styles.badge}>{count.toLocaleString()}</span>}\n+        </div>}\n+        {!(isCOPESurvey && form.anyVersion) && <React.Fragment>\n+          <div style={styles.orCircle}>OR</div>\n+          {!isCOPESurvey && <div style={styles.label}>Categorical Values</div>}\n+          {form.cat.map((attr, a) => <div key={a} style={styles.categorical}>\n+            <CheckBox checked={attr.checked} style={{marginRight: '3px'}}\n+                      onChange={(v) => this.checkboxChange(v, a)}/>\n+            {attr.conceptName}\n+            <span style={styles.badge}>{parseInt(attr.estCount, 10).toLocaleString()}</span>\n+          </div>)}\n+        </React.Fragment>}\n+      </React.Fragment>;\n+    }\n+\n     render() {\n       const {close, node: {domainId, name, parentId, subtype}} = this.props;\n-      const {calculating, count, countError, form, loading, options} = this.state;\n+      const {calculating, count, countError, form, isCOPESurvey, loading} = this.state;\n       const {formErrors, formValid} = this.validateForm();\n       const disableAdd = calculating || !formValid;\n-      const disableCalculate = disableAdd || form.exists || form.num.every(attr => attr.operator === 'ANY');\n+      const disableCalculate = disableAdd\n+        || (form.anyValue && count !== null)", "originalCommit": "31f22ec13ae788436b34f6bae2195b79388bb184", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3NzY1OQ==", "url": "https://github.com/all-of-us/workbench/pull/4056#discussion_r494577659", "bodyText": "Done. I also did a small refactor to move formErrors and formValid into state.", "author": "dolbeew", "createdAt": "2020-09-24T20:01:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQyMDA2Nw=="}], "type": "inlineReview"}, {"oid": "5e578a1f9554967102aff83add86f6ed8a90dfd0", "url": "https://github.com/all-of-us/workbench/commit/5e578a1f9554967102aff83add86f6ed8a90dfd0", "message": "RW-5466 get cope survey versions for attributes page", "committedDate": "2020-09-29T16:30:10Z", "type": "commit"}, {"oid": "ca77b15ce5ab19d4da4cb5e04de9d1c26600768b", "url": "https://github.com/all-of-us/workbench/commit/ca77b15ce5ab19d4da4cb5e04de9d1c26600768b", "message": "RW-5466 add call for cope survey answers", "committedDate": "2020-09-29T16:30:10Z", "type": "commit"}, {"oid": "c381e964e7b697f4ad498d898eefc31a8dbd3c0a", "url": "https://github.com/all-of-us/workbench/commit/c381e964e7b697f4ad498d898eefc31a8dbd3c0a", "message": "RW-5466 add call for numerical attributes", "committedDate": "2020-09-29T16:30:10Z", "type": "commit"}, {"oid": "10971527308cc7de16d272d04c33523d0634f37a", "url": "https://github.com/all-of-us/workbench/commit/10971527308cc7de16d272d04c33523d0634f37a", "message": "RW-5466 add cope boolean to state", "committedDate": "2020-09-29T16:30:10Z", "type": "commit"}, {"oid": "a6e521bbd5ef81f676811617a50788c6bb4ba791", "url": "https://github.com/all-of-us/workbench/commit/a6e521bbd5ef81f676811617a50788c6bb4ba791", "message": "RW-5466 update template for cope attributes", "committedDate": "2020-09-29T16:30:11Z", "type": "commit"}, {"oid": "f2ab9ea7d5479d8cb3d2adc9034479979a5ef485", "url": "https://github.com/all-of-us/workbench/commit/f2ab9ea7d5479d8cb3d2adc9034479979a5ef485", "message": "RW-5466 update request for answer attributes", "committedDate": "2020-09-29T16:30:11Z", "type": "commit"}, {"oid": "07cd98b0b82c3d60b45bc059ac1e6e56d9cab7f1", "url": "https://github.com/all-of-us/workbench/commit/07cd98b0b82c3d60b45bc059ac1e6e56d9cab7f1", "message": "RW-5466 update COPE attribute form layout", "committedDate": "2020-09-29T16:33:32Z", "type": "commit"}, {"oid": "b630a49dd5882b85859815d7fcbc9183e80b471e", "url": "https://github.com/all-of-us/workbench/commit/b630a49dd5882b85859815d7fcbc9183e80b471e", "message": "RW-5466 update layout for COPE attributes", "committedDate": "2020-09-29T16:33:32Z", "type": "commit"}, {"oid": "8a9fb304004ab9bca30c9b0baa233eaf8a7cc839", "url": "https://github.com/all-of-us/workbench/commit/8a9fb304004ab9bca30c9b0baa233eaf8a7cc839", "message": "RW-5466 fix form validation for COPE attributes", "committedDate": "2020-09-29T16:33:32Z", "type": "commit"}, {"oid": "05907741746342a0b5ad45d1b5dd49b69a4408b9", "url": "https://github.com/all-of-us/workbench/commit/05907741746342a0b5ad45d1b5dd49b69a4408b9", "message": "RW-5466 remove mocked data", "committedDate": "2020-09-29T16:33:32Z", "type": "commit"}, {"oid": "d21df631003b66de953e6359e725f4949bc88aff", "url": "https://github.com/all-of-us/workbench/commit/d21df631003b66de953e6359e725f4949bc88aff", "message": "RW-5466 pr feedback", "committedDate": "2020-09-29T16:35:44Z", "type": "commit"}, {"oid": "d21df631003b66de953e6359e725f4949bc88aff", "url": "https://github.com/all-of-us/workbench/commit/d21df631003b66de953e6359e725f4949bc88aff", "message": "RW-5466 pr feedback", "committedDate": "2020-09-29T16:35:44Z", "type": "forcePushed"}, {"oid": "b231966f7ce11bf7662aad9978e79cfa6d933358", "url": "https://github.com/all-of-us/workbench/commit/b231966f7ce11bf7662aad9978e79cfa6d933358", "message": "RW-5466 fix switch between survey attribute types", "committedDate": "2020-09-29T17:26:02Z", "type": "commit"}]}