{"pr_number": 3494, "pr_title": "[no ticket][risk=no] Fix cache key regression in circleci config", "pr_createdAt": "2020-04-28T15:34:43Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3494", "timeline": [{"oid": "b3353642508acf92c4a47bf483b1ab9f894fe8c5", "url": "https://github.com/all-of-us/workbench/commit/b3353642508acf92c4a47bf483b1ab9f894fe8c5", "message": "try mediumPlus image\n\nmediumPlus image Java default\n\nstore test results\n\nui cache key fix\n\nremove integration test compile task\n\nset maxParallelForks\n\nreset build.gradle\n\nrestore puppeteer test env\n\nrestore puppeteer test env\n\nls dir\n\nsplit\n\nsplit\n\nbreakdown api cache\n\nsplit long job\n\nsplit long job\n\ncomment", "committedDate": "2020-04-28T21:48:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgxNjc4NQ==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r416816785", "bodyText": "Bug:\nI'm removing version parameter because it cannot be used in key_prefix. Looks like CircleCI parameter cannot read another parameter inside of parameters.  bummer. hardcode version to fix missing ver in cache key. It was caused by my change in last PR.\nFound a cache from build 80002 at -yarn-ui-cache-mAOJNBZFMOhNHBksNOYQ6ZSyn7e_7p2WLYtSVd_QyAU=-master", "author": "aweng98", "createdAt": "2020-04-28T18:03:40Z", "path": ".circleci/config.yml", "diffHunk": "@@ -116,11 +117,9 @@ commands:\n   install_ui_dependencies:\n     description: \"workbench/ui: yarn install, save and restore cache\"\n     parameters:\n-      version:\n-        type: string\n       key_prefix:\n         type: string\n-        default: << parameters.version >>-yarn-ui-cache-{{ checksum \"~/workbench/ui/yarn.lock\" }}\n+        default: v1-yarn-ui-cache-{{ checksum \"~/workbench/ui/yarn.lock\" }}", "originalCommit": "d2a0f727f3041a42f654f76b312132edd3d3080c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwNDg2Nw==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417004867", "bodyText": "I missed this on the previous review - checksum should not be in the key prefix. It should be the suffix. The restore backup keys don't make sense with this model. Here is how it was supposed to work:\nrestore_cache:\n  keys:\n    - v1-api-cache-{checksum} # Restore from exact match\n    - v1-api-cache- # Restore from any recent cached version, as a backup\n\nIf you want to incorporate the branch into the cache key, the branch name should come before the checksum, like:\nv1-api-cache-{branch}-{checksum}\nv1-api-cache-{branch}\nv1-api-cache-master", "author": "calbach", "createdAt": "2020-04-29T00:31:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgxNjc4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0NDc0NA==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417444744", "bodyText": "I didn't know \ud83d\udc4d ui, api and e2e cache keys are updated to new syntax. I hope I got them right this time.", "author": "aweng98", "createdAt": "2020-04-29T16:22:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgxNjc4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgxODczNA==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r416818734", "bodyText": "I don't know how useful this is because I don't investigate Unit test failures, but saving all test results (passed and failed) seems like the right thing to do. https://app.circleci.com/pipelines/github/all-of-us/workbench/549/workflows/37051538-dd65-4ae1-a2f2-4865019062e4/jobs/80126/artifacts", "author": "aweng98", "createdAt": "2020-04-28T18:06:50Z", "path": ".circleci/config.yml", "diffHunk": "@@ -245,6 +238,18 @@ jobs:\n           name: Java linting\n           working_directory: ~/workbench/api\n           command: ./gradlew spotlessCheck\n+      - run:\n+          name: Collecting test results\n+          command: |\n+            mkdir -p ~/workbench/api/test-results/\n+            find . -type f -regex \".*/build/test-results/.*xml\" -exec cp {} ~/workbench/api/test-results/ \\;\n+          when: always\n+      - store_test_results:\n+          path: ~/workbench/api/test-results\n+          when: always\n+      - store_artifacts:\n+          path: ~/workbench/api/test-results\n+          destination: test-results", "originalCommit": "d2a0f727f3041a42f654f76b312132edd3d3080c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1MTQxMA==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r416951410", "bodyText": "I don't think reducing memory size for Gradle is the right approach. Gradle needs decent size of memory to be \"happy\" and \"fast\". Reducing it is not what we should do. Instead, use a larger container medium+ (default was medium) and assign gradle a larger memory size. So far, all my testing, I have not had an issue with OOM anymore.", "author": "aweng98", "createdAt": "2020-04-28T22:03:36Z", "path": ".circleci/config.yml", "diffHunk": "@@ -19,16 +19,21 @@ anchors:\n \n   java_defaults: &java_defaults\n     <<: *defaults\n+    resource_class: medium+\n     environment:\n       # As best I can tell (dmohs, 7 Feb '17), this is the only way to set a memory limit that Java\n       # processes executed within CircleCI's docker containers will respect. Very helpful resource:\n       # https://circleci.com/blog/how-to-handle-java-oom-errors/\n       #\n       # In Feb 2017, this was set to 3G. But in Feb 2019 (RW-2194) we started seeing OOM errors,\n       # so we bumped this down further to 2G.\n-      JAVA_TOOL_OPTIONS: -Xmx2g\n+      # JAVA_TOOL_OPTIONS: -Xmx2g", "originalCommit": "432bfcacb132a8c641059753aaef194c915f6e2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwMjE3Ng==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417002176", "bodyText": "The counter argument is that we should not need a large (and more expensive) machine to run our unit tests. Have you experimented with changing the resource class independent of the other changes you've made here? If this one difference gets us from 15m -> 6m, great. If it has no effect on latency, then leaving it at the default seems preferred.\nPlease update the comment here and remove commented out code.", "author": "calbach", "createdAt": "2020-04-29T00:23:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1MTQxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU5NzYxNA==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417597614", "bodyText": "I don't know. I need do more testing to find out effects of changing the resource class independent of other changes.", "author": "aweng98", "createdAt": "2020-04-29T20:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1MTQxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1MTgzNg==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r416951836", "bodyText": "Bug:\nStill need this way to get env. variables to work. :(", "author": "aweng98", "createdAt": "2020-04-28T22:04:33Z", "path": ".circleci/config.yml", "diffHunk": "@@ -167,47 +166,52 @@ commands:\n           key: << parameters.key_prefix >>-{{ .Branch }}\n \n   manage_api_cache:\n-    description: \"workbench/api: save, restore or save_and_restore gradle cache\"\n+    description: \"workbench/api: save or restore gradle cache\"\n     parameters:\n       save:\n         type: boolean\n         default: false\n       restore:\n         type: boolean\n         default: false\n-      key_prefix:\n-        type: string\n-        default: v1-api-cache-{{ checksum \"~/workbench/api/build.gradle\" }}\n     steps:\n       - when:\n           condition: << parameters.save >>\n           steps:\n+            # splitting into multiple distinct caches. Refers to https://circleci.com/docs/2.0/caching/#cache-size\n             - save_cache:\n                 paths:\n-                  - ~/.gradle/caches\n                   - ~/.gradle/wrapper\n-                  - ~/.m2\n-                  - ~/workbench/api/build/exploded-api/WEB-INF/lib/\n-                key: << parameters.key_prefix >>-{{ .Branch }}\n+                key: v1-gradle-wrapper-{{ checksum \"~/workbench/api/gradle/wrapper/gradle-wrapper.properties\" }}-{{ .Branch }}\n+            - save_cache:\n+                paths:\n+                  - ~/.gradle/caches\n+                key: v1-gradle-cache-{{ checksum \"~/workbench/api/build.gradle\" }}-{{ .Branch }}\n       - when:\n           condition: << parameters.restore >>\n           steps:\n             - restore_cache:\n                 keys:\n-                  - << parameters.key_prefix >>-{{ .Branch }}\n-                  - << parameters.key_prefix >>-master\n-                  - << parameters.key_prefix >>\n+                  - v1-gradle-wrapper-{{ checksum \"~/workbench/api/gradle/wrapper/gradle-wrapper.properties\" }}-{{ .Branch }}\n+                  - v1-gradle-wrapper-{{ checksum \"~/workbench/api/gradle/wrapper/gradle-wrapper.properties\" }}-master\n+            - restore_cache:\n+                keys:\n+                  - v1-gradle-cache-{{ checksum \"~/workbench/api/build.gradle\" }}-{{ .Branch }}\n+                  - v1-gradle-cache-{{ checksum \"~/workbench/api/build.gradle\" }}-master\n \n   run_e2e_test:\n     description: \"Run puppeteer e2e integration tests\"\n     steps:\n+      - run:\n+          name: Update Puppeteer test environment variables\n+          command: |\n+            echo 'export USER_NAME=$PUPPETEER_TEST_USER' >> $BASH_ENV\n+            echo 'export PASSWORD=$PUPPETEER_TEST_USER_PASSWORD' >> $BASH_ENV\n+            echo 'export INVITATION_KEY=$PUPPETEER_TEST_REGISTRATION_KEY' >> $BASH_ENV\n+            source $BASH_ENV", "originalCommit": "432bfcacb132a8c641059753aaef194c915f6e2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE1ODE1Ng==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r418158156", "bodyText": "I looked into this on one of your other PRs, and it seemed like the nicer syntax won't work in your situation. I can't remember details though.", "author": "jaycarlton", "createdAt": "2020-04-30T17:04:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1MTgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE5MjQxNA==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r418192414", "bodyText": "Thank you, your help and review is greatly appreciated.", "author": "aweng98", "createdAt": "2020-04-30T18:02:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1MTgzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1NjQxNQ==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r416956415", "bodyText": "If checksum fails (which never happens), then new cache is created and will be stored. Don't use this fall back, clutter code.", "author": "aweng98", "createdAt": "2020-04-28T22:14:42Z", "path": ".circleci/config.yml", "diffHunk": "@@ -131,7 +134,6 @@ commands:\n             # If that fails, then check for the latest from any branch\n             - << parameters.key_prefix >>-{{ .Branch }}\n             - << parameters.key_prefix >>-master\n-            - << parameters.key_prefix >>", "originalCommit": "c93821b31ccbc006f410df5a0566745fb9861c28", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1Njg5NQ==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r416956895", "bodyText": "I am not sure either dir existed to have anything to cache. Am I wrong?", "author": "aweng98", "createdAt": "2020-04-28T22:15:53Z", "path": ".circleci/config.yml", "diffHunk": "@@ -167,47 +166,52 @@ commands:\n           key: << parameters.key_prefix >>-{{ .Branch }}\n \n   manage_api_cache:\n-    description: \"workbench/api: save, restore or save_and_restore gradle cache\"\n+    description: \"workbench/api: save or restore gradle cache\"\n     parameters:\n       save:\n         type: boolean\n         default: false\n       restore:\n         type: boolean\n         default: false\n-      key_prefix:\n-        type: string\n-        default: v1-api-cache-{{ checksum \"~/workbench/api/build.gradle\" }}\n     steps:\n       - when:\n           condition: << parameters.save >>\n           steps:\n+            # splitting into multiple distinct caches. Refers to https://circleci.com/docs/2.0/caching/#cache-size\n             - save_cache:\n                 paths:\n-                  - ~/.gradle/caches\n                   - ~/.gradle/wrapper\n-                  - ~/.m2\n-                  - ~/workbench/api/build/exploded-api/WEB-INF/lib/", "originalCommit": "c93821b31ccbc006f410df5a0566745fb9861c28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwNjA0Mg==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417006042", "bodyText": "The deployment job puts stuff in exploded-api\n~/.m2 may contain maven caches, but unsure\nYou should be able SSH into a circle job and check to confirm", "author": "calbach", "createdAt": "2020-04-29T00:34:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1Njg5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ1MTQwMQ==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417451401", "bodyText": "ah, I didn't know that. When I was testing api-build-test changes, I printed out ~/workbench and ~/workbench/api directories, I didn't find either .m2 or build directories. However I didn't run any *-deploy-* job before because I don't want anything deploys. so if these two dirs are tight to deploy jobs only, I think it's best to create a separate cache key for deploy jobs. I created manage_maven_cache for use in *-deploy-* jobs", "author": "aweng98", "createdAt": "2020-04-29T16:32:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1Njg5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1NzU2Nw==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r416957567", "bodyText": "If I don't specify worker.max, it defaults to number of cpu. I don't want that.", "author": "aweng98", "createdAt": "2020-04-28T22:17:24Z", "path": ".circleci/config.yml", "diffHunk": "@@ -19,16 +19,21 @@ anchors:\n \n   java_defaults: &java_defaults\n     <<: *defaults\n+    resource_class: medium+\n     environment:\n       # As best I can tell (dmohs, 7 Feb '17), this is the only way to set a memory limit that Java\n       # processes executed within CircleCI's docker containers will respect. Very helpful resource:\n       # https://circleci.com/blog/how-to-handle-java-oom-errors/\n       #\n       # In Feb 2017, this was set to 3G. But in Feb 2019 (RW-2194) we started seeing OOM errors,\n       # so we bumped this down further to 2G.\n-      JAVA_TOOL_OPTIONS: -Xmx2g\n+      # JAVA_TOOL_OPTIONS: -Xmx2g\n+\n+      # Configure the JVM and Gradle: give it a bigger memory to avoid OOM errors\n+      # https://circleci.com/docs/2.0/java-oom/#using-java-environment-variables-to-set-memory-limits\n+      _JAVA_OPTIONS: \"-Xmx3g\"\n       # https://docs.gradle.org/6.3/userguide/gradle_daemon.html#sec:disabling_the_daemon\n-      GRADLE_OPTS: \"-Dorg.gradle.daemon=false\"\n+      GRADLE_OPTS: \"-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2\"", "originalCommit": "c93821b31ccbc006f410df5a0566745fb9861c28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwMzAxNw==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417003017", "bodyText": "Why not? Also please add a comment for why 2 was chosen into the code", "author": "calbach", "createdAt": "2020-04-29T00:25:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1NzU2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1ODM2NQ==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r416958365", "bodyText": "I splitted one cache into two separate caches. See url for reason.", "author": "aweng98", "createdAt": "2020-04-28T22:19:22Z", "path": ".circleci/config.yml", "diffHunk": "@@ -167,47 +166,52 @@ commands:\n           key: << parameters.key_prefix >>-{{ .Branch }}\n \n   manage_api_cache:\n-    description: \"workbench/api: save, restore or save_and_restore gradle cache\"\n+    description: \"workbench/api: save or restore gradle cache\"\n     parameters:\n       save:\n         type: boolean\n         default: false\n       restore:\n         type: boolean\n         default: false\n-      key_prefix:\n-        type: string\n-        default: v1-api-cache-{{ checksum \"~/workbench/api/build.gradle\" }}\n     steps:\n       - when:\n           condition: << parameters.save >>\n           steps:\n+            # splitting into multiple distinct caches. Refers to https://circleci.com/docs/2.0/caching/#cache-size", "originalCommit": "c93821b31ccbc006f410df5a0566745fb9861c28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwNTYzMg==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417005632", "bodyText": "What is the size of the cache? Are we actually nearing 500MB?", "author": "calbach", "createdAt": "2020-04-29T00:33:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1ODM2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0NjAxNw==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417446017", "bodyText": "For ui cache, size was 335MB.\n\ncache sizes for e2e and api are smaller than 300MB.\nI think breaking down api cache is beneficial. For example, either /gradle/gradle-wrapper.properties or build.gradle file could be changed independently. Relying on checksum build.gradle alone can give us a wrong cache. It'll be hard to debug issue related to cache. Do you think that's a right reason?", "author": "aweng98", "createdAt": "2020-04-29T16:24:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1ODM2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE2Mzk3OA==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r418163978", "bodyText": "The cache is best effort. In theory all jobs should succeed regardless of whether they had received an ideal or even relevant cache. gradle wapper properties very rarely changes, so I would probably favor the simplicity of the previous singular cache approach. If we do get stuck with a cache issue, incrementing from \"v1\" is a nice manual out to have available that you've added.", "author": "calbach", "createdAt": "2020-04-30T17:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1ODM2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE4MzIzMg==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r418183232", "bodyText": "I'm all for simplicity. Recombined gradle and wrapper caches.", "author": "aweng98", "createdAt": "2020-04-30T17:46:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1ODM2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwNzE5Ng==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417007196", "bodyText": "This is not correct. api is one subdirectory of many that contain unit tests\nI would change this to pushd src/test, then popd later", "author": "calbach", "createdAt": "2020-04-29T00:38:27Z", "path": ".circleci/config.yml", "diffHunk": "@@ -222,26 +226,51 @@ commands:\n jobs:\n   api-build-test:\n     <<: *java_defaults\n+    parallelism: 3\n     steps:\n       - checkout_init_git\n       - ensure_branch_has_changes:\n           dir_name: \"api\"\n       - manage_api_cache:\n           restore: true\n       - run:\n-          name: Validate Swagger definitions\n+          name: Run Java unit tests\n           working_directory: ~/workbench/api\n-          command: ./project.rb validate-swagger --project-prop verboseTestLogging=yes\n+          # Refers to https://circleci.com/docs/2.0/language-java/#sample-configuration\n+          command: |\n+            cd ~/workbench/api/src/test/java/org/pmiops/workbench/api", "originalCommit": "c93821b31ccbc006f410df5a0566745fb9861c28", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwNzU1Mg==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417007552", "bodyText": "Can you add more to this comment? The shell script is pretty hairy and it's not clear what it's actually doing. Presumably it has something to do with parallelizing the tests", "author": "calbach", "createdAt": "2020-04-29T00:39:38Z", "path": ".circleci/config.yml", "diffHunk": "@@ -222,26 +226,51 @@ commands:\n jobs:\n   api-build-test:\n     <<: *java_defaults\n+    parallelism: 3\n     steps:\n       - checkout_init_git\n       - ensure_branch_has_changes:\n           dir_name: \"api\"\n       - manage_api_cache:\n           restore: true\n       - run:\n-          name: Validate Swagger definitions\n+          name: Run Java unit tests\n           working_directory: ~/workbench/api\n-          command: ./project.rb validate-swagger --project-prop verboseTestLogging=yes\n+          # Refers to https://circleci.com/docs/2.0/language-java/#sample-configuration", "originalCommit": "c93821b31ccbc006f410df5a0566745fb9861c28", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwODQxNA==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417008414", "bodyText": "I'd prefer that we move these steps back into the API test, then add a when: always to \" Run Java unit tests\". This fixes the ordering concerns that we had previously. Unless there are major latency tradeoffs here.", "author": "calbach", "createdAt": "2020-04-29T00:42:39Z", "path": ".circleci/config.yml", "diffHunk": "@@ -222,26 +226,51 @@ commands:\n jobs:\n   api-build-test:\n     <<: *java_defaults\n+    parallelism: 3\n     steps:\n       - checkout_init_git\n       - ensure_branch_has_changes:\n           dir_name: \"api\"\n       - manage_api_cache:\n           restore: true\n       - run:\n-          name: Validate Swagger definitions\n+          name: Run Java unit tests\n           working_directory: ~/workbench/api\n-          command: ./project.rb validate-swagger --project-prop verboseTestLogging=yes\n+          # Refers to https://circleci.com/docs/2.0/language-java/#sample-configuration\n+          command: |\n+            cd ~/workbench/api/src/test/java/org/pmiops/workbench/api\n+            CLASSNAMES=$(circleci tests glob \"**/*.java\" \\\n+              | cut -c 1- | sed 's@/@.@g' \\\n+              | sed 's/.\\{5\\}$//' \\\n+              | circleci tests split --split-by=timings --timings-type=classname)\n+            GRADLE_ARGS=$(echo $CLASSNAMES | awk '{for (i=1; i<=NF; i++) print \"--tests\",$i}')\n+            cd ~/workbench/api\n+            ./project.rb test $GRADLE_ARGS\n       - run:\n-          name: Integration tests compile\n-          working_directory: ~/workbench/api\n-          command: ./project.rb gradle compile__bigquerytest__Java compile__integration__Java\n+          name: Collecting test results\n+          command: |\n+            mkdir -p ~/workbench/api/test-results/\n+            find . -type f -regex \".*/build/test-results/.*xml\" -exec cp {} ~/workbench/api/test-results/ \\;\n+          when: always\n+      - store_test_results:\n+          path: ~/workbench/api/test-results\n+      - store_artifacts:\n+          path: ~/workbench/api/test-results\n+          destination: test-results\n+      - manage_api_cache:\n+          save: true\n+\n+  api-lint-swagger-check:", "originalCommit": "c93821b31ccbc006f410df5a0566745fb9861c28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MTIxNQ==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r417561215", "bodyText": "With parallelism, everything in job are repeated to run on different containers. So if I keep them together in same job, ./project.rb validate-swagger and ./gradlew spotlessCheck run 3 times as well on three different containers, only tests are splitted. If we want to keep validate-swagger and spotlessCheck in api-build-test, then I don't think we should use parallelism anymore.", "author": "aweng98", "createdAt": "2020-04-29T19:33:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAwODQxNA=="}], "type": "inlineReview"}, {"oid": "6cd0195695244a1af8699c8873db62ea117026db", "url": "https://github.com/all-of-us/workbench/commit/6cd0195695244a1af8699c8873db62ea117026db", "message": "fix cache key regression in config file", "committedDate": "2020-04-30T01:05:09Z", "type": "forcePushed"}, {"oid": "960dfcf84ebbf8400da6125d7afacd2c5b899e92", "url": "https://github.com/all-of-us/workbench/commit/960dfcf84ebbf8400da6125d7afacd2c5b899e92", "message": "fix cache key regression in config file", "committedDate": "2020-04-30T01:06:50Z", "type": "commit"}, {"oid": "6854609fabec1910506e5c45f2d4298f46ca5db8", "url": "https://github.com/all-of-us/workbench/commit/6854609fabec1910506e5c45f2d4298f46ca5db8", "message": "remove integration test compile in api-build-test job", "committedDate": "2020-04-30T16:40:39Z", "type": "commit"}, {"oid": "6854609fabec1910506e5c45f2d4298f46ca5db8", "url": "https://github.com/all-of-us/workbench/commit/6854609fabec1910506e5c45f2d4298f46ca5db8", "message": "remove integration test compile in api-build-test job", "committedDate": "2020-04-30T16:40:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE2NDYxMQ==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r418164611", "bodyText": "I would also fold this back into the API cache unless size is a concern.", "author": "calbach", "createdAt": "2020-04-30T17:15:21Z", "path": ".circleci/config.yml", "diffHunk": "@@ -115,99 +114,127 @@ commands:\n \n   install_ui_dependencies:\n     description: \"workbench/ui: yarn install, save and restore cache\"\n-    parameters:\n-      version:\n-        type: string\n-      key_prefix:\n-        type: string\n-        default: << parameters.version >>-yarn-ui-cache-{{ checksum \"~/workbench/ui/yarn.lock\" }}\n     steps:\n       # caching: https://circleci.com/docs/2.0/caching/\n       - restore_cache:\n+          name: \"restore ui cache\"\n           keys:\n-            # restore cache strategy:\n-            # Check for the latest cache from your branch.\n-            # If that fails, then check for the latest from master branch.\n-            # If that fails, then check for the latest from any branch\n-            - << parameters.key_prefix >>-{{ .Branch }}\n-            - << parameters.key_prefix >>-master\n-            - << parameters.key_prefix >>\n+            - v1-ui-cache-{{ .Branch }}-{{ checksum \"~/workbench/ui/yarn.lock\" }}\n+            - v1-ui-cache-{{ .Branch }}\n+            - v1-ui-cache-\n       - run:\n           name: \"workbench/ui: yarn install dependencies\"\n           working_directory: ~/workbench/ui\n           command: yarn install --verbose --frozen-lockfile --non-interactive\n       - save_cache:\n+          name: \"save ui cache\"\n           paths:\n             - ~/.cache/yarn\n             - ui/node_modules\n-          key: << parameters.key_prefix >>-{{ .Branch }}\n+          key: v1-ui-cache-{{ .Branch }}\n \n   install_e2e_dependencies:\n     description: \"workbench/e2e: yarn install, save and restore cache\"\n-    parameters:\n-      version:\n-        type: string\n-      key_prefix:\n-        type: string\n-        default: << parameters.version >>-yarn-e2e-cache-{{ checksum \"~/workbench/e2e/yarn.lock\" }}\n     steps:\n       - restore_cache:\n+          name: \"restore e2e cache\"\n           keys:\n-            - << parameters.key_prefix >>-{{ .Branch }}\n-            - << parameters.key_prefix >>-master\n-            - << parameters.key_prefix >>\n+            - v1-e2e-cache-{{ .Branch }}-{{ checksum \"~/workbench/e2e/yarn.lock\" }}\n+            - v1-e2e-cache-{{ .Branch }}\n+            - v1-e2e-cache-\n       - run:\n           name: \"workbench/e2e: yarn install dependencies\"\n           working_directory: ~/workbench/e2e\n           command: yarn install --frozen-lockfile --non-interactive\n       - save_cache:\n+          name: \"save e2e cache\"\n           paths:\n             - ~/.cache/yarn\n             - e2e/node_modules\n-          key: << parameters.key_prefix >>-{{ .Branch }}\n+          key: v1-e2e-cache-{{ .Branch }}\n \n   manage_api_cache:\n-    description: \"workbench/api: save, restore or save_and_restore gradle cache\"\n+    description: \"workbench/api: save or restore gradle cache\"\n     parameters:\n       save:\n         type: boolean\n         default: false\n       restore:\n         type: boolean\n         default: false\n-      key_prefix:\n-        type: string\n-        default: v1-api-cache-{{ checksum \"~/workbench/api/build.gradle\" }}\n     steps:\n       - when:\n           condition: << parameters.save >>\n           steps:\n+            # splitting into multiple distinct caches. Refers to https://circleci.com/docs/2.0/caching/#cache-size\n             - save_cache:\n+                name: \"save api gradle/wrapper cache\"\n                 paths:\n-                  - ~/.gradle/caches\n                   - ~/.gradle/wrapper\n+                key: v1-gradle-wrapper-{{ .Branch }}-{{ checksum \"~/workbench/api/gradle/wrapper/gradle-wrapper.properties\" }}\n+            - save_cache:\n+                name: \"save api gradle cache\"\n+                paths:\n+                  - ~/.gradle/caches\n+                key: v1-gradle-cache-{{ .Branch }}-{{ checksum \"~/workbench/api/build.gradle\" }}\n+      - when:\n+          condition: << parameters.restore >>\n+          steps:\n+            - restore_cache:\n+                name: \"restore api gradle/wrapper cache\"\n+                keys:\n+                  - v1-gradle-wrapper-{{ .Branch }}-{{ checksum \"~/workbench/api/gradle/wrapper/gradle-wrapper.properties\" }}\n+                  - v1-gradle-wrapper-{{ .Branch }}\n+                  - v1-gradle-wrapper-\n+            - restore_cache:\n+                name: \"restore api gradle cache\"\n+                keys:\n+                  - v1-gradle-cache-{{ .Branch }}-{{ checksum \"~/workbench/api/build.gradle\" }}\n+                  - v1-gradle-cache-{{ .Branch }}\n+                  - v1-gradle-cache-\n+\n+  manage_maven_cache:", "originalCommit": "6854609fabec1910506e5c45f2d4298f46ca5db8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE4NjE1OA==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r418186158", "bodyText": "There is an issue with combine all together in one cache. The .m2 or build/ caches are not generated in non-deploy jobs. If a cache was first saved in non-deploy jobs, that cache won't have anything for .m2 or build/. In a deploy job, save new cache won't be triggered because one already exist.", "author": "aweng98", "createdAt": "2020-04-30T17:51:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE2NDYxMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE2NzM3Nw==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r418167377", "bodyText": "This comment still seems relevant", "author": "calbach", "createdAt": "2020-04-30T17:19:52Z", "path": ".circleci/config.yml", "diffHunk": "@@ -27,7 +27,6 @@ anchors:\n       # In Feb 2017, this was set to 3G. But in Feb 2019 (RW-2194) we started seeing OOM errors,\n       # so we bumped this down further to 2G.\n       JAVA_TOOL_OPTIONS: -Xmx2g\n-      # https://docs.gradle.org/6.3/userguide/gradle_daemon.html#sec:disabling_the_daemon", "originalCommit": "6854609fabec1910506e5c45f2d4298f46ca5db8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE4MDAwMg==", "url": "https://github.com/all-of-us/workbench/pull/3494#discussion_r418180002", "bodyText": "added back comment.", "author": "aweng98", "createdAt": "2020-04-30T17:41:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE2NzM3Nw=="}], "type": "inlineReview"}, {"oid": "a9a2572482ec3e0a6fe2a304b0efadc8da27f3bf", "url": "https://github.com/all-of-us/workbench/commit/a9a2572482ec3e0a6fe2a304b0efadc8da27f3bf", "message": "PR feedback", "committedDate": "2020-04-30T18:20:48Z", "type": "commit"}]}