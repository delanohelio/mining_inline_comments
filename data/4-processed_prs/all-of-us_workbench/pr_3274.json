{"pr_number": 3274, "pr_title": "[RW-4626][risk=no] Puppeteer: Fix Registration tests", "pr_createdAt": "2020-03-19T17:30:01Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3274", "timeline": [{"oid": "858402b04e00597ba82165672bfceb75f936d3e6", "url": "https://github.com/all-of-us/workbench/commit/858402b04e00597ba82165672bfceb75f936d3e6", "message": "fix tests", "committedDate": "2020-03-19T17:28:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY1NjIzMA==", "url": "https://github.com/all-of-us/workbench/pull/3274#discussion_r395656230", "bodyText": "Can we add comments here to // Step 2: Terms of service?", "author": "NehaBroad", "createdAt": "2020-03-20T14:01:53Z", "path": "e2e/tests/user/registration.spec.ts", "diffHunk": "@@ -54,16 +55,22 @@ describe('User registration tests:', () => {\n \n     await createAccountPage.acceptTermsOfUseAgreement();\n     let nextButton = await createAccountPage.getNextButton();\n+    await nextButton.waitUntilEnabled();", "originalCommit": "858402b04e00597ba82165672bfceb75f936d3e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY3MDcwMA==", "url": "https://github.com/all-of-us/workbench/pull/3274#discussion_r395670700", "bodyText": "has a comment, it is at line #51.", "author": "aweng98", "createdAt": "2020-03-20T14:24:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY1NjIzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY1ODExNA==", "url": "https://github.com/all-of-us/workbench/pull/3274#discussion_r395658114", "bodyText": "Do we add negative test too? Like invalid email etc", "author": "NehaBroad", "createdAt": "2020-03-20T14:04:54Z", "path": "e2e/tests/user/registration-ui.spec.ts", "diffHunk": "@@ -133,35 +135,47 @@ describe('User registration tests:', () => {\n     const agreementPageButton = await createAccountPage.getNextButton();\n     await agreementPageButton.click();\n \n-    // Step 3: Enter user information. Should be on Create your account: Step 1 of 2 page\n-    expect(await createAccountPage.waitForTextExists('Create your account')).toBeTruthy();\n+    // Step 1 of 3: Enter Institution information\n+    const nextButton = await createAccountPage.getNextButton();\n+    expect(await nextButton.isCursorNotAllowed()).toEqual(true);\n \n-    // the NEXT button on User Information page should be disabled until all required fields are filled\n-    const userInforPageButton = await createAccountPage.getNextButton();\n-    const cursor = await userInforPageButton.isCursorNotAllowed();\n-    expect(cursor).toEqual(true);\n+    const institutionSelect = new SelectComponent(page, 'Select your institution');\n+    await institutionSelect.select(INSTITUTION_VALUE.VANDERBILT);\n+\n+    const emailAddress = await Textbox.forLabel(page, {textContains: FIELD_LABEL.INSTITUTION_EMAIL, ancestorNodeLevel: 2});", "originalCommit": "858402b04e00597ba82165672bfceb75f936d3e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2OTgwMw==", "url": "https://github.com/all-of-us/workbench/pull/3274#discussion_r395669803", "bodyText": "Good idea. I think that would be a new test in a new PR. purpose of this PR is mainly for fixing broken tests.", "author": "aweng98", "createdAt": "2020-03-20T14:23:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY1ODExNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2MTIwMQ==", "url": "https://github.com/all-of-us/workbench/pull/3274#discussion_r395661201", "bodyText": "super nit: change variable name from str to textContent", "author": "NehaBroad", "createdAt": "2020-03-20T14:10:11Z", "path": "e2e/app/aou-elements/select-component.ts", "diffHunk": "@@ -1,30 +1,35 @@\n import {Page} from 'puppeteer';\n+import BaseElement from './base-element';\n \n export default class SelectComponent {\n \n-  constructor(private readonly page: Page, private readonly label?: string) {\n+  constructor(private readonly page: Page, private readonly label?: string, private readonly nodeLevel?: number) {\n     this.page = page;\n     this.label = label || undefined;\n+    this.nodeLevel = nodeLevel || 1;\n   }\n \n-  async select(textValue: string) {\n+  async select(textValue: string): Promise<string> {\n     await this.open(2); // with 2 retries\n-    const selector = this.componentXpath() + `//li[@class='p-dropdown-item'][normalize-space(.)=\"${textValue}\"]`;\n+    const selector = this.dropdownXpath() + `//li[contains(normalize-space(text()), \"${textValue}\")]`;\n     const selectValue = await this.page.waitForXPath(selector, { visible: true });\n+    const selectElement = new BaseElement(this.page, selectValue);\n+    const str = await selectElement.getTextContent();", "originalCommit": "858402b04e00597ba82165672bfceb75f936d3e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NjI3OA==", "url": "https://github.com/all-of-us/workbench/pull/3274#discussion_r395666278", "bodyText": "\ud83d\udc4d", "author": "aweng98", "createdAt": "2020-03-20T14:18:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2MTIwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2MTczNA==", "url": "https://github.com/all-of-us/workbench/pull/3274#discussion_r395661734", "bodyText": "nice!", "author": "NehaBroad", "createdAt": "2020-03-20T14:11:01Z", "path": "e2e/app/base-page.ts", "diffHunk": "@@ -221,4 +222,19 @@ export default abstract class BasePage {\n     }, element);\n   }\n \n+  /**\n+   * Take a full-page screenshot, save file in .png format in logs/screenshot directory.\n+   * @param fileName\n+   */\n+  async takeScreenshot(fileName: string) {\n+    const dir = 'logs/screenshot';\n+    if (!fs.existsSync(dir)) {\n+      fs.mkdirSync(dir);\n+    }\n+    const timestamp = new Date().getTime();\n+    const screenshotFile = `${dir}/${fileName}_${timestamp}.png`;\n+    await this.page.screenshot({path: screenshotFile, fullPage: true});\n+    console.log('screenshot taken: ' + screenshotFile);", "originalCommit": "858402b04e00597ba82165672bfceb75f936d3e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2MjU1OA==", "url": "https://github.com/all-of-us/workbench/pull/3274#discussion_r395662558", "bodyText": "nit: Fill out institution details - to clarify its just not institution name but email and role as well", "author": "NehaBroad", "createdAt": "2020-03-20T14:12:18Z", "path": "e2e/app/create-account-page.ts", "diffHunk": "@@ -129,27 +127,37 @@ export default class CreateAccountPage extends BasePage {\n \n   // select Education Level from a dropdown\n   async selectEducationLevel(selectTextValue: string) {\n-    const dropdown = new SelectComponent(this.page, FIELD_LABEL.EDUCATION_LEVEL);\n+    const dropdown = new SelectComponent(this.page, FIELD_LABEL.EDUCATION_LEVEL, 2);\n     await dropdown.select(selectTextValue);\n   }\n \n   // select Year of Birth from a dropdown\n   async selectYearOfBirth(year: string) {\n-    const dropdown = new SelectComponent(this.page, FIELD_LABEL.YEAR_OF_BIRTH);\n+    const dropdown = new SelectComponent(this.page, FIELD_LABEL.YEAR_OF_BIRTH, 2);\n     await dropdown.select(year);\n   }\n \n   // Combined steps to make test code cleaner and shorter\n \n-  // Step 1: Enter Invitation key\n+  // Step 1: Fill out Institution", "originalCommit": "858402b04e00597ba82165672bfceb75f936d3e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NjYxNA==", "url": "https://github.com/all-of-us/workbench/pull/3274#discussion_r395666614", "bodyText": "\ud83d\udc4d", "author": "aweng98", "createdAt": "2020-03-20T14:18:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2MjU1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NDM3MA==", "url": "https://github.com/all-of-us/workbench/pull/3274#discussion_r395664370", "bodyText": "May not be part of this PR but it will be nice to have a util method to handle errors where in we can just pass the flow name say invitation key -> it will print error and take a screen shot with file name invitation key", "author": "NehaBroad", "createdAt": "2020-03-20T14:15:07Z", "path": "e2e/app/google-login.ts", "diffHunk": "@@ -89,8 +89,13 @@ export default class GoogleLoginPage extends BasePage {\n   /**\n    * Open All-of-Us Google login page.\n    */\n-  async goto(): Promise<void> {\n-    await this.page.goto(configs.uiBaseUrl + configs.loginUrlPath, {waitUntil: ['networkidle0', 'domcontentloaded'], timeout: 0});\n+  async load(): Promise<void> {\n+    const url = configs.uiBaseUrl + configs.loginUrlPath;\n+    await this.page.goto(url, {waitUntil: ['networkidle0', 'domcontentloaded'], timeout: 30000}).catch((err) => {\n+      console.error('Google login page not found. ' + err);\n+      this.takeScreenshot('GoogleLoginNotFound');", "originalCommit": "858402b04e00597ba82165672bfceb75f936d3e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2OTA2MA==", "url": "https://github.com/all-of-us/workbench/pull/3274#discussion_r395669060", "bodyText": "I'll make a note of this, for next PR.", "author": "aweng98", "createdAt": "2020-03-20T14:22:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY2NDM3MA=="}], "type": "inlineReview"}, {"oid": "56486147c7b7b9dde64d5229e8bf55c85dbc4aef", "url": "https://github.com/all-of-us/workbench/commit/56486147c7b7b9dde64d5229e8bf55c85dbc4aef", "message": "PR feedback", "committedDate": "2020-03-20T14:25:02Z", "type": "commit"}]}