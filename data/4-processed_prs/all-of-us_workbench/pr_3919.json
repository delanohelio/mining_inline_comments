{"pr_number": 3919, "pr_title": "[RW-4847][risk=low] Support Swagger 3 codegen, partially migrate notebooks.yaml", "pr_createdAt": "2020-08-25T23:17:34Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3919", "timeline": [{"oid": "0cd303dd937ce914d4965871b0492417b9b6dc28", "url": "https://github.com/all-of-us/workbench/commit/0cd303dd937ce914d4965871b0492417b9b6dc28", "message": "Support swagger3 plugin", "committedDate": "2020-08-25T17:14:11Z", "type": "commit"}, {"oid": "ab948c3f02090c96935bfbe399205fc56663d812", "url": "https://github.com/all-of-us/workbench/commit/ab948c3f02090c96935bfbe399205fc56663d812", "message": "Switch to Leo Swagger 3 API", "committedDate": "2020-08-25T23:01:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg0NjUxOQ==", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r476846519", "bodyText": "@gjuggler FYI, I have spawned an additional set of templates here to support swagger 3. The patch was relatively straightforward to apply against the swagger3 codegen - these templates didn't change much.", "author": "calbach", "createdAt": "2020-08-25T23:19:27Z", "path": "api/src/main/resources/swagger3codegen/aouTracedMethodCall.mustache", "diffHunk": "@@ -0,0 +1,34 @@\n+        // Generate an OpenCensus tracing span for this API method call.", "originalCommit": "ab948c3f02090c96935bfbe399205fc56663d812", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6bff86631f6415966f40af16ee46e8b8b33750f9", "url": "https://github.com/all-of-us/workbench/commit/6bff86631f6415966f40af16ee46e8b8b33750f9", "message": "Fix test compilation", "committedDate": "2020-08-26T00:19:18Z", "type": "commit"}, {"oid": "1e640e94d639ff85aa2ba588834839e9f53a2943", "url": "https://github.com/all-of-us/workbench/commit/1e640e94d639ff85aa2ba588834839e9f53a2943", "message": "skip swagger3 validation", "committedDate": "2020-08-26T00:43:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2OTQyMA==", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r477569420", "bodyText": "so... are we using one API for the Jupyter/Welder proxy calls and a different one for the non-proxy Leonardo endpoints?", "author": "jmthibault79", "createdAt": "2020-08-26T20:27:59Z", "path": "api/src/main/java/org/pmiops/workbench/notebooks/NotebooksConfig.java", "diffHunk": "@@ -20,8 +20,13 @@\n public class NotebooksConfig {\n   public static final String USER_CLUSTER_API = \"userClusterApi\";\n   public static final String SERVICE_CLUSTER_API = \"svcClusterApi\";\n+\n+  // Identifiers for the older Swagger2 APIs for Jupyter and Welder.", "originalCommit": "1e640e94d639ff85aa2ba588834839e9f53a2943", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU5ODg4NA==", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r477598884", "bodyText": "Yep, clarified comment.", "author": "calbach", "createdAt": "2020-08-26T21:26:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2OTQyMA=="}], "type": "inlineReview"}, {"oid": "67bdffe847333720aae7317e1d51c1cef3e6b832", "url": "https://github.com/all-of-us/workbench/commit/67bdffe847333720aae7317e1d51c1cef3e6b832", "message": "PR feedback, fix integration", "committedDate": "2020-08-26T21:34:10Z", "type": "commit"}, {"oid": "7476b488ed7a36ffb18392723f8a75dfc8e5dfc2", "url": "https://github.com/all-of-us/workbench/commit/7476b488ed7a36ffb18392723f8a75dfc8e5dfc2", "message": "rename the retry policy too", "committedDate": "2020-08-26T21:36:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYwMzAyMQ==", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r477603021", "bodyText": "RE generateSwaggerCode: see new comment here", "author": "calbach", "createdAt": "2020-08-26T21:35:13Z", "path": "api/build.gradle", "diffHunk": "@@ -299,15 +339,18 @@ classes.dependsOn 'generatedClasses'\n project.tasks.ideaModule.dependsOn(generateSwaggerCode)\n \n // Java plugin's Generated Source Set gives us the compileGeneratedJava task.\n-// We need to provide it with the swagger-codegen tasks that output Java.\n+// We need to provide it with the swagger-codegen tasks that output Java; this", "originalCommit": "67bdffe847333720aae7317e1d51c1cef3e6b832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYwMzY4Mg==", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r477603682", "bodyText": "RE notebooks.yaml: good catch, fixed.", "author": "calbach", "createdAt": "2020-08-26T21:36:48Z", "path": "api/src/main/resources/notebooks.yaml", "diffHunk": "@@ -1,7 +1,11 @@\n # This file is a hand-crafted combination of Leo and its proxy APIs.\n-#  - All of Leo: https://github.com/broadinstitute/leonardo/blob/develop/src/main/resources/swagger/api-docs.yaml\n #  - A subset of Welder (modified for cluster/path prefix): https://github.com/DataBiosphere/welder/blob/master/server/src/main/resources/api-docs.yaml\n #  - A subset of Jupyter (modified for cluster/path prefix): https://github.com/jupyter/notebook/blob/master/notebook/services/api/api.yaml\n+#\n+# TODO(calbach): Remove the following once the client-side codegen can support", "originalCommit": "67bdffe847333720aae7317e1d51c1cef3e6b832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYwMzk4Mw==", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r477603983", "bodyText": "APparently this status API was exclusively checking prod... nice... Fixed that, which should resolve the integration test issues.", "author": "calbach", "createdAt": "2020-08-26T21:37:26Z", "path": "api/src/main/java/org/pmiops/workbench/notebooks/LeonardoNotebooksClientImpl.java", "diffHunk": "@@ -214,15 +222,15 @@ public void localize(String googleProject, String clusterName, Map<String, Strin\n   public StorageLink createStorageLink(\n       String googleProject, String clusterName, StorageLink storageLink) {\n     NotebooksApi notebooksApi = notebooksApiProvider.get();\n-    return retryHandler.run(\n+    return notebooksRetryHandler.run(\n         (context) -> notebooksApi.welderCreateStorageLink(googleProject, clusterName, storageLink));\n   }\n \n   @Override\n   public boolean getNotebooksStatus() {\n     try {\n-      new StatusApi().getSystemStatus();\n-    } catch (ApiException e) {\n+      serviceInfoApiProvider.get().getSystemStatus();", "originalCommit": "67bdffe847333720aae7317e1d51c1cef3e6b832", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}