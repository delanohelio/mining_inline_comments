{"pr_number": 3985, "pr_title": "[risk=low][RW-3627] Delete project when deleting workspace", "pr_createdAt": "2020-09-10T14:53:26Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3985", "timeline": [{"oid": "bb82c25d8b451b7819038402dd1f232448578371", "url": "https://github.com/all-of-us/workbench/commit/bb82c25d8b451b7819038402dd1f232448578371", "message": "Correct endpoint auth", "committedDate": "2020-09-11T01:09:50Z", "type": "forcePushed"}, {"oid": "b729b9eef7f634407a7541c7fc68d7ca14af0271", "url": "https://github.com/all-of-us/workbench/commit/b729b9eef7f634407a7541c7fc68d7ca14af0271", "message": "Audit-log Billing Project Deletion", "committedDate": "2020-09-14T21:12:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI3NjEwNw==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r488276107", "bodyText": "I needed to add this MockBean to a lot of tests after adding it to the WorkspaceServiceImpl constructor.", "author": "jmthibault79", "createdAt": "2020-09-14T22:40:32Z", "path": "api/src/bigquerytest/java/org/pmiops/workbench/api/CohortReviewControllerBQTest.java", "diffHunk": "@@ -21,6 +21,7 @@\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n+import org.pmiops.workbench.actionaudit.auditors.BillingProjectAuditor;", "originalCommit": "f98f0f69afdcf36e9105033e530526855bb7cce5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0Nzg0MA==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490247840", "bodyText": "Maybe for later, but if you find bundles of dependencies that are frequently needed together, you can make a stand-alone test configuration class with them and import that.", "author": "jaycarlton", "createdAt": "2020-09-17T13:31:43Z", "path": "api/src/bigquerytest/java/org/pmiops/workbench/api/CohortReviewControllerBQTest.java", "diffHunk": "@@ -103,30 +104,31 @@\n     CohortMapperImpl.class,\n     CohortQueryBuilder.class,\n     CohortReviewMapperImpl.class,\n+    CohortReviewMapperImpl.class,\n     CohortReviewServiceImpl.class,\n     CommonMappers.class,\n+    CommonMappers.class,\n     ConceptSetMapperImpl.class,\n     DataSetMapperImpl.class,\n     FirecloudMapperImpl.class,\n+    ParticipantCohortAnnotationMapperImpl.class,\n+    ParticipantCohortStatusMapperImpl.class,\n     ReviewQueryBuilder.class,\n     SearchGroupItemQueryBuilder.class,\n     UserMapperImpl.class,\n     WorkspaceMapperImpl.class,\n     WorkspaceServiceImpl.class,\n-    ParticipantCohortStatusMapperImpl.class,\n-    CohortReviewMapperImpl.class,\n-    ParticipantCohortAnnotationMapperImpl.class,\n-    CommonMappers.class\n   })\n   @MockBean({\n-    CohortFactory.class,\n+    BillingProjectAuditor.class,", "originalCommit": "f98f0f69afdcf36e9105033e530526855bb7cce5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0OTM2Ng==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490249366", "bodyText": "nit: you should be able to omit the return statement.", "author": "jaycarlton", "createdAt": "2020-09-17T13:33:26Z", "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudServiceImpl.java", "diffHunk": "@@ -270,6 +270,16 @@ public void createAllOfUsBillingProject(String projectName) {\n         });\n   }\n \n+  @Override\n+  public void deleteBillingProject(String billingProject) {\n+    BillingApi billingApi = billingApiProvider.get();\n+    retryHandler.run(\n+        (context) -> {\n+          billingApi.deleteBillingProject(billingProject);\n+          return null;", "originalCommit": "f98f0f69afdcf36e9105033e530526855bb7cce5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MDEwOQ==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490250109", "bodyText": "What happens if it's not found? Do we want  the delete method to throw an exception, or just return success (i.e. be idempotent)?", "author": "jaycarlton", "createdAt": "2020-09-17T13:34:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0OTM2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM0NzI5MA==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490347290", "bodyText": "no - this requires a return value", "author": "jmthibault79", "createdAt": "2020-09-17T15:33:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0OTM2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MTAxNQ==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490251015", "bodyText": "Have you thought through the transactionality of errors here? If we succeed in deleting the workspace, but fail to delete the project, are we happy?", "author": "jaycarlton", "createdAt": "2020-09-17T13:35:27Z", "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspaceServiceImpl.java", "diffHunk": "@@ -306,6 +310,10 @@ public void deleteWorkspace(DbWorkspace dbWorkspace) {\n     dbWorkspace.setWorkspaceActiveStatusEnum(WorkspaceActiveStatus.DELETED);\n     dbWorkspace = saveWithLastModified(dbWorkspace);\n     maybeDeleteRecentWorkspace(dbWorkspace.getWorkspaceId());\n+\n+    String billingProjectName = dbWorkspace.getWorkspaceNamespace();", "originalCommit": "f98f0f69afdcf36e9105033e530526855bb7cce5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM1MDI2Ng==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490350266", "bodyText": "Yes - that would be equivalent to the current behavior.  We will always be in a world where we need to go back and clean up orphaned projects (due to local DB wipes) so this is acceptable.\nI'll update this to catch-and-log errors", "author": "jmthibault79", "createdAt": "2020-09-17T15:37:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MTAxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MTYwNA==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490251604", "bodyText": "Does this immediately expunge the GCP project, or does it get put into a queue for deletion? There's no wrong answer, as long as everyone understands the behavior.", "author": "jaycarlton", "createdAt": "2020-09-17T13:36:14Z", "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudServiceImpl.java", "diffHunk": "@@ -270,6 +270,16 @@ public void createAllOfUsBillingProject(String projectName) {\n         });\n   }\n \n+  @Override\n+  public void deleteBillingProject(String billingProject) {\n+    BillingApi billingApi = billingApiProvider.get();\n+    retryHandler.run(\n+        (context) -> {\n+          billingApi.deleteBillingProject(billingProject);", "originalCommit": "f98f0f69afdcf36e9105033e530526855bb7cce5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1NDEwNw==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490254107", "bodyText": "Also, is there a ticket for a simple cron to find orphaned billing projects?", "author": "jaycarlton", "createdAt": "2020-09-17T13:39:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MTYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM1NzM4OA==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490357388", "bodyText": "Immediate deletion.\nWe currently have a \"Garbage Collection\" cron for orphaned billing projects, but we should revisit this process.  I have a plan to do this, but it's not in JIRA yet", "author": "jmthibault79", "createdAt": "2020-09-17T15:47:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MTYwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MjEzMA==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490252130", "bodyText": "Please elaborate on this, potentially for folks who haven't worked with the billing system or have forgotten what a billing project is.", "author": "jaycarlton", "createdAt": "2020-09-17T13:36:57Z", "path": "api/src/main/resources/firecloud.yaml", "diffHunk": "@@ -264,6 +264,39 @@ paths:\n           - openid\n           - email\n           - profile\n+  /api/user/billing/{projectName}:\n+    delete:\n+      tags:\n+        - Billing\n+      summary: delete billing project\n+      description: delete billing project", "originalCommit": "f98f0f69afdcf36e9105033e530526855bb7cce5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1Mjk3Ng==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490252976", "bodyText": "Does this behave the same for user-provided billing projects and free tier billing projects/accounts? Do we need to update spend totals before killing it?", "author": "jaycarlton", "createdAt": "2020-09-17T13:38:09Z", "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudServiceImpl.java", "diffHunk": "@@ -270,6 +270,16 @@ public void createAllOfUsBillingProject(String projectName) {\n         });\n   }\n \n+  @Override\n+  public void deleteBillingProject(String billingProject) {", "originalCommit": "f98f0f69afdcf36e9105033e530526855bb7cce5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM1OTkzNA==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490359934", "bodyText": "We will always own the whole lifecycle for billing projects - users will bring billing accounts in the future which we will assign to the already-existing projects.", "author": "jmthibault79", "createdAt": "2020-09-17T15:51:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1Mjk3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzMjc5Ng==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490432796", "bodyText": "that makes more sense, thanks.", "author": "jaycarlton", "createdAt": "2020-09-17T17:25:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1Mjk3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MzY3OQ==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490253679", "bodyText": "please add tests showing all the failure modes (exceptions) and their handling (if any).", "author": "jaycarlton", "createdAt": "2020-09-17T13:39:07Z", "path": "api/src/test/java/org/pmiops/workbench/workspaces/WorkspaceServiceTest.java", "diffHunk": "@@ -389,4 +390,16 @@ public void enforceFirecloudAclsInRecentWorkspaces() {\n     assertThat(recentWorkspaces.size()).isEqualTo(1);\n     assertThat(recentWorkspaces.get(0).getWorkspaceId()).isEqualTo(ownedId);\n   }\n+\n+  @Test\n+  public void deleteWorkspace() {", "originalCommit": "f98f0f69afdcf36e9105033e530526855bb7cce5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQxMTUzNw==", "url": "https://github.com/all-of-us/workbench/pull/3985#discussion_r490411537", "bodyText": "Mostly this is a passthrough, so there's not much to test.  I added a test for failed project deletion", "author": "jmthibault79", "createdAt": "2020-09-17T16:49:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MzY3OQ=="}], "type": "inlineReview"}, {"oid": "6f713d9b609fdde668d6a21fadaf13f3721afc73", "url": "https://github.com/all-of-us/workbench/commit/6f713d9b609fdde668d6a21fadaf13f3721afc73", "message": "Add new Firecloud endpoint for Project Deletion", "committedDate": "2020-09-17T19:13:58Z", "type": "commit"}, {"oid": "59aea69109c73b2d6109cf828e147a89c052169c", "url": "https://github.com/all-of-us/workbench/commit/59aea69109c73b2d6109cf828e147a89c052169c", "message": "Delete billing project after deleting workspace", "committedDate": "2020-09-17T19:13:58Z", "type": "commit"}, {"oid": "af2f9ec530f91416bb3bbd56b172dda85670228e", "url": "https://github.com/all-of-us/workbench/commit/af2f9ec530f91416bb3bbd56b172dda85670228e", "message": "Add basic deleteWorkspace() test", "committedDate": "2020-09-17T19:13:59Z", "type": "commit"}, {"oid": "370d9e599d2d47769c807b95c46a2351777d6f56", "url": "https://github.com/all-of-us/workbench/commit/370d9e599d2d47769c807b95c46a2351777d6f56", "message": "fix imports", "committedDate": "2020-09-17T19:13:59Z", "type": "commit"}, {"oid": "51f7c61b62d4f4282a394e18fe92943fb967ef21", "url": "https://github.com/all-of-us/workbench/commit/51f7c61b62d4f4282a394e18fe92943fb967ef21", "message": "Correct endpoint auth", "committedDate": "2020-09-17T19:13:59Z", "type": "commit"}, {"oid": "8197de65dca1a00ffbee33fe4c876072c69030d4", "url": "https://github.com/all-of-us/workbench/commit/8197de65dca1a00ffbee33fe4c876072c69030d4", "message": "Audit-log Billing Project Deletion", "committedDate": "2020-09-17T19:14:00Z", "type": "commit"}, {"oid": "61acd591c10819dbfb3d57aa920860d1894bb703", "url": "https://github.com/all-of-us/workbench/commit/61acd591c10819dbfb3d57aa920860d1894bb703", "message": "add MockBean to fix tests", "committedDate": "2020-09-17T19:14:00Z", "type": "commit"}, {"oid": "5a32f13109d8b9e1b796eb0728fbdaeda86d62a9", "url": "https://github.com/all-of-us/workbench/commit/5a32f13109d8b9e1b796eb0728fbdaeda86d62a9", "message": "more MockBeans for great justice", "committedDate": "2020-09-17T19:15:08Z", "type": "commit"}, {"oid": "9fe2c59400e866f18275b1f455c85916aed0416e", "url": "https://github.com/all-of-us/workbench/commit/9fe2c59400e866f18275b1f455c85916aed0416e", "message": "more MockBeans", "committedDate": "2020-09-17T19:15:10Z", "type": "commit"}, {"oid": "0dde9992dd6a747eb2d558d4781da1ba5a808d8d", "url": "https://github.com/all-of-us/workbench/commit/0dde9992dd6a747eb2d558d4781da1ba5a808d8d", "message": "Move delete BP into a try/catch", "committedDate": "2020-09-17T19:15:11Z", "type": "commit"}, {"oid": "69f440c4fe0448791d37b7af58ad8c4171b9d55a", "url": "https://github.com/all-of-us/workbench/commit/69f440c4fe0448791d37b7af58ad8c4171b9d55a", "message": "Add failed project deletion test", "committedDate": "2020-09-17T19:15:11Z", "type": "commit"}, {"oid": "5f022e9c40da20d673dbb710e17752227c03aec5", "url": "https://github.com/all-of-us/workbench/commit/5f022e9c40da20d673dbb710e17752227c03aec5", "message": "update deleteBillingProject text", "committedDate": "2020-09-17T19:15:11Z", "type": "commit"}, {"oid": "5f022e9c40da20d673dbb710e17752227c03aec5", "url": "https://github.com/all-of-us/workbench/commit/5f022e9c40da20d673dbb710e17752227c03aec5", "message": "update deleteBillingProject text", "committedDate": "2020-09-17T19:15:11Z", "type": "forcePushed"}]}