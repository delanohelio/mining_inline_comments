{"pr_number": 3307, "pr_title": "[RW-4671][risk=no] Puppeteer: Fix Home Page flaky test", "pr_createdAt": "2020-03-27T01:30:36Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3307", "timeline": [{"oid": "c9a44242908abd94e509332fa95ca7ef2a1bbb81", "url": "https://github.com/all-of-us/workbench/commit/c9a44242908abd94e509332fa95ca7ef2a1bbb81", "message": "elements wait for visible", "committedDate": "2020-03-27T01:13:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk4NjU0MA==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r398986540", "bodyText": "Calling getAllCards() function to avoid duplicate code. should have been done at the beginning.", "author": "aweng98", "createdAt": "2020-03-27T01:33:32Z", "path": "e2e/app/workspace-card.ts", "diffHunk": "@@ -41,24 +42,25 @@ export default class WorkspaceCard extends BaseElement {\n   }\n \n   static async findCard(page: Page, workspaceName: string): Promise<WorkspaceCard | null> {\n-    const cards = await page.$x(WorkspaceCard.cardRootXpath);\n-    for (const card of cards) {\n-      const children = await card.$x(`.//*[@data-test-id=\"workspace-card-name\" and text()=\"${workspaceName}\"]`);\n+    const allCards = await this.getAllCards(page);\n+    for (const card of allCards) {\n+      const children = await card.asElementHandle().$x(`.//*[@data-test-id=\"workspace-card-name\" and text()=\"${workspaceName}\"]`);\n       if (children.length > 0) {\n-        return new WorkspaceCard(page).asCardElement(card);\n+        return card; // matched workspace name, found the Workspace card.\n       }\n-      await card.dispose();\n+      await card.dispose(); // not it, dispose the ElementHandle.\n     }\n-    return null;\n+    return null; // not found", "originalCommit": "c9a44242908abd94e509332fa95ca7ef2a1bbb81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk4NzQ1Mw==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r398987453", "bodyText": "I think new method name is better and more clear.", "author": "aweng98", "createdAt": "2020-03-27T01:35:31Z", "path": "e2e/app/workspace-card.ts", "diffHunk": "@@ -41,24 +42,25 @@ export default class WorkspaceCard extends BaseElement {\n   }\n \n   static async findCard(page: Page, workspaceName: string): Promise<WorkspaceCard | null> {\n-    const cards = await page.$x(WorkspaceCard.cardRootXpath);\n-    for (const card of cards) {\n-      const children = await card.$x(`.//*[@data-test-id=\"workspace-card-name\" and text()=\"${workspaceName}\"]`);\n+    const allCards = await this.getAllCards(page);\n+    for (const card of allCards) {\n+      const children = await card.asElementHandle().$x(`.//*[@data-test-id=\"workspace-card-name\" and text()=\"${workspaceName}\"]`);\n       if (children.length > 0) {\n-        return new WorkspaceCard(page).asCardElement(card);\n+        return card; // matched workspace name, found the Workspace card.\n       }\n-      await card.dispose();\n+      await card.dispose(); // not it, dispose the ElementHandle.\n     }\n-    return null;\n+    return null; // not found\n   }\n \n \n   constructor(page: Page) {\n     super(page);\n   }\n \n-  async getResourceCardName(): Promise<unknown> {\n-    const cardNameElem = await this.element.$x('.//*[@data-test-id=\"workspace-card-name\"]');\n+  async getWorkspaceName(): Promise<unknown> {", "originalCommit": "c9a44242908abd94e509332fa95ca7ef2a1bbb81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk4NzczMA==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r398987730", "bodyText": "Fix the flaky issue: wait until Workspace Card is visible.", "author": "aweng98", "createdAt": "2020-03-27T01:36:35Z", "path": "e2e/app/workspace-card.ts", "diffHunk": "@@ -25,8 +25,9 @@ export default class WorkspaceCard extends BaseElement {\n   // **********************\n \n   static async getAllCards(page: Page): Promise<WorkspaceCard[]> {\n+    await page.waitForXPath(WorkspaceCard.cardRootXpath, {visible: true});", "originalCommit": "c9a44242908abd94e509332fa95ca7ef2a1bbb81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNTc5OA==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r399325798", "bodyText": "is this the workspace landing page? else can we name this as getAllWorkspaceCards", "author": "NehaBroad", "createdAt": "2020-03-27T14:57:26Z", "path": "e2e/app/workspace-card.ts", "diffHunk": "@@ -41,24 +42,25 @@ export default class WorkspaceCard extends BaseElement {\n   }\n \n   static async findCard(page: Page, workspaceName: string): Promise<WorkspaceCard | null> {\n-    const cards = await page.$x(WorkspaceCard.cardRootXpath);\n-    for (const card of cards) {\n-      const children = await card.$x(`.//*[@data-test-id=\"workspace-card-name\" and text()=\"${workspaceName}\"]`);\n+    const allCards = await this.getAllCards(page);", "originalCommit": "c9a44242908abd94e509332fa95ca7ef2a1bbb81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzMzM3Ng==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r399333376", "bodyText": "It can be either Home or Your Workspaces page.", "author": "aweng98", "createdAt": "2020-03-27T15:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNTc5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNjU1OA==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r399326558", "bodyText": "wondering if we can use allCards.filter(card -> await card...) instead of for?", "author": "NehaBroad", "createdAt": "2020-03-27T14:58:31Z", "path": "e2e/app/workspace-card.ts", "diffHunk": "@@ -41,24 +42,25 @@ export default class WorkspaceCard extends BaseElement {\n   }\n \n   static async findCard(page: Page, workspaceName: string): Promise<WorkspaceCard | null> {\n-    const cards = await page.$x(WorkspaceCard.cardRootXpath);\n-    for (const card of cards) {\n-      const children = await card.$x(`.//*[@data-test-id=\"workspace-card-name\" and text()=\"${workspaceName}\"]`);\n+    const allCards = await this.getAllCards(page);\n+    for (const card of allCards) {", "originalCommit": "c9a44242908abd94e509332fa95ca7ef2a1bbb81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1MjA1MQ==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r399352051", "bodyText": "I tried for a hour but failed to make it work. Then I found out .filter function is not async capable. :(", "author": "aweng98", "createdAt": "2020-03-27T15:34:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNjU1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNzE3Mw==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r399327173", "bodyText": "workspaceNameElem?", "author": "NehaBroad", "createdAt": "2020-03-27T14:59:20Z", "path": "e2e/app/workspace-card.ts", "diffHunk": "@@ -41,24 +42,25 @@ export default class WorkspaceCard extends BaseElement {\n   }\n \n   static async findCard(page: Page, workspaceName: string): Promise<WorkspaceCard | null> {\n-    const cards = await page.$x(WorkspaceCard.cardRootXpath);\n-    for (const card of cards) {\n-      const children = await card.$x(`.//*[@data-test-id=\"workspace-card-name\" and text()=\"${workspaceName}\"]`);\n+    const allCards = await this.getAllCards(page);\n+    for (const card of allCards) {\n+      const children = await card.asElementHandle().$x(`.//*[@data-test-id=\"workspace-card-name\" and text()=\"${workspaceName}\"]`);\n       if (children.length > 0) {\n-        return new WorkspaceCard(page).asCardElement(card);\n+        return card; // matched workspace name, found the Workspace card.\n       }\n-      await card.dispose();\n+      await card.dispose(); // not it, dispose the ElementHandle.\n     }\n-    return null;\n+    return null; // not found\n   }\n \n \n   constructor(page: Page) {\n     super(page);\n   }\n \n-  async getResourceCardName(): Promise<unknown> {\n-    const cardNameElem = await this.element.$x('.//*[@data-test-id=\"workspace-card-name\"]');\n+  async getWorkspaceName(): Promise<unknown> {\n+    const selector = './/*[@data-test-id=\"workspace-card-name\"]';\n+    const cardNameElem = await this.element.$x(selector);", "originalCommit": "c9a44242908abd94e509332fa95ca7ef2a1bbb81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzNTM4MA==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r399335380", "bodyText": "\ud83d\udc4d Done", "author": "aweng98", "createdAt": "2020-03-27T15:10:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNzE3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNzU2Mg==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r399327562", "bodyText": "can this be workspaceName", "author": "NehaBroad", "createdAt": "2020-03-27T14:59:50Z", "path": "e2e/tests/workspace/workspace-ui.spec.ts", "diffHunk": "@@ -57,7 +57,7 @@ describe('Workspace ui tests', () => {\n \n     await WorkspaceCard.getAllCards(page);\n     const anyCard = await WorkspaceCard.getAnyCard(page);\n-    const cardName = await anyCard.getResourceCardName();\n+    const cardName = await anyCard.getWorkspaceName();", "originalCommit": "c9a44242908abd94e509332fa95ca7ef2a1bbb81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzMjMwMw==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r399332303", "bodyText": "\ud83d\udc4d Done", "author": "aweng98", "createdAt": "2020-03-27T15:06:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMyNzU2Mg=="}], "type": "inlineReview"}, {"oid": "07ce82d6452db736355314948c1e95e7a325f4ce", "url": "https://github.com/all-of-us/workbench/commit/07ce82d6452db736355314948c1e95e7a325f4ce", "message": "PR feedback", "committedDate": "2020-03-27T16:30:18Z", "type": "commit"}, {"oid": "5e59785446e93d54c7e2f975d90fd8e9aaad41c5", "url": "https://github.com/all-of-us/workbench/commit/5e59785446e93d54c7e2f975d90fd8e9aaad41c5", "message": "undo skipped tests", "committedDate": "2020-03-27T16:32:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM5Mjk5MQ==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r399392991", "bodyText": "oversight: this is a dup function. it already is in base-page.ts.", "author": "aweng98", "createdAt": "2020-03-27T16:34:17Z", "path": "e2e/app/authenticated-page.ts", "diffHunk": "@@ -48,16 +48,6 @@ export default abstract class AuthenticatedPage extends BasePage {\n     super(page);\n   }\n \n-  /**\n-   * Take a full-page screenshot, save file in .png format in logs/screenshots directory.\n-   * @param fileName\n-   */\n-  async takeScreenshot(fileName: string) {\n-    const timestamp = new Date().getTime();\n-    const screenshotFile = `screenshots/${fileName}_${timestamp}.png`;\n-    await this.page.screenshot({path: screenshotFile, fullPage: true});\n-  }", "originalCommit": "5e59785446e93d54c7e2f975d90fd8e9aaad41c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM5MzYxNA==", "url": "https://github.com/all-of-us/workbench/pull/3307#discussion_r399393614", "bodyText": "change to import for consistent style.", "author": "aweng98", "createdAt": "2020-03-27T16:35:12Z", "path": "e2e/app/base-page.ts", "diffHunk": "@@ -1,5 +1,5 @@\n import {ElementHandle, Page, Response} from 'puppeteer';\n-const fse = require('fs-extra');\n+import { ensureDir } from 'fs-extra';", "originalCommit": "5e59785446e93d54c7e2f975d90fd8e9aaad41c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}