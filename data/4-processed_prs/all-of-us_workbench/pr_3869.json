{"pr_number": 3869, "pr_title": "[RW-5371][risk=no] batch the BQ inserts in sizes of 500 rows per guidance", "pr_createdAt": "2020-08-11T12:31:33Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3869", "timeline": [{"oid": "8323c1a853c24f5e58aa3ed4e7f96eb4cfd41afd", "url": "https://github.com/all-of-us/workbench/commit/8323c1a853c24f5e58aa3ed4e7f96eb4cfd41afd", "message": "batch the inserts in sizes of 500 rows as suggested", "committedDate": "2020-08-11T02:45:12Z", "type": "commit"}, {"oid": "d1e433161577baaa9fb36951b162bf81c2a5b59c", "url": "https://github.com/all-of-us/workbench/commit/d1e433161577baaa9fb36951b162bf81c2a5b59c", "message": "Merge branch 'master' into jaycarlton/RW-5371", "committedDate": "2020-08-11T14:56:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY2NTI1NA==", "url": "https://github.com/all-of-us/workbench/pull/3869#discussion_r468665254", "bodyText": "spelling", "author": "jmthibault79", "createdAt": "2020-08-11T15:22:16Z", "path": "api/src/main/java/org/pmiops/workbench/reporting/ReportingUploadServiceImpl.java", "diffHunk": "@@ -61,11 +64,20 @@ private TableResult executeWithTimeout(QueryJobConfiguration job) {\n \n   private List<QueryJobConfiguration> getJobs(ReportingSnapshot reportingSnapshot) {\n     final QueryParameterValue snapshotTimestamp = getTimestampValue(reportingSnapshot);\n-    return ImmutableList.of(\n-        researcherJobBuilder.build(\n-            qualifyTableName(\"researcher\"), reportingSnapshot.getResearchers(), snapshotTimestamp),\n-        workspaceJobBuilder.build(\n-            qualifyTableName(\"workspace\"), reportingSnapshot.getWorkspaces(), snapshotTimestamp));\n+    final ImmutableList.Builder<QueryJobConfiguration> resultBuilder = new Builder<>();\n+    Lists.partition(reportingSnapshot.getResearchers(), INSERT_ROW_COUNT).stream()\n+        .map(\n+            researchers ->\n+                researcherJobBuilder.build(\n+                    qualifyTableName(\"researcher\"), researchers, snapshotTimestamp))\n+        .forEach(resultBuilder::add);\n+    Lists.partition(reportingSnapshot.getWorkspaces(), INSERT_ROW_COUNT).stream()\n+        .map(\n+            workrspaces ->", "originalCommit": "8323c1a853c24f5e58aa3ed4e7f96eb4cfd41afd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY2ODU0Mw==", "url": "https://github.com/all-of-us/workbench/pull/3869#discussion_r468668543", "bodyText": "This assertion is for the final job and therefore should be get(5)", "author": "jmthibault79", "createdAt": "2020-08-11T15:26:45Z", "path": "api/src/test/java/org/pmiops/workbench/reporting/ReportingUploadServiceTest.java", "diffHunk": "@@ -128,4 +129,45 @@ public void testUploadSnapshot() {\n \n     assertThat(expandedQuery).containsMatch(\"INSERT\\\\s+INTO\");\n   }\n+\n+  @Test\n+  public void testUploadSnapshot_batchInserts() {\n+    final ReportingSnapshot largeSnapshot =\n+        new ReportingSnapshot().captureTimestamp(NOW.toEpochMilli());\n+    // It's certainly possible to make the batch size an environment configuration value and\n+    // inject it so that we don't need this many rows in the test, but I didn't think that was\n+    // necessarily a good enoughh reason to add configurable state.\n+    final List<ReportingResearcher> researchers =\n+        IntStream.range(0, 2001)\n+            .mapToObj(\n+                id ->\n+                    new ReportingResearcher()\n+                        .username(\"bill@aou.biz\")\n+                        .firstName(\"Bill\")\n+                        .isDisabled(false)\n+                        .researcherId((long) id))\n+            .collect(ImmutableList.toImmutableList());\n+    largeSnapshot.setResearchers(researchers);\n+    largeSnapshot.setWorkspaces(\n+        ImmutableList.of(\n+            new ReportingWorkspace()\n+                .name(\"Circle K\")\n+                .creationTime(THEN.toEpochMilli())\n+                .fakeSize(4444L)\n+                .creatorId(101L)));\n+\n+    reportingUploadService.uploadSnapshot(largeSnapshot);\n+    verify(mockBigQueryService, times(6))\n+        .executeQuery(queryJobConfigurationCaptor.capture(), anyLong());\n+\n+    final List<QueryJobConfiguration> jobs = queryJobConfigurationCaptor.getAllValues();\n+    assertThat(jobs).hasSize(6);\n+    final int researcherColumnCount = 4;\n+    final int workspaceColumnCount = 5;\n+\n+    assertThat(jobs.get(0).getNamedParameters()).hasSize(researcherColumnCount * 500 + 1);\n+    assertThat(jobs.get(4).getNamedParameters()).hasSize(researcherColumnCount * 1 + 1);\n+\n+    assertThat(jobs.get(4).getNamedParameters()).hasSize(workspaceColumnCount * 1 + 1);", "originalCommit": "8323c1a853c24f5e58aa3ed4e7f96eb4cfd41afd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY3NzgxNA==", "url": "https://github.com/all-of-us/workbench/pull/3869#discussion_r468677814", "bodyText": "Circle test is correctly failing here", "author": "jmthibault79", "createdAt": "2020-08-11T15:39:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY2ODU0Mw=="}], "type": "inlineReview"}, {"oid": "81d641a75165866a4525cc1c0635a5511c5afe1c", "url": "https://github.com/all-of-us/workbench/commit/81d641a75165866a4525cc1c0635a5511c5afe1c", "message": "Merge branch 'master' into jaycarlton/RW-5371", "committedDate": "2020-08-12T20:38:44Z", "type": "commit"}, {"oid": "892e7e4976089fb9ddd858cd0deddbb6b44b0527", "url": "https://github.com/all-of-us/workbench/commit/892e7e4976089fb9ddd858cd0deddbb6b44b0527", "message": "fix test", "committedDate": "2020-08-12T20:50:32Z", "type": "commit"}]}