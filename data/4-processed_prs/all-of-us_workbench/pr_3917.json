{"pr_number": 3917, "pr_title": "[risk=no][RW-5446] Correct issues with ProtectedRoutes routing component", "pr_createdAt": "2020-08-25T21:01:21Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3917", "timeline": [{"oid": "32c173b9b958f10f5e92583e3ec1a5fac831ce04", "url": "https://github.com/all-of-us/workbench/commit/32c173b9b958f10f5e92583e3ec1a5fac831ce04", "message": "Move guard check to individual routes", "committedDate": "2020-08-25T16:09:24Z", "type": "commit"}, {"oid": "5320cf97eb2f5c6f3f8bf3fbd1d2684444458f54", "url": "https://github.com/all-of-us/workbench/commit/5320cf97eb2f5c6f3f8bf3fbd1d2684444458f54", "message": "Allow protected routes to be nested or siblings", "committedDate": "2020-08-25T20:23:23Z", "type": "commit"}, {"oid": "79e09775df6bf0abc27050ddac2385e4461e40e8", "url": "https://github.com/all-of-us/workbench/commit/79e09775df6bf0abc27050ddac2385e4461e40e8", "message": "Merge with master", "committedDate": "2020-08-25T20:34:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg1NjkyNw==", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r476856927", "bodyText": "What's the purpose of putting children in an array, only to immediately flatten them?", "author": "calbach", "createdAt": "2020-08-25T23:29:20Z", "path": "ui/src/app/components/app-router.tsx", "diffHunk": "@@ -38,21 +38,36 @@ const NavRedirect = ({path}) => {\n   return null;\n };\n \n-export const AppRoute = ({path, data = {}, component: Component}): React.ReactElement => {\n+export const AppRoute = ({path, data = {}, guards = [], component: Component}): React.ReactElement => {\n   const routeParams = useParams();\n   const routeHistory = useHistory();\n \n-  return <Route exact={true} path={path} >\n-    <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>\n+  return <Route exact={true} path={path} render={\n+    () => {\n+      const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n+      return redirectPath\n+        ? <NavRedirect path={redirectPath}/>\n+        : <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>;\n+    }}>\n   </Route>;\n };\n \n export const ProtectedRoutes = (\n   {guards, children}: {guards: Guard[], children: any }): React.ReactElement => {\n-  const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n \n-  return redirectPath ? <NavRedirect path={redirectPath}/>\n-  : <Fragment>{children}</Fragment>;\n+  // Pass the guards to the individual routes. Be sure not to overwrite any existing guards\n+  const guardedChildren = fp.flow(\n+    fp.flatten,", "originalCommit": "79e09775df6bf0abc27050ddac2385e4461e40e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyODgwMQ==", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r477228801", "bodyText": "If a component has a single react child it will not create an array of children - it will be the individual item. If there are multiple children they will already be in an array. I want to ensure we are always dealing with an array of children, I flatten in case children is already an array, and it ends up getting nested.", "author": "petesantos", "createdAt": "2020-08-26T11:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg1NjkyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2MTE3OQ==", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r476861179", "bodyText": "I gather children is a map of keys -> react elements. I'm a bit confused though, since the previous approach rendered this directly, and your new approach appears to instead render an array of elements. Does React just support either?", "author": "calbach", "createdAt": "2020-08-25T23:33:24Z", "path": "ui/src/app/components/app-router.tsx", "diffHunk": "@@ -38,21 +38,36 @@ const NavRedirect = ({path}) => {\n   return null;\n };\n \n-export const AppRoute = ({path, data = {}, component: Component}): React.ReactElement => {\n+export const AppRoute = ({path, data = {}, guards = [], component: Component}): React.ReactElement => {\n   const routeParams = useParams();\n   const routeHistory = useHistory();\n \n-  return <Route exact={true} path={path} >\n-    <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>\n+  return <Route exact={true} path={path} render={\n+    () => {\n+      const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n+      return redirectPath\n+        ? <NavRedirect path={redirectPath}/>\n+        : <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>;\n+    }}>\n   </Route>;\n };\n \n export const ProtectedRoutes = (\n   {guards, children}: {guards: Guard[], children: any }): React.ReactElement => {\n-  const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n \n-  return redirectPath ? <NavRedirect path={redirectPath}/>\n-  : <Fragment>{children}</Fragment>;\n+  // Pass the guards to the individual routes. Be sure not to overwrite any existing guards\n+  const guardedChildren = fp.flow(\n+    fp.flatten,\n+    fp.toPairs,\n+    fp.map(\n+      ([key, element]: [string, React.ReactElement]) => {\n+        const {guards: elementGuards = []} = element.props;\n+        return React.cloneElement(element, {key, guards: [...elementGuards, ...guards]});\n+      }\n+    )\n+  )([children]);", "originalCommit": "79e09775df6bf0abc27050ddac2385e4461e40e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyOTkzNw==", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r477229937", "bodyText": "children can be a react element or an array of react elements. React does support arrays of elements.", "author": "petesantos", "createdAt": "2020-08-26T11:30:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2MTE3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2NjIxMg==", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r477266212", "bodyText": "I updated the type for children to help clarify this in the code and I added a comment.\nAnd to expand on my previous comment - children can be many different types in react, but for the purposes of ProtectedRoutes - it should be a react element or array of elements. I could make it more specifically an AppRoute / array of routes. But I would like to leave that as an exercise for a future PR to work on my Typescript.", "author": "petesantos", "createdAt": "2020-08-26T12:37:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2MTE3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2MjM0OQ==", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r476862349", "bodyText": "This is the opposite order of guard execution than what I would expect, i.e. was expecting [...guards, ...elementGuards], which should track with increasing specificity.", "author": "calbach", "createdAt": "2020-08-25T23:34:30Z", "path": "ui/src/app/components/app-router.tsx", "diffHunk": "@@ -38,21 +38,36 @@ const NavRedirect = ({path}) => {\n   return null;\n };\n \n-export const AppRoute = ({path, data = {}, component: Component}): React.ReactElement => {\n+export const AppRoute = ({path, data = {}, guards = [], component: Component}): React.ReactElement => {\n   const routeParams = useParams();\n   const routeHistory = useHistory();\n \n-  return <Route exact={true} path={path} >\n-    <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>\n+  return <Route exact={true} path={path} render={\n+    () => {\n+      const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n+      return redirectPath\n+        ? <NavRedirect path={redirectPath}/>\n+        : <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>;\n+    }}>\n   </Route>;\n };\n \n export const ProtectedRoutes = (\n   {guards, children}: {guards: Guard[], children: any }): React.ReactElement => {\n-  const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n \n-  return redirectPath ? <NavRedirect path={redirectPath}/>\n-  : <Fragment>{children}</Fragment>;\n+  // Pass the guards to the individual routes. Be sure not to overwrite any existing guards\n+  const guardedChildren = fp.flow(\n+    fp.flatten,\n+    fp.toPairs,\n+    fp.map(\n+      ([key, element]: [string, React.ReactElement]) => {\n+        const {guards: elementGuards = []} = element.props;\n+        return React.cloneElement(element, {key, guards: [...elementGuards, ...guards]});", "originalCommit": "79e09775df6bf0abc27050ddac2385e4461e40e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIzMDgwMA==", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r477230800", "bodyText": "fixed", "author": "petesantos", "createdAt": "2020-08-26T11:31:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2MjM0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2ODU2Nw==", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r476868567", "bodyText": "Existing issue, but we're not treating this as state, right? so there is nothing to cause a route to be rerendered as a result of a registration status change, for example?\nI think this issue is purely hypothetical for now, since Angular routing should cause this to be reevaluated on every navigate anyways.", "author": "calbach", "createdAt": "2020-08-25T23:40:04Z", "path": "ui/src/app/app-routing.tsx", "diffHunk": "@@ -23,11 +24,10 @@ const signInGuard: Guard = {\n   redirectPath: '/login'\n };\n \n-// This will be added back in after the protectedRoutes fix\n-// const registrationGuard: Guard = {\n-//   allowed: (): boolean => hasRegisteredAccess(profileStore.get().profile.dataAccessLevel),\n-//   redirectPath: '/'\n-// };\n+const registrationGuard: Guard = {\n+  allowed: (): boolean => hasRegisteredAccess(profileStore.get().profile.dataAccessLevel),", "originalCommit": "79e09775df6bf0abc27050ddac2385e4461e40e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIzNDAwMw==", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r477234003", "bodyText": "That is correct. The guards are based on stores at the moment. We could use a hook in the top level router to subscribe to the store and re-render on update.", "author": "petesantos", "createdAt": "2020-08-26T11:38:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2ODU2Nw=="}], "type": "inlineReview"}, {"oid": "07ebef66ca58607df1097ab28c31b1ce170f1009", "url": "https://github.com/all-of-us/workbench/commit/07ebef66ca58607df1097ab28c31b1ce170f1009", "message": "Add comments, correct guard execution", "committedDate": "2020-08-26T11:31:42Z", "type": "commit"}, {"oid": "1e36c68982f8d1ed13303e7e2a38cbeaf994c7a7", "url": "https://github.com/all-of-us/workbench/commit/1e36c68982f8d1ed13303e7e2a38cbeaf994c7a7", "message": "Update children type for ProtectedRoutes", "committedDate": "2020-08-26T12:28:08Z", "type": "commit"}]}