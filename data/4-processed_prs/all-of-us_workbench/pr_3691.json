{"pr_number": 3691, "pr_title": "[risk=NO][RW-4880]Update validation messages for character limits", "pr_createdAt": "2020-06-19T13:58:56Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3691", "timeline": [{"oid": "a1c60c6710a1b100ed7335af3b526fdaeb1670bf", "url": "https://github.com/all-of-us/workbench/commit/a1c60c6710a1b100ed7335af3b526fdaeb1670bf", "message": "Update validation messages for character limits", "committedDate": "2020-06-18T21:58:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwNTUzMg==", "url": "https://github.com/all-of-us/workbench/pull/3691#discussion_r442905532", "bodyText": "nit: in title case this should be Disease of Focus", "author": "als364", "createdAt": "2020-06-19T15:28:21Z", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -876,38 +880,35 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n           populationDetails.includes(SpecificPopulationEnum.OTHER)) {\n         values = {...values, otherPopulationDetails};\n         constraints['otherPopulationDetails'] = {\n-          presence: {\n-            allowEmpty: false\n-          },\n           length: {\n-            maximum: 100\n+            minimum: 1,\n+            maximum: 100,\n+            ...lengthMessages('Specific Population Other')\n           }\n         };\n       }\n       if (diseaseFocusedResearch) {\n         values = {...values, diseaseOfFocus};\n         constraints['diseaseOfFocus'] = {\n-          presence: {\n-            allowEmpty: false\n-          },\n           length: {\n-            maximum: 80\n+            minimum: 1,\n+            maximum: 80,\n+            ...lengthMessages('Disease Of Focus')", "originalCommit": "a1c60c6710a1b100ed7335af3b526fdaeb1670bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwNTY3NQ==", "url": "https://github.com/all-of-us/workbench/pull/3691#discussion_r442905675", "bodyText": "nit: this should probably be something clearer like Other specific populations", "author": "als364", "createdAt": "2020-06-19T15:28:37Z", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -876,38 +880,35 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n           populationDetails.includes(SpecificPopulationEnum.OTHER)) {\n         values = {...values, otherPopulationDetails};\n         constraints['otherPopulationDetails'] = {\n-          presence: {\n-            allowEmpty: false\n-          },\n           length: {\n-            maximum: 100\n+            minimum: 1,\n+            maximum: 100,\n+            ...lengthMessages('Specific Population Other')", "originalCommit": "a1c60c6710a1b100ed7335af3b526fdaeb1670bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwNTg4OQ==", "url": "https://github.com/all-of-us/workbench/pull/3691#discussion_r442905889", "bodyText": "nit: this should probably be something like Other methods of disseminating research findings", "author": "als364", "createdAt": "2020-06-19T15:29:02Z", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -876,38 +880,35 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n           populationDetails.includes(SpecificPopulationEnum.OTHER)) {\n         values = {...values, otherPopulationDetails};\n         constraints['otherPopulationDetails'] = {\n-          presence: {\n-            allowEmpty: false\n-          },\n           length: {\n-            maximum: 100\n+            minimum: 1,\n+            maximum: 100,\n+            ...lengthMessages('Specific Population Other')\n           }\n         };\n       }\n       if (diseaseFocusedResearch) {\n         values = {...values, diseaseOfFocus};\n         constraints['diseaseOfFocus'] = {\n-          presence: {\n-            allowEmpty: false\n-          },\n           length: {\n-            maximum: 80\n+            minimum: 1,\n+            maximum: 80,\n+            ...lengthMessages('Disease Of Focus')\n           }\n         };\n       }\n       if (disseminateResearchFindingList &&\n           disseminateResearchFindingList.includes(DisseminateResearchEnum.OTHER)) {\n         values = {...values, otherDisseminateResearchFindings};\n         constraints['otherDisseminateResearchFindings'] = {\n-          presence: {\n-            allowEmpty: false\n-          },\n           length: {\n-            maximum: 100\n+            minimum: 1,\n+            maximum: 100,\n+            ...lengthMessages('Disseminate Research Findings Other')", "originalCommit": "a1c60c6710a1b100ed7335af3b526fdaeb1670bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2a83ef1a33b65c610f4f6d45a815b83d44421221", "url": "https://github.com/all-of-us/workbench/commit/2a83ef1a33b65c610f4f6d45a815b83d44421221", "message": "Correct blank space validation", "committedDate": "2020-06-19T15:41:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MDAzNQ==", "url": "https://github.com/all-of-us/workbench/pull/3691#discussion_r442950035", "bodyText": "nit: this comment is now annotating the wrong block. Move the helper function above it?", "author": "gjuggler", "createdAt": "2020-06-19T16:57:31Z", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -839,30 +839,38 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n       // TODO: This validation spec should include error messages which get", "originalCommit": "2a83ef1a33b65c610f4f6d45a815b83d44421221", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MjAxNQ==", "url": "https://github.com/all-of-us/workbench/pull/3691#discussion_r442952015", "bodyText": "To help future maintainers, please add a comment up here indicating why these constraints can be left without a prefix string \u2013\u00a0e.g. \"because it requires HTML formatting, the prefix string is omitted here and included in the React template below\".", "author": "gjuggler", "createdAt": "2020-06-19T17:02:02Z", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -839,30 +839,38 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n       // TODO: This validation spec should include error messages which get\n       // surfaced directly. Currently these constraints are entirely separate\n       // from the user facing error strings we render.\n+      const lengthMessages = (prefix = '') => ({\n+        tooShort: `${prefix} cannot be blank`,\n+        tooLong: `${prefix} cannot exceed %{count} characters`\n+      });\n+\n       const constraints: object = {\n         name: {\n-          length: { minimum: 1, maximum: 80 }\n+          length: { minimum: 1, maximum: 80, ...lengthMessages('Name')}\n         },\n         billingAccountName: { presence: true },\n-        intendedStudy: { length: { minimum: 1, maximum: 1000 } },\n+        intendedStudy: { length: { minimum: 1, maximum: 1000, ...lengthMessages() } },", "originalCommit": "2a83ef1a33b65c610f4f6d45a815b83d44421221", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}