{"pr_number": 3663, "pr_title": "[RW-4383][risk=no] Puppeteer DataSet test", "pr_createdAt": "2020-06-11T22:22:26Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3663", "timeline": [{"oid": "5f350dbb5656df5e02dcda3e590e79621d4495d1", "url": "https://github.com/all-of-us/workbench/commit/5f350dbb5656df5e02dcda3e590e79621d4495d1", "message": "dataset test", "committedDate": "2020-06-12T22:58:06Z", "type": "forcePushed"}, {"oid": "ac2edca9aa7cd6df630b30f0f4c853199d6b6c35", "url": "https://github.com/all-of-us/workbench/commit/ac2edca9aa7cd6df630b30f0f4c853199d6b6c35", "message": "dataset test", "committedDate": "2020-06-13T00:03:29Z", "type": "commit"}, {"oid": "f54c610d17a16e69223b620c2b03ef7aa96da797", "url": "https://github.com/all-of-us/workbench/commit/f54c610d17a16e69223b620c2b03ef7aa96da797", "message": "dupl code reduction", "committedDate": "2020-06-13T00:03:29Z", "type": "commit"}, {"oid": "f54c610d17a16e69223b620c2b03ef7aa96da797", "url": "https://github.com/all-of-us/workbench/commit/f54c610d17a16e69223b620c2b03ef7aa96da797", "message": "dupl code reduction", "committedDate": "2020-06-13T00:03:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NDEzOA==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439694138", "bodyText": "In the future, if large refactoring changes like this can be split out from the PR, that would be very helpful for giving quicker review turnaround. To review 500+ LOC all at once, I need to set aside a significant amount of time. In comparison, ~400 lines of mechanical refactoring changes alone is easy - and 100 lines of new tests is easy.", "author": "calbach", "createdAt": "2020-06-13T01:03:06Z", "path": "e2e/app/element/base-element.ts", "diffHunk": "@@ -60,10 +60,7 @@ export default class BaseElement extends Container {\n    *  return await handle.jsonValue();\n    */\n   async getProperty(propertyName: string): Promise<unknown> {\n-    if (this.element == null) {\n-      throw new Error('The element is undefined.');\n-    }\n-    const p = await this.element.asElement().getProperty(propertyName);\n+    const p = await (await this.asElementHandle()).getProperty(propertyName);", "originalCommit": "f54c610d17a16e69223b620c2b03ef7aa96da797", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzOTU0NQ==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439839545", "bodyText": "Yes, good feedback. I will try do that in future. Sorry about this. As for why, I was improving code to address an annoyance in this class (this.element in many functions is undefined if it wasn't initialized). I went ahead to address it and changed other functions to get consistency in code. because I would otherwise forget about it later.", "author": "aweng98", "createdAt": "2020-06-14T15:13:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NDEzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTA1Ng==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439695056", "bodyText": "That doesn't make sense - I suspect something else was going on when you observed this. Is this reproducible?", "author": "calbach", "createdAt": "2020-06-13T01:11:56Z", "path": "e2e/app/page/data-page.ts", "diffHunk": "@@ -50,30 +56,91 @@ export default class DataPage extends AuthenticatedPage {\n    * @param tabName\n    */\n   async openTab(tabName: LabelAlias): Promise<void> {\n-    const selector = `//*[@id=\"workspace-top-nav-bar\"]/*[@aria-selected and @role=\"button\" and text()=\"${tabName}\"]`;\n+    const selector = `//*[(@aria-selected | @tabindex) and @role=\"button\" and text()=\"${tabName}\"]`;\n     const tab = await this.page.waitForXPath(selector, {visible: true});\n     return tab.click();\n   }\n \n-  async getAddDataSetsButton(): Promise<ClrIconLink> {\n+  async getAddDatasetButton(): Promise<ClrIconLink> {\n     return ClrIconLink.findByName(this.page, {name: LabelAlias.Datasets, iconShape: 'plus-circle'});\n   }\n \n   async getAddCohortsButton(): Promise<ClrIconLink> {\n     return ClrIconLink.findByName(this.page, {name: LabelAlias.Cohorts, iconShape: 'plus-circle'});\n   }\n \n+  // Click Add Datasets button.\n+  async clickAddDatasetButton(waitForDatasetBuildPage: boolean = true): Promise<DatasetBuildPage> {\n+    const addDatasetButton = await this.getAddDatasetButton();\n+    await addDatasetButton.clickAndWait();\n+\n+    const datasetPage = new DatasetBuildPage(this.page);\n+    // wait for Dataset Build page load and ready.\n+    if (waitForDatasetBuildPage) {\n+      await datasetPage.waitForLoad();\n+    }\n+    return datasetPage;\n+  }\n+\n   /**\n    * Delete cohort by look up its name using Ellipsis menu.\n    * @param {string} cohortName\n    */\n   async deleteCohort(cohortName: string): Promise<string> {\n     const cohortCard = await DataResourceCard.findCard(this.page, cohortName);\n-    const menu = await cohortCard.getEllipsis();\n+    const menu = cohortCard.getEllipsis();\n     await menu.clickAction(EllipsisMenuAction.DELETE, false);\n     const dialogContent = await (new CohortBuildPage(this.page)).deleteConfirmationDialog();\n     console.log(`Cohort \"${cohortName}\" deleted.`);\n     return dialogContent;\n   }\n \n+  /**\n+   * Delete Dataset thru Ellipsis menu located inside the Dataset Resource card.\n+   * @param {string} datasetName\n+   */\n+  async deleteDataset(datasetName: string): Promise<string> {\n+    const dataSetCard = await DataResourceCard.findCard(this.page, datasetName);\n+    const menu = dataSetCard.getEllipsis();\n+    await menu.clickAction(EllipsisMenuAction.DELETE, false);\n+\n+    const dialog = new Dialog(this.page);\n+    const dialogContentText = await dialog.getContent();\n+    const deleteButton = await Button.findByName(this.page, {type: ElementType.Button, normalizeSpace: 'Delete Dataset'}, dialog);\n+    await Promise.all([\n+      deleteButton.click(),\n+      dialog.waitUntilDialogIsClosed(),\n+    ]);\n+    await waitWhileLoading(this.page);\n+\n+    console.log(`Dataset \"${datasetName}\" deleted.`);\n+    return dialogContentText;\n+  }\n+\n+  /**\n+   * Rename Dataset thru the Ellipsis menu located inside the Dataset Resource card.\n+   * @param {string} datasetName\n+   * @param {string} newDatasetName\n+   */\n+  async renameDataset(datasetName: string, newDatasetName: string): Promise<void> {\n+    const card = await DataResourceCard.findCard(this.page, datasetName);\n+    const menu = card.getEllipsis();\n+    await menu.clickAction(EllipsisMenuAction.RenameDataset, false);\n+\n+    const dialog = new Dialog(this.page);\n+\n+    const newNameTextbox = new Textbox(this.page, '//*[@id=\"new-name\"]');\n+    await newNameTextbox.type(newDatasetName);\n+\n+    const descriptionTextarea = await Textarea.findByName(this.page, {containsText: 'Description:'}, dialog);\n+    await descriptionTextarea.type('Puppeteer automation rename dataset.');\n+\n+    const renameButton = await Button.findByName(this.page, {normalizeSpace: 'Rename Dataset'}, dialog);\n+    await Promise.all([\n+      renameButton.click(),\n+      dialog.waitUntilDialogIsClosed(120000), // Rename Dataset can be very slow sometimes.", "originalCommit": "f54c610d17a16e69223b620c2b03ef7aa96da797", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MDI1OA==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439840258", "bodyText": "I don't remember much now. It could be just \"test\" env was \"busy\" at the time. I'm removing the 2 min timeout and comment.", "author": "aweng98", "createdAt": "2020-06-14T15:21:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTA1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTE5Nw==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439695197", "bodyText": "nit: I don't think the boolean type should be necessary in this situation; type I believe should just be implicit based ont he default value", "author": "calbach", "createdAt": "2020-06-13T01:13:12Z", "path": "e2e/app/page/dataset-build-page.ts", "diffHunk": "@@ -0,0 +1,99 @@\n+import Table from 'app/component/table';\n+import Button from 'app/element/button';\n+import Checkbox from 'app/element/checkbox';\n+import {waitWhileLoading} from 'utils/test-utils';\n+import {waitForDocumentTitle} from 'utils/waits-utils';\n+import {xPathOptionToXpath} from 'app/element/xpath-defaults';\n+import {ElementType} from 'app/xpath-options';\n+import AuthenticatedPage from './authenticated-page';\n+import CohortBuildPage from './cohort-build-page';\n+\n+const PageTitle = 'Dataset Page';\n+\n+enum LabelAlias {\n+  SelectValues = 'Select Values',\n+  SelectConceptSets = 'Select Concept Sets',\n+  SelectCohorts = 'Select Cohorts',\n+}\n+\n+export default class DatasetBuildPage extends AuthenticatedPage {\n+\n+  async isLoaded(): Promise<boolean> {\n+    try {\n+      await Promise.all([\n+        waitForDocumentTitle(this.page, PageTitle),\n+        waitWhileLoading(this.page),\n+      ]);\n+      return true;\n+    } catch (e) {\n+      console.log(`DatasetBuildPage isLoaded() encountered ${e}`);\n+      return false;\n+    }\n+  }\n+\n+  async getAddCohortsButton(): Promise<Button> {\n+    const buttonXpath = xPathOptionToXpath({name: LabelAlias.SelectCohorts, ancestorLevel: 3, iconShape: 'is-solid'});\n+    return new Button(this.page, buttonXpath);\n+  }\n+\n+  async clickAddCohortsButton(): Promise<CohortBuildPage> {\n+    const addCohortButton = await this.getAddCohortsButton();\n+    await addCohortButton.clickAndWait();\n+    const cohortPage = new CohortBuildPage(this.page);\n+    return cohortPage.waitForLoad();\n+  }\n+\n+  async selectCohorts(cohortNames: string[]): Promise<void> {\n+    for (const cohortName of cohortNames) {\n+      const xpath = this.getCheckboxXpath(LabelAlias.SelectCohorts, cohortName);\n+      const checkbox = new Checkbox(this.page, xpath);\n+      await checkbox.check();\n+    }\n+  }\n+\n+  async selectConceptSets(conceptSetNames: string[]): Promise<void> {\n+    for (const conceptSetName of conceptSetNames) {\n+      const xpath = this.getCheckboxXpath(LabelAlias.SelectConceptSets, conceptSetName);\n+      const checkbox = new Checkbox(this.page, xpath);\n+      await checkbox.check();\n+      await waitWhileLoading(this.page);\n+    }\n+  }\n+\n+  async selectValues(selectAll: boolean = false, values?: string[]): Promise<void> {", "originalCommit": "f54c610d17a16e69223b620c2b03ef7aa96da797", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTQyNQ==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439695425", "bodyText": "It seems like this should really be two different methods. Overloading both capabilities here is making the interaction a bit confusing in my opinion", "author": "calbach", "createdAt": "2020-06-13T01:15:35Z", "path": "e2e/app/page/dataset-build-page.ts", "diffHunk": "@@ -0,0 +1,99 @@\n+import Table from 'app/component/table';\n+import Button from 'app/element/button';\n+import Checkbox from 'app/element/checkbox';\n+import {waitWhileLoading} from 'utils/test-utils';\n+import {waitForDocumentTitle} from 'utils/waits-utils';\n+import {xPathOptionToXpath} from 'app/element/xpath-defaults';\n+import {ElementType} from 'app/xpath-options';\n+import AuthenticatedPage from './authenticated-page';\n+import CohortBuildPage from './cohort-build-page';\n+\n+const PageTitle = 'Dataset Page';\n+\n+enum LabelAlias {\n+  SelectValues = 'Select Values',\n+  SelectConceptSets = 'Select Concept Sets',\n+  SelectCohorts = 'Select Cohorts',\n+}\n+\n+export default class DatasetBuildPage extends AuthenticatedPage {\n+\n+  async isLoaded(): Promise<boolean> {\n+    try {\n+      await Promise.all([\n+        waitForDocumentTitle(this.page, PageTitle),\n+        waitWhileLoading(this.page),\n+      ]);\n+      return true;\n+    } catch (e) {\n+      console.log(`DatasetBuildPage isLoaded() encountered ${e}`);\n+      return false;\n+    }\n+  }\n+\n+  async getAddCohortsButton(): Promise<Button> {\n+    const buttonXpath = xPathOptionToXpath({name: LabelAlias.SelectCohorts, ancestorLevel: 3, iconShape: 'is-solid'});\n+    return new Button(this.page, buttonXpath);\n+  }\n+\n+  async clickAddCohortsButton(): Promise<CohortBuildPage> {\n+    const addCohortButton = await this.getAddCohortsButton();\n+    await addCohortButton.clickAndWait();\n+    const cohortPage = new CohortBuildPage(this.page);\n+    return cohortPage.waitForLoad();\n+  }\n+\n+  async selectCohorts(cohortNames: string[]): Promise<void> {\n+    for (const cohortName of cohortNames) {\n+      const xpath = this.getCheckboxXpath(LabelAlias.SelectCohorts, cohortName);\n+      const checkbox = new Checkbox(this.page, xpath);\n+      await checkbox.check();\n+    }\n+  }\n+\n+  async selectConceptSets(conceptSetNames: string[]): Promise<void> {\n+    for (const conceptSetName of conceptSetNames) {\n+      const xpath = this.getCheckboxXpath(LabelAlias.SelectConceptSets, conceptSetName);\n+      const checkbox = new Checkbox(this.page, xpath);\n+      await checkbox.check();\n+      await waitWhileLoading(this.page);\n+    }\n+  }\n+\n+  async selectValues(selectAll: boolean = false, values?: string[]): Promise<void> {", "originalCommit": "f54c610d17a16e69223b620c2b03ef7aa96da797", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MDgxNg==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439840816", "bodyText": "Makes sense. Two methods after split: selectAllValues() and selectValues().", "author": "aweng98", "createdAt": "2020-06-14T15:27:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTQyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTUzMg==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439695532", "bodyText": "These should probably be constants", "author": "calbach", "createdAt": "2020-06-13T01:16:31Z", "path": "e2e/app/page/dataset-save-modal.ts", "diffHunk": "@@ -0,0 +1,50 @@\n+import {Page} from 'puppeteer';\n+import Dialog, {ButtonLabel} from 'app/component/dialog';\n+import {makeRandomName} from 'utils/str-utils';\n+import {waitWhileLoading} from 'utils/test-utils';\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+\n+export default class DatasetSaveModal extends Dialog {\n+\n+  constructor(page: Page) {\n+    super(page);\n+  }\n+\n+  /**\n+   * Handle Save or Update dialog.\n+   * @param {boolean} isExportToNotebook If True, select Export To Notebook checkbox.\n+   * @param {boolean} isUpdate If true, click Update button. If False, click Save button.\n+   * @param {string} notebookName New notebook name to be created or select an existing notebook.\n+   * @param {String} language Notebook programming language.", "originalCommit": "f54c610d17a16e69223b620c2b03ef7aa96da797", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NTM5Mg==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439845392", "bodyText": "\ud83d\udc4d\nexport enum Language {\n  Python = 'Python',\n  R = 'R',\n}", "author": "aweng98", "createdAt": "2020-06-14T16:18:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTUzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTU3NQ==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439695575", "bodyText": "This comment seems to be the opposite of what the following code is doing", "author": "calbach", "createdAt": "2020-06-13T01:16:59Z", "path": "e2e/app/page/dataset-save-modal.ts", "diffHunk": "@@ -0,0 +1,50 @@\n+import {Page} from 'puppeteer';\n+import Dialog, {ButtonLabel} from 'app/component/dialog';\n+import {makeRandomName} from 'utils/str-utils';\n+import {waitWhileLoading} from 'utils/test-utils';\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+\n+export default class DatasetSaveModal extends Dialog {\n+\n+  constructor(page: Page) {\n+    super(page);\n+  }\n+\n+  /**\n+   * Handle Save or Update dialog.\n+   * @param {boolean} isExportToNotebook If True, select Export To Notebook checkbox.\n+   * @param {boolean} isUpdate If true, click Update button. If False, click Save button.\n+   * @param {string} notebookName New notebook name to be created or select an existing notebook.\n+   * @param {String} language Notebook programming language.\n+   */\n+  async saveDataset(opts:\n+                       {isExportToNotebook?: boolean, isUpdate?: boolean, notebookName?: string, language?: string} = {}): Promise<string> {\n+    const {isExportToNotebook = false, isUpdate = false, notebookName, language = 'Python'} = opts;\n+    const newDatasetName = makeRandomName();\n+\n+    const nameTextbox = await this.waitForTextbox('Dataset Name');\n+    await nameTextbox.type(newDatasetName);\n+\n+    // Export to Notebook checkbox is checked by default\n+    const exportCheckbox = await this.waitForCheckbox('Export to notebook');\n+      // Not Export to Notebook", "originalCommit": "f54c610d17a16e69223b620c2b03ef7aa96da797", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NTg4OQ==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439845889", "bodyText": "corrected comments.", "author": "aweng98", "createdAt": "2020-06-14T16:24:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTU3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTcyOA==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439695728", "bodyText": "The default will already be selected. If you intend to test the default behavior, I would not touch the selector", "author": "calbach", "createdAt": "2020-06-13T01:18:44Z", "path": "e2e/app/page/workspaces-page.ts", "diffHunk": "@@ -88,8 +88,8 @@ export default class WorkspacesPage extends WorkspaceEditPage {\n     await (await editPage.getWorkspaceNameTextbox()).type(workspaceName);\n     await (await editPage.getWorkspaceNameTextbox()).tabKey();\n \n-    // select Synthetic Data Set 3\n-    await editPage.selectDataSet('3');\n+    // select the default Synthetic Dataset", "originalCommit": "f54c610d17a16e69223b620c2b03ef7aa96da797", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NjQ0Mg==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439846442", "bodyText": "I'd like to keep this if you don't object for following reasons:\n\nExistence of Select menu and options in dropdown.\nSelect menu is not readonly.\nOptions is available and selectable.", "author": "aweng98", "createdAt": "2020-06-14T16:30:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTgwOQ==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439695809", "bodyText": "nit: fix indentation for all comments in this file. These shouldn't be indented deeper than the code", "author": "calbach", "createdAt": "2020-06-13T01:19:46Z", "path": "e2e/tests/datasets/export-to-notebook.spec.ts", "diffHunk": "@@ -0,0 +1,53 @@\n+import {findWorkspace, signIn, waitWhileLoading} from 'utils/test-utils';\n+import DataPage from 'app/page/data-page';\n+import DatasetSaveModal from 'app/page/dataset-save-modal';\n+import {makeRandomName} from 'utils/str-utils';\n+import NotebookPreviewPage from 'app/page/notebook-preview-page';\n+\n+describe('Create Dataset', () => {\n+\n+  beforeEach(async () => {\n+    await signIn(page);\n+  });\n+\n+   /**\n+    * Create new Dataset, export to notebook in Python language\n+    * Finally delete Dataset.\n+    */\n+  test('Export dataset to notebook in Python programming language', async () => {\n+    const workspaceCard = await findWorkspace(page);\n+    await workspaceCard.clickWorkspaceName();\n+\n+      // Click Add Datasets button", "originalCommit": "f54c610d17a16e69223b620c2b03ef7aa96da797", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTk4NQ==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439695985", "bodyText": "Side-note, not for this PR: we should really make this case insensitive at least, if we're depending on text like this", "author": "calbach", "createdAt": "2020-06-13T01:21:18Z", "path": "e2e/tests/datasets/dataset-create.spec.ts", "diffHunk": "@@ -0,0 +1,124 @@\n+import DataResourceCard, {CardType} from 'app/component/data-resource-card';\n+import {ButtonLabel} from 'app/component/dialog';\n+import ClrIconLink from 'app/element/clr-icon-link';\n+import CohortBuildPage from 'app/page/cohort-build-page';\n+import DataPage, {LabelAlias} from 'app/page/data-page';\n+import DatasetSaveModal from 'app/page/dataset-save-modal';\n+import {findWorkspace, signIn, waitWhileLoading} from 'utils/test-utils';\n+import {waitForText} from 'utils/waits-utils';\n+import {EllipsisMenuAction} from 'app/page-identifiers';\n+\n+describe('Create Dataset', () => {\n+\n+  beforeEach(async () => {\n+    await signIn(page);\n+  });\n+\n+  /**\n+   * Create new Dataset without Export to Notebook.\n+   * Then Rename, Delete Dataset.\n+   */\n+  test('Can create Dataset with defaults selections', async () => {\n+    const workspaceCard = await findWorkspace(page);\n+    await workspaceCard.clickWorkspaceName();\n+\n+    // Click Add Datasets button\n+    const dataPage = new DataPage(page);\n+    const datasetPage = await dataPage.clickAddDatasetButton();\n+\n+    await datasetPage.selectCohorts(['All Participants']);\n+    await datasetPage.selectConceptSets(['Demographics', 'All Surveys']);\n+    await datasetPage.clickSaveAndAnalyzeButton();\n+\n+    const saveModal = new DatasetSaveModal(page);\n+    const datasetName = await saveModal.saveDataset();\n+\n+    // Verify create successful\n+    const resourceCard = new DataResourceCard(page);\n+    const dataSetExists = await resourceCard.cardExists(datasetName, CardType.Dataset);\n+    expect(dataSetExists).toBe(true);\n+\n+    // BUG https://precisionmedicineinitiative.atlassian.net/browse/RW-5079\n+    /*\n+    // Rename Dataset\n+    const newDatasetName = makeRandomName();\n+    await dataPage.renameDataset(datasetName, newDatasetName);\n+\n+    // Verify rename successful\n+    const newDatasetExists = await resourceCard.cardNameExists(newDatasetName, CardType.Dataset);\n+    expect(newDatasetExists).toBe(true);\n+    */\n+\n+    // Delete Dataset\n+    const textContent = await dataPage.deleteDataset(datasetName);\n+    expect(textContent).toContain(`Are you sure you want to delete Dataset: ${datasetName}?`);\n+\n+  });\n+\n+  /**\n+   * First, create a new Cohort. Then create a new Dataset with Cohort.\n+   */\n+  test('Can create Dataset with user-defined cohort', async () => {\n+    const workspaceCard = await findWorkspace(page);\n+    await workspaceCard.clickWorkspaceName();\n+\n+    // Click Add Cohorts button\n+    const dataPage = new DataPage(page);\n+    const addCohortsButton = await dataPage.getAddCohortsButton();\n+    await addCohortsButton.clickAndWait();\n+\n+    // Build new Cohort\n+    const cohortBuildPage = new CohortBuildPage(page);\n+    // Include Participants Group 1: Add a Condition\n+    const group1 = cohortBuildPage.findIncludeParticipantsGroup('Group 1');\n+    const modal = await group1.includeDrugs();\n+\n+    // Search for drug hydroxychloroquine\n+    const searchResultsTable = await modal.searchCondition('hydroxychloroquine');\n+    // Add drug in first row result\n+    const nameValue = await searchResultsTable.findCellValue(1, 1);\n+    const addIcon = await ClrIconLink.findByName(page, {containsText: nameValue, iconShape: 'plus-circle'}, modal);\n+    await addIcon.click();\n+\n+    // Click FINISH button. Criteria dialog closes.\n+    await modal.clickButton(ButtonLabel.Finish);\n+    await cohortBuildPage.getTotalCount();\n+\n+    // Save new cohort.\n+    const cohortName = await cohortBuildPage.saveCohortAs();\n+    await waitForText(page, 'Cohort Saved Successfully');", "originalCommit": "f54c610d17a16e69223b620c2b03ef7aa96da797", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0NjcwNg==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439846706", "bodyText": "\ud83d\udc4d A welcome change if it happens.", "author": "aweng98", "createdAt": "2020-06-14T16:33:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NTk4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NjI0Ng==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439696246", "bodyText": "Test description says to delete the dataset - I don't see that part", "author": "calbach", "createdAt": "2020-06-13T01:24:18Z", "path": "e2e/tests/datasets/export-to-notebook.spec.ts", "diffHunk": "@@ -0,0 +1,53 @@\n+import {findWorkspace, signIn, waitWhileLoading} from 'utils/test-utils';\n+import DataPage from 'app/page/data-page';\n+import DatasetSaveModal from 'app/page/dataset-save-modal';\n+import {makeRandomName} from 'utils/str-utils';\n+import NotebookPreviewPage from 'app/page/notebook-preview-page';\n+\n+describe('Create Dataset', () => {\n+\n+  beforeEach(async () => {\n+    await signIn(page);\n+  });\n+\n+   /**\n+    * Create new Dataset, export to notebook in Python language\n+    * Finally delete Dataset.\n+    */\n+  test('Export dataset to notebook in Python programming language', async () => {\n+    const workspaceCard = await findWorkspace(page);\n+    await workspaceCard.clickWorkspaceName();\n+\n+      // Click Add Datasets button\n+    const dataPage = new DataPage(page);\n+    const datasetPage = await dataPage.clickAddDatasetButton();\n+\n+    await datasetPage.selectCohorts(['All Participants']);\n+    await datasetPage.selectConceptSets(['Demographics']);\n+\n+      // Preview table\n+    const previewTable = await datasetPage.getPreviewTable();\n+    expect(await previewTable.exists()).toBe(true);\n+    expect(await previewTable.getRowCount()).toBeGreaterThan(1);\n+\n+    await datasetPage.clickSaveAndAnalyzeButton();\n+\n+    const saveModal = new DatasetSaveModal(page);\n+    const newNotebookName = makeRandomName();\n+    await saveModal.saveDataset({isExportToNotebook: true, notebookName: newNotebookName});\n+    await waitWhileLoading(page);\n+\n+      // Verify Notebook preview. Not going to start the Jupyter notebook.\n+    const notebookPreviewPage = new NotebookPreviewPage(page);\n+    await notebookPreviewPage.waitForLoad();\n+    const currentPageUrl = await page.url();\n+    expect(currentPageUrl).toContain(`notebooks/preview/${newNotebookName}.ipynb`);\n+\n+    const code = await notebookPreviewPage.getFormattedCode();\n+    expect(code).toContain('import pandas');\n+    expect(code).toContain('import os');\n+", "originalCommit": "f54c610d17a16e69223b620c2b03ef7aa96da797", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2ODE3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r439868172", "bodyText": "Missed it. Added delete Dataset and Notebook.", "author": "aweng98", "createdAt": "2020-06-14T21:15:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY5NjI0Ng=="}], "type": "inlineReview"}, {"oid": "3c671a711edb70170e825146cc7f2e4b4064cdd3", "url": "https://github.com/all-of-us/workbench/commit/3c671a711edb70170e825146cc7f2e4b4064cdd3", "message": "PR feedback", "committedDate": "2020-06-14T21:07:02Z", "type": "commit"}, {"oid": "100b12e434cf654e7de52335f734e446810e126c", "url": "https://github.com/all-of-us/workbench/commit/100b12e434cf654e7de52335f734e446810e126c", "message": "minor update", "committedDate": "2020-06-14T21:23:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NDYxOA==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r440344618", "bodyText": "nit: I would expect the default to be true, given the method name. Alternatively, I would probably just remove the default here.", "author": "calbach", "createdAt": "2020-06-15T17:49:03Z", "path": "e2e/app/page/dataset-build-page.ts", "diffHunk": "@@ -0,0 +1,106 @@\n+import Table from 'app/component/table';\n+import Button from 'app/element/button';\n+import Checkbox from 'app/element/checkbox';\n+import {waitWhileLoading} from 'utils/test-utils';\n+import {waitForDocumentTitle} from 'utils/waits-utils';\n+import {xPathOptionToXpath} from 'app/element/xpath-defaults';\n+import {ElementType} from 'app/xpath-options';\n+import AuthenticatedPage from './authenticated-page';\n+import CohortBuildPage from './cohort-build-page';\n+\n+const PageTitle = 'Dataset Page';\n+\n+enum LabelAlias {\n+  SelectValues = 'Select Values',\n+  SelectConceptSets = 'Select Concept Sets',\n+  SelectCohorts = 'Select Cohorts',\n+}\n+\n+export default class DatasetBuildPage extends AuthenticatedPage {\n+\n+  async isLoaded(): Promise<boolean> {\n+    try {\n+      await Promise.all([\n+        waitForDocumentTitle(this.page, PageTitle),\n+        waitWhileLoading(this.page),\n+      ]);\n+      return true;\n+    } catch (e) {\n+      console.log(`DatasetBuildPage isLoaded() encountered ${e}`);\n+      return false;\n+    }\n+  }\n+\n+  async getAddCohortsButton(): Promise<Button> {\n+    const buttonXpath = xPathOptionToXpath({name: LabelAlias.SelectCohorts, ancestorLevel: 3, iconShape: 'is-solid'});\n+    return new Button(this.page, buttonXpath);\n+  }\n+\n+  async clickAddCohortsButton(): Promise<CohortBuildPage> {\n+    const addCohortButton = await this.getAddCohortsButton();\n+    await addCohortButton.clickAndWait();\n+    const cohortPage = new CohortBuildPage(this.page);\n+    return cohortPage.waitForLoad();\n+  }\n+\n+  async selectCohorts(cohortNames: string[]): Promise<void> {\n+    for (const cohortName of cohortNames) {\n+      const xpath = this.getCheckboxXpath(LabelAlias.SelectCohorts, cohortName);\n+      const checkbox = new Checkbox(this.page, xpath);\n+      await checkbox.check();\n+    }\n+  }\n+\n+  async selectConceptSets(conceptSetNames: string[]): Promise<void> {\n+    for (const conceptSetName of conceptSetNames) {\n+      const xpath = this.getCheckboxXpath(LabelAlias.SelectConceptSets, conceptSetName);\n+      const checkbox = new Checkbox(this.page, xpath);\n+      await checkbox.check();\n+      await waitWhileLoading(this.page);\n+    }\n+  }\n+\n+  /**\n+   * Check or uncheck the Select All checkbox.\n+   * @param {boolean} selectAll\n+   */\n+  async selectAllValues(selectAll: boolean = false): Promise<void> {", "originalCommit": "100b12e434cf654e7de52335f734e446810e126c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1Mjc2OA==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r440352768", "bodyText": "right, default set to true.", "author": "aweng98", "createdAt": "2020-06-15T18:03:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NDYxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NDc1OA==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r440344758", "bodyText": "nit: probably make the parameter non-optional now, I think the below code breaks if it's null/undefind", "author": "calbach", "createdAt": "2020-06-15T17:49:19Z", "path": "e2e/app/page/dataset-build-page.ts", "diffHunk": "@@ -0,0 +1,106 @@\n+import Table from 'app/component/table';\n+import Button from 'app/element/button';\n+import Checkbox from 'app/element/checkbox';\n+import {waitWhileLoading} from 'utils/test-utils';\n+import {waitForDocumentTitle} from 'utils/waits-utils';\n+import {xPathOptionToXpath} from 'app/element/xpath-defaults';\n+import {ElementType} from 'app/xpath-options';\n+import AuthenticatedPage from './authenticated-page';\n+import CohortBuildPage from './cohort-build-page';\n+\n+const PageTitle = 'Dataset Page';\n+\n+enum LabelAlias {\n+  SelectValues = 'Select Values',\n+  SelectConceptSets = 'Select Concept Sets',\n+  SelectCohorts = 'Select Cohorts',\n+}\n+\n+export default class DatasetBuildPage extends AuthenticatedPage {\n+\n+  async isLoaded(): Promise<boolean> {\n+    try {\n+      await Promise.all([\n+        waitForDocumentTitle(this.page, PageTitle),\n+        waitWhileLoading(this.page),\n+      ]);\n+      return true;\n+    } catch (e) {\n+      console.log(`DatasetBuildPage isLoaded() encountered ${e}`);\n+      return false;\n+    }\n+  }\n+\n+  async getAddCohortsButton(): Promise<Button> {\n+    const buttonXpath = xPathOptionToXpath({name: LabelAlias.SelectCohorts, ancestorLevel: 3, iconShape: 'is-solid'});\n+    return new Button(this.page, buttonXpath);\n+  }\n+\n+  async clickAddCohortsButton(): Promise<CohortBuildPage> {\n+    const addCohortButton = await this.getAddCohortsButton();\n+    await addCohortButton.clickAndWait();\n+    const cohortPage = new CohortBuildPage(this.page);\n+    return cohortPage.waitForLoad();\n+  }\n+\n+  async selectCohorts(cohortNames: string[]): Promise<void> {\n+    for (const cohortName of cohortNames) {\n+      const xpath = this.getCheckboxXpath(LabelAlias.SelectCohorts, cohortName);\n+      const checkbox = new Checkbox(this.page, xpath);\n+      await checkbox.check();\n+    }\n+  }\n+\n+  async selectConceptSets(conceptSetNames: string[]): Promise<void> {\n+    for (const conceptSetName of conceptSetNames) {\n+      const xpath = this.getCheckboxXpath(LabelAlias.SelectConceptSets, conceptSetName);\n+      const checkbox = new Checkbox(this.page, xpath);\n+      await checkbox.check();\n+      await waitWhileLoading(this.page);\n+    }\n+  }\n+\n+  /**\n+   * Check or uncheck the Select All checkbox.\n+   * @param {boolean} selectAll\n+   */\n+  async selectAllValues(selectAll: boolean = false): Promise<void> {\n+    const xpath = xPathOptionToXpath({name: LabelAlias.SelectValues, ancestorLevel: 3, type: ElementType.Checkbox});\n+    const selectAllCheckbox = new Checkbox(this.page, xpath);\n+    selectAll ? await selectAllCheckbox.check() : await selectAllCheckbox.unCheck();\n+    await waitWhileLoading(this.page);\n+  }\n+\n+  async selectValues(values?: string[]): Promise<void> {", "originalCommit": "100b12e434cf654e7de52335f734e446810e126c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1MzQxMw==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r440353413", "bodyText": "right, param is set as non-optional.", "author": "aweng98", "createdAt": "2020-06-15T18:04:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NDc1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NTUyOQ==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r440345529", "bodyText": "This is a repeat of line 28", "author": "calbach", "createdAt": "2020-06-15T17:50:41Z", "path": "e2e/jest.test-setup.ts", "diffHunk": "@@ -27,6 +27,7 @@ beforeAll(async () => {\n        || host === 'accounts.youtube.com'\n        || host === 'static.zdassets.com'\n        || host === 'play.google.com'\n+       || host === 'static.zdassets.com'", "originalCommit": "100b12e434cf654e7de52335f734e446810e126c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1NDgyNw==", "url": "https://github.com/all-of-us/workbench/pull/3663#discussion_r440354827", "bodyText": "\ud83d\ude42 removed.", "author": "aweng98", "createdAt": "2020-06-15T18:07:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NTUyOQ=="}], "type": "inlineReview"}, {"oid": "3575061e20e39d4b379682b8cba9e1b8e7ba95ea", "url": "https://github.com/all-of-us/workbench/commit/3575061e20e39d4b379682b8cba9e1b8e7ba95ea", "message": "PR feedback", "committedDate": "2020-06-15T18:25:53Z", "type": "commit"}]}