{"pr_number": 3623, "pr_title": "[RW-4383][risk=no] Puppeteer Cohort test case", "pr_createdAt": "2020-05-29T02:34:22Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3623", "timeline": [{"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "url": "https://github.com/all-of-us/workbench/commit/d962c39ad1eb8e28f07ead6d99239382dde8359f", "message": "new add-cohorts test case\n\nsaving\n\nworking\n\nsaving", "committedDate": "2020-05-29T14:56:36Z", "type": "commit"}, {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "url": "https://github.com/all-of-us/workbench/commit/d962c39ad1eb8e28f07ead6d99239382dde8359f", "message": "new add-cohorts test case\n\nsaving\n\nworking\n\nsaving", "committedDate": "2020-05-29T14:56:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NDg1Nw==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432544857", "bodyText": "Use PascalCase!", "author": "aweng98", "createdAt": "2020-05-29T14:58:42Z", "path": "e2e/app/component/create-criteria-modal.ts", "diffHunk": "@@ -1,28 +1,38 @@\n-import {Page} from 'puppeteer';\n import ClrIconLink from 'app/element/clr-icon-link';\n import {ElementType} from 'app/xpath-options';\n-import Dialog from './dialog';\n+import {Page} from 'puppeteer';\n+import {waitForNumericalString} from 'utils/waits-utils';\n+import {xPathOptionToXpath} from 'app/element/xpath-defaults';\n+import Dialog, {ButtonLabel} from './dialog';\n+import SelectMenu from './select-menu';\n \n const defaultXpath = '//*[contains(concat(\" \", normalize-space(@class), \" \"), \" crit-modal-container \")]';\n \n export enum PhysicalMeasurementsCriteria {\n+  BloodPressure = 'Blood Pressure',", "originalCommit": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NjgyNQ==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432546825", "bodyText": "Removing this check because the Add Criteria dialog has input fields which don't have labels. \ud83e\udd37\u200d\u2642\ufe0f\nMinor tweaking for xpath expressions to accommodate new type of UI fields in Add Criteria dialog.", "author": "aweng98", "createdAt": "2020-05-29T15:01:53Z", "path": "e2e/app/element/xpath-defaults.ts", "diffHunk": "@@ -14,56 +14,47 @@ export function xPathOptionToXpath(xOpts: XPathOptions, container?: Container):\n     if (iconShape === undefined) {\n       throw new Error(`Incorrect XPathOptions configuration for Icon: set \"iconShape\" value.`);\n     }\n-  } else {\n-    if (name === undefined && normalizeSpace === undefined && containsText === undefined) {\n-      throw new Error(`Incorrect XPathOptions configuration for label name: \n-      Cannot find a text parameter: set \"name\", \"containsText\" or \"normalizeSpace\" value.`);\n-    }\n   }", "originalCommit": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0OTIxNw==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432549217", "bodyText": "rename selectTab to openTab because I think select word can be confused with menu select.", "author": "aweng98", "createdAt": "2020-05-29T15:05:56Z", "path": "e2e/app/page/data-page.ts", "diffHunk": "@@ -38,27 +38,27 @@ export default class DataPage extends AuthenticatedPage {\n     }\n   }\n \n-  async selectWorkspaceAction(action: WorkspaceAction) {\n+  async selectWorkspaceAction(action: WorkspaceAction): Promise<void> {\n     const ellipsisMenu = new EllipsisMenu(this.page, './/*[@data-test-id=\"workspace-menu-button\"]');\n-    await ellipsisMenu.selectAction(action);\n+    return ellipsisMenu.selectAction(action);\n   }\n \n   /**\n    * Select DATA, ANALYSIS or ABOUT page tab.\n    * @param tabName\n    */\n-  async selectTab(tabName: PageTab): Promise<void> {\n-    const selector = '//*[@aria-selected and @role=\"button\"]';\n-    await this.page.waitForXPath(selector, {visible: true});\n-    const tabs = await this.page.$x(selector);\n-    for (const tab of tabs) {\n-      const contentProp = await tab.getProperty('textContent');\n-      if (await contentProp.jsonValue() === tabName) {\n-        return tab.click();\n-      }\n-      await tab.dispose();\n-    }\n-    throw new Error(`Failed to find page tab with name ${tabName}`);\n+  async openTab(tabName: LabelAlias): Promise<void> {", "originalCommit": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1MTcwMQ==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432551701", "bodyText": "Cohort build page is not ready until Participants Count is calculated after adding new criterias. Participants Count numbers contain comma character(s). This function waits until Participants Count changes to a digits string with comma(s). It is used to get Counts and to indicate page is ready for next actions.", "author": "aweng98", "createdAt": "2020-05-29T15:10:01Z", "path": "e2e/utils/waits-utils.ts", "diffHunk": "@@ -75,6 +75,23 @@ export async function waitForPropertyEquality(\n   }\n }\n \n+export async function waitForNumericalString(page: Page, xpath: string): Promise<string> {\n+  await page.waitForXPath(xpath, {visible: true});\n+\n+  const numbers =  await page.waitForFunction( xpathSelector => {\n+    const node = document.evaluate(xpathSelector, document.body, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n+    if (node !== null) {\n+      const txt = node.textContent.trim();\n+      const re = new RegExp(/^\\d{1,3}(,\\d{3})*(\\.\\d+)?$/);", "originalCommit": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2ODE4Mw==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432668183", "bodyText": "This seems fragile. Participant counts may not always be over 1000. Could you instead check that the content changes?", "author": "als364", "createdAt": "2020-05-29T18:38:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1MTcwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNTg5Mg==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432705892", "bodyText": "good catch. I updated regex to catch numbers less than one thousand. I need to check that calcualated count turns into a number.", "author": "aweng98", "createdAt": "2020-05-29T19:56:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1MTcwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1Nzk2Ng==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432557966", "bodyText": "Icons don't have labels - why is this called forLabel? What does this method really do?", "author": "als364", "createdAt": "2020-05-29T15:19:51Z", "path": "e2e/app/component/create-criteria-modal.ts", "diffHunk": "@@ -31,7 +41,53 @@ export default class CreateCriteriaModal extends Dialog {\n   }\n \n   async waitForPhysicalMeasurementCriteriaLink(criteriaType: PhysicalMeasurementsCriteria): Promise<ClrIconLink> {\n-    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider'}, this);\n+    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider', ancestorLevel: 2}, this);", "originalCommit": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4MTAwNg==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432681006", "bodyText": "forLabel function name was chosen for this reason at the beginning, a common static function that finds an element matching a label name. An element can be type of Icon, Select, Textbox, Textarea, etc.", "author": "aweng98", "createdAt": "2020-05-29T19:06:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1Nzk2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzOTY2NA==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r433239664", "bodyText": "Right, but almost none of those have labels. Could this instead be called findByName?", "author": "als364", "createdAt": "2020-06-01T13:40:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1Nzk2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3ODU5MQ==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r433278591", "bodyText": "Are you okay with not changing function name (forLabel to findByName) in this PR? I'll create a new PR to change forLabel function names for all classes right away after merge this PR.", "author": "aweng98", "createdAt": "2020-06-01T14:47:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1Nzk2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMwMzA4Mw==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r433303083", "bodyText": "Yeah, go ahead and do that in a separate PR, that's gonna be a big change", "author": "als364", "createdAt": "2020-06-01T15:27:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1Nzk2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1OTU1MQ==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432559551", "bodyText": "Same forLabel question. It seems like this is getting the SelectMenu. Why isn't this function called SelectMenu.get?", "author": "als364", "createdAt": "2020-05-29T15:22:24Z", "path": "e2e/app/component/create-criteria-modal.ts", "diffHunk": "@@ -31,7 +41,53 @@ export default class CreateCriteriaModal extends Dialog {\n   }\n \n   async waitForPhysicalMeasurementCriteriaLink(criteriaType: PhysicalMeasurementsCriteria): Promise<ClrIconLink> {\n-    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider'}, this);\n+    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider', ancestorLevel: 2}, this);\n+  }\n+\n+  /**\n+   * Add single Physical Measurements Criteria.\n+   * @param {PhysicalMeasurementsCriteria} criteriaName\n+   * @param {FilterSign}  filterSign\n+   * @param {number} filterValue\n+   */\n+  async filterPhysicalMeasurementValue(\n+     criteriaName: PhysicalMeasurementsCriteria,\n+     filterSign: FilterSign,\n+     filterValue: number): Promise<string> {\n+\n+    const link = await this.waitForPhysicalMeasurementCriteriaLink(criteriaName);\n+    await link.click();\n+\n+    const selectMenu = await SelectMenu.forLabel(this.page, {ancestorLevel: 2});", "originalCommit": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY0NTUwMw==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432645503", "bodyText": "nit: participlant -> participant. also, make the plurality consistent between the variable and the function - is it participantResults or participantsResult?", "author": "als364", "createdAt": "2020-05-29T17:52:35Z", "path": "e2e/app/component/create-criteria-modal.ts", "diffHunk": "@@ -31,7 +41,53 @@ export default class CreateCriteriaModal extends Dialog {\n   }\n \n   async waitForPhysicalMeasurementCriteriaLink(criteriaType: PhysicalMeasurementsCriteria): Promise<ClrIconLink> {\n-    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider'}, this);\n+    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider', ancestorLevel: 2}, this);\n+  }\n+\n+  /**\n+   * Add single Physical Measurements Criteria.\n+   * @param {PhysicalMeasurementsCriteria} criteriaName\n+   * @param {FilterSign}  filterSign\n+   * @param {number} filterValue\n+   */\n+  async filterPhysicalMeasurementValue(\n+     criteriaName: PhysicalMeasurementsCriteria,\n+     filterSign: FilterSign,\n+     filterValue: number): Promise<string> {\n+\n+    const link = await this.waitForPhysicalMeasurementCriteriaLink(criteriaName);\n+    await link.click();\n+\n+    const selectMenu = await SelectMenu.forLabel(this.page, {ancestorLevel: 2});\n+    await selectMenu.select(filterSign);\n+\n+    const numberField = await this.page.waitForXPath(`${this.xpath}//input[@type=\"number\"]`, {visible: true});\n+    await numberField.type('30');\n+\n+    await this.clickButton(ButtonLabel.Calculate);\n+    const participlantResults = await this.getParticipantsResult();", "originalCommit": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY3MzYxMQ==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432673611", "bodyText": "\ud83d\udc4d Fixed. It is now participantResult.", "author": "aweng98", "createdAt": "2020-05-29T18:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY0NTUwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1MjYwMw==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432652603", "bodyText": "It looks like what this function does is to find and click all items in a list of items - can you change the name of the function to indicate that that is what it does?", "author": "als364", "createdAt": "2020-05-29T18:07:01Z", "path": "e2e/app/component/tiered-menu.ts", "diffHunk": "@@ -1,12 +1,42 @@\n import Container from 'app/container';\n-import {Page} from 'puppeteer';\n+import {ElementHandle, Page} from 'puppeteer';\n \n-const defaultXpath = '//*[contains(concat(\" \", normalize-space(@class), \" \"), \" p-tieredmenu \")]';\n+const defaultXpath = '//*[contains(concat(\" \", normalize-space(@class)), \" p-tieredmenu\") ' +\n+   'and contains(concat(\" \", normalize-space(@class)), \" p-menu-overlay-visible\")]';\n \n export default class TieredMenu extends Container {\n \n   constructor(page: Page, xpath: string = defaultXpath) {\n     super(page, xpath);\n   }\n \n+  /**\n+   * Select menu item(s).\n+   * @param {ElementHandle} menuParentElement\n+   * @param {string | string[]} selectMenuItems\n+   */\n+  async select(selectMenuItems: string[]): Promise<void> {", "originalCommit": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4Nzk3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432687972", "bodyText": "user probably doesn't care about there is an internal helper function for finding menuitems. do you recommend a better name? I'd have to rename other select() functions too to keep naming convention standard.\n\n  \n    \n      workbench/e2e/app/component/select-menu.ts\n    \n    \n         Line 26\n      in\n      4091a05\n    \n    \n    \n    \n\n        \n          \n           async select(textValue: string, maxAttempts: number = 2): Promise<void> {", "author": "aweng98", "createdAt": "2020-05-29T19:22:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1MjYwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzOTEyMw==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r433239123", "bodyText": "Developers are the users here and as a developer I'd prefer to have meaningful function names. I would call this clickMenuItems, and for other types of inputs I would similar functions things like clickRadioButton or clickCheckBox.", "author": "als364", "createdAt": "2020-06-01T13:39:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1MjYwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMwMDcxMQ==", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r433300711", "bodyText": "Sounds good.\nI renamed following three function names (for consistency):\n\nselectAction to clickAction in EllipsisMenu.ts.\nselect to clickMenuItem in SelectMenu.ts.\nselect to clickMenuItem in TieredMenu.", "author": "aweng98", "createdAt": "2020-06-01T15:23:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1MjYwMw=="}], "type": "inlineReview"}, {"oid": "70c3f2072c0511d64d9ead0b5280a9997a332aa7", "url": "https://github.com/all-of-us/workbench/commit/70c3f2072c0511d64d9ead0b5280a9997a332aa7", "message": "PR feedback", "committedDate": "2020-05-29T19:57:19Z", "type": "commit"}, {"oid": "eb6a7f40550118bdbbdbc5a1a59ba31ae2248f0f", "url": "https://github.com/all-of-us/workbench/commit/eb6a7f40550118bdbbdbc5a1a59ba31ae2248f0f", "message": "PR feedback", "committedDate": "2020-06-01T15:24:38Z", "type": "commit"}]}