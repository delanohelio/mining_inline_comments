{"pr_number": 3068, "pr_title": "[RW-4284][risk=no] Inactive Billing status banner", "pr_createdAt": "2020-01-30T23:32:13Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3068", "timeline": [{"oid": "a98b7a8a6704171cf2286de2413bcb2ccf3d68ef", "url": "https://github.com/all-of-us/workbench/commit/a98b7a8a6704171cf2286de2413bcb2ccf3d68ef", "message": "[RW-4284][risk=no] Inactive Billing status banner (#3063)\n\n* refactor status alert banner to work from any component\r\n\r\n* lot of UI treatment on status banner\r\n\r\n* feature complete\r\n\r\n* extract component\r\n\r\n* lint\r\n\r\n* remove unused prop\r\n\r\n* lint\r\n\r\n* use breadcrumb not workspace nav bar\r\n\r\n* use tag selector\r\n\r\n* lint", "committedDate": "2020-01-30T23:31:35Z", "type": "commit"}, {"oid": "1734eed908370dc2f4a94665b857cf6f92a8910a", "url": "https://github.com/all-of-us/workbench/commit/1734eed908370dc2f4a94665b857cf6f92a8910a", "message": "fix bug where banner persisted when leaveing workspace", "committedDate": "2020-01-30T23:55:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyOTQwNw==", "url": "https://github.com/all-of-us/workbench/pull/3068#discussion_r373629407", "bodyText": "Extraneous", "author": "als364", "createdAt": "2020-01-31T18:48:01Z", "path": "ui/src/app/components/breadcrumb.tsx", "diffHunk": "@@ -174,26 +193,33 @@ export const Breadcrumb = fp.flow(\n     }\n \n     render() {\n-      return <div style={{\n-        marginLeft: '3.25rem',\n-        display: 'inline-block',\n-      }}>\n-        {this.first().map(({label, url}, i) => {\n-          return <React.Fragment key={i}>\n-            <BreadcrumbLink href={url} style={styles.firstLink}>\n-              {label}\n+      console.log(this.props.workspace);", "originalCommit": "1734eed908370dc2f4a94665b857cf6f92a8910a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2MTgyNg==", "url": "https://github.com/all-of-us/workbench/pull/3068#discussion_r373661826", "bodyText": "ooh neat. Is the ability to pass elements around built into React or is this something new you brought in?", "author": "als364", "createdAt": "2020-01-31T20:03:34Z", "path": "ui/src/app/components/status-alert-banner.tsx", "diffHunk": "@@ -18,17 +19,14 @@ const styles = reactStyles({\n     position: 'absolute',\n     top: '0',\n     right: '0',\n-    zIndex: 1,\n+    zIndex: 101,\n   }\n });\n \n-\n-\n export interface Props {\n-  statusAlertId: number;\n   title: string;\n   message: string;\n-  link: string;\n+  footer: JSX.Element;", "originalCommit": "1734eed908370dc2f4a94665b857cf6f92a8910a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3NTI2Nw==", "url": "https://github.com/all-of-us/workbench/pull/3068#discussion_r373675267", "bodyText": "it's built in! Another common way react elements are passed around is through props.children which is automatically added to every react component. props.children will be set to whatever is inside of a JSX tag.\nEx.\n<Container>\n  <div>\n    ... w/e JSX content you want\n  <div>\n</Container>\n\nprops.children within the Container component will be equal to the div JSX element.\nhttps://reactjs.org/docs/jsx-in-depth.html#children-in-jsx", "author": "ericsong", "createdAt": "2020-01-31T20:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2MTgyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3NTUxMg==", "url": "https://github.com/all-of-us/workbench/pull/3068#discussion_r373675512", "bodyText": "I'd seen that and figured it was a special case (which, I guess, it is.)", "author": "als364", "createdAt": "2020-01-31T20:39:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY2MTgyNg=="}], "type": "inlineReview"}, {"oid": "82fd0d6465b2aad25ff320bc400202e60eba78ac", "url": "https://github.com/all-of-us/workbench/commit/82fd0d6465b2aad25ff320bc400202e60eba78ac", "message": "remove console log", "committedDate": "2020-01-31T20:39:00Z", "type": "commit"}]}