{"pr_number": 4393, "pr_title": "[RW-6038][risk=no] Fix price computation on Dataproc master", "pr_createdAt": "2020-12-11T00:11:49Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4393", "timeline": [{"oid": "1f54d5c32e09593bb51e0d8207aaa651f8c45cb0", "url": "https://github.com/all-of-us/workbench/commit/1f54d5c32e09593bb51e0d8207aaa651f8c45cb0", "message": "Regression test", "committedDate": "2020-12-11T00:06:15Z", "type": "commit"}, {"oid": "3cf163a0272be6ade8914f6cd9714fb35c3e56d1", "url": "https://github.com/all-of-us/workbench/commit/3cf163a0272be6ade8914f6cd9714fb35c3e56d1", "message": "Fix price computation on Dataproc master", "committedDate": "2020-12-11T00:07:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0MjI1Ng==", "url": "https://github.com/all-of-us/workbench/pull/4393#discussion_r541142256", "bodyText": "maybe there's some kind of refactoring we can do to reduce the data duplication in these objects (dataproc.masterMachineType can be a function that returns a value from the parent?) but I think this looks good for now", "author": "ericsong", "createdAt": "2020-12-11T18:25:34Z", "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -785,9 +782,12 @@ export const RuntimePanel = fp.flow(\n   ])([currentRuntime, status]);\n   const [panelContent, setPanelContent] = useState<PanelContent>(initialPanelContent);\n \n-  const [selectedDiskSize, setSelectedDiskSize] = useState(diskSize);\n   const [selectedMachine, setSelectedMachine] = useState(initialMasterMachine);\n+  const [selectedDiskSize, setSelectedDiskSize] = useState(diskSize);\n   const [selectedCompute, setSelectedCompute] = useState<ComputeType>(initialCompute);\n+  // Note: while the Dataproc config does contain masterMachineType and masterDiskSize,", "originalCommit": "3cf163a0272be6ade8914f6cd9714fb35c3e56d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTIwOTI3MA==", "url": "https://github.com/all-of-us/workbench/pull/4393#discussion_r541209270", "bodyText": "I think a way to fix this would be to have either a partial DataprocConfig type which only covered the worker settings. We can't directly use the DataprocConfig type for this, since that's tied to the API model. Probably the thing that's missing here is either using the API model throughout (keeping the UI elements somewhat independent of the model), or using alternate leaner models that more directly map the UI, but need to be converted at the boundary to API models.", "author": "calbach", "createdAt": "2020-12-11T19:42:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0MjI1Ng=="}], "type": "inlineReview"}]}