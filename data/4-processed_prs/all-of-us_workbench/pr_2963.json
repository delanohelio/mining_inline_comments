{"pr_number": 2963, "pr_title": "[RW-4075][risk=no] Ask user for confirmation when concept set with a dataset reference is being deleted", "pr_createdAt": "2020-01-02T22:20:34Z", "pr_url": "https://github.com/all-of-us/workbench/pull/2963", "timeline": [{"oid": "07c4ed29017897d2a27176bf8e6be1fd912c3cae", "url": "https://github.com/all-of-us/workbench/commit/07c4ed29017897d2a27176bf8e6be1fd912c3cae", "message": "use ResourceType enum on backend", "committedDate": "2019-12-19T21:04:42Z", "type": "commit"}, {"oid": "88bcef4decd34833376787adf5881bf10e580568", "url": "https://github.com/all-of-us/workbench/commit/88bcef4decd34833376787adf5881bf10e580568", "message": "WIP: refactor ResourceType to not rely the enum value for display printing", "committedDate": "2019-12-20T19:33:44Z", "type": "commit"}, {"oid": "b2f4417de219fd8dfe69dfbcf1c9ef56e8c00448", "url": "https://github.com/all-of-us/workbench/commit/b2f4417de219fd8dfe69dfbcf1c9ef56e8c00448", "message": "remove invalid enum", "committedDate": "2019-12-20T19:55:40Z", "type": "commit"}, {"oid": "0df3053ed6a64685a124ec5a6e72f80b80e003fe", "url": "https://github.com/all-of-us/workbench/commit/0df3053ed6a64685a124ec5a6e72f80b80e003fe", "message": "swap out ResourceType enum", "committedDate": "2019-12-20T20:19:38Z", "type": "commit"}, {"oid": "ffd729ff677c0cfe038293f87e2077de3d79a8fe", "url": "https://github.com/all-of-us/workbench/commit/ffd729ff677c0cfe038293f87e2077de3d79a8fe", "message": "Merge branch 'master' of github.com:all-of-us/workbench into songe/RW-4075", "committedDate": "2020-01-02T20:31:10Z", "type": "commit"}, {"oid": "c068f4723c0ef6749a707469235aa0c43c96ff8a", "url": "https://github.com/all-of-us/workbench/commit/c068f4723c0ef6749a707469235aa0c43c96ff8a", "message": "fix test", "committedDate": "2020-01-02T20:59:53Z", "type": "commit"}, {"oid": "68856b637a6b359059840b9282f417911e5b72d7", "url": "https://github.com/all-of-us/workbench/commit/68856b637a6b359059840b9282f417911e5b72d7", "message": "switch get to post so we can send body", "committedDate": "2020-01-02T21:50:57Z", "type": "commit"}, {"oid": "9f888011937eb7d8884d4bb5faf91afd06180b00", "url": "https://github.com/all-of-us/workbench/commit/9f888011937eb7d8884d4bb5faf91afd06180b00", "message": "rename prop", "committedDate": "2020-01-02T22:09:15Z", "type": "commit"}, {"oid": "30b2a3253ce992d8e05bca491bdcdd9b16bbb704", "url": "https://github.com/all-of-us/workbench/commit/30b2a3253ce992d8e05bca491bdcdd9b16bbb704", "message": "lint", "committedDate": "2020-01-02T22:25:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwMjc1OA==", "url": "https://github.com/all-of-us/workbench/pull/2963#discussion_r364302758", "bodyText": "Why did this need to be changed to a POST?", "author": "als364", "createdAt": "2020-01-08T15:52:18Z", "path": "api/src/main/resources/workbench.yaml", "diffHunk": "@@ -2027,12 +2027,13 @@ paths:\n     parameters:\n       - $ref: '#/parameters/workspaceNamespace'\n       - $ref: '#/parameters/workspaceId'\n-    get:\n+    post:", "originalCommit": "30b2a3253ce992d8e05bca491bdcdd9b16bbb704", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0MzUzMw==", "url": "https://github.com/all-of-us/workbench/pull/2963#discussion_r364843533", "bodyText": "I have an explanation in my PR description.\n\n\nSwagger 2 does not support objects in GET methods since they do not support objects in path and query parameters. Swagger 3 does\n\n\nI changed the getDataSetsByResourceId to be a POST request so I can send a body and parameterize it as an object through Swagger. We can change this back to a GET when we upgrade to Swagger 3.", "author": "ericsong", "createdAt": "2020-01-09T16:40:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwMjc1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0NDE1Nw==", "url": "https://github.com/all-of-us/workbench/pull/2963#discussion_r364844157", "bodyText": "Ah, my bad, thank you.", "author": "als364", "createdAt": "2020-01-09T16:41:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwMjc1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwMzc5Mg==", "url": "https://github.com/all-of-us/workbench/pull/2963#discussion_r364303792", "bodyText": "Nit: it looks like sometimes we name these enums ThingEnum and sometimes we name them Thing. Maybe we should be consistent about that. Not sure which we have more of or if we have a strong preference.", "author": "als364", "createdAt": "2020-01-08T15:54:08Z", "path": "api/src/main/resources/workbench.yaml", "diffHunk": "@@ -2974,7 +2975,17 @@ definitions:\n         type: integer\n         format: int64\n       resourceType:\n-        type: string\n+        $ref: \"#/definitions/ResourceType\"\n+\n+  ResourceType:", "originalCommit": "30b2a3253ce992d8e05bca491bdcdd9b16bbb704", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0NjAzNA==", "url": "https://github.com/all-of-us/workbench/pull/2963#discussion_r364846034", "bodyText": "That's true. In this case, I decided to keep Type since that was the existing naming convention we were using across the front end and I did felt like it added a little bit of meaning.", "author": "ericsong", "createdAt": "2020-01-09T16:44:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwMzc5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwNjc5NQ==", "url": "https://github.com/all-of-us/workbench/pull/2963#discussion_r364306795", "bodyText": "you think this was left in here by mistake or was this a pattern we used to do?", "author": "als364", "createdAt": "2020-01-08T15:59:28Z", "path": "ui/src/app/components/resource-card.tsx", "diffHunk": "@@ -212,15 +209,11 @@ export class ResourceCard extends React.Component<Props, State> {\n \n   async getDataSetByResourceId(id) {\n     if (this.state.dataSetByResourceIdList.length === 0) {\n-      try {\n-        const dataSetList = await dataSetApi().getDataSetByResourceId(\n-          this.props.resourceCard.workspaceNamespace,\n-          this.props.resourceCard.workspaceFirecloudName,\n-          this.resourceType, id);\n-        return dataSetList.items;\n-      } catch (ex) {\n-        console.log(ex);", "originalCommit": "30b2a3253ce992d8e05bca491bdcdd9b16bbb704", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg1MDI5Ng==", "url": "https://github.com/all-of-us/workbench/pull/2963#discussion_r364850296", "bodyText": "I think it was intentional but I decided to change it because I think the behavior that results from NOT swallowing the error is more correct.\nEffectively, swallowing the error would treat it as though the call succeeded with an empty list, which our UI treats as a sign that it is OK to delete.\nNot swallowing the error will just cause the function to exit early and not attempt the delete.", "author": "ericsong", "createdAt": "2020-01-09T16:51:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwNjc5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg5MTI5OA==", "url": "https://github.com/all-of-us/workbench/pull/2963#discussion_r364891298", "bodyText": "Makes sense - thank you for the explanation", "author": "als364", "createdAt": "2020-01-09T18:23:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwNjc5NQ=="}], "type": "inlineReview"}]}