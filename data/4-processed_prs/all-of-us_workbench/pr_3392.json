{"pr_number": 3392, "pr_title": "[RW-4505] [RISK=LOW]Factor out Edit Profile component", "pr_createdAt": "2020-04-14T14:12:42Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3392", "timeline": [{"oid": "4c4bd8afffeb321e75a0bbbe8b1415348f647a9e", "url": "https://github.com/all-of-us/workbench/commit/4c4bd8afffeb321e75a0bbbe8b1415348f647a9e", "message": "Profil Page", "committedDate": "2020-04-14T05:00:45Z", "type": "commit"}, {"oid": "8bccd168f356bc156e1678a3672d8d35f365ed71", "url": "https://github.com/all-of-us/workbench/commit/8bccd168f356bc156e1678a3672d8d35f365ed71", "message": "Fix test", "committedDate": "2020-04-14T15:07:51Z", "type": "commit"}, {"oid": "d10c1e04557517967741533b9d515d9efac4f761", "url": "https://github.com/all-of-us/workbench/commit/d10c1e04557517967741533b9d515d9efac4f761", "message": "Update insitutionRole only if its updated", "committedDate": "2020-04-14T16:17:45Z", "type": "commit"}, {"oid": "c21d4a89a7836dece5339872fa71a7560a8bcd60", "url": "https://github.com/all-of-us/workbench/commit/c21d4a89a7836dece5339872fa71a7560a8bcd60", "message": "Extracting styles and handling other text", "committedDate": "2020-04-14T17:44:26Z", "type": "commit"}, {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238", "url": "https://github.com/all-of-us/workbench/commit/22eab0eb816ea5a312d46501ef88675be8eee238", "message": "add some comments", "committedDate": "2020-04-17T18:07:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQyNTU5Mg==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410425592", "bodyText": "Are you using this instead of java.lang.String.isEmpty to avoid NPEs?", "author": "als364", "createdAt": "2020-04-17T19:25:29Z", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -275,6 +280,45 @@ private void validateAndCleanProfile(Profile profile) throws BadRequestException\n     profile.setUsername(profile.getUsername().toLowerCase());\n   }\n \n+  private void validateUpdatedProfile(Profile updatedProfile, Profile prevProfile)\n+      throws BadRequestException {\n+    validateAndCleanProfile(updatedProfile);\n+    if (StringUtils.isEmpty(updatedProfile.getAreaOfResearch())) {\n+      throw new BadRequestException(\"Research background cannot be empty\");\n+    }\n+    Optional.ofNullable(updatedProfile.getAddress())\n+        .orElseThrow(() -> new BadRequestException(\"Address must not be empty\"));\n+\n+    Address updatedProfileAddress = updatedProfile.getAddress();\n+    if (StringUtils.isEmpty(updatedProfileAddress.getStreetAddress1())", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE5MTIyMA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r412191220", "bodyText": "Yes", "author": "NehaBroad", "createdAt": "2020-04-21T13:37:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQyNTU5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzMTEyMQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410431121", "bodyText": "Since this does conflict handling, could you please indicate that in the name of the function?", "author": "als364", "createdAt": "2020-04-17T19:37:51Z", "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -417,6 +418,41 @@ public DbUser createUser(\n     return dbUser;\n   }\n \n+  /**\n+   * Save updated dbUser object if requireInstitutionalVerification is enabled: Get the existing\n+   * dbExistingVerifiedInstitutionalAffiliation and update it with Institution role and other text\n+   *\n+   * @param dbUser\n+   * @param dbVerifiedAffiliation\n+   * @return\n+   */\n+  @Override\n+  public DbUser updateUser(", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzMzU5MA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410433590", "bodyText": "Or, better, could you also call saveUserWithConflictHandling in this function?", "author": "als364", "createdAt": "2020-04-17T19:43:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzMTEyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE5NTQ1OQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r412195459", "bodyText": "Will change it to updateUserWithConflictHandling since i do want the name to specify that we are updating user and its related table (like verified institution in this case)", "author": "NehaBroad", "createdAt": "2020-04-21T13:42:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzMTEyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0MjYwMQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410442601", "bodyText": "Some of these new styles have unusual % values. How were those calculated?", "author": "als364", "createdAt": "2020-04-17T20:02:52Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -50,14 +56,39 @@ const styles = reactStyles({\n   title: {\n     color: colors.primary,\n     fontSize: 16,\n-    fontWeight: 600\n+    fontWeight: 500,\n+    width: '40%',\n+    display: 'inline',\n+    alignItems: 'flexEnd'\n   },\n   uneditableProfileElement: {\n     paddingLeft: '0.5rem',\n     marginRight: 20,\n     marginBottom: 20,\n     height: '1.5rem',\n     color: colors.primary\n+  },\n+  fadebox: {\n+    margin: '1rem 0 0 3%',", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI1OTQ1Ng==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r412259456", "bodyText": "I actually re-used this from workspace page", "author": "NehaBroad", "createdAt": "2020-04-21T14:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0MjYwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0NTg1OQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410445859", "bodyText": "Can this be moved into createInitialProfile?", "author": "als364", "createdAt": "2020-04-17T20:10:20Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -101,18 +139,51 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n     super(props);\n \n     this.state = {\n-      currentProfile: props.profileState.profile || this.createInitialProfile(),\n+      currentProfile: this.initializeProfile(),\n+      institutions: [],\n       saveProfileErrorResponse: null,\n       showDemographicSurveyModal: false,\n+      showOtherRole: this.initializeShowOtherRole(),\n       updating: false\n     };\n   }\n \n+  async componentDidMount() {\n+    try {\n+      const details = await institutionApi().getPublicInstitutionDetails();\n+      this.setState({\n+        institutions: details.institutions\n+      });\n+    } catch (e) {\n+      reportError(e);\n+    }\n+  }\n+\n+  initializeShowOtherRole() {\n+    return this.props.profileState.profile.verifiedInstitutionalAffiliation.institutionalRoleEnum === InstitutionalRole.OTHER;\n+  }\n+\n   navigateToTraining(): void {\n     window.location.assign(\n       environment.trainingUrl + '/static/data-researcher.html?saml=on');\n   }\n \n+  initializeProfile() {\n+    if (!this.props.profileState.profile) {\n+      return this.createInitialProfile();\n+    }\n+    if (!this.props.profileState.profile.address) {", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI3MzQ0Ng==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r412273446", "bodyText": "Its mainly targeting the case where the researchers have old account and therefore do not have the address object.", "author": "NehaBroad", "createdAt": "2020-04-21T15:12:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0NTg1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI4MzIyOQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r412283229", "bodyText": "What about merging the two functions, then?", "author": "als364", "createdAt": "2020-04-21T15:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0NTg1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0Nzk2MA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410447960", "bodyText": "This sounds like it does persistence - maybe a better name would be 'setOtherInstitutionalRoleState` or something along those lines?", "author": "als364", "createdAt": "2020-04-17T20:15:01Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -128,6 +199,39 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n     }\n   }\n \n+  getRoleOptions(): Array<{label: string, value: InstitutionalRole}> {\n+    const {institutions, currentProfile} = this.state;\n+    if (currentProfile) {\n+      const selectedOrgType = institutions.find(\n+        inst => inst.shortName === currentProfile.verifiedInstitutionalAffiliation.institutionShortName);\n+      if (selectedOrgType) {\n+        const sel = selectedOrgType.organizationTypeEnum;\n+\n+        const availableRoles: Array<InstitutionalRole> =\n+           AccountCreationOptions.institutionalRolesByOrganizationType\n+               .find(obj => obj.type === sel)\n+               .roles;\n+\n+        return AccountCreationOptions.institutionalRoleOptions.filter(option =>\n+           availableRoles.includes(option.value)\n+       );\n+      }\n+    }\n+  }\n+\n+  updateVerifiedInstitutionRole(newRole) {", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI1NjA2OA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r412256068", "bodyText": "The main purpose of this method is to set or update the institution Role. If the institution Role is other , show the other text box else hide it. So renaming it to setOtherInstitutionRoleState will give an impression it's just setting Other .\nI understand your concern so i can do the following:\n\n\nChange the method name to setInstitutionRole\n\n\nRemove the state variable showOther\n\n\nadd a check institutionRole === Role.Other at l370 rather than using state variable.", "author": "NehaBroad", "createdAt": "2020-04-21T14:53:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0Nzk2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI1ODI1MA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r412258250", "bodyText": "Ah, sure, I see. Misunderstood what line 224 was doing, I guess.", "author": "als364", "createdAt": "2020-04-21T14:55:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0Nzk2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0ODc1NA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410448754", "bodyText": "since this returns a boolean, could you name it something like isGivenNameValid?", "author": "als364", "createdAt": "2020-04-17T20:16:50Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -153,17 +257,36 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n     }\n   }\n \n+  validGivenName() {", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI1MTM2NQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r412251365", "bodyText": "We actually do not need this method, since its explicitly validation the length of given name. Removing it", "author": "NehaBroad", "createdAt": "2020-04-21T14:47:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0ODc1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1MjU2OA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410452568", "bodyText": "This needs to say Publicly displayed information with that capitalization", "author": "als364", "createdAt": "2020-04-17T20:25:04Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1NTU0NA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410455544", "bodyText": "Everything within this div should be indented once more.", "author": "als364", "createdAt": "2020-04-17T20:32:04Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ2MDkxNA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410460914", "bodyText": "In general, I'd like to see everything within an open tag indented once, and de-indented after the closed tag, so that all elements at a given level of the heirarchy are at the same level of indentation.", "author": "als364", "createdAt": "2020-04-17T20:45:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1NTU0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1NTkwNQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410455905", "bodyText": "Everything within this div should also be indented once more.", "author": "als364", "createdAt": "2020-04-17T20:32:54Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODM5OA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458398", "bodyText": "Extraneous whitespace", "author": "als364", "createdAt": "2020-04-17T20:39:12Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODQ0NQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458445", "bodyText": "extraneous whitespace", "author": "als364", "createdAt": "2020-04-17T20:39:19Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODY2Ng==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458666", "bodyText": "Should the AoU be italicised here?", "author": "als364", "createdAt": "2020-04-17T20:39:50Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODgyMQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458821", "bodyText": "Only first word should be capitalized here", "author": "als364", "createdAt": "2020-04-17T20:40:09Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODg2OQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458869", "bodyText": "Should be 'User name'", "author": "als364", "createdAt": "2020-04-17T20:40:17Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODk0OQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458949", "bodyText": "Only first word should be capitalized here", "author": "als364", "createdAt": "2020-04-17T20:40:30Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODk3Mw==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458973", "bodyText": "Only first word should be capitalized here", "author": "als364", "createdAt": "2020-04-17T20:40:34Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1OTIxMw==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410459213", "bodyText": "free should be in all lowercase here", "author": "als364", "createdAt": "2020-04-17T20:41:07Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',\n+                valueKey: ['address', 'streetAddress2'],\n+                id: 'streetAddress2'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'City',\n+                valueKey: ['address', 'city'],\n+                id: 'city'\n+              })}\n+              {makeProfileInput({\n+                title: 'State',\n+                valueKey: ['address' , 'state'],\n+                id: 'state'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Zip Code',\n+                valueKey: ['address', 'zipCode'],\n+                id: 'zipCode'\n+              })}\n+              {makeProfileInput({\n+                title: 'Country',\n+                valueKey: ['address', 'country'],\n+                id: 'country'\n+              })}\n+            </FlexRow>\n           </div>\n-          {makeProfileInput({\n-            title: 'Contact Email',\n-            valueKey: 'contactEmail',\n-            disabled: true\n-          })}\n-          <div style={styles.inputLabel}>Username</div>\n-          <div style={styles.uneditableProfileElement}>\n-            {profile && profile.username}\n-          </div>\n-          {makeProfileInput({\n-            title: 'Your Current Position',\n-            valueKey: 'currentPosition'\n-          })}\n-          {makeProfileInput({\n-            title: 'Your Organization',\n-            valueKey: 'organization'\n-          })}\n-          {makeProfileInput({\n-            title: <React.Fragment>\n-              Current Research Work\n-              <TooltipTrigger\n-                side='right'\n-                content={<span>You are required to describe your current research in order to help\n-                  <i>All of Us</i> improve the Researcher Workbench.</span>}\n-              >\n-                <ClrIcon\n-                  shape='info-standard'\n-                  className='is-solid'\n-                  style={{marginLeft: 10, verticalAlign: 'middle', color: colors.accent}}\n-                />\n-              </TooltipTrigger>\n-            </React.Fragment>,\n-            valueKey: 'areaOfResearch',\n-            isLong: true\n-          })}\n-          {makeProfileInput({\n-            title: 'About You',\n-            valueKey: 'aboutYou',\n-            isLong: true\n-          })}\n-          {renderInstitutionalAffiliationComponents()}\n-          <div style={{marginTop: 100, display: 'flex'}}>\n-            <Button type='link'\n-              onClick={() => this.setState({currentProfile: profile})}\n-            >\n-              Discard Changes\n-            </Button>\n-            <TooltipTrigger\n-              side='top'\n-              content={!!errors && 'You must correct errors before saving.'}\n-            >\n-              <Button\n-                data-test-id='save profile'\n-                type='purplePrimary'\n-                style={{marginLeft: 40}}\n-                onClick={() => this.saveProfile(currentProfile)}\n-                disabled={!!errors || fp.isEqual(profile, currentProfile)}\n-              >\n-                Save Profile\n-              </Button>\n-            </TooltipTrigger>\n-          </div>\n+         </div>\n+        <div style={{width: '16rem', marginRight: '4rem'}}>\n+        <div style={styles.title}>Free credits balance\n         </div>\n-       <div>\n-          {profile && <FlexRow style={{\n-            color: colors.primary, paddingRight: '0.5rem', justifyContent: 'flex-end'\n-          }}>\n-            <FlexColumn style={{alignItems: 'flex-end'}}>\n-              <div><i>All of Us</i> FREE credits used:</div>\n+        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+          {profile && <FlexRow style={styles.freeCreditsBox}>\n+            <FlexColumn style={{marginLeft: '0.8rem'}}>\n+              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1OTI1NQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410459255", "bodyText": "free should be in all lowercase here too", "author": "als364", "createdAt": "2020-04-17T20:41:13Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',\n+                valueKey: ['address', 'streetAddress2'],\n+                id: 'streetAddress2'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'City',\n+                valueKey: ['address', 'city'],\n+                id: 'city'\n+              })}\n+              {makeProfileInput({\n+                title: 'State',\n+                valueKey: ['address' , 'state'],\n+                id: 'state'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Zip Code',\n+                valueKey: ['address', 'zipCode'],\n+                id: 'zipCode'\n+              })}\n+              {makeProfileInput({\n+                title: 'Country',\n+                valueKey: ['address', 'country'],\n+                id: 'country'\n+              })}\n+            </FlexRow>\n           </div>\n-          {makeProfileInput({\n-            title: 'Contact Email',\n-            valueKey: 'contactEmail',\n-            disabled: true\n-          })}\n-          <div style={styles.inputLabel}>Username</div>\n-          <div style={styles.uneditableProfileElement}>\n-            {profile && profile.username}\n-          </div>\n-          {makeProfileInput({\n-            title: 'Your Current Position',\n-            valueKey: 'currentPosition'\n-          })}\n-          {makeProfileInput({\n-            title: 'Your Organization',\n-            valueKey: 'organization'\n-          })}\n-          {makeProfileInput({\n-            title: <React.Fragment>\n-              Current Research Work\n-              <TooltipTrigger\n-                side='right'\n-                content={<span>You are required to describe your current research in order to help\n-                  <i>All of Us</i> improve the Researcher Workbench.</span>}\n-              >\n-                <ClrIcon\n-                  shape='info-standard'\n-                  className='is-solid'\n-                  style={{marginLeft: 10, verticalAlign: 'middle', color: colors.accent}}\n-                />\n-              </TooltipTrigger>\n-            </React.Fragment>,\n-            valueKey: 'areaOfResearch',\n-            isLong: true\n-          })}\n-          {makeProfileInput({\n-            title: 'About You',\n-            valueKey: 'aboutYou',\n-            isLong: true\n-          })}\n-          {renderInstitutionalAffiliationComponents()}\n-          <div style={{marginTop: 100, display: 'flex'}}>\n-            <Button type='link'\n-              onClick={() => this.setState({currentProfile: profile})}\n-            >\n-              Discard Changes\n-            </Button>\n-            <TooltipTrigger\n-              side='top'\n-              content={!!errors && 'You must correct errors before saving.'}\n-            >\n-              <Button\n-                data-test-id='save profile'\n-                type='purplePrimary'\n-                style={{marginLeft: 40}}\n-                onClick={() => this.saveProfile(currentProfile)}\n-                disabled={!!errors || fp.isEqual(profile, currentProfile)}\n-              >\n-                Save Profile\n-              </Button>\n-            </TooltipTrigger>\n-          </div>\n+         </div>\n+        <div style={{width: '16rem', marginRight: '4rem'}}>\n+        <div style={styles.title}>Free credits balance\n         </div>\n-       <div>\n-          {profile && <FlexRow style={{\n-            color: colors.primary, paddingRight: '0.5rem', justifyContent: 'flex-end'\n-          }}>\n-            <FlexColumn style={{alignItems: 'flex-end'}}>\n-              <div><i>All of Us</i> FREE credits used:</div>\n+        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+          {profile && <FlexRow style={styles.freeCreditsBox}>\n+            <FlexColumn style={{marginLeft: '0.8rem'}}>\n+              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n               <div>Remaining <i>All of Us</i> FREE credits:</div>", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1OTMyOQ==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410459329", "bodyText": "'on' should be lowercase", "author": "als364", "createdAt": "2020-04-17T20:41:25Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',\n+                valueKey: ['address', 'streetAddress2'],\n+                id: 'streetAddress2'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'City',\n+                valueKey: ['address', 'city'],\n+                id: 'city'\n+              })}\n+              {makeProfileInput({\n+                title: 'State',\n+                valueKey: ['address' , 'state'],\n+                id: 'state'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Zip Code',\n+                valueKey: ['address', 'zipCode'],\n+                id: 'zipCode'\n+              })}\n+              {makeProfileInput({\n+                title: 'Country',\n+                valueKey: ['address', 'country'],\n+                id: 'country'\n+              })}\n+            </FlexRow>\n           </div>\n-          {makeProfileInput({\n-            title: 'Contact Email',\n-            valueKey: 'contactEmail',\n-            disabled: true\n-          })}\n-          <div style={styles.inputLabel}>Username</div>\n-          <div style={styles.uneditableProfileElement}>\n-            {profile && profile.username}\n-          </div>\n-          {makeProfileInput({\n-            title: 'Your Current Position',\n-            valueKey: 'currentPosition'\n-          })}\n-          {makeProfileInput({\n-            title: 'Your Organization',\n-            valueKey: 'organization'\n-          })}\n-          {makeProfileInput({\n-            title: <React.Fragment>\n-              Current Research Work\n-              <TooltipTrigger\n-                side='right'\n-                content={<span>You are required to describe your current research in order to help\n-                  <i>All of Us</i> improve the Researcher Workbench.</span>}\n-              >\n-                <ClrIcon\n-                  shape='info-standard'\n-                  className='is-solid'\n-                  style={{marginLeft: 10, verticalAlign: 'middle', color: colors.accent}}\n-                />\n-              </TooltipTrigger>\n-            </React.Fragment>,\n-            valueKey: 'areaOfResearch',\n-            isLong: true\n-          })}\n-          {makeProfileInput({\n-            title: 'About You',\n-            valueKey: 'aboutYou',\n-            isLong: true\n-          })}\n-          {renderInstitutionalAffiliationComponents()}\n-          <div style={{marginTop: 100, display: 'flex'}}>\n-            <Button type='link'\n-              onClick={() => this.setState({currentProfile: profile})}\n-            >\n-              Discard Changes\n-            </Button>\n-            <TooltipTrigger\n-              side='top'\n-              content={!!errors && 'You must correct errors before saving.'}\n-            >\n-              <Button\n-                data-test-id='save profile'\n-                type='purplePrimary'\n-                style={{marginLeft: 40}}\n-                onClick={() => this.saveProfile(currentProfile)}\n-                disabled={!!errors || fp.isEqual(profile, currentProfile)}\n-              >\n-                Save Profile\n-              </Button>\n-            </TooltipTrigger>\n-          </div>\n+         </div>\n+        <div style={{width: '16rem', marginRight: '4rem'}}>\n+        <div style={styles.title}>Free credits balance\n         </div>\n-       <div>\n-          {profile && <FlexRow style={{\n-            color: colors.primary, paddingRight: '0.5rem', justifyContent: 'flex-end'\n-          }}>\n-            <FlexColumn style={{alignItems: 'flex-end'}}>\n-              <div><i>All of Us</i> FREE credits used:</div>\n+        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+          {profile && <FlexRow style={styles.freeCreditsBox}>\n+            <FlexColumn style={{marginLeft: '0.8rem'}}>\n+              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n               <div>Remaining <i>All of Us</i> FREE credits:</div>\n             </FlexColumn>\n             <FlexColumn style={{alignItems: 'flex-end', marginLeft: '1.0rem'}}>\n-              {usdElement(profile.freeTierUsage)}\n+              <div style={{marginTop: '0.4rem'}}>{usdElement(profile.freeTierUsage)}</div>\n               {usdElement(profile.freeTierDollarQuota - profile.freeTierUsage)}\n             </FlexColumn>\n           </FlexRow>}\n+          <div style={styles.title}>Requirements for All\n+          </div>\n+          <hr style={{...styles.verticalLine, width: '15.8rem'}}/>\n           <div>\n+            <ProfileRegistrationStepStatus\n+                title='Turn On Google 2-Step Verification'", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1OTQ1MA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410459450", "bodyText": "'All of Us' should be italicized", "author": "als364", "createdAt": "2020-04-17T20:41:43Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',\n+                valueKey: ['address', 'streetAddress2'],\n+                id: 'streetAddress2'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'City',\n+                valueKey: ['address', 'city'],\n+                id: 'city'\n+              })}\n+              {makeProfileInput({\n+                title: 'State',\n+                valueKey: ['address' , 'state'],\n+                id: 'state'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Zip Code',\n+                valueKey: ['address', 'zipCode'],\n+                id: 'zipCode'\n+              })}\n+              {makeProfileInput({\n+                title: 'Country',\n+                valueKey: ['address', 'country'],\n+                id: 'country'\n+              })}\n+            </FlexRow>\n           </div>\n-          {makeProfileInput({\n-            title: 'Contact Email',\n-            valueKey: 'contactEmail',\n-            disabled: true\n-          })}\n-          <div style={styles.inputLabel}>Username</div>\n-          <div style={styles.uneditableProfileElement}>\n-            {profile && profile.username}\n-          </div>\n-          {makeProfileInput({\n-            title: 'Your Current Position',\n-            valueKey: 'currentPosition'\n-          })}\n-          {makeProfileInput({\n-            title: 'Your Organization',\n-            valueKey: 'organization'\n-          })}\n-          {makeProfileInput({\n-            title: <React.Fragment>\n-              Current Research Work\n-              <TooltipTrigger\n-                side='right'\n-                content={<span>You are required to describe your current research in order to help\n-                  <i>All of Us</i> improve the Researcher Workbench.</span>}\n-              >\n-                <ClrIcon\n-                  shape='info-standard'\n-                  className='is-solid'\n-                  style={{marginLeft: 10, verticalAlign: 'middle', color: colors.accent}}\n-                />\n-              </TooltipTrigger>\n-            </React.Fragment>,\n-            valueKey: 'areaOfResearch',\n-            isLong: true\n-          })}\n-          {makeProfileInput({\n-            title: 'About You',\n-            valueKey: 'aboutYou',\n-            isLong: true\n-          })}\n-          {renderInstitutionalAffiliationComponents()}\n-          <div style={{marginTop: 100, display: 'flex'}}>\n-            <Button type='link'\n-              onClick={() => this.setState({currentProfile: profile})}\n-            >\n-              Discard Changes\n-            </Button>\n-            <TooltipTrigger\n-              side='top'\n-              content={!!errors && 'You must correct errors before saving.'}\n-            >\n-              <Button\n-                data-test-id='save profile'\n-                type='purplePrimary'\n-                style={{marginLeft: 40}}\n-                onClick={() => this.saveProfile(currentProfile)}\n-                disabled={!!errors || fp.isEqual(profile, currentProfile)}\n-              >\n-                Save Profile\n-              </Button>\n-            </TooltipTrigger>\n-          </div>\n+         </div>\n+        <div style={{width: '16rem', marginRight: '4rem'}}>\n+        <div style={styles.title}>Free credits balance\n         </div>\n-       <div>\n-          {profile && <FlexRow style={{\n-            color: colors.primary, paddingRight: '0.5rem', justifyContent: 'flex-end'\n-          }}>\n-            <FlexColumn style={{alignItems: 'flex-end'}}>\n-              <div><i>All of Us</i> FREE credits used:</div>\n+        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+          {profile && <FlexRow style={styles.freeCreditsBox}>\n+            <FlexColumn style={{marginLeft: '0.8rem'}}>\n+              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n               <div>Remaining <i>All of Us</i> FREE credits:</div>\n             </FlexColumn>\n             <FlexColumn style={{alignItems: 'flex-end', marginLeft: '1.0rem'}}>\n-              {usdElement(profile.freeTierUsage)}\n+              <div style={{marginTop: '0.4rem'}}>{usdElement(profile.freeTierUsage)}</div>\n               {usdElement(profile.freeTierDollarQuota - profile.freeTierUsage)}\n             </FlexColumn>\n           </FlexRow>}\n+          <div style={styles.title}>Requirements for All\n+          </div>\n+          <hr style={{...styles.verticalLine, width: '15.8rem'}}/>\n           <div>\n+            <ProfileRegistrationStepStatus\n+                title='Turn On Google 2-Step Verification'\n+                wasBypassed={!!profile.twoFactorAuthBypassTime}\n+                incompleteButtonText='Set Up'\n+                completedButtonText={getRegistrationTasksMap()['twoFactorAuth'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['twoFactorAuth'].onClick  } />\n+\n+\n+\n+          </div>\n+          <div>\n+\n+            {enableEraCommons && <ProfileRegistrationStepStatus\n+                title='Connect Your eRA Commons Account'\n+                wasBypassed={!!profile.eraCommonsBypassTime}\n+                incompleteButtonText='Link'\n+                completedButtonText={getRegistrationTasksMap()['eraCommons'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['eraCommons'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['eraCommons'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['eraCommons'].onClick} >\n+              <div>\n+                {profile.eraCommonsLinkedNihUsername != null && <React.Fragment>\n+                  <div> Username: </div>\n+                  <div> { profile.eraCommonsLinkedNihUsername } </div>\n+                </React.Fragment>}\n+                {profile.eraCommonsLinkExpireTime != null &&\n+                //  Firecloud returns eraCommons link expiration as 0 if there is no linked account.\n+                profile.eraCommonsLinkExpireTime !== 0\n+                && <React.Fragment>\n+                  <div> Link Expiration: </div>\n+                  <div>\n+                    { moment.unix(profile.eraCommonsLinkExpireTime)\n+                        .format('MMMM Do, YYYY, h:mm:ss A') }\n+                  </div>\n+                </React.Fragment>}\n+              </div>\n+            </ProfileRegistrationStepStatus>}\n+\n+            {enableComplianceTraining && <ProfileRegistrationStepStatus\n+                title='All of Us Responsible Conduct of Research Training'", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ2MDI2NA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410460264", "bodyText": "This 'View current agreement' looks out of place on the screenshots,  could you make sure it's left-aligned and not crowding the 'completed' button?", "author": "als364", "createdAt": "2020-04-17T20:43:41Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',\n+                valueKey: ['address', 'streetAddress2'],\n+                id: 'streetAddress2'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'City',\n+                valueKey: ['address', 'city'],\n+                id: 'city'\n+              })}\n+              {makeProfileInput({\n+                title: 'State',\n+                valueKey: ['address' , 'state'],\n+                id: 'state'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Zip Code',\n+                valueKey: ['address', 'zipCode'],\n+                id: 'zipCode'\n+              })}\n+              {makeProfileInput({\n+                title: 'Country',\n+                valueKey: ['address', 'country'],\n+                id: 'country'\n+              })}\n+            </FlexRow>\n           </div>\n-          {makeProfileInput({\n-            title: 'Contact Email',\n-            valueKey: 'contactEmail',\n-            disabled: true\n-          })}\n-          <div style={styles.inputLabel}>Username</div>\n-          <div style={styles.uneditableProfileElement}>\n-            {profile && profile.username}\n-          </div>\n-          {makeProfileInput({\n-            title: 'Your Current Position',\n-            valueKey: 'currentPosition'\n-          })}\n-          {makeProfileInput({\n-            title: 'Your Organization',\n-            valueKey: 'organization'\n-          })}\n-          {makeProfileInput({\n-            title: <React.Fragment>\n-              Current Research Work\n-              <TooltipTrigger\n-                side='right'\n-                content={<span>You are required to describe your current research in order to help\n-                  <i>All of Us</i> improve the Researcher Workbench.</span>}\n-              >\n-                <ClrIcon\n-                  shape='info-standard'\n-                  className='is-solid'\n-                  style={{marginLeft: 10, verticalAlign: 'middle', color: colors.accent}}\n-                />\n-              </TooltipTrigger>\n-            </React.Fragment>,\n-            valueKey: 'areaOfResearch',\n-            isLong: true\n-          })}\n-          {makeProfileInput({\n-            title: 'About You',\n-            valueKey: 'aboutYou',\n-            isLong: true\n-          })}\n-          {renderInstitutionalAffiliationComponents()}\n-          <div style={{marginTop: 100, display: 'flex'}}>\n-            <Button type='link'\n-              onClick={() => this.setState({currentProfile: profile})}\n-            >\n-              Discard Changes\n-            </Button>\n-            <TooltipTrigger\n-              side='top'\n-              content={!!errors && 'You must correct errors before saving.'}\n-            >\n-              <Button\n-                data-test-id='save profile'\n-                type='purplePrimary'\n-                style={{marginLeft: 40}}\n-                onClick={() => this.saveProfile(currentProfile)}\n-                disabled={!!errors || fp.isEqual(profile, currentProfile)}\n-              >\n-                Save Profile\n-              </Button>\n-            </TooltipTrigger>\n-          </div>\n+         </div>\n+        <div style={{width: '16rem', marginRight: '4rem'}}>\n+        <div style={styles.title}>Free credits balance\n         </div>\n-       <div>\n-          {profile && <FlexRow style={{\n-            color: colors.primary, paddingRight: '0.5rem', justifyContent: 'flex-end'\n-          }}>\n-            <FlexColumn style={{alignItems: 'flex-end'}}>\n-              <div><i>All of Us</i> FREE credits used:</div>\n+        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+          {profile && <FlexRow style={styles.freeCreditsBox}>\n+            <FlexColumn style={{marginLeft: '0.8rem'}}>\n+              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n               <div>Remaining <i>All of Us</i> FREE credits:</div>\n             </FlexColumn>\n             <FlexColumn style={{alignItems: 'flex-end', marginLeft: '1.0rem'}}>\n-              {usdElement(profile.freeTierUsage)}\n+              <div style={{marginTop: '0.4rem'}}>{usdElement(profile.freeTierUsage)}</div>\n               {usdElement(profile.freeTierDollarQuota - profile.freeTierUsage)}\n             </FlexColumn>\n           </FlexRow>}\n+          <div style={styles.title}>Requirements for All\n+          </div>\n+          <hr style={{...styles.verticalLine, width: '15.8rem'}}/>\n           <div>\n+            <ProfileRegistrationStepStatus\n+                title='Turn On Google 2-Step Verification'\n+                wasBypassed={!!profile.twoFactorAuthBypassTime}\n+                incompleteButtonText='Set Up'\n+                completedButtonText={getRegistrationTasksMap()['twoFactorAuth'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['twoFactorAuth'].onClick  } />\n+\n+\n+\n+          </div>\n+          <div>\n+\n+            {enableEraCommons && <ProfileRegistrationStepStatus\n+                title='Connect Your eRA Commons Account'\n+                wasBypassed={!!profile.eraCommonsBypassTime}\n+                incompleteButtonText='Link'\n+                completedButtonText={getRegistrationTasksMap()['eraCommons'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['eraCommons'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['eraCommons'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['eraCommons'].onClick} >\n+              <div>\n+                {profile.eraCommonsLinkedNihUsername != null && <React.Fragment>\n+                  <div> Username: </div>\n+                  <div> { profile.eraCommonsLinkedNihUsername } </div>\n+                </React.Fragment>}\n+                {profile.eraCommonsLinkExpireTime != null &&\n+                //  Firecloud returns eraCommons link expiration as 0 if there is no linked account.\n+                profile.eraCommonsLinkExpireTime !== 0\n+                && <React.Fragment>\n+                  <div> Link Expiration: </div>\n+                  <div>\n+                    { moment.unix(profile.eraCommonsLinkExpireTime)\n+                        .format('MMMM Do, YYYY, h:mm:ss A') }\n+                  </div>\n+                </React.Fragment>}\n+              </div>\n+            </ProfileRegistrationStepStatus>}\n+\n+            {enableComplianceTraining && <ProfileRegistrationStepStatus\n+                title='All of Us Responsible Conduct of Research Training'\n+                wasBypassed={!!profile.complianceTrainingBypassTime}\n+                incompleteButtonText='Access Training'\n+                completedButtonText={getRegistrationTasksMap()['complianceTraining'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['complianceTraining'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['complianceTraining'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['complianceTraining'].onClick} />}\n+\n+\n+            {enableDataUseAgreement && <ProfileRegistrationStepStatus\n+                title='Sign Data User Code Of Conduct'\n+                wasBypassed={!!profile.dataUseAgreementBypassTime}\n+                incompleteButtonText='Sign'\n+                completedButtonText={getRegistrationTasksMap()['dataUserCodeOfConduct'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['dataUserCodeOfConduct'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['dataUserCodeOfConduct'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['dataUserCodeOfConduct'].onClick} >\n+              {profile.dataUseAgreementCompletionTime != null && <React.Fragment>\n+                <div> Agreement Renewal: </div>\n+                <div>\n+                  { moment.unix(profile.dataUseAgreementCompletionTime / 1000)\n+                      .add(1, 'year')\n+                      .format('MMMM Do, YYYY') }\n+                </div>\n+              </React.Fragment>}\n+              <a\n+                  onClick={getRegistrationTasksMap()['dataUserCodeOfConduct'].onClick}>\n+                View current agreement\n+              </a>", "originalCommit": "22eab0eb816ea5a312d46501ef88675be8eee238", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "482cefbd173c97a1d51b7387f9aa9834f6ef48d2", "url": "https://github.com/all-of-us/workbench/commit/482cefbd173c97a1d51b7387f9aa9834f6ef48d2", "message": "PR Comments", "committedDate": "2020-04-21T16:19:23Z", "type": "commit"}, {"oid": "aedf01e54046b516d30d2f259f368813af6ae7a9", "url": "https://github.com/all-of-us/workbench/commit/aedf01e54046b516d30d2f259f368813af6ae7a9", "message": "resolve merge conflict", "committedDate": "2020-04-21T16:35:17Z", "type": "commit"}, {"oid": "d7c7aebf8368abb6a5931beb2f5b557a5431ed9c", "url": "https://github.com/all-of-us/workbench/commit/d7c7aebf8368abb6a5931beb2f5b557a5431ed9c", "message": "Use string | React.ReactNode rather than any", "committedDate": "2020-04-21T16:43:48Z", "type": "commit"}, {"oid": "bebee5e3ef49492b8f3b9c9705629eaded4e2e11", "url": "https://github.com/all-of-us/workbench/commit/bebee5e3ef49492b8f3b9c9705629eaded4e2e11", "message": "spotless", "committedDate": "2020-04-21T17:07:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4ODQ0OA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r414788448", "bodyText": "f in Free should be lowercase.", "author": "als364", "createdAt": "2020-04-24T18:45:24Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -335,187 +323,190 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n     return <FadeBox style={styles.fadebox}>\n       <div style={{width: '95%'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n-      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n-        <div>\n-\n-        <div style={styles.title}>Public displayed Information</div>\n-          <hr style={styles.verticalLine}/>\n-          <FlexRow style={{marginTop: '1rem'}}>\n-            {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n-            })}\n-            {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n-            })}\n-          </FlexRow>\n-          <FlexRow style={{height: '6rem'}}>\n-            <FlexColumn>\n-            {makeProfileInput({\n-              title: 'Your Institution',\n-              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n-              disabled: true\n-            })}\n-            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n-              Institution cannot be empty. Please contact admin\n-            </div>}\n-            </FlexColumn>\n-\n-            <FlexColumn style={{marginBottom: 40}}>\n-              <div style={styles.inputLabel}>Your Role</div>\n-              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n-                          placeholder='Your Role'\n-                          options={this.getRoleOptions()}\n-                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n-                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n-\n-              {showOtherRole && <div>{makeProfileInput({\n-                title: '',\n-                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n-                style: {marginTop: '1rem'}\n-              })}\n-              </div>}\n-            </FlexColumn>\n-\n-\n-          </FlexRow>\n-\n-          <FlexRow style={{width: '100%'}}>\n-            {makeProfileInput({\n-              title: 'Professional URL',\n-              valueKey: 'professionalUrl',\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <FlexRow>\n-\n-            {makeProfileInput({\n-              title: <FlexColumn>\n-                <div>Your research background, experience and research interests</div>\n-                <div style={styles.researchPurposeInfo}>\n-                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n-              </FlexColumn>,\n-              valueKey: 'areaOfResearch',\n-              isLong: true,\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <div style={{width: '65%', marginTop: '0.5rem'}}>\n-            <div style={styles.title}>Private Information</div>\n-            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+        {(!profile || updating) && <SpinnerOverlay/>}\n+        <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+        <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+          <div>\n+            <div style={styles.title}>Public displayed Information</div>\n+            <hr style={styles.verticalLine}/>\n             <FlexRow style={{marginTop: '1rem'}}>\n               {makeProfileInput({\n-                title: 'Your Username',\n-                valueKey: 'username',\n-                disabled: true\n+                title: 'First Name',\n+                valueKey: 'givenName'\n               })}\n               {makeProfileInput({\n-                title: 'Institutional Email Address',\n-                valueKey: 'contactEmail',\n-                disabled: true\n+                title: 'Last Name',\n+                valueKey: 'familyName'\n               })}\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'Street Address 1',\n-                valueKey: ['address', 'streetAddress1'],\n-                id: 'streetAddress1'\n-              })}\n-              {makeProfileInput({\n-                title: 'Street Address 2',\n-                valueKey: ['address', 'streetAddress2'],\n-                id: 'streetAddress2'\n-              })}\n+            <FlexRow style={{height: '6rem'}}>\n+              <FlexColumn>\n+                {makeProfileInput({\n+                  title: 'Your Institution',\n+                  valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+                  disabled: true\n+                })}\n+                {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+                  Institution cannot be empty. Please contact admin\n+                </div>}\n+              </FlexColumn>\n+\n+              <FlexColumn style={{marginBottom: 40}}>\n+                <div style={styles.inputLabel}>Your Role</div>\n+                {profile.verifiedInstitutionalAffiliation &&\n+                <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.setVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n+\n+                {currentProfile.verifiedInstitutionalAffiliation &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum ===\n+                InstitutionalRole.OTHER && <div>{makeProfileInput({\n+                  title: '',\n+                  valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                  style: {marginTop: '1rem'}\n+                })}\n+                </div>}\n+              </FlexColumn>\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'City',\n-                valueKey: ['address', 'city'],\n-                id: 'city'\n-              })}\n+\n+            <FlexRow style={{width: '100%'}}>\n               {makeProfileInput({\n-                title: 'State',\n-                valueKey: ['address' , 'state'],\n-                id: 'state'\n+                title: 'Professional URL',\n+                valueKey: 'professionalUrl',\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n             <FlexRow>\n+\n               {makeProfileInput({\n-                title: 'Zip Code',\n-                valueKey: ['address', 'zipCode'],\n-                id: 'zipCode'\n-              })}\n-              {makeProfileInput({\n-                title: 'Country',\n-                valueKey: ['address', 'country'],\n-                id: 'country'\n+                title: <FlexColumn>\n+                  <div>Your research background, experience and research interests</div>\n+                  <div style={styles.researchPurposeInfo}>\n+                    This information will be posted publicly on the <i>AoU</i> Research Hub Website\n+                    to\n+                    inform the <i>AoU</i> Research Participants.\n+                  </div>\n+                </FlexColumn>,\n+                valueKey: 'areaOfResearch',\n+                isLong: true,\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n+            <div style={{width: '65%', marginTop: '0.5rem'}}>\n+              <div style={styles.title}>Private Information</div>\n+              <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+              <FlexRow style={{marginTop: '1rem'}}>\n+                {makeProfileInput({\n+                  title: 'Username',\n+                  valueKey: 'username',\n+                  disabled: true\n+                })}\n+                {makeProfileInput({\n+                  title: 'Institutional email address',\n+                  valueKey: 'contactEmail',\n+                  disabled: true\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'Street address 1',\n+                  valueKey: ['address', 'streetAddress1'],\n+                  id: 'streetAddress1'\n+                })}\n+                {makeProfileInput({\n+                  title: 'Street address 2',\n+                  valueKey: ['address', 'streetAddress2'],\n+                  id: 'streetAddress2'\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'City',\n+                  valueKey: ['address', 'city'],\n+                  id: 'city'\n+                })}\n+                {makeProfileInput({\n+                  title: 'State',\n+                  valueKey: ['address', 'state'],\n+                  id: 'state'\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'Zip Code',\n+                  valueKey: ['address', 'zipCode'],\n+                  id: 'zipCode'\n+                })}\n+                {makeProfileInput({\n+                  title: 'Country',\n+                  valueKey: ['address', 'country'],\n+                  id: 'country'\n+                })}\n+              </FlexRow>\n+            </div>\n           </div>\n-         </div>\n-        <div style={{width: '16rem', marginRight: '4rem'}}>\n-        <div style={styles.title}>Free credits balance\n-        </div>\n-        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n-          {profile && <FlexRow style={styles.freeCreditsBox}>\n-            <FlexColumn style={{marginLeft: '0.8rem'}}>\n-              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n-              <div>Remaining <i>All of Us</i> FREE credits:</div>\n-            </FlexColumn>\n-            <FlexColumn style={{alignItems: 'flex-end', marginLeft: '1.0rem'}}>\n-              <div style={{marginTop: '0.4rem'}}>{usdElement(profile.freeTierUsage)}</div>\n-              {usdElement(profile.freeTierDollarQuota - profile.freeTierUsage)}\n-            </FlexColumn>\n-          </FlexRow>}\n-          <div style={styles.title}>Requirements for All\n-          </div>\n-          <hr style={{...styles.verticalLine, width: '15.8rem'}}/>\n-          <div>\n-            <ProfileRegistrationStepStatus\n-                title='Turn On Google 2-Step Verification'\n-                wasBypassed={!!profile.twoFactorAuthBypassTime}\n-                incompleteButtonText='Set Up'\n-                completedButtonText={getRegistrationTasksMap()['twoFactorAuth'].completedText}\n-                completionTimestamp={getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile)}\n-                isComplete={!!(getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile))}\n-                completeStep={getRegistrationTasksMap()['twoFactorAuth'].onClick  } />\n-\n+          <div style={{width: '16rem', marginRight: '4rem'}}>\n+            <div style={styles.title}>Free credits balance\n+            </div>\n+            <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+            {profile && <FlexRow style={styles.freeCreditsBox}>\n+              <FlexColumn style={{marginLeft: '0.8rem'}}>\n+                <div style={{marginTop: '0.4rem'}}><i>All of Us</i> Free credits used:</div>", "originalCommit": "482cefbd173c97a1d51b7387f9aa9834f6ef48d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4ODkzNA==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r414788934", "bodyText": "This should be 'User name'", "author": "als364", "createdAt": "2020-04-24T18:46:14Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -335,187 +323,190 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n     return <FadeBox style={styles.fadebox}>\n       <div style={{width: '95%'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n-      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n-        <div>\n-\n-        <div style={styles.title}>Public displayed Information</div>\n-          <hr style={styles.verticalLine}/>\n-          <FlexRow style={{marginTop: '1rem'}}>\n-            {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n-            })}\n-            {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n-            })}\n-          </FlexRow>\n-          <FlexRow style={{height: '6rem'}}>\n-            <FlexColumn>\n-            {makeProfileInput({\n-              title: 'Your Institution',\n-              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n-              disabled: true\n-            })}\n-            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n-              Institution cannot be empty. Please contact admin\n-            </div>}\n-            </FlexColumn>\n-\n-            <FlexColumn style={{marginBottom: 40}}>\n-              <div style={styles.inputLabel}>Your Role</div>\n-              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n-                          placeholder='Your Role'\n-                          options={this.getRoleOptions()}\n-                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n-                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n-\n-              {showOtherRole && <div>{makeProfileInput({\n-                title: '',\n-                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n-                style: {marginTop: '1rem'}\n-              })}\n-              </div>}\n-            </FlexColumn>\n-\n-\n-          </FlexRow>\n-\n-          <FlexRow style={{width: '100%'}}>\n-            {makeProfileInput({\n-              title: 'Professional URL',\n-              valueKey: 'professionalUrl',\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <FlexRow>\n-\n-            {makeProfileInput({\n-              title: <FlexColumn>\n-                <div>Your research background, experience and research interests</div>\n-                <div style={styles.researchPurposeInfo}>\n-                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n-              </FlexColumn>,\n-              valueKey: 'areaOfResearch',\n-              isLong: true,\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <div style={{width: '65%', marginTop: '0.5rem'}}>\n-            <div style={styles.title}>Private Information</div>\n-            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+        {(!profile || updating) && <SpinnerOverlay/>}\n+        <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+        <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+          <div>\n+            <div style={styles.title}>Public displayed Information</div>\n+            <hr style={styles.verticalLine}/>\n             <FlexRow style={{marginTop: '1rem'}}>\n               {makeProfileInput({\n-                title: 'Your Username',\n-                valueKey: 'username',\n-                disabled: true\n+                title: 'First Name',\n+                valueKey: 'givenName'\n               })}\n               {makeProfileInput({\n-                title: 'Institutional Email Address',\n-                valueKey: 'contactEmail',\n-                disabled: true\n+                title: 'Last Name',\n+                valueKey: 'familyName'\n               })}\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'Street Address 1',\n-                valueKey: ['address', 'streetAddress1'],\n-                id: 'streetAddress1'\n-              })}\n-              {makeProfileInput({\n-                title: 'Street Address 2',\n-                valueKey: ['address', 'streetAddress2'],\n-                id: 'streetAddress2'\n-              })}\n+            <FlexRow style={{height: '6rem'}}>\n+              <FlexColumn>\n+                {makeProfileInput({\n+                  title: 'Your Institution',\n+                  valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+                  disabled: true\n+                })}\n+                {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+                  Institution cannot be empty. Please contact admin\n+                </div>}\n+              </FlexColumn>\n+\n+              <FlexColumn style={{marginBottom: 40}}>\n+                <div style={styles.inputLabel}>Your Role</div>\n+                {profile.verifiedInstitutionalAffiliation &&\n+                <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.setVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n+\n+                {currentProfile.verifiedInstitutionalAffiliation &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum ===\n+                InstitutionalRole.OTHER && <div>{makeProfileInput({\n+                  title: '',\n+                  valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                  style: {marginTop: '1rem'}\n+                })}\n+                </div>}\n+              </FlexColumn>\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'City',\n-                valueKey: ['address', 'city'],\n-                id: 'city'\n-              })}\n+\n+            <FlexRow style={{width: '100%'}}>\n               {makeProfileInput({\n-                title: 'State',\n-                valueKey: ['address' , 'state'],\n-                id: 'state'\n+                title: 'Professional URL',\n+                valueKey: 'professionalUrl',\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n             <FlexRow>\n+\n               {makeProfileInput({\n-                title: 'Zip Code',\n-                valueKey: ['address', 'zipCode'],\n-                id: 'zipCode'\n-              })}\n-              {makeProfileInput({\n-                title: 'Country',\n-                valueKey: ['address', 'country'],\n-                id: 'country'\n+                title: <FlexColumn>\n+                  <div>Your research background, experience and research interests</div>\n+                  <div style={styles.researchPurposeInfo}>\n+                    This information will be posted publicly on the <i>AoU</i> Research Hub Website\n+                    to\n+                    inform the <i>AoU</i> Research Participants.\n+                  </div>\n+                </FlexColumn>,\n+                valueKey: 'areaOfResearch',\n+                isLong: true,\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n+            <div style={{width: '65%', marginTop: '0.5rem'}}>\n+              <div style={styles.title}>Private Information</div>\n+              <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+              <FlexRow style={{marginTop: '1rem'}}>\n+                {makeProfileInput({\n+                  title: 'Username',", "originalCommit": "482cefbd173c97a1d51b7387f9aa9834f6ef48d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4OTIzMw==", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r414789233", "bodyText": "f in Free should be lowercase", "author": "als364", "createdAt": "2020-04-24T18:46:42Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -335,187 +323,190 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n     return <FadeBox style={styles.fadebox}>\n       <div style={{width: '95%'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n-      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n-        <div>\n-\n-        <div style={styles.title}>Public displayed Information</div>\n-          <hr style={styles.verticalLine}/>\n-          <FlexRow style={{marginTop: '1rem'}}>\n-            {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n-            })}\n-            {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n-            })}\n-          </FlexRow>\n-          <FlexRow style={{height: '6rem'}}>\n-            <FlexColumn>\n-            {makeProfileInput({\n-              title: 'Your Institution',\n-              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n-              disabled: true\n-            })}\n-            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n-              Institution cannot be empty. Please contact admin\n-            </div>}\n-            </FlexColumn>\n-\n-            <FlexColumn style={{marginBottom: 40}}>\n-              <div style={styles.inputLabel}>Your Role</div>\n-              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n-                          placeholder='Your Role'\n-                          options={this.getRoleOptions()}\n-                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n-                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n-\n-              {showOtherRole && <div>{makeProfileInput({\n-                title: '',\n-                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n-                style: {marginTop: '1rem'}\n-              })}\n-              </div>}\n-            </FlexColumn>\n-\n-\n-          </FlexRow>\n-\n-          <FlexRow style={{width: '100%'}}>\n-            {makeProfileInput({\n-              title: 'Professional URL',\n-              valueKey: 'professionalUrl',\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <FlexRow>\n-\n-            {makeProfileInput({\n-              title: <FlexColumn>\n-                <div>Your research background, experience and research interests</div>\n-                <div style={styles.researchPurposeInfo}>\n-                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n-              </FlexColumn>,\n-              valueKey: 'areaOfResearch',\n-              isLong: true,\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <div style={{width: '65%', marginTop: '0.5rem'}}>\n-            <div style={styles.title}>Private Information</div>\n-            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+        {(!profile || updating) && <SpinnerOverlay/>}\n+        <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+        <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+          <div>\n+            <div style={styles.title}>Public displayed Information</div>\n+            <hr style={styles.verticalLine}/>\n             <FlexRow style={{marginTop: '1rem'}}>\n               {makeProfileInput({\n-                title: 'Your Username',\n-                valueKey: 'username',\n-                disabled: true\n+                title: 'First Name',\n+                valueKey: 'givenName'\n               })}\n               {makeProfileInput({\n-                title: 'Institutional Email Address',\n-                valueKey: 'contactEmail',\n-                disabled: true\n+                title: 'Last Name',\n+                valueKey: 'familyName'\n               })}\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'Street Address 1',\n-                valueKey: ['address', 'streetAddress1'],\n-                id: 'streetAddress1'\n-              })}\n-              {makeProfileInput({\n-                title: 'Street Address 2',\n-                valueKey: ['address', 'streetAddress2'],\n-                id: 'streetAddress2'\n-              })}\n+            <FlexRow style={{height: '6rem'}}>\n+              <FlexColumn>\n+                {makeProfileInput({\n+                  title: 'Your Institution',\n+                  valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+                  disabled: true\n+                })}\n+                {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+                  Institution cannot be empty. Please contact admin\n+                </div>}\n+              </FlexColumn>\n+\n+              <FlexColumn style={{marginBottom: 40}}>\n+                <div style={styles.inputLabel}>Your Role</div>\n+                {profile.verifiedInstitutionalAffiliation &&\n+                <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.setVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n+\n+                {currentProfile.verifiedInstitutionalAffiliation &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum ===\n+                InstitutionalRole.OTHER && <div>{makeProfileInput({\n+                  title: '',\n+                  valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                  style: {marginTop: '1rem'}\n+                })}\n+                </div>}\n+              </FlexColumn>\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'City',\n-                valueKey: ['address', 'city'],\n-                id: 'city'\n-              })}\n+\n+            <FlexRow style={{width: '100%'}}>\n               {makeProfileInput({\n-                title: 'State',\n-                valueKey: ['address' , 'state'],\n-                id: 'state'\n+                title: 'Professional URL',\n+                valueKey: 'professionalUrl',\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n             <FlexRow>\n+\n               {makeProfileInput({\n-                title: 'Zip Code',\n-                valueKey: ['address', 'zipCode'],\n-                id: 'zipCode'\n-              })}\n-              {makeProfileInput({\n-                title: 'Country',\n-                valueKey: ['address', 'country'],\n-                id: 'country'\n+                title: <FlexColumn>\n+                  <div>Your research background, experience and research interests</div>\n+                  <div style={styles.researchPurposeInfo}>\n+                    This information will be posted publicly on the <i>AoU</i> Research Hub Website\n+                    to\n+                    inform the <i>AoU</i> Research Participants.\n+                  </div>\n+                </FlexColumn>,\n+                valueKey: 'areaOfResearch',\n+                isLong: true,\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n+            <div style={{width: '65%', marginTop: '0.5rem'}}>\n+              <div style={styles.title}>Private Information</div>\n+              <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+              <FlexRow style={{marginTop: '1rem'}}>\n+                {makeProfileInput({\n+                  title: 'Username',\n+                  valueKey: 'username',\n+                  disabled: true\n+                })}\n+                {makeProfileInput({\n+                  title: 'Institutional email address',\n+                  valueKey: 'contactEmail',\n+                  disabled: true\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'Street address 1',\n+                  valueKey: ['address', 'streetAddress1'],\n+                  id: 'streetAddress1'\n+                })}\n+                {makeProfileInput({\n+                  title: 'Street address 2',\n+                  valueKey: ['address', 'streetAddress2'],\n+                  id: 'streetAddress2'\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'City',\n+                  valueKey: ['address', 'city'],\n+                  id: 'city'\n+                })}\n+                {makeProfileInput({\n+                  title: 'State',\n+                  valueKey: ['address', 'state'],\n+                  id: 'state'\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'Zip Code',\n+                  valueKey: ['address', 'zipCode'],\n+                  id: 'zipCode'\n+                })}\n+                {makeProfileInput({\n+                  title: 'Country',\n+                  valueKey: ['address', 'country'],\n+                  id: 'country'\n+                })}\n+              </FlexRow>\n+            </div>\n           </div>\n-         </div>\n-        <div style={{width: '16rem', marginRight: '4rem'}}>\n-        <div style={styles.title}>Free credits balance\n-        </div>\n-        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n-          {profile && <FlexRow style={styles.freeCreditsBox}>\n-            <FlexColumn style={{marginLeft: '0.8rem'}}>\n-              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n-              <div>Remaining <i>All of Us</i> FREE credits:</div>\n-            </FlexColumn>\n-            <FlexColumn style={{alignItems: 'flex-end', marginLeft: '1.0rem'}}>\n-              <div style={{marginTop: '0.4rem'}}>{usdElement(profile.freeTierUsage)}</div>\n-              {usdElement(profile.freeTierDollarQuota - profile.freeTierUsage)}\n-            </FlexColumn>\n-          </FlexRow>}\n-          <div style={styles.title}>Requirements for All\n-          </div>\n-          <hr style={{...styles.verticalLine, width: '15.8rem'}}/>\n-          <div>\n-            <ProfileRegistrationStepStatus\n-                title='Turn On Google 2-Step Verification'\n-                wasBypassed={!!profile.twoFactorAuthBypassTime}\n-                incompleteButtonText='Set Up'\n-                completedButtonText={getRegistrationTasksMap()['twoFactorAuth'].completedText}\n-                completionTimestamp={getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile)}\n-                isComplete={!!(getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile))}\n-                completeStep={getRegistrationTasksMap()['twoFactorAuth'].onClick  } />\n-\n+          <div style={{width: '16rem', marginRight: '4rem'}}>\n+            <div style={styles.title}>Free credits balance\n+            </div>\n+            <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+            {profile && <FlexRow style={styles.freeCreditsBox}>\n+              <FlexColumn style={{marginLeft: '0.8rem'}}>\n+                <div style={{marginTop: '0.4rem'}}><i>All of Us</i> Free credits used:</div>\n+                <div>Remaining <i>All of Us</i> Free credits:</div>", "originalCommit": "482cefbd173c97a1d51b7387f9aa9834f6ef48d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ecfb886a729200892312eb35a7045e18208589e8", "url": "https://github.com/all-of-us/workbench/commit/ecfb886a729200892312eb35a7045e18208589e8", "message": "Pr comments : Correct case", "committedDate": "2020-04-27T16:23:05Z", "type": "commit"}, {"oid": "ff461eda66c325eed4e765febb855705a44f7140", "url": "https://github.com/all-of-us/workbench/commit/ff461eda66c325eed4e765febb855705a44f7140", "message": "Resolve conflict", "committedDate": "2020-04-27T17:29:39Z", "type": "commit"}, {"oid": "22650782aad8ca02894481d910e671a6458de6e8", "url": "https://github.com/all-of-us/workbench/commit/22650782aad8ca02894481d910e671a6458de6e8", "message": "Remove duplicate update demographic link", "committedDate": "2020-04-27T19:28:45Z", "type": "commit"}]}