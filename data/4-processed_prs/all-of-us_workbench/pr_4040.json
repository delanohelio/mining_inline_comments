{"pr_number": 4040, "pr_title": "[risk=medium][RW-5481] Link Admin Notebook Preview pages from Workspace Admin page", "pr_createdAt": "2020-09-21T21:36:21Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4040", "timeline": [{"oid": "462466d2babda6963c67f896cfd89c7ba3dfb1aa", "url": "https://github.com/all-of-us/workbench/commit/462466d2babda6963c67f896cfd89c7ba3dfb1aa", "message": "Disable preview when the file is too large", "committedDate": "2020-09-22T15:14:35Z", "type": "forcePushed"}, {"oid": "212a295e160d1bb8359ed57b472f0294c856cb14", "url": "https://github.com/all-of-us/workbench/commit/212a295e160d1bb8359ed57b472f0294c856cb14", "message": "Disable preview when the file is too large", "committedDate": "2020-09-22T17:34:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk2NDMxMw==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r492964313", "bodyText": "Nice to see function components and hooks being used!", "author": "petesantos", "createdAt": "2020-09-22T18:56:39Z", "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -68,19 +78,33 @@ const workspaceInfoField = (labelText: string, divContents: React.ReactFragment)\n   </FlexRow>;\n };\n \n-const FileDetailsTable = (props: {data: Array<FileDetail>, bucket: string}) => {\n-  const {data, bucket} = props;\n+const NOTEBOOKS_DIRECTORY = 'notebooks';\n+const NOTEBOOKS_SUFFIX = '.ipynb';\n+const MAX_NOTEBOOK_READ_SIZE_BYTES = 5 * 1000 * 1000; // see NotebooksServiceImpl\n+\n+interface FileDetailsProps {\n+  workspaceNamespace: string;\n+  data: Array<FileDetail>;\n+  bucket: string;\n+}\n+\n+const FileDetailsTable = (props: FileDetailsProps) => {\n+  const {workspaceNamespace, data, bucket} = props;\n \n   interface TableEntry {\n-    name: string;\n-    size: string;\n     location: string;\n+    rawName: string;\n+    nameCell: ReactFragment;\n+    size: string;\n   }\n \n+  const [tableData, setTableData] = useState<Array<TableEntry>>();", "originalCommit": "30480713e59d2549d177b934e74360377ee75fc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk4NDUwNg==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r492984506", "bodyText": "Could this be another function component, with file and accessReason as props? If not, could accessReason be factored out as a param rather than using a closure?", "author": "petesantos", "createdAt": "2020-09-22T19:33:41Z", "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -92,35 +116,76 @@ const FileDetailsTable = (props: {data: Array<FileDetail>, bucket: string}) => {\n     }\n   };\n \n-  const formattedData: Array<TableEntry> = data.map(file => {\n-    return {\n-      name: file.name,\n-      size: formatMB(file.sizeInBytes),\n-      location: getLocation(file)\n+  const nameCell = (file: FileDetail): React.ReactFragment => {", "originalCommit": "30480713e59d2549d177b934e74360377ee75fc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk5MDAxOA==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r492990018", "bodyText": "It looks like these functions (getLocation, nameCell and formatMB) can be factored outside of the main function component - this would prevent redefining the function on each render call. Would there be an issue with moving them?", "author": "petesantos", "createdAt": "2020-09-22T19:44:23Z", "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -68,19 +78,33 @@ const workspaceInfoField = (labelText: string, divContents: React.ReactFragment)\n   </FlexRow>;\n };\n \n-const FileDetailsTable = (props: {data: Array<FileDetail>, bucket: string}) => {\n-  const {data, bucket} = props;\n+const NOTEBOOKS_DIRECTORY = 'notebooks';\n+const NOTEBOOKS_SUFFIX = '.ipynb';\n+const MAX_NOTEBOOK_READ_SIZE_BYTES = 5 * 1000 * 1000; // see NotebooksServiceImpl\n+\n+interface FileDetailsProps {\n+  workspaceNamespace: string;\n+  data: Array<FileDetail>;\n+  bucket: string;\n+}\n+\n+const FileDetailsTable = (props: FileDetailsProps) => {\n+  const {workspaceNamespace, data, bucket} = props;\n \n   interface TableEntry {\n-    name: string;\n-    size: string;\n     location: string;\n+    rawName: string;\n+    nameCell: ReactFragment;\n+    size: string;\n   }\n \n+  const [tableData, setTableData] = useState<Array<TableEntry>>();\n+  const [accessReason, setAccessReason] = useState('');\n+\n   const getLocation = (file: FileDetail): string => {\n     const prefix = `${bucket}/`;\n     const suffix = `/${file.name}`;\n-    return file.path.replace(prefix, '').replace(suffix, '');\n+    return file.path.replace(prefix, '').replace(suffix, '').trim();", "originalCommit": "30480713e59d2549d177b934e74360377ee75fc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk5OTc2MA==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r492999760", "bodyText": "What are your thoughts on using a fp.cond for something like this?\nSomething along the lines of:\n    return fp.cond([\n      [() => NOTEBOOKS_DIRECTORY === getLocation(file) && filename.endsWith(NOTEBOOKS_SUFFIX) && (file.sizeInBytes > MAX_NOTEBOOK_READ_SIZE_BYTES) , enablePreview],\n      [() => NOTEBOOKS_DIRECTORY === getLocation(file) && filename.endsWith(NOTEBOOKS_SUFFIX), tooLargeToPreview],\n      [() => true, () => filenameText]\n    ])(accessReason)\nWhere enablePreview and tooLargeToPreview are defined functions that return the fragment", "author": "petesantos", "createdAt": "2020-09-22T20:02:34Z", "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -92,35 +116,76 @@ const FileDetailsTable = (props: {data: Array<FileDetail>, bucket: string}) => {\n     }\n   };\n \n-  const formattedData: Array<TableEntry> = data.map(file => {\n-    return {\n-      name: file.name,\n-      size: formatMB(file.sizeInBytes),\n-      location: getLocation(file)\n+  const nameCell = (file: FileDetail): React.ReactFragment => {\n+    const filename = file.name.trim();\n+    const filenameText = <span>{filename}</span>;\n+    const navigateToPreview = () => {\n+      navigate(['admin', 'workspaces', workspaceNamespace, filename],\n+          { queryParams: { accessReason: accessReason } });\n     };\n-  });\n \n-  const sortedData = formattedData.sort((a, b) => {\n-    const locCmp = a.location.localeCompare(b.location);\n-    if (locCmp === 0) {\n-      return a.name.localeCompare(b.name);\n+    // remove first check after RW-5626\n+    if (NOTEBOOKS_DIRECTORY === getLocation(file) && filename.endsWith(NOTEBOOKS_SUFFIX)) {", "originalCommit": "30480713e59d2549d177b934e74360377ee75fc6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYyODU1NA==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r493628554", "bodyText": "not sure what fp.cond gets us beyond if - but I broke out the returned fragments and that looks more clear to me", "author": "jmthibault79", "createdAt": "2020-09-23T14:15:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk5OTc2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY5MDY0MQ==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r493690641", "bodyText": "We could have a simpler cond util function that would clean it up a bit more.\nI like cond for the clarity/declarative approach. Looking at the conditions I can read what the outcome is supposed to be. It also reduces the cyclomatic complexity a bit by eliminating the nested conditionals.", "author": "petesantos", "createdAt": "2020-09-23T15:33:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk5OTc2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1MjUyNQ==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r494252525", "bodyText": "OK - gave cond() a try.  PTAL", "author": "jmthibault79", "createdAt": "2020-09-24T11:52:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk5OTc2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAwNDQyMQ==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r493004421", "bodyText": "Thoughts on making this a ternary?\n      const locCmp = a.location.localeCompare(b.location);\n      return locCmp === 0 ? a.rawName.localeCompare(b.rawName) : locCmp", "author": "petesantos", "createdAt": "2020-09-22T20:11:28Z", "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -92,35 +116,76 @@ const FileDetailsTable = (props: {data: Array<FileDetail>, bucket: string}) => {\n     }\n   };\n \n-  const formattedData: Array<TableEntry> = data.map(file => {\n-    return {\n-      name: file.name,\n-      size: formatMB(file.sizeInBytes),\n-      location: getLocation(file)\n+  const nameCell = (file: FileDetail): React.ReactFragment => {\n+    const filename = file.name.trim();\n+    const filenameText = <span>{filename}</span>;\n+    const navigateToPreview = () => {\n+      navigate(['admin', 'workspaces', workspaceNamespace, filename],\n+          { queryParams: { accessReason: accessReason } });\n     };\n-  });\n \n-  const sortedData = formattedData.sort((a, b) => {\n-    const locCmp = a.location.localeCompare(b.location);\n-    if (locCmp === 0) {\n-      return a.name.localeCompare(b.name);\n+    // remove first check after RW-5626\n+    if (NOTEBOOKS_DIRECTORY === getLocation(file) && filename.endsWith(NOTEBOOKS_SUFFIX)) {\n+      if (file.sizeInBytes > MAX_NOTEBOOK_READ_SIZE_BYTES) {\n+        return <FlexRow>\n+          {filenameText}\n+          <TooltipTrigger\n+            content={`Files larger than ${formatMB(MAX_NOTEBOOK_READ_SIZE_BYTES)} MB are too large to preview`}\n+          ><Button style={styles.previewButton} disabled={true}>Preview</Button>\n+          </TooltipTrigger>\n+        </FlexRow>;\n+      } else {\n+        return <FlexRow>\n+          {filenameText}\n+          <TooltipTrigger content='Please enter an access reason below' disabled={accessReason && accessReason.trim()}>\n+            <Button style={styles.previewButton} disabled={!accessReason || !accessReason.trim()}\n+                    onClick={navigateToPreview}>Preview</Button>\n+          </TooltipTrigger>\n+        </FlexRow>;\n+      }\n     } else {\n-      return locCmp;\n+      return filenameText;\n     }\n-  });\n-\n-  return <DataTable\n-      data-test-id='object-details-table'\n-      value={sortedData}\n-      style={styles.fileDetailsTable}\n-      scrollable={true}\n-      paginator={true}\n-      paginatorTemplate='CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown'\n-      currentPageReportTemplate='Showing {first} to {last} of {totalRecords} entries'>\n-    <Column field='location' header='Location'/>\n-    <Column field='name' header='Filename'/>\n-    <Column field='size' header='File size (MB)'/>\n-  </DataTable>;\n+  };\n+\n+  const setupTable = () => {\n+    setTableData(data\n+      .map(file => {\n+        return {\n+          location: getLocation(file),\n+          rawName: file.name,\n+          nameCell: nameCell(file),\n+          size: formatMB(file.sizeInBytes),\n+        }; })\n+      .sort((a, b) => {\n+        const locCmp = a.location.localeCompare(b.location);\n+        if (locCmp === 0) {\n+          return a.rawName.localeCompare(b.rawName);\n+        } else {\n+          return locCmp;\n+        }}));", "originalCommit": "30480713e59d2549d177b934e74360377ee75fc6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzODU3Ng==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r493038576", "bodyText": "I am not seeing the connection between accessReason and setting the table data - does the table data change as the accessReason changes? If so could this be added to the onChange handler rather than as an effect?", "author": "petesantos", "createdAt": "2020-09-22T21:16:17Z", "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -92,35 +116,76 @@ const FileDetailsTable = (props: {data: Array<FileDetail>, bucket: string}) => {\n     }\n   };\n \n-  const formattedData: Array<TableEntry> = data.map(file => {\n-    return {\n-      name: file.name,\n-      size: formatMB(file.sizeInBytes),\n-      location: getLocation(file)\n+  const nameCell = (file: FileDetail): React.ReactFragment => {\n+    const filename = file.name.trim();\n+    const filenameText = <span>{filename}</span>;\n+    const navigateToPreview = () => {\n+      navigate(['admin', 'workspaces', workspaceNamespace, filename],\n+          { queryParams: { accessReason: accessReason } });\n     };\n-  });\n \n-  const sortedData = formattedData.sort((a, b) => {\n-    const locCmp = a.location.localeCompare(b.location);\n-    if (locCmp === 0) {\n-      return a.name.localeCompare(b.name);\n+    // remove first check after RW-5626\n+    if (NOTEBOOKS_DIRECTORY === getLocation(file) && filename.endsWith(NOTEBOOKS_SUFFIX)) {\n+      if (file.sizeInBytes > MAX_NOTEBOOK_READ_SIZE_BYTES) {\n+        return <FlexRow>\n+          {filenameText}\n+          <TooltipTrigger\n+            content={`Files larger than ${formatMB(MAX_NOTEBOOK_READ_SIZE_BYTES)} MB are too large to preview`}\n+          ><Button style={styles.previewButton} disabled={true}>Preview</Button>\n+          </TooltipTrigger>\n+        </FlexRow>;\n+      } else {\n+        return <FlexRow>\n+          {filenameText}\n+          <TooltipTrigger content='Please enter an access reason below' disabled={accessReason && accessReason.trim()}>\n+            <Button style={styles.previewButton} disabled={!accessReason || !accessReason.trim()}\n+                    onClick={navigateToPreview}>Preview</Button>\n+          </TooltipTrigger>\n+        </FlexRow>;\n+      }\n     } else {\n-      return locCmp;\n+      return filenameText;\n     }\n-  });\n-\n-  return <DataTable\n-      data-test-id='object-details-table'\n-      value={sortedData}\n-      style={styles.fileDetailsTable}\n-      scrollable={true}\n-      paginator={true}\n-      paginatorTemplate='CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown'\n-      currentPageReportTemplate='Showing {first} to {last} of {totalRecords} entries'>\n-    <Column field='location' header='Location'/>\n-    <Column field='name' header='Filename'/>\n-    <Column field='size' header='File size (MB)'/>\n-  </DataTable>;\n+  };\n+\n+  const setupTable = () => {\n+    setTableData(data\n+      .map(file => {\n+        return {\n+          location: getLocation(file),\n+          rawName: file.name,\n+          nameCell: nameCell(file),\n+          size: formatMB(file.sizeInBytes),\n+        }; })\n+      .sort((a, b) => {\n+        const locCmp = a.location.localeCompare(b.location);\n+        if (locCmp === 0) {\n+          return a.rawName.localeCompare(b.rawName);\n+        } else {\n+          return locCmp;\n+        }}));\n+  };\n+\n+  useEffect(() => {", "originalCommit": "30480713e59d2549d177b934e74360377ee75fc6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUyMTIwNQ==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r493521205", "bodyText": "The enabled/disabled state of the button changes depending on accessReason.  This way of linking them does feel clunky.\nI'll see what I can do with onChange.", "author": "jmthibault79", "createdAt": "2020-09-23T12:19:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzODU3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU5NzcyNg==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r493597726", "bodyText": "now updated via onChange", "author": "jmthibault79", "createdAt": "2020-09-23T13:37:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzODU3Ng=="}], "type": "inlineReview"}, {"oid": "bf8172cce472d802ea6f3a1081ea2eab2fa04b6f", "url": "https://github.com/all-of-us/workbench/commit/bf8172cce472d802ea6f3a1081ea2eab2fa04b6f", "message": "NameCell component", "committedDate": "2020-09-23T13:32:48Z", "type": "forcePushed"}, {"oid": "604a3cacd1a6768461703eb94bb88c8c2a23d155", "url": "https://github.com/all-of-us/workbench/commit/604a3cacd1a6768461703eb94bb88c8c2a23d155", "message": "Add preview links to file table", "committedDate": "2020-09-23T22:24:10Z", "type": "commit"}, {"oid": "c64ca809c95d1d0f3ba517bd40e4cf04a4826856", "url": "https://github.com/all-of-us/workbench/commit/c64ca809c95d1d0f3ba517bd40e4cf04a4826856", "message": "Disable preview when the file is too large", "committedDate": "2020-09-23T22:24:10Z", "type": "commit"}, {"oid": "453d2f1b9c10baf309f0d47b7c47914256211315", "url": "https://github.com/all-of-us/workbench/commit/453d2f1b9c10baf309f0d47b7c47914256211315", "message": "rebase fix", "committedDate": "2020-09-23T22:24:11Z", "type": "commit"}, {"oid": "51af09fdd39af1c97132cd32eef8ca4286d051a5", "url": "https://github.com/all-of-us/workbench/commit/51af09fdd39af1c97132cd32eef8ca4286d051a5", "message": "renaming", "committedDate": "2020-09-23T22:24:11Z", "type": "commit"}, {"oid": "080263160d312d7898ed785d595b8c8a4bc0dd7c", "url": "https://github.com/all-of-us/workbench/commit/080263160d312d7898ed785d595b8c8a4bc0dd7c", "message": "rebase fix + lint", "committedDate": "2020-09-23T22:24:11Z", "type": "commit"}, {"oid": "fa0260e02c7338067f547d5182a30d494dbc1bc4", "url": "https://github.com/all-of-us/workbench/commit/fa0260e02c7338067f547d5182a30d494dbc1bc4", "message": "use ternary to sort", "committedDate": "2020-09-23T22:24:11Z", "type": "commit"}, {"oid": "b4dc165d5bf34e0e6a47d748330d1d7daa289c87", "url": "https://github.com/all-of-us/workbench/commit/b4dc165d5bf34e0e6a47d748330d1d7daa289c87", "message": "move parseLocation() out of component", "committedDate": "2020-09-23T22:24:12Z", "type": "commit"}, {"oid": "f2549fc4f742bcf35d28d3b26b5a203e6ac983a7", "url": "https://github.com/all-of-us/workbench/commit/f2549fc4f742bcf35d28d3b26b5a203e6ac983a7", "message": "NameCell component", "committedDate": "2020-09-23T22:24:12Z", "type": "commit"}, {"oid": "b43dd1b869da449a40e5225086506462543f6a1e", "url": "https://github.com/all-of-us/workbench/commit/b43dd1b869da449a40e5225086506462543f6a1e", "message": "break out fileTooLarge and fileWithPreviewButton fragments", "committedDate": "2020-09-23T22:24:12Z", "type": "commit"}, {"oid": "f5ccb31550fb7ffed52228410f939c9fed0bc3ed", "url": "https://github.com/all-of-us/workbench/commit/f5ccb31550fb7ffed52228410f939c9fed0bc3ed", "message": "explicitly type nameCell", "committedDate": "2020-09-23T22:24:12Z", "type": "commit"}, {"oid": "bf6cddb4c7ac535f400b73a8bfd47054b72c360a", "url": "https://github.com/all-of-us/workbench/commit/bf6cddb4c7ac535f400b73a8bfd47054b72c360a", "message": "fp.cond", "committedDate": "2020-09-23T22:24:13Z", "type": "commit"}, {"oid": "e082a9395a20377305d5874641070794ff564e1f", "url": "https://github.com/all-of-us/workbench/commit/e082a9395a20377305d5874641070794ff564e1f", "message": "fp.cond fix", "committedDate": "2020-09-23T22:24:13Z", "type": "commit"}, {"oid": "e082a9395a20377305d5874641070794ff564e1f", "url": "https://github.com/all-of-us/workbench/commit/e082a9395a20377305d5874641070794ff564e1f", "message": "fp.cond fix", "committedDate": "2020-09-23T22:24:13Z", "type": "forcePushed"}, {"oid": "93a753c9f10daf07cc1976cbc893b5b0778fa342", "url": "https://github.com/all-of-us/workbench/commit/93a753c9f10daf07cc1976cbc893b5b0778fa342", "message": "cond comment", "committedDate": "2020-09-24T11:51:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM2OTExOA==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r494369118", "bodyText": "Are these comments needed?", "author": "petesantos", "createdAt": "2020-09-24T14:32:52Z", "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -77,53 +88,121 @@ const formatMB = (fileSize: number): string => {\n   }\n };\n \n-const FileDetailsTable = (props: {data: Array<FileDetail>, bucket: string}) => {\n-  const {data, bucket} = props;\n+const parseLocation = (file: FileDetail, bucket: string): string => {\n+  const prefixLength = bucket.length;\n+  const start = prefixLength + 1;  // slash after bucket name\n+  const suffixPos = file.path.lastIndexOf(file.name);\n+  const end = suffixPos - 1;  // slash before filename\n+\n+  return file.path.substring(start, end);\n+};\n+\n+const NOTEBOOKS_DIRECTORY = 'notebooks';\n+const NOTEBOOKS_SUFFIX = '.ipynb';\n+const MAX_NOTEBOOK_READ_SIZE_BYTES = 5 * 1000 * 1000; // see NotebooksServiceImpl\n+\n+interface NameCellProps {\n+  file: FileDetail;\n+  bucket: string;\n+  workspaceNamespace: string;\n+  accessReason: string;\n+}\n+\n+const NameCell = (props: NameCellProps) => {\n+  const {file, bucket, workspaceNamespace, accessReason} = props;\n+  const filename = file.name.trim();\n+\n+  const filenameSpan = () => <span>{filename}</span>;\n+\n+  const fileTooLarge = () => <FlexRow>\n+    {filenameSpan()}\n+    <TooltipTrigger\n+        content={`Files larger than ${formatMB(MAX_NOTEBOOK_READ_SIZE_BYTES)} MB are too large to preview`}\n+    ><Button style={styles.previewButton} disabled={true}>Preview</Button>\n+    </TooltipTrigger>\n+  </FlexRow>;\n+\n+  const navigateToPreview = () => navigate(\n+      ['admin', 'workspaces', workspaceNamespace, filename],\n+      { queryParams: { accessReason: accessReason } });\n+\n+  const fileWithPreviewButton = () => <FlexRow>\n+    {filenameSpan()}\n+    <TooltipTrigger content='Please enter an access reason below' disabled={accessReason && accessReason.trim()}>\n+      <Button style={styles.previewButton}\n+              disabled={!accessReason || !accessReason.trim()}\n+              onClick={navigateToPreview}>Preview</Button>\n+    </TooltipTrigger>\n+  </FlexRow>;\n+\n+  // remove first check after RW-5626\n+  const isNotebook = () => (NOTEBOOKS_DIRECTORY === parseLocation(file, bucket)) && filename.endsWith(NOTEBOOKS_SUFFIX);\n+  const isTooLargeNotebook = () => isNotebook() && (file.sizeInBytes > MAX_NOTEBOOK_READ_SIZE_BYTES);\n+\n+  // if (tooLarge()) fileTooLarge();\n+  // else if (isNotebook()) fileWithPreviewButton();\n+  // else filenameSpan();", "originalCommit": "93a753c9f10daf07cc1976cbc893b5b0778fa342", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4NTQ5Nw==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r494385497", "bodyText": "I find it difficult to find good documentation or examples for fp, so it's my hope that this will be a useful \"translation\" of the below code", "author": "jmthibault79", "createdAt": "2020-09-24T14:53:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM2OTExOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3NTY5NA==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r494375694", "bodyText": "Is cond not working without the dummy parameter?", "author": "petesantos", "createdAt": "2020-09-24T14:41:23Z", "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -77,53 +88,121 @@ const formatMB = (fileSize: number): string => {\n   }\n };\n \n-const FileDetailsTable = (props: {data: Array<FileDetail>, bucket: string}) => {\n-  const {data, bucket} = props;\n+const parseLocation = (file: FileDetail, bucket: string): string => {\n+  const prefixLength = bucket.length;\n+  const start = prefixLength + 1;  // slash after bucket name\n+  const suffixPos = file.path.lastIndexOf(file.name);\n+  const end = suffixPos - 1;  // slash before filename\n+\n+  return file.path.substring(start, end);\n+};\n+\n+const NOTEBOOKS_DIRECTORY = 'notebooks';\n+const NOTEBOOKS_SUFFIX = '.ipynb';\n+const MAX_NOTEBOOK_READ_SIZE_BYTES = 5 * 1000 * 1000; // see NotebooksServiceImpl\n+\n+interface NameCellProps {\n+  file: FileDetail;\n+  bucket: string;\n+  workspaceNamespace: string;\n+  accessReason: string;\n+}\n+\n+const NameCell = (props: NameCellProps) => {\n+  const {file, bucket, workspaceNamespace, accessReason} = props;\n+  const filename = file.name.trim();\n+\n+  const filenameSpan = () => <span>{filename}</span>;\n+\n+  const fileTooLarge = () => <FlexRow>\n+    {filenameSpan()}\n+    <TooltipTrigger\n+        content={`Files larger than ${formatMB(MAX_NOTEBOOK_READ_SIZE_BYTES)} MB are too large to preview`}\n+    ><Button style={styles.previewButton} disabled={true}>Preview</Button>\n+    </TooltipTrigger>\n+  </FlexRow>;\n+\n+  const navigateToPreview = () => navigate(\n+      ['admin', 'workspaces', workspaceNamespace, filename],\n+      { queryParams: { accessReason: accessReason } });\n+\n+  const fileWithPreviewButton = () => <FlexRow>\n+    {filenameSpan()}\n+    <TooltipTrigger content='Please enter an access reason below' disabled={accessReason && accessReason.trim()}>\n+      <Button style={styles.previewButton}\n+              disabled={!accessReason || !accessReason.trim()}\n+              onClick={navigateToPreview}>Preview</Button>\n+    </TooltipTrigger>\n+  </FlexRow>;\n+\n+  // remove first check after RW-5626\n+  const isNotebook = () => (NOTEBOOKS_DIRECTORY === parseLocation(file, bucket)) && filename.endsWith(NOTEBOOKS_SUFFIX);\n+  const isTooLargeNotebook = () => isNotebook() && (file.sizeInBytes > MAX_NOTEBOOK_READ_SIZE_BYTES);\n+\n+  // if (tooLarge()) fileTooLarge();\n+  // else if (isNotebook()) fileWithPreviewButton();\n+  // else filenameSpan();\n+  const requiredDummyParameter = undefined;\n+  return fp.cond([\n+    [isTooLargeNotebook, fileTooLarge],\n+    [isNotebook, fileWithPreviewButton],\n+    [fp.stubTrue, filenameSpan]\n+  ])(requiredDummyParameter);", "originalCommit": "93a753c9f10daf07cc1976cbc893b5b0778fa342", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4NTYyNA==", "url": "https://github.com/all-of-us/workbench/pull/4040#discussion_r494385624", "bodyText": "right", "author": "jmthibault79", "createdAt": "2020-09-24T14:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3NTY5NA=="}], "type": "inlineReview"}]}