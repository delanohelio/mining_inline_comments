{"pr_number": 4088, "pr_title": "[RW-5681][risk=no] Refactor Puppeteer job in CircleCI config file", "pr_createdAt": "2020-09-30T14:57:21Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4088", "timeline": [{"oid": "c5759502908628231a2a1f52253b4a7116f0b1f9", "url": "https://github.com/all-of-us/workbench/commit/c5759502908628231a2a1f52253b4a7116f0b1f9", "message": "e2e job refactor", "committedDate": "2020-09-30T19:03:10Z", "type": "commit"}, {"oid": "c5759502908628231a2a1f52253b4a7116f0b1f9", "url": "https://github.com/all-of-us/workbench/commit/c5759502908628231a2a1f52253b4a7116f0b1f9", "message": "e2e job refactor", "committedDate": "2020-09-30T19:03:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyNjgxNQ==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r497826815", "bodyText": "A few issues with this approach:\n\nSkipping on non-PR, skipping on e2e commit and skipping on lack of code change: these are all presubmit optimizations. While it's true that you also only want to run against a local UI on presubmit, it's not directly  related to local UI testing.\nThere's now two parameters which overlap and could be provided inconsistently: env_name and require_local_ui\n\nIf you want to keep one job, I'd suggest renaming this param to presubmit or is_presubmit. For start_local_ui, I would put this in a separate conditional which is dependent only on <<env_name>> == \"local\". Alternatively, you could avoid these issues by reverting back to two jobs, though this does result in some duplication", "author": "calbach", "createdAt": "2020-09-30T22:03:32Z", "path": ".circleci/config.yml", "diffHunk": "@@ -601,31 +625,19 @@ jobs:\n     parallelism: << parameters.parallel_num >>\n     steps:\n       - checkout_init_git\n-      - browser-tools/install-browser-tools\n+      - when:\n+          # Deploy local UI server then run Puppeteer tests against \"local ui\" + \"test api\" environment.\n+          condition: << parameters.require_local_ui >>\n+          steps:\n+            - skip_e2e_commit", "originalCommit": "c5759502908628231a2a1f52253b4a7116f0b1f9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyNzM2NQ==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r497827365", "bodyText": "would specify somewhere here that this is case insensitive. The bash ,, is nice but also pretty obscure, I had to look this up.", "author": "calbach", "createdAt": "2020-09-30T22:04:55Z", "path": ".circleci/config.yml", "diffHunk": "@@ -291,6 +298,20 @@ commands:\n           name: Wait for local UI server to start\n           command: dockerize -wait tcp://localhost:4200 -timeout 4m\n \n+  skip_e2e_commit:\n+    description: \"Halt job if commit message contains 'SKIP E2E'\"", "originalCommit": "c5759502908628231a2a1f52253b4a7116f0b1f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk0MjczNA==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r497942734", "bodyText": "Added a comment to explain what the double comma is called.", "author": "aweng98", "createdAt": "2020-10-01T02:12:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyNzM2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMzOTM1Nw==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498339357", "bodyText": "Thinking out loud: could we have a generic filter like skip <task_name>?", "author": "jaycarlton", "createdAt": "2020-10-01T15:36:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyNzM2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM3NDIxMg==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498374212", "bodyText": "Possible. One way I know how to do that is make a common command to store the commit message then each job will parse and pattern match the message.\ne.g.\n\n  get_commit_message:\n    steps:\n      - run:\n          command: |\n            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:\"%s\")' >> $BASH_ENV\n            source $BASH_ENV\n          \n  e2e_presubmit_check:\n    steps:\n      - get_commit_message\n      - run:\n          - command: |\n              if [[ \"${COMMIT_MESSAGE,,}\" == *\"skip e2e\"* ]]; then\n                echo \"Halting e2e test.\"\n                circleci step halt\n              fi", "author": "aweng98", "createdAt": "2020-10-01T16:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyNzM2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyOTAzMg==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r497829032", "bodyText": "On the subject of the \"skip e2e\" behavior - I agree with this approach, that the tests should be run by default.", "author": "calbach", "createdAt": "2020-09-30T22:09:11Z", "path": ".circleci/config.yml", "diffHunk": "@@ -291,6 +298,20 @@ commands:\n           name: Wait for local UI server to start\n           command: dockerize -wait tcp://localhost:4200 -timeout 4m\n \n+  skip_e2e_commit:\n+    description: \"Halt job if commit message contains 'SKIP E2E'\"\n+    steps:\n+      - run:\n+          name: \"Halt job if commit message contains 'SKIP E2E'\"", "originalCommit": "c5759502908628231a2a1f52253b4a7116f0b1f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk0Mjg3MA==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r497942870", "bodyText": "Cool.", "author": "aweng98", "createdAt": "2020-10-01T02:12:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyOTAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0MDI3Mg==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498340272", "bodyText": "aside:  Eventually it might be nice to encapsulate all the trigger evaluation and job management into  a single \"driver\" task, and have separate configs for the real  work.\nIt might also be  worth looking at a small e2e smoke test suite that runs quickly and still gives reasonable integration coverage. Unless managing the environment is a  huge contributor to the time.", "author": "jaycarlton", "createdAt": "2020-10-01T15:37:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgyOTAzMg=="}], "type": "inlineReview"}, {"oid": "59dab5c226817b7bd2a15ff0b2dbe593474e7f10", "url": "https://github.com/all-of-us/workbench/commit/59dab5c226817b7bd2a15ff0b2dbe593474e7f10", "message": "change", "committedDate": "2020-10-01T01:24:00Z", "type": "commit"}, {"oid": "59dab5c226817b7bd2a15ff0b2dbe593474e7f10", "url": "https://github.com/all-of-us/workbench/commit/59dab5c226817b7bd2a15ff0b2dbe593474e7f10", "message": "change", "committedDate": "2020-10-01T01:24:00Z", "type": "forcePushed"}, {"oid": "8e5c755a0b02028f90be4364ac70a1da5fe90d4f", "url": "https://github.com/all-of-us/workbench/commit/8e5c755a0b02028f90be4364ac70a1da5fe90d4f", "message": "change more", "committedDate": "2020-10-01T01:49:06Z", "type": "commit"}, {"oid": "502e8625f56643b34e711fa4af46fc0b5f31cfee", "url": "https://github.com/all-of-us/workbench/commit/502e8625f56643b34e711fa4af46fc0b5f31cfee", "message": "config error", "committedDate": "2020-10-01T01:50:40Z", "type": "commit"}, {"oid": "d845ec66023df59ede1d809aea35a5185349e45b", "url": "https://github.com/all-of-us/workbench/commit/d845ec66023df59ede1d809aea35a5185349e45b", "message": "config error fix?", "committedDate": "2020-10-01T01:53:23Z", "type": "commit"}, {"oid": "7aa23c56d026f8969b4c2fa12e860f71fd198da2", "url": "https://github.com/all-of-us/workbench/commit/7aa23c56d026f8969b4c2fa12e860f71fd198da2", "message": "skip e2e test", "committedDate": "2020-10-01T02:01:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMzODg5Mg==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498338892", "bodyText": "Some steps use hyphens and others use underscores. I'd pick one style and stick with it. Underscores seem  safer to me, and more standard as identifiers in  mosts contexts.", "author": "jaycarlton", "createdAt": "2020-10-01T15:35:57Z", "path": ".circleci/config.yml", "diffHunk": "@@ -213,6 +219,7 @@ commands:\n         enum: [\"local\", \"test\", \"staging\"]\n     steps:\n       - install_e2e_dependencies\n+      - browser-tools/install-browser-tools", "originalCommit": "7aa23c56d026f8969b4c2fa12e860f71fd198da2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM2MjYwMA==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498362600", "bodyText": "Good observation. circleci seems to use hyphens for everything. We use underscores. If we want to keep all consistent, we have to change to hyphen to match. It would be in a separate PR.", "author": "aweng98", "createdAt": "2020-10-01T16:11:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMzODg5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQyMDM5MQ==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498420391", "bodyText": "@jaycarlton ticket to track hyphen refactor. RW-5689", "author": "aweng98", "createdAt": "2020-10-01T17:54:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMzODg5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0MjUzOQ==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498342539", "bodyText": "FWIW, it might be cleaner to have  a little Ruby or Python  script to parse the commit message &  other metadata  and give a cleaner structure. (You could even  write test cases for it). My tolerance for reading shell scripts is about 2-1/2 lines.", "author": "jaycarlton", "createdAt": "2020-10-01T15:41:00Z", "path": ".circleci/config.yml", "diffHunk": "@@ -291,6 +298,30 @@ commands:\n           name: Wait for local UI server to start\n           command: dockerize -wait tcp://localhost:4200 -timeout 4m\n \n+  e2e_skip_commit:\n+    description: \"Halt job if commit message contains 'SKIP E2E'\"\n+    steps:\n+      - run:\n+          name: \"Halt job if commit message contains 'SKIP E2E'\"\n+          command: |\n+            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:\"%s\")' >> $BASH_ENV\n+            source $BASH_ENV\n+            echo \"Git commit message: $COMMIT_MESSAGE\"\n+            # Double comma is called \"Parameter Expansion\" in Bash version 4+. It converts string to lowercase letters.\n+            if [[ \"${COMMIT_MESSAGE,,}\" == *\"skip e2e\"* ]]; then", "originalCommit": "7aa23c56d026f8969b4c2fa12e860f71fd198da2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0MzYxMw==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498343613", "bodyText": "Do  all the halt commnads run here?\nAlso, can we  mark the test as not run instead of passed or failed somehow? (scope creep, I know). There's a nice gray X or something  in the UI, but I don't  remember what triggered it.", "author": "jaycarlton", "createdAt": "2020-10-01T15:42:31Z", "path": ".circleci/config.yml", "diffHunk": "@@ -291,6 +298,30 @@ commands:\n           name: Wait for local UI server to start\n           command: dockerize -wait tcp://localhost:4200 -timeout 4m\n \n+  e2e_skip_commit:\n+    description: \"Halt job if commit message contains 'SKIP E2E'\"\n+    steps:\n+      - run:\n+          name: \"Halt job if commit message contains 'SKIP E2E'\"\n+          command: |\n+            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:\"%s\")' >> $BASH_ENV\n+            source $BASH_ENV\n+            echo \"Git commit message: $COMMIT_MESSAGE\"\n+            # Double comma is called \"Parameter Expansion\" in Bash version 4+. It converts string to lowercase letters.\n+            if [[ \"${COMMIT_MESSAGE,,}\" == *\"skip e2e\"* ]]; then\n+              echo \"Halting e2e test.\"\n+              circleci step halt\n+            fi\n+\n+\n+  e2e_presubmit_check:\n+    steps:\n+      - e2e_skip_commit\n+      - halt_if_code_unchanged\n+      - run:\n+          name: \"Halt job if not a pull request\"\n+          command: bash .circleci/pr-skip-ci.sh", "originalCommit": "7aa23c56d026f8969b4c2fa12e860f71fd198da2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0NTQ3NQ==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498345475", "bodyText": "I don't  understand what this does. Is it ignoring hidden files (like a glob), or is this a regex (so  it's  ignoring everything)?", "author": "jaycarlton", "createdAt": "2020-10-01T15:45:13Z", "path": ".circleci/config.yml", "diffHunk": "@@ -77,6 +77,12 @@ anchors:\n       # Workbench release tag format example: v5-3-rc1\n       only: /^v[0-9]+-[0-9]+-rc[0-9]+$/\n \n+  # Job runs for PR branches only\n+  filter_only_pr_branch: &filter_only_pr_branch\n+    tags:\n+      ignore: /.*/", "originalCommit": "7aa23c56d026f8969b4c2fa12e860f71fd198da2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM2MDg3Mw==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498360873", "bodyText": "Igore all tag branches (include release tag branches).", "author": "aweng98", "createdAt": "2020-10-01T16:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0NTQ3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM5NjU0Nw==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498396547", "bodyText": "This is interesting - I like this for the presubmit check. But still it would be ideal if env_name and start_local_ui were not provided separately.\nYou should be able to make the start_local_ui step run conditionally as I was suggesting earlier. You can do a comparison as described here: https://circleci.com/docs/2.0/configuration-reference/#logic-statements\nwhen:\n  condition:\n    equal: [ local, << parameters.env_name >>]\n  steps:\n    - run_local_ui", "author": "calbach", "createdAt": "2020-10-01T17:11:19Z", "path": ".circleci/config.yml", "diffHunk": "@@ -647,9 +659,18 @@ workflows:\n           filters: *filter_only_master_branch\n           requires:\n             - ui-unit-test\n+      # Deploy local ui server then run Puppeteer tests against \"local ui\" + \"test api\" environment for PR commits only.\n+      - puppeteer-e2e-test:\n+          filters: *filter_only_pr_branch\n+          env_name: \"local\"\n+          parallel_num: 2\n+          optional_steps:", "originalCommit": "7aa23c56d026f8969b4c2fa12e860f71fd198da2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQxMzc1OA==", "url": "https://github.com/all-of-us/workbench/pull/4088#discussion_r498413758", "bodyText": "WOW. It works. I didn't know that. Thanks.", "author": "aweng98", "createdAt": "2020-10-01T17:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM5NjU0Nw=="}], "type": "inlineReview"}, {"oid": "5dd7bb5588c00cc8e6d205704eb33253ef134b20", "url": "https://github.com/all-of-us/workbench/commit/5dd7bb5588c00cc8e6d205704eb33253ef134b20", "message": "PR feedback", "committedDate": "2020-10-01T17:32:00Z", "type": "commit"}, {"oid": "5574bf84488989041b428e8f42699816b5453ee4", "url": "https://github.com/all-of-us/workbench/commit/5574bf84488989041b428e8f42699816b5453ee4", "message": "SKIP E2E test", "committedDate": "2020-10-01T17:37:57Z", "type": "commit"}]}