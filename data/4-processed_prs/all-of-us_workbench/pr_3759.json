{"pr_number": 3759, "pr_title": "[RW-5240][risk=no] Puppeteer Workspace Edit test", "pr_createdAt": "2020-07-08T18:14:18Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3759", "timeline": [{"oid": "486534a3d493f70ae193a1dbf4b89530e502e5e1", "url": "https://github.com/all-of-us/workbench/commit/486534a3d493f70ae193a1dbf4b89530e502e5e1", "message": "Workspace About page test", "committedDate": "2020-07-08T19:20:29Z", "type": "commit"}, {"oid": "486534a3d493f70ae193a1dbf4b89530e502e5e1", "url": "https://github.com/all-of-us/workbench/commit/486534a3d493f70ae193a1dbf4b89530e502e5e1", "message": "Workspace About page test", "committedDate": "2020-07-08T19:20:29Z", "type": "forcePushed"}, {"oid": "905bd93069bb981acf0f9fd0b5ec2597c2e0b41d", "url": "https://github.com/all-of-us/workbench/commit/905bd93069bb981acf0f9fd0b5ec2597c2e0b41d", "message": "revert README and package.json", "committedDate": "2020-07-08T19:44:18Z", "type": "commit"}, {"oid": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07", "url": "https://github.com/all-of-us/workbench/commit/11f109a097b33d89bbb5ac1eca83aea1f3f6de07", "message": "test comments", "committedDate": "2020-07-08T19:48:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5Njc1Ng==", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451796756", "bodyText": "why double await ?", "author": "jmthibault79", "createdAt": "2020-07-08T20:08:22Z", "path": "e2e/app/page/workspace-about-page.ts", "diffHunk": "@@ -69,4 +69,26 @@ export default class WorkspaceAboutPage extends AuthenticatedPage{\n     await modal.waitUntilVisible();\n     return modal;\n   }\n+\n+  async getCdrVersion(): Promise<string> {\n+    const cdrVerXpath = '//*[@data-test-id=\"cdrVersion\"]';\n+    const cdr = await this.page.waitForXPath(cdrVerXpath, {visible: true});\n+    const cdrValue = await (await cdr.getProperty('innerText')).jsonValue();", "originalCommit": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMzgxMg==", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451823812", "bodyText": "both are async calls. the inner call has to finish first before outer call starts. I could write it differently with .then() (promises chaining) if you think that's a better to read.", "author": "aweng98", "createdAt": "2020-07-08T21:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5Njc1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzNDc3Nw==", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451834777", "bodyText": "OK\nNo need to change", "author": "jmthibault79", "createdAt": "2020-07-08T21:26:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5Njc1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5NzUyMw==", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451797523", "bodyText": "so we're defaulting to Headless if this value is missing.  is that what we want?", "author": "jmthibault79", "createdAt": "2020-07-08T20:10:01Z", "path": "e2e/jest-puppeteer.config.js", "diffHunk": "@@ -5,7 +5,7 @@\n \n const fp = require('lodash/fp');\n const puppeteer = require('puppeteer');\n-const isHeadless = process.env.HEADLESS !== 'false';\n+const isHeadless = (process.env.HEADLESS || 'true') === 'true';", "originalCommit": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyNDUyMg==", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451824522", "bodyText": "yes, that's the intention. it's like that since day 1. I changed code to make it explicitly clear.", "author": "aweng98", "createdAt": "2020-07-08T21:04:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5NzUyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzNDgyMg==", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451834822", "bodyText": "great!", "author": "jmthibault79", "createdAt": "2020-07-08T21:26:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5NzUyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMTI5MA==", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451821290", "bodyText": "how does this work?", "author": "jmthibault79", "createdAt": "2020-07-08T20:58:10Z", "path": "e2e/tests/workspace/workspace-edit.spec.ts", "diffHunk": "@@ -0,0 +1,73 @@\n+import DataPage, {TabLabelAlias} from 'app/page/data-page';\n+import WorkspacesPage from 'app/page/workspaces-page';\n+import {EllipsisMenuAction} from 'app/text-labels';\n+import * as testData from 'resources/data/workspace-data';\n+import {findWorkspace, performActions, signIn} from 'utils/test-utils';\n+import WorkspaceAboutPage from 'app/page/workspace-about-page';\n+\n+\n+describe('Editing workspace thru workspace card ellipsis menu', () => {\n+\n+  beforeEach(async () => {\n+    await signIn(page);\n+  });\n+\n+  /**\n+   * Test:\n+   * - Find an existing workspace. Create a new workspace if none exists.\n+   * - Edit workspace: changing Question 2 answers.\n+   * - Verify landing in DATA tab.\n+   * - Verify Workspace Information in ABOUT tab.\n+   */\n+  test('User as OWNER can edit workspace', async () => {\n+    const workspaceCard = await findWorkspace(page);\n+    await (workspaceCard.getEllipsis()).clickAction(EllipsisMenuAction.Edit);\n+\n+    const workspacesPage = new WorkspacesPage(page);\n+    // Change question #2 answer\n+    await performActions(page, testData.defaultAnswersResearchPurposeSummary);", "originalCommit": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyNjYyNw==", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451826627", "bodyText": "Basically, iterate thru a json object consisted of elements and performs action (type/check/select) according to the type (textinput/checkbox/radiobutton) of element. (saves me from dupl. code)\nexport const defaultAnswersResearchPurposeSummary = [\n  {\n    id: FIELD.RESEARCH_PURPOSE_SUMMARY.scientificQuestionsIntentToStudyTextarea,\n    value: makeString(100)\n  }, {\n    id: FIELD.RESEARCH_PURPOSE_SUMMARY.scientificApproachesToUseTextarea,\n    value: makeString(100)\n  }, {\n    id: FIELD.RESEARCH_PURPOSE_SUMMARY.anticipatedFindingsFromStudyTextarea,\n    value: makeString(100)\n  }\n];", "author": "aweng98", "createdAt": "2020-07-08T21:09:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMTI5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzNTU0Nw==", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451835547", "bodyText": "oh ok - it fills in those 3 text fields.  cool.", "author": "jmthibault79", "createdAt": "2020-07-08T21:28:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMTI5MA=="}], "type": "inlineReview"}]}