{"pr_number": 3207, "pr_title": "[RW-3726][RISK=NO] Use merged yaml as single swagger input file", "pr_createdAt": "2020-02-29T16:56:52Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3207", "timeline": [{"oid": "6a9c8e8cf2d3a5b7387ea7b451a34f199ebd49a3", "url": "https://github.com/all-of-us/workbench/commit/6a9c8e8cf2d3a5b7387ea7b451a34f199ebd49a3", "message": "move anchorable comments to x-aou-note nodes", "committedDate": "2020-02-03T19:48:11Z", "type": "commit"}, {"oid": "0f65ca97c76c2c2bf5a45ef145b78b2052cbcf0e", "url": "https://github.com/all-of-us/workbench/commit/0f65ca97c76c2c2bf5a45ef145b78b2052cbcf0e", "message": "other input files", "committedDate": "2020-02-03T20:13:59Z", "type": "commit"}, {"oid": "436e71abe3a43c785af9139f81ed470fc2d53e3e", "url": "https://github.com/all-of-us/workbench/commit/436e71abe3a43c785af9139f81ed470fc2d53e3e", "message": "move some more comments", "committedDate": "2020-02-04T02:56:27Z", "type": "commit"}, {"oid": "b8cced49cfab61d845686a414cf59625d031db10", "url": "https://github.com/all-of-us/workbench/commit/b8cced49cfab61d845686a414cf59625d031db10", "message": "merge master", "committedDate": "2020-02-29T15:42:07Z", "type": "commit"}, {"oid": "516f27dfa08a6a004f3b0d57e595c4b8bd9988d0", "url": "https://github.com/all-of-us/workbench/commit/516f27dfa08a6a004f3b0d57e595c4b8bd9988d0", "message": "update .gitignore for beyond compare .orig  files", "committedDate": "2020-02-29T15:43:37Z", "type": "commit"}, {"oid": "9469f34f76baa4010c2b128aca307976c60e6598", "url": "https://github.com/all-of-us/workbench/commit/9469f34f76baa4010c2b128aca307976c60e6598", "message": "update profile ctrlr", "committedDate": "2020-02-29T16:07:34Z", "type": "commit"}, {"oid": "ddf001921359025318d6b8b24fc0844bdce3b445", "url": "https://github.com/all-of-us/workbench/commit/ddf001921359025318d6b8b24fc0844bdce3b445", "message": "update submodule", "committedDate": "2020-02-29T16:08:17Z", "type": "commit"}, {"oid": "b659436c9d40a4ee6b2f2d6ed0fa4b31e80c7f3a", "url": "https://github.com/all-of-us/workbench/commit/b659436c9d40a4ee6b2f2d6ed0fa4b31e80c7f3a", "message": "move more comments", "committedDate": "2020-02-29T16:14:51Z", "type": "commit"}, {"oid": "a563aeb5de07b6d760e93e56fd664972fe4f5ff8", "url": "https://github.com/all-of-us/workbench/commit/a563aeb5de07b6d760e93e56fd664972fe4f5ff8", "message": "remove stuff we don't need", "committedDate": "2020-02-29T16:43:42Z", "type": "commit"}, {"oid": "1638cfe0684e08825c09739e9052d44b42290a5c", "url": "https://github.com/all-of-us/workbench/commit/1638cfe0684e08825c09739e9052d44b42290a5c", "message": "more deletes", "committedDate": "2020-02-29T16:45:03Z", "type": "commit"}, {"oid": "fbd4206256a2ed7646c5f036164f4e59810483ea", "url": "https://github.com/all-of-us/workbench/commit/fbd4206256a2ed7646c5f036164f4e59810483ea", "message": "updates", "committedDate": "2020-02-29T16:54:48Z", "type": "commit"}, {"oid": "16f1be7224695b790fc75127db030c32a42996fd", "url": "https://github.com/all-of-us/workbench/commit/16f1be7224695b790fc75127db030c32a42996fd", "message": "more fixes", "committedDate": "2020-02-29T17:16:44Z", "type": "commit"}, {"oid": "227090be52ce7536bb0490ccd361cd9f41bde7fa", "url": "https://github.com/all-of-us/workbench/commit/227090be52ce7536bb0490ccd361cd9f41bde7fa", "message": "remove ref to dead directory", "committedDate": "2020-02-29T18:02:08Z", "type": "commit"}, {"oid": "80718408cc12be0335192ac8fabe39f6e36d140c", "url": "https://github.com/all-of-us/workbench/commit/80718408cc12be0335192ac8fabe39f6e36d140c", "message": "buildfile improvements", "committedDate": "2020-02-29T22:03:05Z", "type": "commit"}, {"oid": "f2d9da613e4d64d5b6f643b237a89c7c32cb6a50", "url": "https://github.com/all-of-us/workbench/commit/f2d9da613e4d64d5b6f643b237a89c7c32cb6a50", "message": "fix gradle by using new file name", "committedDate": "2020-03-01T20:18:32Z", "type": "commit"}, {"oid": "93afae6b9fac8e68146da58f428a380dfe7dacc4", "url": "https://github.com/all-of-us/workbench/commit/93afae6b9fac8e68146da58f428a380dfe7dacc4", "message": "fixup package.json", "committedDate": "2020-03-01T20:44:48Z", "type": "commit"}, {"oid": "611e7419f1c3b9633ed7d2b91bcb0c48f1a74ae7", "url": "https://github.com/all-of-us/workbench/commit/611e7419f1c3b9633ed7d2b91bcb0c48f1a74ae7", "message": "remove old flag", "committedDate": "2020-03-02T14:09:36Z", "type": "commit"}, {"oid": "88ff27806e7b4b08af1dff0249257b72c0cfd456", "url": "https://github.com/all-of-us/workbench/commit/88ff27806e7b4b08af1dff0249257b72c0cfd456", "message": "merge master", "committedDate": "2020-03-02T14:18:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1NzUzMg==", "url": "https://github.com/all-of-us/workbench/pull/3207#discussion_r386557532", "bodyText": "This looks like a bad rebase or merge - please fix. Or else you need to rebase this PR onto master.", "author": "calbach", "createdAt": "2020-03-02T18:05:48Z", "path": "api/config/config_local.json", "diffHunk": "@@ -89,7 +89,6 @@\n     \"unsafeAllowDeleteUser\": true,\n     \"enableVpcFlowLogs\": true,\n     \"enableVpcServicePerimeter\": true,", "originalCommit": "88ff27806e7b4b08af1dff0249257b72c0cfd456", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU2OTM0OQ==", "url": "https://github.com/all-of-us/workbench/pull/3207#discussion_r386569349", "bodyText": "Ah I see - it is based on a different branch - reviewing that now.", "author": "calbach", "createdAt": "2020-03-02T18:28:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1NzUzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3MDEzMA==", "url": "https://github.com/all-of-us/workbench/pull/3207#discussion_r386570130", "bodyText": "Update 2: OK - that one is already merged. In that case - please update this PR to be based on master instead of that feature branch.", "author": "calbach", "createdAt": "2020-03-02T18:29:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1NzUzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0MTU5Mw==", "url": "https://github.com/all-of-us/workbench/pull/3207#discussion_r389641593", "bodyText": "Oh wow, you can change the base without closing the PR. That's really handy.", "author": "jaycarlton", "createdAt": "2020-03-09T12:55:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1NzUzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU2ODg3OA==", "url": "https://github.com/all-of-us/workbench/pull/3207#discussion_r386568878", "bodyText": "I don't agree this is an existing issue, seems more like a problem with the tool conversion - here is the previous code: \n  \n    \n      workbench/api/src/main/resources/workbench.yaml\n    \n    \n        Lines 149 to 150\n      in\n      c0a2f56\n    \n    \n    \n    \n\n        \n          \n                     description: > \n        \n\n        \n          \n                       A status alert information object. \n        \n    \n  \n\n\nThat said, I don't feel strongly whether this gets fixed in a follow-up or here.", "author": "calbach", "createdAt": "2020-03-02T18:27:44Z", "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -0,0 +1,7370 @@\n+---\n+swagger: '2.0'\n+x-aou-note: |\n+  This file is for endpoints we do NOT intend to generate client libraries for\n+  and advertise to notebook developers. Endpoints we DO want notebook developers to use should\n+  go in client_api.yaml.\n+\n+  This file references parameters, paths, and definitions specified in\n+  client_api.yaml; the two files get merged together into a merged.yaml file at build time.\n+\n+  If validation fails, gradle:generateApi fails claiming this file does not exist.\n+\n+  For separate validation (with some false positives), do:\n+  ./project.rb validate-swagger\n+info:\n+  version: 0.1.0\n+  title: AllOfUs Workbench API\n+  description: |\n+    The API for the AllOfUs workbench.\n+\n+    Throughout, we use integer/int64 in preference to string/date-time because Swagger's\n+    date formatting is inconsistent between server and client. Time values are stored as\n+    milliseconds since the UNIX epoch.\n+\n+    Note: all requests tagged as \"cron\" must have the header X-Appengine-Cron:\n+    true, which app engine itself only sets when invoking as a cronjob.\n+    See https://cloud.google.com/appengine/docs/standard/java/config/cron#securing_urls_for_cron\n+    and o.p.w.interceptors.CronInterceptor which implements the header check.\n+  termsOfService: http://www.pmi-ops.org/terms_of_service.html\n+  contact:\n+    name: developer_help@pmi-ops.org\n+  license:\n+    name: BSD\n+host: api.pmi-ops.org\n+securityDefinitions:\n+  aou_oauth:\n+    x-aou-note: |\n+      Establish the fact that *some endpoints* are OAuth protected\n+      by defining an `aou_oauth` security mode, which we'll assigning\n+      to any protected endpoints below.\n+\n+      TODO: Vet/fix this token and/or authorization URL to work in practice.\n+      These are currently included simply to satisfy the Swagger specification,\n+      as this is not directly used to dictate oauth details (just used to\n+      annotate which methods require oauth).\n+\n+      The aou_auth entry under security (below) serves to establish the fact\n+      that all endpoints are protected: this annotation ensures that client\n+      libraries know to send bearer tokens when calling\n+    authorizationUrl: ''\n+    tokenUrl: ''\n+    type: oauth2\n+    flow: accessCode\n+schemes:\n+  - https\n+produces:\n+  - application/json\n+security:\n+  - aou_oauth: []\n+parameters:\n+  userId:\n+    in: path\n+    name: userId\n+    type: integer\n+    format: int64\n+    required: true\n+  conceptSetId:\n+    in: path\n+    name: conceptSetId\n+    type: integer\n+    format: int64\n+    required: true\n+    description: Concept set ID\n+  dataSetId:\n+    in: path\n+    name: dataSetId\n+    type: integer\n+    format: int64\n+    required: true\n+    description: Data set ID\n+  workspaceNamespace:\n+    in: path\n+    name: workspaceNamespace\n+    type: string\n+    description: The Workspace namespace\n+    required: true\n+  workspaceId:\n+    in: path\n+    name: workspaceId\n+    type: string\n+    description: The Workspace ID (a.k.a. the workspace's Firecloud name)\n+    required: true\n+  cohortId:\n+    in: path\n+    name: cohortId\n+    type: integer\n+    format: int64\n+    required: true\n+    description: Cohort ID\n+  cohortReviewId:\n+    in: path\n+    name: cohortReviewId\n+    type: integer\n+    format: int64\n+    required: true\n+    description: Cohort Review ID\n+  cdrVersionId:\n+    in: path\n+    name: cdrVersionId\n+    type: integer\n+    format: int64\n+    required: true\n+    description: specifies which cdr version\n+  participantId:\n+    in: path\n+    name: participantId\n+    type: integer\n+    format: int64\n+    required: true\n+    description: specifies which participant\n+paths:\n+  \"/v1/status\":\n+    get:\n+      tags:\n+        - status\n+      description: Returns the status of the various services and integrations\n+      operationId: getStatus\n+      security: []\n+      responses:\n+        200:\n+          description: A map of system name to status.\n+          schema:\n+            \"$ref\": \"#/definitions/StatusResponse\"\n+  \"/v1/config\":\n+    get:\n+      tags:\n+        - config\n+      description: Returns some server configuration data.\n+      operationId: getConfig\n+      security: []\n+      responses:\n+        200:\n+          description: Configuration data\n+          schema:\n+            \"$ref\": \"#/definitions/ConfigResponse\"\n+  \"/v1/featured-workspace-config\":\n+    get:\n+      tags:\n+        - featured-workspaces-config\n+      description: Returns the featured workspaces config\n+      operationId: getFeaturedWorkspacesConfig\n+      security: []\n+      responses:\n+        200:\n+          description: List of featured workspaces\n+          schema:\n+            \"$ref\": \"#/definitions/FeaturedWorkspacesConfigResponse\"\n+  \"/v1/status-alert\":\n+    get:\n+      tags:\n+        - status-alert\n+      description: Returns status alert information if any exists.\n+      operationId: getStatusAlert\n+      responses:\n+        200:\n+          description: 'A status alert information object.\n+", "originalCommit": "88ff27806e7b4b08af1dff0249257b72c0cfd456", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0MjI3NA==", "url": "https://github.com/all-of-us/workbench/pull/3207#discussion_r389642274", "bodyText": "Yeah, it's only existing w/r/t merged.yaml as a base. Ruby's parser seems to want to do that.\nIt should be a simple one-off string replacement (if this is the last time we use that Ruby Yaml client).", "author": "jaycarlton", "createdAt": "2020-03-09T12:56:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU2ODg3OA=="}], "type": "inlineReview"}, {"oid": "b093f5e109aad583e8a020f61829a4cdeec6a354", "url": "https://github.com/all-of-us/workbench/commit/b093f5e109aad583e8a020f61829a4cdeec6a354", "message": "merge master", "committedDate": "2020-03-09T12:57:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0NTkzNw==", "url": "https://github.com/all-of-us/workbench/pull/3207#discussion_r389845937", "bodyText": "Why the rename? Is this fundamentally different from the other targets we have (which follow a consistent naming pattern?) - compile, testCompile, toolsCompile", "author": "calbach", "createdAt": "2020-03-09T17:29:13Z", "path": "api/build.gradle", "diffHunk": "@@ -485,47 +476,23 @@ dependencies {\n   // Dependencies for Swagger codegen. This should include all dependencies required by Swagger's\n   // default okhttp API codegen templates (see https://github.com/swagger-api/swagger-codegen/blob/v2.2.3/samples/client/petstore/spring-stubs/pom.xml)\n   // plus any custom templates included in our repo under the swaggerTemplateDir.\n-  generatedCompile \"org.springframework.boot:spring-boot-starter-data-rest:${SPRING_BOOT_VERSION}\"\n-  generatedCompile \"io.springfox:springfox-swagger2:${SPRINGFOX_VERSION}\"\n-  generatedCompile \"io.springfox:springfox-swagger-ui:${SPRINGFOX_VERSION}\"\n-  generatedCompile \"com.squareup.okhttp:okhttp:${OKHTTP_VERSION}\"\n-  generatedCompile \"com.squareup.okhttp:logging-interceptor:${OKHTTP_VERSION}\"\n-  generatedCompile \"com.google.code.gson:gson:${GSON_VERSION}\"\n-  generatedCompile \"joda-time:joda-time:${JODA_VERSION}\"\n-  generatedCompile \"com.fasterxml.jackson.datatype:jackson-datatype-joda:${JACKSON_VERSION}\"\n+  jvmCodegenDependencies \"org.springframework.boot:spring-boot-starter-data-rest:${SPRING_BOOT_VERSION}\"", "originalCommit": "88ff27806e7b4b08af1dff0249257b72c0cfd456", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMwOTIzMw==", "url": "https://github.com/all-of-us/workbench/pull/3207#discussion_r390309233", "bodyText": "I was confused by both the \"compile\" part and the past tense of \"generated\". I thought from the comment all these were just for the codegen step. I'm thinking of compilation narrowly as going from source to bytecode; is there a broader sense I should be thinking of?\nI filed https://precisionmedicineinitiative.atlassian.net/browse/RW-4577 to pull the codegen stuff into its own gradle file and tidy up the remnants so this is all easier to navigate.", "author": "jaycarlton", "createdAt": "2020-03-10T13:25:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0NTkzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ0NDAxMQ==", "url": "https://github.com/all-of-us/workbench/pull/3207#discussion_r390444011", "bodyText": "No, it's going from source to bytecode. These are the dependencies required to compile the generated Java code, i.e. the generated source files contain imports of these 3p libraries. The codegen tooling is not something we're compiling ourselves, we're just using a gradle plugin to run that.", "author": "calbach", "createdAt": "2020-03-10T16:25:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0NTkzNw=="}], "type": "inlineReview"}, {"oid": "b8587d94e34c490d6c8271ac6284a898f4b8774d", "url": "https://github.com/all-of-us/workbench/commit/b8587d94e34c490d6c8271ac6284a898f4b8774d", "message": "merge", "committedDate": "2020-03-09T20:37:40Z", "type": "commit"}, {"oid": "8f20f73a00377863b1080c676bfcd68a5898a9ef", "url": "https://github.com/all-of-us/workbench/commit/8f20f73a00377863b1080c676bfcd68a5898a9ef", "message": "merge new stuff from master", "committedDate": "2020-03-09T20:49:44Z", "type": "commit"}, {"oid": "814c7e64c0b437ed91b7498820157ba98baabeef", "url": "https://github.com/all-of-us/workbench/commit/814c7e64c0b437ed91b7498820157ba98baabeef", "message": "repair fix for nullable disability", "committedDate": "2020-03-09T21:01:49Z", "type": "commit"}]}