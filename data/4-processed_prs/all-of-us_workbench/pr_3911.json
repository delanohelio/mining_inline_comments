{"pr_number": 3911, "pr_title": "[no ticket][risk=no] Puppeteer dataset export to notebook", "pr_createdAt": "2020-08-24T20:24:43Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3911", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg3NTgzNw==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r475875837", "bodyText": "some modals open with loading spinner running.", "author": "aweng98", "createdAt": "2020-08-24T20:30:45Z", "path": "e2e/app/component/modal.ts", "diffHunk": "@@ -22,7 +23,10 @@ export default class Modal extends Container {\n \n   async waitForLoad(): Promise<this> {\n     try {\n-      await this.waitUntilVisible();\n+      await Promise.all([\n+        this.waitUntilVisible(),\n+        waitWhileLoading(this.page),", "originalCommit": "77edaae77845d1c3eddbfed42a11c84560655d11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5Mzc5Mw==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r475893793", "bodyText": "Remove async because it's not async function. Here and few other places.", "author": "aweng98", "createdAt": "2020-08-24T21:05:23Z", "path": "e2e/app/component/new-notebook-modal.ts", "diffHunk": "@@ -52,12 +54,12 @@ export default class NewNotebookModal extends Modal {\n     return Textbox.findByName(this.page, {name: 'Name:'});\n   }\n \n-  async python3Radiobutton(): Promise<RadioButton> {\n+  python3Radiobutton(): RadioButton {", "originalCommit": "77edaae77845d1c3eddbfed42a11c84560655d11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYxMTM4MA==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476611380", "bodyText": "@petesantos can eslint detect this?", "author": "jaycarlton", "createdAt": "2020-08-25T17:19:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5Mzc5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5MDk2Nw==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479490967", "bodyText": "There is a rule in eslint that will flag an async function that does not have an await in the function body", "author": "petesantos", "createdAt": "2020-08-28T19:17:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5Mzc5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5NDM0MA==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r475894340", "bodyText": "Text label string should be a LinkText enum value.", "author": "aweng98", "createdAt": "2020-08-24T21:06:35Z", "path": "e2e/app/page/dataset-save-modal.ts", "diffHunk": "@@ -10,10 +10,6 @@ import {waitUntilChanged} from 'utils/element-utils';\n import {waitForPropertyExists} from 'utils/waits-utils';\n import Textarea from 'app/element/textarea';\n \n-export const labelAlias = {\n-  SeeCodePreview: 'See Code Preview'", "originalCommit": "77edaae77845d1c3eddbfed42a11c84560655d11", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1MjI1Nw==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477352257", "bodyText": "nit: camel case RadioButton", "author": "petesantos", "createdAt": "2020-08-26T14:37:31Z", "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {", "originalCommit": "9cc9ecfe2934f25d5202184359ad506188afed81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzMjQ0OQ==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479432449", "bodyText": "\ud83d\udc4d Done", "author": "aweng98", "createdAt": "2020-08-28T17:10:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1MjI1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1MjUwMw==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477352503", "bodyText": "nit: camel case RadioButton", "author": "petesantos", "createdAt": "2020-08-26T14:37:49Z", "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"Python\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  getRRadiobutton(): RadioButton {", "originalCommit": "9cc9ecfe2934f25d5202184359ad506188afed81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1NDIwOQ==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477354209", "bodyText": "Suggestion on changing the conditionals to:\nconst radio = language === Language.Python ? this.getPythonRadioButton() : this.getRRadioButton();\nawait radio.select();", "author": "petesantos", "createdAt": "2020-08-26T14:40:04Z", "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"Python\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  getRRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"R\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  /**\n+   * Fill out Export Notebook modal to create a new notebook:\n+   * - Type notebook name.\n+   * - Select notebook language.\n+   * - Click \"Export and Open\" button.\n+   * @param {string} notebookName Notebook name.\n+   * @param {Language} language Notebook programming language. Default value is Python.\n+   */\n+  async fillInModal(notebookName: string, language: Language = Language.Python): Promise<void> {\n+    const notebookNameInput = this.getNotebookNameInput();\n+    await notebookNameInput.type(notebookName);\n+    if (language === Language.Python) {\n+      const radio = this.getPythonRadiobutton();\n+      await radio.select();\n+    } else {\n+      const radio = this.getRRadiobutton();\n+      await radio.select();\n+    }", "originalCommit": "9cc9ecfe2934f25d5202184359ad506188afed81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzMjg5MA==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479432890", "bodyText": "\ud83d\udc4d Done", "author": "aweng98", "createdAt": "2020-08-28T17:10:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1NDIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3NjAxMg==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479476012", "bodyText": "This will break if we add a third language; I think it's important to distinguish a two-state enum from a boolean. I.e. I'd want to see a switch on the language with a default to throw an unrecognized language error.", "author": "jaycarlton", "createdAt": "2020-08-28T18:43:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1NDIwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1OTg3NQ==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477359875", "bodyText": "Same suggestion as above - is there a utils file or other abstraction where you could create a function and call it like\nawait selectNotebookRadioButton(page)", "author": "petesantos", "createdAt": "2020-08-26T14:47:34Z", "path": "e2e/app/component/new-notebook-modal.ts", "diffHunk": "@@ -41,9 +41,11 @@ export default class NewNotebookModal extends Modal {\n   async fillInModal(notebookName: string, language: Language): Promise<void> {\n     await this.name().then( (textbox) => textbox.type(notebookName));\n     if (language === Language.Python) {\n-      await this.python3Radiobutton().then( (radio) => radio.select());\n+      const radio = this.python3Radiobutton();\n+      await radio.select();\n     } else {\n-      await this.RRadiobutton().then( (radio) => radio.select());\n+      const radio = this.RRadiobutton();\n+      await radio.select();", "originalCommit": "9cc9ecfe2934f25d5202184359ad506188afed81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzOTI3Ng==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479439276", "bodyText": "It's a good idea. So far, I only noticed two modals with radiobuttons. A common function doesn't save a lot at this time. Also, I didn't combine this time because Python radiobutton labels were different in two modals. One is Python 3 and other is Python.", "author": "aweng98", "createdAt": "2020-08-28T17:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1OTg3NQ=="}], "type": "inlineReview"}, {"oid": "41206b8b84f8b7a83bcc406c3c475f58ca9c83c3", "url": "https://github.com/all-of-us/workbench/commit/41206b8b84f8b7a83bcc406c3c475f58ca9c83c3", "message": "break up export-to-notebook.spec test", "committedDate": "2020-08-28T17:05:05Z", "type": "commit"}, {"oid": "220116f96a24e334e02c481a3be53207f11e8d65", "url": "https://github.com/all-of-us/workbench/commit/220116f96a24e334e02c481a3be53207f11e8d65", "message": "dataset export to notebook thru ellipsis menu", "committedDate": "2020-08-28T17:05:05Z", "type": "commit"}, {"oid": "527854ffe77b6c5541c98f7ac964f929556b1926", "url": "https://github.com/all-of-us/workbench/commit/527854ffe77b6c5541c98f7ac964f929556b1926", "message": "fix modal", "committedDate": "2020-08-28T17:05:05Z", "type": "commit"}, {"oid": "c00a866273ea6e022958ef740d01c0e5f0e0b5d7", "url": "https://github.com/all-of-us/workbench/commit/c00a866273ea6e022958ef740d01c0e5f0e0b5d7", "message": "PR feedback", "committedDate": "2020-08-28T17:27:08Z", "type": "commit"}, {"oid": "c00a866273ea6e022958ef740d01c0e5f0e0b5d7", "url": "https://github.com/all-of-us/workbench/commit/c00a866273ea6e022958ef740d01c0e5f0e0b5d7", "message": "PR feedback", "committedDate": "2020-08-28T17:27:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNjk5Mw==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476606993", "bodyText": "why is this commented out?", "author": "jaycarlton", "createdAt": "2020-08-25T17:12:55Z", "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"", "originalCommit": "9cc9ecfe2934f25d5202184359ad506188afed81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ0NTgxMQ==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479445811", "bodyText": "oops. it's my note, forgot to remove. good catch.", "author": "aweng98", "createdAt": "2020-08-28T17:37:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNjk5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNzM3NQ==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476607375", "bodyText": "I don't think you need the parenthesis around this.getNotebookNameInput(), or I don't understand what they do.", "author": "jaycarlton", "createdAt": "2020-08-25T17:13:33Z", "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();", "originalCommit": "9cc9ecfe2934f25d5202184359ad506188afed81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ0NjUyNw==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479446527", "bodyText": "compile error if I remove the parenthesis.", "author": "aweng98", "createdAt": "2020-08-28T17:39:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNzM3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNzgxOQ==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476607819", "bodyText": "If this is a common exception handling pattern, can it be implemented in the parent class Modal or even higher?", "author": "jaycarlton", "createdAt": "2020-08-25T17:14:12Z", "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);", "originalCommit": "9cc9ecfe2934f25d5202184359ad506188afed81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1MjQ3Mw==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479452473", "bodyText": "This is the pattern for now. It definitely have rooms for improvement. I have an idea but I need time for test.", "author": "aweng98", "createdAt": "2020-08-28T17:51:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNzgxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwODgxNQ==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476608815", "bodyText": "It might be good to test the dialog in various states of missing, incomplete, or erroneous input. For example, if you delete the text, does the OK button become non-responsive.", "author": "jaycarlton", "createdAt": "2020-08-25T17:15:40Z", "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"Python\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  getRRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"R\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  /**\n+   * Fill out Export Notebook modal to create a new notebook:", "originalCommit": "9cc9ecfe2934f25d5202184359ad506188afed81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1MzA1Mg==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479453052", "bodyText": "I like your idea. Allow me time to test out.", "author": "aweng98", "createdAt": "2020-08-28T17:53:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwODgxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYxMTE3MA==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476611170", "bodyText": "we can de-duplicate this by putting it after the if/else.", "author": "jaycarlton", "createdAt": "2020-08-25T17:19:33Z", "path": "e2e/app/component/new-notebook-modal.ts", "diffHunk": "@@ -41,9 +41,11 @@ export default class NewNotebookModal extends Modal {\n   async fillInModal(notebookName: string, language: Language): Promise<void> {\n     await this.name().then( (textbox) => textbox.type(notebookName));\n     if (language === Language.Python) {\n-      await this.python3Radiobutton().then( (radio) => radio.select());\n+      const radio = this.python3Radiobutton();\n+      await radio.select();", "originalCommit": "9cc9ecfe2934f25d5202184359ad506188afed81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2NDYzMQ==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477464631", "bodyText": "You can do the select after if you declarer the radio first (before the if) and assign it inside there. Or even make a getLanguageRadioButton(Language language) method to encapsulate this logic.", "author": "jaycarlton", "createdAt": "2020-08-26T17:22:20Z", "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"Python\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  getRRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"R\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  /**\n+   * Fill out Export Notebook modal to create a new notebook:\n+   * - Type notebook name.\n+   * - Select notebook language.\n+   * - Click \"Export and Open\" button.\n+   * @param {string} notebookName Notebook name.\n+   * @param {Language} language Notebook programming language. Default value is Python.\n+   */\n+  async fillInModal(notebookName: string, language: Language = Language.Python): Promise<void> {\n+    const notebookNameInput = this.getNotebookNameInput();\n+    await notebookNameInput.type(notebookName);\n+    if (language === Language.Python) {\n+      const radio = this.getPythonRadiobutton();\n+      await radio.select();", "originalCommit": "9cc9ecfe2934f25d5202184359ad506188afed81", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2NTIwMw==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477465203", "bodyText": "If you use this pattern everywhere, you could make an Error creation function that takes a description and then does the formatting for you.", "author": "jaycarlton", "createdAt": "2020-08-26T17:23:16Z", "path": "e2e/app/component/new-notebook-modal.ts", "diffHunk": "@@ -17,15 +20,12 @@ export default class NewNotebookModal extends Modal {\n \n   async waitForLoad(): Promise<this> {\n     try {\n+      await super.waitForLoad();\n       await waitForText(this.page, modalTitle, {xpath: this.getXpath()});\n-      await this.name();\n-      await this.python3Radiobutton();\n-      await this.RRadiobutton();\n     } catch (e) {\n       await savePageToFile(this.page);\n       await takeScreenshot(this.page);\n-      console.error(`\"New Notebook\" modal waitForLoad() encountered ${e}`);\n-      throw e;\n+      throw new Error(`NewNotebookModal waitForLoad() encountered ${e}`);", "originalCommit": "9cc9ecfe2934f25d5202184359ad506188afed81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1MzUwOQ==", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479453509", "bodyText": "Good idea. I'll make all code improvement in a separate PR.", "author": "aweng98", "createdAt": "2020-08-28T17:54:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2NTIwMw=="}], "type": "inlineReview"}, {"oid": "afa965e4702c574e3675f0ee8bcc7b6caab3e460", "url": "https://github.com/all-of-us/workbench/commit/afa965e4702c574e3675f0ee8bcc7b6caab3e460", "message": "PR feedback", "committedDate": "2020-08-28T17:55:42Z", "type": "commit"}]}