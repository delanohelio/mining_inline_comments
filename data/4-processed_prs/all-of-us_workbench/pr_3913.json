{"pr_number": 3913, "pr_title": "[risk=low][RW-4956] enable free credit limit override UX", "pr_createdAt": "2020-08-25T15:09:57Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3913", "timeline": [{"oid": "eb0a0cd347e3db61ef67d8e0955432446710830e", "url": "https://github.com/all-of-us/workbench/commit/eb0a0cd347e3db61ef67d8e0955432446710830e", "message": "RW-4956 enable free credit limit override", "committedDate": "2020-08-25T12:50:28Z", "type": "commit"}, {"oid": "524cc00d269b45ac81b428957c45507657dfee98", "url": "https://github.com/all-of-us/workbench/commit/524cc00d269b45ac81b428957c45507657dfee98", "message": "format free credit usage", "committedDate": "2020-08-25T15:16:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUzMTcwOA==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r476531708", "bodyText": "can't hardcode the options list because we also need to include the current override value, if one exists and is not one of these", "author": "jmthibault79", "createdAt": "2020-08-25T15:19:12Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -56,19 +57,7 @@ const styles = reactStyles({\n   }\n });\n \n-const freeCreditLimitOptions = [\n-  {label: '$300', value: 300},\n-  {label: '$350', value: 350},\n-  {label: '$400', value: 400},\n-  {label: '$450', value: 450},\n-  {label: '$500', value: 500},\n-  {label: '$550', value: 550},\n-  {label: '$600', value: 600},\n-  {label: '$650', value: 650},\n-  {label: '$700', value: 700},\n-  {label: '$750', value: 750},\n-  {label: '$800', value: 800}\n-];\n+const freeCreditLimitDefaultOptions = new Set([300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800]);", "originalCommit": "524cc00d269b45ac81b428957c45507657dfee98", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyMzE0NQ==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r476723145", "bodyText": "nit: consider fp.range.", "author": "jaycarlton", "createdAt": "2020-08-25T20:39:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUzMTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNDU1Mw==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r477324553", "bodyText": "I considered this, but was surprisingly unsuccessful: https://github.com/all-of-us/workbench/commits/joel/RW-4956-range", "author": "jmthibault79", "createdAt": "2020-08-26T14:00:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUzMTcwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5MjYxMA==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r477392610", "bodyText": "Fixed, after Greg's surprising suggestion to randomly rearrange the params until it works.  Apparently this is a \"fun quirk\" of fp-lodash.  Added comment to explain.", "author": "jmthibault79", "createdAt": "2020-08-26T15:31:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUzMTcwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUzNDg3OA==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r476534878", "bodyText": "tested with quota:\n\nundefined\nequal to a predefined value: does not duplicate\ndefined, with various values in and around the predefined range: orders correctly", "author": "jmthibault79", "createdAt": "2020-08-25T15:23:44Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -225,6 +214,12 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     }\n   }\n \n+  getFreeCreditLimitOptions() {\n+    const {oldProfile: {freeTierDollarQuota}} = this.state;\n+    const defaultsPlusMaybeOverride = Array.from(freeCreditLimitDefaultOptions.add(freeTierDollarQuota));", "originalCommit": "524cc00d269b45ac81b428957c45507657dfee98", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyNDYzOQ==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r476724639", "bodyText": "I'm not sure if we want to tolerate undefined values or just assume we'll set whatever isn't there to null. IOW I never understood how undefined is a feature of JavaScript.", "author": "jaycarlton", "createdAt": "2020-08-25T20:41:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUzNDg3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMxNjcyOQ==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r477316729", "bodyText": "Here I was imprecise: I do not mean JS undefined.  Rather, the DB user has free_tier_credits_limit_dollars_override set to NULL, which is the state for almost all users.\nThis results in freeTierDollarQuota here being equal to the config-file default value, which may or may not be one of the predefined dropdown options (300 to 800) but in current practice is 300.", "author": "jmthibault79", "createdAt": "2020-08-26T13:51:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUzNDg3OA=="}], "type": "inlineReview"}, {"oid": "f6a00b2678c5ba0c61b59776de8374afd2c297f4", "url": "https://github.com/all-of-us/workbench/commit/f6a00b2678c5ba0c61b59776de8374afd2c297f4", "message": "reorder", "committedDate": "2020-08-25T15:25:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUzNzA5Nw==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r476537097", "bodyText": "renderUSD() is strictly a string processing function now.  The formatting is desired only here, so it was moved here.", "author": "jmthibault79", "createdAt": "2020-08-25T15:26:32Z", "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -577,8 +577,8 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n                     <div>Remaining <i>All of Us</i> free credits:</div>\n                 </FlexColumn>\n                 <FlexColumn style={{alignItems: 'flex-end', marginLeft: '1.0rem'}}>\n-                    <div style={{marginTop: '0.4rem'}}>{renderUSD(profile.freeTierUsage)}</div>", "originalCommit": "f6a00b2678c5ba0c61b59776de8374afd2c297f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6ff854cff0a4faa6ce845c662f04f229065a04a1", "url": "https://github.com/all-of-us/workbench/commit/6ff854cff0a4faa6ce845c662f04f229065a04a1", "message": "renderUSD is now a string", "committedDate": "2020-08-25T15:27:30Z", "type": "commit"}, {"oid": "3c47ab4a39b6892bf98512a89644d56b75e52637", "url": "https://github.com/all-of-us/workbench/commit/3c47ab4a39b6892bf98512a89644d56b75e52637", "message": "correct sorting", "committedDate": "2020-08-25T15:46:15Z", "type": "commit"}, {"oid": "eb95713e0c13df6e43a9627eca2bad3d30c841a7", "url": "https://github.com/all-of-us/workbench/commit/eb95713e0c13df6e43a9627eca2bad3d30c841a7", "message": "was sometimes not finding a matched institution", "committedDate": "2020-08-25T18:35:18Z", "type": "commit"}, {"oid": "1b15557c4e6a0cd006285b299119ca489fa514dc", "url": "https://github.com/all-of-us/workbench/commit/1b15557c4e6a0cd006285b299119ca489fa514dc", "message": "FreeCreditsUsage component", "committedDate": "2020-08-25T18:35:19Z", "type": "commit"}, {"oid": "db3b059377ff6910dd7102df0b5f00dabc53df15", "url": "https://github.com/all-of-us/workbench/commit/db3b059377ff6910dd7102df0b5f00dabc53df15", "message": "style tweak", "committedDate": "2020-08-25T18:49:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyMzU2Ng==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r476723566", "bodyText": "nit: maybe indicate in the help text or hover  text that  this applies to  all workspaces owned by this user.", "author": "jaycarlton", "createdAt": "2020-08-25T20:39:53Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -124,6 +112,31 @@ const EmailValidationErrorMessage = ({emailValidationResponse, updatedProfile, v\n   return null;\n };\n \n+const FreeCreditsUsage = ({aboveLimit, usage}) => {\n+  const inputStyle = aboveLimit ?\n+  {...styles.textInput,\n+    backgroundColor: colorWithWhiteness(colors.danger, .95),\n+    borderColor: colors.danger,\n+    color: colors.danger,\n+  } :\n+  {...styles.textInput,\n+    ...styles.backgroundColorDark,\n+    color: colors.disabled,\n+  };\n+\n+  return <React.Fragment>\n+    <TextInputWithLabel\n+      labelText={'Free credits used'}", "originalCommit": "db3b059377ff6910dd7102df0b5f00dabc53df15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyMzk0Mw==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r476723943", "bodyText": "nit: type these? I don't know what rule we settled on for when we explicitly type stuff.", "author": "jaycarlton", "createdAt": "2020-08-25T20:40:34Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -124,6 +112,31 @@ const EmailValidationErrorMessage = ({emailValidationResponse, updatedProfile, v\n   return null;\n };\n \n+const FreeCreditsUsage = ({aboveLimit, usage}) => {", "originalCommit": "db3b059377ff6910dd7102df0b5f00dabc53df15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjczODM3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r476738372", "bodyText": "I attempted to, unsuccessfully.  My assumption was that it was not possible.  But now Googling tells me otherwise, so I will make an attempt.", "author": "jmthibault79", "createdAt": "2020-08-25T21:08:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyMzk0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNjA1OA==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r477326058", "bodyText": "typed now, with a FreeCreditsProps", "author": "jmthibault79", "createdAt": "2020-08-26T14:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyMzk0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyNTY1OQ==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r476725659", "bodyText": "nit: I'd name this isAboveLimit. Generally booleans starting with forms of \"be\" are more recognizable IMO.", "author": "jaycarlton", "createdAt": "2020-08-25T20:44:03Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -500,23 +535,18 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n                 containerStyle={styles.textInputContainer}\n                 onChange={email => this.setContactEmail(email)}\n             />\n-            <TextInputWithLabel\n-                labelText={'Free credits used'}\n-                placeholder={updatedProfile.freeTierUsage}\n-                inputId={'freeTierUsage'}\n-                disabled={true}\n-                inputStyle={{width: '6.5rem', ...styles.backgroundColorDark}}\n-                containerStyle={styles.textInputContainer}\n+            <FreeCreditsUsage\n+              aboveLimit={this.usageIsAboveLimit()}", "originalCommit": "db3b059377ff6910dd7102df0b5f00dabc53df15", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyNjI5Nw==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r476726297", "bodyText": "render implies a side effect. I'd call this formatCreditUsage. (The negative to zero conversion indicates to me that maybe we shouldn't put it in a public utils file, as that's not standard, and would be an easy way to generate bugs.)\nIs there a specific requirement to drop the cents when it's zero? Why not when it's $1? Or can we just round to the nearest dollar?", "author": "jaycarlton", "createdAt": "2020-08-25T20:45:17Z", "path": "ui/src/app/utils/index.tsx", "diffHunk": "@@ -531,12 +531,12 @@ export function highlightSearchTerm(searchTerm: string, stringToHighlight: strin\n \n // render a float value as US currency, rounded to cents: 255.372793 -> $255.37\n // negative values are rendered as $0\n-export function renderUSD(value: number) {\n+export function renderUSD(value: number): string {", "originalCommit": "db3b059377ff6910dd7102df0b5f00dabc53df15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMzMjMzNg==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r477332336", "bodyText": "Renamed away from \"render\" and with a name to indicate that this is specifically for free credit values (usage, balance, quota/override).\nThe requirement is to use the string \"$0\" for negative values.", "author": "jmthibault79", "createdAt": "2020-08-26T14:11:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyNjI5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyNzEzMw==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r476727133", "bodyText": "direct comparison to undefined makes me nervous. Is everything getting initialized correctly?", "author": "jaycarlton", "createdAt": "2020-08-25T20:46:58Z", "path": "ui/src/app/utils/institutions.tsx", "diffHunk": "@@ -44,6 +44,10 @@ export const getRoleOptions = (institutions: Array<PublicInstitutionDetails>, in\n     const {shortName} = institution;\n     return shortName === institutionShortName;\n   }, institutions);\n+  if (matchedInstitution === null || matchedInstitution === undefined) {", "originalCommit": "db3b059377ff6910dd7102df0b5f00dabc53df15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ0NzY1NA==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r477447654", "bodyText": "This is a check of a call to fp.find() which returns undefined if it is not found.  I removed the null check since it's not relevant.", "author": "jmthibault79", "createdAt": "2020-08-26T16:54:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcyNzEzMw=="}], "type": "inlineReview"}, {"oid": "b6be66d7f2c0e5ad32e56d305384701700625211", "url": "https://github.com/all-of-us/workbench/commit/b6be66d7f2c0e5ad32e56d305384701700625211", "message": "FreeCreditsProps", "committedDate": "2020-08-26T13:15:55Z", "type": "commit"}, {"oid": "b4ce9bcd709009f37c38848b99a3c50e9f74981d", "url": "https://github.com/all-of-us/workbench/commit/b4ce9bcd709009f37c38848b99a3c50e9f74981d", "message": "rename renderUSD() to formatFreeCreditsUSD()", "committedDate": "2020-08-26T14:08:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM4NTU1NA==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r477385554", "bodyText": "nit: don't think you need the curly braces for a string literal with no interpolation.", "author": "jaycarlton", "createdAt": "2020-08-26T15:21:52Z", "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -124,6 +112,36 @@ const EmailValidationErrorMessage = ({emailValidationResponse, updatedProfile, v\n   return null;\n };\n \n+interface FreeCreditsProps {\n+  isAboveLimit: boolean;\n+  usage: string;\n+}\n+\n+const FreeCreditsUsage = ({isAboveLimit, usage}: FreeCreditsProps) => {\n+  const inputStyle = isAboveLimit ?\n+  {...styles.textInput,\n+    backgroundColor: colorWithWhiteness(colors.danger, .95),\n+    borderColor: colors.danger,\n+    color: colors.danger,\n+  } :\n+  {...styles.textInput,\n+    ...styles.backgroundColorDark,\n+    color: colors.disabled,\n+  };\n+\n+  return <React.Fragment>\n+    <TextInputWithLabel\n+      labelText={'Free credits used'}", "originalCommit": "b4ce9bcd709009f37c38848b99a3c50e9f74981d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMDg4Ng==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r477410886", "bodyText": "yep", "author": "jmthibault79", "createdAt": "2020-08-26T15:57:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM4NTU1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM4Njg3Mg==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r477386872", "bodyText": "nit: if the value is exactly 0, it will print as $0.00 but if negative it's $0?", "author": "jaycarlton", "createdAt": "2020-08-26T15:23:42Z", "path": "ui/src/app/utils/index.tsx", "diffHunk": "@@ -531,12 +531,12 @@ export function highlightSearchTerm(searchTerm: string, stringToHighlight: strin\n \n // render a float value as US currency, rounded to cents: 255.372793 -> $255.37\n // negative values are rendered as $0\n-export function renderUSD(value: number) {\n+export function formatFreeCreditsUSD(value: number): string {\n   value = value || 0.0;\n   if (value < 0.0) {\n-    return <div style={{fontWeight: 600}}>$0</div>;\n+    return '$0';", "originalCommit": "b4ce9bcd709009f37c38848b99a3c50e9f74981d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQxMTE2NQ==", "url": "https://github.com/all-of-us/workbench/pull/3913#discussion_r477411165", "bodyText": "switching to <= makes sense", "author": "jmthibault79", "createdAt": "2020-08-26T15:57:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM4Njg3Mg=="}], "type": "inlineReview"}, {"oid": "c204c8dfc08b729f6287a648edaec4d4e2f3b6bf", "url": "https://github.com/all-of-us/workbench/commit/c204c8dfc08b729f6287a648edaec4d4e2f3b6bf", "message": "define default option w/ rangeStep", "committedDate": "2020-08-26T15:24:51Z", "type": "commit"}, {"oid": "d80cbbd832ac77efdc5a8effe891adbc01869c0a", "url": "https://github.com/all-of-us/workbench/commit/d80cbbd832ac77efdc5a8effe891adbc01869c0a", "message": "rm curlies", "committedDate": "2020-08-26T15:37:16Z", "type": "commit"}, {"oid": "b90a0ec8b2ef3ed16ca4b388146dc09b386fec84", "url": "https://github.com/all-of-us/workbench/commit/b90a0ec8b2ef3ed16ca4b388146dc09b386fec84", "message": "find() return val can be undefined but not null", "committedDate": "2020-08-26T16:46:16Z", "type": "commit"}]}