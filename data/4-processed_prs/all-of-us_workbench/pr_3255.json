{"pr_number": 3255, "pr_title": "[RW-3212][Risk=no] Working workspace billing info", "pr_createdAt": "2020-03-16T14:09:55Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3255", "timeline": [{"oid": "c9661c19a6b369811f801c6be70728b0189688b7", "url": "https://github.com/all-of-us/workbench/commit/c9661c19a6b369811f801c6be70728b0189688b7", "message": "Working workspace billing info", "committedDate": "2020-03-16T14:08:16Z", "type": "commit"}, {"oid": "2f7e7220d0f835fc7fd6e74c1a0907566196621f", "url": "https://github.com/all-of-us/workbench/commit/2f7e7220d0f835fc7fd6e74c1a0907566196621f", "message": "Add comment", "committedDate": "2020-03-16T14:26:29Z", "type": "commit"}, {"oid": "ac3fbd6a2934c316816532565a0bc98c6746ebd1", "url": "https://github.com/all-of-us/workbench/commit/ac3fbd6a2934c316816532565a0bc98c6746ebd1", "message": "Fix tests", "committedDate": "2020-03-16T14:34:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI5NDc4NQ==", "url": "https://github.com/all-of-us/workbench/pull/3255#discussion_r393294785", "bodyText": "nit: do we need single quotes?", "author": "ericsong", "createdAt": "2020-03-16T20:35:51Z", "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -815,6 +815,21 @@ paths:\n           description: Workspace deletion request accepted\n           schema:\n             \"$ref\": \"#/definitions/EmptyResponse\"\n+  \"/v1/workspaces/{workspaceNamespace}/{workspaceId}/billing-usage\":\n+    parameters:\n+      - \"$ref\": \"#/parameters/workspaceNamespace\"\n+      - \"$ref\": \"#/parameters/workspaceId\"\n+    get:\n+      tags:\n+      - workspaces\n+      description: 'Gets the free tier billing spend for a specified workspace'", "originalCommit": "ac3fbd6a2934c316816532565a0bc98c6746ebd1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI5NTk2OA==", "url": "https://github.com/all-of-us/workbench/pull/3255#discussion_r393295968", "bodyText": "nit: I'd rename this to cost for consistency with our db", "author": "ericsong", "createdAt": "2020-03-16T20:38:25Z", "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -3750,6 +3765,16 @@ definitions:\n       published:\n         type: boolean\n         default: false\n+  WorkspaceBillingUsageResponse:\n+    type: object\n+    required:\n+    - billingUsage\n+    properties:\n+      billingUsage:", "originalCommit": "ac3fbd6a2934c316816532565a0bc98c6746ebd1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI5Njc2NA==", "url": "https://github.com/all-of-us/workbench/pull/3255#discussion_r393296764", "bodyText": "would we be able to extend this test case to verify the return value? I'm hoping its as simple as just saving a free tier row and asserting the return value from here.", "author": "ericsong", "createdAt": "2020-03-16T20:39:59Z", "path": "api/src/test/java/org/pmiops/workbench/workspaces/WorkspacesControllerTest.java", "diffHunk": "@@ -2989,6 +2989,22 @@ public void testNotebookLockingMetadataUnknownUser() {\n     assertNotebookLockingMetadata(gcsMetadata, expectedResponse, fcWorkspaceAcl);\n   }\n \n+  @Test\n+  public void testGetBillingUsage() {\n+    Workspace ws = createWorkspace();\n+    ws = workspacesController.createWorkspace(ws).getBody();\n+    stubGetWorkspace(ws.getNamespace(), ws.getId(), ws.getCreator(), WorkspaceAccessLevel.OWNER);\n+    workspacesController.getBillingUsage(ws.getNamespace(), ws.getId());", "originalCommit": "ac3fbd6a2934c316816532565a0bc98c6746ebd1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMwMDMyOQ==", "url": "https://github.com/all-of-us/workbench/pull/3255#discussion_r393300329", "bodyText": "copied data-test-id?", "author": "ericsong", "createdAt": "2020-03-16T20:46:39Z", "path": "ui/src/app/pages/workspace/workspace-about.tsx", "diffHunk": "@@ -240,6 +259,15 @@ export const WorkspaceAbout = fp.flow(withUserProfile(), withUrlParams(), withCd\n             <div style={{fontSize: '0.5rem'}}>{workspace ?\n               fp.capitalize(workspace.dataAccessLevel.toString()) : 'Loading...'}</div>\n           </div>\n+          {workspace && WorkspacePermissionsUtil.canWrite(workspace.accessLevel)\n+            && workspace.billingAccountType === BillingAccountType.FREETIER &&\n+              <div style={{...styles.infoBox, height: '2.5rem'}} data-test-id='dataAccessLevel'>", "originalCommit": "ac3fbd6a2934c316816532565a0bc98c6746ebd1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9463629ff41dc4388f3cac4b3255f26a5166db87", "url": "https://github.com/all-of-us/workbench/commit/9463629ff41dc4388f3cac4b3255f26a5166db87", "message": "PR comments and new test", "committedDate": "2020-03-17T14:57:27Z", "type": "commit"}, {"oid": "896a6bff78ee1d9089e96ea3869b6ac0d1a96a49", "url": "https://github.com/all-of-us/workbench/commit/896a6bff78ee1d9089e96ea3869b6ac0d1a96a49", "message": "Fix tests", "committedDate": "2020-03-17T18:23:49Z", "type": "commit"}, {"oid": "05c97313cf10105dab79b1677525152cc12a6f06", "url": "https://github.com/all-of-us/workbench/commit/05c97313cf10105dab79b1677525152cc12a6f06", "message": "Fix spotless", "committedDate": "2020-03-17T18:27:45Z", "type": "commit"}]}