{"pr_number": 4013, "pr_title": "[risk=high][RW-5478] Admin View Notebook page", "pr_createdAt": "2020-09-16T14:29:13Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4013", "timeline": [{"oid": "1009088ab4d797ed06621b6ea596d2b902b9e942", "url": "https://github.com/all-of-us/workbench/commit/1009088ab4d797ed06621b6ea596d2b902b9e942", "message": "Remove workspaceName parameter from adminReadOnlyNotebook", "committedDate": "2020-09-16T12:19:58Z", "type": "commit"}, {"oid": "3f8efebb9bc733a72ed7a758570294e6883aa7df", "url": "https://github.com/all-of-us/workbench/commit/3f8efebb9bc733a72ed7a758570294e6883aa7df", "message": "AdminNotebookView", "committedDate": "2020-09-16T12:19:59Z", "type": "commit"}, {"oid": "561345411f4776af9bf4b3f0f599dd8f8e74fb73", "url": "https://github.com/all-of-us/workbench/commit/561345411f4776af9bf4b3f0f599dd8f8e74fb73", "message": "basically works!", "committedDate": "2020-09-16T12:19:59Z", "type": "commit"}, {"oid": "b4b648d92de3879e108525af2b1c8e8de50a250c", "url": "https://github.com/all-of-us/workbench/commit/b4b648d92de3879e108525af2b1c8e8de50a250c", "message": "add header", "committedDate": "2020-09-16T13:05:19Z", "type": "commit"}, {"oid": "11823c188c0cb9a763edfa371cf1b25bc34e441b", "url": "https://github.com/all-of-us/workbench/commit/11823c188c0cb9a763edfa371cf1b25bc34e441b", "message": "cleanup", "committedDate": "2020-09-16T13:13:23Z", "type": "commit"}, {"oid": "9b3f464626c75e47c6dcd8b4d46eb73483675fe5", "url": "https://github.com/all-of-us/workbench/commit/9b3f464626c75e47c6dcd8b4d46eb73483675fe5", "message": "Error on no accessQuery param", "committedDate": "2020-09-16T13:35:04Z", "type": "commit"}, {"oid": "e009c9ab1a0e1d6d0fab4e2a4ee42a9befe5494e", "url": "https://github.com/all-of-us/workbench/commit/e009c9ab1a0e1d6d0fab4e2a4ee42a9befe5494e", "message": "reuse errorMessage", "committedDate": "2020-09-16T13:43:04Z", "type": "commit"}, {"oid": "e70fbbb3dfb2fcddce2c3145cea72a46cc278eeb", "url": "https://github.com/all-of-us/workbench/commit/e70fbbb3dfb2fcddce2c3145cea72a46cc278eeb", "message": "combine effects and add spinner", "committedDate": "2020-09-16T14:27:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4MzYzNg==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489483636", "bodyText": "Workspace name (firecloud name, no spaces) is not strictly necessary, and is also not immediately available to the UI page", "author": "jmthibault79", "createdAt": "2020-09-16T14:30:35Z", "path": "api/src/main/java/org/pmiops/workbench/api/WorkspaceAdminController.java", "diffHunk": "@@ -59,13 +59,9 @@ public WorkspaceAdminController(WorkspaceAdminService workspaceAdminService) {\n   @Override\n   @AuthorityRequired({Authority.RESEARCHER_DATA_VIEW})\n   public ResponseEntity<ReadOnlyNotebookResponse> adminReadOnlyNotebook(\n-      String workspaceNamespace,\n-      String workspaceName,\n-      String notebookName,\n-      AccessReason accessReason) {\n+      String workspaceNamespace, String notebookName, AccessReason accessReason) {", "originalCommit": "e70fbbb3dfb2fcddce2c3145cea72a46cc278eeb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTczODcyNg==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489738726", "bodyText": "interesting.", "author": "jaycarlton", "createdAt": "2020-09-16T20:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4MzYzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4NDYwNA==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489484604", "bodyText": "split out as a method because it's now needed in 3 places", "author": "jmthibault79", "createdAt": "2020-09-16T14:31:48Z", "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminServiceImpl.java", "diffHunk": "@@ -162,12 +162,7 @@ public CloudStorageTraffic getCloudStorageTraffic(String workspaceNamespace) {\n \n   @Override\n   public WorkspaceAdminView getWorkspaceAdminView(String workspaceNamespace) {\n-    final DbWorkspace dbWorkspace =\n-        getFirstWorkspaceByNamespace(workspaceNamespace)\n-            .orElseThrow(\n-                () ->\n-                    new NotFoundException(\n-                        String.format(\"No workspace found for namespace %s\", workspaceNamespace)));\n+    final DbWorkspace dbWorkspace = getWorkspaceByNamespaceOrThrow(workspaceNamespace);", "originalCommit": "e70fbbb3dfb2fcddce2c3145cea72a46cc278eeb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4NTc5NA==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489485794", "bodyText": "this breaking API change is OK because it was just created and is not yet used", "author": "jmthibault79", "createdAt": "2020-09-16T14:33:16Z", "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -1697,10 +1697,9 @@ paths:\n           description: HTML Read Only version of the notebook\n           schema:\n             \"$ref\": \"#/definitions/ReadOnlyNotebookResponse\"\n-  \"/v1/admin/workspaces/{workspaceNamespace}/{workspaceId}/notebooks/{notebookName}/readonly\":\n+  \"/v1/admin/workspaces/{workspaceNamespace}/notebooks/{notebookName}/readonly\":", "originalCommit": "e70fbbb3dfb2fcddce2c3145cea72a46cc278eeb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTczOTYyNA==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489739624", "bodyText": "Are we sure we'll only ever have one workspace in the namespace?", "author": "jaycarlton", "createdAt": "2020-09-16T20:37:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4NTc5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0NDYxNQ==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489744615", "bodyText": "Also, is there any kind of untrusted code/attack vector associated with passing the parameter this way?", "author": "jaycarlton", "createdAt": "2020-09-16T20:47:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4NTc5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2Mjg2NA==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489762864", "bodyText": "The other Workspace admin pages are namespace-only, and this continues the pattern.  Only a few very old Test workspaces violate the 1PPW rule, so that shouldn't be relevant here.\nPath parameters are very common in AoU and Terra.", "author": "jmthibault79", "createdAt": "2020-09-16T21:24:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4NTc5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MjAyNA==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r490242024", "bodyText": "Sorry, I think I meant to ask this about the query param being encoded. We don't need to run it through a sanitizing function or something. (Obviously it's not executed at the moment.)", "author": "jaycarlton", "createdAt": "2020-09-17T13:25:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4NTc5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4MTA5Nw==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r490281097", "bodyText": "Simply printing the accessReason looks reasonably safe.\nWe may want to truncate to some maxlen however.  Is there a general guideline for audit property values?", "author": "jmthibault79", "createdAt": "2020-09-17T14:14:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4NTc5NA=="}], "type": "inlineReview"}, {"oid": "16bb1f02355ac162836fc41a24c44bc638937f2f", "url": "https://github.com/all-of-us/workbench/commit/16bb1f02355ac162836fc41a24c44bc638937f2f", "message": "unused", "committedDate": "2020-09-16T14:37:06Z", "type": "commit"}, {"oid": "2584a0cc85452e414dcfcae8b8f8df31020a01e9", "url": "https://github.com/all-of-us/workbench/commit/2584a0cc85452e414dcfcae8b8f8df31020a01e9", "message": "comment for reactRouterUrlSearchParams", "committedDate": "2020-09-16T14:42:36Z", "type": "commit"}, {"oid": "3d4633e26949c63ae952cb02d77391a5b5478919", "url": "https://github.com/all-of-us/workbench/commit/3d4633e26949c63ae952cb02d77391a5b5478919", "message": "lint", "committedDate": "2020-09-16T14:43:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5NDU5NA==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489494594", "bodyText": "this might belong elsewhere?", "author": "jmthibault79", "createdAt": "2020-09-16T14:44:36Z", "path": "ui/src/app/utils/navigation.tsx", "diffHunk": "@@ -111,6 +112,17 @@ export const navigateSignOut = (continuePath: string = '/login') => {\n     `https://appengine.google.com/_ah/logout?continue=${window.location.origin}${continuePath}`);\n };\n \n+/**\n+ * Retrieve query parameters from the React Router.\n+ *\n+ * Example:\n+ *  my/query/page?user=alice123\n+ *  reactRouterUrlSearchParams.get('user') -> value is 'alice123'\n+ */\n+export const reactRouterUrlSearchParams = (): URLSearchParams => {", "originalCommit": "3d4633e26949c63ae952cb02d77391a5b5478919", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0MzE2Mg==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489743162", "bodyText": "I don't even know what this is. @petesantos can you take a quick look at the routey bits?", "author": "jaycarlton", "createdAt": "2020-09-16T20:44:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5NDU5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2MzMyOA==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489763328", "bodyText": "This could go in a different \"utils\" file.  It makes sense to me here, but I could also move it.", "author": "jmthibault79", "createdAt": "2020-09-16T21:25:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5NDU5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzcyNw==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r490243727", "bodyText": "I thought there was some kind of handshaking between this router state and the components already established, so that they can get the parameters.\nNot worth worrying about where to put it. Generally utils could become a junk drawer for code, so it's nice to have them arranged topically.\nDef not a blocker.", "author": "jaycarlton", "createdAt": "2020-09-17T13:27:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5NDU5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5ODg1Nw==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489498857", "bodyText": "these are copied from a variety of sources.  The goal here is \"looks OK\" rather than polished", "author": "jmthibault79", "createdAt": "2020-09-16T14:49:49Z", "path": "ui/src/app/pages/admin/admin-notebook-view.tsx", "diffHunk": "@@ -0,0 +1,109 @@\n+import {SpinnerOverlay} from 'app/components/spinners';\n+import {workspaceAdminApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {reactStyles} from 'app/utils';\n+import {reactRouterUrlSearchParams} from 'app/utils/navigation';\n+import * as React from 'react';\n+import {useEffect, useState} from 'react';\n+import {useParams} from 'react-router';\n+\n+const styles = reactStyles({", "originalCommit": "3d4633e26949c63ae952cb02d77391a5b5478919", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5OTg0Mg==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489499842", "bodyText": "workspaceName is not immediately available: gets updated when getWorkspaceAdminView() returns", "author": "jmthibault79", "createdAt": "2020-09-16T14:51:10Z", "path": "ui/src/app/pages/admin/admin-notebook-view.tsx", "diffHunk": "@@ -0,0 +1,109 @@\n+import {SpinnerOverlay} from 'app/components/spinners';\n+import {workspaceAdminApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {reactStyles} from 'app/utils';\n+import {reactRouterUrlSearchParams} from 'app/utils/navigation';\n+import * as React from 'react';\n+import {useEffect, useState} from 'react';\n+import {useParams} from 'react-router';\n+\n+const styles = reactStyles({\n+  heading: {\n+    color: colors.primary,\n+    fontSize: 16,\n+    fontWeight: 500,\n+  },\n+  notebook: {\n+    width: '100%',\n+    height: 'calc(100% - 40px)',\n+    position: 'absolute',\n+    border: 0\n+  },\n+  error: {\n+    marginLeft: 'auto',\n+    marginRight: 'auto',\n+    marginTop: '56px',\n+    background: colors.warning,\n+    border: '1px solid #ebafa6',\n+    borderRadius: '5px',\n+    color: colors.white,\n+    display: 'flex',\n+    fontSize: '14px',\n+    fontWeight: 500,\n+    maxWidth: '550px',\n+    padding: '8px',\n+    textAlign: 'left'\n+  },\n+});\n+\n+interface Props {\n+  workspaceNamespace: string;\n+  nbName: string;\n+  accessReason: string;\n+}\n+\n+const AdminNotebookViewComponent = (props: Props) => {\n+  const {workspaceNamespace, nbName, accessReason} = props;\n+  const [notebookHtml, setHtml] = useState(undefined);\n+  const [workspaceName, setWorkspaceName] = useState(undefined);\n+  const [errorMessage, setErrorMessage] = useState(undefined);\n+\n+  const Header = () => {\n+    const location = workspaceName ? `Workspace ${workspaceNamespace}/${workspaceName}` : workspaceNamespace;", "originalCommit": "3d4633e26949c63ae952cb02d77391a5b5478919", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0NDgwOA==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r490244808", "bodyText": "Maybe name it like Workspace  with Namespace $workspaceNamespace or w/e the syntax is so it shows some context. Depends on where you use this string.", "author": "jaycarlton", "createdAt": "2020-09-17T13:28:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5OTg0Mg=="}], "type": "inlineReview"}, {"oid": "051e1311bd6482a30be40e55ae77f7d41c8fa99b", "url": "https://github.com/all-of-us/workbench/commit/051e1311bd6482a30be40e55ae77f7d41c8fa99b", "message": "Don't show spinner and error message at the same time", "committedDate": "2020-09-16T17:55:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0MDIxNQ==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489740215", "bodyText": "I think you can add a friendly title property to the routeData to give yourself a tab title.", "author": "jaycarlton", "createdAt": "2020-09-16T20:38:32Z", "path": "ui/src/app/app-routing.tsx", "diffHunk": "@@ -98,6 +100,13 @@ export const AppRoutingComponent: React.FunctionComponent<RoutingProps> = ({onSi\n           path='/admin/workspace-audit/:workspaceNamespace'\n           component={() => <WorkspaceAuditPage routeData={{title: 'Workspace Audit'}}/>}\n       />\n+      <AppRoute", "originalCommit": "051e1311bd6482a30be40e55ae77f7d41c8fa99b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2NDg1NA==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489764854", "bodyText": "pathElementForTitle: 'nbName' does this: the notebook name is the tab title.", "author": "jmthibault79", "createdAt": "2020-09-16T21:28:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0MDIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0NTkzNA==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r490245934", "bodyText": "Maybe Admin Inspection View for $nbName or something would give a bit more context?", "author": "jaycarlton", "createdAt": "2020-09-17T13:29:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0MDIxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0MDY4Mw==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489740683", "bodyText": "please set '' as the default for strings instead of undefined.", "author": "jaycarlton", "createdAt": "2020-09-16T20:39:31Z", "path": "ui/src/app/pages/admin/admin-notebook-view.tsx", "diffHunk": "@@ -0,0 +1,110 @@\n+import {SpinnerOverlay} from 'app/components/spinners';\n+import {workspaceAdminApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {reactStyles} from 'app/utils';\n+import {reactRouterUrlSearchParams} from 'app/utils/navigation';\n+import * as React from 'react';\n+import {useEffect, useState} from 'react';\n+import {useParams} from 'react-router';\n+\n+const styles = reactStyles({\n+  heading: {\n+    color: colors.primary,\n+    fontSize: 16,\n+    fontWeight: 500,\n+  },\n+  notebook: {\n+    width: '100%',\n+    height: 'calc(100% - 40px)',\n+    position: 'absolute',\n+    border: 0\n+  },\n+  error: {\n+    marginLeft: 'auto',\n+    marginRight: 'auto',\n+    marginTop: '56px',\n+    background: colors.warning,\n+    border: '1px solid #ebafa6',\n+    borderRadius: '5px',\n+    color: colors.white,\n+    display: 'flex',\n+    fontSize: '14px',\n+    fontWeight: 500,\n+    maxWidth: '550px',\n+    padding: '8px',\n+    textAlign: 'left'\n+  },\n+});\n+\n+interface Props {\n+  workspaceNamespace: string;\n+  nbName: string;\n+  accessReason: string;\n+}\n+\n+const AdminNotebookViewComponent = (props: Props) => {\n+  const {workspaceNamespace, nbName, accessReason} = props;\n+  const [notebookHtml, setHtml] = useState(undefined);", "originalCommit": "051e1311bd6482a30be40e55ae77f7d41c8fa99b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0MTAzNQ==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489741035", "bodyText": "nit: Probably want to split the reason onto another line. Can come later with a styling follow-on.", "author": "jaycarlton", "createdAt": "2020-09-16T20:40:08Z", "path": "ui/src/app/pages/admin/admin-notebook-view.tsx", "diffHunk": "@@ -0,0 +1,110 @@\n+import {SpinnerOverlay} from 'app/components/spinners';\n+import {workspaceAdminApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {reactStyles} from 'app/utils';\n+import {reactRouterUrlSearchParams} from 'app/utils/navigation';\n+import * as React from 'react';\n+import {useEffect, useState} from 'react';\n+import {useParams} from 'react-router';\n+\n+const styles = reactStyles({\n+  heading: {\n+    color: colors.primary,\n+    fontSize: 16,\n+    fontWeight: 500,\n+  },\n+  notebook: {\n+    width: '100%',\n+    height: 'calc(100% - 40px)',\n+    position: 'absolute',\n+    border: 0\n+  },\n+  error: {\n+    marginLeft: 'auto',\n+    marginRight: 'auto',\n+    marginTop: '56px',\n+    background: colors.warning,\n+    border: '1px solid #ebafa6',\n+    borderRadius: '5px',\n+    color: colors.white,\n+    display: 'flex',\n+    fontSize: '14px',\n+    fontWeight: 500,\n+    maxWidth: '550px',\n+    padding: '8px',\n+    textAlign: 'left'\n+  },\n+});\n+\n+interface Props {\n+  workspaceNamespace: string;\n+  nbName: string;\n+  accessReason: string;\n+}\n+\n+const AdminNotebookViewComponent = (props: Props) => {\n+  const {workspaceNamespace, nbName, accessReason} = props;\n+  const [notebookHtml, setHtml] = useState(undefined);\n+  const [workspaceName, setWorkspaceName] = useState(undefined);\n+  const [errorMessage, setErrorMessage] = useState(undefined);\n+\n+  const Header = () => {\n+    const location = workspaceName ? `Workspace ${workspaceNamespace}/${workspaceName}` : workspaceNamespace;\n+    const link = <a href={`/admin/workspaces/${workspaceNamespace}`}>{location}</a>;\n+\n+    return <div style={styles.heading}>Viewing {nbName} in {link} for reason: {accessReason}</div>;", "originalCommit": "051e1311bd6482a30be40e55ae77f7d41c8fa99b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0Mjg1OA==", "url": "https://github.com/all-of-us/workbench/pull/4013#discussion_r489742858", "bodyText": "nit: please spell out notebookName, since it's not that long and easier to read.", "author": "jaycarlton", "createdAt": "2020-09-16T20:43:51Z", "path": "ui/src/app/pages/admin/admin-notebook-view.tsx", "diffHunk": "@@ -0,0 +1,110 @@\n+import {SpinnerOverlay} from 'app/components/spinners';\n+import {workspaceAdminApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {reactStyles} from 'app/utils';\n+import {reactRouterUrlSearchParams} from 'app/utils/navigation';\n+import * as React from 'react';\n+import {useEffect, useState} from 'react';\n+import {useParams} from 'react-router';\n+\n+const styles = reactStyles({\n+  heading: {\n+    color: colors.primary,\n+    fontSize: 16,\n+    fontWeight: 500,\n+  },\n+  notebook: {\n+    width: '100%',\n+    height: 'calc(100% - 40px)',\n+    position: 'absolute',\n+    border: 0\n+  },\n+  error: {\n+    marginLeft: 'auto',\n+    marginRight: 'auto',\n+    marginTop: '56px',\n+    background: colors.warning,\n+    border: '1px solid #ebafa6',\n+    borderRadius: '5px',\n+    color: colors.white,\n+    display: 'flex',\n+    fontSize: '14px',\n+    fontWeight: 500,\n+    maxWidth: '550px',\n+    padding: '8px',\n+    textAlign: 'left'\n+  },\n+});\n+\n+interface Props {\n+  workspaceNamespace: string;\n+  nbName: string;\n+  accessReason: string;\n+}\n+\n+const AdminNotebookViewComponent = (props: Props) => {\n+  const {workspaceNamespace, nbName, accessReason} = props;\n+  const [notebookHtml, setHtml] = useState(undefined);\n+  const [workspaceName, setWorkspaceName] = useState(undefined);\n+  const [errorMessage, setErrorMessage] = useState(undefined);\n+\n+  const Header = () => {\n+    const location = workspaceName ? `Workspace ${workspaceNamespace}/${workspaceName}` : workspaceNamespace;\n+    const link = <a href={`/admin/workspaces/${workspaceNamespace}`}>{location}</a>;\n+\n+    return <div style={styles.heading}>Viewing {nbName} in {link} for reason: {accessReason}</div>;\n+  };\n+\n+  const Main = () => {\n+    if (notebookHtml) {\n+      return <iframe id='notebook-frame' style={styles.notebook} srcDoc={notebookHtml}/>;\n+    } else if (errorMessage) {\n+      return <div style={styles.error}>{errorMessage}</div>;\n+    } else {\n+      return <SpinnerOverlay />;\n+    }\n+  };\n+\n+  useEffect(() => {\n+    workspaceAdminApi().getWorkspaceAdminView(workspaceNamespace)\n+      .then(workspaceAdminView => setWorkspaceName(workspaceAdminView.workspace.name));\n+  }, []);\n+\n+  useEffect(() => {\n+    if (!accessReason || !accessReason.trim()) {\n+      setErrorMessage('Error: must include accessReason query parameter in URL');\n+      return;\n+    }\n+\n+    workspaceAdminApi().adminReadOnlyNotebook(workspaceNamespace, nbName, {reason: accessReason})\n+      .then(response => setHtml(response.html))\n+      .catch((e) => {\n+        if (e.status === 404) {\n+          setErrorMessage(`Notebook ${nbName} was not found`);\n+        } else if (e.status === 412) {\n+          setErrorMessage('Notebook is too large to display in preview mode');\n+        } else {\n+          setErrorMessage('Failed to render notebook preview due to unknown error');\n+        }\n+      });\n+  }, []);\n+\n+  return <React.Fragment>\n+    <Header/>\n+    <Main/>\n+  </React.Fragment>;\n+};\n+\n+const AdminNotebookView = () => {\n+  const {workspaceNamespace, nbName} = useParams();", "originalCommit": "051e1311bd6482a30be40e55ae77f7d41c8fa99b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0a7411157f5b34ac3dc35c69cff619489996026c", "url": "https://github.com/all-of-us/workbench/commit/0a7411157f5b34ac3dc35c69cff619489996026c", "message": "init state vars to emptystring", "committedDate": "2020-09-16T21:30:01Z", "type": "commit"}, {"oid": "a11863bda2d388bed7c99d4b0734ed6ffc6ac3aa", "url": "https://github.com/all-of-us/workbench/commit/a11863bda2d388bed7c99d4b0734ed6ffc6ac3aa", "message": "notebookName", "committedDate": "2020-09-16T21:31:07Z", "type": "commit"}, {"oid": "47bc440c9ed54a2fc61744db7d317decfe9a913f", "url": "https://github.com/all-of-us/workbench/commit/47bc440c9ed54a2fc61744db7d317decfe9a913f", "message": "move accessReason to next line", "committedDate": "2020-09-16T21:41:14Z", "type": "commit"}, {"oid": "c51d50ed023c2ae64d52413c3da1280d5d2db0be", "url": "https://github.com/all-of-us/workbench/commit/c51d50ed023c2ae64d52413c3da1280d5d2db0be", "message": "update error styling and workspace text", "committedDate": "2020-09-17T15:14:37Z", "type": "commit"}, {"oid": "b98778bf935b0ffaad1d3acc788850c3394e51da", "url": "https://github.com/all-of-us/workbench/commit/b98778bf935b0ffaad1d3acc788850c3394e51da", "message": "90% whiteness", "committedDate": "2020-09-17T15:16:46Z", "type": "commit"}]}