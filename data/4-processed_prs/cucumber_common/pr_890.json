{"pr_number": 890, "pr_title": "UndefinedParameterType message", "pr_createdAt": "2020-02-06T16:35:53Z", "pr_url": "https://github.com/cucumber/common/pull/890", "timeline": [{"oid": "d2b6912d18c3d316f32633382870c55df2666efa", "url": "https://github.com/cucumber/common/commit/d2b6912d18c3d316f32633382870c55df2666efa", "message": "Add UndefinedParameterTypeExpression.ts and ExpressionFactory.ts", "committedDate": "2020-02-06T16:03:18Z", "type": "commit"}, {"oid": "7c4b93f157b4e381a2136a4b01fe9d0ee1318b78", "url": "https://github.com/cucumber/common/commit/7c4b93f157b4e381a2136a4b01fe9d0ee1318b78", "message": "Return UndefinedParameterTypeExpression when a parameter type is undefined.", "committedDate": "2020-02-06T16:25:17Z", "type": "commit"}, {"oid": "31e2a659057178e60046a6c7714f06c812e32db2", "url": "https://github.com/cucumber/common/commit/31e2a659057178e60046a6c7714f06c812e32db2", "message": "Update Changelog", "committedDate": "2020-02-06T16:38:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1MzYxNg==", "url": "https://github.com/cucumber/common/pull/890#discussion_r375953616", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class UndefinedParameterTypeExpression implements Expression {\n          \n          \n            \n            final class UndefinedParameterTypeExpression implements Expression {", "author": "mpkorstanje", "createdAt": "2020-02-06T16:48:00Z", "path": "cucumber-expressions/java/src/main/java/io/cucumber/cucumberexpressions/UndefinedParameterTypeExpression.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.cucumber.cucumberexpressions;\n+\n+import java.lang.reflect.Type;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+\n+public class UndefinedParameterTypeExpression implements Expression {", "originalCommit": "31e2a659057178e60046a6c7714f06c812e32db2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1Mzk1NA==", "url": "https://github.com/cucumber/common/pull/890#discussion_r375953954", "bodyText": "Don't forget CucumberExpression and RegularExpression.", "author": "mpkorstanje", "createdAt": "2020-02-06T16:48:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1MzYxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1NzExMA==", "url": "https://github.com/cucumber/common/pull/890#discussion_r375957110", "bodyText": "We're using exceptions for control flow. Might be worth extracting some of the code in the CucumberExpression to the factory instead of throwing the exception and then catching it.", "author": "mpkorstanje", "createdAt": "2020-02-06T16:53:49Z", "path": "cucumber-expressions/java/src/main/java/io/cucumber/cucumberexpressions/ExpressionFactory.java", "diffHunk": "@@ -31,7 +31,15 @@ public Expression createExpression(String expressionString) {\n         if (m.find()) {\n             return new RegularExpression(Pattern.compile(m.group(1)), parameterTypeRegistry);\n         }\n-        return new CucumberExpression(expressionString, parameterTypeRegistry);\n+        return createCucumberExpression(expressionString);\n+    }\n+\n+    private Expression createCucumberExpression(String expressionString) {\n+        try {\n+            return new CucumberExpression(expressionString, parameterTypeRegistry);\n+        } catch (UndefinedParameterTypeException e) {", "originalCommit": "31e2a659057178e60046a6c7714f06c812e32db2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1NzY5Mw==", "url": "https://github.com/cucumber/common/pull/890#discussion_r375957693", "bodyText": "Yeah I had the same thought.", "author": "aslakhellesoy", "createdAt": "2020-02-06T16:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1NzExMA=="}], "type": "inlineReview"}, {"oid": "391d5794b171c318119b94ec89cc5bb0b25800f9", "url": "https://github.com/cucumber/common/commit/391d5794b171c318119b94ec89cc5bb0b25800f9", "message": "Add UndefinedParameterTypeExpression.rb and ExpressionFactory.rb", "committedDate": "2020-02-06T17:00:57Z", "type": "commit"}, {"oid": "a8ad34f56e4f6a0b6749802e6ca8577bf859c4f0", "url": "https://github.com/cucumber/common/commit/a8ad34f56e4f6a0b6749802e6ca8577bf859c4f0", "message": "CucumberExpression and RegularExpression are no longer part of the public API.", "committedDate": "2020-02-06T17:05:25Z", "type": "commit"}, {"oid": "68579571ccd0bb90e6403b486b29253994200963", "url": "https://github.com/cucumber/common/commit/68579571ccd0bb90e6403b486b29253994200963", "message": "NewCucumberExpression returns an UndefinedParameterTypeExpression for undefined parameter types", "committedDate": "2020-02-06T17:34:37Z", "type": "commit"}, {"oid": "6862884b90f18b404f24ef0d3e1bc2d357a4511c", "url": "https://github.com/cucumber/common/commit/6862884b90f18b404f24ef0d3e1bc2d357a4511c", "message": "Update changelog", "committedDate": "2020-02-06T17:37:28Z", "type": "commit"}, {"oid": "80c2f22b8e36aa9e50703cb8bf0cd106cf480f4f", "url": "https://github.com/cucumber/common/commit/80c2f22b8e36aa9e50703cb8bf0cd106cf480f4f", "message": "Remove CucumberExpression and RegularExpression from public JavaScript API", "committedDate": "2020-02-06T17:47:10Z", "type": "commit"}, {"oid": "005615fde5c7824a5cbf7862c5ba8355507b2db0", "url": "https://github.com/cucumber/common/commit/005615fde5c7824a5cbf7862c5ba8355507b2db0", "message": "Add getUndefinedParameterTypeNames", "committedDate": "2020-02-06T18:17:51Z", "type": "commit"}, {"oid": "c058193ec0548accf50b97048df061fb81ed11eb", "url": "https://github.com/cucumber/common/commit/c058193ec0548accf50b97048df061fb81ed11eb", "message": "Revert adding of UndefinedParameterTypeExpression", "committedDate": "2020-02-11T14:12:46Z", "type": "commit"}, {"oid": "36f0fccd192927d8aaa2f58b2d08167180a61c67", "url": "https://github.com/cucumber/common/commit/36f0fccd192927d8aaa2f58b2d08167180a61c67", "message": "Merge remote-tracking branch 'origin/master' into undefined-parameter-type-expression", "committedDate": "2020-02-11T14:13:06Z", "type": "commit"}, {"oid": "8d7a73b4d305360d90cf7a7f459deb78a8d59720", "url": "https://github.com/cucumber/common/commit/8d7a73b4d305360d90cf7a7f459deb78a8d59720", "message": "Update changelog", "committedDate": "2020-02-11T14:27:09Z", "type": "commit"}, {"oid": "b5c0c7b763ebc1e9940cdb019a5b75a2ebd4c78d", "url": "https://github.com/cucumber/common/commit/b5c0c7b763ebc1e9940cdb019a5b75a2ebd4c78d", "message": "Update cucumber-react", "committedDate": "2020-02-11T15:44:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNTQ2NQ==", "url": "https://github.com/cucumber/common/pull/890#discussion_r377925465", "bodyText": "Implementation wise I would suggest adding a result object to the TestRunFinished event with the undefined parameter type exception rather then adding it here. That way consumers of the ndjson can easily see why the test run failed. Comparable to TestCaseFinished.", "author": "mpkorstanje", "createdAt": "2020-02-11T22:00:02Z", "path": "messages/dotnet/messages.proto", "diffHunk": "@@ -68,6 +68,7 @@ message Envelope {\n     StepDefinition step_definition = 25;\n     Hook hook = 26;\n     ParameterType parameter_type = 27;\n+    UndefinedParameterType undefined_parameter_type = 28;", "originalCommit": "b5c0c7b763ebc1e9940cdb019a5b75a2ebd4c78d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNzA0NA==", "url": "https://github.com/cucumber/common/pull/890#discussion_r377927044", "bodyText": "That's assuming I can convince you to go for option 1.", "author": "mpkorstanje", "createdAt": "2020-02-11T22:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNTQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk2NzIxNg==", "url": "https://github.com/cucumber/common/pull/890#discussion_r377967216", "bodyText": "There may be multiple undefined parameter types, so if we bundle that into TestRunFinished it would have to be a repeated field. Maybe that's ok, but we could also send it as individual messages like the current code in this PR does. I don't think that would be a problem.", "author": "aslakhellesoy", "createdAt": "2020-02-11T23:48:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNTQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE2MzEzMw==", "url": "https://github.com/cucumber/common/pull/890#discussion_r378163133", "bodyText": "It does make it more complex to know if a run failed or passed. In the absence of any test results consumers would now have to know that undefined parameter type messages are in fact failures and not merely a special kind of step definition.\nI would also have good use case for a more generic result field in TestRunFinished. Undefined parameter types are but one reason why Cucumber can fail to startup. For example the DI container may fail to initialize, invalid regexes, errors while instantiating the glue, ect.", "author": "mpkorstanje", "createdAt": "2020-02-12T10:28:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNTQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE2MzcyMQ==", "url": "https://github.com/cucumber/common/pull/890#discussion_r378163721", "bodyText": "I could also use the result  field in TestRunFinished to store the results of BeforeAll and AfterAll hooks should they fail.", "author": "mpkorstanje", "createdAt": "2020-02-12T10:29:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNTQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE3NjA1MA==", "url": "https://github.com/cucumber/common/pull/890#discussion_r378176050", "bodyText": "The front-end should print snippets for all undefined parameter types. In order to do that, we'd have to embed all the UndefinedParameterType messages in TestRunFinished.\nAs you point out there can be many reasons a test run fails, and we need to be able to distinguish between them. How about this:\nmessage TestRunFinished {\n  bool success = 1;\n  Timestamp timestamp = 2;\n  // Error message. Can be a stack trace from a failed `BeforeAll` or `AfterAll`.\n  // If there are undefined parameter types, the message is simply \"There were undefined parameter types\", and the `undefinedParameterTypes` field will have the details\n  string message = 3;\n  repeated UndefinedParameterType undefinedParameterTypes = 4;\n}\nIt's tempting to embed TestResult in TestRunFinished, but it's really a TestStepResult, so I think we should rename it.\nWDYT?", "author": "aslakhellesoy", "createdAt": "2020-02-12T10:52:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNTQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4MTY4OA==", "url": "https://github.com/cucumber/common/pull/890#discussion_r378181688", "bodyText": "How about:\n\n\nUndefined Parameter Types should fail the build. So TestRunFinished.success = false and include a message about the missing parameter type.\n\n\nThen we define TestRunFinished:\n\n\nmessage TestRunFinished {\n  bool success = 1;\n  Timestamp timestamp = 2;\n  // Error message. Can be a stack trace from a failed `BeforeAll` or `AfterAll`.\n  // If there are undefined parameter types, the message is simply \"There were undefined parameter types\", and the `undefinedParameterTypes` field will have the details\n  string message = 3;\n}\n\n\nUndefinedParameterType as a seperate message for specialized reporters that print snippets.", "author": "mpkorstanje", "createdAt": "2020-02-12T11:03:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNTQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4MzExOA==", "url": "https://github.com/cucumber/common/pull/890#discussion_r378183118", "bodyText": "The error message should include a message about the undefined parameter types (plural)\n\n\nAgree!\n\n\nAgree!\n\n\nSo if I simply add message to TestRunFinished we can merge this, right?", "author": "aslakhellesoy", "createdAt": "2020-02-12T11:06:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNTQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4NzA4Mw==", "url": "https://github.com/cucumber/common/pull/890#discussion_r378187083", "bodyText": "Yes! That is workable! Please make it a new major version too.", "author": "mpkorstanje", "createdAt": "2020-02-12T11:14:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNTQ2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4NzQxMA==", "url": "https://github.com/cucumber/common/pull/890#discussion_r378187410", "bodyText": "Will do - and I'll rename TestResult to TestStepResult as well, because that's what it is.", "author": "aslakhellesoy", "createdAt": "2020-02-12T11:15:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkyNTQ2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5MDQ2MQ==", "url": "https://github.com/cucumber/common/pull/890#discussion_r378090461", "bodyText": "I know we have the {x} test in rspec for ruby, but do these tests need copying elsewhere, or does the CCK function like the golden tests?", "author": "luke-hill", "createdAt": "2020-02-12T08:05:27Z", "path": "compatibility-kit/javascript/features/parameter-types/parameter-types.ts", "diffHunk": "@@ -21,3 +21,8 @@ Given('{flight} has been delayed {int} minutes', function(\n   assert.equal(flight.to, 'CDG')\n   assert.equal(delay, 45)\n })\n+\n+// eslint-disable-next-line @typescript-eslint/no-unused-vars\n+Given('{airport} is closed because of a strike', function(airport) {", "originalCommit": "b5c0c7b763ebc1e9940cdb019a5b75a2ebd4c78d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMwOTI4OA==", "url": "https://github.com/cucumber/common/pull/890#discussion_r378309288", "bodyText": "The CCK defines golden ndjson files by running the features against fake-cucumber. We don't require other Cucumber implementations to produce identical files, but the files they produce should be consumable by the json-formatter and html-formatter.", "author": "aslakhellesoy", "createdAt": "2020-02-12T15:06:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5MDQ2MQ=="}], "type": "inlineReview"}, {"oid": "4baf62df87f5c946ebecc91f34a411f6101de1ab", "url": "https://github.com/cucumber/common/commit/4baf62df87f5c946ebecc91f34a411f6101de1ab", "message": "Rename TestResult to TestStepResult", "committedDate": "2020-02-12T17:19:09Z", "type": "commit"}]}