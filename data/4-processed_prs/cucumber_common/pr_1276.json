{"pr_number": 1276, "pr_title": "Use react-markdown as it is more XSS resilient", "pr_createdAt": "2020-12-14T16:58:44Z", "pr_url": "https://github.com/cucumber/common/pull/1276", "timeline": [{"oid": "7de0a5cd419bab2aa4e5e9e7931d86476b98b620", "url": "https://github.com/cucumber/common/commit/7de0a5cd419bab2aa4e5e9e7931d86476b98b620", "message": "Use react-markdown as it is more XSS resilient. Fixes #1275", "committedDate": "2020-12-14T16:54:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYwMDQ0Nw==", "url": "https://github.com/cucumber/common/pull/1276#discussion_r542600447", "bodyText": "Assume you didn't mean to leave this console call in?", "author": "davidjgoss", "createdAt": "2020-12-14T18:14:07Z", "path": "react/javascript/test/HighlightTest.tsx", "diffHunk": "@@ -74,74 +77,18 @@ describe('HighLight', () => {\n     ])\n   })\n \n-  context('when htmlContent is not set', () => {\n-    it('escapes HTML characters', () => {\n-      const document = renderHighlight(\n-        '<span>Given</span> a passed step',\n-        'step'\n-      )\n-      const highlighted = Array.from(\n-        document.querySelectorAll('#content .highlight')\n-      )\n-        .map((span) => span.innerHTML)\n-        .join('')\n-\n-      assert.equal(\n-        highlighted,\n-        '<span>&lt;span&gt;Given&lt;/span&gt; a passed </span><mark>step</mark>'\n-      )\n-    })\n-\n-    it('also highlight the tags', () => {\n-      const document = renderHighlight(\n-        '<strong>Given</strong> a strong step',\n-        'strong'\n-      )\n-      const highlighted = Array.from(\n-        document.querySelectorAll('#content .highlight')\n-      )\n-        .map((span) => span.innerHTML)\n-        .join('')\n-\n-      assert.equal(\n-        highlighted,\n-        '<span>&lt;</span><mark>strong</mark><span>&gt;Given&lt;/</span><mark>strong</mark><span>&gt; a </span><mark>strong</mark><span> step</span>'\n-      )\n-    })\n-  })\n-\n-  context('when htmlContent is set to true', () => {\n-    it('keeps the HTML content', () => {\n-      const document = renderHighlight(\n-        '<em>Given</em> a passed step',\n-        'step',\n-        true\n-      )\n-      const highlighted = Array.from(\n-        document.querySelectorAll('#content .highlight')\n-      )\n-        .map((span) => span.innerHTML)\n-        .join('')\n-\n-      assert.equal(highlighted, '<em>Given</em> a passed <mark>step</mark>')\n-    })\n+  it('puts <mark> around matches in markdown', () => {\n+    const document = renderHighlight(\n+      '* This is\\n* a bullet list',\n+      'bullet',\n+      true\n+    )\n+    const highlighted = Array.from(\n+      document.querySelectorAll('#content mark')\n+    ).map((span) => span.textContent)\n \n-    it('does not highlight the tags', () => {\n-      const document = renderHighlight(\n-        '<strong>Given</strong> a strong step',\n-        'strong',\n-        true\n-      )\n-      const highlighted = Array.from(\n-        document.querySelectorAll('#content .highlight')\n-      )\n-        .map((span) => span.innerHTML)\n-        .join('')\n+    console.log(document.body.innerHTML)", "originalCommit": "7de0a5cd419bab2aa4e5e9e7931d86476b98b620", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYwMzA4Mg==", "url": "https://github.com/cucumber/common/pull/1276#discussion_r542603082", "bodyText": "Thanks, gone now.", "author": "aslakhellesoy", "createdAt": "2020-12-14T18:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYwMDQ0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYwMTIwNQ==", "url": "https://github.com/cucumber/common/pull/1276#discussion_r542601205", "bodyText": "We now won't have a test that proves the XSS protection, is that okay?", "author": "davidjgoss", "createdAt": "2020-12-14T18:15:17Z", "path": "react/javascript/test/HighlightTest.tsx", "diffHunk": "@@ -74,74 +77,18 @@ describe('HighLight', () => {\n     ])\n   })\n \n-  context('when htmlContent is not set', () => {\n-    it('escapes HTML characters', () => {", "originalCommit": "7de0a5cd419bab2aa4e5e9e7931d86476b98b620", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYwMzI2MQ==", "url": "https://github.com/cucumber/common/pull/1276#discussion_r542603261", "bodyText": "Good call - I'll add one", "author": "aslakhellesoy", "createdAt": "2020-12-14T18:18:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYwMTIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzOTQxNw==", "url": "https://github.com/cucumber/common/pull/1276#discussion_r543139417", "bodyText": "I've added a couple more tests for XSS. It strips away <script> tags and allows all other HTML tags.\nI'm not entirely sure if we should be that permissive though - it sort of defeats the purpose of Markdown to allow any HTML. Should we be more restrictive?", "author": "aslakhellesoy", "createdAt": "2020-12-15T08:25:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYwMTIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIxMzA2Nw==", "url": "https://github.com/cucumber/common/pull/1276#discussion_r543213067", "bodyText": "Good question. Most markdown implementations seem to allow HTML by default, but in context of a Gherkin document I can't see a use case for doing that. I would say start out restrictive and if there's demand for broad HTML support we can look at why.\n(I write a lot of Markdown, the only HTML tag I can recall writing recently is <small>, other than that I think the syntax is more than rich enough.)", "author": "davidjgoss", "createdAt": "2020-12-15T10:11:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYwMTIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI2MzkxMA==", "url": "https://github.com/cucumber/common/pull/1276#discussion_r543263910", "bodyText": "The standalone HTML report has a search function which will highlight hits with <mark>, so we could allow <small> and <mark> for now.\nBut that seems a bit arbitrary. Are there any downsides to allowing anything but <script>?", "author": "aslakhellesoy", "createdAt": "2020-12-15T11:27:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYwMTIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxODA1Nw==", "url": "https://github.com/cucumber/common/pull/1276#discussion_r543318057", "bodyText": "In my opinion, the main issue is not the HTML tags themselves but the possibility to have Javascript executed with onclick events etc.\nIs there a way with react-markdown to ensure there's no Javascript added via HTML tag attributes ? If so, we could allow any HTML tag* without having to question too much the safety :)\n\nwell, any tag except <script> :D", "author": "vincent-psarga", "createdAt": "2020-12-15T12:55:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYwMTIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxODcyNw==", "url": "https://github.com/cucumber/common/pull/1276#discussion_r543318727", "bodyText": "Good point @vincent-psarga! More tests to add then....", "author": "aslakhellesoy", "createdAt": "2020-12-15T12:56:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYwMTIwNQ=="}], "type": "inlineReview"}, {"oid": "99ac5de3f2d5a931eac1dc8c074d82daeb94b7c1", "url": "https://github.com/cucumber/common/commit/99ac5de3f2d5a931eac1dc8c074d82daeb94b7c1", "message": "Remove logging", "committedDate": "2020-12-14T18:17:40Z", "type": "commit"}, {"oid": "cfa6df794ea5fa1202718113d33b88b576e14186", "url": "https://github.com/cucumber/common/commit/cfa6df794ea5fa1202718113d33b88b576e14186", "message": "Add a test for XSS and tweak sanitisation a bit", "committedDate": "2020-12-15T08:23:44Z", "type": "commit"}, {"oid": "401472620e1866de2dd6cc05ff0b323482249058", "url": "https://github.com/cucumber/common/commit/401472620e1866de2dd6cc05ff0b323482249058", "message": "Merge branch 'master' into react-fix-xss", "committedDate": "2020-12-15T10:28:50Z", "type": "commit"}, {"oid": "4eecc1f9dd7c47b1c7337df47b1deb509b01beaa", "url": "https://github.com/cucumber/common/commit/4eecc1f9dd7c47b1c7337df47b1deb509b01beaa", "message": "Merge branch 'master' into react-fix-xss", "committedDate": "2020-12-15T11:28:29Z", "type": "commit"}, {"oid": "2951ac0e10962f585ce3e7f7f806fbc580514087", "url": "https://github.com/cucumber/common/commit/2951ac0e10962f585ce3e7f7f806fbc580514087", "message": "Merge branch 'master' into react-fix-xss", "committedDate": "2020-12-15T15:59:22Z", "type": "commit"}, {"oid": "c7252133756800e2b93fc0885254346b39edb9ab", "url": "https://github.com/cucumber/common/commit/c7252133756800e2b93fc0885254346b39edb9ab", "message": "Add test verifying that onclick is removed", "committedDate": "2020-12-15T16:03:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3NTY4MQ==", "url": "https://github.com/cucumber/common/pull/1276#discussion_r543475681", "bodyText": "@vincent-psarga does this address your concern about javascript injection in element event handlers?\nI assume it's more thoroughly tested in react-markdown...", "author": "aslakhellesoy", "createdAt": "2020-12-15T16:05:32Z", "path": "react/javascript/test/HighlightTest.tsx", "diffHunk": "@@ -74,74 +77,47 @@ describe('HighLight', () => {\n     ])\n   })\n \n-  context('when htmlContent is not set', () => {\n-    it('escapes HTML characters', () => {\n-      const document = renderHighlight(\n-        '<span>Given</span> a passed step',\n-        'step'\n-      )\n-      const highlighted = Array.from(\n-        document.querySelectorAll('#content .highlight')\n-      )\n-        .map((span) => span.innerHTML)\n-        .join('')\n-\n-      assert.equal(\n-        highlighted,\n-        '<span>&lt;span&gt;Given&lt;/span&gt; a passed </span><mark>step</mark>'\n-      )\n-    })\n-\n-    it('also highlight the tags', () => {\n-      const document = renderHighlight(\n-        '<strong>Given</strong> a strong step',\n-        'strong'\n-      )\n-      const highlighted = Array.from(\n-        document.querySelectorAll('#content .highlight')\n-      )\n-        .map((span) => span.innerHTML)\n-        .join('')\n+  it('puts <mark> around matches in markdown', () => {\n+    const document = renderHighlight(\n+      '* This is\\n* a bullet list',\n+      'bullet',\n+      true\n+    )\n+    const highlighted = Array.from(\n+      document.querySelectorAll('#content mark')\n+    ).map((span) => span.textContent)\n \n-      assert.equal(\n-        highlighted,\n-        '<span>&lt;</span><mark>strong</mark><span>&gt;Given&lt;/</span><mark>strong</mark><span>&gt; a </span><mark>strong</mark><span> step</span>'\n-      )\n-    })\n+    assert.deepStrictEqual(highlighted, ['bullet'])\n   })\n \n-  context('when htmlContent is set to true', () => {\n-    it('keeps the HTML content', () => {\n-      const document = renderHighlight(\n-        '<em>Given</em> a passed step',\n-        'step',\n-        true\n-      )\n-      const highlighted = Array.from(\n-        document.querySelectorAll('#content .highlight')\n-      )\n-        .map((span) => span.innerHTML)\n-        .join('')\n-\n-      assert.equal(highlighted, '<em>Given</em> a passed <mark>step</mark>')\n-    })\n+  it('does not render <script> tags in markdown', () => {\n+    const document = renderHighlight(\n+      'Failed XSS: <script>alert(\"hello\")</script>',\n+      'alert hello',\n+      true\n+    )\n+    const html = document.querySelector('#content').innerHTML\n+    // Script tags will be removed (rather than escaped). Ideally we'd *escape* them to &lt;script&gt;.\n+    assert.deepStrictEqual(html, '<div class=\"highlight\"><p>Failed XSS: <mark>alert</mark>(\"<mark>hello</mark>\")</p></div>')\n+  })\n \n-    it('does not highlight the tags', () => {\n-      const document = renderHighlight(\n-        '<strong>Given</strong> a strong step',\n-        'strong',\n-        true\n-      )\n-      const highlighted = Array.from(\n-        document.querySelectorAll('#content .highlight')\n-      )\n-        .map((span) => span.innerHTML)\n-        .join('')\n+  it('renders <section> tags in markdown', () => {\n+    const document = renderHighlight(\n+      'We *like* other HTML tags:\\n\\n<section>hello</section>',\n+      null,\n+      true\n+    )\n+    const html = document.querySelector('#content').innerHTML\n+    assert.deepStrictEqual(html, '<div class=\"highlight\"><p>We <em>like</em> other HTML tags:</p><section>hello</section></div>')\n+  })\n \n-      assert.equal(\n-        highlighted,\n-        '<strong>Given</strong> a <mark>strong</mark> step'\n-      )\n-    })\n+  it('does not render JavaScript event handlers on tags in markdown', () => {", "originalCommit": "c7252133756800e2b93fc0885254346b39edb9ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "31f81789cf76421e32e10c887bd33f20c274684f", "url": "https://github.com/cucumber/common/commit/31f81789cf76421e32e10c887bd33f20c274684f", "message": "Attribution. Closes #1275", "committedDate": "2020-12-17T12:16:20Z", "type": "commit"}]}