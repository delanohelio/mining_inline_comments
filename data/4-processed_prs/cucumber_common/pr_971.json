{"pr_number": 971, "pr_title": "Extract jsonToMessages function so this can be used as a library", "pr_createdAt": "2020-04-15T14:38:37Z", "pr_url": "https://github.com/cucumber/common/pull/971", "timeline": [{"oid": "c5be39669392b0492856bad571b2b44c539b1213", "url": "https://github.com/cucumber/common/commit/c5be39669392b0492856bad571b2b44c539b1213", "message": "Extract jsonToMessages function so this can be used as a library", "committedDate": "2020-04-15T14:34:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNDYzOA==", "url": "https://github.com/cucumber/common/pull/971#discussion_r409134638", "bodyText": "Platform typically means Windows/Unix/OSx. Would implementation be a better word?", "author": "mpkorstanje", "createdAt": "2020-04-15T21:07:55Z", "path": "json-to-messages/javascript/src/JSONTraverse.ts", "diffHunk": "@@ -8,15 +8,16 @@ import { traverseFeature as traverseBehaveFeature } from './behave/JSONTraverse'\n import IPredictableSupportCode from './IPredictableSupportCode'\n import IAstMaker from './IAstMaker'\n import { IdGenerator, messages } from '@cucumber/messages'\n+import { Platform } from './types'\n \n export default function traverseFeature(\n-  sourceLang: string,\n+  platform: Platform,", "originalCommit": "c5be39669392b0492856bad571b2b44c539b1213", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNTg2MA==", "url": "https://github.com/cucumber/common/pull/971#discussion_r409135860", "bodyText": "Or dialect?", "author": "mpkorstanje", "createdAt": "2020-04-15T21:10:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNDYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg3Nzc5MA==", "url": "https://github.com/cucumber/common/pull/971#discussion_r409877790", "bodyText": "Yes, I think implementation is better. Let's change that too before merging this (adding a TODO above)", "author": "aslakhellesoy", "createdAt": "2020-04-16T22:10:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNDYzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNTY4OQ==", "url": "https://github.com/cucumber/common/pull/971#discussion_r409135689", "bodyText": "I could use the java impl to generate messages that would be classed as JavaScript.\nPerhaps gherkin and behave would be better.", "author": "mpkorstanje", "createdAt": "2020-04-15T21:10:04Z", "path": "json-to-messages/javascript/src/JSONTraverse.ts", "diffHunk": "@@ -8,15 +8,16 @@ import { traverseFeature as traverseBehaveFeature } from './behave/JSONTraverse'\n import IPredictableSupportCode from './IPredictableSupportCode'\n import IAstMaker from './IAstMaker'\n import { IdGenerator, messages } from '@cucumber/messages'\n+import { Platform } from './types'\n \n export default function traverseFeature(\n-  sourceLang: string,\n+  platform: Platform,\n   feature: IFeature | IBehaveFeature,\n   astMaker: IAstMaker,\n   newId: IdGenerator.NewId,\n   predictableSupportCode: IPredictableSupportCode\n ): messages.IGherkinDocument {\n-  if (sourceLang === 'javascript') {\n+  if (platform === 'javascript') {", "originalCommit": "c5be39669392b0492856bad571b2b44c539b1213", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2OTI0Mg==", "url": "https://github.com/cucumber/common/pull/971#discussion_r409369242", "bodyText": "Well, it' not as simple a Gherkin vs Behave (Behave uses Gherkin, not the library but at leat the language).\nHere we mainly detect based on specificities of the existing reports. If fact, we don't even have a cucumber-java platform/language/dialect as the JSON reports are close enough to cucumber-ruby, so we use the same object to traverse.", "author": "vincent-psarga", "createdAt": "2020-04-16T08:19:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNTY4OQ=="}], "type": "inlineReview"}, {"oid": "79e1b22457ed5ad71833a23ba56bc48658e5f39a", "url": "https://github.com/cucumber/common/commit/79e1b22457ed5ad71833a23ba56bc48658e5f39a", "message": "Don't generate messages if --detect specified", "committedDate": "2020-04-15T21:13:54Z", "type": "commit"}, {"oid": "2de1036aebe2d8bca50cacf371992cb7e761c54d", "url": "https://github.com/cucumber/common/commit/2de1036aebe2d8bca50cacf371992cb7e761c54d", "message": "Merge branch 'master' into json-to-messages-as-library", "committedDate": "2020-04-21T04:30:34Z", "type": "commit"}, {"oid": "500037e6f9b22c110195c622272cdbd58964ad95", "url": "https://github.com/cucumber/common/commit/500037e6f9b22c110195c622272cdbd58964ad95", "message": "json-to-messages: rename platforms", "committedDate": "2020-04-21T04:37:19Z", "type": "commit"}, {"oid": "98dbd4d9132c9e3acf9f470a0be1f77d9e1ef1c8", "url": "https://github.com/cucumber/common/commit/98dbd4d9132c9e3acf9f470a0be1f77d9e1ef1c8", "message": "Add index file to expose jsonToMessages", "committedDate": "2020-04-21T04:41:15Z", "type": "commit"}, {"oid": "7f4aa8dfa3b38ec8fdfcc44623b573bf23679c40", "url": "https://github.com/cucumber/common/commit/7f4aa8dfa3b38ec8fdfcc44623b573bf23679c40", "message": "Rename Platform as Implementation", "committedDate": "2020-04-21T05:12:35Z", "type": "commit"}]}