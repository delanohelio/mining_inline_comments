{"pr_number": 1421, "pr_title": "[#1418] Allow activation of default type information on the JacksonSerializer", "pr_createdAt": "2020-04-23T12:28:46Z", "pr_url": "https://github.com/AxonFramework/AxonFramework/pull/1421", "timeline": [{"oid": "b73e2fefbbf86ef23406c198bf348d06f72652e0", "url": "https://github.com/AxonFramework/AxonFramework/commit/b73e2fefbbf86ef23406c198bf348d06f72652e0", "message": "Update Jackson version\n\nUpdate Jackson version 2.10.3\n\n#1418", "committedDate": "2020-04-23T12:21:10Z", "type": "commit"}, {"oid": "2f1c971c210706b287cc0799aca988d66af99b27", "url": "https://github.com/AxonFramework/AxonFramework/commit/2f1c971c210706b287cc0799aca988d66af99b27", "message": "Add activateDefaultTyping(PolymorphicTypeValidator) to JacksonSerializer\n\nIn the case users return lists of objects in a Query Handler in\nconjunction with using the JacksonSerializer, they will hit the\nproblem of deserialization missing the exact types to deserialize too.\nThe JacksonSerializer can benefit to allow easier toggling of the\naddition of type information upon serialization to resolve this issue.\n\n#1418", "committedDate": "2020-04-23T12:23:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgwMDE1NA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1421#discussion_r413800154", "bodyText": "Shouldn't it be NON_CONCRETE_AND_ARRAYS (the same used on JacksonSerializer)?", "author": "lfgcampos", "createdAt": "2020-04-23T13:07:39Z", "path": "messaging/src/test/java/org/axonframework/serialization/json/JacksonSerializerTest.java", "diffHunk": "@@ -103,7 +97,10 @@ void testSerializeAndDeserializeArray() {\n \n     @Test\n     void testSerializeAndDeserializeList() {\n-        objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE, JsonTypeInfo.As.PROPERTY);\n+        objectMapper.activateDefaultTyping(\n+                objectMapper.getPolymorphicTypeValidator(),\n+                ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE", "originalCommit": "2f1c971c210706b287cc0799aca988d66af99b27", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0NjM4Mg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1421#discussion_r413846382", "bodyText": "Note that change makes Axon incompatible with Jackson 2.9. Preferably, we would fall back to using enableDefaultTyping for pre-Jackson 2.10 versions.", "author": "abuijze", "createdAt": "2020-04-23T14:31:00Z", "path": "messaging/src/test/java/org/axonframework/serialization/json/JacksonSerializerTest.java", "diffHunk": "@@ -103,7 +97,10 @@ void testSerializeAndDeserializeArray() {\n \n     @Test\n     void testSerializeAndDeserializeList() {\n-        objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE, JsonTypeInfo.As.PROPERTY);", "originalCommit": "2f1c971c210706b287cc0799aca988d66af99b27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxODQyNQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1421#discussion_r414518425", "bodyText": "Bummer, of course, this isn't backwards compatible. I'll move to the old format prior to Jackson 2.10", "author": "smcvb", "createdAt": "2020-04-24T11:56:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0NjM4Mg=="}], "type": "inlineReview"}, {"oid": "67d2cf90a124d61e9ea4f078b4534b7ff7b9ba37", "url": "https://github.com/AxonFramework/AxonFramework/commit/67d2cf90a124d61e9ea4f078b4534b7ff7b9ba37", "message": "Revert usage of Jackson 2.10 API\n\nUsing the ObjectMapper#activateDefaultTyping method introduced into\nJackson 2.10 will introduce a breaking chance for users which supply an\nObjectMapper of versions prior to 2.10 when they'd use this feature.\nHence, this should be adjusted back to a pre-2.10 solution, using the\nObjectMapper#enableDefaultTyping method.\n\n#1418", "committedDate": "2020-04-24T12:02:38Z", "type": "commit"}]}