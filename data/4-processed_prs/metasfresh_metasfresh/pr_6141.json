{"pr_number": 6141, "pr_title": "Gh6134", "pr_createdAt": "2020-02-07T08:14:16Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6141", "timeline": [{"oid": "c0a0f4aaee3f3333fce1a97a5986d1aed549667a", "url": "https://github.com/metasfresh/metasfresh/commit/c0a0f4aaee3f3333fce1a97a5986d1aed549667a", "message": "generate all async models + fix compile errors\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-06T11:19:26Z", "type": "commit"}, {"oid": "e34cbb3cde4e78ae5bd4bf501d0a1360eb0063ab", "url": "https://github.com/metasfresh/metasfresh/commit/e34cbb3cde4e78ae5bd4bf501d0a1360eb0063ab", "message": "THE FIX - InvoiceCandBL.setQualityDiscountPercent_Override: don't search for a break if pricing conditions is not based on breaks\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-06T11:21:05Z", "type": "commit"}, {"oid": "bf45510697e105e566ba34d8f5904b890982de0c", "url": "https://github.com/metasfresh/metasfresh/commit/bf45510697e105e566ba34d8f5904b890982de0c", "message": "Loggables.withWarnLoggerToo\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-06T11:21:46Z", "type": "commit"}, {"oid": "82e5314ee04490be8ad5458696352950178d7966", "url": "https://github.com/metasfresh/metasfresh/commit/82e5314ee04490be8ad5458696352950178d7966", "message": "WorkpackageLoggable: handle exceptions and set C_Queue_WorkPackage_Log.AD_Issue_ID\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-06T11:23:28Z", "type": "commit"}, {"oid": "3eb07c9a28dfefbbd4b5af8d3b7585ece363fc23", "url": "https://github.com/metasfresh/metasfresh/commit/3eb07c9a28dfefbbd4b5af8d3b7585ece363fc23", "message": "put current model in MDC\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-06T11:24:03Z", "type": "commit"}, {"oid": "05f2ed2f26bce7225e5d540c37e8a65c09afff2d", "url": "https://github.com/metasfresh/metasfresh/commit/05f2ed2f26bce7225e5d540c37e8a65c09afff2d", "message": "minor\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-06T11:24:12Z", "type": "commit"}, {"oid": "c5ad67b88f79c2c76cf979be147ed98b7e0507db", "url": "https://github.com/metasfresh/metasfresh/commit/c5ad67b88f79c2c76cf979be147ed98b7e0507db", "message": "InvoiceCandidateHandlerBL: let the exception flow\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-06T11:24:36Z", "type": "commit"}, {"oid": "5d8d0c1ae75e4574f8a188422641a8cadb2d392e", "url": "https://github.com/metasfresh/metasfresh/commit/5d8d0c1ae75e4574f8a188422641a8cadb2d392e", "message": "Env.getLoggedUserIdIfExists()\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-06T11:35:47Z", "type": "commit"}, {"oid": "0e2755d7d26ca893beaaaa89dc59b1f95df4e325", "url": "https://github.com/metasfresh/metasfresh/commit/0e2755d7d26ca893beaaaa89dc59b1f95df4e325", "message": "IWorkPackageBuilder: QA\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-06T11:36:14Z", "type": "commit"}, {"oid": "dd16b1faf006cbfbc94431d24a33bf03bd28690c", "url": "https://github.com/metasfresh/metasfresh/commit/dd16b1faf006cbfbc94431d24a33bf03bd28690c", "message": "change data source name\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-07T07:51:51Z", "type": "commit"}, {"oid": "39e3339cea89a664895c6844f7cd2780370bad0a", "url": "https://github.com/metasfresh/metasfresh/commit/39e3339cea89a664895c6844f7cd2780370bad0a", "message": "Create 5551380_sys_gh6134_display_C_Queue_WorkPackage_Log_AD_Issue_ID.sql\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-07T07:51:57Z", "type": "commit"}, {"oid": "d3b3642cf212ab06f47f9fee1012805cbaae353b", "url": "https://github.com/metasfresh/metasfresh/commit/d3b3642cf212ab06f47f9fee1012805cbaae353b", "message": "WorkpackagesOnCommitSchedulerTemplate.extractUserInChargeOrNull\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-07T08:13:10Z", "type": "commit"}, {"oid": "88ac50aea5fca3d61315a286ff9680e56e85ad47", "url": "https://github.com/metasfresh/metasfresh/commit/88ac50aea5fca3d61315a286ff9680e56e85ad47", "message": "CreateMissingInvoiceCandidatesWorkpackageProcessor: use currently logged user if any as user in charge\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-07T08:13:38Z", "type": "commit"}, {"oid": "91380b3acd2a71c605fd87a7dc7d2b3aa0121e29", "url": "https://github.com/metasfresh/metasfresh/commit/91380b3acd2a71c605fd87a7dc7d2b3aa0121e29", "message": "Merge branch 'master' into gh6134", "committedDate": "2020-02-07T08:13:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1NjgwMA==", "url": "https://github.com/metasfresh/metasfresh/pull/6141#discussion_r376356800", "bodyText": "i guess here is \"the\" fix, right?", "author": "metas-ts", "createdAt": "2020-02-07T12:02:55Z", "path": "de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandBL.java", "diffHunk": "@@ -1809,40 +1810,49 @@ public void setQualityDiscountPercent_Override(final I_C_Invoice_Candidate ic, f\n \t\tfinal IBPartnerBL bpartnerBL = Services.get(IBPartnerBL.class);\n \t\tfinal IProductDAO productsRepo = Services.get(IProductDAO.class);\n \n-\t\tfinal int discountSchemaId = bpartnerBL.getDiscountSchemaId(BPartnerId.ofRepoId(ic.getBill_BPartner_ID()), SOTrx.ofBoolean(ic.isSOTrx()));\n-\t\tif (discountSchemaId <= 0)\n+\t\tfinal PricingConditionsId pricingConditionsId = PricingConditionsId.ofRepoIdOrNull(bpartnerBL.getDiscountSchemaId(BPartnerId.ofRepoId(ic.getBill_BPartner_ID()), SOTrx.ofBoolean(ic.isSOTrx())));\n+\t\tif (pricingConditionsId == null)\n \t\t{\n \t\t\t// do nothing\n \t\t\treturn;\n \t\t}\n \n-\t\tBigDecimal qty = ic.getQtyToInvoice();\n-\t\tif (qty.signum() < 0)\n+\t\tfinal BigDecimal qualityDiscountPercentage;\n+\t\tfinal PricingConditions pricingConditions = pricingConditionsRepo.getPricingConditionsById(pricingConditionsId);\n+\t\tif(pricingConditions.isBreaksDiscountType())", "originalCommit": "91380b3acd2a71c605fd87a7dc7d2b3aa0121e29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1NzM3MQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6141#discussion_r376357371", "bodyText": "i know that's sortof nitpicking, but whyt the ..Too?", "author": "metas-ts", "createdAt": "2020-02-07T12:04:36Z", "path": "de.metas.util/src/main/java/de/metas/util/Loggables.java", "diffHunk": "@@ -94,6 +94,11 @@ public static ILoggable withLogger(@NonNull final Logger logger, @NonNull final\n \t\treturn new LoggableWithLogger(get(), logger, level);\n \t}\n \n+\tpublic static ILoggable withWarnLoggerToo(@NonNull final Logger logger)", "originalCommit": "91380b3acd2a71c605fd87a7dc7d2b3aa0121e29", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3ac10257df8a3491f22255b151fc7018a0fe0b47", "url": "https://github.com/metasfresh/metasfresh/commit/3ac10257df8a3491f22255b151fc7018a0fe0b47", "message": "contracts: QA tests, avoid using SpringRunner\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-07T16:00:05Z", "type": "commit"}, {"oid": "ad22d910d7fb1061bc448de7b160205d76060605", "url": "https://github.com/metasfresh/metasfresh/commit/ad22d910d7fb1061bc448de7b160205d76060605", "message": "fix failing test: i.e. check QtyEntered instead of QtyToInvoice\n\nhttps://github.com/metasfresh/metasfresh/issues/6134", "committedDate": "2020-02-07T16:00:32Z", "type": "commit"}, {"oid": "bec6730426b9e40cfa396641f02f3c0dd7cb7a9d", "url": "https://github.com/metasfresh/metasfresh/commit/bec6730426b9e40cfa396641f02f3c0dd7cb7a9d", "message": "Merge branch 'master' into gh6134", "committedDate": "2020-02-07T16:00:45Z", "type": "commit"}, {"oid": "a8d1ee9763bf5895133c1d3b146413391df966cc", "url": "https://github.com/metasfresh/metasfresh/commit/a8d1ee9763bf5895133c1d3b146413391df966cc", "message": "de.metas.contracts: use junit 5", "committedDate": "2020-02-07T19:32:19Z", "type": "commit"}]}