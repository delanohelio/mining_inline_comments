{"pr_number": 9973, "pr_title": "Create a WidgetWrapper component for fetching data", "pr_createdAt": "2020-09-18T09:51:20Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/9973", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5MjUzOQ==", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491792539", "bodyText": "can be put under Constants and imported above together with INITIALLY_CLOSED", "author": "petrican", "createdAt": "2020-09-21T04:51:47Z", "path": "frontend/src/components/Window.js", "diffHunk": "@@ -12,6 +12,7 @@ import Section from './window/Section';\n import Dropzone from './Dropzone';\n import { INITIALLY_CLOSED } from '../constants/Constants';\n \n+const EMPTY_OBJECT = {};", "originalCommit": "392924ce7f288d65116b93ffed7b739513e05895", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA2MjgyOQ==", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r492062829", "bodyText": "We've already talked about this during a frontend meeting with Teo. We want to be sure what is used and that it wasn't altered in any way bo some other component, since it'll be a reference to a js object.", "author": "siemiatj", "createdAt": "2020-09-21T13:53:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5MjUzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5MzI4MQ==", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491793281", "bodyText": "Might worth adding some safety checks in here, also a default fallback for the timeZone.", "author": "petrican", "createdAt": "2020-09-21T04:55:34Z", "path": "frontend/src/components/app/OverlayField.js", "diffHunk": "@@ -195,6 +221,15 @@ class OverlayField extends Component {\n   }\n }\n \n+const mapStateToProps = (state) => {\n+  const { appHandler, windowHandler } = state;\n+\n+  return {\n+    modalVisible: windowHandler.modal.visible,", "originalCommit": "392924ce7f288d65116b93ffed7b739513e05895", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAyMDM3OA==", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r492020378", "bodyText": "There's the default data for windowHandler in the redux state, and timeZone will just be undefined. It's just for the sake of using the same API as the WidgetWrapper provides until the component is rewritten.", "author": "siemiatj", "createdAt": "2020-09-21T12:53:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5MzI4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5NjAxMg==", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491796012", "bodyText": "Pls rename the file to match the component name -> TableRow . Also this implies updates in all the files that do import that.", "author": "petrican", "createdAt": "2020-09-21T05:10:12Z", "path": "frontend/src/components/table/TableItem.js", "diffHunk": "@@ -9,18 +8,22 @@ import {\n   prepareWidgetData,\n   isEditableOnDemand,\n   isCellEditable,\n+  tableRowPropTypes,\n   getCellWidgetData,\n+  getDescription,\n+  getTdValue,\n+  nestedSelect,\n } from '../../utils/tableHelpers';\n \n import TableCell from './TableCell';\n import WithMobileDoubleTap from '../WithMobileDoubleTap';\n \n /**\n  * @file Class based component.\n- * @module TableItem\n+ * @module TableRow\n  * @extends PureComponent\n  */\n-class TableItem extends PureComponent {\n+class TableRow extends PureComponent {", "originalCommit": "392924ce7f288d65116b93ffed7b739513e05895", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5NzEyMw==", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491797123", "bodyText": "logic from here can be put in a separate function that returns the needed data", "author": "petrican", "createdAt": "2020-09-21T05:15:47Z", "path": "frontend/src/components/table/TableItem.js", "diffHunk": "@@ -463,11 +448,35 @@ class TableItem extends PureComponent {\n             const isEditable = isCellEditable(item, cells);\n             const isEdited = edited === property;\n             const extendLongText = multilineText ? multilineTextLines : 0;\n-            const widgetData = this.getWidgetData(\n+            const widgetData = getCellWidgetData(\n+              cells,\n               item,\n               isEditable,\n               supportFieldEdit\n             );\n+            const isReadonly = widgetData[0].readonly;\n+            const isMandatory = widgetData[0].mandatory;\n+            const tdValue = getTdValue({\n+              widgetData,\n+              item,\n+              isEdited,\n+              isGerman,\n+            });\n+            const description = getDescription({ widgetData, tdValue });\n+            let tooltipData = null;\n+            let tooltipWidget =", "originalCommit": "392924ce7f288d65116b93ffed7b739513e05895", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc5OTA1Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491799057", "bodyText": "I believe you could write here some docs explaining briefly how this is functioning since that would be the central logic component. Thanks", "author": "petrican", "createdAt": "2020-09-21T05:25:21Z", "path": "frontend/src/containers/WidgetWrapper.js", "diffHunk": "@@ -0,0 +1,137 @@\n+import React, { PureComponent } from 'react';\n+import PropTypes from 'prop-types';\n+import { connect } from 'react-redux';\n+\n+import {\n+  openModal,\n+  patch,\n+  updatePropertyValue,\n+  allowShortcut,\n+  disableShortcut,\n+} from '../actions/WindowActions';\n+import { getCellWidgetData } from '../utils/tableHelpers';\n+import { getTable } from '../reducers/tables';\n+import {\n+  getMasterData,\n+  getMasterWidgetData,\n+  getMasterWidgetFields,\n+  getMasterDocStatus,\n+} from '../reducers/windowHandler';\n+\n+import MasterWidget from '../components/widget/MasterWidget';\n+import RawWidget from '../components/widget/RawWidget';\n+\n+/**\n+ * @file Class based component.\n+ * @module WidgetWrapper\n+ * @extends PureComponent\n+ */", "originalCommit": "392924ce7f288d65116b93ffed7b739513e05895", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgwMTA0NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491801045", "bodyText": "Document here pls", "author": "petrican", "createdAt": "2020-09-21T05:34:52Z", "path": "frontend/src/reducers/windowHandler.js", "diffHunk": "@@ -139,6 +140,69 @@ export const getQuickactions = createSelector(\n   (actions) => actions\n );\n \n+export const getMasterData = (state) => state.windowHandler.master.data;\n+const getMasterLayout = (state, layoutPath) => {\n+  const layout = state.windowHandler.master.layout;\n+  const [\n+    sectionIdx,\n+    columnIdx,\n+    elGroupIdx,\n+    elLineIdx,\n+    elIdx,\n+  ] = layoutPath.split('_');\n+\n+  return layout.sections[sectionIdx].columns[columnIdx].elementGroups[\n+    elGroupIdx\n+  ].elementsLine[elLineIdx].elements[elIdx];\n+};\n+\n+const selectWidgetData = (data, layout) => {\n+  let widgetData = null;\n+\n+  widgetData = layout.fields.reduce((result, item) => {\n+    data[item.field] && result.push(data[item.field]);\n+\n+    return result;\n+  }, []);\n+\n+  if (!widgetData.length) {\n+    widgetData = [{}];\n+  }\n+\n+  return widgetData;\n+};\n+\n+/**\n+ * @method getMasterWidgetData\n+ * @summary cached selector for picking widget data for a desired element\n+ *\n+ * @param {object} state - redux state\n+ * @param {string} layoutPath - indexes of element in the layout structure\n+ */\n+export const getMasterWidgetData = createCachedSelector(\n+  getMasterData,\n+  getMasterLayout,\n+  (data, layout) => selectWidgetData(data, layout)\n+)((_state_, layoutPath) => layoutPath);\n+", "originalCommit": "392924ce7f288d65116b93ffed7b739513e05895", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgwMTE0MQ==", "url": "https://github.com/metasfresh/metasfresh/pull/9973#discussion_r491801141", "bodyText": "Also Document this as well", "author": "petrican", "createdAt": "2020-09-21T05:35:13Z", "path": "frontend/src/reducers/windowHandler.js", "diffHunk": "@@ -139,6 +140,69 @@ export const getQuickactions = createSelector(\n   (actions) => actions\n );\n \n+export const getMasterData = (state) => state.windowHandler.master.data;\n+const getMasterLayout = (state, layoutPath) => {\n+  const layout = state.windowHandler.master.layout;\n+  const [\n+    sectionIdx,\n+    columnIdx,\n+    elGroupIdx,\n+    elLineIdx,\n+    elIdx,\n+  ] = layoutPath.split('_');\n+\n+  return layout.sections[sectionIdx].columns[columnIdx].elementGroups[\n+    elGroupIdx\n+  ].elementsLine[elLineIdx].elements[elIdx];\n+};\n+\n+const selectWidgetData = (data, layout) => {\n+  let widgetData = null;\n+\n+  widgetData = layout.fields.reduce((result, item) => {\n+    data[item.field] && result.push(data[item.field]);\n+\n+    return result;\n+  }, []);\n+\n+  if (!widgetData.length) {\n+    widgetData = [{}];\n+  }\n+\n+  return widgetData;\n+};\n+\n+/**\n+ * @method getMasterWidgetData\n+ * @summary cached selector for picking widget data for a desired element\n+ *\n+ * @param {object} state - redux state\n+ * @param {string} layoutPath - indexes of element in the layout structure\n+ */\n+export const getMasterWidgetData = createCachedSelector(\n+  getMasterData,\n+  getMasterLayout,\n+  (data, layout) => selectWidgetData(data, layout)\n+)((_state_, layoutPath) => layoutPath);\n+\n+export const getMasterWidgetFields = createCachedSelector(\n+  getMasterLayout,\n+  (layout) => layout.fields\n+)((_state, layoutPath) => layoutPath);\n+", "originalCommit": "392924ce7f288d65116b93ffed7b739513e05895", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "40a25bd369632fad98bee0d86ac521e41bb9b200", "url": "https://github.com/metasfresh/metasfresh/commit/40a25bd369632fad98bee0d86ac521e41bb9b200", "message": "#9914 basic widgetwrapper container", "committedDate": "2020-09-21T17:19:16Z", "type": "commit"}, {"oid": "aea11530f9c0ae6d2fa28bff541909e82c05046b", "url": "https://github.com/metasfresh/metasfresh/commit/aea11530f9c0ae6d2fa28bff541909e82c05046b", "message": "#9914 cleanup window components", "committedDate": "2020-09-21T17:19:17Z", "type": "commit"}, {"oid": "9c0392223aac0b58012a620a4c8ad4a02a158f1e", "url": "https://github.com/metasfresh/metasfresh/commit/9c0392223aac0b58012a620a4c8ad4a02a158f1e", "message": "#9914 switch to using WidgetWrapper in Header/Element", "committedDate": "2020-09-21T17:19:17Z", "type": "commit"}, {"oid": "c853dc6ba35a09f5101cc6a9601b990ce9997764", "url": "https://github.com/metasfresh/metasfresh/commit/c853dc6ba35a09f5101cc6a9601b990ce9997764", "message": "#9914 move some helper functions to utils\n- remove unused code from Lookup", "committedDate": "2020-09-21T17:19:18Z", "type": "commit"}, {"oid": "bacfc72a4e5866256bba1401fcbc1c0f51be5046", "url": "https://github.com/metasfresh/metasfresh/commit/bacfc72a4e5866256bba1401fcbc1c0f51be5046", "message": "#9914 support getting widget data for tables by WidgetWrapper", "committedDate": "2020-09-21T17:19:18Z", "type": "commit"}, {"oid": "806d8584c46468dd8c2adf7c97695baf12db353b", "url": "https://github.com/metasfresh/metasfresh/commit/806d8584c46468dd8c2adf7c97695baf12db353b", "message": "#9914 small refactoring", "committedDate": "2020-09-21T17:19:19Z", "type": "commit"}, {"oid": "69c0ceb9de50b0b37a05abe6b215369d1f806494", "url": "https://github.com/metasfresh/metasfresh/commit/69c0ceb9de50b0b37a05abe6b215369d1f806494", "message": "#9914 support WidgetWrapper in tables", "committedDate": "2020-09-21T17:19:19Z", "type": "commit"}, {"oid": "a9ca6bba49c3f49b983a5270cfb13c016c44343d", "url": "https://github.com/metasfresh/metasfresh/commit/a9ca6bba49c3f49b983a5270cfb13c016c44343d", "message": "#9914 optimize rendering and pass props to query data", "committedDate": "2020-09-21T17:19:20Z", "type": "commit"}, {"oid": "11907bd9d9eff40c9ba1ed30c0bf470e8fcd5ca9", "url": "https://github.com/metasfresh/metasfresh/commit/11907bd9d9eff40c9ba1ed30c0bf470e8fcd5ca9", "message": "#9914 selectors for data", "committedDate": "2020-09-21T17:19:20Z", "type": "commit"}, {"oid": "079396b25294dec0fc1c0fe64c252cbf79c7f4be", "url": "https://github.com/metasfresh/metasfresh/commit/079396b25294dec0fc1c0fe64c252cbf79c7f4be", "message": "#9914 cleanup", "committedDate": "2020-09-21T17:19:21Z", "type": "commit"}, {"oid": "c69287bb5ebf07551656d2f4a9326397b81564cb", "url": "https://github.com/metasfresh/metasfresh/commit/c69287bb5ebf07551656d2f4a9326397b81564cb", "message": "#9914 create selector for document status widget data", "committedDate": "2020-09-21T17:19:22Z", "type": "commit"}, {"oid": "cf51deeff3eb421c3eb6cd1d627f30ce276a1960", "url": "https://github.com/metasfresh/metasfresh/commit/cf51deeff3eb421c3eb6cd1d627f30ce276a1960", "message": "#9914 cleanup and removing unnecessary props", "committedDate": "2020-09-21T17:19:22Z", "type": "commit"}, {"oid": "43504debe8bd650c265107292b17ed4cd0f2ce2d", "url": "https://github.com/metasfresh/metasfresh/commit/43504debe8bd650c265107292b17ed4cd0f2ce2d", "message": "#9914 load fields directly from the store\n- cleaning up MasterWidget", "committedDate": "2020-09-21T17:19:23Z", "type": "commit"}, {"oid": "03ec506522a7fa50eacdfc6f0403f6224e71fa2a", "url": "https://github.com/metasfresh/metasfresh/commit/03ec506522a7fa50eacdfc6f0403f6224e71fa2a", "message": "#9914 pass missing props to Master/RawWidget where WidgetWrapper is not used", "committedDate": "2020-09-21T17:19:23Z", "type": "commit"}, {"oid": "4926610a1b4f311156e465ac5de6d6d14ab24e85", "url": "https://github.com/metasfresh/metasfresh/commit/4926610a1b4f311156e465ac5de6d6d14ab24e85", "message": "#9914 temporarily revert RawWidget changes", "committedDate": "2020-09-21T17:19:23Z", "type": "commit"}, {"oid": "5e1ddd8df84b682643e358627af729f3b8f03df4", "url": "https://github.com/metasfresh/metasfresh/commit/5e1ddd8df84b682643e358627af729f3b8f03df4", "message": "#9914 fixing tests", "committedDate": "2020-09-21T17:19:24Z", "type": "commit"}, {"oid": "8ad00a35886900c2dc9a3cf58d8a0b847516dd4a", "url": "https://github.com/metasfresh/metasfresh/commit/8ad00a35886900c2dc9a3cf58d8a0b847516dd4a", "message": "#9914 fix quickinput tests", "committedDate": "2020-09-21T17:19:25Z", "type": "commit"}, {"oid": "3353287ba6a917651984ed8c2f5a9cc28c625a73", "url": "https://github.com/metasfresh/metasfresh/commit/3353287ba6a917651984ed8c2f5a9cc28c625a73", "message": "#9914 rename `TableItem` to `TableRow` everywhere and fix tests\n- change all occurences of `item` related to table to `row`", "committedDate": "2020-09-21T17:19:26Z", "type": "commit"}, {"oid": "fba0ae2b85212ce4c408469e7905573bae32d754", "url": "https://github.com/metasfresh/metasfresh/commit/fba0ae2b85212ce4c408469e7905573bae32d754", "message": "#9914 add docs and move some functionality to utils", "committedDate": "2020-09-21T17:19:26Z", "type": "commit"}, {"oid": "3f0e36742e3d74ac2110140e6e7de349c10998c6", "url": "https://github.com/metasfresh/metasfresh/commit/3f0e36742e3d74ac2110140e6e7de349c10998c6", "message": "#9914 add `re-reselect` package", "committedDate": "2020-09-21T17:19:26Z", "type": "commit"}, {"oid": "108e12a644006d076756ed3d2a30f00937900895", "url": "https://github.com/metasfresh/metasfresh/commit/108e12a644006d076756ed3d2a30f00937900895", "message": "#9914 fix linter", "committedDate": "2020-09-21T17:19:27Z", "type": "commit"}, {"oid": "a3ecd4b2739593ba3ad19e1fc25969686d9332de", "url": "https://github.com/metasfresh/metasfresh/commit/a3ecd4b2739593ba3ad19e1fc25969686d9332de", "message": "#9914 fix getting data for ActionButton in the document status widget", "committedDate": "2020-09-21T17:19:27Z", "type": "commit"}, {"oid": "8cae50c4b184acc60525f79f4061a913f52d17d8", "url": "https://github.com/metasfresh/metasfresh/commit/8cae50c4b184acc60525f79f4061a913f52d17d8", "message": "#9914 WidgetWrapper tests", "committedDate": "2020-09-21T17:19:28Z", "type": "commit"}, {"oid": "1d2c860806f322285446f2ebdb8b2c1eb512b29a", "url": "https://github.com/metasfresh/metasfresh/commit/1d2c860806f322285446f2ebdb8b2c1eb512b29a", "message": "#9914 more tests", "committedDate": "2020-09-21T17:19:28Z", "type": "commit"}, {"oid": "1d2c860806f322285446f2ebdb8b2c1eb512b29a", "url": "https://github.com/metasfresh/metasfresh/commit/1d2c860806f322285446f2ebdb8b2c1eb512b29a", "message": "#9914 more tests", "committedDate": "2020-09-21T17:19:28Z", "type": "forcePushed"}]}