{"pr_number": 6203, "pr_title": "Not-Item products not invoicable unless InvoiceRule is immediate", "pr_createdAt": "2020-02-17T16:40:28Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6203", "timeline": [{"oid": "b00485fce04fd00e0c18527c5fe88a96b89f7657", "url": "https://github.com/metasfresh/metasfresh/commit/b00485fce04fd00e0c18527c5fe88a96b89f7657", "message": "Not-Item products not invoicable unless InvoiceRule is immediate\n\n* fix problem: if the non-item IC is a freight.cost-IC and it's *the only one of its sales order*..then stuff still needs to work\n#6184", "committedDate": "2020-02-17T16:38:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzNDc4Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/6203#discussion_r380634783", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t.addEqualsFilter(I_C_Invoice_Candidate.COLUMNNAME_C_Order_ID, orderId)\n          \n          \n            \n            \t\t\t\t.addOnlyActiveRecordsFilter()\n          \n          \n            \n            \t\t\t\t.addEqualsFilter(I_C_Invoice_Candidate.COLUMNNAME_C_Order_ID, orderId)", "author": "metas-ts", "createdAt": "2020-02-18T12:14:21Z", "path": "de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandDAO.java", "diffHunk": "@@ -1634,22 +1634,36 @@ public String getSQLDefaultFilter(final Properties ctx)\n \t}\n \n \t@Override\n-\tpublic InvoiceCandidateId getFirstInvoiceableInvoiceCandId(final OrderId orderId)\n+\tpublic InvoiceableInvoiceCandIdResult getFirstInvoiceableInvoiceCandId(@NonNull final OrderId orderId)\n \t{\n \t\tfinal IQueryBL queryBL = Services.get(IQueryBL.class);\n-\t\tfinal ICompositeQueryFilter<I_C_Invoice_Candidate> qtyToInvoiceFilter = queryBL.createCompositeQueryFilter(I_C_Invoice_Candidate.class)\n-\t\t\t\t.setJoinOr()\n-\t\t\t\t.addCompareFilter(I_C_Invoice_Candidate.COLUMNNAME_QtyToInvoice, Operator.GREATER, BigDecimal.ZERO)\n-\t\t\t\t.addCompareFilter(I_C_Invoice_Candidate.COLUMNNAME_QtyToInvoice_Override, Operator.GREATER, BigDecimal.ZERO);\n \n-\t\treturn queryBL\n+\t\tfinal List<I_C_Invoice_Candidate> nonFreightCostICs = queryBL\n \t\t\t\t.createQueryBuilder(I_C_Invoice_Candidate.class)\n-\t\t\t\t.addFiltersUnboxed(qtyToInvoiceFilter)\n \t\t\t\t.addEqualsFilter(I_C_Invoice_Candidate.COLUMNNAME_C_Order_ID, orderId)", "originalCommit": "b00485fce04fd00e0c18527c5fe88a96b89f7657", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b13cda7ec438d61265f48b356f1529688fa7b3e0", "url": "https://github.com/metasfresh/metasfresh/commit/b13cda7ec438d61265f48b356f1529688fa7b3e0", "message": "Update de.metas.swat/de.metas.swat.base/src/main/java/de/metas/invoicecandidate/api/impl/InvoiceCandDAO.java\r\n\r\n#6184", "committedDate": "2020-02-18T12:16:21Z", "type": "commit"}, {"oid": "dacd32af649b0f0cb583a9d95b6b727e121db9f4", "url": "https://github.com/metasfresh/metasfresh/commit/dacd32af649b0f0cb583a9d95b6b727e121db9f4", "message": "Not-Item products not invoicable unless InvoiceRule is immediate\n\n* also fix DateToInvoice for non-stocked products\n#6184", "committedDate": "2020-02-18T14:00:28Z", "type": "commit"}, {"oid": "6cf26a1d6f9ccc0bd4bc000cba277a1df7809eed", "url": "https://github.com/metasfresh/metasfresh/commit/6cf26a1d6f9ccc0bd4bc000cba277a1df7809eed", "message": "Merge branch 'gh6184-app2' of github.com:metasfresh/metasfresh into gh6184-app2", "committedDate": "2020-02-18T14:00:58Z", "type": "commit"}, {"oid": "16a82f83f818c496f0da77de8066b2c9aff55c98", "url": "https://github.com/metasfresh/metasfresh/commit/16a82f83f818c496f0da77de8066b2c9aff55c98", "message": "Not-Item products not invoicable unless InvoiceRule is immediate\n\n* fix unit test\n#6184", "committedDate": "2020-02-18T14:49:42Z", "type": "commit"}]}