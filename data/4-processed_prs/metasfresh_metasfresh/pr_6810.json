{"pr_number": 6810, "pr_title": "Materialentnahme with kg palettes creates extra 0.001Kg TU", "pr_createdAt": "2020-06-09T13:16:54Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6810", "timeline": [{"oid": "9b047a16dbd0759be4809a9855c659da7493abfa", "url": "https://github.com/metasfresh/metasfresh/commit/9b047a16dbd0759be4809a9855c659da7493abfa", "message": "Fix warnings\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-10T04:22:11Z", "type": "commit"}, {"oid": "568e6a2deb4a2c1e81fe0cabb7c7c7d23d0b8251", "url": "https://github.com/metasfresh/metasfresh/commit/568e6a2deb4a2c1e81fe0cabb7c7c7d23d0b8251", "message": "Update JUnit\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-10T04:22:11Z", "type": "commit"}, {"oid": "adc362c0482f454db9c2d07ad111b9284854aa42", "url": "https://github.com/metasfresh/metasfresh/commit/adc362c0482f454db9c2d07ad111b9284854aa42", "message": "When calculating the splitQty fro an aggregated TU, take into account precision: if the qty is smaller in absolute value than the precision, return 0.\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-10T04:22:11Z", "type": "commit"}, {"oid": "adc362c0482f454db9c2d07ad111b9284854aa42", "url": "https://github.com/metasfresh/metasfresh/commit/adc362c0482f454db9c2d07ad111b9284854aa42", "message": "When calculating the splitQty fro an aggregated TU, take into account precision: if the qty is smaller in absolute value than the precision, return 0.\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-10T04:22:11Z", "type": "forcePushed"}, {"oid": "7a0da8ced37741d3ca604da988d123c35823d087", "url": "https://github.com/metasfresh/metasfresh/commit/7a0da8ced37741d3ca604da988d123c35823d087", "message": "One more fix after testing\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-10T09:07:26Z", "type": "commit"}, {"oid": "bb7ecc3fa6d8b34955cafba94350b91fb7ed8d05", "url": "https://github.com/metasfresh/metasfresh/commit/bb7ecc3fa6d8b34955cafba94350b91fb7ed8d05", "message": "Change calculation formula for the initial CuPerTuQty\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-10T12:18:37Z", "type": "commit"}, {"oid": "5527945cd6d936e1598e3bd738e670e4c0807409", "url": "https://github.com/metasfresh/metasfresh/commit/5527945cd6d936e1598e3bd738e670e4c0807409", "message": "Undo scale calculation\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-10T13:41:23Z", "type": "commit"}, {"oid": "4bd79952b199271ce558798f7d3369b7a21b5d0d", "url": "https://github.com/metasfresh/metasfresh/commit/4bd79952b199271ce558798f7d3369b7a21b5d0d", "message": "First draft of a test. Need help with this one.\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-10T13:41:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyODg1Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/6810#discussion_r438328857", "bodyText": "...brainfart of the day: then maybe better use HUTransformService do the split..just like the user would", "author": "metas-ts", "createdAt": "2020-06-10T18:31:30Z", "path": "backend/de.metas.handlingunits.base/src/test/java/de/metas/handlingunits/attributes/impl/split/SplitWeightAttributePropagationTest.java", "diffHunk": "@@ -260,23 +258,81 @@ public void testSplitWeightTransfer_LU_On_Another_SameType_LU_1TU_7CU()\n \t\t\t\tnewHUWeightsExpectation(\"6.436\", \"5.436\", \"1\", \"0\"));\n \t}\n \n+\t@Test\n+\tpublic void testSplit7TuFromLu()\n+\t{\n+\t\tfinal I_M_HU palletToSplit = createIncomingLoadingUnit(huItemIFCO_10, materialItemProductTomato_10, BigDecimal.valueOf(200), BigDecimal.valueOf(545.217)); // 20 x Tomato TUs with a certain weight. + the weight of the LU+TU\n+\t\t// dev note: weight per TU is 25.01085 ~= 25.011\n+\n+\t\t// final Node luXml = HUXmlConverter.toXml( paletToSplit);\n+\t\t// System.out.println(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n+\t\t// System.out.println(HUXmlConverter.toString(luXml));\n+\n+\t\t// Assert initial data is as expected\n+\t\tassertLoadingUnitStorageWeights(palletToSplit, huItemIFCO_10, 20,\n+\t\t\t\tnewHUWeightsExpectation(\"545.217\", \"500.217\", \"45\", \"0\"),\n+\t\t\t\tnewHUWeightsExpectation(\"520.217\", \"500.217\", \"20\", \"0\") // aggregate TU with the whole qty\n+\t\t);\n+\n+\t\t// TODO tbp: i don't understand what all these params are and what do they do?\n+\t\t// \t\ti need to move 1 TU. i don't care about the CUs, but the TU.", "originalCommit": "4bd79952b199271ce558798f7d3369b7a21b5d0d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "53f2cc5c6f6cdae90246a4078dd579bd5af0c1b0", "url": "https://github.com/metasfresh/metasfresh/commit/53f2cc5c6f6cdae90246a4078dd579bd5af0c1b0", "message": "Don't split a LU with qty just a bit greater than Packing Instruction capacity, as that breaks the expected number of LUs after a split.\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-11T05:32:10Z", "type": "commit"}, {"oid": "a8b8deb5823c90d991d24b1ddb00b57fa435bfaa", "url": "https://github.com/metasfresh/metasfresh/commit/a8b8deb5823c90d991d24b1ddb00b57fa435bfaa", "message": "Update the test once again\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-11T06:26:44Z", "type": "commit"}, {"oid": "fea323d4afb734035437c26b5298b9e0f63297b7", "url": "https://github.com/metasfresh/metasfresh/commit/fea323d4afb734035437c26b5298b9e0f63297b7", "message": "Better variable names\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-11T06:39:33Z", "type": "commit"}, {"oid": "2262f6bbc65cc0b21f882f977393768ca7f04409", "url": "https://github.com/metasfresh/metasfresh/commit/2262f6bbc65cc0b21f882f977393768ca7f04409", "message": "Redo scale calculation: don't store more than required decimals\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-11T06:55:05Z", "type": "commit"}, {"oid": "0b86bda2640981505c7c361a73d0293dcc4cf517", "url": "https://github.com/metasfresh/metasfresh/commit/0b86bda2640981505c7c361a73d0293dcc4cf517", "message": "Merge remote-tracking branch 'origin/master' into gh6808-0.001Kg", "committedDate": "2020-06-11T07:01:57Z", "type": "commit"}, {"oid": "171e00f69f082281bcf0cc91a495b0a9e1a8be60", "url": "https://github.com/metasfresh/metasfresh/commit/171e00f69f082281bcf0cc91a495b0a9e1a8be60", "message": "Merge remote-tracking branch 'origin/gh6808-0.001Kg' into gh6808-0.001Kg", "committedDate": "2020-06-11T09:28:20Z", "type": "commit"}, {"oid": "38074a233270afffa49a504e9a2a1bf028584ef9", "url": "https://github.com/metasfresh/metasfresh/commit/38074a233270afffa49a504e9a2a1bf028584ef9", "message": "#6808 get one step further with the test by committing the trx\n\nalso bunch of small improvements here and there", "committedDate": "2020-06-11T10:54:30Z", "type": "commit"}, {"oid": "3c0369db355a4751b0651fe641bde75c13659290", "url": "https://github.com/metasfresh/metasfresh/commit/3c0369db355a4751b0651fe641bde75c13659290", "message": "#6808 extract test into dedicated class to create KG-HUs", "committedDate": "2020-06-11T12:04:02Z", "type": "commit"}, {"oid": "b4c4cb3af590e785923d95321e001b19f481a9c5", "url": "https://github.com/metasfresh/metasfresh/commit/b4c4cb3af590e785923d95321e001b19f481a9c5", "message": "Merge branch 'master' into gh6808-0.001Kg", "committedDate": "2020-06-18T09:23:00Z", "type": "commit"}, {"oid": "e7b79f18a2113a41aec1fe7e3721d901dd11e89d", "url": "https://github.com/metasfresh/metasfresh/commit/e7b79f18a2113a41aec1fe7e3721d901dd11e89d", "message": "Materialentnahme with kg palettes creates extra 0.001Kg TU #6808\n\ncreate unit test to reproduce the issue", "committedDate": "2020-06-18T13:00:47Z", "type": "commit"}, {"oid": "93524f43e20437043301494358f9445124cfa323", "url": "https://github.com/metasfresh/metasfresh/commit/93524f43e20437043301494358f9445124cfa323", "message": "Use Floor rounding when splitting aggregate HUs with Kg\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-19T10:13:21Z", "type": "commit"}, {"oid": "9308d03b7c16ced2e2d86b8acf75ae48d7765941", "url": "https://github.com/metasfresh/metasfresh/commit/9308d03b7c16ced2e2d86b8acf75ae48d7765941", "message": "Add multiple test cases for hu weight splitting\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-19T11:02:41Z", "type": "commit"}, {"oid": "e4f73e3492c5e2d6b0a78afe8c88f073ee51c7a4", "url": "https://github.com/metasfresh/metasfresh/commit/e4f73e3492c5e2d6b0a78afe8c88f073ee51c7a4", "message": "Store the quantity of TUs to split, and use that to update the TU qty after split\n\nIf we split exactly N TUs (integer), there's no need for all the dance to figure out the new correct # of TUs for the qty, and splitting the extra qty.\nWe shall just update the new qty of TUs in the aggregate TU.\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-19T11:06:24Z", "type": "commit"}, {"oid": "d6a522d1c7d048b95033b61a72157642c85c0acd", "url": "https://github.com/metasfresh/metasfresh/commit/d6a522d1c7d048b95033b61a72157642c85c0acd", "message": "Fix warnings, etc.\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-19T11:21:36Z", "type": "commit"}, {"oid": "28d0ee3747342da947194d1fdf6974d45fb00419", "url": "https://github.com/metasfresh/metasfresh/commit/28d0ee3747342da947194d1fdf6974d45fb00419", "message": "Fix failing test\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-19T11:28:45Z", "type": "commit"}, {"oid": "62b85e932eb2ca79a1a747d7a7db454b2dea80b4", "url": "https://github.com/metasfresh/metasfresh/commit/62b85e932eb2ca79a1a747d7a7db454b2dea80b4", "message": "Properly fix failing test\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-19T11:37:02Z", "type": "commit"}, {"oid": "ae992ab9ca650c6e1ab3ae841dd0fdfd9c1029bf", "url": "https://github.com/metasfresh/metasfresh/commit/ae992ab9ca650c6e1ab3ae841dd0fdfd9c1029bf", "message": "Remove NPE testing test\n\nWe already know lombok is working properly\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-22T04:21:21Z", "type": "commit"}, {"oid": "0b1ecfa59aea318223ac8fdfcc70e6a21e087a86", "url": "https://github.com/metasfresh/metasfresh/commit/0b1ecfa59aea318223ac8fdfcc70e6a21e087a86", "message": "Don't return too early\n\nhttps://github.com/metasfresh/metasfresh/issues/6808", "committedDate": "2020-06-22T05:20:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ2MTg0Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/6810#discussion_r443461847", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (qtyTUsToSplit != null && BigDecimal.ZERO.compareTo(qtyTUsToSplit) != 0)\n          \n          \n            \n            \t\tif (qtyTUsToSplit != null && qtyTUsToSplit.signum() != 0)", "author": "metas-ts", "createdAt": "2020-06-22T10:24:08Z", "path": "backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/allocation/spi/impl/AggregateHUTrxListener.java", "diffHunk": "@@ -148,45 +156,68 @@ private void updateItemQtyAndSplitIfNeeded(final IHUContext huContext, final Map\n \t\t\treturn; // nothing to do\n \t\t}\n \n-\t\tfinal IHUTransactionCandidate trx = itemId2Trx.get(item.getM_HU_Item_ID());\n-\t\tfinal BigDecimal storageQty = storage.getQty(trx.getProductId(), trx.getQuantity().getUOM());\n-\n-\t\t// get the new TU quantity, which as TUs go needs to be an integer\n-\t\tfinal BigDecimal newTuQty = storageQty.divide(cuQtyBeforeLoad,\n-\t\t\t\t0,\n-\t\t\t\tRoundingMode.FLOOR);\n-\n-\t\titem.setQty(newTuQty);\n-\t\tInterfaceWrapperHelper.save(item);\n-\n-\t\t// find out if we need to perform a split in order to preserve the former CU-per-TU quantity\n-\t\tfinal BigDecimal splitQty = computeSplitQty(storageQty, cuQtyBeforeLoad);\n-\n-\t\tif (splitQty.signum() != 0)\n+\t\t// If we split exactly N TUs (integer), there's no need for all the dance to figure out the new correct # of TUs for the qty, and splitting the extra qty.\n+\t\t// We shall just update the new qty of TUs in this aggregate TU.\n+\t\tfinal BigDecimal qtyTUsToSplit = huContext.getProperty(AggregateHUTrxListener.mkQtyTUsToSplitPropertyKey(item));\n+\t\tif (qtyTUsToSplit != null && BigDecimal.ZERO.compareTo(qtyTUsToSplit) != 0)", "originalCommit": "0b1ecfa59aea318223ac8fdfcc70e6a21e087a86", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "41b0408e8bfc62b826ce7b500ad5d35704c714c2", "url": "https://github.com/metasfresh/metasfresh/commit/41b0408e8bfc62b826ce7b500ad5d35704c714c2", "message": "Update backend/de.metas.handlingunits.base/src/main/java/de/metas/handlingunits/allocation/spi/impl/AggregateHUTrxListener.java\r\n\r\n#6808", "committedDate": "2020-06-22T10:32:43Z", "type": "commit"}]}