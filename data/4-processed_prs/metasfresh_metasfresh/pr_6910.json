{"pr_number": 6910, "pr_title": "Servicefees per Provider Customer", "pr_createdAt": "2020-06-25T12:19:47Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/6910", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk3ODc5Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/6910#discussion_r445978793", "bodyText": "consider indexing by bpartnerId", "author": "teosarca", "createdAt": "2020-06-26T05:44:39Z", "path": "backend/de.metas.business/src/main/java/de/metas/invoice/invoiceProcessingServiceCompany/InvoiceProcessingServiceCompanyConfig.java", "diffHunk": "@@ -45,6 +49,34 @@\n \t@NonNull\n \tProductId serviceFeeProductId;\n \n+\t@NonNull ZonedDateTime validFrom;\n+\n+\t@Getter(AccessLevel.NONE)\n+\t@NonNull ImmutableList<InvoiceProcessingServiceCompanyConfigBPartnerDetails> bpartnerDetails;", "originalCommit": "5daad277a614e433908a238954c83649c86fd72d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5NzExMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6910#discussion_r445997111", "bodyText": "done", "author": "TheBestPessimist", "createdAt": "2020-06-26T06:44:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk3ODc5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk3OTMwNQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6910#discussion_r445979305", "bodyText": "extract the mapper into a method (static preferably)", "author": "teosarca", "createdAt": "2020-06-26T05:46:38Z", "path": "backend/de.metas.business/src/main/java/de/metas/invoice/invoiceProcessingServiceCompany/InvoiceProcessingServiceCompanyConfigRepository.java", "diffHunk": "@@ -47,77 +45,53 @@\n {\n \tprivate final IQueryBL queryBL = Services.get(IQueryBL.class);\n \n-\tprivate final CCache<InvoiceProcessingServiceCompanyConfigId, InvoiceProcessingServiceCompanyConfig> //\n-\tconfigsById = CCache.<InvoiceProcessingServiceCompanyConfigId, InvoiceProcessingServiceCompanyConfig> builder()\n-\t\t\t.tableName(I_InvoiceProcessingServiceCompany.Table_Name)\n-\t\t\t.build();\n-\n-\tprivate final CCache<Integer, CustomerToConfigAssignmentMap> //\n-\tcustomerToConfigAssignmentsCache = CCache.<Integer, CustomerToConfigAssignmentMap> builder()\n-\t\t\t.tableName(I_InvoiceProcessingServiceCompany_BPartnerAssignment.Table_Name)\n-\t\t\t.build();\n+\tprivate final CCache<Integer, InvoiceProcessingServiceCompanyConfigMap> configsMapCache =\n+\t\t\tCCache.<Integer, InvoiceProcessingServiceCompanyConfigMap>builder()\n+\t\t\t\t\t.tableName(I_InvoiceProcessingServiceCompany.Table_Name)\n+\t\t\t\t\t.additionalTableNameToResetFor(I_InvoiceProcessingServiceCompany_BPartnerAssignment.Table_Name)\n+\t\t\t\t\t.build();\n \n-\tpublic Optional<InvoiceProcessingServiceCompanyConfig> getByCustomerId(@NonNull final BPartnerId customerId)\n+\tpublic Optional<InvoiceProcessingServiceCompanyConfig> getByCustomerId(@NonNull final BPartnerId customerId, @NonNull final ZonedDateTime evaluationDate)\n \t{\n-\t\treturn getConfigIdByCustomerId(customerId)\n-\t\t\t\t.map(this::getById)\n-\t\t\t\t.filter(InvoiceProcessingServiceCompanyConfig::isActive);\n+\t\tfinal InvoiceProcessingServiceCompanyConfigMap config = configsMapCache.getOrLoad(0, this::retrieveAllCompanyConfigs);\n+\t\treturn config.getByCustomerIdAndDate(customerId, evaluationDate);\n \t}\n \n-\tprivate Optional<InvoiceProcessingServiceCompanyConfigId> getConfigIdByCustomerId(@NonNull final BPartnerId customerId)\n+\t@NonNull\n+\tprivate InvoiceProcessingServiceCompanyConfigMap retrieveAllCompanyConfigs()\n \t{\n-\t\tfinal CustomerToConfigAssignmentMap customerToConfigAssignmentMap = customerToConfigAssignmentsCache.getOrLoad(0, this::retrieveCustomerToConfigAssignmentMap);\n-\t\treturn customerToConfigAssignmentMap.getConfigIdByCustomerId(customerId);\n-\t}\n-\n-\tprivate InvoiceProcessingServiceCompanyConfig getById(@NonNull final InvoiceProcessingServiceCompanyConfigId configId)\n-\t{\n-\t\treturn configsById.getOrLoad(configId, this::retrieveById);\n-\t}\n-\n-\tprivate InvoiceProcessingServiceCompanyConfig retrieveById(@NonNull final InvoiceProcessingServiceCompanyConfigId configId)\n-\t{\n-\t\tfinal I_InvoiceProcessingServiceCompany record = loadOutOfTrx(configId, I_InvoiceProcessingServiceCompany.class);\n-\n-\t\treturn InvoiceProcessingServiceCompanyConfig.builder()\n-\t\t\t\t.active(record.isActive())\n-\t\t\t\t.serviceCompanyBPartnerId(BPartnerId.ofRepoId(record.getServiceCompany_BPartner_ID()))\n-\t\t\t\t.serviceInvoiceDocTypeId(DocTypeId.ofRepoId(record.getServiceInvoice_DocType_ID()))\n-\t\t\t\t.serviceFeeProductId(ProductId.ofRepoId(record.getServiceFee_Product_ID()))\n-\t\t\t\t.feePercentageOfGrandTotal(Percent.of(record.getFeePercentageOfGrandTotal()))\n-\t\t\t\t.build();\n+\t\tfinal ImmutableList<InvoiceProcessingServiceCompanyConfig> collect = queryBL.createQueryBuilder(I_InvoiceProcessingServiceCompany.class)\n+\t\t\t\t.addOnlyActiveRecordsFilter()\n+\t\t\t\t.create()\n+\t\t\t\t.iterateAndStream()\n+\t\t\t\t.map(record -> {", "originalCommit": "5daad277a614e433908a238954c83649c86fd72d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5MDMyMw==", "url": "https://github.com/metasfresh/metasfresh/pull/6910#discussion_r445990323", "bodyText": "Agree with extraction to method, however I don't think it makes sense to have this static, since i'll have to make static retrieveAllBPartnerDetails, and that uses queryBL class field.\nOf course i could just get Services.get(IqueryBL) in the method, but i don't see a point getting it twice.", "author": "TheBestPessimist", "createdAt": "2020-06-26T06:24:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk3OTMwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyOTQ0OQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6910#discussion_r446029449", "bodyText": "auch.... that's SQL N+1 problem. u shall avoid it by fetching everything in one round....", "author": "teosarca", "createdAt": "2020-06-26T08:00:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk3OTMwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgxMjIwMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/6910#discussion_r448812201", "bodyText": "fixed", "author": "TheBestPessimist", "createdAt": "2020-07-02T07:47:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk3OTMwNQ=="}], "type": "inlineReview"}, {"oid": "eb7236f9a15c1ad189a909aefdb213153400cb51", "url": "https://github.com/metasfresh/metasfresh/commit/eb7236f9a15c1ad189a909aefdb213153400cb51", "message": "Add sql changes to `Invoice Processing Service Company`\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T05:51:16Z", "type": "commit"}, {"oid": "a696010533b7f78fae5448f0437a1ca1bffbf48e", "url": "https://github.com/metasfresh/metasfresh/commit/a696010533b7f78fae5448f0437a1ca1bffbf48e", "message": "InvoiceProcessingServiceCompany: add ValidFrom and Percent\n\nTake into account ValidFrom when selecting the correct InvoiceProcessingServiceCompanyConfig\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T05:52:50Z", "type": "commit"}, {"oid": "d0a390a6eb85936966c64b5da0a3ec915839de66", "url": "https://github.com/metasfresh/metasfresh/commit/d0a390a6eb85936966c64b5da0a3ec915839de66", "message": "Bugfix\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T05:53:00Z", "type": "commit"}, {"oid": "a19a9b4788615a728a4ac9564e4c8c4522410420", "url": "https://github.com/metasfresh/metasfresh/commit/a19a9b4788615a728a4ac9564e4c8c4522410420", "message": "Sql Bugfix\n\nI don't know how i removed that\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T05:53:00Z", "type": "commit"}, {"oid": "5f8d8f3a3f6bdba72f984e2e75ead18f09dce654", "url": "https://github.com/metasfresh/metasfresh/commit/5f8d8f3a3f6bdba72f984e2e75ead18f09dce654", "message": "Fixes after \ud83c\udf52 and rebase\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T06:08:56Z", "type": "commit"}, {"oid": "5f8d8f3a3f6bdba72f984e2e75ead18f09dce654", "url": "https://github.com/metasfresh/metasfresh/commit/5f8d8f3a3f6bdba72f984e2e75ead18f09dce654", "message": "Fixes after \ud83c\udf52 and rebase\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T06:08:56Z", "type": "forcePushed"}, {"oid": "502ee46dedbf56643fd35404d5fe551515fc6816", "url": "https://github.com/metasfresh/metasfresh/commit/502ee46dedbf56643fd35404d5fe551515fc6816", "message": "Update copyright\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T06:26:58Z", "type": "commit"}, {"oid": "72f9393c241d6e4292f45bb8e82577d68098771d", "url": "https://github.com/metasfresh/metasfresh/commit/72f9393c241d6e4292f45bb8e82577d68098771d", "message": "Index `bpartnerDetails` by bpartnerId\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T06:43:53Z", "type": "commit"}, {"oid": "74a6195ca5c5678d72739320493449d518b3e441", "url": "https://github.com/metasfresh/metasfresh/commit/74a6195ca5c5678d72739320493449d518b3e441", "message": "Small warning fix\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T07:25:23Z", "type": "commit"}, {"oid": "10cbf0660faaaff8c8d4c8204c022ef77e5c7b88", "url": "https://github.com/metasfresh/metasfresh/commit/10cbf0660faaaff8c8d4c8204c022ef77e5c7b88", "message": "Add JUnit for `InvoiceProcessingServiceCompanyConfigRepository`\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T07:26:44Z", "type": "commit"}, {"oid": "954f5756db8264130d3fa75e5a71a62f67460b48", "url": "https://github.com/metasfresh/metasfresh/commit/954f5756db8264130d3fa75e5a71a62f67460b48", "message": "One more JUnit\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T07:31:34Z", "type": "commit"}, {"oid": "a7558f8851ae0af58893a2f7b60b308100c76344", "url": "https://github.com/metasfresh/metasfresh/commit/a7558f8851ae0af58893a2f7b60b308100c76344", "message": "Formatting\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T09:19:56Z", "type": "commit"}, {"oid": "5442965acc0f3b586b48e491a49a9eb821cbb81e", "url": "https://github.com/metasfresh/metasfresh/commit/5442965acc0f3b586b48e491a49a9eb821cbb81e", "message": "Update JUnit\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T09:20:15Z", "type": "commit"}, {"oid": "a6dd0f23f0176fa176acf83a80755576ccfb07ca", "url": "https://github.com/metasfresh/metasfresh/commit/a6dd0f23f0176fa176acf83a80755576ccfb07ca", "message": "Fix N+1 problem\n\nThanks teo for pointing out the obvious\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-26T09:21:27Z", "type": "commit"}, {"oid": "6fe220e245fabdc8fcc2415ef60a2a7dfecaa080", "url": "https://github.com/metasfresh/metasfresh/commit/6fe220e245fabdc8fcc2415ef60a2a7dfecaa080", "message": "Change Name\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-06-30T12:29:07Z", "type": "commit"}, {"oid": "128d316a4ba163950815e26cc669b4f11d480598", "url": "https://github.com/metasfresh/metasfresh/commit/128d316a4ba163950815e26cc669b4f11d480598", "message": "Use Payment.Date and BPartner when creating the Invoice Processing Service Company Purchase Invoice\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-07-01T10:48:33Z", "type": "commit"}, {"oid": "4906d965dddc9a64b93abc1befa79a6f3b29be44", "url": "https://github.com/metasfresh/metasfresh/commit/4906d965dddc9a64b93abc1befa79a6f3b29be44", "message": "C_Payment, C_Invoice: add Partner as identifier for easier search\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-07-01T10:50:54Z", "type": "commit"}, {"oid": "c48fce938147c531e42e6264d64740025440ee57", "url": "https://github.com/metasfresh/metasfresh/commit/c48fce938147c531e42e6264d64740025440ee57", "message": "Add Unit test\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-07-01T13:02:40Z", "type": "commit"}, {"oid": "4085bdc612ad82f501d8d01bcf4e7a2bd1f8323b", "url": "https://github.com/metasfresh/metasfresh/commit/4085bdc612ad82f501d8d01bcf4e7a2bd1f8323b", "message": "Cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-07-01T13:06:53Z", "type": "commit"}, {"oid": "ee6f14b567962cbe6d67ebf986ba3d57368b21d0", "url": "https://github.com/metasfresh/metasfresh/commit/ee6f14b567962cbe6d67ebf986ba3d57368b21d0", "message": "Cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-07-01T13:07:51Z", "type": "commit"}, {"oid": "985645d6f7c65c6223bbc3c284b1f2a5de4b217f", "url": "https://github.com/metasfresh/metasfresh/commit/985645d6f7c65c6223bbc3c284b1f2a5de4b217f", "message": "Cleanup\n\nhttps://github.com/metasfresh/metasfresh/issues/6904", "committedDate": "2020-07-01T13:17:14Z", "type": "commit"}]}