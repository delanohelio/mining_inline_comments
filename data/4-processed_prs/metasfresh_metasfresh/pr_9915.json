{"pr_number": 9915, "pr_title": "Rewrite included views logic", "pr_createdAt": "2020-09-09T21:21:28Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/9915", "timeline": [{"oid": "276562dfae50a090b78633d1082ee67d1aedbe8f", "url": "https://github.com/metasfresh/metasfresh/commit/276562dfae50a090b78633d1082ee67d1aedbe8f", "message": "#9865 rewrite actions and reducers", "committedDate": "2020-08-31T15:57:33Z", "type": "commit"}, {"oid": "8f18a2933bf79b8c3b28c5b3edb6e3dd4bc778e9", "url": "https://github.com/metasfresh/metasfresh/commit/8f18a2933bf79b8c3b28c5b3edb6e3dd4bc778e9", "message": "#9865 update included views props everywhere", "committedDate": "2020-08-31T15:58:17Z", "type": "commit"}, {"oid": "debcd8b2f872274d7c4859db9c78eaeeba2f1f65", "url": "https://github.com/metasfresh/metasfresh/commit/debcd8b2f872274d7c4859db9c78eaeeba2f1f65", "message": "#9865 updating tests", "committedDate": "2020-08-31T16:25:13Z", "type": "commit"}, {"oid": "a1f2be08ba5e786a73c88c963f9622cc2db13b6c", "url": "https://github.com/metasfresh/metasfresh/commit/a1f2be08ba5e786a73c88c963f9622cc2db13b6c", "message": "#9865 add more tests", "committedDate": "2020-09-01T10:13:20Z", "type": "commit"}, {"oid": "3ffd6da77deff6e4fd82fb0b78b7dbe10ff81a45", "url": "https://github.com/metasfresh/metasfresh/commit/3ffd6da77deff6e4fd82fb0b78b7dbe10ff81a45", "message": "#9865 test data", "committedDate": "2020-09-09T21:11:12Z", "type": "commit"}, {"oid": "0e993031c63062d2b8925dd03f6889649d9525ff", "url": "https://github.com/metasfresh/metasfresh/commit/0e993031c63062d2b8925dd03f6889649d9525ff", "message": "#9865 doclist unit tests", "committedDate": "2020-09-09T21:11:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI2MTMxMA==", "url": "https://github.com/metasfresh/metasfresh/pull/9915#discussion_r486261310", "bodyText": "updateViewError", "author": "petrican", "createdAt": "2020-09-10T11:24:48Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -222,6 +223,28 @@ export function addViewLocationData(id, locationData, isModal) {\n   };\n }\n \n+/**\n+ * @method toggleIncludedView\n+ * @summary success when updating view's properties\n+ */\n+export function updateViewSuccess(id, data, isModal) {\n+  return {\n+    type: UPDATE_VIEW_DATA_SUCCESS,\n+    payload: { id, data, isModal },\n+  };\n+}\n+\n+/**\n+ * @method toggleIncludedView", "originalCommit": "0e993031c63062d2b8925dd03f6889649d9525ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI2MjA4Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/9915#discussion_r486262087", "bodyText": "Can you please put params in an object updateViewSuccess({ id, data, isModal }) {", "author": "petrican", "createdAt": "2020-09-10T11:26:15Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -222,6 +223,28 @@ export function addViewLocationData(id, locationData, isModal) {\n   };\n }\n \n+/**\n+ * @method toggleIncludedView\n+ * @summary success when updating view's properties\n+ */\n+export function updateViewSuccess(id, data, isModal) {", "originalCommit": "0e993031c63062d2b8925dd03f6889649d9525ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI2NTEyMw==", "url": "https://github.com/metasfresh/metasfresh/pull/9915#discussion_r486265123", "bodyText": "const { includedView } = state.viewHandler;", "author": "petrican", "createdAt": "2020-09-10T11:32:23Z", "path": "frontend/src/components/header/Actions.js", "diffHunk": "@@ -365,14 +365,14 @@ Actions.propTypes = {\n };\n \n const mapStateToProps = (state) => {\n-  const includedView = state.listHandler.includedView;\n+  const includedView = state.viewHandler.includedView;", "originalCommit": "0e993031c63062d2b8925dd03f6889649d9525ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI2OTk5Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/9915#discussion_r486269996", "bodyText": "Is there a reason why you commented this ? This might ring a bell in case of valid uncaughtException situation within the components unit/functional testing.", "author": "petrican", "createdAt": "2020-09-10T11:41:32Z", "path": "frontend/test_setup/jestSetup.js", "diffHunk": "@@ -47,6 +47,9 @@ window.HTMLDivElement.prototype.getBoundingClientRect = function() {\n // process.on('unhandledRejection', (reason) => {\n //   console.log('REJECTION', reason)\n // })\n+// process.on('uncaughtException', function(err) {\n+//   console.log('EXCEPTION', err);\n+// });\n ", "originalCommit": "0e993031c63062d2b8925dd03f6889649d9525ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI3MjczNg==", "url": "https://github.com/metasfresh/metasfresh/pull/9915#discussion_r486272736", "bodyText": "If there's an uncaught exception in the app, it will be thrown in the console. But in case of tests - not always. Also right now there are some minor problems (promises not finished before the test is done) that are polluting the log, but I don't have time to look into.", "author": "siemiatj", "createdAt": "2020-09-10T11:46:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI2OTk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI3NzA0Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/9915#discussion_r486277042", "bodyText": "Opened metasfresh/mf15#250 for that. Thanks", "author": "petrican", "createdAt": "2020-09-10T11:54:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI2OTk5Ng=="}], "type": "inlineReview"}, {"oid": "3b35d93690f091d5738b370434500e1c2dc4eaba", "url": "https://github.com/metasfresh/metasfresh/commit/3b35d93690f091d5738b370434500e1c2dc4eaba", "message": "#9865 cleanup", "committedDate": "2020-09-10T11:50:37Z", "type": "commit"}]}