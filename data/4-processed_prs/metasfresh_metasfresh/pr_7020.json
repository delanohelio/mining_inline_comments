{"pr_number": 7020, "pr_title": "Support refreshing viewId in modals properly", "pr_createdAt": "2020-07-15T20:03:47Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/7020", "timeline": [{"oid": "45825d89ec55e51eb501a9af8eed3101aa480b68", "url": "https://github.com/metasfresh/metasfresh/commit/45825d89ec55e51eb501a9af8eed3101aa480b68", "message": "#7019 store modals layout in ViewHandler.modals", "committedDate": "2020-07-15T20:02:18Z", "type": "commit"}, {"oid": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "url": "https://github.com/metasfresh/metasfresh/commit/c8856b7dda942a88c167b530b950fefc23c9aa9e", "message": "#7019 fix linter errors", "committedDate": "2020-07-15T21:35:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMTc2Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455511763", "bodyText": "L: 220 and L:281. Shouldn't we use a function like getTableLayout for getting the layout called with those params ?", "author": "petrican", "createdAt": "2020-07-16T05:04:13Z", "path": "frontend/src/actions/TableActions.js", "diffHunk": "@@ -277,8 +273,12 @@ export function updateGridTable(tableId, tableResponse) {\n \n         return Promise.resolve(true);\n       } else {\n-        const windowType = tableResponse.windowType || tableResponse.windowId;\n-        const tableLayout = getView(getState(), windowType).layout;\n+        const isModal = !!tableResponse.modalId;\n+        const windowId = isModal\n+          ? tableResponse.modalId\n+          : tableResponse.windowType || tableResponse.windowId;\n+\n+        const tableLayout = getView(getState(), windowId, isModal).layout;", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU4NDk4Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455584987", "bodyText": "No, as getView is a selector. And we don't use layout elsewhere so what for ? This is perfectly sufficient.", "author": "siemiatj", "createdAt": "2020-07-16T07:54:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMTc2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMjUwMg==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455512502", "bodyText": "for more than two params pls always use object function({ param1, param2, param3 })", "author": "petrican", "createdAt": "2020-07-16T05:06:50Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -40,197 +40,197 @@ import { setListIncludedView, closeListIncludedView } from './ListActions';\n  * @method resetView\n  * @summary\n  */\n-export function resetView(id) {\n+export function resetView(id, isModal) {\n   return {\n     type: RESET_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method deleteView\n  * @summary\n  */\n-export function deleteView(id) {\n+export function deleteView(id, isModal) {\n   return {\n     type: DELETE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentPending\n  * @summary\n  */\n-function fetchDocumentPending(id) {\n+function fetchDocumentPending(id, isModal) {\n   return {\n     type: FETCH_DOCUMENT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentSuccess\n  * @summary\n  */\n-function fetchDocumentSuccess(id, data) {\n+function fetchDocumentSuccess(id, data, isModal) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMjYwOA==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455512608", "bodyText": "for more than two params pls always use object function({ param1, param2, param3 })", "author": "petrican", "createdAt": "2020-07-16T05:07:16Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -40,197 +40,197 @@ import { setListIncludedView, closeListIncludedView } from './ListActions';\n  * @method resetView\n  * @summary\n  */\n-export function resetView(id) {\n+export function resetView(id, isModal) {\n   return {\n     type: RESET_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method deleteView\n  * @summary\n  */\n-export function deleteView(id) {\n+export function deleteView(id, isModal) {\n   return {\n     type: DELETE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentPending\n  * @summary\n  */\n-function fetchDocumentPending(id) {\n+function fetchDocumentPending(id, isModal) {\n   return {\n     type: FETCH_DOCUMENT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentSuccess\n  * @summary\n  */\n-function fetchDocumentSuccess(id, data) {\n+function fetchDocumentSuccess(id, data, isModal) {\n   return {\n     type: FETCH_DOCUMENT_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentError\n  * @summary\n  */\n-function fetchDocumentError(id, error) {\n+function fetchDocumentError(id, error, isModal) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMjY2Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455512667", "bodyText": "for more than two params pls always use object function({ param1, param2, param3 })", "author": "petrican", "createdAt": "2020-07-16T05:07:31Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -40,197 +40,197 @@ import { setListIncludedView, closeListIncludedView } from './ListActions';\n  * @method resetView\n  * @summary\n  */\n-export function resetView(id) {\n+export function resetView(id, isModal) {\n   return {\n     type: RESET_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method deleteView\n  * @summary\n  */\n-export function deleteView(id) {\n+export function deleteView(id, isModal) {\n   return {\n     type: DELETE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentPending\n  * @summary\n  */\n-function fetchDocumentPending(id) {\n+function fetchDocumentPending(id, isModal) {\n   return {\n     type: FETCH_DOCUMENT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentSuccess\n  * @summary\n  */\n-function fetchDocumentSuccess(id, data) {\n+function fetchDocumentSuccess(id, data, isModal) {\n   return {\n     type: FETCH_DOCUMENT_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentError\n  * @summary\n  */\n-function fetchDocumentError(id, error) {\n+function fetchDocumentError(id, error, isModal) {\n   return {\n     type: FETCH_DOCUMENT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutPending\n  * @summary\n  */\n-function fetchLayoutPending(id) {\n+function fetchLayoutPending(id, isModal) {\n   return {\n     type: FETCH_LAYOUT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutSuccess\n  * @summary\n  */\n-function fetchLayoutSuccess(id, layout) {\n+function fetchLayoutSuccess(id, layout, isModal) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMjc5NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455512795", "bodyText": "for more than two params pls always use object, like function({ param1, param2, param3 })", "author": "petrican", "createdAt": "2020-07-16T05:08:03Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -40,197 +40,197 @@ import { setListIncludedView, closeListIncludedView } from './ListActions';\n  * @method resetView\n  * @summary\n  */\n-export function resetView(id) {\n+export function resetView(id, isModal) {\n   return {\n     type: RESET_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method deleteView\n  * @summary\n  */\n-export function deleteView(id) {\n+export function deleteView(id, isModal) {\n   return {\n     type: DELETE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentPending\n  * @summary\n  */\n-function fetchDocumentPending(id) {\n+function fetchDocumentPending(id, isModal) {\n   return {\n     type: FETCH_DOCUMENT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentSuccess\n  * @summary\n  */\n-function fetchDocumentSuccess(id, data) {\n+function fetchDocumentSuccess(id, data, isModal) {\n   return {\n     type: FETCH_DOCUMENT_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentError\n  * @summary\n  */\n-function fetchDocumentError(id, error) {\n+function fetchDocumentError(id, error, isModal) {\n   return {\n     type: FETCH_DOCUMENT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutPending\n  * @summary\n  */\n-function fetchLayoutPending(id) {\n+function fetchLayoutPending(id, isModal) {\n   return {\n     type: FETCH_LAYOUT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutSuccess\n  * @summary\n  */\n-function fetchLayoutSuccess(id, layout) {\n+function fetchLayoutSuccess(id, layout, isModal) {\n   return {\n     type: FETCH_LAYOUT_SUCCESS,\n-    payload: { id, layout },\n+    payload: { id, layout, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutError\n  * @summary\n  */\n-function fetchLayoutError(id, error) {\n+function fetchLayoutError(id, error, isModal) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMjg3OQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455512879", "bodyText": "for more than two params pls always use object, like function({ param1, param2, param3 }){ ....}", "author": "petrican", "createdAt": "2020-07-16T05:08:29Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -40,197 +40,197 @@ import { setListIncludedView, closeListIncludedView } from './ListActions';\n  * @method resetView\n  * @summary\n  */\n-export function resetView(id) {\n+export function resetView(id, isModal) {\n   return {\n     type: RESET_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method deleteView\n  * @summary\n  */\n-export function deleteView(id) {\n+export function deleteView(id, isModal) {\n   return {\n     type: DELETE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentPending\n  * @summary\n  */\n-function fetchDocumentPending(id) {\n+function fetchDocumentPending(id, isModal) {\n   return {\n     type: FETCH_DOCUMENT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentSuccess\n  * @summary\n  */\n-function fetchDocumentSuccess(id, data) {\n+function fetchDocumentSuccess(id, data, isModal) {\n   return {\n     type: FETCH_DOCUMENT_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentError\n  * @summary\n  */\n-function fetchDocumentError(id, error) {\n+function fetchDocumentError(id, error, isModal) {\n   return {\n     type: FETCH_DOCUMENT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutPending\n  * @summary\n  */\n-function fetchLayoutPending(id) {\n+function fetchLayoutPending(id, isModal) {\n   return {\n     type: FETCH_LAYOUT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutSuccess\n  * @summary\n  */\n-function fetchLayoutSuccess(id, layout) {\n+function fetchLayoutSuccess(id, layout, isModal) {\n   return {\n     type: FETCH_LAYOUT_SUCCESS,\n-    payload: { id, layout },\n+    payload: { id, layout, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutError\n  * @summary\n  */\n-function fetchLayoutError(id, error) {\n+function fetchLayoutError(id, error, isModal) {\n   return {\n     type: FETCH_LAYOUT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method createViewPending\n  * @summary\n  */\n-function createViewPending(id) {\n+function createViewPending(id, isModal) {\n   return {\n     type: CREATE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method createViewSuccess\n  * @summary\n  */\n-function createViewSuccess(id, data) {\n+function createViewSuccess(id, data, isModal) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMjkzNg==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455512936", "bodyText": "for more than two params pls always use object, like function({ param1, param2, param3 }){ ....}", "author": "petrican", "createdAt": "2020-07-16T05:08:40Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -40,197 +40,197 @@ import { setListIncludedView, closeListIncludedView } from './ListActions';\n  * @method resetView\n  * @summary\n  */\n-export function resetView(id) {\n+export function resetView(id, isModal) {\n   return {\n     type: RESET_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method deleteView\n  * @summary\n  */\n-export function deleteView(id) {\n+export function deleteView(id, isModal) {\n   return {\n     type: DELETE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentPending\n  * @summary\n  */\n-function fetchDocumentPending(id) {\n+function fetchDocumentPending(id, isModal) {\n   return {\n     type: FETCH_DOCUMENT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentSuccess\n  * @summary\n  */\n-function fetchDocumentSuccess(id, data) {\n+function fetchDocumentSuccess(id, data, isModal) {\n   return {\n     type: FETCH_DOCUMENT_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentError\n  * @summary\n  */\n-function fetchDocumentError(id, error) {\n+function fetchDocumentError(id, error, isModal) {\n   return {\n     type: FETCH_DOCUMENT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutPending\n  * @summary\n  */\n-function fetchLayoutPending(id) {\n+function fetchLayoutPending(id, isModal) {\n   return {\n     type: FETCH_LAYOUT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutSuccess\n  * @summary\n  */\n-function fetchLayoutSuccess(id, layout) {\n+function fetchLayoutSuccess(id, layout, isModal) {\n   return {\n     type: FETCH_LAYOUT_SUCCESS,\n-    payload: { id, layout },\n+    payload: { id, layout, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutError\n  * @summary\n  */\n-function fetchLayoutError(id, error) {\n+function fetchLayoutError(id, error, isModal) {\n   return {\n     type: FETCH_LAYOUT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method createViewPending\n  * @summary\n  */\n-function createViewPending(id) {\n+function createViewPending(id, isModal) {\n   return {\n     type: CREATE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method createViewSuccess\n  * @summary\n  */\n-function createViewSuccess(id, data) {\n+function createViewSuccess(id, data, isModal) {\n   return {\n     type: CREATE_VIEW_SUCCESS,\n-    payload: { id, viewId: data.viewId },\n+    payload: { id, viewId: data.viewId, isModal },\n   };\n }\n \n /**\n  * @method createViewError\n  * @summary\n  */\n-function createViewError(id, error) {\n+function createViewError(id, error, isModal) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMjk2Ng==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455512966", "bodyText": "for more than two params pls always use object, like function({ param1, param2, param3 }){ ....}", "author": "petrican", "createdAt": "2020-07-16T05:08:49Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -40,197 +40,197 @@ import { setListIncludedView, closeListIncludedView } from './ListActions';\n  * @method resetView\n  * @summary\n  */\n-export function resetView(id) {\n+export function resetView(id, isModal) {\n   return {\n     type: RESET_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method deleteView\n  * @summary\n  */\n-export function deleteView(id) {\n+export function deleteView(id, isModal) {\n   return {\n     type: DELETE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentPending\n  * @summary\n  */\n-function fetchDocumentPending(id) {\n+function fetchDocumentPending(id, isModal) {\n   return {\n     type: FETCH_DOCUMENT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentSuccess\n  * @summary\n  */\n-function fetchDocumentSuccess(id, data) {\n+function fetchDocumentSuccess(id, data, isModal) {\n   return {\n     type: FETCH_DOCUMENT_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentError\n  * @summary\n  */\n-function fetchDocumentError(id, error) {\n+function fetchDocumentError(id, error, isModal) {\n   return {\n     type: FETCH_DOCUMENT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutPending\n  * @summary\n  */\n-function fetchLayoutPending(id) {\n+function fetchLayoutPending(id, isModal) {\n   return {\n     type: FETCH_LAYOUT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutSuccess\n  * @summary\n  */\n-function fetchLayoutSuccess(id, layout) {\n+function fetchLayoutSuccess(id, layout, isModal) {\n   return {\n     type: FETCH_LAYOUT_SUCCESS,\n-    payload: { id, layout },\n+    payload: { id, layout, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutError\n  * @summary\n  */\n-function fetchLayoutError(id, error) {\n+function fetchLayoutError(id, error, isModal) {\n   return {\n     type: FETCH_LAYOUT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method createViewPending\n  * @summary\n  */\n-function createViewPending(id) {\n+function createViewPending(id, isModal) {\n   return {\n     type: CREATE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method createViewSuccess\n  * @summary\n  */\n-function createViewSuccess(id, data) {\n+function createViewSuccess(id, data, isModal) {\n   return {\n     type: CREATE_VIEW_SUCCESS,\n-    payload: { id, viewId: data.viewId },\n+    payload: { id, viewId: data.viewId, isModal },\n   };\n }\n \n /**\n  * @method createViewError\n  * @summary\n  */\n-function createViewError(id, error) {\n+function createViewError(id, error, isModal) {\n   return {\n     type: CREATE_VIEW_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method filterViewPending\n  * @summary\n  */\n-function filterViewPending(id) {\n+function filterViewPending(id, isModal) {\n   return {\n     type: FILTER_VIEW_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method filterViewSuccess\n  * @summary\n  */\n-function filterViewSuccess(id, data) {\n+function filterViewSuccess(id, data, isModal) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMzg1NA==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455513854", "bodyText": "for more than two params pls always use object, like function({ param1, param2, param3 }){ ....}", "author": "petrican", "createdAt": "2020-07-16T05:12:06Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -40,197 +40,197 @@ import { setListIncludedView, closeListIncludedView } from './ListActions';\n  * @method resetView\n  * @summary\n  */\n-export function resetView(id) {\n+export function resetView(id, isModal) {\n   return {\n     type: RESET_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method deleteView\n  * @summary\n  */\n-export function deleteView(id) {\n+export function deleteView(id, isModal) {\n   return {\n     type: DELETE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentPending\n  * @summary\n  */\n-function fetchDocumentPending(id) {\n+function fetchDocumentPending(id, isModal) {\n   return {\n     type: FETCH_DOCUMENT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentSuccess\n  * @summary\n  */\n-function fetchDocumentSuccess(id, data) {\n+function fetchDocumentSuccess(id, data, isModal) {\n   return {\n     type: FETCH_DOCUMENT_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentError\n  * @summary\n  */\n-function fetchDocumentError(id, error) {\n+function fetchDocumentError(id, error, isModal) {\n   return {\n     type: FETCH_DOCUMENT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutPending\n  * @summary\n  */\n-function fetchLayoutPending(id) {\n+function fetchLayoutPending(id, isModal) {\n   return {\n     type: FETCH_LAYOUT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutSuccess\n  * @summary\n  */\n-function fetchLayoutSuccess(id, layout) {\n+function fetchLayoutSuccess(id, layout, isModal) {\n   return {\n     type: FETCH_LAYOUT_SUCCESS,\n-    payload: { id, layout },\n+    payload: { id, layout, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutError\n  * @summary\n  */\n-function fetchLayoutError(id, error) {\n+function fetchLayoutError(id, error, isModal) {\n   return {\n     type: FETCH_LAYOUT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method createViewPending\n  * @summary\n  */\n-function createViewPending(id) {\n+function createViewPending(id, isModal) {\n   return {\n     type: CREATE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method createViewSuccess\n  * @summary\n  */\n-function createViewSuccess(id, data) {\n+function createViewSuccess(id, data, isModal) {\n   return {\n     type: CREATE_VIEW_SUCCESS,\n-    payload: { id, viewId: data.viewId },\n+    payload: { id, viewId: data.viewId, isModal },\n   };\n }\n \n /**\n  * @method createViewError\n  * @summary\n  */\n-function createViewError(id, error) {\n+function createViewError(id, error, isModal) {\n   return {\n     type: CREATE_VIEW_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method filterViewPending\n  * @summary\n  */\n-function filterViewPending(id) {\n+function filterViewPending(id, isModal) {\n   return {\n     type: FILTER_VIEW_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method filterViewSuccess\n  * @summary\n  */\n-function filterViewSuccess(id, data) {\n+function filterViewSuccess(id, data, isModal) {\n   return {\n     type: FILTER_VIEW_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method filterViewError\n  * @summary\n  */\n-function filterViewError(id, error) {\n+function filterViewError(id, error, isModal) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMzg3NA==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455513874", "bodyText": "for more than two params pls always use object, like function({ param1, param2, param3 }){ ....}", "author": "petrican", "createdAt": "2020-07-16T05:12:13Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -40,197 +40,197 @@ import { setListIncludedView, closeListIncludedView } from './ListActions';\n  * @method resetView\n  * @summary\n  */\n-export function resetView(id) {\n+export function resetView(id, isModal) {\n   return {\n     type: RESET_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method deleteView\n  * @summary\n  */\n-export function deleteView(id) {\n+export function deleteView(id, isModal) {\n   return {\n     type: DELETE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentPending\n  * @summary\n  */\n-function fetchDocumentPending(id) {\n+function fetchDocumentPending(id, isModal) {\n   return {\n     type: FETCH_DOCUMENT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentSuccess\n  * @summary\n  */\n-function fetchDocumentSuccess(id, data) {\n+function fetchDocumentSuccess(id, data, isModal) {\n   return {\n     type: FETCH_DOCUMENT_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentError\n  * @summary\n  */\n-function fetchDocumentError(id, error) {\n+function fetchDocumentError(id, error, isModal) {\n   return {\n     type: FETCH_DOCUMENT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutPending\n  * @summary\n  */\n-function fetchLayoutPending(id) {\n+function fetchLayoutPending(id, isModal) {\n   return {\n     type: FETCH_LAYOUT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutSuccess\n  * @summary\n  */\n-function fetchLayoutSuccess(id, layout) {\n+function fetchLayoutSuccess(id, layout, isModal) {\n   return {\n     type: FETCH_LAYOUT_SUCCESS,\n-    payload: { id, layout },\n+    payload: { id, layout, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutError\n  * @summary\n  */\n-function fetchLayoutError(id, error) {\n+function fetchLayoutError(id, error, isModal) {\n   return {\n     type: FETCH_LAYOUT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method createViewPending\n  * @summary\n  */\n-function createViewPending(id) {\n+function createViewPending(id, isModal) {\n   return {\n     type: CREATE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method createViewSuccess\n  * @summary\n  */\n-function createViewSuccess(id, data) {\n+function createViewSuccess(id, data, isModal) {\n   return {\n     type: CREATE_VIEW_SUCCESS,\n-    payload: { id, viewId: data.viewId },\n+    payload: { id, viewId: data.viewId, isModal },\n   };\n }\n \n /**\n  * @method createViewError\n  * @summary\n  */\n-function createViewError(id, error) {\n+function createViewError(id, error, isModal) {\n   return {\n     type: CREATE_VIEW_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method filterViewPending\n  * @summary\n  */\n-function filterViewPending(id) {\n+function filterViewPending(id, isModal) {\n   return {\n     type: FILTER_VIEW_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method filterViewSuccess\n  * @summary\n  */\n-function filterViewSuccess(id, data) {\n+function filterViewSuccess(id, data, isModal) {\n   return {\n     type: FILTER_VIEW_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method filterViewError\n  * @summary\n  */\n-function filterViewError(id, error) {\n+function filterViewError(id, error, isModal) {\n   return {\n     type: FILTER_VIEW_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLocationConfigSuccess\n  * @summary\n  */\n-function fetchLocationConfigSuccess(id, data) {\n+function fetchLocationConfigSuccess(id, data, isModal) {\n   return {\n     type: FETCH_LOCATION_CONFIG_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchLocationConfigError\n  * @summary error when fetching geolocation config\n  */\n-function fetchLocationConfigError(id, error) {\n+function fetchLocationConfigError(id, error, isModal) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxNDA2MQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455514061", "bodyText": "for more than two params pls always use object, like function({ param1, param2, param3 }){ ....}\nalso document the params. Thanks", "author": "petrican", "createdAt": "2020-07-16T05:12:55Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -40,197 +40,197 @@ import { setListIncludedView, closeListIncludedView } from './ListActions';\n  * @method resetView\n  * @summary\n  */\n-export function resetView(id) {\n+export function resetView(id, isModal) {\n   return {\n     type: RESET_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method deleteView\n  * @summary\n  */\n-export function deleteView(id) {\n+export function deleteView(id, isModal) {\n   return {\n     type: DELETE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentPending\n  * @summary\n  */\n-function fetchDocumentPending(id) {\n+function fetchDocumentPending(id, isModal) {\n   return {\n     type: FETCH_DOCUMENT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentSuccess\n  * @summary\n  */\n-function fetchDocumentSuccess(id, data) {\n+function fetchDocumentSuccess(id, data, isModal) {\n   return {\n     type: FETCH_DOCUMENT_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentError\n  * @summary\n  */\n-function fetchDocumentError(id, error) {\n+function fetchDocumentError(id, error, isModal) {\n   return {\n     type: FETCH_DOCUMENT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutPending\n  * @summary\n  */\n-function fetchLayoutPending(id) {\n+function fetchLayoutPending(id, isModal) {\n   return {\n     type: FETCH_LAYOUT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutSuccess\n  * @summary\n  */\n-function fetchLayoutSuccess(id, layout) {\n+function fetchLayoutSuccess(id, layout, isModal) {\n   return {\n     type: FETCH_LAYOUT_SUCCESS,\n-    payload: { id, layout },\n+    payload: { id, layout, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutError\n  * @summary\n  */\n-function fetchLayoutError(id, error) {\n+function fetchLayoutError(id, error, isModal) {\n   return {\n     type: FETCH_LAYOUT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method createViewPending\n  * @summary\n  */\n-function createViewPending(id) {\n+function createViewPending(id, isModal) {\n   return {\n     type: CREATE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method createViewSuccess\n  * @summary\n  */\n-function createViewSuccess(id, data) {\n+function createViewSuccess(id, data, isModal) {\n   return {\n     type: CREATE_VIEW_SUCCESS,\n-    payload: { id, viewId: data.viewId },\n+    payload: { id, viewId: data.viewId, isModal },\n   };\n }\n \n /**\n  * @method createViewError\n  * @summary\n  */\n-function createViewError(id, error) {\n+function createViewError(id, error, isModal) {\n   return {\n     type: CREATE_VIEW_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method filterViewPending\n  * @summary\n  */\n-function filterViewPending(id) {\n+function filterViewPending(id, isModal) {\n   return {\n     type: FILTER_VIEW_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method filterViewSuccess\n  * @summary\n  */\n-function filterViewSuccess(id, data) {\n+function filterViewSuccess(id, data, isModal) {\n   return {\n     type: FILTER_VIEW_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method filterViewError\n  * @summary\n  */\n-function filterViewError(id, error) {\n+function filterViewError(id, error, isModal) {\n   return {\n     type: FILTER_VIEW_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLocationConfigSuccess\n  * @summary\n  */\n-function fetchLocationConfigSuccess(id, data) {\n+function fetchLocationConfigSuccess(id, data, isModal) {\n   return {\n     type: FETCH_LOCATION_CONFIG_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchLocationConfigError\n  * @summary error when fetching geolocation config\n  */\n-function fetchLocationConfigError(id, error) {\n+function fetchLocationConfigError(id, error, isModal) {\n   return {\n     type: FETCH_LOCATION_CONFIG_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method addLocationData\n  * @summary save geolocation data in the store\n  */\n-export function addLocationData(id, locationData) {\n+export function addViewLocationData(id, locationData, isModal) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxNDE5MQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455514191", "bodyText": "for more than two params pls always use object, like function({ param1, param2, param3 }){ ....}\n\ndocument params", "author": "petrican", "createdAt": "2020-07-16T05:13:23Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -40,197 +40,197 @@ import { setListIncludedView, closeListIncludedView } from './ListActions';\n  * @method resetView\n  * @summary\n  */\n-export function resetView(id) {\n+export function resetView(id, isModal) {\n   return {\n     type: RESET_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method deleteView\n  * @summary\n  */\n-export function deleteView(id) {\n+export function deleteView(id, isModal) {\n   return {\n     type: DELETE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentPending\n  * @summary\n  */\n-function fetchDocumentPending(id) {\n+function fetchDocumentPending(id, isModal) {\n   return {\n     type: FETCH_DOCUMENT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentSuccess\n  * @summary\n  */\n-function fetchDocumentSuccess(id, data) {\n+function fetchDocumentSuccess(id, data, isModal) {\n   return {\n     type: FETCH_DOCUMENT_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchDocumentError\n  * @summary\n  */\n-function fetchDocumentError(id, error) {\n+function fetchDocumentError(id, error, isModal) {\n   return {\n     type: FETCH_DOCUMENT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutPending\n  * @summary\n  */\n-function fetchLayoutPending(id) {\n+function fetchLayoutPending(id, isModal) {\n   return {\n     type: FETCH_LAYOUT_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutSuccess\n  * @summary\n  */\n-function fetchLayoutSuccess(id, layout) {\n+function fetchLayoutSuccess(id, layout, isModal) {\n   return {\n     type: FETCH_LAYOUT_SUCCESS,\n-    payload: { id, layout },\n+    payload: { id, layout, isModal },\n   };\n }\n \n /**\n  * @method fetchLayoutError\n  * @summary\n  */\n-function fetchLayoutError(id, error) {\n+function fetchLayoutError(id, error, isModal) {\n   return {\n     type: FETCH_LAYOUT_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method createViewPending\n  * @summary\n  */\n-function createViewPending(id) {\n+function createViewPending(id, isModal) {\n   return {\n     type: CREATE_VIEW,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method createViewSuccess\n  * @summary\n  */\n-function createViewSuccess(id, data) {\n+function createViewSuccess(id, data, isModal) {\n   return {\n     type: CREATE_VIEW_SUCCESS,\n-    payload: { id, viewId: data.viewId },\n+    payload: { id, viewId: data.viewId, isModal },\n   };\n }\n \n /**\n  * @method createViewError\n  * @summary\n  */\n-function createViewError(id, error) {\n+function createViewError(id, error, isModal) {\n   return {\n     type: CREATE_VIEW_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method filterViewPending\n  * @summary\n  */\n-function filterViewPending(id) {\n+function filterViewPending(id, isModal) {\n   return {\n     type: FILTER_VIEW_PENDING,\n-    payload: { id },\n+    payload: { id, isModal },\n   };\n }\n \n /**\n  * @method filterViewSuccess\n  * @summary\n  */\n-function filterViewSuccess(id, data) {\n+function filterViewSuccess(id, data, isModal) {\n   return {\n     type: FILTER_VIEW_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method filterViewError\n  * @summary\n  */\n-function filterViewError(id, error) {\n+function filterViewError(id, error, isModal) {\n   return {\n     type: FILTER_VIEW_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method fetchLocationConfigSuccess\n  * @summary\n  */\n-function fetchLocationConfigSuccess(id, data) {\n+function fetchLocationConfigSuccess(id, data, isModal) {\n   return {\n     type: FETCH_LOCATION_CONFIG_SUCCESS,\n-    payload: { id, data },\n+    payload: { id, data, isModal },\n   };\n }\n \n /**\n  * @method fetchLocationConfigError\n  * @summary error when fetching geolocation config\n  */\n-function fetchLocationConfigError(id, error) {\n+function fetchLocationConfigError(id, error, isModal) {\n   return {\n     type: FETCH_LOCATION_CONFIG_ERROR,\n-    payload: { id, error },\n+    payload: { id, error, isModal },\n   };\n }\n \n /**\n  * @method addLocationData\n  * @summary save geolocation data in the store\n  */\n-export function addLocationData(id, locationData) {\n+export function addViewLocationData(id, locationData, isModal) {\n   return {\n     type: ADD_VIEW_LOCATION_DATA,\n-    payload: { id, locationData },\n+    payload: { id, locationData, isModal },\n   };\n }\n \n /**\n  * @method toggleIncludedView\n  * @summary sets internal hasIncluded/isIncluded values\n  */\n-export function toggleIncludedView(id, showIncludedView) {\n+export function toggleIncludedView(id, showIncludedView, isModal) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxNTUxMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455515511", "bodyText": "maybe putting the redux example paths in here would make this even more clear", "author": "petrican", "createdAt": "2020-07-16T05:18:06Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -240,51 +240,49 @@ export function toggleIncludedView(id, showIncludedView) {\n  * @method fetchDocument\n  * @summary Get grid rows\n  *\n- * @param {*} windowType\n+ * @param {*} windowId\n  * @param {*} viewId\n  * @param {number} page\n  * @param {number} pageLength\n  * @param {*} orderBy\n- * @param {bool} useViewId - flag defining if we should be using the viewId, or not.\n- * set to `true` for modals.\n- * @param {*} modalId - used together with `useViewId`\n+ * @param {bool} isModal - flag defining if the view is in modal or not.\n+ * Set to `true` for modals because otherwise if using `windowId` we would have a collision\n+ * with the underlaying window (as they both have the same `windowId`) so we store modal\n+ * views in `modals` instead of regular `views`", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxODI5NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455518295", "bodyText": "for more than two params pls always use object, like function({ param1, param2, param3, param4 }){ ....}", "author": "petrican", "createdAt": "2020-07-16T05:28:15Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -403,15 +402,13 @@ export function fetchLayout(\n  * @method filterView\n  * @summary filter grid view\n  */\n-export function filterView(windowId, viewId, filters, useViewId = false) {\n+export function filterView(windowId, viewId, filters, isModal = false) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxODM0NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455518345", "bodyText": "for more than two params pls always use object, like function({ param1, param2, param3 }){ ....}", "author": "petrican", "createdAt": "2020-07-16T05:28:24Z", "path": "frontend/src/actions/ViewActions.js", "diffHunk": "@@ -431,16 +428,16 @@ export function filterView(windowId, viewId, filters, useViewId = false) {\n  * @method fetchLocationConfig\n  * @summary Get the location search configuration from the API\n  */\n-export function fetchLocationConfig(windowId, viewId = null) {\n+export function fetchLocationConfig(windowId, isModal = false) {", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMTU3Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455521573", "bodyText": "maybe put this in a function to avoid dup code see L: 214 above, L: 250 below, L: 269", "author": "petrican", "createdAt": "2020-07-16T05:39:54Z", "path": "frontend/src/reducers/viewHandler.js", "diffHunk": "@@ -219,13 +230,14 @@ export default function viewHandler(state = initialState, action) {\n \n     // VIEW OPERATIONS\n     case CREATE_VIEW: {\n-      const { id } = action.payload;\n-      const view = getLocalView(state, id);\n+      const { id, isModal } = action.payload;\n+      const type = isModal ? 'modals' : 'views';", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMTk2NA==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455521964", "bodyText": "this needs to be in a function", "author": "petrican", "createdAt": "2020-07-16T05:41:12Z", "path": "frontend/src/reducers/viewHandler.js", "diffHunk": "@@ -269,13 +283,14 @@ export default function viewHandler(state = initialState, action) {\n       };\n     }\n     case FILTER_VIEW_PENDING: {\n-      const { id } = action.payload;\n-      const view = getLocalView(state, id);\n+      const { id, isModal } = action.payload;\n+      const type = isModal ? 'modals' : 'views';", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMTk4OQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455521989", "bodyText": "this needs to be in a function", "author": "petrican", "createdAt": "2020-07-16T05:41:19Z", "path": "frontend/src/reducers/viewHandler.js", "diffHunk": "@@ -289,13 +304,15 @@ export default function viewHandler(state = initialState, action) {\n       const {\n         id,\n         data: { filters, viewId, size },\n+        isModal,\n       } = action.payload;\n-      const view = getLocalView(state, id);\n+      const type = isModal ? 'modals' : 'views';", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMjE5NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455522195", "bodyText": "this needs to be in a function", "author": "petrican", "createdAt": "2020-07-16T05:41:50Z", "path": "frontend/src/reducers/viewHandler.js", "diffHunk": "@@ -309,13 +326,14 @@ export default function viewHandler(state = initialState, action) {\n       };\n     }\n     case FILTER_VIEW_ERROR: {\n-      const { id, error } = action.payload;\n-      const view = getLocalView(state, id);\n+      const { id, error, isModal } = action.payload;\n+      const type = isModal ? 'modals' : 'views';", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMjIzMQ==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455522231", "bodyText": "this needs to be in a function", "author": "petrican", "createdAt": "2020-07-16T05:41:59Z", "path": "frontend/src/reducers/viewHandler.js", "diffHunk": "@@ -326,13 +344,14 @@ export default function viewHandler(state = initialState, action) {\n       };\n     }\n     case ADD_VIEW_LOCATION_DATA: {\n-      const { id, locationData } = action.payload;\n-      const view = getLocalView(state, id);\n+      const { id, locationData, isModal } = action.payload;\n+      const type = isModal ? 'modals' : 'views';", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMzI4Mg==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455523282", "bodyText": "this needs to be in a function , maybe one that would return type and view for the same params given (state, id, isModal) so in the end to have something like. const { view, type } = functionThatReturnsViewAndType({ state, id, isModal})", "author": "petrican", "createdAt": "2020-07-16T05:45:40Z", "path": "frontend/src/reducers/viewHandler.js", "diffHunk": "@@ -342,14 +361,15 @@ export default function viewHandler(state = initialState, action) {\n     }\n \n     case FETCH_LOCATION_CONFIG_SUCCESS: {\n-      const { id, data } = action.payload;\n-      const view = getLocalView(state, id);\n+      const { id, data, isModal } = action.payload;\n+      const type = isModal ? 'modals' : 'views';", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMzM3OA==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455523378", "bodyText": "see prev comment", "author": "petrican", "createdAt": "2020-07-16T05:46:01Z", "path": "frontend/src/reducers/viewHandler.js", "diffHunk": "@@ -361,13 +381,14 @@ export default function viewHandler(state = initialState, action) {\n       return state;\n     }\n     case FETCH_LOCATION_CONFIG_ERROR: {\n-      const { id, error } = action.payload;\n-      const view = getLocalView(state, id);\n+      const { id, error, isModal } = action.payload;\n+      const type = isModal ? 'modals' : 'views';\n+      const view = getLocalView(state, id, isModal);", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMzg2Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455523863", "bodyText": "Same as above. Note that if we do the modifs mentioned above the overall size of the file will be smaller either.", "author": "petrican", "createdAt": "2020-07-16T05:47:37Z", "path": "frontend/src/reducers/viewHandler.js", "diffHunk": "@@ -377,13 +398,14 @@ export default function viewHandler(state = initialState, action) {\n     }\n \n     case TOGGLE_INCLUDED_VIEW: {\n-      const { id, showIncludedView } = action.payload;\n-      const view = getLocalView(state, id);\n+      const { id, showIncludedView, isModal } = action.payload;\n+      const type = isModal ? 'modals' : 'views';\n+      const view = getLocalView(state, id, isModal);", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMzk2Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455523963", "bodyText": "see previous comments", "author": "petrican", "createdAt": "2020-07-16T05:48:00Z", "path": "frontend/src/reducers/viewHandler.js", "diffHunk": "@@ -394,7 +416,8 @@ export default function viewHandler(state = initialState, action) {\n     }\n \n     case DELETE_VIEW: {\n-      const id = action.payload.id;\n+      const { id, isModal } = action.payload;", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY3Nzk5OA==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455677998", "bodyText": "Adding this once would really suffice.", "author": "siemiatj", "createdAt": "2020-07-16T10:12:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMzk2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMzk5NA==", "url": "https://github.com/metasfresh/metasfresh/pull/7020#discussion_r455523994", "bodyText": "see previous comments", "author": "petrican", "createdAt": "2020-07-16T05:48:06Z", "path": "frontend/src/reducers/viewHandler.js", "diffHunk": "@@ -403,19 +426,20 @@ export default function viewHandler(state = initialState, action) {\n       } else {\n         return {\n           ...state,\n-          views: {},\n+          [`${type}`]: {},\n         };\n       }\n     }\n     case RESET_VIEW: {\n-      const id = action.payload.id;\n-      const view = getLocalView(state, id);\n+      const { id, isModal } = action.payload;\n+      const type = isModal ? 'modals' : 'views';", "originalCommit": "c8856b7dda942a88c167b530b950fefc23c9aa9e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4f460ad95d88570ab93467dafe8bdb6846f0ad2e", "url": "https://github.com/metasfresh/metasfresh/commit/4f460ad95d88570ab93467dafe8bdb6846f0ad2e", "message": "#7019 add helper for getting the view type in the reducer", "committedDate": "2020-07-16T10:11:57Z", "type": "commit"}, {"oid": "6cf6865b2b5225d61137bdfe4a872a34c3d6ac4c", "url": "https://github.com/metasfresh/metasfresh/commit/6cf6865b2b5225d61137bdfe4a872a34c3d6ac4c", "message": "#7019 linter fix", "committedDate": "2020-07-16T11:18:01Z", "type": "commit"}, {"oid": "f3b4fab4a5fd19e91f294a695cf2b5aeef308068", "url": "https://github.com/metasfresh/metasfresh/commit/f3b4fab4a5fd19e91f294a695cf2b5aeef308068", "message": "#7019 adding reducer tests", "committedDate": "2020-07-16T15:42:14Z", "type": "commit"}]}