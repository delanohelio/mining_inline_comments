{"pr_number": 10308, "pr_title": "Tests for QuickActions and related", "pr_createdAt": "2020-11-25T20:23:19Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/10308", "timeline": [{"oid": "156df454256b637035de2afc8603d93bf68b671c", "url": "https://github.com/metasfresh/metasfresh/commit/156df454256b637035de2afc8603d93bf68b671c", "message": "#10195 always check if quick actions are not already loading", "committedDate": "2020-11-25T17:58:06Z", "type": "commit"}, {"oid": "6b5f0759fc78bf23547efda31d28c3d4c725c827", "url": "https://github.com/metasfresh/metasfresh/commit/6b5f0759fc78bf23547efda31d28c3d4c725c827", "message": "#10195 remove some unused props", "committedDate": "2020-11-25T17:58:20Z", "type": "commit"}, {"oid": "ed8e835e3383e86a5a3913176a045d09ab665890", "url": "https://github.com/metasfresh/metasfresh/commit/ed8e835e3383e86a5a3913176a045d09ab665890", "message": "#10195 add more tables tests (with included views/qa)", "committedDate": "2020-11-25T20:12:20Z", "type": "commit"}, {"oid": "e1927a5ba383020193f8154a6aebb6f5f65ce521", "url": "https://github.com/metasfresh/metasfresh/commit/e1927a5ba383020193f8154a6aebb6f5f65ce521", "message": "#10195 test for deselecting rows", "committedDate": "2020-11-26T15:40:43Z", "type": "commit"}, {"oid": "ee122d2f47e9fb448acfabb59549151221fdf0ee", "url": "https://github.com/metasfresh/metasfresh/commit/ee122d2f47e9fb448acfabb59549151221fdf0ee", "message": "#10195 QA actions tests", "committedDate": "2020-11-26T17:18:34Z", "type": "commit"}, {"oid": "62f6aff1cb12e58366224c2802a5f135ed76f4e9", "url": "https://github.com/metasfresh/metasfresh/commit/62f6aff1cb12e58366224c2802a5f135ed76f4e9", "message": "#10195 re-fix fetching parent's QA when child selection changes and add a unit test", "committedDate": "2020-11-30T10:24:59Z", "type": "commit"}, {"oid": "8300b5497b736a3a59df9603202eaa6dff487dd5", "url": "https://github.com/metasfresh/metasfresh/commit/8300b5497b736a3a59df9603202eaa6dff487dd5", "message": "#10195 cleanup and comments", "committedDate": "2020-11-30T15:36:55Z", "type": "commit"}, {"oid": "82bf6c8605ce3f54b390be7aeb8174ef0fe4dca2", "url": "https://github.com/metasfresh/metasfresh/commit/82bf6c8605ce3f54b390be7aeb8174ef0fe4dca2", "message": "#10195 unskip main reducer test", "committedDate": "2020-11-30T15:37:10Z", "type": "commit"}, {"oid": "072c5b29f30aa8fcba4474bad29a942a4591b351", "url": "https://github.com/metasfresh/metasfresh/commit/072c5b29f30aa8fcba4474bad29a942a4591b351", "message": "#10195 quick actions reducer test", "committedDate": "2020-11-30T15:37:27Z", "type": "commit"}, {"oid": "64d668e467cb34401241f05f0ba7774bea98c8c4", "url": "https://github.com/metasfresh/metasfresh/commit/64d668e467cb34401241f05f0ba7774bea98c8c4", "message": "#10195 return promises from some AC's for easier testing", "committedDate": "2020-11-30T19:11:05Z", "type": "commit"}, {"oid": "c73eb4b738b9f3b974de6732ea7320caabff4a0b", "url": "https://github.com/metasfresh/metasfresh/commit/c73eb4b738b9f3b974de6732ea7320caabff4a0b", "message": "#10195 update tests and get rid of some suppressed errors", "committedDate": "2020-11-30T19:12:07Z", "type": "commit"}, {"oid": "f60d47d916ac31d485bde13cc63abb0804c18f7b", "url": "https://github.com/metasfresh/metasfresh/commit/f60d47d916ac31d485bde13cc63abb0804c18f7b", "message": "#10195 fix linter errors", "committedDate": "2020-12-01T09:58:30Z", "type": "commit"}, {"oid": "71c927502ca7e7de98613d6dbd87661bbf2b1e47", "url": "https://github.com/metasfresh/metasfresh/commit/71c927502ca7e7de98613d6dbd87661bbf2b1e47", "message": "#10195 fix errors in Modal tests", "committedDate": "2020-12-01T14:35:02Z", "type": "commit"}, {"oid": "ba2e731c2f4cc5469e21b218a6a5706b0cb05c86", "url": "https://github.com/metasfresh/metasfresh/commit/ba2e731c2f4cc5469e21b218a6a5706b0cb05c86", "message": "#10195 rewrite QA fetching to properly account for included views\n#10195 simplify logic a bit", "committedDate": "2020-12-03T15:52:50Z", "type": "commit"}, {"oid": "963c5b8c645d6389fb84564b693b45826f2959eb", "url": "https://github.com/metasfresh/metasfresh/commit/963c5b8c645d6389fb84564b693b45826f2959eb", "message": "#10195 update and remove/add tests", "committedDate": "2020-12-03T15:53:12Z", "type": "commit"}, {"oid": "cd3168d4dce0c0fb06018576cd18c134d1136b13", "url": "https://github.com/metasfresh/metasfresh/commit/cd3168d4dce0c0fb06018576cd18c134d1136b13", "message": "#10195 fix linter errors", "committedDate": "2020-12-04T13:16:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MjQ0Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/10308#discussion_r537252443", "bodyText": "string", "author": "petrican", "createdAt": "2020-12-07T06:05:27Z", "path": "frontend/src/actions/Actions.js", "diffHunk": "@@ -11,131 +11,166 @@ import {\n } from '../constants/ActionTypes';\n \n import { getQuickActionsId, getQuickActions } from '../reducers/actionsHandler';\n-import { getTable } from '../reducers/tables';\n+import { getTable, getTableId } from '../reducers/tables';\n import { getView } from '../reducers/viewHandler';\n \n /*\n- * @method getTableActions\n+ * @method fetchQuickActions\n  * @summary Action creator that calls the quick actions fetch internally for\n  * when we're updating the table selection \n  \n- * @param {string} tableId\n  * @param {number} windowId\n  * @param {string} viewId\n  * @param {boolean} isModal\n+ * @param {string} viewProfileId\n  */\n-export function getTableActions({ tableId, windowId, viewId, isModal }) {\n+export function fetchQuickActions({\n+  windowId,\n+  viewId,\n+  isModal,\n+  viewProfileId = null,\n+}) {\n   return (dispatch, getState) => {\n+    let actionPromises = null;\n     const state = getState();\n-    const table = getTable(state, tableId);\n-    const selectedIds = table.selected;\n-    const { includedView } = state.viewHandler;\n-    const viewProfileId =\n-      includedView.windowId === windowId ? includedView.viewProfileId : null;\n-    let fetchActions = true;\n-\n-    if (viewId) {\n-      const quickActionsId = getQuickActionsId({\n-        windowId,\n-        viewId,\n-      });\n-      const quickActions = getQuickActions(state, quickActionsId);\n-      fetchActions = quickActions.pending === false;\n-    }\n+    const includedView = state.viewHandler.includedView.windowId\n+      ? state.viewHandler.includedView\n+      : null;\n \n-    if (fetchActions) {\n-      dispatch(\n-        fetchQuickActions({\n-          windowId,\n-          viewId,\n-          viewProfileId,\n-          selectedIds,\n-        })\n-      );\n+    if (includedView) {\n+      viewProfileId = viewProfileId || includedView.viewProfileId;\n+\n+      const isParent = includedView.parentId === windowId;\n+      const isChild = includedView.windowId === windowId;\n+\n+      if (isParent || isChild) {\n+        const requests = dispatch(\n+          getQuickActionRequests({\n+            windowId,\n+            viewId,\n+            includedView,\n+            viewProfileId,\n+            isModal,\n+            isParent,\n+          })\n+        );\n+\n+        actionPromises = [].concat(requests);\n+      }\n+    } else {\n+      const tableId = getTableId({ windowId, viewId });\n+      const table = getTable(state, tableId);\n+\n+      actionPromises = [\n+        dispatch(\n+          requestQuickActions({\n+            windowId,\n+            viewId,\n+            selectedIds: table.selected,\n+            viewProfileId,\n+          })\n+        ),\n+      ];\n     }\n \n-    dispatch(\n-      fetchIncludedQuickActions({\n-        windowId,\n-        selectedIds,\n-        isModal,\n-      })\n-    );\n+    return Promise.all(actionPromises);\n   };\n }\n \n /*\n  * @method fetchIncludedQuickActions\n- * @summary Action creator that calls the quick actions fetch internally for parent/child\n- * quick actions, when a table selection has changed\n+ * @summary Action creator that calls the creates the requests for included quick actions\n  *\n- * @param {string} windowId\n- * @param {array} selectedIds\n+ * @param {number} windowId", "originalCommit": "cd3168d4dce0c0fb06018576cd18c134d1136b13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMwMTQzNA==", "url": "https://github.com/metasfresh/metasfresh/pull/10308#discussion_r537301434", "bodyText": "windowid is a number. Viewid is a string", "author": "siemiatj", "createdAt": "2020-12-07T08:04:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MjQ0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU4MDYyNQ==", "url": "https://github.com/metasfresh/metasfresh/pull/10308#discussion_r537580625", "bodyText": "IMPORTANT: pls always handle IDs are plain Strings.\nThis will allow the backend to change the way we handle IDs or their structure without any notice.", "author": "teosarca", "createdAt": "2020-12-07T15:08:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MjQ0Mw=="}], "type": "inlineReview"}]}