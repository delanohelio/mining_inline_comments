{"pr_number": 9876, "pr_title": "Fix possible timing problem for C_Invoice allocation", "pr_createdAt": "2020-09-02T10:19:33Z", "pr_url": "https://github.com/metasfresh/metasfresh/pull/9876", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4ODIwOQ==", "url": "https://github.com/metasfresh/metasfresh/pull/9876#discussion_r481988209", "bodyText": "why do we have to call testAndMarkAsPaid again? we are already calling it at line 92....\nI think we shall try calling it only once.", "author": "teosarca", "createdAt": "2020-09-02T11:11:05Z", "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "diffHunk": "@@ -86,24 +86,26 @@ public C_Invoice(@NonNull final PaymentReservationService paymentReservationServ\n \t\tthis.paymentReservationService = paymentReservationService;\n \t}\n \n-\t@DocValidate(timings = { ModelValidator.TIMING_BEFORE_COMPLETE })\n-\tpublic void onBeforeComplete(final I_C_Invoice invoice)\n-\t{\n-\t\tallocateInvoiceAgainstCreditMemo(invoice);\n-\t\tlinkInvoiceToPaymentIfNeeded(invoice);\n-\t}\n-\n \t@DocValidate(timings = { ModelValidator.TIMING_AFTER_COMPLETE })\n \tpublic void onAfterComplete(final I_C_Invoice invoice)\n \t{\n-\t\tmarkAsPaid(invoice);\n+\t\ttestAndMarkAsPaid(invoice);\n+\t\tallocateInvoiceAgainstCreditMemo(invoice);\n+\t\tlinkInvoiceToPaymentIfNeeded(invoice);\n \t\tallocateInvoiceAgainstPaymentIfNeeded(invoice);\n+\t\tautoAllocateAvailablePayments(invoice);\n \t\tcaptureMoneyIfNeeded(invoice);\n \t\tensureUOMsAreNotNull(invoice);\n \n \t\tC_Invoice_CreateExportData.scheduleOnTrxCommit(invoice);\n \t}\n \n+\tprivate void autoAllocateAvailablePayments(final I_C_Invoice invoice)\n+\t{\n+\t\tallocationBL.autoAllocateAvailablePayments(invoice);\n+\t\ttestAndMarkAsPaid(invoice);", "originalCommit": "53c5cf3f6f44083a422a82ec088938ad82a92e2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4ODU1Mw==", "url": "https://github.com/metasfresh/metasfresh/pull/9876#discussion_r481988553", "bodyText": "ahh, and here again", "author": "teosarca", "createdAt": "2020-09-02T11:11:45Z", "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "diffHunk": "@@ -236,6 +238,7 @@ private void allocateInvoiceAgainstCreditMemo(final I_C_Invoice creditMemo)\n \t\t\t// Allocate the minimum between parent invoice open amt and what is left of the creditMemo's grand Total\n \t\t\tinvoiceBL.allocateCreditMemo(parentInvoice, creditMemo, amtToAllocate);\n \t\t}\n+\t\ttestAndMarkAsPaid(creditMemo);", "originalCommit": "53c5cf3f6f44083a422a82ec088938ad82a92e2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4OTA5Nw==", "url": "https://github.com/metasfresh/metasfresh/pull/9876#discussion_r481989097", "bodyText": "and again", "author": "teosarca", "createdAt": "2020-09-02T11:12:56Z", "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "diffHunk": "@@ -293,20 +296,22 @@ private void linkInvoiceToPaymentIfNeeded(final I_C_Invoice invoice)\n \t\t\tpaymentDAO.save(payment);\n \n \t\t\tallocationBL.autoAllocateSpecificPayment(invoice, payment, true);\n+\t\t\ttestAndMarkAsPaid(invoice);\n \t\t}\n \t}\n \n-\tprivate void allocateInvoiceAgainstPaymentIfNeeded(final I_C_Invoice invoice)\n+\tprivate void allocateInvoiceAgainstPaymentIfNeeded(@NonNull final I_C_Invoice invoice)\n \t{\n \t\tfinal I_C_Order order = invoice.getC_Order();\n \t\tif (paymentBL.canAllocateOrderPaymentToInvoice(order))\n \t\t{\n \t\t\tfinal I_C_Payment payment = order.getC_Payment();\n \t\t\tallocationBL.autoAllocateSpecificPayment(invoice, payment, true);\n+\t\t\ttestAndMarkAsPaid(invoice);", "originalCommit": "53c5cf3f6f44083a422a82ec088938ad82a92e2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk4OTE4NQ==", "url": "https://github.com/metasfresh/metasfresh/pull/9876#discussion_r481989185", "bodyText": "and again", "author": "teosarca", "createdAt": "2020-09-02T11:13:10Z", "path": "backend/de.metas.business/src/main/java/de/metas/invoice/interceptor/C_Invoice.java", "diffHunk": "@@ -293,20 +296,22 @@ private void linkInvoiceToPaymentIfNeeded(final I_C_Invoice invoice)\n \t\t\tpaymentDAO.save(payment);\n \n \t\t\tallocationBL.autoAllocateSpecificPayment(invoice, payment, true);\n+\t\t\ttestAndMarkAsPaid(invoice);", "originalCommit": "53c5cf3f6f44083a422a82ec088938ad82a92e2a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3b8f236560b64f45bea0448a697f0bd6966cf8be", "url": "https://github.com/metasfresh/metasfresh/commit/3b8f236560b64f45bea0448a697f0bd6966cf8be", "message": "Fix possible timing problem for C_Invoice allocation\n\nhttps://github.com/metasfresh/metasfresh/issues/7171", "committedDate": "2020-09-03T04:46:59Z", "type": "commit"}, {"oid": "e0d732f8b79933f68e57a3afd320df976f380ab4", "url": "https://github.com/metasfresh/metasfresh/commit/e0d732f8b79933f68e57a3afd320df976f380ab4", "message": "Use field for service access\n\nhttps://github.com/metasfresh/metasfresh/issues/7171", "committedDate": "2020-09-03T04:46:59Z", "type": "commit"}, {"oid": "0968b6790793f57020a6b138da8165373148a4cb", "url": "https://github.com/metasfresh/metasfresh/commit/0968b6790793f57020a6b138da8165373148a4cb", "message": "Fix NPE\n\nhttps://github.com/metasfresh/metasfresh/issues/7171", "committedDate": "2020-09-03T04:47:19Z", "type": "commit"}, {"oid": "d5f2575379d2a352d30c060841be93d61e0f1758", "url": "https://github.com/metasfresh/metasfresh/commit/d5f2575379d2a352d30c060841be93d61e0f1758", "message": "Add nullability annotations\n\nhttps://github.com/metasfresh/metasfresh/issues/7171", "committedDate": "2020-09-03T04:47:22Z", "type": "commit"}, {"oid": "2d75273f60b4dbf1dbedf61e4dd082ef0c55b217", "url": "https://github.com/metasfresh/metasfresh/commit/2d75273f60b4dbf1dbedf61e4dd082ef0c55b217", "message": "Add test which checks for null\n\nhttps://github.com/metasfresh/metasfresh/issues/7171", "committedDate": "2020-09-03T04:47:22Z", "type": "commit"}, {"oid": "09a235b8ae98532f2d8685c33107471e73523d5b", "url": "https://github.com/metasfresh/metasfresh/commit/09a235b8ae98532f2d8685c33107471e73523d5b", "message": "Add a BIG FIXME\n\nhttps://github.com/metasfresh/metasfresh/issues/7171", "committedDate": "2020-09-03T04:47:22Z", "type": "commit"}, {"oid": "09a235b8ae98532f2d8685c33107471e73523d5b", "url": "https://github.com/metasfresh/metasfresh/commit/09a235b8ae98532f2d8685c33107471e73523d5b", "message": "Add a BIG FIXME\n\nhttps://github.com/metasfresh/metasfresh/issues/7171", "committedDate": "2020-09-03T04:47:22Z", "type": "forcePushed"}]}