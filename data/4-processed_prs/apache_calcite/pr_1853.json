{"pr_number": 1853, "pr_title": "[CALCITE-3851] Replace the node importance map with a set for pruned nodes", "pr_createdAt": "2020-03-10T12:55:49Z", "pr_url": "https://github.com/apache/calcite/pull/1853", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5NDkwMQ==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r390494901", "bodyText": "You can remove this method.", "author": "hsyuan", "createdAt": "2020-03-10T17:41:24Z", "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "diffHunk": "@@ -917,13 +917,13 @@ RelNode changeTraitsUsingConverters(\n   public void setImportance(RelNode rel, double importance) {\n     assert rel != null;\n     if (importance == 0d) {\n-      relImportances.put(rel, importance);\n+      nodesToSkip.add(rel);\n     }\n   }\n \n   Double getImportance(RelNode rel) {\n     assert rel != null;\n-    return relImportances.get(rel);\n+    return nodesToSkip.contains(rel) ? 0d : null;\n   }", "originalCommit": "5ba9b3436bac0e0996ae2efa4791e81388cd0ce8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4NDk4NQ==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r391384985", "bodyText": "Removed. Thanks for the good suggestion.", "author": "liyafan82", "createdAt": "2020-03-12T03:35:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5NDkwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5NTA1MA==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r390495050", "bodyText": "prunedNodes", "author": "hsyuan", "createdAt": "2020-03-10T17:41:37Z", "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "diffHunk": "@@ -135,16 +135,16 @@\n       new IdentityHashMap<>();\n \n   /**\n-   * The importance of relational expressions.\n+   * The nodes with zero importance.\n    *\n-   * <p>The map contains only RelNodes whose importance has been overridden\n+   * <p>The set contains only RelNodes whose importance has been set to 0\n    * using {@link RelOptPlanner#setImportance(RelNode, double)}. Other\n    * RelNodes are presumed to have 'normal' importance.\n    *\n    * <p>If a RelNode has 0 importance, all {@link RelOptRuleCall}s using it\n    * are ignored, and future RelOptRuleCalls are not queued up.\n    */\n-  final Map<RelNode, Double> relImportances = new HashMap<>();\n+  final Set<RelNode> nodesToSkip = new HashSet<>();", "originalCommit": "5ba9b3436bac0e0996ae2efa4791e81388cd0ce8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4NTA4Mg==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r391385082", "bodyText": "Sounds good. Revised accordingly.", "author": "liyafan82", "createdAt": "2020-03-12T03:35:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5NTA1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1NTYwNQ==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r392455605", "bodyText": "Is it possible to add a API to RelNode? e.g.\nvoid RelNode.setPruned();\nboolean RelNode.isPruned();", "author": "hsyuan", "createdAt": "2020-03-13T20:31:22Z", "path": "core/src/main/java/org/apache/calcite/plan/AbstractRelOptPlanner.java", "diffHunk": "@@ -221,9 +221,13 @@ public long getRelMetadataTimestamp(RelNode rel) {\n     return 0;\n   }\n \n+  @Deprecated\n   public void setImportance(RelNode rel, double importance) {\n   }\n \n+  public void pruneNode(RelNode rel) {\n+  }", "originalCommit": "ffb0b11a51cd7ce4f57f2c60a2aebdc18217a8a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxNjIxNQ==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r392516215", "bodyText": "I suggest just name it \"prune\", since it's pretty clear that you are going to prune a RelNode by looking at the parameter. It's also consistent with the original naming (setImportance() not setNodeImportance()).", "author": "xndai", "createdAt": "2020-03-13T22:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1NTYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU3MDgwNw==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r392570807", "bodyText": "@xndai Revised. Thanks for your good suggestion.", "author": "liyafan82", "createdAt": "2020-03-14T09:18:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1NTYwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1NzQ0NA==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r392457444", "bodyText": "change to pruned", "author": "hsyuan", "createdAt": "2020-03-13T20:34:16Z", "path": "core/src/main/java/org/apache/calcite/plan/volcano/VolcanoPlanner.java", "diffHunk": "@@ -1003,9 +999,8 @@ private void dumpSets(PrintWriter pw) {\n               }\n             }\n           }\n-          Double importance = relImportances.get(rel);\n-          if (importance != null) {\n-            pw.print(\", importance=\" + importance);\n+          if (prunedNodes.contains(rel)) {\n+            pw.print(\", importance=0\");", "originalCommit": "ffb0b11a51cd7ce4f57f2c60a2aebdc18217a8a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU3MDgxNw==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r392570817", "bodyText": "Revised. Thank you.", "author": "liyafan82", "createdAt": "2020-03-14T09:18:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1NzQ0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyOTg3MQ==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r393429871", "bodyText": "Why change it ?", "author": "chunweilei", "createdAt": "2020-03-17T03:46:33Z", "path": "core/src/main/java/org/apache/calcite/plan/volcano/RuleQueue.java", "diffHunk": "@@ -265,7 +264,7 @@ private void checkDuplicateSubsets(Deque<RelSubset> subsets,\n    * for a particular\n    * {@link VolcanoPlannerPhase phase of the planner's execution}.\n    */\n-  private static class PhaseMatchList {\n+  static class PhaseMatchList {\n     /**", "originalCommit": "aa691ecbd3486e9630c8492521179c783cbfdefe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NDI2MQ==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r394064261", "bodyText": "This class is referenced in a test case.", "author": "liyafan82", "createdAt": "2020-03-18T01:51:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyOTg3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA5MDY3OA==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r394090678", "bodyText": "I don't think it is a good practice to modify it just for the test case. Can we change the test case?", "author": "chunweilei", "createdAt": "2020-03-18T03:41:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyOTg3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI5NDE4NQ==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r394294185", "bodyText": "Sure. Sounds reasonable. I have revised the test case, and restored the modifier.", "author": "liyafan82", "createdAt": "2020-03-18T12:00:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyOTg3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ1MTM2NQ==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r393451365", "bodyText": "needs update", "author": "hsyuan", "createdAt": "2020-03-17T05:26:09Z", "path": "core/src/main/java/org/apache/calcite/plan/RelOptPlanner.java", "diffHunk": "@@ -307,9 +307,24 @@ RelNode register(\n    *\n    * @param rel        Relational expression\n    * @param importance Importance\n+   *\n+   * @deprecated This API will be removed in a future release, as we no longer\n+   * support the concept of node importance. Please use\n+   * {@link RelOptPlanner#pruneNode(RelNode)} method instead.", "originalCommit": "aa691ecbd3486e9630c8492521179c783cbfdefe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA2NDMyMA==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r394064320", "bodyText": "Nice catch. Thank you.", "author": "liyafan82", "createdAt": "2020-03-18T01:51:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ1MTM2NQ=="}], "type": "inlineReview"}, {"oid": "c97d2cd29435beea895eecc648fca6d1166507c8", "url": "https://github.com/apache/calcite/commit/c97d2cd29435beea895eecc648fca6d1166507c8", "message": "[CALCITE-3851] Replace the node importance map with a set for pruned nodes", "committedDate": "2020-03-17T09:27:30Z", "type": "forcePushed"}, {"oid": "23207422ba9bb83827c602339149f13029d64fb3", "url": "https://github.com/apache/calcite/commit/23207422ba9bb83827c602339149f13029d64fb3", "message": "[CALCITE-3851] Replace the node importance map with a set for pruned nodes", "committedDate": "2020-03-18T11:58:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0Nzg3NQ==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r395447875", "bodyText": "Mark a deprecation version here", "author": "danny0405", "createdAt": "2020-03-20T05:46:35Z", "path": "core/src/main/java/org/apache/calcite/plan/AbstractRelOptPlanner.java", "diffHunk": "@@ -221,9 +221,13 @@ public long getRelMetadataTimestamp(RelNode rel) {\n     return 0;\n   }\n \n+  @Deprecated\n   public void setImportance(RelNode rel, double importance) {", "originalCommit": "23207422ba9bb83827c602339149f13029d64fb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1NzkxNw==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r395457917", "bodyText": "Marked. Thanks for your kind reminder.", "author": "liyafan82", "createdAt": "2020-03-20T06:38:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0Nzg3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0Nzk3Ng==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r395447976", "bodyText": "Missing deprecation version.", "author": "danny0405", "createdAt": "2020-03-20T05:47:06Z", "path": "core/src/main/java/org/apache/calcite/plan/RelOptPlanner.java", "diffHunk": "@@ -307,9 +307,24 @@ RelNode register(\n    *\n    * @param rel        Relational expression\n    * @param importance Importance\n+   *\n+   * @deprecated This API will be removed in a future release, as we no longer\n+   * support the concept of node importance. Please use\n+   * {@link RelOptPlanner#prune(RelNode)} method instead.\n    */\n+  @Deprecated", "originalCommit": "23207422ba9bb83827c602339149f13029d64fb3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1ODA0OA==", "url": "https://github.com/apache/calcite/pull/1853#discussion_r395458048", "bodyText": "Revised. Thank you.", "author": "liyafan82", "createdAt": "2020-03-20T06:39:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0Nzk3Ng=="}], "type": "inlineReview"}, {"oid": "b147bfb1ba85763d594ec9757772317455e84366", "url": "https://github.com/apache/calcite/commit/b147bfb1ba85763d594ec9757772317455e84366", "message": "[CALCITE-3851] Replace the node importance map with a set for pruned nodes", "committedDate": "2020-03-20T06:37:21Z", "type": "forcePushed"}, {"oid": "877b3e605b7e8b24d402c85cac6f27994e142e8b", "url": "https://github.com/apache/calcite/commit/877b3e605b7e8b24d402c85cac6f27994e142e8b", "message": "[CALCITE-3851] Replace the node importance map with a set for pruned nodes", "committedDate": "2020-04-01T03:38:54Z", "type": "commit"}, {"oid": "877b3e605b7e8b24d402c85cac6f27994e142e8b", "url": "https://github.com/apache/calcite/commit/877b3e605b7e8b24d402c85cac6f27994e142e8b", "message": "[CALCITE-3851] Replace the node importance map with a set for pruned nodes", "committedDate": "2020-04-01T03:38:54Z", "type": "forcePushed"}]}