{"pr_number": 1725, "pr_title": "[CALCITE-3694] Implement SINH function", "pr_createdAt": "2020-01-06T16:16:45Z", "pr_url": "https://github.com/apache/calcite/pull/1725", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYyMDU3NQ==", "url": "https://github.com/apache/calcite/pull/1725#discussion_r363620575", "bodyText": "is SINH part of standard SQL ?", "author": "yanlin-Lynn", "createdAt": "2020-01-07T07:30:30Z", "path": "core/src/main/java/org/apache/calcite/sql/fun/SqlStdOperatorTable.java", "diffHunk": "@@ -1705,6 +1705,7 @@ public SqlOperandCountRange getOperandCountRange() {\n           OperandTypes.NUMERIC,\n           SqlFunctionCategory.NUMERIC);\n \n+  public static final SqlFunction SINH = SqlLibraryOperators.SINH;", "originalCommit": "09f7011c831c05bf274393e071d1e67fb8d037e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNTQ3OQ==", "url": "https://github.com/apache/calcite/pull/1725#discussion_r363635479", "bodyText": "is SINH part of standard SQL ?\n\nActually I want to support standard SQL at the same time.", "author": "XuQianJin-Stars", "createdAt": "2020-01-07T08:24:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYyMDU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1NDc5Mg==", "url": "https://github.com/apache/calcite/pull/1725#discussion_r363654792", "bodyText": "Well, I think if it's not part of standard SQL, it should not be in SqlStdOperatorTable", "author": "yanlin-Lynn", "createdAt": "2020-01-07T09:18:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYyMDU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0MzM0Mg==", "url": "https://github.com/apache/calcite/pull/1725#discussion_r364143342", "bodyText": "Well, I think if it's not part of standard SQL, it should not be in SqlStdOperatorTable\n\nhi @yanlin-Lynn I have changed it.", "author": "XuQianJin-Stars", "createdAt": "2020-01-08T09:47:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYyMDU3NQ=="}], "type": "inlineReview"}, {"oid": "b3bd01f2021427ce6cb266174e04d0f85ed66a77", "url": "https://github.com/apache/calcite/commit/b3bd01f2021427ce6cb266174e04d0f85ed66a77", "message": "[CALCITE-3694] Implement SINH function", "committedDate": "2020-01-07T14:11:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI4MTU4Ng==", "url": "https://github.com/apache/calcite/pull/1725#discussion_r365281586", "bodyText": "Lets maintain alphabetical order :)", "author": "ritesh-kapoor", "createdAt": "2020-01-10T15:15:27Z", "path": "site/_docs/reference.md", "diffHunk": "@@ -2325,6 +2325,7 @@ semantics.\n | o | RTRIM(string)                                  | Returns *string* with all blanks removed from the end\n | m p | SHA1(string)                                 | Calculates a SHA-1 hash value of *string* and returns it as a hex string\n | m o p | SOUNDEX(string)                            | Returns the phonetic representation of *string*; throws if *string* is encoded with multi-byte encoding such as UTF-8\n+| o | SINH(numeric)                                  | Returns the hyperbolic sine of *numeric*", "originalCommit": "9ed76510ac320c15d6033050bf4193b90cbb61b4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d8ae8babe01863a89f8c9ec9cf6eaaaf72b824a2", "url": "https://github.com/apache/calcite/commit/d8ae8babe01863a89f8c9ec9cf6eaaaf72b824a2", "message": "[CALCITE-3694] Implement SINH function", "committedDate": "2020-03-13T12:32:11Z", "type": "forcePushed"}, {"oid": "e77c584fde3e3e905f1692395944ff59b30ca941", "url": "https://github.com/apache/calcite/commit/e77c584fde3e3e905f1692395944ff59b30ca941", "message": "[CALCITE-3694] Implement SINH function", "committedDate": "2020-03-13T13:10:16Z", "type": "commit"}, {"oid": "e77c584fde3e3e905f1692395944ff59b30ca941", "url": "https://github.com/apache/calcite/commit/e77c584fde3e3e905f1692395944ff59b30ca941", "message": "[CALCITE-3694] Implement SINH function", "committedDate": "2020-03-13T13:10:16Z", "type": "forcePushed"}]}