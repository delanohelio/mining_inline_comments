{"pr_number": 2241, "pr_title": "[CALCITE-4374] Support materialized view recognition when query disti\u2026", "pr_createdAt": "2020-11-03T09:26:49Z", "pr_url": "https://github.com/apache/calcite/pull/2241", "timeline": [{"oid": "407f95f34b7d27cd8b89ab215e354c7c68c0d9bb", "url": "https://github.com/apache/calcite/commit/407f95f34b7d27cd8b89ab215e354c7c68c0d9bb", "message": "[CALCITE-4374] Support materialized view recognition when query distinct aggregate on target GROUP BY column (xzh)", "committedDate": "2020-11-03T10:00:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5NDIyOA==", "url": "https://github.com/apache/calcite/pull/2241#discussion_r516694228", "bodyText": "What about other args ?", "author": "yanlin-Lynn", "createdAt": "2020-11-03T14:11:51Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1931,6 +1931,18 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n         if (aggregateCall.isDistinct()) {\n+          int aggIndex = aggregateCall.getArgList().get(0);", "originalCommit": "407f95f34b7d27cd8b89ab215e354c7c68c0d9bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjczNjMwOQ==", "url": "https://github.com/apache/calcite/pull/2241#discussion_r516736309", "bodyText": "Thanks, update the code.", "author": "xy2953396112", "createdAt": "2020-11-03T15:06:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5NDIyOA=="}], "type": "inlineReview"}, {"oid": "2e3b15be1ba624ca49a97b8566226a3c67a98071", "url": "https://github.com/apache/calcite/commit/2e3b15be1ba624ca49a97b8566226a3c67a98071", "message": "[CALCITE-4374] Support materialized view recognition when query distinct aggregate on target GROUP BY column (xzh)", "committedDate": "2020-11-03T14:19:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NjQ4Mw==", "url": "https://github.com/apache/calcite/pull/2241#discussion_r517086483", "bodyText": "Could you please clarify why the size of the arguments has to be 1?", "author": "chunweilei", "createdAt": "2020-11-04T04:06:45Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1931,6 +1931,22 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n         if (aggregateCall.isDistinct()) {\n+          if (aggregateCall.getArgList().size() == 1) {\n+            int aggIndex = aggregateCall.getArgList().get(0);\n+            if (target.groupSet.asSet().contains(aggIndex)) {", "originalCommit": "2e3b15be1ba624ca49a97b8566226a3c67a98071", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzExODc2NA==", "url": "https://github.com/apache/calcite/pull/2241#discussion_r517118764", "bodyText": "The aggregate function containing the distinct keyword has only one parameter. Check the parameters here.", "author": "xy2953396112", "createdAt": "2020-11-04T06:20:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NjQ4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAyOTQ2MA==", "url": "https://github.com/apache/calcite/pull/2241#discussion_r518029460", "bodyText": "Thanks,update the code.", "author": "xy2953396112", "createdAt": "2020-11-05T12:56:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA4NjQ4Mw=="}], "type": "inlineReview"}, {"oid": "56efb7fafc915a99a0b35a1c0ada592e9723254e", "url": "https://github.com/apache/calcite/commit/56efb7fafc915a99a0b35a1c0ada592e9723254e", "message": "[CALCITE-4374] Support materialized view recognition when query distinct aggregate on target GROUP BY column (xzh)", "committedDate": "2020-11-05T02:07:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc3Mzc1OQ==", "url": "https://github.com/apache/calcite/pull/2241#discussion_r517773759", "bodyText": "target.groupSet.asList() can be replaced by targetGroupByIndexList?\n[1]https://github.com/apache/calcite/pull/2241/files#diff-61f815e420e8c1c99c7f502f8105d6d2f91724a3bd0cb5ff4300a23ac96f527cR1898", "author": "chunweilei", "createdAt": "2020-11-05T03:36:39Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1930,7 +1930,20 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       }\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n-        if (aggregateCall.isDistinct()) {\n+        if (aggregateCall.isDistinct() && aggregateCall.getArgList().size() == 1) {\n+          int aggIndex = aggregateCall.getArgList().get(0);\n+          if (target.groupSet.asSet().contains(aggIndex)) {\n+            int newIndex = target.groupSet.asList().indexOf(aggIndex);\n+            aggregateCalls.add(\n+                AggregateCall.create(aggregateCall.getAggregation(),", "originalCommit": "56efb7fafc915a99a0b35a1c0ada592e9723254e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc3NDE4MQ==", "url": "https://github.com/apache/calcite/pull/2241#discussion_r517774181", "bodyText": "We'd better use a variable to represent target.groupSet.asSet() in case we have to transform it again and again.", "author": "chunweilei", "createdAt": "2020-11-05T03:38:21Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1930,7 +1930,20 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       }\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n-        if (aggregateCall.isDistinct()) {\n+        if (aggregateCall.isDistinct() && aggregateCall.getArgList().size() == 1) {\n+          int aggIndex = aggregateCall.getArgList().get(0);\n+          if (target.groupSet.asSet().contains(aggIndex)) {\n+            int newIndex = target.groupSet.asList().indexOf(aggIndex);", "originalCommit": "56efb7fafc915a99a0b35a1c0ada592e9723254e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAyOTcyNg==", "url": "https://github.com/apache/calcite/pull/2241#discussion_r518029726", "bodyText": "ok,Thanks.", "author": "xy2953396112", "createdAt": "2020-11-05T12:56:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc3NDE4MQ=="}], "type": "inlineReview"}, {"oid": "e46c541c470371ceb0a317e1af390b3a0788dae4", "url": "https://github.com/apache/calcite/commit/e46c541c470371ceb0a317e1af390b3a0788dae4", "message": "[CALCITE-4374] Support materialized view recognition when query distinct aggregate on target GROUP BY column (xzh)", "committedDate": "2020-11-05T12:51:41Z", "type": "forcePushed"}, {"oid": "0a0792c40479a272c3c70eda1de74c38f9b68679", "url": "https://github.com/apache/calcite/commit/0a0792c40479a272c3c70eda1de74c38f9b68679", "message": "[CALCITE-4374] Support materialized view recognition when query distinct aggregate on target GROUP BY column (xzh)", "committedDate": "2020-11-05T12:54:30Z", "type": "forcePushed"}, {"oid": "30770f5c0b8a5c68190ddaef4e78b7fd1b9271f1", "url": "https://github.com/apache/calcite/commit/30770f5c0b8a5c68190ddaef4e78b7fd1b9271f1", "message": "[CALCITE-4374] Support materialized view recognition when query distinct aggregate on target GROUP BY columns (xzh)", "committedDate": "2020-11-05T13:41:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5NDE1Mg==", "url": "https://github.com/apache/calcite/pull/2241#discussion_r518494152", "bodyText": "if (targetGroupByIndexList.contains(aggIndex)) is not necessary.\nYou can do like this:\nfinal int newIndex = targetGroupByIndexList.indexOf(aggIndex);\nif (newIndex >=0 ) {\n   ......\n}", "author": "chunweilei", "createdAt": "2020-11-06T02:53:03Z", "path": "core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java", "diffHunk": "@@ -1930,7 +1929,20 @@ public static MutableRel unifyAggregates(MutableAggregate query,\n       }\n       final List<AggregateCall> aggregateCalls = new ArrayList<>();\n       for (AggregateCall aggregateCall : query.aggCalls) {\n-        if (aggregateCall.isDistinct()) {\n+        if (aggregateCall.isDistinct() && aggregateCall.getArgList().size() == 1) {\n+          int aggIndex = aggregateCall.getArgList().get(0);\n+          if (targetGroupByIndexList.contains(aggIndex)) {\n+            int newIndex = targetGroupByIndexList.indexOf(aggIndex);\n+            aggregateCalls.add(", "originalCommit": "30770f5c0b8a5c68190ddaef4e78b7fd1b9271f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU1ODM5Ng==", "url": "https://github.com/apache/calcite/pull/2241#discussion_r518558396", "bodyText": "ok, Thanks.", "author": "xy2953396112", "createdAt": "2020-11-06T07:05:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5NDE1Mg=="}], "type": "inlineReview"}, {"oid": "feca3102fdb6c42a96ca3d843c13083a0902df5c", "url": "https://github.com/apache/calcite/commit/feca3102fdb6c42a96ca3d843c13083a0902df5c", "message": "[CALCITE-4374] Support materialized view recognition when query distinct aggregate on target GROUP BY columns (xzh)", "committedDate": "2020-11-06T07:04:18Z", "type": "forcePushed"}, {"oid": "fae4769e8ed6e93db6a8d66ed275d6eabeb580f5", "url": "https://github.com/apache/calcite/commit/fae4769e8ed6e93db6a8d66ed275d6eabeb580f5", "message": "[CALCITE-4374] Support materialized view recognition when query distinct aggregate on target GROUP BY columns (xzh)", "committedDate": "2020-11-08T14:34:16Z", "type": "commit"}, {"oid": "fae4769e8ed6e93db6a8d66ed275d6eabeb580f5", "url": "https://github.com/apache/calcite/commit/fae4769e8ed6e93db6a8d66ed275d6eabeb580f5", "message": "[CALCITE-4374] Support materialized view recognition when query distinct aggregate on target GROUP BY columns (xzh)", "committedDate": "2020-11-08T14:34:16Z", "type": "forcePushed"}]}