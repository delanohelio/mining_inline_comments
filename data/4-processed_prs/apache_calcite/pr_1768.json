{"pr_number": 1768, "pr_title": "[CALCITE-3704] Implement STRCMP function", "pr_createdAt": "2020-01-18T06:18:25Z", "pr_url": "https://github.com/apache/calcite/pull/1768", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI2MjQ0Ng==", "url": "https://github.com/apache/calcite/pull/1768#discussion_r368262446", "bodyText": "IMO, the return type should be int.", "author": "chunweilei", "createdAt": "2020-01-19T03:17:24Z", "path": "core/src/main/java/org/apache/calcite/runtime/SqlFunctions.java", "diffHunk": "@@ -368,6 +368,11 @@ public static String space(int n) {\n     return repeat(\" \", n);\n   }\n \n+  /** SQL STRCMP(String,String) function. */\n+  public static Integer strcmp(String s0, String s1) {\n+    return (int) Math.signum(s1.compareTo(s0));", "originalCommit": "445d320ac60cf9591c55b7a1a5e95a70b2d3503c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2MjI2NQ==", "url": "https://github.com/apache/calcite/pull/1768#discussion_r368362265", "bodyText": "What does the the defined order mean? lexicographical order?", "author": "amaliujia", "createdAt": "2020-01-20T03:59:19Z", "path": "site/_docs/reference.md", "diffHunk": "@@ -2350,6 +2350,7 @@ semantics.\n | m o p | SOUNDEX(string)                            | Returns the phonetic representation of *string*; throws if *string* is encoded with multi-byte encoding such as UTF-8\n | m | SPACE(integer)                                 | Returns a string of *integer* spaces; returns an empty string if *integer* is less than 1\n | o | SUBSTR(string, position [, substringLength ]) | Returns a portion of *string*, beginning at character *position*, *substringLength* characters long. SUBSTR calculates lengths using characters as defined by the input character set\n+| m | STRCMP(string, string)                         | Returns 0 if both of the strings are same and returns -1 when the first argument is smaller than the second according to the defined order and 1 when the second one is smaller the first one.", "originalCommit": "0bcfd0c8479c8276e409d578d8858cc2f85c8dbd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwMTYwNw==", "url": "https://github.com/apache/calcite/pull/1768#discussion_r376301607", "bodyText": "Is the defined order customizable ?", "author": "danny0405", "createdAt": "2020-02-07T09:49:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2MjI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMzODM3Ng==", "url": "https://github.com/apache/calcite/pull/1768#discussion_r376338376", "bodyText": "Is the defined order customizable ?\n\nI noticed that this function of mysql can change the character set. as follows:\nmysql> SET @s1 = _utf8mb4 'x' COLLATE utf8mb4_0900_ai_ci;\nmysql> SET @S2 = _utf8mb4 'X' COLLATE utf8mb4_0900_ai_ci;\nmysql> SET @s3 = _utf8mb4 'x' COLLATE utf8mb4_0900_as_cs;\nmysql> SET @s4 = _utf8mb4 'X' COLLATE utf8mb4_0900_as_cs;\nmysql> SELECT STRCMP(@s1, @S2), STRCMP(@s3, @s4);\n+------------------+------------------+\n| STRCMP(@s1, @S2) | STRCMP(@s3, @s4) |\n+------------------+------------------+\n|                0 |               -1 |\n+------------------+------------------+", "author": "XuQianJin-Stars", "createdAt": "2020-02-07T11:12:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2MjI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY4Mzg3Mg==", "url": "https://github.com/apache/calcite/pull/1768#discussion_r376683872", "bodyText": "Can the Java compareTo take the charSet into account ?", "author": "danny0405", "createdAt": "2020-02-08T03:35:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2MjI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzNDA4Mg==", "url": "https://github.com/apache/calcite/pull/1768#discussion_r376834082", "bodyText": "Can the Java compareTo take the charSet into account ?\n\n    String chinese = \"\u4e2d\u6587\";\n    String gbkChinese = new String(chinese.getBytes(\"GBK\"), \"ISO-8859-1\");//\u8f6c\u6362\u6210gbk\u7f16\u7801\n    String unicodeChinese = new String(gbkChinese.getBytes(\"ISO-8859-1\"), \"GBK\");//java\u5185\u90e8\u7f16\u7801\n    System.out.println(unicodeChinese);//\u4e2d\u6587\n    String utf8Chinese = new String(unicodeChinese.getBytes(\"UTF-8\"), \"ISO-8859-1\");//utf--8\u7f16\u7801\n    System.out.println(utf8Chinese);//\u4e71\u7801\n    unicodeChinese = new String(utf8Chinese.getBytes(\"ISO-8859-1\"), \"UTF-8\");//java\u5185\u90e8\u7f16\u7801\n    System.out.println(unicodeChinese);//\u4e2d\u6587\n\n    String str1 = \"\u4e2d\u6587\";\n    String str2 = \"\u4e2d\u65871\";\n    String str3 = null;\n\n    System.out.println((int) Math.signum(str1.compareTo(chinese)));\n    System.out.println((int) Math.signum(str2.compareTo(chinese)));\n    System.out.println(str1.compareTo(chinese));\n    System.out.println(str2.compareTo(chinese));\n\nThis test compareTo is work.", "author": "XuQianJin-Stars", "createdAt": "2020-02-10T00:53:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2MjI2NQ=="}], "type": "inlineReview"}, {"oid": "4b32ac29d5acea02d66a5d42c61c9834b840a584", "url": "https://github.com/apache/calcite/commit/4b32ac29d5acea02d66a5d42c61c9834b840a584", "message": "[CALCITE-3704] Implement STRCMP function", "committedDate": "2020-02-07T11:09:37Z", "type": "commit"}, {"oid": "4b32ac29d5acea02d66a5d42c61c9834b840a584", "url": "https://github.com/apache/calcite/commit/4b32ac29d5acea02d66a5d42c61c9834b840a584", "message": "[CALCITE-3704] Implement STRCMP function", "committedDate": "2020-02-07T11:09:37Z", "type": "forcePushed"}]}