{"pr_number": 2245, "pr_title": "Fix grammatical errors", "pr_createdAt": "2020-11-05T05:09:00Z", "pr_url": "https://github.com/apache/calcite/pull/2245", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwMzQ4MA==", "url": "https://github.com/apache/calcite/pull/2245#discussion_r517903480", "bodyText": "Shouldn't we change the second part of the sentence too?\nyou probably need to write you a *user-defined operator*\n=>\nyou probably need to write a *user-defined operator*", "author": "rubenada", "createdAt": "2020-11-05T09:22:55Z", "path": "site/_docs/adapter.md", "diffHunk": "@@ -236,7 +236,7 @@ They are straightforward to write (you just write a Java class and register it\n in your schema) but do not offer much flexibility in the number and type of\n arguments, resolving overloaded functions, or deriving the return type.\n \n-It you want that flexibility, you probably need to write you a\n+If you want that flexibility, you probably need to write you a", "originalCommit": "2b934ab04510cba8e745df24f21267085a8503a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA3NzUyMA==", "url": "https://github.com/apache/calcite/pull/2245#discussion_r518077520", "bodyText": "Right.", "author": null, "createdAt": "2020-11-05T14:09:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkwMzQ4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYxNTYzMw==", "url": "https://github.com/apache/calcite/pull/2245#discussion_r518615633", "bodyText": "minor remark: I think the original one (in singular) was arguably more accurate, since the cost model is a single one in the whole process (as described in the previous paragraph). So, I'd lean towards leaving this sentence as it was.", "author": "rubenada", "createdAt": "2020-11-06T09:10:49Z", "path": "site/_docs/algebra.md", "diffHunk": "@@ -37,7 +37,7 @@ planner engine generates an alternative expression that has the same\n semantics as the original but a lower cost.\n \n The planning process is extensible. You can add your own relational\n-operators, planner rules, cost model, and statistics.\n+operators, planner rules, cost models, and statistics.", "originalCommit": "968cf6c29340ccc302bd3f0507436252fdae49c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0MDU3OQ==", "url": "https://github.com/apache/calcite/pull/2245#discussion_r518640579", "bodyText": "Reverted back. 8295c06", "author": null, "createdAt": "2020-11-06T09:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYxNTYzMw=="}], "type": "inlineReview"}, {"oid": "d8472a4b3ba49bd1094305fcfb4df82c6ebdc4d2", "url": "https://github.com/apache/calcite/commit/d8472a4b3ba49bd1094305fcfb4df82c6ebdc4d2", "message": "Fix grammatical errors in documentation (Geetha Rangaswamaiah)", "committedDate": "2020-11-09T12:54:57Z", "type": "commit"}]}