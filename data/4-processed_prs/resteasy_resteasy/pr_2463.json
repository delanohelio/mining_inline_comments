{"pr_number": 2463, "pr_title": "[RESTEASY-2943] Support reactive publishers at the engine level.", "pr_createdAt": "2020-07-03T15:10:22Z", "pr_url": "https://github.com/resteasy/resteasy/pull/2463", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYyODk0OA==", "url": "https://github.com/resteasy/resteasy/pull/2463#discussion_r449628948", "bodyText": "Of course, these are still TBD.", "author": "crankydillo", "createdAt": "2020-07-03T15:12:50Z", "path": "resteasy-client/src/main/java/org/jboss/resteasy/client/jaxrs/internal/PublisherRxInvokerImpl.java", "diffHunk": "@@ -0,0 +1,152 @@\n+package org.jboss.resteasy.client.jaxrs.internal;\n+\n+import javax.ws.rs.HttpMethod;\n+import javax.ws.rs.client.Entity;\n+import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.Response;\n+\n+import org.reactivestreams.Publisher;\n+\n+@SuppressWarnings(\"unchecked\")\n+public class PublisherRxInvokerImpl implements PublisherRxInvoker {\n+\n+    private final ClientInvocationBuilder builder;\n+\n+    public PublisherRxInvokerImpl(final ClientInvocationBuilder builder) {\n+        this.builder = builder;\n+    }\n+\n+    private ClientInvocation createClientInvocation(String method, Entity<?> entity)\n+    {\n+        ClientInvocation invocation = builder.createClientInvocation(builder.invocation);\n+        invocation.setMethod(method);\n+        invocation.setEntity(entity);\n+        return invocation;\n+    }\n+\n+    // TODO lots of code shared with CompletionStageRxInvokerImpl.  Isolate.\n+    @Override\n+    public Publisher<Response> get() {\n+        return createClientInvocation(HttpMethod.GET, null).submitRx();\n+    }\n+\n+    @Override\n+    public <T> Publisher<T> get(final Class<T> responseType) {\n+        return createClientInvocation(HttpMethod.GET, null).submitRx(responseType);\n+    }\n+\n+    @Override\n+    public <T> Publisher<T> get(final GenericType<T> responseType) {\n+        return createClientInvocation(HttpMethod.GET, null).submitRx(responseType);\n+    }\n+\n+    @Override\n+    public Publisher<Response> put(final Entity<?> entity) {\n+        return null;", "originalCommit": "6d3663eb910e4810359ff6a6a123b140dda35e51", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4df8a137ea0d3c41b3cdca5ec0d576ae09894dc9", "url": "https://github.com/resteasy/resteasy/commit/4df8a137ea0d3c41b3cdca5ec0d576ae09894dc9", "message": "Support reactive publishers at the engine level.\n\nThis is a PoC that aims to support a more 'direct' line from `rx(Class)`\nto a reactive 'provider'.  Some reactive implementations have features\nthat can be better leveraged with this.  In our case, we really need to\nleverage the end user's project-reactor 'context' when we build the\nclient.  This use case is exercised in the\nReactorTest#testSubscriberContext test.\n\nSome things like code reuse and test coverage have been postponed until\nI get some feedback on the concept.\n\nApologies for not writing up an issue.  We already had this code written\nso I'm hoping it better explains what we need than trying to write it up\nin an issue.  Just let me know what you'd like me to do that in that\nregard.", "committedDate": "2020-08-01T20:50:49Z", "type": "forcePushed"}, {"oid": "698af3697ff3ffee63cd32e308a267a0d2cccc45", "url": "https://github.com/resteasy/resteasy/commit/698af3697ff3ffee63cd32e308a267a0d2cccc45", "message": "[RESTEASY-2700] Make it more apparent that `ClientInvocation`...\n\nsupport for reactive functionality is contigent upon the HTTP engine.\nThis allows for clients to cleanly fall back to a `CompletionStage`\napproach if they think that is a good fit for their needs.", "committedDate": "2021-05-03T18:33:44Z", "type": "forcePushed"}, {"oid": "24e5bbfe219f048f2abd084251abcc5803a07393", "url": "https://github.com/resteasy/resteasy/commit/24e5bbfe219f048f2abd084251abcc5803a07393", "message": "Refactor RxJava2's SingleMonoRxImpl to leverage PublisherRxInvokerImpl..\n\nFor reactive HTTP client engines, this eliminates the completion stage\nbridge, which can be problematic for multiple reasons.", "committedDate": "2021-05-03T18:44:59Z", "type": "forcePushed"}, {"oid": "aa937a81e75c5988cd94bae1e0a6611d13d91bd1", "url": "https://github.com/resteasy/resteasy/commit/aa937a81e75c5988cd94bae1e0a6611d13d91bd1", "message": "Rename `PublisherRx...` to `UniPublisherRx...` ..\n\nto give a better indication these are 'publishers' of single items.", "committedDate": "2021-06-08T20:03:20Z", "type": "forcePushed"}, {"oid": "f96bbf8d7dee78d97761c544c431b3a143a2b85a", "url": "https://github.com/resteasy/resteasy/commit/f96bbf8d7dee78d97761c544c431b3a143a2b85a", "message": "Rename `PublisherRx...` to `UniPublisherRx...` ..\n\nto give a better indication these are 'publishers' of single items.", "committedDate": "2021-06-08T21:01:40Z", "type": "forcePushed"}, {"oid": "cf5bc152abf62f05652dcaa6276de8016f050512", "url": "https://github.com/resteasy/resteasy/commit/cf5bc152abf62f05652dcaa6276de8016f050512", "message": "Rename `PublisherRx...` to `UniPublisherRx...` ..\n\nto give a better indication these are 'publishers' of single items.", "committedDate": "2021-06-09T13:08:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NDgzNDE1NA==", "url": "https://github.com/resteasy/resteasy/pull/2463#discussion_r654834154", "bodyText": "Would it make sense to use Single.fromFuture() here?", "author": "ronsigal", "createdAt": "2021-06-19T19:57:23Z", "path": "resteasy-rxjava2/src/main/java/org/jboss/resteasy/rxjava2/SingleRxInvokerImpl.java", "diffHunk": "@@ -1,171 +1,189 @@\n package org.jboss.resteasy.rxjava2;\n \n-import javax.ws.rs.client.CompletionStageRxInvoker;\n import javax.ws.rs.client.Entity;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n \n+import io.reactivex.Flowable;\n import io.reactivex.Single;\n+import org.jboss.resteasy.client.jaxrs.internal.ClientInvocationBuilder;\n+import org.jboss.resteasy.client.jaxrs.internal.UniPublisherRxInvokerImpl;\n+import org.reactivestreams.Publisher;\n+\n+import java.util.Objects;\n+import java.util.concurrent.CompletionStage;\n \n @SuppressWarnings(\"unchecked\")\n public class SingleRxInvokerImpl implements SingleRxInvoker\n {\n-   private final CompletionStageRxInvoker completionStageRxInvoker;\n-   private final SingleProvider singleProvider;\n \n-   public SingleRxInvokerImpl(final CompletionStageRxInvoker completionStageRxInvoker)\n+   private final SinglePublisherInvoker publisherInvoker;\n+\n+   public SingleRxInvokerImpl(final ClientInvocationBuilder builder)\n+   {\n+      publisherInvoker = new SinglePublisherInvoker(Objects.requireNonNull(builder));\n+   }\n+\n+   static class SinglePublisherInvoker extends UniPublisherRxInvokerImpl\n    {\n-      this.completionStageRxInvoker = completionStageRxInvoker;\n-      this.singleProvider = new SingleProvider();\n+      SinglePublisherInvoker(final ClientInvocationBuilder builder)\n+      {\n+         super(builder);\n+      }\n+\n+      @Override\n+      protected <T> Publisher<T> toPublisher(CompletionStage<T> completable) {\n+         return Flowable.fromFuture(completable.toCompletableFuture());", "originalCommit": "cf5bc152abf62f05652dcaa6276de8016f050512", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTcyMTA0NA==", "url": "https://github.com/resteasy/resteasy/pull/2463#discussion_r655721044", "bodyText": "Sorry. I missed this one.  Single#fromFuture won't get us a Publisher.", "author": "crankydillo", "createdAt": "2021-06-21T21:36:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NDgzNDE1NA=="}], "type": "inlineReview"}, {"oid": "3b649a0a01d568c0eb0964778d033c035466efa0", "url": "https://github.com/resteasy/resteasy/commit/3b649a0a01d568c0eb0964778d033c035466efa0", "message": "Support reactive publishers at the engine level.\n\nThis is a PoC that aims to support a more 'direct' line from `rx(Class)`\nto a reactive 'provider'.  Some reactive implementations have features\nthat can be better leveraged with this.  In our case, we really need to\nleverage the end user's project-reactor 'context' when we build the\nclient.  This use case is exercised in the\nReactorTest#testSubscriberContext test.\n\nSome things like code reuse and test coverage have been postponed until\nI get some feedback on the concept.\n\nApologies for not writing up an issue.  We already had this code written\nso I'm hoping it better explains what we need than trying to write it up\nin an issue.  Just let me know what you'd like me to do that in that\nregard.", "committedDate": "2021-06-21T18:07:31Z", "type": "commit"}, {"oid": "d8489bc7239004a5d0806b27fecff5a9f7dfb269", "url": "https://github.com/resteasy/resteasy/commit/d8489bc7239004a5d0806b27fecff5a9f7dfb269", "message": "Another use case for making a more direct bridge from a `rx(Class)`..\n\nreturned Publisher.  Similar to the context case, if the user sets a\ntimeout on the publisher you get from rx(..), that should effectively\ncancel the inner publisher if it times out.  For reactor-netty, this\ngives the end-user the ability to use a per-request timeout such that\nthe their logic terminates _and_ the connection is released as soon as\npossible.", "committedDate": "2021-06-21T18:07:37Z", "type": "commit"}, {"oid": "d794b34e1b91d7bad1f068959d2e4f2f93daff87", "url": "https://github.com/resteasy/resteasy/commit/d794b34e1b91d7bad1f068959d2e4f2f93daff87", "message": "Make it more apparent that reactive functionality of ClientInvocation\n\nis optional and contigent upon the HTTP engine.  This allows for clients\nto cleanly fall back to a `CompletionStage` approach if they think that\nis a good fit for their needs.", "committedDate": "2021-06-21T18:07:37Z", "type": "commit"}, {"oid": "93e544e3053dafa6ea96e43af6dd01a24d57d9fa", "url": "https://github.com/resteasy/resteasy/commit/93e544e3053dafa6ea96e43af6dd01a24d57d9fa", "message": "Refactor RxJava2's SingleMonoRxImpl to leverage PublisherRxInvokerImpl..\n\nFor reactive HTTP client engines, this eliminates the completion stage\nbridge, which can be problematic for multiple reasons.", "committedDate": "2021-06-21T18:07:38Z", "type": "commit"}, {"oid": "1f34f76238cd32edffaf2870fb2021d607306e06", "url": "https://github.com/resteasy/resteasy/commit/1f34f76238cd32edffaf2870fb2021d607306e06", "message": "Address checkstyle issues.", "committedDate": "2021-06-21T18:07:38Z", "type": "commit"}, {"oid": "e25d3b80de500f061e26f79b906e21a1fb7dc460", "url": "https://github.com/resteasy/resteasy/commit/e25d3b80de500f061e26f79b906e21a1fb7dc460", "message": "Remove silly functions..\n\nI had some plans to use those from generic code, but that didn't work\nout.", "committedDate": "2021-06-21T18:07:39Z", "type": "commit"}, {"oid": "88b40a475ea215eb64684412125cc1847a37ba56", "url": "https://github.com/resteasy/resteasy/commit/88b40a475ea215eb64684412125cc1847a37ba56", "message": "Clear rxjava2 checkstyle errors", "committedDate": "2021-06-21T18:07:39Z", "type": "commit"}, {"oid": "f57de4691c1a31b2bd63c55392d09060c6534cdd", "url": "https://github.com/resteasy/resteasy/commit/f57de4691c1a31b2bd63c55392d09060c6534cdd", "message": "More checkstyle fixes.", "committedDate": "2021-06-21T18:07:40Z", "type": "commit"}, {"oid": "387d2b8ca62492df2bab958868372babebae5851", "url": "https://github.com/resteasy/resteasy/commit/387d2b8ca62492df2bab958868372babebae5851", "message": "Revert \"Refactor RxJava2's SingleMonoRxImpl to leverage PublisherRxInvokerImpl..\"\n\nThis reverts commit 24e5bbfe", "committedDate": "2021-06-21T18:07:40Z", "type": "commit"}, {"oid": "444d4f8a235c6ff2fc062b61215fb54fd4e1f5cd", "url": "https://github.com/resteasy/resteasy/commit/444d4f8a235c6ff2fc062b61215fb54fd4e1f5cd", "message": "Rename `PublisherRx...` to `UniPublisherRx...` ..\n\nto give a better indication these are 'publishers' of single items.", "committedDate": "2021-06-21T18:07:41Z", "type": "commit"}, {"oid": "56709f50e6993c28363ef0958db5bce83ba3530b", "url": "https://github.com/resteasy/resteasy/commit/56709f50e6993c28363ef0958db5bce83ba3530b", "message": "Revert \"Rename `PublisherRx...` to `UniPublisherRx...` ..\"\n\nThis reverts commit cf5bc152abf62f05652dcaa6276de8016f050512.", "committedDate": "2021-06-21T18:07:42Z", "type": "commit"}, {"oid": "ad41d9ab3a452e9ad5b68bf8467dfe7219cd66f9", "url": "https://github.com/resteasy/resteasy/commit/ad41d9ab3a452e9ad5b68bf8467dfe7219cd66f9", "message": "Fix SingleRxInvokerProvider and rebase issue.", "committedDate": "2021-06-21T18:09:03Z", "type": "commit"}, {"oid": "ad41d9ab3a452e9ad5b68bf8467dfe7219cd66f9", "url": "https://github.com/resteasy/resteasy/commit/ad41d9ab3a452e9ad5b68bf8467dfe7219cd66f9", "message": "Fix SingleRxInvokerProvider and rebase issue.", "committedDate": "2021-06-21T18:09:03Z", "type": "forcePushed"}, {"oid": "b9ba07baa22873200fb5a205a04e03a6441d0d3d", "url": "https://github.com/resteasy/resteasy/commit/b9ba07baa22873200fb5a205a04e03a6441d0d3d", "message": "Bring back junit dependency.", "committedDate": "2021-06-21T18:24:09Z", "type": "commit"}, {"oid": "deae1bc8ca1b031cffd827a08e68acfd4947ccde", "url": "https://github.com/resteasy/resteasy/commit/deae1bc8ca1b031cffd827a08e68acfd4947ccde", "message": "Add a test showing that a business logic timeout will cause eager..\n\nconnection closing.", "committedDate": "2021-06-23T22:18:39Z", "type": "commit"}, {"oid": "bfe0ddee48d50903b549bb6d25d1caa6632c0628", "url": "https://github.com/resteasy/resteasy/commit/bfe0ddee48d50903b549bb6d25d1caa6632c0628", "message": "Add a note about one of the benefits of using the reactor-netty engine..\n\nwith the `MonoRxInvoker`.", "committedDate": "2021-06-23T22:25:29Z", "type": "commit"}, {"oid": "50d640ce1ca045bbd8ddb4a40b8f0029b9b14937", "url": "https://github.com/resteasy/resteasy/commit/50d640ce1ca045bbd8ddb4a40b8f0029b9b14937", "message": "Make sure the embedded server is closed.", "committedDate": "2021-06-23T22:29:04Z", "type": "commit"}, {"oid": "7d9b38d5d89aa6191b855a361ed32182bcf2830d", "url": "https://github.com/resteasy/resteasy/commit/7d9b38d5d89aa6191b855a361ed32182bcf2830d", "message": "Update RESTEasy_Client_Framework.xml", "committedDate": "2021-06-24T00:22:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzkwNDQ5NA==", "url": "https://github.com/resteasy/resteasy/pull/2463#discussion_r657904494", "bodyText": "I like this change.\nAs an aside, I'm not sure how you got this into my PR.  I wasn't aware anyone could push to my repo:P  But.. you are welcome to! :)", "author": "crankydillo", "createdAt": "2021-06-24T12:33:58Z", "path": "docbook/reference/en/en-US/modules/RESTEasy_Client_Framework.xml", "diffHunk": "@@ -1059,8 +1059,25 @@ ResteasyClient client = ((ResteasyClientBuilder)ClientBuilder.newBuilder())\n         </programlisting>\r\n         <para>\r\n             When coupled with the MonoRxInvoker, this has several benefits.\r\n-            Most notably, a Reactor-based timeout will eagerly stop in-flight\r\n-            requests.\r\n+            It supports things like this:\r", "originalCommit": "7d9b38d5d89aa6191b855a361ed32182bcf2830d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1ODIwMjIyNw==", "url": "https://github.com/resteasy/resteasy/pull/2463#discussion_r658202227", "bodyText": "I'm not sure how you got this into my PR\n\nI guess I have some extra administrative powers because I can edit a file and commit it right on the spot. It's very convenient. I'm not sure what would happen if I tried to push to your repo. Sometimes I've been able to do that, and sometimes not.\nOld Lodge Skins: Am I still in this world?\nJack Crabb: Yes, Grandfather.\nOld Lodge Skins: [groans] I was afraid of that. Well, sometimes the magic works. Sometimes, it doesn't.", "author": "ronsigal", "createdAt": "2021-06-24T18:51:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NzkwNDQ5NA=="}], "type": "inlineReview"}, {"oid": "e99e3ac6f7711d6ba2438ca59d36283a066776a2", "url": "https://github.com/resteasy/resteasy/commit/e99e3ac6f7711d6ba2438ca59d36283a066776a2", "message": "Move PublisherRxInvoker to resteasy-client-api.", "committedDate": "2021-06-24T13:04:03Z", "type": "commit"}]}