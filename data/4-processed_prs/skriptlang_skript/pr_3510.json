{"pr_number": 3510, "pr_title": "Feature - Potion Effects", "pr_createdAt": "2020-11-01T03:06:55Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/3510", "timeline": [{"oid": "94b9b31a58c3a822db75b196ea4ccfdb5dc81324", "url": "https://github.com/SkriptLang/Skript/commit/94b9b31a58c3a822db75b196ea4ccfdb5dc81324", "message": "PotionEffects - bringing potion effects to Skript", "committedDate": "2020-11-01T01:21:30Z", "type": "commit"}, {"oid": "d1b8bc712ca4aa7cd795022847bbfede3652fb51", "url": "https://github.com/SkriptLang/Skript/commit/d1b8bc712ca4aa7cd795022847bbfede3652fb51", "message": "BukkitClasses - usage -> user for Potion effects (whoops)", "committedDate": "2020-11-01T02:00:57Z", "type": "commit"}, {"oid": "e3feb01fe0b71c75629f21ca1e192a1b3cd9eff9", "url": "https://github.com/SkriptLang/Skript/commit/e3feb01fe0b71c75629f21ca1e192a1b3cd9eff9", "message": "PotionEffectUtils - some fixes and some stupid bandaid", "committedDate": "2020-11-01T03:01:02Z", "type": "commit"}, {"oid": "40471e2992f4e9971fda8520206230e5eebf7f93", "url": "https://github.com/SkriptLang/Skript/commit/40471e2992f4e9971fda8520206230e5eebf7f93", "message": "ExprPotionEffects.sk - test case", "committedDate": "2020-11-01T03:01:18Z", "type": "commit"}, {"oid": "7cae9fd42fb063c666d2b72033711404cbeee517", "url": "https://github.com/SkriptLang/Skript/commit/7cae9fd42fb063c666d2b72033711404cbeee517", "message": "Merge branch 'dev-2.5' into feature/active-potion-effects", "committedDate": "2020-11-01T06:43:45Z", "type": "commit"}, {"oid": "e4c09ca299f69109abb82586e41284227a6b5907", "url": "https://github.com/SkriptLang/Skript/commit/e4c09ca299f69109abb82586e41284227a6b5907", "message": "Add some javadocs", "committedDate": "2020-11-01T09:49:26Z", "type": "commit"}, {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87", "url": "https://github.com/SkriptLang/Skript/commit/04f6fae5a86dc3adcd7f582862190201d5490d87", "message": "Merge remote-tracking branch 'origin/feature/active-potion-effects' into feature/active-potion-effects", "committedDate": "2020-11-01T09:49:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2MzMyOA==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r516763328", "bodyText": "Maybe EffPotion should also (or instead) take in PotionEffects?\nWith this, you kind of have two systems that IMO need to be brought together somehow.", "author": "APickledWalrus", "createdAt": "2020-11-03T15:41:59Z", "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffect.java", "diffHunk": "@@ -20,36 +20,79 @@\n \n import org.bukkit.event.Event;\n import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n import org.eclipse.jdt.annotation.Nullable;\n \n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n import ch.njol.skript.lang.SkriptParser.ParseResult;\n import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.Timespan;\n import ch.njol.util.Kleenean;\n \n-/**\n- * @author Peter G\u00fcttinger\n- */\n+@Name(\"Potion Effect\")\n+@Description({\"Create a new potion effect to apply to an entity or item type. Do note that when applying potion effects \",\n+\t\"to tipped arrows/lingering potions, Minecraft reduces the timespan.\"})\n+@Examples({\"set {_p} to potion effect of speed of tier 1 without particles for 10 minutes\",\n+\t\"add {_p} to potion effects of player's tool\",\n+\t\"add {_p} to potion effects of target entity\",\n+\t\"add potion effect of speed 1 to potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n public class ExprPotionEffect extends SimpleExpression<PotionEffect> {", "originalCommit": "04f6fae5a86dc3adcd7f582862190201d5490d87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAzNjQwMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r517036401", "bodyText": "Ok, I added support for potion effects in EffPotion. I decided to prevent breakages and just add it rather than replacing what is currently there.", "author": "ShaneBeee", "createdAt": "2020-11-04T00:43:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2MzMyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NTY5OA==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r516765698", "bodyText": "Could this take in PotionEffectTypes as well? e.g.\nadd swiftness to potion effects of player\n\nwhere this would add swiftness 1 with default time", "author": "APickledWalrus", "createdAt": "2020-11-03T15:45:16Z", "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.PotionEffectUtils;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Potion Effects\")\n+@Description({\"Represents the active potion effects of entities and itemtypes.\",\n+\t\"You can clear all potion effects of an entity/itemtype, add a potion effect to an entity/itemtype, and remove a\",\n+\t\"potion effect or potion effect type from an entity/itemtype. Do note you will not be able to clear the base potion effects \",\n+\t\"of a potion item. In that case, just switch the item to a water bottle.\"})\n+@Examples({\"set {_p::*} to active potion effects of player\",\n+\t\"clear all the potion effects of player\",\n+\t\"clear all the potion effects of player's tool\",\n+\t\"add potion effects of player to potion effects of player's tool\",\n+\t\"remove speed and night vision from potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprPotionEffects extends SimpleExpression<PotionEffect> {\n+\t\n+\tstatic {\n+\t\tPropertyExpression.register(ExprPotionEffects.class, PotionEffect.class,\n+\t\t\t\"[(all [[of] the]|the)] [active] potion effects\", \"livingentities/itemtypes\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Object> objects;\n+\t\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tobjects = (Expression<Object>) exprs[0];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected PotionEffect[] get(Event e) {\n+\t\tList<PotionEffect> effects = new ArrayList<>();\n+\t\tfor (Object object : this.objects.getArray(e)) {\n+\t\t\tif (object instanceof LivingEntity)\n+\t\t\t\teffects.addAll(((LivingEntity) object).getActivePotionEffects());\n+\t\t\telse if (object instanceof ItemType)\n+\t\t\t\teffects.addAll(PotionEffectUtils.getEffects((ItemType) object));\n+\t\t}\n+\t\treturn effects.toArray(new PotionEffect[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(PotionEffect[].class, PotionEffectType[].class);\n+\t\t\tcase ADD:\n+\t\t\tcase DELETE:\n+\t\t\t\treturn CollectionUtils.array(PotionEffect[].class);", "originalCommit": "04f6fae5a86dc3adcd7f582862190201d5490d87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzUzMA==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r517007530", "bodyText": "thats a good idea", "author": "ShaneBeee", "createdAt": "2020-11-03T23:06:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NTY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAzNjQ2MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r517036461", "bodyText": "This change has been made.", "author": "ShaneBeee", "createdAt": "2020-11-04T00:43:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NTY5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NTk2NA==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r516765964", "bodyText": "ParseResult direct import", "author": "APickledWalrus", "createdAt": "2020-11-03T15:45:38Z", "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.PotionEffectUtils;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Potion Effects\")\n+@Description({\"Represents the active potion effects of entities and itemtypes.\",\n+\t\"You can clear all potion effects of an entity/itemtype, add a potion effect to an entity/itemtype, and remove a\",\n+\t\"potion effect or potion effect type from an entity/itemtype. Do note you will not be able to clear the base potion effects \",\n+\t\"of a potion item. In that case, just switch the item to a water bottle.\"})\n+@Examples({\"set {_p::*} to active potion effects of player\",\n+\t\"clear all the potion effects of player\",\n+\t\"clear all the potion effects of player's tool\",\n+\t\"add potion effects of player to potion effects of player's tool\",\n+\t\"remove speed and night vision from potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprPotionEffects extends SimpleExpression<PotionEffect> {\n+\t\n+\tstatic {\n+\t\tPropertyExpression.register(ExprPotionEffects.class, PotionEffect.class,\n+\t\t\t\"[(all [[of] the]|the)] [active] potion effects\", \"livingentities/itemtypes\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Object> objects;\n+\t\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {", "originalCommit": "04f6fae5a86dc3adcd7f582862190201d5490d87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzYxOA==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r517007618", "bodyText": "OOPS... and I normally do that.\nEdit: FIXED", "author": "ShaneBeee", "createdAt": "2020-11-03T23:06:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NTk2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NzY3MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r516767671", "bodyText": "What are the comparison issues?", "author": "APickledWalrus", "createdAt": "2020-11-03T15:47:57Z", "path": "src/main/java/ch/njol/skript/util/PotionEffectUtils.java", "diffHunk": "@@ -76,6 +87,17 @@ public static PotionEffectType parseType(final String s) {\n \t\treturn types.get(s.toLowerCase());\n \t}\n \t\n+\t// This is a stupid bandaid to fix comparison issues when converting potion datas", "originalCommit": "04f6fae5a86dc3adcd7f582862190201d5490d87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzg5MA==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r517007890", "bodyText": "Its in the note of this PR, should I add it there too?", "author": "ShaneBeee", "createdAt": "2020-11-03T23:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NzY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3MzIyOQ==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r530573229", "bodyText": "might not be a bad idea", "author": "APickledWalrus", "createdAt": "2020-11-25T18:33:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NzY3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2ODI1NA==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r516768254", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @param entity Entity to add effects\n          \n          \n            \n            \t * @param entity Entity to add effects to", "author": "APickledWalrus", "createdAt": "2020-11-03T15:48:43Z", "path": "src/main/java/ch/njol/skript/util/PotionEffectUtils.java", "diffHunk": "@@ -189,4 +226,100 @@ public static String getPotionName(@Nullable PotionEffectType effect, boolean ex\n \t\t\n \t\treturn s;\n \t}\n+\t\n+\t/**\n+\t * Clear all the active {@link PotionEffect PotionEffects} from an Entity\n+\t *\n+\t * @param entity Entity to clear effects for\n+\t */\n+\tpublic static void clearAllEffects(LivingEntity entity) {\n+\t\tentity.getActivePotionEffects().forEach(potionEffect -> entity.removePotionEffect(potionEffect.getType()));\n+\t}\n+\t\n+\t/**\n+\t * Add PotionEffects to an entity\n+\t *\n+\t * @param entity Entity to add effects", "originalCommit": "04f6fae5a86dc3adcd7f582862190201d5490d87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "901c8cf21a5e999491aff708fa176bd898a5625a", "url": "https://github.com/SkriptLang/Skript/commit/901c8cf21a5e999491aff708fa176bd898a5625a", "message": "Update src/main/java/ch/njol/skript/util/PotionEffectUtils.java\n\nCo-authored-by: APickledWalrus <apickledwalrus@gmail.com>", "committedDate": "2020-11-03T23:07:18Z", "type": "commit"}, {"oid": "7875e9819ea6d2210c8909ba07cbb744d4fea32c", "url": "https://github.com/SkriptLang/Skript/commit/7875e9819ea6d2210c8909ba07cbb744d4fea32c", "message": "ExprPotionEffects - add support for adding potion effect types", "committedDate": "2020-11-04T00:27:24Z", "type": "commit"}, {"oid": "e39ee02b293a631c5423a07b23d0a0547e25caa9", "url": "https://github.com/SkriptLang/Skript/commit/e39ee02b293a631c5423a07b23d0a0547e25caa9", "message": "EffPotion - add support for potion effects", "committedDate": "2020-11-04T00:42:55Z", "type": "commit"}, {"oid": "8e4d033145402145e345cee331080f1878ee8c83", "url": "https://github.com/SkriptLang/Skript/commit/8e4d033145402145e345cee331080f1878ee8c83", "message": "Merge remote-tracking branch 'origin/feature/active-potion-effects' into feature/active-potion-effects\n\n# Conflicts:\n#\tsrc/main/java/ch/njol/skript/util/PotionEffectUtils.java", "committedDate": "2020-11-04T00:44:35Z", "type": "commit"}, {"oid": "d84702d1c19b62d2071602c3c36824d07def6a71", "url": "https://github.com/SkriptLang/Skript/commit/d84702d1c19b62d2071602c3c36824d07def6a71", "message": "ExprPotionEffects - direct import ParseResult", "committedDate": "2020-11-04T00:46:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3NDQzOQ==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r530574439", "bodyText": "\\t here instead of an actual tab? since you're already editing this file ;D", "author": "APickledWalrus", "createdAt": "2020-11-25T18:35:36Z", "path": "src/main/java/ch/njol/skript/effects/EffPotion.java", "diffHunk": "@@ -43,14 +44,16 @@\n @Examples({\"apply swiftness 2 to the player\",\n \t\t\"remove haste from the victim\",\n \t\t\"on join:\",\n-\t\t\"\tapply potion of strength of tier {strength.%player%} to the player for 999 days\"})\n-@Since(\"2.0, 2.2-dev27 (ambient and particle-less potion effects), 2.5 (replacing existing effect)\")\n+\t\t\"\tapply potion of strength of tier {strength.%player%} to the player for 999 days\",", "originalCommit": "d84702d1c19b62d2071602c3c36824d07def6a71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYwNjMzMw==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r530606333", "bodyText": "Good call ... done!", "author": "ShaneBeee", "createdAt": "2020-11-25T19:43:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3NDQzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3NjU1OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r530576559", "bodyText": "Doesn't really matter, but maybe it'd be better to use a default case here that returns null?", "author": "APickledWalrus", "createdAt": "2020-11-25T18:39:57Z", "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.PotionEffectUtils;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Potion Effects\")\n+@Description({\"Represents the active potion effects of entities and itemtypes.\",\n+\t\"You can clear all potion effects of an entity/itemtype and add/remove a potion effect/type to/from an entity/itemtype.\",\n+\t\"Do note you will not be able to clear the base potion effects of a potion item. In that case, just set the item to a water bottle.\",\n+\t\"When adding a potion effect type (rather than a potion effect), it will default to 15 seconds with tier 1.\"})\n+@Examples({\"set {_p::*} to active potion effects of player\",\n+\t\"clear all the potion effects of player\",\n+\t\"clear all the potion effects of player's tool\",\n+\t\"add potion effects of player to potion effects of player's tool\",\n+\t\"add speed to potion effects of target entity\",\n+\t\"remove speed and night vision from potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprPotionEffects extends SimpleExpression<PotionEffect> {\n+\t\n+\tstatic {\n+\t\tPropertyExpression.register(ExprPotionEffects.class, PotionEffect.class,\n+\t\t\t\"[(all [[of] the]|the)] [active] potion effects\", \"livingentities/itemtypes\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Object> objects;\n+\t\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tobjects = (Expression<Object>) exprs[0];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected PotionEffect[] get(Event e) {\n+\t\tList<PotionEffect> effects = new ArrayList<>();\n+\t\tfor (Object object : this.objects.getArray(e)) {\n+\t\t\tif (object instanceof LivingEntity)\n+\t\t\t\teffects.addAll(((LivingEntity) object).getActivePotionEffects());\n+\t\t\telse if (object instanceof ItemType)\n+\t\t\t\teffects.addAll(PotionEffectUtils.getEffects((ItemType) object));\n+\t\t}\n+\t\treturn effects.toArray(new PotionEffect[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\tcase ADD:\n+\t\t\tcase DELETE:\n+\t\t\t\treturn CollectionUtils.array(PotionEffect[].class, PotionEffectType[].class);\n+\t\t}\n+\t\treturn null;", "originalCommit": "d84702d1c19b62d2071602c3c36824d07def6a71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYwNjQ1Mw==", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r530606453", "bodyText": "Updated, cause why not ;)", "author": "ShaneBeee", "createdAt": "2020-11-25T19:44:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3NjU1OQ=="}], "type": "inlineReview"}, {"oid": "543cba92e7c7fa9a27caf9e78bb0a5487b1a99e5", "url": "https://github.com/SkriptLang/Skript/commit/543cba92e7c7fa9a27caf9e78bb0a5487b1a99e5", "message": "EffPotion - change tab usage in example", "committedDate": "2020-11-25T19:42:30Z", "type": "commit"}, {"oid": "7a880d95cace2cf9cd2f3cb1363fe751edd1709b", "url": "https://github.com/SkriptLang/Skript/commit/7a880d95cace2cf9cd2f3cb1363fe751edd1709b", "message": "ExprPotionEffects - change switch case return", "committedDate": "2020-11-25T19:43:32Z", "type": "commit"}, {"oid": "c7e76e5f05f4d0a0b984ed3d4bb79bbae60ff4f5", "url": "https://github.com/SkriptLang/Skript/commit/c7e76e5f05f4d0a0b984ed3d4bb79bbae60ff4f5", "message": "Merge branch 'dev-2.5' into feature/active-potion-effects", "committedDate": "2020-11-25T19:44:26Z", "type": "commit"}]}