{"pr_number": 3219, "pr_title": "Added the minecart's derailed velocity expression", "pr_createdAt": "2020-07-26T11:20:15Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/3219", "timeline": [{"oid": "c814b280869ac83742f2f171c12abe7707e03bae", "url": "https://github.com/SkriptLang/Skript/commit/c814b280869ac83742f2f171c12abe7707e03bae", "message": "Added the minecart's derailed velocity expression", "committedDate": "2020-07-26T11:19:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxNDY4OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r460514689", "bodyText": "As stated before on Discord, the condition and void method should not be on the same line.", "author": "ShaneBeee", "createdAt": "2020-07-26T11:24:32Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedVelocity.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedVelocity.class, Vector.class, \"[minecart] derailed velocity\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getDerailedVelocityMod() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.ADD || mode == ChangeMode.REMOVE) ? CollectionUtils.array(Vector.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta != null) {\n+\t\t\tswitch (mode) {\n+\t\t\t\tcase SET:\n+\t\t\t\t\tgetExpr().stream(e).forEach(entity -> {\n+\t\t\t\t\t\tif (entity instanceof Minecart) ((Minecart) entity).setDerailedVelocityMod((Vector) delta[0]);", "originalCommit": "c814b280869ac83742f2f171c12abe7707e03bae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1b546416b1bd2dacafa82a1e6939441bd58a6723", "url": "https://github.com/SkriptLang/Skript/commit/1b546416b1bd2dacafa82a1e6939441bd58a6723", "message": "Put the conditions and methods on separate lines", "committedDate": "2020-07-26T11:32:14Z", "type": "commit"}, {"oid": "8e4e220aa3a4fba780065bdf527ad8ea694b1dd2", "url": "https://github.com/SkriptLang/Skript/commit/8e4e220aa3a4fba780065bdf527ad8ea694b1dd2", "message": "Merged MinecartDerailedVelocity with MinecartFlyingVelocity", "committedDate": "2020-07-26T16:27:19Z", "type": "commit"}, {"oid": "76e2ab0ae248d0b79c8cb7067929e5a5f7b26e5f", "url": "https://github.com/SkriptLang/Skript/commit/76e2ab0ae248d0b79c8cb7067929e5a5f7b26e5f", "message": "updated getPropertyName()", "committedDate": "2020-07-26T16:28:21Z", "type": "commit"}, {"oid": "09747a902471c7e591b474df9cb59bfe249cd9ac", "url": "https://github.com/SkriptLang/Skript/commit/09747a902471c7e591b474df9cb59bfe249cd9ac", "message": "Removed unnecessary ;'s", "committedDate": "2020-07-26T18:56:38Z", "type": "commit"}, {"oid": "ea7dbd92c279553274cdb240966260b087e58746", "url": "https://github.com/SkriptLang/Skript/commit/ea7dbd92c279553274cdb240966260b087e58746", "message": "Removed other unnecessary ;'s", "committedDate": "2020-07-26T19:02:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0Mjk1OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r463242959", "bodyText": "Space after method end? :D", "author": "APickledWalrus", "createdAt": "2020-07-30T20:09:42Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class, \"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart\n+\t\t\t? (flying ? ((Minecart) entity).getDerailedVelocityMod() : ((Minecart) entity).getFlyingVelocityMod())\n+\t\t\t: null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Vector.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta != null) {\n+\t\t\tif (flying)\n+\t\t\t\tswitch (mode) {\n+\t\t\t\t\tcase SET:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart)\n+\t\t\t\t\t\t\t\t((Minecart) entity).setFlyingVelocityMod((Vector) delta[0]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase ADD:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setFlyingVelocityMod(((Vector) delta[0]).add(minecart.getFlyingVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase REMOVE:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setFlyingVelocityMod(((Vector) delta[0]).subtract(minecart.getFlyingVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\telse\n+\t\t\t\tswitch (mode) {\n+\t\t\t\t\tcase SET:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart)\n+\t\t\t\t\t\t\t\t((Minecart) entity).setDerailedVelocityMod((Vector) delta[0]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase ADD:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setDerailedVelocityMod(((Vector) delta[0]).add(minecart.getDerailedVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase REMOVE:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setDerailedVelocityMod(((Vector) delta[0]).subtract(minecart.getDerailedVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn (flying ? \"flying\" : \"derailed\") + \" velocity\";\n+\t}\n+\t\n+\t\n+\t@Override\n+\tpublic Class<? extends Vector> getReturnType() {\n+\t\treturn Vector.class;\n+\t}", "originalCommit": "ea7dbd92c279553274cdb240966260b087e58746", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0MzA0OA==", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r463243048", "bodyText": "Can you remove one of the spaces here?", "author": "APickledWalrus", "createdAt": "2020-07-30T20:09:53Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class, \"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart\n+\t\t\t? (flying ? ((Minecart) entity).getDerailedVelocityMod() : ((Minecart) entity).getFlyingVelocityMod())\n+\t\t\t: null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Vector.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta != null) {\n+\t\t\tif (flying)\n+\t\t\t\tswitch (mode) {\n+\t\t\t\t\tcase SET:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart)\n+\t\t\t\t\t\t\t\t((Minecart) entity).setFlyingVelocityMod((Vector) delta[0]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase ADD:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setFlyingVelocityMod(((Vector) delta[0]).add(minecart.getFlyingVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase REMOVE:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setFlyingVelocityMod(((Vector) delta[0]).subtract(minecart.getFlyingVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\telse\n+\t\t\t\tswitch (mode) {\n+\t\t\t\t\tcase SET:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart)\n+\t\t\t\t\t\t\t\t((Minecart) entity).setDerailedVelocityMod((Vector) delta[0]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase ADD:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setDerailedVelocityMod(((Vector) delta[0]).add(minecart.getDerailedVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase REMOVE:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setDerailedVelocityMod(((Vector) delta[0]).subtract(minecart.getDerailedVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn (flying ? \"flying\" : \"derailed\") + \" velocity\";\n+\t}\n+\t", "originalCommit": "ea7dbd92c279553274cdb240966260b087e58746", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0MzMwNg==", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r463243306", "bodyText": "IMO you should add curly brackets to the if/else statement", "author": "APickledWalrus", "createdAt": "2020-07-30T20:10:26Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class, \"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart\n+\t\t\t? (flying ? ((Minecart) entity).getDerailedVelocityMod() : ((Minecart) entity).getFlyingVelocityMod())\n+\t\t\t: null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Vector.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta != null) {\n+\t\t\tif (flying)", "originalCommit": "ea7dbd92c279553274cdb240966260b087e58746", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9b1b949bda0c8a0dea260bbde89f4e2be127f4ca", "url": "https://github.com/SkriptLang/Skript/commit/9b1b949bda0c8a0dea260bbde89f4e2be127f4ca", "message": "Merge branch 'master' into ExprMinecartDerailedVelocity", "committedDate": "2020-07-30T22:19:10Z", "type": "commit"}, {"oid": "d79568be5f559e61cc7b513a0967e87d48c87f0c", "url": "https://github.com/SkriptLang/Skript/commit/d79568be5f559e61cc7b513a0967e87d48c87f0c", "message": "Fixed everything", "committedDate": "2020-07-30T22:20:06Z", "type": "commit"}, {"oid": "1c0853dd7a5aea98b21b5a4c0dec7f458adfa74b", "url": "https://github.com/SkriptLang/Skript/commit/1c0853dd7a5aea98b21b5a4c0dec7f458adfa74b", "message": "Merge remote-tracking branch 'origin/ExprMinecartDerailedVelocity' into ExprMinecartDerailedVelocity", "committedDate": "2020-07-30T22:20:19Z", "type": "commit"}, {"oid": "0011019678e0e8f98061fa66718e7ce8560b3941", "url": "https://github.com/SkriptLang/Skript/commit/0011019678e0e8f98061fa66718e7ce8560b3941", "message": "Merge branch 'master' into ExprMinecartDerailedVelocity", "committedDate": "2020-08-02T16:22:32Z", "type": "commit"}, {"oid": "c865fbcb3fca380262e3b7146817a955bbeeb886", "url": "https://github.com/SkriptLang/Skript/commit/c865fbcb3fca380262e3b7146817a955bbeeb886", "message": "Merge branch 'master' into ExprMinecartDerailedVelocity", "committedDate": "2020-09-08T18:21:40Z", "type": "commit"}, {"oid": "4123b6ad6c29c6c5d2f548ce46abfcd262a79199", "url": "https://github.com/SkriptLang/Skript/commit/4123b6ad6c29c6c5d2f548ce46abfcd262a79199", "message": "modified a few things according to the suggestions", "committedDate": "2020-09-08T18:24:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjMxOQ==", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r495482319", "bodyText": "Both switches should have a default case that asserts false", "author": "APickledWalrus", "createdAt": "2020-09-26T18:24:11Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,147 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class, \"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart\n+\t\t\t? (flying ? ((Minecart) entity).getDerailedVelocityMod() : ((Minecart) entity).getFlyingVelocityMod())\n+\t\t\t: null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Vector.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {", "originalCommit": "4123b6ad6c29c6c5d2f548ce46abfcd262a79199", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b8e695682f6a6c20944ada38fe32146a7c4048e3", "url": "https://github.com/SkriptLang/Skript/commit/b8e695682f6a6c20944ada38fe32146a7c4048e3", "message": "Merge branch 'master' into ExprMinecartDerailedVelocity", "committedDate": "2020-09-26T18:31:36Z", "type": "commit"}, {"oid": "cae040f73d2a928e39598ef12939d760a5f7139e", "url": "https://github.com/SkriptLang/Skript/commit/cae040f73d2a928e39598ef12939d760a5f7139e", "message": "Added a default case", "committedDate": "2020-09-26T18:58:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMxOTk0Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r496319947", "bodyText": "To reduce the casting, perhaps you could do\n\t\tif (entity instanceof Minecart) {\n\t\t\tMinecart mc = (Minecart) entity;\n\t\t\treturn flying ? mc.getFlyingVelocityMod() : mc.getDerailedVelocityMod();\n\t\t}\n\t\treturn null;\n\nAlso, I think you swapped your flying velocity and derailed velocity, since you put flying as the condition, they should be swapped?", "author": "Wealthyturtle", "createdAt": "2020-09-29T01:17:59Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class, \"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart\n+\t\t\t? (flying ? ((Minecart) entity).getDerailedVelocityMod() : ((Minecart) entity).getFlyingVelocityMod())\n+\t\t\t: null;", "originalCommit": "cae040f73d2a928e39598ef12939d760a5f7139e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ0NDM0Mg==", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r496444342", "bodyText": "\ud83d\udc4d", "author": "DeltaRays", "createdAt": "2020-09-29T06:23:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMxOTk0Nw=="}], "type": "inlineReview"}, {"oid": "0b39054b8f4aa1e61b8aca8558dcd0b12811d651", "url": "https://github.com/SkriptLang/Skript/commit/0b39054b8f4aa1e61b8aca8558dcd0b12811d651", "message": "Reduced casting and fixed an issue", "committedDate": "2020-09-29T06:24:37Z", "type": "commit"}, {"oid": "86efaa4060ca66f03ddb47e5d3baf2ad5b9bf08f", "url": "https://github.com/SkriptLang/Skript/commit/86efaa4060ca66f03ddb47e5d3baf2ad5b9bf08f", "message": "Merge branch 'dev-2.5' into ExprMinecartDerailedVelocity", "committedDate": "2020-10-04T20:10:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4NDM4OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r499284389", "bodyText": "Should be some spacing here\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif(entity instanceof Minecart){\n          \n          \n            \n            \t\tif (entity instanceof Minecart) {", "author": "ShaneBeee", "createdAt": "2020-10-04T20:14:11Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class,\n+\t\t\t\"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\tif(entity instanceof Minecart){", "originalCommit": "86efaa4060ca66f03ddb47e5d3baf2ad5b9bf08f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4455ab42ed8c1a2cdf1caafb0f670aeaf6f4e56d", "url": "https://github.com/SkriptLang/Skript/commit/4455ab42ed8c1a2cdf1caafb0f670aeaf6f4e56d", "message": "Update src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java\n\nCo-authored-by: Shane Bee <shanebolenback@me.com>", "committedDate": "2020-10-04T20:17:26Z", "type": "commit"}, {"oid": "85be0a0be61222ae92069d8cb1c40b18c84db5b6", "url": "https://github.com/SkriptLang/Skript/commit/85be0a0be61222ae92069d8cb1c40b18c84db5b6", "message": "Merge branch 'dev-2.5' into ExprMinecartDerailedVelocity", "committedDate": "2020-10-04T22:37:07Z", "type": "commit"}, {"oid": "1da10c03cbba0b20f365e83fcde04889ae184b3e", "url": "https://github.com/SkriptLang/Skript/commit/1da10c03cbba0b20f365e83fcde04889ae184b3e", "message": "Merge branch 'dev-2.5' into ExprMinecartDerailedVelocity", "committedDate": "2020-10-05T12:10:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5NjU4OA==", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r499696588", "bodyText": "You'll need to fix the license header", "author": "APickledWalrus", "createdAt": "2020-10-05T15:44:50Z", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors", "originalCommit": "1da10c03cbba0b20f365e83fcde04889ae184b3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwNDg0OA==", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r499704848", "bodyText": "Yeah I'm going through all my pr's and doing it \ud83d\udc4d", "author": "DeltaRays", "createdAt": "2020-10-05T15:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5NjU4OA=="}], "type": "inlineReview"}, {"oid": "059c14b6a6d4bee3f8a56bd19aa50020f6d120bd", "url": "https://github.com/SkriptLang/Skript/commit/059c14b6a6d4bee3f8a56bd19aa50020f6d120bd", "message": "License changes", "committedDate": "2020-10-05T15:56:25Z", "type": "commit"}, {"oid": "b7a389c7b136b0eb6b0ef9378464c0e704062a28", "url": "https://github.com/SkriptLang/Skript/commit/b7a389c7b136b0eb6b0ef9378464c0e704062a28", "message": "Merge branch 'dev-2.5' into ExprMinecartDerailedVelocity", "committedDate": "2020-10-06T09:04:26Z", "type": "commit"}]}