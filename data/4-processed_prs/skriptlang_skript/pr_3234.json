{"pr_number": 3234, "pr_title": "Added a way to get the list of all commands or a specific command's info", "pr_createdAt": "2020-07-27T17:50:31Z", "pr_url": "https://github.com/SkriptLang/Skript/pull/3234", "timeline": [{"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b", "url": "https://github.com/SkriptLang/Skript/commit/c29ecda251db0d2306e1936b562afc7cfca5917b", "message": "Added a way to get the list of all commands or a specific command's info\n\nAdded a method to get the ScriptCommands and the SimpleCommandMap to Commands.java and created ExprAllCommands and ExprCommandInfo", "committedDate": "2020-07-27T17:49:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3NDk5OA==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461274998", "bodyText": "You didn't make scripts optional", "author": "FranKusmiruk", "createdAt": "2020-07-28T02:10:31Z", "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");", "originalCommit": "c29ecda251db0d2306e1936b562afc7cfca5917b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2MjA3OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461362079", "bodyText": "I did", "author": "DeltaRays", "createdAt": "2020-07-28T07:03:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3NDk5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQyNDMwMg==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461424302", "bodyText": "No, what you did there is use a parser mark, but that doesn't make it optional. If you want it to be optional, you explicitly have to put the optional braces ([]). Like so:\n[all] [the] [registered] [(1\u00a6script)] commands", "author": "FranKusmiruk", "createdAt": "2020-07-28T08:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3NDk5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ2MzQ4NQ==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461463485", "bodyText": "I don't think you noticed but I have (|1\u00a6script)", "author": "DeltaRays", "createdAt": "2020-07-28T09:56:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3NDk5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ2MzY2OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461463669", "bodyText": "see the (| ?", "author": "DeltaRays", "createdAt": "2020-07-28T09:57:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3NDk5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ2NjkzMA==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461466930", "bodyText": "Ah, I see what you mean now. Still, it's better to use the optional brackets, users won't understand it is optional otherwise and it is not very clear from the first glance.", "author": "FranKusmiruk", "createdAt": "2020-07-28T10:03:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3NDk5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3NTIwMA==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461275200", "bodyText": "I've been saying this forever, but please put the next statement on its own line", "author": "FranKusmiruk", "createdAt": "2020-07-28T02:11:15Z", "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tif (scriptCommandsOnly) {\n+\t\t\treturn Commands.getScriptCommands().toArray(new String[0]);\n+\t\t} else {\n+\t\t\tif (Commands.getCommandMap() == null) return null;", "originalCommit": "c29ecda251db0d2306e1936b562afc7cfca5917b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQwMTU1OA==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461401558", "bodyText": "Oops my bad", "author": "DeltaRays", "createdAt": "2020-07-28T08:16:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3NTIwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3ODE3OA==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461278178", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\treturn Commands.getCommandMap().getCommands().parallelStream().map(command -> command.getLabel()).toArray(String[]::new);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t}\n          \n          \n            \n            \t\t\treturn Commands.getCommandMap()\n          \n          \n            \n            \t\t\t.getCommands()\n          \n          \n            \n            \t\t\t.parallelStream()\n          \n          \n            \n            \t\t\t.map(Command::getLabel)\n          \n          \n            \n            \t\t\t.toArray(String[]::new);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t}\n          \n      \n    \n    \n  \n\nAlso, does this contain / on the labels? what about commands like WE ones (with double //)", "author": "FranKusmiruk", "createdAt": "2020-07-28T02:22:20Z", "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tif (scriptCommandsOnly) {\n+\t\t\treturn Commands.getScriptCommands().toArray(new String[0]);\n+\t\t} else {\n+\t\t\tif (Commands.getCommandMap() == null) return null;\n+\t\t\treturn Commands.getCommandMap().getCommands().parallelStream().map(command -> command.getLabel()).toArray(String[]::new);\n+\t\t}\n+\t}", "originalCommit": "c29ecda251db0d2306e1936b562afc7cfca5917b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQwNzQ2MQ==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461407461", "bodyText": "only one / is sent for worldedit commands", "author": "DeltaRays", "createdAt": "2020-07-28T08:26:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3ODE3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQwODU0OQ==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461408549", "bodyText": "And for other commands the / isn't sent", "author": "DeltaRays", "createdAt": "2020-07-28T08:28:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3ODE3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3ODUyOA==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461278528", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn \"all commands\";\n          \n          \n            \n            \t\treturn \"all \" + (scriptsCommandsOnly ? \"script\" : \"\")  + \"commands\";", "author": "FranKusmiruk", "createdAt": "2020-07-28T02:23:49Z", "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tif (scriptCommandsOnly) {\n+\t\t\treturn Commands.getScriptCommands().toArray(new String[0]);\n+\t\t} else {\n+\t\t\tif (Commands.getCommandMap() == null) return null;\n+\t\t\treturn Commands.getCommandMap().getCommands().parallelStream().map(command -> command.getLabel()).toArray(String[]::new);\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn false;\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends String> getReturnType() {\n+\t\treturn String.class;\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"all commands\";", "originalCommit": "c29ecda251db0d2306e1936b562afc7cfca5917b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDMyNA==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461280324", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n          \n          \n            \n            \t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n          \n          \n            \n            \t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n          \n          \n            \n            \t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n          \n          \n            \n            \t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n          \n          \n            \n            \t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n          \n          \n            \n            \t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n          \n          \n            \n            \t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");\n          \n          \n            \n            \t\t\t\"[the] main command [label] of %strings%\", \"%strings%'[s] main command [label]\",\n          \n          \n            \n            \t\t\t\"[the] description of command %strings%\", \"command %strings%'[s] description\",\n          \n          \n            \n            \t\t\t\"[the] label of command %strings%\", \"command %strings%'[s] label\",\n          \n          \n            \n            \t\t\t\"[the] usage of command %strings%\", \"command %strings%'[s] usage\",\n          \n          \n            \n            \t\t\t\"[the] aliases of command %strings%\", \"command %strings%'[s] aliases\",\n          \n          \n            \n            \t\t\t\"[the] permission of command %strings%\", \"command %strings%'[s] permission\",\n          \n          \n            \n            \t\t\t\"[the] permission message of command %strings%\", \"command %strings%'[s] permission message\",\n          \n          \n            \n            \t\t\t\"[the] plugin [owner] of command %strings%\", \"command %strings%'[s] plugin [owner]\");\n          \n      \n    \n    \n  \n\nThe code should be edited accordingly to support multiple commands", "author": "FranKusmiruk", "createdAt": "2020-07-28T02:30:26Z", "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,\n+\tDESCRIPTION,\n+\tLABEL,\n+\tUSAGE,\n+\tALIASES,\n+\tPERMISSION,\n+\tPERMISSION_MESSAGE,\n+\tPLUGIN,\n+}\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");", "originalCommit": "c29ecda251db0d2306e1936b562afc7cfca5917b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQwMzU2Mg==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461403562", "bodyText": "I don't think people would use them to get multiple commands, but it's up for discussion", "author": "DeltaRays", "createdAt": "2020-07-28T08:20:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDMyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMxNTMzNA==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463315334", "bodyText": "This wasn't resolved, and believe me people find ways to make use of the expression returning multiple commands so it should be supported. I provided a class that should help with it on Discord, if anything.", "author": "FranKusmiruk", "createdAt": "2020-07-30T22:53:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDMyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1NTQ1MA==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463355450", "bodyText": "Also make sure to change the isSingle method when adding multiple value support", "author": "TheLimeGlass", "createdAt": "2020-07-31T01:16:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDMyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDU0Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461280547", "bodyText": "ParseResult should be imported directly", "author": "FranKusmiruk", "createdAt": "2020-07-28T02:31:20Z", "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,\n+\tDESCRIPTION,\n+\tLABEL,\n+\tUSAGE,\n+\tALIASES,\n+\tPERMISSION,\n+\tPERMISSION_MESSAGE,\n+\tPLUGIN,\n+}\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tInfoType type;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> commandName;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {", "originalCommit": "c29ecda251db0d2306e1936b562afc7cfca5917b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDcxMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461280711", "bodyText": "Again, the following statement should be on its own line", "author": "FranKusmiruk", "createdAt": "2020-07-28T02:31:54Z", "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,\n+\tDESCRIPTION,\n+\tLABEL,\n+\tUSAGE,\n+\tALIASES,\n+\tPERMISSION,\n+\tPERMISSION_MESSAGE,\n+\tPLUGIN,\n+}\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tInfoType type;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> commandName;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tcommandName = (Expression<String>) exprs[0];\n+\t\ttype = InfoType.values()[Math.floorDiv(matchedPattern, 2)];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tString commandName = this.commandName.getSingle(e);\n+\t\tif (commandName == null) return null;", "originalCommit": "c29ecda251db0d2306e1936b562afc7cfca5917b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDgwMg==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461280802", "bodyText": "Same here", "author": "FranKusmiruk", "createdAt": "2020-07-28T02:32:18Z", "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,\n+\tDESCRIPTION,\n+\tLABEL,\n+\tUSAGE,\n+\tALIASES,\n+\tPERMISSION,\n+\tPERMISSION_MESSAGE,\n+\tPLUGIN,\n+}\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tInfoType type;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> commandName;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tcommandName = (Expression<String>) exprs[0];\n+\t\ttype = InfoType.values()[Math.floorDiv(matchedPattern, 2)];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tString commandName = this.commandName.getSingle(e);\n+\t\tif (commandName == null) return null;\n+\t\tcommandName = commandName.toLowerCase().split(\" \")[0];\n+\t\tif (commandName.startsWith(\"/\")) commandName = commandName.substring(1);\n+\t\tCommand command = Commands.getCommandMap().getCommand(commandName);\n+\t\tif (command == null) return null;", "originalCommit": "c29ecda251db0d2306e1936b562afc7cfca5917b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4Mzc0Ng==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461283746", "bodyText": "this should be after the class declaration as a private enum and be declared after the main class's declaration.", "author": "FranKusmiruk", "createdAt": "2020-07-28T02:42:30Z", "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,", "originalCommit": "c29ecda251db0d2306e1936b562afc7cfca5917b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cb82e6918f0faa0408db216f87a6e2de876d5bf9", "url": "https://github.com/SkriptLang/Skript/commit/cb82e6918f0faa0408db216f87a6e2de876d5bf9", "message": "Merge branch 'master' into features/CommandInfo", "committedDate": "2020-07-28T08:21:16Z", "type": "commit"}, {"oid": "5ccac37e488722316dbf51fc537e13f8820fb6be", "url": "https://github.com/SkriptLang/Skript/commit/5ccac37e488722316dbf51fc537e13f8820fb6be", "message": "Updated everything", "committedDate": "2020-07-28T08:42:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxMzQ5Mw==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463213493", "bodyText": "minor nitpick, but can you remove one of the spaces?", "author": "APickledWalrus", "createdAt": "2020-07-30T19:12:15Z", "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t", "originalCommit": "5ccac37e488722316dbf51fc537e13f8820fb6be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxMzcwMg==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463213702", "bodyText": "spaces between the plus symbols? :D", "author": "APickledWalrus", "createdAt": "2020-07-30T19:12:35Z", "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tif (scriptCommandsOnly) {\n+\t\t\treturn Commands.getScriptCommands().toArray(new String[0]);\n+\t\t} else {\n+\t\t\tif (Commands.getCommandMap() == null)\n+\t\t\t\treturn null;\n+\t\t\treturn Commands.getCommandMap()\n+\t\t\t\t.getCommands()\n+\t\t\t\t.parallelStream()\n+\t\t\t\t.map(command -> command.getLabel())\n+\t\t\t\t.toArray(String[]::new);\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn false;\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends String> getReturnType() {\n+\t\treturn String.class;\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"all \"+(scriptCommandsOnly ? \"script \" : \" \")+ \"commands\";", "originalCommit": "5ccac37e488722316dbf51fc537e13f8820fb6be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxODM3Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463218377", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn commandName + \" command\";\n          \n          \n            \n            \t\treturn \"the \" + type.name().toLowerCase().replace(\"_\", \"\") + \" of command \" + commandName.toString(e, debug)\n          \n      \n    \n    \n  \n\nmay require some slight changes to the enum to make this work", "author": "APickledWalrus", "createdAt": "2020-07-30T19:21:50Z", "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tInfoType type;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> commandName;\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tcommandName = (Expression<String>) exprs[0];\n+\t\ttype = InfoType.values()[Math.floorDiv(matchedPattern, 2)];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tString commandName = this.commandName.getSingle(e);\n+\t\tif (commandName == null)\n+\t\t\treturn null;\n+\t\tcommandName = commandName.toLowerCase().split(\" \")[0];\n+\t\tif (commandName.startsWith(\"/\"))\n+\t\t\tcommandName = commandName.substring(1);\n+\t\tCommand command = Commands.getCommandMap().getCommand(commandName);\n+\t\tif (command == null)\n+\t\t\treturn null;\n+\t\tswitch (type) {\n+\t\t\tcase NAME:\n+\t\t\t\treturn new String[]{command.getName()};\n+\t\t\tcase DESCRIPTION:\n+\t\t\t\treturn new String[]{command.getDescription()};\n+\t\t\tcase LABEL:\n+\t\t\t\treturn new String[]{command.getLabel()};\n+\t\t\tcase USAGE:\n+\t\t\t\treturn new String[]{command.getUsage()};\n+\t\t\tcase ALIASES:\n+\t\t\t\treturn command.getAliases().toArray(new String[0]);\n+\t\t\tcase PERMISSION:\n+\t\t\t\treturn new String[]{command.getPermission()};\n+\t\t\tcase PERMISSION_MESSAGE:\n+\t\t\t\treturn new String[]{command.getPermissionMessage()};\n+\t\t\tcase PLUGIN:\n+\t\t\t\tif (command instanceof PluginCommand) {\n+\t\t\t\t\treturn new String[]{((PluginCommand) command).getPlugin().getName()};\n+\t\t\t\t} else if (command instanceof BukkitCommand) {\n+\t\t\t\t\treturn new String[]{\"Bukkit\"};\n+\t\t\t\t} else if (command.getClass().getPackage().getName().startsWith(\"org.spigot\")) {\n+\t\t\t\t\treturn new String[]{\"Spigot\"};\n+\t\t\t\t} else if (command.getClass().getPackage().getName().startsWith(\"com.destroystokyo.paper\")) {\n+\t\t\t\t\treturn new String[]{\"Paper\"};\n+\t\t\t\t}\n+\t\t}\n+\t\treturn new String[0];\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends String> getReturnType() {\n+\t\treturn String.class;\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn commandName + \" command\";", "originalCommit": "5ccac37e488722316dbf51fc537e13f8820fb6be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "707ae666c786540493a8ce8705db519354ca8b07", "url": "https://github.com/SkriptLang/Skript/commit/707ae666c786540493a8ce8705db519354ca8b07", "message": "Update src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java\n\nCo-authored-by: APickledWalrus <apickledwalrus@gmail.com>", "committedDate": "2020-07-30T21:28:14Z", "type": "commit"}, {"oid": "09c6656229c8893101c57a0d9130628ccab86cb6", "url": "https://github.com/SkriptLang/Skript/commit/09c6656229c8893101c57a0d9130628ccab86cb6", "message": "Fixed everything", "committedDate": "2020-07-30T21:31:04Z", "type": "commit"}, {"oid": "d8d9e693cf5886a37fd616de1d84081d078a2c12", "url": "https://github.com/SkriptLang/Skript/commit/d8d9e693cf5886a37fd616de1d84081d078a2c12", "message": "Merge branch 'master' into features/CommandInfo", "committedDate": "2020-07-30T21:31:50Z", "type": "commit"}, {"oid": "aee5614ef51950b351284d2172c00097ff372525", "url": "https://github.com/SkriptLang/Skript/commit/aee5614ef51950b351284d2172c00097ff372525", "message": "Merge remote-tracking branch 'origin/features/CommandInfo' into features/CommandInfo", "committedDate": "2020-07-30T22:14:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1NDgzMQ==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463354831", "bodyText": "space between methods", "author": "TheLimeGlass", "createdAt": "2020-07-31T01:14:33Z", "path": "src/main/java/ch/njol/skript/command/Commands.java", "diffHunk": "@@ -102,7 +102,13 @@\n \tstatic {\n \t\tinit(); // separate method for the annotation\n \t}\n-\t\n+\tpublic static Set<String> getScriptCommands(){\n+\t\treturn commands.keySet();\n+\t}", "originalCommit": "aee5614ef51950b351284d2172c00097ff372525", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1NTE4Mw==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463355183", "bodyText": "when making line breaks for methods, Java standards require two indentations not one.", "author": "TheLimeGlass", "createdAt": "2020-07-31T01:15:46Z", "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tif (scriptCommandsOnly) {\n+\t\t\treturn Commands.getScriptCommands().toArray(new String[0]);\n+\t\t} else {\n+\t\t\tif (Commands.getCommandMap() == null)\n+\t\t\t\treturn null;\n+\t\t\treturn Commands.getCommandMap()\n+\t\t\t\t.getCommands()", "originalCommit": "aee5614ef51950b351284d2172c00097ff372525", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "18b37667b3e50b344a89f7fcd6189b80b95004fb", "url": "https://github.com/SkriptLang/Skript/commit/18b37667b3e50b344a89f7fcd6189b80b95004fb", "message": "Merge branch 'master' into features/CommandInfo", "committedDate": "2020-07-31T11:28:55Z", "type": "commit"}, {"oid": "a9c53492491d1c3a1fe9113e6358fc38427c1ea3", "url": "https://github.com/SkriptLang/Skript/commit/a9c53492491d1c3a1fe9113e6358fc38427c1ea3", "message": "Added an empty line between methods in Commands, tabbed everything that needed to be tabbed 1 more 1 more, and updated ExprCommandInfo to support more commands", "committedDate": "2020-07-31T11:37:58Z", "type": "commit"}, {"oid": "197c26946359823ce22d02fb755e8d791e72e31f", "url": "https://github.com/SkriptLang/Skript/commit/197c26946359823ce22d02fb755e8d791e72e31f", "message": "Merge remote-tracking branch 'origin/features/CommandInfo' into features/CommandInfo", "committedDate": "2020-07-31T11:38:11Z", "type": "commit"}, {"oid": "9fe744ed85358f87fa461436fa0303d1db3845b1", "url": "https://github.com/SkriptLang/Skript/commit/9fe744ed85358f87fa461436fa0303d1db3845b1", "message": "Merge branch 'master' into features/CommandInfo", "committedDate": "2020-08-02T16:15:56Z", "type": "commit"}, {"oid": "a1412fb5d7ed9cf986d7fcbe2772a03a1ae444b2", "url": "https://github.com/SkriptLang/Skript/commit/a1412fb5d7ed9cf986d7fcbe2772a03a1ae444b2", "message": "Merge branch 'master' into features/CommandInfo", "committedDate": "2020-09-08T18:08:23Z", "type": "commit"}, {"oid": "202aa92d3d8aa7e387fff9d702a3a44892d472e9", "url": "https://github.com/SkriptLang/Skript/commit/202aa92d3d8aa7e387fff9d702a3a44892d472e9", "message": "modified a few things according to the suggestions", "committedDate": "2020-09-08T18:17:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MDQ3NQ==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r495480475", "bodyText": "space after this method", "author": "APickledWalrus", "createdAt": "2020-09-26T18:00:12Z", "path": "src/main/java/ch/njol/skript/command/Commands.java", "diffHunk": "@@ -102,7 +102,14 @@\n \tstatic {\n \t\tinit(); // separate method for the annotation\n \t}\n+\tpublic static Set<String> getScriptCommands(){\n+\t\treturn commands.keySet();\n+\t}\n \t\n+\t@Nullable\n+\tpublic static SimpleCommandMap getCommandMap(){\n+\t\treturn commandMap;\n+\t}", "originalCommit": "202aa92d3d8aa7e387fff9d702a3a44892d472e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MDU3Nw==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r495480577", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] [(1\u00a6script)] commands\");\n          \n          \n            \n            \t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"(all of the|all the|all) [registered] [(1\u00a6script)] commands\");", "author": "APickledWalrus", "createdAt": "2020-09-26T18:01:20Z", "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] [(1\u00a6script)] commands\");", "originalCommit": "202aa92d3d8aa7e387fff9d702a3a44892d472e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a593df6b4a7783326c285a30c3b10857c694c89f", "url": "https://github.com/SkriptLang/Skript/commit/a593df6b4a7783326c285a30c3b10857c694c89f", "message": "Merge branch 'master' into features/CommandInfo", "committedDate": "2020-09-26T18:20:13Z", "type": "commit"}, {"oid": "80e0162814c4c67b29569b9f5747a245d0ae163f", "url": "https://github.com/SkriptLang/Skript/commit/80e0162814c4c67b29569b9f5747a245d0ae163f", "message": "Modified the all commands pattern and added a nl after a method", "committedDate": "2020-09-26T18:28:30Z", "type": "commit"}, {"oid": "56983c9a5f8584aead53aaa338ddea0814a0fbf1", "url": "https://github.com/SkriptLang/Skript/commit/56983c9a5f8584aead53aaa338ddea0814a0fbf1", "message": "Merge remote-tracking branch 'origin/features/CommandInfo' into features/CommandInfo", "committedDate": "2020-09-26T18:28:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwMjM3OA==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r495502378", "bodyText": "My bad. My suggestion was flawed.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"(all of the|all the|all) [registered] [(1\u00a6script)] commands\");\n          \n          \n            \n            \t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[(all|the|all [of] the)] [registered] [(1\u00a6script)] commands\");", "author": "APickledWalrus", "createdAt": "2020-09-26T22:38:34Z", "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"(all of the|all the|all) [registered] [(1\u00a6script)] commands\");", "originalCommit": "56983c9a5f8584aead53aaa338ddea0814a0fbf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwMjQxMA==", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r495502410", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\"[the] aliases of command %strings%\", \"command %strings%'[s] aliases\",\n          \n          \n            \n            \t\t\t\"[(all|the|all [of] the)] aliases of command %strings%\", \"command %strings%'[s] aliases\",", "author": "APickledWalrus", "createdAt": "2020-09-26T22:38:59Z", "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Objects;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.CommandMap;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main command [label] of command %strings%\", \"command %strings%'[s] main command [name]\",\n+\t\t\t\"[the] description of command %strings%\", \"command %strings%'[s] description\",\n+\t\t\t\"[the] label of command %strings%\", \"command %strings%'[s] label\",\n+\t\t\t\"[the] usage of command %strings%\", \"command %strings%'[s] usage\",\n+\t\t\t\"[the] aliases of command %strings%\", \"command %strings%'[s] aliases\",", "originalCommit": "56983c9a5f8584aead53aaa338ddea0814a0fbf1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7ba3ee21cd65d2fef6ec9c816fa41f2ee5402944", "url": "https://github.com/SkriptLang/Skript/commit/7ba3ee21cd65d2fef6ec9c816fa41f2ee5402944", "message": "Update src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java\n\nCo-authored-by: APickledWalrus <apickledwalrus@gmail.com>", "committedDate": "2020-09-27T04:34:02Z", "type": "commit"}, {"oid": "24f92edd400bbecd3a1231b44dd4a3e049fc73cf", "url": "https://github.com/SkriptLang/Skript/commit/24f92edd400bbecd3a1231b44dd4a3e049fc73cf", "message": "Update src/main/java/ch/njol/skript/expressions/ExprAllCommands.java\n\nCo-authored-by: APickledWalrus <apickledwalrus@gmail.com>", "committedDate": "2020-09-27T04:34:12Z", "type": "commit"}, {"oid": "81ab3ffaca83ddad744b50bfb9efda1778ec18b7", "url": "https://github.com/SkriptLang/Skript/commit/81ab3ffaca83ddad744b50bfb9efda1778ec18b7", "message": "Merge branch 'master' into features/CommandInfo", "committedDate": "2020-10-06T19:27:25Z", "type": "commit"}, {"oid": "bf409c35e7b8d9962759bb35920e8b8d54173c15", "url": "https://github.com/SkriptLang/Skript/commit/bf409c35e7b8d9962759bb35920e8b8d54173c15", "message": "Merge branch 'master' into features/CommandInfo", "committedDate": "2020-10-28T17:21:37Z", "type": "commit"}, {"oid": "78bafb94435e2ce95cad61c7ef659edda7a5f1b0", "url": "https://github.com/SkriptLang/Skript/commit/78bafb94435e2ce95cad61c7ef659edda7a5f1b0", "message": "Updated license header", "committedDate": "2020-11-05T20:14:17Z", "type": "commit"}, {"oid": "63a702eae5541a291d0838ed6f9fc8f1dacae429", "url": "https://github.com/SkriptLang/Skript/commit/63a702eae5541a291d0838ed6f9fc8f1dacae429", "message": "Another license header fix", "committedDate": "2020-11-05T20:30:46Z", "type": "commit"}, {"oid": "19e55277854ede26715be8a190c08cbfef8be529", "url": "https://github.com/SkriptLang/Skript/commit/19e55277854ede26715be8a190c08cbfef8be529", "message": "Merge branch 'master' into features/CommandInfo", "committedDate": "2021-04-27T00:48:42Z", "type": "commit"}, {"oid": "e1b4cdb2e0cc2b584ea0304a92aac318d93fd00f", "url": "https://github.com/SkriptLang/Skript/commit/e1b4cdb2e0cc2b584ea0304a92aac318d93fd00f", "message": "Fix plurality of ExprCommandInfo", "committedDate": "2021-04-27T01:52:10Z", "type": "commit"}]}