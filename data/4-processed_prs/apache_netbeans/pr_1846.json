{"pr_number": 1846, "pr_title": "[NETBEANS-3428] FlatLaf: fixes for form designer", "pr_createdAt": "2020-01-05T11:30:05Z", "pr_url": "https://github.com/apache/netbeans/pull/1846", "timeline": [{"oid": "bded1d91a330cde7a925a2e9afc8e7bdc9ac3a51", "url": "https://github.com/apache/netbeans/commit/bded1d91a330cde7a925a2e9afc8e7bdc9ac3a51", "message": "[NETBEANS-3428] FlatLaf: fixes for form designer", "committedDate": "2020-01-05T11:22:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMTkyOQ==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363101929", "bodyText": "Which LAF is used in the form designer? Is it the same as the IDE? In that case, should the background color not be taken from the LAF rather than from a special constant? (Also, I wonder why \"Tree.background\" was used previously instead of the default JPanel background.)", "author": "eirikbakke", "createdAt": "2020-01-05T16:02:57Z", "path": "java/form/src/org/netbeans/modules/form/FormLoaderSettings.java", "diffHunk": "@@ -472,12 +472,13 @@ public void setPaletteInToolBar(boolean value) {\n      * @return background color of the designer.\n      */\n     public java.awt.Color getFormDesignerBackgroundColor() {\n-        Color defaultBackground = UIManager.getColor( \"Tree.background\" ); //NOI18N\n-        if( null == defaultBackground )\n+        Color defaultBackground = UIManager.getColor(\"nb.formdesigner.designer.background\"); //NOI18N\n+        if (defaultBackground == null)\n+            defaultBackground = UIManager.getColor(\"Tree.background\"); //NOI18N\n+        if (defaultBackground == null)", "originalCommit": "bded1d91a330cde7a925a2e9afc8e7bdc9ac3a51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNDEwMg==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363104102", "bodyText": "As far as I know the form designer always uses the IDE LAF.\nBut it is possible to preview the form with other LAFs in new window. (right-click on panel: \"Preview Design > LAF\")\n\nIn that case, should the background color not be taken from the LAF rather than from a special constant?\n\nNo sure what you mean. UIManager.getColor() gets the color from the LAF (if set).\nTree.background was probably used because it is white, while Panel.background is gray.\nBTW nb.formdesigner.designer.background is currently not used. I've added it for completeness.", "author": "DevCharly", "createdAt": "2020-01-05T16:40:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMTkyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExNDI5Ng==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363114296", "bodyText": "Oh, right, the constant is from the LAF. My main concern was that it would seem logical to take it from the JPanel background, rather than invent a new constant. But since the existing code doesn't do that, I suppose it makes sense to add a constant to preserve backwards-compatibility.\nHow come Tree.background is not dark for FlatLAF, though?", "author": "eirikbakke", "createdAt": "2020-01-05T20:11:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMTkyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM5Mzk0Mg==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363393942", "bodyText": "How come Tree.background is not dark for FlatLAF, though?\n\nIt is dark and it is used.\nI've first added UI value for the designer border color (because it was too bright) and thought that it is good idea to do the same for the designer background in case need to change it.", "author": "DevCharly", "createdAt": "2020-01-06T17:21:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMTkyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAxOTk1OA==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r364019958", "bodyText": "Sounds reasonable.", "author": "eirikbakke", "createdAt": "2020-01-08T00:45:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMTkyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjAzMg==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363102032", "bodyText": "Isn't this what the PROP_FORMDESIGNER_BORDER_COLOR property is for? Or does that have some other purpose?\nAlso, shouldn't this come from whichever LAF is being used to display form designer components? (As in my previous comment.)\nAlso, why is the new property using the word \"designer\" twice?", "author": "eirikbakke", "createdAt": "2020-01-05T16:04:57Z", "path": "java/form/src/org/netbeans/modules/form/FormLoaderSettings.java", "diffHunk": "@@ -497,9 +498,11 @@ public void setFormDesignerBackgroundColor(java.awt.Color value) {\n      * @return color of the border of the designer.\n      */\n     public java.awt.Color getFormDesignerBorderColor() {\n-        int rgb = getPreferences().getInt(PROP_FORMDESIGNER_BORDER_COLOR , new Color(224, 224, 255).getRGB());\n+        Color defaultBackground = UIManager.getColor(\"nb.formdesigner.designer.borderColor\"); //NOI18N", "originalCommit": "bded1d91a330cde7a925a2e9afc8e7bdc9ac3a51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNTAyOA==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363105028", "bodyText": "The class FormLoaderSettings manages the options that you can edit in \"Options > Java > GUI Builder\", but not all options in this class are implemented in the Options dialog. So it is not possible to change the background or border color in the Options dialog.", "author": "DevCharly", "createdAt": "2020-01-05T16:58:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNTU4Mg==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363105582", "bodyText": "Also, why is the new property using the word \"designer\" twice?\n\nThe idea was that nb.formdesigner is the module prefix and designer the component name within that module. But you're right. This is unnecessary. I'll remove it.", "author": "DevCharly", "createdAt": "2020-01-05T17:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExNDY2OQ==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363114669", "bodyText": "Makes sense.\nFlatLAF is adding a lot of new UIDefaults keys. Is there a reason why these were not needed to implement the other LAFs (e.g. Darcula, GTK, Aqua, Windows)? Is it related to the fact that FlatLAF is being implemented in a separate module, as opposed to in the o.n.swing.plaf module?\n(Adding more UIDefaults keys seems fine... it just requires the usual extra care associated with API changes.)", "author": "eirikbakke", "createdAt": "2020-01-05T20:19:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExNDgyNQ==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363114825", "bodyText": "Also, is there a convention of putting constants at the end of org.netbeans.swing.plaf.LFCustoms for every key in used in UIDefaults?", "author": "eirikbakke", "createdAt": "2020-01-05T20:22:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM4OTcyNw==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363389727", "bodyText": "Is there a reason why these were not needed to implement the other LAFs (e.g. Darcula, GTK, Aqua, Windows)?\n\nBecause the default values work for light themes. But look not so good for dark themes. Here are screenshots of Darcula and Dark Metal. The design border (red arrow) is way too light:\n\n\nAlso, is there a convention of putting constants at the end of org.netbeans.swing.plaf.LFCustoms for every key in used in UIDefaults?\n\nDon't know. Most of them can only be used in subclasses because they are protected. In case of FlatLaf, the values are in the properties files and constants are not used.", "author": "DevCharly", "createdAt": "2020-01-06T17:11:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjAzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAyMDk4Mw==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r364020983", "bodyText": "OK, I don't have strong opinions here...", "author": "eirikbakke", "createdAt": "2020-01-08T00:49:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjAzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjM1Nw==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363102357", "bodyText": "Am I right that these changes (in FlatLFCustoms) are related to the LAF's appearance as a whole, i.e. not specifically related to the form designer?", "author": "eirikbakke", "createdAt": "2020-01-05T16:10:41Z", "path": "platform/o.n.swing.laf.flatlaf/src/org/netbeans/swing/laf/flatlaf/FlatLFCustoms.java", "diffHunk": "@@ -63,6 +67,12 @@\n             \"nb.multitabs.button.left.icon\", FlatTabControlIcon.get(TabControlButton.ID_SCROLL_LEFT_BUTTON), // NOI18N\n             \"nb.multitabs.button.right.icon\", FlatTabControlIcon.get(TabControlButton.ID_SCROLL_RIGHT_BUTTON), // NOI18N\n             \"nb.multitabs.button.rollover\", true, // NOI18N\n+\n+            // Change some colors from ColorUIResource to Color because they are used as\n+            // background colors for checkboxes (e.g. in org.netbeans.modules.palette.ui.CategoryButton),\n+            // which in FlatLaf paint background only if background color is not a UIResource.\n+            \"PropSheet.setBackground\", new Color(UIManager.getColor(\"PropSheet.setBackground\").getRGB()),\n+            \"PropSheet.selectedSetBackground\", new Color(UIManager.getColor(\"PropSheet.selectedSetBackground\").getRGB()),", "originalCommit": "bded1d91a330cde7a925a2e9afc8e7bdc9ac3a51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwNjgxNA==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363106814", "bodyText": "Yes.\nThe controlFont is also used in other places. E.g. as fallback font in HtmlRenderer. The \"Terminal\" uses the size of controlFont to create its monospaced font for \"Terminal\" view and \"Options > Misc. > Terminal > Preview\".\nThe PropertySheet component is also used outside of the form designer.", "author": "DevCharly", "createdAt": "2020-01-05T17:36:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjM1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExNDk4Mg==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363114982", "bodyText": "I don't see a change in the property sheet checkbox rendering in the before/after screenshots. Am I missing something?", "author": "eirikbakke", "createdAt": "2020-01-05T20:25:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjM1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM4MzIwOQ==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r363383209", "bodyText": "The checkbox is in the designer palette, but it does not look like a checkbox because the check-icons are changed:", "author": "DevCharly", "createdAt": "2020-01-06T16:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjM1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAyMTUxNw==", "url": "https://github.com/apache/netbeans/pull/1846#discussion_r364021517", "bodyText": "Ah! Tricky use of JCheckBox there...", "author": "eirikbakke", "createdAt": "2020-01-08T00:51:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEwMjM1Nw=="}], "type": "inlineReview"}, {"oid": "941f1b1355ef08b0bd5b4455d695488c82673c38", "url": "https://github.com/apache/netbeans/commit/941f1b1355ef08b0bd5b4455d695488c82673c38", "message": "changed `nb.formdesigner.designer.`to `nb.formdesigner.`", "committedDate": "2020-01-05T17:40:53Z", "type": "commit"}]}