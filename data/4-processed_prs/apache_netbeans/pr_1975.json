{"pr_number": 1975, "pr_title": "Snapshot of APIs as of Apache NetBeans 11.3", "pr_createdAt": "2020-02-25T00:16:24Z", "pr_url": "https://github.com/apache/netbeans/pull/1975", "timeline": [{"oid": "89d5eaead6ca1339c2df2b84c96584c908cfc6cb", "url": "https://github.com/apache/netbeans/commit/89d5eaead6ca1339c2df2b84c96584c908cfc6cb", "message": "Snapshot of APIs as of Apache NetBeans 11.3 - 6b879cb782eaa4f13a731aff82eada11289a66f7", "committedDate": "2020-02-25T00:11:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY1MjgyMQ==", "url": "https://github.com/apache/netbeans/pull/1975#discussion_r383652821", "bodyText": "Added by @eirikbakke SVG efforts.", "author": "JaroslavTulach", "createdAt": "2020-02-25T04:28:51Z", "path": "platform/openide.util.ui/nbproject/org-openide-util-ui.sig", "diffHunk": "@@ -699,6 +699,18 @@ supr java.lang.Object\n hfds LOG,TRANS_LOCK,operatingSystem,pathURIConsistent,transExp,transLoader\n hcls RE\n \n+CLSS public abstract org.openide.util.CachedHiDPIIcon", "originalCommit": "89d5eaead6ca1339c2df2b84c96584c908cfc6cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY1MjkwNA==", "url": "https://github.com/apache/netbeans/pull/1975#discussion_r383652904", "bodyText": "Interesting. I haven't noticed that during the coding.", "author": "JaroslavTulach", "createdAt": "2020-02-25T04:29:18Z", "path": "platform/openide.util.ui/nbproject/org-openide-util-ui.sig", "diffHunk": "@@ -1711,6 +1723,22 @@ meth public abstract !hasdefault java.lang.String position()\n meth public abstract java.lang.Class<?>[] serviceType()\n meth public abstract java.lang.String path()\n \n+CLSS public abstract interface org.openide.util.spi.MutexEventProvider", "originalCommit": "89d5eaead6ca1339c2df2b84c96584c908cfc6cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY1MzAxNQ==", "url": "https://github.com/apache/netbeans/pull/1975#discussion_r383653015", "bodyText": "New SPI for Mutex, I see.", "author": "JaroslavTulach", "createdAt": "2020-02-25T04:29:54Z", "path": "platform/openide.util.ui/nbproject/org-openide-util-ui.sig", "diffHunk": "@@ -1711,6 +1723,22 @@ meth public abstract !hasdefault java.lang.String position()\n meth public abstract java.lang.Class<?>[] serviceType()\n meth public abstract java.lang.String path()\n \n+CLSS public abstract interface org.openide.util.spi.MutexEventProvider\n+meth public abstract org.openide.util.spi.MutexImplementation createMutex()\n+\n+CLSS public abstract interface org.openide.util.spi.MutexImplementation", "originalCommit": "89d5eaead6ca1339c2df2b84c96584c908cfc6cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY1MzExNg==", "url": "https://github.com/apache/netbeans/pull/1975#discussion_r383653116", "bodyText": "SVGLoader is expected change - related to work by @eirikbakke.", "author": "JaroslavTulach", "createdAt": "2020-02-25T04:30:20Z", "path": "platform/openide.util.ui/nbproject/org-openide-util-ui.sig", "diffHunk": "@@ -1711,6 +1723,22 @@ meth public abstract !hasdefault java.lang.String position()\n meth public abstract java.lang.Class<?>[] serviceType()\n meth public abstract java.lang.String path()\n \n+CLSS public abstract interface org.openide.util.spi.MutexEventProvider\n+meth public abstract org.openide.util.spi.MutexImplementation createMutex()\n+\n+CLSS public abstract interface org.openide.util.spi.MutexImplementation\n+meth public abstract <%0 extends java.lang.Object> {%%0} readAccess(org.openide.util.Mutex$ExceptionAction<{%%0}>) throws org.openide.util.MutexException\n+meth public abstract <%0 extends java.lang.Object> {%%0} writeAccess(org.openide.util.Mutex$ExceptionAction<{%%0}>) throws org.openide.util.MutexException\n+meth public abstract boolean isReadAccess()\n+meth public abstract boolean isWriteAccess()\n+meth public abstract void postReadRequest(java.lang.Runnable)\n+meth public abstract void postWriteRequest(java.lang.Runnable)\n+meth public abstract void readAccess(java.lang.Runnable)\n+meth public abstract void writeAccess(java.lang.Runnable)\n+\n+CLSS public abstract interface org.openide.util.spi.SVGLoader", "originalCommit": "89d5eaead6ca1339c2df2b84c96584c908cfc6cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}