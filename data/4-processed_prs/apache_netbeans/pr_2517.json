{"pr_number": 2517, "pr_title": "[NETBEANS-4981] Install nbjavac when needed", "pr_createdAt": "2020-11-03T07:38:24Z", "pr_url": "https://github.com/apache/netbeans/pull/2517", "timeline": [{"oid": "90d2af9e06cbc04f0a55dfe6d4f66556a0147178", "url": "https://github.com/apache/netbeans/commit/90d2af9e06cbc04f0a55dfe6d4f66556a0147178", "message": "Include nb/updatecenters in the nbcode cluster", "committedDate": "2020-11-02T12:29:04Z", "type": "commit"}, {"oid": "5d01f4b0ed56115993b5771cc317bf12455c29a0", "url": "https://github.com/apache/netbeans/commit/5d01f4b0ed56115993b5771cc317bf12455c29a0", "message": "Avoid NPE by detecting missing Java support and returning empty capabilities", "committedDate": "2020-11-03T08:34:02Z", "type": "commit"}, {"oid": "57986728fe60e130b5c3b9ee1fea34a38830d064", "url": "https://github.com/apache/netbeans/commit/57986728fe60e130b5c3b9ee1fea34a38830d064", "message": "Using setStatusBarMessage to intercept missing Java support and install it", "committedDate": "2020-11-03T09:57:47Z", "type": "commit"}, {"oid": "65083e03c75dae0c768587c074ac087012edb02b", "url": "https://github.com/apache/netbeans/commit/65083e03c75dae0c768587c074ac087012edb02b", "message": "Ignore events without any message", "committedDate": "2020-11-03T14:09:19Z", "type": "commit"}, {"oid": "4d48c7310251450ed1700028a563f14007e59a3b", "url": "https://github.com/apache/netbeans/commit/4d48c7310251450ed1700028a563f14007e59a3b", "message": "Manually control restart of LanguageClient with a handler. Always use activateWithJDK to launch NetBeans backend.", "committedDate": "2020-11-03T14:45:22Z", "type": "commit"}, {"oid": "0cb71ada8d7fb02672e7a1bc18b19eb9e6487051", "url": "https://github.com/apache/netbeans/commit/0cb71ada8d7fb02672e7a1bc18b19eb9e6487051", "message": "Reinitialize the debug adapter port after each restart", "committedDate": "2020-11-03T15:03:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjczNjgzOQ==", "url": "https://github.com/apache/netbeans/pull/2517#discussion_r516736839", "bodyText": "We have to use RequestProcessor.post as the support for status bar messages only gets initialized when this method returns.", "author": "JaroslavTulach", "createdAt": "2020-11-03T15:07:20Z", "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/Server.java", "diffHunk": "@@ -213,35 +211,49 @@ private void asyncOpenSelectedProjects(CompletableFuture f, List<FileObject> pro\n             }\n         }\n         \n-        private void showIndexingCompleted() {\n+        private JavaSource showIndexingCompleted(Project[] opened) {\n             try {\n-                JavaSource.create(ClasspathInfo.create(ClassPath.EMPTY, ClassPath.EMPTY, ClassPath.EMPTY))\n-                          .runWhenScanFinished(cc -> {\n-                  if (client.getNbCodeCapabilities().hasStatusBarMessageSupport()) {\n-                        client.showStatusBarMessage(new ShowStatusMessageParams(MessageType.Info, INDEXING_COMPLETED, 0));\n-                  } else {\n-                        client.showMessage(new ShowStatusMessageParams(MessageType.Info, INDEXING_COMPLETED, 0));\n-                  }\n-                  //todo: refresh diagnostics all open editor?\n-                }, true);\n+                final ClasspathInfo info = ClasspathInfo.create(ClassPath.EMPTY, ClassPath.EMPTY, ClassPath.EMPTY);\n+                final JavaSource source = JavaSource.create(info);\n+                if (source == null) {\n+                    SERVER_INIT_RP.post(() -> {", "originalCommit": "0cb71ada8d7fb02672e7a1bc18b19eb9e6487051", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjczNzcwNw==", "url": "https://github.com/apache/netbeans/pull/2517#discussion_r516737707", "bodyText": "This is the place that hooks up to the status messages. It needs to initialize first and only then it can handle the request for installation of nbjavac.", "author": "JaroslavTulach", "createdAt": "2020-11-03T15:08:32Z", "path": "java/java.lsp.server/vscode/src/extension.ts", "diffHunk": "@@ -274,54 +282,82 @@ function activateWithJDK(specifiedJDK: string | null, context: ExtensionContext,\n                 'nbcodeCapabilities' : {\n                     'statusBarMessageSupport' : true\n                 }\n+            },\n+            errorHandler: {\n+                error : function(_error: Error, _message: Message, count: number): ErrorAction {\n+                    return ErrorAction.Continue;\n+                },\n+                closed : function(): CloseAction {\n+                    activateWithJDK(specifiedJDK, context, log, false);\n+                    return CloseAction.DoNotRestart;\n+                }\n             }\n         }\n \n-        if (!client) {\n-            // Create the language client and start the client.\n-            client = new LanguageClient(\n-                    'java',\n-                    'NetBeans Java',\n-                    connection,\n-                    clientOptions\n-            );\n-\n-            // Start the client. This will also launch the server\n-            client.start();\n-            client.onReady().then(() => {\n-                commands.executeCommand('setContext', 'nbJavaLSReady', true);\n-                client.onNotification(StatusMessageRequest.type, showStatusBarMessage);\n-            });\n+        if (client) {\n+            client.stop();\n         }\n+        client = new LanguageClient(\n+                'java',\n+                'NetBeans Java',\n+                connection,\n+                clientOptions\n+        );\n+        client.start();\n+        client.onReady().then(() => {\n+            commands.executeCommand('setContext', 'nbJavaLSReady', true);\n+            client.onNotification(StatusMessageRequest.type, showStatusBarMessage);", "originalCommit": "0cb71ada8d7fb02672e7a1bc18b19eb9e6487051", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjczODI3Mg==", "url": "https://github.com/apache/netbeans/pull/2517#discussion_r516738272", "bodyText": "I was hunting this one for quite a long time. We have to set the debugPort to -1, so the subsequent parsing of the output changes it.", "author": "JaroslavTulach", "createdAt": "2020-11-03T15:09:19Z", "path": "java/java.lsp.server/vscode/src/extension.ts", "diffHunk": "@@ -243,6 +250,7 @@ function activateWithJDK(specifiedJDK: string | null, context: ExtensionContext,\n                         srv.disconnect();\n                         return;\n                     }\n+                    debugPort = -1;", "originalCommit": "0cb71ada8d7fb02672e7a1bc18b19eb9e6487051", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc0MDM5MA==", "url": "https://github.com/apache/netbeans/pull/2517#discussion_r516740390", "bodyText": "This should contribute a lot to the robustness of the NetBeans backend integration. Previously it was not guaranteed the launch process really goes thru the activateWithJDK booting sequence. By default (if there is no errorHandler) the NetBeans client is restarted automatically by trying to connect to dead NetBeans instance.\nWith this change a restart should replay the whole booting sequence in activateWithJDK.", "author": "JaroslavTulach", "createdAt": "2020-11-03T15:12:10Z", "path": "java/java.lsp.server/vscode/src/extension.ts", "diffHunk": "@@ -274,54 +282,82 @@ function activateWithJDK(specifiedJDK: string | null, context: ExtensionContext,\n                 'nbcodeCapabilities' : {\n                     'statusBarMessageSupport' : true\n                 }\n+            },\n+            errorHandler: {\n+                error : function(_error: Error, _message: Message, count: number): ErrorAction {\n+                    return ErrorAction.Continue;\n+                },\n+                closed : function(): CloseAction {\n+                    activateWithJDK(specifiedJDK, context, log, false);", "originalCommit": "0cb71ada8d7fb02672e7a1bc18b19eb9e6487051", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc0MTk0MQ==", "url": "https://github.com/apache/netbeans/pull/2517#discussion_r516741941", "bodyText": "If there is no JavaSource (e.g. no Java infrastructure installed), then our server is started, but it has no code editing capabilities - e.g. no additional queries needed JavaSource shall arrive.", "author": "JaroslavTulach", "createdAt": "2020-11-03T15:14:14Z", "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/Server.java", "diffHunk": "@@ -213,35 +211,49 @@ private void asyncOpenSelectedProjects(CompletableFuture f, List<FileObject> pro\n             }\n         }\n         \n-        private void showIndexingCompleted() {\n+        private JavaSource showIndexingCompleted(Project[] opened) {\n             try {\n-                JavaSource.create(ClasspathInfo.create(ClassPath.EMPTY, ClassPath.EMPTY, ClassPath.EMPTY))\n-                          .runWhenScanFinished(cc -> {\n-                  if (client.getNbCodeCapabilities().hasStatusBarMessageSupport()) {\n-                        client.showStatusBarMessage(new ShowStatusMessageParams(MessageType.Info, INDEXING_COMPLETED, 0));\n-                  } else {\n-                        client.showMessage(new ShowStatusMessageParams(MessageType.Info, INDEXING_COMPLETED, 0));\n-                  }\n-                  //todo: refresh diagnostics all open editor?\n-                }, true);\n+                final ClasspathInfo info = ClasspathInfo.create(ClassPath.EMPTY, ClassPath.EMPTY, ClassPath.EMPTY);\n+                final JavaSource source = JavaSource.create(info);\n+                if (source == null) {\n+                    SERVER_INIT_RP.post(() -> {\n+                        final String msg = NO_JAVA_SUPPORT + System.getProperty(\"java.version\");\n+                        showStatusBarMessage(MessageType.Error, msg, 5000);\n+                    });\n+                } else {\n+                    source.runWhenScanFinished(cc -> {\n+                        showStatusBarMessage(MessageType.Info, INDEXING_COMPLETED, 0);\n+                    }, true);\n+                }\n+                return source;\n             } catch (IOException ex) {\n                 throw new IllegalStateException(ex);\n             }\n         }\n+\n+        private void showStatusBarMessage(final MessageType type, final String msg, int timeout) {\n+            if (client.getNbCodeCapabilities().hasStatusBarMessageSupport()) {\n+                client.showStatusBarMessage(new ShowStatusMessageParams(type, msg, timeout));\n+            } else {\n+                client.showMessage(new ShowStatusMessageParams(type, msg, timeout));\n+            }\n+        }\n         \n-        private InitializeResult constructInitResponse() {\n+        private InitializeResult constructInitResponse(JavaSource src) {\n             ServerCapabilities capabilities = new ServerCapabilities();\n-            capabilities.setTextDocumentSync(TextDocumentSyncKind.Incremental);\n-            CompletionOptions completionOptions = new CompletionOptions();\n-            completionOptions.setResolveProvider(true);\n-            completionOptions.setTriggerCharacters(Collections.singletonList(\".\"));\n-            capabilities.setCompletionProvider(completionOptions);\n-            capabilities.setCodeActionProvider(true);\n-            capabilities.setDocumentSymbolProvider(true);\n-            capabilities.setDefinitionProvider(true);\n-            capabilities.setDocumentHighlightProvider(true);\n-            capabilities.setReferencesProvider(true);\n-            capabilities.setExecuteCommandProvider(new ExecuteCommandOptions(Arrays.asList(JAVA_BUILD_WORKSPACE, GRAALVM_PAUSE_SCRIPT)));\n+            if (src != null) {", "originalCommit": "0cb71ada8d7fb02672e7a1bc18b19eb9e6487051", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc0MzUyOA==", "url": "https://github.com/apache/netbeans/pull/2517#discussion_r516743528", "bodyText": "Without this check the output was full of nulls:", "author": "JaroslavTulach", "createdAt": "2020-11-03T15:16:18Z", "path": "platform/autoupdate.cli/src/org/netbeans/modules/autoupdate/cli/ModuleOptions.java", "diffHunk": "@@ -482,14 +482,22 @@ public CLIInternalHandle(String displayName, Env env) {\n         public CLIProgressUIWorker(Env env) {\n             this.env = env;\n         }\n+\n         @Override\n         public void processProgressEvent(ProgressEvent event) {\n-            env.getOutputStream().println(event.getMessage());\n+            printEvent(event);\n         }\n+\n         @Override\n         public void processSelectedProgressEvent(ProgressEvent event) {\n-            env.getOutputStream().println(event.getMessage());\n+            printEvent(event);\n+        }\n+\n+        private void printEvent(ProgressEvent event) {\n+            final String msg = event.getMessage();\n+            if (msg != null && msg.length() > 0) {", "originalCommit": "0cb71ada8d7fb02672e7a1bc18b19eb9e6487051", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}