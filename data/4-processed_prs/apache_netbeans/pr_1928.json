{"pr_number": 1928, "pr_title": "FlatLaf toolbar grips", "pr_createdAt": "2020-02-06T15:58:25Z", "pr_url": "https://github.com/apache/netbeans/pull/1928", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2MjY2Nw==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375962667", "bodyText": "The //NOI18N is missing, though I do not know how strict shall we be on that rule.", "author": "lkishalmi", "createdAt": "2020-02-06T17:03:01Z", "path": "platform/o.n.swing.laf.flatlaf/src/org/netbeans/swing/laf/flatlaf/ui/FlatToolbarDragger.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.swing.laf.flatlaf.ui;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+import com.formdev.flatlaf.util.UIScale;\n+\n+/**\n+ * Toolbar grip consistent with FlatLaf style.\n+ * Paint code is modeled after {@code com.formdev.flatlaf.ui.FlatToolBarBorder}.\n+ */\n+public class FlatToolbarDragger extends JPanel {\n+\tprivate static final int DOT_COUNT = 4;\n+\tprivate static final int DOT_SIZE = 2;\n+\tprivate static final int GRIP_WIDTH = DOT_SIZE * 3;\n+    /** Minimum size. */\n+    private final Dimension min;\n+    /** Maximum size. */\n+    private final Dimension max;\n+    protected final Color gripColor = UIManager.getColor( \"ToolBar.gripColor\" );", "originalCommit": "246995f667fb26c4a4124333ffea9ff6b5198a63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2ODkzMA==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375968930", "bodyText": "Oops, will correct this", "author": "AlexFalappa", "createdAt": "2020-02-06T17:14:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2MjY2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxODM5Nw==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r376018397", "bodyText": "done", "author": "AlexFalappa", "createdAt": "2020-02-06T18:52:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2MjY2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MjYxMA==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375972610", "bodyText": "For HiDPI on Java 8 change this line to return UIScale.scale(min);.", "author": "DevCharly", "createdAt": "2020-02-06T17:21:20Z", "path": "platform/o.n.swing.laf.flatlaf/src/org/netbeans/swing/laf/flatlaf/ui/FlatToolbarDragger.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.swing.laf.flatlaf.ui;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+import com.formdev.flatlaf.util.UIScale;\n+\n+/**\n+ * Toolbar grip consistent with FlatLaf style.\n+ * Paint code is modeled after {@code com.formdev.flatlaf.ui.FlatToolBarBorder}.\n+ */\n+public class FlatToolbarDragger extends JPanel {\n+\tprivate static final int DOT_COUNT = 4;\n+\tprivate static final int DOT_SIZE = 2;\n+\tprivate static final int GRIP_WIDTH = DOT_SIZE * 3;\n+    /** Minimum size. */\n+    private final Dimension min;\n+    /** Maximum size. */\n+    private final Dimension max;\n+    protected final Color gripColor = UIManager.getColor( \"ToolBar.gripColor\" );\n+\n+    public FlatToolbarDragger() {\n+        min = new Dimension(GRIP_WIDTH, GRIP_WIDTH);\n+        max = new Dimension(GRIP_WIDTH, Integer.MAX_VALUE);\n+    }\n+\n+    @Override\n+    public void paint (Graphics g) {\n+        Graphics2D g2 = (Graphics2D)g.create();\n+        try {\n+            Utils.setRenderingHints(g2);\n+            g2.setColor(gripColor);\n+            int dotSize = UIScale.scale(DOT_SIZE);\n+            int gapSize = dotSize;\n+            int gripSize = (dotSize * DOT_COUNT) + ((gapSize * (DOT_COUNT - 1)));\n+            // paint dots\n+            int y = Math.round((getHeight() - gripSize) / 2f);\n+            for(int i = 0; i < DOT_COUNT; i++) {\n+                g2.fillOval(DOT_SIZE, y, dotSize, dotSize);\n+                y += dotSize + gapSize;\n+            }\n+        } finally {\n+            g2.dispose();\n+        }\n+    }\n+\n+    @Override\n+    public Dimension getMinimumSize () {\n+        return min;", "originalCommit": "246995f667fb26c4a4124333ffea9ff6b5198a63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5MzU3MQ==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375993571", "bodyText": "Could you explain why this is needed? Does FlatLAF do its own scaling on Java 8?\nOn Java 9 and above I would expect getMinimumSize to return the same logical pixel value regardless of HiDPI scaling setting. Is this correct?", "author": "eirikbakke", "createdAt": "2020-02-06T18:01:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MjYxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5NDk2Mg==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375994962", "bodyText": "(I'd be inclined to disallow HiDPI scaling altogether on Java 8 and below, for consistency with other components that are not drawn by FlatLAF.)", "author": "eirikbakke", "createdAt": "2020-02-06T18:04:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MjYxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5NzM0Mg==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375997342", "bodyText": "OK, nevermind my comments here. Looking at https://github.com/JFormDesigner/FlatLaf/blob/master/flatlaf-core/src/main/java/com/formdev/flatlaf/util/UIScale.java I think I understand it. UIScale.scale(min) makes sense for consistency with other FlatLAF code.", "author": "eirikbakke", "createdAt": "2020-02-06T18:09:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MjYxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwMjQyNA==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r376002424", "bodyText": "Will do", "author": "AlexFalappa", "createdAt": "2020-02-06T18:20:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MjYxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MjgyNg==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375972826", "bodyText": "For HiDPI on Java 8 change this line to return UIScale.scale(max);.", "author": "DevCharly", "createdAt": "2020-02-06T17:21:41Z", "path": "platform/o.n.swing.laf.flatlaf/src/org/netbeans/swing/laf/flatlaf/ui/FlatToolbarDragger.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.swing.laf.flatlaf.ui;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+import com.formdev.flatlaf.util.UIScale;\n+\n+/**\n+ * Toolbar grip consistent with FlatLaf style.\n+ * Paint code is modeled after {@code com.formdev.flatlaf.ui.FlatToolBarBorder}.\n+ */\n+public class FlatToolbarDragger extends JPanel {\n+\tprivate static final int DOT_COUNT = 4;\n+\tprivate static final int DOT_SIZE = 2;\n+\tprivate static final int GRIP_WIDTH = DOT_SIZE * 3;\n+    /** Minimum size. */\n+    private final Dimension min;\n+    /** Maximum size. */\n+    private final Dimension max;\n+    protected final Color gripColor = UIManager.getColor( \"ToolBar.gripColor\" );\n+\n+    public FlatToolbarDragger() {\n+        min = new Dimension(GRIP_WIDTH, GRIP_WIDTH);\n+        max = new Dimension(GRIP_WIDTH, Integer.MAX_VALUE);\n+    }\n+\n+    @Override\n+    public void paint (Graphics g) {\n+        Graphics2D g2 = (Graphics2D)g.create();\n+        try {\n+            Utils.setRenderingHints(g2);\n+            g2.setColor(gripColor);\n+            int dotSize = UIScale.scale(DOT_SIZE);\n+            int gapSize = dotSize;\n+            int gripSize = (dotSize * DOT_COUNT) + ((gapSize * (DOT_COUNT - 1)));\n+            // paint dots\n+            int y = Math.round((getHeight() - gripSize) / 2f);\n+            for(int i = 0; i < DOT_COUNT; i++) {\n+                g2.fillOval(DOT_SIZE, y, dotSize, dotSize);\n+                y += dotSize + gapSize;\n+            }\n+        } finally {\n+            g2.dispose();\n+        }\n+    }\n+\n+    @Override\n+    public Dimension getMinimumSize () {\n+        return min;\n+    }\n+\n+    @Override\n+    public Dimension getPreferredSize () {\n+        return this.getMinimumSize ();\n+    }\n+\n+    @Override\n+    public Dimension getMaximumSize () {\n+        return max;", "originalCommit": "246995f667fb26c4a4124333ffea9ff6b5198a63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwMjU5Nw==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r376002597", "bodyText": "Will change this also", "author": "AlexFalappa", "createdAt": "2020-02-06T18:20:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MjgyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MzMwNw==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r375973307", "bodyText": "For HiDPI on Java 8 change (unscaled) DOT_SIZE to (scaled) dotSize.", "author": "DevCharly", "createdAt": "2020-02-06T17:22:34Z", "path": "platform/o.n.swing.laf.flatlaf/src/org/netbeans/swing/laf/flatlaf/ui/FlatToolbarDragger.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.netbeans.swing.laf.flatlaf.ui;\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+import com.formdev.flatlaf.util.UIScale;\n+\n+/**\n+ * Toolbar grip consistent with FlatLaf style.\n+ * Paint code is modeled after {@code com.formdev.flatlaf.ui.FlatToolBarBorder}.\n+ */\n+public class FlatToolbarDragger extends JPanel {\n+\tprivate static final int DOT_COUNT = 4;\n+\tprivate static final int DOT_SIZE = 2;\n+\tprivate static final int GRIP_WIDTH = DOT_SIZE * 3;\n+    /** Minimum size. */\n+    private final Dimension min;\n+    /** Maximum size. */\n+    private final Dimension max;\n+    protected final Color gripColor = UIManager.getColor( \"ToolBar.gripColor\" );\n+\n+    public FlatToolbarDragger() {\n+        min = new Dimension(GRIP_WIDTH, GRIP_WIDTH);\n+        max = new Dimension(GRIP_WIDTH, Integer.MAX_VALUE);\n+    }\n+\n+    @Override\n+    public void paint (Graphics g) {\n+        Graphics2D g2 = (Graphics2D)g.create();\n+        try {\n+            Utils.setRenderingHints(g2);\n+            g2.setColor(gripColor);\n+            int dotSize = UIScale.scale(DOT_SIZE);\n+            int gapSize = dotSize;\n+            int gripSize = (dotSize * DOT_COUNT) + ((gapSize * (DOT_COUNT - 1)));\n+            // paint dots\n+            int y = Math.round((getHeight() - gripSize) / 2f);\n+            for(int i = 0; i < DOT_COUNT; i++) {\n+                g2.fillOval(DOT_SIZE, y, dotSize, dotSize);", "originalCommit": "246995f667fb26c4a4124333ffea9ff6b5198a63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAwMjkwNA==", "url": "https://github.com/apache/netbeans/pull/1928#discussion_r376002904", "bodyText": "Will do also this", "author": "AlexFalappa", "createdAt": "2020-02-06T18:21:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MzMwNw=="}], "type": "inlineReview"}, {"oid": "47b66172a357c66db097af5c057076b38cf7cdf2", "url": "https://github.com/apache/netbeans/commit/47b66172a357c66db097af5c057076b38cf7cdf2", "message": "FlatLaf toolbar grips\n\nImplementation of toolbar grippers (or dragger) following FlatLaf design.", "committedDate": "2020-02-06T19:15:53Z", "type": "commit"}, {"oid": "47b66172a357c66db097af5c057076b38cf7cdf2", "url": "https://github.com/apache/netbeans/commit/47b66172a357c66db097af5c057076b38cf7cdf2", "message": "FlatLaf toolbar grips\n\nImplementation of toolbar grippers (or dragger) following FlatLaf design.", "committedDate": "2020-02-06T19:15:53Z", "type": "forcePushed"}]}