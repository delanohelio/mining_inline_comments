{"pr_number": 2051, "pr_title": "[NETBEANS-3428] FlatLaf: hover in multi-tabs", "pr_createdAt": "2020-03-28T13:02:00Z", "pr_url": "https://github.com/apache/netbeans/pull/2051", "timeline": [{"oid": "ba433f6528c50c65de292d533a738a84e6623622", "url": "https://github.com/apache/netbeans/commit/ba433f6528c50c65de292d533a738a84e6623622", "message": "[NETBEANS-3428] FlatLaf: hover in multi-tabs\n\nother LaFs are not changed\ntested with Metal, Nimbus and Windows LaF", "committedDate": "2020-03-28T11:00:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NDE4Mw==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r399864183", "bodyText": "Other LAFs, e.g. Windows, have a hover color as well. Why does FlatLAF need a new property here?\nIf the new property is needed, should the other LAFs be updated to use it as well?", "author": "eirikbakke", "createdAt": "2020-03-29T22:36:47Z", "path": "platform/core.multitabs/src/org/netbeans/core/multitabs/impl/TabDataRenderer.java", "diffHunk": "@@ -58,6 +58,7 @@\n     private static final Color underlineColor = UIManager.getColor(\"nb.multitabs.underlineColor\"); // NOI18N\n     private static final Color inactiveUnderlineColor = UIManager.getColor(\"nb.multitabs.inactiveUnderlineColor\"); // NOI18N\n     private static final Color activeBackground = UIManager.getColor(\"nb.multitabs.activeBackground\"); // NOI18N\n+    private static final Color hoverBackground = UIManager.getColor(\"nb.multitabs.hoverBackground\"); // NOI18N", "originalCommit": "ba433f6528c50c65de292d533a738a84e6623622", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ3MzU0Mw==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r400473543", "bodyText": "Other LAFs, e.g. Windows, have a hover color as well.\n\nThere are two implementation for editor tabs in NB:\n\n\"Tab Control\" (package org.netbeans.swing.tabcontrol)\n\"Multi-tabs\" (package org.netbeans.core.multitabs)\n\nTab-control is used by default and has hover colors in all Lafs (I think).\nMulti-tabs is used e.g. if tab placement is left/right/bottom (see #1865 for more options to enable multi-tabs). Multi-tabs did not support hover in the past. This PR adds hover to multi-tabs.\n\nIf the new property is needed, should the other LAFs be updated to use it as well?\n\nYes, this a good idea. Can be done in another PR.", "author": "DevCharly", "createdAt": "2020-03-30T20:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NDE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0MDI2OA==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r401940268", "bodyText": "Ah, I wasn't aware that different tab positions used a different implementation. Indeed on Windows these do not seem to support hover.", "author": "eirikbakke", "createdAt": "2020-04-01T22:11:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NDE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0MjAzOA==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r401942038", "bodyText": "Wait, but the screenshots show the editor tabs in the \"top\" position? Isn't that a tabcontrol type component, rather than a multitabs?", "author": "eirikbakke", "createdAt": "2020-04-01T22:15:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NDE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1NDk3OA==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r401954978", "bodyText": "Multi-tabs are also used for top position if you enable one of the 4 checkboxes at the bottom of the screenshot below:\n\nThe screenshot highlights all options that enable multi-tabs.\nI think I had enabled \"Sort opend docs by project\" when capturing the screenshots. Then only the popup menu is changed, but the tabs do not show additional information and look identical to Tab-control in FlatLaf. In other Lafs the Multi-tabs always look slightly different to Tab-control because Tab-control has UI delegates for different LaFs.", "author": "DevCharly", "createdAt": "2020-04-01T22:49:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NDE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2MjQ4MA==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r401962480", "bodyText": "OK, that explains it. I was curious, since I was thinking of doing some tweaks to the Windows LAF tabcontrol myself at some point.", "author": "eirikbakke", "createdAt": "2020-04-01T23:10:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NDE4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NDQ4OA==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r399864488", "bodyText": "Why are tab decorators not invoked in the isHover case? TabDecorator is a public API, so imagine having to describe this behavior in its Javadoc: \"if the UIManager property nb.multitabs.hoverBackground is defined, then paintAfter is only called when the tab is not hovered over\". That would be a really weird caveat.", "author": "eirikbakke", "createdAt": "2020-03-29T22:39:11Z", "path": "platform/core.multitabs/src/org/netbeans/core/multitabs/impl/TabDataRenderer.java", "diffHunk": "@@ -248,8 +255,10 @@ public void paint( Graphics g ) {\n             }\n \n             // paint tab decorators\n-            for( TabDecorator td : decorators ) {\n-                td.paintAfter( tabData, g, rect, isSelected );\n+            if (!isHover) {", "originalCommit": "ba433f6528c50c65de292d533a738a84e6623622", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4Nzk3Nw==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r400487977", "bodyText": "Why are tab decorators not invoked in the isHover case?\n\nThe reason was that I wanted to avoid that the \"project color bar\" (from PR #2048) is painted for hovered tabs. Probably a bad idea. I'll change it back...", "author": "DevCharly", "createdAt": "2020-03-30T20:55:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NDQ4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTk1Mg==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r399865952", "bodyText": "Don't you need to set these before calling repaint? The repaint typically ends up being scheduled for later, but it's cleaner to not assume this.", "author": "eirikbakke", "createdAt": "2020-03-29T22:52:28Z", "path": "platform/core.multitabs/src/org/netbeans/core/multitabs/impl/TabTableUI.java", "diffHunk": "@@ -173,6 +193,28 @@ public void mouseDragged( MouseEvent e ) {\n             @Override\n             public void mouseMoved( MouseEvent e ) {\n                 orig.mouseMoved( e );\n+\n+                if (hoverSupport) {\n+                    Point p = e.getPoint();\n+                    int row = table.rowAtPoint( p );\n+                    int column = table.columnAtPoint( p );\n+                    setHover(row, column);\n+                }\n+            }\n+\n+            private void setHover( int row, int column ) {\n+                if (row == hoverRow && column == hoverColumn) {\n+                    return;\n+                }\n+\n+                if (hoverRow != -1 && hoverColumn != -1) {\n+                    table.repaint(table.getCellRect(hoverRow, hoverColumn, true));\n+                }\n+                if (row != -1 && column != -1) {\n+                    table.repaint(table.getCellRect(row, column, true));\n+                }\n+                hoverRow = row;\n+                hoverColumn = column;", "originalCommit": "ba433f6528c50c65de292d533a738a84e6623622", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ3NzU1NA==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r400477554", "bodyText": "This does not work. The first repaint is necessary to repaint the tab that was hovered before (remove hover background). The second repaint repaints the currently hovered tab. Maybe I should add some comments...", "author": "DevCharly", "createdAt": "2020-03-30T20:36:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzODE3Ng==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r401938176", "bodyText": "I meant like this:\nint oldRow = hoverRow;\nint oldColumn = hoverColumn;\n\nhoverRow = row;\nhoverColumn = column;\nif (oldRow != -1 && oldColumn != -1) {\n    table.repaint(table.getCellRect(oldRow, oldColumn, true));\n}\nif (row != -1 && column != -1) {\n    table.repaint(table.getCellRect(row, column, true));\n}\n\nSince regardless of whether you are updating the new area or the old area, you want paintComponent to run according to the new state.", "author": "eirikbakke", "createdAt": "2020-04-01T22:06:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzODY2MA==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r401938660", "bodyText": "(Note: I edited this comment--see the latest version.)", "author": "eirikbakke", "createdAt": "2020-04-01T22:07:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0MTQ2Mw==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r401941463", "bodyText": "Ok, now I understand \ud83d\udc4d\nYou're right.\nI'll change it.", "author": "DevCharly", "createdAt": "2020-04-01T22:14:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTk1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2NjkyOQ==", "url": "https://github.com/apache/netbeans/pull/2051#discussion_r401966929", "bodyText": "Done", "author": "DevCharly", "createdAt": "2020-04-01T23:24:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTk1Mg=="}], "type": "inlineReview"}, {"oid": "9702e81c8ac9f15f59075356693b1d32535f5964", "url": "https://github.com/apache/netbeans/commit/9702e81c8ac9f15f59075356693b1d32535f5964", "message": "TabDataRenderer: invoke TabDecorator.paintAfter() also on hover", "committedDate": "2020-03-30T21:17:00Z", "type": "commit"}, {"oid": "9702e81c8ac9f15f59075356693b1d32535f5964", "url": "https://github.com/apache/netbeans/commit/9702e81c8ac9f15f59075356693b1d32535f5964", "message": "TabDataRenderer: invoke TabDecorator.paintAfter() also on hover", "committedDate": "2020-03-30T21:17:00Z", "type": "forcePushed"}, {"oid": "b1e7fef2c9359d05c56b4dd8abe1ac70fdf47865", "url": "https://github.com/apache/netbeans/commit/b1e7fef2c9359d05c56b4dd8abe1ac70fdf47865", "message": "TabTableUI: set fields with current hover row/column before repainting", "committedDate": "2020-04-01T23:22:56Z", "type": "commit"}]}