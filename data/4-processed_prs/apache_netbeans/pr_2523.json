{"pr_number": 2523, "pr_title": "Prevent race conditions during CLI install ", "pr_createdAt": "2020-11-05T15:03:19Z", "pr_url": "https://github.com/apache/netbeans/pull/2523", "timeline": [{"oid": "b9a6827c8c42fad7ee47660b7bfdd4b8d85d93ca", "url": "https://github.com/apache/netbeans/commit/b9a6827c8c42fad7ee47660b7bfdd4b8d85d93ca", "message": "Use a special exitcode when connecting to CLI as client. Do not run upgrade step thereafter.", "committedDate": "2020-11-05T14:31:26Z", "type": "commit"}, {"oid": "f778b00fd7f241bb19c98cf606b3dcbdbf5bf284", "url": "https://github.com/apache/netbeans/commit/f778b00fd7f241bb19c98cf606b3dcbdbf5bf284", "message": "Piggyback with NBJLS server relaunch after installation completes.", "committedDate": "2020-11-05T14:36:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI2MjI0Mw==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r518262243", "bodyText": "OK.", "author": "JaroslavTulach", "createdAt": "2020-11-05T18:12:46Z", "path": "platform/o.n.bootstrap/src/org/netbeans/MainImpl.java", "diffHunk": "@@ -60,7 +60,7 @@ public static void main (String args[]) throws Exception {\n         int res = execute (args, System.in, System.out, System.err, m);\n         if (res == -1) {\n             // Connected to another running NB instance and succeeded in making a call.\n-            return;\n+            System.exit(CLIHandler.Status.CONNECTED);", "originalCommit": "f778b00fd7f241bb19c98cf606b3dcbdbf5bf284", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI2MjUyNA==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r518262524", "bodyText": "OK.", "author": "JaroslavTulach", "createdAt": "2020-11-05T18:13:17Z", "path": "platform/o.n.bootstrap/launcher/windows/nbexec.cpp", "diffHunk": "@@ -43,9 +43,16 @@ extern \"C\" BOOL APIENTRY DllMain(HANDLE hModule,\n     return TRUE;\n }\n \n+volatile int exitStatus = 0;\n+\n void exitHook(int status) {\n+    exitStatus = status;\n     logMsg(\"Exit hook called with status %d\", status);\n-    launcher.onExit();\n+    // do not handle possible restarts, if we are just CLI-connecting to a running process.\n+    if (status != -252) {", "originalCommit": "f778b00fd7f241bb19c98cf606b3dcbdbf5bf284", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI2MzYxOA==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r518263618", "bodyText": "OK.", "author": "JaroslavTulach", "createdAt": "2020-11-05T18:15:06Z", "path": "platform/o.n.bootstrap/launcher/windows/platformlauncher.cpp", "diffHunk": "@@ -662,6 +664,10 @@ bool PlatformLauncher::restartRequested() {\n \n void PlatformLauncher::onExit() {\n     logMsg(\"onExit()\");\n+    if (exitStatus == -252) {", "originalCommit": "f778b00fd7f241bb19c98cf606b3dcbdbf5bf284", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY3Mzk4NQ==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r518673985", "bodyText": "How does it work with nbexec*.exe or nbexec*.dll? Do the binaries also need to be uploaded somewhere?", "author": "JaroslavTulach", "createdAt": "2020-11-06T10:54:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI2MzYxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgxOTY4OA==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r518819688", "bodyText": "! Yes, need to be uploaded to osuosl !", "author": "sdedic", "createdAt": "2020-11-06T15:19:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI2MzYxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI2NjkzNw==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r518266937", "bodyText": "I would prefer to reduce this static state somehow. Not sure how yet.", "author": "JaroslavTulach", "createdAt": "2020-11-05T18:20:40Z", "path": "java/java.lsp.server/vscode/src/extension.ts", "diffHunk": "@@ -163,14 +163,45 @@ export function activate(context: ExtensionContext) {\n     }));\n }\n \n+/**\n+ * Pending maintenance (install) task, activations should be chained after it.\n+ */\n+let maintenance : Promise<void> | null;\n+\n+/**\n+ * Pending activation flag. Will be cleared when the process produces some message or fails.\n+ */\n+let activationPending : boolean = false;", "originalCommit": "f778b00fd7f241bb19c98cf606b3dcbdbf5bf284", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc3NzM1NQ==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r518777355", "bodyText": "What do you mean by possible race, @sdedic?", "author": "JaroslavTulach", "createdAt": "2020-11-06T14:14:23Z", "path": "java/java.lsp.server/vscode/src/extension.ts", "diffHunk": "@@ -163,14 +163,45 @@ export function activate(context: ExtensionContext) {\n     }));\n }\n \n+/**\n+ * Pending maintenance (install) task, activations should be chained after it.\n+ */\n+let maintenance : Promise<void> | null;\n+\n+/**\n+ * Pending activation flag. Will be cleared when the process produces some message or fails.\n+ */\n+let activationPending : boolean = false;\n+\n function activateWithJDK(specifiedJDK: string | null, context: ExtensionContext, log : vscode.OutputChannel, notifyKill: boolean): void {\n-    if (nbProcess) {\n+    const a : Promise<void> | null = maintenance;\n+    if (activationPending) {\n+        // do not activate more than once in parallel.\n+        return;\n+    }\n+    activationPending = true;\n+    if (a != null) {\n+        a.then(() => doActivateWithJDK(specifiedJDK, context, log, notifyKill));\n+    } else {\n+        doActivateWithJDK(specifiedJDK, context, log, notifyKill);\n+    }\n+}\n+\n+function killNbProcess(notifyKill : boolean, specProcess?: ChildProcess) {\n+    let p = nbProcess;\n+    if (p && (!specProcess || specProcess == p)) {\n         if (notifyKill) {\n             vscode.window.setStatusBarMessage(\"Restarting Apache NetBeans Language Server.\", 2000);\n         }\n-        nbProcess.kill();\n+        p.kill();\n+        // PENDING: possible race", "originalCommit": "f778b00fd7f241bb19c98cf606b3dcbdbf5bf284", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMDg3Ng==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r518820876", "bodyText": "leftover; Promise reordering no longer happens, and the nodejs runtime schedules all callbacks in a single thread, right ?", "author": "sdedic", "createdAt": "2020-11-06T15:21:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc3NzM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE0MjMzMQ==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r519142331", "bodyText": "Everything in one extension runs in a single process.", "author": "JaroslavTulach", "createdAt": "2020-11-07T06:58:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc3NzM1NQ=="}], "type": "inlineReview"}, {"oid": "1cc2768daefb4da5634648644f14ab32d967cf4c", "url": "https://github.com/apache/netbeans/commit/1cc2768daefb4da5634648644f14ab32d967cf4c", "message": "Merge remote-tracking branch 'origin/delivery' into lsp/nbjavac-install-race", "committedDate": "2020-11-07T06:27:34Z", "type": "commit"}, {"oid": "315d120b98683e26e0076e418efc8e3f4980dbb0", "url": "https://github.com/apache/netbeans/commit/315d120b98683e26e0076e418efc8e3f4980dbb0", "message": "Delay and/or disable the restart LSP client after connection termination\nwith the hope to finish install tasks meanwhile and then restart explicitly", "committedDate": "2020-11-07T06:56:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE0Mjc3MA==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r519142770", "bodyText": "Let's play safe for 12.2: we don't have to restart immediately. Let's put there a timeout. Moreover, let's allow disabling this restart altogether...", "author": "JaroslavTulach", "createdAt": "2020-11-07T07:00:06Z", "path": "java/java.lsp.server/vscode/src/extension.ts", "diffHunk": "@@ -288,7 +328,8 @@ function activateWithJDK(specifiedJDK: string | null, context: ExtensionContext,\n                     return ErrorAction.Continue;\n                 },\n                 closed : function(): CloseAction {\n-                    activateWithJDK(specifiedJDK, context, log, false);\n+                    log.appendLine(\"Connection to Apache NetBeans Language Server closed.\");\n+                    restartWithJDKLater(10000, false);", "originalCommit": "315d120b98683e26e0076e418efc8e3f4980dbb0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE0MzA0MA==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r519143040", "bodyText": "...before installing, let's replace the restartWithJDKLater function with a dummy wrapper that does nothing and...", "author": "JaroslavTulach", "createdAt": "2020-11-07T07:01:05Z", "path": "java/java.lsp.server/vscode/src/extension.ts", "diffHunk": "@@ -346,14 +388,26 @@ function activateWithJDK(specifiedJDK: string | null, context: ExtensionContext,\n             const yes = \"Install GPLv2+CPEx code\";\n             window.showErrorMessage(\"Additional Java Support is needed\", yes).then(reply => {\n                 if (yes === reply) {\n-                    let installProcess = launcher.launch(info, \"--modules\", \"--install\", \".*nbjavac.*\");\n+                    vscode.window.setStatusBarMessage(\"Preparing Apache NetBeans Language Server for additional installation\", 2000);\n+                    restartWithJDKLater = function() {", "originalCommit": "315d120b98683e26e0076e418efc8e3f4980dbb0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE0MzIxOQ==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r519143219", "bodyText": "...let the installer start new copy of Apache NetBeans Language Server explicitly.", "author": "JaroslavTulach", "createdAt": "2020-11-07T07:01:44Z", "path": "java/java.lsp.server/vscode/src/extension.ts", "diffHunk": "@@ -346,14 +388,26 @@ function activateWithJDK(specifiedJDK: string | null, context: ExtensionContext,\n             const yes = \"Install GPLv2+CPEx code\";\n             window.showErrorMessage(\"Additional Java Support is needed\", yes).then(reply => {\n                 if (yes === reply) {\n-                    let installProcess = launcher.launch(info, \"--modules\", \"--install\", \".*nbjavac.*\");\n+                    vscode.window.setStatusBarMessage(\"Preparing Apache NetBeans Language Server for additional installation\", 2000);\n+                    restartWithJDKLater = function() {\n+                        log.appendLine(\"Ignoring request for restart of Apache NetBeans Language Server\");\n+                    };\n+                    killNbProcess(false);\n+                    let installProcess = launcher.launch(info, \"-J-Dnetbeans.close=true\", \"--modules\", \"--install\", \".*nbjavac.*\");\n                     let logData = function(d: any) {\n                         log.append(d.toString());\n                     };\n                     installProcess.stdout.on('data', logData);\n                     installProcess.stderr.on('data', logData);\n                     installProcess.on('close', function(code: number) {\n                         log.append(\"Additional Java Support installed with exit code \" + code);\n+                        // let the updater to settle down.\n+                        activateWithJDK(specifiedJDK, context, log, notifyKill);", "originalCommit": "315d120b98683e26e0076e418efc8e3f4980dbb0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4cecd48592bf0a1962f526aed88b9f8d213bd9e4", "url": "https://github.com/apache/netbeans/commit/4cecd48592bf0a1962f526aed88b9f8d213bd9e4", "message": "Wait after last child closes on Win.", "committedDate": "2020-11-07T19:53:44Z", "type": "commit"}, {"oid": "4cecd48592bf0a1962f526aed88b9f8d213bd9e4", "url": "https://github.com/apache/netbeans/commit/4cecd48592bf0a1962f526aed88b9f8d213bd9e4", "message": "Wait after last child closes on Win.", "committedDate": "2020-11-07T19:53:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1MDg3MA==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r519250870", "bodyText": "Well, is it really necessary to implement time travel here as we are just about to release NetBeans 12.2. Where the number 12.3 is coming from? So is this intentional or mistype or some coincidence or something has happend that I'm not aware of?", "author": "lkishalmi", "createdAt": "2020-11-08T03:28:35Z", "path": "platform/o.n.bootstrap/external/platform-launchers-12.3-license.txt", "diffHunk": "@@ -1,6 +1,6 @@\n Name: NetBeans Application Launchers\n Description: Windows Launchers for the NetBeans Platform\n-Version: 10.0\n+Version: 12.3", "originalCommit": "4cecd48592bf0a1962f526aed88b9f8d213bd9e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1NjczNA==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r519256734", "bodyText": "I was surprised by the 12.3 number as well. However I was surprised by the previous 10.0 version too. Then I concluded the number doesn't mean much as the release isn't going to use this ZIP file at all, but build from the sources.\nSv\u00e1\u0165a may provide his explanation soon.", "author": "JaroslavTulach", "createdAt": "2020-11-08T04:56:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1MDg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI3MTkyMQ==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r519271921", "bodyText": "Well, the launcher zip is only used when not building that from sources which is true almost always when not building a release. So I could understand that could be used for testing, still the last released launcher version is 12.1.\nI'm going to go to sleep now, checking this PR in about 8 hours from now.", "author": "lkishalmi", "createdAt": "2020-11-08T07:35:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1MDg3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1OTA5NQ==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r519259095", "bodyText": "The Win32 API for CreateProcess says:\nbInheritHandles: If this parameter is TRUE, each inheritable handle in the calling process is inherited by the new process.... Note that inherited handles have the same value and access rights as the original handles...\nBy passing TRUE we request typical UNIX-like behavior.\nThen there is a note: Terminal Services:  You cannot inherit handles across sessions. Additionally, if this parameter is TRUE, you must create the process in the same session as the caller. where  session probably means Remote Desktop Services session under which the specified process is running which is certainly not something we mangle. E.g. we should be safe to pass TRUE in our calls.", "author": "JaroslavTulach", "createdAt": "2020-11-08T05:32:26Z", "path": "platform/o.n.bootstrap/launcher/windows/platformlauncher.cpp", "diffHunk": "@@ -714,7 +720,8 @@ void PlatformLauncher::onExit() {\n         STARTUPINFO si = {0};\n         PROCESS_INFORMATION pi = {0};\n         si.cb = sizeof(STARTUPINFO);\n-        if (!CreateProcess(NULL, cmdLineStr, NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi)) {\n+\n+        if (!CreateProcess(NULL, cmdLineStr, NULL, NULL, TRUE, 0, NULL, NULL, &si, &pi)) {", "originalCommit": "4cecd48592bf0a1962f526aed88b9f8d213bd9e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTMxNjY0Mw==", "url": "https://github.com/apache/netbeans/pull/2523#discussion_r519316643", "bodyText": "@jtulach true observation with UNIX, but ... unlike UNIX windows have the obsession of locking opened files. Ideally the subprocess would only receive stdio/out/err handles; but that's not the case, all inheritables are passed. The point of spawning the launcher again and again is to get rid of the locked files (JARs typically) for update operations for in-process JVM.\nBut sources I've found so far suggest that JVM does not use inheritable handles at all - assuming for security reasons.", "author": "sdedic", "createdAt": "2020-11-08T09:29:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTI1OTA5NQ=="}], "type": "inlineReview"}, {"oid": "bcb21fadbb1b6ea2b82b17c7b5e617802b3cd335", "url": "https://github.com/apache/netbeans/commit/bcb21fadbb1b6ea2b82b17c7b5e617802b3cd335", "message": "Fixed launchers release number -> release.", "committedDate": "2020-11-08T09:49:51Z", "type": "commit"}]}