{"pr_number": 2530, "pr_title": "First attempt for Java getter/setter generator for the Java LSP server.", "pr_createdAt": "2020-11-09T22:17:47Z", "pr_url": "https://github.com/apache/netbeans/pull/2530", "timeline": [{"oid": "c64eb1a17d33899c890f1e0d8dc27444f8b2405d", "url": "https://github.com/apache/netbeans/commit/c64eb1a17d33899c890f1e0d8dc27444f8b2405d", "message": "First attempt for Java getter/setter generator for the Java LSP server.", "committedDate": "2020-11-09T22:14:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NTkwMQ==", "url": "https://github.com/apache/netbeans/pull/2530#discussion_r521845901", "bodyText": "Great, there is a test!", "author": "JaroslavTulach", "createdAt": "2020-11-12T05:20:12Z", "path": "java/java.lsp.server/test/unit/src/org/netbeans/modules/java/lsp/server/protocol/ServerTest.java", "diffHunk": "@@ -1134,6 +1140,93 @@ public void logMessage(MessageParams arg0) {\n         }\n     }\n \n+    public void testCodeActionGetterSetting() throws Exception {", "originalCommit": "c64eb1a17d33899c890f1e0d8dc27444f8b2405d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c48f4167cee530c9b47e05ab9f39c3e4310b85f2", "url": "https://github.com/apache/netbeans/commit/c48f4167cee530c9b47e05ab9f39c3e4310b85f2", "message": "Merging master into java-lsp-getters-setters", "committedDate": "2020-12-01T06:56:03Z", "type": "commit"}, {"oid": "7cccad540e67da6cd9e927e65dca129135ca9353", "url": "https://github.com/apache/netbeans/commit/7cccad540e67da6cd9e927e65dca129135ca9353", "message": "Removing broken import.", "committedDate": "2020-12-01T21:01:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA2MjkxMg==", "url": "https://github.com/apache/netbeans/pull/2530#discussion_r543062912", "bodyText": "I've noticed this code during #2587 and asked why we aren't using URLMapper.findURL(EXTERNAL)?", "author": "JaroslavTulach", "createdAt": "2020-12-15T05:44:32Z", "path": "java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/TextDocumentServiceImpl.java", "diffHunk": "@@ -1129,7 +1171,115 @@ private JavaSource getSource(String fileUri) {\n         }\n     }\n \n-    private static List<TextEdit> modify2TextEdits(JavaSource js, Task<WorkingCopy> task) throws IOException {\n+    public static Position createPosition(CompilationUnitTree cut, int offset) {\n+        return createPosition(cut.getLineMap(), offset);\n+    }\n+\n+    public static Position createPosition(LineMap lm, int offset) {\n+        return new Position((int) lm.getLineNumber(offset) - 1,\n+                            (int) lm.getColumnNumber(offset) - 1);\n+    }\n+\n+    public static Position createPosition(FileObject file, int offset) {\n+        try {\n+            EditorCookie ec = file.getLookup().lookup(EditorCookie.class);\n+            StyledDocument doc = ec.openDocument();\n+            int line = NbDocument.findLineNumber(doc, offset);\n+            int column = NbDocument.findLineColumn(doc, offset);\n+\n+            return new Position(line, column);\n+        } catch (IOException ex) {\n+            throw new IllegalStateException(ex);\n+        }\n+    }\n+\n+    public static int getOffset(Document doc, Position pos) {\n+        return LineDocumentUtils.getLineStartFromIndex((LineDocument) doc, pos.getLine()) + pos.getCharacter();\n+    }\n+\n+    private static String toUri(FileObject file) {\n+        if (FileUtil.isArchiveArtifact(file)) {", "originalCommit": "7cccad540e67da6cd9e927e65dca129135ca9353", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}