{"pr_number": 2386, "pr_title": "Cleanup of not just dependencies", "pr_createdAt": "2020-09-21T11:36:52Z", "pr_url": "https://github.com/apache/netbeans/pull/2386", "timeline": [{"oid": "c5216b7d30053057a6605353c76495b562209819", "url": "https://github.com/apache/netbeans/commit/c5216b7d30053057a6605353c76495b562209819", "message": "Removing useless import", "committedDate": "2020-09-21T11:19:10Z", "type": "commit"}, {"oid": "aedfcce28cedcf1eb07865af4b7966ca9ee6ee5d", "url": "https://github.com/apache/netbeans/commit/aedfcce28cedcf1eb07865af4b7966ca9ee6ee5d", "message": "Branding API to disable loading of previously opened projects on start", "committedDate": "2020-09-21T11:23:36Z", "type": "commit"}, {"oid": "78fbf67a2791cf66df872a94521aeff9e326a183", "url": "https://github.com/apache/netbeans/commit/78fbf67a2791cf66df872a94521aeff9e326a183", "message": "Search for FileObject if no DataObject found", "committedDate": "2020-09-21T11:24:27Z", "type": "commit"}, {"oid": "b43cff3c371ce2d3fee8857435b7e12ed907a290", "url": "https://github.com/apache/netbeans/commit/b43cff3c371ce2d3fee8857435b7e12ed907a290", "message": "Recognize, but ignore, new catalog element", "committedDate": "2020-09-21T11:27:39Z", "type": "commit"}, {"oid": "4f6979274c8b4474eda7d100fde1ca7adacf6d6c", "url": "https://github.com/apache/netbeans/commit/4f6979274c8b4474eda7d100fde1ca7adacf6d6c", "message": "Read fully and stop on broken SIGPIPE", "committedDate": "2020-09-21T11:29:05Z", "type": "commit"}, {"oid": "4b50155ac1e72da9263e5328b7a4cc0f161f884d", "url": "https://github.com/apache/netbeans/commit/4b50155ac1e72da9263e5328b7a4cc0f161f884d", "message": "Print warnings just once per VM run: Not listening on module system", "committedDate": "2020-09-21T11:30:45Z", "type": "commit"}, {"oid": "4198e62ca213e0b09f71a9bd6c8478839c96d73f", "url": "https://github.com/apache/netbeans/commit/4198e62ca213e0b09f71a9bd6c8478839c96d73f", "message": "Run without core.windows module being present", "committedDate": "2020-09-21T11:31:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3NTM2Nw==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r491975367", "bodyText": "The AutoUpdate task was very verbose with modern catalogs. Assuming this field got in with one of @matthiasblaesing  fixes, I've added it to the set of recognized, but not processed fields.", "author": "JaroslavTulach", "createdAt": "2020-09-21T11:42:10Z", "path": "nbbuild/antsrc/org/netbeans/nbbuild/AutoUpdateCatalogParser.java", "diffHunk": "@@ -240,6 +241,8 @@ public void endElement (String uri, String localName, String qName) throws SAXEx\n                 break;\n             case manifest :\n                 break;\n+            case message_digest:", "originalCommit": "b43cff3c371ce2d3fee8857435b7e12ed907a290", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3NTkwMA==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r491975900", "bodyText": "This message was printed out  everytime new instance of OverObjects was created in a unit test. Quite annoying. Enough to emit the warning once per test.", "author": "JaroslavTulach", "createdAt": "2020-09-21T11:43:20Z", "path": "platform/settings/src/org/netbeans/modules/settings/RecognizeInstanceObjects.java", "diffHunk": "@@ -93,24 +94,49 @@ protected Lookup lookupFor(Object obj) {\n         return null;\n     }\n     \n-    private static final class OverObjects extends ProxyLookup \n-    implements PropertyChangeListener, FileChangeListener {\n-        private final String path;\n-        \n-        public OverObjects(String path) {\n-            super(delegates(null, path));\n-            this.path = path;\n+    private static final class MSL implements PropertyChangeListener {\n+        private final PropertyChangeSupport pcs = new PropertyChangeSupport(this);\n+        public static final MSL DEFAULT = new MSL();\n+        static {\n             try {\n                 ModuleSystem ms = Main.getModuleSystem(false);\n                 if (ms != null) {\n                     ModuleManager man = ms.getManager();\n-                    man.addPropertyChangeListener(WeakListeners.propertyChange(this, man));\n+                    man.addPropertyChangeListener(WeakListeners.propertyChange(DEFAULT, man));\n                 } else {\n                     LOG.log(Level.WARNING, \"Not listening on module system\");", "originalCommit": "4b50155ac1e72da9263e5328b7a4cc0f161f884d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3NjQyNw==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r491976427", "bodyText": "Ant projects honor FileObject as a selection in the Lookup, but Maven projects didn't. After this change they will use FileObject (if no DataObject is found) as the indentification of main file to execute.", "author": "JaroslavTulach", "createdAt": "2020-09-21T11:44:29Z", "path": "java/maven/src/org/netbeans/modules/maven/spi/actions/AbstractMavenActionsProvider.java", "diffHunk": "@@ -88,6 +88,10 @@ public AbstractMavenActionsProvider() {\n             files.add(method.getFile());\n         }\n \n+        if (files.isEmpty()) {", "originalCommit": "78fbf67a2791cf66df872a94521aeff9e326a183", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NjE3Mg==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r492566172", "bodyText": "Also fixed in Gradle.", "author": "JaroslavTulach", "createdAt": "2020-09-22T08:39:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3NjQyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3NzM3Mw==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r491977373", "bodyText": "@tzezula, there is no need to OpenIDE-Module-Provides: cnb.org.netbeans.modules.projectapi.nb it is provided automatically. Rather than that the module now provides token org.netbeans.spi.project.ProjectManagerImplementation to stress the fact that it provides  implementation of that service.", "author": "JaroslavTulach", "createdAt": "2020-09-21T11:46:19Z", "path": "ide/projectapi.nb/manifest.mf", "diffHunk": "@@ -1,6 +1,6 @@\n Manifest-Version: 1.0\n OpenIDE-Module: org.netbeans.modules.projectapi.nb\n OpenIDE-Module-Localizing-Bundle: org/netbeans/modules/projectapi/nb/Bundle.properties\n-OpenIDE-Module-Provides: cnb.org.netbeans.modules.projectapi.nb\n-OpenIDE-Module-Specification-Version: 1.13\n+OpenIDE-Module-Provides: org.netbeans.spi.project.ProjectManagerImplementation", "originalCommit": "4198e62ca213e0b09f71a9bd6c8478839c96d73f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg5MDAwNQ==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r492890005", "bodyText": "OK.", "author": "tzezula", "createdAt": "2020-09-22T16:53:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3NzM3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3ODY2Ng==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r491978666", "bodyText": "@tzezula: Here we need an implementation of org.netbeans.spi.project.ProjectManagerImplementation. Previously the module recommended single implementation, but that wasn't enough. If the module was missing a NullPointerException was raised. Hence we \"need\" - e.g. the module isn't going to be enabled without an implementation, but the implementation can come from any module.", "author": "JaroslavTulach", "createdAt": "2020-09-21T11:48:01Z", "path": "ide/projectapi/manifest.mf", "diffHunk": "@@ -1,6 +1,6 @@\n Manifest-Version: 1.0\n OpenIDE-Module: org.netbeans.modules.projectapi/1\n-OpenIDE-Module-Specification-Version: 1.77\n+OpenIDE-Module-Specification-Version: 1.78\n OpenIDE-Module-Localizing-Bundle: org/netbeans/modules/projectapi/Bundle.properties\n OpenIDE-Module-Layer: org/netbeans/modules/projectapi/layer.xml\n-OpenIDE-Module-Recommends: cnb.org.netbeans.modules.projectapi.nb\n+OpenIDE-Module-Needs: org.netbeans.spi.project.ProjectManagerImplementation", "originalCommit": "4198e62ca213e0b09f71a9bd6c8478839c96d73f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg5MTAyNQ==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r492891025", "bodyText": "Makes sense.", "author": "tzezula", "createdAt": "2020-09-22T16:55:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3ODY2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk3OTA3Mg==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r491979072", "bodyText": "This module can run without window manager. Hence just \"recommends\".", "author": "JaroslavTulach", "createdAt": "2020-09-21T11:48:27Z", "path": "ide/web.browser.api/manifest.mf", "diffHunk": "@@ -2,5 +2,5 @@ Manifest-Version: 1.0\n OpenIDE-Module: org.netbeans.modules.web.browser.api\n OpenIDE-Module-Layer: org/netbeans/modules/web/browser/ui/resources/layer.xml\n OpenIDE-Module-Localizing-Bundle: org/netbeans/modules/web/browser/api/Bundle.properties\n-OpenIDE-Module-Requires: org.openide.windows.WindowManager\n+OpenIDE-Module-Recommends: org.openide.windows.WindowManager", "originalCommit": "4198e62ca213e0b09f71a9bd6c8478839c96d73f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "034a600c13290bc63581c87450b4a51050a98536", "url": "https://github.com/apache/netbeans/commit/034a600c13290bc63581c87450b4a51050a98536", "message": "Search for FileObject if no DataObject found", "committedDate": "2020-09-22T08:37:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NTgwMw==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r492565803", "bodyText": "This is the same fix as in Maven", "author": "JaroslavTulach", "createdAt": "2020-09-22T08:39:00Z", "path": "extide/gradle/src/org/netbeans/modules/gradle/api/execute/RunUtils.java", "diffHunk": "@@ -100,6 +100,9 @@ public static FileObject extractFileObjectfromLookup(Lookup lookup) {\n             SingleMethod method = methods.iterator().next();\n             files.add(method.getFile());\n         }\n+        if (files.isEmpty()) {\n+            files.addAll(lookup.lookupAll(FileObject.class));\n+        }", "originalCommit": "034a600c13290bc63581c87450b4a51050a98536", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cbecea396a77fb70c722bf3bc6fe0e7c2750a770", "url": "https://github.com/apache/netbeans/commit/cbecea396a77fb70c722bf3bc6fe0e7c2750a770", "message": "Avoiding UI operations in headless mode", "committedDate": "2020-09-22T09:05:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg5NDc0Mg==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r492894742", "bodyText": "It's an interesting usage of resource bundle. :-)\nBut I think it's rather a hack to use module resource bundle for configuration.\nDo we already use such a pattern somewhere?\nIf not I would prefer a method.", "author": "tzezula", "createdAt": "2020-09-22T17:01:13Z", "path": "ide/projectui/src/org/netbeans/modules/project/ui/OpenProjectList.java", "diffHunk": "@@ -441,12 +441,18 @@ boolean closeBeforeOpen(final Project[] arr) {\n                 }\n             });\n         }\n-            \n+\n+        @NbBundle.Messages({\n+            \"LOAD_PROJECTS_ON_START=true\"\n+        })\n         private void loadOnBackground() {\n-            lazilyOpenedProjects = new ArrayList<Project>();\n-            List<URL> URLs = OpenProjectListSettings.getInstance().getOpenProjectsURLs();\n-            final List<Project> initial = new ArrayList<Project>();\n-            final LinkedList<Project> projects = URLs2Projects(URLs);\n+            lazilyOpenedProjects = new ArrayList<>();\n+            final boolean loadProjectsOnStart = \"true\".equals(Bundle.LOAD_PROJECTS_ON_START());", "originalCommit": "cbecea396a77fb70c722bf3bc6fe0e7c2750a770", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE1OTk1Mg==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r493159952", "bodyText": "Yes, it is used at many places, controlling behavior of splash screen, controlling behavior of window system. We even have <api group='branding'..../> for that case - here is the current list of branding APIs.\nUsing branding API is useful if the change in behavior is made per NetBeans application - e.g. different behavior for NetBeans IDE, different for JDeveloper, different for VSCode, etc.", "author": "JaroslavTulach", "createdAt": "2020-09-23T02:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg5NDc0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkxNjg0NA==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r492916844", "bodyText": "I don't see the reason for this change - am I missing the dependency relationship?", "author": "matthiasblaesing", "createdAt": "2020-09-22T17:37:33Z", "path": "ide/javascript2.debug/nbproject/project.xml", "diffHunk": "@@ -114,6 +114,7 @@\n             <friend-packages>\n                 <friend>org.netbeans.modules.debugger.jpda.js</friend>\n                 <friend>org.netbeans.modules.debugger.jpda.truffle</friend>\n+                <friend>org.netbeans.modules.java.lsp.server</friend>", "originalCommit": "cbecea396a77fb70c722bf3bc6fe0e7c2750a770", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE2NDEyNw==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r493164127", "bodyText": "Good catch. This is a change needed for the java.lsp.server debugging, but not really a cleanup. Moreover one should bump module version when changing list of friends.\nLet's remove the change from this PR: 2847f6e", "author": "JaroslavTulach", "createdAt": "2020-09-23T02:43:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkxNjg0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkyMjcyOQ==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r492922729", "bodyText": "Just to  understand this correctly: Is the intention here, that parsing.indexing and parsing.nb are loosely coupled? I.e. parsing.indexing needs and implemenation of that SPI?", "author": "matthiasblaesing", "createdAt": "2020-09-22T17:47:28Z", "path": "ide/parsing.indexing/manifest.mf", "diffHunk": "@@ -4,4 +4,5 @@ OpenIDE-Module-Localizing-Bundle: org/netbeans/modules/parsing/indexing/Bundle.p\n OpenIDE-Module-Layer: org/netbeans/modules/parsing/impl/indexing/layer.xml\n AutoUpdate-Show-In-Client: false\n OpenIDE-Module-Implementation-Version: 1\n+OpenIDE-Module-Needs: org.netbeans.modules.parsing.impl.indexing.implspi.ActiveDocumentProvider", "originalCommit": "cbecea396a77fb70c722bf3bc6fe0e7c2750a770", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE2MjUxMQ==", "url": "https://github.com/apache/netbeans/pull/2386#discussion_r493162511", "bodyText": "I tried to assemble minimal application and I was getting IllegalStateException. Turned out that parsing.indexing cannot run without ActiveDocumentProvider. The OpenIDE-Module-Needs just formalizes that dependency. @tzezula may confirm, but the code in RepositoryUpdater speaks clearly:\n        this.activeDocProvider = Lookup.getDefault().lookup(ActiveDocumentProvider.class);\n        if (this.activeDocProvider == null) {\n            throw new IllegalStateException(\"No ActiveDocumentProvider instance in global lookup.\");    //NOI18N\n        }", "author": "JaroslavTulach", "createdAt": "2020-09-23T02:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkyMjcyOQ=="}], "type": "inlineReview"}, {"oid": "2847f6eb849f445bc7d25b08b74fa7fdb3da67a4", "url": "https://github.com/apache/netbeans/commit/2847f6eb849f445bc7d25b08b74fa7fdb3da67a4", "message": "Removing unrelated change in friend module list", "committedDate": "2020-09-23T02:41:24Z", "type": "commit"}]}