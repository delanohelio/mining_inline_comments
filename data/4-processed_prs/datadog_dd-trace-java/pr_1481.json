{"pr_number": 1481, "pr_title": "add time in queue", "pr_createdAt": "2020-05-21T01:30:46Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1481", "timeline": [{"oid": "acfde384a6a77ebec61a4c981a21ea842397271f", "url": "https://github.com/DataDog/dd-trace-java/commit/acfde384a6a77ebec61a4c981a21ea842397271f", "message": "add time in queue", "committedDate": "2020-05-21T01:28:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU1NDM5Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1481#discussion_r428554393", "bodyText": "Since both timestamps are wall clock based, this duration can be negative. If that would break things elsewhere, it should be guarded with a Math.max(consumeTime - produceTime, 0L)", "author": "richardstartin", "createdAt": "2020-05-21T09:49:05Z", "path": "dd-java-agent/instrumentation/kafka-clients-0.11/src/main/java/datadog/trace/instrumentation/kafka_clients/KafkaDecorator.java", "diffHunk": "@@ -59,6 +61,10 @@ public void onConsume(final AgentSpan span, final ConsumerRecord record) {\n       span.setTag(DDTags.RESOURCE_NAME, \"Consume Topic \" + topic);\n       span.setTag(\"partition\", record.partition());\n       span.setTag(\"offset\", record.offset());\n+\n+      final long produceTime = record.timestamp();\n+      final long consumeTime = TimeUnit.NANOSECONDS.toMillis(span.getLocalRootSpan().getStartTime());\n+      span.setTag(\"record.time_in_queue_milliseconds\", consumeTime - produceTime);", "originalCommit": "acfde384a6a77ebec61a4c981a21ea842397271f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY4MjI1MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1481#discussion_r428682251", "bodyText": "I agree with using max.  Also, can we rename to record.queue_time_ms? I think spelling it out is unnecessarily verbose.", "author": "tylerbenson", "createdAt": "2020-05-21T14:21:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU1NDM5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU1OTYxMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1481#discussion_r428559612", "bodyText": "If we add \"record.time_in_queue_milliseconds\" to DDTags we can avoid materialising its UTF-8 encoding during serialisation.", "author": "richardstartin", "createdAt": "2020-05-21T10:00:39Z", "path": "dd-java-agent/instrumentation/kafka-clients-0.11/src/main/java/datadog/trace/instrumentation/kafka_clients/KafkaDecorator.java", "diffHunk": "@@ -59,6 +61,10 @@ public void onConsume(final AgentSpan span, final ConsumerRecord record) {\n       span.setTag(DDTags.RESOURCE_NAME, \"Consume Topic \" + topic);\n       span.setTag(\"partition\", record.partition());\n       span.setTag(\"offset\", record.offset());\n+\n+      final long produceTime = record.timestamp();\n+      final long consumeTime = TimeUnit.NANOSECONDS.toMillis(span.getLocalRootSpan().getStartTime());\n+      span.setTag(\"record.time_in_queue_milliseconds\", consumeTime - produceTime);", "originalCommit": "acfde384a6a77ebec61a4c981a21ea842397271f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY3OTA5MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1481#discussion_r428679090", "bodyText": "we haven't really done this to all the integrations...  for example, see line 62-63.  Let's not worry about it in this PR.", "author": "tylerbenson", "createdAt": "2020-05-21T14:16:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU1OTYxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY4MjQ4NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1481#discussion_r428682484", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  final long consumeTime = TimeUnit.NANOSECONDS.toMillis(span.getLocalRootSpan().getStartTime());\n          \n          \n            \n                  final long consumeTime = TimeUnit.NANOSECONDS.toMillis(span.getStartTime());\n          \n      \n    \n    \n  \n\nSemantically, the span passed into the method is the one representing the consuming of the message.  Besides, it will always be the root span anyway.", "author": "tylerbenson", "createdAt": "2020-05-21T14:21:38Z", "path": "dd-java-agent/instrumentation/kafka-clients-0.11/src/main/java/datadog/trace/instrumentation/kafka_clients/KafkaDecorator.java", "diffHunk": "@@ -59,6 +61,10 @@ public void onConsume(final AgentSpan span, final ConsumerRecord record) {\n       span.setTag(DDTags.RESOURCE_NAME, \"Consume Topic \" + topic);\n       span.setTag(\"partition\", record.partition());\n       span.setTag(\"offset\", record.offset());\n+\n+      final long produceTime = record.timestamp();\n+      final long consumeTime = TimeUnit.NANOSECONDS.toMillis(span.getLocalRootSpan().getStartTime());", "originalCommit": "acfde384a6a77ebec61a4c981a21ea842397271f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ef11aa02f3f6746740ff4ddb177e4dab0fd94531", "url": "https://github.com/DataDog/dd-trace-java/commit/ef11aa02f3f6746740ff4ddb177e4dab0fd94531", "message": "fix kafka client tests, floor duration at 0, move tag names to constants class so we can capture their encodings", "committedDate": "2020-05-21T17:14:07Z", "type": "commit"}, {"oid": "c4092c0685602eb0b9b3f9cfdd93f561161e3761", "url": "https://github.com/DataDog/dd-trace-java/commit/c4092c0685602eb0b9b3f9cfdd93f561161e3761", "message": "fix dependent test in kafka streams", "committedDate": "2020-05-21T18:06:26Z", "type": "commit"}]}