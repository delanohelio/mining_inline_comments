{"pr_number": 1680, "pr_title": "Add Service Name Detection (#1649) back in", "pr_createdAt": "2020-07-14T15:05:56Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1680", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ2Mjk0NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1680#discussion_r454462944", "bodyText": "Not sure if load this class using this.getClassLoader() is the best approach.", "author": "drodriguezhdez", "createdAt": "2020-07-14T15:56:00Z", "path": "utils/test-utils/src/main/groovy/datadog/trace/util/test/DDSpecification.groovy", "diffHunk": "@@ -51,4 +53,19 @@ abstract class DDSpecification extends Specification {\n       .installOn(instrumentation)\n     isConfigInstanceModifiable = true\n   }\n+\n+  //Clean captured environment to avoid affecting Config settings with platform dependant properties.\n+  static void cleanCapturedEnvironment() {\n+    try {\n+      def capturedEnvClass = this.getClassLoader().loadClass(CAPTURED_ENV)", "originalCommit": "e74f342027827ddaba40103dfd7caae99b65718d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "50248c6ede5e6179209f767ed4861f166ed5d8ea", "url": "https://github.com/DataDog/dd-trace-java/commit/50248c6ede5e6179209f767ed4861f166ed5d8ea", "message": "Assert serviceName is not empty", "committedDate": "2020-07-15T08:55:59Z", "type": "forcePushed"}, {"oid": "bc02ea1a5a5b3df3c69573be7e452814636c96a5", "url": "https://github.com/DataDog/dd-trace-java/commit/bc02ea1a5a5b3df3c69573be7e452814636c96a5", "message": "Assert serviceName is not empty", "committedDate": "2020-07-15T15:27:03Z", "type": "forcePushed"}, {"oid": "d4f6915ba10627ba959a42c2d33ece47ed8511d2", "url": "https://github.com/DataDog/dd-trace-java/commit/d4f6915ba10627ba959a42c2d33ece47ed8511d2", "message": "Adapt test dd-trace-core to assert serviceName is present", "committedDate": "2020-07-16T08:10:47Z", "type": "forcePushed"}, {"oid": "367602488af1a440f8a4ac9266400bf68f796835", "url": "https://github.com/DataDog/dd-trace-java/commit/367602488af1a440f8a4ac9266400bf68f796835", "message": "Adapt test dd-trace-core to assert serviceName is present", "committedDate": "2020-07-16T07:42:41Z", "type": "forcePushed"}, {"oid": "9485cd1e6a0a7e27a3dbb719f3871b98bfeaf2fd", "url": "https://github.com/DataDog/dd-trace-java/commit/9485cd1e6a0a7e27a3dbb719f3871b98bfeaf2fd", "message": "Adapt test dd-trace-core to assert serviceName is present", "committedDate": "2020-07-20T06:33:26Z", "type": "forcePushed"}, {"oid": "6b4e8c047ec4b9301d1906bc7910ebbf15b0bc08", "url": "https://github.com/DataDog/dd-trace-java/commit/6b4e8c047ec4b9301d1906bc7910ebbf15b0bc08", "message": "Adapt test dd-trace-core to assert serviceName is present", "committedDate": "2020-07-20T08:12:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQzMjQ3Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1680#discussion_r457432477", "bodyText": "What will the new value of this be?", "author": "tylerbenson", "createdAt": "2020-07-20T14:22:54Z", "path": "dd-java-agent/instrumentation/akka-http-10.0/src/lagomTest/groovy/LagomTest.groovy", "diffHunk": "@@ -59,7 +59,7 @@ class LagomTest extends AgentTestRunner {\n     assertTraces(1) {\n       trace(0, 2) {\n         span(0) {\n-          serviceName \"unnamed-java-app\"\n+          hasServiceName()", "originalCommit": "6b4e8c047ec4b9301d1906bc7910ebbf15b0bc08", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2OTM3NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1680#discussion_r457869374", "bodyText": "The new value is something like worker.org.gradle.process.internal.worker.GradleWorkerMain or similar. This is something totally environment dependant, so we cannot assert a concrete serviceName if we don't configure one.", "author": "drodriguezhdez", "createdAt": "2020-07-21T06:38:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQzMjQ3Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQzNDY4Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1680#discussion_r457434687", "bodyText": "When would this ever not be the case?", "author": "tylerbenson", "createdAt": "2020-07-20T14:25:06Z", "path": "dd-java-agent/testing/src/main/groovy/datadog/trace/agent/test/asserts/SpanAssert.groovy", "diffHunk": "@@ -41,6 +41,10 @@ class SpanAssert {\n     }\n   }\n \n+  def hasServiceName() {\n+    assert span.serviceName != null && !span.serviceName.isEmpty()", "originalCommit": "6b4e8c047ec4b9301d1906bc7910ebbf15b0bc08", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg2OTg0Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1680#discussion_r457869843", "bodyText": "Probably never, and that's exactly what I'd like to assert. That the service name is never \"empty\".", "author": "drodriguezhdez", "createdAt": "2020-07-21T06:39:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQzNDY4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEzMTc4OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1680#discussion_r458131788", "bodyText": "Can we have that done automatically in SpanAssert instead of relying on this method being called in the test?", "author": "tylerbenson", "createdAt": "2020-07-21T14:16:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQzNDY4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU3OTE2Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1680#discussion_r458579163", "bodyText": "Done \ud83d\udc4d", "author": "drodriguezhdez", "createdAt": "2020-07-22T07:06:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQzNDY4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ0MTYyOA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1680#discussion_r457441628", "bodyText": "Could we add a comment to indicate this class should be considered internal, and not depended on directly?  I'd like to avoid adding more classes we have to maintain in the public API.", "author": "tylerbenson", "createdAt": "2020-07-20T14:32:15Z", "path": "dd-trace-api/src/main/java/datadog/trace/api/env/CapturedEnvironment.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package datadog.trace.api.env;\n+\n+import datadog.trace.api.config.GeneralConfig;\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * The {@code CapturedEnvironment} instance keeps those {@code Config} values which are platform\n+ * dependant.\n+ */\n+@Slf4j\n+public class CapturedEnvironment {", "originalCommit": "6b4e8c047ec4b9301d1906bc7910ebbf15b0bc08", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg3MTI0MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1680#discussion_r457871240", "bodyText": "Done \ud83d\udc4d", "author": "drodriguezhdez", "createdAt": "2020-07-21T06:42:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ0MTYyOA=="}], "type": "inlineReview"}, {"oid": "cdf1254c494206509b24ef98a3a39d41da929f04", "url": "https://github.com/DataDog/dd-trace-java/commit/cdf1254c494206509b24ef98a3a39d41da929f04", "message": "Rebase master to branch", "committedDate": "2020-07-22T06:55:48Z", "type": "commit"}, {"oid": "d135c705ad8e3cb82ca2d57f3a03ffcf0f18aed8", "url": "https://github.com/DataDog/dd-trace-java/commit/d135c705ad8e3cb82ca2d57f3a03ffcf0f18aed8", "message": "Assert serviceName is not empty", "committedDate": "2020-07-22T06:56:34Z", "type": "commit"}, {"oid": "fd982cc9a1ecfcd4156c55f995c4f6efdf0962c5", "url": "https://github.com/DataDog/dd-trace-java/commit/fd982cc9a1ecfcd4156c55f995c4f6efdf0962c5", "message": "Assert serviceName is not empty", "committedDate": "2020-07-22T06:56:34Z", "type": "commit"}, {"oid": "dbce2965ff931dd1e5a6b4e1c520fbaf89f59131", "url": "https://github.com/DataDog/dd-trace-java/commit/dbce2965ff931dd1e5a6b4e1c520fbaf89f59131", "message": "Revert \"Revert \"Merge pull request #1649 from DataDog/drodriguezhdez/automati\u2026\"", "committedDate": "2020-07-22T07:03:33Z", "type": "commit"}, {"oid": "be55c25d5bd0f229e61ea3363bdbf9b98cdf66b8", "url": "https://github.com/DataDog/dd-trace-java/commit/be55c25d5bd0f229e61ea3363bdbf9b98cdf66b8", "message": "Assert serviceName is not empty", "committedDate": "2020-07-22T07:03:39Z", "type": "commit"}, {"oid": "2c165a90a7d4a901fd1b837d785d52ec69d8128d", "url": "https://github.com/DataDog/dd-trace-java/commit/2c165a90a7d4a901fd1b837d785d52ec69d8128d", "message": "Assert serviceName is not empty", "committedDate": "2020-07-22T07:03:39Z", "type": "commit"}, {"oid": "72d743aeeb020dadb1b369af3e67512665954b92", "url": "https://github.com/DataDog/dd-trace-java/commit/72d743aeeb020dadb1b369af3e67512665954b92", "message": "Adapt test dd-trace-core to assert serviceName is present", "committedDate": "2020-07-22T07:03:39Z", "type": "commit"}, {"oid": "600d520b5e3c90c777fbf4b9aefaee1ba70818ef", "url": "https://github.com/DataDog/dd-trace-java/commit/600d520b5e3c90c777fbf4b9aefaee1ba70818ef", "message": "Apply suggestions from PR feedback.", "committedDate": "2020-07-22T07:03:39Z", "type": "commit"}, {"oid": "c340651ba734f617f58e42e4ab4a09ef83c61368", "url": "https://github.com/DataDog/dd-trace-java/commit/c340651ba734f617f58e42e4ab4a09ef83c61368", "message": "hasServiceName is asserted in assertDefaults() at SpanAssert", "committedDate": "2020-07-22T07:03:39Z", "type": "commit"}, {"oid": "c340651ba734f617f58e42e4ab4a09ef83c61368", "url": "https://github.com/DataDog/dd-trace-java/commit/c340651ba734f617f58e42e4ab4a09ef83c61368", "message": "hasServiceName is asserted in assertDefaults() at SpanAssert", "committedDate": "2020-07-22T07:03:39Z", "type": "forcePushed"}, {"oid": "79c75a24f06e49460450795994a70c909c457d06", "url": "https://github.com/DataDog/dd-trace-java/commit/79c75a24f06e49460450795994a70c909c457d06", "message": "Assert serviceName is not empty in LogContextInjectionTestBase", "committedDate": "2020-07-22T07:31:13Z", "type": "commit"}]}