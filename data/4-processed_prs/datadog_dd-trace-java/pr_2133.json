{"pr_number": 2133, "pr_title": "Simplify context store read check", "pr_createdAt": "2020-11-30T11:58:37Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/2133", "timeline": [{"oid": "aefbc2ac1fc7561575b2e3b88413dd3365e0ee27", "url": "https://github.com/DataDog/dd-trace-java/commit/aefbc2ac1fc7561575b2e3b88413dd3365e0ee27", "message": "Prefer constants when matching against bytecode", "committedDate": "2020-11-30T11:30:17Z", "type": "commit"}, {"oid": "b820583a482dcf36fff3e81b4c810d9a8fb16e6f", "url": "https://github.com/DataDog/dd-trace-java/commit/b820583a482dcf36fff3e81b4c810d9a8fb16e6f", "message": "Remove partial JVM simulation and replace with simple constant check", "committedDate": "2020-11-30T11:45:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0NTI5NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2133#discussion_r532545295", "bodyText": "Sorry to bikeshed but can we not do snake case?", "author": "richardstartin", "createdAt": "2020-11-30T11:59:55Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/ContextStoreReadsRewritingVisitor.java", "diffHunk": "@@ -107,24 +110,20 @@ public void visitMethodInsn(\n               final String name,\n               final String descriptor,\n               final boolean isInterface) {\n-            pushOpcode(opcode);\n-            if (Utils.getInternalName(CONTEXT_GET_METHOD.getDeclaringClass().getName())\n-                    .equals(owner)\n-                && CONTEXT_GET_METHOD.getName().equals(name)\n-                && Type.getMethodDescriptor(CONTEXT_GET_METHOD).equals(descriptor)) {\n+            if (Opcodes.INVOKESTATIC == opcode\n+                && INSTRUMENTATION_CONTEXT_CLASS.equals(owner)\n+                && GET_METHOD.equals(name)\n+                && GET_METHOD_DESCRIPTOR.equals(descriptor)) {\n               log.debug(\"Found context-store access in {}\", instrumenterClassName);\n               /*\n               The idea here is that the rest if this method visitor collects last three instructions in `insnStack`\n               variable. Once we get here we check if those last three instructions constitute call that looks like\n               `InstrumentationContext.get(K.class, V.class)`. If it does the inside of this if rewrites it to call\n               dynamically injected context store implementation instead.\n                */\n-              if ((insnStack[0] == Opcodes.INVOKESTATIC\n-                      && insnStack[1] == Opcodes.LDC\n-                      && insnStack[2] == Opcodes.LDC)\n-                  && (stack[0] instanceof Type && stack[1] instanceof Type)) {\n-                final String contextClassName = ((Type) stack[0]).getClassName();\n-                final String keyClassName = ((Type) stack[1]).getClassName();\n+              if (constant_1 instanceof Type && constant_2 instanceof Type) {", "originalCommit": "b820583a482dcf36fff3e81b4c810d9a8fb16e6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0NTg0NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2133#discussion_r532545845", "bodyText": "sure, no worries", "author": "mcculls", "createdAt": "2020-11-30T12:00:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0NTI5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0NzM0OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2133#discussion_r532547348", "bodyText": "c7dcd0d", "author": "mcculls", "createdAt": "2020-11-30T12:03:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0NTI5NQ=="}], "type": "inlineReview"}, {"oid": "c7dcd0d4528f0f7fc356d7d23af0e00a7b941596", "url": "https://github.com/DataDog/dd-trace-java/commit/c7dcd0d4528f0f7fc356d7d23af0e00a7b941596", "message": "Remove snake-case", "committedDate": "2020-11-30T12:02:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU1NDYyMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2133#discussion_r532554623", "bodyText": "This comment can use an update.", "author": "bantonsson", "createdAt": "2020-11-30T12:16:46Z", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/ContextStoreReadsRewritingVisitor.java", "diffHunk": "@@ -107,24 +110,20 @@ public void visitMethodInsn(\n               final String name,\n               final String descriptor,\n               final boolean isInterface) {\n-            pushOpcode(opcode);\n-            if (Utils.getInternalName(CONTEXT_GET_METHOD.getDeclaringClass().getName())\n-                    .equals(owner)\n-                && CONTEXT_GET_METHOD.getName().equals(name)\n-                && Type.getMethodDescriptor(CONTEXT_GET_METHOD).equals(descriptor)) {\n+            if (Opcodes.INVOKESTATIC == opcode\n+                && INSTRUMENTATION_CONTEXT_CLASS.equals(owner)\n+                && GET_METHOD.equals(name)\n+                && GET_METHOD_DESCRIPTOR.equals(descriptor)) {\n               log.debug(\"Found context-store access in {}\", instrumenterClassName);\n               /*\n               The idea here is that the rest if this method visitor collects last three instructions in `insnStack`\n               variable. Once we get here we check if those last three instructions constitute call that looks like\n               `InstrumentationContext.get(K.class, V.class)`. If it does the inside of this if rewrites it to call\n               dynamically injected context store implementation instead.\n                */", "originalCommit": "c7dcd0d4528f0f7fc356d7d23af0e00a7b941596", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU2NjQ5Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/2133#discussion_r532566492", "bodyText": "012b95b", "author": "mcculls", "createdAt": "2020-11-30T12:38:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU1NDYyMw=="}], "type": "inlineReview"}, {"oid": "012b95b8a10babc7d5e7e24fc3b3d118490ac2c4", "url": "https://github.com/DataDog/dd-trace-java/commit/012b95b8a10babc7d5e7e24fc3b3d118490ac2c4", "message": "Update comments to match code", "committedDate": "2020-11-30T12:37:55Z", "type": "commit"}]}