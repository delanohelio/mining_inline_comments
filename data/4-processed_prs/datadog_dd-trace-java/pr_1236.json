{"pr_number": 1236, "pr_title": "Determine agent URL version on first upload call", "pr_createdAt": "2020-02-20T12:24:44Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1236", "timeline": [{"oid": "8209a8830c0d2f82c45036f5082c57660abe2061", "url": "https://github.com/DataDog/dd-trace-java/commit/8209a8830c0d2f82c45036f5082c57660abe2061", "message": "Determine agent URL version on first upload call\n\nThis should remove http request from critical path during app load", "committedDate": "2020-02-20T12:20:08Z", "type": "commit"}, {"oid": "e0445676179755f16a4f60e8a4d134334a33d69e", "url": "https://github.com/DataDog/dd-trace-java/commit/e0445676179755f16a4f60e8a4d134334a33d69e", "message": "Fix test", "committedDate": "2020-02-20T13:06:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NzMxNw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1236#discussion_r381987317", "bodyText": "You would need to make tracesUrl volatile or better yet do the if (tracesUrl == null) check inside the synchronized detectEndpoint() method which would then be called unconditionally from here.\nOtherwise you are risking data races.", "author": "jbachorik", "createdAt": "2020-02-20T13:09:24Z", "path": "dd-trace-ot/src/main/java/datadog/trace/common/writer/ddagent/DDAgentApi.java", "diffHunk": "@@ -128,6 +116,10 @@ Response sendTraces(final List<List<DDSpan>> traces) {\n \n   Response sendSerializedTraces(\n       final int representativeCount, final Integer sizeInBytes, final List<byte[]> traces) {\n+    if (tracesUrl == null) {", "originalCommit": "8209a8830c0d2f82c45036f5082c57660abe2061", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk5MzExNg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1236#discussion_r381993116", "bodyText": "Good catch!\nLooks like I can just add another null check under synchronized block. With that after we have detected url there should be no contention.", "author": "mar-kolya", "createdAt": "2020-02-20T13:21:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NzMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MTkyOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1236#discussion_r382041929", "bodyText": "In this case, this would work without much coordination, since each thread would eventually make the null -> non-null transition.  This is how string hashCode works.\nvolatile alone will also have a race, but be a bit more clear.  On x86, it will compile to basically the same thing anyway.\nIn general, I'd like us to avoid adding synchronized blocks, since there's often a better way to achieve the same thing.  In this case, I don't think we really need synchronized.  There is a chance that two threads will make a network call, but reducing coordination overhead in the long run is probably a better choice overall.\nBut the real test is to measure the start-up and then we'll need to monitor throughput in perf env.", "author": "dougqh", "createdAt": "2020-02-20T14:42:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NzMxNw=="}], "type": "inlineReview"}, {"oid": "f0a11d4aff87a41abeae507e218aa3091db04306", "url": "https://github.com/DataDog/dd-trace-java/commit/f0a11d4aff87a41abeae507e218aa3091db04306", "message": "Make sure traceUrl is null before detecting agent url", "committedDate": "2020-02-20T13:18:54Z", "type": "commit"}, {"oid": "102c0feb5d6c7ea9d74de19dd1c7c737e349f52b", "url": "https://github.com/DataDog/dd-trace-java/commit/102c0feb5d6c7ea9d74de19dd1c7c737e349f52b", "message": "Merge branch 'master' into mar-kolya/determine-agent-url-on-first-call", "committedDate": "2020-02-20T13:33:55Z", "type": "commit"}, {"oid": "c8bbce054920970b991bf2b2f4dd1f3e303f81fd", "url": "https://github.com/DataDog/dd-trace-java/commit/c8bbce054920970b991bf2b2f4dd1f3e303f81fd", "message": "Fix more tests", "committedDate": "2020-02-20T13:48:48Z", "type": "commit"}, {"oid": "cddd368fc0315d181179935b2c968df0f8d2118f", "url": "https://github.com/DataDog/dd-trace-java/commit/cddd368fc0315d181179935b2c968df0f8d2118f", "message": "Fix integration test", "committedDate": "2020-02-20T14:26:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzNDYyMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1236#discussion_r382034622", "bodyText": "This is probably a separate change but we probably want to lazy load this too. I seem to remember someone mentioning that this starts an executor at construction time", "author": "devinsba", "createdAt": "2020-02-20T14:31:33Z", "path": "dd-trace-ot/src/main/java/datadog/trace/common/writer/ddagent/DDAgentApi.java", "diffHunk": "@@ -60,30 +60,18 @@\n                   Types.newParameterizedType(Map.class, String.class, Double.class)));\n   private static final MediaType MSGPACK = MediaType.get(\"application/msgpack\");\n \n+  private final String host;\n+  private final int port;\n+  private final String unixDomainSocketPath;\n   private final OkHttpClient httpClient;\n-  private final HttpUrl tracesUrl;\n+  private HttpUrl tracesUrl;\n \n   public DDAgentApi(final String host, final int port, final String unixDomainSocketPath) {\n-    this(\n-        host,\n-        port,\n-        endpointAvailable(getUrl(host, port, TRACES_ENDPOINT_V4), unixDomainSocketPath, true),\n-        unixDomainSocketPath);\n-  }\n+    this.host = host;\n+    this.port = port;\n+    this.unixDomainSocketPath = unixDomainSocketPath;\n \n-  DDAgentApi(\n-      final String host,\n-      final int port,\n-      final boolean v4EndpointsAvailable,\n-      final String unixDomainSocketPath) {\n     httpClient = buildHttpClient(unixDomainSocketPath);", "originalCommit": "cddd368fc0315d181179935b2c968df0f8d2118f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MzMyNg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1236#discussion_r382043326", "bodyText": "Maybe not for this PR, but a better overall approach might be to eliminate the endpoint sniffing as separate step.\nWe could simply wait until the first send.  If the first send fails with a 404, then we fallback to v3.  Then we remember whichever one succeeded.\nThis would require a fair amount of changes to the tests.", "author": "dougqh", "createdAt": "2020-02-20T14:44:40Z", "path": "dd-trace-ot/src/main/java/datadog/trace/common/writer/ddagent/DDAgentApi.java", "diffHunk": "@@ -298,6 +290,16 @@ private static HttpUrl getUrl(final String host, final int port, final String en\n     }\n   }\n \n+  private synchronized void detectEndpoint() {", "originalCommit": "8209a8830c0d2f82c45036f5082c57660abe2061", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NjY5NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1236#discussion_r382046695", "bodyText": "I thought about that, but it feels like it may not be worth the effort overall.", "author": "mar-kolya", "createdAt": "2020-02-20T14:49:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MzMyNg=="}], "type": "inlineReview"}, {"oid": "a4071ca7685b43265bceb5ac97a4e27be57bc463", "url": "https://github.com/DataDog/dd-trace-java/commit/a4071ca7685b43265bceb5ac97a4e27be57bc463", "message": "Fix some typos in tests", "committedDate": "2020-02-20T15:07:53Z", "type": "commit"}, {"oid": "2c14aecd5af43e3b5691668c8ca5a57a650cbe00", "url": "https://github.com/DataDog/dd-trace-java/commit/2c14aecd5af43e3b5691668c8ca5a57a650cbe00", "message": "Create http client laizily", "committedDate": "2020-02-20T15:11:25Z", "type": "commit"}]}