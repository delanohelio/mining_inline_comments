{"pr_number": 1750, "pr_title": "verify spring-scheduling supports lambdas", "pr_createdAt": "2020-08-05T11:38:15Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1750", "timeline": [{"oid": "d324a75a5caad116081a0e324a4bd66d0ba611d5", "url": "https://github.com/DataDog/dd-trace-java/commit/d324a75a5caad116081a0e324a4bd66d0ba611d5", "message": "verify spring-scheduling supports lambdas", "committedDate": "2020-08-05T12:23:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwOTEwMQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1750#discussion_r465709101", "bodyText": "Not really necessary I guess...", "author": "bantonsson", "createdAt": "2020-08-05T13:01:14Z", "path": "dd-java-agent/instrumentation/spring-scheduling-3.1/src/test/java/LambdaTaskConfigurer.java", "diffHunk": "@@ -0,0 +1,21 @@\n+import org.springframework.scheduling.annotation.SchedulingConfigurer;\n+import org.springframework.scheduling.config.ScheduledTaskRegistrar;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+@Service\n+public class LambdaTaskConfigurer implements SchedulingConfigurer {\n+\n+  public final CountDownLatch singleUseLatch = new CountDownLatch(1);\n+\n+  @Override\n+  public void configureTasks(ScheduledTaskRegistrar taskRegistrar) {\n+    taskRegistrar.addFixedDelayTask(\n+      () -> {\n+        System.out.println(\"lambda task\");", "originalCommit": "d324a75a5caad116081a0e324a4bd66d0ba611d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "847081020faae780a9e7d48f35c971ba29ae7b10", "url": "https://github.com/DataDog/dd-trace-java/commit/847081020faae780a9e7d48f35c971ba29ae7b10", "message": "verify spring-scheduling supports lambdas", "committedDate": "2020-08-05T13:14:20Z", "type": "forcePushed"}, {"oid": "e3d8b5e7cfe5a7af71e72cf8bf963771abf52a04", "url": "https://github.com/DataDog/dd-trace-java/commit/e3d8b5e7cfe5a7af71e72cf8bf963771abf52a04", "message": "verify spring-scheduling supports lambdas", "committedDate": "2020-08-05T13:26:53Z", "type": "commit"}, {"oid": "e3d8b5e7cfe5a7af71e72cf8bf963771abf52a04", "url": "https://github.com/DataDog/dd-trace-java/commit/e3d8b5e7cfe5a7af71e72cf8bf963771abf52a04", "message": "verify spring-scheduling supports lambdas", "committedDate": "2020-08-05T13:26:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyNjc5Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1750#discussion_r465726796", "bodyText": "Nice", "author": "devinsba", "createdAt": "2020-08-05T13:29:21Z", "path": "dd-java-agent/instrumentation/spring-scheduling-3.1/src/test/java/LambdaTaskConfigurer.java", "diffHunk": "@@ -0,0 +1,15 @@\n+import java.util.concurrent.CountDownLatch;\n+import org.springframework.scheduling.annotation.SchedulingConfigurer;\n+import org.springframework.scheduling.config.ScheduledTaskRegistrar;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class LambdaTaskConfigurer implements SchedulingConfigurer {\n+\n+  public final CountDownLatch singleUseLatch = new CountDownLatch(1);\n+\n+  @Override\n+  public void configureTasks(ScheduledTaskRegistrar taskRegistrar) {\n+    taskRegistrar.addFixedDelayTask(singleUseLatch::countDown, 500);", "originalCommit": "e3d8b5e7cfe5a7af71e72cf8bf963771abf52a04", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3ODI4OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1750#discussion_r465778288", "bodyText": "What does the full resource name look like?", "author": "tylerbenson", "createdAt": "2020-08-05T14:42:02Z", "path": "dd-java-agent/instrumentation/spring-scheduling-3.1/src/test/groovy/SpringSchedulingTest.groovy", "diffHunk": "@@ -54,4 +56,31 @@ class SpringSchedulingTest extends AgentTestRunner {\n     }\n \n   }\n+\n+  def \"schedule lambda test\"() {\n+    setup:\n+    def context = new AnnotationConfigApplicationContext(LambdaTaskConfig)\n+    def configurer = context.getBean(LambdaTaskConfigurer)\n+\n+    configurer.singleUseLatch.await(2000, TimeUnit.MILLISECONDS)\n+\n+    expect:\n+    assertTraces(1) {\n+      trace(0, 1) {\n+        span(0) {\n+          resourceNameContains(\"LambdaTaskConfigurer\\$\\$Lambda\\$\")", "originalCommit": "e3d8b5e7cfe5a7af71e72cf8bf963771abf52a04", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5MzI0Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1750#discussion_r465793247", "bodyText": "whatever the VM assigns to it", "author": "richardstartin", "createdAt": "2020-08-05T15:02:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3ODI4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgwMTc3NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1750#discussion_r465801774", "bodyText": "@dougqh The cardinality of this might be problematic and something we should investigate at a broader level.", "author": "tylerbenson", "createdAt": "2020-08-05T15:13:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3ODI4OA=="}], "type": "inlineReview"}]}