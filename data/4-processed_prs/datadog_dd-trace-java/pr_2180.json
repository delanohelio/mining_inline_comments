{"pr_number": 2180, "pr_title": "Audit and cleanup ScopeManagerTest", "pr_createdAt": "2020-12-09T20:01:33Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/2180", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwNzQyMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/2180#discussion_r539607422", "bodyText": "This test was backwards with our current logic.  It only mostly passed because of the race between GC and PendingTraceBuffer", "author": "randomanderson", "createdAt": "2020-12-09T20:02:52Z", "path": "dd-trace-core/src/test/groovy/datadog/trace/core/scopemanager/ScopeManagerTest.groovy", "diffHunk": "@@ -208,107 +219,97 @@ class ScopeManagerTest extends DDSpecification {\n     concurrent << [false, true]\n   }\n \n-  @Timeout(value = 60, unit = SECONDS)\n-  def \"hard reference on continuation prevents trace from reporting\"() {\n-    setup:\n+  def \"hard reference on continuation does not prevent trace from reporting\"() {", "originalCommit": "ff0bbd2f8d8237e0c5083c448ee79a699cc2e69d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3NjI3Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/2180#discussion_r539676273", "bodyText": "That makes sense.  Although, I'm bit surprised we didn't catch this when we changed PendingTrace a couple months ago.", "author": "dougqh", "createdAt": "2020-12-09T21:53:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwNzQyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwNzgzOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2180#discussion_r539607839", "bodyText": "This test was redundant with the other continuation tests", "author": "randomanderson", "createdAt": "2020-12-09T20:03:34Z", "path": "dd-trace-core/src/test/groovy/datadog/trace/core/scopemanager/ScopeManagerTest.groovy", "diffHunk": "@@ -361,36 +367,6 @@ class ScopeManagerTest extends DDSpecification {\n     concurrent << [false, true]\n   }\n \n-  def \"DDScope put in threadLocal after continuation activation\"() {", "originalCommit": "ff0bbd2f8d8237e0c5083c448ee79a699cc2e69d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwODMzOA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2180#discussion_r539608338", "bodyText": "This test had too many different assertions between noop and regular spans so I split it", "author": "randomanderson", "createdAt": "2020-12-09T20:04:23Z", "path": "dd-trace-core/src/test/groovy/datadog/trace/core/scopemanager/ScopeManagerTest.groovy", "diffHunk": "@@ -112,45 +104,59 @@ class ScopeManagerTest extends DDSpecification {\n   }\n \n   def \"sets parent as current upon close\"() {", "originalCommit": "ff0bbd2f8d8237e0c5083c448ee79a699cc2e69d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dbeb904990c5120354dbcf85aaba8d2f9751f308", "url": "https://github.com/DataDog/dd-trace-java/commit/dbeb904990c5120354dbcf85aaba8d2f9751f308", "message": "Audit and cleanup ScopeManagerTest", "committedDate": "2020-12-09T20:37:27Z", "type": "forcePushed"}, {"oid": "cd1e42676384614e79ca73d328446fb4c42536d1", "url": "https://github.com/DataDog/dd-trace-java/commit/cd1e42676384614e79ca73d328446fb4c42536d1", "message": "Audit and cleanup ScopeManagerTest", "committedDate": "2020-12-09T20:57:24Z", "type": "commit"}, {"oid": "cd1e42676384614e79ca73d328446fb4c42536d1", "url": "https://github.com/DataDog/dd-trace-java/commit/cd1e42676384614e79ca73d328446fb4c42536d1", "message": "Audit and cleanup ScopeManagerTest", "committedDate": "2020-12-09T20:57:24Z", "type": "forcePushed"}]}