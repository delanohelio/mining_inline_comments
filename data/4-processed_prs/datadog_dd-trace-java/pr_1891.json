{"pr_number": 1891, "pr_title": "Make it possible to switch log level during runtime", "pr_createdAt": "2020-09-21T13:10:31Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1891", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA1MjU4MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1891#discussion_r492052581", "bodyText": "I'm not sure if this will justify its complexity. Firstly, setting the log level is going to be very rare, certainly rare enough for a volatile write. Secondly, I'd wager a bet that over 99% of users run on x86, where I don't think there's any benefit of getOpaque over get", "author": "richardstartin", "createdAt": "2020-09-21T13:39:59Z", "path": "dd-java-agent/agent-logging/src/main/java/datadog/trace/logging/ddlogger/SwitchableLogLevelFactory.java", "diffHunk": "@@ -0,0 +1,113 @@\n+package datadog.trace.logging.ddlogger;\n+\n+import datadog.trace.logging.LogLevel;\n+import datadog.trace.logging.LogLevelSwitcher;\n+import datadog.trace.logging.LoggerHelper;\n+import datadog.trace.logging.LoggerHelperFactory;\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n+import java.util.concurrent.atomic.AtomicReference;\n+import org.slf4j.Marker;\n+\n+public final class SwitchableLogLevelFactory extends LoggerHelperFactory\n+    implements LogLevelSwitcher {\n+  private final LoggerHelperFactory delegate;\n+  private final AtomicReference<LogLevel> override;\n+\n+  public SwitchableLogLevelFactory(LoggerHelperFactory delegate) {\n+    this(new AtomicReference<LogLevel>(), delegate);\n+  }\n+\n+  public SwitchableLogLevelFactory(\n+      AtomicReference<LogLevel> override, LoggerHelperFactory delegate) {\n+    this.delegate = delegate;\n+    this.override = override;\n+  }\n+\n+  @Override\n+  public void switchLevel(LogLevel level) {\n+    Opaque.setLevel(override, level);\n+  }\n+\n+  @Override\n+  public void restore() {\n+    Opaque.setLevel(override, null);\n+  }\n+\n+  private static final class Opaque {", "originalCommit": "5518a4e077372468432ad4815ce349d7a5ff151b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA3MDg3Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1891#discussion_r492070877", "bodyText": "Ok, fine. That was probably a bit premature. I'll remove it.\nIt was mostly the read I was concerned about, and I'm likely colored by rust on ARM, where it would make a difference.", "author": "bantonsson", "createdAt": "2020-09-21T14:04:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA1MjU4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEwOTY1OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1891#discussion_r492109659", "bodyText": "On ARM it would definitely be worthwhile, along with applying the same treatment to all other qualifying volatile reads in the code base.", "author": "richardstartin", "createdAt": "2020-09-21T14:51:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA1MjU4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA1NDAzNg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1891#discussion_r492054036", "bodyText": "I think this could just be volatile LogLevel override without appreciable overhead, in fact it might be a little bit faster in the overwhelmingly common case (reads on x86) by removing indirection.", "author": "richardstartin", "createdAt": "2020-09-21T13:41:53Z", "path": "dd-java-agent/agent-logging/src/main/java/datadog/trace/logging/ddlogger/SwitchableLogLevelFactory.java", "diffHunk": "@@ -0,0 +1,113 @@\n+package datadog.trace.logging.ddlogger;\n+\n+import datadog.trace.logging.LogLevel;\n+import datadog.trace.logging.LogLevelSwitcher;\n+import datadog.trace.logging.LoggerHelper;\n+import datadog.trace.logging.LoggerHelperFactory;\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n+import java.util.concurrent.atomic.AtomicReference;\n+import org.slf4j.Marker;\n+\n+public final class SwitchableLogLevelFactory extends LoggerHelperFactory\n+    implements LogLevelSwitcher {\n+  private final LoggerHelperFactory delegate;\n+  private final AtomicReference<LogLevel> override;", "originalCommit": "5518a4e077372468432ad4815ce349d7a5ff151b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA3MzM1NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1891#discussion_r492073355", "bodyText": "Yeah, I'll switch things around and skip the AtomicReference.", "author": "bantonsson", "createdAt": "2020-09-21T14:07:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA1NDAzNg=="}], "type": "inlineReview"}, {"oid": "a7fd5396ab63fbe54ce7cb8a6d9bd138e35e9359", "url": "https://github.com/DataDog/dd-trace-java/commit/a7fd5396ab63fbe54ce7cb8a6d9bd138e35e9359", "message": "Make it possible to switch log level during runtime", "committedDate": "2020-09-22T14:14:25Z", "type": "commit"}, {"oid": "8cfe4fe3ee824e7f658d3492a5043674464d8926", "url": "https://github.com/DataDog/dd-trace-java/commit/8cfe4fe3ee824e7f658d3492a5043674464d8926", "message": "Simplification based on review", "committedDate": "2020-09-22T14:14:34Z", "type": "commit"}, {"oid": "8cfe4fe3ee824e7f658d3492a5043674464d8926", "url": "https://github.com/DataDog/dd-trace-java/commit/8cfe4fe3ee824e7f658d3492a5043674464d8926", "message": "Simplification based on review", "committedDate": "2020-09-22T14:14:34Z", "type": "forcePushed"}]}