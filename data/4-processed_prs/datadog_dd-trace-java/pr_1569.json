{"pr_number": 1569, "pr_title": "Add container id header to profile uploads", "pr_createdAt": "2020-06-10T16:03:42Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1569", "timeline": [{"oid": "f162d31fc91818beba97e083a9680e914faa133d", "url": "https://github.com/DataDog/dd-trace-java/commit/f162d31fc91818beba97e083a9680e914faa133d", "message": "Add container id header to profile uploads", "committedDate": "2020-06-12T08:55:51Z", "type": "commit"}, {"oid": "f162d31fc91818beba97e083a9680e914faa133d", "url": "https://github.com/DataDog/dd-trace-java/commit/f162d31fc91818beba97e083a9680e914faa133d", "message": "Add container id header to profile uploads", "committedDate": "2020-06-12T08:55:51Z", "type": "forcePushed"}, {"oid": "8513b0f151462a41cbbc5291dd3f03b4f44960c5", "url": "https://github.com/DataDog/dd-trace-java/commit/8513b0f151462a41cbbc5291dd3f03b4f44960c5", "message": "Extract ContainerInfo in shared :utils:container-utils module", "committedDate": "2020-06-12T10:12:05Z", "type": "commit"}, {"oid": "6e703e7d680f24d493bd47ccfb674a310280ef82", "url": "https://github.com/DataDog/dd-trace-java/commit/6e703e7d680f24d493bd47ccfb674a310280ef82", "message": "Improve ContainerInfo coverage to enable check on new module", "committedDate": "2020-06-12T11:06:04Z", "type": "commit"}, {"oid": "6e703e7d680f24d493bd47ccfb674a310280ef82", "url": "https://github.com/DataDog/dd-trace-java/commit/6e703e7d680f24d493bd47ccfb674a310280ef82", "message": "Improve ContainerInfo coverage to enable check on new module", "committedDate": "2020-06-12T11:06:04Z", "type": "forcePushed"}, {"oid": "b2f4b20207da4b61fffa71419f9c84c2c9d47ec8", "url": "https://github.com/DataDog/dd-trace-java/commit/b2f4b20207da4b61fffa71419f9c84c2c9d47ec8", "message": "Add exception for API/ABI break due to ContainerInfo move", "committedDate": "2020-06-12T11:19:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4NjE5MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1569#discussion_r439386190", "bodyText": "Unless I'm very much mistaken this will not get called.\nYou may want to consider moving these things into cleanup: block", "author": "mar-kolya", "createdAt": "2020-06-12T12:23:24Z", "path": "utils/container-utils/src/test/groovy/ContainerInfoTest.groovy", "diffHunk": "@@ -144,4 +149,46 @@ class ContainerInfoTest extends DDSpecification {\n 2:memory:/ecs/55091c13-b8cf-4801-b527-f4601742204d/432624d2150b349fe35ba397284dea788c2bf66b885d14dfc1569b01890ca7da\n 1:name=systemd:/ecs/55091c13-b8cf-4801-b527-f4601742204d/432624d2150b349fe35ba397284dea788c2bf66b885d14dfc1569b01890ca7da\"\"\"\n   }\n+\n+  def \"ContainerInfo from empty file is empty\"() {\n+    when:\n+    File f = File.createTempFile(\"container-info-test-\", \"-empty-file\")\n+    f.deleteOnExit()\n+    Path p = Paths.get(f.path)\n+    ContainerInfo containerInfo = ContainerInfo.fromProcFile(p)\n+\n+\n+    then:\n+    containerInfo.getContainerId() == null\n+    containerInfo.getPodId() == null\n+    containerInfo.getCGroups().size() == 0\n+  }\n+\n+  def \"ContainerInfo throws java.text.ParseException when given malformed procfile\"() {\n+    when:\n+    File f = File.createTempFile(\"container-info-test-\", \"-malformed-file\")\n+    f.deleteOnExit()\n+    f.write(\"This is not valid\")\n+    Path p = Paths.get(f.path)\n+    ContainerInfo.fromProcFile(p)\n+    f.deleteOnExit()", "originalCommit": "b2f4b20207da4b61fffa71419f9c84c2c9d47ec8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4NzgyOQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1569#discussion_r439387829", "bodyText": "Actually, on second thought - it looks like you do not need this line at all...", "author": "mar-kolya", "createdAt": "2020-06-12T12:27:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4NjE5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4OTIzMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1569#discussion_r439389230", "bodyText": "Would you be able to use a constant for header name here?", "author": "mar-kolya", "createdAt": "2020-06-12T12:30:26Z", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -192,6 +192,30 @@ public void testRequestParameters(final String compression)\n     assertArrayEquals(expectedBytes, uploadedBytes);\n   }\n \n+  @Test\n+  public void testRequestWithoutContainerID() throws IOException, InterruptedException {\n+    uploader = new ProfileUploader(config, null);\n+\n+    server.enqueue(new MockResponse().setResponseCode(200));\n+    uploader.upload(RECORDING_TYPE, mockRecordingData(RECORDING_RESOURCE));\n+\n+    final RecordedRequest request = server.takeRequest(5, TimeUnit.SECONDS);\n+    assertNotNull(request);\n+    assertNull(request.getHeader(\"Datadog-Container-ID\"));\n+  }\n+\n+  @Test\n+  public void testRequestWithContainerId() throws IOException, InterruptedException {\n+    uploader = new ProfileUploader(config, \"container-id\");\n+\n+    server.enqueue(new MockResponse().setResponseCode(200));\n+    uploader.upload(RECORDING_TYPE, mockRecordingData(RECORDING_RESOURCE));\n+\n+    final RecordedRequest request = server.takeRequest(5, TimeUnit.SECONDS);\n+    assertNotNull(request);\n+    assertEquals(request.getHeader(\"Datadog-Container-ID\"), \"container-id\");", "originalCommit": "b2f4b20207da4b61fffa71419f9c84c2c9d47ec8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4OTQ1Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1569#discussion_r439389453", "bodyText": "I think you can fold one of these tests into testRequestParameters - which is sort of our 'happy path' test.", "author": "mar-kolya", "createdAt": "2020-06-12T12:30:54Z", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -192,6 +192,30 @@ public void testRequestParameters(final String compression)\n     assertArrayEquals(expectedBytes, uploadedBytes);\n   }\n \n+  @Test\n+  public void testRequestWithoutContainerID() throws IOException, InterruptedException {", "originalCommit": "b2f4b20207da4b61fffa71419f9c84c2c9d47ec8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c8d19bf70f99b0d576e3c6bc6a10c907f4484d9f", "url": "https://github.com/DataDog/dd-trace-java/commit/c8d19bf70f99b0d576e3c6bc6a10c907f4484d9f", "message": "Replace hardcoded strings with constants in ProfileUploaderTest", "committedDate": "2020-06-12T13:47:35Z", "type": "commit"}, {"oid": "ee8974aac6ef5f59cd3caf1a6a8c491e3ab23497", "url": "https://github.com/DataDog/dd-trace-java/commit/ee8974aac6ef5f59cd3caf1a6a8c491e3ab23497", "message": "Remove redundant test code for container IDs in headers", "committedDate": "2020-06-12T13:57:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MzUwMQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1569#discussion_r439483501", "bodyText": "This is an indication of a problem... The new module needs to be bundled in with dd-trace-ot like was done here: https://github.com/DataDog/dd-trace-java/blob/master/dd-trace-ot/dd-trace-ot.gradle#L89.\nThat should make the revapi break go away.", "author": "tylerbenson", "createdAt": "2020-06-12T15:19:21Z", "path": ".palantir/revapi.yml", "diffHunk": "@@ -420,6 +420,9 @@ acceptedBreaks:\n       justification: \"Builder constructor was never meant to be public\"\n   \"0.54.0\":\n     com.datadoghq:dd-trace-ot:\n+    - code: \"java.class.removed\"\n+      old: \"class datadog.trace.core.ContainerInfo\"\n+      justification: \"ContainerInfo was moved to a shared module\"", "originalCommit": "ee8974aac6ef5f59cd3caf1a6a8c491e3ab23497", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1b30dc26a525962aee760d410ed9db4afd0e1821", "url": "https://github.com/DataDog/dd-trace-java/commit/1b30dc26a525962aee760d410ed9db4afd0e1821", "message": "Add container-utils to dd-trace-ot, remove revapi exception", "committedDate": "2020-06-12T15:33:19Z", "type": "commit"}]}