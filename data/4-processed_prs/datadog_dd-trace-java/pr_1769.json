{"pr_number": 1769, "pr_title": "add more testing around dictionary encoding of traces", "pr_createdAt": "2020-08-13T08:14:18Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1769", "timeline": [{"oid": "a7807aee7f281a7a0dfa93ad4dfda80cc75d43d7", "url": "https://github.com/DataDog/dd-trace-java/commit/a7807aee7f281a7a0dfa93ad4dfda80cc75d43d7", "message": "add more testing around dictionary encoding of traces", "committedDate": "2020-08-13T08:13:28Z", "type": "commit"}, {"oid": "7764a96b1ad567795f1d72017dec293bd2c061ef", "url": "https://github.com/DataDog/dd-trace-java/commit/7764a96b1ad567795f1d72017dec293bd2c061ef", "message": "add randomised serialisation test for v0.4 traces", "committedDate": "2020-08-13T08:53:15Z", "type": "commit"}, {"oid": "f020a02b96e4db09ec1744c219e9089be4dbe6c2", "url": "https://github.com/DataDog/dd-trace-java/commit/f020a02b96e4db09ec1744c219e9089be4dbe6c2", "message": "generate long tag values", "committedDate": "2020-08-13T09:01:30Z", "type": "commit"}, {"oid": "2d5e03bc1bd83f87b0afe1e7b2c4df508131e486", "url": "https://github.com/DataDog/dd-trace-java/commit/2d5e03bc1bd83f87b0afe1e7b2c4df508131e486", "message": "codenarc", "committedDate": "2020-08-13T09:34:22Z", "type": "commit"}, {"oid": "a4273a5a23d69112067b75d1dbace3fc6120a5b3", "url": "https://github.com/DataDog/dd-trace-java/commit/a4273a5a23d69112067b75d1dbace3fc6120a5b3", "message": "test with UTF8ByteString", "committedDate": "2020-08-13T09:40:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MDkzMQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469880931", "bodyText": "import static org.msgpack.core.MessageFormat.*?", "author": "bantonsson", "createdAt": "2020-08-13T11:23:24Z", "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV04PayloadTest.groovy", "diffHunk": "@@ -0,0 +1,224 @@\n+package datadog.trace.common.writer.ddagent\n+\n+\n+import datadog.trace.core.DDSpanData\n+import datadog.trace.core.serialization.msgpack.ByteBufferConsumer\n+import datadog.trace.core.serialization.msgpack.Packer\n+import datadog.trace.util.test.DDSpecification\n+import org.junit.Assert\n+import org.msgpack.core.MessageFormat\n+import org.msgpack.core.MessagePack\n+import org.msgpack.core.MessageUnpacker\n+\n+import java.nio.BufferOverflowException\n+import java.nio.ByteBuffer\n+import java.nio.channels.WritableByteChannel\n+\n+import static datadog.trace.common.writer.ddagent.TraceGenerator.generateRandomTraces\n+import static org.junit.Assert.assertEquals\n+import static org.msgpack.core.MessageFormat.FLOAT32\n+import static org.msgpack.core.MessageFormat.FLOAT64\n+import static org.msgpack.core.MessageFormat.INT16\n+import static org.msgpack.core.MessageFormat.INT32\n+import static org.msgpack.core.MessageFormat.INT64\n+import static org.msgpack.core.MessageFormat.INT8\n+import static org.msgpack.core.MessageFormat.NEGFIXINT\n+import static org.msgpack.core.MessageFormat.POSFIXINT\n+import static org.msgpack.core.MessageFormat.UINT16\n+import static org.msgpack.core.MessageFormat.UINT32\n+import static org.msgpack.core.MessageFormat.UINT64\n+import static org.msgpack.core.MessageFormat.UINT8", "originalCommit": "a4273a5a23d69112067b75d1dbace3fc6120a5b3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MTQyMg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469881422", "bodyText": "Why change this?", "author": "bantonsson", "createdAt": "2020-08-13T11:24:31Z", "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV05PayloadTest.groovy", "diffHunk": "@@ -13,22 +12,30 @@ import org.msgpack.core.MessageUnpacker\n \n import java.nio.ByteBuffer\n import java.nio.channels.WritableByteChannel\n-import java.util.concurrent.ThreadLocalRandom\n-import java.util.concurrent.TimeUnit\n \n+import static datadog.trace.common.writer.ddagent.TraceGenerator.generateRandomTraces\n import static org.junit.Assert.assertEquals\n-\n-import static org.msgpack.core.MessageFormat.*\n+import static org.msgpack.core.MessageFormat.FLOAT32", "originalCommit": "a4273a5a23d69112067b75d1dbace3fc6120a5b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4ODg5Mw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469888893", "bodyText": "automatic change", "author": "richardstartin", "createdAt": "2020-08-13T11:40:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MTQyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MTk3Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469881972", "bodyText": "Wrong test name?", "author": "bantonsson", "createdAt": "2020-08-13T11:25:37Z", "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV04PayloadTest.groovy", "diffHunk": "@@ -0,0 +1,224 @@\n+package datadog.trace.common.writer.ddagent\n+\n+\n+import datadog.trace.core.DDSpanData\n+import datadog.trace.core.serialization.msgpack.ByteBufferConsumer\n+import datadog.trace.core.serialization.msgpack.Packer\n+import datadog.trace.util.test.DDSpecification\n+import org.junit.Assert\n+import org.msgpack.core.MessageFormat\n+import org.msgpack.core.MessagePack\n+import org.msgpack.core.MessageUnpacker\n+\n+import java.nio.BufferOverflowException\n+import java.nio.ByteBuffer\n+import java.nio.channels.WritableByteChannel\n+\n+import static datadog.trace.common.writer.ddagent.TraceGenerator.generateRandomTraces\n+import static org.junit.Assert.assertEquals\n+import static org.msgpack.core.MessageFormat.FLOAT32\n+import static org.msgpack.core.MessageFormat.FLOAT64\n+import static org.msgpack.core.MessageFormat.INT16\n+import static org.msgpack.core.MessageFormat.INT32\n+import static org.msgpack.core.MessageFormat.INT64\n+import static org.msgpack.core.MessageFormat.INT8\n+import static org.msgpack.core.MessageFormat.NEGFIXINT\n+import static org.msgpack.core.MessageFormat.POSFIXINT\n+import static org.msgpack.core.MessageFormat.UINT16\n+import static org.msgpack.core.MessageFormat.UINT32\n+import static org.msgpack.core.MessageFormat.UINT64\n+import static org.msgpack.core.MessageFormat.UINT8\n+\n+class TraceMapperV04PayloadTest extends DDSpecification {\n+\n+  def \"test dictionary compressed traces written correctly\" () {", "originalCommit": "a4273a5a23d69112067b75d1dbace3fc6120a5b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4ODg0NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469888845", "bodyText": "yes", "author": "richardstartin", "createdAt": "2020-08-13T11:40:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MTk3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDYzOA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469884638", "bodyText": "Why the shifts here? I don't get them.", "author": "bantonsson", "createdAt": "2020-08-13T11:31:18Z", "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV05PayloadTest.groovy", "diffHunk": "@@ -39,15 +46,42 @@ class TraceMapperV05PayloadTest extends DDSpecification {\n     verifier.verifyTracesConsumed()\n \n     where:\n-    bufferSize    |   traceCount\n-    100 << 10     |       0\n-    100 << 10     |       1\n-    100 << 10     |       10\n-    100 << 10     |       100\n+    bufferSize    | dictionarySize |   traceCount   | lowCardinality\n+    10 << 10      |   10 << 10     |       0        | true", "originalCommit": "a4273a5a23d69112067b75d1dbace3fc6120a5b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4ODc2OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469888769", "bodyText": "<< 10 turns the number on the left into kilobytes", "author": "richardstartin", "createdAt": "2020-08-13T11:40:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg5OTc1Nw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469899757", "bodyText": "So this is your fancy way of writing * 1024. I see.", "author": "bantonsson", "createdAt": "2020-08-13T12:02:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDYzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkwMDg1OA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469900858", "bodyText": "Well, if you want to write MB it's << 20 which is less of a mouthful than * 1024 * 1024", "author": "richardstartin", "createdAt": "2020-08-13T12:04:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDYzOA=="}], "type": "inlineReview"}, {"oid": "610eed0b895d14f78a3c051ee2b344710596dfa5", "url": "https://github.com/DataDog/dd-trace-java/commit/610eed0b895d14f78a3c051ee2b344710596dfa5", "message": "nitpicks", "committedDate": "2020-08-13T11:45:34Z", "type": "commit"}]}