{"pr_number": 1914, "pr_title": "precompute more utf8", "pr_createdAt": "2020-09-25T15:55:34Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1914", "timeline": [{"oid": "8d4b8fb8b56d03e7e34574d7791a64b73b7256c2", "url": "https://github.com/DataDog/dd-trace-java/commit/8d4b8fb8b56d03e7e34574d7791a64b73b7256c2", "message": "ignore constants file for coverage metrics", "committedDate": "2020-09-25T16:11:27Z", "type": "forcePushed"}, {"oid": "6ef6e41df2b705da49e7dd2d058b5b95c085d362", "url": "https://github.com/DataDog/dd-trace-java/commit/6ef6e41df2b705da49e7dd2d058b5b95c085d362", "message": "no cache lookups for type, it's always set internally", "committedDate": "2020-09-25T16:12:07Z", "type": "commit"}, {"oid": "5ef15a60d1d54438e6f3d405ee62a40c9bf29590", "url": "https://github.com/DataDog/dd-trace-java/commit/5ef15a60d1d54438e6f3d405ee62a40c9bf29590", "message": "create fast path for UTF8ByteStrings", "committedDate": "2020-09-25T16:12:07Z", "type": "commit"}, {"oid": "c1a10fb2186cb553b1436215463f07362faa5b68", "url": "https://github.com/DataDog/dd-trace-java/commit/c1a10fb2186cb553b1436215463f07362faa5b68", "message": "add CharSequence setTag overload", "committedDate": "2020-09-25T16:12:07Z", "type": "commit"}, {"oid": "1aff8f76715f71218cfb4db4206319c9ee2d6215", "url": "https://github.com/DataDog/dd-trace-java/commit/1aff8f76715f71218cfb4db4206319c9ee2d6215", "message": "make span types UTF8ByteString", "committedDate": "2020-09-25T16:12:07Z", "type": "commit"}, {"oid": "7e7af390160da02faaa656251b65c96f49b58e20", "url": "https://github.com/DataDog/dd-trace-java/commit/7e7af390160da02faaa656251b65c96f49b58e20", "message": "ignore constants file for coverage metrics", "committedDate": "2020-09-25T16:12:08Z", "type": "forcePushed"}, {"oid": "3d08b5b08afe0ac070fb5e3f2c61f03115f038f7", "url": "https://github.com/DataDog/dd-trace-java/commit/3d08b5b08afe0ac070fb5e3f2c61f03115f038f7", "message": "tweak tests to handle CharSequence component and type", "committedDate": "2020-09-25T16:57:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEyMjM1Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495122356", "bodyText": "Should we change all the keys here to also be CharSequence?  (Perhaps this is already planned for a future pass?)", "author": "tylerbenson", "createdAt": "2020-09-25T17:09:14Z", "path": "internal-api/src/main/java/datadog/trace/bootstrap/instrumentation/api/AgentSpan.java", "diffHunk": "@@ -20,6 +20,8 @@\n   @Override\n   AgentSpan setTag(String key, String value);\n \n+  AgentSpan setTag(String key, CharSequence value);", "originalCommit": "3d08b5b08afe0ac070fb5e3f2c61f03115f038f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEyMzc2Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495123762", "bodyText": "The problem with doing that is we expose a map with the keys, and that's a source-incompatible change (we'll need to make it at some point) and if you try it, it ripples everywhere.", "author": "richardstartin", "createdAt": "2020-09-25T17:12:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEyMjM1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEyNzQyNQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495127425", "bodyText": "nit: I think it would have been equivalent to do this inside the constructor instead.", "author": "tylerbenson", "createdAt": "2020-09-25T17:19:28Z", "path": "dd-java-agent/instrumentation/spring-webmvc-3.1/src/main/java/datadog/trace/instrumentation/springweb/SpringWebHttpServerDecorator.java", "diffHunk": "@@ -39,14 +39,14 @@ public CharSequence apply(Pair<String, Object> input) {\n   private static final DDCache<Pair<String, Object>, CharSequence> RESOURCE_NAME_CACHE =\n       DDCaches.newFixedSizeCache(64);\n \n-  private final String component;\n+  private final CharSequence component;\n \n   public static final SpringWebHttpServerDecorator DECORATE =\n-      new SpringWebHttpServerDecorator(\"spring-web-controller\");\n+      new SpringWebHttpServerDecorator(UTF8BytesString.createConstant(\"spring-web-controller\"));\n   public static final SpringWebHttpServerDecorator DECORATE_RENDER =\n-      new SpringWebHttpServerDecorator(\"spring-webmvc\");\n+      new SpringWebHttpServerDecorator(UTF8BytesString.createConstant(\"spring-webmvc\"));", "originalCommit": "3d08b5b08afe0ac070fb5e3f2c61f03115f038f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNTU3OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495135579", "bodyText": "Since they are constants, and get allocated into a byte[] from which they can't be freed, I want to do this where they are declared, and never on unknown data, however close it is. We should never call createConstant on something not already constant.", "author": "richardstartin", "createdAt": "2020-09-25T17:35:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEyNzQyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzMDEyNQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495130125", "bodyText": "Are these handled in some other fashion now?", "author": "tylerbenson", "createdAt": "2020-09-25T17:24:47Z", "path": "internal-api/src/main/java/datadog/trace/bootstrap/instrumentation/api/CommonTagValues.java", "diffHunk": "@@ -1,12 +0,0 @@\n-package datadog.trace.bootstrap.instrumentation.api;\n-\n-public class CommonTagValues {\n-\n-  public static final String GET = \"GET\";\n-  public static final String PUT = \"PUT\";\n-  public static final String POST = \"POST\";\n-  public static final String DELETE = \"DELETE\";\n-\n-  public static final String TRUE = \"true\";\n-  public static final String FALSE = \"false\";", "originalCommit": "3d08b5b08afe0ac070fb5e3f2c61f03115f038f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNDQ5NA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495134494", "bodyText": "no, they just aren't worth the lookups, they can be handled in future where they need to be", "author": "richardstartin", "createdAt": "2020-09-25T17:33:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzMDEyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzMjczMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495132733", "bodyText": "Do the toStrings here make this counter productive?", "author": "tylerbenson", "createdAt": "2020-09-25T17:29:46Z", "path": "dd-java-agent/instrumentation/twilio/src/main/java/datadog/trace/instrumentation/twilio/TwilioClientDecorator.java", "diffHunk": "@@ -20,26 +20,26 @@\n \n   public static final TwilioClientDecorator DECORATE = new TwilioClientDecorator();\n \n-  static final String COMPONENT_NAME = \"twilio-sdk\";\n+  static final CharSequence COMPONENT_NAME = UTF8BytesString.createConstant(\"twilio-sdk\");\n \n   @Override\n-  protected String spanType() {\n-    return DDSpanTypes.HTTP_CLIENT;\n+  protected CharSequence spanType() {\n+    return InternalSpanTypes.HTTP_CLIENT;\n   }\n \n   @Override\n   protected String[] instrumentationNames() {\n-    return new String[] {COMPONENT_NAME};\n+    return new String[] {COMPONENT_NAME.toString()};\n   }\n \n   @Override\n-  protected String component() {\n+  protected CharSequence component() {\n     return COMPONENT_NAME;\n   }\n \n   @Override\n   protected String service() {\n-    return COMPONENT_NAME;\n+    return COMPONENT_NAME.toString();", "originalCommit": "3d08b5b08afe0ac070fb5e3f2c61f03115f038f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNDYxNA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495134614", "bodyText": "this doesn't allocate", "author": "richardstartin", "createdAt": "2020-09-25T17:33:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzMjczMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzNDg1Ng==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495134856", "bodyText": "and service is next on the list, it's harder because it interacts with Config", "author": "richardstartin", "createdAt": "2020-09-25T17:33:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzMjczMw=="}], "type": "inlineReview"}, {"oid": "0d88f6e2dbdde19a559d526e765fd98596d5ba7c", "url": "https://github.com/DataDog/dd-trace-java/commit/0d88f6e2dbdde19a559d526e765fd98596d5ba7c", "message": "make component a CharSequence", "committedDate": "2020-09-25T17:32:04Z", "type": "commit"}, {"oid": "8db0ca8d254275f9d59d6f15d44e78d976ed0c79", "url": "https://github.com/DataDog/dd-trace-java/commit/8db0ca8d254275f9d59d6f15d44e78d976ed0c79", "message": "only copy the string when it's need for weak keys", "committedDate": "2020-09-25T17:32:04Z", "type": "commit"}, {"oid": "bab9316f0ea060a002c58a71151d28f72b260f28", "url": "https://github.com/DataDog/dd-trace-java/commit/bab9316f0ea060a002c58a71151d28f72b260f28", "message": "revapi", "committedDate": "2020-09-25T17:32:04Z", "type": "forcePushed"}, {"oid": "85605056683368897716eba0a5d02a59c49e0ef6", "url": "https://github.com/DataDog/dd-trace-java/commit/85605056683368897716eba0a5d02a59c49e0ef6", "message": "remove tags string table in preference of UTF8ByteString", "committedDate": "2020-09-25T19:17:32Z", "type": "commit"}, {"oid": "946345edd8109ef87480f93c2a4a5a7e9e3943a7", "url": "https://github.com/DataDog/dd-trace-java/commit/946345edd8109ef87480f93c2a4a5a7e9e3943a7", "message": "ignore constants file for coverage metrics", "committedDate": "2020-09-25T19:17:32Z", "type": "commit"}, {"oid": "4853c182a51b50b39edaea4c4fbcd65aab95f9f8", "url": "https://github.com/DataDog/dd-trace-java/commit/4853c182a51b50b39edaea4c4fbcd65aab95f9f8", "message": "tweak tests to handle CharSequence component and type", "committedDate": "2020-09-25T19:17:32Z", "type": "commit"}, {"oid": "f83039adf11159cff8c9f2e19f6cb443dda02cd0", "url": "https://github.com/DataDog/dd-trace-java/commit/f83039adf11159cff8c9f2e19f6cb443dda02cd0", "message": "revapi", "committedDate": "2020-09-25T19:17:32Z", "type": "commit"}, {"oid": "6f8bc6a7b98fa834a3b89a211cba8a4092d9fafd", "url": "https://github.com/DataDog/dd-trace-java/commit/6f8bc6a7b98fa834a3b89a211cba8a4092d9fafd", "message": "don't precompute UTF-8 for mongo", "committedDate": "2020-09-25T19:17:55Z", "type": "commit"}, {"oid": "6f8bc6a7b98fa834a3b89a211cba8a4092d9fafd", "url": "https://github.com/DataDog/dd-trace-java/commit/6f8bc6a7b98fa834a3b89a211cba8a4092d9fafd", "message": "don't precompute UTF-8 for mongo", "committedDate": "2020-09-25T19:17:55Z", "type": "forcePushed"}, {"oid": "a1f31eb4802eb92c7425dd8d44da7f22d60903cf", "url": "https://github.com/DataDog/dd-trace-java/commit/a1f31eb4802eb92c7425dd8d44da7f22d60903cf", "message": "improvements to trace mappers", "committedDate": "2020-09-28T09:45:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg2ODY5MA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495868690", "bodyText": "Yes, my original code was a bit defensive.", "author": "bantonsson", "createdAt": "2020-09-28T11:26:05Z", "path": "dd-java-agent/instrumentation/jdbc/src/main/java/datadog/trace/instrumentation/jdbc/ConnectionInstrumentation.java", "diffHunk": "@@ -61,7 +61,7 @@ public static void addDBInfo(\n       // check if we have seen this String before\n       UTF8BytesString utf8Sql = JDBCMaps.preparedStatementsSql.get(sql);\n       if (utf8Sql == null) {\n-        utf8Sql = UTF8BytesString.create(sql);\n+        utf8Sql = UTF8BytesString.createWeak(sql);", "originalCommit": "8db0ca8d254275f9d59d6f15d44e78d976ed0c79", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3MjM5NQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495872395", "bodyText": "Why is this not using the InternalSpanTypes.MONGO?", "author": "bantonsson", "createdAt": "2020-09-28T11:33:51Z", "path": "dd-java-agent/instrumentation/mongo/driver-3.1/src/main/java/datadog/trace/instrumentation/mongo/MongoClientDecorator.java", "diffHunk": "@@ -37,12 +37,12 @@ protected String service() {\n \n   @Override\n   protected CharSequence component() {\n-    return JAVA_MONGO;\n+    return \"java-mongo\";\n   }\n \n   @Override\n   protected CharSequence spanType() {\n-    return InternalSpanTypes.MONGO;\n+    return DDSpanTypes.MONGO;", "originalCommit": "6f8bc6a7b98fa834a3b89a211cba8a4092d9fafd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3NDQxMw==", "url": "https://github.com/DataDog/dd-trace-java/pull/1914#discussion_r495874413", "bodyText": "Just to avoid changing a test which relies on far too much magic", "author": "richardstartin", "createdAt": "2020-09-28T11:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3MjM5NQ=="}], "type": "inlineReview"}]}