{"pr_number": 2182, "pr_title": "Exception in TraceInterceptor crashes PendingTraceBuffer", "pr_createdAt": "2020-12-09T21:15:48Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/2182", "timeline": [{"oid": "a928b7722417478dff001fc5ba606d1d15860d2e", "url": "https://github.com/DataDog/dd-trace-java/commit/a928b7722417478dff001fc5ba606d1d15860d2e", "message": "Exception in TraceInterceptor crashes PendingTraceBuffer", "committedDate": "2020-12-09T21:10:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2NDIxOA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2182#discussion_r539664218", "bodyText": "Should this be inverted, so that interceptors which run after the failing interceptor are still run?", "author": "richardstartin", "createdAt": "2020-12-09T21:33:33Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -417,8 +417,14 @@ void write(final List<DDSpan> trace) {\n     List<DDSpan> writtenTrace = trace;\n     if (!interceptors.isEmpty()) {\n       Collection<? extends MutableSpan> interceptedTrace = new ArrayList<>(trace);\n-      for (final TraceInterceptor interceptor : interceptors) {\n-        interceptedTrace = interceptor.onTraceComplete(interceptedTrace);\n+\n+      try {\n+        for (final TraceInterceptor interceptor : interceptors) {\n+          interceptedTrace = interceptor.onTraceComplete(interceptedTrace);", "originalCommit": "a928b7722417478dff001fc5ba606d1d15860d2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3MzA4MQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2182#discussion_r539673081", "bodyText": "Yes, that's usual approach to making Listeners / Interceptors defensive.", "author": "dougqh", "createdAt": "2020-12-09T21:48:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2NDIxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4MDI4OQ==", "url": "https://github.com/DataDog/dd-trace-java/pull/2182#discussion_r539680289", "bodyText": "I don't have a strong opinion but the reason I did it this way is that the interceptors are a pipeline (where the input/output of one depends on the input/output of the previous) where as listeners are independent from each other.\nIf you think of other pipeline-like things (eg Servlet Filter Chain), an exception stops processing in the chain.", "author": "randomanderson", "createdAt": "2020-12-09T22:00:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2NDIxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAyMTUyNA==", "url": "https://github.com/DataDog/dd-trace-java/pull/2182#discussion_r540021524", "bodyText": "That's enough to convince me.", "author": "richardstartin", "createdAt": "2020-12-10T09:45:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2NDIxOA=="}], "type": "inlineReview"}]}