{"pr_number": 1826, "pr_title": "Tag health metrics with service, env, and version", "pr_createdAt": "2020-09-03T22:00:48Z", "pr_url": "https://github.com/DataDog/dd-trace-java/pull/1826", "timeline": [{"oid": "507331e76073651d93d74cb10d7980123df01a47", "url": "https://github.com/DataDog/dd-trace-java/commit/507331e76073651d93d74cb10d7980123df01a47", "message": "Tag health metrics with service, env, and version", "committedDate": "2020-09-03T21:59:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxNDI5Mg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1826#discussion_r483414292", "bodyText": "Not a big thing, but could you call config.getMergedSpanTags() only once? It actually creates a new Map and merge the tags every time it's called.", "author": "bantonsson", "createdAt": "2020-09-04T06:30:35Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -568,16 +569,27 @@ private static StatsDClient createStatsDClient(final Config config) {\n         port = config.getJmxFetchStatsdPort();\n       }\n \n-      final String[] constantTags =\n-          new String[] {\n-            statsdTag(LANG_INTERPRETER_STATSD_TAG, \"java\"),\n-            statsdTag(LANG_VERSION_STATSD_TAG, DDTraceCoreInfo.JAVA_VERSION),\n-            statsdTag(LANG_INTERPRETER_STATSD_TAG, DDTraceCoreInfo.JAVA_VM_NAME),\n-            statsdTag(LANG_INTERPRETER_VENDOR_STATSD_TAG, DDTraceCoreInfo.JAVA_VM_VENDOR),\n-            statsdTag(TRACER_VERSION_STATSD_TAG, DDTraceCoreInfo.VERSION)\n-          };\n+      final List<String> constantTags = new ArrayList<>();\n+      constantTags.add(statsdTag(LANG_INTERPRETER_STATSD_TAG, \"java\"));\n+      constantTags.add(statsdTag(LANG_VERSION_STATSD_TAG, DDTraceCoreInfo.JAVA_VERSION));\n+      constantTags.add(statsdTag(LANG_INTERPRETER_STATSD_TAG, DDTraceCoreInfo.JAVA_VM_NAME));\n+      constantTags.add(\n+          statsdTag(LANG_INTERPRETER_VENDOR_STATSD_TAG, DDTraceCoreInfo.JAVA_VM_VENDOR));\n+      constantTags.add(statsdTag(TRACER_VERSION_STATSD_TAG, DDTraceCoreInfo.VERSION));\n+      constantTags.add(statsdTag(\"service\", config.getServiceName()));\n+\n+      final String version = config.getMergedSpanTags().get(GeneralConfig.VERSION);\n+      if (version != null && !version.isEmpty()) {\n+        constantTags.add(statsdTag(\"version\", version));\n+      }\n+\n+      final String env = config.getMergedSpanTags().get(GeneralConfig.ENV);", "originalCommit": "507331e76073651d93d74cb10d7980123df01a47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxNDYzNg==", "url": "https://github.com/DataDog/dd-trace-java/pull/1826#discussion_r483414636", "bodyText": "Is this version supposed to be env?", "author": "bantonsson", "createdAt": "2020-09-04T06:31:29Z", "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -568,16 +569,27 @@ private static StatsDClient createStatsDClient(final Config config) {\n         port = config.getJmxFetchStatsdPort();\n       }\n \n-      final String[] constantTags =\n-          new String[] {\n-            statsdTag(LANG_INTERPRETER_STATSD_TAG, \"java\"),\n-            statsdTag(LANG_VERSION_STATSD_TAG, DDTraceCoreInfo.JAVA_VERSION),\n-            statsdTag(LANG_INTERPRETER_STATSD_TAG, DDTraceCoreInfo.JAVA_VM_NAME),\n-            statsdTag(LANG_INTERPRETER_VENDOR_STATSD_TAG, DDTraceCoreInfo.JAVA_VM_VENDOR),\n-            statsdTag(TRACER_VERSION_STATSD_TAG, DDTraceCoreInfo.VERSION)\n-          };\n+      final List<String> constantTags = new ArrayList<>();\n+      constantTags.add(statsdTag(LANG_INTERPRETER_STATSD_TAG, \"java\"));\n+      constantTags.add(statsdTag(LANG_VERSION_STATSD_TAG, DDTraceCoreInfo.JAVA_VERSION));\n+      constantTags.add(statsdTag(LANG_INTERPRETER_STATSD_TAG, DDTraceCoreInfo.JAVA_VM_NAME));\n+      constantTags.add(\n+          statsdTag(LANG_INTERPRETER_VENDOR_STATSD_TAG, DDTraceCoreInfo.JAVA_VM_VENDOR));\n+      constantTags.add(statsdTag(TRACER_VERSION_STATSD_TAG, DDTraceCoreInfo.VERSION));\n+      constantTags.add(statsdTag(\"service\", config.getServiceName()));\n+\n+      final String version = config.getMergedSpanTags().get(GeneralConfig.VERSION);\n+      if (version != null && !version.isEmpty()) {\n+        constantTags.add(statsdTag(\"version\", version));\n+      }\n+\n+      final String env = config.getMergedSpanTags().get(GeneralConfig.ENV);\n+      if (version != null && !version.isEmpty()) {", "originalCommit": "507331e76073651d93d74cb10d7980123df01a47", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "da570dda18303e3a21c21f716ac96c8f818330ce", "url": "https://github.com/DataDog/dd-trace-java/commit/da570dda18303e3a21c21f716ac96c8f818330ce", "message": "Address comments, add test", "committedDate": "2020-09-04T16:31:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc3OTcyMA==", "url": "https://github.com/DataDog/dd-trace-java/pull/1826#discussion_r483779720", "bodyText": "nice", "author": "richardstartin", "createdAt": "2020-09-04T18:13:46Z", "path": "dd-trace-core/src/test/groovy/datadog/trace/core/CoreTracerTest.groovy", "diffHunk": "@@ -64,6 +67,62 @@ class CoreTracerTest extends DDSpecification {\n     tracer.statsDClient instanceof NonBlockingStatsDClient\n   }\n \n+  def \"verify service, env, and version are added as stats tags\"() {", "originalCommit": "da570dda18303e3a21c21f716ac96c8f818330ce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}