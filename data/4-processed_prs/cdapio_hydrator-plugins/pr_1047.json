{"pr_number": 1047, "pr_title": "Cache key schemas in Joiner", "pr_createdAt": "2020-03-24T21:44:50Z", "pr_url": "https://github.com/cdapio/hydrator-plugins/pull/1047", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ4Mjk0OQ==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047#discussion_r397482949", "bodyText": "nit: indentation", "author": "CuriousVini", "createdAt": "2020-03-24T21:50:05Z", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -194,29 +195,37 @@ public void initialize(BatchJoinerRuntimeContext context) {\n \n   @Override\n   public StructuredRecord joinOn(String stageName, StructuredRecord record) {\n-    List<Schema.Field> fields = new ArrayList<>();\n-    Schema schema = record.getSchema();\n+    Schema keySchema;\n+    List<String> joinKeys = perStageJoinKeys.get(stageName);\n \n+    if (keySchemas.containsKey(stageName)) {\n+      keySchema = keySchemas.get(stageName);\n+    } else {\n+      List<Schema.Field> fields = new ArrayList<>();\n+      Schema schema = record.getSchema();\n \n-    List<String> joinKeys = perStageJoinKeys.get(stageName);\n-    int i = 1;\n-    for (String joinKey : joinKeys) {\n-      Schema.Field field = schema.getField(joinKey);\n-      if (field == null) {\n-        throw new IllegalArgumentException(String.format(\"Join key field '%s' does not exist in schema from '%s'.\",\n-                                                         joinKey, stageName));\n+      int i = 1;\n+      for (String joinKey : joinKeys) {\n+        Schema.Field field = schema.getField(joinKey);\n+        if (field == null) {\n+          throw new IllegalArgumentException(String.format(\"Join key field '%s' does not exist in schema from '%s'.\",\n+                  joinKey, stageName));\n+        }\n+        Schema.Field joinField = Schema.Field.of(String.valueOf(i++), field.getSchema());\n+        fields.add(joinField);\n       }\n-      Schema.Field joinField = Schema.Field.of(String.valueOf(i++), field.getSchema());\n-      fields.add(joinField);\n-    }\n-    Schema keySchema = Schema.recordOf(\"join.key\", fields);\n-    StructuredRecord.Builder keyRecordBuilder = StructuredRecord.builder(keySchema);\n-    i = 1;\n-    for (String joinKey : joinKeys) {\n-      keyRecordBuilder.set(String.valueOf(i++), record.get(joinKey));\n+      keySchema = Schema.recordOf(\"join.key\", fields);\n+      keySchemas.put(stageName, keySchema);\n     }\n+      StructuredRecord.Builder keyRecordBuilder = StructuredRecord.builder(keySchema);", "originalCommit": "a0299ab0472841373e9140186c4a356f1f0fb7a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5MjIyMw==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047#discussion_r397492223", "bodyText": "fixed.", "author": "rmstar", "createdAt": "2020-03-24T22:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ4Mjk0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ4MzIyNQ==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047#discussion_r397483225", "bodyText": "nit: return keyRecordBuilder.build();", "author": "CuriousVini", "createdAt": "2020-03-24T21:50:39Z", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -194,29 +195,37 @@ public void initialize(BatchJoinerRuntimeContext context) {\n \n   @Override\n   public StructuredRecord joinOn(String stageName, StructuredRecord record) {\n-    List<Schema.Field> fields = new ArrayList<>();\n-    Schema schema = record.getSchema();\n+    Schema keySchema;\n+    List<String> joinKeys = perStageJoinKeys.get(stageName);\n \n+    if (keySchemas.containsKey(stageName)) {\n+      keySchema = keySchemas.get(stageName);\n+    } else {\n+      List<Schema.Field> fields = new ArrayList<>();\n+      Schema schema = record.getSchema();\n \n-    List<String> joinKeys = perStageJoinKeys.get(stageName);\n-    int i = 1;\n-    for (String joinKey : joinKeys) {\n-      Schema.Field field = schema.getField(joinKey);\n-      if (field == null) {\n-        throw new IllegalArgumentException(String.format(\"Join key field '%s' does not exist in schema from '%s'.\",\n-                                                         joinKey, stageName));\n+      int i = 1;\n+      for (String joinKey : joinKeys) {\n+        Schema.Field field = schema.getField(joinKey);\n+        if (field == null) {\n+          throw new IllegalArgumentException(String.format(\"Join key field '%s' does not exist in schema from '%s'.\",\n+                  joinKey, stageName));\n+        }\n+        Schema.Field joinField = Schema.Field.of(String.valueOf(i++), field.getSchema());\n+        fields.add(joinField);\n       }\n-      Schema.Field joinField = Schema.Field.of(String.valueOf(i++), field.getSchema());\n-      fields.add(joinField);\n-    }\n-    Schema keySchema = Schema.recordOf(\"join.key\", fields);\n-    StructuredRecord.Builder keyRecordBuilder = StructuredRecord.builder(keySchema);\n-    i = 1;\n-    for (String joinKey : joinKeys) {\n-      keyRecordBuilder.set(String.valueOf(i++), record.get(joinKey));\n+      keySchema = Schema.recordOf(\"join.key\", fields);\n+      keySchemas.put(stageName, keySchema);\n     }\n+      StructuredRecord.Builder keyRecordBuilder = StructuredRecord.builder(keySchema);\n+      int i = 1;\n+      for (String joinKey : joinKeys) {\n+        keyRecordBuilder.set(String.valueOf(i++), record.get(joinKey));\n+      }\n+\n+      StructuredRecord keyRecord = keyRecordBuilder.build();\n+      return keyRecord;", "originalCommit": "a0299ab0472841373e9140186c4a356f1f0fb7a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5MjE4Nw==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047#discussion_r397492187", "bodyText": "fixed.", "author": "rmstar", "createdAt": "2020-03-24T22:10:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ4MzIyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ4MzQzMg==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047#discussion_r397483432", "bodyText": "why do we need to remove this? we still need this in case inputschemas are non-null right?", "author": "CuriousVini", "createdAt": "2020-03-24T21:51:08Z", "path": "core-plugins/src/main/java/io/cdap/plugin/batch/joiner/Joiner.java", "diffHunk": "@@ -291,7 +300,6 @@ void validateJoinKeySchemas(Map<String, Schema> inputSchemas, Map<String, List<S\n   }\n \n   Schema getOutputSchema(Map<String, Schema> inputSchemas, FailureCollector collector) {\n-    validateJoinKeySchemas(inputSchemas, conf.getPerStageJoinKeys(), collector);", "originalCommit": "a0299ab0472841373e9140186c4a356f1f0fb7a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ4ODc3MA==", "url": "https://github.com/cdapio/hydrator-plugins/pull/1047#discussion_r397488770", "bodyText": "getOutputSchema() is called from a couple of places:\n\nconfigurePipeline()\ninitialize()\nIn both of these functions, init(), which calls validateJoinKeySchemas(),  is called before getOuputSchema().", "author": "rmstar", "createdAt": "2020-03-24T22:02:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ4MzQzMg=="}], "type": "inlineReview"}, {"oid": "9c6a15ea0d57aa8c2b33aa9dca2780e3b001e5bc", "url": "https://github.com/cdapio/hydrator-plugins/commit/9c6a15ea0d57aa8c2b33aa9dca2780e3b001e5bc", "message": "Cache key schemas in Joiner", "committedDate": "2020-03-24T22:11:44Z", "type": "commit"}, {"oid": "9c6a15ea0d57aa8c2b33aa9dca2780e3b001e5bc", "url": "https://github.com/cdapio/hydrator-plugins/commit/9c6a15ea0d57aa8c2b33aa9dca2780e3b001e5bc", "message": "Cache key schemas in Joiner", "committedDate": "2020-03-24T22:11:44Z", "type": "forcePushed"}]}