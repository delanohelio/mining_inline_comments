{"pr_number": 1420, "pr_title": "CGMES Full model parser", "pr_createdAt": "2020-08-03T12:59:41Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1420", "timeline": [{"oid": "a4026a6569ed772ad067f1f4a7e3a7154079d1fc", "url": "https://github.com/powsybl/powsybl-core/commit/a4026a6569ed772ad067f1f4a7e3a7154079d1fc", "message": "Add utility function to quickly jump to a XML path\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-07-31T07:52:59Z", "type": "commit"}, {"oid": "d6d24d82c894bbbdf00331da6c813fcfebf9fffa", "url": "https://github.com/powsybl/powsybl-core/commit/d6d24d82c894bbbdf00331da6c813fcfebf9fffa", "message": "Fix coding style\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-07-31T09:09:10Z", "type": "commit"}, {"oid": "8c27b8d6d7ac45940d2674f8fa864799dbfa53ab", "url": "https://github.com/powsybl/powsybl-core/commit/8c27b8d6d7ac45940d2674f8fa864799dbfa53ab", "message": "CGMES Full model fast parser\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>", "committedDate": "2020-08-03T12:57:38Z", "type": "commit"}, {"oid": "b3f4be2791a186b9f5150618fa6aec07194127b8", "url": "https://github.com/powsybl/powsybl-core/commit/b3f4be2791a186b9f5150618fa6aec07194127b8", "message": "Add null check\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>", "committedDate": "2020-08-03T13:30:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0ODAyMw==", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464448023", "bodyText": "You should return immutable version of these lists", "author": "mathbagu", "createdAt": "2020-08-03T14:25:51Z", "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }", "originalCommit": "b3f4be2791a186b9f5150618fa6aec07194127b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1NjY5MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464456690", "bodyText": "As it is also passed to contrusctor we should maybe make a defensive copy in the constructor?", "author": "geofjamg", "createdAt": "2020-08-03T14:39:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0ODAyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2OTI0OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464469248", "bodyText": "Done, defensive copy in the contructor", "author": "geofjamg", "createdAt": "2020-08-03T14:58:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0ODAyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI4ODY2OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r466288668", "bodyText": "It's not equivalent... How do you prevent a user to clear your own copy?\nfullModel.getDependentOn().clear();\n\nI think the copy in the constructor is not necessary because a new context is created each time the parsing is called, but you shoud protect your own data.", "author": "mathbagu", "createdAt": "2020-08-06T09:37:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0ODAyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0OTMwNQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464449305", "bodyText": "You should introduce an overload for readUntilElement, that takes only the two first parameters. This would make this code more readable:\nXmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader);\n\nThis overload would call the existing one, with the empty lambda\nAnother idea would be to name this method XmlUtil.readText().", "author": "mathbagu", "createdAt": "2020-08-03T14:27:52Z", "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }\n+\n+    public String getModelingAuthoritySet() {\n+        return modelingAuthoritySet;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FullModel(\" +\n+                \"id='\" + id + '\\'' +\n+                \", scenarioTime=\" + scenarioTime +\n+                \", created=\" + created +\n+                \", description='\" + description + '\\'' +\n+                \", version=\" + version +\n+                \", profiles=\" + profiles +\n+                \", dependentOn=\" + dependentOn +\n+                \", supersedes=\" + supersedes +\n+                \", modelingAuthoritySet='\" + modelingAuthoritySet + '\\'' +\n+                ')';\n+    }\n+\n+    private static class ParsingContext {\n+\n+        private String id;\n+\n+        private ZonedDateTime scenarioTime;\n+\n+        private ZonedDateTime created;\n+\n+        private String description;\n+\n+        private Integer version;\n+\n+        private final List<String> profiles = new ArrayList<>();\n+\n+        private final List<String> dependentOn = new ArrayList<>();\n+\n+        private final List<String> supersedes = new ArrayList<>();\n+\n+        private String modelingAuthoritySet;\n+\n+        private void validate() {\n+            if (id == null) {\n+                throw new PowsyblException(\"ID is missing\");\n+            }\n+            if (scenarioTime == null) {\n+                throw new PowsyblException(\"Scenario time is missing\");\n+            }\n+            if (created == null) {\n+                throw new PowsyblException(\"Created time is missing\");\n+            }\n+            if (version == null) {\n+                throw new PowsyblException(\"Version is missing\");\n+            }\n+            if (profiles.isEmpty()) {\n+                throw new PowsyblException(\"At least one profile is required\");\n+            }\n+            if (modelingAuthoritySet == null) {\n+                throw new PowsyblException(\"Modeling authority set is missing\");\n+            }\n+        }\n+    }\n+\n+    public static FullModel parse(Reader reader) {\n+        Objects.requireNonNull(reader);\n+        ParsingContext context = new ParsingContext();\n+        try {\n+            XMLInputFactory factory = XMLInputFactory.newInstance();\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n+\n+            XMLStreamReader xmlReader = factory.createXMLStreamReader(reader);\n+            try {\n+                XmlUtil.readUntilStartElement(new String[] {\"/\", CgmesNames.RDF, CgmesNames.FULL_MODEL}, xmlReader, () -> {\n+                    context.id = xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.ABOUT);\n+                    XmlUtil.readUntilEndElement(CgmesNames.FULL_MODEL, xmlReader, () -> {\n+                        switch (xmlReader.getLocalName()) {\n+                            case CgmesNames.SCENARIO_TIME:\n+                                context.scenarioTime = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader, () -> { }));", "originalCommit": "b3f4be2791a186b9f5150618fa6aec07194127b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2MDIwNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464460207", "bodyText": "Ok for XmlUtil.readText()", "author": "geofjamg", "createdAt": "2020-08-03T14:44:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0OTMwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2OTQzNQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464469435", "bodyText": "Done and sync with the other PR", "author": "geofjamg", "createdAt": "2020-08-03T14:59:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0OTMwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjQ1MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464452450", "bodyText": "I would merge the validate method and the constructor. As the constructor is public, one can call it with empty profiles/dependentOn lists, that is forbidden in the parser.", "author": "mathbagu", "createdAt": "2020-08-03T14:32:36Z", "path": "cgmes/cgmes-model/src/main/java/com/powsybl/cgmes/model/FullModel.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.cgmes.model;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.exceptions.UncheckedXmlStreamException;\n+import com.powsybl.commons.xml.XmlUtil;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.XMLStreamReader;\n+import java.io.Reader;\n+import java.time.ZonedDateTime;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ *\n+ * @author Geoffroy Jamgotchian <geoffroy.jamgotchian at rte-france.com>\n+ */\n+public class FullModel {\n+\n+    private final String id;\n+\n+    private final ZonedDateTime scenarioTime;\n+\n+    private final ZonedDateTime created;\n+\n+    private final String description;\n+\n+    private final int version;\n+\n+    private final List<String> profiles;\n+\n+    private final List<String> dependentOn;\n+\n+    private final List<String> supersedes;\n+\n+    private final String modelingAuthoritySet;\n+\n+    public FullModel(String id, ZonedDateTime scenarioTime, ZonedDateTime created, String description, int version, List<String> profiles,\n+                     List<String> dependentOn, List<String> supersedes, String modelingAuthoritySet) {\n+        this.id = Objects.requireNonNull(id);\n+        this.scenarioTime = Objects.requireNonNull(scenarioTime);\n+        this.created = Objects.requireNonNull(created);\n+        this.description = description;\n+        this.version = version;\n+        this.profiles = Objects.requireNonNull(profiles);\n+        this.dependentOn = Objects.requireNonNull(dependentOn);\n+        this.supersedes = Objects.requireNonNull(supersedes);\n+        this.modelingAuthoritySet = Objects.requireNonNull(modelingAuthoritySet);\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public ZonedDateTime getScenarioTime() {\n+        return scenarioTime;\n+    }\n+\n+    public ZonedDateTime getCreated() {\n+        return created;\n+    }\n+\n+    public Optional<String> getDescription() {\n+        return Optional.ofNullable(description);\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public List<String> getProfiles() {\n+        return profiles;\n+    }\n+\n+    public List<String> getDependentOn() {\n+        return dependentOn;\n+    }\n+\n+    public List<String> getSupersedes() {\n+        return supersedes;\n+    }\n+\n+    public String getModelingAuthoritySet() {\n+        return modelingAuthoritySet;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"FullModel(\" +\n+                \"id='\" + id + '\\'' +\n+                \", scenarioTime=\" + scenarioTime +\n+                \", created=\" + created +\n+                \", description='\" + description + '\\'' +\n+                \", version=\" + version +\n+                \", profiles=\" + profiles +\n+                \", dependentOn=\" + dependentOn +\n+                \", supersedes=\" + supersedes +\n+                \", modelingAuthoritySet='\" + modelingAuthoritySet + '\\'' +\n+                ')';\n+    }\n+\n+    private static class ParsingContext {\n+\n+        private String id;\n+\n+        private ZonedDateTime scenarioTime;\n+\n+        private ZonedDateTime created;\n+\n+        private String description;\n+\n+        private Integer version;\n+\n+        private final List<String> profiles = new ArrayList<>();\n+\n+        private final List<String> dependentOn = new ArrayList<>();\n+\n+        private final List<String> supersedes = new ArrayList<>();\n+\n+        private String modelingAuthoritySet;\n+\n+        private void validate() {\n+            if (id == null) {\n+                throw new PowsyblException(\"ID is missing\");\n+            }\n+            if (scenarioTime == null) {\n+                throw new PowsyblException(\"Scenario time is missing\");\n+            }\n+            if (created == null) {\n+                throw new PowsyblException(\"Created time is missing\");\n+            }\n+            if (version == null) {\n+                throw new PowsyblException(\"Version is missing\");\n+            }\n+            if (profiles.isEmpty()) {\n+                throw new PowsyblException(\"At least one profile is required\");\n+            }\n+            if (modelingAuthoritySet == null) {\n+                throw new PowsyblException(\"Modeling authority set is missing\");\n+            }\n+        }\n+    }\n+\n+    public static FullModel parse(Reader reader) {\n+        Objects.requireNonNull(reader);\n+        ParsingContext context = new ParsingContext();\n+        try {\n+            XMLInputFactory factory = XMLInputFactory.newInstance();\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\n+            factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n+\n+            XMLStreamReader xmlReader = factory.createXMLStreamReader(reader);\n+            try {\n+                XmlUtil.readUntilStartElement(new String[] {\"/\", CgmesNames.RDF, CgmesNames.FULL_MODEL}, xmlReader, () -> {\n+                    context.id = xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.ABOUT);\n+                    XmlUtil.readUntilEndElement(CgmesNames.FULL_MODEL, xmlReader, () -> {\n+                        switch (xmlReader.getLocalName()) {\n+                            case CgmesNames.SCENARIO_TIME:\n+                                context.scenarioTime = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.SCENARIO_TIME, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.CREATED:\n+                                context.created = ZonedDateTime.parse(XmlUtil.readUntilEndElement(CgmesNames.CREATED, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.DESCRIPTION:\n+                                context.description = XmlUtil.readUntilEndElement(CgmesNames.DESCRIPTION, xmlReader, () -> { });\n+                                break;\n+                            case CgmesNames.VERSION:\n+                                context.version = Integer.parseInt(XmlUtil.readUntilEndElement(CgmesNames.VERSION, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.PROFILE:\n+                                context.profiles.add(XmlUtil.readUntilEndElement(CgmesNames.PROFILE, xmlReader, () -> { }));\n+                                break;\n+                            case CgmesNames.DEPENDENT_ON:\n+                                context.dependentOn.add(xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.RESOURCE));\n+                                break;\n+                            case CgmesNames.SUPERSEDES:\n+                                context.supersedes.add(xmlReader.getAttributeValue(CgmesNamespace.RDF_NAMESPACE, CgmesNames.RESOURCE));\n+                                break;\n+                            case CgmesNames.MODELING_AUTHORITY_SET:\n+                                context.modelingAuthoritySet = XmlUtil.readUntilEndElement(CgmesNames.MODELING_AUTHORITY_SET, xmlReader, () -> { });\n+                                break;\n+                            default:\n+                                // not yet interesting like superseded\n+                                break;\n+                        }\n+                    });\n+                });\n+            } finally {\n+                xmlReader.close();\n+            }\n+        } catch (XMLStreamException e) {\n+            throw new UncheckedXmlStreamException(e);\n+        }\n+        context.validate();", "originalCommit": "b3f4be2791a186b9f5150618fa6aec07194127b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2MTAzOA==", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464461038", "bodyText": "The only problem is for version as in the constructor it is an int and Integer in the parsing context to detect missing version", "author": "geofjamg", "createdAt": "2020-08-03T14:45:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjQ1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2OTU4NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1420#discussion_r464469584", "bodyText": "Done except for version", "author": "geofjamg", "createdAt": "2020-08-03T14:59:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjQ1MA=="}], "type": "inlineReview"}, {"oid": "f3e7985b70c621d2eee3c8e25eb0b40940c0645a", "url": "https://github.com/powsybl/powsybl-core/commit/f3e7985b70c621d2eee3c8e25eb0b40940c0645a", "message": "Review changes\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>", "committedDate": "2020-08-03T14:50:19Z", "type": "commit"}, {"oid": "1a9ac6652dff25c95066aeca57e943d08d1e8396", "url": "https://github.com/powsybl/powsybl-core/commit/1a9ac6652dff25c95066aeca57e943d08d1e8396", "message": "Fix comment\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>", "committedDate": "2020-08-03T14:51:49Z", "type": "commit"}, {"oid": "9d3b9ae61bc73175a109f0884166a1d0092f1410", "url": "https://github.com/powsybl/powsybl-core/commit/9d3b9ae61bc73175a109f0884166a1d0092f1410", "message": "Add unit test\n\nSigned-off-by: Geoffroy Jamgotchian <geoffroy.jamgotchian@rte-france.com>", "committedDate": "2020-08-03T14:57:05Z", "type": "commit"}, {"oid": "515dc5a58b37be7eb9af678508efc36f9d001cdc", "url": "https://github.com/powsybl/powsybl-core/commit/515dc5a58b37be7eb9af678508efc36f9d001cdc", "message": "Return unmodifiable list from getters\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-08-07T07:40:11Z", "type": "commit"}, {"oid": "959a715dcd315f13a009aeeb697ad3aeda50339c", "url": "https://github.com/powsybl/powsybl-core/commit/959a715dcd315f13a009aeeb697ad3aeda50339c", "message": "Merge branch 'master' into full_model_parser", "committedDate": "2020-08-12T19:28:31Z", "type": "commit"}]}