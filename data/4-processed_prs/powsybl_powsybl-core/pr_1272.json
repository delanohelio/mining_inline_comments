{"pr_number": 1272, "pr_title": "Issue 1206 two windings transformer phase angle clock", "pr_createdAt": "2020-04-14T08:19:52Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1272", "timeline": [{"oid": "058dcfb2e16c3ec9363ba8288e168dbf42bdabbe", "url": "https://github.com/powsybl/powsybl-core/commit/058dcfb2e16c3ec9363ba8288e168dbf42bdabbe", "message": "implement new extension API on TwoWindingsTransformerPhaseAngleClock\n\nSigned-off-by: J\u00e9r\u00e9my LABOUS <jlabous@silicom.fr>", "committedDate": "2020-04-10T13:21:59Z", "type": "commit"}, {"oid": "66f1bef11d9619fca335e4b3ebc8b0381f0ce976", "url": "https://github.com/powsybl/powsybl-core/commit/66f1bef11d9619fca335e4b3ebc8b0381f0ce976", "message": "fix ambiguous reference in java 8\n\nSigned-off-by: J\u00e9r\u00e9my LABOUS <jlabous@silicom.fr>", "committedDate": "2020-04-14T08:15:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMDAzNg==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r408130036", "bodyText": "Not necessary to specify type here", "author": "MioRtia", "createdAt": "2020-04-14T13:20:32Z", "path": "cgmes/cgmes-conversion/src/test/java/com/powsybl/cgmes/conversion/test/network/compare/Comparison.java", "diffHunk": "@@ -448,7 +448,7 @@ private void compareTwoWindingTransformers(TwoWindingsTransformer expected,\n \n         compareRatioTapChanger(expected.getRatioTapChanger(), actual.getRatioTapChanger());\n         comparePhaseTapChanger(expected.getPhaseTapChanger(), actual.getPhaseTapChanger());\n-        comparePhaseAngleClock(expected.getExtension(TwoWindingsTransformerPhaseAngleClock.class), actual.getExtension(TwoWindingsTransformerPhaseAngleClock.class));\n+        comparePhaseAngleClock(expected.<TwoWindingsTransformerPhaseAngleClock>getExtension(TwoWindingsTransformerPhaseAngleClock.class), actual.<TwoWindingsTransformerPhaseAngleClock>getExtension(TwoWindingsTransformerPhaseAngleClock.class));", "originalCommit": "66f1bef11d9619fca335e4b3ebc8b0381f0ce976", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NjIxMg==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r408196212", "bodyText": "Without this we have a build error with java 8 (ambiguous reference)", "author": "jlabous", "createdAt": "2020-04-14T14:47:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMDAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIxMjk5OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r408212999", "bodyText": "Okay ! Rather than that, could you then rename the methods comparePhaseAngleClock respectively as comparePhaseAngleClock2 and comparePhaseAngleClock3? It would be more readable.", "author": "miovd", "createdAt": "2020-04-14T15:08:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMDAzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMDA3MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r408130070", "bodyText": "Not necessary to specify type here", "author": "MioRtia", "createdAt": "2020-04-14T13:20:36Z", "path": "cgmes/cgmes-conversion/src/test/java/com/powsybl/cgmes/conversion/test/network/compare/Comparison.java", "diffHunk": "@@ -470,7 +470,7 @@ private void compareThreeWindingsTransformers(ThreeWindingsTransformer expected,\n         compareLeg(expected.getLeg1(), actual.getLeg1(), expected, actual);\n         compareLeg(expected.getLeg2(), actual.getLeg2(), expected, actual);\n         compareLeg(expected.getLeg3(), actual.getLeg3(), expected, actual);\n-        comparePhaseAngleClock(expected.getExtension(ThreeWindingsTransformerPhaseAngleClock.class), actual.getExtension(ThreeWindingsTransformerPhaseAngleClock.class));\n+        comparePhaseAngleClock(expected.<ThreeWindingsTransformerPhaseAngleClock>getExtension(ThreeWindingsTransformerPhaseAngleClock.class), actual.<ThreeWindingsTransformerPhaseAngleClock>getExtension(ThreeWindingsTransformerPhaseAngleClock.class));", "originalCommit": "66f1bef11d9619fca335e4b3ebc8b0381f0ce976", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzOTM3Mw==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r408139373", "bodyText": "Maybe use a ValidationException:\nthrow new ValidationException(getExtendable(), \"Unexpected value for phaseAngleClock: \" + phaseAngleClock);\nFor the method to remain static, the Extendable can be passed in parameters.", "author": "MioRtia", "createdAt": "2020-04-14T13:33:49Z", "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/TwoWindingsTransformerPhaseAngleClockImpl.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) 2019, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.PowsyblException;\n+import com.powsybl.commons.extensions.AbstractExtension;\n+import com.powsybl.iidm.network.TwoWindingsTransformer;\n+\n+/**\n+ * @author Jos\u00e9 Antonio Marqu\u00e9s <marquesja at aia.es>\n+ */\n+public class TwoWindingsTransformerPhaseAngleClockImpl extends AbstractExtension<TwoWindingsTransformer> implements TwoWindingsTransformerPhaseAngleClock {\n+\n+    private int phaseAngleClock;\n+\n+    public TwoWindingsTransformerPhaseAngleClockImpl(TwoWindingsTransformer twt, int phaseAngleClock) {\n+        super(twt);\n+        this.phaseAngleClock = checkPhaseAngleClock(phaseAngleClock);\n+    }\n+\n+    @Override\n+    public int getPhaseAngleClock() {\n+        return phaseAngleClock;\n+    }\n+\n+    @Override\n+    public void setPhaseAngleClock(int phaseAngleClock) {\n+        this.phaseAngleClock = checkPhaseAngleClock(phaseAngleClock);\n+    }\n+\n+    private static int checkPhaseAngleClock(int phaseAngleClock) {\n+        if (phaseAngleClock < 0 || phaseAngleClock > 11) {\n+            throw new PowsyblException(\"Unexpected value for phaseAngleClock: \" + phaseAngleClock);", "originalCommit": "66f1bef11d9619fca335e4b3ebc8b0381f0ce976", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcwMjc2Mw==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r413702763", "bodyText": "For ValidationException we need a Validable instead of an Extendable.\nHow can we overcome that ?", "author": "jlabous", "createdAt": "2020-04-23T10:32:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzOTM3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU2NjgwNQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r414566805", "bodyText": "Hm okay, I did not notice that... Ignore my comment then, it would be too much of a breaking change to make the object validable.", "author": "miovd", "createdAt": "2020-04-24T13:15:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzOTM3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE4ODIxOQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r408188219", "bodyText": "Don't use addExtension(TwoWindingsTransformerPhaseAngleClock.class, pac) anymore, use the new method", "author": "MioRtia", "createdAt": "2020-04-14T14:37:58Z", "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/TwoWindingsTransformerPhaseAngleClockTest.java", "diffHunk": "@@ -35,10 +35,12 @@ public void setUp() {\n \n     @Test\n     public void testEnd() {\n-        TwoWindingsTransformerPhaseAngleClock pac = new TwoWindingsTransformerPhaseAngleClock(transformer, 11);\n+        TwoWindingsTransformerPhaseAngleClock pac = new TwoWindingsTransformerPhaseAngleClockImpl(transformer, 11);\n         transformer.addExtension(TwoWindingsTransformerPhaseAngleClock.class, pac);", "originalCommit": "66f1bef11d9619fca335e4b3ebc8b0381f0ce976", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE4ODMwNg==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r408188306", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-04-14T14:38:07Z", "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/TwoWindingsTransformerPhaseAngleClockTest.java", "diffHunk": "@@ -51,15 +53,15 @@ public void testEnd() {\n     public void testError1() {\n         exception.expect(PowsyblException.class);\n         exception.expectMessage(\"Unexpected value for phaseAngleClock: 12\");\n-        TwoWindingsTransformerPhaseAngleClock pac = new TwoWindingsTransformerPhaseAngleClock(transformer, 12);\n+        TwoWindingsTransformerPhaseAngleClock pac = new TwoWindingsTransformerPhaseAngleClockImpl(transformer, 12);\n         transformer.addExtension(TwoWindingsTransformerPhaseAngleClock.class, pac);", "originalCommit": "66f1bef11d9619fca335e4b3ebc8b0381f0ce976", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE4ODQyMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r408188420", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-04-14T14:38:15Z", "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/TwoWindingsTransformerPhaseAngleClockTest.java", "diffHunk": "@@ -51,15 +53,15 @@ public void testEnd() {\n     public void testError1() {\n         exception.expect(PowsyblException.class);\n         exception.expectMessage(\"Unexpected value for phaseAngleClock: 12\");\n-        TwoWindingsTransformerPhaseAngleClock pac = new TwoWindingsTransformerPhaseAngleClock(transformer, 12);\n+        TwoWindingsTransformerPhaseAngleClock pac = new TwoWindingsTransformerPhaseAngleClockImpl(transformer, 12);\n         transformer.addExtension(TwoWindingsTransformerPhaseAngleClock.class, pac);\n     }\n \n     @Test\n     public void testError2() {\n         exception.expect(PowsyblException.class);\n         exception.expectMessage(\"Unexpected value for phaseAngleClock: -1\");\n-        TwoWindingsTransformerPhaseAngleClock pac = new TwoWindingsTransformerPhaseAngleClock(transformer, -1);\n+        TwoWindingsTransformerPhaseAngleClock pac = new TwoWindingsTransformerPhaseAngleClockImpl(transformer, -1);\n         transformer.addExtension(TwoWindingsTransformerPhaseAngleClock.class, pac);", "originalCommit": "66f1bef11d9619fca335e4b3ebc8b0381f0ce976", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE4ODU2Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r408188566", "bodyText": "Same remark", "author": "MioRtia", "createdAt": "2020-04-14T14:38:26Z", "path": "iidm/iidm-extensions/src/test/java/com/powsybl/iidm/network/extensions/TwoWindingsTransformerPhaseAngleClockXmlSerializerTest.java", "diffHunk": "@@ -30,7 +30,7 @@ public void test() throws IOException {\n         network.setCaseDate(DateTime.parse(\"2019-05-27T12:17:02.504+02:00\"));\n         TwoWindingsTransformer transformer = network.getTwoWindingsTransformer(\"NHV2_NLOAD\");\n \n-        TwoWindingsTransformerPhaseAngleClock pac = new TwoWindingsTransformerPhaseAngleClock(transformer, 3);\n+        TwoWindingsTransformerPhaseAngleClock pac = new TwoWindingsTransformerPhaseAngleClockImpl(transformer, 3);\n         transformer.addExtension(TwoWindingsTransformerPhaseAngleClock.class, pac);", "originalCommit": "66f1bef11d9619fca335e4b3ebc8b0381f0ce976", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcxMTMwNQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r408711305", "bodyText": "Should we initialize this parameter to an invalid value, just to be sure the user set it manually?", "author": "mathbagu", "createdAt": "2020-04-15T09:37:59Z", "path": "iidm/iidm-extensions/src/main/java/com/powsybl/iidm/network/extensions/TwoWindingsTransformerPhaseAngleClockAdderImpl.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Copyright (c) 2020, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network.extensions;\n+\n+import com.powsybl.commons.extensions.AbstractExtensionAdder;\n+import com.powsybl.iidm.network.TwoWindingsTransformer;\n+\n+/**\n+ * @author J\u00e9r\u00e9my LABOUS <jlabous at silicom.fr>\n+ */\n+public class TwoWindingsTransformerPhaseAngleClockAdderImpl\n+    extends AbstractExtensionAdder<TwoWindingsTransformer, TwoWindingsTransformerPhaseAngleClock>\n+    implements TwoWindingsTransformerPhaseAngleClockAdder {\n+\n+    private int phaseAngleClock;", "originalCommit": "66f1bef11d9619fca335e4b3ebc8b0381f0ce976", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc5MDI5MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1272#discussion_r408790290", "bodyText": "Yes, it should be set at -1", "author": "miovd", "createdAt": "2020-04-15T12:05:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcxMTMwNQ=="}], "type": "inlineReview"}, {"oid": "9ea873f6705bafd0001dbbf833222c8a714f7a1a", "url": "https://github.com/powsybl/powsybl-core/commit/9ea873f6705bafd0001dbbf833222c8a714f7a1a", "message": "take remark in account\n\nSigned-off-by: J\u00e9r\u00e9my LABOUS <jlabous@silicom.fr>", "committedDate": "2020-04-23T12:42:58Z", "type": "commit"}, {"oid": "20a2cfb70f718db96a4414f15e75b0133925e67b", "url": "https://github.com/powsybl/powsybl-core/commit/20a2cfb70f718db96a4414f15e75b0133925e67b", "message": "Merge branch 'master' into issue_1206_TwoWindingsTransformerPhaseAngleClock", "committedDate": "2020-05-05T12:56:35Z", "type": "commit"}]}