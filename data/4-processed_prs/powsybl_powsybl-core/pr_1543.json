{"pr_number": 1543, "pr_title": "Timeseries csv parser", "pr_createdAt": "2020-11-09T15:30:03Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1543", "timeline": [{"oid": "917c6d053819b06607f06dc911890bb57119d8fa", "url": "https://github.com/powsybl/powsybl-core/commit/917c6d053819b06607f06dc911890bb57119d8fa", "message": "add Regular and Irregular Index\nadd Long and ZonedDataTime options\ncolumn \"version\" is optional\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-11-05T13:10:28Z", "type": "commit"}, {"oid": "620ecdf8dd3d5c673cb2fb6b4ebc4937b5faa0e3", "url": "https://github.com/powsybl/powsybl-core/commit/620ecdf8dd3d5c673cb2fb6b4ebc4937b5faa0e3", "message": "Merge branch 'master' into timeseries-csv-parser", "committedDate": "2020-11-06T11:37:34Z", "type": "commit"}, {"oid": "1eadf97ae129f7cbc386a891eef26212a6bfc806", "url": "https://github.com/powsybl/powsybl-core/commit/1eadf97ae129f7cbc386a891eef26212a6bfc806", "message": "use a single list of times\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-11-09T15:22:26Z", "type": "commit"}, {"oid": "20837f8ea843ade1c4d4698559c734c38c21c34a", "url": "https://github.com/powsybl/powsybl-core/commit/20837f8ea843ade1c4d4698559c734c38c21c34a", "message": "Merge branch 'master' into timeseries-csv-parser", "committedDate": "2020-11-09T15:23:47Z", "type": "commit"}, {"oid": "2cefaa640476826261ba9bb5b3e68600391c8c1c", "url": "https://github.com/powsybl/powsybl-core/commit/2cefaa640476826261ba9bb5b3e68600391c8c1c", "message": "add versioned flag and increase coverage\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-11-10T08:09:18Z", "type": "commit"}, {"oid": "5b4a291b65f27fad257315efbc41965f566e3181", "url": "https://github.com/powsybl/powsybl-core/commit/5b4a291b65f27fad257315efbc41965f566e3181", "message": "check if time column has datetime format\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-11-10T10:03:37Z", "type": "commit"}, {"oid": "e80ee62f68c204d3fd8fa29fec23f5c7414956d5", "url": "https://github.com/powsybl/powsybl-core/commit/e80ee62f68c204d3fd8fa29fec23f5c7414956d5", "message": "Use a variable to indicate the format of the Time column\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-11-10T15:14:27Z", "type": "commit"}, {"oid": "ef152dec12705b43fbc05ac7469e9c8551faf6f1", "url": "https://github.com/powsybl/powsybl-core/commit/ef152dec12705b43fbc05ac7469e9c8551faf6f1", "message": "Increase coverage\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-11-11T08:21:12Z", "type": "commit"}, {"oid": "3612608fde07656f2288d3146e0997305578c0ee", "url": "https://github.com/powsybl/powsybl-core/commit/3612608fde07656f2288d3146e0997305578c0ee", "message": "Merge branch 'master' into timeseries-csv-parser", "committedDate": "2020-11-19T10:28:35Z", "type": "commit"}, {"oid": "a24558d424d9d403e7f04097ec968179a16cf8ed", "url": "https://github.com/powsybl/powsybl-core/commit/a24558d424d9d403e7f04097ec968179a16cf8ed", "message": "time and version columns are not sensitive\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-11-19T10:32:06Z", "type": "commit"}, {"oid": "deabb7f148efb129ed9ed7662267cf6855650b09", "url": "https://github.com/powsybl/powsybl-core/commit/deabb7f148efb129ed9ed7662267cf6855650b09", "message": "fix test\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-11-19T10:58:21Z", "type": "commit"}, {"oid": "304b66eaa37a15d19bbb8e398b467145c7a8a44e", "url": "https://github.com/powsybl/powsybl-core/commit/304b66eaa37a15d19bbb8e398b467145c7a8a44e", "message": "Merge branch 'master' into timeseries-csv-parser", "committedDate": "2020-11-29T21:28:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI3MTIyMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r532271221", "bodyText": "This is too much parameters, add a TimeSeries.CsvParserConfig with default values.", "author": "geofjamg", "createdAt": "2020-11-29T21:33:04Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeries.java", "diffHunk": "@@ -125,20 +131,32 @@ static StringTimeSeries createString(String name, TimeSeriesIndex index, String.\n     }\n \n     static Map<Integer, List<TimeSeries>> parseCsv(Path file) {\n-        return parseCsv(file, TimeSeriesConstants.DEFAULT_SEPARATOR);\n+        return parseCsv(file, TimeSeriesConstants.DEFAULT_SEPARATOR, true, TimeFormat.DATE_TIME);\n+    }\n+\n+    static Map<Integer, List<TimeSeries>> parseCsv(Path file, boolean versioned, TimeFormat timeFormat) {\n+        return parseCsv(file, TimeSeriesConstants.DEFAULT_SEPARATOR, versioned, timeFormat);\n     }\n \n     static Map<Integer, List<TimeSeries>> parseCsv(String csv, char separator) {\n         try (BufferedReader reader = new BufferedReader(new StringReader(csv))) {\n-            return parseCsv(reader, separator);\n+            return parseCsv(reader, separator, true, TimeFormat.DATE_TIME);\n         } catch (IOException e) {\n             throw new UncheckedIOException(e);\n         }\n     }\n \n-    static Map<Integer, List<TimeSeries>> parseCsv(Path file, char separator) {\n+    static Map<Integer, List<TimeSeries>> parseCsv(String csv, char separator, boolean versioned, TimeFormat timeFormat) {\n+        try (BufferedReader reader = new BufferedReader(new StringReader(csv))) {\n+            return parseCsv(reader, separator, versioned, timeFormat);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+    }\n+\n+    static Map<Integer, List<TimeSeries>> parseCsv(Path file, char separator, boolean versioned, TimeFormat timeFormat) {", "originalCommit": "304b66eaa37a15d19bbb8e398b467145c7a8a44e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM3MTc2MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r535371760", "bodyText": "Done", "author": "marcosmc", "createdAt": "2020-12-03T16:11:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI3MTIyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI3MTY0Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r532271646", "bodyText": "static final is useless", "author": "geofjamg", "createdAt": "2020-11-29T21:33:45Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeries.java", "diffHunk": "@@ -472,4 +541,6 @@ static void parseChunks(JsonParser parser, TimeSeriesMetadata metadata, List<Tim\n     static List<TimeSeries> parseJson(Path file) {\n         return JsonUtil.parseJson(file, TimeSeries::parseJson);\n     }\n+\n+    static final Logger LOG = LoggerFactory.getLogger(TimeSeries.class);", "originalCommit": "304b66eaa37a15d19bbb8e398b467145c7a8a44e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM3MTg1OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r535371859", "bodyText": "Done", "author": "marcosmc", "createdAt": "2020-12-03T16:11:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI3MTY0Ng=="}], "type": "inlineReview"}, {"oid": "48e7256ac0b7fa4f6b6664b1bc908bb6e19b4cfa", "url": "https://github.com/powsybl/powsybl-core/commit/48e7256ac0b7fa4f6b6664b1bc908bb6e19b4cfa", "message": "Add CsvParserConfig\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-12-03T12:10:44Z", "type": "commit"}, {"oid": "79ed7763bd01afc7405ae3e43ac52ae2ce2abe63", "url": "https://github.com/powsybl/powsybl-core/commit/79ed7763bd01afc7405ae3e43ac52ae2ce2abe63", "message": "Merge branch 'master' into timeseries-csv-parser", "committedDate": "2020-12-03T12:11:04Z", "type": "commit"}, {"oid": "6b1f6c05889b38ba5e46dd94f3953b28ee918d02", "url": "https://github.com/powsybl/powsybl-core/commit/6b1f6c05889b38ba5e46dd94f3953b28ee918d02", "message": "remove unused import\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-12-03T12:26:37Z", "type": "commit"}, {"oid": "fdf6bc64b20afa032ab26b5371806110353c7a8b", "url": "https://github.com/powsybl/powsybl-core/commit/fdf6bc64b20afa032ab26b5371806110353c7a8b", "message": "write Timeseries to CSV file\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-12-03T12:29:02Z", "type": "commit"}, {"oid": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "url": "https://github.com/powsybl/powsybl-core/commit/4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "message": "fix sonar\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-12-03T15:55:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0MzMyMg==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r538243322", "bodyText": "Should be static?", "author": "mathbagu", "createdAt": "2020-12-08T10:59:44Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeries.java", "diffHunk": "@@ -152,18 +169,48 @@ static String checkString(String token) {\n         return token.isEmpty() ? null : token;\n     }\n \n+    class CsvParserConfig {", "originalCommit": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0MTkyNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r543441927", "bodyText": "To avoid duplicate classes, an individual class is generated to group it with the CsvConfig class of TimeSeriesTable.", "author": "marcosmc", "createdAt": "2020-12-15T15:25:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0MzMyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0MzQ0NA==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r538243444", "bodyText": "Should be private and final", "author": "mathbagu", "createdAt": "2020-12-08T10:59:56Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeries.java", "diffHunk": "@@ -152,18 +169,48 @@ static String checkString(String token) {\n         return token.isEmpty() ? null : token;\n     }\n \n+    class CsvParserConfig {\n+        boolean versioned;\n+        TimeFormat timeFormat;", "originalCommit": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0MjI1NQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r543442255", "bodyText": "Done", "author": "marcosmc", "createdAt": "2020-12-15T15:25:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0MzQ0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0NDMwMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r538244300", "bodyText": "Same comment there: you could also fix the declaration of the class and the fields", "author": "mathbagu", "createdAt": "2020-12-08T11:01:19Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeries.java", "diffHunk": "@@ -152,18 +169,48 @@ static String checkString(String token) {\n         return token.isEmpty() ? null : token;\n     }\n \n+    class CsvParserConfig {\n+        boolean versioned;\n+        TimeFormat timeFormat;\n+\n+        CsvParserConfig() {\n+            this(true, TimeFormat.DATE_TIME);\n+        }\n+\n+        public CsvParserConfig(boolean versioned, TimeFormat timeFormat) {\n+            this.versioned = versioned;\n+            this.timeFormat = timeFormat;\n+        }\n+\n+        public boolean versioned() {\n+            return versioned;\n+        }\n+\n+        public TimeFormat timeFormat() {\n+            return timeFormat;\n+        }\n+    }\n+\n     class CsvParsingContext {\n         final List<String> names;\n+        final CsvParserConfig csvParserConfig;\n+        final int fixedColumns;\n \n         final TimeSeriesDataType[] dataTypes;\n         final Object[] values;\n \n-        final List<ZonedDateTime> times = new ArrayList<>();\n+        final List<Long> times = new ArrayList<>();\n \n         TimeSeriesIndex refIndex;", "originalCommit": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0MjYyMg==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r543442622", "bodyText": "Done", "author": "marcosmc", "createdAt": "2020-12-15T15:25:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0NDMwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0NTk1Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r538245952", "bodyText": "I wonder if the separator should be added in the CsvParserConfig and then pass the config to this method", "author": "mathbagu", "createdAt": "2020-12-08T11:03:48Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeries.java", "diffHunk": "@@ -338,11 +418,19 @@ static CsvParsingContext readCsvHeader(CsvListReader csvListReader, String separ\n         if (!duplicates.isEmpty()) {\n             throw new TimeSeriesException(\"Bad CSV header, there are duplicates in time series names \" + duplicates);\n         }\n-        List<String> names = Arrays.asList(tokens).subList(2, tokens.length);\n-        return new CsvParsingContext(names);\n+        List<String> names = Arrays.asList(tokens).subList(csvParserConfig.versioned() ? 2 : 1, tokens.length);\n+        return new CsvParsingContext(names, csvParserConfig);\n+    }\n+\n+    static void checkCsvHeader(String separatorStr, boolean versioned, String[] tokens) {", "originalCommit": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0Mjc2Mw==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r543442763", "bodyText": "Done", "author": "marcosmc", "createdAt": "2020-12-15T15:26:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0NTk1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0NjMxMA==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r538246310", "bodyText": "I wonder if the separator should be added in the config and the pass only the config to this method", "author": "mathbagu", "createdAt": "2020-12-08T11:04:17Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeries.java", "diffHunk": "@@ -319,15 +400,14 @@ static void readCsvValues(CsvListReader reader, CsvParsingContext context,\n         timeSeriesPerVersion.put(currentVersion, context.createTimeSeries());\n     }\n \n-    static CsvParsingContext readCsvHeader(CsvListReader csvListReader, String separatorStr) throws IOException {\n+    static CsvParsingContext readCsvHeader(CsvListReader csvListReader, String separatorStr, CsvParserConfig csvParserConfig) throws IOException {", "originalCommit": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0MjkyMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r543442921", "bodyText": "Done", "author": "marcosmc", "createdAt": "2020-12-15T15:26:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0NjMxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0NzA0OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r538247048", "bodyText": "Is an empty timeseries totally dumb? Maybe it could be useful for the timeline (see my comment about null TS vs empty TS in #1539)", "author": "mathbagu", "createdAt": "2020-12-08T11:05:22Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeries.java", "diffHunk": "@@ -288,11 +340,40 @@ private Duration checkRegularSpacing() {\n                     StringDataChunk chunk = new UncompressedStringDataChunk(0, stringValues.toArray(new String[0])).tryToCompress();\n                     timeSeriesList.add(new StringTimeSeries(metadata, chunk));\n                 } else {\n-                    throw assertDataType(dataTypes[i - 2]);\n+                    throw assertDataType(dataTypes[i - fixedColumns]);\n                 }\n             }\n             return timeSeriesList;\n         }\n+\n+        private TimeSeriesIndex getTimeSeriesIndex() {\n+            Long spacing = checkRegularSpacing();\n+            if (spacing != Long.MIN_VALUE) {\n+                return new RegularTimeSeriesIndex(times.get(0), times.get(times.size() - 1), spacing);\n+            } else {\n+                return new IrregularTimeSeriesIndex(times.stream().mapToLong(l -> l).toArray());\n+            }\n+        }\n+\n+        private long checkRegularSpacing() {\n+            if (times.size() < 2) {\n+                throw new TimeSeriesException(\"At least 2 rows are expected\");\n+            }", "originalCommit": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0ODA2NQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r543448065", "bodyText": "At this point it only affects the reading of TimeSeries from a CSV file, it is possible to create an empty object of type TimeSeries without using a CSV file as a starting point", "author": "marcosmc", "createdAt": "2020-12-15T15:32:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0NzA0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0NzQ4OQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r538247489", "bodyText": "Add a default case that throws an AssertionError with the unexpected timeFormat", "author": "mathbagu", "createdAt": "2020-12-08T11:06:04Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeries.java", "diffHunk": "@@ -190,42 +237,66 @@ private TDoubleArrayList createDoubleValues() {\n             return stringValues;\n         }\n \n+        int getVersion(List<String> tokens) {\n+            return csvParserConfig.versioned() ? Integer.parseInt(tokens.get(1)) : 0;\n+        }\n+\n+        int timesSize() {\n+            return times.size();\n+        }\n+\n+        int expectedTokens() {\n+            return names.size() + fixedColumns;\n+        }\n+\n         void parseToken(int i, String token) {\n-            if (dataTypes[i - 2] == null) {\n+            if (dataTypes[i - fixedColumns] == null) {\n                 // test double parsing, in case of error we consider it a string time series\n                 if (Doubles.tryParse(token) != null) {\n-                    dataTypes[i - 2] = TimeSeriesDataType.DOUBLE;\n+                    dataTypes[i - fixedColumns] = TimeSeriesDataType.DOUBLE;\n                     TDoubleArrayList doubleValues = createDoubleValues();\n                     doubleValues.add(parseDouble(token));\n-                    values[i - 2] = doubleValues;\n+                    values[i - fixedColumns] = doubleValues;\n                 } else {\n-                    dataTypes[i - 2] = TimeSeriesDataType.STRING;\n+                    dataTypes[i - fixedColumns] = TimeSeriesDataType.STRING;\n                     List<String> stringValues = createStringValues();\n                     stringValues.add(checkString(token));\n-                    values[i - 2] = stringValues;\n+                    values[i - fixedColumns] = stringValues;\n                 }\n             } else {\n-                if (dataTypes[i - 2] == TimeSeriesDataType.DOUBLE) {\n-                    ((TDoubleArrayList) values[i - 2]).add(parseDouble(token));\n-                } else if (dataTypes[i - 2] == TimeSeriesDataType.STRING) {\n-                    ((List<String>) values[i - 2]).add(checkString(token));\n+                if (dataTypes[i - fixedColumns] == TimeSeriesDataType.DOUBLE) {\n+                    ((TDoubleArrayList) values[i - fixedColumns]).add(parseDouble(token));\n+                } else if (dataTypes[i - fixedColumns] == TimeSeriesDataType.STRING) {\n+                    ((List<String>) values[i - fixedColumns]).add(checkString(token));\n                 } else {\n-                    throw assertDataType(dataTypes[i - 2]);\n+                    throw assertDataType(dataTypes[i - fixedColumns]);\n                 }\n             }\n         }\n \n         void parseLine(List<String> tokens) {\n-            for (int i = 2; i < tokens.size(); i++) {\n+            for (int i = fixedColumns; i < tokens.size(); i++) {\n                 String token = tokens.get(i) != null ? tokens.get(i).trim() : \"\";\n                 parseToken(i, token);\n             }\n-            // empty last cell case\n-            if (tokens.size() == names.size() + 1) {\n-                parseToken(tokens.size(), \"\");\n-            }\n \n-            times.add(ZonedDateTime.parse(tokens.get(0)));\n+            parseTokenTime(tokens);\n+        }\n+\n+        void parseTokenTime(List<String> tokens) {\n+            switch (csvParserConfig.timeFormat()) {\n+                case DATE_TIME:\n+                    times.add(ZonedDateTime.parse(tokens.get(0)).toInstant().toEpochMilli());\n+                    break;\n+                case FRACTIONS_OF_SECOND:\n+                    Double time = Double.parseDouble(tokens.get(0)) * 1000;\n+                    times.add(time.longValue());\n+                    break;\n+                case MILLIS:\n+                    Double millis = Double.parseDouble(tokens.get(0));\n+                    times.add(millis.longValue());\n+                    break;\n+            }", "originalCommit": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0MzY2OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r543443668", "bodyText": "Done", "author": "marcosmc", "createdAt": "2020-12-15T15:27:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0NzQ4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0ODg2MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r538248860", "bodyText": "What did you have in mind by replacing the equality by this epsilon? Maybe you should also introduce a constant instead of a magic number. What is the unit of this value?", "author": "mathbagu", "createdAt": "2020-12-08T11:08:16Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeries.java", "diffHunk": "@@ -288,11 +340,40 @@ private Duration checkRegularSpacing() {\n                     StringDataChunk chunk = new UncompressedStringDataChunk(0, stringValues.toArray(new String[0])).tryToCompress();\n                     timeSeriesList.add(new StringTimeSeries(metadata, chunk));\n                 } else {\n-                    throw assertDataType(dataTypes[i - 2]);\n+                    throw assertDataType(dataTypes[i - fixedColumns]);\n                 }\n             }\n             return timeSeriesList;\n         }\n+\n+        private TimeSeriesIndex getTimeSeriesIndex() {\n+            Long spacing = checkRegularSpacing();\n+            if (spacing != Long.MIN_VALUE) {\n+                return new RegularTimeSeriesIndex(times.get(0), times.get(times.size() - 1), spacing);\n+            } else {\n+                return new IrregularTimeSeriesIndex(times.stream().mapToLong(l -> l).toArray());\n+            }\n+        }\n+\n+        private long checkRegularSpacing() {\n+            if (times.size() < 2) {\n+                throw new TimeSeriesException(\"At least 2 rows are expected\");\n+            }\n+\n+            long spacing = Long.MIN_VALUE;\n+            for (int i = 1; i < times.size(); i++) {\n+                long duration = times.get(i) - times.get(i - 1);\n+                if (spacing == Long.MIN_VALUE) {\n+                    spacing = duration;\n+                } else {\n+                    if (1e-4 < Math.abs(duration - spacing)) {\n+                        return Long.MIN_VALUE;\n+                    }", "originalCommit": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0NDI1OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r543444258", "bodyText": "Replaced with an equality", "author": "marcosmc", "createdAt": "2020-12-15T15:27:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0ODg2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0OTgxMg==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r538249812", "bodyText": "I wonder if the flush should be moved in the writeCsv() method to avoid user to forget it. What do you think?", "author": "mathbagu", "createdAt": "2020-12-08T11:09:40Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeriesTable.java", "diffHunk": "@@ -534,15 +537,33 @@ private static BufferedWriter createWriter(Path file) throws IOException {\n \n     public void writeCsv(Path file) {\n         try (BufferedWriter writer = createWriter(file)) {\n-            writeCsv(writer, TimeSeriesConstants.DEFAULT_SEPARATOR, ZoneId.systemDefault());\n+            writeCsv(writer, TimeSeriesConstants.DEFAULT_SEPARATOR, ZoneId.systemDefault(), new CsvParserConfig());\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n+    }\n+\n+    public void writeCsv(Path file, CsvParserConfig csvParserConfig) {\n+        try (BufferedWriter writer = createWriter(file)) {\n+            writeCsv(writer, TimeSeriesConstants.DEFAULT_SEPARATOR, ZoneId.systemDefault(), csvParserConfig);\n         } catch (IOException e) {\n             throw new UncheckedIOException(e);\n         }\n     }\n \n     public String toCsvString(char separator, ZoneId zoneId) {\n         try (StringWriter writer = new StringWriter()) {\n-            writeCsv(writer, separator, zoneId);\n+            writeCsv(writer, separator, zoneId, new CsvParserConfig());\n+            writer.flush();", "originalCommit": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0NDU0MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r543444540", "bodyText": "Done", "author": "marcosmc", "createdAt": "2020-12-15T15:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI0OTgxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI1MDI2Nw==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r538250267", "bodyText": "Add a default case that throws an exception", "author": "mathbagu", "createdAt": "2020-12-08T11:10:25Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeriesTable.java", "diffHunk": "@@ -640,14 +679,32 @@ private void dumpCache(Writer writer, CsvConfig config, int point, CsvCache cach\n         }\n     }\n \n-    public void writeCsv(Writer writer, char separator, ZoneId zoneId) {\n+    private void writeTime(Writer writer, CsvConfig config, int point, int cachedPoint) throws IOException {\n+        long time = tableIndex.getTimeAt(point + cachedPoint);\n+        switch (config.getTimeFormat()) {\n+            case DATE_TIME:\n+                ZonedDateTime dateTime = ZonedDateTime.ofInstant(Instant.ofEpochMilli(time), ZoneId.systemDefault());\n+                writer.write(dateTime.format(config.dateTimeFormatter));\n+                break;\n+            case FRACTIONS_OF_SECOND:\n+                Long longTime = new Long(time);\n+                double convertedTime = longTime.doubleValue();\n+                writer.write(Double.toString(convertedTime / 1000));\n+                break;\n+            case MILLIS:\n+                writer.write(Long.toString(time));\n+                break;", "originalCommit": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0NDY0MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r543444640", "bodyText": "Done", "author": "marcosmc", "createdAt": "2020-12-15T15:28:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI1MDI2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI1MTY3MA==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r538251670", "bodyText": "Is this code equivalent to:\nwriter.write(Double.toString(time / 1000.0));\n\nI think that time / 1000.0 will be automatically cast into a double (thanks to the .0)", "author": "mathbagu", "createdAt": "2020-12-08T11:12:39Z", "path": "time-series/time-series-api/src/main/java/com/powsybl/timeseries/TimeSeriesTable.java", "diffHunk": "@@ -640,14 +679,32 @@ private void dumpCache(Writer writer, CsvConfig config, int point, CsvCache cach\n         }\n     }\n \n-    public void writeCsv(Writer writer, char separator, ZoneId zoneId) {\n+    private void writeTime(Writer writer, CsvConfig config, int point, int cachedPoint) throws IOException {\n+        long time = tableIndex.getTimeAt(point + cachedPoint);\n+        switch (config.getTimeFormat()) {\n+            case DATE_TIME:\n+                ZonedDateTime dateTime = ZonedDateTime.ofInstant(Instant.ofEpochMilli(time), ZoneId.systemDefault());\n+                writer.write(dateTime.format(config.dateTimeFormatter));\n+                break;\n+            case FRACTIONS_OF_SECOND:\n+                Long longTime = new Long(time);\n+                double convertedTime = longTime.doubleValue();\n+                writer.write(Double.toString(convertedTime / 1000));", "originalCommit": "4b0e336e5ea619a1e163e7d38782f78e0c6ee52a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0NDczNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1543#discussion_r543444737", "bodyText": "Done", "author": "marcosmc", "createdAt": "2020-12-15T15:28:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI1MTY3MA=="}], "type": "inlineReview"}, {"oid": "2bd320dc51d5c8ebf30d2e8f11b7b922eb4479ca", "url": "https://github.com/powsybl/powsybl-core/commit/2bd320dc51d5c8ebf30d2e8f11b7b922eb4479ca", "message": "Fix PR\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-12-14T08:34:11Z", "type": "commit"}, {"oid": "8fe398c313f82d98e0eda2d64560f0fef90648ff", "url": "https://github.com/powsybl/powsybl-core/commit/8fe398c313f82d98e0eda2d64560f0fef90648ff", "message": "Merge branch 'master' into timeseries-csv-parser", "committedDate": "2020-12-14T08:34:32Z", "type": "commit"}, {"oid": "26d5ccb9c552ca86eba8e0ef83c9afa4f96eaef4", "url": "https://github.com/powsybl/powsybl-core/commit/26d5ccb9c552ca86eba8e0ef83c9afa4f96eaef4", "message": "Join two CSV configuration classes into a single class\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2020-12-15T10:08:06Z", "type": "commit"}, {"oid": "7f0e9fc6f34f1460502f91a41742b3a97cd7c678", "url": "https://github.com/powsybl/powsybl-core/commit/7f0e9fc6f34f1460502f91a41742b3a97cd7c678", "message": "Merge branch 'master' into timeseries-csv-parser", "committedDate": "2020-12-15T10:09:26Z", "type": "commit"}, {"oid": "0afa0088a62a730b029ae9b7edf1fc365b5f5389", "url": "https://github.com/powsybl/powsybl-core/commit/0afa0088a62a730b029ae9b7edf1fc365b5f5389", "message": "Merge branch 'master' into timeseries-csv-parser\n\nSigned-off-by: Marcos de Miguel <demiguelm@aia.es>", "committedDate": "2021-01-18T15:41:28Z", "type": "commit"}, {"oid": "9d4d0b931fda1764064df45a85d64a2ca892b950", "url": "https://github.com/powsybl/powsybl-core/commit/9d4d0b931fda1764064df45a85d64a2ca892b950", "message": "Merge branch 'master' into timeseries-csv-parser", "committedDate": "2021-01-18T16:17:30Z", "type": "commit"}]}