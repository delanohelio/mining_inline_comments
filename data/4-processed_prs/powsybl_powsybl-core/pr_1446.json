{"pr_number": 1446, "pr_title": "Empty extension should not be serialized", "pr_createdAt": "2020-08-19T08:55:41Z", "pr_url": "https://github.com/powsybl/powsybl-core/pull/1446", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4MzMzNQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r492183335", "bodyText": "This method sounds very strange. I'm not convinced this method is well placed. For serialization purpose, why the serializer is not responsible to determine if an extension should be serialized or not?", "author": "mathbagu", "createdAt": "2020-09-21T16:13:46Z", "path": "commons/src/main/java/com/powsybl/commons/extensions/Extension.java", "diffHunk": "@@ -33,4 +33,12 @@\n      */\n     void setExtendable(T extendable);\n \n+    /**\n+     * Return whether the extension is empty (and thus should not be serialized)\n+     *\n+     * @return true if the extension is empty, false otherwise\n+     */\n+    default boolean isEmpty() {\n+        return false;\n+    }", "originalCommit": "58799132ca069718b4b52ad9c0f71b636ad1911b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU5OTIxNA==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r492599214", "bodyText": "Yes indeed, that would be more consistent...", "author": "flo-dup", "createdAt": "2020-09-22T09:33:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4MzMzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4NTA2Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r492185062", "bodyText": "I think this method should be define on the SlackTerminal API, not for the all extensions (that could concern everything in powsybl, not necessarily IIDM extensions)", "author": "mathbagu", "createdAt": "2020-09-21T16:16:29Z", "path": "iidm/iidm-impl/src/main/java/com/powsybl/iidm/network/impl/extensions/SlackTerminalImpl.java", "diffHunk": "@@ -46,7 +46,7 @@ public SlackTerminal setTerminal(Terminal terminal) {\n     }\n \n     @Override\n-    public boolean isCleanable() {\n+    public boolean isEmpty() {", "originalCommit": "58799132ca069718b4b52ad9c0f71b636ad1911b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDM1OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r492600358", "bodyText": "Yes (like it was before that PR), if the serializer is responsible of checking if the serialization is needed, there's no need for that in all the extesions. And what about the name btw, isCleanable / isEmpty?", "author": "flo-dup", "createdAt": "2020-09-22T09:35:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4NTA2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4NTQzMw==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r492185433", "bodyText": "I would use the serializer to check if an extension should be serialized or not.", "author": "mathbagu", "createdAt": "2020-09-21T16:17:06Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java", "diffHunk": "@@ -79,9 +79,7 @@ private NetworkXml() {\n     private static Set<String> getNetworkExtensions(Network n) {\n         Set<String> extensions = new TreeSet<>();\n         for (Identifiable<?> identifiable : n.getIdentifiables()) {\n-            for (Extension<? extends Identifiable<?>> extension : identifiable.getExtensions()) {\n-                extensions.add(extension.getName());\n-            }\n+            identifiable.getExtensions().stream().filter(e -> !e.isEmpty()).forEach(e -> extensions.add(e.getName()));", "originalCommit": "58799132ca069718b4b52ad9c0f71b636ad1911b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMzIyNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r492603227", "bodyText": "ok as said above", "author": "flo-dup", "createdAt": "2020-09-22T09:40:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4NTQzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4NTk4MQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r492185981", "bodyText": "I think we really need to cache the extension list for an identifiable, to not iterate several times over the same list.", "author": "mathbagu", "createdAt": "2020-09-21T16:17:53Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java", "diffHunk": "@@ -217,15 +215,14 @@ private static void writeExtensions(Network n, NetworkXmlWriterContext context,\n \n             Collection<? extends Extension<? extends Identifiable<?>>> extensions = identifiable.getExtensions().stream()\n                     .filter(e -> options.withExtension(e.getName()))\n+                    .filter(e -> !e.isEmpty())", "originalCommit": "58799132ca069718b4b52ad9c0f71b636ad1911b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY0MTY2Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r493641666", "bodyText": "Indeed, it's done twice when writing the xml: first for the namespaces, then for the extension itslef", "author": "flo-dup", "createdAt": "2020-09-23T14:31:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4NTk4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcwMDM3Mg==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r493700372", "bodyText": "Edit: It's now computed only once, when creating the NetworkXmlWriterContext", "author": "flo-dup", "createdAt": "2020-09-23T15:47:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4NTk4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4NjIwOQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r492186209", "bodyText": "This is a regression?", "author": "mathbagu", "createdAt": "2020-09-21T16:18:17Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java", "diffHunk": "@@ -217,15 +215,14 @@ private static void writeExtensions(Network n, NetworkXmlWriterContext context,\n \n             Collection<? extends Extension<? extends Identifiable<?>>> extensions = identifiable.getExtensions().stream()\n                     .filter(e -> options.withExtension(e.getName()))\n+                    .filter(e -> !e.isEmpty())\n                     .filter(e -> getExtensionXmlSerializer(options, e.getName()) != null)\n                     .collect(Collectors.toList());\n             if (!extensions.isEmpty()) {\n                 context.getExtensionsWriter().writeStartElement(context.getVersion().getNamespaceURI(), EXTENSION_ELEMENT_NAME);\n                 context.getExtensionsWriter().writeAttribute(ID, context.getAnonymizer().anonymizeString(identifiable.getId()));\n                 for (Extension<? extends Identifiable<?>> extension : extensions) {\n-                    if (options.withExtension(extension.getName())) {\n-                        writeExtension(extension, context);\n-                    }", "originalCommit": "58799132ca069718b4b52ad9c0f71b636ad1911b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwNDM2Ng==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r492604366", "bodyText": "I don't think so, it's always true because of the filter a few lines above", "author": "flo-dup", "createdAt": "2020-09-22T09:42:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4NjIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg3NTEzNw==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r492875137", "bodyText": "Good catch", "author": "mathbagu", "createdAt": "2020-09-22T16:30:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE4NjIwOQ=="}], "type": "inlineReview"}, {"oid": "4ea8fa01137e34e543284dcb1a7a936142bac766", "url": "https://github.com/powsybl/powsybl-core/commit/4ea8fa01137e34e543284dcb1a7a936142bac766", "message": "Update xml test file\n\nDue to rebase\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>", "committedDate": "2020-09-28T12:33:50Z", "type": "forcePushed"}, {"oid": "3aacdeb0221e846c1625efc03a1ed4752ce47b57", "url": "https://github.com/powsybl/powsybl-core/commit/3aacdeb0221e846c1625efc03a1ed4752ce47b57", "message": "Adding the isEmpty method for extensions\n\nIf extension isEmpty then it is not serialized.\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>", "committedDate": "2020-09-28T12:59:21Z", "type": "commit"}, {"oid": "dea2b5d54966aafa1b99cc8cfe6ee8cdbeb80c38", "url": "https://github.com/powsybl/powsybl-core/commit/dea2b5d54966aafa1b99cc8cfe6ee8cdbeb80c38", "message": "Activating SlackTerminal serialization\n\nUnit tests activated and corrected.\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>", "committedDate": "2020-09-28T12:59:21Z", "type": "commit"}, {"oid": "3b19f69e0fb88d83ed86ce62c7aa0831d5ed80de", "url": "https://github.com/powsybl/powsybl-core/commit/3b19f69e0fb88d83ed86ce62c7aa0831d5ed80de", "message": "Updating ieee xiidm reference test files\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>", "committedDate": "2020-09-28T12:59:21Z", "type": "commit"}, {"oid": "ef11d91671da492a68fd41ee87a2ec37d1dae43a", "url": "https://github.com/powsybl/powsybl-core/commit/ef11d91671da492a68fd41ee87a2ec37d1dae43a", "message": "Extension interface: isEmpty method removed\n\nReplaced by isEmptySerialization in ExtensionXmlSerializer\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>", "committedDate": "2020-09-28T12:59:21Z", "type": "commit"}, {"oid": "5c01106060c6b8be0b944d693cfdee7eb10e93d4", "url": "https://github.com/powsybl/powsybl-core/commit/5c01106060c6b8be0b944d693cfdee7eb10e93d4", "message": "Refactoring for caching the extension list\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>", "committedDate": "2020-09-28T12:59:21Z", "type": "commit"}, {"oid": "f00cfaa1da9110184a7ac758e34157bf51a640c5", "url": "https://github.com/powsybl/powsybl-core/commit/f00cfaa1da9110184a7ac758e34157bf51a640c5", "message": "Computing only once the list of extensions for an identifiable\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>", "committedDate": "2020-09-28T12:59:22Z", "type": "commit"}, {"oid": "c710783aff7ac2bdf6557c604157d9d1573ff847", "url": "https://github.com/powsybl/powsybl-core/commit/c710783aff7ac2bdf6557c604157d9d1573ff847", "message": "Refactoring of writing the network xml\n\n- separates context creation / writing document start / streamWriter init.\n- including the extensions serializers in the context\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>", "committedDate": "2020-09-28T13:10:11Z", "type": "commit"}, {"oid": "c142ee6208b327b425a7138d3980ec7b595b43d4", "url": "https://github.com/powsybl/powsybl-core/commit/c142ee6208b327b425a7138d3980ec7b595b43d4", "message": "Update xml test file\n\nDue to rebase\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>", "committedDate": "2020-09-28T13:10:11Z", "type": "commit"}, {"oid": "c142ee6208b327b425a7138d3980ec7b595b43d4", "url": "https://github.com/powsybl/powsybl-core/commit/c142ee6208b327b425a7138d3980ec7b595b43d4", "message": "Update xml test file\n\nDue to rebase\n\nSigned-off-by: Florian Dupuy <florian.dupuy@rte-france.com>", "committedDate": "2020-09-28T13:10:11Z", "type": "forcePushed"}, {"oid": "bca616d1c3d612de2590d56e1fae619c91e75e87", "url": "https://github.com/powsybl/powsybl-core/commit/bca616d1c3d612de2590d56e1fae619c91e75e87", "message": "Fix implementation\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-09-30T15:32:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzMTcxMQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r498031711", "bodyText": "I think we should also check here options.withExtension(e.getName()), otherwise we might end up declaring the namespace of an extension which is not exported", "author": "flo-dup", "createdAt": "2020-10-01T07:17:37Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java", "diffHunk": "@@ -183,16 +166,27 @@ private static void writeExtension(Extension<? extends Identifiable<?>> extensio\n         }\n     }\n \n-    private static ExtensionXmlSerializer getExtensionXmlSerializer(ExportOptions options, String extensionName) {\n+    private static ExtensionXmlSerializer getExtensionXmlSerializer(ExportOptions options, Extension<? extends Identifiable<?>> extension) {\n         ExtensionXmlSerializer extensionXmlSerializer = options.isThrowExceptionIfExtensionNotFound()\n-                ? EXTENSIONS_SUPPLIER.get().findProviderOrThrowException(extensionName)\n-                : EXTENSIONS_SUPPLIER.get().findProvider(extensionName);\n+                ? EXTENSIONS_SUPPLIER.get().findProviderOrThrowException(extension.getName())\n+                : EXTENSIONS_SUPPLIER.get().findProvider(extension.getName());\n         if (extensionXmlSerializer == null) {\n-            LOGGER.warn(\"No Extension XML Serializer for {}\", extensionName);\n+            if (options.isThrowExceptionIfExtensionNotFound()) {\n+                throw new PowsyblException(\"XmlSerializer for\" + extension.getName() + \"not found\");\n+            } else {\n+                LOGGER.warn(\"No Extension XML Serializer for {}\", extension.getName());\n+            }\n+        } else if (!extensionXmlSerializer.isSerializable(extension)) {\n+            return null;\n         }", "originalCommit": "bca616d1c3d612de2590d56e1fae619c91e75e87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzMzUzMg==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r498033532", "bodyText": "No need to test it as it is already filtered out above", "author": "flo-dup", "createdAt": "2020-10-01T07:21:20Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java", "diffHunk": "@@ -209,19 +203,24 @@ private static String getNamespaceUri(ExtensionXmlSerializer extensionXmlSeriali\n                 .orElseGet(extensionXmlSerializer::getNamespaceUri);\n     }\n \n-    private static void writeExtensions(Network n, NetworkXmlWriterContext context) throws XMLStreamException {\n+    private static void writeExtensions(Network n, NetworkXmlWriterContext context, ExportOptions options) throws XMLStreamException {\n \n-        for (Identifiable<?> identifiable : IidmXmlUtil.sorted(n.getIdentifiables(), context.getOptions())) {\n+        for (Identifiable<?> identifiable : IidmXmlUtil.sorted(n.getIdentifiables(), options)) {\n             if (!context.isExportedEquipment(identifiable)) {\n                 continue;\n             }\n \n-            Map<Extension<? extends Identifiable<?>>, ExtensionXmlSerializer> identifExtnSerializers = context.getExtensionXmlSerializers().get(identifiable);\n-            if (!identifExtnSerializers.isEmpty()) {\n+            Collection<? extends Extension<? extends Identifiable<?>>> extensions = identifiable.getExtensions().stream()\n+                    .filter(e -> options.withExtension(e.getName()))\n+                    .filter(e -> getExtensionXmlSerializer(options, e) != null)\n+                    .collect(Collectors.toList());\n+            if (!extensions.isEmpty()) {\n                 context.getExtensionsWriter().writeStartElement(context.getVersion().getNamespaceURI(), EXTENSION_ELEMENT_NAME);\n                 context.getExtensionsWriter().writeAttribute(ID, context.getAnonymizer().anonymizeString(identifiable.getId()));\n-                for (Extension<? extends Identifiable<?>> extension : IidmXmlUtil.sortedExtensions(identifExtnSerializers.keySet(), context.getOptions())) {\n-                    writeExtension(extension, identifExtnSerializers.get(extension), context);\n+                for (Extension<? extends Identifiable<?>> extension : IidmXmlUtil.sortedExtensions(extensions, options)) {\n+                    if (options.withExtension(extension.getName())) {", "originalCommit": "bca616d1c3d612de2590d56e1fae619c91e75e87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAzNzc4MQ==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r498037781", "bodyText": "This filter can be removed if we check it in getExtensionXmlSerializer", "author": "flo-dup", "createdAt": "2020-10-01T07:29:15Z", "path": "iidm/iidm-xml-converter/src/main/java/com/powsybl/iidm/xml/NetworkXml.java", "diffHunk": "@@ -209,19 +203,24 @@ private static String getNamespaceUri(ExtensionXmlSerializer extensionXmlSeriali\n                 .orElseGet(extensionXmlSerializer::getNamespaceUri);\n     }\n \n-    private static void writeExtensions(Network n, NetworkXmlWriterContext context) throws XMLStreamException {\n+    private static void writeExtensions(Network n, NetworkXmlWriterContext context, ExportOptions options) throws XMLStreamException {\n \n-        for (Identifiable<?> identifiable : IidmXmlUtil.sorted(n.getIdentifiables(), context.getOptions())) {\n+        for (Identifiable<?> identifiable : IidmXmlUtil.sorted(n.getIdentifiables(), options)) {\n             if (!context.isExportedEquipment(identifiable)) {\n                 continue;\n             }\n \n-            Map<Extension<? extends Identifiable<?>>, ExtensionXmlSerializer> identifExtnSerializers = context.getExtensionXmlSerializers().get(identifiable);\n-            if (!identifExtnSerializers.isEmpty()) {\n+            Collection<? extends Extension<? extends Identifiable<?>>> extensions = identifiable.getExtensions().stream()\n+                    .filter(e -> options.withExtension(e.getName()))", "originalCommit": "bca616d1c3d612de2590d56e1fae619c91e75e87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEwODA0OA==", "url": "https://github.com/powsybl/powsybl-core/pull/1446#discussion_r498108048", "bodyText": "Isn't mockito-core enough? If yes, use the ${mockito.version}", "author": "MioRtia", "createdAt": "2020-10-01T09:29:30Z", "path": "commons/pom.xml", "diffHunk": "@@ -140,6 +140,12 @@\n             <artifactId>xmlunit-core</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.mockito</groupId>\n+            <artifactId>mockito-all</artifactId>\n+            <version>1.10.19</version>", "originalCommit": "bca616d1c3d612de2590d56e1fae619c91e75e87", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2132c56539f57d2cb8bdb1c2f14f15f9d7b77703", "url": "https://github.com/powsybl/powsybl-core/commit/2132c56539f57d2cb8bdb1c2f14f15f9d7b77703", "message": "Review fixes\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-10-01T10:27:49Z", "type": "commit"}, {"oid": "4686fe079585bea1c349cb7709a6c9639214d129", "url": "https://github.com/powsybl/powsybl-core/commit/4686fe079585bea1c349cb7709a6c9639214d129", "message": "Small fix\n\nSigned-off-by: Mathieu BAGUE <mathieu.bague@rte-france.com>", "committedDate": "2020-10-01T10:54:44Z", "type": "commit"}, {"oid": "1ef28fa797126e3af5983ae167f049442230b59c", "url": "https://github.com/powsybl/powsybl-core/commit/1ef28fa797126e3af5983ae167f049442230b59c", "message": "Merge branch 'master' into empty_extension", "committedDate": "2020-10-01T13:10:53Z", "type": "commit"}]}