{"pr_number": 3988, "pr_title": "Unify Town and Nation code, and introduce new Eco Account Mechanics", "pr_createdAt": "2020-05-07T23:27:38Z", "pr_url": "https://github.com/TownyAdvanced/Towny/pull/3988", "timeline": [{"oid": "5125f584775a9e4fc28d21916925ef414c2fd5ea", "url": "https://github.com/TownyAdvanced/Towny/commit/5125f584775a9e4fc28d21916925ef414c2fd5ea", "message": "Merge branch 'master' into refactor-bank\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/object/Nation.java\n#\tsrc/com/palmergames/bukkit/towny/object/Town.java", "committedDate": "2020-07-07T02:14:14Z", "type": "commit"}, {"oid": "152809a4793383e2ee0eb315d5a94f3dad12c429", "url": "https://github.com/TownyAdvanced/Towny/commit/152809a4793383e2ee0eb315d5a94f3dad12c429", "message": "Merge upstream changes.", "committedDate": "2020-07-07T02:19:52Z", "type": "commit"}, {"oid": "125745fec4ae16e1fe8e8c154a1e10e706db78d5", "url": "https://github.com/TownyAdvanced/Towny/commit/125745fec4ae16e1fe8e8c154a1e10e706db78d5", "message": "Rename Residence to ResidentOwner", "committedDate": "2020-07-07T18:39:50Z", "type": "commit"}, {"oid": "700e5361672780a5d522bdc27b20c326f86037bb", "url": "https://github.com/TownyAdvanced/Towny/commit/700e5361672780a5d522bdc27b20c326f86037bb", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-07-07T18:40:44Z", "type": "commit"}, {"oid": "7a5860f3d9a54ef5c5303f86b7a7c5f4fb5204be", "url": "https://github.com/TownyAdvanced/Towny/commit/7a5860f3d9a54ef5c5303f86b7a7c5f4fb5204be", "message": "Revert back to ResidentList.", "committedDate": "2020-07-07T18:51:14Z", "type": "commit"}, {"oid": "b420678252a2c0acee7b75e932135d299dae6c14", "url": "https://github.com/TownyAdvanced/Towny/commit/b420678252a2c0acee7b75e932135d299dae6c14", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-07-13T18:38:30Z", "type": "commit"}, {"oid": "a565fe83a142c2e04d59e4b601c027296f1709ed", "url": "https://github.com/TownyAdvanced/Towny/commit/a565fe83a142c2e04d59e4b601c027296f1709ed", "message": "Merge branch 'master' into refactor-bank\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/command/TownCommand.java\n#\tsrc/com/palmergames/bukkit/towny/event/NationTransactionEvent.java\n#\tsrc/com/palmergames/bukkit/towny/event/TownTagChangeEvent.java\n#\tsrc/com/palmergames/bukkit/towny/event/TownTransactionEvent.java\n#\tsrc/com/palmergames/bukkit/towny/invites/InviteHandler.java\n#\tsrc/com/palmergames/bukkit/towny/object/Resident.java\n#\tsrc/com/palmergames/bukkit/towny/object/Town.java\n#\tsrc/com/palmergames/bukkit/towny/object/Transaction.java\n#\tsrc/com/palmergames/bukkit/towny/object/inviteobjects/NationAllyNationInvite.java\n#\tsrc/com/palmergames/bukkit/towny/object/inviteobjects/PlayerJoinTownInvite.java\n#\tsrc/com/palmergames/bukkit/towny/object/inviteobjects/TownJoinNationInvite.java\n#\tsrc/com/palmergames/util/StringMgmt.java", "committedDate": "2020-07-16T16:09:26Z", "type": "commit"}, {"oid": "52d44ba0d44ceb5b5f7be5f3d471228e13a873e9", "url": "https://github.com/TownyAdvanced/Towny/commit/52d44ba0d44ceb5b5f7be5f3d471228e13a873e9", "message": "fix javadoc error.", "committedDate": "2020-07-16T16:10:57Z", "type": "commit"}, {"oid": "6974fcf4cd1e514522a8bbf9fde27b109c6ab490", "url": "https://github.com/TownyAdvanced/Towny/commit/6974fcf4cd1e514522a8bbf9fde27b109c6ab490", "message": "Removed unused imports.", "committedDate": "2020-07-16T16:24:37Z", "type": "commit"}, {"oid": "615d212c82f8cab8355768e676ea6df09401c7ce", "url": "https://github.com/TownyAdvanced/Towny/commit/615d212c82f8cab8355768e676ea6df09401c7ce", "message": "Clean up\n\n- unused imports\n- undo orphanged residentList->owner renames\n- remove unused method in Town object.", "committedDate": "2020-07-17T21:09:26Z", "type": "commit"}, {"oid": "ba5e3092045675220afa76f0911dc3befd3931cc", "url": "https://github.com/TownyAdvanced/Towny/commit/ba5e3092045675220afa76f0911dc3befd3931cc", "message": "Merge branch 'master' into refactor-bank\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/tasks/DailyTimerTask.java", "committedDate": "2020-07-17T21:58:45Z", "type": "commit"}, {"oid": "c4ac1ce3bf3b4c463bb1ecc54a0ede9417dcdd23", "url": "https://github.com/TownyAdvanced/Towny/commit/c4ac1ce3bf3b4c463bb1ecc54a0ede9417dcdd23", "message": "Unify Bank methods and provide defaults.", "committedDate": "2020-05-07T23:20:23Z", "type": "commit"}, {"oid": "945615f444b3dfc7bc018ffe6f3dcf6470da1054", "url": "https://github.com/TownyAdvanced/Towny/commit/945615f444b3dfc7bc018ffe6f3dcf6470da1054", "message": "Introduce a new generified event BankTransactionEvent for listening to *any* bank transaction.", "committedDate": "2020-05-08T00:35:59Z", "type": "commit"}, {"oid": "02aeeff01caa9506120e9f752dc23b27aa944c97", "url": "https://github.com/TownyAdvanced/Towny/commit/02aeeff01caa9506120e9f752dc23b27aa944c97", "message": "Make sure BankTransactionEvent has static handerlist.", "committedDate": "2020-05-08T00:43:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjExMjQzMA==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r422112430", "bodyText": "the apostrophe has to be replaced with whatever character code is need. Or make \"there is\".", "author": "LlmDl", "createdAt": "2020-05-08T12:22:51Z", "path": "src/com/palmergames/bukkit/towny/object/Bank.java", "diffHunk": "@@ -1,19 +1,46 @@\n package com.palmergames.bukkit.towny.object;\n \n+import com.palmergames.bukkit.towny.TownySettings;\n import com.palmergames.bukkit.towny.exceptions.EconomyException;\n import com.palmergames.bukkit.towny.exceptions.TownyException;\n \n /**\n  * Allows objects to manage a self contained bank.\n+ *\n+ * These methods are more of convenience or utility methods.\n  */\n public interface Bank extends EconomyHandler {\n \t/**\n \t * Takes money from object bank account and gives it to a resident.\n \t * \n \t * @param resident The resident to pay to.\n \t * @param amount The amount to pay.\n-\t * @throws EconomyException Thrown if there is an economy error.\n-\t * @throws TownyException Thrown if their is a hierarchical error.\n+\t * @throws EconomyException When there's a payment error.", "originalCommit": "02aeeff01caa9506120e9f752dc23b27aa944c97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4MTI4Mg==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r422281282", "bodyText": "what?", "author": null, "createdAt": "2020-05-08T17:49:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjExMjQzMA=="}], "type": "inlineReview"}, {"oid": "51d8099c0b086309ee93b241696d1d39c7bf989a", "url": "https://github.com/TownyAdvanced/Towny/commit/51d8099c0b086309ee93b241696d1d39c7bf989a", "message": "Fix misc javadoc errors that were leftover.", "committedDate": "2020-05-08T18:03:09Z", "type": "commit"}, {"oid": "65583125934d844e628e7d9f925b902b93160151", "url": "https://github.com/TownyAdvanced/Towny/commit/65583125934d844e628e7d9f925b902b93160151", "message": "Introduce new territory for code consolidation between towns and nations.", "committedDate": "2020-05-08T23:15:30Z", "type": "commit"}, {"oid": "605776010c947456e04e17bd1ce984f9bab7d110", "url": "https://github.com/TownyAdvanced/Towny/commit/605776010c947456e04e17bd1ce984f9bab7d110", "message": "Revert Towny.java changes", "committedDate": "2020-05-08T23:16:31Z", "type": "commit"}, {"oid": "3614f2f63e08e6ab3021b0922fab249baf6e7850", "url": "https://github.com/TownyAdvanced/Towny/commit/3614f2f63e08e6ab3021b0922fab249baf6e7850", "message": "More cleanup", "committedDate": "2020-05-09T02:41:41Z", "type": "commit"}, {"oid": "1ddf32e51b52768625328bc82d26457e916ed9cb", "url": "https://github.com/TownyAdvanced/Towny/commit/1ddf32e51b52768625328bc82d26457e916ed9cb", "message": "Add new SpawnLocation interface and more cleanup", "committedDate": "2020-05-09T02:53:22Z", "type": "commit"}, {"oid": "5f04f9bb62fe9d04529810845e44f034ba750154", "url": "https://github.com/TownyAdvanced/Towny/commit/5f04f9bb62fe9d04529810845e44f034ba750154", "message": "Cleanup Commit\n\nRemoves unused imports\nRe-adds renamed methods as deprecated to maintain compatibility.", "committedDate": "2020-05-09T11:50:27Z", "type": "commit"}, {"oid": "4afc1592950c1f7b5692b2b7982ca8509d7eac01", "url": "https://github.com/TownyAdvanced/Towny/commit/4afc1592950c1f7b5692b2b7982ca8509d7eac01", "message": "Format code to what is standard in Towny.", "committedDate": "2020-05-09T14:08:15Z", "type": "commit"}, {"oid": "d2ef6cb7fe4a3985ad32eace171d6336b4274591", "url": "https://github.com/TownyAdvanced/Towny/commit/d2ef6cb7fe4a3985ad32eace171d6336b4274591", "message": "Merge branch 'master' into refactor-bank\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/object/Town.java", "committedDate": "2020-05-09T19:33:59Z", "type": "commit"}, {"oid": "56c7028c34a0387bf4523caeabd76d76abcbaed2", "url": "https://github.com/TownyAdvanced/Towny/commit/56c7028c34a0387bf4523caeabd76d76abcbaed2", "message": "Merge remote-tracking branch 'origin/refactor-bank' into refactor-bank\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/object/Town.java", "committedDate": "2020-05-09T19:35:07Z", "type": "commit"}, {"oid": "1dac9eda951665120d29bba17aef43e837da2c79", "url": "https://github.com/TownyAdvanced/Towny/commit/1dac9eda951665120d29bba17aef43e837da2c79", "message": "Add new Bank Object", "committedDate": "2020-05-13T01:12:07Z", "type": "commit"}, {"oid": "89f081eb7f948b914a5671d9409da15998fd2c5d", "url": "https://github.com/TownyAdvanced/Towny/commit/89f081eb7f948b914a5671d9409da15998fd2c5d", "message": "Add Documentation", "committedDate": "2020-05-13T01:27:53Z", "type": "commit"}, {"oid": "75f7f14a7b3e8ba4428215ef5610936e247319d5", "url": "https://github.com/TownyAdvanced/Towny/commit/75f7f14a7b3e8ba4428215ef5610936e247319d5", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-05-13T01:53:35Z", "type": "commit"}, {"oid": "4cd42c79255d5b51c6e0f677997b5af85d9cab86", "url": "https://github.com/TownyAdvanced/Towny/commit/4cd42c79255d5b51c6e0f677997b5af85d9cab86", "message": "Cleanup", "committedDate": "2020-05-13T01:54:09Z", "type": "commit"}, {"oid": "c3cda0785e1b4b578b365ea0a7307cb223721b41", "url": "https://github.com/TownyAdvanced/Towny/commit/c3cda0785e1b4b578b365ea0a7307cb223721b41", "message": "Add more specific documentation.", "committedDate": "2020-05-14T22:42:13Z", "type": "commit"}, {"oid": "de46203f61863f408b47466ae074cf4098fd5663", "url": "https://github.com/TownyAdvanced/Towny/commit/de46203f61863f408b47466ae074cf4098fd5663", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-05-14T22:42:54Z", "type": "commit"}, {"oid": "66547986e6d3a12f1f41ddeba58a9dc56de6db2e", "url": "https://github.com/TownyAdvanced/Towny/commit/66547986e6d3a12f1f41ddeba58a9dc56de6db2e", "message": "Add observer for account transactions to separate auditing code.", "committedDate": "2020-05-16T16:25:13Z", "type": "commit"}, {"oid": "c9ed4c6005f2d3b7194159c02162b00f5ac1feaf", "url": "https://github.com/TownyAdvanced/Towny/commit/c9ed4c6005f2d3b7194159c02162b00f5ac1feaf", "message": "Make most objects return unmodifiable lists, this will prevent untracked and dangerous writes to objects.\n\n- Document ResidentList", "committedDate": "2020-05-16T23:29:10Z", "type": "commit"}, {"oid": "31cd665e93e60e8a0c600d3887e81b3ddcd52348", "url": "https://github.com/TownyAdvanced/Towny/commit/31cd665e93e60e8a0c600d3887e81b3ddcd52348", "message": "Remove some unused imports.", "committedDate": "2020-05-16T23:29:28Z", "type": "commit"}, {"oid": "3dfff77e4e3e5f527db01e949b3cd046bac30993", "url": "https://github.com/TownyAdvanced/Towny/commit/3dfff77e4e3e5f527db01e949b3cd046bac30993", "message": "Add auditing mechanics to Town and Nation", "committedDate": "2020-05-17T01:50:21Z", "type": "commit"}, {"oid": "871090c6538d1bab0e032541a26c46b5cb581193", "url": "https://github.com/TownyAdvanced/Towny/commit/871090c6538d1bab0e032541a26c46b5cb581193", "message": "Initial book stuff.", "committedDate": "2020-05-18T01:45:59Z", "type": "commit"}, {"oid": "2b3a664b2b0aa385f5910aec9285c5fad0a10b3c", "url": "https://github.com/TownyAdvanced/Towny/commit/2b3a664b2b0aa385f5910aec9285c5fad0a10b3c", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-05-18T01:46:06Z", "type": "commit"}, {"oid": "3a57d14f7a1015df9ab4f9aefea4fe5cd9e03dc8", "url": "https://github.com/TownyAdvanced/Towny/commit/3a57d14f7a1015df9ab4f9aefea4fe5cd9e03dc8", "message": "Add iterator support for TownBlockOwner and ResidentList", "committedDate": "2020-05-18T19:51:45Z", "type": "commit"}, {"oid": "d9475a8a8ad3bfae85957d6f4714c792f7e9e2df", "url": "https://github.com/TownyAdvanced/Towny/commit/d9475a8a8ad3bfae85957d6f4714c792f7e9e2df", "message": "Add deprecations for backwards compatibility.", "committedDate": "2020-05-18T20:06:25Z", "type": "commit"}, {"oid": "649aca16548cdd31a211bba065b3bbcf0afc2b30", "url": "https://github.com/TownyAdvanced/Towny/commit/649aca16548cdd31a211bba065b3bbcf0afc2b30", "message": "Revert iterators.", "committedDate": "2020-05-18T20:20:44Z", "type": "commit"}, {"oid": "a8986a63ce7a37df28e1e038f26d1dc34bfe994f", "url": "https://github.com/TownyAdvanced/Towny/commit/a8986a63ce7a37df28e1e038f26d1dc34bfe994f", "message": "actually remove it", "committedDate": "2020-05-18T20:24:38Z", "type": "commit"}, {"oid": "a3a4bb8d76715a4875703c4d0f9a73dc7815a354", "url": "https://github.com/TownyAdvanced/Towny/commit/a3a4bb8d76715a4875703c4d0f9a73dc7815a354", "message": "Finalization.", "committedDate": "2020-05-19T17:21:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MzkwMg==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r427473902", "bodyText": "Version numbers are off", "author": "LlmDl", "createdAt": "2020-05-19T17:27:00Z", "path": "src/com/palmergames/bukkit/towny/object/economy/Account.java", "diffHunk": "@@ -284,4 +284,22 @@ public final void setAuditor(AccountAuditor auditor) {\n \t\t\tsuper(TownySettings.getString(ConfigNodes.ECO_CLOSED_ECONOMY_SERVER_ACCOUNT));\n \t\t}\n \t}\n+\t\n+\t// Legacy Compatibility Methods.\n+\n+\t/**\n+\t * @deprecated As of 0.96.11.0, use {@link #deposit(double, String)} instead.", "originalCommit": "a3a4bb8d76715a4875703c4d0f9a73dc7815a354", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "475c4338df486cb6607cbe54accf9be202c5a3f9", "url": "https://github.com/TownyAdvanced/Towny/commit/475c4338df486cb6607cbe54accf9be202c5a3f9", "message": "Fix version number", "committedDate": "2020-05-19T19:18:42Z", "type": "commit"}, {"oid": "a2104d0844e7fe78dcf22d498ed648eb27c4576f", "url": "https://github.com/TownyAdvanced/Towny/commit/a2104d0844e7fe78dcf22d498ed648eb27c4576f", "message": "Add economy adapter to interface with multiple eco implementations.", "committedDate": "2020-05-27T00:30:54Z", "type": "commit"}, {"oid": "90c67fb2cb17c40670ac23fb60e5d9989b21b01d", "url": "https://github.com/TownyAdvanced/Towny/commit/90c67fb2cb17c40670ac23fb60e5d9989b21b01d", "message": "unbox primitive types.", "committedDate": "2020-05-27T00:58:40Z", "type": "commit"}, {"oid": "1fffa67661381b674ed2564b507d9ae760797f21", "url": "https://github.com/TownyAdvanced/Towny/commit/1fffa67661381b674ed2564b507d9ae760797f21", "message": "fix the other primitives", "committedDate": "2020-05-27T01:09:56Z", "type": "commit"}, {"oid": "5efb67429a041bc157cb393e64acd51f4e603a53", "url": "https://github.com/TownyAdvanced/Towny/commit/5efb67429a041bc157cb393e64acd51f4e603a53", "message": "Remove GH packages dependencies.", "committedDate": "2020-05-28T22:50:03Z", "type": "commit"}, {"oid": "d3c126ed15ac5fe44ba413586ae2886b3494a283", "url": "https://github.com/TownyAdvanced/Towny/commit/d3c126ed15ac5fe44ba413586ae2886b3494a283", "message": "Attach sources", "committedDate": "2020-05-28T22:52:16Z", "type": "commit"}, {"oid": "b19dc58584120fd513247fc94dee0c53129da5c3", "url": "https://github.com/TownyAdvanced/Towny/commit/b19dc58584120fd513247fc94dee0c53129da5c3", "message": "Remove static server account field", "committedDate": "2020-05-29T02:04:20Z", "type": "commit"}, {"oid": "ab8e05ccb2df39be3b4b03070acdf57d3bb6cccf", "url": "https://github.com/TownyAdvanced/Towny/commit/ab8e05ccb2df39be3b4b03070acdf57d3bb6cccf", "message": "Merge branch 'feature/jitpack' into refactor-bank", "committedDate": "2020-05-29T04:33:46Z", "type": "commit"}, {"oid": "2d4002dc5b5df2c9d399904fa1a23687f7829eab", "url": "https://github.com/TownyAdvanced/Towny/commit/2d4002dc5b5df2c9d399904fa1a23687f7829eab", "message": "Fix NPE on startup", "committedDate": "2020-05-29T04:43:37Z", "type": "commit"}, {"oid": "d544fb62d75c5446c57c0c58237881fa2678702f", "url": "https://github.com/TownyAdvanced/Towny/commit/d544fb62d75c5446c57c0c58237881fa2678702f", "message": "Initial skeleton for debt handling.", "committedDate": "2020-05-30T13:05:48Z", "type": "commit"}, {"oid": "8e69cc22d4b4a1e2ac0e729fef29068cee37c41a", "url": "https://github.com/TownyAdvanced/Towny/commit/8e69cc22d4b4a1e2ac0e729fef29068cee37c41a", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-05-30T13:06:22Z", "type": "commit"}, {"oid": "47983ecb55f9dccef3bb959ca3f2e98b0e391179", "url": "https://github.com/TownyAdvanced/Towny/commit/47983ecb55f9dccef3bb959ca3f2e98b0e391179", "message": "Flesh out more debt methods add debt prefix config setting.", "committedDate": "2020-05-31T04:46:05Z", "type": "commit"}, {"oid": "475a335042098e46ddbfbbbe27de3d03f2959bed", "url": "https://github.com/TownyAdvanced/Towny/commit/475a335042098e46ddbfbbbe27de3d03f2959bed", "message": "Debt account is now functional.", "committedDate": "2020-06-01T02:00:30Z", "type": "commit"}, {"oid": "4261b27861b48710b9f8d55774f5a3c50317ac89", "url": "https://github.com/TownyAdvanced/Towny/commit/4261b27861b48710b9f8d55774f5a3c50317ac89", "message": "make methods protected", "committedDate": "2020-06-01T02:01:58Z", "type": "commit"}, {"oid": "ac9b9754ddddee119a76a5aee06848a45baf13ea", "url": "https://github.com/TownyAdvanced/Towny/commit/ac9b9754ddddee119a76a5aee06848a45baf13ea", "message": "Fix deposit bug", "committedDate": "2020-06-01T02:13:47Z", "type": "commit"}, {"oid": "b74fe08f04aedc44736fb15fcaeee9ebe0fd3c81", "url": "https://github.com/TownyAdvanced/Towny/commit/b74fe08f04aedc44736fb15fcaeee9ebe0fd3c81", "message": "Fix other debt issues.", "committedDate": "2020-06-01T17:17:08Z", "type": "commit"}, {"oid": "8c44c8d7ff71db5961f0823db96b30e101841791", "url": "https://github.com/TownyAdvanced/Towny/commit/8c44c8d7ff71db5961f0823db96b30e101841791", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-06-01T17:17:51Z", "type": "commit"}, {"oid": "eaae15a2c0406022be681bfcb18ccc8ef9dbc25b", "url": "https://github.com/TownyAdvanced/Towny/commit/eaae15a2c0406022be681bfcb18ccc8ef9dbc25b", "message": "remove unecessary stuff", "committedDate": "2020-06-01T23:25:39Z", "type": "commit"}, {"oid": "baea8ee2bc9e47e21268f748716ffe6b08681905", "url": "https://github.com/TownyAdvanced/Towny/commit/baea8ee2bc9e47e21268f748716ffe6b08681905", "message": "add docs", "committedDate": "2020-06-01T23:33:40Z", "type": "commit"}, {"oid": "e560cf265815352b71ccc86061f195f663bb938f", "url": "https://github.com/TownyAdvanced/Towny/commit/e560cf265815352b71ccc86061f195f663bb938f", "message": "Slight tweak to BankEconomyHandler", "committedDate": "2020-06-02T18:31:32Z", "type": "commit"}, {"oid": "806f627e1dede2ab1cd8f482c892f946208e3f61", "url": "https://github.com/TownyAdvanced/Towny/commit/806f627e1dede2ab1cd8f482c892f946208e3f61", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-06-02T20:33:02Z", "type": "commit"}, {"oid": "3e5e641393d054fae020921f7cd6d3ad44aa988f", "url": "https://github.com/TownyAdvanced/Towny/commit/3e5e641393d054fae020921f7cd6d3ad44aa988f", "message": "one fix my dude", "committedDate": "2020-06-02T20:33:38Z", "type": "commit"}, {"oid": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "url": "https://github.com/TownyAdvanced/Towny/commit/90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "message": "fix javadoc errors.", "committedDate": "2020-06-02T20:42:12Z", "type": "commit"}, {"oid": "871587bb4595178432b67aa013a9bb99e37f4c82", "url": "https://github.com/TownyAdvanced/Towny/commit/871587bb4595178432b67aa013a9bb99e37f4c82", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-06-02T21:03:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxMDY3MQ==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434210671", "bodyText": "CTRL + R 10/10. Unneeded dif", "author": "silverwolfg11", "createdAt": "2020-06-02T22:30:57Z", "path": "src/com/palmergames/bukkit/config/CommentedConfiguration.java", "diffHunk": "@@ -103,7 +103,7 @@ public void save() {\n \t\t\t\t\t\t\tcurrentPath += \".\" + line.substring(whiteSpace, index);\r\n \t\t\t\t\t\t\tdepth++;\r\n \t\t\t\t\t\t} else if (whiteSpace / 2 < depth) {\r\n-\t\t\t\t\t\t\t// Path is shallower, calculate current depth from whitespace (whitespace / 2) and subtract that many levels from the currentPath\r\n+\t\t\t\t\t\t\t// Path is shallower, calculate current depth from whitespace (whitespace / 2) and withdraw that many levels from the currentPath\r", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxMjgxNw==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434212817", "bodyText": "Would probably make this protected", "author": "silverwolfg11", "createdAt": "2020-06-02T22:37:10Z", "path": "src/com/palmergames/bukkit/towny/event/TagChangeEvent.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.palmergames.bukkit.towny.event;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+\n+public abstract class TagChangeEvent extends Event {\n+\tString newTag;", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNDM4Ng==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434214386", "bodyText": "Feel like the tag should be trimmed anyway, then just perform an isEmpty check.", "author": "silverwolfg11", "createdAt": "2020-06-02T22:41:49Z", "path": "src/com/palmergames/bukkit/towny/object/Territory.java", "diffHunk": "@@ -0,0 +1,175 @@\n+package com.palmergames.bukkit.towny.object;\n+\n+import com.palmergames.bukkit.towny.TownySettings;\n+import com.palmergames.bukkit.towny.event.TerritoryTagChangeEvent;\n+import com.palmergames.bukkit.towny.exceptions.EconomyException;\n+import com.palmergames.bukkit.towny.exceptions.TownyException;\n+import com.palmergames.bukkit.towny.invites.Invite;\n+import com.palmergames.bukkit.towny.invites.InviteHandler;\n+import com.palmergames.bukkit.towny.invites.exceptions.TooManyInvitesException;\n+import com.palmergames.bukkit.towny.object.economy.AccountAuditor;\n+import com.palmergames.bukkit.towny.object.economy.BankEconomyHandler;\n+import com.palmergames.bukkit.towny.object.economy.BankAccount;\n+import com.palmergames.bukkit.towny.object.economy.TerritoryAccountAuditor;\n+import com.palmergames.util.StringMgmt;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.World;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+public abstract class Territory extends TownyObject implements BankEconomyHandler, ResidentList, TownyInviter, SpawnLocation {\n+\t\n+\tprotected BankAccount account;\n+\tprotected Location spawn;\n+\tprotected String tag = \"\";\n+\tprotected String board = null;\n+\tprivate final transient List<Invite> receivedInvites = new ArrayList<>();\n+\tprivate final transient List<Invite> sentInvites = new ArrayList<>();\n+\tprivate boolean isPublic = false;\n+\tprivate boolean isOpen = false;\n+\tprivate long registered;\n+\tprivate double spawnCost;\n+\tprotected double taxes = -1;\n+\tprivate final AccountAuditor accountAuditor = new TerritoryAccountAuditor();\n+\t\n+\tprotected Territory(String name) {\n+\t\tsuper(name);\n+\t}\n+\n+\t@Override\n+\tpublic final List<Invite> getReceivedInvites() {\n+\t\treturn Collections.unmodifiableList(receivedInvites);\n+\t}\n+\n+\t@Override\n+\tpublic final void newReceivedInvite(Invite invite) throws TooManyInvitesException {\n+\t\tif (receivedInvites.size() <= (InviteHandler.getReceivedInvitesMaxAmount(this) -1)) { // We only want 10 Invites, for towns, later we can make this number configurable\n+\t\t\treceivedInvites.add(invite);\n+\t\t} else {\n+\t\t\tthrow new TooManyInvitesException(String.format(TownySettings.getLangString(\"msg_err_town_has_too_many_invites\"),this.getName()));\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic final void deleteReceivedInvite(Invite invite) {\n+\t\treceivedInvites.remove(invite);\n+\t}\n+\n+\t@Override\n+\tpublic final List<Invite> getSentInvites() {\n+\t\treturn Collections.unmodifiableList(sentInvites);\n+\t}\n+\n+\t@Override\n+\tpublic final void newSentInvite(Invite invite)  throws TooManyInvitesException {\n+\t\tif (sentInvites.size() <= (InviteHandler.getSentInvitesMaxAmount(this) -1)) { // We only want 35 Invites, for towns, later we can make this number configurable\n+\t\t\tsentInvites.add(invite);\n+\t\t} else {\n+\t\t\tthrow new TooManyInvitesException(TownySettings.getLangString(\"msg_err_town_sent_too_many_invites\"));\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic final void deleteSentInvite(Invite invite) {\n+\t\tsentInvites.remove(invite);\n+\t}\n+\n+\tpublic final void setBoard(String board) {\n+\t\tthis.board = board;\n+\t}\n+\n+\tpublic String getBoard() {\n+\t\treturn board;\n+\t}\n+\n+\tpublic final void setPublic(boolean isPublic) { \n+\t\tthis.isPublic = isPublic; \n+\t}\n+\n+\tpublic final boolean isPublic() { \n+\t\treturn isPublic; \n+\t}\n+\n+\tpublic final void setOpen(boolean isOpen) { \n+\t\tthis.isOpen = isOpen; \n+\t}\n+\n+\tpublic final boolean isOpen() { \n+\t\treturn isOpen; \n+\t}\n+\n+\tpublic final void setRegistered(long registered) {\n+\t\tthis.registered = registered;\n+\t}\n+\n+\tpublic final long getRegistered() {\n+\t\treturn registered;\n+\t}\n+\n+\tpublic final void setSpawnCost(double spawnCost) { \n+\t\tthis.spawnCost = spawnCost; \n+\t}\n+\n+\tpublic final double getSpawnCost() {\n+\t\treturn spawnCost;\n+\t}\n+\n+\tpublic final void setTag(String text) throws TownyException {\n+\t\tif (text.length() > 4)\n+\t\t\tthrow new TownyException(TownySettings.getLangString(\"msg_err_tag_too_long\"));\n+\t\tthis.tag = text.toUpperCase();\n+\t\tif (this.tag.matches(\" \"))", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNDgzMg==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434214832", "bodyText": "At this point it might just be more valid to abstract the method to return a Collection<TownBlock>", "author": "silverwolfg11", "createdAt": "2020-06-02T22:43:06Z", "path": "src/com/palmergames/bukkit/towny/object/Town.java", "diffHunk": "@@ -36,67 +31,46 @@\n \n import static com.palmergames.bukkit.towny.object.EconomyAccount.SERVER_ACCOUNT;\n \n-public class Town extends TownyObject implements ResidentList, TownyInviter, ObjectGroupManageable<PlotGroup>, Bank, TownBlockOwner {\n+public class Town extends Territory implements ResidentList, ObjectGroupManageable<PlotGroup>, TownBlockOwner {\n \n \tprivate static final String ECONOMY_ACCOUNT_PREFIX = TownySettings.getTownAccountPrefix();\n \n-\tprivate List<Resident> residents = new ArrayList<>();\n-\tprivate List<Resident> outlaws = new ArrayList<>();\n+\tprivate final List<Resident> residents = new ArrayList<>();\n+\tprivate final List<Resident> outlaws = new ArrayList<>();\n \tprivate List<Location> outpostSpawns = new ArrayList<>();\n-\tprivate List<Location> jailSpawns = new ArrayList<>();\n+\tprivate final List<Location> jailSpawns = new ArrayList<>();\n \tprivate HashMap<String, PlotGroup> plotGroups = null;\n \t\n \tprivate Resident mayor;\n \tprivate int bonusBlocks = 0;\n \tprivate int purchasedBlocks = 0;\n-\tprivate double taxes = TownySettings.getTownDefaultTax();\n \tprivate double plotTax= TownySettings.getTownDefaultPlotTax();\n \tprivate double commercialPlotTax = TownySettings.getTownDefaultShopTax();\n \tprivate double plotPrice = 0.0;\n \tprivate double embassyPlotTax = TownySettings.getTownDefaultEmbassyTax();\n \tprivate double maxPercentTaxAmount = TownySettings.getMaxTownTaxPercentAmount();\n-\tprivate double commercialPlotPrice, embassyPlotPrice, spawnCost;\n+\tprivate double commercialPlotPrice, embassyPlotPrice;\n \tprivate Nation nation;\n \tprivate boolean hasUpkeep = true;\n-\tprivate boolean isPublic = TownySettings.getTownDefaultPublic();\n \tprivate boolean isTaxPercentage = TownySettings.getTownDefaultTaxPercentage();\n-\tprivate boolean isOpen = TownySettings.getTownDefaultOpen();\n-\tprivate String townBoard = \"/town set board [msg]\";\n-\tprivate String tag = \"\";\n \tprivate TownBlock homeBlock;\n \tprivate TownyWorld world;\n-\tprivate Location spawn;\n \tprivate boolean adminDisabledPVP = false; // This is a special setting to make a town ignore All PVP settings and keep PVP disabled.\n \tprivate boolean adminEnabledPVP = false; // This is a special setting to make a town ignore All PVP settings and keep PVP enabled. Overrides the admin disabled too.\n \tprivate UUID uuid;\n-\tprivate long registered;\n-\tprivate transient List<Invite> receivedinvites = new ArrayList<>();\n-\tprivate transient List<Invite> sentinvites = new ArrayList<>();\n \tprivate boolean isConquered = false;\n \tprivate int conqueredDays;\n-\tprivate EconomyAccount account;\n-\tprivate ConcurrentHashMap<WorldCoord, TownBlock> townBlocks = new ConcurrentHashMap<>();\n-\tprivate TownyPermission permissions = new TownyPermission();\n+\tprivate final ConcurrentHashMap<WorldCoord, TownBlock> townBlocks = new ConcurrentHashMap<>();\n+\tprivate final TownyPermission permissions = new TownyPermission();\n \n \tpublic Town(String name) {\n \t\tsuper(name);\n \t\tpermissions.loadDefault(this);\n \t}\n \n-\t/*\n-\t * Not used but required to Implement TownBlockOwner (non-Javadoc)\n-\t * @see com.palmergames.bukkit.towny.object.TownBlockOwner#setTownblocks(java.util.List)\n-\t */\n-\t@Override\n-\tpublic void setTownblocks(List<TownBlock> townblocks) {\n-\t\t//this.townBlocks = townblocks;\n-\t}\n-\n \t@Override\n \tpublic List<TownBlock> getTownBlocks() {\n-\t\tList<TownBlock> townBlockList = new ArrayList<>();\n-\t\ttownBlockList.addAll(townBlocks.values());\n-\t\treturn townBlockList;\n+\t\treturn Collections.unmodifiableList(new ArrayList<>(townBlocks.values()));", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNTc4Nw==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434215787", "bodyText": "Can probably simplify with a ternary expression", "author": "silverwolfg11", "createdAt": "2020-06-02T22:46:03Z", "path": "src/com/palmergames/bukkit/towny/object/Town.java", "diffHunk": "@@ -1426,22 +1266,21 @@ public PlotGroup getPlotObjectGroupFromID(UUID ID) {\n \t}\n \n \t@Override\n-\tpublic EconomyAccount getAccount() {\n-\t\tif (account == null) {\n-\t\t\t\n-\t\t\tString accountName = StringMgmt.trimMaxLength(Town.ECONOMY_ACCOUNT_PREFIX + getName(), 32);\n-\t\t\tWorld world;\n-\n-\t\t\tif (hasWorld()) {\n-\t\t\t\tworld = BukkitTools.getWorld(getHomeblockWorld().getName());\n-\t\t\t} else {\n-\t\t\t\tworld = BukkitTools.getWorlds().get(0);\n-\t\t\t}\n-\t\t\t\n-\t\t\taccount = new EconomyAccount(accountName, world);\n+\tpublic double getBankCap() {\n+\t\treturn TownySettings.getTownBankCap();\n+\t}\n+\t\n+\tpublic World getWorld() {\n+\t\tif (hasWorld()) {\n+\t\t\treturn BukkitTools.getWorld(getHomeblockWorld().getName());\n+\t\t} else {\n+\t\t\treturn BukkitTools.getWorlds().get(0);\n \t\t}", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNjYxMg==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434216612", "bodyText": "Unless there is further logic planned to be added in that if-statement, can probably be simplified to return withdraw(...) && collector.deposit(...):", "author": "silverwolfg11", "createdAt": "2020-06-02T22:48:37Z", "path": "src/com/palmergames/bukkit/towny/object/economy/Account.java", "diffHunk": "@@ -0,0 +1,320 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import com.palmergames.bukkit.config.ConfigNodes;\n+import com.palmergames.bukkit.towny.TownyEconomyHandler;\n+import com.palmergames.bukkit.towny.TownySettings;\n+import com.palmergames.bukkit.towny.exceptions.EconomyException;\n+import com.palmergames.bukkit.towny.object.EconomyAccount;\n+import com.palmergames.bukkit.towny.object.EconomyHandler;\n+import com.palmergames.bukkit.towny.object.Nameable;\n+import com.palmergames.bukkit.util.BukkitTools;\n+import org.bukkit.World;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Used to facilitate transactions regarding money, \n+ * and the storage of funds.\n+ * \n+ * @author Suneet Tipirneni (Siris)\n+ * @see BankAccount\n+ * @see EconomyAccount\n+ */\n+public abstract class Account implements Nameable {\n+\tprivate static final AccountObserver GLOBAL_OBSERVER = new GlobalAccountObserver();\n+\tprivate final List<AccountObserver> observers = new ArrayList<>();\n+\tprivate AccountAuditor auditor;\n+\t\n+\tString name;\n+\tWorld world;\n+\t\n+\tpublic Account(String name) {\n+\t\tthis.name = name;\n+\t\tobservers.add(GLOBAL_OBSERVER);\n+\t}\n+\t\n+\tpublic Account(String name, World world) {\n+\t\tthis.name = name;\n+\t\tthis.world = world;\n+\t\t\n+\t\t// ALL account transactions will route auditing data through this\n+\t\t// central auditor.\n+\t\tobservers.add(GLOBAL_OBSERVER);\n+\t}\n+\t\n+\t// Template methods\n+\tprotected abstract boolean addMoney(double amount);\n+\tprotected abstract boolean subtractMoney(double amount);\n+\n+\t/**\n+\t * Attempts to add money to the account, \n+\t * and notifies account observers of any changes.\n+\t * \n+\t * @param amount The amount to add.\n+\t * @param reason The reason for adding.\n+\t * @return boolean indicating success.\n+\t * @throws EconomyException On an economy error.\n+\t */\n+\tpublic boolean deposit(double amount, String reason) throws EconomyException {\n+\t\tif (TownySettings.getBoolean(ConfigNodes.ECO_CLOSED_ECONOMY_ENABLED)) {\n+\t\t\treturn payFromServer(amount, reason);\n+\t\t}\n+\t\tif (addMoney(amount)) {\n+\t\t\tnotifyObserversDeposit(this, amount, reason);\n+\t\t\treturn true;\n+\t\t}\n+\t\t\n+\t\treturn false;\n+\t}\n+\n+\t/**\n+\t * Attempts to withdraw money from the account, \n+\t * and notifies account observers of any changes.\n+\t *\n+\t * @param amount The amount to withdraw.\n+\t * @param reason The reason for subtracting.\n+\t * @return boolean indicating success.\n+\t * @throws EconomyException On an economy error.\n+\t */\n+\tpublic boolean withdraw(double amount, String reason) throws EconomyException {\n+\t\tif (TownySettings.getBoolean(ConfigNodes.ECO_CLOSED_ECONOMY_ENABLED)) {\n+\t\t\treturn payToServer(amount, reason);\n+\t\t}\n+\t\tif (subtractMoney(amount)) {\n+\t\t\tnotifyObserversWithdraw(this, amount, reason);\n+\t\t\treturn true;\n+\t\t}\n+\t\t\n+\t\treturn false;\n+\t}\n+\n+\t/**\n+\t * Pays another account the specified funds.\n+\t *\n+\t * @param amount The amount to pay.\n+\t * @param collector The account to pay.\n+\t * @param reason The reason for the pay. \n+\t * @return boolean indicating success.\n+\t * @throws EconomyException On an economy error.\n+\t */\n+\tpublic boolean payTo(double amount, EconomyHandler collector, String reason) throws EconomyException {\n+\t\treturn payTo(amount, collector.getAccount(), reason);\n+\t}\n+\t\n+\tprotected boolean payToServer(double amount, String reason) throws EconomyException {\n+\t\t// Take money out.\n+\t\twithdraw(amount, reason);\n+\t\t\n+\t\t// Put it back into the server.\n+\t\treturn TownyEconomyHandler.addToServer(amount, getBukkitWorld());\n+\t}\n+\t\n+\tprotected boolean payFromServer(double amount, String reason) throws EconomyException {\n+\t\t// Put money in.\n+\t\tdeposit(amount, reason);\n+\t\t\n+\t\t// Remove it from the server economy.\n+\t\treturn TownyEconomyHandler.subtractFromServer(amount, getBukkitWorld());\n+\t}\n+\n+\t/**\n+\t * Pays another account the specified funds.\n+\t *\n+\t * @param amount The amount to pay.\n+\t * @param collector The account to pay.\n+\t * @param reason The reason for the pay.\n+\t * @return boolean indicating success.\n+\t * @throws EconomyException On an economy error.\n+\t */\n+\tpublic boolean payTo(double amount, Account collector, String reason) throws EconomyException {\n+\t\t\n+\t\tif (amount > getHoldingBalance()) {\n+\t\t\tthrow new EconomyException(\"Not enough money\");\n+\t\t}\n+\t\t\n+\t\tif (!withdraw(amount, reason)) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\treturn collector.deposit(amount, reason);", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNzM4NQ==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434217385", "bodyText": "Is this supposed to be private?", "author": "silverwolfg11", "createdAt": "2020-06-02T22:50:58Z", "path": "src/com/palmergames/bukkit/towny/object/economy/BankAccount.java", "diffHunk": "@@ -0,0 +1,190 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import com.palmergames.bukkit.towny.TownyEconomyHandler;\n+import com.palmergames.bukkit.towny.TownyMessaging;\n+import com.palmergames.bukkit.towny.TownySettings;\n+import com.palmergames.bukkit.towny.exceptions.EconomyException;\n+import com.palmergames.bukkit.towny.object.EconomyAccount;\n+import org.bukkit.World;\n+\n+/**\n+ * A variant of an account that implements\n+ * a checked cap on it's balance, as well as a \n+ * debt system.\n+ */\n+public class BankAccount extends Account {\n+\t\n+\tdouble balanceCap;\n+\tAccount debtAccount = new DebtAccount(this);", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMTY4NA==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434221684", "bodyText": "Is this supposed to be private?", "author": "silverwolfg11", "createdAt": "2020-06-02T23:04:38Z", "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import net.milkbowl.vault.economy.Economy;\n+import net.milkbowl.vault.economy.EconomyResponse;\n+import org.bukkit.World;\n+\n+@SuppressWarnings(\"deprecation\")\n+public class VaultEconomyAdapter implements EconomyAdapter {\n+\t\n+\tfinal Economy economy;", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMjAzMQ==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434222031", "bodyText": "Also, I am not sure why an account needs to be created if it doesn't exist, if the end-goal is to mimic deleting the account...", "author": "silverwolfg11", "createdAt": "2020-06-02T23:05:43Z", "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import net.milkbowl.vault.economy.Economy;\n+import net.milkbowl.vault.economy.EconomyResponse;\n+import org.bukkit.World;\n+\n+@SuppressWarnings(\"deprecation\")\n+public class VaultEconomyAdapter implements EconomyAdapter {\n+\t\n+\tfinal Economy economy;\n+\t\n+\tpublic VaultEconomyAdapter(Economy economy) {\n+\t\tthis.economy = economy;\n+\t}\n+\n+\t@Override\n+\tpublic boolean add(String accountName, double amount, World world) {\n+\t\treturn economy.depositPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean subtract(String accountName, double amount, World world) {\n+\t\treturn economy.withdrawPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean hasAccount(String accountName) {\n+\t\treturn economy.hasAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic double getBalance(String accountName, World world) {\n+\t\treturn economy.getBalance(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void newAccount(String accountName) {\n+\t\teconomy.createPlayerAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void deleteAccount(String accountName) {\n+\t\t// Attempt to zero the account as Vault provides no delete method.\n+\t\tif (!economy.hasAccount(accountName))\n+\t\t\teconomy.createPlayerAccount(accountName);", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMjM0OA==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434222348", "bodyText": "Are these TODOs for a later PR?", "author": "silverwolfg11", "createdAt": "2020-06-02T23:06:37Z", "path": "src/com/palmergames/bukkit/towny/object/economy/TerritoryAccountAuditor.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import java.util.List;\n+\n+public class TerritoryAccountAuditor implements AccountAuditor {\n+\n+\t@Override\n+\tpublic void withdrew(Account account, double amount, String reason) {\n+\t\t// TODO: Implement Audit Storage", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzMjI1Mw==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434232253", "bodyText": "Yeah", "author": null, "createdAt": "2020-06-02T23:39:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMjM0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMjgwMA==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434222800", "bodyText": "Could probably move the double diff out of the if-statement and change it to Math.abs(amount - currentBalance)", "author": "silverwolfg11", "createdAt": "2020-06-02T23:07:58Z", "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import net.milkbowl.vault.economy.Economy;\n+import net.milkbowl.vault.economy.EconomyResponse;\n+import org.bukkit.World;\n+\n+@SuppressWarnings(\"deprecation\")\n+public class VaultEconomyAdapter implements EconomyAdapter {\n+\t\n+\tfinal Economy economy;\n+\t\n+\tpublic VaultEconomyAdapter(Economy economy) {\n+\t\tthis.economy = economy;\n+\t}\n+\n+\t@Override\n+\tpublic boolean add(String accountName, double amount, World world) {\n+\t\treturn economy.depositPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean subtract(String accountName, double amount, World world) {\n+\t\treturn economy.withdrawPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean hasAccount(String accountName) {\n+\t\treturn economy.hasAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic double getBalance(String accountName, World world) {\n+\t\treturn economy.getBalance(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void newAccount(String accountName) {\n+\t\teconomy.createPlayerAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void deleteAccount(String accountName) {\n+\t\t// Attempt to zero the account as Vault provides no delete method.\n+\t\tif (!economy.hasAccount(accountName))\n+\t\t\teconomy.createPlayerAccount(accountName);\n+\t\teconomy.withdrawPlayer(accountName, (economy.getBalance(accountName)));\n+\t}\n+\n+\t@Override\n+\tpublic boolean setBalance(String accountName, double amount, World world) {\n+\t\tdouble currentBalance = getBalance(accountName, world);\n+\t\tif (amount > currentBalance) {\n+\t\t\tdouble diff = amount - currentBalance;", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyMjk3MA==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434222970", "bodyText": "Probably should be an else if", "author": "silverwolfg11", "createdAt": "2020-06-02T23:08:31Z", "path": "src/com/palmergames/bukkit/towny/object/economy/VaultEconomyAdapter.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package com.palmergames.bukkit.towny.object.economy;\n+\n+import net.milkbowl.vault.economy.Economy;\n+import net.milkbowl.vault.economy.EconomyResponse;\n+import org.bukkit.World;\n+\n+@SuppressWarnings(\"deprecation\")\n+public class VaultEconomyAdapter implements EconomyAdapter {\n+\t\n+\tfinal Economy economy;\n+\t\n+\tpublic VaultEconomyAdapter(Economy economy) {\n+\t\tthis.economy = economy;\n+\t}\n+\n+\t@Override\n+\tpublic boolean add(String accountName, double amount, World world) {\n+\t\treturn economy.depositPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean subtract(String accountName, double amount, World world) {\n+\t\treturn economy.withdrawPlayer(accountName, amount).type == EconomyResponse.ResponseType.SUCCESS;\n+\t}\n+\n+\t@Override\n+\tpublic boolean hasAccount(String accountName) {\n+\t\treturn economy.hasAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic double getBalance(String accountName, World world) {\n+\t\treturn economy.getBalance(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void newAccount(String accountName) {\n+\t\teconomy.createPlayerAccount(accountName);\n+\t}\n+\n+\t@Override\n+\tpublic void deleteAccount(String accountName) {\n+\t\t// Attempt to zero the account as Vault provides no delete method.\n+\t\tif (!economy.hasAccount(accountName))\n+\t\t\teconomy.createPlayerAccount(accountName);\n+\t\teconomy.withdrawPlayer(accountName, (economy.getBalance(accountName)));\n+\t}\n+\n+\t@Override\n+\tpublic boolean setBalance(String accountName, double amount, World world) {\n+\t\tdouble currentBalance = getBalance(accountName, world);\n+\t\tif (amount > currentBalance) {\n+\t\t\tdouble diff = amount - currentBalance;\n+\t\t\treturn add(accountName, diff, world);\n+\t\t}\n+\t\t\n+\t\tif (amount < currentBalance) {", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyNDc0OA==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434224748", "bodyText": "I believe this is not supposed to be here...", "author": "silverwolfg11", "createdAt": "2020-06-02T23:14:29Z", "path": "src/com/palmergames/bukkit/towny/utils/BookUtil.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.palmergames.bukkit.towny.utils;\n+\n+import com.palmergames.bukkit.towny.object.EconomyHandler;\n+import com.palmergames.bukkit.towny.object.economy.AccountAuditor;\n+import com.palmergames.bukkit.towny.object.economy.Audit;\n+import net.md_5.bungee.api.chat.BaseComponent;\n+import net.md_5.bungee.api.chat.ClickEvent;\n+import net.md_5.bungee.api.chat.ComponentBuilder;\n+\n+import net.md_5.bungee.api.chat.HoverEvent;\n+import net.md_5.bungee.api.chat.TextComponent;\n+import org.bukkit.Material;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.BookMeta;\n+\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BookUtil {\n+\tpublic static ItemStack createAuditBook(EconomyHandler handler) {\n+\t\tAccountAuditor auditor = handler.getAccount().getAuditor();\n+\t\t\n+\t\tItemStack auditBook = new ItemStack(Material.WRITTEN_BOOK);\n+\t\tBookMeta bookMeta = (BookMeta) auditBook.getItemMeta();\n+\t\tbookMeta.setTitle(\"Audit Book\");\n+\t\tbookMeta.setAuthor(\"Me\");\n+\t\t\n+\t\tStringBuilder text = new StringBuilder();\n+\t\tList<BaseComponent[]> components = new ArrayList<>();\n+\t\tComponentBuilder builder = new ComponentBuilder();\n+\t\t\n+\t\tfor (int i = 0; i < auditor.getAuditHistory().size(); i++) {\n+\t\t\tAudit audit = auditor.getAuditHistory().get(i);\n+\n+\t\t\tTextComponent textComponent = new TextComponent(\"\\n\" + audit.toString());\n+\t\t\ttextComponent.setHoverEvent(new HoverEvent(HoverEvent.Action.SHOW_TEXT, new ComponentBuilder(\"Reason: \" + audit.getReason()).create()));\n+\t\t\tbuilder.append(textComponent);\n+\n+\t\t\tif (i % 25 == 0 && i != 0) {\n+\t\t\t\tcomponents.add(builder.create());\n+\t\t\t\tbuilder = new ComponentBuilder();\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\t\n+\t\t\tif (i == auditor.getAuditHistory().size() - 1) {\n+\t\t\t\tcomponents.add(builder.create());\n+\t\t\t}\n+\t\t}\n+\n+\t\tSystem.out.println(\"Component Length = \" + components.size());", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyNDc5Mw==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434224793", "bodyText": "This is unused", "author": "silverwolfg11", "createdAt": "2020-06-02T23:14:40Z", "path": "src/com/palmergames/bukkit/towny/utils/BookUtil.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.palmergames.bukkit.towny.utils;\n+\n+import com.palmergames.bukkit.towny.object.EconomyHandler;\n+import com.palmergames.bukkit.towny.object.economy.AccountAuditor;\n+import com.palmergames.bukkit.towny.object.economy.Audit;\n+import net.md_5.bungee.api.chat.BaseComponent;\n+import net.md_5.bungee.api.chat.ClickEvent;\n+import net.md_5.bungee.api.chat.ComponentBuilder;\n+\n+import net.md_5.bungee.api.chat.HoverEvent;\n+import net.md_5.bungee.api.chat.TextComponent;\n+import org.bukkit.Material;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.BookMeta;\n+\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BookUtil {\n+\tpublic static ItemStack createAuditBook(EconomyHandler handler) {\n+\t\tAccountAuditor auditor = handler.getAccount().getAuditor();\n+\t\t\n+\t\tItemStack auditBook = new ItemStack(Material.WRITTEN_BOOK);\n+\t\tBookMeta bookMeta = (BookMeta) auditBook.getItemMeta();\n+\t\tbookMeta.setTitle(\"Audit Book\");\n+\t\tbookMeta.setAuthor(\"Me\");\n+\t\t\n+\t\tStringBuilder text = new StringBuilder();", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyNTUyNQ==", "url": "https://github.com/TownyAdvanced/Towny/pull/3988#discussion_r434225525", "bodyText": "You could just merge this with the above if-statement.\nIf you don't want to do that, then can attach an else-if for control flow and remove the continue statement.", "author": "silverwolfg11", "createdAt": "2020-06-02T23:17:00Z", "path": "src/com/palmergames/bukkit/towny/utils/BookUtil.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.palmergames.bukkit.towny.utils;\n+\n+import com.palmergames.bukkit.towny.object.EconomyHandler;\n+import com.palmergames.bukkit.towny.object.economy.AccountAuditor;\n+import com.palmergames.bukkit.towny.object.economy.Audit;\n+import net.md_5.bungee.api.chat.BaseComponent;\n+import net.md_5.bungee.api.chat.ClickEvent;\n+import net.md_5.bungee.api.chat.ComponentBuilder;\n+\n+import net.md_5.bungee.api.chat.HoverEvent;\n+import net.md_5.bungee.api.chat.TextComponent;\n+import org.bukkit.Material;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.BookMeta;\n+\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class BookUtil {\n+\tpublic static ItemStack createAuditBook(EconomyHandler handler) {\n+\t\tAccountAuditor auditor = handler.getAccount().getAuditor();\n+\t\t\n+\t\tItemStack auditBook = new ItemStack(Material.WRITTEN_BOOK);\n+\t\tBookMeta bookMeta = (BookMeta) auditBook.getItemMeta();\n+\t\tbookMeta.setTitle(\"Audit Book\");\n+\t\tbookMeta.setAuthor(\"Me\");\n+\t\t\n+\t\tStringBuilder text = new StringBuilder();\n+\t\tList<BaseComponent[]> components = new ArrayList<>();\n+\t\tComponentBuilder builder = new ComponentBuilder();\n+\t\t\n+\t\tfor (int i = 0; i < auditor.getAuditHistory().size(); i++) {\n+\t\t\tAudit audit = auditor.getAuditHistory().get(i);\n+\n+\t\t\tTextComponent textComponent = new TextComponent(\"\\n\" + audit.toString());\n+\t\t\ttextComponent.setHoverEvent(new HoverEvent(HoverEvent.Action.SHOW_TEXT, new ComponentBuilder(\"Reason: \" + audit.getReason()).create()));\n+\t\t\tbuilder.append(textComponent);\n+\n+\t\t\tif (i % 25 == 0 && i != 0) {\n+\t\t\t\tcomponents.add(builder.create());\n+\t\t\t\tbuilder = new ComponentBuilder();\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\t\n+\t\t\tif (i == auditor.getAuditHistory().size() - 1) {\n+\t\t\t\tcomponents.add(builder.create());\n+\t\t\t}", "originalCommit": "90f01aef3f88f3986fcf3c0e0c15ed95ac5e06e4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "cd4c13ba3ab574c983313aa2053daaa1a62361e5", "url": "https://github.com/TownyAdvanced/Towny/commit/cd4c13ba3ab574c983313aa2053daaa1a62361e5", "message": "make requested changes.", "committedDate": "2020-06-02T23:45:47Z", "type": "commit"}, {"oid": "e0d0d26dfbf86d897228a2371921fb4b830a7920", "url": "https://github.com/TownyAdvanced/Towny/commit/e0d0d26dfbf86d897228a2371921fb4b830a7920", "message": "Add iterators because tb lists are gone.", "committedDate": "2020-06-03T00:00:21Z", "type": "commit"}, {"oid": "73c926f4d04832b07bdf1818af7ffca6572bfbea", "url": "https://github.com/TownyAdvanced/Towny/commit/73c926f4d04832b07bdf1818af7ffca6572bfbea", "message": "Merge branch 'master' into refactor-bank\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/TownyUniverse.java\n#\tsrc/com/palmergames/bukkit/towny/command/TownCommand.java\n#\tsrc/com/palmergames/bukkit/towny/confirmations/Confirmation.java\n#\tsrc/com/palmergames/bukkit/towny/confirmations/ConfirmationHandler.java\n#\tsrc/com/palmergames/bukkit/towny/object/Town.java", "committedDate": "2020-06-04T16:16:58Z", "type": "commit"}, {"oid": "c74f9ed5382c66edeb7c0347fed1ca2f72717ab2", "url": "https://github.com/TownyAdvanced/Towny/commit/c74f9ed5382c66edeb7c0347fed1ca2f72717ab2", "message": "Add fixes from goosius' branch", "committedDate": "2020-06-08T23:41:05Z", "type": "commit"}, {"oid": "75334a76905979973182450d84f86192af24e6f5", "url": "https://github.com/TownyAdvanced/Towny/commit/75334a76905979973182450d84f86192af24e6f5", "message": "Cleanup/Territory renameRemove unused imports", "committedDate": "2020-06-12T19:30:50Z", "type": "commit"}, {"oid": "cb1ac98db002e7c9f7cae548ea8ee5f4506ba507", "url": "https://github.com/TownyAdvanced/Towny/commit/cb1ac98db002e7c9f7cae548ea8ee5f4506ba507", "message": "Fix tag issues", "committedDate": "2020-06-12T19:48:52Z", "type": "commit"}, {"oid": "fa1505e62cde3ce91c67636f3ded0ee2267920f8", "url": "https://github.com/TownyAdvanced/Towny/commit/fa1505e62cde3ce91c67636f3ded0ee2267920f8", "message": "Merge remote-tracking branch 'origin/refactor-bank' into refactor-bank", "committedDate": "2020-06-12T19:49:13Z", "type": "commit"}, {"oid": "860b4b4b4e0712202e8c1c2ee7bf499d5ac4921a", "url": "https://github.com/TownyAdvanced/Towny/commit/860b4b4b4e0712202e8c1c2ee7bf499d5ac4921a", "message": "Fix tne account name issue.", "committedDate": "2020-06-13T20:50:51Z", "type": "commit"}, {"oid": "09c1026b58a0774d444e3ba3bb8ca119bffd328c", "url": "https://github.com/TownyAdvanced/Towny/commit/09c1026b58a0774d444e3ba3bb8ca119bffd328c", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-06-14T01:02:36Z", "type": "commit"}, {"oid": "e59244f16f0a30aa7f9977ea2fd338bacb889412", "url": "https://github.com/TownyAdvanced/Towny/commit/e59244f16f0a30aa7f9977ea2fd338bacb889412", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-06-22T20:41:35Z", "type": "commit"}, {"oid": "9c838ae80651f4bfcbb3eecc314d637aad52fe78", "url": "https://github.com/TownyAdvanced/Towny/commit/9c838ae80651f4bfcbb3eecc314d637aad52fe78", "message": "Add initial proper eco bank support.", "committedDate": "2020-06-24T22:44:03Z", "type": "commit"}, {"oid": "bc4aaeb964bd2a780203b63cc06ec53c3a59d627", "url": "https://github.com/TownyAdvanced/Towny/commit/bc4aaeb964bd2a780203b63cc06ec53c3a59d627", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-06-24T22:44:19Z", "type": "commit"}, {"oid": "e4cbb991f17385c3a6a46307cc34adabe381d564", "url": "https://github.com/TownyAdvanced/Towny/commit/e4cbb991f17385c3a6a46307cc34adabe381d564", "message": "Revert \"Add initial proper eco bank support.\"\n\nThis reverts commit 9c838ae8", "committedDate": "2020-06-25T16:44:24Z", "type": "commit"}, {"oid": "20bd462e21bbc62530870e04ca1e2322e338c62c", "url": "https://github.com/TownyAdvanced/Towny/commit/20bd462e21bbc62530870e04ca1e2322e338c62c", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-06-25T16:45:08Z", "type": "commit"}, {"oid": "8e7589455e87341ef2fc6812d8af7db0c4cc908d", "url": "https://github.com/TownyAdvanced/Towny/commit/8e7589455e87341ef2fc6812d8af7db0c4cc908d", "message": "Polish it up", "committedDate": "2020-06-26T00:28:27Z", "type": "commit"}, {"oid": "103f2546fe053d7b54f37636b2d73220e6b642f0", "url": "https://github.com/TownyAdvanced/Towny/commit/103f2546fe053d7b54f37636b2d73220e6b642f0", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-06-26T00:28:36Z", "type": "commit"}, {"oid": "bc104755061c1d2667b98c12b45a0f6ca76e61d9", "url": "https://github.com/TownyAdvanced/Towny/commit/bc104755061c1d2667b98c12b45a0f6ca76e61d9", "message": "Refactor things that are useless and/or serve no purpose, and adjust naming.", "committedDate": "2020-06-26T05:20:22Z", "type": "commit"}, {"oid": "0fbcaf0cb681f5d2c0d74b253cf1ecf664f98047", "url": "https://github.com/TownyAdvanced/Towny/commit/0fbcaf0cb681f5d2c0d74b253cf1ecf664f98047", "message": "Fix this thang.", "committedDate": "2020-06-26T05:33:44Z", "type": "commit"}, {"oid": "849d87f0d629b90edecd833a0473a79a711b8e2e", "url": "https://github.com/TownyAdvanced/Towny/commit/849d87f0d629b90edecd833a0473a79a711b8e2e", "message": "Cool", "committedDate": "2020-06-26T05:39:32Z", "type": "commit"}, {"oid": "da3c76abb29688bdc8744970fe718af1df743981", "url": "https://github.com/TownyAdvanced/Towny/commit/da3c76abb29688bdc8744970fe718af1df743981", "message": "Cool", "committedDate": "2020-06-26T05:40:15Z", "type": "commit"}, {"oid": "6fb0a99661026cb2f182fc7f376ab9d3b5f3133e", "url": "https://github.com/TownyAdvanced/Towny/commit/6fb0a99661026cb2f182fc7f376ab9d3b5f3133e", "message": "Merge remote-tracking branch 'origin/refactor-bank' into refactor-bank", "committedDate": "2020-06-26T05:40:27Z", "type": "commit"}, {"oid": "df443d4a0568a98306bd1ec3ceb54f99a784e69d", "url": "https://github.com/TownyAdvanced/Towny/commit/df443d4a0568a98306bd1ec3ceb54f99a784e69d", "message": "oops ;(", "committedDate": "2020-06-26T05:41:58Z", "type": "commit"}, {"oid": "bfd0c8e8d93f3c3872c7017d87e756bca83c2164", "url": "https://github.com/TownyAdvanced/Towny/commit/bfd0c8e8d93f3c3872c7017d87e756bca83c2164", "message": "Update comparators for government types.", "committedDate": "2020-06-28T19:49:50Z", "type": "commit"}, {"oid": "ed7126559b3a705124fe559aa89f910fbba43096", "url": "https://github.com/TownyAdvanced/Towny/commit/ed7126559b3a705124fe559aa89f910fbba43096", "message": "Merge branch 'master' into refactor-bank", "committedDate": "2020-06-28T19:49:56Z", "type": "commit"}, {"oid": "55646d0039b6a92baa3167286ea59a35c1e5bf7f", "url": "https://github.com/TownyAdvanced/Towny/commit/55646d0039b6a92baa3167286ea59a35c1e5bf7f", "message": "Fix possible EconomyAccount deadlock issue.", "committedDate": "2020-06-28T22:11:56Z", "type": "commit"}, {"oid": "bc9ba0e98394a2b2e7d9448cf07f1eab25c10867", "url": "https://github.com/TownyAdvanced/Towny/commit/bc9ba0e98394a2b2e7d9448cf07f1eab25c10867", "message": "Remove commented code, add back missing exception.", "committedDate": "2020-06-28T22:25:23Z", "type": "commit"}, {"oid": "6d4c9520cdc20f204a2520e8188fbf4e1721b1cf", "url": "https://github.com/TownyAdvanced/Towny/commit/6d4c9520cdc20f204a2520e8188fbf4e1721b1cf", "message": "Merge branch 'master' into refactor-bank\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/command/TownCommand.java", "committedDate": "2020-07-01T21:04:25Z", "type": "commit"}, {"oid": "3bf8f0db0c7bbf02930e4e14d808ae50b3f22d81", "url": "https://github.com/TownyAdvanced/Towny/commit/3bf8f0db0c7bbf02930e4e14d808ae50b3f22d81", "message": "merge fixes", "committedDate": "2020-07-01T21:15:32Z", "type": "commit"}, {"oid": "42a248a0f936213e684b61eda01f4aa23300fbfb", "url": "https://github.com/TownyAdvanced/Towny/commit/42a248a0f936213e684b61eda01f4aa23300fbfb", "message": "Merge branch 'master' into refactor-bank\n\n# Conflicts:\n#\tsrc/com/palmergames/bukkit/towny/object/Town.java", "committedDate": "2020-07-04T01:20:11Z", "type": "commit"}, {"oid": "1fed0c01b4f6c208a17e95188bc188f95b235117", "url": "https://github.com/TownyAdvanced/Towny/commit/1fed0c01b4f6c208a17e95188bc188f95b235117", "message": "fix merge error", "committedDate": "2020-07-04T01:23:13Z", "type": "commit"}]}