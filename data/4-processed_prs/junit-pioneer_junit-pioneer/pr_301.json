{"pr_number": 301, "pr_title": "Provide proposal for new PR template (#286)", "pr_createdAt": "2020-07-21T12:30:58Z", "pr_url": "https://github.com/junit-pioneer/junit-pioneer/pull/301", "timeline": [{"oid": "43c7fb06e1c682c1d67f2e4f4fa2cf905e9d198c", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/43c7fb06e1c682c1d67f2e4f4fa2cf905e9d198c", "message": "Provide proposal for new PR template", "committedDate": "2020-07-21T12:26:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4MTE1NQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r458081155", "bodyText": "Simplify: shall help -> helps.", "author": "Michael1993", "createdAt": "2020-07-21T13:07:44Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.", "originalCommit": "43c7fb06e1c682c1d67f2e4f4fa2cf905e9d198c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5NzE2NA==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r458597164", "bodyText": "I used the \"shall help\" by purpose, because I don't know if the list helps, I don't want to create a feeling of pressure. That's also why I listed author, reviewers and maintainers - so that an (new or inexperienced) contributor hopefully feels not constrained", "author": "Bukama", "createdAt": "2020-07-22T07:41:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4MTE1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4MTU1NQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r458081555", "bodyText": "Correction: It bases on -> It is based on.", "author": "Michael1993", "createdAt": "2020-07-21T13:08:22Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It bases on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).", "originalCommit": "43c7fb06e1c682c1d67f2e4f4fa2cf905e9d198c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4MjMwNw==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r458082307", "bodyText": "Simplify: It helps check for the completion of the listed points", "author": "Michael1993", "createdAt": "2020-07-21T13:09:23Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It bases on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).\n+It shall help to check for completion of the listed points.", "originalCommit": "43c7fb06e1c682c1d67f2e4f4fa2cf905e9d198c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5ODA2MA==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r458598060", "bodyText": "See above: Shall used by purpose", "author": "Bukama", "createdAt": "2020-07-22T07:43:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4MjMwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4MzcwNQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r458083705", "bodyText": "Correction: There are implementation information -> There is implementation information", "author": "Michael1993", "createdAt": "2020-07-21T13:11:27Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It bases on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).\n+It shall help to check for completion of the listed points.\n+If a point does not apply to the PR changes, the entry can just be marked as done. \n+\n+Documentation (general)\n+ \n+* [ ] There is documentation (Javadoc and site documentation; added or updated)\n+* [ ] There are implementation information to describe _why_ non-obvious source code / solution got implemented", "originalCommit": "43c7fb06e1c682c1d67f2e4f4fa2cf905e9d198c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5OTA4Ng==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r458599086", "bodyText": "Hm yeah. At the start of the sentence I wrote plural, at the end singular. Changed completely to singular", "author": "Bukama", "createdAt": "2020-07-22T07:45:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4MzcwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4NDM3OQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r458084379", "bodyText": "We actually agreed the other way around? That Javadoc is strictly about code but the documents can be informal?", "author": "Michael1993", "createdAt": "2020-07-21T13:12:27Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It bases on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).\n+It shall help to check for completion of the listed points.\n+If a point does not apply to the PR changes, the entry can just be marked as done. \n+\n+Documentation (general)\n+ \n+* [ ] There is documentation (Javadoc and site documentation; added or updated)\n+* [ ] There are implementation information to describe _why_ non-obvious source code / solution got implemented\n+* [ ] Site documentation has its own `.adoc` file in the `docs` folder, e.g. `docs/report-entries.adoc`\n+* [ ] Only one sentence per line (especially in `.adoc` files)\n+* [ ] Javadoc uses informal style, while sites documentation uses formal style (see #265)", "originalCommit": "43c7fb06e1c682c1d67f2e4f4fa2cf905e9d198c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "02679d6ad3953c0bdaedabc55f58f302d91de4e7", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/02679d6ad3953c0bdaedabc55f58f302d91de4e7", "message": "Fix grammar errors", "committedDate": "2020-07-22T07:47:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0MzMxOQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460543319", "bodyText": "If you want to, you could use headers (#, ##, ...) to highlight the title here and the sections (documentation, code, \u2026) below.", "author": "beatngu13", "createdAt": "2020-07-26T15:54:42Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**", "originalCommit": "02679d6ad3953c0bdaedabc55f58f302d91de4e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NzYxNQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460557615", "bodyText": "I don't want to use them as they are rendered in such a big font size, which is too distracting in my opinion.", "author": "Bukama", "createdAt": "2020-07-26T18:18:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0MzMxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0MzQ4Mw==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460543483", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If a point does not apply to the PR changes, the entry can just be marked as done. \n          \n          \n            \n            If a point does not apply to the given PR's changes, the corresponding entry can be simply marked as done.", "author": "beatngu13", "createdAt": "2020-07-26T15:56:08Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It is based on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).\n+It shall help to check for completion of the listed points.\n+If a point does not apply to the PR changes, the entry can just be marked as done. ", "originalCommit": "02679d6ad3953c0bdaedabc55f58f302d91de4e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0MzYwNg==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460543606", "bodyText": "Here you separate the \"section header\" from its content with a line break, not below. I'd suggest to pick one style and apply it consistently.", "author": "beatngu13", "createdAt": "2020-07-26T15:57:13Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It is based on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).\n+It shall help to check for completion of the listed points.\n+If a point does not apply to the PR changes, the entry can just be marked as done. \n+\n+Documentation (general)\n+ ", "originalCommit": "02679d6ad3953c0bdaedabc55f58f302d91de4e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1NzcxMg==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460557712", "bodyText": "Good spot! Removed the line", "author": "Bukama", "createdAt": "2020-07-26T18:19:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0MzYwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0MzgxNQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460543815", "bodyText": "I think I don't get this part: \"non-obvious source code / solution got implemented\". What exactly do you mean by that?", "author": "beatngu13", "createdAt": "2020-07-26T15:59:23Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It is based on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).\n+It shall help to check for completion of the listed points.\n+If a point does not apply to the PR changes, the entry can just be marked as done. \n+\n+Documentation (general)\n+ \n+* [ ] There is documentation (Javadoc and site documentation; added or updated)\n+* [ ] There is implementation information to describe _why_ a non-obvious source code / solution got implemented", "originalCommit": "02679d6ad3953c0bdaedabc55f58f302d91de4e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1ODE0MA==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460558140", "bodyText": "Things like this e.g. :\n(from: https://github.com/junit-pioneer/junit-pioneer/pull/285/files )\n\n\t\t// This check is by purpose to throw an IAE.\n\t\t// E.g. Objects.requireNonNull(T value, String message) throws a NPE,\n\t\t// which has a total different meaning.\n\t\tif (null == methodParameterTypes) {\n\t\t\tthrow new IllegalArgumentException(\"methodParameterTypes must not be null\");\n\t\t}\n\n\nDid you consider Objects.requireNonNull(T value, String message)? I think it conveys the same intent really nicely.\n\n\nYes, but it throws an NullPointerException and not an IllegalArgumentException. A NPE has a total different meaning than a IAE.", "author": "Bukama", "createdAt": "2020-07-26T18:23:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0MzgxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NDE3OQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460544179", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [ ] Code satisfies code style, naming conventions etc.\n          \n          \n            \n            * [ ] Code adheres to code style, naming conventions etc.", "author": "beatngu13", "createdAt": "2020-07-26T16:02:49Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It is based on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).\n+It shall help to check for completion of the listed points.\n+If a point does not apply to the PR changes, the entry can just be marked as done. \n+\n+Documentation (general)\n+ \n+* [ ] There is documentation (Javadoc and site documentation; added or updated)\n+* [ ] There is implementation information to describe _why_ a non-obvious source code / solution got implemented\n+* [ ] Site documentation has its own `.adoc` file in the `docs` folder, e.g. `docs/report-entries.adoc`\n+* [ ] Only one sentence per line (especially in `.adoc` files)\n+* [ ] Javadoc uses formal style, while sites documentation may use informal style (see #265)\n+\n+Documentation (new extension)\n+* [ ] The `docs/docs-nav.yml` navigation has an entry for the new extension\n+* [ ] The `package-info.java` contains information about the new extension\n+\n+Code\n+* [ ] Code satisfies code style, naming conventions etc.", "originalCommit": "02679d6ad3953c0bdaedabc55f58f302d91de4e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NDI1NA==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460544254", "bodyText": "Should this be a separate point?", "author": "beatngu13", "createdAt": "2020-07-26T16:03:32Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It is based on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).\n+It shall help to check for completion of the listed points.\n+If a point does not apply to the PR changes, the entry can just be marked as done. \n+\n+Documentation (general)\n+ \n+* [ ] There is documentation (Javadoc and site documentation; added or updated)\n+* [ ] There is implementation information to describe _why_ a non-obvious source code / solution got implemented\n+* [ ] Site documentation has its own `.adoc` file in the `docs` folder, e.g. `docs/report-entries.adoc`\n+* [ ] Only one sentence per line (especially in `.adoc` files)\n+* [ ] Javadoc uses formal style, while sites documentation may use informal style (see #265)\n+\n+Documentation (new extension)\n+* [ ] The `docs/docs-nav.yml` navigation has an entry for the new extension\n+* [ ] The `package-info.java` contains information about the new extension\n+\n+Code\n+* [ ] Code satisfies code style, naming conventions etc.\n+* [ ] Successful tests cover all changes\n+* [ ] There are checks which validate correct / false usage / configuration of a functionality\n+There are tests to verify those checks (see #164)", "originalCommit": "02679d6ad3953c0bdaedabc55f58f302d91de4e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU1ODM0Ng==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460558346", "bodyText": "Should this be a separate point?\n\nNo want both together. Was following the \"one sentence per line\" rule. Rephrased it and made one sentence out of it", "author": "Bukama", "createdAt": "2020-07-26T18:26:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NDI1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NDYzMA==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460544630", "bodyText": "There is no PioneerAssertions class but PioneerAssert? We may also point to the corresponding package, a good example or the anchor in CONTRIBUTING.md?", "author": "beatngu13", "createdAt": "2020-07-26T16:07:02Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It is based on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).\n+It shall help to check for completion of the listed points.\n+If a point does not apply to the PR changes, the entry can just be marked as done. \n+\n+Documentation (general)\n+ \n+* [ ] There is documentation (Javadoc and site documentation; added or updated)\n+* [ ] There is implementation information to describe _why_ a non-obvious source code / solution got implemented\n+* [ ] Site documentation has its own `.adoc` file in the `docs` folder, e.g. `docs/report-entries.adoc`\n+* [ ] Only one sentence per line (especially in `.adoc` files)\n+* [ ] Javadoc uses formal style, while sites documentation may use informal style (see #265)\n+\n+Documentation (new extension)\n+* [ ] The `docs/docs-nav.yml` navigation has an entry for the new extension\n+* [ ] The `package-info.java` contains information about the new extension\n+\n+Code\n+* [ ] Code satisfies code style, naming conventions etc.\n+* [ ] Successful tests cover all changes\n+* [ ] There are checks which validate correct / false usage / configuration of a functionality\n+There are tests to verify those checks (see #164)\n+* [ ] Tests use [AssertJ](https://joel-costigliola.github.io/assertj/) or our own PioneerAssertions (which are based on AssertJ)", "originalCommit": "02679d6ad3953c0bdaedabc55f58f302d91de4e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NDcxNQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460544715", "bodyText": "I think these can be removed?", "author": "beatngu13", "createdAt": "2020-07-26T16:07:43Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It is based on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).\n+It shall help to check for completion of the listed points.\n+If a point does not apply to the PR changes, the entry can just be marked as done. \n+\n+Documentation (general)\n+ \n+* [ ] There is documentation (Javadoc and site documentation; added or updated)\n+* [ ] There is implementation information to describe _why_ a non-obvious source code / solution got implemented\n+* [ ] Site documentation has its own `.adoc` file in the `docs` folder, e.g. `docs/report-entries.adoc`\n+* [ ] Only one sentence per line (especially in `.adoc` files)\n+* [ ] Javadoc uses formal style, while sites documentation may use informal style (see #265)\n+\n+Documentation (new extension)\n+* [ ] The `docs/docs-nav.yml` navigation has an entry for the new extension\n+* [ ] The `package-info.java` contains information about the new extension\n+\n+Code\n+* [ ] Code satisfies code style, naming conventions etc.\n+* [ ] Successful tests cover all changes\n+* [ ] There are checks which validate correct / false usage / configuration of a functionality\n+There are tests to verify those checks (see #164)\n+* [ ] Tests use [AssertJ](https://joel-costigliola.github.io/assertj/) or our own PioneerAssertions (which are based on AssertJ)\n+\n+Contributing\n+* [ ] A prepared commit message exists\n+* [ ] The list of contributions inside `README.MD` mentions the new contribution.\n+Publishing the authors real name is optional! \n+\n ---\n \n I hereby agree to the terms of the [JUnit Pioneer Contributor License Agreement](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#junit-pioneer-contributor-license-agreement).\n+\n+", "originalCommit": "02679d6ad3953c0bdaedabc55f58f302d91de4e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NzkzNQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460747935", "bodyText": "Oops - forget yesterday. Removed now.", "author": "Bukama", "createdAt": "2020-07-27T09:01:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NDcxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU0NDc3NA==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/301#discussion_r460544774", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [ ] The list of contributions inside `README.MD` mentions the new contribution.\n          \n          \n            \n            Publishing the authors real name is optional! \n          \n          \n            \n            * [ ] The list of contributions inside `README.md` mentions the new contribution (real name optional)", "author": "beatngu13", "createdAt": "2020-07-26T16:08:27Z", "path": ".github/PULL_REQUEST_TEMPLATE.md", "diffHunk": "@@ -1,4 +1,38 @@\n \n+---\n+**PR checklist**\n+\n+The following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\n+It is based on our contributors guidelines, especially the [\"writing code\" section](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md#writing-code).\n+It shall help to check for completion of the listed points.\n+If a point does not apply to the PR changes, the entry can just be marked as done. \n+\n+Documentation (general)\n+ \n+* [ ] There is documentation (Javadoc and site documentation; added or updated)\n+* [ ] There is implementation information to describe _why_ a non-obvious source code / solution got implemented\n+* [ ] Site documentation has its own `.adoc` file in the `docs` folder, e.g. `docs/report-entries.adoc`\n+* [ ] Only one sentence per line (especially in `.adoc` files)\n+* [ ] Javadoc uses formal style, while sites documentation may use informal style (see #265)\n+\n+Documentation (new extension)\n+* [ ] The `docs/docs-nav.yml` navigation has an entry for the new extension\n+* [ ] The `package-info.java` contains information about the new extension\n+\n+Code\n+* [ ] Code satisfies code style, naming conventions etc.\n+* [ ] Successful tests cover all changes\n+* [ ] There are checks which validate correct / false usage / configuration of a functionality\n+There are tests to verify those checks (see #164)\n+* [ ] Tests use [AssertJ](https://joel-costigliola.github.io/assertj/) or our own PioneerAssertions (which are based on AssertJ)\n+\n+Contributing\n+* [ ] A prepared commit message exists\n+* [ ] The list of contributions inside `README.MD` mentions the new contribution.\n+Publishing the authors real name is optional! ", "originalCommit": "02679d6ad3953c0bdaedabc55f58f302d91de4e7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "69c8e5211a409022578196114c08a748b28fdcb3", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/69c8e5211a409022578196114c08a748b28fdcb3", "message": "Adding changes from reviews feedback", "committedDate": "2020-07-26T18:29:09Z", "type": "commit"}, {"oid": "eefab551fad6f90efcbfb9dbe27f5dcabfb10735", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/eefab551fad6f90efcbfb9dbe27f5dcabfb10735", "message": "Removed empty lines at the end", "committedDate": "2020-07-27T09:01:13Z", "type": "commit"}]}