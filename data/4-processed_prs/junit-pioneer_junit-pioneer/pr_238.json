{"pr_number": 238, "pr_title": "List maintainers and contributors", "pr_createdAt": "2020-04-24T12:22:22Z", "pr_url": "https://github.com/junit-pioneer/junit-pioneer/pull/238", "timeline": [{"oid": "a75c00e0b6d7a2b09e9653da36535d8ee1b40e0a", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/a75c00e0b6d7a2b09e9653da36535d8ee1b40e0a", "message": "List maintainers and contributors", "committedDate": "2020-04-24T12:03:16Z", "type": "commit"}, {"oid": "506bbb05fa33f68698457ecbf9d6f30c3a5a639f", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/506bbb05fa33f68698457ecbf9d6f30c3a5a639f", "message": "Do souls have hearts?", "committedDate": "2020-04-24T12:06:46Z", "type": "commit"}, {"oid": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617", "message": "Describe contributor list on CONTRIBUTION.md", "committedDate": "2020-04-24T12:20:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU2MTM4Mg==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414561382", "bodyText": "Don't you mean README? \ud83d\ude1b", "author": "Michael1993", "createdAt": "2020-04-24T13:07:36Z", "path": "CONTRIBUTING.md", "diffHunk": "@@ -40,8 +40,12 @@ Everybody uses a vocabulary and techniques that appear quite cryptic to those no\n We can't fix that in a short file like this, but we want to provide some pointers to get you started.\n If anything that follows in this document isn't clear, [open an issue](https://github.com/junit-pioneer/junit-pioneer/issues/new) and ask us to explain it better.\n \n-First off, like for many open source projects, contributing code changes to JUnit Pioneer should be done via pull requests from a fork.\n+* First off, like for many open source projects, contributing code changes to JUnit Pioneer should be done via pull requests from a fork.\n If you are not familiar with this concept, please have a look at the [GitHub help page](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/working-with-forks).\n+* `RAEDME.md` and `CONTRIBUTING.md` are written in Markdown.", "originalCommit": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU2MzYwMQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414563601", "bodyText": "...controbuted or contributed? \ud83e\udd14", "author": "Michael1993", "createdAt": "2020-04-24T13:11:02Z", "path": "README.md", "diffHunk": "@@ -54,18 +70,54 @@ We welcome contributions of all shapes and forms! \ud83c\udf1e\n \n Before contributing, please read the [contribution guide](CONTRIBUTING.md).\n \n-## Project Structure\n+### Maintainers\n \n-### Dependencies\n+JUnit Pioneer is maintained by a small team of people who work on it in their free time - see [`CONTRIBUTING.md`](CONTRIBUTING.md) for details on how they do that.\n+In lexicographic order, these are:\n \n-To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n-Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n+<dl>\n+\t<dt>Matthias B\u00fcnger aka <a href=\"https://github.com/Bukama\">Bukama</a></dt>\n+\t<dd>Maintainer since April 2020.</dd>\n \n-For our own infrastructure, we rely on the following compile and test dependencies:\n+\t<dt>Nicolai Parlog aka  <a href=\"https://github.com/nicolaiparlog\">nicolaiparlog</a></dt>\n+\t<dd>Java enthusiast with a passion for learning and sharing.\n+\t\tHe does that in blog posts, articles, newsletters, and books; in <a href=\"https://twitter.com/nipafx\">tweets</a>, repos, videos, and streams; at conferences and in-house trainings - more on all of that on <a href=\"https://codefx.org\">codefx.org</a>.\n+\t\tThat aside, he's best known for his haircut.\n+\t\tHe co-founded the project in November 2016 and has maintained it ever since (although often very negligently).</dd>\n+\t\n+\t<dt>Simon Schrottner aka <a href=\"https://github.com/aepfli\">aepfli</a></dt>\n+\t<dd>Maintainer since April 2020.</dd>\n \n-* JSR-305 (for static analysis)\n-* AssertJ (assertions for our tests)\n-* Mockito (mocking for our tests)\n-* Log4J (to configure logging during test runs)\n-* Jimfs (as an in-memory file system for our test)\n+\t<dt>Steve Moyer aka <a href=\"https://github.com/smoyer64\">smoyer64</a></dt>\n+\t<dd>Co-founded the project in November 2016.</dd>\n+</dl>\n+\n+### Contributors\n+\n+JUnit Pioneer, as small as it is, would be much smaller without kind souls contributing their time, energy, and skills.\n+Thank you for your efforts! \ud83d\ude4f\n+\n+The least we can do is to thank them and list their accomplishments here (in lexicographic order).\n+\n+#### 2020\n+\n+* [Allon Murienik](https://github.com/mureinik) contributed [the range sources](https://junit-pioneer.org/docs/range-sources/) (#44 / #123)\n+* [Daniel Kraus](https://github.com/beatngu13) contributed [the system property extension](https://junit-pioneer.org/docs/system-properties/) (#129 / #133)\n+* [Hancho 2009](https://github.com/Hancho2009) controbuted the environment variable extension (#167 / #174)", "originalCommit": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0MDEyMQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414640121", "bodyText": "(possibly with an appended \"and more\" of there are more)\n\n\"if\" there are more?", "author": "Bukama", "createdAt": "2020-04-24T14:55:17Z", "path": "CONTRIBUTING.md", "diffHunk": "@@ -99,20 +103,39 @@ Yes, use it even if Jupiter's assertions are as good or better (c.f. `assertTrue\n \n ### Documentation\n \n+There are several aspects of this project's documentation.\n+Some project-specific requirements apply to all files:\n+\n+* one sentence per line, i.e. no matter how short or long a sentence is, it will occupy a single line, not shared with any other sentences\n+* to start a new paragraph, add a single blank line\n+\n+#### Feature Documentation\n+\n Each feature is documented on [the project website](https://junit-pioneer.org/docs/), which is pulled from the files in the `docs/` folder, where each feature has:\n \n * an entry in `docs-nav.yml` (lexicographically ordered)\n * it's own `.adoc` file\n \n Add these entries when implementing a new feature and update them when changing an existing one.\n \n-For information on how to use AsciiDoctor, check its [user manual](https://asciidoctor.org/docs/user-manual/) and [writer's guide](https://asciidoctor.org/docs/asciidoc-writers-guide/).\n-One project-specific requirement:\n+#### README.md and CONTRIBUTING.md\n \n-* one sentence per line, i.e. no matter how short or long a sentence is, it will occupy a single line, not shared with any other sentences\n-* to start a new paragraph, add a single blank line\n+Changes to project processes are usually reflected in these files (and are thus mostly done by maintainers).\n+One aspect that's relevant to contributors is the list of contributions at the end of [README.md](README.md) - if you fixed a bug or added a feature, please add yourself to that list in the following form:\n+\n+```md\n+* [$NAME]($GITHUB-URL) $CONTRIBUTIONS\n+```\n+\n+* `$NAME` can be your actual name or your GitHub account name\n+* `$GITHUB-URL` is the URL to your GitHub account\n+* `$CONTRIBUTIONS` is a list of one or two contributions (possibly with an appended \"and more\" of there are more)", "originalCommit": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0MjE3Mg==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414642172", "bodyText": "and his pioneer hat! :D", "author": "Bukama", "createdAt": "2020-04-24T14:57:52Z", "path": "README.md", "diffHunk": "@@ -54,18 +70,54 @@ We welcome contributions of all shapes and forms! \ud83c\udf1e\n \n Before contributing, please read the [contribution guide](CONTRIBUTING.md).\n \n-## Project Structure\n+### Maintainers\n \n-### Dependencies\n+JUnit Pioneer is maintained by a small team of people who work on it in their free time - see [`CONTRIBUTING.md`](CONTRIBUTING.md) for details on how they do that.\n+In lexicographic order, these are:\n \n-To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n-Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n+<dl>\n+\t<dt>Matthias B\u00fcnger aka <a href=\"https://github.com/Bukama\">Bukama</a></dt>\n+\t<dd>Maintainer since April 2020.</dd>\n \n-For our own infrastructure, we rely on the following compile and test dependencies:\n+\t<dt>Nicolai Parlog aka  <a href=\"https://github.com/nicolaiparlog\">nicolaiparlog</a></dt>\n+\t<dd>Java enthusiast with a passion for learning and sharing.\n+\t\tHe does that in blog posts, articles, newsletters, and books; in <a href=\"https://twitter.com/nipafx\">tweets</a>, repos, videos, and streams; at conferences and in-house trainings - more on all of that on <a href=\"https://codefx.org\">codefx.org</a>.\n+\t\tThat aside, he's best known for his haircut.", "originalCommit": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY1ODE0NA==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414658144", "bodyText": "Nitpick: Is there a reason why some sections are separated with two linebreaks (like here) and others with one (like \"Contributing\")?", "author": "beatngu13", "createdAt": "2020-04-24T15:19:26Z", "path": "README.md", "diffHunk": "@@ -11,6 +11,7 @@ A melting pot for all kinds of extensions to\n \n Check out [junit-pioneer.org](http://junit-pioneer.org), particularly [the documentation section](http://junit-pioneer.org/docs).\n \n+", "originalCommit": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4Njk0Mw==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414686943", "bodyText": "There's always a reason, @beatngu13. \ud83d\ude01 To better navigate a file, I put two empty lines before each top-level section - in most documents, that's the level 2 headers.", "author": "nipafx", "createdAt": "2020-04-24T15:59:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY1ODE0NA=="}], "type": "inlineReview"}, {"oid": "87f6edaff817ab95d0428e6a692881f82be8cae7", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/87f6edaff817ab95d0428e6a692881f82be8cae7", "message": "Fix typos", "committedDate": "2020-04-24T16:03:00Z", "type": "commit"}, {"oid": "7b60f9cf5e770d2dfd99fb6a13ec4986e884f5cc", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/7b60f9cf5e770d2dfd99fb6a13ec4986e884f5cc", "message": "Add Matthias' bio", "committedDate": "2020-04-24T16:03:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwNjYxNA==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414806614", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [Hancho 2009](https://github.com/Hancho2009) contributed the environment variable extension (#167 / #174)\n          \n          \n            \n            * [Mark R\u00f6sler](https://github.com/Hancho2009) contributed the environment variable extension (#167 / #174)", "author": "Hancho2009", "createdAt": "2020-04-24T19:18:07Z", "path": "README.md", "diffHunk": "@@ -54,18 +70,55 @@ We welcome contributions of all shapes and forms! \ud83c\udf1e\n \n Before contributing, please read the [contribution guide](CONTRIBUTING.md).\n \n-## Project Structure\n+### Maintainers\n \n-### Dependencies\n+JUnit Pioneer is maintained by a small team of people who work on it in their free time - see [`CONTRIBUTING.md`](CONTRIBUTING.md) for details on how they do that.\n+In lexicographic order, these are:\n \n-To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n-Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n+<dl>\n+\t<dt>Matthias B\u00fcnger aka <a href=\"https://github.com/Bukama\">Bukama</a></dt>\n+\t<dd>(Always tries to become a better) Java developer, loves testing and reads <a href=\"https://twitter.com/bukamabish\">tweets</a>.\n+\t\tBecame a maintainer in April 2020, after he \"caused\" (authored) too many <a href=\"https://github.com/junit-pioneer/junit-pioneer/issues\">bishues</a>.</dd>\n \n-For our own infrastructure, we rely on the following compile and test dependencies:\n+\t<dt>Nicolai Parlog aka  <a href=\"https://github.com/nicolaiparlog\">nicolaiparlog</a></dt>\n+\t<dd>Java enthusiast with a passion for learning and sharing.\n+\t\tHe does that in blog posts, articles, newsletters, and books; in <a href=\"https://twitter.com/nipafx\">tweets</a>, repos, videos, and streams; at conferences and in-house trainings - more on all of that on <a href=\"https://codefx.org\">codefx.org</a>.\n+\t\tThat aside, he's best known for his head decor.\n+\t\tHe co-founded the project in November 2016 and has maintained it ever since (although often very negligently).</dd>\n+\t\n+\t<dt>Simon Schrottner aka <a href=\"https://github.com/aepfli\">aepfli</a></dt>\n+\t<dd>Maintainer since April 2020.</dd>\n \n-* JSR-305 (for static analysis)\n-* AssertJ (assertions for our tests)\n-* Mockito (mocking for our tests)\n-* Log4J (to configure logging during test runs)\n-* Jimfs (as an in-memory file system for our test)\n+\t<dt>Steve Moyer aka <a href=\"https://github.com/smoyer64\">smoyer64</a></dt>\n+\t<dd>Co-founded the project in November 2016.</dd>\n+</dl>\n+\n+### Contributors\n+\n+JUnit Pioneer, as small as it is, would be much smaller without kind souls contributing their time, energy, and skills.\n+Thank you for your efforts! \ud83d\ude4f\n+\n+The least we can do is to thank them and list their accomplishments here (in lexicographic order).\n+\n+#### 2020\n+\n+* [Allon Murienik](https://github.com/mureinik) contributed [the range sources](https://junit-pioneer.org/docs/range-sources/) (#44 / #123)\n+* [Daniel Kraus](https://github.com/beatngu13) contributed [the system property extension](https://junit-pioneer.org/docs/system-properties/) (#129 / #133)\n+* [Hancho 2009](https://github.com/Hancho2009) contributed the environment variable extension (#167 / #174)", "originalCommit": "7b60f9cf5e770d2dfd99fb6a13ec4986e884f5cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3367549b0b83f026d9963be33c7bd04e2f249585", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/3367549b0b83f026d9963be33c7bd04e2f249585", "message": "Replace \"Hancho2009\" with \"Mark R\u00f6sler\"\n\nCo-Authored-By: Hancho2009 <mark-roesler@gmx.de>", "committedDate": "2020-04-25T08:39:27Z", "type": "commit"}, {"oid": "1c9f90d8654bdb1b7248f333163d47e8b805f58c", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/1c9f90d8654bdb1b7248f333163d47e8b805f58c", "message": "Add Simon's bio", "committedDate": "2020-04-26T09:04:34Z", "type": "commit"}]}