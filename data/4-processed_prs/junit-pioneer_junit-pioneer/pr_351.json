{"pr_number": 351, "pr_title": "Add note in documentation to use JUnit's BOM (#343 / #351)", "pr_createdAt": "2020-10-04T16:10:15Z", "pr_url": "https://github.com/junit-pioneer/junit-pioneer/pull/351", "timeline": [{"oid": "123fc768415f125b59a364c42576cfee4fe55380", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/123fc768415f125b59a364c42576cfee4fe55380", "message": "Add note in documentation to use JUnit's BOM\n\nWith this PR a note to the documentation is added, that users should use the JUnit Jupiters's BOM instead of declaring each version on their own.\n\nrelated to #343\nPR:", "committedDate": "2020-10-04T16:09:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4NzM0Mg==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/351#discussion_r499387342", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Pioneer does not only use JUnit 5's API, but also other artefacts of the ecosystem, e.g. the `junit-platform-commons`.\n          \n          \n            \n            Pioneer does not only use JUnit 5's API, but also other artifacts from its ecosystem such as [`junit-platform-commons`](https://mvnrepository.com/artifact/org.junit.platform/junit-platform-commons).", "author": "beatngu13", "createdAt": "2020-10-05T07:19:16Z", "path": "README.md", "diffHunk": "@@ -54,6 +54,10 @@ That means it can be used on all Java versions 8 and higher on class path and mo\n To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n \n+Pioneer does not only use JUnit 5's API, but also other artefacts of the ecosystem, e.g. the `junit-platform-commons`.", "originalCommit": "123fc768415f125b59a364c42576cfee4fe55380", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4ODYzMA==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/351#discussion_r499388630", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To avoid dependency troubles you should use the JUnit 5's BOM (the artefact is called [`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) in your project instead defining all of their dependency versions by hand.\n          \n          \n            \n            To avoid dependency issues, you should add the JUnit 5 BOM ([`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) to your project instead of defining all dependency versions manually.", "author": "beatngu13", "createdAt": "2020-10-05T07:22:05Z", "path": "README.md", "diffHunk": "@@ -54,6 +54,10 @@ That means it can be used on all Java versions 8 and higher on class path and mo\n To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n \n+Pioneer does not only use JUnit 5's API, but also other artefacts of the ecosystem, e.g. the `junit-platform-commons`.\n+To avoid dependency troubles you should use the JUnit 5's BOM (the artefact is called [`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) in your project instead defining all of their dependency versions by hand.", "originalCommit": "123fc768415f125b59a364c42576cfee4fe55380", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4OTM2Nw==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/351#discussion_r499389367", "bodyText": "I assume this extra empty line can be removed?", "author": "beatngu13", "createdAt": "2020-10-05T07:23:40Z", "path": "README.md", "diffHunk": "@@ -54,6 +54,10 @@ That means it can be used on all Java versions 8 and higher on class path and mo\n To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n \n+Pioneer does not only use JUnit 5's API, but also other artefacts of the ecosystem, e.g. the `junit-platform-commons`.\n+To avoid dependency troubles you should use the JUnit 5's BOM (the artefact is called [`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) in your project instead defining all of their dependency versions by hand.\n+\n+", "originalCommit": "123fc768415f125b59a364c42576cfee4fe55380", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9ece97263e33e2728555123657e92bfaccf67837", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/9ece97263e33e2728555123657e92bfaccf67837", "message": "Fix typo", "committedDate": "2020-10-05T16:09:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyMjI2MQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/351#discussion_r500522261", "bodyText": "Let's move this one paragraph up, so the preceding and the following paragraphs can stay together (they love each other so much).", "author": "nipafx", "createdAt": "2020-10-06T18:48:52Z", "path": "README.md", "diffHunk": "@@ -54,6 +54,9 @@ That means it can be used on all Java versions 8 and higher on class path and mo\n To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n \n+Pioneer does not only use JUnit 5's API, but also other artifacts from its ecosystem such as [`junit-platform-commons`](https://mvnrepository.com/artifact/org.junit.platform/junit-platform-commons).\n+To avoid dependency issues, you should add the JUnit 5 BOM ([`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) to your project instead of defining all dependency versions manually.\n+", "originalCommit": "9ece97263e33e2728555123657e92bfaccf67837", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyMjUyNQ==", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/351#discussion_r500522525", "bodyText": "Let's link \"dependency issues\" to the actual issue, so users get an idea of what may go wrong.", "author": "nipafx", "createdAt": "2020-10-06T18:49:18Z", "path": "README.md", "diffHunk": "@@ -54,6 +54,9 @@ That means it can be used on all Java versions 8 and higher on class path and mo\n To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n \n+Pioneer does not only use JUnit 5's API, but also other artifacts from its ecosystem such as [`junit-platform-commons`](https://mvnrepository.com/artifact/org.junit.platform/junit-platform-commons).\n+To avoid dependency issues, you should add the JUnit 5 BOM ([`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) to your project instead of defining all dependency versions manually.", "originalCommit": "9ece97263e33e2728555123657e92bfaccf67837", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "31ada3d15bde62b55a2aa39dbe4f51af878bafe3", "url": "https://github.com/junit-pioneer/junit-pioneer/commit/31ada3d15bde62b55a2aa39dbe4f51af878bafe3", "message": "Include feedback", "committedDate": "2020-10-06T18:49:38Z", "type": "commit"}]}