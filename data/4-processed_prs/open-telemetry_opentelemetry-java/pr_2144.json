{"pr_number": 2144, "pr_title": "Fix buildscripts/semantic-convention/generate.sh script", "pr_createdAt": "2020-11-26T15:14:26Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144", "timeline": [{"oid": "9678f4a538861261d1561f0f93c0517bf766e558", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9678f4a538861261d1561f0f93c0517bf766e558", "message": "Fix buildscripts/semantic-convention/generate.sh script\n\nIncluding:\n* update spec version to latest commit\n* regenerate SemanticAttributes", "committedDate": "2020-11-26T15:12:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NDk2OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r531174969", "bodyText": "this doesn't look right, if line 136 is right.", "author": "jkwatson", "createdAt": "2020-11-26T18:04:57Z", "path": "api/src/main/java/io/opentelemetry/api/trace/attributes/SemanticAttributes.java", "diffHunk": "@@ -96,7 +160,7 @@\n \n   /**\n    * The version string of the VM image as defined in [Version\n-   * Attributes](https://github.com/open-telemetry/opentelemetry-specification/tree/master/specification/resource/semantic_conventions#version-attributes).\n+   * Attributes](README.md#version-attributes).", "originalCommit": "9678f4a538861261d1561f0f93c0517bf766e558", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NjA1MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r531176050", "bodyText": "It is wrong, but that is currently a limitation of the md generator: open-telemetry/build-tools#20", "author": "Oberon00", "createdAt": "2020-11-26T18:08:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NDk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NjU1MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r531176550", "bodyText": "The links are currently relative regarding the place where the markdown tables are generated in the spec. Nothing we can do about it without fixing the tool first, then we can make the YAML right again.", "author": "Oberon00", "createdAt": "2020-11-26T18:09:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NDk2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NTM2Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r531175366", "bodyText": "can we also reference the version of the spec that we're referencing, so it's clear we're not pulling in arbitrary SHAs?", "author": "jkwatson", "createdAt": "2020-11-26T18:06:07Z", "path": "buildscripts/semantic-convention/generate.sh", "diffHunk": "@@ -1,30 +1,32 @@\n #!/bin/bash\n \n-DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+ROOT_DIR=\"${SCRIPT_DIR}/../../\"\n+# freeze the spec version to make SemanticAttributes generation reproducible\n+SPEC_VERSION=d328331ce9dc6dec871b647b4e37a84b5396516e", "originalCommit": "9678f4a538861261d1561f0f93c0517bf766e558", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQzNjIxNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r531436215", "bodyText": "But we are pulling arbitrary SHAs \ud83d\ude05\nWe can use tags here instead of hashes, e.g. v0.7.0 but I'm afraid that just using tags will be very limiting. Spec v0.7.0 is pretty recent, but v0.6.0 was released 5 months ago.", "author": "mateuszrzeszutek", "createdAt": "2020-11-27T08:02:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NTM2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0NjAzMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r531446031", "bodyText": "We could maybe add a comment with the git describe of that version next to it. (Or can we use git describe result directly?)", "author": "Oberon00", "createdAt": "2020-11-27T08:23:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NTM2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0NzIyMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r531447222", "bodyText": "In this case it would be v0.7.0-15-gd328331. And git seems to be able to parse this as revision:\n$git log v0.7.0-15-gd328331\ncommit d328331ce9dc6dec871b647b4e37a84b5396516e\nAuthor: Christian Neum\u00fcller <christian.nospameuumueller@dynatrace.com>\nDate:   Thu Nov 26 13:15:29 2020 +0100\n\n    Add .gitattributes & normalize line endings (#1230)\n\n    Co-authored-by: Armin Ruech <arminospam.ruech@dynatrace.com>\n\ncommit 2aa62dfe1efff9d25d935c52d579c44418c925d8\nAuthor: William Armiros <54150514+willarmiros@users.noreply.github.com>\nDate:   Tue Nov 24 20:17:42 2020 -0600\n\n    Add semantic conventions for cloud provider-specific resource attributes (#1099)", "author": "Oberon00", "createdAt": "2020-11-27T08:26:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NTM2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ0ODQxNA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r531448414", "bodyText": "Nice! That looks great, much better than sha1.", "author": "mateuszrzeszutek", "createdAt": "2020-11-27T08:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NTM2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ1MDE2NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r531450164", "bodyText": "Unfortunately it doesn't work\nfatal: couldn't find remote ref v0.7.0-15-gd328331", "author": "mateuszrzeszutek", "createdAt": "2020-11-27T08:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NTM2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyNTM5MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r532725391", "bodyText": "I fine using the SHA, but would like to just have a comment about how we got it (i.e. from a release tag, etc).", "author": "jkwatson", "createdAt": "2020-11-30T16:25:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE3NTM2Ng=="}], "type": "inlineReview"}, {"oid": "1316e202435e6ae686cf663f6c4477980a8ef446", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1316e202435e6ae686cf663f6c4477980a8ef446", "message": "Code review comments", "committedDate": "2020-11-30T16:31:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgwMzI3OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r532803278", "bodyText": "can we not lock this to the recent 0.7.0 release for now?", "author": "jkwatson", "createdAt": "2020-11-30T18:18:17Z", "path": "buildscripts/semantic-convention/generate.sh", "diffHunk": "@@ -3,6 +3,8 @@\n SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n ROOT_DIR=\"${SCRIPT_DIR}/../../\"\n # freeze the spec version to make SemanticAttributes generation reproducible\n+# this hash was obtained by calling `git rev-parse master`", "originalCommit": "1316e202435e6ae686cf663f6c4477980a8ef446", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgwMzU5NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r532803594", "bodyText": "And if not, please reference the date that this version was pulled from.", "author": "jkwatson", "createdAt": "2020-11-30T18:18:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgwMzI3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNTUzNA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r533315534", "bodyText": "Added the date.", "author": "mateuszrzeszutek", "createdAt": "2020-12-01T10:50:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgwMzI3OA=="}], "type": "inlineReview"}, {"oid": "8770884d49550cf92549b3d745fbf81ff0e83602", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8770884d49550cf92549b3d745fbf81ff0e83602", "message": "Reference spec date", "committedDate": "2020-12-01T10:49:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY1ODEyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2144#discussion_r533658129", "bodyText": "fyi I brought this up in the spec meeting this morning, so it's at least on people's radar.", "author": "jkwatson", "createdAt": "2020-12-01T19:14:03Z", "path": "buildscripts/semantic-convention/generate.sh", "diffHunk": "@@ -3,9 +3,9 @@\n SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n ROOT_DIR=\"${SCRIPT_DIR}/../../\"\n # freeze the spec version to make SemanticAttributes generation reproducible\n-# this hash was obtained by calling `git rev-parse master`\n+# this hash was obtained by calling `git rev-parse master` on 1st Dec 2020\n # we can't use a version tag here because otel-spec releases are very rare", "originalCommit": "8770884d49550cf92549b3d745fbf81ff0e83602", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}