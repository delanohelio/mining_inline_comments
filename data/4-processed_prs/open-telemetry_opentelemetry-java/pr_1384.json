{"pr_number": 1384, "pr_title": "support container id in AWS ECS plugin", "pr_createdAt": "2020-06-30T18:04:27Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1384", "timeline": [{"oid": "6fca55beba11392eb264563ddeb51a074daa8dd6", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6fca55beba11392eb264563ddeb51a074daa8dd6", "message": "support container id in AWS ECS plugin", "committedDate": "2020-06-30T17:59:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkzODYxMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1384#discussion_r447938610", "bodyText": "Please add a comment about the fact that it returns an empty string when the docker id can't be found.", "author": "jkwatson", "createdAt": "2020-06-30T19:48:53Z", "path": "sdk_extensions/aws_v1_support/src/main/java/io/opentelemetry/sdk/extensions/trace/aws/resource/DockerHelper.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.extensions.trace.aws.resource;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import java.io.BufferedReader;\n+import java.io.FileNotFoundException;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+class DockerHelper {\n+\n+  private static final Logger logger = Logger.getLogger(DockerHelper.class.getName());\n+  private static final int CONTAINER_ID_LENGTH = 64;\n+  private static final String DEFAULT_CGROUP_PATH = \"/proc/self/cgroup\";\n+\n+  private final String cgroupPath;\n+\n+  DockerHelper() {\n+    this(DEFAULT_CGROUP_PATH);\n+  }\n+\n+  @VisibleForTesting\n+  DockerHelper(String cgroupPath) {\n+    this.cgroupPath = cgroupPath;\n+  }\n+\n+  /**\n+   * Get docker container id from local cgroup file.", "originalCommit": "6fca55beba11392eb264563ddeb51a074daa8dd6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAzNTkyNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1384#discussion_r448035925", "bodyText": "Use Guava Files instead of FileUtils", "author": "anuraaga", "createdAt": "2020-06-30T23:34:31Z", "path": "sdk_extensions/aws_v1_support/src/test/java/io/opentelemetry/sdk/extensions/trace/aws/resource/DockerHelperTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.extensions.trace.aws.resource;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+public class DockerHelperTest {\n+\n+  @Rule public TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+  @Test\n+  public void testCgroupFileMissing() {\n+    DockerHelper dockerHelper = new DockerHelper(\"a_file_never_existing\");\n+    assertThat(dockerHelper.getContainerId()).isEmpty();\n+  }\n+\n+  @Test\n+  public void testContainerIdMissing() throws IOException {\n+    File file = tempFolder.newFile(\"no_container_id\");\n+    FileUtils.writeStringToFile(file, \"13:pids:/\\n\" + \"12:hugetlb:/\\n\" + \"11:net_prio:/\");", "originalCommit": "6fca55beba11392eb264563ddeb51a074daa8dd6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7276c62947548f812a369683745f7173d21bfd71", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7276c62947548f812a369683745f7173d21bfd71", "message": "fix comments; change apache common to guava", "committedDate": "2020-07-01T01:25:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2NzkwMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1384#discussion_r448067903", "bodyText": "Nit, a bit simpler as Files.write(content, file, Charsets.UTF_8)", "author": "anuraaga", "createdAt": "2020-07-01T01:35:36Z", "path": "sdk_extensions/aws_v1_support/src/test/java/io/opentelemetry/sdk/extensions/trace/aws/resource/DockerHelperTest.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.sdk.extensions.trace.aws.resource;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.common.base.Charsets;\n+import com.google.common.io.Files;\n+import java.io.File;\n+import java.io.IOException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+public class DockerHelperTest {\n+\n+  @Rule public TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+  @Test\n+  public void testCgroupFileMissing() {\n+    DockerHelper dockerHelper = new DockerHelper(\"a_file_never_existing\");\n+    assertThat(dockerHelper.getContainerId()).isEmpty();\n+  }\n+\n+  @Test\n+  public void testContainerIdMissing() throws IOException {\n+    File file = tempFolder.newFile(\"no_container_id\");\n+    String content = \"13:pids:/\\n\" + \"12:hugetlb:/\\n\" + \"11:net_prio:/\";\n+    Files.write(content.getBytes(Charsets.UTF_8), file);", "originalCommit": "7276c62947548f812a369683745f7173d21bfd71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4NDg2Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1384#discussion_r448084862", "bodyText": "Files.write(CharSequence, File, Charset) is marked as deprecated, now the only available write method in class Files is write(byte[], File)", "author": "wangzlei", "createdAt": "2020-07-01T02:44:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2NzkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4NjAzNA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1384#discussion_r448086034", "bodyText": "Ah didn't know that, thanks! Wish the latest javadocs had enough SEO to show up on search", "author": "anuraaga", "createdAt": "2020-07-01T02:49:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2NzkwMw=="}], "type": "inlineReview"}]}