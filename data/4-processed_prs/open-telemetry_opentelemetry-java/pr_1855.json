{"pr_number": 1855, "pr_title": "Replace TracingContextUtils.currentContextWith with ImplicitContextKeyed.makeCurrent", "pr_createdAt": "2020-10-22T03:08:32Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1855", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg1NDI4OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1855#discussion_r509854289", "bodyText": "would it be possible to make this also a method on the span instance?\nI'm struggling with what the name of that method would be right now, though.\nspan.activate() ?", "author": "jkwatson", "createdAt": "2020-10-22T03:13:38Z", "path": "api/src/jmh/java/io/opentelemetry/trace/DefaultTracerBenchmarks.java", "diffHunk": "@@ -34,7 +35,7 @@\n   @Warmup(iterations = 5, time = 1)\n   public void measureFullSpanLifecycle() {\n     span = tracer.spanBuilder(\"span\").startSpan();\n-    try (io.opentelemetry.context.Scope ignored = TracingContextUtils.currentContextWith(span)) {\n+    try (io.opentelemetry.context.Scope ignored = Context.current().with(span).makeCurrent()) {", "originalCommit": "f859e2cbde9cf6e05b94baad5007a644f2e3f19d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg1NDY2MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1855#discussion_r509854660", "bodyText": "Oh yeah did have that idea - not sure if it's worth it. But I would just use the same name as Context, so span.makeCurrent(). Does it seem useful to have?", "author": "anuraaga", "createdAt": "2020-10-22T03:14:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg1NDI4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg1NDc1MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1855#discussion_r509854750", "bodyText": "or maybe Context.inCurrentScope(span) ?", "author": "jkwatson", "createdAt": "2020-10-22T03:15:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg1NDI4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg1NTkyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1855#discussion_r509855929", "bodyText": "I believe that looks like\ninterface Context\n  static Scope inCurrentScope(ImplicitContextKeyed value) {\n    return Context.current().with(value).makeCurrent();\n  }\nFor symmetry, I think we would need a version that also accepts ContextKey. I think I like this a bit less than adding to Span itself (rather, I could add it to ImplicitContextKeyed).", "author": "anuraaga", "createdAt": "2020-10-22T03:20:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg1NDI4OQ=="}], "type": "inlineReview"}, {"oid": "e46898f41ebfc32fe20d6902a40761911652aec9", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e46898f41ebfc32fe20d6902a40761911652aec9", "message": "Replace TracingContextUtils.currentContextWith with ImplicitContextKeyed.makeCurrent", "committedDate": "2020-10-22T03:30:21Z", "type": "commit"}, {"oid": "e46898f41ebfc32fe20d6902a40761911652aec9", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/e46898f41ebfc32fe20d6902a40761911652aec9", "message": "Replace TracingContextUtils.currentContextWith with ImplicitContextKeyed.makeCurrent", "committedDate": "2020-10-22T03:30:21Z", "type": "forcePushed"}, {"oid": "9c4dca44ee9c58fa23b67c9061e7da89802c2d0d", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9c4dca44ee9c58fa23b67c9061e7da89802c2d0d", "message": "Dont add MustBeClosed this time since affects other code.", "committedDate": "2020-10-22T03:34:14Z", "type": "commit"}, {"oid": "9b1bca5504809d96a1747e1be37dc9e2601280bc", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9b1bca5504809d96a1747e1be37dc9e2601280bc", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into remove-currentcontextwith", "committedDate": "2020-10-23T04:10:48Z", "type": "commit"}]}