{"pr_number": 2332, "pr_title": "Use normal filesystem-based Gradle paths.", "pr_createdAt": "2020-12-17T06:45:33Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2332", "timeline": [{"oid": "d1f9aa362ebfc5aefe962df768896f39424135ee", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d1f9aa362ebfc5aefe962df768896f39424135ee", "message": "Use normal filesystem-based Gradle paths.", "committedDate": "2020-12-17T06:42:36Z", "type": "commit"}, {"oid": "5b4d353569c0b65c0b7771d59d28450b88ac1b96", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/5b4d353569c0b65c0b7771d59d28450b88ac1b96", "message": "Update workflow by making agnostic to jacoco project name", "committedDate": "2020-12-17T06:49:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MDYyOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2332#discussion_r544960628", "bodyText": "Whoa, this is an annoying bug. And an old one \ud83d\ude03\nHow about we rename the directories instead?", "author": "Oberon00", "createdAt": "2020-12-17T10:01:11Z", "path": "api/build.gradle", "diffHunk": "@@ -0,0 +1,7 @@\n+subprojects {", "originalCommit": "5b4d353569c0b65c0b7771d59d28450b88ac1b96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MTc3Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2332#discussion_r544961773", "bodyText": "I would be happy to get rid of this, but the archiveFilename workaround does not look much better all-in-all IMHO. Maybe we can rename the directories so we can get rid of that workaround too?", "author": "Oberon00", "createdAt": "2020-12-17T10:02:50Z", "path": "settings.gradle", "diffHunk": "@@ -26,63 +26,44 @@ plugins {\n }\n \n rootProject.name = \"opentelemetry-java\"\n-include \":opentelemetry-all\",\n-        \":opentelemetry-api\",\n-        \":opentelemetry-api-baggage\",\n-        \":opentelemetry-api-common\",\n-        \":opentelemetry-api-trace\",\n-        \":opentelemetry-api-metrics\",\n-        \":opentelemetry-context\",\n-        \":opentelemetry-extension-annotations\",\n-        \":opentelemetry-extension-kotlin\",\n-        \":opentelemetry-extension-trace-propagators\",\n-        \":opentelemetry-exporter-jaeger\",\n-        \":opentelemetry-exporter-jaeger-thrift\",\n-        \":opentelemetry-exporter-logging\",\n-        \":opentelemetry-exporter-otlp\",\n-        \":opentelemetry-exporter-otlp-metrics\",\n-        \":opentelemetry-exporter-otlp-trace\",\n-        \":opentelemetry-exporter-prometheus\",\n-        \":opentelemetry-exporter-zipkin\",\n-        \":opentelemetry-integration-tests\",\n-        \":opentelemetry-integration-tests-tracecontext\",\n-        \":opentelemetry-opencensus-shim\",\n-        \":opentelemetry-opentracing-shim\",\n-        \":opentelemetry-proto\",\n-        \":opentelemetry-sdk-common\",\n-        \":opentelemetry-sdk-metrics\",\n-        \":opentelemetry-sdk-trace\",\n-        \":opentelemetry-sdk\",\n-        \":opentelemetry-sdk-extension-async-processor\",\n-        \":opentelemetry-sdk-extension-aws\",\n-        \":opentelemetry-sdk-extension-logging\",\n-        \":opentelemetry-sdk-extension-otproto\",\n-        \":opentelemetry-sdk-extension-resources\",\n-        \":opentelemetry-sdk-extension-tracing-incubator\",\n-        \":opentelemetry-sdk-extension-jaeger-remote-sampler\",\n-        \":opentelemetry-sdk-extension-jfr-events\",\n-        \":opentelemetry-sdk-extension-zpages\",\n-        \":opentelemetry-sdk-testing\",\n-        \":opentelemetry-bom\",\n-        \":opentelemetry-perf-harness\"\n-\n-rootProject.children.each {", "originalCommit": "5b4d353569c0b65c0b7771d59d28450b88ac1b96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk3Nzk4Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2332#discussion_r544977983", "bodyText": "Ah my comment might have been confusing, the workaround is only setting the group so group + name are unique.\nThe rest is applying our convention for archive names in a generic way. Another alternative is to not apply rules and just set archivesBaseName in each Gradle file. It's what I do for my own projects. Don't have a particular preference for either though.\nI do like the current folder names since the gradle commands are much shorter and easier to execute. Gradle zsh completion has never worked well for me so always have to type everything out.", "author": "anuraaga", "createdAt": "2020-12-17T10:27:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk4MjM3NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2332#discussion_r544982374", "bodyText": "Oh, I see. So basically we are doing the same with the archiveBasenames now that we used to to with the project directory names before, but distributed over multiple files.\nI think I would prefer either having everything in one place (maybe the top-level build.gradle) or, like you said, have each project's build.gradle just set it's own name. As it is now in this PR, it's kind of a mixture of the two.", "author": "Oberon00", "createdAt": "2020-12-17T10:33:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk2MTc3Mw=="}], "type": "inlineReview"}, {"oid": "068ea6e2888fd3d857c41d1b3cdd947a276d375d", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/068ea6e2888fd3d857c41d1b3cdd947a276d375d", "message": "Merge branch 'master' of github.com:open-telemetry/opentelemetry-java into fs-based-project-paths", "committedDate": "2020-12-18T01:34:20Z", "type": "commit"}, {"oid": "53651747ecdf1a14a4229d89fb82d3cf3240ff14", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/53651747ecdf1a14a4229d89fb82d3cf3240ff14", "message": "More merge", "committedDate": "2020-12-18T01:36:53Z", "type": "commit"}]}