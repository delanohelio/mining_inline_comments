{"pr_number": 1115, "pr_title": "Provides a way to enable/disable the docker integration tests via a gradle property", "pr_createdAt": "2020-04-15T18:32:01Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115", "timeline": [{"oid": "34c185c5065690747d09cc82e726ad8e4309d05c", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/34c185c5065690747d09cc82e726ad8e4309d05c", "message": "Provides a way to disable the docker integration tests via a gradle property.", "committedDate": "2020-04-15T18:31:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409056027", "bodyText": "I would do the opposite and disable by default, what do you think?", "author": "bogdandrutu", "createdAt": "2020-04-15T18:42:49Z", "path": "CONTRIBUTING.md", "diffHunk": "@@ -72,7 +72,10 @@ $ git commit -m \"Update javadoc for API.\"\n Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n-1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon. If\n+you cannot run the docker daemon, you can disable the docker tests by setting a gradle property of\n+``\"disable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "originalCommit": "34c185c5065690747d09cc82e726ad8e4309d05c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2NTk1Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409065957", "bodyText": "I also support disabling it by default, and enabling it by default only for CircleCI.", "author": "carlosalberto", "createdAt": "2020-04-15T18:59:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MzAzNA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409093034", "bodyText": "no strong opinion. My only concern is that we somehow get it disabled for CI and never notice.", "author": "jkwatson", "createdAt": "2020-04-15T19:48:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA5MzM0NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409093344", "bodyText": "Personally, I like to always run them, so I'll probably just add the property to my personal gradle.properties and be fine.", "author": "jkwatson", "createdAt": "2020-04-15T19:49:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEwODA1Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409108057", "bodyText": "ok, reversed the logic and the name of the property (so we don't have double negatives everywhere).", "author": "jkwatson", "createdAt": "2020-04-15T20:16:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ4NTk5Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409485996", "bodyText": "I think enabling by default but skipping the tests without error if container setup fails, unless explicitly enabled, would be best.", "author": "Oberon00", "createdAt": "2020-04-16T11:33:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3NzQxMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409677410", "bodyText": "So your suggestion is to always try, but only fail if the property is set to true?", "author": "jkwatson", "createdAt": "2020-04-16T16:09:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NjAyNw=="}], "type": "inlineReview"}, {"oid": "ecf20cd2f0134390fcd9f818edbd4c012ed8de1d", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ecf20cd2f0134390fcd9f818edbd4c012ed8de1d", "message": "switch the property to be the opposite", "committedDate": "2020-04-15T20:15:17Z", "type": "commit"}, {"oid": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "message": "add a new make target and let CI use it.", "committedDate": "2020-04-15T20:30:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDE2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409604165", "bodyText": "I don't think this is needed, correct? Not present means false. Up to you.", "author": "bogdandrutu", "createdAt": "2020-04-16T14:31:31Z", "path": "gradle.properties", "diffHunk": "@@ -1,3 +1,8 @@\n org.gradle.parallel=true\n org.gradle.workers.max=4\n org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m\n+\n+### Override this property to 'true' to enable the end-to-end tests that use docker.\n+### This can be done via -Penable.docker.tests=true on the command line, or by\n+### setting this property to true in the gradle.properties in your home directory.\n+enable.docker.tests=false", "originalCommit": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY0NDUxNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409644516", "bodyText": "I think it's nice to have it documented. But maybe add it as commented-out line.", "author": "Oberon00", "createdAt": "2020-04-16T15:23:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY1MDY3MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409650671", "bodyText": "I also like having this as documentation; no reason to comment it out, really. having it \"live\", I think, makes it clear that it's a real thing, and will be less likely to just bitrot over time.\nThat being said, I don't actually care too much, either way.", "author": "jkwatson", "createdAt": "2020-04-16T15:31:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDE2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3NTIwMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409675203", "bodyText": "Fine with having it here.", "author": "bogdandrutu", "createdAt": "2020-04-16T16:06:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDE2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDk3Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409604973", "bodyText": "s/jaeger/jaegerBackend? (or jaegerContainer?)", "author": "bogdandrutu", "createdAt": "2020-04-16T14:32:35Z", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+      jaeger =", "originalCommit": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MTcyNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409661726", "bodyText": "I like jaegerContainer", "author": "jkwatson", "createdAt": "2020-04-16T15:47:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDk3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyMDgyMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409720823", "bodyText": "done", "author": "jkwatson", "createdAt": "2020-04-16T17:17:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNDk3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNjk1MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409606950", "bodyText": "It is confusing to have this in Before, and probably before is not needed since only one test. I would remove Before from this method and explicitly call it in the only test we have. Then the Assume is only in the test method.", "author": "bogdandrutu", "createdAt": "2020-04-16T14:35:06Z", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+      jaeger =\n+          new GenericContainer<>(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n+              .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n+              .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+    }\n+  }\n \n   @Before\n   public void setupJaegerExporter() {\n+    Assume.assumeNotNull(jaeger);", "originalCommit": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyMTAxMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409721010", "bodyText": "implemented. please take a look", "author": "jkwatson", "createdAt": "2020-04-16T17:17:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNjk1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2NjU3NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409666574", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            enable.docker.tests=false\n          \n          \n            \n            enable.docker.tests=false", "author": "arminru", "createdAt": "2020-04-16T15:53:54Z", "path": "gradle.properties", "diffHunk": "@@ -1,3 +1,8 @@\n org.gradle.parallel=true\n org.gradle.workers.max=4\n org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m\n+\n+### Override this property to 'true' to enable the end-to-end tests that use docker.\n+### This can be done via -Penable.docker.tests=true on the command line, or by\n+### setting this property to true in the gradle.properties in your home directory.\n+enable.docker.tests=false", "originalCommit": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3MDEyMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409670122", "bodyText": "could be shortened to\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n          \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\")) {", "author": "arminru", "createdAt": "2020-04-16T15:58:57Z", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -53,13 +55,22 @@\n \n   @SuppressWarnings(\"rawtypes\")\n   @ClassRule\n-  public static GenericContainer jaeger =\n-      new GenericContainer(\"jaegertracing/all-in-one:\" + JAEGER_VERSION)\n-          .withExposedPorts(COLLECTOR_PORT, QUERY_PORT)\n-          .waitingFor(new HttpWaitStrategy().forPath(\"/\"));\n+  @Nullable\n+  public static GenericContainer jaeger = null;\n+\n+  static {\n+    // make sure that the user has enabled the docker-based tests\n+    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {", "originalCommit": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3MDUyNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409670525", "bodyText": "The property name looks a bit odd to me, I'd actually expect it to be the other way round since the periods usually resemble some kind of hierarchy but that's just a nitpick \ud83d\ude42", "author": "arminru", "createdAt": "2020-04-16T15:59:34Z", "path": "CONTRIBUTING.md", "diffHunk": "@@ -73,6 +73,10 @@ Continuous integration builds the project, runs the tests, and runs multiple\n types of static analysis.\n \n 1. Note: Currently, to run the full suite of tests, you'll need to be running a docker daemon.\n+The tests that require docker are disabled by default. If you wish to run them,\n+you can enable the docker tests by setting a gradle property of\n+``\"enable.docker.tests\"`` to true. See the gradle.properties file in the root of the project", "originalCommit": "90c7ae26dfe871a4a2fec2db6376c5d223cdb021", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4NzY1NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409687654", "bodyText": "yeah, I just made something up. I don't feel strongly about it.", "author": "jkwatson", "createdAt": "2020-04-16T16:24:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY3MDUyNQ=="}], "type": "inlineReview"}, {"oid": "43a5dc0ebada0f89bd1c93b26ee5e471444f44ff", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/43a5dc0ebada0f89bd1c93b26ee5e471444f44ff", "message": "Update gradle.properties\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>", "committedDate": "2020-04-16T16:09:49Z", "type": "commit"}, {"oid": "8c5935a3d2794d1409714d4048afdff20c548753", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8c5935a3d2794d1409714d4048afdff20c548753", "message": "Update exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>", "committedDate": "2020-04-16T16:11:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4MzY0OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409683649", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\"))) {\n          \n          \n            \n                if (Boolean.getBoolean(\"enable.docker.tests\")) {\n          \n      \n    \n    \n  \n\nsorry, my bad :)", "author": "arminru", "createdAt": "2020-04-16T16:18:56Z", "path": "exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java", "diffHunk": "@@ -60,7 +60,7 @@\n \n   static {\n     // make sure that the user has enabled the docker-based tests\n-    if (Boolean.parseBoolean(System.getProperty(\"enable.docker.tests\"))) {\n+    if (Boolean.getBoolean(\"enable.docker.tests\"))) {", "originalCommit": "8c5935a3d2794d1409714d4048afdff20c548753", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4NzA2Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1115#discussion_r409687063", "bodyText": "heh. no worries", "author": "jkwatson", "createdAt": "2020-04-16T16:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4MzY0OQ=="}], "type": "inlineReview"}, {"oid": "c9f8e8fe5b6537af1c87ee697078e75307974496", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c9f8e8fe5b6537af1c87ee697078e75307974496", "message": "Update exporters/jaeger/src/test/java/io/opentelemetry/exporters/jaeger/JaegerIntegrationTest.java\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>", "committedDate": "2020-04-16T16:24:01Z", "type": "commit"}, {"oid": "1672fbbc9fddeb75c441880846ae1c05b9d30a8c", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1672fbbc9fddeb75c441880846ae1c05b9d30a8c", "message": "simplify the test flow", "committedDate": "2020-04-16T17:14:45Z", "type": "commit"}]}