{"pr_number": 909, "pr_title": "Return SDK builders in the MeterSdk to avoid casting in tests", "pr_createdAt": "2020-02-21T21:36:09Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/909", "timeline": [{"oid": "157b1def4d5f4fe6a541d5eb2c24f5a83e917cdd", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/157b1def4d5f4fe6a541d5eb2c24f5a83e917cdd", "message": "Return SDK builders in the MeterSdk to avoid casting in tests\n\nSigned-off-by: Bogdan Cristian Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-02-21T21:29:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgyMDg5MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/909#discussion_r382820891", "bodyText": "much less fun than to think of OTel being used to measure tonnage of something. ;)", "author": "jkwatson", "createdAt": "2020-02-21T21:46:45Z", "path": "sdk/src/test/java/io/opentelemetry/sdk/metrics/DoubleCounterSdkTest.java", "diffHunk": "@@ -59,33 +60,32 @@ public void collectMetrics_NoRecords() {\n     DoubleCounter doubleCounter =\n         testSdk\n             .doubleCounterBuilder(\"testCounter\")\n-            .setConstantLabels(ImmutableMap.of(\"sk1\", \"sv1\"))\n+            .setConstantLabels(Collections.singletonMap(\"sk1\", \"sv1\"))\n             .setLabelKeys(Collections.singletonList(\"sk1\"))\n             .setDescription(\"My very own counter\")\n-            .setUnit(\"metric tonnes\")\n+            .setUnit(\"ms\")", "originalCommit": "157b1def4d5f4fe6a541d5eb2c24f5a83e917cdd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}