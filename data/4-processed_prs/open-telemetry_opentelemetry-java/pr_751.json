{"pr_number": 751, "pr_title": "Clean up the external interface for the RecordEventsReadableSpan", "pr_createdAt": "2020-01-13T22:21:53Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/751", "timeline": [{"oid": "808380430731c842c8101f49e18f616d401dfab4", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/808380430731c842c8101f49e18f616d401dfab4", "message": "WIP on cleaning up the testing-only accessors.", "committedDate": "2020-01-13T22:12:11Z", "type": "commit"}, {"oid": "759a3d2f0a440d67624c0d7317808b9bceb945d0", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/759a3d2f0a440d67624c0d7317808b9bceb945d0", "message": "more WIP on cleanup of the RERSpan", "committedDate": "2020-01-13T22:12:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMTcyMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/751#discussion_r366121723", "bodyText": "This should be used in the SpanData.", "author": "bogdandrutu", "createdAt": "2020-01-14T02:04:45Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -59,8 +58,6 @@\n   // The displayed name of the span.\n   // List of recorded links to parent and child spans.\n   private final List<Link> links;\n-  // Number of links recorded.\n-  private final int totalRecordedLinks;", "originalCommit": "759a3d2f0a440d67624c0d7317808b9bceb945d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMjEyNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/751#discussion_r366122127", "bodyText": "This should be used in the SpanData see https://github.com/open-telemetry/opentelemetry-proto/blob/master/opentelemetry/proto/trace/v1/trace.proto#L35 for where in the SpanData is used.", "author": "bogdandrutu", "createdAt": "2020-01-14T02:06:47Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -83,12 +80,6 @@\n   // List of recorded events.\n   @GuardedBy(\"lock\")\n   private final EvictingQueue<TimedEvent> events;\n-  // Number of events recorded.\n-  @GuardedBy(\"lock\")\n-  private int totalRecordedEvents = 0;", "originalCommit": "759a3d2f0a440d67624c0d7317808b9bceb945d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMjM2OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/751#discussion_r366122369", "bodyText": "We should use this if we don't already.", "author": "bogdandrutu", "createdAt": "2020-01-14T02:07:41Z", "path": "sdk/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -83,12 +80,6 @@\n   // List of recorded events.\n   @GuardedBy(\"lock\")\n   private final EvictingQueue<TimedEvent> events;\n-  // Number of events recorded.\n-  @GuardedBy(\"lock\")\n-  private int totalRecordedEvents = 0;\n-  // The number of children.\n-  @GuardedBy(\"lock\")\n-  private int numberOfChildren;", "originalCommit": "759a3d2f0a440d67624c0d7317808b9bceb945d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ac5c95f406e49b2344469450fae706a7d6c53da1", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ac5c95f406e49b2344469450fae706a7d6c53da1", "message": "re-add the 3 attributes and put them onto the SpanData", "committedDate": "2020-01-14T21:52:05Z", "type": "commit"}, {"oid": "1857c61d7b1de1990a6232ab4c519c70afd4afab", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1857c61d7b1de1990a6232ab4c519c70afd4afab", "message": "reformat", "committedDate": "2020-01-14T21:54:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5Mjk5Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/751#discussion_r366592993", "bodyText": "Why do we remove these tests?", "author": "bogdandrutu", "createdAt": "2020-01-14T21:55:10Z", "path": "sdk/src/test/java/io/opentelemetry/sdk/trace/SpanBuilderSdkTest.java", "diffHunk": "@@ -420,40 +420,12 @@ public void parent_invalidContext() {\n             tracerSdk.spanBuilder(SPAN_NAME).setParent(parent.getContext()).startSpan();\n     try {\n       assertThat(span.getContext().getTraceId()).isNotEqualTo(parent.getContext().getTraceId());\n-      assertFalse(span.getParentSpanId().isValid());\n+      assertFalse(span.toSpanData().getParentSpanId().isValid());\n     } finally {\n       span.end();\n     }\n   }\n \n-  @Test\n-  public void parent_timestampConverter() {", "originalCommit": "ac5c95f406e49b2344469450fae706a7d6c53da1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5MzcxMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/751#discussion_r366593713", "bodyText": "as far as I could tell, these tests weren't actually providing any value, or were testing internals where we could be testing via the SpanData instead.", "author": "jkwatson", "createdAt": "2020-01-14T21:56:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5Mjk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5NDA2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/751#discussion_r366594065", "bodyText": "If you think that noting that the clock isn't somehow swapped out by something is important, then I can re-instate them.", "author": "jkwatson", "createdAt": "2020-01-14T21:57:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5Mjk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5NTg2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/751#discussion_r366595865", "bodyText": "I think the test were to prove that the Builder when creates a child Span inherits the Clock from the parent which I don't think it is tested with SpanData.", "author": "bogdandrutu", "createdAt": "2020-01-14T22:01:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5Mjk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5NjU0OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/751#discussion_r366596549", "bodyText": "Yeah, I guessed that was the purpose, but it seems like any other answer would be very strange. I can put them back if you feel they provide value.", "author": "jkwatson", "createdAt": "2020-01-14T22:03:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5Mjk5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYwMDQxMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/751#discussion_r366600413", "bodyText": "added back, with cleaned up naming.", "author": "jkwatson", "createdAt": "2020-01-14T22:12:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5Mjk5Mw=="}], "type": "inlineReview"}, {"oid": "cd69dc2eff3e488aa0022b63f98570ca8bd1e3c5", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/cd69dc2eff3e488aa0022b63f98570ca8bd1e3c5", "message": "re-add and clean up the clock inheritance tests", "committedDate": "2020-01-14T22:11:57Z", "type": "commit"}]}