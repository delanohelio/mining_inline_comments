{"pr_number": 1025, "pr_title": "Try with resources in example", "pr_createdAt": "2020-03-17T10:12:48Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025", "timeline": [{"oid": "a18704dbea9ec22d690500500844dd3f52869d44", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a18704dbea9ec22d690500500844dd3f52869d44", "message": "Try with resources in example\n\nCreate basic span example should be with try with resources", "committedDate": "2020-03-17T10:12:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY0MDIwNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393640207", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // your use case\n          \n          \n            \n            ...\n          \n          \n            \n            \t// your use case\n          \n          \n            \n            \t...", "author": "arminru", "createdAt": "2020-03-17T12:24:35Z", "path": "QUICKSTART.md", "diffHunk": "@@ -47,9 +47,11 @@ Tracer tracer =\n To create a basic span, you only need to specify the name of the span.\n The start and end time of the span is automatically set by the OpenTelemetry SDK.\n ```java\n-Span span = tracer.spanBuilder(\"SpanName\").startSpan();\n+Span span = tracer.spanBuilder(\"my span\").startSpan();\n+try (Scope scope = tracer.withSpan(span)) {\n // your use case\n ...", "originalCommit": "a18704dbea9ec22d690500500844dd3f52869d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY0MDQzOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393640439", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            span.end();\n          \n          \n            \n            span.end(); // closing the scope does not end the span, this has to be done manually", "author": "arminru", "createdAt": "2020-03-17T12:25:05Z", "path": "QUICKSTART.md", "diffHunk": "@@ -47,9 +47,11 @@ Tracer tracer =\n To create a basic span, you only need to specify the name of the span.\n The start and end time of the span is automatically set by the OpenTelemetry SDK.\n ```java\n-Span span = tracer.spanBuilder(\"SpanName\").startSpan();\n+Span span = tracer.spanBuilder(\"my span\").startSpan();\n+try (Scope scope = tracer.withSpan(span)) {\n // your use case\n ...\n+}\n span.end();", "originalCommit": "a18704dbea9ec22d690500500844dd3f52869d44", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "186965653d36ccf51d7432973d96c4a7d3243e50", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/186965653d36ccf51d7432973d96c4a7d3243e50", "message": "Update QUICKSTART.md\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>", "committedDate": "2020-03-17T12:33:53Z", "type": "commit"}, {"oid": "410c31e99458b88a738714ce02a6e78cb72fc163", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/410c31e99458b88a738714ce02a6e78cb72fc163", "message": "Update QUICKSTART.md\n\nCo-Authored-By: Armin Ruech <armin.ruech@gmail.com>", "committedDate": "2020-03-17T12:35:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0NDM4Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393744387", "bodyText": "I would put this in a finally block to ensure always called. Also we may have a catch block where we set a status", "author": "bogdandrutu", "createdAt": "2020-03-17T15:01:07Z", "path": "QUICKSTART.md", "diffHunk": "@@ -47,10 +47,12 @@ Tracer tracer =\n To create a basic span, you only need to specify the name of the span.\n The start and end time of the span is automatically set by the OpenTelemetry SDK.\n ```java\n-Span span = tracer.spanBuilder(\"SpanName\").startSpan();\n-// your use case\n-...\n-span.end();\n+Span span = tracer.spanBuilder(\"my span\").startSpan();\n+try (Scope scope = tracer.withSpan(span)) {\n+\t// your use case\n+\t...\n+}\n+span.end(); // closing the scope does not end the span, this has to be done manually", "originalCommit": "410c31e99458b88a738714ce02a6e78cb72fc163", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2MzAxMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393763013", "bodyText": "I wanted to do it at start, but name of section (### Create basic Span) confused me", "author": "DotSpy", "createdAt": "2020-03-17T15:26:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0NDM4Nw=="}], "type": "inlineReview"}, {"oid": "bb081320a37d998c699c12d04fd15aee532693d9", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/bb081320a37d998c699c12d04fd15aee532693d9", "message": "docs: add catch to example", "committedDate": "2020-03-17T15:19:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2MzU1Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393763557", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Status status = Status.UNKNOWN.withDescription(\"Change it to your error message\");\n          \n          \n            \n                Status status = Status.UNKNOWN.withDescription(t.getMessage());", "author": "arminru", "createdAt": "2020-03-17T15:27:29Z", "path": "QUICKSTART.md", "diffHunk": "@@ -47,10 +47,16 @@ Tracer tracer =\n To create a basic span, you only need to specify the name of the span.\n The start and end time of the span is automatically set by the OpenTelemetry SDK.\n ```java\n-Span span = tracer.spanBuilder(\"SpanName\").startSpan();\n-// your use case\n-...\n-span.end();\n+Span span = tracer.spanBuilder(\"my span\").startSpan();\n+try (Scope scope = tracer.withSpan(span)) {\n+\t// your use case\n+\t...\n+} catch (Throwable t) {\n+    Status status = Status.UNKNOWN.withDescription(\"Change it to your error message\");", "originalCommit": "bb081320a37d998c699c12d04fd15aee532693d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2ODU1Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393768552", "bodyText": "@arminru i'm not sure about it, t.getMessage() can provide a little explanation and user may want to change this to custom string including or excluding t.getMessage or even not exposing inner error", "author": "DotSpy", "createdAt": "2020-03-17T15:34:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2MzU1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2OTI0Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393769243", "bodyText": "Alright, I'm fine either way.", "author": "arminru", "createdAt": "2020-03-17T15:34:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2MzU1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2NDUyNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393764525", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t...\n          \n          \n            \n            \t...\n          \n          \n            \n            \tspan.setStatus(Status.OK);\n          \n      \n    \n    \n  \n\nMaybe add also this so the reader does not get confused and think status is set only on error.", "author": "thisthat", "createdAt": "2020-03-17T15:28:45Z", "path": "QUICKSTART.md", "diffHunk": "@@ -51,8 +51,12 @@ Span span = tracer.spanBuilder(\"my span\").startSpan();\n try (Scope scope = tracer.withSpan(span)) {\n \t// your use case\n \t...", "originalCommit": "bb081320a37d998c699c12d04fd15aee532693d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2NTM0Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393765343", "bodyText": "@thisthat isn't it default when we end?", "author": "DotSpy", "createdAt": "2020-03-17T15:29:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2NDUyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2ODUyNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393768527", "bodyText": "You only have to call setStatus if you want to override the default, which already is OK.", "author": "arminru", "createdAt": "2020-03-17T15:33:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2NDUyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3MDI1Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1025#discussion_r393770256", "bodyText": "Oh, you are right!", "author": "thisthat", "createdAt": "2020-03-17T15:36:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc2NDUyNQ=="}], "type": "inlineReview"}]}