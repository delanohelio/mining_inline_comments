{"pr_number": 1665, "pr_title": "Switch to java 8", "pr_createdAt": "2020-09-18T17:57:45Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1665", "timeline": [{"oid": "6ea8244cc9c54011506ccc592ec833c440fa91b6", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6ea8244cc9c54011506ccc592ec833c440fa91b6", "message": "switch to java 8", "committedDate": "2020-09-18T17:57:17Z", "type": "commit"}, {"oid": "82d2f1e1c54625427539287e27459e395ed012e1", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/82d2f1e1c54625427539287e27459e395ed012e1", "message": "update the READMEs and use Object.equals in a couple of cases to test that we're really compiling for java 8/android 24.", "committedDate": "2020-09-18T18:04:07Z", "type": "commit"}, {"oid": "d60ecb9cc28f8964d0553c7bfd45ac7b6ccf1278", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d60ecb9cc28f8964d0553c7bfd45ac7b6ccf1278", "message": "formatting", "committedDate": "2020-09-18T18:09:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExNDI4OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1665#discussion_r491114289", "bodyText": "Quick note: https://docs.gradle.org/current/userguide/building_java_projects.html#sec:java_cross_compilation", "author": "iNikem", "createdAt": "2020-09-18T18:14:13Z", "path": "build.gradle", "diffHunk": "@@ -148,8 +146,8 @@ configure(opentelemetryProjects) {\n         mavenLocal()\n     }\n \n-    sourceCompatibility = 1.7\n-    targetCompatibility = 1.7\n+    sourceCompatibility = 1.8", "originalCommit": "d60ecb9cc28f8964d0553c7bfd45ac7b6ccf1278", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExNTAzMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1665#discussion_r491115033", "bodyText": "we can only use the new flag if we're compiling with java9+, though, correct?", "author": "jkwatson", "createdAt": "2020-09-18T18:15:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExNDI4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzMjU4Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1665#discussion_r491132587", "bodyText": "I tried switching to the new flag and it built locally with java 14, but failed to build on CI.", "author": "jkwatson", "createdAt": "2020-09-18T18:51:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExNDI4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0OTE4Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1665#discussion_r491249187", "bodyText": "Yeah we'll want to switch to using Java 11 to build on CI and drop support for building on older to take advantage of the new features. Even 15 would be ok there are usually new compilation features (often javadoc improvements) and still works on older. We would need to change the CI to have a build and separate test jdk configured with Gradle to continue testing with Java 8.\nFor another issue of course :)", "author": "anuraaga", "createdAt": "2020-09-19T01:13:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTExNDI4OQ=="}], "type": "inlineReview"}, {"oid": "c23c486d972c686cb9d79f3ea95c81454ab2e7b8", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c23c486d972c686cb9d79f3ea95c81454ab2e7b8", "message": "use the newer release options for the build, and change the int test to not be java 7 any more.", "committedDate": "2020-09-18T18:36:56Z", "type": "commit"}, {"oid": "6a4bb7bfa46b086a2e560d3e1a20e04bb4f628f7", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6a4bb7bfa46b086a2e560d3e1a20e04bb4f628f7", "message": "switch back to source/target compatibility", "committedDate": "2020-09-18T18:43:58Z", "type": "commit"}, {"oid": "458d61673f9efc4567ef2447f93e5e8b8baf2e1e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/458d61673f9efc4567ef2447f93e5e8b8baf2e1e", "message": "sure wish I could run docker locally to test this out.", "committedDate": "2020-09-18T18:55:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0ODk0Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1665#discussion_r491248942", "bodyText": "Okhttp uses API 21 signature and once before we had discussed following what they do to get Java 8 support in a way that follows the most used Android library. Is it possible to stick with that?\nhttps://github.com/square/okhttp/blob/master/build.gradle#L153\nThough if we just avoid CompletableFuture I think any signature there should be fine too.", "author": "anuraaga", "createdAt": "2020-09-19T01:10:37Z", "path": "api/build.gradle", "diffHunk": "@@ -14,8 +14,8 @@ dependencies {\n \n     annotationProcessor libraries.auto_value\n \n-    signature \"org.codehaus.mojo.signature:java17:1.0@signature\"\n-    signature \"net.sf.androidscents.signature:android-api-level-14:4.0_r4@signature\"\n+    signature \"org.codehaus.mojo.signature:java18:1.0@signature\"\n+    signature \"net.sf.androidscents.signature:android-api-level-24:7.0_r2@signature\"", "originalCommit": "458d61673f9efc4567ef2447f93e5e8b8baf2e1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI1MDk2OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1665#discussion_r491250969", "bodyText": "I don't have a strong opinion on this one. If CompletableFuture is the only thing we lose between 21 and 24 then I'm cool with that.", "author": "jkwatson", "createdAt": "2020-09-19T01:22:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0ODk0Mg=="}], "type": "inlineReview"}]}