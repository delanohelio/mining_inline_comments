{"pr_number": 2257, "pr_title": "Change AbstractSynchronousInstrument to accept a bound factory instead of abstract method", "pr_createdAt": "2020-12-10T03:13:06Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2257", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgzMTAwOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2257#discussion_r539831008", "bodyText": "If all the implementations are the same, can we just inline this into the AbstractSynchronousInstrument constructor and call it a day? Are there ever likely to be other implementations for creating a bound instrument? Or is this the only way to cleanly get the type capture to work right?", "author": "jkwatson", "createdAt": "2020-12-10T04:10:54Z", "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/DoubleCounterSdk.java", "diffHunk": "@@ -16,7 +16,7 @@\n \n   private DoubleCounterSdk(\n       InstrumentDescriptor descriptor, InstrumentAccumulator instrumentAccumulator) {\n-    super(descriptor, instrumentAccumulator);\n+    super(descriptor, instrumentAccumulator, BoundInstrument::new);", "originalCommit": "48be29d767b3e82708f25254d1050b79f3e48efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgzMTU2MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2257#discussion_r539831561", "bodyText": "They are not the same. BoundInstrument is a different sub-class in the parent caller class", "author": "bogdandrutu", "createdAt": "2020-12-10T04:12:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgzMTAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgzNjA0NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2257#discussion_r539836045", "bodyText": "oh, you're right. I totally missed that in the github view. That's what I get for not pulling down the code and looking at it fully. \ud83d\udc4d", "author": "jkwatson", "createdAt": "2020-12-10T04:27:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgzMTAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgzNjkyMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2257#discussion_r539836921", "bodyText": "Thanks :)", "author": "bogdandrutu", "createdAt": "2020-12-10T04:30:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgzMTAwOA=="}], "type": "inlineReview"}, {"oid": "24874331ad711ebeeceb69221ba55fa6d51b9732", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/24874331ad711ebeeceb69221ba55fa6d51b9732", "message": "Change AbstractSynchronousInstrument to accept a bound factory instead of abstract method\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-12-10T04:25:16Z", "type": "commit"}, {"oid": "24874331ad711ebeeceb69221ba55fa6d51b9732", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/24874331ad711ebeeceb69221ba55fa6d51b9732", "message": "Change AbstractSynchronousInstrument to accept a bound factory instead of abstract method\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-12-10T04:25:16Z", "type": "forcePushed"}]}