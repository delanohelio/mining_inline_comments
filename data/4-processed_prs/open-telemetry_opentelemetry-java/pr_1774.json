{"pr_number": 1774, "pr_title": "Serialize the entire trace flags not only the sample bit", "pr_createdAt": "2020-10-08T15:53:13Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1774", "timeline": [{"oid": "237b9e18e9a32976b61a38dfbb0af16fb1926a6a", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/237b9e18e9a32976b61a38dfbb0af16fb1926a6a", "message": "Add test for more than just sampling bit in the context\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-10-22T15:41:14Z", "type": "forcePushed"}, {"oid": "8b39744b76ce8e906d6752f3c1043276087ee120", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8b39744b76ce8e906d6752f3c1043276087ee120", "message": "Serialize the entire trace flags not only the sample bit\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-10-22T15:42:14Z", "type": "commit"}, {"oid": "755c644a4c38b8e3c3b2ac8a78f2a07c8861b2d0", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/755c644a4c38b8e3c3b2ac8a78f2a07c8861b2d0", "message": "Add test for more than just sampling bit in the context\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-10-22T15:42:57Z", "type": "commit"}, {"oid": "755c644a4c38b8e3c3b2ac8a78f2a07c8861b2d0", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/755c644a4c38b8e3c3b2ac8a78f2a07c8861b2d0", "message": "Add test for more than just sampling bit in the context\n\nSigned-off-by: Bogdan Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-10-22T15:42:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMxMTQwMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1774#discussion_r510311400", "bodyText": "tiny spelling nit: this should be ingestCarrier injectCarrier.", "author": "jkwatson", "createdAt": "2020-10-22T16:48:25Z", "path": "api/src/test/java/io/opentelemetry/trace/propagation/HttpTraceContextTest.java", "diffHunk": "@@ -177,6 +177,17 @@ void extract_NullCarrier() {\n                 TRACE_ID_BASE16, SPAN_ID_BASE16, SAMPLED_TRACE_OPTIONS, TRACE_STATE_DEFAULT));\n   }\n \n+  @Test\n+  void extractAndInject_MoreFlags() {\n+    String traceParent = \"00-\" + TRACE_ID_BASE16 + \"-\" + SPAN_ID_BASE16 + \"-03\";\n+    Map<String, String> extractCarrier = new LinkedHashMap<>();\n+    extractCarrier.put(TRACE_PARENT, traceParent);\n+    Context context = httpTraceContext.extract(Context.current(), extractCarrier, getter);\n+    Map<String, String> injestCarrier = new LinkedHashMap<>();", "originalCommit": "755c644a4c38b8e3c3b2ac8a78f2a07c8861b2d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU4MzY4NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1774#discussion_r510583685", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Map<String, String> injestCarrier = new LinkedHashMap<>();\n          \n          \n            \n                httpTraceContext.inject(context, injestCarrier, setter);\n          \n          \n            \n                assertThat(extractCarrier).isEqualTo(injestCarrier);\n          \n          \n            \n                Map<String, String> injectCarrier = new LinkedHashMap<>();\n          \n          \n            \n                httpTraceContext.inject(context, injectCarrier, setter);\n          \n          \n            \n                assertThat(extractCarrier).isEqualTo(injectCarrier);", "author": "anuraaga", "createdAt": "2020-10-23T04:15:29Z", "path": "api/src/test/java/io/opentelemetry/trace/propagation/HttpTraceContextTest.java", "diffHunk": "@@ -177,6 +177,17 @@ void extract_NullCarrier() {\n                 TRACE_ID_BASE16, SPAN_ID_BASE16, SAMPLED_TRACE_OPTIONS, TRACE_STATE_DEFAULT));\n   }\n \n+  @Test\n+  void extractAndInject_MoreFlags() {\n+    String traceParent = \"00-\" + TRACE_ID_BASE16 + \"-\" + SPAN_ID_BASE16 + \"-03\";\n+    Map<String, String> extractCarrier = new LinkedHashMap<>();\n+    extractCarrier.put(TRACE_PARENT, traceParent);\n+    Context context = httpTraceContext.extract(Context.current(), extractCarrier, getter);\n+    Map<String, String> injestCarrier = new LinkedHashMap<>();\n+    httpTraceContext.inject(context, injestCarrier, setter);\n+    assertThat(extractCarrier).isEqualTo(injestCarrier);", "originalCommit": "755c644a4c38b8e3c3b2ac8a78f2a07c8861b2d0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "84bfc5146aabb60b6fc03701b79a4c50030f6733", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/84bfc5146aabb60b6fc03701b79a4c50030f6733", "message": "Update api/src/test/java/io/opentelemetry/trace/propagation/HttpTraceContextTest.java", "committedDate": "2020-10-23T04:15:44Z", "type": "commit"}]}