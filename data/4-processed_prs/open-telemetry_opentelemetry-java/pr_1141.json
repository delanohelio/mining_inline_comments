{"pr_number": 1141, "pr_title": "Add error tag to spans for Jaeger exporter", "pr_createdAt": "2020-04-25T09:01:27Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1141", "timeline": [{"oid": "dfd47f8db800cb05a88b4e9d9d0a7069afcffda7", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/dfd47f8db800cb05a88b4e9d9d0a7069afcffda7", "message": "Add error tag to spans for Jaeger exporter\n\nThe auto-instrumentation libraries add errors to the spans when they occur. The error tag is not added to the spans by the Jaeger exporter if the span status is not OK.\nWhen sending these spans to the OpenTelemetry Collector it will add the error tag when it translates them and sends them to the Jaeger collector. This process does not\ntake place when sending spans directly to a Jaeger collector (not using the OTel collector) and so the Jaeger UI does not display visual indicators for spans with errors.\nAdding the error tag in the adapter if the span.status.code is not OK, and this tag hasn't already been set, means that it will be present when using either the OTel collector\nor the Jaeger collector directly. The Otel collector will remove this tag automatically when it receives the span and sets the status code so this will not be sent as a duplicate.", "committedDate": "2020-04-25T05:34:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNDE4Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1141#discussion_r415134182", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (!span.getStatus().isOk() && !span.getAttributes().containsKey(KEY_ERROR)) {\n          \n          \n            \n                if (!span.getStatus().isOk()) {\n          \n      \n    \n    \n  \n\nI think it may be more important that the jaeger error tag always maps to span status, than preserve an attribute named error that the user may set on the span.\nUnfortunately, we don't have a spec to resolve this kind of thing yet (see open-telemetry/opentelemetry-specification#414), but that issue does reference the python implementation, and I think this is how they've implemented it (+/- my python reading skill).", "author": "trask", "createdAt": "2020-04-25T20:07:07Z", "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/Adapter.java", "diffHunk": "@@ -111,6 +112,10 @@ private Adapter() {}\n             .setVType(Model.ValueType.INT64)\n             .build());\n \n+    if (!span.getStatus().isOk() && !span.getAttributes().containsKey(KEY_ERROR)) {", "originalCommit": "dfd47f8db800cb05a88b4e9d9d0a7069afcffda7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1OTExNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1141#discussion_r415159115", "bodyText": "You are correct @trask, we don't want to add new semantic conventions for Jaeger only.", "author": "bogdandrutu", "createdAt": "2020-04-25T22:37:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNDE4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIyMjMzMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1141#discussion_r415222333", "bodyText": "The logic there should be based on the span status as per the suggested change. The additional check was just because it is possible to add duplicate Model.KeyValue entries as it is a List, unlike the attributes Map that it is built from. I'll accept your suggested changes as the Otel Collector and Jaeger appear to accept this behaviour without failure. Thanks for that.", "author": "sleighzy", "createdAt": "2020-04-26T05:37:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNDE4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM1NzkzNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1141#discussion_r415357935", "bodyText": "Btw, thanks @sleighzy for all of the auto-instrumentation related testing you've been doing!", "author": "trask", "createdAt": "2020-04-26T17:23:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNDE4Mg=="}], "type": "inlineReview"}, {"oid": "d42c2629b6fb3d4ce1e511454c8e853403cecec7", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d42c2629b6fb3d4ce1e511454c8e853403cecec7", "message": "Remove additional attribute check in span status condition\n\nCo-Authored-By: Trask Stalnaker <trask.stalnaker@gmail.com>", "committedDate": "2020-04-26T05:37:54Z", "type": "commit"}]}