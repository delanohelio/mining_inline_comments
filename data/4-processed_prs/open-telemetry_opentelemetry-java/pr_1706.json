{"pr_number": 1706, "pr_title": "Make setting null-valued attributes a no-op, and document that their behavior is undefined.", "pr_createdAt": "2020-09-25T20:10:38Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzNDUzNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r495434535", "bodyText": "I don't think we use @Nonnull, we default to non-null. We're missing package-info.java to set ParametersNonNullByDefault but that's a better fix I think", "author": "anuraaga", "createdAt": "2020-09-26T08:54:29Z", "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -79,7 +83,7 @@ public static Attributes empty() {\n   }\n \n   /** Returns a {@link Attributes} instance with a single key-value pair. */\n-  public static <T> Attributes of(AttributeKey<T> key, T value) {\n+  public static <T> Attributes of(AttributeKey<T> key, @Nonnull T value) {", "originalCommit": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NTEyNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r495475126", "bodyText": "I agree. As I was writing this, I was also wondering why we didn't put the same annotation on the key. :)\nHaving it set for the package as a whole is much better solution. I'll make it so.", "author": "jkwatson", "createdAt": "2020-09-26T16:56:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzNDUzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMzgyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496123829", "bodyText": "done", "author": "jkwatson", "createdAt": "2020-09-28T17:40:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzNDUzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3NTUwMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r495575500", "bodyText": "\ud83d\udc4d", "author": "iNikem", "createdAt": "2020-09-27T13:53:09Z", "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -164,13 +172,7 @@ public static Builder newBuilder() {\n   /** Returns a new {@link Builder} instance from ReadableAttributes. */\n   public static Builder newBuilder(ReadableAttributes attributes) {\n     final Builder builder = new Builder();\n-    attributes.forEach(\n-        new AttributeConsumer() {\n-          @Override\n-          public <T> void consume(AttributeKey<T> key, T value) {\n-            builder.setAttribute(key, value);\n-          }\n-        });\n+    attributes.forEach(builder::setAttribute);", "originalCommit": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4Mjc4OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r495782789", "bodyText": "Nit: for simmetry with the other checks\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (value == null || key == null || key.getKey() == null || key.getKey().length() == 0) {\n          \n          \n            \n                  if (key == null || key.getKey() == null || key.getKey().length() == 0 || value == null ) {", "author": "thisthat", "createdAt": "2020-09-28T08:48:23Z", "path": "api/src/main/java/io/opentelemetry/common/Attributes.java", "diffHunk": "@@ -199,24 +201,7 @@ public Attributes build() {\n \n     /** Sets a {@link AttributeKey} with associated value into this. */\n     public <T> Builder setAttribute(AttributeKey<T> key, T value) {\n-      if (key == null || key.getKey() == null || key.getKey().length() == 0) {\n-        return this;\n-      }\n-      if (value == null) {\n-        // Remove key/value pairs\n-        Iterator<Object> itr = data.iterator();\n-        while (itr.hasNext()) {\n-          AttributeKey k = (AttributeKey) itr.next();\n-          if (key.equals(k)) {\n-            // delete key and value\n-            itr.remove();\n-            itr.next();\n-            itr.remove();\n-          } else {\n-            // skip the value part\n-            itr.next();\n-          }\n-        }\n+      if (value == null || key == null || key.getKey() == null || key.getKey().length() == 0) {", "originalCommit": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r495783418", "bodyText": "should we check that we implement a no-op behavior instead of leaving it undefined?", "author": "thisthat", "createdAt": "2020-09-28T08:49:32Z", "path": "api/src/test/java/io/opentelemetry/common/AttributesTest.java", "diffHunk": "@@ -253,26 +253,4 @@ void toBuilder() {\n     // Original not mutated.\n     assertThat(partial).isEqualTo(Attributes.newBuilder().setAttribute(\"cat\", \"meow\").build());\n   }\n-\n-  @Test\n-  void deleteByNull() {\n-    Attributes.Builder attributes = Attributes.newBuilder();\n-    attributes.setAttribute(stringKey(\"attrValue\"), \"attrValue\");\n-    attributes.setAttribute(\"string\", \"string\");\n-    attributes.setAttribute(\"long\", 10);\n-    attributes.setAttribute(\"double\", 1.0);\n-    attributes.setAttribute(\"bool\", true);\n-    attributes.setAttribute(\"arrayString\", new String[] {\"string\"});\n-    attributes.setAttribute(\"arrayLong\", new Long[] {10L});\n-    attributes.setAttribute(\"arrayDouble\", new Double[] {1.0});\n-    attributes.setAttribute(\"arrayBool\", new Boolean[] {true});\n-    assertThat(attributes.build().size()).isEqualTo(9);\n-    attributes.setAttribute(stringKey(\"attrValue\"), null);\n-    attributes.setAttribute(\"string\", (String) null);\n-    attributes.setAttribute(\"arrayString\", (String[]) null);\n-    attributes.setAttribute(\"arrayLong\", (Long[]) null);\n-    attributes.setAttribute(\"arrayDouble\", (Double[]) null);\n-    attributes.setAttribute(\"arrayBool\", (Boolean[]) null);\n-    assertThat(attributes.build().size()).isEqualTo(3);", "originalCommit": "6e0997f9889957bd8922d0a6ff89ec9fb1070b61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAxMjQwOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496012408", "bodyText": "I went back and forth on this. I'm not really sure which we should do, since we're explicitly saying that behavior is undefined. :)", "author": "jkwatson", "createdAt": "2020-09-28T15:02:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEwNDQwMw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496104403", "bodyText": "If undefined, don't test for it. Some may consider tests as a kind of documentation.", "author": "iNikem", "createdAt": "2020-09-28T17:05:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExMjI2MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496112260", "bodyText": "that was my thinking as well.", "author": "jkwatson", "createdAt": "2020-09-28T17:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExNjk4Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496116982", "bodyText": "I would argue that the specification says \"undefined behavior\", i.e. each implementation of the spec can do whatever they prefer, but the OTel SDK has a well-defined behavior. IMHO we should verify that we implement correctly the no-op behavior in every point that touches null attributes.", "author": "thisthat", "createdAt": "2020-09-28T17:27:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0NDMzOA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496144338", "bodyText": "I've added a test that validates the current behavior, with a clear message that it's not required behavior and would be fine to be changed.", "author": "jkwatson", "createdAt": "2020-09-28T18:16:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE4NTg1Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1706#discussion_r496185856", "bodyText": "@thisthat As a C++ dev, I'd say that would be \"implementation-defined\" behavior, not undefined behavior \ud83d\ude00", "author": "Oberon00", "createdAt": "2020-09-28T19:35:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc4MzQxOA=="}], "type": "inlineReview"}, {"oid": "d383a5b6c8111f5566f1201c9d5588bb4187eb9f", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/d383a5b6c8111f5566f1201c9d5588bb4187eb9f", "message": "Make setting null-valued attributes a no-op, and document that their behavior is undefined.", "committedDate": "2020-09-28T17:37:56Z", "type": "commit"}, {"oid": "7b84159e287b8858728140616d8d7f361e00bb92", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7b84159e287b8858728140616d8d7f361e00bb92", "message": "also have the span itself ignore null attribute values", "committedDate": "2020-09-28T17:37:56Z", "type": "commit"}, {"oid": "8435e06009ee5c8edcf35458d81350b2ba2ffa2c", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8435e06009ee5c8edcf35458d81350b2ba2ffa2c", "message": "Update api/src/main/java/io/opentelemetry/common/Attributes.java\n\nCo-authored-by: Giovanni Liva <giovanni.liva@dynatrace.com>", "committedDate": "2020-09-28T17:37:56Z", "type": "commit"}, {"oid": "2761a09c85bad27143b1b9f50c399ca7559d8f4e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2761a09c85bad27143b1b9f50c399ca7559d8f4e", "message": "Set the non-null-by-default annotation on the package level for the common code.", "committedDate": "2020-09-28T17:39:02Z", "type": "commit"}, {"oid": "2761a09c85bad27143b1b9f50c399ca7559d8f4e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/2761a09c85bad27143b1b9f50c399ca7559d8f4e", "message": "Set the non-null-by-default annotation on the package level for the common code.", "committedDate": "2020-09-28T17:39:02Z", "type": "forcePushed"}, {"oid": "6d5a64d1975ceb190bd8b3e328cd4155d8e5fc73", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/6d5a64d1975ceb190bd8b3e328cd4155d8e5fc73", "message": "add no-op validating tests with a caveat", "committedDate": "2020-09-28T18:16:02Z", "type": "commit"}]}