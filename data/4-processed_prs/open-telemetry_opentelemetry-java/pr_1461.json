{"pr_number": 1461, "pr_title": "Fix Jaeger exporter system property config", "pr_createdAt": "2020-07-24T21:32:27Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461", "timeline": [{"oid": "ca413fe090fb348a8eda08bbb484d9b739755a3b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ca413fe090fb348a8eda08bbb484d9b739755a3b", "message": "Fix Jaeger exporter system property config", "committedDate": "2020-07-24T21:31:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMDQyNQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460300425", "bodyText": "I would not create the channel here. I would set the default endpoint in the ctor of the builder. Then in build() will check if the channel was set externally otherwise would create a new channel from \"endpoint\".\nIt feels to my more natural.", "author": "bogdandrutu", "createdAt": "2020-07-24T21:41:26Z", "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -192,6 +193,19 @@ public Builder setChannel(ManagedChannel channel) {\n       return this;\n     }\n \n+    /**\n+     * Sets the jaeger endpoint. This will use the endpoint to assign a {@link ManagedChannel}\n+     * instance to this builder.\n+     *\n+     * @param endpoint The Jaeger endpoint URL, ex. \"jaegerhost:14250\".\n+     * @return this.\n+     * @since 0.7.0\n+     */\n+    public Builder setEndpoint(String endpoint) {\n+      setChannel(createChannel(endpoint));", "originalCommit": "ca413fe090fb348a8eda08bbb484d9b739755a3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNDMzMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460314332", "bodyText": "Makes sense, done", "author": "trask", "createdAt": "2020-07-24T22:28:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMDQyNQ=="}], "type": "inlineReview"}, {"oid": "4c3f2c6a910a54550d8eed38275f107af0273e95", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/4c3f2c6a910a54550d8eed38275f107af0273e95", "message": "Address feedback", "committedDate": "2020-07-24T22:27:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDc1MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460350751", "bodyText": "Does it make sense to validate this point in build?", "author": "anuraaga", "createdAt": "2020-07-25T02:02:00Z", "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -182,7 +184,10 @@ public Builder setServiceName(String serviceName) {\n     }\n \n     /**\n-     * Sets the managed chanel to use when communicating with the backend. Required.\n+     * Sets the managed chanel to use when communicating with the backend.\n+     *\n+     * <p>Should use only one of {@link #setChannel(ManagedChannel)} or {@link", "originalCommit": "4c3f2c6a910a54550d8eed38275f107af0273e95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NDMyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460364329", "bodyText": "I updated this to match the OTLP exporter builders behavior and javadoc", "author": "trask", "createdAt": "2020-07-25T04:42:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTQ5Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460365496", "bodyText": "changed it again, no longer quite matches OTLP exporter behavior/javadoc, but i think a bit better (because of the default on endpoint, it's easier to check if channel was set, and if not fall back to endpoint). i will update my OTLP exporter PR to match", "author": "trask", "createdAt": "2020-07-25T04:57:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDc1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDgxMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460350810", "bodyText": "Think we should validate that endpoint is set to provide a better error message, guessing otherwise it's an NPE.", "author": "anuraaga", "createdAt": "2020-07-25T02:02:43Z", "path": "exporters/jaeger/src/main/java/io/opentelemetry/exporters/jaeger/JaegerGrpcSpanExporter.java", "diffHunk": "@@ -223,27 +251,12 @@ public static Builder fromEnv() {\n      * @return a new exporter's instance.\n      */\n     public JaegerGrpcSpanExporter build() {\n+      if (channel == null) {", "originalCommit": "4c3f2c6a910a54550d8eed38275f107af0273e95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTI5NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1461#discussion_r460365294", "bodyText": "oh, i just realized, endpoint has a default, so no need to validate here i think?", "author": "trask", "createdAt": "2020-07-25T04:54:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MDgxMA=="}], "type": "inlineReview"}, {"oid": "27b7ee32332aac4e9afa75eadcd0ae7fcf4b029b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/27b7ee32332aac4e9afa75eadcd0ae7fcf4b029b", "message": "feedback", "committedDate": "2020-07-25T04:40:55Z", "type": "commit"}, {"oid": "ed143f479c564eccea251bb569debe6ee6fdbf81", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/ed143f479c564eccea251bb569debe6ee6fdbf81", "message": "oops", "committedDate": "2020-07-25T04:50:50Z", "type": "commit"}, {"oid": "90ebfb369ffdab72e765cddbb25d30e9ab75fe71", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/90ebfb369ffdab72e765cddbb25d30e9ab75fe71", "message": "javadoc", "committedDate": "2020-07-25T05:08:53Z", "type": "commit"}, {"oid": "7d6e721c2cc60303fb0e7920f9a98a08dd82bf53", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7d6e721c2cc60303fb0e7920f9a98a08dd82bf53", "message": "javadoc", "committedDate": "2020-07-25T05:11:50Z", "type": "commit"}]}