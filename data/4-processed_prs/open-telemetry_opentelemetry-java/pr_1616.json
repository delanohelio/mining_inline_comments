{"pr_number": 1616, "pr_title": "Create a simple example of using the OTLP exporters", "pr_createdAt": "2020-09-01T20:25:12Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616", "timeline": [{"oid": "93acdcaa2881e4e781c16843f0614aa99cca4f86", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/93acdcaa2881e4e781c16843f0614aa99cca4f86", "message": "Create a simple otlp example, with a docker-compose collector setup.", "committedDate": "2020-09-01T20:22:50Z", "type": "commit"}, {"oid": "1ce6ea8235e29215d8fe3a3be692c3d458910e9b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1ce6ea8235e29215d8fe3a3be692c3d458910e9b", "message": "Add metrics into the example", "committedDate": "2020-09-01T20:22:50Z", "type": "commit"}, {"oid": "9e972445c74e2bd89ec612b2eda3ff24d331c3bb", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/9e972445c74e2bd89ec612b2eda3ff24d331c3bb", "message": "formatting", "committedDate": "2020-09-01T20:24:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQzMTM1Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r481431352", "bodyText": "I am a bit lost on why the demo app from collector is copied here :)", "author": "bogdandrutu", "createdAt": "2020-09-01T21:06:16Z", "path": "examples/otlp/docker/app/main.go", "diffHunk": "@@ -0,0 +1,128 @@\n+// Copyright The OpenTelemetry Authors\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//       http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Sample contains a program that exports to the OpenCensus service.\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"log\"\n+\t\"math/rand\"\n+\t\"os\"\n+\t\"time\"\n+\n+\t\"contrib.go.opencensus.io/exporter/ocagent\"", "originalCommit": "9e972445c74e2bd89ec612b2eda3ff24d331c3bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ1MDAwNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r481450007", "bodyText": "yeah...I don't know that we need all the pieces of the demo app. I hadn't trimmed them all out yet. It was a great starting point to have a fully-functional collector back-end with visualizations built in. I'll remove the load generator. :)", "author": "jkwatson", "createdAt": "2020-09-01T21:45:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQzMTM1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ3Mzc0MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r481473740", "bodyText": "removed", "author": "jkwatson", "createdAt": "2020-09-01T22:47:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQzMTM1Mg=="}], "type": "inlineReview"}, {"oid": "849112a1c4d9112faf95cbeaf4a1496baf68f72e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/849112a1c4d9112faf95cbeaf4a1496baf68f72e", "message": "remove the go metrics load generator", "committedDate": "2020-09-01T22:46:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY4NDgyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r481684829", "bodyText": "Since this is the java repo and the example is named otlp, should we just use otlp between the two? Or do we even need to run two collectors for this demo?", "author": "anuraaga", "createdAt": "2020-09-02T04:49:38Z", "path": "examples/otlp/docker/otel-agent-config.yaml", "diffHunk": "@@ -0,0 +1,38 @@\n+receivers:\n+  opencensus:\n+  zipkin:\n+    endpoint: :9411\n+  jaeger:\n+    protocols:\n+      thrift_http:\n+\n+\n+exporters:\n+  opencensus:", "originalCommit": "849112a1c4d9112faf95cbeaf4a1496baf68f72e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcyNTkzNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r481725936", "bodyText": "yeah, I think we can remove the agent for this demo. I'll pull it out.", "author": "jkwatson", "createdAt": "2020-09-02T05:31:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY4NDgyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY4NTQwMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r481685400", "bodyText": "Unused I think, if it's just for documentation can you add a comment describing it?", "author": "anuraaga", "createdAt": "2020-09-02T04:50:14Z", "path": "examples/otlp/docker/otel-collector-config-demo.yaml", "diffHunk": "@@ -0,0 +1,54 @@\n+receivers:\n+  opencensus:\n+  otlp:\n+    protocols:\n+        grpc:\n+  otlp/withendpoint:", "originalCommit": "849112a1c4d9112faf95cbeaf4a1496baf68f72e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcyNjE2Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r481726167", "bodyText": "I think I can remove this. will do", "author": "jkwatson", "createdAt": "2020-09-02T05:32:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY4NTQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3MDgzOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r482170839", "bodyText": "I'm actually not sure what this is for, even.", "author": "jkwatson", "createdAt": "2020-09-02T15:39:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY4NTQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI2ODU1NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r482268554", "bodyText": "removed", "author": "jkwatson", "createdAt": "2020-09-02T18:11:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY4NTQwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY4NjYyMg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r481686622", "bodyText": "If I'm not mistaken, it's a must for this to be called before anything under io.observability since resource is immutable. Let's add a comment with that warning.", "author": "anuraaga", "createdAt": "2020-09-02T04:51:27Z", "path": "examples/otlp/src/main/java/io/opentelemetry/example/OtlpExporterExample.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.example;\n+\n+import io.opentelemetry.OpenTelemetry;\n+import io.opentelemetry.common.Labels;\n+import io.opentelemetry.context.Scope;\n+import io.opentelemetry.exporters.otlp.OtlpGrpcMetricExporter;\n+import io.opentelemetry.exporters.otlp.OtlpGrpcSpanExporter;\n+import io.opentelemetry.metrics.LongCounter;\n+import io.opentelemetry.metrics.Meter;\n+import io.opentelemetry.sdk.OpenTelemetrySdk;\n+import io.opentelemetry.sdk.metrics.export.IntervalMetricReader;\n+import io.opentelemetry.sdk.trace.export.SimpleSpanProcessor;\n+import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.Tracer;\n+import java.util.Collections;\n+\n+/**\n+ * Example code for setting up the OTLP exporters.\n+ *\n+ * <p>If you wish to use this code, you'll need to run a copy of the collector locally, on the\n+ * default port. There is a docker-compose configuration for doing this in the docker subdirectory\n+ * of this module.\n+ */\n+public class OtlpExporterExample {\n+  public static void main(String[] args) throws InterruptedException {\n+    // this will make sure that a proper service.name attribute is set on all the spans/metrics.", "originalCommit": "849112a1c4d9112faf95cbeaf4a1496baf68f72e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcyNzE3NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r481727175", "bodyText": "Yeah, it's a terrible hack to even have to do this. I'll add some comments.", "author": "jkwatson", "createdAt": "2020-09-02T05:33:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY4NjYyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI1Mzc3Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r482253772", "bodyText": "done", "author": "jkwatson", "createdAt": "2020-09-02T17:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY4NjYyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg5MzI0OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r481893248", "bodyText": "Are you afraid that people will copy-paste this into their production code? May be use BSP?", "author": "iNikem", "createdAt": "2020-09-02T08:39:30Z", "path": "examples/otlp/src/main/java/io/opentelemetry/example/OtlpExporterExample.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.example;\n+\n+import io.opentelemetry.OpenTelemetry;\n+import io.opentelemetry.common.Labels;\n+import io.opentelemetry.context.Scope;\n+import io.opentelemetry.exporters.otlp.OtlpGrpcMetricExporter;\n+import io.opentelemetry.exporters.otlp.OtlpGrpcSpanExporter;\n+import io.opentelemetry.metrics.LongCounter;\n+import io.opentelemetry.metrics.Meter;\n+import io.opentelemetry.sdk.OpenTelemetrySdk;\n+import io.opentelemetry.sdk.metrics.export.IntervalMetricReader;\n+import io.opentelemetry.sdk.trace.export.SimpleSpanProcessor;\n+import io.opentelemetry.trace.Span;\n+import io.opentelemetry.trace.Tracer;\n+import java.util.Collections;\n+\n+/**\n+ * Example code for setting up the OTLP exporters.\n+ *\n+ * <p>If you wish to use this code, you'll need to run a copy of the collector locally, on the\n+ * default port. There is a docker-compose configuration for doing this in the docker subdirectory\n+ * of this module.\n+ */\n+public class OtlpExporterExample {\n+  public static void main(String[] args) throws InterruptedException {\n+    // this will make sure that a proper service.name attribute is set on all the spans/metrics.\n+    System.setProperty(\"otel.resource.attributes\", \"service.name=OtlpExporterExample\");\n+\n+    // set up the span exporter and wire it into the SDK\n+    OtlpGrpcSpanExporter spanExporter = OtlpGrpcSpanExporter.getDefault();\n+    SimpleSpanProcessor spanProcessor = SimpleSpanProcessor.newBuilder(spanExporter).build();", "originalCommit": "849112a1c4d9112faf95cbeaf4a1496baf68f72e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NzgyMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r482167821", "bodyText": "\ud83e\udd37  There are use-cases for both kinds of span processors. If you think it's a worry, I can change it to a BSP.", "author": "jkwatson", "createdAt": "2020-09-02T15:35:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg5MzI0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI2ODQ2Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r482268467", "bodyText": "switched to BSP. we'll see if this encourages people to use it. :)", "author": "jkwatson", "createdAt": "2020-09-02T18:11:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg5MzI0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg5Mzk0NA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r481893944", "bodyText": "It may be confusing for new users, what is Collector and what is Agent and why do they need both. Some documentation may be of help.", "author": "iNikem", "createdAt": "2020-09-02T08:40:17Z", "path": "examples/otlp/docker/docker-compose.yaml", "diffHunk": "@@ -0,0 +1,58 @@\n+version: \"2\"\n+services:\n+\n+  # Jaeger\n+  jaeger-all-in-one:\n+    image: jaegertracing/all-in-one:latest\n+    ports:\n+      - \"16686:16686\"\n+      - \"14268\"\n+      - \"14250\"\n+\n+  # Zipkin\n+  zipkin-all-in-one:\n+    image: openzipkin/zipkin:latest\n+    ports:\n+      - \"9411:9411\"\n+\n+  # Collector\n+  otel-collector:\n+    image: ${OTELCOL_IMG}\n+    command: [\"--config=/etc/otel-collector-config-demo.yaml\", \"${OTELCOL_ARGS}\"]\n+    volumes:\n+      - ./otel-collector-config-demo.yaml:/etc/otel-collector-config-demo.yaml\n+    ports:\n+      - \"1888:1888\"   # pprof extension\n+      - \"8888:8888\"   # Prometheus metrics exposed by the collector\n+      - \"8889:8889\"   # Prometheus exporter metrics\n+      - \"13133:13133\" # health_check extension\n+      - \"55678\"       # OpenCensus receiver\n+      - \"55681:55679\" # zpages extension\n+      - \"55680:55680\" # otlp receiver\n+    depends_on:\n+      - jaeger-all-in-one\n+      - zipkin-all-in-one\n+\n+  # Agent\n+  otel-agent:", "originalCommit": "849112a1c4d9112faf95cbeaf4a1496baf68f72e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2ODU1OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r482168559", "bodyText": "Hm. I hear what you're saying, but this example isn't supposed to be documentation about the collector. It's just supposed to be a plug-and-play way to show things working. Not even the collector demo itself has this documentation (although I think that one definitely should!)", "author": "jkwatson", "createdAt": "2020-09-02T15:36:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg5Mzk0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI2ODI2Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r482268267", "bodyText": "removed the agent to make it less confusing.", "author": "jkwatson", "createdAt": "2020-09-02T18:10:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg5Mzk0NA=="}], "type": "inlineReview"}, {"oid": "36c1699d4590eb60e86eff4ef2f00502d19f4d9a", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/36c1699d4590eb60e86eff4ef2f00502d19f4d9a", "message": "remove unneeded pieces of the docker config; switch to using the BSP in the example code.", "committedDate": "2020-09-02T17:24:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY0ODM1OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1616#discussion_r482648358", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              opencensus:", "author": "anuraaga", "createdAt": "2020-09-03T02:03:04Z", "path": "examples/otlp/docker/otel-collector-config-demo.yaml", "diffHunk": "@@ -0,0 +1,50 @@\n+receivers:\n+  opencensus:", "originalCommit": "36c1699d4590eb60e86eff4ef2f00502d19f4d9a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "18c3bd333e771b6d543f52d8fef2f1ba4a30bc61", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/18c3bd333e771b6d543f52d8fef2f1ba4a30bc61", "message": "Update examples/otlp/docker/otel-collector-config-demo.yaml\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>", "committedDate": "2020-09-03T02:36:41Z", "type": "commit"}]}