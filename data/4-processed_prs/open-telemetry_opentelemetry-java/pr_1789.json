{"pr_number": 1789, "pr_title": "Make the RERS return isRecording=false after it has ended.", "pr_createdAt": "2020-10-12T22:39:54Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1789", "timeline": [{"oid": "020f02a298f593fd9891486341e06c62eadbac3b", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/020f02a298f593fd9891486341e06c62eadbac3b", "message": "Make the RERS return isRecording=false after it has ended.", "committedDate": "2020-10-12T22:35:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwOTYyNg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1789#discussion_r503609626", "bodyText": "What do you think about switching this to volatile? Sort of nice that something seemingly trivial like checking recording state doesn't have to lock.", "author": "anuraaga", "createdAt": "2020-10-13T00:58:25Z", "path": "sdk/tracing/src/main/java/io/opentelemetry/sdk/trace/RecordEventsReadableSpan.java", "diffHunk": "@@ -461,7 +461,9 @@ public SpanContext getContext() {\n \n   @Override\n   public boolean isRecording() {\n-    return true;\n+    synchronized (lock) {\n+      return !hasEnded;", "originalCommit": "020f02a298f593fd9891486341e06c62eadbac3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYxNDUxMA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1789#discussion_r503614510", "bodyText": "I'm easy either way. I think it's worth looking into the entire thread-safety management of this class, but let's save that for another PR?", "author": "jkwatson", "createdAt": "2020-10-13T01:19:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYwOTYyNg=="}], "type": "inlineReview"}]}