{"pr_number": 947, "pr_title": "Update InMemoryTracing to use builder, and limit the public API.", "pr_createdAt": "2020-02-28T00:39:37Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/947", "timeline": [{"oid": "c680dea09734c6e3b5a6da2eeb74c4b16049b334", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/c680dea09734c6e3b5a6da2eeb74c4b16049b334", "message": "Update InMemoryTracing to use builder, and limit the public API.\n\nSigned-off-by: Bogdan Cristian Drutu <bogdandrutu@gmail.com>", "committedDate": "2020-02-28T00:39:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1MTE0MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/947#discussion_r385451140", "bodyText": "@jkwatson I need your brain to help me name this class :) Idea is that probably I will have an equivalent for Metrics as well, also every exporter should offer this helper to configure the span exporter class.", "author": "bogdandrutu", "createdAt": "2020-02-28T00:40:49Z", "path": "exporters/inmemory/src/main/java/io/opentelemetry/exporters/inmemory/InMemoryTracing.java", "diffHunk": "@@ -43,71 +45,59 @@\n  *\n  * @since 0.1.0\n  */\n-public final class InMemoryTracing {\n-  private final TracerSdkProvider tracerSdkProvider;\n-  private final InMemorySpanExporter exporter;\n-\n+@AutoValue\n+@Immutable\n+public abstract class InMemoryTracing {", "originalCommit": "c680dea09734c6e3b5a6da2eeb74c4b16049b334", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc2ODM5Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/947#discussion_r385768392", "bodyText": "Personally I think the name is fine, but if you manage to find a better name, I'm in ;)", "author": "carlosalberto", "createdAt": "2020-02-28T15:44:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1MTE0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgxMDYyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/947#discussion_r385810629", "bodyText": "I think this name works fine.", "author": "jkwatson", "createdAt": "2020-02-28T16:59:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1MTE0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3ODU3Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/947#discussion_r385878572", "bodyText": "Autovalue seems like a little bit of overkill for this, since we don't really care about equals/hashcode/tostring, but I'm not opposed to it if people like standardizing on it for simple immutable classes.", "author": "jkwatson", "createdAt": "2020-02-28T19:24:10Z", "path": "exporters/inmemory/src/main/java/io/opentelemetry/exporters/inmemory/InMemoryTracing.java", "diffHunk": "@@ -43,71 +45,59 @@\n  *\n  * @since 0.1.0\n  */\n-public final class InMemoryTracing {\n-  private final TracerSdkProvider tracerSdkProvider;\n-  private final InMemorySpanExporter exporter;\n-\n+@AutoValue", "originalCommit": "c680dea09734c6e3b5a6da2eeb74c4b16049b334", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxMzYxNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/947#discussion_r385913617", "bodyText": "I don't like writing all getters/setters variables, etc. Lazy :)", "author": "bogdandrutu", "createdAt": "2020-02-28T20:44:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3ODU3Mg=="}], "type": "inlineReview"}]}