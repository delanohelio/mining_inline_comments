{"pr_number": 2368, "pr_title": "Avoid spying the class under test.", "pr_createdAt": "2020-12-21T03:25:41Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368", "timeline": [{"oid": "1911bde6615a36c202ca1a092bf037fd2ef8abe9", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1911bde6615a36c202ca1a092bf037fd2ef8abe9", "message": "Avoid spying the class under test.", "committedDate": "2020-12-21T03:25:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5OTU3NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r546599575", "bodyText": "I like to use a prefix such as test_ for methods that are not only visible for testing but exist solely for testing.", "author": "Oberon00", "createdAt": "2020-12-21T09:30:59Z", "path": "sdk/metrics/src/main/java/io/opentelemetry/sdk/metrics/export/IntervalMetricReader.java", "diffHunk": "@@ -159,6 +159,11 @@ protected Builder fromConfigMap(\n       }\n       return this;\n     }\n+\n+    // Visible for testing\n+    long getExportIntervalMillis() {", "originalCommit": "1911bde6615a36c202ca1a092bf037fd2ef8abe9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMDM0MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r546620341", "bodyText": "I don't think I've ever done that but don't mind it either. Will wait for another vote and rename.", "author": "anuraaga", "createdAt": "2020-12-21T10:14:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5OTU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjYyMTk2OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r546621968", "bodyText": "No strong opinion here either. I just think it would be nice to mark the method as \"exists only for testing\" vs \"visibility extended for testing\".", "author": "Oberon00", "createdAt": "2020-12-21T10:17:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5OTU3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgwNDY0OA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r546804648", "bodyText": "rather than exposing a method, we can dig into the internals and keep the production code a bit cleaner. I can't say which is better or worse, but at least if we just dig into the internals, we've reduced a couple lines of production code and a discussion about naming those methods. ;)", "author": "jkwatson", "createdAt": "2020-12-21T16:31:16Z", "path": "exporters/otlp/metrics/src/test/java/io/opentelemetry/exporter/otlp/metrics/OtlpGrpcMetricExporterTest.java", "diffHunk": "@@ -70,11 +68,9 @@ void configTest() {\n     Properties options = new Properties();\n     options.put(\"otel.exporter.otlp.metric.timeout\", \"12\");\n     options.put(\"otel.exporter.otlp.insecure\", \"true\");\n-    OtlpGrpcMetricExporterBuilder config = OtlpGrpcMetricExporter.builder();\n-    OtlpGrpcMetricExporterBuilder spy = Mockito.spy(config);\n-    spy.readProperties(options);\n-    verify(spy).setDeadlineMs(12);\n-    verify(spy).setUseTls(false);\n+    OtlpGrpcMetricExporterBuilder config = OtlpGrpcMetricExporter.builder().readProperties(options);\n+    assertThat(config.getUseTls()).isFalse();", "originalCommit": "1911bde6615a36c202ca1a092bf037fd2ef8abe9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAzMTU4NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2368#discussion_r547031585", "bodyText": "Nice", "author": "anuraaga", "createdAt": "2020-12-22T02:27:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgwNDY0OA=="}], "type": "inlineReview"}, {"oid": "28b65242ffb53b3c52c6448fd66f28e11b755357", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/28b65242ffb53b3c52c6448fd66f28e11b755357", "message": "Less methods", "committedDate": "2020-12-22T02:27:36Z", "type": "commit"}]}