{"pr_number": 1846, "pr_title": "Automatically generate Semantic Convention attributes", "pr_createdAt": "2020-10-21T13:34:34Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846", "timeline": [{"oid": "a1e7fbac4f79c76993e05da4c75d97a93d93c94c", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/a1e7fbac4f79c76993e05da4c75d97a93d93c94c", "message": "Automatically generate Semantic Convention attributes", "committedDate": "2020-10-21T13:18:35Z", "type": "commit"}, {"oid": "8b230108cc8405f6135f2bac508c2f9dbd1fe826", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/8b230108cc8405f6135f2bac508c2f9dbd1fe826", "message": "Fix checkstyle", "committedDate": "2020-10-21T13:43:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMwMTQwNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#discussion_r509301407", "bodyText": "I think it should be relatively straightforward to generate this in gradle using e.g. https://docs.gradle.org/current/dsl/org.gradle.api.tasks.Exec.html. Then we would not have to check in this file.\nOn the minus side, we would then require contributors to have a recent Python 3 installed (actually Docker currently which makes it un-buildable on Windows \ud83e\udd14).\nIf we don't auto-generate the file, we should check during build that the file matches the generated output (does the tool support that for any generator currently or only markdown?)", "author": "Oberon00", "createdAt": "2020-10-21T13:49:20Z", "path": "api/src/main/java/io/opentelemetry/trace/attributes/SemanticAttributesV2.java", "diffHunk": "@@ -0,0 +1,1006 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.trace.attributes;\n+\n+import static io.opentelemetry.common.AttributeKey.booleanKey;\n+import static io.opentelemetry.common.AttributeKey.longKey;\n+import static io.opentelemetry.common.AttributeKey.stringKey;\n+\n+import io.opentelemetry.common.AttributeKey;\n+\n+// DO NOT EDIT, this is an Auto-generated file from /templates/SemanticAttributesV2.java.j2", "originalCommit": "8b230108cc8405f6135f2bac508c2f9dbd1fe826", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMwNDY5Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#discussion_r509304693", "bodyText": "We should pin this to a certain commit, or check out a release branch to have a latest 0.x version at least.", "author": "Oberon00", "createdAt": "2020-10-21T13:51:58Z", "path": "semantic_convention/generate.sh", "diffHunk": "@@ -0,0 +1,22 @@\n+#!/bin/bash\n+\n+DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+rm -rf opentelemetry-specification || true\n+git clone https://github.com/open-telemetry/opentelemetry-specification.git --depth 1", "originalCommit": "8b230108cc8405f6135f2bac508c2f9dbd1fe826", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcwNDU1NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#discussion_r509704555", "bodyText": "double?", "author": "Oberon00", "createdAt": "2020-10-21T21:16:13Z", "path": "semantic_convention/templates/SemanticAttributesV2.java.j2", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+\n+{%- macro to_java_type(type) -%}\n+  {%- if type == \"string\" -%}\n+    String\n+  {%- elif type == \"boolean\" -%}\n+    boolean\n+  {%- elif type == \"number\" -%}\n+    long", "originalCommit": "8b230108cc8405f6135f2bac508c2f9dbd1fe826", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk0NjY0MA==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/1846#discussion_r509946640", "bodyText": "Please see open-telemetry/build-tools#13", "author": "thisthat", "createdAt": "2020-10-22T07:43:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcwNDU1NQ=="}], "type": "inlineReview"}, {"oid": "1339da463d22a2d6071e23b37597bfadecaee17e", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/1339da463d22a2d6071e23b37597bfadecaee17e", "message": "Transition to automatically generated class", "committedDate": "2020-10-22T07:34:35Z", "type": "commit"}, {"oid": "586a4eec5d883c2e8b540c054b9eb878962e4abd", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/586a4eec5d883c2e8b540c054b9eb878962e4abd", "message": "Pin to specific commit", "committedDate": "2020-10-22T07:41:41Z", "type": "commit"}, {"oid": "7d1df65fbb724c4ce6431ae9559bb077dc304b79", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7d1df65fbb724c4ce6431ae9559bb077dc304b79", "message": "Move EXCEPTION_EVENT_NAME inside the template", "committedDate": "2020-10-23T07:23:25Z", "type": "commit"}]}