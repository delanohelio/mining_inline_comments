{"pr_number": 2044, "pr_title": "Allow registering ContextStorage wrappers with code to avoid requirin\u2026", "pr_createdAt": "2020-11-09T09:13:36Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java/pull/2044", "timeline": [{"oid": "7ba0d15c08d1557e64955320c084e0377179e63c", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/7ba0d15c08d1557e64955320c084e0377179e63c", "message": "Allow registering ContextStorage wrappers with code to avoid requiring SPI for listening to events.", "committedDate": "2020-11-09T09:10:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzMTQzNw==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2044#discussion_r519931437", "bodyText": "It probably doesn't matter too much, since this class isn't public, but exposing synchronized methods is generally a bad practice, as it could allow accidental deadlocking if someone synchronizes on this class.", "author": "jkwatson", "createdAt": "2020-11-09T16:10:58Z", "path": "context/src/main/java/io/opentelemetry/context/ContextStorageWrappers.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.context;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Function;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+/**\n+ * Holder of functions to wrap the used {@link ContextStorage}. Separate class from {@link\n+ * LazyStorage} to allow registering wrappers before initializing storage.\n+ */\n+final class ContextStorageWrappers {\n+\n+  private static final Logger log = Logger.getLogger(ContextStorageWrappers.class.getName());\n+\n+  private static boolean storageInitialized;\n+\n+  private static final List<Function<? super ContextStorage, ? extends ContextStorage>> wrappers =\n+      new ArrayList<>();\n+\n+  static synchronized void addWrapper(", "originalCommit": "7ba0d15c08d1557e64955320c084e0377179e63c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI5NTA0Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java/pull/2044#discussion_r520295046", "bodyText": "Yeah figured it's ok due to the privateness but went with consistency.", "author": "anuraaga", "createdAt": "2020-11-10T05:28:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzMTQzNw=="}], "type": "inlineReview"}, {"oid": "81f241b5518a3cb14bbe20b9991fd8ece3d90b2d", "url": "https://github.com/open-telemetry/opentelemetry-java/commit/81f241b5518a3cb14bbe20b9991fd8ece3d90b2d", "message": "Mutex", "committedDate": "2020-11-10T05:28:00Z", "type": "commit"}]}