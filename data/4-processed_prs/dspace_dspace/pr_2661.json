{"pr_number": 2661, "pr_title": "Fix issue with bulkedit.ignore-on-export parameter on DSpaceCSV", "pr_createdAt": "2020-02-07T11:11:46Z", "pr_url": "https://github.com/DSpace/DSpace/pull/2661", "timeline": [{"oid": "c7ba52f51a782d0a68348f3e73c6180cc66dcc54", "url": "https://github.com/DSpace/DSpace/commit/c7ba52f51a782d0a68348f3e73c6180cc66dcc54", "message": "[CST-2448] Fix issue with bulkedit.ignore-on-export parameter on DSpaceCSV", "committedDate": "2020-02-07T11:03:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1MTMzNQ==", "url": "https://github.com/DSpace/DSpace/pull/2661#discussion_r387351335", "bodyText": "Is this change strictly necessary? Looking at other usage of getArrayProperty(), the standard \"comma separated list\" seems to be the usual approach.\nSee existing usage, and the unit tests:\nl.put(\"sample.array\", \"itemA,itemB,itemC\");\n...\n// Pass in default value\narray = configurationService.getArrayProperty(\"sample.array\", new String[]{\"Hey\"});\n// Assert default value not used, since property exists\nassertEquals(3, array.length);\nThis is not a really big deal but as far as I can tell, this is an unnecessary change that deviates from the typical way multiple fields are configured in DSpace.", "author": "kshepherd", "createdAt": "2020-03-03T23:12:52Z", "path": "dspace/config/modules/bulkedit.cfg", "diffHunk": "@@ -20,8 +20,10 @@\n \n # Metadata elements to exclude when exporting via the user interfaces, or when using the\n # command line version and not using the -a (all) option.\n-# bulkedit.ignore-on-export = dc.date.accessioned, dc.date.available, \\\n-#                    dc.date.updated, dc.description.provenance\n+#bulkedit.ignore-on-export = dc.date.accessioned\n+#bulkedit.ignore-on-export = dc.date.available\n+#bulkedit.ignore-on-export = dc.date.updated\n+#bulkedit.ignore-on-export = dc.description.provenance", "originalCommit": "c7ba52f51a782d0a68348f3e73c6180cc66dcc54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3MjkzOQ==", "url": "https://github.com/DSpace/DSpace/pull/2661#discussion_r387672939", "bodyText": "No, multiple assignments are the proper way to express multiple values to Commons Configuration in a Properties configuration file.  The unwieldy old comma-list style only continues to work so long as the PropertiesConfiguration uses DefaultListDelimiterHandler.  I'm actually surprised that this works -- Commons Configuration API docs say that by default list splitting is disabled.  (Maybe that changed between CC 2.3 and 2.6.)\nWe should be taking these opportunities to normalize the expression of such lists, and removing our own list-parsing code where we find it.", "author": "mwoodiupui", "createdAt": "2020-03-04T13:42:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1MTMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc0MTk0NA==", "url": "https://github.com/DSpace/DSpace/pull/2661#discussion_r387741944", "bodyText": "@mwoodiupui is correct.  Multiple lines is perfectly valid in Apache Commons Configuration. You can also comma separate them, but sometimes multiple lines is a bit cleaner.\nSee our Configuration docs here which describes both approaches: https://wiki.lyrasis.org/display/DSDOC6x/Configuration+Reference#ConfigurationReference-SpecifyingMultipleValuesforProperties", "author": "tdonohue", "createdAt": "2020-03-04T15:29:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1MTMzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNzYyMg==", "url": "https://github.com/DSpace/DSpace/pull/2661#discussion_r387927622", "bodyText": "Apologies. I was just comparing it to the rest of DSpace configuration. I'll resolve this now, thanks", "author": "kshepherd", "createdAt": "2020-03-04T20:53:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1MTMzNQ=="}], "type": "inlineReview"}]}