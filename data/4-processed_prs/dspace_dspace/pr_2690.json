{"pr_number": 2690, "pr_title": "DS-4380:  Update XOAI (OAI-PMH) for full JDK11 compatibility", "pr_createdAt": "2020-02-24T16:40:22Z", "pr_url": "https://github.com/DSpace/DSpace/pull/2690", "timeline": [{"oid": "8cceea8f06fec0bf9df6f83f0641d8ef083537d9", "url": "https://github.com/DSpace/DSpace/commit/8cceea8f06fec0bf9df6f83f0641d8ef083537d9", "message": "Upgrade to XOAI 3.3.0 for JDK11 compatibility.", "committedDate": "2020-02-24T16:35:05Z", "type": "commit"}, {"oid": "d78f3c393b85e824e82262e9a2017ef8afd75cf6", "url": "https://github.com/DSpace/DSpace/commit/d78f3c393b85e824e82262e9a2017ef8afd75cf6", "message": "Minor refactor to make it easier to debug OAI Solr connection problems. Update to new config format", "committedDate": "2020-02-24T16:35:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwNzAyMw==", "url": "https://github.com/DSpace/DSpace/pull/2690#discussion_r383407023", "bodyText": "Switch to ConfigurationService?", "author": "mwoodiupui", "createdAt": "2020-02-24T17:29:05Z", "path": "dspace-oai/src/main/java/org/dspace/xoai/solr/DSpaceSolrServer.java", "diffHunk": "@@ -30,12 +30,12 @@ private DSpaceSolrServer() { }\n \n     public static SolrClient getServer() throws SolrServerException {\n         if (_server == null) {\n+            String serverUrl = ConfigurationManager.getProperty(\"oai.solr.url\");", "originalCommit": "d78f3c393b85e824e82262e9a2017ef8afd75cf6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwODg4MA==", "url": "https://github.com/DSpace/DSpace/pull/2690#discussion_r383408880", "bodyText": "Parameterize?", "author": "mwoodiupui", "createdAt": "2020-02-24T17:32:30Z", "path": "dspace-oai/src/main/java/org/dspace/xoai/solr/DSpaceSolrServer.java", "diffHunk": "@@ -30,12 +30,12 @@ private DSpaceSolrServer() { }\n \n     public static SolrClient getServer() throws SolrServerException {\n         if (_server == null) {\n+            String serverUrl = ConfigurationManager.getProperty(\"oai.solr.url\");\n             try {\n-                _server = new HttpSolrClient.Builder(\n-                    ConfigurationManager.getProperty(\"oai\", \"solr.url\")).build();\n-                log.debug(\"Solr Server Initialized\");\n+                _server = new HttpSolrClient.Builder(serverUrl).build();\n+                log.debug(\"OAI Solr Server Initialized\");\n             } catch (Exception e) {\n-                log.error(e.getMessage(), e);\n+                log.error(\"Could not initialize OAI Solr Server at \" + serverUrl , e);", "originalCommit": "d78f3c393b85e824e82262e9a2017ef8afd75cf6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQwODkyMQ==", "url": "https://github.com/DSpace/DSpace/pull/2690#discussion_r383408921", "bodyText": "Message could be parameterized:  log.error(\"Could not initializa OAI Solr Server at {}\", serverUrl, e);\nUnlikely to save many cycles, but it's a good habit to get into.", "author": "mwoodiupui", "createdAt": "2020-02-24T17:32:35Z", "path": "dspace-oai/src/main/java/org/dspace/xoai/services/impl/solr/DSpaceSolrServerResolver.java", "diffHunk": "@@ -26,11 +26,12 @@\n     @Override\n     public SolrClient getServer() throws SolrServerException {\n         if (server == null) {\n+            String serverUrl = configurationService.getProperty(\"oai.solr.url\");\n             try {\n-                server = new HttpSolrClient.Builder(configurationService.getProperty(\"oai\", \"solr.url\")).build();\n-                log.debug(\"Solr Server Initialized\");\n+                server = new HttpSolrClient.Builder(serverUrl).build();\n+                log.debug(\"OAI Solr Server Initialized\");\n             } catch (Exception e) {\n-                log.error(e.getMessage(), e);\n+                log.error(\"Could not initialize OAI Solr Server at \" + serverUrl , e);", "originalCommit": "d78f3c393b85e824e82262e9a2017ef8afd75cf6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}