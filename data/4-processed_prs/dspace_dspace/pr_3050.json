{"pr_number": 3050, "pr_title": "Fix pagination issue in a couple of search endpoints", "pr_createdAt": "2020-11-12T10:49:10Z", "pr_url": "https://github.com/DSpace/DSpace/pull/3050", "timeline": [{"oid": "6f611e6868133f4882055af288b3b8a78ef78c4f", "url": "https://github.com/DSpace/DSpace/commit/6f611e6868133f4882055af288b3b8a78ef78c4f", "message": "added ITs that prove the wrong pagination of collections", "committedDate": "2020-11-11T10:49:37Z", "type": "commit"}, {"oid": "3960e57a1cb0ff9c62073464487405d3cbd3ca78", "url": "https://github.com/DSpace/DSpace/commit/3960e57a1cb0ff9c62073464487405d3cbd3ca78", "message": "fixed wrong pagination of collections", "committedDate": "2020-11-11T10:52:25Z", "type": "commit"}, {"oid": "50464dc216b841a880a4462aeb67f0cb83ce060a", "url": "https://github.com/DSpace/DSpace/commit/50464dc216b841a880a4462aeb67f0cb83ce060a", "message": "added test that proves the wrong pagination of a search method of GroupRest endpoint", "committedDate": "2020-11-11T11:26:18Z", "type": "commit"}, {"oid": "35b98db7a8bfc232ebf3ea525ec35dfc60a8be1f", "url": "https://github.com/DSpace/DSpace/commit/35b98db7a8bfc232ebf3ea525ec35dfc60a8be1f", "message": "fixed wrong pagination of a search method byMetadata of GroupRest endpoint", "committedDate": "2020-11-11T11:29:25Z", "type": "commit"}, {"oid": "b99f136aa3a2c56ad2e4b82673d42dd62e5d001f", "url": "https://github.com/DSpace/DSpace/commit/b99f136aa3a2c56ad2e4b82673d42dd62e5d001f", "message": "added test that proves the wrong pagination of the search method byMetadata of EPersonRest endpoint", "committedDate": "2020-11-11T11:55:43Z", "type": "commit"}, {"oid": "aeb6f941d3091a64724fc481a42c9a6bda60d110", "url": "https://github.com/DSpace/DSpace/commit/aeb6f941d3091a64724fc481a42c9a6bda60d110", "message": "fixed wrong pagination of the search method byMetadata of EPersonRest endpoint", "committedDate": "2020-11-11T11:57:41Z", "type": "commit"}, {"oid": "9746b5ea14e0592a1ee9b23e1bec1ff2c2b58db4", "url": "https://github.com/DSpace/DSpace/commit/9746b5ea14e0592a1ee9b23e1bec1ff2c2b58db4", "message": "added tests that prove the wrong pagination of the search methods of ResourcePolicyRest endpoint", "committedDate": "2020-11-11T16:00:18Z", "type": "commit"}, {"oid": "0f3186ce41dab9badd2a66772b1c77f15bed4ece", "url": "https://github.com/DSpace/DSpace/commit/0f3186ce41dab9badd2a66772b1c77f15bed4ece", "message": "fixed wrong pagination of the search methods of ResourcePolicyRest endpoint", "committedDate": "2020-11-11T16:01:31Z", "type": "commit"}, {"oid": "a0af4b9e465880e7fc0acb22a6ff73d2226fa1fa", "url": "https://github.com/DSpace/DSpace/commit/a0af4b9e465880e7fc0acb22a6ff73d2226fa1fa", "message": "update tests", "committedDate": "2020-11-12T10:14:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE2MzY4NA==", "url": "https://github.com/DSpace/DSpace/pull/3050#discussion_r522163684", "bodyText": "you can use hasSize(2) to avoid to check for what should be not present, this would make the test shorter and easier to read. There are other method in this class that can benefit of the same change", "author": "abollini", "createdAt": "2020-11-12T14:50:26Z", "path": "dspace-server-webapp/src/test/java/org/dspace/app/rest/CollectionRestRepositoryIT.java", "diffHunk": "@@ -1793,4 +1793,393 @@ public void findAllWithHiddenMetadataTest() throws Exception {\n                 .andExpect(jsonPath(\"$.metadata.['dc.description.provenance']\").doesNotExist());\n \n     }\n+\n+    @Test\n+    public void findAuthorizedCollectionsPaginationTest() throws Exception {\n+        context.turnOffAuthorisationSystem();\n+        parentCommunity = CommunityBuilder.createCommunity(context)\n+                                          .withName(\"Parent Community\")\n+                                          .build();\n+        Community child1 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community\")\n+                                           .build();\n+        Community child2 = CommunityBuilder.createSubCommunity(context, parentCommunity)\n+                                           .withName(\"Sub Community Two\")\n+                                           .build();\n+        Collection col1 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 1\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+        Collection col2 = CollectionBuilder.createCollection(context, child2)\n+                                           .withName(\"Collection 2\")\n+                                           .build();\n+        Collection col3 = CollectionBuilder.createCollection(context, parentCommunity)\n+                                           .withName(\"Collection 3\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col4 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 4\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col5 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 5\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col6 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 6\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+\n+        Collection col7 = CollectionBuilder.createCollection(context, child1)\n+                                           .withName(\"Collection 7\")\n+                                           .withSubmitterGroup(eperson)\n+                                           .build();\n+        context.restoreAuthSystemState();\n+\n+        String tokenAdmin = getAuthToken(admin.getEmail(), password);\n+        getClient(tokenAdmin).perform(get(\"/api/core/collections/search/findSubmitAuthorized\")\n+                 .param(\"page\", \"0\")\n+                 .param(\"size\", \"2\"))\n+                 .andExpect(status().isOk())\n+                 .andExpect(content().contentType(contentType))\n+                 .andExpect(jsonPath(\"$._embedded.collections\", Matchers.containsInAnyOrder(\n+                            CollectionMatcher.matchProperties(col1.getName(), col1.getID(), col1.getHandle()),\n+                            CollectionMatcher.matchProperties(col2.getName(), col2.getID(), col2.getHandle())\n+                            )))\n+                 .andExpect(jsonPath(\"$._embedded.collections\", Matchers.not(Matchers.anyOf(\n+                                  is(CollectionMatcher.matchProperties(col3.getName(), col3.getID(), col3.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col4.getName(), col4.getID(), col4.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col5.getName(), col5.getID(), col5.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col6.getName(), col6.getID(), col6.getHandle())),\n+                                  is(CollectionMatcher.matchProperties(col7.getName(), col7.getID(), col7.getHandle()))\n+                                  ))))\n+                 .andExpect(jsonPath(\"$.page.size\", is(2)))\n+                 .andExpect(jsonPath(\"$.page.totalPages\", is(4)))\n+                 .andExpect(jsonPath(\"$.page.number\", is(0)))\n+                 .andExpect(jsonPath(\"$.page.totalElements\", is(7)));\n+\n+        getClient(tokenAdmin).perform(get(\"/api/core/collections/search/findSubmitAuthorized\")\n+                .param(\"page\", \"1\")\n+                .param(\"size\", \"2\"))\n+                .andExpect(status().isOk())\n+                .andExpect(content().contentType(contentType))\n+                .andExpect(jsonPath(\"$._embedded.collections\", Matchers.containsInAnyOrder(\n+                           CollectionMatcher.matchProperties(col3.getName(), col3.getID(), col3.getHandle()),\n+                           CollectionMatcher.matchProperties(col4.getName(), col4.getID(), col4.getHandle())\n+                           )))\n+                .andExpect(jsonPath(\"$._embedded.collections\", Matchers.not(Matchers.anyOf(", "originalCommit": "a0af4b9e465880e7fc0acb22a6ff73d2226fa1fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ec025828ff9a7371f6c31a936776c588bdd88dfb", "url": "https://github.com/DSpace/DSpace/commit/ec025828ff9a7371f6c31a936776c588bdd88dfb", "message": "minor update of tests", "committedDate": "2020-11-13T10:09:43Z", "type": "commit"}]}