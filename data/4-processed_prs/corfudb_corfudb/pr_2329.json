{"pr_number": 2329, "pr_title": "Remove Parent Filesystem read-only check for LogUnitServer", "pr_createdAt": "2020-01-27T23:03:27Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2329", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzNDY0Mw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r372534643", "bodyText": "We skip this check if it is MAC os by checking OS property.", "author": "xiaoqin2012", "createdAt": "2020-01-29T17:48:06Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/log/StreamLogFiles.java", "diffHunk": "@@ -168,10 +168,6 @@ private long initStreamLogDirectory() {\n             String corfuDir = logDir.getParent().toString();\n             FileStore corfuDirBackend = Files.getFileStore(Paths.get(corfuDir));\n \n-            if (corfuDirBackend.isReadOnly()) {", "originalCommit": "47df9b05c40225e44a0d456ba6847c986b27f6cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcyMjQxNg==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r372722416", "bodyText": "We could but it would be better to avoid adding platform specific code as far as possible.", "author": "hisundar", "createdAt": "2020-01-30T01:40:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzNDY0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI0MDcyNQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r373240725", "bodyText": "If we don't do this check on Linux, and the file system is really in read-only mode. The following call new File(), it will throw an IO.readonly.exception. it is better to handle it.", "author": "xiaoqin2012", "createdAt": "2020-01-30T23:02:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzNDY0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMjMwNQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r373322305", "bodyText": "if the new File() throws an IO.readonly.exception that is also acceptable. Either case the objective of preventing a LogUnitServer from coming up would be accomplished, right?", "author": "hisundar", "createdAt": "2020-01-31T05:35:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUzNDY0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MzAwMA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r373253000", "bodyText": "Just saw this comment in JDK source code:\nhttps://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/io/File.java#L780\nLooks like the parent filesystem check may still be necessary  in some cases in addition to the directory check here, though I understand it's still not 100% guarantee.\nCan we try to increase JVM privilege to overcome this issue? Or use another directory check API with stronger guarantee?", "author": "WenbinZhu", "createdAt": "2020-01-30T23:43:26Z", "path": "infrastructure/src/main/java/org/corfudb/infrastructure/log/StreamLogFiles.java", "diffHunk": "@@ -168,10 +168,6 @@ private long initStreamLogDirectory() {\n             String corfuDir = logDir.getParent().toString();\n             FileStore corfuDirBackend = Files.getFileStore(Paths.get(corfuDir));\n \n-            if (corfuDirBackend.isReadOnly()) {\n-                throw new LogUnitException(\"Cannot start Corfu on a read-only filesystem:\" + corfuDir);\n-            }\n-\n             File corfuDirFile = new File(corfuDir);\n             if (!corfuDirFile.canWrite()) {", "originalCommit": "7090990c7785877c98ab47bc7c96bbbd71614e19", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMjY4NA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2329#discussion_r373322684", "bodyText": "From the Java doc..\nOn some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that are marked read-only.\nWe are only interested in capability to write to a file. If the permissions allow modification of the file, that is going to be good enough for LogUnitServer.\nBesides this is a small best effort check. It would be quite difficult to cover all the possibilities of file based permissions mismatch that can occur.", "author": "hisundar", "createdAt": "2020-01-31T05:37:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1MzAwMA=="}], "type": "inlineReview"}, {"oid": "fad91140c32494675700a76e3e904c4fa47a104c", "url": "https://github.com/CorfuDB/CorfuDB/commit/fad91140c32494675700a76e3e904c4fa47a104c", "message": "Remove Parent Filesystem read-only check for LogUnitServer\n\nStarting with Mac OS X 10.15 the parent filesystem returned\nby the System.getProperty(\"java.io.tmpdir\") is marked as\nread-only. However this does not mean that the returned\ntemporary directory itself is read-only.\nSo given that this can happen in production as well,\nremoving the redundant parent filesystem read-only\ncheck would prevent false panics and allow IT tests\nto run on Mac as well.", "committedDate": "2020-02-04T20:33:49Z", "type": "commit"}, {"oid": "fad91140c32494675700a76e3e904c4fa47a104c", "url": "https://github.com/CorfuDB/CorfuDB/commit/fad91140c32494675700a76e3e904c4fa47a104c", "message": "Remove Parent Filesystem read-only check for LogUnitServer\n\nStarting with Mac OS X 10.15 the parent filesystem returned\nby the System.getProperty(\"java.io.tmpdir\") is marked as\nread-only. However this does not mean that the returned\ntemporary directory itself is read-only.\nSo given that this can happen in production as well,\nremoving the redundant parent filesystem read-only\ncheck would prevent false panics and allow IT tests\nto run on Mac as well.", "committedDate": "2020-02-04T20:33:49Z", "type": "forcePushed"}, {"oid": "e4fad678e9fb7ab4ecac72d5fcc25e06e512c2b0", "url": "https://github.com/CorfuDB/CorfuDB/commit/e4fad678e9fb7ab4ecac72d5fcc25e06e512c2b0", "message": "Merge branch 'master' into catalinaLogUnitFix", "committedDate": "2020-02-04T22:03:03Z", "type": "commit"}]}