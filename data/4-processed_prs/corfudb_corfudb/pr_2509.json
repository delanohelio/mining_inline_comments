{"pr_number": 2509, "pr_title": "CorfuStore: retry internal txns on openTable", "pr_createdAt": "2020-04-17T00:00:22Z", "pr_url": "https://github.com/CorfuDB/CorfuDB/pull/2509", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYwOTE4NQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r410609185", "bodyText": "Is it possible that before calling TXEnd(), while doing put, it will throw a transaction abort exception and the tx.end() is never called?", "author": "xiaoqin2012", "createdAt": "2020-04-18T04:18:47Z", "path": "runtime/src/main/java/org/corfudb/runtime/view/TableRegistry.java", "diffHunk": "@@ -178,17 +179,21 @@ void registerTable(@Nonnull String namespace,\n                 log.debug(\"registerTable: new schema:\"+tableDescriptors.getFileDescriptorsMap());\n             }\n         }\n-        try {\n-            this.runtime.getObjectsView().TXBuild().type(TransactionType.OPTIMISTIC).build().begin();\n-            if (hasSchemaChanged) {\n-                this.registryTable.put(tableNameKey,\n-                        new CorfuRecord<>(tableDescriptors, metadataBuilder.build()));\n-            } else {\n-                this.registryTable.putIfAbsent(tableNameKey,\n-                        new CorfuRecord<>(tableDescriptors, metadataBuilder.build()));\n+        int numRetries = 3; // Since this is an internal transaction, retry a few times before giving up.\n+        while (numRetries-- > 0) {\n+            try {\n+                this.runtime.getObjectsView().TXBuild().type(TransactionType.OPTIMISTIC).build().begin();\n+                if (hasSchemaChanged) {\n+                    this.registryTable.put(tableNameKey,\n+                            new CorfuRecord<>(tableDescriptors, metadataBuilder.build()));\n+                } else {\n+                    this.registryTable.putIfAbsent(tableNameKey,\n+                            new CorfuRecord<>(tableDescriptors, metadataBuilder.build()));\n+                }\n+                this.runtime.getObjectsView().TXEnd();", "originalCommit": "4f748641536632cb5c2dc9f7d090859534d4dca0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyNjM3OA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r413426378", "bodyText": "No, we can't throw transaction abort exceptions until a transaction ends because only when a transaction ends will we have all the keys whose conflicts need resolution.", "author": "hisundar", "createdAt": "2020-04-23T00:38:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYwOTE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzMDQwNw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r413430407", "bodyText": "Ok. How about other exceptions? If before call TXEnd(), the above code throws other exceptions but not transaction abort exception, the the TXEnd() will not be called, is it safe to start a transaction without a TXEnd() call? Also after 3 retries, if it still catch a transaction abort exception, it should throw it, right?", "author": "xiaoqin2012", "createdAt": "2020-04-23T00:50:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYwOTE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MjA2Nw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r414962067", "bodyText": "Only TransactionAborted exception is caught and retried which is not thrown before TXEnd() is called as of this codebase.\nIf there are other exceptions then we will not catch or retry them, it will go up to caller as usual.", "author": "hisundar", "createdAt": "2020-04-25T03:03:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYwOTE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk3MTU2OA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r414971568", "bodyText": "Two issues:\n\nThe original code, always execute TXEnd() as it is in the finally. So with any exception, the TXEnd() will be executed.\nIn the change, if transactionAborted happens three times after retry, the exception should be thrown again to the caller.", "author": "xiaoqin2012", "createdAt": "2020-04-25T04:03:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYwOTE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk5NjA0Ng==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r414996046", "bodyText": "Calling TXEnd() on an other exception that occurred before it would be as undefined/wrong behavior as calling TXEnd() in the finally block - (one might end up committing a transaction that was supposed to fail). I suppose it's better to abort the transaction in that case to prevent corruption. Let me make that change instead.\nSure, while this will almost never occur in real life because the transaction abort itself is rare, I suppose it should be cleaner to re-throw the exception.", "author": "hisundar", "createdAt": "2020-04-25T06:35:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYwOTE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA3Mzg0Mw==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r416073843", "bodyText": "Addressed 1. and 2. thanks", "author": "hisundar", "createdAt": "2020-04-27T19:04:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYwOTE4NQ=="}], "type": "inlineReview"}, {"oid": "1b71a80b4f13cb22e5f5f1565cddaef526fda67b", "url": "https://github.com/CorfuDB/CorfuDB/commit/1b71a80b4f13cb22e5f5f1565cddaef526fda67b", "message": "CorfuStore: retry internal txns on openTable", "committedDate": "2020-04-24T21:34:00Z", "type": "forcePushed"}, {"oid": "929617d73fec8dd9b350b027c3e31c2b61f6b7ac", "url": "https://github.com/CorfuDB/CorfuDB/commit/929617d73fec8dd9b350b027c3e31c2b61f6b7ac", "message": "CorfuStore: retry internal txns on openTable\n\nClients don't mind retrying transactions they started\nbut prefer internal transactions not started by them\nto be retried automatically.\nopenTable() transaction can abort if multiple nodes\nare comming up at the exact same time, so retrying\nwould be a safe operation.", "committedDate": "2020-04-25T06:34:10Z", "type": "commit"}, {"oid": "929617d73fec8dd9b350b027c3e31c2b61f6b7ac", "url": "https://github.com/CorfuDB/CorfuDB/commit/929617d73fec8dd9b350b027c3e31c2b61f6b7ac", "message": "CorfuStore: retry internal txns on openTable\n\nClients don't mind retrying transactions they started\nbut prefer internal transactions not started by them\nto be retried automatically.\nopenTable() transaction can abort if multiple nodes\nare comming up at the exact same time, so retrying\nwould be a safe operation.", "committedDate": "2020-04-25T06:34:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA1MzYyOQ==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r416053629", "bodyText": "Issue found: JUnit tests should include assert() or fail()", "author": "corfudb-bot", "createdAt": "2020-04-27T18:33:59Z", "path": "test/src/test/java/org/corfudb/runtime/collections/CorfuStoreTest.java", "diffHunk": "@@ -282,6 +283,30 @@ public void checkMetadataTransactions() throws Exception {\n         }\n     }\n \n+    /**\n+     * Demonstrates that opening same table from multiple threads will retry internal transactions\n+     *\n+     * @throws Exception\n+     */\n+    @Test\n+    public void checkOpenRetriesTXN() throws Exception {", "originalCommit": "929617d73fec8dd9b350b027c3e31c2b61f6b7ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA1MzY0MA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r416053640", "bodyText": "Issue found: Avoid unused imports such as 'org.corfudb.runtime.exceptions.TransactionAbortedException'", "author": "corfudb-bot", "createdAt": "2020-04-27T18:34:00Z", "path": "test/src/test/java/org/corfudb/runtime/collections/CorfuStoreTest.java", "diffHunk": "@@ -11,6 +11,7 @@\n import org.corfudb.runtime.CorfuRuntime;\n import org.corfudb.runtime.CorfuStoreMetadata;\n import org.corfudb.runtime.CorfuStoreMetadata.Timestamp;\n+import org.corfudb.runtime.exceptions.TransactionAbortedException;", "originalCommit": "929617d73fec8dd9b350b027c3e31c2b61f6b7ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA2MDE5MA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r416060190", "bodyText": "nit - please remove this import", "author": "pankti-m", "createdAt": "2020-04-27T18:43:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA1MzY0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA3MzUxNA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r416073514", "bodyText": "will be removing this on the next patch.. thanks", "author": "hisundar", "createdAt": "2020-04-27T19:03:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA1MzY0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA1MzY2MA==", "url": "https://github.com/CorfuDB/CorfuDB/pull/2509#discussion_r416053660", "bodyText": "Issue found: Unused import - org.corfudb.runtime.exceptions.TransactionAbortedException.", "author": "corfudb-bot", "createdAt": "2020-04-27T18:34:01Z", "path": "test/src/test/java/org/corfudb/runtime/collections/CorfuStoreTest.java", "diffHunk": "@@ -11,6 +11,7 @@\n import org.corfudb.runtime.CorfuRuntime;\n import org.corfudb.runtime.CorfuStoreMetadata;\n import org.corfudb.runtime.CorfuStoreMetadata.Timestamp;\n+import org.corfudb.runtime.exceptions.TransactionAbortedException;", "originalCommit": "929617d73fec8dd9b350b027c3e31c2b61f6b7ac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}