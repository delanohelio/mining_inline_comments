{"pr_number": 1207, "pr_title": "lock jar file when writing to avoid multiple jvm override him", "pr_createdAt": "2020-05-27T16:33:31Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1207", "timeline": [{"oid": "ceeba8a6394430912abaf6de54497d2580cc431c", "url": "https://github.com/elastic/apm-agent-java/commit/ceeba8a6394430912abaf6de54497d2580cc431c", "message": "lock jar file when writing to avoid multiple jvm override him", "committedDate": "2020-05-27T16:40:29Z", "type": "commit"}, {"oid": "ceeba8a6394430912abaf6de54497d2580cc431c", "url": "https://github.com/elastic/apm-agent-java/commit/ceeba8a6394430912abaf6de54497d2580cc431c", "message": "lock jar file when writing to avoid multiple jvm override him", "committedDate": "2020-05-27T16:40:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1MzA4Mg==", "url": "https://github.com/elastic/apm-agent-java/pull/1207#discussion_r431653082", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    try(FileLock ignored = channel.lock()) {\n          \n          \n            \n                                    try (FileLock ignored = channel.lock()) {", "author": "felixbarny", "createdAt": "2020-05-28T08:03:08Z", "path": "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java", "diffHunk": "@@ -190,10 +192,17 @@ private static File getAgentJarFile() {\n                 String hash = md5Hash(ElasticApmAttacher.class.getResourceAsStream(\"/elastic-apm-agent.jar\"));\n                 File tempAgentJar = new File(System.getProperty(\"java.io.tmpdir\"), \"elastic-apm-agent-\" + hash + \".jar\");\n                 if (!tempAgentJar.exists()) {\n-                    try (OutputStream out = new FileOutputStream(tempAgentJar)) {\n-                        byte[] buffer = new byte[1024];\n-                        for (int length; (length = agentJar.read(buffer)) != -1;) {\n-                            out.write(buffer, 0, length);\n+                    try (FileOutputStream out = new FileOutputStream(tempAgentJar)) {\n+                        FileChannel channel = out.getChannel();\n+                        // If multiple JVM start on same compute, they can write in same file\n+                        // and this file will be corrupted.\n+                        try(FileLock ignored = channel.lock()) {", "originalCommit": "ceeba8a6394430912abaf6de54497d2580cc431c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "abb9ac3f3a600b3ce3f710652d544ad604a241a7", "url": "https://github.com/elastic/apm-agent-java/commit/abb9ac3f3a600b3ce3f710652d544ad604a241a7", "message": "Update apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java\n\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>", "committedDate": "2020-05-28T08:43:58Z", "type": "commit"}, {"oid": "f7892022cba6fd6b5aa9e85af6c0477712c7d1fd", "url": "https://github.com/elastic/apm-agent-java/commit/f7892022cba6fd6b5aa9e85af6c0477712c7d1fd", "message": "same fix for IOUtils", "committedDate": "2020-05-28T08:52:55Z", "type": "commit"}, {"oid": "4207cb658f7a9d20788b4a9582a9b8f1007e6aeb", "url": "https://github.com/elastic/apm-agent-java/commit/4207cb658f7a9d20788b4a9582a9b8f1007e6aeb", "message": "fix IOUtils to be sure file is correctly done", "committedDate": "2020-05-28T22:32:28Z", "type": "commit"}, {"oid": "87a7d60ac290d5a0cc49d8cf018642eef921e6a8", "url": "https://github.com/elastic/apm-agent-java/commit/87a7d60ac290d5a0cc49d8cf018642eef921e6a8", "message": "synchronized method for multiple thread ask for same resource creation", "committedDate": "2020-05-29T12:43:30Z", "type": "commit"}, {"oid": "87a7d60ac290d5a0cc49d8cf018642eef921e6a8", "url": "https://github.com/elastic/apm-agent-java/commit/87a7d60ac290d5a0cc49d8cf018642eef921e6a8", "message": "synchronized method for multiple thread ask for same resource creation", "committedDate": "2020-05-29T12:43:30Z", "type": "forcePushed"}]}