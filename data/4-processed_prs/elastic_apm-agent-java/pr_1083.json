{"pr_number": 1083, "pr_title": "Add API keys support  for backend authentication", "pr_createdAt": "2020-03-12T08:55:30Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1083", "timeline": [{"oid": "efc95399815cfe895f55b62d2cf47a230292f97f", "url": "https://github.com/elastic/apm-agent-java/commit/efc95399815cfe895f55b62d2cf47a230292f97f", "message": "add shared specs for api keys", "committedDate": "2020-03-11T15:03:24Z", "type": "commit"}, {"oid": "3a6064866cbc565d65bc776c4c02d5d6c421356d", "url": "https://github.com/elastic/apm-agent-java/commit/3a6064866cbc565d65bc776c4c02d5d6c421356d", "message": "add more steps, but still nothing impl. yet", "committedDate": "2020-03-12T08:47:36Z", "type": "commit"}, {"oid": "96a47202a8aec390a226fa084425bc1e7d284577", "url": "https://github.com/elastic/apm-agent-java/commit/96a47202a8aec390a226fa084425bc1e7d284577", "message": "add test and implementation", "committedDate": "2020-03-12T16:44:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3NTg0MA==", "url": "https://github.com/elastic/apm-agent-java/pull/1083#discussion_r392175840", "bodyText": "works fine as is but you could alternatively do SpyConfiguration.createSpyConfig().getConfig(ReporterConfiguration.class);.\nThis lets you avoid having to re-specify the default values (the just required to avoid NPEs step)", "author": "felixbarny", "createdAt": "2020-03-13T11:35:32Z", "path": "apm-agent-core/src/test/java/specs/ApiKeysStepsDefinitions.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package specs;\n+\n+import co.elastic.apm.agent.configuration.converter.TimeDuration;\n+import co.elastic.apm.agent.report.ApmServerClient;\n+import co.elastic.apm.agent.report.HttpUtils;\n+import co.elastic.apm.agent.report.ReporterConfiguration;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.core.WireMockConfiguration;\n+import com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer;\n+import io.cucumber.java.After;\n+import io.cucumber.java.Before;\n+import io.cucumber.java.en.And;\n+import io.cucumber.java.en.Given;\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+import org.stagemonitor.configuration.ConfigurationOption;\n+\n+import javax.annotation.Nullable;\n+import java.io.IOException;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.Collections;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Fail.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class ApiKeysStepsDefinitions {\n+\n+    // those constants should be provided by the gherkin test, not using hard-coded values\n+    // as it would require to update the test definition, we'll keep it as-is for now.\n+    private static final String SECRET_TOKEN = \"secr3tT0ken\";\n+    private static final String API_KEY = \"@p1Key\";\n+\n+    // so far, only reporter and it's configuration is being tested\n+    private ReporterConfiguration configuration = null;\n+\n+    private WireMockServer server = new WireMockServer(WireMockConfiguration.options()\n+        .extensions(new ResponseTemplateTransformer(false))\n+        .dynamicPort());\n+\n+    @Before\n+    public void init() {\n+        server.stubFor(get(urlEqualTo(\"/\"))\n+            .willReturn(aResponse()\n+                .withTransformers(\"response-template\")\n+                // just send back auth header (if any) for easy parsing on client side\n+                .withBody(\"{{request.headers.Authorization}}\")));\n+\n+        server.start();\n+    }\n+\n+    @After\n+    public void cleanup() {\n+        server.stop();\n+    }\n+\n+    // Init\n+\n+    @Given(\"an agent\")\n+    public void initAgent() {\n+        // we just initialize configuration as reporter is initialized lazily\n+        configuration = mock(ReporterConfiguration.class);", "originalCommit": "96a47202a8aec390a226fa084425bc1e7d284577", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIwMjkxNQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1083#discussion_r392202915", "bodyText": "Nice, I never took time to investigate differences between spies and mocks in mockito, now it's more clear :-)", "author": "SylvainJuge", "createdAt": "2020-03-13T12:40:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3NTg0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3NzIwMw==", "url": "https://github.com/elastic/apm-agent-java/pull/1083#discussion_r392177203", "bodyText": "The step definitions look very nice and clean!", "author": "felixbarny", "createdAt": "2020-03-13T11:38:54Z", "path": "apm-agent-core/src/test/java/specs/ApiKeysStepsDefinitions.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package specs;\n+\n+import co.elastic.apm.agent.configuration.converter.TimeDuration;\n+import co.elastic.apm.agent.report.ApmServerClient;\n+import co.elastic.apm.agent.report.HttpUtils;\n+import co.elastic.apm.agent.report.ReporterConfiguration;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.core.WireMockConfiguration;\n+import com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer;\n+import io.cucumber.java.After;\n+import io.cucumber.java.Before;\n+import io.cucumber.java.en.And;\n+import io.cucumber.java.en.Given;\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+import org.stagemonitor.configuration.ConfigurationOption;\n+\n+import javax.annotation.Nullable;\n+import java.io.IOException;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.Collections;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Fail.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class ApiKeysStepsDefinitions {", "originalCommit": "96a47202a8aec390a226fa084425bc1e7d284577", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIwNDExOQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1083#discussion_r392204119", "bodyText": "Yes, I like it too, however I feel that the shared spec we could be further improved to remove similar and not explicit statements, I'll open another PR for this.", "author": "SylvainJuge", "createdAt": "2020-03-13T12:43:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3NzIwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkyOTI4MQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1083#discussion_r392929281", "bodyText": "The PR has already been merged on shared spec improvement. elastic/apm#226", "author": "SylvainJuge", "createdAt": "2020-03-16T10:44:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3NzIwMw=="}], "type": "inlineReview"}, {"oid": "3a4f04e0e9a626266ebe0354ed5a64efb9192375", "url": "https://github.com/elastic/apm-agent-java/commit/3a4f04e0e9a626266ebe0354ed5a64efb9192375", "message": "update changelog & doc", "committedDate": "2020-03-13T12:36:25Z", "type": "commit"}, {"oid": "b8865a092c24ae40c35453e8bef70117edbc261e", "url": "https://github.com/elastic/apm-agent-java/commit/b8865a092c24ae40c35453e8bef70117edbc261e", "message": "replace mock with a spy to benefit from defaults", "committedDate": "2020-03-13T12:43:49Z", "type": "commit"}, {"oid": "d0d7a78b24c8c61c37f42c283ce044bdec3e22dc", "url": "https://github.com/elastic/apm-agent-java/commit/d0d7a78b24c8c61c37f42c283ce044bdec3e22dc", "message": "Merge branch 'master' into add-licia-keys", "committedDate": "2020-03-13T12:45:15Z", "type": "commit"}, {"oid": "cf17fc1bf57b6f610a356c24b2d29dcd820b81b0", "url": "https://github.com/elastic/apm-agent-java/commit/cf17fc1bf57b6f610a356c24b2d29dcd820b81b0", "message": "fix typo on maven profile name", "committedDate": "2020-03-13T13:48:12Z", "type": "commit"}, {"oid": "9263a4fd421896dd70438eeb7459bebd08dd6265", "url": "https://github.com/elastic/apm-agent-java/commit/9263a4fd421896dd70438eeb7459bebd08dd6265", "message": "update after improvement on API keys spec", "committedDate": "2020-03-13T14:17:42Z", "type": "commit"}, {"oid": "3a254a9fef1a656fa911928e89455b35a8a81af1", "url": "https://github.com/elastic/apm-agent-java/commit/3a254a9fef1a656fa911928e89455b35a8a81af1", "message": "update shared specs on CI & ensure test fail if mismatch", "committedDate": "2020-03-13T16:31:42Z", "type": "commit"}]}