{"pr_number": 1262, "pr_title": "Delay init by default in Tomcat and JBoss, only once", "pr_createdAt": "2020-06-30T08:02:48Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1262", "timeline": [{"oid": "3c5c972bf48090a6996c2cfd2275b26df00d51da", "url": "https://github.com/elastic/apm-agent-java/commit/3c5c972bf48090a6996c2cfd2275b26df00d51da", "message": "Delay init only once", "committedDate": "2020-06-30T08:01:09Z", "type": "commit"}, {"oid": "91d2af7039d2f32cd29ad4a29276bc4e49175813", "url": "https://github.com/elastic/apm-agent-java/commit/91d2af7039d2f32cd29ad4a29276bc4e49175813", "message": "Merge remote-tracking branch 'upstream/master' into delay-init-once-only", "committedDate": "2020-07-01T12:47:49Z", "type": "commit"}, {"oid": "a2ae318da0acbd3a7ec361f112218b3f0672d57f", "url": "https://github.com/elastic/apm-agent-java/commit/a2ae318da0acbd3a7ec361f112218b3f0672d57f", "message": "Delay init when starting Tomcat using premain", "committedDate": "2020-07-01T14:51:39Z", "type": "commit"}, {"oid": "437615e2c56f0f73a3a38c6738d2e31369b04212", "url": "https://github.com/elastic/apm-agent-java/commit/437615e2c56f0f73a3a38c6738d2e31369b04212", "message": "Merge remote-tracking branch 'upstream/master' into delay-init-once-only", "committedDate": "2020-07-02T06:10:48Z", "type": "commit"}, {"oid": "8652cdd9a801e5d4fe7748269f6e1fd92ea63bdb", "url": "https://github.com/elastic/apm-agent-java/commit/8652cdd9a801e5d4fe7748269f6e1fd92ea63bdb", "message": "Fixing Scala test", "committedDate": "2020-07-02T06:13:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyODgyNQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1262#discussion_r448428825", "bodyText": "Add an info log here", "author": "felixbarny", "createdAt": "2020-07-01T15:05:43Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java", "diffHunk": "@@ -538,28 +539,35 @@ void init(List<LifecycleListener> lifecycleListeners) {\n         }\n     }\n \n-    public synchronized void start() {\n-        if (getConfig(CoreConfiguration.class).getDelayInitMs() > 0) {\n-            startWithDelay();\n+    public synchronized void start(boolean premain) {\n+        long delayInitMs = getConfig(CoreConfiguration.class).getDelayInitMs();\n+        if (shouldDelay()) {\n+            delayInitMs = Math.max(delayInitMs, 5000L);", "originalCommit": "a2ae318da0acbd3a7ec361f112218b3f0672d57f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk2MzYwMw==", "url": "https://github.com/elastic/apm-agent-java/pull/1262#discussion_r448963603", "bodyText": "We are already logging this info in the delay itself. We will be able to see there is no delay_instrumentation configured, so we should be able to know that", "author": "eyalkoren", "createdAt": "2020-07-02T12:26:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyODgyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MDMxMg==", "url": "https://github.com/elastic/apm-agent-java/pull/1262#discussion_r448780312", "bodyText": "Can we end the delay once the platform MBean server is initialized (!MBeanServerFactory.findMBeanServer(null).isEmpty())? In that case, it should be guaranteed that JUL is initialized.", "author": "felixbarny", "createdAt": "2020-07-02T06:40:53Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java", "diffHunk": "@@ -538,28 +539,35 @@ void init(List<LifecycleListener> lifecycleListeners) {\n         }\n     }\n \n-    public synchronized void start() {\n-        if (getConfig(CoreConfiguration.class).getDelayInitMs() > 0) {\n-            startWithDelay();\n+    public synchronized void start(boolean premain) {\n+        long delayInitMs = getConfig(CoreConfiguration.class).getDelayInitMs();\n+        if (premain && shouldDelay()) {\n+            delayInitMs = Math.max(delayInitMs, 5000L);\n+        }\n+        if (delayInitMs > 0) {\n+            startWithDelay(delayInitMs);\n         } else {\n             startSync();\n         }\n     }\n \n-    private synchronized void startWithDelay() {\n+    private boolean shouldDelay() {\n+        return ClassLoader.getSystemClassLoader().getResource(\"org/apache/catalina/startup/Bootstrap.class\") != null;\n+    }\n+\n+    private synchronized void startWithDelay(final long delayInitMs) {\n         ThreadPoolExecutor pool = ExecutorUtils.createSingleThreadDeamonPool(\"tracer-initializer\", 1);\n         pool.submit(new Runnable() {\n             @Override\n             public void run() {\n                 try {\n-                    long delayInitMs = coreConfiguration.getDelayInitMs();\n                     logger.info(\"Delaying initialization of tracer for \" + delayInitMs + \"ms\");", "originalCommit": "8652cdd9a801e5d4fe7748269f6e1fd92ea63bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk2MjkyMQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1262#discussion_r448962921", "bodyText": "You mean poll every 500ms or so? It still doesn't guarantee anything.\nI think we can live with the 5 seconds delay in Tomcat on 1.8 installed via premain", "author": "eyalkoren", "createdAt": "2020-07-02T12:24:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MDMxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyODkyMw==", "url": "https://github.com/elastic/apm-agent-java/pull/1262#discussion_r450028923", "bodyText": "You'd only wait up to 500ms more than necessary vs waiting up to 5s more than necessary and possibly not waiting long enough. We could use the same mechanism for delay_init and the MBean server polling. Both conditions need to be fulfilled to end the delay.\n\nI think we can live with the 5 seconds delay in Tomcat on 1.8 installed via premain\n\nI think so too, just mentioning for completeness", "author": "felixbarny", "createdAt": "2020-07-06T07:20:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MDMxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MDUwNA==", "url": "https://github.com/elastic/apm-agent-java/pull/1262#discussion_r448780504", "bodyText": "Can we do the delay for specific versions of Java, like only 1.8?", "author": "felixbarny", "createdAt": "2020-07-02T06:41:22Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java", "diffHunk": "@@ -538,28 +539,35 @@ void init(List<LifecycleListener> lifecycleListeners) {\n         }\n     }\n \n-    public synchronized void start() {\n-        if (getConfig(CoreConfiguration.class).getDelayInitMs() > 0) {\n-            startWithDelay();\n+    public synchronized void start(boolean premain) {\n+        long delayInitMs = getConfig(CoreConfiguration.class).getDelayInitMs();\n+        if (premain && shouldDelay()) {\n+            delayInitMs = Math.max(delayInitMs, 5000L);\n+        }\n+        if (delayInitMs > 0) {\n+            startWithDelay(delayInitMs);\n         } else {\n             startSync();\n         }\n     }\n \n-    private synchronized void startWithDelay() {\n+    private boolean shouldDelay() {\n+        return ClassLoader.getSystemClassLoader().getResource(\"org/apache/catalina/startup/Bootstrap.class\") != null;", "originalCommit": "8652cdd9a801e5d4fe7748269f6e1fd92ea63bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2985ac1b66390300caece79d8f084c54b743a0dc", "url": "https://github.com/elastic/apm-agent-java/commit/2985ac1b66390300caece79d8f084c54b743a0dc", "message": "Restricting JUL related delay in Tomcat to Java 1.8", "committedDate": "2020-07-02T12:44:07Z", "type": "commit"}]}