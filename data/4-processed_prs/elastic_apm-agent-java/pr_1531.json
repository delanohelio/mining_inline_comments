{"pr_number": 1531, "pr_title": "Fix NPE when async ES client is nested within Hibernate search", "pr_createdAt": "2020-11-24T12:50:38Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1531", "timeline": [{"oid": "f80dd3e74e536b548a255f58456a99231d344ded", "url": "https://github.com/elastic/apm-agent-java/commit/f80dd3e74e536b548a255f58456a99231d344ded", "message": "Fix NPE when async ES client is nested within Hibernate search", "committedDate": "2020-11-24T12:46:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0MDc4NQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1531#discussion_r529540785", "bodyText": "[minor] The best practice would be to return an Object[] instead of using GlobalThreadLocal", "author": "felixbarny", "createdAt": "2020-11-24T13:23:09Z", "path": "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-5_6/src/main/java/co/elastic/apm/agent/es/restclient/v5_6/ElasticsearchClientAsyncInstrumentation.java", "diffHunk": "@@ -79,6 +79,7 @@ public ElasticsearchClientAsyncInstrumentation(ElasticApmTracer tracer) {\n     public static class ElasticsearchRestClientAsyncAdvice {\n         @VisibleForAdvice\n         public static final GlobalThreadLocal<Span> spanTls = GlobalThreadLocal.get(ElasticsearchRestClientAsyncAdvice.class, \"spanTls\");\n+\n         @AssignTo.Argument(5)\n         @Advice.OnMethodEnter(suppress = Throwable.class)\n         public static ResponseListener onBeforeExecute(@Advice.Argument(0) String method,", "originalCommit": "f80dd3e74e536b548a255f58456a99231d344ded", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0NzI2Mw==", "url": "https://github.com/elastic/apm-agent-java/pull/1531#discussion_r529547263", "bodyText": "How would that look like? We would use Object[] as the @Advice.Enter type in the exit advice?\nLet's not do that now, it means either adding allocation for the Object array or complication of reusing such (probably through another GlobalThreadLocal \ud83d\ude42  )", "author": "eyalkoren", "createdAt": "2020-11-24T13:33:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0MDc4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU2MzkzNg==", "url": "https://github.com/elastic/apm-agent-java/pull/1531#discussion_r529563936", "bodyText": "How would that look like? We would use Object[] as the @Advice.Enter type in the exit advice?\n\nExactly.\n\nadding allocation for the Object array\n\nAdding something to a Global/DetachedThreadLocal also allocates a WeakKey when calling WeakConcurrentMap#put. The JIT should be able to easily replace the Object[] allocation with stack allocations once it inlines the indy-dispatched advices.", "author": "felixbarny", "createdAt": "2020-11-24T13:57:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0MDc4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU3NTU4MQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1531#discussion_r529575581", "bodyText": "Adding something to a Global/DetachedThreadLocal also allocates a WeakKey when calling WeakConcurrentMap#put.\n\nThat's right, you only added key caching for lookups!\n\nThe JIT should be able to easily replace the Object[] allocation with stack allocations once it inlines the indy-dispatched advices.\n\nOK, as long as we don't measure through microbenchmarks without sufficient warmup \ud83d\ude1c\nI will change that then", "author": "eyalkoren", "createdAt": "2020-11-24T14:14:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0MDc4NQ=="}], "type": "inlineReview"}, {"oid": "f9701c3afb1065048bcbb4bf1eb7f8e6e59326a8", "url": "https://github.com/elastic/apm-agent-java/commit/f9701c3afb1065048bcbb4bf1eb7f8e6e59326a8", "message": "Adding to CHANGELOG", "committedDate": "2020-11-24T13:48:15Z", "type": "commit"}, {"oid": "50c5751feb31cee98e168bd3b0db801576dd6f3e", "url": "https://github.com/elastic/apm-agent-java/commit/50c5751feb31cee98e168bd3b0db801576dd6f3e", "message": "Applying review suggestion", "committedDate": "2020-11-24T14:43:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYxNTU2NQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1531#discussion_r529615565", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Object[] ret = new Object[2];\n          \n          \n            \n                                ret[0] = span;\n          \n          \n            \n                                ret[1] = helper.<ResponseListener>wrapResponseListener(responseListener, span);\n          \n          \n            \n                                return ret;\n          \n          \n            \n                                return new Object[]{span, helper.<ResponseListener>wrapResponseListener(responseListener, span)};\n          \n      \n    \n    \n  \n\nfeel free to ignore if you like yours better", "author": "felixbarny", "createdAt": "2020-11-24T15:06:14Z", "path": "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-5_6/src/main/java/co/elastic/apm/agent/es/restclient/v5_6/ElasticsearchClientAsyncInstrumentation.java", "diffHunk": "@@ -77,32 +75,37 @@ public ElasticsearchClientAsyncInstrumentation(ElasticApmTracer tracer) {\n \n \n     public static class ElasticsearchRestClientAsyncAdvice {\n-        @VisibleForAdvice\n-        public static final GlobalThreadLocal<Span> spanTls = GlobalThreadLocal.get(ElasticsearchRestClientAsyncAdvice.class, \"spanTls\");\n-        @AssignTo.Argument(5)\n+\n+        @Nullable\n+        @AssignTo.Argument(index = 1, value = 5)\n         @Advice.OnMethodEnter(suppress = Throwable.class)\n-        public static ResponseListener onBeforeExecute(@Advice.Argument(0) String method,\n-                                                       @Advice.Argument(1) String endpoint,\n-                                                       @Advice.Argument(3) @Nullable HttpEntity entity,\n-                                                       @Advice.Argument(5) ResponseListener responseListener) {\n+        public static Object[] onBeforeExecute(@Advice.Argument(0) String method,\n+                                               @Advice.Argument(1) String endpoint,\n+                                               @Advice.Argument(3) @Nullable HttpEntity entity,\n+                                               @Advice.Argument(5) ResponseListener responseListener) {\n \n             ElasticsearchRestClientInstrumentationHelper<HttpEntity, Response, ResponseListener> helper = esClientInstrHelperManager.getForClassLoaderOfClass(Response.class);\n             if (helper != null) {\n                 Span span = helper.createClientSpan(method, endpoint, entity);\n-                spanTls.set(span);\n                 if (span != null) {\n-                    return helper.<ResponseListener>wrapResponseListener(responseListener, span);\n+                    Object[] ret = new Object[2];\n+                    ret[0] = span;\n+                    ret[1] = helper.<ResponseListener>wrapResponseListener(responseListener, span);\n+                    return ret;", "originalCommit": "50c5751feb31cee98e168bd3b0db801576dd6f3e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "788353c5f9ee7f90d53708cab4bf5061b33b55fd", "url": "https://github.com/elastic/apm-agent-java/commit/788353c5f9ee7f90d53708cab4bf5061b33b55fd", "message": "Merge remote-tracking branch 'upstream/master' into fix-npe-es-async-client-instr", "committedDate": "2020-11-25T04:25:11Z", "type": "commit"}]}