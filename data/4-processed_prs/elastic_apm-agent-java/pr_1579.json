{"pr_number": 1579, "pr_title": "Using body buffer only if writing to it is finished", "pr_createdAt": "2020-12-20T17:22:57Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1579", "timeline": [{"oid": "ee5c92a9316fede94619c68cd4ae0d4cd6e742de", "url": "https://github.com/elastic/apm-agent-java/commit/ee5c92a9316fede94619c68cd4ae0d4cd6e742de", "message": "Using body buffer only if writing to it is finished", "committedDate": "2020-12-20T17:20:54Z", "type": "commit"}, {"oid": "5f0d67598dde08576d5ea9b06aaabd63df7e23a4", "url": "https://github.com/elastic/apm-agent-java/commit/5f0d67598dde08576d5ea9b06aaabd63df7e23a4", "message": "Reverting JUnit upgrade", "committedDate": "2020-12-20T19:27:40Z", "type": "commit"}, {"oid": "da1f82125e63eed5bb1dcd935e5c09840082ef58", "url": "https://github.com/elastic/apm-agent-java/commit/da1f82125e63eed5bb1dcd935e5c09840082ef58", "message": "Restoring JUnit upgrade, it is not it :(", "committedDate": "2020-12-21T06:58:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU4NjU0Mg==", "url": "https://github.com/elastic/apm-agent-java/pull/1579#discussion_r546586542", "bodyText": "[question] What about returning a CharSequence for reading and an Appendable for writing instead of the CharBuffer itself ? Encapsulating the CharBuffer seems a good option here as it would prevent any call to .flip() when not expected.\nOne bonus here would be to not having to cast to Object in the test assertions.", "author": "SylvainJuge", "createdAt": "2020-12-21T09:03:35Z", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java", "diffHunk": "@@ -187,9 +191,17 @@ public CharBuffer getBodyBuffer() {\n         }\n     }\n \n+    /**\n+     * Returns the body buffer if it was written to and writing to it was finished through {@link Request#endOfBufferInput()}\n+     * @return body buffer if it was written to and writing was finished; returns {@code null} otherwise.\n+     */\n     @Nullable\n     public CharBuffer getBodyBufferForSerialization() {", "originalCommit": "da1f82125e63eed5bb1dcd935e5c09840082ef58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5Njc2OQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1579#discussion_r546596769", "bodyText": "\ud83d\udc4d  Great suggestion! Will do.", "author": "eyalkoren", "createdAt": "2020-12-21T09:25:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU4NjU0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY1MjA1Ng==", "url": "https://github.com/elastic/apm-agent-java/pull/1579#discussion_r546652056", "bodyText": "The change to Appendable turns out to be trickier as its writing users use it for decoding through IOUtils which relies on basic Java APIs that require CharBuffer, so I will only change getBodyBufferForSerialization for now.", "author": "eyalkoren", "createdAt": "2020-12-21T11:22:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU4NjU0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY3OTM5Mw==", "url": "https://github.com/elastic/apm-agent-java/pull/1579#discussion_r546679393", "bodyText": "\ud83d\udc4d That was also something that made the rabbitmq body capture more complex than initially thought.", "author": "SylvainJuge", "createdAt": "2020-12-21T12:29:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU4NjU0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5MDY4OA==", "url": "https://github.com/elastic/apm-agent-java/pull/1579#discussion_r546590688", "bodyText": "[minor] move comment to assertion description.", "author": "SylvainJuge", "createdAt": "2020-12-21T09:12:41Z", "path": "apm-agent-core/src/test/java/org/example/stacktrace/ErrorCaptureTest.java", "diffHunk": "@@ -82,4 +84,34 @@ public NestedException(Throwable cause) {\n         }\n     }\n \n+    @Test\n+    void testTransactionContextTransfer() {\n+        final Transaction transaction = new Transaction(tracer);\n+        Request transactionRequest = transaction.getContext().getRequest()\n+            .withMethod(\"GET\")\n+            .addHeader(\"key\", \"value\");\n+        transactionRequest.withBodyBuffer().append(\"TEST\");\n+        transactionRequest.endOfBufferInput();\n+        final ErrorCapture errorCapture = new ErrorCapture(tracer).asChildOf(transaction);\n+        Request errorRequest = errorCapture.getContext().getRequest();\n+        assertThat(errorRequest.getMethod()).isEqualTo(\"GET\");\n+        assertThat(errorRequest.getHeaders().get(\"key\")).isEqualTo(\"value\");\n+        assertThat((Object)errorRequest.getBodyBufferForSerialization()).isNotNull();\n+        assertThat(errorRequest.getBodyBufferForSerialization().toString()).isEqualTo(\"TEST\");\n+    }\n+\n+    @Test\n+    void testTransactionContextTransferNonFinishedBody() {\n+        final Transaction transaction = new Transaction(tracer);\n+        Request transactionRequest = transaction.getContext().getRequest()\n+            .withMethod(\"GET\")\n+            .addHeader(\"key\", \"value\");\n+        transactionRequest.withBodyBuffer().append(\"TEST\");\n+        final ErrorCapture errorCapture = new ErrorCapture(tracer).asChildOf(transaction);\n+        Request errorRequest = errorCapture.getContext().getRequest();\n+        assertThat(errorRequest.getMethod()).isEqualTo(\"GET\");\n+        assertThat(errorRequest.getHeaders().get(\"key\")).isEqualTo(\"value\");\n+        // Since body capturing was not finished, we shouldn't copy it to the error capture", "originalCommit": "da1f82125e63eed5bb1dcd935e5c09840082ef58", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2a16d85b7c3286c5aa5b04523158460cfb369af7", "url": "https://github.com/elastic/apm-agent-java/commit/2a16d85b7c3286c5aa5b04523158460cfb369af7", "message": "Apply review suggestions and add to CHANGELOG", "committedDate": "2020-12-21T11:33:39Z", "type": "commit"}, {"oid": "809e49fee48e0b258a9bd7599f899f8be70d7230", "url": "https://github.com/elastic/apm-agent-java/commit/809e49fee48e0b258a9bd7599f899f8be70d7230", "message": "Fix CHANGELOG indentation", "committedDate": "2020-12-21T11:37:52Z", "type": "commit"}, {"oid": "6ebb94e1eef3f484acbfed5ac2df382038b7557b", "url": "https://github.com/elastic/apm-agent-java/commit/6ebb94e1eef3f484acbfed5ac2df382038b7557b", "message": "Merge remote-tracking branch 'upstream/master' into body-buffer-handling", "committedDate": "2020-12-22T05:15:32Z", "type": "commit"}, {"oid": "04473085e71aed2cb9de839000c9d3dae16faf49", "url": "https://github.com/elastic/apm-agent-java/commit/04473085e71aed2cb9de839000c9d3dae16faf49", "message": "Merge remote-tracking branch 'upstream/master' into body-buffer-handling", "committedDate": "2020-12-27T16:17:28Z", "type": "commit"}]}