{"pr_number": 1421, "pr_title": "Enabling disabled_metrics config for Micrometer", "pr_createdAt": "2020-09-29T11:26:29Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1421", "timeline": [{"oid": "fc5519c52e5b506146e5a5713e10ce8b494f6951", "url": "https://github.com/elastic/apm-agent-java/commit/fc5519c52e5b506146e5a5713e10ce8b494f6951", "message": "Enabling disabled_metrics config for Micrometer", "committedDate": "2020-09-29T11:20:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0MTU4MQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1421#discussion_r496641581", "bodyText": "You think it worth caching already encountered metrics, so that we don't match a potentially long list of matchers?", "author": "eyalkoren", "createdAt": "2020-09-29T11:27:20Z", "path": "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java", "diffHunk": "@@ -97,11 +99,21 @@ public void run() {\n     }\n \n     private static class MeterMapConsumer implements Consumer<Meter> {\n+\n+        private final List<WildcardMatcher> disabledMetrics;\n+\n+        public MeterMapConsumer(List<WildcardMatcher> disabledMetrics) {\n+            this.disabledMetrics = disabledMetrics;\n+        }\n+\n         final Map<Meter.Id, Meter> meters = new HashMap<>();\n \n         @Override\n         public void accept(Meter meter) {\n-            meters.put(meter.getId(), meter);\n+            Meter.Id meterId = meter.getId();\n+            if (WildcardMatcher.anyMatch(disabledMetrics, meterId.getName()) == null) {", "originalCommit": "fc5519c52e5b506146e5a5713e10ce8b494f6951", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0ODA1MA==", "url": "https://github.com/elastic/apm-agent-java/pull/1421#discussion_r496648050", "bodyText": "I think compared to the actual serialization of the metrics the matching is not likely to be significant.\nand idea to make it a bit more readable\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (WildcardMatcher.anyMatch(disabledMetrics, meterId.getName()) == null) {\n          \n          \n            \n                        if (WildcardMatcher.isNoneMatch(disabledMetrics, meterId.getName())) {", "author": "felixbarny", "createdAt": "2020-09-29T11:39:47Z", "path": "apm-agent-plugins/apm-micrometer-plugin/src/main/java/co/elastic/apm/agent/micrometer/MicrometerMetricsReporter.java", "diffHunk": "@@ -97,11 +99,21 @@ public void run() {\n     }\n \n     private static class MeterMapConsumer implements Consumer<Meter> {\n+\n+        private final List<WildcardMatcher> disabledMetrics;\n+\n+        public MeterMapConsumer(List<WildcardMatcher> disabledMetrics) {\n+            this.disabledMetrics = disabledMetrics;\n+        }\n+\n         final Map<Meter.Id, Meter> meters = new HashMap<>();\n \n         @Override\n         public void accept(Meter meter) {\n-            meters.put(meter.getId(), meter);\n+            Meter.Id meterId = meter.getId();\n+            if (WildcardMatcher.anyMatch(disabledMetrics, meterId.getName()) == null) {", "originalCommit": "fc5519c52e5b506146e5a5713e10ce8b494f6951", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ec97ac9f12788dd6e9a290a453e7e5b446f12bf0", "url": "https://github.com/elastic/apm-agent-java/commit/ec97ac9f12788dd6e9a290a453e7e5b446f12bf0", "message": "Apply review suggestion and add to CHANGELOG", "committedDate": "2020-09-29T11:49:33Z", "type": "commit"}, {"oid": "265b24c70957720a890c5131fd9478b5b878795b", "url": "https://github.com/elastic/apm-agent-java/commit/265b24c70957720a890c5131fd9478b5b878795b", "message": "Merge remote-tracking branch 'upstream/master' into disable_micrometer_metrics", "committedDate": "2020-09-30T04:21:10Z", "type": "commit"}]}