{"pr_number": 1539, "pr_title": "docs: updates to micrometer docs", "pr_createdAt": "2020-11-25T21:14:30Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1539", "timeline": [{"oid": "9e04c426a261935a2bf397d7a342a66d9d91dfed", "url": "https://github.com/elastic/apm-agent-java/commit/9e04c426a261935a2bf397d7a342a66d9d91dfed", "message": "docs: updates to micrometer docs", "committedDate": "2020-11-25T21:11:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4ODg4Mw==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r531088883", "bodyText": "I didn't see the Spring Boot section when I used these docs to setup my micrometer integration.\nDid we consider solutions to make it easy for developers using Spring Boot to find our dedicated doc. As Spring Boot is very popular, we may even consider moving this section before the \"Do It Yourself\" section.", "author": "cyrille-leclerc", "createdAt": "2020-11-26T15:06:31Z", "path": "docs/metrics.asciidoc", "diffHunk": "@@ -397,16 +440,16 @@ MeterRegistry registry = new SimpleMeterRegistry(new SimpleConfig() {\n             return null;\n         }\n     }, Clock.SYSTEM);\n-\n-```\n+----\n \n When using Spring Boot, you can use the `management.metrics.export.simple` prefix to configure via `application.properties`", "originalCommit": "9e04c426a261935a2bf397d7a342a66d9d91dfed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTEwNjgxMg==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625106812", "bodyText": "Let's add a separate section for Spring Boot and add a table of contents to the top of the page.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            When using Spring Boot, you can use the `management.metrics.export.simple` prefix to configure via `application.properties`\n          \n          \n            \n            ==== Get started with Spring Boot\n          \n          \n            \n            \n          \n          \n            \n            The easiest way to get started with Spring Boot is to add a dependency to [Spring Boot Actuator](https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html) if you haven't already. Spring Boot Actuator provides dependency management and auto-configuration for Micrometer.\n          \n          \n            \n            \n          \n          \n            \n            Use the `management.metrics.export.simple` prefix to configure via `application.properties`", "author": "felixbarny", "createdAt": "2021-05-03T14:01:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4ODg4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA5MDk5Mw==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r531090993", "bodyText": "It's not completely accurate that Histograms are not supported. Histograms are partially supported creating two counters that already enable insightful information: a sum counter (xxx.sum) and a count counter (xxx.count).\nInstead of the explanation \"Histograms aren\u2019t supported yet\", an explanation that would look like\n\nHistograms (DistributionSummary, Timerand LongTaskTimer) are partially supported converting the histogram metric into two derived metric: a counter of the values and the sum of the values.\nFor example, DistributionSummary.builder(\"order\").register(...).record(orderPrice) will create two metrics: order.sumand order.count.\n\nTODO: we should verify that Timer and LongTaskTimer behave the same way as DistributionSummary creating these two derived metrics.\nSee #1515", "author": "cyrille-leclerc", "createdAt": "2020-11-26T15:10:01Z", "path": "docs/metrics.asciidoc", "diffHunk": "@@ -333,12 +334,13 @@ The reason for that is that if you set your sampling rate to 10%, for example,\n you'll only be storing one out of 10 requests.\n The labels you set on non-sampled transactions will be lost.\n \n-\n [float]\n [[metrics-micrometer-beta-caveats]]\n-==== Beta caveats\n-* To fix some of the caveats listed here, we may have to introduce breaking changes.\n-  So please watch release notes Micrometer-related changes before updating.\n+==== Caveats\n+\n+To fix some of the caveats listed here, we may have to introduce breaking changes.\n+Please look for Micrometer-related release notes before updating.\n+\n * Metrics with dots in their name can result in mapping conflicts.\n See https://github.com/elastic/apm/issues/347[elastic/apm#347]\n * Histograms aren't supported yet", "originalCommit": "9e04c426a261935a2bf397d7a342a66d9d91dfed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "739a7d7647a8dc64ff9e4ae730266669c58ef0c5", "url": "https://github.com/elastic/apm-agent-java/commit/739a7d7647a8dc64ff9e4ae730266669c58ef0c5", "message": "Merge branch 'master' of https://github.com/elastic/apm-agent-java into micrometer-docs", "committedDate": "2021-03-30T17:14:50Z", "type": "commit"}, {"oid": "481e844288ac7d2055daea28a76f329601b36b5a", "url": "https://github.com/elastic/apm-agent-java/commit/481e844288ac7d2055daea28a76f329601b36b5a", "message": "docs: incorporate feedback", "committedDate": "2021-03-31T17:31:47Z", "type": "commit"}, {"oid": "509ce4c463010d72376903d30ed167b6f6a50ee7", "url": "https://github.com/elastic/apm-agent-java/commit/509ce4c463010d72376903d30ed167b6f6a50ee7", "message": "Merge branch 'master' into micrometer-docs", "committedDate": "2021-03-31T17:32:14Z", "type": "commit"}, {"oid": "393533c2ccde03070a18c1ad2556e02e20be4bf9", "url": "https://github.com/elastic/apm-agent-java/commit/393533c2ccde03070a18c1ad2556e02e20be4bf9", "message": "Merge branch 'master' into micrometer-docs", "committedDate": "2021-04-01T16:09:24Z", "type": "commit"}, {"oid": "48ce4e790b587b06e6c74bc7274a59c13c42c377", "url": "https://github.com/elastic/apm-agent-java/commit/48ce4e790b587b06e6c74bc7274a59c13c42c377", "message": "Merge branch 'master' into micrometer-docs", "committedDate": "2021-04-06T15:26:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDk0NjQxMg==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r624946412", "bodyText": "Is this a placeholder for something? (preview is not accessible)", "author": "eyalkoren", "createdAt": "2021-05-03T08:27:25Z", "path": "docs/metrics.asciidoc", "diffHunk": "@@ -313,9 +313,10 @@ You can filter and group by these dimensions:\n --\n \n \n-[float]\n [[metrics-micrometer]]\n-=== Custom metrics using Micrometer (beta)\n+=== Micrometer metrics\n+\n+beta::[]", "originalCommit": "48ce4e790b587b06e6c74bc7274a59c13c42c377", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTg5NjQ0Ng==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625896446", "bodyText": "The beta::[] tag builds a beta admonition paragraph:", "author": "bmorelli25", "createdAt": "2021-05-04T15:46:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDk0NjQxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTkxNTA5NQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625915095", "bodyText": "Should be available now: https://apm-agent-java_1539.docs-preview.app.elstc.co/guide/en/apm/agent/java/master/metrics-micrometer.html", "author": "bmorelli25", "createdAt": "2021-05-04T16:10:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDk0NjQxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDk0Njg4NA==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r624946884", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For example, `DistributionSummary.builder(\"order\").register(...).record(orderPrice)`` will create two metrics: `order.sum` and `order.count`.\n          \n          \n            \n            For example, `DistributionSummary.builder(\"order\").register(...).record(orderPrice)` will create two metrics: `order.sum` and `order.count`.", "author": "eyalkoren", "createdAt": "2021-05-03T08:28:20Z", "path": "docs/metrics.asciidoc", "diffHunk": "@@ -334,15 +335,20 @@ The reason for that is that if you set your sampling rate to 10%, for example,\n you'll only be storing one out of 10 requests.\n The labels you set on non-sampled transactions will be lost.\n \n-\n [float]\n [[metrics-micrometer-beta-caveats]]\n-==== Beta caveats\n-* To fix some of the caveats listed here, we may have to introduce breaking changes.\n-  So please watch release notes Micrometer-related changes before updating.\n+==== Caveats\n+\n+To fix some of the caveats listed here, we may have to introduce breaking changes.\n+Please look for Micrometer-related release notes before updating.\n+\n * Metrics with dots in their name can result in mapping conflicts.\n See https://github.com/elastic/apm/issues/347[elastic/apm#347]\n-* Histograms aren't supported yet\n+* Histograms(https://www.javadoc.io/doc/io.micrometer/micrometer-core/latest/io/micrometer/core/instrument/DistributionSummary.html[DistributionSummary],\n+https://www.javadoc.io/doc/io.micrometer/micrometer-core/latest/io/micrometer/core/instrument/Timer.html[Timer],\n+and https://www.javadoc.io/doc/io.micrometer/micrometer-core/latest/io/micrometer/core/instrument/LongTaskTimer.html[LongTaskTimer])\n+are partially supported converting the histogram metric into two derived metric: a counter of the values and the sum of the values.\n+For example, `DistributionSummary.builder(\"order\").register(...).record(orderPrice)`` will create two metrics: `order.sum` and `order.count`.", "originalCommit": "48ce4e790b587b06e6c74bc7274a59c13c42c377", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDk0NzI4NA==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r624947284", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Metrics with dots in their name can result in mapping conflicts.\n          \n          \n            \n            See https://github.com/elastic/apm/issues/347[elastic/apm#347]\n          \n          \n            \n            * Metrics with dots in their name will be renamed with underscores instead of dots", "author": "eyalkoren", "createdAt": "2021-05-03T08:29:13Z", "path": "docs/metrics.asciidoc", "diffHunk": "@@ -334,15 +335,20 @@ The reason for that is that if you set your sampling rate to 10%, for example,\n you'll only be storing one out of 10 requests.\n The labels you set on non-sampled transactions will be lost.\n \n-\n [float]\n [[metrics-micrometer-beta-caveats]]\n-==== Beta caveats\n-* To fix some of the caveats listed here, we may have to introduce breaking changes.\n-  So please watch release notes Micrometer-related changes before updating.\n+==== Caveats\n+\n+To fix some of the caveats listed here, we may have to introduce breaking changes.\n+Please look for Micrometer-related release notes before updating.\n+\n * Metrics with dots in their name can result in mapping conflicts.\n See https://github.com/elastic/apm/issues/347[elastic/apm#347]", "originalCommit": "48ce4e790b587b06e6c74bc7274a59c13c42c377", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTA5MDE5NQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625090195", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Metrics with dots in their name can result in mapping conflicts.\n          \n          \n            \n            See https://github.com/elastic/apm/issues/347[elastic/apm#347]\n          \n          \n            \n            * Dots in metric names of Micrometer metrics get replaced with underscores to avoid mapping conflicts.\n          \n          \n            \n            De-dotting can be disabled via <<config-dedot-custom-metrics, `dedot_custom_metrics`>>.", "author": "felixbarny", "createdAt": "2021-05-03T13:36:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDk0NzI4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTExNjk4MA==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625116980", "bodyText": "Much better \ud83d\ude42", "author": "eyalkoren", "createdAt": "2021-05-03T14:16:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDk0NzI4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDk4MjE1NA==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r624982154", "bodyText": "Looks like a duplication, however the \"Get started with existing Micrometer setup\" title is better, so you can use if for the section you leave in.", "author": "eyalkoren", "createdAt": "2021-05-03T09:43:57Z", "path": "docs/metrics.asciidoc", "diffHunk": "@@ -352,6 +358,47 @@ See https://github.com/elastic/apm-agent-java/issues/1476[#1476]\n   But you have to remember to group by a combination of dimensions that uniquely identify the time series.\n   This may be a combination of `host.name` and `service.name`, or the `kubernetes.pod.id`.\n \n+[float]\n+[[micrometer-get-started]]\n+==== Get started with Micrometer\n+\n+Attach the agent and you\u2019re done!\n+The agent automatically detects all `MeterRegistry` instances and reports all metrics to APM Server (in addition to where they originally report).\n+When attaching the agent after the application has already started, the agent detects a `MeterRegistry` when calling any public method on it.\n+If you are using multiple registries within a `CompoundMeterRegistry`, the agent only reports the metrics once.\n+\n+[float]\n+[[verify-micrometer-data]]\n+==== Verify micrometer data\n+\n+Use Discover to validate that metrics are successfully reported to Kibana.\n+\n+. Launch {kib}.\n+. Open the main menu, then click *Discover*.\n+. Select `apm-*` as your index pattern.\n+. Filter the data to only show documents with metrics: `processor.name :\"metric\"`\n+. Optionally, apply additional filters by service or host names if micrometer was only instrumented on a subset of your environment.\n+\n+You should now see documents containing both metrics collected by the APM agent and custom metrics from micrometer.\n+Narrow your search with a known micrometer metric field.\n+For example, if you know `cache.puts` is a micrometer field, add `cache.puts: *` to your search to return only micrometer metrics documents:\n+\n+[float]\n+[[visualize-micrometer-data]]\n+==== Visualize micrometer data\n+\n+NOTE: Monotonically increased counters and Positive rate aggregations are not fully supported in the current version.\n+\n+{kib-ref}/tsvb.html[TSVB] is the recommended visualization for micrometer metrics.\n+First, make sure to select right aggregation. The most common options are:\n+\n+* Sum: Useful for business metrics\n+* Average: Usually used for performance related metrics\n+\n+It's a common task to group metrics by attributes, including micrometer labels or attributes already collected by APM agents. This could be service versions, runtime versions, or even cloud metadata.\n+\n+TIP: See the https://www.elastic.co/blog/visualizing-observability-with-kibana-event-rates-and-rate-of-change-in-tsvb[Event rates and rate of change in TSVB] blog post for more information.\n+\n [float]\n [[metrics-micrometer-get-started-existing]]", "originalCommit": "48ce4e790b587b06e6c74bc7274a59c13c42c377", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTkxMjQzMw==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625912433", "bodyText": "Done \u2705", "author": "bmorelli25", "createdAt": "2021-05-04T16:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDk4MjE1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTkxNTMwNg==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625915306", "bodyText": "\u2705", "author": "bmorelli25", "createdAt": "2021-05-04T16:10:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNDk4MjE1NA=="}], "type": "inlineReview"}, {"oid": "f994536e51f1617b5e7247549ecf26ffc4743536", "url": "https://github.com/elastic/apm-agent-java/commit/f994536e51f1617b5e7247549ecf26ffc4743536", "message": "Merge branch 'master' into micrometer-docs", "committedDate": "2021-05-03T09:46:22Z", "type": "commit"}, {"oid": "6c508e18632e9973acc939aaebc07cbb7171fbf5", "url": "https://github.com/elastic/apm-agent-java/commit/6c508e18632e9973acc939aaebc07cbb7171fbf5", "message": "Merge branch 'master' into micrometer-docs", "committedDate": "2021-05-03T13:30:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTA5MjQ1MQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625092451", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For example, if you know `cache.puts` is a micrometer field, add `cache.puts: *` to your search to return only micrometer metrics documents:\n          \n          \n            \n            For example, if you know you have registered the metric name `cache.puts` in the micrometer `MeterRegistry`, add `cache_puts: *` (dots are replaced with underscores) to your search to return only micrometer metrics documents:", "author": "felixbarny", "createdAt": "2021-05-03T13:39:51Z", "path": "docs/metrics.asciidoc", "diffHunk": "@@ -352,6 +358,47 @@ See https://github.com/elastic/apm-agent-java/issues/1476[#1476]\n   But you have to remember to group by a combination of dimensions that uniquely identify the time series.\n   This may be a combination of `host.name` and `service.name`, or the `kubernetes.pod.id`.\n \n+[float]\n+[[micrometer-get-started]]\n+==== Get started with Micrometer\n+\n+Attach the agent and you\u2019re done!\n+The agent automatically detects all `MeterRegistry` instances and reports all metrics to APM Server (in addition to where they originally report).\n+When attaching the agent after the application has already started, the agent detects a `MeterRegistry` when calling any public method on it.\n+If you are using multiple registries within a `CompoundMeterRegistry`, the agent only reports the metrics once.\n+\n+[float]\n+[[verify-micrometer-data]]\n+==== Verify micrometer data\n+\n+Use Discover to validate that metrics are successfully reported to Kibana.\n+\n+. Launch {kib}.\n+. Open the main menu, then click *Discover*.\n+. Select `apm-*` as your index pattern.\n+. Filter the data to only show documents with metrics: `processor.name :\"metric\"`\n+. Optionally, apply additional filters by service or host names if micrometer was only instrumented on a subset of your environment.\n+\n+You should now see documents containing both metrics collected by the APM agent and custom metrics from micrometer.\n+Narrow your search with a known micrometer metric field.\n+For example, if you know `cache.puts` is a micrometer field, add `cache.puts: *` to your search to return only micrometer metrics documents:", "originalCommit": "6c508e18632e9973acc939aaebc07cbb7171fbf5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTA5NDExNg==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625094116", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It's a common task to group metrics by attributes, including micrometer labels or attributes already collected by APM agents. This could be service versions, runtime versions, or even cloud metadata.\n          \n          \n            \n            It's common to group metrics by attributes, including micrometer labels or attributes already collected by APM agents. This could be service versions, runtime versions, or even cloud metadata.", "author": "felixbarny", "createdAt": "2021-05-03T13:42:18Z", "path": "docs/metrics.asciidoc", "diffHunk": "@@ -352,6 +358,47 @@ See https://github.com/elastic/apm-agent-java/issues/1476[#1476]\n   But you have to remember to group by a combination of dimensions that uniquely identify the time series.\n   This may be a combination of `host.name` and `service.name`, or the `kubernetes.pod.id`.\n \n+[float]\n+[[micrometer-get-started]]\n+==== Get started with Micrometer\n+\n+Attach the agent and you\u2019re done!\n+The agent automatically detects all `MeterRegistry` instances and reports all metrics to APM Server (in addition to where they originally report).\n+When attaching the agent after the application has already started, the agent detects a `MeterRegistry` when calling any public method on it.\n+If you are using multiple registries within a `CompoundMeterRegistry`, the agent only reports the metrics once.\n+\n+[float]\n+[[verify-micrometer-data]]\n+==== Verify micrometer data\n+\n+Use Discover to validate that metrics are successfully reported to Kibana.\n+\n+. Launch {kib}.\n+. Open the main menu, then click *Discover*.\n+. Select `apm-*` as your index pattern.\n+. Filter the data to only show documents with metrics: `processor.name :\"metric\"`\n+. Optionally, apply additional filters by service or host names if micrometer was only instrumented on a subset of your environment.\n+\n+You should now see documents containing both metrics collected by the APM agent and custom metrics from micrometer.\n+Narrow your search with a known micrometer metric field.\n+For example, if you know `cache.puts` is a micrometer field, add `cache.puts: *` to your search to return only micrometer metrics documents:\n+\n+[float]\n+[[visualize-micrometer-data]]\n+==== Visualize micrometer data\n+\n+NOTE: Monotonically increased counters and Positive rate aggregations are not fully supported in the current version.\n+\n+{kib-ref}/tsvb.html[TSVB] is the recommended visualization for micrometer metrics.\n+First, make sure to select right aggregation. The most common options are:\n+\n+* Sum: Useful for business metrics\n+* Average: Usually used for performance related metrics\n+\n+It's a common task to group metrics by attributes, including micrometer labels or attributes already collected by APM agents. This could be service versions, runtime versions, or even cloud metadata.", "originalCommit": "6c508e18632e9973acc939aaebc07cbb7171fbf5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTEyMjY1MQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625122651", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [[micrometer-get-started]]\n          \n          \n            \n            ==== Get started with Micrometer\n          \n          \n            \n            [[metrics-micrometer-get-started-existing]]\n          \n          \n            \n            ==== Get started with existing Micrometer setup", "author": "eyalkoren", "createdAt": "2021-05-03T14:24:12Z", "path": "docs/metrics.asciidoc", "diffHunk": "@@ -352,6 +358,47 @@ See https://github.com/elastic/apm-agent-java/issues/1476[#1476]\n   But you have to remember to group by a combination of dimensions that uniquely identify the time series.\n   This may be a combination of `host.name` and `service.name`, or the `kubernetes.pod.id`.\n \n+[float]\n+[[micrometer-get-started]]\n+==== Get started with Micrometer", "originalCommit": "6c508e18632e9973acc939aaebc07cbb7171fbf5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTEyMjkwNw==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625122907", "bodyText": "Assuming that the duplicated one is removed from below", "author": "eyalkoren", "createdAt": "2021-05-03T14:24:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTEyMjY1MQ=="}], "type": "inlineReview"}, {"oid": "3ae0c0cde63154881ce63a9e32bb406c14214109", "url": "https://github.com/elastic/apm-agent-java/commit/3ae0c0cde63154881ce63a9e32bb406c14214109", "message": "Apply suggestions from code review\n\nCo-authored-by: Felix Barnsteiner <felixbarny@users.noreply.github.com>\nCo-authored-by: eyalkoren <41850454+eyalkoren@users.noreply.github.com>", "committedDate": "2021-05-04T15:47:22Z", "type": "commit"}, {"oid": "4b935bedcd2c027c6198f8da653976e27fcd0e67", "url": "https://github.com/elastic/apm-agent-java/commit/4b935bedcd2c027c6198f8da653976e27fcd0e67", "message": "Merge branch 'master' into micrometer-docs", "committedDate": "2021-05-04T15:48:21Z", "type": "commit"}, {"oid": "041751192a69897e21e753a1505d051bb5a3572a", "url": "https://github.com/elastic/apm-agent-java/commit/041751192a69897e21e753a1505d051bb5a3572a", "message": "docs: more cleanup", "committedDate": "2021-05-04T16:03:52Z", "type": "commit"}, {"oid": "0dc2044ef8493733a75b5f5656b9fba8e03f7221", "url": "https://github.com/elastic/apm-agent-java/commit/0dc2044ef8493733a75b5f5656b9fba8e03f7221", "message": "docs: change jump table order", "committedDate": "2021-05-04T16:04:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNTkxNjU2NA==", "url": "https://github.com/elastic/apm-agent-java/pull/1539#discussion_r625916564", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {kib-ref}/tsvb.html[TSVB] is the recommended visualization for Micrometer metrics.\n          \n          \n            \n            {kibana-ref}/tsvb.html[TSVB] is the recommended visualization for Micrometer metrics.", "author": "bmorelli25", "createdAt": "2021-05-04T16:12:18Z", "path": "docs/metrics.asciidoc", "diffHunk": "@@ -356,28 +375,60 @@ See https://github.com/elastic/apm-agent-java/issues/1476[#1476]\n [[metrics-micrometer-get-started-existing]]\n ==== Get started with existing Micrometer setup\n \n-You only have to attach the agent, and you're done.\n-The agent automatically detects all `MeterRegistry` instances and reports all metrics to APM Server in addition to where they originally report.\n-When attaching the agent after the application has already started,\n-the agent detects a `MeterRegistry` when calling any public method on it.\n-If you are using multiple registries within a `CompoundMeterRegistry`,\n-the agent makes sure to only report the metrics once.\n+Attach the agent, and you\u2019re done!\n+The agent automatically detects all `MeterRegistry` instances and reports all metrics to APM Server (in addition to where they originally report).\n+When attaching the agent after the application has already started, the agent detects a `MeterRegistry` when calling any public method on it.\n+If you are using multiple registries within a `CompoundMeterRegistry`, the agent only reports the metrics once.\n+\n+[float]\n+[[verify-micrometer-data]]\n+==== Verify Micrometer data\n+\n+Use Discover to validate that metrics are successfully reported to Kibana.\n+\n+. Launch {kib}.\n+. Open the main menu, then click *Discover*.\n+. Select `apm-*` as your index pattern.\n+. Filter the data to only show documents with metrics: `processor.name :\"metric\"`\n+. Optionally, apply additional filters by service or host names if Micrometer was only instrumented on a subset of your environment.\n+\n+You should now see documents containing both metrics collected by the APM agent and custom metrics from Micrometer.\n+Narrow your search with a known Micrometer metric field.\n+For example, if you know you have registered the metric name `cache.puts` in the Micrometer `MeterRegistry`, add `cache_puts: *` (dots are replaced with underscores) to your search to return only Micrometer metrics documents:\n+\n+[float]\n+[[visualize-micrometer-data]]\n+==== Visualize Micrometer data\n+\n+NOTE: Monotonically increased counters and Positive rate aggregations are not fully supported in the current version.\n+\n+{kib-ref}/tsvb.html[TSVB] is the recommended visualization for Micrometer metrics.", "originalCommit": "0dc2044ef8493733a75b5f5656b9fba8e03f7221", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7ae45ee6223f0a7691c669282eb7ac645bd8bf3d", "url": "https://github.com/elastic/apm-agent-java/commit/7ae45ee6223f0a7691c669282eb7ac645bd8bf3d", "message": "Update docs/metrics.asciidoc", "committedDate": "2021-05-04T16:12:22Z", "type": "commit"}, {"oid": "24fd12011e6355e2de5816fb3c7329537d9c2312", "url": "https://github.com/elastic/apm-agent-java/commit/24fd12011e6355e2de5816fb3c7329537d9c2312", "message": "Merge branch 'master' into micrometer-docs", "committedDate": "2021-05-05T12:04:27Z", "type": "commit"}, {"oid": "57cccf53ee550251704bc492a2743ca8d5263498", "url": "https://github.com/elastic/apm-agent-java/commit/57cccf53ee550251704bc492a2743ca8d5263498", "message": "Update metrics.asciidoc", "committedDate": "2021-05-05T12:14:29Z", "type": "commit"}]}